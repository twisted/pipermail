<tt>
&lt;DIV&gt;I've&nbsp;been&nbsp;working&nbsp;on&nbsp;integrating&nbsp;Compstrm&nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;(&nbsp;&lt;A&nbsp;href=&quot;http://compstrm.sourceforge.net&quot;&gt;http://compstrm.sourceforge.net&lt;/A&gt;&amp;nbsp;)&nbsp;and,&nbsp;while&nbsp;integration&nbsp;was&nbsp;pretty&nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;easy,&nbsp;it&nbsp;got&nbsp;harder&nbsp;when&nbsp;I&nbsp;wanted&nbsp;to&nbsp;speed&nbsp;things&nbsp;up.&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;Basicly,&nbsp;compstrm&nbsp;uses&nbsp;yields&nbsp;to&nbsp;impliment&nbsp;a&nbsp;kind&nbsp;of&nbsp;light-weight&nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;threads.&nbsp;So&nbsp;I&nbsp;needed&nbsp;to&nbsp;add&nbsp;background&nbsp;processing&nbsp;to&nbsp;the&nbsp;main&nbsp;reactor&nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;loop.&nbsp;Here's&nbsp;the&nbsp;code&nbsp;I&nbsp;finally&nbsp;came&nbsp;up&nbsp;with:&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;/DIV&gt;<br>
&lt;DIV&gt;def&nbsp;_runUntilCurrentNew():&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;reactor.poll:&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;p=reactor.poll&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.poll=None&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;p()&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;_runUntilCurrentOld()&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;_runUntilCurrentOld=reactor.runUntilCurrent&lt;BR&gt;reactor.runUntilCurrent=_runUntilCurrentNew&lt;/DIV&gt;<br>
&lt;DIV&gt;&lt;BR&gt;reactor.poll=None&lt;/DIV&gt;<br>
&lt;DIV&gt;def&nbsp;_timeoutNew():&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;reactor.poll:&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;0&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;_timeoutOld&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;_timeoutOld=reactor.timeout&lt;BR&gt;reactor.timeout=_timeoutNew&lt;BR&gt;&lt;/DIV&gt;<br>
&lt;DIV&gt;Just&nbsp;using&nbsp;reactor.callLater,&nbsp;I&nbsp;could&nbsp;only&nbsp;get&nbsp;a&nbsp;speed&nbsp;of&nbsp;90,&nbsp;in&nbsp;contrast&nbsp;to&nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;the&nbsp;asyncore&nbsp;integration&nbsp;which&nbsp;was&nbsp;doing&nbsp;better&nbsp;than&nbsp;12,000.&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;By&nbsp;replacing&nbsp;runUntilCurrent&nbsp;and&nbsp;timeout,&nbsp;I&nbsp;managed&nbsp;to&nbsp;bump&nbsp;my&nbsp;speed&nbsp;up&nbsp;to&nbsp;better&nbsp;than&nbsp;8,000,&nbsp;which&nbsp;seems&nbsp;reasonable,&nbsp;as&nbsp;Twisted&nbsp;is&nbsp;a&nbsp;bit&nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;more&nbsp;&quot;heavy&nbsp;weight&quot;&nbsp;than&nbsp;asyncore.&nbsp;;-)&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;While&nbsp;I'm&nbsp;at&nbsp;it,&nbsp;here's&nbsp;my&nbsp;revised&nbsp;takedown&nbsp;code:&lt;/DIV&gt;<br>
&lt;DIV&gt;&lt;BR&gt;class&nbsp;whenNoDelayedCalls:&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&quot;I&nbsp;check&nbsp;for&nbsp;when&nbsp;there&nbsp;are&nbsp;no&nbsp;delayed&nbsp;calls.&quot;&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,granularity=1.0,func=reactor.stop):&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.func=func&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.granularity=granularity&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.callLater(granularity,self)&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__call__(self):&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;c=len(reactor.getDelayedCalls())&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;c&nbsp;or&nbsp;reactor.poll:&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.callLater(self.granularity,self)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.func()&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;<br>
&lt;DIV&gt;def&nbsp;pollLoop(granularity=1.0,func=reactor.stop):&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&quot;I&nbsp;run&nbsp;the&nbsp;reactor&nbsp;until&nbsp;there&nbsp;are&nbsp;no&nbsp;more&nbsp;delayed&nbsp;calls.&quot;&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;whenNoDelayedCalls(granularity,func)&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.run()&lt;BR&gt;&lt;/DIV&gt;<br>
&lt;DIV&gt;This&nbsp;gives&nbsp;me&nbsp;an&nbsp;approximate&nbsp;equivalent&nbsp;to&nbsp;the&nbsp;asyncore&nbsp;poll&nbsp;loop,&lt;/DIV&gt;<br>
&lt;DIV&gt;at&nbsp;least&nbsp;when&nbsp;there's&nbsp;no&nbsp;threads&nbsp;or&nbsp;sockets&nbsp;running.&nbsp;;-)&lt;/DIV&gt;<br>
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;BR&gt;&lt;BR&gt;Bill&nbsp;la&nbsp;Forge&lt;br&gt;http://www.geocities.com/laforge49/&lt;p&gt;&lt;font&nbsp;face=arial&nbsp;size=-1&gt;<br>
&lt;a&nbsp;href=&quot;http://in.rd.yahoo.com/specials/mailtg/*http://yahoo.shaadi.com/india-matrimony/&quot;&nbsp;target=&quot;_blank&quot;&gt;<br>
&lt;b&gt;Yahoo!&nbsp;India&nbsp;Matrimony&lt;/a&gt;:&lt;/b&gt;&nbsp;Find&nbsp;your&nbsp;partner&nbsp;<br>
&lt;a&nbsp;href=&quot;http://in.rd.yahoo.com/specials/mailtg2/*http://yahoo.shaadi.com/india-matrimony/community.php&quot;&nbsp;target=&quot;_blank&quot;&gt;online&lt;/a&gt;.&lt;/font&gt;
</tt>
