#!/usr/bin/env python

import wx
from wx import xrc
from wx.html import HtmlWindow

from OpenSSL import SSL
from twisted.internet import wxreactor
wxreactor.install()
from twisted.internet.protocol import ClientFactory
from twisted.protocols.basic import LineReceiver
from twisted.internet import ssl, reactor

GUI_HTML = "htmChat"
GUI_FRAME = "frmMain"
GUI_PANEL = "pnlMain"
GUI_FILE = "gui.xrc"
GUI_BTN_SEND = "btnSend"
GUI_MESSAGE = "txtMessage"
GUI_STATUS = "stsStatus"
GUI_MNU_CONNECT = 1
GUI_MNU_DISCONNECT = 2
GUI_MNU_EXIT = 3

class MyApp(wx.App):
    factory = None
    
    def OnInit(self):
        self.res = xrc.XmlResource(GUI_FILE) 
        self.frame = self.res.LoadFrame(None, GUI_FRAME) 
        self.panel = xrc.XRCCTRL(self.frame, GUI_PANEL) 
        self.message = xrc.XRCCTRL(self.panel, GUI_MESSAGE) 
        self.html = xrc.XRCCTRL(self.panel, GUI_HTML)
        self.html.parent = self
        self.send = xrc.XRCCTRL(self.panel, GUI_BTN_SEND)
        self.status = xrc.XRCCTRL(self.frame, GUI_STATUS)
        self.frame.Show(1) 
        self.InitMenu() 
        return True
    
    def InitMenu(self):
        wx.EVT_BUTTON(self, xrc.XRCID(GUI_BTN_SEND), self.OnSendClicked)
        wx.EVT_MENU(self, GUI_MNU_CONNECT, self.OnConnectSelect)
        wx.EVT_MENU(self, GUI_MNU_DISCONNECT, self.OnDisconnectSelect)
        wx.EVT_MENU(self, GUI_MNU_EXIT, self.OnExitSelect)

    def OnConnectSelect(self, event):
        self.status.SetStatusText("Connect Clicked", 0)
        
    def OnDisconnectSelect(self, event):
        self.status.SetStatusText("Disconnect Clicked", 0)
        #self.protocol.transport.loseConnection()        
        
    def OnExitSelect(self, event):
        self.status.SetStatusText("Exit Clicked", 0)
        reactor.stop()

    def OnSendClicked(self, event):
        self.message.SetValue("")
        #self.factory.sendLine(self.message.GetValue())
        print self.factory.protocol.sendLine("yo")
        
class HTMLChat(HtmlWindow):
    def __init__(self):
        pre = wx.html.PreHtmlWindow()
        self.PostCreate(pre)
        
    def OnLinkClicked(self, link):
        pass
        #self.parent.status.SetStatusText(link.Href, 0)
        
class ForemClient(LineReceiver):
    def connectionMade(self):
        #self.factory.app.status.SetStatusText("Connected.", 0)
        pass

    def connectionLost(self, reason):
        #self.factory.app.status.SetStatusText("Disconnected.", 0)
        pass
        
    def lineReceived(self, line):        
        #self.factory.html.AppendToPage(line)
        #x,y = self.factory.html.GetVirtualSize()        
        #self.factory.app.html.Scroll(x,y)        
        pass
    
class ForemClientFactory(ClientFactory):
    protocol = ForemClient

    def clientConnectionFailed(self, connector, reason):
        #self.app.status.SetStatusText(reason.getErrorMessage(), 0)
        reactor.stop()

    def clientConnectionLost(self, connector, reason):
        #self.app.status.SetStatusText(reason.getErrorMessage(), 0)
        reactor.stop()        
        
def main(): 
    app = MyApp(0)
    reactor.registerWxApp(app)
    factory = ForemClientFactory()
    reactor.connectSSL('localhost', 1025, factory, ssl.ClientContextFactory())
    app.factory = factory
    reactor.run()
    #app.MainLoop()
    
if __name__ == '__main__': 
    main()