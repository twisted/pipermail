from twisted.web import resource
from twisted.internet.app import Application
from twisted.web import server


class Producer:

    s = "0123456789" * 1024 #10 kilobytes
    maxWrites = 1000
    numWrites = 0
    
    def __init__(self, request):
        self.request = request
        request.registerProducer(self, 0)
    
    def resumeProducing(self):
        r = self.request
        r.write(self.s)
        self.numWrites += 1
        if self.numWrites == self.maxWrites:
            r.unregisterProducer()
            r.finish()
            del self.request

    def pauseProducing(self):
        pass

    def stopProducing(self):
        pass


class Empty(resource.Resource):
    
    isLeaf = 1
    
    def render(self, request):
        p = Producer(request)
        return server.NOT_DONE_YET


application = Application("empty")
r = Empty() # or some other subclass of web.resource.Resource
application.listenTCP(8080, server.Site(r))

if __name__ == '__main__':
    application.run(0) # make the tap - use app.run(0) if you just want to run it
