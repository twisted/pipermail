<tt>
I&amp;#39;ve&nbsp;got&nbsp;a&nbsp;Twisted&nbsp;Conch/SSH&nbsp;script&nbsp;that&nbsp;I&nbsp;inherited&nbsp;which&nbsp;I&amp;#39;m&nbsp;using&nbsp;to<br>
run&nbsp;commands&nbsp;remotely&nbsp;on&nbsp;some&nbsp;servers.&amp;nbsp;&nbsp;I&amp;#39;d&nbsp;like&nbsp;to&nbsp;add&nbsp;a&nbsp;timeout&nbsp;for<br>
servers&nbsp;that&nbsp;are&nbsp;down,&nbsp;etc&nbsp;(the&nbsp;script&nbsp;currently&nbsp;hangs&nbsp;on&nbsp;these),&nbsp;but<br>
I&amp;#39;m&nbsp;not&nbsp;sure&nbsp;where&nbsp;to&nbsp;add&nbsp;that&nbsp;functionality.&lt;br&gt;<br>
&lt;br&gt;Any&nbsp;help&nbsp;would&nbsp;be&nbsp;appreciated.&lt;br&gt;Thanks,&lt;br&gt;-Ray&lt;br&gt;&lt;br&gt;=========Script&nbsp;Follows=========&lt;br&gt;&lt;br&gt;#!/usr/bin/python&lt;br&gt;&lt;br&gt;from&nbsp;twisted.conch&nbsp;import&nbsp;error&lt;br&gt;from&nbsp;twisted.conch.ssh&nbsp;import&nbsp;transport,&nbsp;connection,&nbsp;keys,&nbsp;userauth,&nbsp;channel,&nbsp;common&lt;br&gt;<br>
<br>
from&nbsp;twisted.internet&nbsp;import&nbsp;defer,&nbsp;protocol,&nbsp;reactor&lt;br&gt;&lt;br&gt;#a&nbsp;class&nbsp;to&nbsp;store&nbsp;the&nbsp;data&nbsp;returned&nbsp;from&nbsp;the&nbsp;ssh&nbsp;client&nbsp;code&lt;br&gt;class&nbsp;SSHData():&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;data&nbsp;=&nbsp;&amp;#39;&amp;#39;&lt;br&gt;&lt;br&gt;class&nbsp;ClientCommandTransport(&lt;div&nbsp;id=&quot;:xg&quot;&nbsp;class=&quot;ArwC7c&nbsp;ckChnd&quot;&gt;<br>
transport.SSHClientTransport):&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;username,&nbsp;password,&nbsp;command):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.username&nbsp;=&nbsp;username&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.password&nbsp;=&nbsp;password&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.command&nbsp;=&nbsp;command&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;verifyHostKey(self,&nbsp;pubKey,&nbsp;fingerprint):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;in&nbsp;a&nbsp;real&nbsp;app,&nbsp;you&nbsp;should&nbsp;verify&nbsp;that&nbsp;the&nbsp;fingerprint&nbsp;matches&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;the&nbsp;one&nbsp;you&nbsp;expected&nbsp;to&nbsp;get&nbsp;from&nbsp;this&nbsp;server&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;defer.succeed(True)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;connectionSecure(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.requestService(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;PasswordAuth(self.username,&nbsp;self.password,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;ClientConnection(self.command)))&lt;br&gt;<br>
<br>
&lt;br&gt;class&nbsp;PasswordAuth(userauth.SSHUserAuthClient):&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;user,&nbsp;password,&nbsp;connection):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;userauth.SSHUserAuthClient.__init__(self,&nbsp;user,&nbsp;connection)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.password&nbsp;=&nbsp;password&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;getPassword(self,&nbsp;prompt=None):&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;defer.succeed(self.password)&lt;br&gt;&lt;br&gt;class&nbsp;ClientConnection(connection.SSHConnection):&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;cmd,&nbsp;*args,&nbsp;**kwargs):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;connection.SSHConnection.__init__(self)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.command&nbsp;=&nbsp;cmd&lt;br&gt;<br>
<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;serviceStarted(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.openChannel(CommandChannel(self.command,&nbsp;conn=self))&lt;br&gt;&lt;br&gt;class&nbsp;CommandChannel(channel.SSHChannel):&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;name&nbsp;=&nbsp;&amp;#39;session&amp;#39;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;command,&nbsp;*args,&nbsp;**kwargs):&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;channel.SSHChannel.__init__(self,&nbsp;*args,&nbsp;**kwargs)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.command&nbsp;=&nbsp;command&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;channelOpen(self,&nbsp;data):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.conn.sendRequest(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self,&nbsp;&amp;#39;exec&amp;#39;,&nbsp;common.NS(self.command),&nbsp;wantReply=True).addCallback(&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self._gotResponse)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;_gotResponse(self,&nbsp;_):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.conn.sendEOF(self)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;dataReceived(self,&nbsp;data):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;SSHData.data&nbsp;=&nbsp;data&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;closed(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.stop()&lt;br&gt;<br>
<br>
&lt;br&gt;class&nbsp;ClientCommandFactory(protocol.ClientFactory):&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;username,&nbsp;password,&nbsp;command):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.username&nbsp;=&nbsp;username&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.password&nbsp;=&nbsp;password&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.command&nbsp;=&nbsp;command&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.deferred&nbsp;=&nbsp;defer.Deferred()&lt;br&gt;<br>
<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;protocol&nbsp;=&nbsp;ClientCommandTransport(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.username,&nbsp;self.password,&nbsp;self.command)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;protocol&lt;br&gt;&lt;br&gt;def&nbsp;testConnect(username,&nbsp;password,&nbsp;command,&nbsp;server):&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&nbsp;testFactory&nbsp;=&nbsp;ClientCommandFactory(username,&nbsp;password,&nbsp;command)&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;reactor.connectTCP(server,&nbsp;22,&nbsp;testFactory)&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;testFactory.deferred&lt;br&gt;&lt;br&gt;def&nbsp;handleSuccess(result,&nbsp;port):&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;Connected&nbsp;to&nbsp;port&nbsp;%i&amp;quot;&nbsp;%&nbsp;port&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&nbsp;reactor.stop()&lt;br&gt;&lt;br&gt;def&nbsp;handleFailure(failure,&nbsp;port):&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;Error&nbsp;connecting&nbsp;to&nbsp;port&nbsp;%i:&nbsp;%s&amp;quot;&nbsp;%&nbsp;(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;port,&nbsp;failure.getErrorMessage())&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;reactor.stop()&lt;br&gt;&lt;br&gt;if&nbsp;__name__&nbsp;==&nbsp;&amp;quot;__main__&amp;quot;:&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&nbsp;import&nbsp;sys,&nbsp;getpass&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;server&nbsp;=&nbsp;sys.argv[1]&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;command&nbsp;=&nbsp;sys.argv[2]&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;username&nbsp;=&nbsp;raw_input(&amp;quot;Username:&nbsp;&amp;quot;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;password&nbsp;=&nbsp;getpass.getpass(&amp;quot;Password:&nbsp;&amp;quot;)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;connecting&nbsp;=&nbsp;testConnect(username,&nbsp;password,&nbsp;command,&nbsp;server)&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&nbsp;#connecting.addCallback(handleSuccess,&nbsp;server)&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;#connecting.addErrback(handleFailure,&nbsp;server)&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;connecting.setTimeout(1,&nbsp;handleError)&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;reactor.run()&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;The&nbsp;data&nbsp;I&nbsp;got&nbsp;back&nbsp;from&nbsp;the&nbsp;ssh&nbsp;client&nbsp;is&nbsp;&amp;quot;&nbsp;+&nbsp;SSHData.data&lt;/div&gt;<br>

</tt>
