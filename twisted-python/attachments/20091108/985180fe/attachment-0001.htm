<tt>
David,&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;While&nbsp;this&nbsp;process&nbsp;is&nbsp;certainly&nbsp;doable,&nbsp;I&amp;#39;ll&nbsp;also&nbsp;point&nbsp;out&nbsp;that&nbsp;on&lt;br&gt;<br>
<br>
Windows,&nbsp;the&nbsp;more&nbsp;&amp;quot;natural&amp;quot;&nbsp;approach&nbsp;to&nbsp;this&nbsp;is&nbsp;to&nbsp;implement&nbsp;the&lt;br&gt;<br>
process&nbsp;as&nbsp;a&nbsp;service.&nbsp; That&nbsp;also&nbsp;buys&nbsp;you&nbsp;some&nbsp;regular&nbsp;Windows&lt;br&gt;<br>
approaches&nbsp;to&nbsp;management&nbsp;(net&nbsp;stop/start&nbsp;from&nbsp;command&nbsp;line,&nbsp;services&lt;br&gt;<br>
UI&nbsp;from&nbsp;the&nbsp;control&nbsp;panel)&nbsp;and&nbsp;status&nbsp;inquiry&nbsp;(sc&nbsp;query&nbsp;from&nbsp;command&lt;br&gt;<br>
line).&nbsp; So&nbsp;while&nbsp;it&nbsp;may&nbsp;be&nbsp;a&nbsp;little&nbsp;platform-specific&nbsp;code&nbsp;you&amp;#39;re&lt;br&gt;<br>
final&nbsp;result&nbsp;will&nbsp;integrate&nbsp;more&nbsp;naturally&nbsp;into&nbsp;that&nbsp;environment&nbsp;for&lt;br&gt;<br>
any&nbsp;system&nbsp;administrators.&lt;br&gt;<br>
&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;It&nbsp;is&nbsp;very&nbsp;possible&nbsp;I&nbsp;might&nbsp;have&nbsp;to&nbsp;go&nbsp;this&nbsp;route. &nbsp;We&nbsp;have&nbsp;some&nbsp;odd&nbsp;requrements,&lt;br&gt;such&nbsp;as&nbsp;needing&nbsp;to&nbsp;run&nbsp;the&nbsp;server&nbsp;using&nbsp;the&nbsp;Windows&nbsp;Server&nbsp;2008&nbsp;HPC&nbsp;job&nbsp;scheduler.&lt;br&gt;the&nbsp;job&nbsp;scheduler&nbsp;does&nbsp;some&nbsp;funky&nbsp;things&nbsp;and&nbsp;I&nbsp;am&nbsp;finding&nbsp;that&nbsp;some&nbsp;of&nbsp;the&nbsp;&amp;quot;usual&amp;quot;&lt;br&gt;<br>
assumptions&nbsp;you&nbsp;make&nbsp;on&nbsp;Windows&nbsp;don&amp;#39;t&nbsp;hold. &nbsp;So&nbsp;at&nbsp;this&nbsp;point,&nbsp;I&nbsp;need&nbsp;all&nbsp;the&nbsp;tricks&lt;br&gt;in&nbsp;my&nbsp;bad&nbsp;that&nbsp;I&nbsp;can&nbsp;get. &nbsp;Thanks&nbsp;for&nbsp;the&nbsp;example!&lt;br&gt; &lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
<br>
While&nbsp;I&nbsp;haven&amp;#39;t&nbsp;done&nbsp;this&nbsp;with&nbsp;a&nbsp;twistd&nbsp;based&nbsp;Twisted&nbsp;service,&nbsp;I&amp;#39;ve&lt;br&gt;<br>
done&nbsp;it&nbsp;with&nbsp;a&nbsp;lot&nbsp;of&nbsp;Twisted&nbsp;code&nbsp;in&nbsp;general.&nbsp; It&amp;#39;s&nbsp;easiest&nbsp;if&nbsp;you&nbsp;have&lt;br&gt;<br>
pywin32&nbsp;installed&nbsp;and&nbsp;can&nbsp;use&nbsp;it&amp;#39;s&nbsp;utility&nbsp;service&nbsp;wrappers,&nbsp;for&nbsp;which&lt;br&gt;<br>
the&nbsp;pywin32&nbsp;package&nbsp;has&nbsp;examples.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;OK,&nbsp;nice&nbsp;to&nbsp;know&nbsp;about&nbsp;these&nbsp;examples.&lt;br&gt; &lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
<br>
I&amp;#39;ve&nbsp;tended&nbsp;to&nbsp;offload&nbsp;the&nbsp;service&nbsp;definition&nbsp;to&nbsp;its&nbsp;own&nbsp;module,&nbsp;and&lt;br&gt;<br>
have&nbsp;it&nbsp;just&nbsp;import&nbsp;and&nbsp;execute&nbsp;the&nbsp;main&nbsp;code&nbsp;(with&nbsp;the&nbsp;twisted&lt;br&gt;<br>
reactor.run&nbsp;call)&nbsp;after&nbsp;the&nbsp;service&nbsp;gets&nbsp;started&nbsp;-&nbsp;that&nbsp;way&nbsp;you&nbsp;can&lt;br&gt;<br>
also&nbsp;manually&nbsp;run&nbsp;the&nbsp;twisted&nbsp;code&nbsp;without&nbsp;involving&nbsp;any&nbsp;of&nbsp;the&lt;br&gt;<br>
service&nbsp;support,&nbsp;or&nbsp;to&nbsp;support&nbsp;execution&nbsp;on&nbsp;non-Windows&nbsp;platforms.&lt;br&gt;<br>
&lt;br&gt;<br>
Here&amp;#39;s&nbsp;one&nbsp;example&nbsp;of&nbsp;a&nbsp;service&nbsp;object&nbsp;that&nbsp;invoices&nbsp;Twisted-based&lt;br&gt;<br>
code.&nbsp; When&nbsp;stopping,&nbsp;you&nbsp;use&nbsp;callFromThread&nbsp;because&nbsp;the&nbsp;thread&nbsp;that&lt;br&gt;<br>
handles&nbsp;the&nbsp;request&nbsp;from&nbsp;the&nbsp;Windows&nbsp;service&nbsp;manager&nbsp;is&nbsp;separate&nbsp;from&lt;br&gt;<br>
the&nbsp;thread&nbsp;executing&nbsp;the&nbsp;main&nbsp;code&nbsp;(which&nbsp;is&nbsp;a&nbsp;thread&nbsp;created&nbsp;during&lt;br&gt;<br>
the&nbsp;startup&nbsp;process).&lt;br&gt;<br>
&lt;br&gt;<br>
That&amp;#39;s&nbsp;also&nbsp;why&nbsp;you&nbsp;start&nbsp;the&nbsp;reactor&nbsp;without&nbsp;signal&nbsp;initialization,&lt;br&gt;<br>
since&nbsp;it&amp;#39;ll&nbsp;be&nbsp;in&nbsp;a&nbsp;secondary&nbsp;thread.&nbsp; In&nbsp;SvcDoRun&nbsp;is&nbsp;where&nbsp;you&nbsp;could&lt;br&gt;<br>
import&nbsp;platform-generic&nbsp;modules&nbsp;to&nbsp;set&nbsp;up&nbsp;your&nbsp;twisted&nbsp;code,&nbsp;and&nbsp;then&lt;br&gt;<br>
this&nbsp;code&nbsp;starts&nbsp;the&nbsp;reactor.&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;Bummer,&nbsp;then&nbsp;I&nbsp;can&amp;#39;t&nbsp;use&nbsp;this&nbsp;approach. &nbsp;My&nbsp;&amp;quot;server&amp;quot;&nbsp;uses&nbsp;reactor.spawnProcess&lt;br&gt;which&nbsp;needs&nbsp;the&nbsp;signal&nbsp;handlers&nbsp;to&nbsp;be&nbsp;installed&nbsp;(SIGCHLD&nbsp;specifically)&nbsp;to&nbsp;work&lt;br&gt;<br>
properly...&nbsp;do&nbsp;you&nbsp;know&nbsp;if&nbsp;it&nbsp;can&nbsp;be&nbsp;done&nbsp;without&nbsp;the&nbsp;dual&nbsp;thread&nbsp;trick.&lt;br&gt;&lt;br&gt;Thanks,&lt;br&gt;&lt;br&gt;Brian&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
<br>
Oh,&nbsp;and&nbsp;I&nbsp;left&nbsp;some&nbsp;code&nbsp;in&nbsp;that&nbsp;shows&nbsp;retrieving&nbsp;service-specific&lt;br&gt;<br>
parameters&nbsp;from&nbsp;the&nbsp;registry&nbsp;as&nbsp;is&nbsp;typical&nbsp;for&nbsp;Windows&nbsp;services&lt;br&gt;<br>
(stored&nbsp;in&nbsp;HKLM/System/CurrentControlSet/Services/&amp;lt;svc_name&amp;gt;/Parameters&lt;br&gt;<br>
if&nbsp;I&nbsp;recall&nbsp;corrrectly):&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&nbsp;-&nbsp;-&nbsp;-&nbsp;-&lt;br&gt;<br>
&lt;br&gt;<br>
class&nbsp;DataImportService(win32serviceutil.ServiceFramework):&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; __version__&nbsp;=&nbsp;&amp;#39;1.0.0&amp;#39;&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; _svc_name_&nbsp;=&nbsp;&amp;#39;fdi&amp;#39;&lt;br&gt;<br>
&nbsp; &nbsp; _svc_display_name_&nbsp;=&nbsp;&amp;#39;SomeCompany&nbsp;Data&nbsp;Integration&amp;#39;&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; stopping&nbsp;=&nbsp;False&lt;br&gt;<br>
&nbsp; &nbsp; debug&nbsp;=&nbsp;False&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;__init__(self,&nbsp;*args,&nbsp;**kwargs):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; win32serviceutil.ServiceFramework.__init__(self,&nbsp;*args,&nbsp;**kwargs)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.initialize()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self._stopped&nbsp;=&nbsp;threading.Event()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.log&nbsp;=&nbsp;None&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;initialize(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;This&nbsp;is&nbsp;separate&nbsp;from&nbsp;__init__&nbsp;so&nbsp;during&nbsp;debugging&nbsp;the&nbsp;bootstrap&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;code&nbsp;can&nbsp;override&nbsp;__init__&nbsp;but&nbsp;still&nbsp;finish&nbsp;initialization.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;_getOption(self,&nbsp;option,&nbsp;default):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;win32serviceutil.GetServiceCustomOption(self._svc_name_,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;option,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;default)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;SvcStop(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; print&nbsp;&amp;#39;%s&nbsp;Service&nbsp;stopping&amp;#39;&nbsp;%&nbsp;self._svc_display_name_&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; reactor.callFromThread(reactor.stop)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self._stopped.wait(5)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; print&nbsp;&amp;#39;%s&nbsp;Service&nbsp;stopped&amp;#39;&nbsp;%&nbsp;self._svc_display_name_&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;self.log:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.log.close()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;SvcDoRun(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;Main&nbsp;entry&nbsp;point&nbsp;for&nbsp;service&nbsp;execution&amp;quot;&amp;quot;&amp;quot;&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;hasattr(sys,&nbsp;&amp;#39;frozen&amp;#39;):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; home_dir&nbsp;=&nbsp;os.path.dirname(sys.executable)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; else:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; home_dir&nbsp;=&nbsp;os.path.dirname(__file__)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;First,&nbsp;let&amp;#39;s&nbsp;set&nbsp;up&nbsp;some&nbsp;logging&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;self.debug:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dupstdout&nbsp;=&nbsp;True&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; logprefix&nbsp;=&nbsp;None&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; else:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dupstdout&nbsp;=&nbsp;False&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; logprefix&nbsp;=&nbsp;os.path.join(home_dir,&nbsp;&amp;#39;logs&amp;#39;,&nbsp;&amp;#39;dataimport.log&amp;#39;)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.log&nbsp;=&nbsp;LogClass(logprefix,&nbsp;dupstdout)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;And&nbsp;then&nbsp;reroute&nbsp;stdout/stderr&nbsp;to&nbsp;that&nbsp;file&nbsp;object&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; sys.stdout&nbsp;=&nbsp;self.log&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; sys.stderr&nbsp;=&nbsp;self.log&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; print&nbsp;&amp;#39;%s&nbsp;Service&nbsp;%s&nbsp;starting&amp;#39;&nbsp;%&nbsp;(self._svc_display_name_,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.__version__)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; try:&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;Process&nbsp;config&nbsp;file&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; config_file&nbsp;=&nbsp;self._getOption(&amp;#39;config&amp;#39;,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; os.path.join(home_dir,&nbsp;&amp;#39;data&amp;#39;,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;#39;dataimport.ini&amp;#39;))&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;...&nbsp;other&nbsp;service-related&nbsp;initialization&nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;...&nbsp;do&nbsp;any&nbsp;Twisted&nbsp;related&nbsp;initialization&nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;Start&nbsp;everything&nbsp;up&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reactor.callLater(0,&nbsp;self.log.write,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;#39;%s&nbsp;Service&nbsp;operational\n&amp;#39;&nbsp;%&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self._svc_display_name_)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reactor.run(installSignalHandlers=False)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;We&amp;#39;re&nbsp;shutting&nbsp;down.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;...&nbsp;do&nbsp;any&nbsp;shutdown&nbsp;processing&nbsp;...&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;Flag&nbsp;that&nbsp;we&amp;#39;re&nbsp;exiting&nbsp;so&nbsp;service&nbsp;thread&nbsp;can&nbsp;be&nbsp;more&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;accurate&nbsp;in&nbsp;terms&nbsp;of&nbsp;declaring&nbsp;shutdown.&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self._stopped.set()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; except:&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;For&nbsp;right&nbsp;now&nbsp;just&nbsp;log&nbsp;a&nbsp;traceback&nbsp;and&nbsp;abort&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.err()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;But&nbsp;try&nbsp;to&nbsp;gracefully&nbsp;close&nbsp;down&nbsp;log&nbsp;to&nbsp;let&nbsp;final&nbsp;traceback&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;information&nbsp;make&nbsp;it&nbsp;out&nbsp;to&nbsp;the&nbsp;log&nbsp;file.&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;self.log:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.log.close()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&nbsp;-&nbsp;-&nbsp;-&nbsp;-&lt;br&gt;<br>
&lt;br&gt;<br>
Your&nbsp;main&nbsp;startup&nbsp;code&nbsp;in&nbsp;the&nbsp;service&nbsp;wrapper&nbsp;module&nbsp;can&nbsp;use&nbsp;helper&lt;br&gt;<br>
functions&nbsp;from&nbsp;win32serviceutil&nbsp;for&nbsp;startup&nbsp;(see&nbsp;the&nbsp;pywin32&nbsp;examples)&lt;br&gt;<br>
which&nbsp;provides&nbsp;some&nbsp;automatic&nbsp;support&nbsp;for&nbsp;installing/uninstalling&nbsp;the&lt;br&gt;<br>
service,&nbsp;or&nbsp;you&nbsp;can&nbsp;implement&nbsp;your&nbsp;own&nbsp;startup&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;support&lt;br&gt;<br>
different&nbsp;options&nbsp;and&nbsp;what&nbsp;not.&nbsp; This&nbsp;all&nbsp;works&nbsp;under&nbsp;py2exe&nbsp;as&nbsp;well&lt;br&gt;<br>
if&nbsp;you&nbsp;want&nbsp;to&nbsp;package&nbsp;things&nbsp;up&nbsp;and&nbsp;have&nbsp;a&nbsp;nice&nbsp;self-contained&nbsp;exe&nbsp;as&lt;br&gt;<br>
a&nbsp;Windows&nbsp;service.&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
--&nbsp;David&lt;br&gt;<br>
&lt;/font&gt;&lt;div&gt;&lt;div&nbsp;class=&quot;h5&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
Twisted-Python&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&gt;Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&nbsp;target=&quot;_blank&quot;&gt;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&lt;/a&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;br&gt;<br>

</tt>
