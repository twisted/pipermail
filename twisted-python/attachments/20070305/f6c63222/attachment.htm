<tt>
&lt;!DOCTYPE&nbsp;HTML&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;3.2//EN&quot;&gt;<br>
&lt;HTML&gt;<br>
&lt;HEAD&gt;<br>
&lt;META&nbsp;HTTP-EQUIV=&quot;Content-Type&quot;&nbsp;CONTENT=&quot;text/html;&nbsp;charset=iso-8859-1&quot;&gt;<br>
&lt;META&nbsp;NAME=&quot;Generator&quot;&nbsp;CONTENT=&quot;MS&nbsp;Exchange&nbsp;Server&nbsp;version&nbsp;6.5.7651.59&quot;&gt;<br>
&lt;TITLE&gt;TCP&nbsp;client&nbsp;that&nbsp;can&nbsp;connect&nbsp;to&nbsp;a&nbsp;server&nbsp;at&nbsp;periodic&nbsp;intervals&lt;/TITLE&gt;<br>
&lt;/HEAD&gt;<br>
&lt;BODY&gt;<br>
&lt;!--&nbsp;Converted&nbsp;from&nbsp;text/plain&nbsp;format&nbsp;--&gt;<br>
&lt;BR&gt;<br>
<br>
&lt;P&gt;&lt;FONT&nbsp;SIZE=2&gt;I&nbsp;am&nbsp;trying&nbsp;to&nbsp;write&nbsp;a&nbsp;TCP&nbsp;client&nbsp;that&nbsp;at&nbsp;regular&nbsp;intervals&nbsp;connects&nbsp;to&nbsp;a&nbsp;server&nbsp;makes&nbsp;a&nbsp;request&nbsp;and&nbsp;then&nbsp;closes&nbsp;the&nbsp;connection.&nbsp;Below&nbsp;is&nbsp;the&nbsp;code&nbsp;I've&nbsp;been&nbsp;playing&nbsp;with.&nbsp;I've&nbsp;seen&nbsp;an&nbsp;example&nbsp;of&nbsp;LoopingCall&nbsp;used&nbsp;for&nbsp;periodically&nbsp;sending&nbsp;UPD&nbsp;packets&nbsp;but&nbsp;am&nbsp;not&nbsp;sure&nbsp;how&nbsp;it&nbsp;would&nbsp;apply&nbsp;here&nbsp;because&nbsp;it&nbsp;would&nbsp;seem&nbsp;I&nbsp;need&nbsp;to&nbsp;periodically&nbsp;create&nbsp;new&nbsp;Protocol&nbsp;instances&nbsp;in&nbsp;the&nbsp;ClientFactory&nbsp;class.&nbsp;I've&nbsp;looked&nbsp;for&nbsp;examples&nbsp;and&nbsp;through&nbsp;the&nbsp;documentation&nbsp;but&nbsp;have&nbsp;come&nbsp;up&nbsp;empty.&nbsp;Any&nbsp;pointers&nbsp;would&nbsp;be&nbsp;greatly&nbsp;appreceiated.&lt;BR&gt;<br>
&lt;BR&gt;<br>
class&nbsp;AnnouncementFetcher(protocol.Protocol):&lt;BR&gt;<br>
&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;connectionMade(self):&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;connectionMade&nbsp;called&amp;quot;&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.transport.write(MSG_INFO_IPC)&lt;BR&gt;<br>
&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;dataReceived(self,&nbsp;data):&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;Received:&nbsp;&amp;quot;,&nbsp;repr(data)&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;self.factory.share.saveData(data)&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.transport.loseConnection()&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;BR&gt;<br>
&lt;BR&gt;<br>
class&nbsp;AnnouncementFetcherFactory(protocol.ClientFactory):&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;protocol&nbsp;=&nbsp;AnnouncementFetcher&lt;BR&gt;<br>
&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;share):&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.share&nbsp;=&nbsp;share&lt;BR&gt;<br>
&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;'Connected.'&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;p&nbsp;=&nbsp;AnnouncementFetcher()&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;p.factory&nbsp;=&nbsp;self&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;p&lt;BR&gt;<br>
&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;clientConnectionLost(self,&nbsp;connector,&nbsp;reason):&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;'Lost&nbsp;connection,&amp;nbsp;&nbsp;Reason:',&nbsp;reason&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.callLater(5,&nbsp;self.buildProtocol,&nbsp;'localhost')&lt;BR&gt;<br>
&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;clientConnectionFailed(self,&nbsp;connector,&nbsp;reason):&lt;BR&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;'Connection&nbsp;failed.&nbsp;Reason:',&nbsp;reason&lt;/FONT&gt;<br>
&lt;/P&gt;<br>
<br>
&lt;/BODY&gt;<br>
&lt;/HTML&gt;
</tt>
