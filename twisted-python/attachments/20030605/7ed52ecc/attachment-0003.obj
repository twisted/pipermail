
from twisted.python import components

from twisted.web.woven import model, interfaces, page


class SomeObjectWithAttributes(object):
    one = '1'
    two = '2'
    three = '3'


class AttributeWrapper(model.Model):
    def submodelCheck(self, request, name):
        if name[0] != '_':
            return hasattr(self.original, name)
    
    def submodelFactory(self, request, name):
        return getattr(self.original, name)


components.registerAdapter(AttributeWrapper, SomeObjectWithAttributes, interfaces.IModel)

model = SomeObjectWithAttributes()

resource = page.Page(model, template = """<html>
    <body>
        <div model="one" />
        <div model="two" />
        <div model="three" />
    </body>
</html>""")

