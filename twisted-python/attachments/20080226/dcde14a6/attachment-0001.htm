<tt>
Greetings,&lt;br&gt;&lt;br&gt;I&nbsp;have&nbsp;a&nbsp;problem&nbsp;I&nbsp;hope&nbsp;someone&nbsp;here&nbsp;can&nbsp;assist&nbsp;with.&nbsp;I&amp;#39;m&nbsp;using&nbsp;TwistedSNMP&nbsp;to&nbsp;query&nbsp;a&nbsp;bunch&nbsp;of&nbsp;SNMP&nbsp;devices&nbsp;asynchronously.&nbsp;The&nbsp;behavior&nbsp;I&amp;#39;m&nbsp;trying&nbsp;to&nbsp;get&nbsp;is&nbsp;to&nbsp;get&nbsp;is&nbsp;to&nbsp;query&nbsp;all&nbsp;the&nbsp;devices&nbsp;via&nbsp;SNMP,&nbsp;each&nbsp;query&nbsp;returns&nbsp;a&nbsp;deferred,&nbsp;and&nbsp;when&nbsp;all&nbsp;their&nbsp;callbacks&nbsp;have&nbsp;been&nbsp;fired&nbsp;then&nbsp;I&nbsp;want&nbsp;to&nbsp;stop&nbsp;the&nbsp;reactor&nbsp;and&nbsp;thereby&nbsp;exit&nbsp;the&nbsp;program.&nbsp;I&nbsp;thought&nbsp;perhaps&nbsp;I&nbsp;could&nbsp;put&nbsp;each&nbsp;of&nbsp;these&nbsp;SNMP&nbsp;deferreds&nbsp;in&nbsp;a&nbsp;DeferredList&nbsp;and&nbsp;add&nbsp;a&nbsp;callback&nbsp;to&nbsp;the&nbsp;DeferredList&nbsp;that&nbsp;would&nbsp;stop&nbsp;the&nbsp;reactor&nbsp;but&nbsp;it&nbsp;does&nbsp;not&nbsp;do&nbsp;that.&nbsp;Enclosed&nbsp;is&nbsp;a&nbsp;code&nbsp;sample.&nbsp;Am&nbsp;I&nbsp;doing&nbsp;something&nbsp;incorrectly,&nbsp;or&nbsp;should&nbsp;I&nbsp;do&nbsp;something&nbsp;different?&lt;br&gt;<br>
&lt;br&gt;Thanks!&nbsp;-Don&lt;br&gt;&lt;br&gt;&amp;quot;&amp;quot;&amp;quot;Trivial&nbsp;example&nbsp;to&nbsp;retrieve&nbsp;an&nbsp;OID&nbsp;from&nbsp;a&nbsp;remote&nbsp;Agent&amp;quot;&amp;quot;&amp;quot;&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;from&nbsp;twistedsnmp&nbsp;import&nbsp;snmpprotocol,&nbsp;agentproxy&lt;br&gt;from&nbsp;twisted.enterprise&nbsp;import&nbsp;adbapi&lt;br&gt;<br>
from&nbsp;twisted.internet&nbsp;import&nbsp;defer&lt;br&gt;import&nbsp;os&lt;br&gt;&lt;br&gt;APPNAME&nbsp;=&nbsp;&amp;#39;ClearSNMP&amp;#39;&lt;br&gt;d_results&nbsp;=&nbsp;{}&nbsp;#dictionary&nbsp;to&nbsp;store&nbsp;results&lt;br&gt;device_name&nbsp;=&nbsp;&amp;#39;Unknown&amp;#39;&lt;br&gt;&lt;br&gt;db_conn&nbsp;=&nbsp;{&amp;#39;user&amp;#39;:&amp;#39;sa&amp;#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;password&amp;#39;:&amp;#39;password&amp;#39;,&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;host&amp;#39;:&amp;#39;localhost&amp;#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;database&amp;#39;:&amp;#39;ClearSNMP&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;community_string&nbsp;=&nbsp;&amp;#39;public&amp;#39;&lt;br&gt;&lt;br&gt;deferred_list&nbsp;=&nbsp;[]&nbsp;#list&nbsp;to&nbsp;help&nbsp;group&nbsp;the&nbsp;snmp&nbsp;requests&lt;br&gt;<br>
&lt;br&gt;outfile&nbsp;=&nbsp;open(&amp;#39;outfile.csv&amp;#39;,&amp;#39;wb&amp;#39;,0)&lt;br&gt;#add&nbsp;headers&nbsp;to&nbsp;the&nbsp;outfile&lt;br&gt;outfile.write(&amp;quot;device_name,link_oid,link_name,link_capacity_oid,link_capacity,traffic_in_oid,traffic_in,traffic_out_oid,traffic_out&amp;quot;)&lt;br&gt;<br>
&lt;br&gt;#create&nbsp;the&nbsp;database&nbsp;connection&nbsp;pool&lt;br&gt;dbpool&nbsp;=&nbsp;adbapi.ConnectionPool(&amp;quot;pymssql&amp;quot;,&nbsp;user=db_conn[&amp;#39;user&amp;#39;],&nbsp;password=db_conn[&amp;#39;password&amp;#39;],&nbsp;host=db_conn[&amp;#39;host&amp;#39;],&nbsp;database=db_conn[&amp;#39;database&amp;#39;])&lt;br&gt;<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;def&nbsp;main(&nbsp;class_handler,&nbsp;proxy,&nbsp;oids&nbsp;):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;quot;&amp;quot;&amp;quot;Do&nbsp;a&nbsp;getTable&nbsp;on&nbsp;proxy&nbsp;for&nbsp;OIDs&nbsp;and&nbsp;store&nbsp;in&nbsp;oidStore&amp;quot;&amp;quot;&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df&nbsp;=&nbsp;proxy.getTable(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;oids,&nbsp;timeout=.25,&nbsp;retryCount=5&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;class_handler&nbsp;==&nbsp;&amp;#39;tasman&amp;#39;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df.addCallback(&nbsp;tasmanResults&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df.addCallback(&nbsp;results&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#df.addCallback(&nbsp;exiter&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df.addErrback(&nbsp;errorReporter,&nbsp;proxy&nbsp;)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#df.addErrback(&nbsp;exiter&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;df&lt;br&gt;&lt;br&gt;&lt;br&gt;def&nbsp;tasmanResults(&nbsp;result&nbsp;):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;quot;&amp;quot;&amp;quot;Results&nbsp;&amp;#39;appear&amp;#39;&nbsp;to&nbsp;be&nbsp;a&nbsp;nested&nbsp;dictionary,&nbsp;but&nbsp;it&nbsp;is&nbsp;really&nbsp;an&nbsp;object&nbsp;of&nbsp;OIDs.&nbsp;I&nbsp;figured&nbsp;out&nbsp;how&nbsp;to&nbsp;get&nbsp;to&nbsp;the&nbsp;OIDs&nbsp;by&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;casting&nbsp;them&nbsp;as&nbsp;a&nbsp;dictionary&nbsp;using&nbsp;the&nbsp;built_in&nbsp;dict()&nbsp;function.&nbsp;Now&nbsp;I&nbsp;can&nbsp;iterate&nbsp;over&nbsp;all&nbsp;the&nbsp;OIDs.&amp;quot;&amp;quot;&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#print&nbsp;&amp;#39;Results:&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_table_key&nbsp;=&nbsp;{}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;table_key&nbsp;in&nbsp;result.keys():&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#get&nbsp;the&nbsp;device&nbsp;name.&nbsp;for&nbsp;some&nbsp;reason&nbsp;i&nbsp;have&nbsp;to&nbsp;do&nbsp;this&nbsp;in&nbsp;a&nbsp;loop&nbsp;as&nbsp;just&nbsp;saying&nbsp;dict(result[table_key])[&amp;#39;.1.3.6.1.2.1.1.5.0&amp;#39;]&nbsp;doesn&amp;#39;t&nbsp;work&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;oid&nbsp;in&nbsp;dict(result[table_key]).keys():&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;oid==&amp;#39;.1.3.6.1.2.1.1.5.0&amp;#39;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;device_name=str(dict(result[table_key])[oid])&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_oid&nbsp;=&nbsp;{}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;oid&nbsp;in&nbsp;dict(result[table_key]).keys():&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_oid[str(oid)]=dict(result[table_key])[oid]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_table_key[str(table_key)]&nbsp;=&nbsp;d_oid&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_results[device_name]=d_table_key&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#specify&nbsp;the&nbsp;table&nbsp;oids&nbsp;so&nbsp;we&nbsp;can&nbsp;match&nbsp;them&nbsp;appropriately&nbsp;later&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;link_name_table&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;=&nbsp;&amp;quot;.1.3.6.1.2.1.2.2.1.2&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;link_capacity_table&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;=&nbsp;&amp;quot;.1.3.6.1.2.1.2.2.1.5&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;traffic_in_table&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;=&nbsp;&amp;quot;.1.3.6.1.2.1.2.2.1.10&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;traffic_out_table&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;=&nbsp;&amp;quot;.1.3.6.1.2.1.2.2.1.16&amp;quot;&lt;br&gt;<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;For&nbsp;each&nbsp;link&nbsp;name&nbsp;in&nbsp;the&nbsp;table&nbsp;I&nbsp;need&nbsp;to&nbsp;get&nbsp;the&nbsp;values&nbsp;from&nbsp;the&nbsp;link_capacity,&nbsp;traffic_in&nbsp;and&nbsp;traffic_out&nbsp;tables&nbsp;and&nbsp;put&nbsp;them&nbsp;in&nbsp;the&nbsp;same&nbsp;line&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;d_results.keys():&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row&nbsp;=&nbsp;{}&nbsp;#holds&nbsp;the&nbsp;column&nbsp;values&nbsp;for&nbsp;a&nbsp;row&lt;br&gt;<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#set&nbsp;device_name&nbsp;in&nbsp;Row&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;device_name&amp;#39;]&nbsp;=&nbsp;device_name&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;k&nbsp;in&nbsp;d_results[i][link_name_table]:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#set&nbsp;link_oid&nbsp;and&nbsp;link_name&nbsp;in&nbsp;Row&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;link_oid&amp;#39;]&nbsp;=&nbsp;k&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;link_name&amp;#39;]&nbsp;=&nbsp;d_results[i][link_name_table][d_row[&amp;#39;link_oid&amp;#39;]]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#lookup&nbsp;the&nbsp;capacity&nbsp;metric&nbsp;for&nbsp;this&nbsp;link_oid&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#create&nbsp;the&nbsp;oid&nbsp;to&nbsp;lookup&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;link_capacity_oid&amp;#39;]&nbsp;=&nbsp;d_row[&amp;#39;link_oid&amp;#39;].replace(link_name_table,link_capacity_table)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;link_capacity&amp;#39;]&nbsp;=&nbsp;d_results[i][link_capacity_table][d_row[&amp;#39;link_capacity_oid&amp;#39;]]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#lookup&nbsp;the&nbsp;traffic_in&nbsp;metric&nbsp;for&nbsp;this&nbsp;link_oid&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#create&nbsp;the&nbsp;oid&nbsp;to&nbsp;lookup&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;traffic_in_oid&amp;#39;]&nbsp;=&nbsp;d_row[&amp;#39;link_oid&amp;#39;].replace(link_name_table,traffic_in_table)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;traffic_in&amp;#39;]&nbsp;=&nbsp;d_results[i][traffic_in_table][d_row[&amp;#39;traffic_in_oid&amp;#39;]]&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#lookup&nbsp;the&nbsp;traffic_out&nbsp;metric&nbsp;for&nbsp;this&nbsp;link_oid&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#create&nbsp;the&nbsp;oid&nbsp;to&nbsp;lookup&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;traffic_out_oid&amp;#39;]&nbsp;=&nbsp;d_row[&amp;#39;link_oid&amp;#39;].replace(link_name_table,traffic_out_table)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_row[&amp;#39;traffic_out&amp;#39;]&nbsp;=&nbsp;d_results[i][traffic_out_table][d_row[&amp;#39;traffic_out_oid&amp;#39;]]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#Calculate&nbsp;Utilization&nbsp;-&nbsp;if&nbsp;we&nbsp;can&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#print&nbsp;d_row&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;out&nbsp;=&nbsp;d_row[&amp;#39;device_name&amp;#39;]+&amp;quot;,&amp;quot;+d_row[&amp;#39;link_oid&amp;#39;]+&amp;quot;,&amp;quot;+d_row[&amp;#39;link_name&amp;#39;]+&amp;quot;,&amp;quot;+d_row[&amp;#39;link_capacity_oid&amp;#39;]+&amp;quot;,&amp;quot;+str(d_row[&amp;#39;link_capacity&amp;#39;])+&amp;quot;,&amp;quot;+d_row[&amp;#39;traffic_in_oid&amp;#39;]+&amp;quot;,&amp;quot;+str(d_row[&amp;#39;traffic_in&amp;#39;])+&amp;quot;,&amp;quot;+d_row[&amp;#39;traffic_out_oid&amp;#39;]+&amp;quot;,&amp;quot;+str(d_row[&amp;#39;traffic_out&amp;#39;])+&amp;#39;\r\n&amp;#39;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#print&nbsp;out&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;outfile.write(out)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;result&lt;br&gt;&lt;br&gt;&lt;br&gt;def&nbsp;errorReporter(&nbsp;err,&nbsp;proxy&nbsp;):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#print&nbsp;&amp;#39;ERROR&amp;#39;,&nbsp;err.getTraceback()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#log&nbsp;the&nbsp;failed&nbsp;snmp&nbsp;query&nbsp;attempt&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;#39;Failed&nbsp;to&nbsp;retrieve&nbsp;SNMP&nbsp;counters&nbsp;from&nbsp;agent:&amp;#39;,proxy&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;err&lt;br&gt;&lt;br&gt;def&nbsp;exiter(&nbsp;value&nbsp;):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.stop()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;outfile.close()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;value&lt;br&gt;&lt;br&gt;&lt;br&gt;def&nbsp;getNetworkElements():&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;dbpool.runQuery(&amp;quot;select&nbsp;top&nbsp;10&nbsp;ip,&nbsp;mkt,&nbsp;dns_name,&nbsp;dns_fqdn&nbsp;from&nbsp;dns&nbsp;where&nbsp;dns_type=&amp;#39;TASMAN&amp;#39;&amp;quot;)&lt;br&gt;<br>
&lt;br&gt;def&nbsp;printResult(l):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;item&nbsp;in&nbsp;l:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;Fetching&nbsp;counters&nbsp;for&nbsp;&amp;quot;+item[2]&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#deferred_list.append(snmpSetup(item[0],&nbsp;161,&nbsp;&amp;#39;ctipublic&amp;#39;,&amp;#39;tasman&amp;#39;))&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;ipAddress&nbsp;=&nbsp;item[0]&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;portno&nbsp;=&nbsp;161&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;community&nbsp;=&nbsp;community_string&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;class_handler&nbsp;=&nbsp;&amp;#39;tasman&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;ipAddress,portno&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;choose&nbsp;random&nbsp;port&nbsp;in&nbsp;range&nbsp;25000&nbsp;to&nbsp;30000&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;port&nbsp;=&nbsp;snmpprotocol.port()&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;targetPort&nbsp;=&nbsp;int(portno)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;proxy&nbsp;=&nbsp;agentproxy.AgentProxy(ipAddress,&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;targetPort,&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;community&nbsp;=&nbsp;community,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;snmpVersion&nbsp;=&nbsp;&amp;#39;v1&amp;#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;protocol&nbsp;=&nbsp;port.protocol,&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;)&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_oids&nbsp;=&nbsp;{&amp;#39;.1.3.6.1.2.1.1&amp;#39;:&amp;quot;System&nbsp;Tables&amp;quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;.1.3.6.1.2.1.2.2.1.2&amp;#39;:&amp;quot;Circuit&nbsp;Name&amp;quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;.1.3.6.1.2.1.2.2.1.5&amp;#39;:&amp;quot;Capacity&amp;quot;,&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;.1.3.6.1.2.1.2.2.1.10&amp;#39;:&amp;quot;Traffic&nbsp;In&amp;quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;.1.3.6.1.2.1.2.2.1.16&amp;#39;:&amp;quot;Traffic&nbsp;Out&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;quot;&amp;quot;&amp;quot;Do&nbsp;a&nbsp;getTable&nbsp;on&nbsp;proxy&nbsp;for&nbsp;OIDs&nbsp;and&nbsp;store&nbsp;in&nbsp;oidStore&amp;quot;&amp;quot;&amp;quot;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df&nbsp;=&nbsp;proxy.getTable(&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d_oids,&nbsp;timeout=.25,&nbsp;retryCount=5&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;class_handler&nbsp;==&nbsp;&amp;#39;tasman&amp;#39;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df.addCallback(&nbsp;tasmanResults&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df.addCallback(&nbsp;results&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;df.addErrback(&nbsp;errorReporter,&nbsp;proxy&nbsp;)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;deferred_list.append(df)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;if&nbsp;__name__&nbsp;==&nbsp;&amp;quot;__main__&amp;quot;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;import&nbsp;sys&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#start&nbsp;the&nbsp;log&nbsp;service&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;from&nbsp;twisted.python&nbsp;import&nbsp;log&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;from&nbsp;twisted.python&nbsp;import&nbsp;logfile&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;rotate&nbsp;every&nbsp;100000000&nbsp;bytes&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;f&nbsp;=&nbsp;logfile.LogFile(APPNAME+str(os.getpid())+&amp;quot;.log&amp;quot;,&nbsp;&amp;quot;Logs&amp;quot;,&nbsp;rotateLength=100000000)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;setup&nbsp;logging&nbsp;to&nbsp;use&nbsp;our&nbsp;new&nbsp;logfile&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#log.startLogging(f)&lt;br&gt;<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;g&nbsp;=&nbsp;getNetworkElements().addCallback(printResult)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;dl&nbsp;=&nbsp;defer.DeferredList(deferred_list,&nbsp;0,&nbsp;0,&nbsp;1&nbsp;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;dir(dl)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;dl.addCallback(exiter)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.run()&lt;br&gt;<br>

</tt>
