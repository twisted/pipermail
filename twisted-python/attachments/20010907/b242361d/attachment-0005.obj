--- C:\TMLold\Twisted-0.10.0\twisted\reality\ui\tkfaucet.py	Sun Aug 19 17:52:46 2001
+++ C:\TML\Twisted-0.10.0\twisted\reality\ui\tkfaucet.py	Tue Aug 28 22:18:54 2001
@@ -20,25 +20,39 @@
 
 from Tkinter import *
 from ScrolledText import *
+from tkMessageBox import *
 
 from twisted.spread import pb
 from twisted.internet import tkinternet, main, tcp
 
 class MainWindow(Toplevel, pb.Referenced):
+
+    shortcuts = {"n":"go north",
+                 "s":"go south",
+                 "e":"go east",
+                 "w":"go west",
+                 "l":"look",
+                 "ne":"go northeast",
+                 "nw":"go northwest",
+                 "sw":"go southwest",
+                 "se":"go southeast",
+                 "u":"go up",
+                 "d":"go down"}
+
     def __init__(self, *args,**kw):
         self.descriptions = {}
         self.items = {}
         self.exits = []
         apply(Toplevel.__init__,(self,)+args,kw)
         self.title("Reality Faucet")
-        self.happenings = ScrolledText(self, height=5, width=5)
+        self.happenings = ScrolledText(self, height=6, width=72, wrap='word')
         
         midf = Frame(self)
         ddf = Frame(midf)
         idf = Frame(midf)
         
-        a = self.descriptionField = ScrolledText(ddf, height=5, width=5)
-        b = self.itemsField = ScrolledText(idf, height=5, width=30)
+        a = self.descriptionField = ScrolledText(ddf, height=12, width=72, wrap='word')
+        b = self.itemsField = ScrolledText(idf, height=12, width=36, wrap='word')
         a.pack(fill=BOTH, expand=YES)
         b.pack(fill=BOTH, expand=YES)
         ddf.pack(side=LEFT, fill=BOTH, expand=YES)
@@ -72,6 +86,7 @@
         
     def tryAgain(self, er):
         print 'oops',er
+        showerror('Oops', er)
         
     def disco(self):
         print 'disconnected'
@@ -128,6 +143,9 @@
     
     def doSend(self, *evstuf):
         sentence = self.entry.get()
+        possible_shortcut = self.shortcuts.get(sentence)
+        if possible_shortcut:
+            sentence = possible_shortcut
         self.doNow(sentence)
         self.entry.delete('0','end')
 
