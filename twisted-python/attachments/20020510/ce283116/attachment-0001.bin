from twisted.web.domtemplate import DOMTemplate

class DeferredUsingPage(DOMTemplate):
    template = """
<html>
<head>
<title>foo</title>
</head>
<body>

<div id="replaceMe">
Replace this
</div>

<div id="replaceMe">
Replace this too
</div>

<div id="replaceMe">
And this
</div>

</body>
</html>
"""

    def getTemplateMethods(self):
        return [{'id': 'replaceMe', 'method': self.replace}]
        
    def replace(self, request, node):
        from twisted.python.defer import Deferred
        from twisted.internet import reactor
        d = Deferred()
        d.addCallbacks(self.doSomethingLater, callbackArgs=(request, node))
        reactor.callLater(0.5, d.callback, None)
        return d

    def doSomethingLater(self, result, request, node):
        return self.d.createTextNode("Hey, we're the Replacements. And we're playing in a rock and roll band.")
        
resource = DeferredUsingPage()