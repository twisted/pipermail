from twisted.web import server
from twisted.application import service, internet
from twisted.web.woven import page, widgets, model
from twisted.web.microdom import lmx

mydict = {'hello': 'world'}


class MyWidget(widgets.Widget):
    def setUp(self, request, node, data):
        print "### mydict:", mydict
        lmx(node).p().text(str(mydict))


class MyModel(model.MethodModel):
    def wmfactory_m1(self, request):
        return "test1"

    def wmfactory_m2(self, request):
        mydict['foo'] = 'bar'
        self.getSubmodel(request, "m1").notify({'request': request})
        return "test2"
        
       
class MyPage(page.Page):
    template = """<html>
<p model="m1" view="view"/>
<p model="m2" view="None"/>
</html>"""

    def wvfactory_view(self, request, node, model):
        return MyWidget(model)

        
# Application

application = service.Application("test")
site = server.Site(MyPage(MyModel()))
web = internet.TCPServer(8000, site)
web.setServiceParent(application)
