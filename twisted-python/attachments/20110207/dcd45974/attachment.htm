<tt>
I&nbsp;think&nbsp;what&nbsp;you&nbsp;have&nbsp;duplicating&nbsp;functionality---you&amp;#39;re&nbsp;not&nbsp;taking&nbsp;advantage&nbsp;of&nbsp;the&nbsp;DeferredSemaphore.&nbsp; Try&nbsp;something&nbsp;like&nbsp;this:&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;meta&nbsp;http-equiv=&quot;content-type&quot;&nbsp;content=&quot;text/html;&nbsp;charset=utf-8&quot;&gt;&lt;div&gt;sem&nbsp;=&nbsp;DeferredSemaphore(1)&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;def doSerialStuffAndRelease(sem):&lt;/div&gt;&lt;div&gt;  &nbsp; #&nbsp;...perform&nbsp;serial&nbsp;port&nbsp;communication...&lt;/div&gt;&lt;div&gt;  &nbsp; sem.release()&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;d&nbsp;=&nbsp;sem.acquire()&lt;/div&gt;&lt;div&gt;d.addCallback(doSerialStuffAndRelease)&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;You&amp;#39;ll&nbsp;want&nbsp;&amp;quot;sem&amp;quot;&nbsp;to&nbsp;be&nbsp;a&nbsp;global---use&nbsp;wherever&nbsp;you&nbsp;deal&nbsp;with&nbsp;a&nbsp;particular&nbsp;port.&nbsp; Create&nbsp;additional&nbsp;instances&nbsp;of&nbsp;DeferredSemaphore&nbsp;for&nbsp;additional&nbsp;serial&nbsp;ports.&nbsp; Note&nbsp;that&nbsp;when&nbsp;the&nbsp;deferred&nbsp;is&nbsp;fired,&nbsp;the&nbsp;semaphore&nbsp;is&nbsp;passed&nbsp;as&nbsp;the&nbsp;argument.&nbsp; This&nbsp;is&nbsp;the&nbsp;reason&nbsp;for&nbsp;&amp;quot;sem&amp;quot;&nbsp;being&nbsp;the&nbsp;argument&nbsp;name&nbsp;in&nbsp;the&nbsp;function.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a&nbsp;href=&quot;http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.2.0/twisted/internet/defer.py#L1266&quot;&gt;http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.2.0/twisted/internet/defer.py#L1266&lt;/a&gt;&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Note&nbsp;that&nbsp;you&amp;#39;ll&nbsp;also&nbsp;want&nbsp;an&nbsp;error&nbsp;handler&nbsp;which&nbsp;releases&nbsp;the&nbsp;semaphore&nbsp;:)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Jason&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Mon,&nbsp;Feb&nbsp;7,&nbsp;2011&nbsp;at&nbsp;8:23&nbsp;PM,&nbsp;Jason&nbsp;Heeris&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:jason.heeris@gmail.com&quot;&gt;jason.heeris@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;I&amp;#39;m&nbsp;using&nbsp;a&nbsp;DeferredSemaphore&nbsp;with&nbsp;a&nbsp;token&nbsp;count&nbsp;of&nbsp;1&nbsp;to&nbsp;control&lt;br&gt;<br>
access&nbsp;to&nbsp;a&nbsp;serial&nbsp;port.&nbsp;I&nbsp;also&nbsp;have&nbsp;a&nbsp;GTK&nbsp;object&nbsp;for&nbsp;which&nbsp;I&amp;#39;d&nbsp;like&lt;br&gt;<br>
the&nbsp;&amp;quot;in-use&amp;quot;&nbsp;property&nbsp;to&nbsp;change&nbsp;(and&nbsp;notify&nbsp;listeners)&nbsp;when&nbsp;the&lt;br&gt;<br>
resource&nbsp;is&nbsp;in&nbsp;use.&nbsp;So&nbsp;far,&nbsp;I&nbsp;have&nbsp;something&nbsp;like&nbsp;this:&lt;br&gt;<br>
&lt;br&gt;<br>
----&lt;br&gt;<br>
class&nbsp;SerialResource(gobject):&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; #&nbsp;Property&nbsp;defs,&nbsp;etc&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;_acquire(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;The&nbsp;&amp;quot;in-use&amp;quot;&nbsp;property&nbsp;is&nbsp;actually&nbsp;stored&nbsp;in&nbsp;self.taken&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.taken&nbsp;=&nbsp;True&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.notify(&amp;#39;in-use&amp;#39;)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;_release(self,&nbsp;res):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.taken&nbsp;=&nbsp;False&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.notify(&amp;#39;in-use&amp;#39;)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;res&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;run(self,&nbsp;func,&nbsp;*args,&nbsp;**kargs):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; def&nbsp;wrapper():&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self._acquire()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; res&nbsp;=&nbsp;func(*args,&nbsp;**kargs)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;res&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;self.sem.run(wrapper)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; d.addBoth(self._release)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;d&lt;br&gt;<br>
----&lt;br&gt;<br>
&lt;br&gt;<br>
I&nbsp;feel&nbsp;like&nbsp;there&nbsp;might&nbsp;be&nbsp;a&nbsp;simpler&nbsp;way&nbsp;to&nbsp;do&nbsp;this,&nbsp;but&nbsp;I&nbsp;just&nbsp;can&amp;#39;t&lt;br&gt;<br>
see&nbsp;it.&nbsp;Or&nbsp;is&nbsp;this&nbsp;as&nbsp;simple&nbsp;as&nbsp;I&nbsp;can&nbsp;make&nbsp;it?&lt;br&gt;<br>
&lt;br&gt;<br>
—&nbsp;Jason&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
Twisted-Python&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&gt;Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&nbsp;target=&quot;_blank&quot;&gt;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;&lt;br&gt;--&nbsp;&lt;br&gt;Jason&nbsp;Rennie&lt;br&gt;Research&nbsp;Scientist,&nbsp;ITA&nbsp;Software&lt;br&gt;617-714-2645&lt;br&gt;&lt;a&nbsp;href=&quot;http://www.itasoftware.com/&quot;&gt;http://www.itasoftware.com/&lt;/a&gt;&lt;br&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;<br>

</tt>
