<tt>
Hi,&lt;br&gt;I&nbsp;have&nbsp;to&nbsp;write&nbsp;tests&nbsp;for&nbsp;a&nbsp;custom&nbsp;conch&nbsp;server.&nbsp;My&nbsp;approach&nbsp;is&nbsp;to&nbsp;make&nbsp;a&nbsp;test&nbsp;client&nbsp;and&nbsp;then&nbsp;connect&nbsp;it&nbsp;to&nbsp;my&nbsp;server&nbsp;in&nbsp;my&nbsp;testcase.&nbsp;I&nbsp;have&nbsp;been&nbsp;able&nbsp;to&nbsp;create&nbsp;a&nbsp;client&nbsp;that&nbsp;can&nbsp;interface&nbsp;with&nbsp;my&nbsp;server,&nbsp;but&nbsp;i&amp;#39;m&nbsp;not&nbsp;able&nbsp;to&nbsp;do&nbsp;it&nbsp;from&nbsp;within&nbsp;the&nbsp;test&nbsp;case.&lt;br&gt;<br>
What&nbsp;I&amp;#39;m&nbsp;trying&nbsp;is&nbsp;:&lt;br&gt;class&nbsp;TestAccountStatus(unittest.TestCase):&lt;br&gt;    &nbsp;def&nbsp;setUp(self):&lt;br&gt;        &nbsp;ssh_server&nbsp;=&nbsp;Server()&lt;br&gt;        &nbsp;self.server&nbsp;=&nbsp;reactor.listenTCP(ssh_server.port,&nbsp;&lt;br&gt;                     &nbsp;ssh_server.application(),&nbsp;&lt;br&gt;<br>
                     &nbsp;interface=ssh_server.interface)&lt;br&gt;    &nbsp;def&nbsp;tearDown(self):&lt;br&gt;        &nbsp;server,&nbsp;self.server&nbsp;=&nbsp;self.server,None&lt;br&gt;        &nbsp;return&nbsp;server.stopListening()&lt;br&gt;    &nbsp;def&nbsp;test_1(self):&lt;br&gt;        &nbsp;d&nbsp;=&nbsp;protocol.ClientCreator(reactor,&nbsp;SimpleTransport).connectTCP(&amp;#39;localhost&amp;#39;,&nbsp;self.server.getHost().port)&lt;br&gt;<br>
        &nbsp;return&nbsp;d&lt;br&gt;The&nbsp;transport&nbsp;SimpleTransport&nbsp;is&nbsp;my&nbsp;custom&nbsp;transport.SSHClientTransport&nbsp;instance.&nbsp;The&nbsp;class&nbsp;Server()&nbsp;is&nbsp;a&nbsp;wrapper&nbsp;around&nbsp;an&nbsp;SSHFactory&nbsp;insatance.&lt;br&gt;The&nbsp;problem&nbsp;I&amp;#39;m&nbsp;facing&nbsp;is&nbsp;that&nbsp;after&nbsp;this&nbsp;line&nbsp;&amp;gt;&lt;br&gt;<br>
d&nbsp;=&nbsp;protocol.ClientCreator(reactor,&nbsp;SimpleTransport).connectTCP(&amp;#39;localhost&amp;#39;,&nbsp;self.server.getHost().port)&lt;br&gt;I&nbsp;have&nbsp;to&nbsp;write&nbsp;reactor.run(),&nbsp;otherwise&nbsp;the&nbsp;client&nbsp;is&nbsp;not&nbsp;starting.&nbsp;If&nbsp;I&nbsp;write&nbsp;reactor.run()&nbsp;the&nbsp;test&nbsp;doesn&amp;#39;t&nbsp;stop&nbsp;(understandable&nbsp;since&nbsp;the&nbsp;reactor&nbsp;isn&amp;#39;t&nbsp;being&nbsp;stopped).&lt;br&gt;<br>
Basically&nbsp;I&nbsp;want&nbsp;to&nbsp;know&nbsp;how&nbsp;I&nbsp;can&nbsp;start&nbsp;the&nbsp;client&nbsp;without&nbsp;running&nbsp;reactor.run()&lt;br&gt;&lt;br&gt;Thanks&nbsp;in&nbsp;Advance!!&lt;br&gt;Anshul&lt;br&gt;<br>

</tt>
