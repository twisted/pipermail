from twisted.trial import unittest, util
from arc_twistw import getApplication

class TestApplication(unittest.TestCase):

    def testLoadApplicationFromZip(self):
        import os, os.path, zipfile
        src = ["from twisted.application import service\n",
               "application = service.Application('hello')\n"]

        appname = '_tempapptest.py'
        zipname = '_tempcompressed.zip'
        cwd = os.getcwd()
        appfile = os.path.join(cwd,appname)
        myzipfile = os.path.join(cwd,zipname)
        
        self.assert_(not os.access(appfile, os.F_OK))
        self.assert_(not os.access(myzipfile, os.F_OK))
        
        f = file(appfile, 'w')
        f.writelines(src)
        f.close()
        
        zip = zipfile.PyZipFile(myzipfile, 'w', zipfile.ZIP_DEFLATED)
        zip.writepy(appfile)
        zip.close()
        
        config = {'file': None, 'xml': None, 'source': None, 'python':'_tempapptest', 'zipfile':myzipfile}
        a1 = getApplication(config, None)
        self.assertEqual(service.IService(a1).name, "hello")
