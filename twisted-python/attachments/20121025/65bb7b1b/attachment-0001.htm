<tt>
Hi!&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;am&nbsp;learning&nbsp;to&nbsp;develop&nbsp;TDD&nbsp;way.&nbsp;I&nbsp;want&nbsp;to&nbsp;create&nbsp;a&nbsp;server&nbsp;that&nbsp;understands&nbsp;PB&nbsp;protocol.&nbsp;Initially&nbsp;I&nbsp;thought&nbsp;it&nbsp;would&nbsp;be&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;avoid&nbsp;real&nbsp;network&nbsp;connections&nbsp;in&nbsp;my&nbsp;tests,&nbsp;so&nbsp;I&nbsp;tried&nbsp;to&nbsp;use&nbsp;`proto_helpers.StringTransport`:&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;----------&lt;/div&gt;&lt;div&gt;&lt;div&gt;import&nbsp;cStringIO&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.spread&nbsp;import&nbsp;pb&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.trial&nbsp;import&nbsp;unittest&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.test&nbsp;import&nbsp;proto_helpers&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;<br>
class&nbsp;Document(pb.Root):&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;remote_convert(self,&nbsp;props):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.props&nbsp;=&nbsp;props&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;class&nbsp;DocTestCase(unittest.TestCase):&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;def&nbsp;setUp(self):&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;set&nbsp;up&nbsp;server&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.doc&nbsp;=&nbsp;Document()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;factory&nbsp;=&nbsp;pb.PBServerFactory(self.doc)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker&nbsp;=&nbsp;factory.buildProtocol((&amp;#39;127.0.0.1&amp;#39;,&nbsp;0))&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;tr&nbsp;=&nbsp;proto_helpers.StringTransport()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.makeConnection(tr)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;this&nbsp;is&nbsp;what&nbsp;a&nbsp;client&nbsp;sends&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.props&nbsp;=&nbsp;{&amp;#39;name&amp;#39;:&nbsp;&amp;#39;MyDoc&amp;#39;,&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;#39;path&amp;#39;:&nbsp;&amp;#39;/path/&amp;#39;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;prepare&nbsp;data&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;serialized_props&nbsp;=&nbsp;self.broker.serialize(self.props)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;msg&nbsp;=&nbsp;(&amp;#39;message&amp;#39;,&nbsp;1,&nbsp;&amp;#39;root&amp;#39;,&nbsp;&amp;#39;convert&amp;#39;,&nbsp;1,&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [&amp;#39;tuple&amp;#39;,&nbsp;serialized_props],&nbsp;[&amp;#39;dictionary&amp;#39;])&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;io&nbsp;=&nbsp;cStringIO.StringIO()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker._encode(msg,&nbsp;io.write)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.chunk&nbsp;=&nbsp;io.getvalue()&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;test_convert(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;#&nbsp;data&nbsp;arrived&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.dataReceived(self.chunk)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.assertEqual(self.props,&nbsp;self.doc.props)&lt;/div&gt;&lt;/div&gt;<br>
&lt;div&gt;----------&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;However,&nbsp;`Document.remote_convert`&nbsp;is&nbsp;never&nbsp;executed&nbsp;so&nbsp;the&nbsp;test&nbsp;above&nbsp;fails.&nbsp;After&nbsp;debugging&nbsp;I&nbsp;discovered&nbsp;that&nbsp;`Broker._encode`&nbsp;produces&nbsp;different&nbsp;results&nbsp;depending&nbsp;on&nbsp;whether&nbsp;`self.broker.makeConnection(tr)`&nbsp;is&nbsp;called&nbsp;or&nbsp;not.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;And&nbsp;I&nbsp;created&nbsp;a&nbsp;test&nbsp;case&nbsp;that&nbsp;shows&nbsp;a&nbsp;difference. Here&nbsp;`test_convert1`&nbsp;succeeds&nbsp;while&nbsp;`test_convert2`&nbsp;fails:&lt;/div&gt;&lt;div&gt;----------&lt;/div&gt;&lt;div&gt;&lt;div&gt;class&nbsp;DocTestCase(unittest.TestCase):&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp;def&nbsp;setUp(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.doc&nbsp;=&nbsp;Document()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;factory&nbsp;=&nbsp;pb.PBServerFactory(self.doc)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker&nbsp;=&nbsp;factory.buildProtocol((&amp;#39;127.0.0.1&amp;#39;,&nbsp;0))&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.props&nbsp;=&nbsp;{&amp;#39;name&amp;#39;:&nbsp;&amp;#39;MyDoc&amp;#39;,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&amp;#39;path&amp;#39;:&nbsp;&amp;#39;/path/&amp;#39;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;serialized_props&nbsp;=&nbsp;self.broker.serialize(self.props)&lt;/div&gt;&lt;div&gt;<br>
 &nbsp; &nbsp; &nbsp; &nbsp;self.msg&nbsp;=&nbsp;(&amp;#39;message&amp;#39;,&nbsp;1,&nbsp;&amp;#39;root&amp;#39;,&nbsp;&amp;#39;convert&amp;#39;,&nbsp;1,&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[&amp;#39;tuple&amp;#39;,&nbsp;serialized_props],&nbsp;[&amp;#39;dictionary&amp;#39;])&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;test_convert1(self):&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.currentDialect&nbsp;=&nbsp;&amp;#39;pb&amp;#39;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.setPrefixLimit(64)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.transport&nbsp;=&nbsp;proto_helpers.StringTransport()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;io&nbsp;=&nbsp;cStringIO.StringIO()&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker._encode(self.msg,&nbsp;io.write)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.dataReceived(io.getvalue())&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.assertEqual(self.props,&nbsp;self.doc.props)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;test_convert2(self):&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;a&nbsp;href=&quot;http://self.tr&quot;&gt;self.tr&lt;/a&gt;&nbsp;=&nbsp;proto_helpers.StringTransport()&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.makeConnection(&lt;a&nbsp;href=&quot;http://self.tr&quot;&gt;self.tr&lt;/a&gt;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;io&nbsp;=&nbsp;cStringIO.StringIO()&lt;/div&gt;<br>
&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker._encode(self.msg,&nbsp;io.write)&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.broker.dataReceived(io.getvalue())&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;self.assertEqual(self.props,&nbsp;self.doc.props)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;----------&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;wonder&nbsp;what&nbsp;causes&nbsp;this&nbsp;behavior&nbsp;and,&nbsp;in&nbsp;general,&nbsp;if&nbsp;`StringTransport`&nbsp;is&nbsp;suitable&nbsp;for&nbsp;testing&nbsp;PB&nbsp;protocol.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks&nbsp;in&nbsp;advance.&nbsp;For&nbsp;your&nbsp;convenience&nbsp;I&nbsp;attached&nbsp;files&nbsp;with&nbsp;these&nbsp;test&nbsp;cases.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;--&nbsp;&lt;br&gt;with&nbsp;regards,&lt;br&gt;Maxim&lt;br&gt;<br>
&lt;/div&gt;<br>

</tt>
