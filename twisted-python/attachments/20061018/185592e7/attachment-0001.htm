<tt>
&lt;br&gt;Can&nbsp;anybody&nbsp;provide&nbsp;a&nbsp;an&nbsp;example&nbsp;on&nbsp;how&nbsp;I&nbsp;would&nbsp;best&nbsp;send&nbsp;&lt;br&gt;a&nbsp;data&nbsp;structure&nbsp;(i.e.&nbsp;an&nbsp;ElemenTree&nbsp;from&nbsp;elementtree)&nbsp;over&nbsp;from&lt;br&gt;a&nbsp;server&nbsp;to&nbsp;a&nbsp;client&nbsp;process.&nbsp;I&nbsp;followed&nbsp;somewhat&nbsp;the&nbsp;example&nbsp;in&lt;br&gt;the&nbsp;documentation&nbsp;and&nbsp;used&nbsp;the&nbsp;perspective&nbsp;broker&nbsp;&amp;quot;pb&amp;quot;&nbsp;to&nbsp;send<br>
&lt;br&gt;an&nbsp;&amp;quot;simple&amp;quot;&nbsp;structure&nbsp;(some&nbsp;class&nbsp;with&nbsp;simple&nbsp;members)&lt;br&gt;&lt;br&gt;When&nbsp;I&nbsp;changed&nbsp;to&nbsp;a&nbsp;more&nbsp;complex&nbsp;class&nbsp;definition,&nbsp;I&nbsp;obviously&nbsp;got&lt;br&gt;an&nbsp;InsecureJelly&nbsp;exception.&nbsp;&lt;br&gt;&lt;br&gt;I'm&nbsp;sure&nbsp;this&nbsp;question&nbsp;must&nbsp;have&nbsp;come&nbsp;up&nbsp;a&nbsp;number&nbsp;of&nbsp;times.&nbsp;I'm&nbsp;new<br>
&lt;br&gt;in&nbsp;using&nbsp;twisted&nbsp;and&nbsp;not&nbsp;everything&nbsp;is&nbsp;so&nbsp;obvious&nbsp;at&nbsp;the&nbsp;beginning&nbsp;to&nbsp;me&nbsp;:-(&lt;br&gt;&lt;br&gt;Many&nbsp;thanks&nbsp;for&nbsp;the&nbsp;help&lt;br&gt;&lt;br&gt;Franz&lt;br&gt;&lt;br&gt;Attached&nbsp;is&nbsp;the&nbsp;sample&nbsp;code&nbsp;I&nbsp;used:&lt;br&gt;&lt;br&gt;sending&nbsp;test1&nbsp;--&amp;gt;&nbsp;OK&lt;br&gt;sending&nbsp;test2&nbsp;--&amp;gt;&nbsp;InsecureJelly&nbsp;exception<br>
&lt;br&gt;&lt;br&gt;------&amp;nbsp;&amp;nbsp;&nbsp;pbsimple.py&nbsp;(server)&nbsp;-------&lt;br&gt;from&nbsp;twisted.spread&nbsp;import&nbsp;pb,&nbsp;jelly&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;&lt;br&gt;class&nbsp;test:&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;__init__(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;x&nbsp;=&nbsp;3.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;y&nbsp;=&nbsp;4.&lt;br&gt;&lt;br&gt;class&nbsp;Bag:&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;setContent(self,content):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.content&nbsp;=&nbsp;content&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;printContent(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;My&nbsp;data&nbsp;is&amp;quot;,&nbsp;self.content&lt;br&gt;&lt;br&gt;class&nbsp;CopyBag(Bag,&nbsp;pb.Copyable):&lt;br&gt;&amp;nbsp;&nbsp;pass&lt;br&gt;&lt;br&gt;class&nbsp;Sender(pb.Root):&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;bag):&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.bag&nbsp;=&nbsp;bag&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;remote_sendBag(self,&nbsp;remote):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.remote&nbsp;=&nbsp;remote&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d&nbsp;=&nbsp;remote.callRemote(&amp;quot;takeBag&amp;quot;,&nbsp;self.bag)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d.addCallback(self.ok).addErrback(self.notOk)&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;ok(self,&nbsp;response):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;info:&nbsp;%s&amp;quot;&nbsp;%&nbsp;response&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d&nbsp;=&nbsp;self.remote.callRemote(&amp;quot;finishTransfer&amp;quot;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d.addErrback(self.notOk)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;None&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;notOk(self,&nbsp;failure):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;failure.type&nbsp;==&nbsp;jelly.InsecureJelly<br>
:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;error:&nbsp;InsecureJelly&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;elif&nbsp;failure.type&nbsp;==&nbsp;pb.PBConnectionLost:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;info:&nbsp;data&nbsp;transfer&nbsp;finished&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;failure&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;None&lt;br&gt;&lt;br&gt;def&nbsp;main():<br>
&lt;br&gt;&amp;nbsp;&nbsp;from&nbsp;pbsimple&nbsp;import&nbsp;CopyBag&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;icae&nbsp;=&nbsp;iCAEconfig()&lt;br&gt;&amp;nbsp;&nbsp;bag&nbsp;=&nbsp;CopyBag()&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;bag.setContent('simple&nbsp;data')&nbsp;#&nbsp;--&amp;gt;&nbsp;OK&lt;br&gt;&amp;nbsp;&nbsp;#bag.setContent(test())&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#&nbsp;--&amp;gt;&nbsp;InsecureJelly&lt;br&gt;&amp;nbsp;&nbsp;sender&nbsp;=&nbsp;Sender(bag)&lt;br&gt;<br>
&lt;br&gt;&amp;nbsp;&nbsp;factory&nbsp;=&nbsp;pb.PBServerFactory(sender)&lt;br&gt;&amp;nbsp;&nbsp;reactor.listenTCP(8789,&nbsp;factory)&lt;br&gt;&amp;nbsp;&nbsp;reactor.run()&lt;br&gt;&lt;br&gt;if&nbsp;__name__&nbsp;==&nbsp;'__main__':&lt;br&gt;&amp;nbsp;&nbsp;main()&lt;br&gt;&lt;br&gt;-----------------------------&lt;br&gt;&lt;br&gt;------------&amp;nbsp;&nbsp;pbsimleclient.py&amp;nbsp;&nbsp;-----------------<br>
&lt;br&gt;&lt;br&gt;from&nbsp;twisted.spread&nbsp;import&nbsp;pb&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;from&nbsp;twisted.python&nbsp;import&nbsp;util&lt;br&gt;&lt;br&gt;from&nbsp;pbsimple&nbsp;import&nbsp;Bag,&nbsp;CopyBag&lt;br&gt;&lt;br&gt;class&nbsp;ReceiverBag(Bag,pb.RemoteCopy):&lt;br&gt;&amp;nbsp;&nbsp;pass&lt;br&gt;&lt;br&gt;pb.setUnjellyableForClass<br>
(CopyBag,&nbsp;ReceiverBag)&lt;br&gt;&lt;br&gt;class&nbsp;Receiver(pb.Referenceable):&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;remote_takeBag(self,&nbsp;bag):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.bag&nbsp;=&nbsp;bag&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;&amp;quot;data&nbsp;arrived&nbsp;safe&nbsp;and&nbsp;sound&amp;quot;&nbsp;#&nbsp;positive&nbsp;acknowledgement&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;remote_finishTransfer(self):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;got&nbsp;bag:&amp;quot;,&nbsp;self.bag&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;reactor.stop()&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;def&nbsp;requestBag(self,remote):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;print&nbsp;&amp;quot;asking&nbsp;server&nbsp;for&nbsp;sending&nbsp;the&nbsp;data&nbsp;bag&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;remote.callRemote(&amp;quot;sendBag&amp;quot;,self)&lt;br&gt;<br>
&lt;br&gt;def&nbsp;getContentFromServer():&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;receiver&nbsp;=&nbsp;Receiver()&lt;br&gt;&amp;nbsp;&nbsp;factory&nbsp;=&nbsp;pb.PBClientFactory()&lt;br&gt;&amp;nbsp;&nbsp;reactor.connectTCP(&amp;quot;localhost&amp;quot;,&nbsp;8789,&nbsp;factory,30)&lt;br&gt;&amp;nbsp;&nbsp;d&nbsp;=&nbsp;factory.getRootObject()&lt;br&gt;&amp;nbsp;&nbsp;d.addCallback(receiver.requestBag<br>
)&lt;br&gt;&amp;nbsp;&nbsp;reactor.run()&lt;br&gt;&amp;nbsp;&nbsp;return&nbsp;receiver.bag.content&lt;br&gt;&lt;br&gt;if&nbsp;__name__&nbsp;==&nbsp;'__main__':&lt;br&gt;&amp;nbsp;&nbsp;print&nbsp;getContentFromServer()&lt;br&gt;&lt;br&gt;---------------------------------------------------------&lt;br&gt;&lt;br&gt;<br>

</tt>
