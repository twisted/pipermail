import pwd,os
from twisted.web import resource, error
from twisted.protocols import http
from twisted.web.distrib import ResourceSubscription

class MyNameVirtualHost(resource.Resource):
    """I am a resource which represents named virtual hosts.
    """

    def __init__(self):
        """Initialize.
        """
        resource.Resource.__init__(self)
        self.users = {}

    def _getResourceForRequest(self, request):
        #username = request.getHeader('host').split(".")[0]
        host=request.getHeader('host')
        myhosts={'vhost1': 'lordvan',
                 'vhost1.home.lordvan.com': 'lordvan'}
        if myhosts.has_key(host):
            username=myhosts[host]
            #print 'host mapped to user %s' % (username)
        else:
            username='lordvan'
            #print 'fallback to user %s' % (username)
            
        if self.users.has_key(username):
            return self.users[username]
        try:
            pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell \
                     = pwd.getpwnam(username)
        except KeyError:
            return error.ErrorPage(http.NOT_FOUND,
                                   "No Such User",
                                   "The user %s was not found on this system." %
                                   repr(username))
        twistdsock = os.path.join(pw_dir, ".twistd-web-pb")
        rs = ResourceSubscription('unix',twistdsock)
        self.users[username] = rs
        return rs

    def render(self, request):
        """Implementation of resource.Resource's render method.
        """
        resrc = self._getResourceForRequest(request)
        return resrc.render(request)

    def getChild(self, path, request):
        """Implementation of resource.Resource's getChild method.
        """
        resrc = self._getResourceForRequest(request)
        # change path of request object
        request.path=request.path[:-1]
        request.postpath=request.uri.split('/')[1:]
        print request, request.path, request.postpath
        return resrc.getChildForRequest(request)

resource=MyNameVirtualHost()
