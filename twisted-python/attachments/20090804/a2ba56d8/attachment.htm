<tt>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Tue,&nbsp;Aug&nbsp;4,&nbsp;2009&nbsp;at&nbsp;2:28&nbsp;PM,&nbsp;Thalassery&nbsp;Koran&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:koranthala@gmail.com&quot;&gt;koranthala@gmail.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Hi,&lt;br&gt;<br>
&nbsp; &nbsp; I&nbsp;am&nbsp;creating&nbsp;the&nbsp;first&nbsp;GUI&nbsp;app&nbsp;(wxPython&nbsp;based)&nbsp;using&nbsp;Twisted.&lt;br&gt;<br>
&nbsp; &nbsp; I&nbsp;am&nbsp;facing&nbsp;an&nbsp;issue&nbsp;which&nbsp;I&nbsp;cannot&nbsp;seem&nbsp;to&nbsp;solve/understand&nbsp;due&lt;br&gt;<br>
to&nbsp;lack&nbsp;of&nbsp;trace&nbsp;or&nbsp;anything.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; I&nbsp;had&nbsp;a&nbsp;big&nbsp;app&nbsp;written&nbsp;on&nbsp;twisted&nbsp;and&nbsp;now&nbsp;I&nbsp;am&nbsp;creating&nbsp;a&nbsp;login&lt;br&gt;<br>
screen&nbsp;to&nbsp;the&nbsp;app.&lt;br&gt;<br>
&nbsp; &nbsp; The&nbsp;app&nbsp;used&nbsp;to&nbsp;work&nbsp;without&nbsp;any&nbsp;issues.&nbsp;I&nbsp;added&nbsp;the&nbsp;login&nbsp;screen&lt;br&gt;<br>
and&nbsp;the&nbsp;login&nbsp;screen&nbsp;comes&nbsp;up.&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp;But&nbsp;then&nbsp;everything&nbsp;freezes&nbsp;up.&nbsp;I&nbsp;have&nbsp;to&nbsp;force&nbsp;quit&nbsp;the&nbsp;python&lt;br&gt;<br>
application&nbsp;to&nbsp;get&nbsp;anything&nbsp;back.&nbsp;Can&nbsp;anyone&nbsp;help&nbsp;me&nbsp;solve&nbsp;it?&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; The&nbsp;code&nbsp;is&nbsp;as&nbsp;follows:&lt;br&gt;<br>
&lt;br&gt;<br>
import&nbsp;wx&lt;br&gt;<br>
import&nbsp;os&lt;br&gt;<br>
import&nbsp;logging&lt;br&gt;<br>
&lt;br&gt;<br>
from&nbsp;twisted.internet&nbsp;import&nbsp;wxreactor&lt;br&gt;<br>
wxreactor.install()&lt;br&gt;<br>
from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&nbsp;#Called&nbsp;only&nbsp;after&nbsp;wxreactor.install()&lt;br&gt;<br>
from&nbsp;twisted.internet.task&nbsp;import&nbsp;LoopingCall&lt;br&gt;<br>
&lt;br&gt;<br>
import&nbsp;clientapp&lt;br&gt;<br>
&lt;br&gt;<br>
def&nbsp;opj(path):&lt;br&gt;<br>
&nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Convert&nbsp;paths&nbsp;to&nbsp;the&nbsp;platform-specific&nbsp;separator&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;br&gt;<br>
&nbsp; &nbsp; st&nbsp;=&nbsp;apply(os.path.join,&nbsp;tuple(path.split(&amp;#39;/&amp;#39;)))&lt;br&gt;<br>
&nbsp; &nbsp; if&nbsp;path.startswith(&amp;#39;/&amp;#39;):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; st&nbsp;=&nbsp;&amp;#39;/&amp;#39;&nbsp;+&nbsp;st&lt;br&gt;<br>
&nbsp; &nbsp; return&nbsp;st&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
class&nbsp;APPApp(wx.App):&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;OnInit(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.frame&nbsp;=&nbsp;APPFrame(None,&nbsp;-1,&nbsp;&amp;quot;&nbsp;APP&nbsp;Login&amp;quot;,&nbsp;size=(200,&nbsp;150))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.panel&nbsp;=&nbsp;APPPanel(self.frame,-1)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; client&nbsp;=&nbsp;clientapp.setup_app()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp;=&nbsp;LoopingCall(client.run)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; call.start(.51)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;True&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
def&nbsp;main():&lt;br&gt;<br>
&nbsp; &nbsp; app&nbsp;=&nbsp;APPApp(0)&lt;br&gt;<br>
&nbsp; &nbsp; reactor.registerWxApp(app)&lt;br&gt;<br>
&nbsp; &nbsp; try:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; reactor.run()&lt;br&gt;<br>
&nbsp; &nbsp; except&nbsp;StandardError:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; raise&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
class&nbsp;APPPanel(wx.Panel):&lt;br&gt;<br>
&nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;APP&nbsp;GUI&nbsp;PANEL&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; The&nbsp;panel&nbsp;in&nbsp;which&nbsp;the&nbsp;user&nbsp;name&nbsp;and&nbsp;password&nbsp;is&nbsp;typed.&lt;br&gt;<br>
&nbsp; &nbsp; @var&nbsp;ID_LOGIN:&nbsp;Login&nbsp;buttons&nbsp;id.&nbsp;When&nbsp;this&nbsp;button&nbsp;is&nbsp;clicked,&nbsp;the&nbsp;data&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; is&nbsp;stored&nbsp;for&nbsp;logging.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&lt;br&gt;<br>
&nbsp; &nbsp; ID_LOGIN&nbsp;=&nbsp;wx.NewId()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;__init__(self,&nbsp;parent,&nbsp;id):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.parent&nbsp;=&nbsp;parent&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; wx.Panel.__init__(self,&nbsp;parent,&nbsp;id,&nbsp;size=(200,150))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.quote&nbsp;=&nbsp;wx.StaticText(self,&nbsp;-1,&nbsp;&amp;quot;APP&nbsp;Login&amp;quot;,wx.Point(60,&nbsp;10))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; wx.StaticText(self,&nbsp;wx.ID_ANY,&nbsp;&amp;quot;User&nbsp;Name&nbsp;&amp;quot;,&nbsp;wx.Point(20,&nbsp;33))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; wx.StaticText(self,&nbsp;wx.ID_ANY,&nbsp;&amp;quot;Password&nbsp;&amp;quot;,&nbsp;wx.Point(20,&nbsp;58))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.usernameBox&nbsp;=&nbsp;wx.TextCtrl(self,&nbsp;wx.ID_ANY,&nbsp;&amp;quot;&amp;quot;,&lt;br&gt;<br>
wx.Point(80,&nbsp;31),&nbsp;wx.Size(100,&nbsp;wx.ID_ANY))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.usernameBox.SetFocus()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.passwordBox&nbsp;=&nbsp;wx.TextCtrl(self,&nbsp;wx.ID_ANY,&nbsp;&amp;quot;&amp;quot;,&lt;br&gt;<br>
wx.Point(80,&nbsp;56),&nbsp;wx.Size(100,&nbsp;wx.ID_ANY),&nbsp;style=wx.TE_PASSWORD)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.button&nbsp;=wx.Button(self,&nbsp;self.ID_LOGIN,&nbsp;&amp;quot;Login&amp;quot;,&nbsp;wx.Point(60,&nbsp;88))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; wx.EVT_BUTTON(parent,&nbsp;self.ID_LOGIN,&nbsp;self.on_login)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;on_login(self,&nbsp;event):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; username&nbsp;=&nbsp;self.usernameBox.GetString(0,&nbsp;128)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; password&nbsp;=&nbsp;self.passwordBox.GetString(0,&nbsp;128)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;username&nbsp;and&nbsp;password:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.parent.on_login_click(username,&nbsp;password)&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
class&nbsp;APPTaskBarIcon(wx.TaskBarIcon):&lt;br&gt;<br>
&nbsp; &nbsp; &amp;#39;&amp;#39;&amp;#39;&nbsp;TaskBar&nbsp;Icon&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; So&nbsp;that&nbsp;the&nbsp;application&nbsp;is&nbsp;always&nbsp;alive&nbsp;on&nbsp;the&nbsp;taskbar.&lt;br&gt;<br>
&nbsp; &nbsp; 3&nbsp;operations&nbsp;are&nbsp;possible,&nbsp;DoubleClick&nbsp;on&nbsp;the&nbsp;taskbar&nbsp;would&nbsp;bring&nbsp;up&nbsp;the&lt;br&gt;<br>
&nbsp; &nbsp; window,&nbsp;right&nbsp;click&nbsp;will&nbsp;bring&nbsp;up&nbsp;options&nbsp;to&nbsp;restore&nbsp;or&nbsp;exit&nbsp;the&nbsp;tool.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &amp;#39;&amp;#39;&amp;#39;&lt;br&gt;<br>
&nbsp; &nbsp; TBMENU_RESTORE&nbsp;=&nbsp;wx.NewId()&lt;br&gt;<br>
&nbsp; &nbsp; TBMENU_CLOSE&nbsp; &nbsp;=&nbsp;wx.NewId()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;__init__(self,&nbsp;frame):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; wx.TaskBarIcon.__init__(self)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.frame&nbsp;=&nbsp;frame&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;Set&nbsp;the&nbsp;image&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; icon&nbsp;=&nbsp;self.MakeIcon(self.frame.get_image())&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.SetIcon(icon,&nbsp;&amp;quot;APP&amp;quot;)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.imgidx&nbsp;=&nbsp;1&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;bind&nbsp;some&nbsp;events&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Bind(wx.EVT_TASKBAR_LEFT_DCLICK,&nbsp;self.OnTaskBarActivate)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Bind(wx.EVT_MENU,&nbsp;self.OnTaskBarActivate,&nbsp;id=self.TBMENU_RESTORE)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Bind(wx.EVT_MENU,&nbsp;self.OnTaskBarClose,&nbsp;id=self.TBMENU_CLOSE)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;CreatePopupMenu(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Right&nbsp;Click&nbsp;Popup&nbsp;Menu&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; This&nbsp;method&nbsp;is&nbsp;called&nbsp;by&nbsp;the&nbsp;base&nbsp;class&nbsp;when&nbsp;it&nbsp;needs&nbsp;to&nbsp;popup&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; the&nbsp;menu&nbsp;for&nbsp;the&nbsp;default&nbsp;EVT_RIGHT_DOWN&nbsp;event.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; menu&nbsp;=&nbsp;wx.Menu()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; menu.Append(self.TBMENU_RESTORE,&nbsp;&amp;quot;Restore&nbsp;Window&amp;quot;)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; menu.Append(self.TBMENU_CLOSE,&nbsp;&amp;quot;Exit&nbsp;APP&amp;quot;)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;menu&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;MakeIcon(self,&nbsp;img):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Return&nbsp;the&nbsp;generated&nbsp;Icon.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; This&nbsp;function&nbsp;is&nbsp;required&nbsp;because&nbsp;various&nbsp;platforms&nbsp;have&nbsp;different&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; requirements&nbsp;for&nbsp;the&nbsp;icon&nbsp;size.&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;&amp;quot;wxMSW&amp;quot;&nbsp;in&nbsp;wx.PlatformInfo:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; img&nbsp;=&nbsp;img.Scale(16,&nbsp;16)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; elif&nbsp;&amp;quot;wxGTK&amp;quot;&nbsp;in&nbsp;wx.PlatformInfo:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; img&nbsp;=&nbsp;img.Scale(22,&nbsp;22)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; icon&nbsp;=&nbsp;wx.IconFromBitmap(img.ConvertToBitmap()&nbsp;)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;icon&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;OnTaskBarActivate(self,&nbsp;evt):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &amp;#39;&amp;#39;&amp;#39;&nbsp;Activation&nbsp;code&nbsp;-&nbsp;say&nbsp;DoubleClick&nbsp;etc.&nbsp;It&nbsp;raises&nbsp;the&nbsp;window&nbsp;&amp;#39;&amp;#39;&amp;#39;&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;self.frame.IsIconized():&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.frame.Iconize(False)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;not&nbsp;self.frame.IsShown():&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.frame.Show(True)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.frame.Raise()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;OnTaskBarClose(self,&nbsp;evt):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &amp;#39;&amp;#39;&amp;#39;&nbsp;On&nbsp;right&nbsp;click&nbsp;and&nbsp;close,&nbsp;the&nbsp;frame&nbsp;itself&nbsp;is&nbsp;closed&nbsp;&amp;#39;&amp;#39;&amp;#39;&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; wx.CallAfter(self.frame.Close)&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
class&nbsp;APPFrame(wx.Frame):&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;__init__(self,&nbsp;parent,&nbsp;id,&nbsp;title,&nbsp;size=None):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; wx.Frame.__init__(self,&nbsp;parent,&nbsp;id,&nbsp;title,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size=size,&nbsp;pos=wx.Point(400,&nbsp;300))&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; icon&nbsp;=&nbsp;self.get_icon()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.SetIcon(icon)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.tbicon&nbsp;=&nbsp;APPTaskBarIcon(self)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Show(True)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Bind(wx.EVT_CLOSE,&nbsp;self.OnCloseWindow)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Bind(wx.EVT_ICONIZE,&nbsp;self.OnIconify)&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;on_login_click(self,&nbsp;username,&nbsp;password):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Hide()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;OnCloseWindow(self,&nbsp;event):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;self.tbicon&nbsp;is&nbsp;not&nbsp;None:&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.tbicon.Destroy()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; event.Skip()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;OnIconify(self,&nbsp;event):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; self.Hide()&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;get_image(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; img=&nbsp;wx.Image(opj(&amp;#39;client.ico&amp;#39;),&nbsp;wx.BITMAP_TYPE_ICO)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;img&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp; &nbsp; def&nbsp;get_icon(self):&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; img&nbsp;=&nbsp;self.get_image()&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; icon&nbsp;=&nbsp;wx.IconFromBitmap(img.ConvertToBitmap()&nbsp;)&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;icon&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
if&nbsp;__name__&nbsp;==&nbsp;&amp;#39;__main__&amp;#39;:&lt;br&gt;<br>
&nbsp; &nbsp; main()&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
--------------&lt;br&gt;<br>
If&nbsp;somebody&nbsp;can&nbsp;help&nbsp;me&nbsp;out,&nbsp;I&nbsp;would&nbsp;be&nbsp;much&nbsp;obliged.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;Well,&nbsp;it&amp;#39;s&nbsp;hard&nbsp;to&nbsp;say&nbsp;without&nbsp;looking&nbsp;at&nbsp;your&nbsp;Twisted&nbsp;code,&nbsp;but&nbsp;what&nbsp;exactly&nbsp;is&nbsp;the&nbsp;LoopingCall&nbsp;for? &nbsp;It&nbsp;seems&nbsp;like&nbsp;it&nbsp;would&nbsp;be&nbsp;run&nbsp;regardless&nbsp;of&nbsp;whether&nbsp;the&nbsp;user&nbsp;had&nbsp;logged&nbsp;in&nbsp;or&nbsp;not.&lt;br&gt;&lt;br&gt;<br>
I&amp;#39;m&nbsp;guessing,&nbsp;but&nbsp;maybe&nbsp;client.run()&nbsp;shouldn&amp;#39;t&nbsp;be&nbsp;run&nbsp;until&nbsp;you&nbsp;have&nbsp;a&nbsp;username&nbsp;and&nbsp;password?&lt;br&gt;&lt;br&gt;Might&nbsp;be&nbsp;a&nbsp;place&nbsp;to&nbsp;start&nbsp;looking,&nbsp;anyway. &nbsp;It&nbsp;looks&nbsp;like&nbsp;you&amp;#39;ve&nbsp;set&nbsp;things&nbsp;up&nbsp;properly&nbsp;in&nbsp;main()&nbsp;an&nbsp;App.OnInit(),&nbsp;but&nbsp;I&nbsp;haven&amp;#39;t&nbsp;worked&nbsp;with&nbsp;Twisted&nbsp;+&nbsp;wx&nbsp;in&nbsp;a&nbsp;while&nbsp;(pre-wxreactor),&nbsp;so&nbsp;I&amp;#39;m&nbsp;not&nbsp;100%&nbsp;sure...&lt;br&gt;<br>
&lt;br&gt;I&nbsp;guess&nbsp;it&nbsp;boils&nbsp;down&nbsp;to&nbsp;what&nbsp;exactly&nbsp;client.run()&nbsp;does...&lt;br&gt;&lt;br&gt;Kevin&nbsp;Horn&lt;br&gt;<br>

</tt>
