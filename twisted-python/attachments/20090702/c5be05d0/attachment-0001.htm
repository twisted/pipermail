<tt>
Let&nbsp;me&nbsp;start&nbsp;off&nbsp;by&nbsp;warning&nbsp;everyone&nbsp;that&nbsp;I&nbsp;am&nbsp;extremely&nbsp;new&nbsp;to&nbsp;twisted&nbsp;(I&amp;#39;ve&nbsp;been&nbsp;using&nbsp;it&nbsp;maybe&nbsp;a&nbsp;week)&nbsp;and&nbsp;it&amp;#39;s&nbsp;highly&nbsp;likely&nbsp;some&nbsp;things&nbsp;don&amp;#39;t&nbsp;work&nbsp;the&nbsp;way&nbsp;I&nbsp;think&nbsp;they&nbsp;should.&nbsp;Or,&nbsp;I&amp;#39;m&nbsp;just&nbsp;using&nbsp;them&nbsp;incorrectly.&lt;br&gt;<br>
&lt;br&gt;Some&nbsp;background&nbsp;on&nbsp;what&nbsp;I&amp;#39;m&nbsp;trying&nbsp;to&nbsp;accomplish:&lt;br&gt;&lt;br&gt;I&nbsp;have&nbsp;a&nbsp;client/server&nbsp;system&nbsp;that&nbsp;reads&nbsp;in&nbsp;data&nbsp;values&nbsp;from&nbsp;a&nbsp;file&nbsp;(anywhere&nbsp;between&nbsp;10k&nbsp;and&nbsp;1.5M,&nbsp;running&nbsp;every&nbsp;hour)&nbsp;and&nbsp;sends&nbsp;those&nbsp;off&nbsp;to&nbsp;a&nbsp;server&nbsp;for&nbsp;processing.&nbsp;Processing&nbsp;each&nbsp;value&nbsp;takes&nbsp;some&nbsp;variable&nbsp;amount&nbsp;of&nbsp;time&nbsp;and,&nbsp;given&nbsp;that&nbsp;I&nbsp;am&nbsp;doing&nbsp;this&nbsp;every&nbsp;hour,&nbsp;I&nbsp;need&nbsp;it&nbsp;to&nbsp;be&nbsp;as&nbsp;fast&nbsp;as&nbsp;possible,&nbsp;which&nbsp;is&nbsp;why&nbsp;I&nbsp;was&nbsp;drawn&nbsp;to&nbsp;the&nbsp;asynchronous&nbsp;nature&nbsp;of&nbsp;python.&nbsp;I&amp;#39;m&nbsp;using&nbsp;python&nbsp;because&nbsp;everything&nbsp;we&nbsp;do&nbsp;here&nbsp;is&nbsp;in&nbsp;python.&nbsp;I&nbsp;had&nbsp;the&nbsp;app&nbsp;working&nbsp;well&nbsp;with&nbsp;a&nbsp;single&nbsp;server,&nbsp;but&nbsp;I&nbsp;need&nbsp;to&nbsp;scale&nbsp;it&nbsp;out&nbsp;to&nbsp;multiple&nbsp;servers&nbsp;to&nbsp;get&nbsp;the&nbsp;processing&nbsp;time&nbsp;down.&nbsp;At&nbsp;first,&nbsp;I&nbsp;started&nbsp;writing&nbsp;my&nbsp;own&nbsp;distributedish&nbsp;app,&nbsp;which&nbsp;worked&nbsp;(more&nbsp;or&nbsp;less),&nbsp;but&nbsp;had&nbsp;a&nbsp;enough&nbsp;niggly&nbsp;issues&nbsp;that&nbsp;I&nbsp;started&nbsp;looking&nbsp;for&nbsp;something&nbsp;else.&nbsp;This&nbsp;morning&nbsp;I&nbsp;discovered&nbsp;the&nbsp;Perspective&nbsp;Broker&nbsp;and&nbsp;that&nbsp;seemed&nbsp;to&nbsp;be&nbsp;the&nbsp;solution&nbsp;I&nbsp;needed.&lt;br&gt;<br>
&lt;br&gt;The&nbsp;problems:&lt;br&gt;&lt;br&gt;Right&nbsp;now,&nbsp;for&nbsp;development&nbsp;and&nbsp;testing,&nbsp;I&nbsp;have&nbsp;three&nbsp;servers&nbsp;running&nbsp;on&nbsp;localhost&nbsp;on&nbsp;three&nbsp;ports.&nbsp;When&nbsp;I&nbsp;run&nbsp;my&nbsp;test&nbsp;code,&nbsp;it&nbsp;seems&nbsp;that&nbsp;each&nbsp;Perspective&nbsp;Broker&nbsp;runs&nbsp;sequentially,&nbsp;rather&nbsp;than&nbsp;concurrently.&nbsp;For&nbsp;example,&nbsp;if&nbsp;i&nbsp;watch&nbsp;the&nbsp;debugging&nbsp;output&nbsp;from&nbsp;the&nbsp;server,&nbsp;I&nbsp;see&nbsp;the&nbsp;following:&lt;br&gt;<br>
&lt;br&gt;server&nbsp;0&nbsp;processing&nbsp;dataval1&lt;br&gt;server&nbsp;0&nbsp;processing&nbsp;dataval2&lt;br&gt;server&nbsp;0&nbsp;processing&nbsp;dataval3&lt;br&gt;server&nbsp;0&nbsp;processing&nbsp;dataval4&lt;br&gt;server&nbsp;1&nbsp;processing&nbsp;dataval&lt;b&gt;5&lt;/b&gt;&lt;br&gt;server&nbsp;1&nbsp;processing&nbsp;dataval6&lt;br&gt;server&nbsp;1&nbsp;processing&nbsp;dataval7&lt;br&gt;<br>
server&nbsp;2&nbsp;processing&nbsp;dataval8&lt;br&gt;server&nbsp;2&nbsp;processing&nbsp;dataval9&lt;br&gt;server&nbsp;2&nbsp;processing&nbsp;dataval10&lt;br&gt;&lt;br&gt;My&nbsp;understanding&nbsp;is&nbsp;that&nbsp;the&nbsp;perspective&nbsp;brokers&nbsp;would&nbsp;work&nbsp;concurrently.&nbsp;Is&nbsp;that&nbsp;incorrect?&nbsp;My&nbsp;guess&nbsp;is&nbsp;that&nbsp;they&nbsp;should&nbsp;work&nbsp;concurrently&nbsp;and&nbsp;I&nbsp;am&nbsp;just&nbsp;doing&nbsp;something&nbsp;wrong&nbsp;in&nbsp;my&nbsp;code,&nbsp;due&nbsp;to&nbsp;my&nbsp;very,&nbsp;very&nbsp;limited&nbsp;understanding&nbsp;of&nbsp;how&nbsp;they&nbsp;work.&nbsp;Well,&nbsp;how&nbsp;much&nbsp;of&nbsp;twisted&nbsp;works,&nbsp;really.&lt;br&gt;<br>
&lt;br&gt;Below&nbsp;is&nbsp;my&nbsp;the&nbsp;relevant&nbsp;code&nbsp;for&nbsp;the&nbsp;client&nbsp;(I&amp;#39;ve&nbsp;taken&nbsp;out&nbsp;code&nbsp;that&nbsp;just&nbsp;deals&nbsp;with&nbsp;prepping&nbsp;data&nbsp;or&nbsp;debugging).&nbsp;Please&nbsp;keep&nbsp;in&nbsp;mind&nbsp;that&nbsp;this&nbsp;is&nbsp;mostly&nbsp;testing&nbsp;code,&nbsp;while&nbsp;I&nbsp;get&nbsp;a&nbsp;better&nbsp;understanding&nbsp;of&nbsp;how&nbsp;perspective&nbsp;brokers&nbsp;work&nbsp;and&nbsp;was&nbsp;cobbled&nbsp;together&nbsp;from&nbsp;examples&nbsp;and&nbsp;docs&nbsp;found&nbsp;online.&lt;br&gt;<br>
&lt;br&gt;CLIENT&nbsp;CODE:&lt;br&gt;&lt;br&gt;import&nbsp;sys,&nbsp;os&lt;br&gt;from&nbsp;twisted.spread&nbsp;import&nbsp;pb&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;import&nbsp;Queue&lt;br&gt;&lt;br&gt;MY_PORT&nbsp;=&nbsp;49981&lt;br&gt;SERVERS&nbsp;=&nbsp;3&lt;br&gt;&lt;br&gt;class&nbsp;Client:&lt;br&gt;   &nbsp;def&nbsp;__init__(self,&nbsp;host):&lt;br&gt;<br>
       &nbsp;self.out_count&nbsp;=&nbsp;0&lt;br&gt;       &nbsp;self.in_count&nbsp;=&nbsp;0&lt;br&gt;       &nbsp;self.total&nbsp;=&nbsp;0&lt;br&gt;       &nbsp;self.in_file&nbsp;=&nbsp;open(sys.argv[1],&nbsp;&amp;#39;rb&amp;#39;)&lt;br&gt;       &nbsp;self.out_file&nbsp;=&nbsp;open(sys.argv[2],&nbsp;&amp;#39;wb&amp;#39;)&lt;br&gt;&lt;br&gt;       &nbsp;#&nbsp;Create&nbsp;data&nbsp;queues&nbsp;for&nbsp;each&nbsp;server&nbsp;so&nbsp;that&nbsp;we&nbsp;can&nbsp;send&nbsp;data&nbsp;to&nbsp;each&nbsp;server&nbsp;&lt;br&gt;<br>
       &nbsp;self.queues&nbsp;=&nbsp;[]&lt;br&gt;       &nbsp;for&nbsp;server&nbsp;in&nbsp;range(0,SERVERS):&lt;br&gt;           &nbsp;self.queues.append(Queue.Queue())&lt;br&gt;&lt;br&gt;       &nbsp;#&nbsp;Populate&nbsp;queues&nbsp;with&nbsp;data&lt;br&gt;       &nbsp;pos&nbsp;=&nbsp;0&lt;br&gt;       &nbsp;for&nbsp;dv&nbsp;in&nbsp;self.in_file:&lt;br&gt;           &nbsp;dv&nbsp;=&nbsp;dv.strip()&lt;br&gt;<br>
           &nbsp;self.queues[pos&nbsp;%&nbsp;len(self.queues)].put(dv)&lt;br&gt;           &nbsp;pos&nbsp;+=&nbsp;1&lt;br&gt;&lt;br&gt;       &nbsp;#&nbsp;Conenct&nbsp;to&nbsp;servers&lt;br&gt;       &nbsp;print&nbsp;&amp;#39;Connecting&nbsp;to&nbsp;Servers...&amp;#39;&lt;br&gt;       &nbsp;for&nbsp;server&nbsp;in&nbsp;range(0,&nbsp;COUNT):&lt;br&gt;           &nbsp;factory&nbsp;=&nbsp;pb.PBClientFactory()&lt;br&gt;<br>
           &nbsp;reactor.connectTCP(host,&nbsp;server&nbsp;+&nbsp;MY_PORT,&nbsp;factory)&lt;br&gt;           &nbsp;factory.getRootObject().addCallbacks(self.connected,&nbsp;self.connect_failure,&nbsp;[self.queues[server]])&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;connected(self,&nbsp;perspective,&nbsp;queue):&lt;br&gt;<br>
       &nbsp;print&nbsp;&amp;quot;connected&amp;quot;&lt;br&gt;       &nbsp;while&nbsp;1:&lt;br&gt;           &nbsp;try:&lt;br&gt;               &nbsp;dv&nbsp;=&nbsp;queue.get_nowait()&lt;br&gt;           &nbsp;except&nbsp;Queue.Empty:&lt;br&gt;               &nbsp;break&lt;br&gt;           &nbsp;else:&lt;br&gt;               &nbsp;perspective.callRemote(&amp;#39;process_data&amp;#39;,&nbsp;dv).addCallbacks(self.success,&nbsp;self.lookup_failure)&lt;br&gt;<br>
&lt;br&gt;   &nbsp;def&nbsp;success(self,&nbsp;result):&lt;br&gt;       &nbsp;print&nbsp;result&lt;br&gt;       &nbsp;dv,&nbsp;answer&nbsp;=&nbsp;result&lt;br&gt;       &nbsp;self.in_count&nbsp;+=&nbsp;1&lt;br&gt;       &nbsp;self.out_file.write(&amp;#39;%s,%s\n&amp;#39;&nbsp;%&nbsp;(dv,&nbsp;answer))&lt;br&gt;       &nbsp;if(self.in_count&nbsp;==&nbsp;self.out_count):&lt;br&gt;<br>
           &nbsp;self.out_file.close()&lt;br&gt;           &nbsp;reactor.stop()&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;connect_failure(self,&nbsp;_):&lt;br&gt;       &nbsp;print&nbsp;&amp;quot;Remote&nbsp;connect&nbsp;failure&amp;quot;&lt;br&gt;       &nbsp;self.out_file.close()&lt;br&gt;       &nbsp;reactor.stop()&lt;br&gt;&lt;br&gt;<br>
   &nbsp;def&nbsp;lookup_failure(self,&nbsp;_):&lt;br&gt;       &nbsp;print&nbsp;&amp;quot;Remote&nbsp;lookup&nbsp;failure&amp;quot;&lt;br&gt;       &nbsp;self.out_file.close()&lt;br&gt;       &nbsp;reactor.stop()&lt;br&gt;&lt;br&gt;Client(&amp;quot;127.0.0.1&amp;quot;)&lt;br&gt;reactor.run()&lt;br&gt;&lt;br&gt;END&nbsp;CLIENT&nbsp;CODE&lt;br&gt;<br>
&lt;br&gt;Any&nbsp;help&nbsp;anyone&nbsp;can&nbsp;provide&nbsp;will&nbsp;be&nbsp;greatly&nbsp;appreciated.&nbsp;I&nbsp;have&nbsp;another&nbsp;question,&nbsp;too,&nbsp;but&nbsp;it&nbsp;can&nbsp;wait&nbsp;till&nbsp;this&nbsp;one&nbsp;is&nbsp;solved,&nbsp;since,&nbsp;for&nbsp;all&nbsp;I&nbsp;know,&nbsp;whatever&nbsp;is&nbsp;causing&nbsp;this&nbsp;problem&nbsp;may&nbsp;be&nbsp;causing&nbsp;the&nbsp;other&nbsp;one.&lt;br&gt;<br>
&lt;br&gt;Sean&nbsp;M&nbsp;Hollingsworth&lt;br&gt;<br>

</tt>
