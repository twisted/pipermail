<tt>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;i&nbsp;think&nbsp;Factory&nbsp;is&nbsp;not&nbsp;to&nbsp;the&nbsp;point,just&nbsp;concerned&nbsp;with&nbsp;its&nbsp;concept,factory&nbsp;&lt;br&gt;should&nbsp;only&nbsp;take&nbsp;care&nbsp;of&nbsp;producing&nbsp;proper&nbsp;protocol&nbsp;instance.i&nbsp;can't&nbsp;see&nbsp;any&nbsp;clue&nbsp;&lt;br&gt;of&nbsp;protocol&nbsp;context&nbsp;in&nbsp;the&nbsp;defintion&nbsp;of&nbsp;factory.so&nbsp;the&nbsp;boudary&nbsp;of&nbsp;factory&nbsp;is&nbsp;loom,i&nbsp;don't<br>
&lt;br&gt;like&nbsp;it.or&nbsp;on&nbsp;other&nbsp;hand,we&nbsp;can&nbsp;it&nbsp;can&nbsp;be&nbsp;categoried&nbsp;into&nbsp;abstract&nbsp;factroy,then&nbsp;i&nbsp;proprose&lt;br&gt;following&nbsp;refraction.&lt;br&gt;&lt;br&gt;class&nbsp;ProtoAbsFactory:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;implements(interfaces.IProtocolFactory)&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;protocol=None<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;context=None&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;numProtos=0&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;buildProtocol(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;buildContext(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&lt;br&gt;class&nbsp;ProtoContext:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;doStart(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;doStop(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass&lt;br&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&lt;br&gt;class&nbsp;ClientProtoContext(ProtoContext):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;startedCnnecting(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;clientConnectionFailed(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;clientConnectionLost(self):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass&lt;br&gt;&lt;br&gt;class&nbsp;ReconnectingClientProtoContext(ClientProtoContext):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;clientConnectoionFailed(self,connector,reason):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.connector=connector&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.retry()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;clientConnectionLost(self,connector,reason):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.connector=connector&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.retry()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;retry(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.connector.connect()&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;by&nbsp;introducing&nbsp;context,we&nbsp;make&nbsp;solution&nbsp;for&nbsp;some&nbsp;situation&nbsp;&lt;br&gt;very&nbsp;simple,just&nbsp;like&nbsp;http,since&nbsp;it&nbsp;is&nbsp;a&nbsp;stateless&nbsp;,we&nbsp;have&nbsp;to&nbsp;bring<br>
&lt;br&gt;in&nbsp;session&nbsp;to&nbsp;store&nbsp;state&nbsp;information&nbsp;during&nbsp;the&nbsp;communication,here&nbsp;by&lt;br&gt;refining&nbsp;the&nbsp;context&nbsp;,we&nbsp;can&nbsp;easily&nbsp;achieve&nbsp;it<br>

</tt>
