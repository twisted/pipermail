from twisted.python import log
log.discardLogs()
from twisted.web.woven import template
from twisted.python import domhelpers
from twisted.spread import pb
from twisted.internet import reactor
from sys import stdout

class StatusResource(template.DOMTemplate):
    """ DOM template for reporting APT status """
    
    templateFile = "aptstatus.html"
    result = None
    
    def __init__(self):
	template.DOMTemplate.__init__(self)
	
    def connect(self):
	stdout.write("\nconnect\n")
	return pb.connect("localhost",pb.portno,"guest","guest","twisted.apt","guest",30)
    
    def setResult(self,result):
	stdout.write("\nsetResult\n")
	self.result = result
	
    def failure(self,error):
	stdout.write("\nfailure\n")
	stdout.write(error)
	reactor.stop()
	
    def readStatus(self,perspective):
	stdout.write("\nreadStatus\n")
	perspective.callRemote('getStatus').addCallbacks(self.setResult,self.failure)
    	
    def getStatus(self):
	stdout.write("\ngetStatus\n")
	self.connect().addCallbacks(self.readStatus,self.failure)
	
    def factory_getStatus(self,request,node):
	domhelpers.clearNode(node)
	self.getStatus()
	node.appendChild(self.d.createTextNode("%s" % self.result))
	return node
    
