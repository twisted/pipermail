<tt>
See&nbsp;response&nbsp;below.&lt;br&gt;&lt;br&gt;<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;7/11/05,&nbsp;&lt;b&nbsp;class=&quot;gmail_sendername&quot;&gt;Jp&nbsp;Calderone&lt;/b&gt;&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:exarkun@divmod.com&quot;&gt;exarkun@divmod.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;/span&gt;&nbsp;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;On&nbsp;Mon,&nbsp;11&nbsp;Jul&nbsp;2005&nbsp;10:52:14&nbsp;-0500,&nbsp;Justin&nbsp;Johnson&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:justinjohnson@gmail.com&quot;&gt;justinjohnson@gmail.com<br>
&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;&amp;gt;I&nbsp;am&nbsp;attempting&nbsp;to&nbsp;add&nbsp;spawnProcess&nbsp;to&nbsp;iocpreactor.&nbsp;In&nbsp;order&nbsp;to&nbsp;begin&nbsp;this&lt;br&gt;&amp;gt;task&nbsp;I've&nbsp;had&nbsp;to&nbsp;do&nbsp;a&nbsp;lot&nbsp;of&nbsp;reading&nbsp;on&nbsp;Windows&nbsp;network&nbsp;programming,&lt;br&gt;&amp;gt;specifically&nbsp;the&nbsp;various&nbsp;Windows&nbsp;I/O&nbsp;methods,&nbsp;to&nbsp;attempt&nbsp;to&nbsp;understand&nbsp;what<br>
&lt;br&gt;&amp;gt;win32eventreactor&nbsp;and&nbsp;iocpreactor&nbsp;are&nbsp;doing,&nbsp;and&nbsp;also&nbsp;just&nbsp;increase&nbsp;my&lt;br&gt;&amp;gt;understanding&nbsp;of&nbsp;how&nbsp;reactors&nbsp;work&nbsp;in&nbsp;general.&nbsp;To&nbsp;understand&nbsp;the&nbsp;various&lt;br&gt;&amp;gt;Winsock&nbsp;2&nbsp;methods&nbsp;that&nbsp;both&nbsp;of&nbsp;these&nbsp;reactors&nbsp;rely&nbsp;upon,&nbsp;I&nbsp;read&nbsp;chapters&nbsp;1-5<br>
&lt;br&gt;&amp;gt;of&nbsp;Network&nbsp;Programming&nbsp;for&nbsp;Microsoft&nbsp;Windows[1].&lt;br&gt;&amp;gt;&nbsp;Before&nbsp;actually&nbsp;attempting&nbsp;to&nbsp;add&nbsp;spawnProcess,&nbsp;I&nbsp;would&nbsp;like&nbsp;to&nbsp;present&nbsp;how&lt;br&gt;&amp;gt;I&nbsp;think&nbsp;iocpreactor&nbsp;works&nbsp;and&nbsp;how&nbsp;I&nbsp;think&nbsp;I&nbsp;should&nbsp;add&nbsp;spawnProcess,&nbsp;and&lt;br&gt;<br>
&amp;gt;hopefully&nbsp;be&nbsp;corrected&nbsp;or&nbsp;confirmed&nbsp;in&nbsp;my&nbsp;understanding.&nbsp;If&nbsp;I'm&nbsp;too&nbsp;vague&lt;br&gt;&amp;gt;there's&nbsp;a&nbsp;good&nbsp;chance&nbsp;it's&nbsp;because&nbsp;I&nbsp;don't&nbsp;understand&nbsp;it&nbsp;very&nbsp;well.&nbsp;Please&lt;br&gt;&amp;gt;feel&nbsp;free&nbsp;to&nbsp;point&nbsp;out&nbsp;things&nbsp;that&nbsp;you&nbsp;might&nbsp;think&nbsp;are&nbsp;obvious&nbsp;but&nbsp;aren't<br>
&lt;br&gt;&amp;gt;sure&nbsp;I&nbsp;understand.&lt;br&gt;&amp;gt;&nbsp;How&nbsp;iocpreactor&nbsp;works&lt;br&gt;&amp;gt;---------------------------------&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&nbsp;[snip]&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;How&nbsp;to&nbsp;add&nbsp;spawnProcess&lt;br&gt;&amp;gt;---------------------------------------&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;1.&nbsp;Create&nbsp;the&nbsp;processes&nbsp;via&nbsp;Windows&nbsp;APIs&nbsp;and&nbsp;associate&nbsp;their<br>
&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;stdout/err&nbsp;with&nbsp;with&nbsp;the&nbsp;IOCP&nbsp;via&nbsp;CreateIoCompletionPort&nbsp;calls.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;2.&nbsp;Close&nbsp;stdin.&lt;br&gt;&lt;br&gt;Why&nbsp;close&nbsp;stdin?&amp;nbsp;&amp;nbsp;How&nbsp;will&nbsp;you&nbsp;write&nbsp;to&nbsp;the&nbsp;spawned&nbsp;process?&lt;/blockquote&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;I&nbsp;see,&nbsp;so&nbsp;I&nbsp;won't&nbsp;close&nbsp;stdin&nbsp;and&nbsp;people&nbsp;can&nbsp;do&nbsp;that&nbsp;in&nbsp;their&nbsp;ProcessProtocol&nbsp;in&nbsp;connectionMade&nbsp;or&nbsp;something&nbsp;if&nbsp;they&nbsp;want.&lt;/div&gt;&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;3.&nbsp;Notify&nbsp;the&nbsp;ProcessProtocol&nbsp;via&nbsp;protocol.makeConnection&nbsp;(not&nbsp;sure&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;why,&nbsp;looking&nbsp;at&nbsp;win32eventreactor)<br>
&lt;br&gt;&lt;br&gt;makeConnection&nbsp;is&nbsp;the&nbsp;method&nbsp;that's&nbsp;actually&nbsp;part&nbsp;of&nbsp;IProtocol&nbsp;(even&nbsp;though&nbsp;ProcessProtocol&nbsp;doesn't&nbsp;implement&nbsp;IProtocol,&nbsp;it&nbsp;still&nbsp;adheres&nbsp;to&nbsp;its&nbsp;API&nbsp;in&nbsp;this&nbsp;regard).&amp;nbsp;&amp;nbsp;Generally,&nbsp;all&nbsp;it&nbsp;does&nbsp;is&nbsp;set&nbsp;the&nbsp;.transport&nbsp;attribute&nbsp;on&nbsp;the&nbsp;protocol&nbsp;instance&nbsp;and&nbsp;then&nbsp;call&nbsp;connectionMade.&amp;nbsp;&amp;nbsp;This&nbsp;might&nbsp;seem&nbsp;pointless&nbsp;in&nbsp;the&nbsp;case&nbsp;of&nbsp;processes,&nbsp;but&nbsp;since&nbsp;it&nbsp;maintains&nbsp;consistency&nbsp;with&nbsp;other&nbsp;kinds&nbsp;of&nbsp;transports,&nbsp;it&nbsp;is&nbsp;useful.<br>
&lt;/blockquote&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;So&nbsp;the&nbsp;Process&nbsp;class&nbsp;is&nbsp;the&nbsp;transport?&amp;nbsp;&nbsp;In&nbsp;win32eventreactor,&nbsp;3&nbsp;threads&nbsp;are&nbsp;started&nbsp;that&nbsp;loop&nbsp;on&nbsp;reading&nbsp;stdout&nbsp;and&nbsp;stderr&nbsp;and&nbsp;writing&nbsp;data&nbsp;from&nbsp;the&nbsp;outQueue&nbsp;to&nbsp;stdin.&amp;nbsp;&nbsp;It&nbsp;seems&nbsp;to&nbsp;me&nbsp;that&nbsp;I&nbsp;would&nbsp;not&nbsp;use&nbsp;these&nbsp;threads,&nbsp;but&nbsp;instead&nbsp;have&nbsp;each&nbsp;of&nbsp;these&nbsp;3&nbsp;file&nbsp;handles&nbsp;associated&nbsp;with&nbsp;the&nbsp;IOCP.&amp;nbsp;&nbsp;Then&nbsp;the&nbsp;methods&nbsp;defined&nbsp;in&nbsp;<br>
ops.py&nbsp;would&nbsp;be&nbsp;used&nbsp;to&nbsp;handle&nbsp;events&nbsp;on&nbsp;those&nbsp;handles,&nbsp;resulting&nbsp;in&nbsp;transport&nbsp;methods&nbsp;being&nbsp;called.&amp;nbsp;&nbsp;These&nbsp;transport&nbsp;methods&nbsp;would&nbsp;be&nbsp;methods&nbsp;on&nbsp;the&nbsp;Process&nbsp;class,&nbsp;which&nbsp;would&nbsp;result&nbsp;in&nbsp;methods&nbsp;on&nbsp;a&nbsp;single&nbsp;instance&nbsp;of&nbsp;the&nbsp;ProcessProtocol&nbsp;being&nbsp;called.&amp;nbsp;&nbsp;This&nbsp;single&nbsp;instance&nbsp;of&nbsp;the&nbsp;ProcessProtocol&nbsp;would&nbsp;be&nbsp;shared&nbsp;by&nbsp;all&nbsp;of&nbsp;the&nbsp;3&nbsp;file&nbsp;handles.&amp;nbsp;&nbsp;Am&nbsp;I&nbsp;understanding&nbsp;correctly?&amp;nbsp;&nbsp;Are&nbsp;write&nbsp;and&nbsp;loseConnection&nbsp;the&nbsp;only&nbsp;methods&nbsp;the&nbsp;Process&nbsp;would&nbsp;need&nbsp;to&nbsp;implement&nbsp;from&nbsp;ITransport?<br>
&lt;/div&gt;&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;4.&nbsp;Receive&nbsp;data&nbsp;from&nbsp;stdout/err&nbsp;via&nbsp;the&nbsp;completion&nbsp;port&nbsp;by&nbsp;calling&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;GetQueuedCompletionStatus&nbsp;from&nbsp;within&nbsp;doIteration.&nbsp;Is&nbsp;this&nbsp;really&nbsp;possible?<br>
&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;ProcessProtocol's&nbsp;methods&nbsp;won't&nbsp;get&nbsp;called&nbsp;appropriately&nbsp;by&nbsp;letting&nbsp;the&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;existing&nbsp;callbacks&nbsp;in&nbsp;ops.py&nbsp;make&nbsp;calls&nbsp;to&nbsp;the&nbsp;transport&nbsp;(e.g.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;connectionDone,&nbsp;readDone)?&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;Thanks&nbsp;for&nbsp;your&nbsp;help.<br>
&lt;br&gt;&amp;gt;Justin&lt;br&gt;&amp;gt;&nbsp;[1]&nbsp;&lt;a&nbsp;href=&quot;http://www.amazon.com/exec/obidos/ASIN/0735615799&quot;&gt;http://www.amazon.com/exec/obidos/ASIN/0735615799&lt;/a&gt;&lt;br&gt;&amp;gt;&lt;br&gt;&lt;br&gt;Jp&lt;br&gt;&lt;br&gt;_______________________________________________&lt;br&gt;Twisted-Python&nbsp;mailing&nbsp;list<br>
&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&gt;Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&gt;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python<br>
&lt;/a&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
