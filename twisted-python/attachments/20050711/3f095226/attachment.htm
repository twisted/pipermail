<tt>
&lt;div&gt;&lt;span&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;7/11/05,&nbsp;&lt;b&nbsp;class=&quot;gmail_sendername&quot;&gt;Pavel&nbsp;Pergamenshchik&lt;/b&gt;&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:pp64@codelock.com&quot;&gt;pp64@codelock.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;/span&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;On&nbsp;Mon,&nbsp;11&nbsp;Jul&nbsp;2005&nbsp;10:52:14&nbsp;-0500&lt;br&gt;Justin&nbsp;Johnson&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:justinjohnson@gmail.com&quot;&gt;justinjohnson@gmail.com<br>
&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;br&gt;&lt;br&gt;&amp;gt;&nbsp;I&nbsp;am&nbsp;attempting&nbsp;to&nbsp;add&nbsp;spawnProcess&nbsp;to&nbsp;iocpreactor.&nbsp;In&nbsp;order&nbsp;to&nbsp;begin&lt;br&gt;this&lt;br&gt;&amp;gt;&nbsp;task&nbsp;I've&nbsp;had&nbsp;to&nbsp;do&nbsp;a&nbsp;lot&nbsp;of&nbsp;reading&nbsp;on&nbsp;Windows&nbsp;network&nbsp;programming,&lt;br&gt;&amp;gt;&nbsp;specifically&nbsp;the&nbsp;various&nbsp;Windows&nbsp;I/O&nbsp;methods,&nbsp;to&nbsp;attempt&nbsp;to&nbsp;understand<br>
&lt;br&gt;what&lt;br&gt;&amp;gt;&nbsp;win32eventreactor&nbsp;and&nbsp;iocpreactor&nbsp;are&nbsp;doing,&nbsp;and&nbsp;also&nbsp;just&nbsp;increase&nbsp;my&lt;br&gt;&lt;br&gt;&amp;gt;&nbsp;understanding&nbsp;of&nbsp;how&nbsp;reactors&nbsp;work&nbsp;in&nbsp;general.&nbsp;To&nbsp;understand&nbsp;the&lt;br&gt;various&lt;br&gt;&amp;gt;&nbsp;Winsock&nbsp;2&nbsp;methods&nbsp;that&nbsp;both&nbsp;of&nbsp;these&nbsp;reactors&nbsp;rely&nbsp;upon,&nbsp;I&nbsp;read<br>
&lt;br&gt;chapters&nbsp;1-5&lt;br&gt;&amp;gt;&nbsp;of&nbsp;Network&nbsp;Programming&nbsp;for&nbsp;Microsoft&nbsp;Windows[1].&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;Before&nbsp;actually&nbsp;attempting&nbsp;to&nbsp;add&nbsp;spawnProcess,&nbsp;I&nbsp;would&nbsp;like&nbsp;to&lt;br&gt;present&nbsp;how&lt;br&gt;&amp;gt;&nbsp;I&nbsp;think&nbsp;iocpreactor&nbsp;works&nbsp;and&nbsp;how&nbsp;I&nbsp;think&nbsp;I&nbsp;should&nbsp;add&nbsp;spawnProcess,<br>
&lt;br&gt;and&lt;br&gt;&amp;gt;&nbsp;hopefully&nbsp;be&nbsp;corrected&nbsp;or&nbsp;confirmed&nbsp;in&nbsp;my&nbsp;understanding.&nbsp;If&nbsp;I'm&nbsp;too&lt;br&gt;vague&lt;br&gt;&amp;gt;&nbsp;there's&nbsp;a&nbsp;good&nbsp;chance&nbsp;it's&nbsp;because&nbsp;I&nbsp;don't&nbsp;understand&nbsp;it&nbsp;very&nbsp;well.&lt;br&gt;Please&lt;br&gt;&amp;gt;&nbsp;feel&nbsp;free&nbsp;to&nbsp;point&nbsp;out&nbsp;things&nbsp;that&nbsp;you&nbsp;might&nbsp;think&nbsp;are&nbsp;obvious&nbsp;but<br>
&lt;br&gt;aren't&lt;br&gt;&amp;gt;&nbsp;sure&nbsp;I&nbsp;understand.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;How&nbsp;iocpreactor&nbsp;works&lt;br&gt;&amp;gt;&nbsp;---------------------------------&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.&nbsp;Create&nbsp;an&nbsp;IO&nbsp;Completion&nbsp;Port.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2.&nbsp;Create&nbsp;a&nbsp;socket&nbsp;and&nbsp;associate&nbsp;it&nbsp;with&nbsp;the&nbsp;IOCP.&nbsp;This&nbsp;is&nbsp;the<br>
&lt;br&gt;socket&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;we&nbsp;will&nbsp;call&nbsp;AcceptEx&nbsp;(a&nbsp;non-blocking&nbsp;accept)&nbsp;on.&nbsp;The&nbsp;association&lt;br&gt;with&nbsp;the&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IOCP&nbsp;is&nbsp;made&nbsp;via&nbsp;CreateIoCompletionPort.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3.&nbsp;Setup&nbsp;any&nbsp;scheduled&nbsp;tasks&nbsp;on&nbsp;the&nbsp;reactor.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4.&nbsp;Call&nbsp;AcceptEx&nbsp;(which&nbsp;doesn't&nbsp;block)&nbsp;on&nbsp;the&nbsp;socket.&nbsp;AcceptEx<br>
&lt;br&gt;takes&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;an&nbsp;overlapped&nbsp;structure&nbsp;as&nbsp;a&nbsp;parameter.&nbsp;Before&nbsp;making&nbsp;the&nbsp;call,&nbsp;we&lt;br&gt;set&nbsp;two&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;attributes&nbsp;of&nbsp;the&nbsp;struct:&nbsp;the&nbsp;callback&nbsp;and&nbsp;callback_args&nbsp;which&nbsp;will&lt;br&gt;be&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;called&nbsp;when&nbsp;an&nbsp;accept&nbsp;event&nbsp;completes&nbsp;on&nbsp;the&nbsp;socket.&nbsp;The&nbsp;Winsock&nbsp;2<br>
&lt;br&gt;methods&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;don't&nbsp;actually&nbsp;call&nbsp;the&nbsp;callback.&nbsp;The&nbsp;Winsock&nbsp;2&nbsp;methods&nbsp;handle&lt;br&gt;copying&nbsp;data&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;related&nbsp;to&nbsp;the&nbsp;network&nbsp;event&nbsp;that&nbsp;occurred&nbsp;on&nbsp;the&nbsp;socket&nbsp;into&nbsp;the&lt;br&gt;overlapped&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;structure&nbsp;and&nbsp;making&nbsp;that&nbsp;overlapped&nbsp;structure&nbsp;available&nbsp;to<br>
&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GetQueuedCompletionStatus.&nbsp;So&nbsp;when&nbsp;we&nbsp;handle&nbsp;events&nbsp;on&nbsp;sockets&nbsp;via&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GetQueuedCompletionStatus&nbsp;from&nbsp;within&nbsp;doIteration,&nbsp;we&nbsp;have&nbsp;access&lt;br&gt;to&nbsp;the&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data&nbsp;related&nbsp;to&nbsp;the&nbsp;event&nbsp;as&nbsp;well&nbsp;as&nbsp;the&nbsp;callback&nbsp;and&nbsp;callback_args<br>
&lt;br&gt;we&nbsp;call&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;to&nbsp;handle&nbsp;that&nbsp;event.&nbsp;The&nbsp;callbacks&nbsp;are&nbsp;setup&nbsp;in&nbsp;the&nbsp;xxxOp&nbsp;classes&lt;br&gt;in&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ops.py&nbsp;and&nbsp;always&nbsp;result&nbsp;in&nbsp;some&nbsp;transport&nbsp;method&nbsp;getting&nbsp;called&lt;br&gt;(such&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;as&nbsp;readDone,&nbsp;connectionDone,&nbsp;etc).<br>
&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5.&nbsp;From&nbsp;within&nbsp;doIteration,&nbsp;call&nbsp;GetQueuedCompletionStatus&nbsp;(which&lt;br&gt;does&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;block)&nbsp;with&nbsp;a&nbsp;timeout&nbsp;of&nbsp;the&nbsp;time&nbsp;until&nbsp;the&nbsp;next&nbsp;scheduled&nbsp;task&lt;br&gt;needs&nbsp;to&nbsp;be&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;run.&nbsp;If&nbsp;any&nbsp;event&nbsp;occurs&nbsp;on&nbsp;the&nbsp;sockets&nbsp;currently&nbsp;associated&nbsp;with<br>
&lt;br&gt;the&nbsp;IOCP&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;before&nbsp;that&nbsp;time&nbsp;expires,&nbsp;GetQueuedCompletionStatus&nbsp;will&nbsp;return&lt;br&gt;(stop&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;blocking).&nbsp;Now&nbsp;we&nbsp;have&nbsp;access&nbsp;to&nbsp;the&nbsp;overlapped&nbsp;structure&lt;br&gt;containing&nbsp;data&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;associated&nbsp;with&nbsp;the&nbsp;event&nbsp;which&nbsp;was&nbsp;copied&nbsp;into&nbsp;the&nbsp;overlapped<br>
&lt;br&gt;structure's&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buffer,&nbsp;such&nbsp;as&nbsp;data&nbsp;received&nbsp;from&nbsp;WSARecv&nbsp;calls,&nbsp;as&nbsp;well&nbsp;as&nbsp;the&lt;br&gt;callback&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;and&nbsp;callback_args.&nbsp;From&nbsp;within&nbsp;doIteration&nbsp;we&nbsp;call&nbsp;the&nbsp;callbacks&lt;br&gt;passing&nbsp;in&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the&nbsp;data&nbsp;related&nbsp;to&nbsp;the&nbsp;event.&nbsp;Depending&nbsp;on&nbsp;the&nbsp;events&nbsp;we&nbsp;are<br>
&lt;br&gt;handling,&nbsp;we&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;may&nbsp;create&nbsp;new&nbsp;sockets&nbsp;(e.g.&nbsp;end&nbsp;point&nbsp;sockets&nbsp;in&nbsp;TCP&nbsp;connections)&lt;br&gt;and&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;associate&nbsp;them&nbsp;with&nbsp;the&nbsp;IOCP&nbsp;as&nbsp;well.&nbsp;All&nbsp;Winsock&nbsp;2&nbsp;API&nbsp;calls&nbsp;made&lt;br&gt;are&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;non-blocking&nbsp;accept&nbsp;for&nbsp;GetQueuedCompletionStatus.<br>
&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6.&nbsp;Step&nbsp;5&nbsp;continues&nbsp;until&nbsp;the&nbsp;reactor&nbsp;stops.&lt;br&gt;&lt;br&gt;This&nbsp;sounds&nbsp;about&nbsp;right.&nbsp;Note&nbsp;how&nbsp;this&nbsp;is&nbsp;different&nbsp;from&nbsp;the&nbsp;usual&lt;br&gt;reactor&nbsp;thing&nbsp;--&nbsp;iocp&nbsp;notifies&nbsp;you&nbsp;when&nbsp;the&nbsp;operation&nbsp;is&nbsp;_finished_,&lt;br&gt;not&nbsp;when&nbsp;it&nbsp;can&nbsp;success&nbsp;without&nbsp;blocking.<br>
&lt;/blockquote&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;Right.&amp;nbsp;&nbsp;Understood.&lt;/div&gt;&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&nbsp;How&nbsp;to&nbsp;add&nbsp;spawnProcess&lt;br&gt;&amp;gt;&nbsp;---------------------------------------&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1.&nbsp;Create&nbsp;the&nbsp;processes&nbsp;via&nbsp;Windows&nbsp;APIs&nbsp;and&nbsp;associate&nbsp;their<br>
&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stdout/err&nbsp;with&nbsp;with&nbsp;the&nbsp;IOCP&nbsp;via&nbsp;CreateIoCompletionPort&nbsp;calls.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2.&nbsp;Close&nbsp;stdin.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3.&nbsp;Notify&nbsp;the&nbsp;ProcessProtocol&nbsp;via&nbsp;protocol.makeConnection&nbsp;(not&nbsp;sure&lt;br&gt;&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;why,&nbsp;looking&nbsp;at&nbsp;win32eventreactor)<br>
&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4.&nbsp;Receive&nbsp;data&nbsp;from&nbsp;stdout/err&nbsp;via&nbsp;the&nbsp;completion&nbsp;port&nbsp;by&nbsp;calling&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GetQueuedCompletionStatus&nbsp;from&nbsp;within&nbsp;doIteration.&nbsp;Is&nbsp;this&nbsp;really&lt;br&gt;possible?&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ProcessProtocol's&nbsp;methods&nbsp;won't&nbsp;get&nbsp;called&nbsp;appropriately&nbsp;by&nbsp;letting<br>
&lt;br&gt;the&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;existing&nbsp;callbacks&nbsp;in&nbsp;ops.py&nbsp;make&nbsp;calls&nbsp;to&nbsp;the&nbsp;transport&nbsp;(e.g.&lt;br&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;connectionDone,&nbsp;readDone)?&lt;br&gt;&lt;br&gt;Hrm.&nbsp;Not&nbsp;quite.&nbsp;In&nbsp;iocp,&nbsp;you&nbsp;always&nbsp;have&nbsp;a&nbsp;read&nbsp;call&nbsp;pending&lt;br&gt;(ReadFileEx,&nbsp;for&nbsp;stdout/err&nbsp;handles).&nbsp;When&nbsp;it&nbsp;completes,&nbsp;you&nbsp;get&nbsp;a<br>
&lt;br&gt;notification&nbsp;in&nbsp;GetQueuedCompletionStatus,&nbsp;pass&nbsp;the&nbsp;data&nbsp;to&nbsp;your&lt;br&gt;Protocol&nbsp;and&nbsp;schedule&nbsp;the&nbsp;read&nbsp;again.&lt;br&gt;Do&nbsp;that&nbsp;for&nbsp;stdout&nbsp;and&nbsp;stderr.&lt;br&gt;ops.py&nbsp;already&nbsp;has&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;ReadFile,&nbsp;but&nbsp;it&nbsp;always&nbsp;calls&nbsp;readDone&lt;br&gt;<br>
and&nbsp;readErr&nbsp;on&nbsp;your&nbsp;transport.&nbsp;You'll&nbsp;need&nbsp;to&nbsp;fix&nbsp;that.&lt;/blockquote&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;I&nbsp;think&nbsp;we're&nbsp;on&nbsp;the&nbsp;same&nbsp;page&nbsp;here.&amp;nbsp;&nbsp;See&nbsp;my&nbsp;previous&nbsp;emails&nbsp;correcting&nbsp;my&nbsp;original&nbsp;idea&nbsp;on&nbsp;how&nbsp;this&nbsp;would&nbsp;work.&amp;nbsp;&nbsp;At&nbsp;this&nbsp;point&nbsp;I've&nbsp;defined&nbsp;custom&nbsp;xxxOp&nbsp;classes&nbsp;as&nbsp;follows.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;class&nbsp;ReadOutOp(OverlappedOp):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;ovDone(self,&nbsp;ret,&nbsp;bytes,&nbsp;(handle,&nbsp;buffer)):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;ret&nbsp;or&nbsp;not&nbsp;bytes:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#self.transport.readErr(ret,&nbsp;bytes)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.transport.outConnectionLost<br>
()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#self.transport.readDone(bytes)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.transport.protocol.outReceived(bytes)&lt;/div&gt;<br>
&lt;div&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;initiateOp(self,&nbsp;handle,&nbsp;buffer):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.reactor.issueReadFile(handle,&nbsp;buffer,&nbsp;self.ovDone,&nbsp;(handle,&nbsp;buffer))&lt;/p&gt;<br>
&lt;p&gt;class&nbsp;ReadErrOp(OverlappedOp):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;ovDone(self,&nbsp;ret,&nbsp;bytes,&nbsp;(handle,&nbsp;buffer)):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;ret&nbsp;or&nbsp;not&nbsp;bytes:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#self.transport.readErr(ret,&nbsp;bytes)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.transport.errConnectionLost()<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#self.transport.readDone(bytes)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.transport.protocol.errReceived(bytes)&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;initiateOp(self,&nbsp;handle,&nbsp;buffer):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.reactor.issueReadFile(handle,&nbsp;buffer,&nbsp;self.ovDone,&nbsp;(handle,&nbsp;buffer))&lt;/p&gt;<br>
&lt;p&gt;class&nbsp;WriteInOp(OverlappedOp):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;ovDone(self,&nbsp;ret,&nbsp;bytes,&nbsp;(handle,&nbsp;buffer)):&lt;br&gt;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;log.msg(&amp;quot;WriteFileOp.ovDone&amp;quot;,&nbsp;time.time())&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;ret&nbsp;or&nbsp;not&nbsp;bytes:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#self.transport.writeErr(ret,&nbsp;bytes)<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.transport.inConnectionLost()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;#self.transport.writeDone(bytes)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;pass&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;def&nbsp;initiateOp(self,&nbsp;handle,&nbsp;buffer):&lt;br&gt;#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;log.msg(&amp;quot;WriteFileOp.initiateOp&amp;quot;,&nbsp;time.time())&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.reactor.issueWriteFile(handle,&nbsp;buffer,&nbsp;self.ovDone,&nbsp;(handle,&nbsp;buffer))&lt;/p&gt;&lt;/div&gt;&lt;br&gt;&amp;nbsp;&lt;/div&gt;<br>

</tt>
