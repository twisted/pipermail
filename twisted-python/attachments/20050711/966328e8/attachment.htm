<tt>
&lt;div&gt;I&nbsp;am&amp;nbsp;attempting&nbsp;to&nbsp;add&amp;nbsp;spawnProcess&nbsp;to&nbsp;iocpreactor.&amp;nbsp;&nbsp;In&nbsp;order&nbsp;to&nbsp;begin&nbsp;this&nbsp;task&nbsp;I've&nbsp;had&nbsp;to&nbsp;do&nbsp;a&nbsp;lot&nbsp;of&nbsp;reading&nbsp;on&nbsp;Windows&nbsp;network&nbsp;programming,&nbsp;specifically&nbsp;the&nbsp;various&nbsp;Windows&nbsp;I/O&nbsp;methods,&nbsp;to&nbsp;attempt&nbsp;to&nbsp;understand&nbsp;what&nbsp;win32eventreactor&nbsp;and&nbsp;iocpreactor&nbsp;are&nbsp;doing,&nbsp;and&nbsp;also&nbsp;just&nbsp;increase&nbsp;my&nbsp;understanding&nbsp;of&nbsp;how&nbsp;reactors&nbsp;work&nbsp;in&nbsp;general.&amp;nbsp;&nbsp;To&nbsp;understand&nbsp;the&nbsp;various&nbsp;Winsock&nbsp;2&nbsp;methods&nbsp;that&nbsp;both&nbsp;of&nbsp;these&nbsp;reactors&nbsp;rely&nbsp;upon,&nbsp;I&nbsp;read&nbsp;chapters&nbsp;1-5&nbsp;of&nbsp;Network&nbsp;Programming&nbsp;for&nbsp;Microsoft&nbsp;Windows[1].<br>
&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;Before&nbsp;actually&nbsp;attempting&nbsp;to&nbsp;add&nbsp;spawnProcess,&nbsp;I&nbsp;would&nbsp;like&nbsp;to&nbsp;present&nbsp;how&nbsp;I&nbsp;think&nbsp;iocpreactor&nbsp;works&amp;nbsp;and&nbsp;how&nbsp;I&nbsp;think&nbsp;I&nbsp;should&nbsp;add&nbsp;spawnProcess,&nbsp;and&nbsp;hopefully&nbsp;be&nbsp;corrected&nbsp;or&nbsp;confirmed&nbsp;in&nbsp;my&nbsp;understanding.&amp;nbsp;&nbsp;If&nbsp;I'm&nbsp;too&nbsp;vague&amp;nbsp;there's&nbsp;a&nbsp;good&nbsp;chance&nbsp;it's&nbsp;because&nbsp;I&nbsp;don't&nbsp;understand&nbsp;it&nbsp;very&nbsp;well.&amp;nbsp;&nbsp;Please&nbsp;feel&nbsp;free&nbsp;to&nbsp;point&nbsp;out&nbsp;things&nbsp;that&nbsp;you&nbsp;might&nbsp;think&nbsp;are&nbsp;obvious&nbsp;but&nbsp;aren't&nbsp;sure&nbsp;I&nbsp;understand.<br>
&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;How&nbsp;iocpreactor&nbsp;works&lt;/div&gt;<br>
&lt;div&gt;---------------------------------&lt;/div&gt;<br>
&lt;ol&gt;<br>
&lt;li&gt;Create&nbsp;an&nbsp;IO&nbsp;Completion&nbsp;Port.&lt;/li&gt;<br>
&lt;li&gt;Create&nbsp;a&nbsp;socket&nbsp;and&nbsp;associate&nbsp;it&nbsp;with&nbsp;the&nbsp;IOCP.&amp;nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;socket&nbsp;we&nbsp;will&nbsp;call&nbsp;AcceptEx&nbsp;(a&nbsp;non-blocking&nbsp;accept)&amp;nbsp;on.&amp;nbsp;&nbsp;The&nbsp;association&nbsp;with&nbsp;the&nbsp;IOCP&nbsp;is&nbsp;made&nbsp;via&nbsp;CreateIoCompletionPort.&lt;/li&gt;<br>
&lt;li&gt;Setup&nbsp;any&nbsp;scheduled&nbsp;tasks&nbsp;on&nbsp;the&nbsp;reactor.&lt;/li&gt;<br>
&lt;li&gt;Call&nbsp;AcceptEx&nbsp;(which&nbsp;doesn't&nbsp;block)&amp;nbsp;on&nbsp;the&nbsp;socket.&amp;nbsp;&nbsp;AcceptEx&nbsp;takes&nbsp;an&nbsp;overlapped&nbsp;structure&nbsp;as&nbsp;a&nbsp;parameter.&amp;nbsp;&nbsp;Before&nbsp;making&nbsp;the&nbsp;call,&nbsp;we&nbsp;set&nbsp;two&nbsp;attributes&nbsp;of&nbsp;the&nbsp;struct:&nbsp;the&nbsp;callback&nbsp;and&nbsp;callback_args&nbsp;which&nbsp;will&nbsp;be&nbsp;called&nbsp;when&nbsp;an&nbsp;accept&nbsp;event&nbsp;completes&nbsp;on&nbsp;the&nbsp;socket.&amp;nbsp;&nbsp;The&nbsp;Winsock&nbsp;2&nbsp;methods&nbsp;don't&nbsp;actually&nbsp;call&nbsp;the&nbsp;callback.&amp;nbsp;&nbsp;The&nbsp;Winsock&nbsp;2&nbsp;methods&nbsp;handle&nbsp;copying&nbsp;data&nbsp;related&nbsp;to&nbsp;the&nbsp;network&nbsp;event&nbsp;that&nbsp;occurred&nbsp;on&nbsp;the&nbsp;socket&nbsp;into&nbsp;the&nbsp;overlapped&nbsp;structure&nbsp;and&nbsp;making&nbsp;that&nbsp;overlapped&nbsp;structure&nbsp;available&nbsp;to&nbsp;GetQueuedCompletionStatus.&amp;nbsp;&nbsp;So&nbsp;when&nbsp;we&nbsp;handle&nbsp;events&nbsp;on&nbsp;sockets&nbsp;via&nbsp;GetQueuedCompletionStatus&nbsp;from&nbsp;within&nbsp;doIteration,&nbsp;we&nbsp;have&nbsp;access&nbsp;to&nbsp;the&nbsp;data&nbsp;related&nbsp;to&nbsp;the&nbsp;event&nbsp;as&nbsp;well&nbsp;as&nbsp;the&nbsp;callback&nbsp;and&nbsp;callback_args&nbsp;we&nbsp;call&nbsp;to&nbsp;handle&nbsp;that&nbsp;event.&amp;nbsp;&nbsp;The&nbsp;callbacks&nbsp;are&nbsp;setup&nbsp;in&nbsp;the&nbsp;xxxOp&nbsp;classes&nbsp;in&nbsp;<br>
ops.py&nbsp;and&nbsp;always&nbsp;result&nbsp;in&nbsp;some&nbsp;transport&nbsp;method&nbsp;getting&nbsp;called&nbsp;(such&nbsp;as&nbsp;readDone,&nbsp;connectionDone,&nbsp;etc).&lt;/li&gt;<br>
&lt;li&gt;From&nbsp;within&nbsp;doIteration,&nbsp;call&nbsp;GetQueuedCompletionStatus&nbsp;(which&nbsp;does&nbsp;block)&amp;nbsp;with&nbsp;a&nbsp;timeout&nbsp;of&nbsp;the&nbsp;time&nbsp;until&amp;nbsp;the&nbsp;next&nbsp;scheduled&nbsp;task&nbsp;needs&nbsp;to&nbsp;be&nbsp;run.&amp;nbsp;&nbsp;If&nbsp;any&nbsp;event&amp;nbsp;occurs&nbsp;on&nbsp;the&nbsp;sockets&nbsp;currently&nbsp;associated&nbsp;with&nbsp;the&nbsp;IOCP&nbsp;before&nbsp;that&nbsp;time&nbsp;expires,&amp;nbsp;GetQueuedCompletionStatus&nbsp;will&nbsp;return&nbsp;(stop&nbsp;blocking).&amp;nbsp;&nbsp;Now&nbsp;we&nbsp;have&nbsp;access&nbsp;to&nbsp;the&nbsp;overlapped&nbsp;structure&nbsp;containing&nbsp;data&nbsp;associated&nbsp;with&nbsp;the&nbsp;event&nbsp;which&nbsp;was&nbsp;copied&nbsp;into&nbsp;the&nbsp;overlapped&nbsp;structure's&nbsp;buffer,&nbsp;such&nbsp;as&nbsp;data&nbsp;received&nbsp;from&nbsp;WSARecv&nbsp;calls,&nbsp;as&nbsp;well&nbsp;as&nbsp;the&nbsp;callback&nbsp;and&nbsp;callback_args.&amp;nbsp;&nbsp;From&nbsp;within&nbsp;doIteration&nbsp;we&nbsp;call&nbsp;the&nbsp;callbacks&nbsp;passing&nbsp;in&nbsp;the&nbsp;data&nbsp;related&nbsp;to&nbsp;the&nbsp;event.&amp;nbsp;&nbsp;Depending&nbsp;on&nbsp;the&nbsp;events&nbsp;we&nbsp;are&nbsp;handling,&nbsp;we&nbsp;may&nbsp;create&nbsp;new&nbsp;sockets&nbsp;(<br>
e.g.&nbsp;end&nbsp;point&nbsp;sockets&amp;nbsp;in&nbsp;TCP&nbsp;connections)&nbsp;and&nbsp;associate&nbsp;them&nbsp;with&nbsp;the&nbsp;IOCP&nbsp;as&nbsp;well.&amp;nbsp;&nbsp;All&nbsp;Winsock&nbsp;2&nbsp;API&nbsp;calls&nbsp;made&nbsp;are&nbsp;non-blocking&nbsp;accept&nbsp;for&nbsp;GetQueuedCompletionStatus.&lt;/li&gt;<br>
&lt;li&gt;Step&nbsp;5&nbsp;continues&nbsp;until&nbsp;the&nbsp;reactor&nbsp;stops.&lt;/li&gt;&lt;/ol&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;How&nbsp;to&nbsp;add&nbsp;spawnProcess&lt;/div&gt;<br>
&lt;div&gt;---------------------------------------&lt;/div&gt;<br>
&lt;ol&gt;<br>
&lt;li&gt;Create&nbsp;the&nbsp;processes&nbsp;via&amp;nbsp;Windows&nbsp;APIs&amp;nbsp;and&nbsp;associate&nbsp;their&nbsp;stdout/err&nbsp;with&nbsp;with&nbsp;the&nbsp;IOCP&nbsp;via&nbsp;CreateIoCompletionPort&nbsp;calls.&lt;/li&gt;<br>
&lt;li&gt;Close&nbsp;stdin.&lt;/li&gt;<br>
&lt;li&gt;Notify&nbsp;the&nbsp;ProcessProtocol&nbsp;via&nbsp;protocol.makeConnection&nbsp;(not&nbsp;sure&nbsp;why,&nbsp;looking&nbsp;at&nbsp;win32eventreactor)&lt;/li&gt;<br>
&lt;li&gt;Receive&nbsp;data&nbsp;from&nbsp;stdout/err&nbsp;via&nbsp;the&nbsp;completion&nbsp;port&nbsp;by&nbsp;calling&nbsp;GetQueuedCompletionStatus&nbsp;from&nbsp;within&nbsp;doIteration.&amp;nbsp;&nbsp;Is&nbsp;this&nbsp;really&nbsp;possible?&amp;nbsp;&nbsp;ProcessProtocol's&nbsp;methods&nbsp;won't&nbsp;get&nbsp;called&nbsp;appropriately&nbsp;by&nbsp;letting&nbsp;the&nbsp;existing&nbsp;callbacks&nbsp;in&nbsp;<br>
ops.py&nbsp;make&nbsp;calls&nbsp;to&nbsp;the&nbsp;transport&nbsp;(e.g.&nbsp;connectionDone,&nbsp;readDone)?&lt;/li&gt;&lt;/ol&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;Thanks&nbsp;for&nbsp;your&nbsp;help.&lt;/div&gt;<br>
&lt;div&gt;Justin&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;[1]&nbsp;&lt;a&nbsp;href=&quot;http://www.amazon.com/exec/obidos/ASIN/0735615799&quot;&gt;http://www.amazon.com/exec/obidos/ASIN/0735615799&lt;/a&gt;&lt;/div&gt;<br>

</tt>
