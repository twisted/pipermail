<tt>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Thu,&nbsp;Mar&nbsp;5,&nbsp;2009&nbsp;at&nbsp;7:45&nbsp;AM,&nbsp;Jean-Paul&nbsp;Calderone&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:exarkun@divmod.com&quot;&gt;exarkun@divmod.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;On&nbsp;Thu,&nbsp;05&nbsp;Mar&nbsp;2009&nbsp;16:20:27&nbsp;+0100,&nbsp;Markus&nbsp;Wanner&nbsp;&amp;lt;markus@bluegap.ch&amp;gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Hi,&lt;br&gt;<br>
&lt;br&gt;<br>
I&amp;#39;m&nbsp;trying&nbsp;to&nbsp;stream&nbsp;longish&nbsp;data&nbsp;via&nbsp;web2,&nbsp;but&nbsp;experience&nbsp;sudden&nbsp;stalls&lt;br&gt;<br>
in&nbsp;data&nbsp;transfer,&nbsp;followed&nbsp;by&nbsp;a&nbsp;connection&nbsp;abort&nbsp;after&nbsp;a&nbsp;certain&lt;br&gt;<br>
timeout.&nbsp;I&nbsp;can&amp;#39;t&nbsp;completely&nbsp;reproduce&nbsp;the&nbsp;issue,&nbsp;yet,&nbsp;but&nbsp;figured&nbsp;that&lt;br&gt;<br>
the&nbsp;size&nbsp;of&nbsp;the&nbsp;blocks&nbsp;I&amp;#39;m&nbsp;returning&nbsp;via&nbsp;the&nbsp;stream&amp;#39;s&nbsp;read&nbsp;method&lt;br&gt;<br>
affects&nbsp;the&nbsp;failure&nbsp;rate&nbsp;(an&nbsp;stream.IByteStream&nbsp;implementation).&lt;br&gt;<br>
&lt;br&gt;<br>
I&amp;#39;ve&nbsp;tried&nbsp;with&nbsp;chunk&nbsp;sizes&nbsp;between&nbsp;1&nbsp;MiB&nbsp;down&nbsp;to&nbsp;256&nbsp;bytes.&nbsp;At&nbsp;that&lt;br&gt;<br>
rate,&nbsp;I&nbsp;suddenly&nbsp;get&nbsp;the&nbsp;following&nbsp;unhandled&nbsp;errors,&nbsp;which&nbsp;don&amp;#39;t&nbsp;seem&nbsp;to&lt;br&gt;<br>
have&nbsp;to&nbsp;do&nbsp;much&nbsp;with&nbsp;my&nbsp;code.&lt;br&gt;<br>
&lt;/blockquote&gt;<br>
&lt;br&gt;&lt;/div&gt;<br>
I&nbsp;haven&amp;#39;t&nbsp;looked&nbsp;at&nbsp;how&nbsp;web2&nbsp;handles&nbsp;IByteStream&nbsp;providers,&nbsp;but&nbsp;my&nbsp;first&lt;br&gt;<br>
guess&nbsp;would&nbsp;be&nbsp;that&nbsp;this&nbsp;is&nbsp;an&nbsp;example&nbsp;of&nbsp;a&nbsp;somewhat&nbsp;common&nbsp;bug&nbsp;where&lt;br&gt;<br>
Deferreds&nbsp;are&nbsp;chained&nbsp;to&nbsp;an&nbsp;arbitrary&nbsp;length&nbsp;based&nbsp;on&nbsp;application&nbsp;data&lt;br&gt;<br>
and&nbsp;when&nbsp;there&amp;#39;s&nbsp;too&nbsp;much&nbsp;application&nbsp;data,&nbsp;the&nbsp;chain&nbsp;gets&nbsp;too&nbsp;long&nbsp;(a&lt;br&gt;<br>
limit&nbsp;imposed&nbsp;by&nbsp;how&nbsp;much&nbsp;recursion&nbsp;is&nbsp;possible&nbsp;when&nbsp;unwinding&nbsp;the&nbsp;chain),&lt;br&gt;<br>
and&nbsp;you&nbsp;get&nbsp;this&nbsp;failure.&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I&nbsp;think&nbsp;this&nbsp;probably&nbsp;has&nbsp;something&nbsp;to&nbsp;do&nbsp;with&nbsp;the&nbsp;fact&nbsp;the&nbsp;IByteStream.read&nbsp;may&nbsp;optionally&nbsp;return&nbsp;a&nbsp;Deferred&nbsp;making&nbsp;it&nbsp;quite&nbsp;easy&nbsp;to&nbsp;write&nbsp;code&nbsp;that&nbsp;accidentally&nbsp;chain&nbsp;Deferreds&nbsp;to&nbsp;infinity&nbsp;and&nbsp;beyond. &nbsp;Such&nbsp;as&nbsp;if&nbsp;you&amp;#39;re&nbsp;calling&nbsp;IByteStream.read&nbsp;in&nbsp;the&nbsp;callback&nbsp;of&nbsp;another&nbsp;Deferred&nbsp;and&nbsp;returning&nbsp;the&nbsp;result. &nbsp;Sometimes&nbsp;the&nbsp;read&nbsp;method&nbsp;will&nbsp;return&nbsp;a&nbsp;Deferred,&nbsp;sometimes&nbsp;it&amp;#39;ll&nbsp;just&nbsp;return&nbsp;your&nbsp;data. &nbsp;Without&nbsp;reading&nbsp;the&nbsp;implementation&nbsp;of&nbsp;the&nbsp;provider&nbsp;you&amp;#39;re&nbsp;using&nbsp;it&amp;#39;s&nbsp;not&nbsp;easy&nbsp;to&nbsp;know&nbsp;which&nbsp;it&amp;#39;ll&nbsp;do&nbsp;when.&lt;br&gt;<br>
&lt;br&gt;While&nbsp;the&nbsp;specific&nbsp;bug&nbsp;you&amp;#39;re&nbsp;encountering&nbsp;may&nbsp;or&nbsp;may&nbsp;not&nbsp;be&nbsp;in&nbsp;your&nbsp;application&nbsp;code&nbsp;(I&nbsp;haven&amp;#39;t&nbsp;read&nbsp;it,&nbsp;please&nbsp;post&nbsp;a&nbsp;minimal&nbsp;example&nbsp;if&nbsp;you&nbsp;can)&nbsp;it&nbsp;illuminates&nbsp;a&nbsp;fundamental&nbsp;flaw&nbsp;of&nbsp;the&nbsp;twisted.web2.stream&nbsp;APIs. &nbsp;(It&amp;#39;s&nbsp;a&nbsp;flaw&nbsp;we&nbsp;understand,&nbsp;and&nbsp;there&nbsp;is&nbsp;a&nbsp;ticket&nbsp;I&nbsp;can&amp;#39;t&nbsp;find&nbsp;right&nbsp;now&nbsp;that&nbsp;documents&nbsp;how&nbsp;it&nbsp;should&nbsp;work&nbsp;there&nbsp;may&nbsp;even&nbsp;be&nbsp;a&nbsp;branch&nbsp;dialtone&nbsp;worked&nbsp;on&nbsp;that&nbsp;could&nbsp;possibly&nbsp;fix&nbsp;it.)&lt;br&gt;<br>
&lt;br&gt;If&nbsp;this&nbsp;email&nbsp;doesn&amp;#39;t&nbsp;help&nbsp;you&nbsp;find&nbsp;your&nbsp;problem&nbsp;please&nbsp;do&nbsp;post&nbsp;a&nbsp;minimal&nbsp;example&nbsp;and&nbsp;I&nbsp;promise&nbsp;I&amp;#39;ll&nbsp;read&nbsp;it&nbsp;today.&lt;br&gt;&lt;br&gt;-David&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
