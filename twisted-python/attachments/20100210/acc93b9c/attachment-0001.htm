<tt>
Good&nbsp;day:&lt;br&gt;&lt;br&gt;I&amp;#39;ve&nbsp;been&nbsp;having&nbsp;fun&nbsp;with&nbsp;Twisted. &nbsp;I&nbsp;have&nbsp;my&nbsp;application&nbsp;running&nbsp;fine,&nbsp;with&nbsp;multiple&nbsp;server&nbsp;and&nbsp;client&nbsp;connections&nbsp;using&nbsp;Telnet. &nbsp;:-)&lt;br&gt;&lt;br&gt;However,&nbsp;users&nbsp;always&nbsp;want&nbsp;something. &nbsp;I&nbsp;need&nbsp;to&nbsp;send&nbsp;some&nbsp;unique&nbsp;configuration&nbsp;information&nbsp;to&nbsp;each&nbsp;connection. &nbsp;The&nbsp;connections&nbsp;are&nbsp;made&nbsp;using&nbsp;connectTCP. &nbsp;My&nbsp;first&nbsp;attempt&nbsp;assumed&nbsp;that&nbsp;the&nbsp;connection&nbsp;was&nbsp;made&nbsp;when&nbsp;the&nbsp;call&nbsp;to&nbsp;connectTCP&nbsp;was&nbsp;executed. &nbsp;It&nbsp;didn&amp;#39;t&nbsp;work! &nbsp;:-(&lt;br&gt;<br>
&lt;br&gt;-------------------------------&lt;br&gt;&lt;br&gt;from&nbsp;twisted.internet.protocol&nbsp;import&nbsp;ClientFactory&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor&lt;br&gt;from&nbsp;twisted.conch.telnet&nbsp;import&nbsp;StatefulTelnetProtocol&lt;br&gt;&lt;br&gt;class&nbsp;testClient(StatefulTelnetProtocol):&lt;br&gt;<br>
&lt;br&gt;   &nbsp;def&nbsp;connectionMade(self):&lt;br&gt;       &nbsp;self.title&nbsp;=&nbsp;self.factory.connectString&lt;br&gt;       &nbsp;print&nbsp;&amp;quot;Client&nbsp;Connected:&nbsp;&amp;quot;&nbsp;+&nbsp;self.title&lt;br&gt;       &nbsp;self.setRawMode()&lt;br&gt;       &nbsp;self.factory.connections.append(self)&lt;br&gt;<br>
&lt;br&gt;   &nbsp;def&nbsp;connectionLost(self,&nbsp;reason):&lt;br&gt;       &nbsp;if&nbsp;self&nbsp;in&nbsp;self.factory.connections:&lt;br&gt;           &nbsp;self.factory.connections.remove(self)&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;rawDataReceived(self,data):&lt;br&gt;       &nbsp;print&nbsp;data&nbsp;+&nbsp;&amp;quot;\n&amp;quot;&lt;br&gt;<br>
&lt;br&gt;class&nbsp;ClusterClientFactory(ClientFactory):&lt;br&gt;&lt;br&gt;   &nbsp;protocol&nbsp;=&nbsp;testClient&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;__init__(self):&lt;br&gt;       &nbsp;self.connections&nbsp;=&nbsp;[]&lt;br&gt;       &nbsp;self.connectString&nbsp;=&nbsp;&amp;#39;&amp;#39;&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;startFactory(self):&lt;br&gt;<br>
       &nbsp;print&nbsp;&amp;quot;startFactory:&nbsp;&amp;quot;&nbsp;+&nbsp;self.connectString&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;startedConnecting(self,&nbsp;connector):&lt;br&gt;       &nbsp;print&nbsp;&amp;quot;Started&nbsp;connecting:&nbsp;&amp;quot;&nbsp;+&nbsp;str(connector)&lt;br&gt;       &nbsp;print&nbsp;self.connectString&lt;br&gt;&lt;br&gt;<br>
   &nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;br&gt;       &nbsp;print&nbsp;&amp;quot;bulldProtocol:&nbsp;&amp;quot;&nbsp;+&nbsp;str(addr)&lt;br&gt;       &nbsp;print&nbsp;&amp;quot;buildProtocol:&nbsp;&amp;quot;&nbsp;+&nbsp;self.connectString&lt;br&gt;&lt;br&gt;       &nbsp;p&nbsp;=&nbsp;self.protocol()&lt;br&gt;       &nbsp;p.factory&nbsp;=&nbsp;self&lt;br&gt;<br>
       &nbsp;return&nbsp;p&lt;br&gt;&lt;br&gt;if&nbsp;__name__&nbsp;==&nbsp;&amp;#39;__main__&amp;#39;:&lt;br&gt;&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;startUp():&lt;br&gt;&lt;br&gt;       &nbsp;factory&nbsp;=&nbsp;ClusterClientFactory()&lt;br&gt;       &nbsp;factory.maxDelay&nbsp;=&nbsp;120 &nbsp;# &nbsp;two&nbsp;minutes&lt;br&gt;&lt;br&gt;       &nbsp;factory.connectString&nbsp;=&nbsp;&amp;quot;FirstString...&amp;quot;&lt;br&gt;<br>
       &nbsp;reactor.connectTCP(&amp;quot;localhost&amp;quot;,&nbsp;7300,&nbsp;factory)&lt;br&gt;&lt;br&gt;       &nbsp;factory.connectString&nbsp;=&nbsp;&amp;quot;SecondString&amp;quot;&lt;br&gt;       &nbsp;reactor.connectTCP(&amp;quot;localhost&amp;quot;,&nbsp;7300,&nbsp;factory)&lt;br&gt;&lt;br&gt;   &nbsp;reactor.callWhenRunning(startUp)&lt;br&gt;<br>
   &nbsp;reactor.run()&lt;br&gt;&lt;br&gt;----------------------------------&lt;br&gt;&lt;br&gt;The&nbsp;results&nbsp;are&nbsp;that&nbsp;buildProtocol&nbsp;gets&nbsp;the&nbsp;second&nbsp;string&nbsp;both&nbsp;times. &nbsp;startedConnecting&nbsp;gets&nbsp;the&nbsp;correct&nbsp;string,&nbsp;but&nbsp;all&nbsp;I&nbsp;have&nbsp;there&nbsp;is&nbsp;a&nbsp;connection&nbsp;object. &nbsp;I&nbsp;need&nbsp;the&nbsp;correct&nbsp;data&nbsp;in&nbsp;buildProtocol&nbsp;to&nbsp;do&nbsp;it&nbsp;this&nbsp;way.&lt;br&gt;<br>
&lt;br&gt;------------------------------------&lt;br&gt;&lt;br&gt;C:\Users\Mark\src\play&amp;gt;python&nbsp;testclient.py&lt;br&gt;startFactory:&nbsp;FirstString...&lt;br&gt;Started&nbsp;connecting:&nbsp;&amp;lt;twisted.internet.tcp.Connector&nbsp;instance&nbsp;at&nbsp;0x01DAB620&amp;gt;&lt;br&gt;FirstString...&lt;br&gt;<br>
Started&nbsp;connecting:&nbsp;&amp;lt;twisted.internet.tcp.Connector&nbsp;instance&nbsp;at&nbsp;0x01E0EFD0&amp;gt;&lt;br&gt;SecondString&lt;br&gt;bulldProtocol:&nbsp;IPv4Address(TCP,&nbsp;&amp;#39;127.0.0.1&amp;#39;,&nbsp;7300)&lt;br&gt;buildProtocol:&nbsp;SecondString&lt;br&gt;Client&nbsp;Connected:&nbsp;SecondString&lt;br&gt;<br>
Welcome&nbsp;to&nbsp;SimpleServer5&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;bulldProtocol:&nbsp;IPv4Address(TCP,&nbsp;&amp;#39;127.0.0.1&amp;#39;,&nbsp;7300)&lt;br&gt;buildProtocol:&nbsp;SecondString&lt;br&gt;Client&nbsp;Connected:&nbsp;SecondString&lt;br&gt;Welcome&nbsp;to&nbsp;SimpleServer5&lt;br&gt;&lt;br&gt;--------------------------&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;My&nbsp;&amp;quot;best&amp;quot;&nbsp;idea&nbsp;is&nbsp;to&nbsp;pass&nbsp;the&nbsp;strings&nbsp;to&nbsp;the&nbsp;factory&nbsp;in&nbsp;a&nbsp;dictionary<br>
indexed&nbsp;by&nbsp;the&nbsp;IP&nbsp;address&nbsp;and&nbsp;the&nbsp;port. &nbsp;Then,&nbsp;buildProtocol()&nbsp;can&nbsp;use&nbsp;that&nbsp;to<br>
recover&nbsp;the&nbsp;string&nbsp;and&nbsp;I&nbsp;can&nbsp;use&nbsp;reactor.resolve()<br>
to&nbsp;translate&nbsp;the&nbsp;host&nbsp;name&nbsp;to&nbsp;the&nbsp;IP&nbsp;address. &nbsp;The&nbsp;real&nbsp;application&nbsp;won&amp;#39;t&nbsp;have&nbsp;multiple&nbsp;connections&nbsp;to&nbsp;the&nbsp;same&nbsp;host&nbsp;and&nbsp;port&nbsp;like&nbsp;this&nbsp;example,&nbsp;so&nbsp;this&nbsp;would&nbsp;work.&lt;br&gt;<br>
&lt;br&gt;There&nbsp;MUST&nbsp;be&nbsp;a&nbsp;better&nbsp;way. &nbsp;:-)&lt;br&gt;&lt;br&gt;My&nbsp;&amp;quot;simpleserver&amp;quot;&nbsp;is&nbsp;below&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;run&nbsp;this.&lt;br&gt;&lt;br&gt;THANKS&nbsp;for&nbsp;all&nbsp;of&nbsp;your&nbsp;help. &nbsp;I&nbsp;have&nbsp;the&nbsp;basic&nbsp;application&nbsp;running&nbsp;now&nbsp;(including&nbsp;a&nbsp;Tkinter&nbsp;GUI &nbsp;:-)&nbsp;)&nbsp;and&nbsp;Twisted&nbsp;has&nbsp;saved&nbsp;me&nbsp;hundreds&nbsp;or&nbsp;even&nbsp;thousands&nbsp;of&nbsp;lines&nbsp;of&nbsp;code...&lt;br&gt;<br>
&lt;br&gt;Mark&nbsp;Bailey&lt;br&gt;&lt;br&gt;------------------------------&lt;br&gt;&lt;br&gt;from&nbsp;twisted.conch.telnet&nbsp;import&nbsp;StatefulTelnetProtocol&lt;br&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor,&nbsp;protocol&lt;br&gt;from&nbsp;twisted.protocols.basic&nbsp;import&nbsp;LineReceiver&lt;br&gt;<br>
&lt;br&gt;class&nbsp;TelnetEcho(StatefulTelnetProtocol):&lt;br&gt;   &nbsp;def&nbsp;connectionMade(self):&lt;br&gt;       &nbsp;self.factory.connection.append(self)&lt;br&gt;       &nbsp;self.sendLine(&amp;quot;Welcome&nbsp;to&nbsp;SimpleServer5\r\n&amp;quot;)&lt;br&gt;&lt;br&gt;&lt;br&gt;   &nbsp;def&nbsp;lineReceived(self,&nbsp;data):&lt;br&gt;<br>
       &nbsp;data&nbsp;=&nbsp;data.rstrip(&amp;#39;\n\r&amp;#39;)&lt;br&gt;&lt;br&gt;       &nbsp;if&nbsp;data.upper()&nbsp;==&nbsp;&amp;#39;BYE&amp;#39;:&lt;br&gt;           &nbsp;self.sendLine(&amp;quot;Goodbye...\r&amp;quot;)&lt;br&gt;           &nbsp;self.transport.loseConnection()&lt;br&gt;       &nbsp;else:&lt;br&gt;           &nbsp;self.sendLine(&amp;quot;Unrecognized&nbsp;command:&nbsp;%r\r&amp;quot;&nbsp;%&nbsp;(data,))&lt;br&gt;<br>
&lt;br&gt;   &nbsp;def&nbsp;connectionLost(self,&nbsp;reason):&lt;br&gt;       &nbsp;self.factory.connection.remove(self)&lt;br&gt;&lt;br&gt;&lt;br&gt;class&nbsp;TelnetEchoFactory(protocol.Factory):&lt;br&gt;   &nbsp;protocol&nbsp;=&nbsp;TelnetEcho&lt;br&gt;   &nbsp;def&nbsp;__init__(self):&lt;br&gt;       &nbsp;self.connection&nbsp;=&nbsp;[]&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;def&nbsp;createTelnetServer(port=7300):&lt;br&gt;   &nbsp;telnetinstance&nbsp;=&nbsp;TelnetEchoFactory()      &nbsp;# &nbsp;needs&nbsp;to&nbsp;be&nbsp;a&nbsp;list&lt;br&gt;   &nbsp;reactor.listenTCP(port,telnetinstance)&lt;br&gt;&lt;br&gt;if&nbsp;__name__&nbsp;==&nbsp;&amp;quot;__main__&amp;quot;:&lt;br&gt;   &nbsp;reactor.callWhenRunning(createTelnetServer)&lt;br&gt;<br>
   &nbsp;reactor.run()&lt;br&gt;&lt;br&gt;<br>

</tt>
