<tt>
Nevermind.&nbsp;I&nbsp;was&nbsp;missing&nbsp;&amp;#39;self.dataReceived&nbsp;=&nbsp;self.interface_handler.dataReceived&amp;#39;&nbsp;in&nbsp;the&nbsp;__init__&nbsp;of&nbsp;SSHSession&nbsp;and self.dataReceived&nbsp;=&nbsp;self._client.dataReceived&nbsp;in&nbsp;the&nbsp;__init__&nbsp;of&nbsp;SftpClient.&nbsp;Maybe&nbsp;I&nbsp;need&nbsp;to&nbsp;reduce&nbsp;the&nbsp;abstraction&nbsp;a&nbsp;bit&nbsp;here,&nbsp;hmm.&lt;div&gt;<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;Well&nbsp;hopefully&nbsp;this&nbsp;helps&nbsp;someone&nbsp;sometime....&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;9&nbsp;February&nbsp;2011&nbsp;10:00,&nbsp;Brad&nbsp;Milne&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:brad.milne@devx.runthered.com&quot;&gt;brad.milne@devx.runthered.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;Hi&nbsp;all<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&amp;#39;ve&nbsp;looked&nbsp;around&nbsp;for&nbsp;SFTP&nbsp;client&nbsp;doco,&nbsp;but&nbsp;it&amp;#39;s&nbsp;come&nbsp;up&nbsp;pretty&nbsp;thin&nbsp;on&nbsp;the&nbsp;ground.&nbsp;I&amp;#39;ve&nbsp;seen &lt;a&nbsp;href=&quot;http://twistedmatrix.com/trac/wiki/TwistedConch&quot;&nbsp;target=&quot;_blank&quot;&gt;http://twistedmatrix.com/trac/wiki/TwistedConch&lt;/a&gt;&nbsp;and&nbsp;everything&nbsp;under&nbsp;it.&nbsp;With&nbsp;it&nbsp;I&amp;#39;ve&nbsp;been&nbsp;able&nbsp;to&nbsp;connect&nbsp;via&nbsp;SSH&nbsp;to&nbsp;a&nbsp;server&nbsp;and&nbsp;run&nbsp;a&nbsp;command&nbsp;(&lt;i&gt;a&nbsp;la&lt;/i&gt; the&nbsp;&amp;#39;cat&amp;#39;&nbsp;example&nbsp;from&nbsp;tutorial&nbsp;page&nbsp;and&nbsp;from &lt;a&nbsp;href=&quot;http://twistedmatrix.com/documents/current/conch/examples/sshsimpleclient.py&quot;&nbsp;shape=&quot;rect&quot;&nbsp;target=&quot;_blank&quot;&gt;sshsimpleclient.py&lt;/a&gt;).&lt;/div&gt;<br>
<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;On&nbsp;the&nbsp;other&nbsp;hand,&nbsp;plenty&nbsp;of&nbsp;posts&nbsp;recommend&nbsp;checking&nbsp;out&nbsp;cftp.py&nbsp;in&nbsp;scripts/.&nbsp;That&nbsp;uses&nbsp;the&nbsp;FileTransferClient,&nbsp;and&nbsp;appears&nbsp;to&nbsp;be&nbsp;more&nbsp;along&nbsp;the&nbsp;lines&nbsp;of&nbsp;what&nbsp;is&nbsp;needed&nbsp;for&nbsp;a&nbsp;persistent&nbsp;SFTP&nbsp;connection&nbsp;and&nbsp;file&nbsp;transfers.&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What&nbsp;seems&nbsp;to&nbsp;be&nbsp;happening&nbsp;with&nbsp;the&nbsp;below&nbsp;is&nbsp;that&nbsp;the&nbsp;connection&nbsp;is&nbsp;being&nbsp;created&nbsp;OK,&nbsp;but&nbsp;I&nbsp;haven&amp;#39;t&nbsp;been&nbsp;able&nbsp;to&nbsp;utilise&nbsp;the _remoteGlob&nbsp;method&nbsp;(taken&nbsp;from&nbsp;cftp.py).&nbsp;It&nbsp;simply&nbsp;hangs.&lt;/div&gt;&lt;div&gt;&lt;br&gt;<br>
<br>
&lt;/div&gt;&lt;div&gt;My&nbsp;sandbox&nbsp;code&nbsp;is&nbsp;below.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Any&nbsp;help&nbsp;greatly&nbsp;appreciated.&lt;/div&gt;&lt;div&gt;Brad&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;code&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;import&nbsp;os&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.python&nbsp;import&nbsp;failure&lt;/div&gt;<br>
&lt;/div&gt;<br>
&lt;div&gt;&lt;div&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor,&nbsp;protocol,&nbsp;defer&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.conch.ssh&nbsp;import&nbsp;transport,&nbsp;connection,&nbsp;userauth,&nbsp;channel,&nbsp;common, filetransfer&lt;/div&gt;&lt;div&gt;import&nbsp;logging&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.python&nbsp;import&nbsp;log&lt;/div&gt;<br>
<br>
&lt;div&gt;import&nbsp;sys&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;class&nbsp;SimpleTransport(transport.SSHClientTransport):&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;verifyHostKey(self,&nbsp;hostKey,&nbsp;fingerprint):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; print&nbsp;&amp;#39;host&nbsp;key&nbsp;fingerprint:&nbsp;%s&amp;#39;&nbsp;%&nbsp;fingerprint&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;defer.succeed(1) &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;connectionSecure(self):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &amp;#39;&amp;#39;&amp;#39;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; called&nbsp;when&nbsp;the&nbsp;encryption&nbsp;is&nbsp;set&nbsp;up&nbsp;and&nbsp;other&nbsp;services&nbsp;can&nbsp;be&nbsp;run&lt;/div&gt;&lt;div&gt;<br>
<br>
  &nbsp; &nbsp; &nbsp; &amp;#39;&amp;#39;&amp;#39;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.requestService(SimpleUserAuth(USERNAME,SimpleConnection()))&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;class&nbsp;SimpleConnection(connection.SSHConnection):&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;serviceStarted(self):&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.openChannel(SSHSession())&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;class&nbsp;SimpleUserAuth(userauth.SSHUserAuthClient):&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;getPassword(self):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;defer.succeed(PASS)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;<br>
<br>
&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;class&nbsp;SSHSession(channel.SSHChannel):&lt;/div&gt;&lt;div&gt;  &nbsp; &amp;#39;&amp;#39;&amp;#39;&lt;/div&gt;&lt;div&gt;  &nbsp; Things&nbsp;to&nbsp;do&nbsp;within&nbsp;the&nbsp;active&nbsp;SSH&nbsp;session.&lt;/div&gt;&lt;div&gt;  &nbsp; &amp;#39;&amp;#39;&amp;#39;&lt;/div&gt;&lt;div&gt;  &nbsp; name&nbsp;=&nbsp;&amp;#39;session&amp;#39;&lt;/div&gt;<br>
&lt;div&gt;<br>
  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;__init__(self,&nbsp;interface_handler=None,&nbsp;*args,&nbsp;**kwargs):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; channel.SSHChannel.__init__(self,&nbsp;*args,&nbsp;**kwargs)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.interface_handler&nbsp;=&nbsp;interface_handler&nbsp;or&nbsp;SftpClient(self)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;channelOpen(self,&nbsp;ignoredData):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.data&nbsp;=&nbsp;&amp;#39;&amp;#39;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; #&nbsp;Create&nbsp;an&nbsp;sftp&nbsp;connection&nbsp;(stays&nbsp;open)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;self.conn.sendRequest(self,&nbsp;&amp;#39;subsystem&amp;#39;,&nbsp;common.NS(&amp;#39;sftp&amp;#39;),&nbsp;wantReply=1)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; d.addCallback(self._cbSubsystem)&lt;/div&gt;&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;_cbSubsystem(self,&nbsp;result):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.interface_handler.getDirectoryContents(&amp;#39;/tmp&amp;#39;)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;closeReceived(self):&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;a&nbsp;href=&quot;http://logging.info&quot;&nbsp;target=&quot;_blank&quot;&gt;logging.info&lt;/a&gt;(&amp;#39;remote&nbsp;side&nbsp;closed&nbsp;%s&amp;#39;&nbsp;%&nbsp;self)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.conn.sendClose(self)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; reactor.stop()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;<br>
class&nbsp;SftpClient(object):&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;__init__(self,&nbsp;transport,&nbsp;*args,&nbsp;**kwargs):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; super(SftpClient,&nbsp;self).__init__(*args,&nbsp;**kwargs)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.transport&nbsp;=&nbsp;transport&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self._client&nbsp;=&nbsp;filetransfer.FileTransferClient()&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; @property&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;client(self):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; if&nbsp;not&nbsp;self._client.connected:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self._client.makeConnection(self.transport)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; logging.debug(&amp;quot;Made&nbsp;&amp;#39;connection&amp;#39;&nbsp;with&nbsp;transport&nbsp;class&amp;quot;)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;self._client&lt;/div&gt;&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;getDirectoryContents(self,&nbsp;path):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;self._remoteGlob(path)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; def&nbsp;gotit(files):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print&nbsp;&amp;quot;Got&nbsp;%s:&nbsp;%s&amp;quot;&nbsp;%&nbsp;(type(files),&nbsp;files)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; d.addCallback(gotit)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;d&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; #&nbsp;Accessory&nbsp;methods.&lt;/div&gt;&lt;div&gt;  &nbsp; #&nbsp;These&nbsp;are&nbsp;stolen&nbsp;from&nbsp;&lt;a&nbsp;href=&quot;http://twisted.conch.scripts.cftp.py&quot;&nbsp;target=&quot;_blank&quot;&gt;twisted.conch.scripts.cftp.py&lt;/a&gt;.&nbsp;We&nbsp;can&amp;#39;t&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; #&nbsp;import&nbsp;that&nbsp;module&nbsp;as&nbsp;it&nbsp;contains&nbsp;unix-dependent&nbsp;imports.&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;_remoteGlob(self,&nbsp;fullPath):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; logging.debug(&amp;#39;looking&nbsp;up&nbsp;%s&amp;#39;&nbsp;%&nbsp;fullPath)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; head,&nbsp;tail&nbsp;=&nbsp;os.path.split(fullPath)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; if&nbsp;&amp;#39;*&amp;#39;&nbsp;in&nbsp;tail&nbsp;or&nbsp;&amp;#39;?&amp;#39;&nbsp;in&nbsp;tail:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; glob&nbsp;=&nbsp;1&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; else:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; glob&nbsp;=&nbsp;0&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; if&nbsp;tail&nbsp;and&nbsp;not&nbsp;glob:&nbsp;#&nbsp;could&nbsp;be&nbsp;file&nbsp;or&nbsp;directory&lt;/div&gt;<br>
&lt;div&gt;<br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #&nbsp;try&nbsp;directory&nbsp;first&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; logging.debug(&amp;quot;Opening&nbsp;dir&amp;quot;)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;self.client.openDirectory(fullPath)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.addCallback(self._cbOpenList,&nbsp;&amp;#39;&amp;#39;)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.addErrback(self._ebNotADirectory,&nbsp;head,&nbsp;tail)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; else:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;self.client.openDirectory(head)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.addCallback(self._cbOpenList,&nbsp;tail)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;d&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;_cbOpenList(self,&nbsp;directory,&nbsp;glob):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; logging.debug(&amp;quot;Got&nbsp;dir&amp;quot;)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; files&nbsp;=&nbsp;[]&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;directory.read()&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d.addBoth(self._cbReadFile,&nbsp;files,&nbsp;directory,&nbsp;glob)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;d&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;_ebNotADirectory(self,&nbsp;reason,&nbsp;path,&nbsp;glob):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; logging.debug(&amp;quot;Not&nbsp;a&nbsp;dir&amp;quot;)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;self.client.openDirectory(path)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d.addCallback(self._cbOpenList,&nbsp;glob)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;d&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;_cbReadFile(self,&nbsp;files,&nbsp;l,&nbsp;directory,&nbsp;glob):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; logging.debug(&amp;quot;Reading&nbsp;file&amp;quot;)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; if&nbsp;not&nbsp;isinstance(files,&nbsp;failure.Failure):&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if&nbsp;glob:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; raise&nbsp;NotImplementedError(&amp;quot;don&amp;#39;t&nbsp;have&nbsp;fnmatch&nbsp;available&nbsp;to&nbsp;use&nbsp;on&nbsp;Windows&nbsp;so&nbsp;have&nbsp;commented&nbsp;this&nbsp;bit&nbsp;out&amp;quot;)&lt;/div&gt;&lt;div&gt;#&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; l.extend([f&nbsp;for&nbsp;f&nbsp;in&nbsp;files&nbsp;if&nbsp;fnmatch.fnmatch(f[0],&nbsp;glob)])&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; l.extend(files)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;directory.read()&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.addBoth(self._cbReadFile,&nbsp;l,&nbsp;directory,&nbsp;glob)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;d&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; else:&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reason&nbsp;=&nbsp;files&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reason.trap(EOFError)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; directory.close()&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;l&lt;/div&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;if&nbsp;__name__==&amp;#39;__main__&amp;#39;:&lt;/div&gt;<br>
&lt;div&gt;<br>
  &nbsp; protocol.ClientCreator(reactor,&nbsp;SimpleTransport).connectTCP(HOST,&nbsp;22)&lt;/div&gt;&lt;div&gt;  &nbsp; log.startLogging(sys.stdout,&nbsp;setStdout=0)&lt;/div&gt;&lt;div&gt;  &nbsp; reactor.run()&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;/code&amp;gt;&lt;/div&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;&lt;br&gt;--&nbsp;&lt;br&gt;&lt;span&nbsp;style=&quot;font-family:arial,&nbsp;sans-serif;font-size:13px;border-collapse:collapse;color:rgb(136,&nbsp;136,&nbsp;136)&quot;&gt;Brad&nbsp;Milne&nbsp;|&nbsp;Run&nbsp;The&nbsp;Red&nbsp;| &lt;span&nbsp;style=&quot;font-family:arial,&nbsp;sans-serif;font-size:13px;white-space:nowrap&quot;&gt;&lt;b&gt;&lt;a&nbsp;href=&quot;mailto:brad.milne@devx.runthered.com&quot;&nbsp;style=&quot;color:rgb(42,&nbsp;93,&nbsp;176)&quot;&nbsp;target=&quot;_blank&quot;&gt;brad.milne@devx.runthered.com&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;<br>
<br>
&lt;/div&gt;<br>

</tt>
