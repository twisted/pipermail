<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;&lt;div&nbsp;dir=&quot;ltr&quot;&gt;On&nbsp;Wed,&nbsp;Mar&nbsp;3,&nbsp;2021&nbsp;at&nbsp;3:08&nbsp;AM&nbsp;Glyph&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:glyph@twistedmatrix.com&quot;&gt;glyph@twistedmatrix.com&lt;/a&gt;&gt;&nbsp;wrote:&lt;br&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;border-left:1px&nbsp;solid&nbsp;rgb(204,204,204);padding-left:1ex&quot;&gt;&lt;div&nbsp;style=&quot;overflow-wrap:&nbsp;break-word;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;On&nbsp;Mar&nbsp;2,&nbsp;2021,&nbsp;at&nbsp;6:10&nbsp;PM,&nbsp;Jean-Paul&nbsp;Calderone&nbsp;&lt;&lt;a&nbsp;href=&quot;mailto:exarkun@twistedmatrix.com&quot;&nbsp;target=&quot;_blank&quot;&gt;exarkun@twistedmatrix.com&lt;/a&gt;&gt;&nbsp;wrote:&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;div&nbsp;style=&quot;font-family:Menlo-Regular;font-size:14px;font-style:normal;font-variant-caps:normal;font-weight:normal;letter-spacing:normal;text-align:start;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;text-decoration:none&quot;&gt;Policy&nbsp;aside,&nbsp;this&nbsp;change&nbsp;doesn&#39;t&nbsp;seem&nbsp;like&nbsp;much&nbsp;of&nbsp;an&nbsp;improvement&nbsp;to&nbsp;me. &nbsp;If&nbsp;I&nbsp;were&nbsp;to&nbsp;guess,&nbsp;I&nbsp;would&nbsp;guess&nbsp;the&nbsp;change&nbsp;was&nbsp;made&nbsp;to&nbsp;satisfy&nbsp;some&nbsp;check&nbsp;Mypy&nbsp;is&nbsp;now&nbsp;being&nbsp;asked&nbsp;to&nbsp;make&nbsp;about&nbsp;Twisted. &nbsp;If&nbsp;that&#39;s&nbsp;the&nbsp;case,&nbsp;it&nbsp;seems&nbsp;unfortunate&nbsp;that&nbsp;real-world&nbsp;software&nbsp;is&nbsp;suffering&nbsp;so&nbsp;that&nbsp;a&nbsp;synthetic&nbsp;goal&nbsp;can&nbsp;be&nbsp;achieved. &nbsp;I&nbsp;do&nbsp;recognize&nbsp;there&nbsp;is&nbsp;a&nbsp;perception&nbsp;that&nbsp;practical&nbsp;value&nbsp;can&nbsp;come&nbsp;from&nbsp;attending&nbsp;to&nbsp;the&nbsp;errors&nbsp;Mypy&nbsp;reports. &nbsp;It&nbsp;would&nbsp;probably&nbsp;benefit&nbsp;everyone&nbsp;if&nbsp;more&nbsp;care&nbsp;were&nbsp;taken&nbsp;to&nbsp;consider&nbsp;the&nbsp;real-world&nbsp;consequences&nbsp;of&nbsp;changes&nbsp;that&nbsp;are&nbsp;made&nbsp;to&nbsp;satisfy&nbsp;the&nbsp;non-real-world&nbsp;goalposts&nbsp;set&nbsp;by&nbsp;tools&nbsp;like&nbsp;Mypy.&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;do&nbsp;think&nbsp;that&nbsp;Mypy&nbsp;was&nbsp;likely&nbsp;highlighting&nbsp;a&nbsp;real&nbsp;issue&nbsp;here,&nbsp;and&nbsp;it&nbsp;should&nbsp;have&nbsp;been&nbsp;fixed. &nbsp;We&nbsp;had&nbsp;documented&nbsp;interfaces&nbsp;already,&nbsp;and&nbsp;we&nbsp;were&nbsp;failing&nbsp;to&nbsp;adhere&nbsp;to&nbsp;them&nbsp;properly,&nbsp;and&nbsp;Mypy&nbsp;was&nbsp;complaining&nbsp;about&nbsp;that.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For&nbsp;easy&nbsp;reference,&nbsp;the&nbsp;change&nbsp;that&nbsp;made&nbsp;these&nbsp;fixes&nbsp;is&nbsp;here &lt;a&nbsp;href=&quot;https://github.com/twisted/twisted/pull/1298&quot;&nbsp;target=&quot;_blank&quot;&gt;https://github.com/twisted/twisted/pull/1298&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This&nbsp;genre&nbsp;of&nbsp;fix&nbsp;is&nbsp;definitely&nbsp;something&nbsp;we&nbsp;should&nbsp;unwind&nbsp;over&nbsp;time,&nbsp;although&nbsp;it&nbsp;does&nbsp;make&nbsp;it&nbsp;easier&nbsp;to&nbsp;start&nbsp;mypy-clean&nbsp;rather&nbsp;than&nbsp;have&nbsp;hundreds&nbsp;of&nbsp;exclusion&nbsp;lines&nbsp;that&nbsp;need&nbsp;to&nbsp;be&nbsp;manually&nbsp;adjusted,&nbsp;so&nbsp;on&nbsp;balance&nbsp;I&nbsp;agree&nbsp;with&nbsp;this&nbsp;tradeoff&nbsp;at&nbsp;the&nbsp;point&nbsp;it&nbsp;was&nbsp;made.&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Broadly,&nbsp;I&nbsp;agree. &nbsp;But&nbsp;not&nbsp;with&nbsp;this&nbsp;part. &nbsp;It&nbsp;seems&nbsp;like&nbsp;there&nbsp;is&nbsp;clearly&nbsp;a&nbsp;trade-off&nbsp;that&nbsp;is&nbsp;better&nbsp;for&nbsp;everyone. &nbsp;The&nbsp;trade-off&nbsp;represented&nbsp;by&nbsp;#1298:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Breaks&nbsp;application&nbsp;code&nbsp;without&nbsp;providing&nbsp;any&nbsp;new&nbsp;functionality&nbsp;or&nbsp;fixing&nbsp;any&nbsp;bugs&lt;/li&gt;&lt;li&gt;Captures&nbsp;a&nbsp;long&nbsp;list&nbsp;of&nbsp;TODOs&nbsp;as&nbsp;an&nbsp;arbitrarily&nbsp;complex&nbsp;collection&nbsp;of&nbsp;sources&nbsp;spread&nbsp;across&nbsp;the&nbsp;entire&nbsp;codebase&lt;/li&gt;&lt;li&gt;All&nbsp;the&nbsp;work&nbsp;of&nbsp;addressing&nbsp;the&nbsp;problems&nbsp;still&nbsp;remains&nbsp;to&nbsp;be&nbsp;done &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt; Contrast&nbsp;this&nbsp;with&nbsp;any&nbsp;basic&nbsp;ratchet-style&nbsp;approach&nbsp;(for&nbsp;example,&nbsp;capture&nbsp;the&nbsp;list&nbsp;of&nbsp;mypy&nbsp;errors,&nbsp;then&nbsp;allow&nbsp;any&nbsp;PR&nbsp;that&nbsp;either&nbsp;removes&nbsp;some&nbsp;or&nbsp;doesn&#39;t&nbsp;add&nbsp;any&nbsp;new&nbsp;ones):&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;At&nbsp;the&nbsp;outset,&nbsp;no&nbsp;application&nbsp;code&nbsp;breaks&nbsp;because&nbsp;nothing&nbsp;has&nbsp;actually&nbsp;changed&lt;/li&gt;&lt;li&gt;As&nbsp;work&nbsp;towards&nbsp;&lt;b&gt;fixing&lt;/b&gt;&nbsp;the&nbsp;TODOs&nbsp;progresses,&nbsp;if&nbsp;it&nbsp;&lt;i&gt;does&lt;/i&gt; break&nbsp;application&nbsp;code&nbsp;then&nbsp;at&nbsp;least&nbsp;applications&nbsp;have&nbsp;a&nbsp;chance&nbsp;at&nbsp;some&nbsp;benefit&lt;/li&gt;&lt;li&gt;As&nbsp;the&nbsp;work&nbsp;towards&nbsp;fixing&nbsp;the&nbsp;TODOs&nbsp;progresses,&nbsp;maintainers&nbsp;can&nbsp;easily&nbsp;look&nbsp;up&nbsp;what&nbsp;issues&nbsp;remain&nbsp;by&nbsp;consulting&nbsp;the&nbsp;list&nbsp;of&nbsp;errors&nbsp;that&nbsp;feeds&nbsp;the&nbsp;ratchet-style&nbsp;job.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;exact&nbsp;mechanism&nbsp;for&nbsp;the&nbsp;ratchet&nbsp;isn&#39;t&nbsp;the&nbsp;point&nbsp;here. &nbsp;Maybe&nbsp;Mypy&nbsp;plays&nbsp;more&nbsp;nicely&nbsp;with&nbsp;inline&nbsp;comments&nbsp;telling&nbsp;it&nbsp;to&nbsp;ignore&nbsp;something,&nbsp;I&nbsp;don&#39;t&nbsp;know. &nbsp;The&nbsp;point&nbsp;is:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;A&nbsp;centralized&nbsp;list&nbsp;of&nbsp;stuff&nbsp;left&nbsp;to&nbsp;do&nbsp;is&nbsp;better&nbsp;than&nbsp;a&nbsp;mess&nbsp;smeared&nbsp;across&nbsp;the&nbsp;whole&nbsp;codebase&lt;/li&gt;&lt;li&gt;If&nbsp;we&#39;re&nbsp;going&nbsp;to&nbsp;risk&nbsp;breaking&nbsp;applications&nbsp;we&nbsp;should&nbsp;at&nbsp;least&nbsp;try&nbsp;to&nbsp;offer&nbsp;some&nbsp;value&nbsp;to&nbsp;them&lt;/li&gt;&lt;li&gt;We&nbsp;shouldn&#39;t&nbsp;make&nbsp;applications&nbsp;deal&nbsp;with&nbsp;every&nbsp;change&nbsp;twice&nbsp;when&nbsp;we&nbsp;could&nbsp;just&nbsp;disturb&nbsp;them&nbsp;once&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;Jean-Paul&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;border-left:1px&nbsp;solid&nbsp;rgb(204,204,204);padding-left:1ex&quot;&gt;&lt;div&nbsp;style=&quot;overflow-wrap:&nbsp;break-word;&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Specifically&nbsp;what&nbsp;I&nbsp;mean&nbsp;by&nbsp;&quot;this&nbsp;genre&nbsp;of&nbsp;fix&quot;&nbsp;is&nbsp;that&nbsp;you&nbsp;can&nbsp;always&nbsp;make&nbsp;mypy&nbsp;happy&nbsp;by&nbsp;transforming&nbsp;code&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;style=&quot;margin:0px&nbsp;0px&nbsp;0px&nbsp;40px;border:none;padding:0px&quot;&gt;&lt;div&gt;&lt;div&gt;class&nbsp;Thing:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;pass&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thing().stuff()&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;into&nbsp;code&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;blockquote&nbsp;style=&quot;margin:0px&nbsp;0px&nbsp;0px&nbsp;40px;border:none;padding:0px&quot;&gt;&lt;div&gt;&lt;div&gt;class&nbsp;Thing:&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;@property&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp;def&nbsp;stuff(self):&lt;/div&gt;&lt;div&gt; &nbsp; &nbsp; &nbsp; &nbsp;raise&nbsp;AttributeError(&quot;no&nbsp;such&nbsp;thing&nbsp;as&nbsp;`stuff`&quot;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thing().stuff()&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;The&nbsp;runtime&nbsp;behavior&nbsp;is&nbsp;the&nbsp;same,&nbsp;but&nbsp;now&nbsp;Mypy&nbsp;can&#39;t&nbsp;tell&nbsp;you&nbsp;about&nbsp;this&nbsp;class&nbsp;of&nbsp;bug&nbsp;any&nbsp;more.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So,&nbsp;at&nbsp;some&nbsp;point,&nbsp;we&nbsp;should&nbsp;slowly&nbsp;unwind&nbsp;all&nbsp;`NotImplementedError`&nbsp;methods&nbsp;and&nbsp;find&nbsp;ways&nbsp;to&nbsp;either&nbsp;implement&nbsp;them&nbsp;for&nbsp;real&nbsp;or&nbsp;make&nbsp;their&nbsp;required&nbsp;use&nbsp;raise&nbsp;at&nbsp;import&nbsp;time.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Finally:&nbsp;let&#39;s&nbsp;not&nbsp;develop&nbsp;an&nbsp;aversion&nbsp;to&nbsp;new&nbsp;tooling&nbsp;and&nbsp;change&nbsp;because&nbsp;it&nbsp;might&nbsp;create&nbsp;problems;&nbsp;experience&nbsp;over&nbsp;the&nbsp;last&nbsp;few&nbsp;years&nbsp;has&nbsp;shown&nbsp;me&nbsp;that&nbsp;Mypy&nbsp;can&nbsp;catch&nbsp;&lt;i&gt;tons&lt;/i&gt;&lt;span&nbsp;style=&quot;font-style:normal&quot;&gt; of&nbsp;real&nbsp;bugs&nbsp;and&nbsp;it&#39;s&nbsp;well&nbsp;worth&nbsp;getting&nbsp;the&nbsp;codebase&nbsp;to&nbsp;type&nbsp;check&lt;/span&gt;. &nbsp;If&nbsp;we&nbsp;want&nbsp;to&nbsp;prevent&nbsp;breakages&nbsp;like&nbsp;this&nbsp;in&nbsp;the&nbsp;future,&nbsp;the&nbsp;answer&nbsp;is&nbsp;not&nbsp;to&nbsp;stop&nbsp;trying&nbsp;to&nbsp;get&nbsp;linters&nbsp;and&nbsp;typecheckers&nbsp;to&nbsp;run&nbsp;cleanly&nbsp;with&nbsp;arbitrary&nbsp;changes,&nbsp;but&nbsp;to&nbsp;figure&nbsp;out&nbsp;some&nbsp;kind&nbsp;of&nbsp;&lt;i&gt;continuous&nbsp;integration &lt;/i&gt;solution&nbsp;that&#39;s&nbsp;actually&nbsp;continuous&nbsp;with&nbsp;our&nbsp;downstream&nbsp;dependencies&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;If&nbsp;dependencies&nbsp;could&nbsp;start&nbsp;testing&nbsp;against&nbsp;Twisted&nbsp;trunk&nbsp;in&nbsp;some&nbsp;capacity,&nbsp;we&nbsp;could&nbsp;get&nbsp;notified&nbsp;close&nbsp;to&nbsp;when&nbsp;unintentionally&nbsp;breaking&nbsp;changes&nbsp;occur,&nbsp;and&nbsp;dependencies&nbsp;can&nbsp;let&nbsp;us&nbsp;know&nbsp;well&nbsp;before&nbsp;the&nbsp;release&nbsp;happens,&nbsp;and&nbsp;we&nbsp;can&nbsp;either&nbsp;revert&nbsp;or&nbsp;they&nbsp;can&nbsp;fix&nbsp;things&nbsp;if&nbsp;the&nbsp;error&nbsp;is&nbsp;on&nbsp;their&nbsp;end. &nbsp;If&nbsp;initially,&nbsp;say,&nbsp;crossbar&nbsp;and&nbsp;matrix&nbsp;would&nbsp;like&nbsp;to&nbsp;work&nbsp;with&nbsp;us&nbsp;to&nbsp;set&nbsp;up&nbsp;some&nbsp;kind&nbsp;of&nbsp;repeatable&nbsp;pattern&nbsp;we&nbsp;can&nbsp;suggest&nbsp;to&nbsp;others,&nbsp;that&nbsp;would&nbsp;be&nbsp;great.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;-g&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;_______________________________________________&lt;br&gt;<br>
Twisted-Python&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&nbsp;target=&quot;_blank&quot;&gt;Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&nbsp;rel=&quot;noreferrer&quot;&nbsp;target=&quot;_blank&quot;&gt;https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
