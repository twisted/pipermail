<tt>
Hello,&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&nbsp;am&nbsp;trying&nbsp;to&nbsp;write&nbsp;a&nbsp;UDP&nbsp;based&nbsp;logging&nbsp;server.&nbsp; &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Generically&nbsp;speaking&nbsp;it&nbsp;looks&nbsp;somewhat&nbsp;like&nbsp;syslog&nbsp;except&nbsp;I&nbsp;needed&nbsp;a&nbsp;bit&nbsp;more&nbsp;flexibility&nbsp;that&nbsp;syslog&nbsp;can&nbsp;provide&nbsp;(or&nbsp;at&nbsp;least&nbsp;that&nbsp;I&nbsp;think&nbsp;it&nbsp;can&nbsp;provide).&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;What&nbsp;I&amp;#39;m&nbsp;trying&nbsp;to&nbsp;accomplish&nbsp;is:&lt;/div&gt;&lt;div&gt;--&nbsp;receive&nbsp;UDP&nbsp;packet &lt;/div&gt;&lt;div&gt;--&nbsp;parse&nbsp;UDP&nbsp;packet&lt;/div&gt;&lt;div&gt;--&nbsp;write&nbsp;output&nbsp;to&nbsp;a&nbsp;log&nbsp;file&lt;/div&gt;&lt;div&gt;--&nbsp;have&nbsp;the&nbsp;log&nbsp;files&nbsp;rotated&nbsp;on&nbsp;a&nbsp;periodic&nbsp;basis&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So&nbsp;far&nbsp;I&nbsp;have&nbsp;a&nbsp;&amp;quot;working&amp;quot;&nbsp;implementation&nbsp;...&nbsp;but&nbsp;I&amp;#39;m&nbsp;noticing&nbsp;that&nbsp;if&nbsp;I&nbsp;do&nbsp;the&nbsp;following:&lt;/div&gt;&lt;div&gt;--&nbsp;log&nbsp;when&nbsp;a&nbsp;message&nbsp;is&nbsp;received&lt;/div&gt;&lt;div&gt;--&nbsp;that&nbsp;for&nbsp;that&nbsp;message&nbsp;it&nbsp;&amp;quot;might&amp;quot;&nbsp;show&nbsp;up&nbsp;in&nbsp;the&nbsp;file&nbsp;a&nbsp;pretty&nbsp;lengthy&nbsp;period&nbsp;of&nbsp;time&nbsp;later&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;actual&nbsp;UDP&nbsp;protocol:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;class&nbsp;VocsLogger(DatagramProtocol):&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;datagramReceived(self,&nbsp;data,&nbsp;(host,&nbsp;port)):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; _proc_msg(self.transport,&nbsp;data,&nbsp;(host,&nbsp;port))._new_msg().addCallback(handler)&lt;/div&gt;<br>
&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The&nbsp;_proc_msg&nbsp;class:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;class&nbsp;_proc_msg:&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;__init__(self,&nbsp;sck,&nbsp;data,&nbsp;(host,&nbsp;port)):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self._sck&nbsp;=&nbsp;sck&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self._data&nbsp;=&nbsp;data&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; self._host&nbsp;=&nbsp;host&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self._port&nbsp;=&nbsp;port&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;_new_msg(self):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d,&nbsp;_&nbsp;=&nbsp;LogMsg().ParseSocketMsg(self._data)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; if&nbsp;d.type.upper()&nbsp;==&nbsp;DISKINFO[0]:&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DISKINFO[1].write(d.ToString()&nbsp;+&nbsp;&amp;quot;\n%s\n&amp;quot;&nbsp;%&nbsp;(LOG_DELIM))&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; elif&nbsp;d.type.upper()&nbsp;==&nbsp;LOADAVG[0]:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LOADAVG[1].write(d.ToString()&nbsp;+&nbsp;&amp;quot;\n%s\n&amp;quot;&nbsp;%&nbsp;(LOG_DELIM))&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; elif&nbsp;d.type.upper()&nbsp;==&nbsp;MEMINFO[0]:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MEMINFO[1].write(d.ToString()&nbsp;+&nbsp;&amp;quot;\n%s\n&amp;quot;&nbsp;%&nbsp;(LOG_DELIM))&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; elif&nbsp;d.type.upper()&nbsp;==&nbsp;NETDEV[0]:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NETDEV[1].write(d.ToString()&nbsp;+&nbsp;&amp;quot;\n%s\n&amp;quot;&nbsp;%&nbsp;(LOG_DELIM))&lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; elif&nbsp;d.type.upper()&nbsp;==&nbsp;PSAUX[0]:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PSAUX[1].write(d.ToString()&nbsp;+&nbsp;&amp;quot;\n%s\n&amp;quot;&nbsp;%&nbsp;(LOG_DELIM))&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; elif&nbsp;d.type.upper()&nbsp;==&nbsp;WHOINFO[0]:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WHOINFO[1].write(d.ToString()&nbsp;+&nbsp;&amp;quot;\n%s\n&amp;quot;&nbsp;%&nbsp;(LOG_DELIM)) &lt;/div&gt;<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; else:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DEFAULT[1].write(d.ToString()&nbsp;+&nbsp;&amp;quot;\n%s\n&amp;quot;&nbsp;%&nbsp;(LOG_DELIM))&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;And&nbsp;I&nbsp;have&nbsp;a&nbsp;log&nbsp;rotate&nbsp;service&nbsp;that&nbsp;looks&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;<br>
class&nbsp;LogRotateService(TimerService):&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;__init__(self):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; TimerService.__init__(self,&nbsp;60&nbsp;*&nbsp;5,&nbsp;LogRotate)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;And&nbsp;then&nbsp;I&amp;#39;m&nbsp;using&nbsp;twistd&nbsp;to&nbsp;actually&nbsp;make&nbsp;it&nbsp;work:&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;LogRotate()&lt;/div&gt;&lt;div&gt;application&nbsp;=&nbsp;service.Application(&amp;quot;vocs-logger&amp;quot;)&lt;/div&gt;&lt;div&gt;rotateLogService&nbsp;=&nbsp;LogRotateService()&lt;/div&gt;&lt;div&gt;rotateLogService.setServiceParent(application)&lt;/div&gt;&lt;div&gt;<br>
loggerService&nbsp;=&nbsp;internet.UDPServer(int(config[&amp;#39;port&amp;#39;]),&nbsp;VocsLogger(),&nbsp;interface=config[&amp;#39;host&amp;#39;])&lt;/div&gt;&lt;div&gt;loggerService.setServiceParent(application)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I&amp;#39;m&nbsp;probably&nbsp;approaching&nbsp;this&nbsp;the&nbsp;wrong&nbsp;way&nbsp;and&nbsp;not&nbsp;sure&nbsp;if&nbsp;I&nbsp;sure&nbsp;really&nbsp;worry&nbsp;about&nbsp;deferring&nbsp;the&nbsp;actual&nbsp;process&nbsp;of&nbsp;writing&nbsp;to&nbsp;the&nbsp;log&nbsp;file&nbsp;or&nbsp;if&nbsp;there&nbsp;was&nbsp;a&nbsp;better&nbsp;way&nbsp;altogether.&lt;/div&gt;<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Thanks&nbsp;for&nbsp;any&nbsp;guidance.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;SDR&lt;/div&gt;<br>

</tt>
