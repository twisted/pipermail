"""Interface markers used by the RatControl web UI code.
"""

from twisted.python import components

class IRatControlSession(components.Interface):
    def get(key, default=None):
        """Get the given named preference from this session.
        """

    def getLocal(request, key, default=None):
        """Get a preference that was set with setLocal
        when the given request object had the same
        request.prepath as when setLocal was called.
        """

    def set(key, value):
        """Set the given named preference to the given value.
        """

    def setLocal(request, key, value):
        """Set a preference which is only visible when getLocal
        is called with a request object that has the same
        request.prepath as the request did when setLocal was
        called.
        """

    def handleRequest(request):
        """Update the user's preferences with any preference
        submissions from this request.
        """

    def locatePowerup(request, powerupClass):
        """Attempt to find a powerup of the given type. This will
        first look in the request to find any powerups that have
        already been looked up this request, then look through
        the current pool's powerups for a powerup of the given
        type.
        """


class ICommandLineResult(components.Interface):
    """The result of entering a command on the command line.
    If a string, will be shown to the user.

    If a Resource, will be rendered.
    (dp Not implemented, maybe we don't need the Resource thing)
    """


class ICurrentHome(components.Interface):
    """The Home instance associated with the current request.
    """


class ICurrentPowerup(components.Interface):
    """The Powerup which is responsible for the current web page.
    """


class ICurrentAddable(components.Interface):
    """The addable class whose form we are currently rendering.
    """


class ICurrentPool(components.Interface):
    """The pool instance associated with the current request.
    """


class ISummary(components.Interface):
    """The Widget which knows how to render a summary of the
    data class it was registered for.
    """
    def generate(self, request, node):
        """Return a new node populated with a representation of
        the data class. If this is not available, __str__ will be used.
        """

    def __str__(self):
        """Return a short string summary for use identifying the
        object.
        """

class ICurrentSlice(components.Interface):
    """The current slice of objects being displayed.
    """


class IMostRecentlyViewedMessage(components.Interface):
    """A tuple which indicates the message a user most recently acted
    upon. Tuple of (pool, iteratorParkedAtMessage)
    """

