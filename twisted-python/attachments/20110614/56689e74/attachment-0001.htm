<tt>
&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;On&nbsp;Jun&nbsp;13,&nbsp;2011,&nbsp;at&nbsp;6:30&nbsp;PM,&nbsp;Laurens&nbsp;Van&nbsp;Houtven&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Mon,&nbsp;Jun&nbsp;13,&nbsp;2011&nbsp;at&nbsp;3:38&nbsp;PM,&nbsp;&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:exarkun@twistedmatrix.com&quot;&gt;exarkun@twistedmatrix.com&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
Another&nbsp;thing&nbsp;we&nbsp;want&nbsp;is&nbsp;something&nbsp;closer&nbsp;to&nbsp;locateChild&nbsp;as&nbsp;Nevow&nbsp;and&lt;br&gt;<br>
web2&nbsp;had.&nbsp;&amp;nbsp;The&nbsp;key&nbsp;feature&nbsp;is&nbsp;being&nbsp;able&nbsp;to&nbsp;consume&nbsp;multiple&nbsp;path&lt;br&gt;<br>
segments&nbsp;(or&nbsp;none&nbsp;at&nbsp;all)&nbsp;at&nbsp;a&nbsp;time&nbsp;if&nbsp;desired.&lt;br&gt;<br>
&lt;br&gt;<br>
Jean-Paul&lt;br&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;I&nbsp;added&nbsp;it&nbsp;to&nbsp;the&nbsp;ticket.&lt;br&gt;&lt;br&gt;Someone&nbsp;on&nbsp;IRC&nbsp;mentioned&nbsp;that&nbsp;locateChild&nbsp;isn't&nbsp;exactly&nbsp;perfect&nbsp;either&nbsp;--&nbsp;how&nbsp;does&nbsp;it&nbsp;differ&nbsp;from&nbsp;the&nbsp;idealized&nbsp;API?&nbsp;&lt;br&gt;&lt;br&gt;For&nbsp;the&nbsp;people&nbsp;who&nbsp;hadn't&nbsp;seen&nbsp;locateChild&nbsp;before&nbsp;(much&nbsp;like&nbsp;myself)&nbsp;--&nbsp;the&nbsp;main&nbsp;difference&nbsp;is&nbsp;that&nbsp;instead&nbsp;of&nbsp;just&nbsp;taking&nbsp;the&nbsp;*next*&nbsp;segment,&nbsp;it&nbsp;takes&nbsp;all&nbsp;of&nbsp;the&nbsp;remaining&nbsp;ones,&nbsp;and&nbsp;instead&nbsp;of&nbsp;returning&nbsp;a&nbsp;single&nbsp;child,&nbsp;it&nbsp;returns&nbsp;a&nbsp;child&nbsp;and&nbsp;the&nbsp;remaining&nbsp;segments.&nbsp;A&nbsp;possible&nbsp;problem&nbsp;with&nbsp;this&nbsp;is&nbsp;that&nbsp;people&nbsp;might&nbsp;get&nbsp;the&nbsp;impression&nbsp;they&nbsp;should&nbsp;mess&nbsp;with&nbsp;the&nbsp;segments...&nbsp;Comments&nbsp;welcome.&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Yeah,&nbsp;messing&nbsp;with&nbsp;segments&nbsp;is&nbsp;an&nbsp;issue.&nbsp;&amp;nbsp;There's&nbsp;a&nbsp;thing&nbsp;that&nbsp;some&nbsp;Nevow&nbsp;applications&nbsp;would&nbsp;do&nbsp;which,&nbsp;while&nbsp;I'm&nbsp;not&nbsp;entirely&nbsp;sure&nbsp;it&nbsp;was&nbsp;a&nbsp;terrible&nbsp;idea,&nbsp;definitely&nbsp;exposed&nbsp;a&nbsp;weakness&nbsp;in&nbsp;this&nbsp;model.&nbsp;&amp;nbsp;We&nbsp;called&nbsp;it&nbsp;an&nbsp;&quot;internal&nbsp;redirect&quot;.&nbsp;&amp;nbsp;The&nbsp;basic&nbsp;idea&nbsp;is&nbsp;that&nbsp;your&nbsp;resource&nbsp;gets&nbsp;called&nbsp;with&nbsp;&quot;request,&nbsp;[a,&nbsp;b,&nbsp;c]&quot;&nbsp;and&nbsp;you&nbsp;return&nbsp;&quot;resource,&nbsp;[d,&nbsp;e,&nbsp;f]&quot;.&nbsp;&amp;nbsp;The&nbsp;problem&nbsp;with&nbsp;allowing&nbsp;this&nbsp;is&nbsp;that&nbsp;it&nbsp;decouples&nbsp;the&nbsp;resource&nbsp;from&nbsp;any&nbsp;sane&nbsp;way&nbsp;to&nbsp;identify&nbsp;its&nbsp;URL&nbsp;based&nbsp;on&nbsp;the&nbsp;request.&amp;nbsp;&amp;nbsp;It's&nbsp;handy&nbsp;to&nbsp;have&nbsp;something&nbsp;like&nbsp;the&nbsp;'prepath'&nbsp;attribute&nbsp;to&nbsp;assist&nbsp;in&nbsp;generating&nbsp;absolute&nbsp;URIs&nbsp;that&nbsp;can&nbsp;be&nbsp;passed&nbsp;to&nbsp;external&nbsp;systems,&nbsp;but&nbsp;you&nbsp;can't&nbsp;make&nbsp;that&nbsp;consistent&nbsp;in&nbsp;the&nbsp;face&nbsp;of&nbsp;code&nbsp;that&nbsp;arbitrarily&nbsp;manipulates&nbsp;the&nbsp;segments&nbsp;list.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Also,&nbsp;you&nbsp;can&nbsp;internally&nbsp;redirect&nbsp;this&nbsp;way&nbsp;based&nbsp;on&nbsp;path-based&nbsp;dispatch&nbsp;but&nbsp;you&nbsp;can't&nbsp;redirect&nbsp;based&nbsp;on&nbsp;hostname&nbsp;or&nbsp;other&nbsp;features&nbsp;of&nbsp;the&nbsp;request&nbsp;without&nbsp;mutating&nbsp;it.&nbsp;&amp;nbsp;So&nbsp;it&nbsp;seemed&nbsp;like&nbsp;a&nbsp;lopsided&nbsp;half-feature.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;One&nbsp;off-the-cuff&nbsp;idea&nbsp;to&nbsp;address&nbsp;this&nbsp;would&nbsp;be&nbsp;to&nbsp;have&nbsp;a&nbsp;'path'&nbsp;object&nbsp;with&nbsp;an&nbsp;API&nbsp;of&nbsp;its&nbsp;own;&nbsp;something&nbsp;like&nbsp;this:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote&nbsp;class=&quot;webkit-indent-blockquote&quot;&nbsp;style=&quot;margin:&nbsp;0&nbsp;0&nbsp;0&nbsp;40px;&nbsp;border:&nbsp;none;&nbsp;padding:&nbsp;0px;&quot;&gt;&lt;div&gt;&lt;div&gt;def&nbsp;locateDescendant(self,&nbsp;request,&nbsp;path):&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;year,&nbsp;month,&nbsp;day&nbsp;=&nbsp;path.consume(3)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;rsrc&nbsp;=&nbsp;self.resourceFromDate(year,&nbsp;month,&nbsp;day)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;return&nbsp;rsrc&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;.consume(integer)&nbsp;is&nbsp;something&nbsp;of&nbsp;a&nbsp;strawman&nbsp;here;&nbsp;you'd&nbsp;probably&nbsp;need&nbsp;a&nbsp;way&nbsp;to&nbsp;say&nbsp;stuff&nbsp;like&nbsp;&quot;consume&nbsp;all&nbsp;of&nbsp;the&nbsp;path&nbsp;segments&quot;&nbsp;or&nbsp;&quot;consume&nbsp;everything&nbsp;up&nbsp;to&nbsp;a&nbsp;segment&nbsp;with&nbsp;the&nbsp;value&nbsp;'x'&quot;,&nbsp;so&nbsp;that&nbsp;we&nbsp;didn't&nbsp;lose&nbsp;the&nbsp;(legitimate)&nbsp;flexibility&nbsp;of&nbsp;having&nbsp;a&nbsp;list.&nbsp;&amp;nbsp;We&nbsp;could&nbsp;of&nbsp;course&nbsp;just&nbsp;pass&nbsp;in&nbsp;a&nbsp;mutable&nbsp;list&nbsp;and&nbsp;not&nbsp;return&nbsp;it,&nbsp;but&nbsp;that&nbsp;provides&nbsp;a&nbsp;little&nbsp;more&nbsp;flexibility&nbsp;than&nbsp;I'd&nbsp;like,&nbsp;because&nbsp;it&nbsp;would&nbsp;allow&nbsp;you&nbsp;to&nbsp;do&nbsp;all&nbsp;the&nbsp;same&nbsp;stuff&nbsp;as&nbsp;returning&nbsp;your&nbsp;own&nbsp;arbitrary&nbsp;sequence.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Really&nbsp;this&nbsp;'path'&nbsp;is&nbsp;actually&nbsp;cursor&nbsp;over&nbsp;the&nbsp;URI&nbsp;inside&nbsp;the&nbsp;request.&nbsp;&amp;nbsp;It&nbsp;would&nbsp;be&nbsp;nice&nbsp;if&nbsp;the&nbsp;state&nbsp;associated&nbsp;with&nbsp;traversal&nbsp;were&nbsp;encapsulated&nbsp;entirely&nbsp;in&nbsp;that&nbsp;object,&nbsp;so&nbsp;that&nbsp;the&nbsp;request&nbsp;itself&nbsp;didn't&nbsp;get&nbsp;mutated&nbsp;as&nbsp;it&nbsp;traveled&nbsp;down&nbsp;the&nbsp;path.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;I'm&nbsp;also&nbsp;not&nbsp;sure&nbsp;if&nbsp;it&nbsp;should&nbsp;be&nbsp;allowed&nbsp;to&nbsp;return&nbsp;an&nbsp;IResource&nbsp;(and&nbsp;basically&nbsp;use&nbsp;the&nbsp;IResource&nbsp;getChild&nbsp;behavior&nbsp;whenever&nbsp;you&nbsp;see&nbsp;an&nbsp;IResource...)&nbsp;or&nbsp;if&nbsp;it&nbsp;should&nbsp;only&nbsp;return&nbsp;the&nbsp;new&nbsp;things.&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;One&nbsp;return-type&nbsp;signature&nbsp;is&nbsp;a&nbsp;good&nbsp;idea.&nbsp;&amp;nbsp;Convenience&nbsp;APIs&nbsp;are&nbsp;better.&nbsp;&amp;nbsp;That&nbsp;said,&nbsp;if&nbsp;we&nbsp;do&nbsp;go&nbsp;with&nbsp;2-tuple&nbsp;as&nbsp;the&nbsp;return&nbsp;type,&nbsp;good&nbsp;error&nbsp;reporting&nbsp;is&nbsp;crucial;&nbsp;it's&nbsp;very&nbsp;easy&nbsp;to&nbsp;accidentally&nbsp;return&nbsp;a&nbsp;resource.&lt;/div&gt;&lt;br&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;&lt;div&gt;Perhaps&nbsp;there&nbsp;could&nbsp;be&nbsp;an&nbsp;adapter:&nbsp;if&nbsp;entity.locateChild([a,&nbsp;b,&nbsp;c])&nbsp;returns&nbsp;a&nbsp;(resource,&nbsp;[b,&nbsp;c]),&nbsp;the&nbsp;resource&nbsp;is&nbsp;adapted&nbsp;to&nbsp;IEntity&nbsp;(working&nbsp;title&nbsp;for&nbsp;I2NewResource2),&nbsp;and&nbsp;the&nbsp;adapter's&nbsp;.locateChild([b,&nbsp;c])&nbsp;call&nbsp;gets&nbsp;translated&nbsp;into&nbsp;self.wrappedResource.getChild(b).getChild(c),&nbsp;or&nbsp;something.&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;That&nbsp;seems&nbsp;sensible.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
