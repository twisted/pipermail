# ========================================= client.py ========================================
from twisted.spread import pb
from twisted.internet import reactor

from copyableClasses import MyTypeWrapper

serverNode = "localhost"

def gotRootObject(obj):
    global rootObject
    rootObject = obj
    d = rootObject.callRemote("getMyType")
    d.addCallback(gotMyType)
    d.addErrback(remoteCallFailure, "getMyType")

def gotMyType(myType):
    print "got return object %s" % myType
    d = rootObject.callRemote("shutdown")
    d.addCallback(serverStopped)
    d.addErrback(remoteCallFailure, "shutdown")

def serverStopped(result):
    print 'server stopped'
    stop()

def remoteCallFailure(reason, method):
    print "remote call to %s failed because %s" % (method, reason.value)
    reactor.stop()

def stop():
    print "client stopping"
    reactor.stop()

factory = pb.PBClientFactory()
reactor.connectTCP(serverNode, 8789, factory)
d = factory.getRootObject()
d.addCallback(gotRootObject)
d.addErrback(remoteCallFailure, "getRootObject")
reactor.run()
