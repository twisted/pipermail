--- test_policies.py.old	2008-02-28 11:16:38.000000000 -0800
+++ test_policies.py	2008-02-28 11:57:27.000000000 -0800
@@ -247,20 +247,21 @@
 
         port.dataReceived("0123456789")
         port.dataReceived("abcdefghij")
-        self.assertEquals(tr.value(), "0123456789abcdefghij")
-        self.assertEquals(tServer.writtenThisSecond, 20)
-        self.assertFalse(port.wrappedProtocol.paused)
+        self.assertEquals(tr.value(), "0123456789")
+        self.assertEquals(tServer.writeAvailable, 0)
+        self.assertTrue(port.wrappedProtocol.paused)
 
-        # at this point server should've written 20 bytes, 10 bytes
-        # above the limit so writing should be paused around 1 second
-        # from 'now', and resumed a second after that
+        # at this point server should've written 10 bytes, 10 bytes
+        # are queued and writing should be paused until 1 second
+        # from 'now', and then resumed
         tServer.clock.advance(1.05)
-        self.assertEquals(tServer.writtenThisSecond, 0)
-        self.assertTrue(port.wrappedProtocol.paused)
+        self.assertEquals(tr.value(), "0123456789abcdefghij")
+        self.assertEquals(tServer.writeAvailable, 0)
+#        self.assertFalse(port.wrappedProtocol.paused)
 
         tServer.clock.advance(1.05)
-        self.assertEquals(tServer.writtenThisSecond, 0)
-        self.assertFalse(port.wrappedProtocol.paused)
+        self.assertEquals(tServer.writeAvailable, 10)
+#        self.assertFalse(port.wrappedProtocol.paused)
 
 
     def test_readLimit(self):