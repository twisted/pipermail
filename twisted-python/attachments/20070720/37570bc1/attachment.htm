<tt>
Thank&nbsp;you&nbsp;very&nbsp;much!&nbsp;:)&lt;br&gt;&lt;br&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;7/12/07,&nbsp;&lt;b&nbsp;class=&quot;gmail_sendername&quot;&gt;David&nbsp;Bolen&lt;/b&gt;&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:db3l.net@gmail.com&quot;&gt;db3l.net@gmail.com&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;/span&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
&amp;quot;steven&nbsp;wang&amp;quot;&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:steven.zdwang@gmail.com&quot;&gt;steven.zdwang@gmail.com&lt;/a&gt;&amp;gt;&nbsp;writes:&lt;br&gt;&lt;br&gt;&amp;gt;&nbsp;But&nbsp;I&nbsp;want&nbsp;to&nbsp;receive&nbsp;binary&nbsp;data&nbsp;in&nbsp;my&nbsp;protocol.&lt;br&gt;&lt;br&gt;Even&nbsp;if&nbsp;you&nbsp;start&nbsp;with&nbsp;a&nbsp;non-binary&nbsp;header,&nbsp;you&nbsp;can&nbsp;switch&nbsp;to<br>
&lt;br&gt;receiving&nbsp;binary&nbsp;information&nbsp;at&nbsp;any&nbsp;time&nbsp;by&nbsp;going&nbsp;using&nbsp;the&nbsp;raw&nbsp;mode&lt;br&gt;of&nbsp;most&nbsp;of&nbsp;the&nbsp;basic&nbsp;protocols.&amp;nbsp;&amp;nbsp;And&nbsp;having&nbsp;some&nbsp;sort&nbsp;of&nbsp;ASCII&nbsp;header&lt;br&gt;prior&nbsp;to&nbsp;the&nbsp;raw&nbsp;data&nbsp;is&nbsp;often&nbsp;a&nbsp;very&nbsp;simple&nbsp;way&nbsp;to&nbsp;handle&nbsp;things&lt;br&gt;(something&nbsp;in&nbsp;common&nbsp;with&nbsp;a&nbsp;tremendous&nbsp;number&nbsp;of&nbsp;standard&nbsp;TCP-based<br>
&lt;br&gt;protocols).&lt;br&gt;&lt;br&gt;Your&nbsp;original&nbsp;post&nbsp;had&nbsp;a&nbsp;fairly&nbsp;straight-forward&nbsp;ASCII&nbsp;header&nbsp;that&nbsp;I&lt;br&gt;think&nbsp;would&nbsp;probably&nbsp;be&nbsp;fine.&amp;nbsp;&amp;nbsp;What&nbsp;you&amp;#39;re&nbsp;probably&nbsp;missing&nbsp;is&nbsp;the&lt;br&gt;concept&nbsp;of&nbsp;switching&nbsp;to&nbsp;a&nbsp;raw&nbsp;binary&nbsp;receive&nbsp;mode&nbsp;which&nbsp;then&nbsp;switches<br>
&lt;br&gt;your&nbsp;protocol&nbsp;from&nbsp;getting&nbsp;data&nbsp;in&nbsp;its&nbsp;lineReceived&nbsp;method&nbsp;to&nbsp;having&lt;br&gt;rawDataReceived&nbsp;called.&lt;br&gt;&lt;br&gt;For&nbsp;example,&nbsp;here&amp;#39;s&nbsp;a&nbsp;slightly&nbsp;stripped&nbsp;pair&nbsp;of&nbsp;protocols&nbsp;(server&nbsp;and&lt;br&gt;client)&nbsp;that&nbsp;I&amp;#39;m&nbsp;currently&nbsp;using&nbsp;as&nbsp;part&nbsp;of&nbsp;a&nbsp;bigger&nbsp;project.&amp;nbsp;&amp;nbsp;Most&nbsp;of<br>
&lt;br&gt;the&nbsp;communication&nbsp;is&nbsp;over&nbsp;a&nbsp;PB&nbsp;connection&nbsp;which&nbsp;the&nbsp;client&nbsp;uses&nbsp;to&lt;br&gt;perform&nbsp;operations&nbsp;on&nbsp;the&nbsp;server,&nbsp;one&nbsp;of&nbsp;which&nbsp;is&nbsp;editing&nbsp;job&lt;br&gt;information.&amp;nbsp;&amp;nbsp;But&nbsp;jobs&nbsp;contain&nbsp;attached&nbsp;files&nbsp;(often&nbsp;very&nbsp;large&lt;br&gt;audio/video&nbsp;files),&nbsp;so&nbsp;committing&nbsp;changes&nbsp;to&nbsp;a&nbsp;job&nbsp;also&nbsp;involves<br>
&lt;br&gt;transmitting&nbsp;up&nbsp;any&nbsp;newly&nbsp;added&nbsp;files.&amp;nbsp;&amp;nbsp;So&nbsp;after&nbsp;the&nbsp;client&nbsp;updates&lt;br&gt;the&nbsp;server&amp;#39;s&nbsp;meta&nbsp;data,&nbsp;it&nbsp;initiates&nbsp;a&nbsp;separate&nbsp;set&nbsp;of&nbsp;file&nbsp;transfers&lt;br&gt;across&nbsp;a&nbsp;different&nbsp;port.&lt;br&gt;&lt;br&gt;In&nbsp;my&nbsp;case,&nbsp;the&nbsp;header&nbsp;for&nbsp;a&nbsp;file&nbsp;transfer&nbsp;includes&nbsp;a&nbsp;session&nbsp;key<br>
&lt;br&gt;(which&nbsp;the&nbsp;protocol&nbsp;uses&nbsp;to&nbsp;reference&nbsp;the&nbsp;original&nbsp;PB-based&nbsp;job&lt;br&gt;session&nbsp;the&nbsp;client&nbsp;was&nbsp;using)&nbsp;along&nbsp;with&nbsp;a&nbsp;file&nbsp;key&nbsp;used&nbsp;for&nbsp;storage&lt;br&gt;(which&nbsp;uniquely&nbsp;references&nbsp;a&nbsp;specific&nbsp;file&nbsp;in&nbsp;the&nbsp;job).&amp;nbsp;&amp;nbsp;The&nbsp;final&lt;br&gt;element&nbsp;is&nbsp;the&nbsp;total&nbsp;file&nbsp;size.&amp;nbsp;&amp;nbsp;That&nbsp;is,&nbsp;upon&nbsp;connecting,&nbsp;the&nbsp;client<br>
&lt;br&gt;transmits&nbsp;a&nbsp;line&nbsp;such&nbsp;as:&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;session_uuid&amp;gt;&nbsp;&amp;lt;file_uuid&amp;gt;&nbsp;#######&lt;br&gt;&lt;br&gt;where&nbsp;the&nbsp;two&nbsp;uuids&nbsp;are&nbsp;specific&nbsp;to&nbsp;the&nbsp;transfer&nbsp;underway&nbsp;(and&nbsp;help&lt;br&gt;with&nbsp;security&nbsp;since&nbsp;a&nbsp;random&nbsp;client&nbsp;isn&amp;#39;t&nbsp;going&nbsp;to&nbsp;know&nbsp;the&nbsp;right<br>
&lt;br&gt;ids),&nbsp;and&nbsp;########&nbsp;is&nbsp;the&nbsp;overall&nbsp;file&nbsp;length.&amp;nbsp;&amp;nbsp;After&nbsp;sending&nbsp;that&lt;br&gt;line&nbsp;(e.g.,&nbsp;right&nbsp;after&nbsp;its&nbsp;final&nbsp;newline),&nbsp;the&nbsp;client&nbsp;just&nbsp;blasts&nbsp;up&lt;br&gt;the&nbsp;raw&nbsp;data.&lt;br&gt;&lt;br&gt;The&nbsp;protocol&nbsp;is&nbsp;a&nbsp;simple&nbsp;LineReceiver&nbsp;based&nbsp;protocol,&nbsp;that&nbsp;receives<br>
&lt;br&gt;that&nbsp;information&nbsp;information&nbsp;as&nbsp;an&nbsp;ASCII&nbsp;initial&nbsp;line,&nbsp;after&nbsp;which&nbsp;it&lt;br&gt;switches&nbsp;to&nbsp;raw&nbsp;mode&nbsp;to&nbsp;receive&nbsp;the&nbsp;data.&amp;nbsp;&amp;nbsp;Although&nbsp;the&nbsp;data&nbsp;length&lt;br&gt;could&nbsp;technically&nbsp;be&nbsp;inferred&nbsp;from&nbsp;when&nbsp;the&nbsp;client&nbsp;disconnects,&nbsp;having&lt;br&gt;<br>
it&nbsp;up&nbsp;front&nbsp;ensures&nbsp;I&nbsp;can&nbsp;detect&nbsp;a&nbsp;transfer&nbsp;that&nbsp;gets&nbsp;interrupted.&lt;br&gt;&lt;br&gt;So&nbsp;on&nbsp;the&nbsp;server&nbsp;side&nbsp;you&nbsp;have:&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&lt;br&gt;&lt;br&gt;class&nbsp;FileIOProtocol(LineReceiver):&lt;br&gt;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;__init__(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a&nbsp;href=&quot;http://self.info&quot;&gt;self.info&lt;/a&gt;&nbsp;=&nbsp;None&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.outfile&nbsp;=&nbsp;None&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.remain&nbsp;=&nbsp;0&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.crc&nbsp;=&nbsp;0&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;lineReceived(self,&nbsp;line):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug<br>
(&amp;#39;FileIOProtocol:lineReceived:%s&amp;#39;,&nbsp;line)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sess_key,&nbsp;file_key,&nbsp;self.size&nbsp;=&nbsp;line.split()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;file_key&nbsp;=&nbsp;uuid.UUID(file_key)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session_uuid&nbsp;=&nbsp;uuid.UUID(sess_key)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;except:<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:lineReceived&nbsp;Invalid&nbsp;session&amp;#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.loseConnection()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.job_session&nbsp;=&nbsp;self.factory.sessions.get(session_uuid)<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;not&nbsp;self.job_session:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:lineReceived&nbsp;Invalid&nbsp;session&amp;#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.loseConnection()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;not&nbsp;self.job_session.active:<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:lineReceived&nbsp;Stale&nbsp;session&amp;#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.loseConnection()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;[db3l]&nbsp;The&nbsp;original&nbsp;code&nbsp;validates&nbsp;the&nbsp;individual&nbsp;file&nbsp;uuid&nbsp;here<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;resulting&nbsp;in&nbsp;self.job_file&nbsp;as&nbsp;job&nbsp;file&nbsp;object&nbsp;from&nbsp;the&nbsp;session&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;not&nbsp;self.job_file:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:lineReceived&nbsp;Invalid&nbsp;file&nbsp;key&amp;#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.loseConnection<br>
()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;Create&nbsp;the&nbsp;upload&nbsp;directory&nbsp;if&nbsp;not&nbsp;already&nbsp;present&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;not&nbsp;os.path.isdir(self.job_session.upload_dir):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;os.makedirs(self.job_session.upload_dir)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
self.outfilename&nbsp;=&nbsp;os.path.join(self.job_session.upload_dir,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.job_file[&amp;#39;uuid&amp;#39;].hex)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:lineReceived&nbsp;Receiving&nbsp;into&nbsp;%s&amp;#39;,<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.outfilename)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.outfile&nbsp;=&nbsp;open(self.outfilename,&amp;#39;wb&amp;#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;except&nbsp;Exception,&nbsp;value:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:lineReceived&nbsp;Unable&nbsp;to&nbsp;open&nbsp;file&nbsp;%s&nbsp;&amp;#39;<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;#39;(%s)&amp;#39;,&nbsp;self.outfilename,&nbsp;value)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.loseConnection()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.remain&nbsp;=&nbsp;int(self.size)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:lineReceived&nbsp;Entering&nbsp;raw&nbsp;mode:&nbsp;%s&nbsp;%s&amp;#39;,<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.outfile,&nbsp;self.remain)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.setRawMode()&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;rawDataReceived(self,&nbsp;data):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.remain&nbsp;-=&nbsp;len(data)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.crc&nbsp;=&nbsp;crc32(data,&nbsp;self.crc)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.outfile.write<br>
(data)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;connectionMade(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LineReceiver.connectionMade(self)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:connectionMade&amp;#39;)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;connectionLost(self,&nbsp;reason):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LineReceiver.connectionLost<br>
(self,&nbsp;reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:connectionLost&amp;#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;self.outfile:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.outfile.close()&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;self.remain&nbsp;!=&nbsp;0:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;Problem&nbsp;uploading&nbsp;-&nbsp;discard<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.debug(&amp;#39;FileIOProtocol:connectionLost&nbsp;remain(%d)!=0&amp;#39;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.remain)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;os.remove(self.outfilename)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;Update&nbsp;job&nbsp;object&nbsp;with&nbsp;upload&nbsp;status<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.job_file[&amp;#39;uploaded&amp;#39;]&nbsp;=&nbsp;datetime.utcnow()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.job_file[&amp;#39;size&amp;#39;]&nbsp;=&nbsp;self.size&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.job_file[&amp;#39;crc&amp;#39;]&nbsp;=&nbsp;self.crc&lt;br&gt;&lt;br&gt;&lt;br&gt;class&nbsp;FileIOFactory(ServerFactory):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol&nbsp;=&nbsp;FileIOProtocol&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;__init__(self,&nbsp;db,&nbsp;sessions,&nbsp;options):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.db&nbsp;=&nbsp;db&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.options&nbsp;=&nbsp;options&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.sessions&nbsp;=&nbsp;sessions&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-<br>
&lt;br&gt;&lt;br&gt;which&nbsp;is&nbsp;bound&nbsp;to&nbsp;an&nbsp;appropriate&nbsp;port&nbsp;on&nbsp;the&nbsp;server&nbsp;however&nbsp;you&amp;#39;d&nbsp;like.&lt;br&gt;I&nbsp;use&nbsp;code&nbsp;like:&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.fileio&nbsp;=&nbsp;FileIOFactory(db,&nbsp;self.sessions,&nbsp;options)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;reactor.listenTCP(self.options[&amp;#39;file_port&amp;#39;],&nbsp;<br>
self.fileio)&lt;br&gt;&lt;br&gt;&lt;br&gt;On&nbsp;the&nbsp;client&nbsp;side,&nbsp;I&nbsp;have&nbsp;an&nbsp;equivalent&nbsp;protocol&nbsp;that&nbsp;transmits&nbsp;up&lt;br&gt;the&nbsp;file.&amp;nbsp;&amp;nbsp;It&amp;#39;s&nbsp;run&nbsp;beneath&nbsp;a&nbsp;GUI,&nbsp;so&nbsp;keeps&nbsp;a&nbsp;reference&nbsp;to&nbsp;the&nbsp;GUI&lt;br&gt;controller&nbsp;object&nbsp;that&nbsp;might&nbsp;indicate&nbsp;it&nbsp;needs&nbsp;to&nbsp;cancel&nbsp;a&nbsp;transfer<br>
&lt;br&gt;mid-stream,&nbsp;as&nbsp;well&nbsp;as&nbsp;updating&nbsp;the&nbsp;controller&nbsp;during&nbsp;the&nbsp;transfer&nbsp;so&lt;br&gt;it&nbsp;can&nbsp;update&nbsp;a&nbsp;progress&nbsp;bar&nbsp;on&nbsp;screen.&lt;br&gt;&lt;br&gt;It&nbsp;is&nbsp;also&nbsp;a&nbsp;LineReceiver&nbsp;based&nbsp;protocol,&nbsp;and&nbsp;uses&nbsp;the&nbsp;Twisted&lt;br&gt;FileSender&nbsp;object&nbsp;to&nbsp;do&nbsp;the&nbsp;raw&nbsp;data&nbsp;transfer&nbsp;(which&nbsp;is&nbsp;implemented&nbsp;as<br>
&lt;br&gt;a&nbsp;straight&nbsp;producer&nbsp;with&nbsp;the&nbsp;TCP&nbsp;socket&nbsp;being&nbsp;the&nbsp;consumer).&amp;nbsp;&amp;nbsp;The&lt;br&gt;connectionMade&nbsp;method&nbsp;is&nbsp;where&nbsp;it&nbsp;transmits&nbsp;the&nbsp;ASCII&nbsp;header&nbsp;and&nbsp;then&lt;br&gt;institutes&nbsp;the&nbsp;raw&nbsp;data&nbsp;transfer.&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-<br>
&lt;br&gt;&lt;br&gt;&lt;br&gt;class&nbsp;TransferCancelled(Exception):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;&amp;quot;&amp;quot;Exception&nbsp;for&nbsp;a&nbsp;user&nbsp;cancelling&nbsp;a&nbsp;transfer&amp;quot;&amp;quot;&amp;quot;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pass&lt;br&gt;&lt;br&gt;class&nbsp;FileIOClient(LineReceiver):&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;__init__(self,&nbsp;path,&nbsp;sess_key,&nbsp;file_key,&nbsp;controller):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.path&nbsp;=&nbsp;path&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.sess_key&nbsp;=&nbsp;sess_key&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.file_key&nbsp;=&nbsp;file_key&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller&nbsp;=&nbsp;controller&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.infile&nbsp;=&nbsp;open(self.path,&nbsp;&amp;#39;rb&amp;#39;)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.insize<br>
&nbsp;=&nbsp;os.stat(self.path).st_size&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.result&nbsp;=&nbsp;None&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.completed&nbsp;=&nbsp;False&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller.file_sent&nbsp;=&nbsp;0&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller.file_size&nbsp;=&nbsp;self.insize&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;_monitor(self,&nbsp;data):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller.file_sent&nbsp;+=&nbsp;len(data)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller.total_sent&nbsp;+=&nbsp;len(data)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;Check&nbsp;with&nbsp;controller&nbsp;to&nbsp;see&nbsp;if&nbsp;we&amp;#39;ve&nbsp;been&nbsp;cancelled&nbsp;and&nbsp;abort&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;if&nbsp;so.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;self.controller.cancel<br>
:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&nbsp;&amp;#39;FileIOClient._monitor&nbsp;Cancelling&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;Need&nbsp;to&nbsp;unregister&nbsp;the&nbsp;producer&nbsp;with&nbsp;the&nbsp;transport&nbsp;or&nbsp;it&nbsp;will&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;wait&nbsp;for&nbsp;it&nbsp;to&nbsp;finish&nbsp;before&nbsp;breaking&nbsp;the&nbsp;connection&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
self.transport.unregisterProducer()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.loseConnection()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&nbsp;Indicate&nbsp;a&nbsp;user&nbsp;cancelled&nbsp;result&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.result&nbsp;=&nbsp;TransferCancelled(&amp;#39;User&nbsp;cancelled&nbsp;transfer&amp;#39;)&lt;br&gt;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&nbsp;data&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;cbTransferCompleted(self,&nbsp;lastsent):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.completed&nbsp;=&nbsp;True&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.loseConnection()&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;connectionMade(self):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.transport.write(&amp;#39;%s&nbsp;%s&nbsp;%s\r\n&amp;#39;&nbsp;%&nbsp;(str(<br>
self.sess_key),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;str(self.file_key),&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self.insize))&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sender&nbsp;=&nbsp;FileSender()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sender.CHUNK_SIZE&nbsp;=&nbsp;2&nbsp;**&nbsp;16<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d&nbsp;=&nbsp;sender.beginFileTransfer(self.infile,&nbsp;self.transport,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;self._monitor)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d.addCallback(self.cbTransferCompleted)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;connectionLost(self,&nbsp;reason):&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LineReceiver.connectionLost(self,&nbsp;reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&nbsp;&amp;#39;FileIOClient:connectionLost&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.infile.close()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&nbsp;self.completed:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller.completed.callback(self.result<br>
)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller.completed.errback(reason)&lt;br&gt;&lt;br&gt;class&nbsp;FileIOClientFactory(ClientFactory):&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol&nbsp;=&nbsp;FileIOClient&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;__init__(self,&nbsp;path,&nbsp;sess_key,&nbsp;file_key,&nbsp;controller):<br>
&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.path&nbsp;=&nbsp;path&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.sess_key&nbsp;=&nbsp;sess_key&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.file_key&nbsp;=&nbsp;file_key&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller&nbsp;=&nbsp;controller&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;clientConnectionFailed(self,&nbsp;connector,&nbsp;reason):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ClientFactory.clientConnectionFailed<br>
(self,&nbsp;connector,&nbsp;reason)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller.completed.errback(reason)&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;buildProtocol(self,&nbsp;addr):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&nbsp;&amp;#39;buildProtocol&amp;#39;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p&nbsp;=&nbsp;self.protocol(self.path,&nbsp;self.sess_key,&nbsp;self.file_key<br>
,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.controller)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p.factory&nbsp;=&nbsp;self&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&nbsp;p&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&nbsp;-&lt;br&gt;&lt;br&gt;&lt;br&gt;Within&nbsp;the&nbsp;presentation&nbsp;layer&nbsp;controller&nbsp;on&nbsp;the&nbsp;client,&nbsp;initiating&nbsp;a<br>
&lt;br&gt;transfer&nbsp;is&nbsp;done&nbsp;with:&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;def&nbsp;_transmitOne(self,&nbsp;address,&nbsp;port,&nbsp;path,&nbsp;sess_key,&nbsp;file_key):&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self.completed&nbsp;=&nbsp;defer.Deferred()&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f&nbsp;=&nbsp;FileIOClientFactory(path,&nbsp;sess_key,&nbsp;file_key,&nbsp;self)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
reactor.connectTCP(address,&nbsp;port,&nbsp;f)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&nbsp;self.completed&lt;br&gt;&lt;br&gt;and&nbsp;the&nbsp;result&nbsp;is&nbsp;that&nbsp;self.completed&nbsp;fires&nbsp;(callback&nbsp;or&nbsp;errback)&nbsp;when&lt;br&gt;the&nbsp;transfer&nbsp;is&nbsp;done&nbsp;(which&nbsp;the&nbsp;controller&nbsp;uses&nbsp;to&nbsp;then&nbsp;initiate&nbsp;the&lt;br&gt;<br>
next&nbsp;transfer&nbsp;when&nbsp;there&nbsp;are&nbsp;a&nbsp;list&nbsp;of&nbsp;files&nbsp;to&nbsp;go&nbsp;up&nbsp;for&nbsp;a&nbsp;job).&lt;br&gt;&lt;br&gt;While&nbsp;probably&nbsp;not&nbsp;exactly&nbsp;what&nbsp;you&amp;#39;re&nbsp;trying&nbsp;to&nbsp;do,&nbsp;perhaps&nbsp;it&amp;#39;ll&lt;br&gt;point&nbsp;you&nbsp;in&nbsp;the&nbsp;right&nbsp;direction.&lt;br&gt;&lt;br&gt;--&nbsp;David&lt;br&gt;&lt;br&gt;&lt;br&gt;_______________________________________________<br>
&lt;br&gt;Twisted-Python&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:Twisted-Python@twistedmatrix.com&quot;&gt;Twisted-Python@twistedmatrix.com&lt;/a&gt;&lt;br&gt;&lt;a&nbsp;href=&quot;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python&quot;&gt;http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python<br>
&lt;/a&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
