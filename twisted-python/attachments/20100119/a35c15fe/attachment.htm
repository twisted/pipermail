<tt>
&lt;div&gt;I&nbsp;am&nbsp;writing&nbsp;a&nbsp;tool&nbsp;for&nbsp;work&nbsp;that&nbsp;will&nbsp;run&nbsp;various&nbsp;software&nbsp;development&nbsp;aids&nbsp;such&nbsp;as&nbsp;message&nbsp;capturing&nbsp;and&nbsp;diagnostic&nbsp;control&nbsp;of&nbsp;system&nbsp;processes.&lt;div&gt;My&nbsp;current&nbsp;design&nbsp;strategy&nbsp;is&nbsp;to&nbsp;implement&nbsp;these&nbsp;aids&nbsp;as&nbsp;plugins&nbsp;(not&nbsp;twisted&nbsp;plugins)&nbsp;to&nbsp;a&nbsp;generic&nbsp;plugin&nbsp;runner&nbsp;rather&nbsp;than&nbsp;stand&nbsp;alone&nbsp;applications.&lt;/div&gt;<br>
<br>
&lt;div&gt;The&nbsp;plugins&nbsp;are&nbsp;spawned&nbsp;as&nbsp;separate&nbsp;processes&nbsp;by&nbsp;the&nbsp;plugin-runner&nbsp;and&nbsp;communicate&nbsp;using Perspective&nbsp;Broker&nbsp;during&nbsp;the&nbsp;plugin&nbsp;installation&nbsp;and&nbsp;shutdown&nbsp;phases.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Some&nbsp;plugins&nbsp;may&nbsp;take&nbsp;a&nbsp;while&nbsp;to&nbsp;shutdown&nbsp;as&nbsp;they&nbsp;need&nbsp;to&nbsp;close&nbsp;sockets, finalize files,&nbsp;move&nbsp;large&nbsp;files,&nbsp;etc.&lt;/div&gt;<br>
<br>
&lt;div&gt;I&nbsp;would&nbsp;like&nbsp;to&nbsp;instruct&nbsp;the&nbsp;plugin&nbsp;to&nbsp;shutdown&nbsp;and&nbsp;be&nbsp;told&nbsp;when&nbsp;it&nbsp;is&nbsp;finally&nbsp;ready&nbsp;to&nbsp;be&nbsp;shut&nbsp;down.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To&nbsp;date&nbsp;all&nbsp;my&nbsp;callRemote&nbsp;methods&nbsp;have&nbsp;effectively&nbsp;returned&nbsp;immediately.&nbsp;For&nbsp;example:&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;def&nbsp;remote_get_name(self):&lt;/div&gt;&lt;div&gt;  &nbsp; return&nbsp;&lt;a&nbsp;href=&quot;http://self.name&quot;&nbsp;target=&quot;_blank&quot;&gt;self.name&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;My&nbsp;question&nbsp;to&nbsp;the&nbsp;list&nbsp;was&nbsp;going&nbsp;to&nbsp;be:&nbsp;Is&nbsp;there&nbsp;a&nbsp;pattern/example&nbsp;I&nbsp;could&nbsp;follow&nbsp;where&nbsp;I&nbsp;could&nbsp;call plugin.callRemote(&amp;quot;shutdown&amp;quot;)&nbsp;on&nbsp;a&nbsp;plugin&nbsp;and&nbsp;not&nbsp;return&nbsp;a&nbsp;result&nbsp;to&nbsp;the&nbsp;plugin-runner&nbsp;until&nbsp;the&nbsp;plugin&nbsp;has&nbsp;completed&nbsp;all&nbsp;it&amp;#39;s,&nbsp;potentially,&nbsp;long&nbsp;running&nbsp;activities? However,&nbsp;while&nbsp;I&nbsp;was&nbsp;trying&nbsp;to&nbsp;write&nbsp;a&nbsp;small&nbsp;code&nbsp;snippet&nbsp;that&nbsp;would&nbsp;demonstrate&nbsp;what&nbsp;I&nbsp;was&nbsp;wanting,&nbsp;I&nbsp;think&nbsp;I&nbsp;got&nbsp;it&nbsp;working.&lt;/div&gt;<br>
<br>
&lt;div&gt;I&nbsp;think&nbsp;the&nbsp;simple&nbsp;answer&nbsp;to&nbsp;my&nbsp;question&nbsp;is&nbsp;to&nbsp;just&nbsp;return&nbsp;a&nbsp;deferred&nbsp;as&nbsp;the&nbsp;result&nbsp;to&nbsp;the&nbsp;callRemote(&amp;quot;shutdown&amp;quot;) method&nbsp;and&nbsp;trigger&nbsp;it&nbsp;as&nbsp;normal.&lt;/div&gt;&lt;div&gt;Google&nbsp;is&nbsp;my&nbsp;friend&nbsp;but&nbsp;I&nbsp;could&nbsp;not&nbsp;find&nbsp;examples&nbsp;of&nbsp;this&nbsp;usage.&nbsp;Is&nbsp;there&nbsp;any&nbsp;references&nbsp;to&nbsp;this&nbsp;usage&nbsp;in&nbsp;the&nbsp;twisted&nbsp;docs?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Below&nbsp;(and&nbsp;attached&nbsp;in&nbsp;case&nbsp;the&nbsp;formatting&nbsp;goes&nbsp;screwy)&nbsp;is&nbsp;a&nbsp;short&nbsp;example&nbsp;which&nbsp;emulates&nbsp;a&nbsp;long&nbsp;running&nbsp;shutdown&nbsp;activity&nbsp;performed&nbsp;by&nbsp;the&nbsp;plugin&nbsp;prior&nbsp;to&nbsp;shutdown.&lt;/div&gt;&lt;div&gt;It&nbsp;seems&nbsp;to&nbsp;delay&nbsp;the&nbsp;processing&nbsp;of&nbsp;the&nbsp;callRemote(&amp;quot;shutdown&amp;quot;)&nbsp;result&nbsp;until&nbsp;the&nbsp;plugin&nbsp;has&nbsp;completed&nbsp;it&amp;#39;s&nbsp;long&nbsp;running&nbsp;activity.&lt;/div&gt;<br>
<br>
&lt;div&gt;I&nbsp;have&nbsp;omitted&nbsp;the&nbsp;separate&nbsp;process&nbsp;stuff&nbsp;as&nbsp;it&nbsp;didn&amp;#39;t&nbsp;seem&nbsp;relevant&nbsp;for&nbsp;this&nbsp;snippet.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Is&nbsp;the&nbsp;following&nbsp;code&nbsp;snippet&nbsp;the&nbsp;standard/normal&nbsp;way&nbsp;to&nbsp;defer&nbsp;the&nbsp;return&nbsp;result&nbsp;of&nbsp;a&nbsp;callRemote&nbsp;method&nbsp;call?&lt;/div&gt;<br>
<br>
&lt;div&gt;If&nbsp;this&nbsp;is&nbsp;the&nbsp;normal&nbsp;way,&nbsp;how&nbsp;does&nbsp;triggering&nbsp;the&nbsp;deferred&nbsp;on&nbsp;the&nbsp;plugin&nbsp;(client)&nbsp;side&nbsp;also&nbsp;trigger&nbsp;the&nbsp;same/copy&nbsp;deferred&nbsp;returned&nbsp;to&nbsp;the&nbsp;plugin-runner&nbsp;(server)?&lt;/div&gt;&lt;div&gt;Is&nbsp;this&nbsp;PB&nbsp;magic,&nbsp;somehow&nbsp;managing&nbsp;deferreds&nbsp;across&nbsp;the&nbsp;PB&nbsp;interface?&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Regards,&lt;/div&gt;&lt;div&gt;Chris&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;from&nbsp;twisted.internet&nbsp;import&nbsp;reactor,&nbsp;defer&lt;/div&gt;&lt;div&gt;from&nbsp;twisted.spread&nbsp;import&nbsp;pb&lt;/div&gt;&lt;div&gt;import&nbsp;datetime&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;class&nbsp;PluginClient(pb.Referenceable):&lt;/div&gt;&lt;div&gt;  &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Plugin&nbsp;client&nbsp;interface&nbsp;exposed&nbsp;to&nbsp;PluginServer&amp;#39;s&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;__init__(self,&nbsp;shutdownCallback):&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.shutdownHandler&nbsp;=&nbsp;shutdownCallback&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;remote_shutdown(self):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Instruct&nbsp;Plugin&nbsp;to&nbsp;shutdown&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; print&nbsp;&amp;quot;plugin&nbsp;instructed&nbsp;to&nbsp;shutdown&amp;quot;&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;defer.Deferred()&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; self.shutdownHandler(d)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;d&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;class&nbsp;PluginServer(pb.Root):&lt;/div&gt;&lt;div&gt;  &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Plugin&nbsp;server&nbsp;interface&nbsp;exposed&nbsp;to&nbsp;PluginClient&amp;#39;s&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;remote_set_client_perspective(self,&nbsp;pluginRef):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; print&nbsp;&amp;quot;plugin-runner&nbsp;got&nbsp;client&nbsp;reference&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; reactor.callLater(1.0,&nbsp;self.shutdown_plugin,&nbsp;pluginRef)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;shutdown_plugin(self,&nbsp;pluginRef):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; def&nbsp;pluginShutdownCompleted(result,&nbsp;startTime):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; endTime&nbsp;=&nbsp;datetime.datetime.now()&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print&nbsp;&amp;quot;Plugin&nbsp;shutdown&nbsp;took&nbsp;%s&nbsp;to&nbsp;complete.&amp;quot;&nbsp;%&nbsp;(endTime&nbsp;-&nbsp;startTime)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;result&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; print&nbsp;&amp;quot;plugin-runner&nbsp;asking&nbsp;plugin&nbsp;to&nbsp;shutdown&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d&nbsp;=&nbsp;pluginRef.callRemote(&amp;quot;shutdown&amp;quot;)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; d.addCallback(pluginShutdownCompleted,&nbsp;datetime.datetime.now())&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; d.addCallback(self.shutdown)&lt;/div&gt;&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;shutdown(self,&nbsp;_):&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; reactor.stop()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;def&nbsp;startPluginServer(port):&lt;/div&gt;&lt;div&gt;  &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Start&nbsp;a&nbsp;plugin&nbsp;communications&nbsp;server&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; print&nbsp;&amp;quot;starting&nbsp;server&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; reactor.listenTCP(port=port,&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; factory=pb.PBServerFactory(PluginServer()),&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; interface=&amp;#39;localhost&amp;#39;)&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;def&nbsp;startPluginClient(port,&nbsp;shutdownHandler):&lt;/div&gt;&lt;div&gt;  &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Start&nbsp;a&nbsp;plugin&nbsp;communications&nbsp;client&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;gotServerPerspective(serverPerspective,&nbsp;pluginPerspective):&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Give&nbsp;the&nbsp;plugin-runner&nbsp;this&nbsp;client&amp;#39;s&nbsp;perspective&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; serverPerspective.callRemote(&amp;quot;set_client_perspective&amp;quot;,&nbsp;pluginPerspective)&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; return&nbsp;serverPerspective&lt;/div&gt;<br>
<br>
&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; print&nbsp;&amp;quot;starting&nbsp;plugin&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; client&nbsp;=&nbsp;PluginClient(shutdownHandler)&lt;/div&gt;&lt;div&gt;  &nbsp; factory&nbsp;=&nbsp;pb.PBClientFactory()&lt;/div&gt;&lt;div&gt;  &nbsp; reactor.connectTCP(host=&amp;#39;localhost&amp;#39;,&nbsp;port=port,&nbsp;factory=factory)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; return&nbsp;factory.getRootObject().addCallback(gotServerPerspective,&nbsp;client)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;if&nbsp;__name__&nbsp;==&nbsp;&amp;quot;__main__&amp;quot;:&lt;/div&gt;&lt;div&gt;  &nbsp; port&nbsp;=&nbsp;42155&lt;/div&gt;&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; def&nbsp;longRunningAction(d,&nbsp;countDown=10):&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; &amp;quot;&amp;quot;&amp;quot;&nbsp;Emulate&nbsp;long&nbsp;running&nbsp;shutdown&nbsp;activities&nbsp;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; print&nbsp;&amp;quot;shuting&nbsp;down&nbsp;in&nbsp;%i&nbsp;seconds&amp;quot;&nbsp;%&nbsp;countDown&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; if&nbsp;countDown&nbsp;==&nbsp;0:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.callback(True)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; &nbsp; &nbsp; else:&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; countDown&nbsp;-=&nbsp;1&lt;/div&gt;&lt;div&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reactor.callLater(1,&nbsp;longRunningAction,&nbsp;d,&nbsp;countDown)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;  &nbsp; &lt;/div&gt;&lt;div&gt;  &nbsp; #&nbsp;start&nbsp;plugin-runner&lt;/div&gt;&lt;div&gt;  &nbsp; reactor.callWhenRunning(startPluginServer,&nbsp;port)&lt;/div&gt;<br>
<br>
&lt;div&gt;  &nbsp; #&nbsp;start&nbsp;plugin&lt;/div&gt;&lt;div&gt;  &nbsp; reactor.callLater(2.0,&nbsp;startPluginClient,&nbsp;port,&nbsp;longRunningAction)&lt;/div&gt;&lt;div&gt;  &nbsp; reactor.run()&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>

</tt>
