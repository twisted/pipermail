From TimothyFitz at gmail.com  Wed Mar  1 01:53:31 2006
From: TimothyFitz at gmail.com (Timothy Fitz)
Date: Wed, 1 Mar 2006 01:53:31 -0500
Subject: [Twisted-Python] Twisted Website
In-Reply-To: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>
References: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>
Message-ID: <972ec5bd0602282253u34bf1965sd3bd288979d1772a@mail.gmail.com>

On 2/28/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>   * Obviously we now have a wiki.  Feel free to contribute content.
> A few pages, mainly those with project download links and such, will
> be kept read-only.  Speak with project maintainers if you want to
> make changes to these pages.

Unfortunately, it's hard to link new pages to the main twisted site in
any meaningful way. For example I'd like to start a windows-related
page to track suggestions and conceptual issues, but none of the pages
relevant to twisted windows development allow editing. It seems to me
that a "main page" that branches off into
not-necessarily-twisted-sponsored wiki content would make it
tremendously easier.



From lucaberto at libero.it  Wed Mar  1 04:01:05 2006
From: lucaberto at libero.it (lucaberto at libero.it)
Date: Wed,  1 Mar 2006 10:01:05 +0100
Subject: [Twisted-Python] Com Port
Message-ID: <IVFYDT$948B30767F0C1A8BD810ED4AD578F03E@libero.it>

Hello i have some problem with pyserial.
In one forum peoples said the with twisted serial i can solve this problem.
Can you help me to configure the port as show below:

data baud = 38400
parity= odd
byte delay= 40000
rec timeout = 200
stop bit= 2
serial control line:
dtr = high
rts= low

toggle this line for a reset:

rts. 

and also were i can find some sample of twisted and serial communication

Thanks Luca





From sc at linux.it  Wed Mar  1 10:49:34 2006
From: sc at linux.it (Stefano Canepa)
Date: Wed, 01 Mar 2006 16:49:34 +0100
Subject: [Twisted-Python] Com Port
In-Reply-To: <IVFYDT$948B30767F0C1A8BD810ED4AD578F03E@libero.it>
References: <IVFYDT$948B30767F0C1A8BD810ED4AD578F03E@libero.it>
Message-ID: <1141228174.6746.24.camel@localhost.localdomain>

Il giorno mer, 01/03/2006 alle 10.01 +0100, lucaberto at libero.it ha
scritto:
> Hello i have some problem with pyserial.
> In one forum peoples said the with twisted serial i can solve this problem.
> Can you help me to configure the port as show below:
> 
> data baud = 38400
> parity= odd
> byte delay= 40000
> rec timeout = 200
> stop bit= 2
> serial control line:
> dtr = high
> rts= low
> 
> toggle this line for a reset:
> 
> rts. 
> 
> and also were i can find some sample of twisted and serial communication
> 
Luca,
	you can check out twisted from its subversion repository the go to the
doc/core/examples directory and take a look at gpsfix.py and mouse.py.
Just one little note serialport uses pyserial so I think that if do not
want to use twisted just try to figure out how pyserial work.

Ciao
Stefano

-- 
Stefano Canepa aka sc: sc at linux.it  http://www.stefanocanepa.it
Three great virtues of a programmer: laziness, impatience and hubris.
Le tre grandi virt? di un programmatore: pigrizia, impazienza e
arroganza. (Larry Wall)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060301/2713a33e/attachment.pgp 

From itamar at itamarst.org  Wed Mar  1 11:22:49 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 01 Mar 2006 11:22:49 -0500
Subject: [Twisted-Python] Twisted & SOAP
In-Reply-To: <4404D15C.3020802@reticulatus.plus.com>
References: <4404D15C.3020802@reticulatus.plus.com>
Message-ID: <1141230169.9119.1.camel@localhost.localdomain>

On Tue, 2006-02-28 at 22:40 +0000, Richard Townsend wrote:

> "Any objection to our diabolical plan to integrate
> wstools into ZSI and shove SOAPpy to a second class status? We'd like to
> converge on a single python web services solution, but we're working hard to
> make sure SOAPpy users can do in ZSI what they can do in SOAPpy..."
> 
> What effect will this development have on support for SOAP in Twisted?

twisted-web mailing list is probably right place for this question, but
since I'm not subscribed there -

I've not really been maintaining twisted.web.soap anyway; SOAPpy kept
changing basic APIs for parsing SOAP queries, and it was annoying to
keep up with. If it works maybe that means they finally stabilized. I
suggest opening a bug in the tracker for ZSI support for web2. XML-RPC
should be going in sometime soon so you can look at it for inspiration
if you want to implement it yourself.




From mary-twisted at puzzling.org  Wed Mar  1 18:10:33 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 2 Mar 2006 10:10:33 +1100
Subject: [Twisted-Python] A doc sprint... but first, a challenge
Message-ID: <20060301231033.GA27513@home.puzzling.org>

Feedback on my last (fairly unsuccessful) doc sprint was that reviewing
the documentation was a good idea and would provide a good *basis* for a
sprint but wasn't a great sprint in and of itself because it's not
collaborative.

However...

Since then no one has contributed documentation reviews, collaborative
or not. So we're not yet building our good basis for a sprint.

Therefore, a challenge. There are currently 4 reviews on
http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList .
When that number of reviews reachs 14 (ie, 10 more), I will schedule and
run a doc sprint day for us. I will do 2 and I know Andrew Bennetts has
one more in the works, so that leaves a grand total of 7 reviews for
other people to do before I hold a sprint. That's like 0.00001 reviews
per whine about our documentation over the lifetime of the Twisted
project!

Instructions on how to review the documentation are at
http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList .
You can also ask me questions by posting a response to this very mailing
list, or joining #twisted-docs on irc.freenode.net where I'll be
whenever I'm, well, at a computer.

-Mary

-- 
<Rainy-Day> no? jesus was like, love thy neighbour and shit



From jml at mumak.net  Wed Mar  1 18:19:21 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Mar 2006 10:19:21 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
Message-ID: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>

Hello,

Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
on 8th March (UTC+11). The topic of discussion is: how to improve the
Trial documentation.

Please come along, share your suggestions and help us write the documents.

Even if you are totally uninterested, come along anyway to show your
support of task-oriented, real-time, explicit collaboration within the
Twisted community.

cheers,
jml



From mary-twisted at puzzling.org  Wed Mar  1 18:45:37 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 2 Mar 2006 10:45:37 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <20060301234537.GB27513@home.puzzling.org>

On Thu, Mar 02, 2006, Jonathan Lange wrote:
> Hello,
> 
> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

For matching times around the world: http://tinyurl.com/fobak

-Mary

-- 
<slyphon> YAY SEGFAULTING!
* PenguinOfDoom is continually amazed at how a segfault is such a joyful occurence for Python programmers.
<itamar> PenguinOfDoom: it is somewhat like seeing someone levitating and then kicking you in the face
<itamar> it hurts, but at the same time you are distracted by the violation of your concept of reality



From rudy at goldenhelix.com  Wed Mar  1 19:34:43 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Wed, 1 Mar 2006 17:34:43 -0700
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <200603011734.44441.rudy@goldenhelix.com>


> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

UTC+11? where are you guys at? Australia?

I'd love to show up and support but that'd be 11PM my time (UTC-7) and I can't 
predict my late night hacking sessions that far in advance :)

--gabe



From jml at mumak.net  Wed Mar  1 19:38:38 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Mar 2006 11:38:38 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <200603011734.44441.rudy@goldenhelix.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<200603011734.44441.rudy@goldenhelix.com>
Message-ID: <d06a5cd30603011638x75961a7ahd45620212316be38@mail.gmail.com>

On 3/2/06, Gabe Rudy <rudy at goldenhelix.com> wrote:
>
> > Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> > on 8th March (UTC+11). The topic of discussion is: how to improve the
> > Trial documentation.
>
> UTC+11? where are you guys at? Australia?

Yes.

> I'd love to show up and support but that'd be 11PM my time (UTC-7) and I can't
> predict my late night hacking sessions that far in advance :)
>

Well, it'll be good to see you there if you make it. If you can't,
please email thoughts on documentation to the list.

jml



From mary-twisted at puzzling.org  Wed Mar  1 19:42:16 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 2 Mar 2006 11:42:16 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <200603011734.44441.rudy@goldenhelix.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<200603011734.44441.rudy@goldenhelix.com>
Message-ID: <20060302004216.GE27513@home.puzzling.org>

On Wed, Mar 01, 2006, Gabe Rudy wrote:
> UTC+11? where are you guys at? Australia?

Yes.

> I'd love to show up and support but that'd be 11PM my time (UTC-7) and
> I can't predict my late night hacking sessions that far in advance :)

For bigger discussions of the kind, or for sprints, we would try and
time them convieniently for as many attendees as possible, but in this
case there are two main interested parties and we happen to live in the
same timezone, so we have arranged things for maximum convienience to
ourselves.

Suggestions are welcome prior to the discussion on either ticket 1400
[1] or via the documentation analysis thing [2].

-Mary

[1] http://twistedmatrix.com/trac/ticket/1400
[2] http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList

-- 
<itamar> you know what causes most evilness? the WEB



From jml at mumak.net  Wed Mar  1 19:45:22 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Mar 2006 11:45:22 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060302004216.GE27513@home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<200603011734.44441.rudy@goldenhelix.com>
	<20060302004216.GE27513@home.puzzling.org>
Message-ID: <d06a5cd30603011645t3a8154c0u3240d91712e00cbd@mail.gmail.com>

Disregard my post in favour of this one :)

On 3/2/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Wed, Mar 01, 2006, Gabe Rudy wrote:
> > UTC+11? where are you guys at? Australia?
>
> Yes.
>
> > I'd love to show up and support but that'd be 11PM my time (UTC-7) and
> > I can't predict my late night hacking sessions that far in advance :)
>
> For bigger discussions of the kind, or for sprints, we would try and
> time them convieniently for as many attendees as possible, but in this
> case there are two main interested parties and we happen to live in the
> same timezone, so we have arranged things for maximum convienience to
> ourselves.
>
> Suggestions are welcome prior to the discussion on either ticket 1400
> [1] or via the documentation analysis thing [2].
>
> -Mary
>
> [1] http://twistedmatrix.com/trac/ticket/1400
> [2] http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList
>
> --
> <itamar> you know what causes most evilness? the WEB
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mustafa at liqia.com  Thu Mar  2 08:43:30 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Thu, 02 Mar 2006 15:43:30 +0200
Subject: [Twisted-Python] QtReactor problem with Modal Dialogs (Twisted 2.x)
Message-ID: <4406F682.5040403@liqia.com>

I am using a pb client and a pb server. My client uses the twisted's 
qtreactor. Since twisted 2.0, modal dialogs causes "connection lost" and 
I couldn't overcome this problem for months. I tested this behaviour in 
twisted 1.3, 2.0, 2.1 and finally 2.2.

When I use twisted 1.3, no problem occurs, the other versions all causes 
the same error. I am posting the traceback and a small sample server and 
a qt client which imitates the problem I have.

Any help is greatly appreciated.
Thanks,

Musti



--------------------------------------------------------

Traceback (most recent call last):
  File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", 
line 294, in _startRunCallbacks
    self._runCallbacks()
  File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", 
line 307, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "qttestclient.py", line 39, in success
    return self.openModalDialog(None)
  File "qttestclient.py", line 56, in openModalDialog
    return dialog.exec_loop()
--- <exception caught here> ---
  File "/usr/lib/python2.4/site-packages/twisted/internet/qtreactor.py", 
line 60, in read
    why = w.doRead()
  File "/usr/lib/python2.4/site-packages/twisted/internet/tcp.py", line 
349, in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line 
173, in dataReceived
    gotItem(self.incomingVocabulary[num])
  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line 
114, in gotItem
    self.callExpressionReceived(item)
  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line 
81, in callExpressionReceived
    self.expressionReceived(obj)
  File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 
567, in expressionReceived
    raise ProtocolError("Non-list expression received.")
twisted.spread.pb.ProtocolError: Non-list expression received.
error received: [Failure instance: Traceback (failure with no frames): 
twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback 
(failure with no frames): twisted.spread.pb.ProtocolError: Non-list 
expression received.
]
]
Lost: Non-list expression received.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: qttestclient.py
Type: application/x-python
Size: 1896 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060302/4ecf66f7/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testserver.py
Type: application/x-python
Size: 1033 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060302/4ecf66f7/attachment-0001.bin 

From itamar at itamarst.org  Thu Mar  2 11:04:59 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 02 Mar 2006 11:04:59 -0500
Subject: [Twisted-Python] QtReactor problem with Modal Dialogs (Twisted
	2.x)
In-Reply-To: <4406F682.5040403@liqia.com>
References: <4406F682.5040403@liqia.com>
Message-ID: <1141315499.9222.0.camel@localhost.localdomain>

Hi, 

Thanks for the bug report; could you add this to our issue tracker?




From mustafa at liqia.com  Thu Mar  2 11:51:50 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Thu, 02 Mar 2006 18:51:50 +0200
Subject: [Twisted-Python] QtReactor problem with Modal Dialogs (Twisted
	2.x)
In-Reply-To: <1141315499.9222.0.camel@localhost.localdomain>
References: <4406F682.5040403@liqia.com>
	<1141315499.9222.0.camel@localhost.localdomain>
Message-ID: <440722A6.40102@liqia.com>

OK, I created a ticket with ID #1531.

Thanks,

Musti

Itamar Shtull-Trauring wrote:
> Hi, 
>
> Thanks for the bug report; could you add this to our issue tracker?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From golux at comcast.net  Fri Mar  3 00:22:25 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 03 Mar 2006 00:22:25 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16149 - first complete
 draft of documentation, 
 one example module, and make some changes to tap.py so that things actually
 work as	documented.
In-Reply-To: <E1FF22S-0003Up-00@wolfwood>
References: <E1FF22S-0003Up-00@wolfwood>
Message-ID: <4407D291.30902@comcast.net>

David Reid wrote:
> +      ... Web2 makes use of TAP plugins, created by the mktap
> +      commandline utility.  This document outlines a few of the
> +      approaches for creating, configuring, and deploying a Twisted.Web2
> +      with mktap.</p>

Eh?  I must have missed something (not unusual) -- I thought
taps were going away ... are they coming back now?

Steve



From mwh at python.net  Fri Mar  3 04:50:39 2006
From: mwh at python.net (Michael Hudson)
Date: Fri, 03 Mar 2006 09:50:39 +0000
Subject: [Twisted-Python] Re: Twisted Website
References: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>
Message-ID: <2m8xrr6emo.fsf@starship.python.net>

Jean-Paul Calderone <exarkun at divmod.com> writes:

>   * Epydoc has been replaced by docextractor (to be renamed).  

Huh?  I admit I put about two seconds of thought so far into the
project name, but I still think I get to name my own projects :)

> Since we have so much documentation using epytext markup, we will
> likely continue to use that markup style.

It would be nice if more docstrings were actually in epytext rather
than something that looks a bit like it (around 400 errors in twisted
svn head, and that's after being nicer about indentation than epydoc
itself seems to be).

> API documentation emitted by docextractor is currently up on the
> website at the URL previously occupied by epydoc's output.  The
> docextractor markup is currently very rough. 

As you (JP) now know, it's a bit prettier already, though the version
on tm.com isn't yet.

> Patches are, as always, welcome ;) You will find the source at
> <http://codespeak.net/svn/user/mwh/docextractor/trunk>.

Currently I'm finding new and exciting ways to make pickle crap itself
:/

Cheers,
mwh

-- 
  It is time-consuming to produce high-quality software. However,
  that should not alone be a reason to give up the high standards
  of Python development.              -- Martin von Loewis, python-dev




From exarkun at divmod.com  Fri Mar  3 09:08:37 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Mar 2006 09:08:37 -0500
Subject: [Twisted-Python] Re: Twisted Website
In-Reply-To: <2m8xrr6emo.fsf@starship.python.net>
Message-ID: <20060303140837.6122.1892915094.divmod.quotient.12718@ohm>

n Fri, 03 Mar 2006 09:50:39 +0000, Michael Hudson <mwh at python.net> wrote:
>Jean-Paul Calderone <exarkun at divmod.com> writes:
>
>>   * Epydoc has been replaced by docextractor (to be renamed).
>
>Huh?  I admit I put about two seconds of thought so far into the
>project name, but I still think I get to name my own projects :)

Ahh, I' blame radix.  I think he said something about you trying to come up with a different name.

Jean-Paul



From itamar at itamarst.org  Fri Mar  3 10:36:09 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 03 Mar 2006 10:36:09 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16149 - first complete
	draft of documentation,  one example module, and make some changes to
	tap.py so that things actually work as	documented.
In-Reply-To: <4407D291.30902@comcast.net>
References: <E1FF22S-0003Up-00@wolfwood>  <4407D291.30902@comcast.net>
Message-ID: <1141400169.9397.1.camel@localhost.localdomain>

On Fri, 2006-03-03 at 00:22 -0500, Stephen Waterbury wrote:

> Eh?  I must have missed something (not unusual) -- I thought
> taps were going away ... are they coming back now?

It would be nice to have something better, but taps cover a couple of
different use cases (persistent configuration, quick configuration of
simple apps) that have no alternatives at the moment.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From donwsmith at gmail.com  Fri Mar  3 20:01:46 2006
From: donwsmith at gmail.com (Don Smith)
Date: Fri, 3 Mar 2006 17:01:46 -0800
Subject: [Twisted-Python] sample tac that needs a critique
Message-ID: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>

Okay, I've made some huge progress, I think with my Telnet connection stuff.
I'm curious what the Twisted pros think of this..syntax, if it is correct,
etc. Here is what I'm going for, I want to have this application running,
which provides an XML-RPC interface for 'controlling' it. The server, right
now, can start Telnet clients at the request of XML-RPC clients. This seems
to work, however, I'd also like to be able to stop said Telnet clients, or
see which ones are running, etc. I can't wrap my brain around how to
accomplish those bits of functionality. I've included the .tac file below
for reference.

Thanks so much for your assistance!

-Don


#Try to build a Twisted Connector Service the twisted way
from twisted.application import internet, service
from twisted.web import resource, server, static, xmlrpc
import re, time


from EventTypes import Event
connectiontypes = {'TelnetConnection':'A telnet client connection.',
'FileTailConnection':'Facilitates tailing a log file'}


class Connection:
    def __init__(self,name):
        # Constructor
        self.name=name
    #print "Connection name: %s" % self.name
    self.status=False

    def setStatus (self,status):
        self.status=status

####################
# TCP Client Stuff
####################
from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.conch.telnet import Telnet


##########################
# Telnet Clients
##########################
class TelnetClient(Telnet):
    "TelnetClient class."
    def connectionMade(self):
        #print "connection made to %s" % self.factory.name
    #if the cmd variable was set in the calling factory, lets iterate over
it.
    if self.factory.cmd:
        for cmd in self.factory.cmd:
            if "sleep" in cmd:
                #print re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime')
                sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                time.sleep(sleeptime)
            else:
                self.write(cmd)


    def write(self, data):
    #print data
    Telnet._write(self, data+"\r\n")


    def dataReceived(self, data):
        print "received:", data
    #always send data to the eventQueue
    self.factory.eventQueue.insert(Event(data, self.factory.name))
    #check if we should send any commands based on data received
    if self.factory.expect:
        #check if any of the expect dictionary keys are in data
        for key in self.factory.expect.keys():
            if key in data:
                for cmd in self.factory.expect[key]:
                if "sleep" in cmd:
                        sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                        time.sleep(sleeptime)
                    else:
                        self.write(cmd)



class TelnetConnection(Connection, ReconnectingClientFactory):
    "Telnets to host:port and executes cmd. cmd"
    protocol = TelnetClient
    def  __init__(self, name, eventQueue, cmd=None, expect=None):
        Connection.__init__(self, name)
    self.cmd = cmd
    self.expect = expect
    self.eventQueue = eventQueue




    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()


    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()


class ManagerService(service.Service):
    def __init__(self):
        pass

    # some XML-RPC function calls for twisted server
    def stop(self):
        return 'Shutdown initiated'

    def getConnectionTypes(self):
        """Return connection types"""
    return connectiontypes

    def xmlrpc_getActiveConnections(self):
        """Return all active connections"""

    def getConnectionStatus(self, connection):
        return "connection status"


    def getResource(self):
        """Return sum of arguments."""
    r = resource.Resource()
    x = xmlrpc.XMLRPC()
    x.xmlrpc_stop = self.stop
    x.xmlrpc_getConnectionStatus = self.getConnectionStatus
    x.xmlrpc_startTelnet = self.startTelnet

        r.putChild('RPC2', x)
        return r

    def startTelnet(self, host, port, name, queue, command, script):
        from twisted.internet import reactor
    from EventQueue import Queue
        #Create the Event Queue object
    self.queue = queue

        self.queue = Queue()

        reactor.connectTCP(host, int(port), TelnetConnection(name,self.queue
,command,script))
    return "%s started" % name


#create an application instance
application = service.Application('connectorservice', uid=1, gid=1)
m = ManagerService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(7090, server.Site(m.getResource())
                   ).setServiceParent(serviceCollection)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060303/52ce2635/attachment.htm 

From nikl at nikl.net  Sat Mar  4 06:06:19 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Sat, 4 Mar 2006 12:06:19 +0100
Subject: [Twisted-Python] sample tac that needs a critique
In-Reply-To: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>
References: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>
Message-ID: <200603041206.25078.nikl@nikl.net>

> Okay, I've made some huge progress, I think with my Telnet connection
> stuff
up to now just one thing: there is no sample tac ;)
-- 
MfG,

 Nikl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 200 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060304/e83803ef/attachment.pgp 

From mwh at python.net  Sat Mar  4 08:04:59 2006
From: mwh at python.net (Michael Hudson)
Date: Sat, 04 Mar 2006 13:04:59 +0000
Subject: [Twisted-Python] Re: Twisted Website
References: <2m8xrr6emo.fsf@starship.python.net>
	<20060303140837.6122.1892915094.divmod.quotient.12718@ohm>
Message-ID: <2mslpy4ays.fsf@starship.python.net>

Jean-Paul Calderone <exarkun at divmod.com> writes:

> n Fri, 03 Mar 2006 09:50:39 +0000, Michael Hudson <mwh at python.net> wrote:
>>Jean-Paul Calderone <exarkun at divmod.com> writes:
>>
>>>   * Epydoc has been replaced by docextractor (to be renamed).
>>
>>Huh?  I admit I put about two seconds of thought so far into the
>>project name, but I still think I get to name my own projects :)
>
> Ahh, I' blame radix.  I think he said something about you trying to
> come up with a different name.

Ah, OK.  Maybe I said something like that, don't really remember.

Sorry for the mis-read.

Cheers,
mwh

-- 
  QNX... the OS that walks like a duck, quacks like a duck, but is,
  in fact, a platypus. ... the adventures of porting duck software 
  to the platypus were avoidable this time.
                                 -- Chris Klein, alt.sysadmin.recovery




From donwsmith at gmail.com  Sat Mar  4 10:49:33 2006
From: donwsmith at gmail.com (Don Smith)
Date: Sat, 4 Mar 2006 07:49:33 -0800
Subject: [Twisted-Python] sample tac that needs a critique
In-Reply-To: <200603041206.25078.nikl@nikl.net>
References: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>
	<200603041206.25078.nikl@nikl.net>
Message-ID: <24f63c200603040749h29cf3d54n36374360bd592efc@mail.gmail.com>

it is in the email.

#Try to build a Twisted Connector Service the twisted way
from twisted.application import internet, service
from twisted.web import resource, server, static, xmlrpc
import re, time


from EventTypes import Event
connectiontypes = {'TelnetConnection':'A telnet client connection.',
'FileTailConnection':'Facilitates tailing a log file'}


class Connection:
    def __init__(self,name):
        # Constructor
        self.name=name
    #print "Connection name: %s" % self.name
    self.status=False

    def setStatus (self,status):
        self.status=status

####################
# TCP Client Stuff
####################
from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.conch.telnet import Telnet


##########################
# Telnet Clients
##########################
class TelnetClient(Telnet):
    "TelnetClient class."
    def connectionMade(self):
        #print "connection made to %s" % self.factory.name
    #if the cmd variable was set in the calling factory, lets iterate over
it.
    if self.factory.cmd:
        for cmd in self.factory.cmd:
            if "sleep" in cmd:
                #print re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime')
                sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                time.sleep(sleeptime)
            else:
                self.write(cmd)


    def write(self, data):
    #print data
    Telnet._write(self, data+"\r\n")


    def dataReceived(self, data):
        print "received:", data
    #always send data to the eventQueue
    self.factory.eventQueue.insert(Event(data, self.factory.name))
    #check if we should send any commands based on data received
    if self.factory.expect:
        #check if any of the expect dictionary keys are in data
        for key in self.factory.expect.keys():
            if key in data:
                for cmd in self.factory.expect [key]:
                if "sleep" in cmd:
                        sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                        time.sleep(sleeptime)
                    else:
                        self.write(cmd)



class TelnetConnection(Connection, ReconnectingClientFactory):
    "Telnets to host:port and executes cmd. cmd"
    protocol = TelnetClient
    def  __init__(self, name, eventQueue, cmd=None, expect=None):
        Connection.__init__(self, name)
    self.cmd = cmd
    self.expect = expect
    self.eventQueue = eventQueue




    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()


    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()


class ManagerService(service.Service):
    def __init__(self):
        pass

    # some XML-RPC function calls for twisted server
    def stop(self):
        return 'Shutdown initiated'

    def getConnectionTypes(self):
        """Return connection types"""
    return connectiontypes

    def xmlrpc_getActiveConnections(self):
        """Return all active connections"""

    def getConnectionStatus(self, connection):
        return "connection status"


    def getResource(self):
        """Return sum of arguments."""
    r = resource.Resource()
    x = xmlrpc.XMLRPC()
    x.xmlrpc_stop = self.stop
    x.xmlrpc_getConnectionStatus = self.getConnectionStatus
    x.xmlrpc_startTelnet = self.startTelnet

        r.putChild('RPC2', x)
        return r

    def startTelnet(self, host, port, name, queue, command, script):
        from twisted.internet import reactor
    from EventQueue import Queue
        #Create the Event Queue object
    self.queue = queue

        self.queue = Queue()

        reactor.connectTCP(host, int(port),
TelnetConnection(name,self.queue,command,script))
    return "%s started" % name


#create an application instance
application = service.Application('connectorservice', uid=1, gid=1)
m = ManagerService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(7090, server.Site(m.getResource())
                   ).setServiceParent(serviceCollection)


On 3/4/06, Nikolaus Schlemm <nikl at nikl.net> wrote:
>
> > Okay, I've made some huge progress, I think with my Telnet connection
> > stuff
> up to now just one thing: there is no sample tac ;)
> --
> MfG,
>
> Nikl
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060304/4af1f8bd/attachment.htm 

From tobi.lewitt at web.de  Sun Mar  5 12:35:38 2006
From: tobi.lewitt at web.de (Tobi Lewitt)
Date: Sun, 05 Mar 2006 18:35:38 +0100
Subject: [Twisted-Python] beginner's question to OSCAR & twisted
Message-ID: <1371335581@web.de>

Hello, my name is Tobi and i'm a student from germany.
I have some experience with python, but i think i'm still bad at all.
I have heard about twisted, and i am thinking for months to build an own ICQ/OSCAR-bot, so i downloaded Twisted-Words and looked at this OSCAR-file. but i dont know really what to do with it.

I think it would already help me if you give me perhaps a hint how to use twisted to connect with a ICQ-server, if i once know i think i would be alble to understand the rest on my own.

i hope my questions aren't too stubid for that list, tobi.
______________________________________________________________
Verschicken Sie romantische, coole und witzige Bilder per SMS!
Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193




From jadestorm at nc.rr.com  Sun Mar  5 13:13:07 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sun, 5 Mar 2006 13:13:07 -0500
Subject: [Twisted-Python] beginner's question to OSCAR & twisted
In-Reply-To: <1371335581@web.de>
References: <1371335581@web.de>
Message-ID: <4409B86F-86A7-457A-9582-5DA78DD5A261@nc.rr.com>

Hi Tobi!

There is an example 'bot' that uses oscar in doc/examples within the  
Twisted-Words dist.  It is called 'oscardemo.py'.  That's probably  
the best place to start!  I have a much more advanced copy of the  
oscar module within my jabber transports (pyicq and pyaim) but I need  
to clean it up, write up some docs, write up what all has changed,  
and write up some tests before it can be put back into TwistedWords.   
You can message me directly with questions as you work on it if you'd  
like.

Daniel

On Mar 5, 2006, at 12:35 PM, Tobi Lewitt wrote:

> Hello, my name is Tobi and i'm a student from germany.
> I have some experience with python, but i think i'm still bad at all.
> I have heard about twisted, and i am thinking for months to build  
> an own ICQ/OSCAR-bot, so i downloaded Twisted-Words and looked at  
> this OSCAR-file. but i dont know really what to do with it.
>
> I think it would already help me if you give me perhaps a hint how  
> to use twisted to connect with a ICQ-server, if i once know i think  
> i would be alble to understand the rest on my own.
>
> i hope my questions aren't too stubid for that list, tobi.
> ______________________________________________________________
> Verschicken Sie romantische, coole und witzige Bilder per SMS!
> Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From andreas at kostyrka.org  Sun Mar  5 14:06:20 2006
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Sun, 5 Mar 2006 20:06:20 +0100
Subject: [Twisted-Python] beginner's question to OSCAR & twisted
References: <1141585507.3698860A@fk13.dngr.org>
Message-ID: <1141585583.17DE75E3@fn13.dngr.org>

Ok, twisted/docs/words/examples contains oscardemo which works well 
enough.

If you are interested I've written on the base of it an AIM <-> IRC 
(xchat) bridge.

Andreas

Am Sonntag, 5. M?rz 2006 18:42 schrieb Tobi Lewitt:
> Hello, my name is Tobi and i'm a student from germany.
> I have some experience with python, but i think i'm still bad at all.
> I have heard about twisted, and i am thinking for months to build an 
> own ICQ/OSCAR-bot, so i downloaded Twisted-Words and looked at this 
> OSCAR-file. but i dont know really what to do with it.
>
> I think it would already help me if you give me perhaps a hint how to 
> use twisted to connect with a ICQ-server, if i once know i think i 
> would be alble to understand the rest on my own.
>
> i hope my questions aren't too stubid for that list, tobi.
> ______________________________________________________________
> Verschicken Sie romantische, coole und witzige Bilder per SMS!
> Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- Andreas Kostyrka
-- Andreas Kostyrka


From diwaker.lists at gmail.com  Sun Mar  5 15:00:30 2006
From: diwaker.lists at gmail.com (Diwaker Gupta)
Date: Sun, 5 Mar 2006 12:00:30 -0800
Subject: [Twisted-Python] API reference
Message-ID: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>

Hi everyone,

The new website seems to be coming along nicely. However, I find
myself missing the old API reference a lot. The previous Javadoc style
reference was very easy to navigate, jump across things, and provided
a lot more useful information in the same screen space compared to the
current format (where everything is on its own HTML page, no frames)

It seems the pages are still being generated by epydoc -- some styling
is missing, and the frames page is missing? Is this something being
worked on/considered? Or is the current format of API reference final?

Thanks,
Diwaker
--
Web/Blog/Gallery: http://floatingsun.net/blog



From exarkun at divmod.com  Sun Mar  5 18:24:33 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 5 Mar 2006 18:24:33 -0500
Subject: [Twisted-Python] API reference
In-Reply-To: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>
Message-ID: <20060305232433.6122.1312468900.divmod.quotient.13226@ohm>

On Sun, 5 Mar 2006 12:00:30 -0800, Diwaker Gupta <diwaker.lists at gmail.com> wrote:
>Hi everyone,
>
>The new website seems to be coming along nicely. However, I find
>myself missing the old API reference a lot. The previous Javadoc style
>reference was very easy to navigate, jump across things, and provided
>a lot more useful information in the same screen space compared to the
>current format (where everything is on its own HTML page, no frames)
>
>It seems the pages are still being generated by epydoc -- some styling
>is missing, and the frames page is missing? Is this something being
>worked on/considered? Or is the current format of API reference final?

The documentation is being generated by mwh's docextractor project.  It is very much a work in progress.  And speaking of which, I've just updated the website with a version of the html which includes some significant style improvements from jml and mwh.  Further suggestions for improvements are welcome.

Jean-Paul



From simon at hedberg.net  Sun Mar  5 19:23:43 2006
From: simon at hedberg.net (Simon Hedberg)
Date: Mon, 6 Mar 2006 01:23:43 +0100
Subject: [Twisted-Python] SQLAlchemy with Twisted
Message-ID: <000001c640b4$39f36060$38aa20d4@hp>

Hi,
There were some talk on the list about this a while ago and Ed Suominen
had some code up for review. What's the status on this now? 
I haven't tested SQLAlchemy yet but it seems quite nice on paper, and it
would feel good to replace my own orm hack with something that has more
development efforts behind it. And I guess I'm not the only one in this
situation.. 

TIA
/Simon




From diwaker.lists at gmail.com  Sun Mar  5 19:35:13 2006
From: diwaker.lists at gmail.com (Diwaker Gupta)
Date: Sun, 5 Mar 2006 16:35:13 -0800
Subject: [Twisted-Python] API reference
In-Reply-To: <20060305232433.6122.1312468900.divmod.quotient.13226@ohm>
References: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>
	<20060305232433.6122.1312468900.divmod.quotient.13226@ohm>
Message-ID: <891be9410603051635m78a080d4n81a92f66874b1544@mail.gmail.com>

> The documentation is being generated by mwh's docextractor project.  It is very much a work in progress.  And speaking of which, I've just updated the website with a version of the html which includes some significant style improvements from jml and mwh.  Further suggestions for improvements are welcome.

The new pages look better (color/styles etc help in quickly going over
documentation), but I still find myself losing a lot of context
flipping back and forth between pages. I find the Javadoc style
frame-based documentation much more productive.

Just my 2c.
Diwaker
--
Web/Blog/Gallery: http://floatingsun.net/blog



From matusis at matusis.com  Sun Mar  5 19:49:53 2006
From: matusis at matusis.com (Alec Matusis)
Date: Sun, 5 Mar 2006 16:49:53 -0800
Subject: [Twisted-Python] API reference
In-Reply-To: <20060305232433.6122.1312468900.divmod.quotient.13226@ohm>
Message-ID: <E1FG3vL-00014Z-00@pyramid.twistedmatrix.com>

I agree, the old documentation was better. The thing that I miss the most is
the search, that would be restricted to Docs only, rather than the site-wide
search. 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul
Calderone
Sent: Sunday, March 05, 2006 3:25 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] API reference

On Sun, 5 Mar 2006 12:00:30 -0800, Diwaker Gupta <diwaker.lists at gmail.com>
wrote:
>Hi everyone,
>
>The new website seems to be coming along nicely. However, I find
>myself missing the old API reference a lot. The previous Javadoc style
>reference was very easy to navigate, jump across things, and provided
>a lot more useful information in the same screen space compared to the
>current format (where everything is on its own HTML page, no frames)
>
>It seems the pages are still being generated by epydoc -- some styling
>is missing, and the frames page is missing? Is this something being
>worked on/considered? Or is the current format of API reference final?

The documentation is being generated by mwh's docextractor project.  It is
very much a work in progress.  And speaking of which, I've just updated the
website with a version of the html which includes some significant style
improvements from jml and mwh.  Further suggestions for improvements are
welcome.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mwh at python.net  Sun Mar  5 20:27:34 2006
From: mwh at python.net (Michael Hudson)
Date: Mon, 06 Mar 2006 01:27:34 +0000
Subject: [Twisted-Python] Re: API reference
References: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>
Message-ID: <2mfylw4b21.fsf@starship.python.net>

"Diwaker Gupta" <diwaker.lists at gmail.com> writes:

> Hi everyone,
>
> The new website seems to be coming along nicely. However, I find
> myself missing the old API reference a lot. The previous Javadoc style
> reference was very easy to navigate, jump across things,

Strange, I always find epydoc output pretty hard to navigate...

[...]

> It seems the pages are still being generated by epydoc 

Nope.  epytext, epydoc's markup system is used by the docstrings
though, so we still use epydoc's parser/formatter for that.

> -- some styling is missing, and the frames page is missing? Is this
> something being worked on/considered? 

It's being worked on fairly actively:

http://codespeak.net/svn/user/mwh/docextractor/trunk/

> Or is the current format of API reference final?

Hardly!  In addition to what JP said, concrete suggestions on how to
improve it or even patches are very welcome.  I sometimes have a more
up-to-date/experimental version up at:

   http://starship.python.net/crew/mwh/apidocs/twisted.html

(it's only mildly different from what's on twistedmatrix.com
right now).

Cheers,
mwh

-- 
  The source passes lint without any complaint (if invoked with
  >/dev/null).    -- Daniel Fischer, http://www.ioccc.org/1998/df.hint




From kim at trdlnk.com  Mon Mar  6 11:04:59 2006
From: kim at trdlnk.com (Kim Novak)
Date: Mon, 06 Mar 2006 10:04:59 -0600
Subject: [Twisted-Python] using gtk without threads and pb
Message-ID: <440C5DAB.2090705@trdlnk.com>

I am new to twisted and am trying to figure out if I can use it with gtk 
but without threads.

I need this because of an old library I'm using that doesn't work with 
gtk threads. Since I have to run single threaded the async xml rpc 
offered by Twisted is ideal for my application to work well.

To test this I tweaked the example pbgtk2.py to disable threads as 
recommended here:
http://twistedmatrix.com/trac/ticket/1083
The tweaked version is attached. I start pbecho.py and run my pbgtk2.py. 
When I click connect it eventually times out. Without my tweaks it 
connects immediately.

Does anyone know if this is supposed to be possible? If so, what I am I 
doing wrong?

I am using python v2.3 and pygtk v2.6.
Thanks
Kim

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pbgtk2.py
Type: application/x-python
Size: 4284 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060306/9e9acbc7/attachment.bin 

From rudy at goldenhelix.com  Mon Mar  6 17:45:08 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Mon, 6 Mar 2006 15:45:08 -0700
Subject: [Twisted-Python] new pb, cPB and general PBness?
In-Reply-To: <440C5DAB.2090705@trdlnk.com>
References: <440C5DAB.2090705@trdlnk.com>
Message-ID: <200603061545.08557.rudy@goldenhelix.com>

So I'm happily using pb and am generally content with the performace, but 
noticed the documentation mentioning that a C version of the jelly functions 
might be forthcoming kind of like the cPickle library. 

What is the status of "c" pb? I also saw talk of a "new" pb implementation 
(pb2?) and am wondering if the C version is being put on hold until the new 
pb protocol stabilizes. The new pb talk has got me curious as well. What's 
"new" or different about it?

I'd be willing to help/collaborate/code with the C pb project if there in fact 
is one. Well, once I have more time... a little crazy at the moment. :)

Thanks,

--gabe



From luc.stepniewski at adelux.fr  Tue Mar  7 06:11:40 2006
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Tue, 7 Mar 2006 12:11:40 +0100
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <200602211912.27692.uwe@oss4u.com>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<1140544697.10335.20.camel@localhost.localdomain>
	<200602211912.27692.uwe@oss4u.com>
Message-ID: <200603071211.40627.luc.stepniewski@adelux.fr>

Hello,

I tried to implement that timeout method. I think I did it corrrectly (example 
attached in this mail), but it seems that one can't disconnect() a PB if it 
hasn't replied yet :-( It looks like it is locked and waits for an answer 
from the remote PB.
So if you run a netcat (nc -vv -l -p 9003) and run my code, timeoutHandler()
is called but the factory is NOT disconnected :-(

Did you do something different from my code?

Thanks for your help,
Luc

On Wednesday 22 February 2006 04:12, Uwe C. Schroeder wrote:
> On Tuesday 21 February 2006 09:58, Itamar Shtull-Trauring wrote:
> > On Tue, 2006-02-21 at 18:40 +0100, Luc Stepniewski wrote:
> > > On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> > > > The typical way to do this is have some sort of remote_ping method
> > > > that returns immediately on the server (or on the client) that the
> > > > client (or the server) calls every once in a while, with a timeout
> > > > for the response. If that times out the problem is likely the
> > > > connection, not the server being slow, in which case you can close
> > > > the connection.
> > >
> > > Yes, it's the same thing as making a pseudo "timeout" with a callLater.
> >
> > Not exactly. What I'm suggesting is a different command that you send in
> > addition to your regular operations. This extra command, "ping", is
> > expected to return a result quickly; if it doesn't you know something is
> > wrong. That way even if your regular commands take a really long time
> > for the server to process you can still tell if the server itself (or
> > your connection to it) is ok. Every 10 seconds, say, you ping the
> > server; if you don't get a response back in 5 seconds it's probably
> > down.
>
> That's actually what I'm doing with my application - although for a
> different reason. I send a "ping" that immediate is answered by a "pong" -
> if I don't get the pong withing 30 seconds I shut the connection down.
> My reason is a missconfigured firewall at one of my clients which drops
> forwarding after about 90 seconds idle time. Since I couldn't get their
> (incompetent) network admin to fix it I send a ping every 30 sec, so the
> firewall thinks the connection is active and doesn't drop it.
>
> Luc: if you need the code for that (although it's very simple), drop me a
> line.


-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug.py
Type: application/x-python
Size: 1737 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060307/394f0447/attachment.bin 

From mikeeee at hush.com  Tue Mar  7 13:19:27 2006
From: mikeeee at hush.com (Mike Christey)
Date: Tue,  7 Mar 2006 19:19:27 +0100
Subject: [Twisted-Python] ClientCreator error handling
Message-ID: <200603071819.k27IJS6r007361@mailserver2.hushmail.com>

Hi,

I don't know if this is right place to ask this kind of
question but I'm really stuck at this problem and documentation
seems not help (or better, I'm dumb).

For me who uses try/except on daily basis the twisted error handling
seems to be voodoo. All I want to do is add 'connection refused', 
'dns lookup er ror' and similiar handling to the sshsimpleclient.py 
script.

I tried something like:

def errorCallback(failure):
        print "Err"
        [...] # other code



d = defer.Deferred()
d.addErrback(errorCallback)
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 
22)
reactor.run()

but that's probably have nothing to do with way it should be done..

Anyone could help me please?




Concerned about your privacy? Instantly send FREE secure email, no account required
http://www.hushmail.com/send?l=480

Get the best prices on SSL certificates from Hushmail
https://www.hushssl.com?l=485




From itamar at itamarst.org  Tue Mar  7 13:46:54 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 07 Mar 2006 13:46:54 -0500
Subject: [Twisted-Python] ClientCreator error handling
In-Reply-To: <200603071819.k27IJS6r007361@mailserver2.hushmail.com>
References: <200603071819.k27IJS6r007361@mailserver2.hushmail.com>
Message-ID: <1141757214.9230.19.camel@localhost.localdomain>

On Tue, 2006-03-07 at 19:19 +0100, Mike Christey wrote:
> 
> def errorCallback(failure):
>         print "Err"
>         [...] # other code
> 
> 
> 
> d = defer.Deferred()
> d.addErrback(errorCallback)
> protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 
> 22)
> reactor.run() 

protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST,
22).addErrback(errorCallback)

ClientCreator.connectTCP returns a Deferred.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From jml at mumak.net  Wed Mar  8 00:21:10 2006
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Mar 2006 16:21:10 +1100
Subject: [Twisted-Python] ATTN z3p: Errors in Conch tests
Message-ID: <d06a5cd30603072121w2d832e55qe2f70b89e4a4f2be@mail.gmail.com>

z3p,

I've switch the conch tests to use Deferreds rather than spinUntil and
spinWhile (See branches/deprecated-trial-1509 and
http://www.twistedmatrix.com/trac/ticket/1509).

However, two tests in test_conch are failing when run on Linux (they
pass on OS X).  The code looks fine and other reviewers can't seem to
spot the problem. Why is it breaking?

I'd appreciate a response as soon as possible, even a negative one.

cheers,
jml



From paulswartz at gmail.com  Wed Mar  8 00:36:18 2006
From: paulswartz at gmail.com (Paul Swartz)
Date: Wed, 08 Mar 2006 00:36:18 -0500
Subject: [Twisted-Python] ATTN z3p: Errors in Conch tests
In-Reply-To: <d06a5cd30603072121w2d832e55qe2f70b89e4a4f2be@mail.gmail.com>
References: <d06a5cd30603072121w2d832e55qe2f70b89e4a4f2be@mail.gmail.com>
Message-ID: <440E6D52.7020208@gmail.com>

Jonathan Lange wrote:
> z3p,
> 
> I've switch the conch tests to use Deferreds rather than spinUntil and
> spinWhile (See branches/deprecated-trial-1509 and
> http://www.twistedmatrix.com/trac/ticket/1509).
> 
> However, two tests in test_conch are failing when run on Linux (they
> pass on OS X).  The code looks fine and other reviewers can't seem to
> spot the problem. Why is it breaking?
> 
> I'd appreciate a response as soon as possible, even a negative one.

I'm quite busy with classes right now, but I'll try to take a look
tomorrow evening when I've got a bit of spare time.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.livejournal.com/
AIM: z3penguin
GPG: 5CF0B1C9



From gale at sefer.org  Wed Mar  8 05:46:35 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Wed, 8 Mar 2006 12:46:35 +0200
Subject: [Twisted-Python] Degrading under load
Message-ID: <2608b8a80603080246r559f5c6jc0c552b3063e9c24@mail.gmail.com>

I need to set up a TCP service (on a linux box)
that will get something like a few hunderd connections
per minute at peak load. For each connection, I do
some XML processing, and possibly send a query
to another nearby machine and get a respone.

Seems to me that twisted should be able to handle that.

But what happens when I get the occasional burst
of connections, lets say tens of connections within
one second? What I need is:

o Every client gets a socket connection promptly, so
  no danger of TCP timeout.
o Under medium load, clients will have to wait a
  bit longer for the response.
o Under heavy load, some clients will get a "busy"
  response (defined in the protocol I am implementing)
  and immediate socket close.

What is the best way to do that in twisted? I envision
one of the following architectures:

A. Just use twisted in the usual way. Watch twisted's
event queue for heavy load.

B. Two processes: one to dish out connections and one
to queue requests and process them.

C. Three processes: one to dish out connections, one
to queue requests and watch for load, and one to
process the requests.

Which of these do I need to use to get the desired
effect under load? Or is there some better way?

Thanks,
Yitz



From paul-lists at perforge.com  Wed Mar  8 06:27:51 2006
From: paul-lists at perforge.com (Paul G)
Date: Wed, 8 Mar 2006 06:27:51 -0500
Subject: [Twisted-Python] Degrading under load
References: <2608b8a80603080246r559f5c6jc0c552b3063e9c24@mail.gmail.com>
Message-ID: <752e01c642a3$56037f10$6402a8c0@dcore>


----- Original Message ----- 
From: "Yitzchak Gale" <gale at sefer.org>
To: <twisted-python at twistedmatrix.com>
Sent: Wednesday, March 08, 2006 5:46 AM
Subject: [Twisted-Python] Degrading under load

 --- snip ---

premature optimization is just as bad as premature 
$rhymes_with_optimization. implement all of this in a single process, 
benchmark under various loads and see if you need to do anything at all. if 
you do, consider splitting the full handling of a request into separate, 
cooperative pieces with a deferred/callLater (connection handling and xml 
processing would be the natural division here). if this is insufficient (eg 
if the xml processing is sufficiently expensive), perform it in a 
threadpool. i would only split it off into a completely separate process if 
you bottleneck on the GIL, which i wouldn't consider likely in your case.

-p 




From Brendan at BrendanSimon.com  Wed Mar  8 07:03:14 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Wed, 08 Mar 2006 23:03:14 +1100
Subject: [Twisted-Python] Conch and Rsync
Message-ID: <440EC802.9090404@BrendanSimon.com>

I have an application that runs on Windows, and I want to be able to 
sync files back and forth from/to a unix server.  The unix server has 
sshd and rsync.

Can I use twisted/conch on the Windows box to call rsync (over ssh) on 
the unix server to push/pull files to/from the Windows box ???

Do I need something like rsync.py in my Windows app ?
If so, would it be an rsync client and/or server ?

Thanks for any info and thoughts.
Brendan.




From mary-twisted at puzzling.org  Wed Mar  8 07:47:07 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 8 Mar 2006 23:47:07 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <20060308124707.GR24361@sourdust.home.puzzling.org>

On Thu, Mar 02, 2006, Jonathan Lange wrote:
> Hello,
> 
> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

And having said all that, I didn't make it! I'm awfully sorry Jonathan,
can we reschedule?

-Mary

-- 
<stranger> ok i think i need a polymorphic language with continuations and closures to write this properly
<stranger> should I give up and implement in C?



From ymalsot at besancon.parkeon.com  Wed Mar  8 10:43:30 2006
From: ymalsot at besancon.parkeon.com (Yvain Malsot)
Date: Wed, 08 Mar 2006 15:43:30 +0000
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
Message-ID: <440EFBA2.3020905@besancon.parkeon.com>

Message interesting for the following twisted developpers (@see ticket 
#1132):
 - oubiwann
 - jknight
 - itarmarst


Hi,

as we have seen in our developpment spikes and at this place: 
http://twistedmatrix.com/pipermail/twisted-web/2005-September/001903.html
there's a bug when Twisted XML-RPC server deals with 'None' method response.

The previous message has given a patch (seen at the end of message) for 
using the 'allow_none' parameter in order to resolve bug.

As we are new twisted users and haven't seen any revision for 
twisted.web.xmlrpc module (since 2 years), we are asking 
twisted-community the following questions:
 - is this patch acceptable?
 - will it be include in next twisted revision?

We have seen that a new xmlrpc.py is ready to be committed in the web2 
package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) 
but it doesn't seem to include the previous patch.

Moreover, what about ticket #914 (uncatched exceptions we have also 
encountered) ?

Regards,

Vincent & Yvain




From exarkun at divmod.com  Wed Mar  8 11:13:59 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Mar 2006 11:13:59 -0500
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
In-Reply-To: <440EFBA2.3020905@besancon.parkeon.com>
Message-ID: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>

On Wed, 08 Mar 2006 15:43:30 +0000, Yvain Malsot <ymalsot at besancon.parkeon.com> wrote:
>Message interesting for the following twisted developpers (@see ticket 
>#1132):
>- oubiwann
>- jknight
>- itarmarst
>
>
>Hi,
>
>as we have seen in our developpment spikes and at this place: 
>http://twistedmatrix.com/pipermail/twisted-web/2005-September/001903.html
>there's a bug when Twisted XML-RPC server deals with 'None' method response.
>
>The previous message has given a patch (seen at the end of message) for 
>using the 'allow_none' parameter in order to resolve bug.
>
>As we are new twisted users and haven't seen any revision for 
>twisted.web.xmlrpc module (since 2 years), we are asking twisted-community 
>the following questions:
>- is this patch acceptable?
>- will it be include in next twisted revision?
>
>We have seen that a new xmlrpc.py is ready to be committed in the web2 
>package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) but it 
>doesn't seem to include the previous patch.

Problems with the patch:

  * Doesn't follow the coding standard (allow_none should be allowNone)
  * Includes no unit tests
  * Includes no documentation
  * Isn't in the bug tracker

The feature itself and the implementation otherwise seem reasonable to me.

Jean-Paul



From itamar at itamarst.org  Wed Mar  8 11:54:20 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Mar 2006 11:54:20 -0500
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
In-Reply-To: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>
References: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>
Message-ID: <1141836860.9151.8.camel@localhost.localdomain>

On Wed, 2006-03-08 at 11:13 -0500, Jean-Paul Calderone wrote:

> >We have seen that a new xmlrpc.py is ready to be committed in the web2 
> >package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) but it 
> >doesn't seem to include the previous patch.
> 
> Problems with the patch:
> 
>   * Doesn't follow the coding standard (allow_none should be allowNone)
>   * Includes no unit tests
>   * Includes no documentation
>   * Isn't in the bug tracker

There's actually already a patch in the tracker for None support in
twisted.web.xmlrpc: http://twistedmatrix.com/trac/ticket/469 

However, it did not have tests, and also made the tests fail when last I
applied it.





From jml at mumak.net  Wed Mar  8 17:24:23 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 9 Mar 2006 09:24:23 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060308124707.GR24361@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
Message-ID: <d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>

On 3/8/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Thu, Mar 02, 2006, Jonathan Lange wrote:
> > Hello,
> >
> > Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> > on 8th March (UTC+11). The topic of discussion is: how to improve the
> > Trial documentation.
>
> And having said all that, I didn't make it! I'm awfully sorry Jonathan,
> can we reschedule?
>

No worries. We definitely can reschedule.

Monday early evenings and Wednesday early evenings are both good for
me (Although not 13 Mar). Same time OK?

jml



From mary-twisted at puzzling.org  Wed Mar  8 17:35:35 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 9 Mar 2006 09:35:35 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
Message-ID: <20060308223535.GA11982@sourdust.home.puzzling.org>

On Thu, Mar 09, 2006, Jonathan Lange wrote:
> Monday early evenings and Wednesday early evenings are both good for
> me (Although not 13 Mar). Same time OK?

I will get back to you tomorrow on which day is better.

Thanks,

Mary

-- 
<moshez> spiv: I cry wolf all the time, but that's because 
         WE'RE SURROUNDED BY WOLFS!



From mailinglists at smartology.nl  Thu Mar  9 11:43:59 2006
From: mailinglists at smartology.nl (Remi Cool)
Date: Thu, 09 Mar 2006 17:43:59 +0100
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
In-Reply-To: <1141836860.9151.8.camel@localhost.localdomain>
References: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>
	<1141836860.9151.8.camel@localhost.localdomain>
Message-ID: <44105B4F.6070805@smartology.nl>

Itamar Shtull-Trauring wrote:

>On Wed, 2006-03-08 at 11:13 -0500, Jean-Paul Calderone wrote:
>
>  
>
>>>We have seen that a new xmlrpc.py is ready to be committed in the web2 
>>>package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) but it 
>>>doesn't seem to include the previous patch.
>>>      
>>>
>>Problems with the patch:
>>
>>  * Doesn't follow the coding standard (allow_none should be allowNone)
>>  * Includes no unit tests
>>  * Includes no documentation
>>  * Isn't in the bug tracker
>>    
>>
>
>There's actually already a patch in the tracker for None support in
>twisted.web.xmlrpc: http://twistedmatrix.com/trac/ticket/469 
>
>However, it did not have tests, and also made the tests fail when last I
>applied it.
>
>  
>
I've not delved into the code but found the following in:

http://twistedmatrix.com/trac/attachment/ticket/469/xmlrpc_allowNone_by_xmlrpclibVersion_rev4.patch

Line 297:

    def __init__(self, url, host, method, allowNone=0, *args):

I don't think you can have *args after a 'named' argument.

Have you tried:

    def __init__(self, url, host, method, *args, allowNone=0):


- Remi -





From PPNTWIMBXFFC at spammotel.com  Thu Mar  9 14:31:32 2006
From: PPNTWIMBXFFC at spammotel.com (Marco Aschwanden)
Date: Thu, 09 Mar 2006 20:31:32 +0100
Subject: [Twisted-Python] DB-Transaction spanning several calls
Message-ID: <op.s55u6ueac87q46@localhost.localdomain>

Hi
How do I make a db transaction that spans several xmlrpc calls before I  
can do a commit?
Do I have to manipulate the twisted.enterprise.adbapi by hand to reach my  
goal?

Thanks for any hints,
Have a nice day,
Marco




From gale at sefer.org  Thu Mar  9 16:13:21 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Thu, 9 Mar 2006 23:13:21 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141896657.0@gershon>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
Message-ID: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>

Sorry, I guess my question wasn't clear enough.

The most important things I need to know are:

When running listenTCP, how often does twisted
accept pending connections on the port? Is it only
when the previous connection is finished
processing, or every time the event loop gets
control, or something in between?

And when twisted does accept pending connections,
does it accept ALL of them and queue them all for
processing, or just one at a time?

Thanks,
Yitz

My original post:
> I need to set up a TCP service (on a linux box)
> that will get something like a few hunderd connections
> per minute at peak load. For each connection, I do
> some XML processing, and possibly send a query
> to another nearby machine and get a respone.
>
> Seems to me that twisted should be able to handle that.
>
> But what happens when I get the occasional burst
> of connections, lets say tens of connections within
> one second? What I need is:
>
> o Every client gets a socket connection promptly, so
>  no danger of TCP timeout.
> o Under medium load, clients will have to wait a
>  bit longer for the response.
> o Under heavy load, some clients will get a "busy"
>  response (defined in the protocol I am implementing)
>  and immediate socket close.
>
> What is the best way to do that in twisted? I envision
> one of the following architectures:
>
> A. Just use twisted in the usual way. Watch twisted's
> event queue for heavy load.
>
> B. Two processes: one to dish out connections and one
> to queue requests and process them.
>
> C. Three processes: one to dish out connections, one
> to queue requests and watch for load, and one to
> process the requests.
>
> Which of these do I need to use to get the desired
> effect under load? Or is there some better way?



From itamar at itamarst.org  Thu Mar  9 16:28:25 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Mar 2006 16:28:25 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
Message-ID: <1141939705.9187.2.camel@localhost.localdomain>

On Thu, 2006-03-09 at 23:13 +0200, Yitzchak Gale wrote:

> When running listenTCP, how often does twisted
> accept pending connections on the port? Is it only
> when the previous connection is finished
> processing, or every time the event loop gets
> control, or something in between?

A TCP connection can live for a long time (e.g. ssh session for hours or
days.) The server will therefore accept connections on each iteration of
the event loop where the server socket is readable.

If processing something when data is received takes a long time though
this mean the event loop won't get control back and so accept()ing will
be delayed. 

> And when twisted does accept pending connections,
> does it accept ALL of them and queue them all for
> processing, or just one at a time?

IIRC most reactors will try to accept as many as possible, up to some
limit in each iteration.




From alecm at chatango.com  Thu Mar  9 16:49:22 2006
From: alecm at chatango.com (Alec (Chatango))
Date: Thu, 9 Mar 2006 13:49:22 -0800
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
Message-ID: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>

Hi Yitzchak,

I can give you some information regarding option A.
We are running our chatserver using twisted. When we run twisted as a single
process, when the number of connections per second is more than 50 (> 3000
per min), twisted often blocks and does not accept new connections. The CPU
load showed by "top" for twisted process is 99.9% 
This behavior is on linux 2.6 on a 64 bit 4 CPU machine.
On 2.4 kernel on a 32 bit 4 CPU machine however, it always accepted new
connections, even with 99.9% load, but then they would often time out, since
under that load no data was written into them for a long time. This was with
Twisted 1.3

I should add here that in our case, the load was driven not by
connection/disconnection events, but by the number of established
connections. When that number was in the vicinity of 5000, system poll()
became very slow (we run poll reactor).

Another observation: we had a memory leak, so when the RSS memory grew say
3x the starting memory, the performance severely degraded. I should note
that the machine was not running out of memory: we have 4GB RAM, and the
total used memory was at most 400MB, with twistd process using maybe 160MB
at the most.

We are now moving to Twisted 2.2 and multiprocess architecture, somewhat
similar to your B option. 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Yitzchak Gale
Sent: Thursday, March 09, 2006 1:13 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Degrading under load

Sorry, I guess my question wasn't clear enough.

The most important things I need to know are:

When running listenTCP, how often does twisted
accept pending connections on the port? Is it only
when the previous connection is finished
processing, or every time the event loop gets
control, or something in between?

And when twisted does accept pending connections,
does it accept ALL of them and queue them all for
processing, or just one at a time?

Thanks,
Yitz

My original post:
> I need to set up a TCP service (on a linux box)
> that will get something like a few hunderd connections
> per minute at peak load. For each connection, I do
> some XML processing, and possibly send a query
> to another nearby machine and get a respone.
>
> Seems to me that twisted should be able to handle that.
>
> But what happens when I get the occasional burst
> of connections, lets say tens of connections within
> one second? What I need is:
>
> o Every client gets a socket connection promptly, so
>  no danger of TCP timeout.
> o Under medium load, clients will have to wait a
>  bit longer for the response.
> o Under heavy load, some clients will get a "busy"
>  response (defined in the protocol I am implementing)
>  and immediate socket close.
>
> What is the best way to do that in twisted? I envision
> one of the following architectures:
>
> A. Just use twisted in the usual way. Watch twisted's
> event queue for heavy load.
>
> B. Two processes: one to dish out connections and one
> to queue requests and process them.
>
> C. Three processes: one to dish out connections, one
> to queue requests and watch for load, and one to
> process the requests.
>
> Which of these do I need to use to get the desired
> effect under load? Or is there some better way?

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Thu Mar  9 17:31:35 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Mar 2006 17:31:35 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
References: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
Message-ID: <1141943495.9187.9.camel@localhost.localdomain>

On Thu, 2006-03-09 at 13:49 -0800, Alec (Chatango) wrote:

> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

An epoll-based reactor would probably help significantly in this case.
Also note that Twisted 2.x had some algorithmic speed improvements over
1.3 and should scale better (though that doesn't help with poll() being
a bottleneck).




From bruce at cubik.org  Thu Mar  9 17:37:40 2006
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 09 Mar 2006 15:37:40 -0700
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141943495.9187.9.camel@localhost.localdomain>
References: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
	<1141943495.9187.9.camel@localhost.localdomain>
Message-ID: <4410AE34.60401@cubik.org>

Itamar Shtull-Trauring wrote:
> On Thu, 2006-03-09 at 13:49 -0800, Alec (Chatango) wrote:
>> I should add here that in our case, the load was driven not by
>> connection/disconnection events, but by the number of established
>> connections. When that number was in the vicinity of 5000, system poll()
>> became very slow (we run poll reactor).
> 
> An epoll-based reactor would probably help significantly in this case.
> Also note that Twisted 2.x had some algorithmic speed improvements over
> 1.3 and should scale better (though that doesn't help with poll() being
> a bottleneck).

Wasn't there some work on a libevent-based reactor at some point? 
Where's that stand?

  - Bruce



From TimothyFitz at gmail.com  Thu Mar  9 18:15:49 2006
From: TimothyFitz at gmail.com (Timothy Fitz)
Date: Thu, 9 Mar 2006 18:15:49 -0500
Subject: [Twisted-Python] Twisted Windows Suggestions
Message-ID: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>

Teratorn and I are stepping up to support twisted on windows, and the
first thing we need to figure out is a list of fixes and features, by
priority. Our top priority is definitely making a windows reactor pass
all of the tests, but beyond that there are numerous issues. My first
project is rewriting the installer using distutils, but there are
numerous other issues to solve, three off the top of my head:

1. Running tac/tap files on windows is unnatural. Sure it's easy
enough for a developer but it's not windows system administrator
friendly. There are many ways to solve this, and I haven't thought
about it long enough, but step 1 would just be associating tac and tap
files with running python.exe twistd on them.

2. Installing tac/taps as services, seamlessly, without writing your
own service code.

3. Buildbots running on windows 2000, windows 2003, soon Vista as
well. I'm not sure how much interest is here, but we'd either need
donated hardware or we'd have to run VMWare somewhere.

What other big issues stop or hinder your usage of Twisted?



From matusis at matusis.com  Thu Mar  9 18:23:05 2006
From: matusis at matusis.com (Alec Matusis)
Date: Thu, 9 Mar 2006 15:23:05 -0800
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141943495.9187.9.camel@localhost.localdomain>
Message-ID: <E1FHUTg-00037F-00@pyramid.twistedmatrix.com>

Is there any stable/tested version of epoll reactor? 
Where could we get it?
I would love to get my hands on it! 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Itamar
Shtull-Trauring
Sent: Thursday, March 09, 2006 2:32 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Degrading under load

On Thu, 2006-03-09 at 13:49 -0800, Alec (Chatango) wrote:

> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

An epoll-based reactor would probably help significantly in this case.
Also note that Twisted 2.x had some algorithmic speed improvements over
1.3 and should scale better (though that doesn't help with poll() being
a bottleneck).


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From jml at mumak.net  Thu Mar  9 18:42:48 2006
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Mar 2006 10:42:48 +1100
Subject: [Twisted-Python] Twisted Windows Suggestions
In-Reply-To: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
References: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
Message-ID: <d06a5cd30603091542u7fdf9788l190568eaee39753@mail.gmail.com>

On 3/10/06, Timothy Fitz <TimothyFitz at gmail.com> wrote:
> Teratorn and I are stepping up to support twisted on windows, and the
> first thing we need to figure out is a list of fixes and features, by
> priority. Our top priority is definitely making a windows reactor pass
> all of the tests, but beyond that there are numerous issues.

I'm glad of this.

At the moment, it doesn't really matter if code breaks tests on the
win32 bots. No one cares about the difference between 2-4
intermittently failing tests and 3-5 intermittently failing tests. The
only difference that matters is green and red.

> My first
> project is rewriting the installer using distutils, but there are
> numerous other issues to solve, three off the top of my head:

Your first project after fixing the win32-select tests, right? (All
the things you list sound like very good ideas for Windows support)

There are a list of issues sorted by priority on the tracker[1]. In
fact, there's a page on the wiki dedicated to storing useful Trac
queries[2]. I suggest that rather than replying to this email with
their issues, people should file bugs on the tracker with 'win32' in
the keyword field.

You can find some other reports on issues with Twisted by looking at
glyph's blog[3].

Thanks very much for doing this -- both you and Eric. Good luck.

jml

[1] http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&keywords=%7Ewin32&order=priority
[2] http://twistedmatrix.com/trac/wiki/UsefulQueries
[3] http://glyf.livejournal.com



From gale at sefer.org  Thu Mar  9 19:02:55 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Fri, 10 Mar 2006 02:02:55 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
Message-ID: <2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>

Alec,

Thanks for the great information!

Our situation is a bit different in that we will
not be keeping connections open for more
than a few seconds at a time (I hope).
So even at peak expected load, we shouldn't
ever have as many as 100 sockets open at any
given time.

Also, we will be load balancing at least two
boxes, for hardware redundancy. So we could
always throw in an extra box or two if things heat
up.

But I think I'll go with B anyway. It is neater in
that it separates performance under load
from the architechture of the high-level processing.
With A, we will always have to worry about
dividing the XML stuff into small enough pieces
to let the event loop in often enough.

Your platform comparisons will be very helpful.

-Yitz

On 3/9/06, Alec (Chatango) <alecm at chatango.com> wrote:
> Hi Yitzchak,
>
> I can give you some information regarding option A.
> We are running our chatserver using twisted. When we run twisted as a single
> process, when the number of connections per second is more than 50 (> 3000
> per min), twisted often blocks and does not accept new connections. The CPU
> load showed by "top" for twisted process is 99.9%
> This behavior is on linux 2.6 on a 64 bit 4 CPU machine.
> On 2.4 kernel on a 32 bit 4 CPU machine however, it always accepted new
> connections, even with 99.9% load, but then they would often time out, since
> under that load no data was written into them for a long time. This was with
> Twisted 1.3
>
> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).
>
> Another observation: we had a memory leak, so when the RSS memory grew say
> 3x the starting memory, the performance severely degraded. I should note
> that the machine was not running out of memory: we have 4GB RAM, and the
> total used memory was at most 400MB, with twistd process using maybe 160MB
> at the most.
>
> We are now moving to Twisted 2.2 and multiprocess architecture, somewhat
> similar to your B option.
>
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Yitzchak Gale
> Sent: Thursday, March 09, 2006 1:13 PM
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Degrading under load
>
> Sorry, I guess my question wasn't clear enough.
>
> The most important things I need to know are:
>
> When running listenTCP, how often does twisted
> accept pending connections on the port? Is it only
> when the previous connection is finished
> processing, or every time the event loop gets
> control, or something in between?
>
> And when twisted does accept pending connections,
> does it accept ALL of them and queue them all for
> processing, or just one at a time?
>
> Thanks,
> Yitz
>
> My original post:
> > I need to set up a TCP service (on a linux box)
> > that will get something like a few hunderd connections
> > per minute at peak load. For each connection, I do
> > some XML processing, and possibly send a query
> > to another nearby machine and get a respone.
> >
> > Seems to me that twisted should be able to handle that.
> >
> > But what happens when I get the occasional burst
> > of connections, lets say tens of connections within
> > one second? What I need is:
> >
> > o Every client gets a socket connection promptly, so
> >  no danger of TCP timeout.
> > o Under medium load, clients will have to wait a
> >  bit longer for the response.
> > o Under heavy load, some clients will get a "busy"
> >  response (defined in the protocol I am implementing)
> >  and immediate socket close.
> >
> > What is the best way to do that in twisted? I envision
> > one of the following architectures:
> >
> > A. Just use twisted in the usual way. Watch twisted's
> > event queue for heavy load.
> >
> > B. Two processes: one to dish out connections and one
> > to queue requests and process them.
> >
> > C. Three processes: one to dish out connections, one
> > to queue requests and watch for load, and one to
> > process the requests.
> >
> > Which of these do I need to use to get the desired
> > effect under load? Or is there some better way?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From gale at sefer.org  Thu Mar  9 19:12:32 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Fri, 10 Mar 2006 02:12:32 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141939705.9187.2.camel@localhost.localdomain>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<1141939705.9187.2.camel@localhost.localdomain>
Message-ID: <2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>

On 3/9/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2006-03-09 at 23:13 +0200, Yitzchak Gale wrote:
>> When running listenTCP, how often does twisted
>> accept pending connections on the port?

> The server will... accept connections on each iteration of
> the event loop where the server socket is readable.

OK.

> If processing something when data is received takes a long time though
> this mean the event loop won't get control back and so accept()ing will
> be delayed.

Right. So in this scenario, performance under load would
depend on breaking up the higher-level processing steps
into small enough pieces.

>> And when twisted does accept pending connections,
>> does it accept ALL of them and queue them all for
>> processing, or just one at a time?

> IIRC most reactors will try to accept as many as possible,
> up to some limit in each iteration.

If I was going to do A, I would certainly want to check that
carefully. It's not like using select() or poll(). To get a
non-blocking accept(), for example, I think you need to
set some flag on the listen() call.

But right now it looks like I'll do B. It is still quite simple,
and looks more robust to me.

Thanks,
-Yitz



From donwsmith at gmail.com  Fri Mar 10 00:11:54 2006
From: donwsmith at gmail.com (Don Smith)
Date: Thu, 9 Mar 2006 21:11:54 -0800
Subject: [Twisted-Python] **kwargs with PB
Message-ID: <24f63c200603092111i7b9d94eah5ce86c6eee424a48@mail.gmail.com>

Greetings,

I'm experimenting with PB because I want to pass keyword arguments to my
remote methods, and I cannot do that with XML-RPC. But, I can't seem to do
it with PB either. I was wondering if anyone could confirm or deny that
**kwargs work with PB remote objects.

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060309/699883e0/attachment.htm 

From gale at sefer.org  Fri Mar 10 04:36:46 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Fri, 10 Mar 2006 11:36:46 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
Message-ID: <2608b8a80603100136n60db7688v6a52f12661049479@mail.gmail.com>

Alec wrote:
> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

Wait a minute, how do the OS networking layers scale
with that many open connections? Are you sure this is
a twisted problem? Maybe you would be better off with
several cheaper boxes rather than one expensive one.
(I realize that for a chat server, that rather complicates
things, but it may be worth it.)

-Yitz



From moof at metamoof.net  Fri Mar 10 06:20:10 2006
From: moof at metamoof.net (Moof)
Date: Fri, 10 Mar 2006 12:20:10 +0100
Subject: [Twisted-Python] Twisted Windows Suggestions
In-Reply-To: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
References: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
Message-ID: <bff8eeef0603100320m21d1c0b4vf741c7b4f82f2f22@mail.gmail.com>

> 1. Running tac/tap files on windows is unnatural. Sure it's easy
> enough for a developer but it's not windows system administrator
> friendly. There are many ways to solve this, and I haven't thought
> about it long enough, but step 1 would just be associating tac and tap
> files with running python.exe twistd on them.
>
> 2. Installing tac/taps as services, seamlessly, without writing your
> own service code.

This is a slightly wider issue than just Windows, but seeing as I
develop on it, and it affects me, I'm vaguely lumping it here: twistd
needs better logfile handling. It appears to be incredibly difficult
to change the standard formatter, and I'm sick and tired fo "Romance
Standard Time" appearing all over my logfiles. Also, I see no way to
do anything meaningful like running a DailyLogFile instead of just a
normal stream. Windows file semantics are not the same as unix ones,
and one cannot run logrotate scripts on windows logs if the log files
are open by the logging application.

Running things in consoles is *not* the Windows way. Hell, the Windows
console sucks on so many levels it's unbelievable, so I'm tempted to
suggest setting up a default "windows console" for twistd which would
open up on the double-click of a .tap, .tac or whatever, that can be
minimised to the systray, and would allow you to do things like  shut
down the programme or "send sighup" in the defautl menus, maybe even
do it per service inside the application. It'd be even better if it
were controllable from within the .tac file, so the application
programmer can change things like the icon and add and remove menu
items. I'm happy to aid in the development of such a "console".

This is independently of being able to install it as a service, which
would, presumably, remove the need for such a GUI. I don't
administrate much in the way of windows machines, and certainly dont'
run much int he way of windows services, so I don't know what the
"windows way" is, as opposed to "my way" of doing services.



From njp at njp.us  Fri Mar 10 09:33:33 2006
From: njp at njp.us (Norm Petterson)
Date: Fri, 10 Mar 2006 09:33:33 -0500
Subject: [Twisted-Python] Twisted Windows Suggestions
In-Reply-To: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
References: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
Message-ID: <9670a730603100633u7648c048x5e88be97cf7200c0@mail.gmail.com>

On 3/9/06, Timothy Fitz <TimothyFitz at gmail.com> wrote:
>
> Teratorn and I are stepping up to support twisted on windows


Thank you!


2. Installing tac/taps as services, seamlessly, without writing your
> own service code.



More seamlessly than via Cory Dodt's sandbox ntsvc mechanism (
http://twistedmatrix.com/trac/browser/sandbox/moonfallen/README-ntsvc.txt?rev=16221),
which I'm happily using in many places? A little work to setup, but it
doesn't involve writing any service code directly...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060310/82c31ffb/attachment.htm 

From itamar at itamarst.org  Fri Mar 10 11:47:03 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 10 Mar 2006 11:47:03 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<1141939705.9187.2.camel@localhost.localdomain>
	<2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>
Message-ID: <1142009224.9159.4.camel@localhost.localdomain>

On Fri, 2006-03-10 at 02:12 +0200, Yitzchak Gale wrote:

> > IIRC most reactors will try to accept as many as possible,
> > up to some limit in each iteration.
> 
> If I was going to do A, I would certainly want to check that
> carefully. It's not like using select() or poll(). To get a
> non-blocking accept(), for example, I think you need to
> set some flag on the listen() call.

In this context, "if I recall correctly" is referring to when glyph and
I wrote that code :) accept()s are certainly non-blocking,
 and I just checked the code and it does indeed accept up to a 100, with
some dynamic changes based on rate of connections.





From itamar at itamarst.org  Fri Mar 10 11:50:10 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 10 Mar 2006 11:50:10 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
	<2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>
Message-ID: <1142009411.9159.8.camel@localhost.localdomain>

On Fri, 2006-03-10 at 02:02 +0200, Yitzchak Gale wrote:

> But I think I'll go with B anyway. It is neater in
> that it separates performance under load
> from the architechture of the high-level processing.
> With A, we will always have to worry about
> dividing the XML stuff into small enough pieces
> to let the event loop in often enough.

You could also use a thread pool for the XML processing. This will
certainly help make the event loop stay more responsive without breaking
up work manually. However, if the heavy lifting in the code is pure
Python you won't be able to take advantage of multiple CPUs, because of
the global interpreter lock. Processes also have the benefit that you
can dispatch them to multiple machines.




From ellisonbg at gmail.com  Fri Mar 10 20:12:43 2006
From: ellisonbg at gmail.com (Brian Granger)
Date: Fri, 10 Mar 2006 17:12:43 -0800
Subject: [Twisted-Python] waitForDeferred Question
Message-ID: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>

Hi,

I have a function that returns a Deferred.  I need to have the result
of this Deferred returned in a (apparently) blocking/synchronous
manner:

def myfuncBlocking():
  d = myfuncReturnsDeferred()
  ...
  result =

  return result

I need to be able to call this function like:

result = myfuncBlocking()

The question is how to get the result out of the Deferred() and make
it *look* like myfuncBlocking() has blocked.  I have looked over the
waitForDeferred() docstrings and code, but it is still not obvious how
to use waitForDeferred() to accomplish this.  The blockOn() capability
of the gthreadless.py module (in the sandbox) seems to accomplish what
I want, but I would like to use things that are in the main twisted
trunk.  What is the best way to go about this?

Thanks

Brian

--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From glyph at divmod.com  Fri Mar 10 21:21:04 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 10 Mar 2006 21:21:04 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
Message-ID: <20060311022104.6122.2069055987.divmod.quotient.14752@ohm>

On Fri, 10 Mar 2006 17:12:43 -0800, Brian Granger <ellisonbg at gmail.com> wrote:

>What is the best way to go about this?

"The only way to win is not to play the game."

This issue has been discussed repeatedly - long story short, it's just a bad idea.  Since you didn't explain your exact problem, I have to assume that there's a way to do the higher-level thing that you want without presenting a blocking interface.

If you don't mind some vitriol, there is more information here, on my blog: http://glyf.livejournal.com/40037.html



From grimmtooth at gmail.com  Fri Mar 10 23:36:04 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 10 Mar 2006 23:36:04 -0500
Subject: [Twisted-Python] FTP: A little help?
Message-ID: <8f4623fb0603102036j6357b5d7xe9746babbe1aef71@mail.gmail.com>

For no good reason, I've been trying to implement a basic FTP server w/
Twisted 2.2. After a few puzzling exceptions, some custom code, TOSSING the
custom code, and more quality time with the source, I've come to the
conclusion that I need a nudge in the right direction.

Initially, it looks like it should be pretty straightforward (as much as it
ever gets in Twisted anyway :), but it's not working. Here's the code:

===============

from twisted.protocols.ftp  import FTPFactory
from twisted.protocols.ftp  import FTPRealm
from twisted.cred.portal    import Portal

print "Starting FTP server"

p = Portal(FTPRealm('./'))   # start up in local dir for giggles
f = FTPFactory(p)

from twisted.internet import reactor
reactor.listenTCP(21, f)
reactor.run()
print "FTP Server terminated."

===============

Simple. This raises no exceptions, and appears to be working until I
actually log in.

===============

ftp> open localhost
Connected to elric.
220 Twisted 2.2.0 FTP Server
User (elric:(none)): anonymous
331 Guest login ok, type your email address as password.
Password:
530 Sorry, Authentication failed.
Login failed.

===============

The shell it's running from shows no errors or exceptions. So why did my
anonymous login fail?

(I'll wait until I solve that before I tackle the issue of actual "real"
users)


--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060310/859e6e50/attachment.htm 

From bgranger at scu.edu  Fri Mar 10 23:44:26 2006
From: bgranger at scu.edu (Brian Granger)
Date: Fri, 10 Mar 2006 20:44:26 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
Message-ID: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>

I probably should have given more details about what I am trying to
do.  Before I get going, I should mention that I have been using
Twisted heavily for 1.5 years and I have, for the most part, learned
to play the "Twisted Game."

So here is what I am working on:

I am developing objects (for scientific computing) that 1) use Twisted
to talk over the network and 2) need to be used interactively from a
python prompt.  This second point is really where the difficult and
interesting things are.

To allow Twisted-things to be used interactively I have built a
version of PyCrust/PyShell that is "Twisted enabled."  We have used
the standard threadedselectreactor to interleave the Twisted event
loop with that of PyShell.  We also inject the reactor into the users
interactive namespace.  Thus, you can use all of Twisted's
capabilities from an interactive python prompt.

As a side note, this situation is extremely nice for playing around
with Twisted and doing interactive debugging of Twisted-using
applications.

Here is a typical (madeup) usage case:

>>> a = TwistedEnabledObject()
>>> a.connect(addr)                # This uses reactor.connectTCP to
connect to a server
>>> myresult = a.computeSomethingUsingTwisted(args)     # This should block!!!
...and maybe...
>>> y = f(myresult)
>>> plot(y)

The key point is that the user will want to direclty use myresult
interactively.  Also they won't know ahead of time what actions they
will want to do.  Anyone who has used Matlab or Mathematica
(scientists) will find this way of working extremely familiar.  There
is simply no way that users will want to get a Deferred() and add
callbacks to trigger actions.  Thus I would argue that I DO want to
make my properly written asynchronous code blocking.

The implementation of computeSomethingUsingTwisted() is the difficult part:

class TwistedEnabledObject():

  def connect(addr):
    self.factory = MyClientFactory()
    self.connector = reactor.connectTCP(addr[0],addr[1],self.factory)

  def computeSomethingUsingTwisted(args):
    d = self.connector.transport.protocol.computeAndReturnDeferred(args)
    # Now I have a Deferred that will have the result, but I want to wait until
    # the result or an error is ready and then decide what the result should be
    result = # what to put here?
    return result

I don't think what I am doing goes against the "Twisted-way."  And my
needs are not coming from any inability on my part to write proper
asynchronous code.  The high level stuff here is really bbeing driven
by the need to use these object interactively.

On 3/10/06, glyph at divmod.com <glyph at divmod.com> wrote:

> If you don't mind some vitriol, there is more information here, on my blog: http://glyf.livejournal.com/40037.html

I am familiar with this and other similar "vitriols."  I fully agree
with most of what you say about threads.  But what does my usage case
have to do with threads?

cheers,

Brian

Brian Granger
Santa Clara University
ellisonbg at gmail.com



From screwtape at froup.com  Sat Mar 11 00:46:43 2006
From: screwtape at froup.com (Tim Allen)
Date: Sat, 11 Mar 2006 16:46:43 +1100
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
Message-ID: <08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>

On 11 Mar 2006, at 15:44, Brian Granger wrote:

> Here is a typical (madeup) usage case:
>
>>>> a = TwistedEnabledObject()
>>>> a.connect(addr)                # This uses reactor.connectTCP to
> connect to a server
>>>> myresult = a.computeSomethingUsingTwisted(args)     # This  
>>>> should block!!!
> ...and maybe...
>>>> y = f(myresult)
>>>> plot(y)
>
> The key point is that the user will want to direclty use myresult
> interactively.  Also they won't know ahead of time what actions they
> will want to do.  Anyone who has used Matlab or Mathematica
> (scientists) will find this way of working extremely familiar.  There
> is simply no way that users will want to get a Deferred() and add
> callbacks to trigger actions.  Thus I would argue that I DO want to
> make my properly written asynchronous code blocking.

It sounds like this is a user-interface problem rather than a  
software-design problem. A common tool for solving such problems is  
to ask, "What does other, similar software do?".

It occurs to me that the problem you're facing is not unlike, oh, job- 
control in bash or zsh. I'd imagine a usage case that looks something  
like this:

 >>> a = TwistedEnabledObject()
 >>> a.connect(addr)
[1] TwistedEnabledObject.connect(self, addr)
[1] done TwistedEnabledObject.connect(self, addr)
 >>> result1 = a.computeSomethingUsingTwisted(args)
[1] TwistedEnabledObject.computeSomethingUsingTwisted(args)
 >>> result2 = a.computeSomeOtherThingUsingTwisted(args)
[2] TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
 >>> print 1+3
4
 >>> jobs()
[1] running TwistedEnabledObject.computeSomethingUsingTwisted(args)
[2] running TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
 >>> print repr(result1)
<deferredResult (waiting for result)>
[1] done TwistedEnabledObject.computeSomethingUsingTwisted(args)
 >>> print repr(result1)
<deferredResult with value: 42>
 >>> print result.value
42

I think I'd appreciate an environment like that more than an  
environment that made me wait for things all the time. I don't know  
if it's possible to achieve with your PyCrust/Twisted hybrid, of course.



From bgranger at scu.edu  Sat Mar 11 01:13:05 2006
From: bgranger at scu.edu (Brian Granger)
Date: Fri, 10 Mar 2006 22:13:05 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
Message-ID: <fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>

On 3/10/06, Tim Allen <screwtape at froup.com> wrote:
> On 11 Mar 2006, at 15:44, Brian Granger wrote:
>
> > Here is a typical (madeup) usage case:
> >
> >>>> a = TwistedEnabledObject()
> >>>> a.connect(addr)                # This uses reactor.connectTCP to
> > connect to a server
> >>>> myresult = a.computeSomethingUsingTwisted(args)     # This
> >>>> should block!!!
> > ...and maybe...
> >>>> y = f(myresult)
> >>>> plot(y)
> >
> > The key point is that the user will want to direclty use myresult
> > interactively.  Also they won't know ahead of time what actions they
> > will want to do.  Anyone who has used Matlab or Mathematica
> > (scientists) will find this way of working extremely familiar.  There
> > is simply no way that users will want to get a Deferred() and add
> > callbacks to trigger actions.  Thus I would argue that I DO want to
> > make my properly written asynchronous code blocking.
>
> It sounds like this is a user-interface problem rather than a
> software-design problem. A common tool for solving such problems is
> to ask, "What does other, similar software do?".
>
> It occurs to me that the problem you're facing is not unlike, oh, job-
> control in bash or zsh. I'd imagine a usage case that looks something
> like this:
>

I agree that it is a user interface question.  Other software along
these lines, like Mathematica and Matlab are fully blocking. 
Personally, I think this is too restrictive.  For the cases you bring
up, where the computeSomethingUsingTwisted() method could take a long
time it completely makes sense to have something like a job control
interface.  In fact, we are building this design pattern into our UI
where appropriate.

But, in many cases, the computeSomethingUsingTwisted() doesn't take
long at all.  An example of this would be probing the status of the
remote server or a trivial computation that a server has relevant data
for.  In these cases, the result is available nearly instantly (faster
then the user could detect, like 1 ms) and it is silly to have a job
interface.  You simply want the result directly.

In our system, we can easily imagine a user making dozens of
interactive calls like this over short periods of time.  When all of
these results are available essentially immediately, it iseems like
overkill to have a more complicated UI.  But, it is very appropriate
to use Twisted underneath, because it really is an asynchronous system
and all the error detection and handling is best dealt with that
asynchronously.  But as long as there are no errors, I woult like the
Twisted machinery to just pass along the result directly.


>  >>> a = TwistedEnabledObject()
>  >>> a.connect(addr)
> [1] TwistedEnabledObject.connect(self, addr)
> [1] done TwistedEnabledObject.connect(self, addr)
>  >>> result1 = a.computeSomethingUsingTwisted(args)
> [1] TwistedEnabledObject.computeSomethingUsingTwisted(args)
>  >>> result2 = a.computeSomeOtherThingUsingTwisted(args)
> [2] TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
>  >>> print 1+3
> 4
>  >>> jobs()
> [1] running TwistedEnabledObject.computeSomethingUsingTwisted(args)
> [2] running TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
>  >>> print repr(result1)
> <deferredResult (waiting for result)>
> [1] done TwistedEnabledObject.computeSomethingUsingTwisted(args)
>  >>> print repr(result1)
> <deferredResult with value: 42>
>  >>> print result.value
> 42
>
> I think I'd appreciate an environment like that more than an
> environment that made me wait for things all the time. I don't know
> if it's possible to achieve with your PyCrust/Twisted hybrid, of course.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From mike at mkp.ca  Sat Mar 11 01:24:59 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Sat, 11 Mar 2006 01:24:59 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
Message-ID: <86fylpebwk.wl%mike@mkp.ca>

At Fri, 10 Mar 2006 22:13:05 -0800,
Brian Granger wrote:
> 
> In our system, we can easily imagine a user making dozens of
> interactive calls like this over short periods of time.  When all of
> these results are available essentially immediately, it iseems like
> overkill to have a more complicated UI.  But, it is very appropriate
> to use Twisted underneath, because it really is an asynchronous system
> and all the error detection and handling is best dealt with that
> asynchronously.  But as long as there are no errors, I woult like the
> Twisted machinery to just pass along the result directly.

It sounds like you need to teach your interpreter to deal with
deferreds.  I'd do something very vaugely like this:

def eval_loop(result):
  print result
  expression = raw_input(">>> ")
  d = maybeDeferred(eval(expression))
  d.addCallback(lambda r:reactor.callLater(eval_loop, r))

reactor.callWhenRunning(eval_loop, "Welcome to StupidPython")
reactor.run()

Obviously this is not the correct way to implement an interpreter and
I don't know whether I've remembered all the names and signatures
correctly, but hopefully it conveys the idea.

Mike.



From corydodt at twistedmatrix.com  Sat Mar 11 01:57:36 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Fri, 10 Mar 2006 22:57:36 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
Message-ID: <441274E0.2040906@twistedmatrix.com>

Brian Granger wrote:
> But, in many cases, the computeSomethingUsingTwisted() doesn't take
> long at all.  An example of this would be probing the status of the
> remote server or a trivial computation that a server has relevant data
> for.  In these cases, the result is available nearly instantly (faster
> then the user could detect, like 1 ms) and it is silly to have a job
> interface.  You simply want the result directly.

Another approach: wait 10ms every time you push out a prompt.  The
problem is you're trying to generate the prompt in a synchronous manner
in an asynchronous environment.  10ms is well below the threshhold that
users will notice.  You'll still want job control for long calculations,
but you can present it in a more natural way.. if it's not available at
the first prompt, it's a background job.

C




From bgranger at scu.edu  Sat Mar 11 02:08:09 2006
From: bgranger at scu.edu (Brian Granger)
Date: Fri, 10 Mar 2006 23:08:09 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <441274E0.2040906@twistedmatrix.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
	<441274E0.2040906@twistedmatrix.com>
Message-ID: <fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>

On 3/10/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> Brian Granger wrote:
> > But, in many cases, the computeSomethingUsingTwisted() doesn't take
> > long at all.  An example of this would be probing the status of the
> > remote server or a trivial computation that a server has relevant data
> > for.  In these cases, the result is available nearly instantly (faster
> > then the user could detect, like 1 ms) and it is silly to have a job
> > interface.  You simply want the result directly.
>
> Another approach: wait 10ms every time you push out a prompt.  The
> problem is you're trying to generate the prompt in a synchronous manner
> in an asynchronous environment.  10ms is well below the threshhold that
> users will notice.  You'll still want job control for long calculations,
> but you can present it in a more natural way.. if it's not available at
> the first prompt, it's a background job.
>

I am not super familiar with PyShell/PyCrust, but I think everything
(including the prompt generation) is done asynchronously.  The only
thing that could really block would be long running python code
executed in the users namespace in PyShell.  But, I do like the idea
of having immediate results return directly, but have everything else
become a background job.  But, the question still remains - how do you
convert a Deferred() to a blocking, directly returned result?




> C
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From moof at metamoof.net  Sat Mar 11 07:37:43 2006
From: moof at metamoof.net (Moof)
Date: Sat, 11 Mar 2006 04:37:43 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
	<441274E0.2040906@twistedmatrix.com>
	<fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>
Message-ID: <bff8eeef0603110437k79d55741i88951ec0f54ea9f5@mail.gmail.com>

> I am not super familiar with PyShell/PyCrust, but I think everything
> (including the prompt generation) is done asynchronously.  The only
> thing that could really block would be long running python code
> executed in the users namespace in PyShell.  But, I do like the idea
> of having immediate results return directly, but have everything else
> become a background job.  But, the question still remains - how do you
> convert a Deferred() to a blocking, directly returned result?

You could use something like
http://svn.twistedmatrix.com/cvs/sandbox/exarkun/threadwrapper.py?view=markup&rev=12804
but I really dont' reccommend it. I think redefining the way the
interpreter works is the way ahead.

One way to do it would be to think of the space between the last >>>
prompt and the current one as "flexible". How about this for an
example session:

>>> somethingThatReturnsADeferred()

this will return a deferred, so natually the first thing you do is
attach callbacks and errbacks to it to know when the deferred has
finished. You display some indication of this:

<Deferred 1 at 0x12345678. Currently: Running>
>>>

You even make a nice coloured "running" icon to put on one side, if
you want. When it stops, you change "Running" to "Completed", in the
same line. Assuming nothing has been done yet, you either raise the
exception (or, I'd prefer printing out the traceback and putting the
Failure in a special variable, called, say _f, it's more flexible) or
print out repr(d.result) before putting d.result in _ and the deferred
in, say, d. The important thing here is to print out the result in the
space between the two >>>, expanding it as necessary. Thus the screen
ends up looking like this:

>>>  somethingThatReturnsADeferred()
<Deferred 1 at 0x12345678. Currently: Completed>
Result from Deferred 1:
['this', 'is', 'a', 'result']
>>>

If someone has already executed a new command, you display *which*
deferred the result comes form and skip the _ and d assignemnt step,
maybe assiging it to another special variable.

Other enhancement would be to add currently pending deferreds to a
variable or command you can quickly use to check the status, eg:

>>> jobs
1. <Deferred 1 at 0x12345678: Running, Next callback: somefunc(result,
arg1, arg2, kw1=val1>
2. <Deferred 2 at 0x12345679: Running, Next callback: somefunc(result,
arg1, arg2, kw1=val4>
3. <Deferred 3 at 0x12345680: Running, Next callback: somefunc(result,
arg1, arg2, kw1=val3>
>>> important_deferred = jobs[1] #so that deferred will not be garbage
collected once it falls out of scope

You might also want to add a convenience function result() which takes
a deferred and does the whole putting of the result in _ and the
deferred in d.

There are plenty of ways to do it. Trying to make it look blocking is
the wrong way to go about it, IMO.

Also, I'd be quite interested to see a twisted-compatible PyCrust.
Maybe even adding the twisted log to a tab in the bottom pane of the
window. I'd be happy to lend a hand in coding such a beast, if you'd
like one.

It'd be especilly nice if it could do something manhole-compatible, so
pycrust could attach to remote twisted processes...

Moof



From p.mayers at imperial.ac.uk  Sat Mar 11 08:31:58 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Mar 2006 13:31:58 +0000
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
Message-ID: <4412D14E.4080103@imperial.ac.uk>

Brian Granger wrote:
> I probably should have given more details about what I am trying to
> do.  Before I get going, I should mention that I have been using
> Twisted heavily for 1.5 years and I have, for the most part, learned
> to play the "Twisted Game."

If that is the case, you really ought to have known the answer was "you 
don't" ;o)

> 
> So here is what I am working on:
> 
> I am developing objects (for scientific computing) that 1) use Twisted
> to talk over the network and 2) need to be used interactively from a
> python prompt.  This second point is really where the difficult and
> interesting things are.

That is not an unreasonable use-case in fact (IMHO of course).

The sad thing is that PyCrust is wxPython so by definition AWFUL. The 
many suggestions already are correct - stop the interpreter GUI for a 
certain time (say 10ms) then if the deferred calls back, restart with 
the result else return a "backgrounded" job

That said, possible someone can comment if this code is current:

http://svn.twistedmatrix.com/cvs/trunk/doc/core/examples/threadedselect/blockingdemo.py

The Manager class getDeferred method might be a start, if you can 
integrate it with the wx-style tsr.



From exarkun at divmod.com  Sat Mar 11 11:12:40 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Mar 2006 11:12:40 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <8f4623fb0603102036j6357b5d7xe9746babbe1aef71@mail.gmail.com>
Message-ID: <20060311161240.6122.677387085.divmod.quotient.14968@ohm>

On Fri, 10 Mar 2006 23:36:04 -0500, Jeff Grimmett <grimmtooth at gmail.com> wrote:
>For no good reason, I've been trying to implement a basic FTP server w/
>Twisted 2.2. After a few puzzling exceptions, some custom code, TOSSING the
>custom code, and more quality time with the source, I've come to the
>conclusion that I need a nudge in the right direction.
>
>Initially, it looks like it should be pretty straightforward (as much as it
>ever gets in Twisted anyway :), but it's not working. Here's the code:
>
>===============
>
>from twisted.protocols.ftp  import FTPFactory
>from twisted.protocols.ftp  import FTPRealm
>from twisted.cred.portal    import Portal
>
>print "Starting FTP server"
>
>p = Portal(FTPRealm('./'))   # start up in local dir for giggles

Your portal has no credentials checkers, not even one that allows anonymous access.  So, no one can log in.  Try giving it a twisted.cred.checkers.AllowAnonymousAccess() at least and see if you get any further.

Jean-Paul



From itamar at itamarst.org  Sat Mar 11 11:22:18 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 11 Mar 2006 11:22:18 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
Message-ID: <1142094138.8679.12.camel@localhost.localdomain>

On Fri, 2006-03-10 at 20:44 -0800, Brian Granger wrote:

> To allow Twisted-things to be used interactively I have built a
> version of PyCrust/PyShell that is "Twisted enabled."  We have used
> the standard threadedselectreactor to interleave the Twisted event
> loop with that of PyShell.  We also inject the reactor into the users
> interactive namespace.  Thus, you can use all of Twisted's
> capabilities from an interactive python prompt.

I think the new manhole (python interpreter over ssh/telnet) in
twisted.conch has some Deferred support you might want to look at.





From bgranger at scu.edu  Sat Mar 11 13:10:38 2006
From: bgranger at scu.edu (Brian Granger)
Date: Sat, 11 Mar 2006 10:10:38 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <bff8eeef0603110437k79d55741i88951ec0f54ea9f5@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
	<441274E0.2040906@twistedmatrix.com>
	<fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>
	<bff8eeef0603110437k79d55741i88951ec0f54ea9f5@mail.gmail.com>
Message-ID: <fa8579a40603111010m12cbd0c3l1528d815befedaab@mail.gmail.com>

On 3/11/06, Moof <moof at metamoof.net> wrote:
> > I am not super familiar with PyShell/PyCrust, but I think everything
> > (including the prompt generation) is done asynchronously.  The only
> > thing that could really block would be long running python code
> > executed in the users namespace in PyShell.  But, I do like the idea
> > of having immediate results return directly, but have everything else
> > become a background job.  But, the question still remains - how do you
> > convert a Deferred() to a blocking, directly returned result?
>
> You could use something like
> http://svn.twistedmatrix.com/cvs/sandbox/exarkun/threadwrapper.py?view=markup&rev=12804
> but I really dont' reccommend it. I think redefining the way the
> interpreter works is the way ahead.
>
> One way to do it would be to think of the space between the last >>>
> prompt and the current one as "flexible". How about this for an
> example session:
>
> >>> somethingThatReturnsADeferred()
>
> this will return a deferred, so natually the first thing you do is
> attach callbacks and errbacks to it to know when the deferred has
> finished. You display some indication of this:
>
> <Deferred 1 at 0x12345678. Currently: Running>
> >>>
>
> You even make a nice coloured "running" icon to put on one side, if
> you want. When it stops, you change "Running" to "Completed", in the
> same line. Assuming nothing has been done yet, you either raise the
> exception (or, I'd prefer printing out the traceback and putting the
> Failure in a special variable, called, say _f, it's more flexible) or
> print out repr(d.result) before putting d.result in _ and the deferred
> in, say, d. The important thing here is to print out the result in the
> space between the two >>>, expanding it as necessary. Thus the screen
> ends up looking like this:
>
> >>>  somethingThatReturnsADeferred()
> <Deferred 1 at 0x12345678. Currently: Completed>
> Result from Deferred 1:
> ['this', 'is', 'a', 'result']
> >>>
>
> If someone has already executed a new command, you display *which*
> deferred the result comes form and skip the _ and d assignemnt step,
> maybe assiging it to another special variable.
>

The problem is that the user will want to do:

>>> result = computeSomething()

OR

>>> result = 2.0*computeOneThing()*math.sin(computeAnother())

What should happen in these cases?  Ideally, the _entire_ command
should become a "job" that evaluates in a "smart" manner.  That is,
the final result shouldn't be computed until all other results are
available.  Meanwhile, the prompt should retrn to the user so they can
continue working.  But, I don't think this is possible w/o making
changes to CPython itself.  The alternative is to simply make each
command appear to block.

> Other enhancement would be to add currently pending deferreds to a
> variable or command you can quickly use to check the status, eg:
>
> >>> jobs
> 1. <Deferred 1 at 0x12345678: Running, Next callback: somefunc(result,
> arg1, arg2, kw1=val1>
> 2. <Deferred 2 at 0x12345679: Running, Next callback: somefunc(result,
> arg1, arg2, kw1=val4>
> 3. <Deferred 3 at 0x12345680: Running, Next callback: somefunc(result,
> arg1, arg2, kw1=val3>
> >>> important_deferred = jobs[1] #so that deferred will not be garbage
> collected once it falls out of scope
>
> You might also want to add a convenience function result() which takes
> a deferred and does the whole putting of the result in _ and the
> deferred in d.
>
> There are plenty of ways to do it. Trying to make it look blocking is
> the wrong way to go about it, IMO.
>

For long running commands I completely agree.  But for commands that
complete quickly (unless they fail in which case an exception should
be raised) I disagree.  For example:

>>> a = getPreComputedVariable('a')

Ib this case the onject 'a' on some server needs to be serialized and
brought back to the local machine.  There is no reason to mess with
Deferrreds in this case.

> Also, I'd be quite interested to see a twisted-compatible PyCrust.
> Maybe even adding the twisted log to a tab in the bottom pane of the
> window. I'd be happy to lend a hand in coding such a beast, if you'd
> like one.
>
> It'd be especilly nice if it could do something manhole-compatible, so
> pycrust could attach to remote twisted processes...
>
> Moof
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From bgranger at scu.edu  Sat Mar 11 13:24:37 2006
From: bgranger at scu.edu (Brian Granger)
Date: Sat, 11 Mar 2006 10:24:37 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <4412D14E.4080103@imperial.ac.uk>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<4412D14E.4080103@imperial.ac.uk>
Message-ID: <fa8579a40603111024k5b73bd8gb3c5801c8d98190f@mail.gmail.com>

On 3/11/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> Brian Granger wrote:
> > I probably should have given more details about what I am trying to
> > do.  Before I get going, I should mention that I have been using
> > Twisted heavily for 1.5 years and I have, for the most part, learned
> > to play the "Twisted Game."
>
> If that is the case, you really ought to have known the answer was "you
> don't" ;o)
>

I respectfully disagree that what I am trying to do somehow violates
the unwritten Twisted ethic.  I am not using threads and I don't have
blocking code anywhere.  When I write things like:

>>> myresult = a.computeSomethingThatUsesTwisted()

It does not really block - it only appears to block.  What I mean by
this is that is does not block execution, it only blocks the user from
starting new commands.  The full machinery of Twisted is free to
proceed while the result is pending.

I guess I think of it as a shorthand for making the callback of a
Deferred an assignment of the result to a global variable myresult. 
Everything is asynchronous.


> >
> > So here is what I am working on:
> >
> > I am developing objects (for scientific computing) that 1) use Twisted
> > to talk over the network and 2) need to be used interactively from a
> > python prompt.  This second point is really where the difficult and
> > interesting things are.
>
> That is not an unreasonable use-case in fact (IMHO of course).
>
> The sad thing is that PyCrust is wxPython so by definition AWFUL. The
> many suggestions already are correct - stop the interpreter GUI for a
> certain time (say 10ms) then if the deferred calls back, restart with
> the result else return a "backgrounded" job
>
> That said, possible someone can comment if this code is current:
>
> http://svn.twistedmatrix.com/cvs/trunk/doc/core/examples/threadedselect/blockingdemo.py
>
> The Manager class getDeferred method might be a start, if you can
> integrate it with the wx-style tsr.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From bgranger at scu.edu  Sat Mar 11 13:32:43 2006
From: bgranger at scu.edu (Brian Granger)
Date: Sat, 11 Mar 2006 10:32:43 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <1142094138.8679.12.camel@localhost.localdomain>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<1142094138.8679.12.camel@localhost.localdomain>
Message-ID: <fa8579a40603111032s7907ef78t167b75533a6745a1@mail.gmail.com>

Regardless of whether or not I should *want* to do this (get the
result of a Deferred() in a manner the *appears* synchronous) there is
a question that remains:

Can it be accomplish using waitForDeferred?  The docstring seems to
imply that it can, but it is not clear.

If so, could someone provide an working example.

Just a side note, I seem to recall Guido has even citing this type of
usage scenario as one of the motivations for improving generators.

Cheers,

Brian



From radeex at gmail.com  Sat Mar 11 13:58:06 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 11 Mar 2006 10:58:06 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603111032s7907ef78t167b75533a6745a1@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<1142094138.8679.12.camel@localhost.localdomain>
	<fa8579a40603111032s7907ef78t167b75533a6745a1@mail.gmail.com>
Message-ID: <60ed19d40603111058o11ad3c6dp3a791d5fd5d381d9@mail.gmail.com>

On 3/11/06, Brian Granger <bgranger at scu.edu> wrote:
> Regardless of whether or not I should *want* to do this (get the
> result of a Deferred() in a manner the *appears* synchronous) there is
> a question that remains:
>
> Can it be accomplish using waitForDeferred?  The docstring seems to
> imply that it can, but it is not clear.
>
> If so, could someone provide an working example.
>
> Just a side note, I seem to recall Guido has even citing this type of
> usage scenario as one of the motivations for improving generators.

waitForDeferred really can't do this for you. I hope that the
docstring is clear enough to show that it really requires special
syntax every time you want to wait for a Deferred.

As far as the improved generators in the upcoming release of Python,
they *still* would require you to have special syntax when you want to
wait for a Deferred, but it's fewer lines of code.

I think what other people have suggested, about just having your UI
handle Deferreds specially, is the way to go. Of course, >>> 3 *
fetchDeferred() will be a quite difficult thing to do. I'm not sure if
it'd be possible at all with Python itself, so you may just end up
exposing some minilanguage other than Python to your end users. You
*might* be able to do some weird hacks with trace hooks or something
to do it in Python, but I'm not certain.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From grimmtooth at gmail.com  Sat Mar 11 14:37:15 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Sat, 11 Mar 2006 14:37:15 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <20060311161240.6122.677387085.divmod.quotient.14968@ohm>
References: <8f4623fb0603102036j6357b5d7xe9746babbe1aef71@mail.gmail.com>
	<20060311161240.6122.677387085.divmod.quotient.14968@ohm>
Message-ID: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>

On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>
> Your portal has no credentials checkers, not even one that allows
> anonymous access.  So, no one can log in.  Try giving it a
> twisted.cred.checkers.AllowAnonymousAccess() at least and see if you get
> any further.
>

Bingo. That also gives me some insight at what I need to do to handle
authentication needs (from looking in t.c.checkers). Thanks!

Um, is there a place that recipies like this could be posted in general? I
know that the tm.com is now essentially a big wiki, but I'm getting lost on
it. I figure a mostly working example trumps no example at all :-)


--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060311/bd8e481d/attachment.htm 

From exarkun at divmod.com  Sat Mar 11 14:44:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Mar 2006 14:44:21 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603111010m12cbd0c3l1528d815befedaab@mail.gmail.com>
Message-ID: <20060311194421.6122.644459607.divmod.quotient.15047@ohm>

On Sat, 11 Mar 2006 10:10:38 -0800, Brian Granger <bgranger at scu.edu> wrote:
> [snip]
>
>The problem is that the user will want to do:
>
>>>> result = computeSomething()
>
>OR
>
>>>> result = 2.0*computeOneThing()*math.sin(computeAnother())
>
>What should happen in these cases?  Ideally, the _entire_ command
>should become a "job" that evaluates in a "smart" manner.  That is,
>the final result shouldn't be computed until all other results are
>available.  Meanwhile, the prompt should retrn to the user so they can
>continue working.  But, I don't think this is possible w/o making
>changes to CPython itself.  The alternative is to simply make each
>command appear to block.

The difficulty you are encountering is that you want to use a language which is very much like Python as the input for your command shell, but which is not quite Python.  If you look at it this way, it should be clear that simply evaluating the input as Python will never give you a satisfactory solution.

One approach you might take, instead, is to parse the input using the compiler module, rewrite the AST so as to account for a Deferred at every step of the evaluation of the expression, and then compile the result into bytecode and execute that.

Taking your example:

    result = 2.0 * computeOneThing() * math.sin(computeAnother())

You would want to rewrite this to:

    _d1 = defer.maybeDeferred(computeAnother)
    _d1.addCallback(lambda result: math.sin(result))
    _d2 = defer.maybeDeferred(computeOneThing)
    _d2.addCallback(lambda result: result * 2.0)
    _d3 = defer.gatherResults([_d1, _d2])
    _d3.addCallback(lambda (left, right): left * right)
    _d3.addCallback(lambda result: assign("result", result))
    _d3.addCallback(lambda ign: continueREPL())

As you can see, this is a fairly simple mechanical transformation.  In addition to the steps I've taken above, you may also want to serialize the operations, in case allowing computeOneThing() and computeAnother() to run in parallel would be surprising to your users.

Jean-Paul



From exarkun at divmod.com  Sat Mar 11 14:49:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Mar 2006 14:49:47 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>
Message-ID: <20060311194947.6122.1121837635.divmod.quotient.15049@ohm>

On Sat, 11 Mar 2006 14:37:15 -0500, Jeff Grimmett <grimmtooth at gmail.com> wrote:
>On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>
>>
>> Your portal has no credentials checkers, not even one that allows
>> anonymous access.  So, no one can log in.  Try giving it a
>> twisted.cred.checkers.AllowAnonymousAccess() at least and see if you get
>> any further.
>>
>
>Bingo. That also gives me some insight at what I need to do to handle
>authentication needs (from looking in t.c.checkers). Thanks!
>
>Um, is there a place that recipies like this could be posted in general? I
>know that the tm.com is now essentially a big wiki, but I'm getting lost on
>it. I figure a mostly working example trumps no example at all :-)

Twisted/doc/core/examples/ is probably a good place for an example FTP server.  If you submit one to the issue tracker, someone will add it to the repository.

Jean-Paul



From gale at sefer.org  Sat Mar 11 16:11:34 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Sat, 11 Mar 2006 23:11:34 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1142009224.9159.4.camel@localhost.localdomain>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<1141939705.9187.2.camel@localhost.localdomain>
	<2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>
	<1142009224.9159.4.camel@localhost.localdomain>
Message-ID: <2608b8a80603111311g48467a50reb87b438c19233eb@mail.gmail.com>

Itamar wrote:
>>> IIRC most reactors will try to accept as many as possible,
>>> up to some limit in each iteration.

I wrote:
>> ...I would certainly want to check that carefully...

> ...I just checked the code and it does indeed accept
> up to a 100, with some dynamic changes based on
> rate of connections.

Great, thanks! 100 should work for me, at current
peak load.



From grimmtooth at gmail.com  Sat Mar 11 16:30:40 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Sat, 11 Mar 2006 16:30:40 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
References: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>
	<20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
Message-ID: <8f4623fb0603111330x606ca841y81b28ef14f35aaa9@mail.gmail.com>

On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:

Twisted/doc/core/examples/ is probably a good place for an example FTP
> server.  If you submit one to the issue tracker, someone will add it to the
> repository.
>

Will do. I'll work it up to be a little more useful then post it.

--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060311/bd192f6e/attachment.htm 

From gale at sefer.org  Sat Mar 11 17:31:35 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Sun, 12 Mar 2006 00:31:35 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1142009411.9159.8.camel@localhost.localdomain>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
	<2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>
	<1142009411.9159.8.camel@localhost.localdomain>
Message-ID: <2608b8a80603111431t2c1d9bc6tebdb36d7b8000763@mail.gmail.com>

Itamar Shtull-Trauring wrote:
> Yitzchak Gale wrote:

>> But I think I'll go with B [two processes] anyway.
>> It is neater in that it separates performance under load
>> from the architechture of the high-level processing.
>> With A [simple twisted], we will always have to worry about
>> dividing the XML stuff into small enough pieces
>> to let the event loop in often enough.

> You could also use a thread pool for the XML processing. This will
> certainly help make the event loop stay more responsive without breaking
> up work manually.

I am afraid that a thread pool will not play nicely with
our current monitoring framework.

> However, if the heavy lifting in the code is pure
> Python

It probably will be.

> you won't be able to take advantage of multiple CPUs, because of
> the global interpreter lock.

OK, that is also an issue.

> Processes also have the benefit that you
> can dispatch them to multiple machines.

Good.

Thanks,
Yitz



From general at eepatents.com  Sat Mar 11 18:21:26 2006
From: general at eepatents.com (Ed Suominen)
Date: Sat, 11 Mar 2006 15:21:26 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <E1FIBNE-0004jx-02@pyramid.twistedmatrix.com>
References: <E1FIBNE-0004jx-02@pyramid.twistedmatrix.com>
Message-ID: <44135B76.5070900@eepatents.com>

On 3/11/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> Brian Granger wrote:
>>> I probably should have given more details about what I am trying to
>>> do.  Before I get going, I should mention that I have been using
>>> Twisted heavily for 1.5 years and I have, for the most part, learned
>>> to play the "Twisted Game."
>> If that is the case, you really ought to have known the answer was "you
>> don't" ;o)
>  
> I respectfully disagree that what I am trying to do somehow violates
> the unwritten Twisted ethic.  I am not using threads and I don't have
> blocking code anywhere.  When I write things like:
>  
>>> myresult = a.computeSomethingThatUsesTwisted()
>  
> It does not really block - it only appears to block.  What I mean by
> this is that is does not block execution, it only blocks the user from
> starting new commands.  The full machinery of Twisted is free to
> proceed while the result is pending.

Rather than thinking of your goal as "blocking" the user from starting a
new command when once is pending, think of it as "deferring" execution
of any new commands entered by the user. With that Twisted-compatible
mindset in place, you can design a queue for deferring your user's commands.

If no commands are pending in the queue, you simply run it right away
and return a deferred to its result, as has been discussed. If the user
starts a new command while the first is still pending, simply wrap the
execution of that new command in its own deferred and chain it to the
pending deferred. If the new command depends on the result of the
pending one, that's just fine. When the first command completes, its
result will be passed to the callback that will then run your
second-entered command.

The outcome of all will be pretty cool for your user. He can type "x =
hugeFunction(a)" and get something like "Computing 'x =
hugeFunction(a)...'" Being impatient, he can then type "y =
massiveFunction(x)" and then get "Waiting for x to compute 'y =
hugeFunction(x)...'" and so on. Instead of being forced to just sit and
wait, he can *benefit* from the async power of Twisted by being able to
stack up his computations and see the whole chain of deferred operations.

By the way, I've been down this "it must block" road myself several
times before I eventually realized that it will never work. Code that
sits around and idles while it waits for something can only exist in a
separate thread or process from the Twisted event loop.

Best regards,
Ed Suominen





From foom at fuhm.net  Sat Mar 11 23:25:37 2006
From: foom at fuhm.net (James Y Knight)
Date: Sat, 11 Mar 2006 23:25:37 -0500
Subject: [Twisted-Python] Removal of deprecated twisted.python.components
	functionality
Message-ID: <112F6F41-865D-4E72-86F1-9203F323C0A6@fuhm.net>

Everything that was previously marked as deprecated in  
twisted.python.components (and has been since Twisted 2.0) is now  
being removed.

fixClassImplements and backwardsCompatImplements are now no-ops, and  
if you have them in any of your code, you should remove them.

Unfortunately we missed deprecating a few things, so not everything  
has been able to be removed yet. The most important thing that will  
be going but has not yet is the adaptation function call with a  
"default" keyword argument, as in: "IFoo(obj, default=whatever)".  
Zope.Interface calls the second arg "alternate" instead of "default",  
which is an incompatibility. Because of this, the Interfaces  
definitions in twisted cannot be changed to be straight  
zope.interface.Interface classes yet, and must still be  
t.p.c.Interface for at least another release to allow people to fix  
programs using the old "default" argument. (it now does give a  
deprecation warning suggesting replacing it with a positional second  
argument).

Most things are gone, what's left undeprecated is:
ComponentsDeprecationWarning
registerAdapter
getAdapterFactory
Adapter
Componentized
ReprableComponentized
getRegistry

And what's still there for now, newly deprecated:
Interface
getAdapterClass
getAdapterClassWithInheritance
backwardsCompatImplements
fixClassImplements

The exception class CannotAdapt is an alias for TypeError, so you  
should use that directly, although the attribute cannot be actually  
deprecated.

James



From grimmtooth at gmail.com  Sun Mar 12 01:02:22 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Sun, 12 Mar 2006 01:02:22 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
References: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>
	<20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
Message-ID: <8f4623fb0603112202j50deca57y104a517f74bff2ce@mail.gmail.com>

On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:

Twisted/doc/core/examples/ is probably a good place for an example FTP
> server.  If you submit one to the issue tracker, someone will add it to the
> repository.
>

I'd love to, but trac seems to be having some problems. I can't enter a new
ticket without entering my email address on the account configuration page,
but there doesn't seem to be a submit button on it, so I can never add my
email address to it. Exceptions all over the place.

So....

I've attached my example. If it's not too much trouble? And feel free to
hack on my comments. Lord knows I probably misunderstood a few dozen things.

--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060312/734273ec/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ftp_server_example.py
Type: text/x-python
Size: 2079 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060312/734273ec/attachment.py 

From mary-twisted at puzzling.org  Sun Mar 12 01:33:36 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 12 Mar 2006 17:33:36 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060308223535.GA11982@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
Message-ID: <20060312063336.GC6320@sourdust.home.puzzling.org>

On Thu, Mar 09, 2006, Mary Gardiner wrote:
> On Thu, Mar 09, 2006, Jonathan Lange wrote:
> > Monday early evenings and Wednesday early evenings are both good for
> > me (Although not 13 Mar). Same time OK?
> 
> I will get back to you tomorrow on which day is better.

I can do the 15th March, but only until about 5:30: how early can we
start?

-Mary



From jml at mumak.net  Sun Mar 12 01:36:56 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 12 Mar 2006 17:36:56 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060312063336.GC6320@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
Message-ID: <d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>

On 3/12/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Thu, Mar 09, 2006, Mary Gardiner wrote:
> > On Thu, Mar 09, 2006, Jonathan Lange wrote:
> > > Monday early evenings and Wednesday early evenings are both good for
> > > me (Although not 13 Mar). Same time OK?
> >
> > I will get back to you tomorrow on which day is better.
>
> I can do the 15th March, but only until about 5:30: how early can we
> start?
>

Any time after 1pm.



From mary-twisted at puzzling.org  Sun Mar 12 01:52:56 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 12 Mar 2006 17:52:56 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
	<d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
Message-ID: <20060312065256.GE6320@sourdust.home.puzzling.org>

On Sun, Mar 12, 2006, Jonathan Lange wrote:
> Any time after 1pm.

Ok, let's start at 2pm (GMT+11) on Wednesday 15th.

http://www.timeanddate.com/worldclock/fixedtime.html?month=3&day=15&year=2006&hour=15&min=0&sec=0&p1=240
gives the times around the world. #twisted-trialdocs, see you there.

-Mary

-- 
<Acapnotic> ... whenever I hear anything in this channel that smacks my
brain three feet into kata, chances are that glyph is the one that said
it



From jml at mumak.net  Sun Mar 12 01:55:52 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 12 Mar 2006 17:55:52 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060312065256.GE6320@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
	<d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
	<20060312065256.GE6320@sourdust.home.puzzling.org>
Message-ID: <d06a5cd30603112255q522a91cbr7116a5be6d5c2d5d@mail.gmail.com>

On 3/12/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Sun, Mar 12, 2006, Jonathan Lange wrote:
> > Any time after 1pm.
>
> Ok, let's start at 2pm (GMT+11) on Wednesday 15th.
>
> http://www.timeanddate.com/worldclock/fixedtime.html?month=3&day=15&year=2006&hour=15&min=0&sec=0&p1=240
> gives the times around the world. #twisted-trialdocs, see you there.
>

I completely blundered when I looked at my calendar.
The earliest I can start is 4pm. Sorry.



From mary-twisted at puzzling.org  Sun Mar 12 01:58:08 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 12 Mar 2006 17:58:08 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603112255q522a91cbr7116a5be6d5c2d5d@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
	<d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
	<20060312065256.GE6320@sourdust.home.puzzling.org>
	<d06a5cd30603112255q522a91cbr7116a5be6d5c2d5d@mail.gmail.com>
Message-ID: <20060312065808.GF6320@sourdust.home.puzzling.org>

On Sun, Mar 12, 2006, Jonathan Lange wrote:
> > gives the times around the world. #twisted-trialdocs, see you there.
> >
> 
> I completely blundered when I looked at my calendar.
> The earliest I can start is 4pm. Sorry.

Still OK for me:

http://www.timeanddate.com/worldclock/fixedtime.html?month=3&day=16&year=2006&hour=15&min=0&sec=0&p1=240

-- 
<AccorDNGuy> You know, my academic career would've been more interesting if I'd answered my exams with porn stories.
<AccorDNGuy> "Explain AVL Trees." "Winer undid his zipper, casting a longing glance at Dvorak, who returned his smouldering gaze. There was going to be some serious pole-smoking tonight."



From exarkun at twistedmatrix.com  Sun Mar 12 15:17:30 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Mar 2006 20:17:30 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1142194650.47.145500680@twistedmatrix.com

Bug summary
______________________
Summary for 2006-02-22 through 2006-03-12
Bugs opened: 58    Bugs closed: 55  Total open bugs: 567 (+3)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +2  |Highest:  +0          |:                    +1  
|Enhancement:  +2  |High:    -10          |Conch:               -1  
|Task:         +2  |Normal:  +18          |Core:                +7  
                   |Low:      -3          |Ftp:                 -1  
                   |Lowest:   +1          |Mail:                -2  
                                          |Pb:                  -1  
                                          |Release Management:  +2  
                                          |Trial:               +2  
                                          |Web:                 -8  
                                          |Web2:                +1  
                                          |Website:             +8  
                                          |Words:               -2  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1505] Testing post-commit resolution. (opened by radix) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1505

[#1506] The URL of this ticket should be correct. (opened by radix) (CLOSED, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1506

[#1507] trial doesn't gc.collect between test methods (opened by jknight)
    defect          trial      http://twistedmatrix.com/trac/ticket/1507

[#1530] Document API documentation update process (opened by exarkun)
    task            website    http://twistedmatrix.com/trac/ticket/1530

[#1538] Trial timing reporter doesn't work (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/1538

[#1552] SMTP server doesn't support "AUTH <mechanism> <initial data>" for of authentication (opened by exarkun)
    defect          mail       http://twistedmatrix.com/trac/ticket/1552

                    ===== High =====
[#1502] call selectreactor._preenDescriptors for WSAENOTSOCK (opened by titty)
    defect                     http://twistedmatrix.com/trac/ticket/1502

[#1503] Make 'pydoc twisted.internet.reactor' do something more useful than it currently does (opened by radix) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1503

[#1504] Late delivery of MSG_CHANNEL_SUCCESS when CHANNEL_REQUEST:shell and reply required (opened by stefanomasini)
    defect          conch      http://twistedmatrix.com/trac/ticket/1504

[#1515] Web2 documentation should use lore. (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/1515

[#1540] admin/process-docs does not set version information for generated documentation (opened by exarkun) (CLOSED, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1540

[#1541] admin/process-docs does not process doc/core/index.xhtml (opened by exarkun) (CLOSED, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1541

[#1542] admin/process-docs is a giant mess (opened by exarkun)
    defect          release management http://twistedmatrix.com/trac/ticket/1542

                    ===== Normal =====
[#1508] test if twisted-bugs works (opened by jknight) (CLOSED, worksforme)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1508

[#1509] Remove deprecated functions from Trial (opened by jml) (CLOSED, fixed)
    task            trial      http://twistedmatrix.com/trac/ticket/1509

[#1510] abstract.py's writeSequence implementation accepts unicode (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1510

[#1511] remove old?components interface backwards compat (opened by jknight) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1511

[#1512] macosx & twisted - unable to find a reactor (opened by cripcrip)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1512

[#1513] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1513

[#1514] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/1514

[#1516] trac lets people assign and cc bugs to nonexistent users (opened by jknight)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1516

[#1517] /bugs/issue# should redirect to /trac/ticket/# (opened by dreid)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1517

[#1519] Incorrect version number on main page (opened by TimothyFitz) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1519

[#1520] README-sumo is missing a date (opened by TimothyFitz)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1520

[#1521] website still only has 2.1 documentation up for twisted core (opened by itamarst) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1521

[#1522] Remove woven documentation from next release of twisted.web (opened by itamarst)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1522

[#1523] trial bombs completely when a test method calls reactor.stop() (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/1523

[#1524] twisted.web2 should run faster (opened by itamarst)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1524

[#1525] Move sslverify into twisted.internet (opened by itamarst) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1525

[#1526] a bunch of tests fail/error when you don't have sufficient ssl stuff installed (opened by mwh)
    defect          core       http://twistedmatrix.com/trac/ticket/1526

[#1527] test the ticket bot (opened by exarkun) (CLOSED, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/1527

[#1528] test the ticket bot (opened by exarkun) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1528

[#1529] twisted.words oscardemo throws traceback (opened by yacc) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1529

[#1531] QtReactor Problems with Modal Dialogs (opened by mustafa)
    defect          pb         http://twistedmatrix.com/trac/ticket/1531

[#1533] Make Windows installs just use distutils (opened by TimothyFitz)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1533

[#1534] change req.args API for multipart form data (opened by andrea) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1534

[#1536] FTPClientBasic will fail on 'PORT' command (opened by saviour)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1536

[#1537] Total reactor meltdown on closed sockets (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1537

[#1539] pollreactor implements IReactorFDSet but doesn't z.i.implements() it (opened by mwh) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1539

[#1543] Request for Documentation: How to Review a Branch (opened by jml)
    defect          website    http://twistedmatrix.com/trac/ticket/1543

[#1544] docextractor's makehtml cannot handle data from maketwisteddocsys path/with/trailing/slash/ (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1544

[#1545] A bunch of Twisted docstrings contain invalid epytext markup (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1545

[#1547] Have old project pages etc. redirect to new wiki pages (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1547

[#1549] Add twisted.web2.xmlrpc docs and example code. (opened by oubiwann)
    task            web2       http://twistedmatrix.com/trac/ticket/1549

[#1550] requestReceived drops arguments after two or more '?' in the uri (opened by zectbumo)
    defect          web        http://twistedmatrix.com/trac/ticket/1550

[#1551] iocpreactor can receive data out of order (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1551

[#1553] _win32stdio.py does not implement ITransport (opened by amberite)
    defect          core       http://twistedmatrix.com/trac/ticket/1553

[#1554] waitForDeferred uses df.result not the actual final value (opened by ghazel) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1554

[#1555] website no longer features Twisted logo (opened by glyph)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1555

[#1556] API docs should have HTML title (opened by Tv)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1556

[#1557] apidocs should exclude "test" packages (opened by jknight)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1557

[#1558] docextractor should parse C{name} etc in function summary listings (opened by spiv)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1558

                    ===== Low =====
[#1518] Exit on failure (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1518

[#1532] use classImplements to have ReactorBase conditionally implement IReactorThreads (opened by mwh) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1532

[#1546] Add documentation search to site (including searching API) (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1546

                    ===== Lowest =====
[#1535] look, exarkun creates useless bugs. (opened by exarkun) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1535

[#1548] get rid of epilepsy inducing entry page (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1548

[#1559] doc/core/howto/listings/pb/pb1server.py needs reactor.run() (opened by mcmillen) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1559



Closed Bugs
______________________
                    ===== Highest =====
[#1505] Testing post-commit resolution. (opened by radix, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1505

[#1506] The URL of this ticket should be correct. (opened by radix, closed by radix, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1506

[#1495] Memory leak using minimal web server? (opened by chileverde, closed by foom, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1495

[#1453] When using "trial -u", old trial log observers are not removed (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1453

[#53  ] Explain producers & consumers (opened by radix, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/53

[#1538] Trial timing reporter doesn't work (opened by jml, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1538

                    ===== High =====
[#363 ] [PATCH]JellyToNode lacks support for boolean types in Python 2.3 (opened by aubin, closed by jerub, fixed)
    defect          pb         http://twistedmatrix.com/trac/ticket/363

[#135 ] [PATCH]Web tracebacks should be disable-able (opened by itamarst, closed by jerub, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/135

[#1429] web page left pane layout is broken (patch included) (opened by ghazel, closed by exarkun, wontfix)
    defect          conch      http://twistedmatrix.com/trac/ticket/1429

[#1127] web2 file upload and unit test problems (opened by exarkun, closed by dreid, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1127

[#1384] Document the meaning of trial's terminal output stanza (opened by warner, closed by jml, )
    task            trial      http://twistedmatrix.com/trac/ticket/1384

[#1541] admin/process-docs does not process doc/core/index.xhtml (opened by exarkun, closed by exarkun, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1541

[#1540] admin/process-docs does not set version information for generated documentation (opened by exarkun, closed by exarkun, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1540

[#165 ] [PATCH]Multiple header with same name support in http (opened by itamarst, closed by exarkun, wontfix)
    defect          web        http://twistedmatrix.com/trac/ticket/165

[#418 ] ftp doesnt work in windows (opened by hunterp, closed by exarkun, fixed)
    defect          ftp        http://twistedmatrix.com/trac/ticket/418

[#1143] Documentation: Aliases not covered in the API documentation (opened by moof, closed by exarkun, duplicate)
    defect          mail       http://twistedmatrix.com/trac/ticket/1143

[#998 ] request.setHeader should fail if data has already been sent written to the client (opened by mg, closed by jknight, wontfix)
    defect          web        http://twistedmatrix.com/trac/ticket/998

[#1303] API docs aren't being linked from developer guides (opened by spiv, closed by itamarst, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1303

[#1189] twisted.web.test.test_woven calls reactor.iterate() (opened by exarkun, closed by foom, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1189

[#1188] twisted.web.test.test_webclient calls reactor.iterate() (opened by exarkun, closed by jknight, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1188

[#1437] avoid exception in logbytecounter (opened by andrea, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1437

[#861 ] protocols.msn cockroach (opened by moea, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/861

[#1105] IMAP Client does not seem to handle unsolicited server responses (opened by cablehead, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1105

[#1307] IMAP4 Body parts fetch error (opened by therve, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1307

                    ===== Normal =====
[#1508] test if twisted-bugs works (opened by jknight, closed by jknight, worksforme)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1508

[#1513] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst, closed by itamarst, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1513

[#1519] Incorrect version number on main page (opened by TimothyFitz, closed by radix, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1519

[#343 ] reactor fd cleanup between tests (opened by warner, closed by jml, )
    enhancement     trial      http://twistedmatrix.com/trac/ticket/343

[#1527] test the ticket bot (opened by exarkun, closed by exarkun, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/1527

[#1528] test the ticket bot (opened by exarkun, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1528

[#1529] twisted.words oscardemo throws traceback (opened by yacc, closed by yacc, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1529

[#1534] change req.args API for multipart form data (opened by andrea, closed by foom, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1534

[#1521] website still only has 2.1 documentation up for twisted core (opened by itamarst, closed by exarkun, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1521

[#54  ] cBanana profile support (opened by radix, closed by exarkun, wontfix)
    enhancement     pb         http://twistedmatrix.com/trac/ticket/54

[#76  ] twisted.web.distrib should pass file-like stream, not Request-ish object (opened by itamarst, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/76

[#96  ] Make the FTP server useful. (opened by spiv, closed by exarkun, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/96

[#166 ] Chunked encoding upload support for http server (opened by itamarst, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/166

[#273 ] microdom enhancement: getElementsByAttribute (opened by st0rm, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/273

[#1525] Move sslverify into twisted.internet (opened by itamarst, closed by exarkun, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1525

[#334 ] IRC DCC cleanup (opened by teratorn, closed by teratorn, wontfix)
    enhancement     words      http://twistedmatrix.com/trac/ticket/334

[#948 ] No PDF or PS versions of new docs on the website (opened by ash, closed by itamarst, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/948

[#1554] waitForDeferred uses df.result not the actual final value (opened by ghazel, closed by ghazel, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1554

[#1539] pollreactor implements IReactorFDSet but doesn't z.i.implements() it (opened by mwh, closed by foom, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1539

[#1132] XML-RPC for web2 - propose API changes (opened by itamarst, closed by foom, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1132

[#1509] Remove deprecated functions from Trial (opened by jml, closed by jml, fixed)
    task            trial      http://twistedmatrix.com/trac/ticket/1509

[#1511] remove old?components interface backwards compat (opened by jknight, closed by foom, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1511

                    ===== Low =====
[#1532] use classImplements to have ReactorBase conditionally implement IReactorThreads (opened by mwh, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1532

[#61  ] SOAP client support (opened by itamarst, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/61

[#88  ] API docs don't show what a class implements (opened by spiv, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/88

[#143 ] Investigate speeding up twisted reactor and protocols with mem package (opened by itamarst, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/143

[#244 ] Support for bug dependencies in the issue tracker (opened by itamarst, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/244

[#1405] twisted callFromThread raises IndexError (opened by ghazel, closed by jknight, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1405

                    ===== Lowest =====
[#1535] look, exarkun creates useless bugs. (opened by exarkun, closed by PenguinOfDoom, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1535

[#1548] get rid of epilepsy inducing entry page (opened by itamarst, closed by itamarst, )
    enhancement     website    http://twistedmatrix.com/trac/ticket/1548

[#1559] doc/core/howto/listings/pb/pb1server.py needs reactor.run() (opened by mcmillen, closed by foom, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1559





From mary-twisted at puzzling.org  Mon Mar 13 06:06:50 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 13 Mar 2006 22:06:50 +1100
Subject: [Twisted-Python] A doc sprint... but first, a challenge
In-Reply-To: <20060301231033.GA27513@home.puzzling.org>
References: <20060301231033.GA27513@home.puzzling.org>
Message-ID: <20060313110650.GH7003@sourdust.home.puzzling.org>

On Thu, Mar 02, 2006, Mary Gardiner wrote:
> Therefore, a challenge. There are currently 4 reviews on
> http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList .
> When that number of reviews reachs 14 (ie, 10 more), I will schedule and
> run a doc sprint day for us. I will do 2 and I know Andrew Bennetts has
> one more in the works, so that leaves a grand total of 7 reviews for
> other people to do before I hold a sprint. That's like 0.00001 reviews
> per whine about our documentation over the lifetime of the Twisted
> project!

Ok, so Andrew's done his, I haven't done mine and... you haven't done
yours. Comments on the idea welcome ;)

-Mary

-- 
<SamB> what do interfaces do when you call them? is that even allowed?
<exarkun> welcome to the year 1973.
<exarkun> callable interfaces roam the surface of the earth
<exarkun> humanity has fled underground



From exarkun at divmod.com  Tue Mar 14 11:14:18 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Mar 2006 11:14:18 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16287 - Revert r16241;
	tests are passing.
In-Reply-To: <E1FIsnK-00023B-00@wolfwood>
Message-ID: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>

On Mon, 13 Mar 2006 12:33:30 -0700, Wilfredo Sanchez <wsanchez at wolfwood.twistedmatrix.com> wrote:
>Author: wsanchez
>Date: Mon Mar 13 12:33:27 2006
>New Revision: 16287
>
>Modified:
>   trunk/twisted/web2/dav/acl.py
>   trunk/twisted/web2/dav/element/base.py
>   trunk/twisted/web2/dav/element/rfc3744.py
>   trunk/twisted/web2/dav/http.py
>   trunk/twisted/web2/dav/idav.py
>   trunk/twisted/web2/dav/method/propfind.py
>   trunk/twisted/web2/dav/resource.py
>   trunk/twisted/web2/dav/static.py
>Log:
>Revert r16241; tests are passing.

This does not actually appear to be the case.  The quick build which ran as a result of this commit had these results:

Running 2 tests.
twisted.web2.dav.test.test_prop.PROP.test_PROPFIND ... [OK]
twisted.web2.dav.test.test_prop.PROP.test_PROPFIND ... [ERROR]

===============================================================================
[ERROR]: twisted.web2.dav.test.test_prop.PROP.test_PROPFIND

  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/http.py", line 287, in statusForFailure
    failure.raiseException()
  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/method/propfind.py", line 119, in gotXML
    properties_by_status[responsecode.OK].append(resource.readProperty(property, request))
  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/resource.py", line 129, in readProperty
    return davxml.GETContentLength(self.contentLength())
  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/element/base.py", line 107, in __init__
    assert isinstance(child, (WebDAVElement, PCDATAElement)), "Not an element: %r" % (child,)
exceptions.AssertionError: Not an element: 2717L
-------------------------------------------------------------------------------
Ran 2 tests in 0.371s

FAILED (errors=1, successes=1)

This is slightly challenging to reproduce due to the fact that "trial -u twisted.web2.dav" crashes horribly after the first run.

Jean-Paul



From exarkun at divmod.com  Tue Mar 14 11:31:19 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Mar 2006 11:31:19 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>
Message-ID: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>

On Tue, 14 Mar 2006 11:14:18 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Mon, 13 Mar 2006 12:33:30 -0700, Wilfredo Sanchez 
><wsanchez at wolfwood.twistedmatrix.com> wrote:
>> [snip]
>>Log:
>>Revert r16241; tests are passing.
>
>This does not actually appear to be the case.

Okay, after a couple hours of trying to track down the problem here, I noticed that you fixed this bug with the very next commit.  This has caused me to realize that I don't think use of branches for all development on Twisted should be optional.

Unless anyone can present a compelling case to the contrary, I think that as of now we should "officially" switch to the development procedures described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

Jean-Paul



From itamar at itamarst.org  Tue Mar 14 11:41:55 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 14 Mar 2006 11:41:55 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
References: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <1142354515.9184.9.camel@localhost.localdomain>

On Tue, 2006-03-14 at 11:31 -0500, Jean-Paul Calderone wrote:

> Unless anyone can present a compelling case to the contrary, I think
> that as of now we should "officially" switch to the development
> procedures described by
> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

We should probably use Combinator, so people have an easy time with
this.

1. Is Combinator documented? 
2. Maybe Combinator should be in Twisted trunk, if it's a hard
dependency for development?





From glyph at divmod.com  Tue Mar 14 11:47:26 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 14 Mar 2006 11:47:26 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <20060314164726.6122.2055586154.divmod.quotient.16697@ohm>

On Tue, 14 Mar 2006 11:31:19 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:

>Okay, after a couple hours of trying to track down the problem here, I 
>noticed that you fixed this bug with the very next commit.  This has caused 
>me to realize that I don't think use of branches for all development on 
>Twisted should be optional.

I assume that you meant "should *not* be optional".

>Unless anyone can present a compelling case to the contrary, I think that as 
>of now we should "officially" switch to the development procedures described 
>by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

As the resident malevolent power here, I have performed the appropriate ritual to convert our policy.  We have officially switched.  Now, anyone who checks code into trunk without a branch or a review will be cursed, yea, unto the seventh generation!

Documentation to this effect on the website or in the repository should show up within the next few days.  

There will be a few days while we make sure that everyone understands the ramifications of this new policy, but in the near future, code that is checked in without having its review documented on a ticket may be reverted immediately even if it does not cause any tests to fail.  There may be other consequences as well, such as loss of commit access.

It's also worth noting that if code fails the buildbot after review (or lacks adequate tests and thereby breaks critical existing functionality), it's the reviewer's fault, not the author's!  Therefore, it is suggested that you make heavy use of buildbot's "build this branch" feature before OKing a merge.



From twisted at ralphm.ik.nu  Tue Mar 14 11:49:48 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 14 Mar 2006 17:49:48 +0100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
References: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>
	<20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <20060314164947.GA80304@ik.nu>

> [..]
>
> Unless anyone can present a compelling case to the contrary, I think that 
> as of now we should "officially" switch to the development procedures 
> described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

I've been trying this out. Not sure how the review process works from
the moment you add the 'review' keyword, though.

-- 
Groetjes,

ralphm



From glyph at divmod.com  Tue Mar 14 11:53:47 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 14 Mar 2006 11:53:47 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <1142354515.9184.9.camel@localhost.localdomain>
Message-ID: <20060314165347.6122.1467955561.divmod.quotient.16700@ohm>

On Tue, 14 Mar 2006 11:41:55 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2006-03-14 at 11:31 -0500, Jean-Paul Calderone wrote:
>
>> Unless anyone can present a compelling case to the contrary, I think
>> that as of now we should "officially" switch to the development
>> procedures described by
>> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.
>
>We should probably use Combinator, so people have an easy time with
>this.

True enough.

>1. Is Combinator documented?

Not the best doc in the world (I think it actually describes the configuration that non-Divmod Twisted devs might want to use, i.e. without the rest of the Divmod code) but it gets the general idea across:

http://divmod.org/trac/wiki/CombinatorTutorial

>2. Maybe Combinator should be in Twisted trunk, if it's a hard
>dependency for development?

There used to be problems with putting Combinator into the same sys.path entry as code it's managing - I'm not sure if they're all fixed.  It might work, but one of the reasons I'd held off making this pronouncement so long is that it would be handy to reorganize Twisted trunk first.

If someone wants to make a branch to move Combinator into Twisted though, I will review it :).



From glyph at divmod.com  Tue Mar 14 12:03:00 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 14 Mar 2006 12:03:00 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314164947.GA80304@ik.nu>
Message-ID: <20060314170300.6122.1278995348.divmod.quotient.16705@ohm>



On Tue, 14 Mar 2006 17:49:48 +0100, Ralph Meijer <twisted at ralphm.ik.nu> wrote:
>> [..]
>>
>> Unless anyone can present a compelling case to the contrary, I think that
>> as of now we should "officially" switch to the development procedures
>> described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.
>
>I've been trying this out. Not sure how the review process works from
>the moment you add the 'review' keyword, though.

1. Yell on IRC for a reviewer.  If someone responds, assign it to them.  If nobody responds, assign it to someone at random.
2. Set the priority to "highest".
3. The reviewer accepts the ticket.
4. The reviewer reviews, adds a comment.  (The comment should always include at least one positive and one negative comment about the branch, as well as an indication of whether it should be merged.)
5. If it's mergeable, and you're a committer, the reviewer then reassigns it to you for merging (for more accurate stat tracking).  If you're not a committer, the reviewer just merges it.  If it needs work, it's reassigned to you regardless.
6. Repeat as desired.

If you can't get past step 3, feel free to keep reassigning until you find someone who is responsive enough to accept / review it.  This does also assume that people will check their "my tickets" page on a regular basis, but that's just a good habit.



From mithrandi-twisted-python at mithrandi.za.net  Tue Mar 14 13:13:56 2006
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Tue, 14 Mar 2006 20:13:56 +0200
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
References: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
	<20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
Message-ID: <20060314181356.GC15940@mithrandi.za.net>

* glyph at divmod.com <glyph at divmod.com> [2006-03-14 11:47:26 -0500]:

> >caused me to realize that I don't think use of branches for all 
                               ^^^^^
> >development on Twisted should be optional.
> 
> I assume that you meant "should *not* be optional".

Probably not.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060314/5614d43c/attachment.pgp 

From mary-twisted at puzzling.org  Tue Mar 14 17:13:51 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 15 Mar 2006 09:13:51 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314170300.6122.1278995348.divmod.quotient.16705@ohm>
References: <20060314164947.GA80304@ik.nu>
	<20060314170300.6122.1278995348.divmod.quotient.16705@ohm>
Message-ID: <20060314221351.GI10189@sourdust.home.puzzling.org>

On Tue, Mar 14, 2006, glyph at divmod.com wrote:
> 1. Yell on IRC for a reviewer.  If someone responds, assign it to them.  If 
> nobody responds, assign it to someone at random.

Documentation can work a similar way, except just assign it to me.

-Mary

-- 
<moshez> jml: but euphemisms for sex are common in all languages :)
<exarkun> moshez: what about lojban?
<jml> exarkun: there's no record of any lojban speakers having sex. :)



From slamb at slamb.org  Tue Mar 14 19:02:46 2006
From: slamb at slamb.org (Scott Lamb)
Date: Tue, 14 Mar 2006 16:02:46 -0800
Subject: [Twisted-Python] Broken mailing list link on wiki
Message-ID: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>

Hey, the wiki page at <http://twistedmatrix.com/trac/wiki/ 
TwistedProject> links to <http://twistedmatrix.com/cgi-bin/mailman/ 
twisted-python>, which doesn't work. Looks like it should be <http:// 
twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>, as  
featured in the List-Subscribe: headers.

Is this page editable by anyone? If so, I'm blind...I don't see an  
edit link when logged into trac as my freshly-created user.

-- 
Scott Lamb <http://www.slamb.org/>





From radeex at gmail.com  Tue Mar 14 19:18:12 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 14 Mar 2006 19:18:12 -0500
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
Message-ID: <60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>

Fixed, thanks. For future reference: none of the pages that have download
links on them are editable by regular users.

On 3/14/06, Scott Lamb <slamb at slamb.org> wrote:
>
> Hey, the wiki page at <http://twistedmatrix.com/trac/wiki/
> TwistedProject> links to <http://twistedmatrix.com/cgi-bin/mailman/
> twisted-python>, which doesn't work. Looks like it should be <http://
> twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>, as
> featured in the List-Subscribe: headers.
>
> Is this page editable by anyone? If so, I'm blind...I don't see an
> edit link when logged into trac as my freshly-created user.
>
> --
> Scott Lamb <http://www.slamb.org/>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060314/7a6207b5/attachment.htm 

From mary-twisted at puzzling.org  Tue Mar 14 19:24:38 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 15 Mar 2006 11:24:38 +1100
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
	<60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>
Message-ID: <20060315002438.GP10189@sourdust.home.puzzling.org>

On Tue, Mar 14, 2006, Christopher Armstrong wrote:
> Fixed, thanks. For future reference: none of the pages that have download
> links on them are editable by regular users.

How are we encouraging reports of problems on those pages? Bug reports?

-Mary



From radeex at gmail.com  Tue Mar 14 19:30:13 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 14 Mar 2006 19:30:13 -0500
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <20060315002438.GP10189@sourdust.home.puzzling.org>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
	<60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>
	<20060315002438.GP10189@sourdust.home.puzzling.org>
Message-ID: <60ed19d40603141630v4ba98949te6150b2f869ebe8f@mail.gmail.com>

On 3/14/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
>
> On Tue, Mar 14, 2006, Christopher Armstrong wrote:
> > Fixed, thanks. For future reference: none of the pages that have
> download
> > links on them are editable by regular users.
>
> How are we encouraging reports of problems on those pages? Bug reports?


Yep, definitely bug reports.


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060314/c9089138/attachment.htm 

From mary-twisted at puzzling.org  Wed Mar 15 00:14:39 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 15 Mar 2006 16:14:39 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <20060315051439.GV10189@sourdust.home.puzzling.org>

On Thu, Mar 02, 2006, Jonathan Lange wrote:
> Hello,
> 
> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

This discussion on NOW...

-Mary



From abs621 at yahoo.com  Wed Mar 15 11:36:17 2006
From: abs621 at yahoo.com (A S)
Date: Wed, 15 Mar 2006 08:36:17 -0800 (PST)
Subject: [Twisted-Python] Writing Servers
Message-ID: <20060315163617.50649.qmail@web51607.mail.yahoo.com>

Hi,

It is said all over the documentation

That when connection is accepted the new *instance* of
a protocol is created. However as it is single
threaded, can use the same instance?


For example (In case of UDP):

port = x;

#some proto subclass of AbstractDatagramProtocol
#this protocol does not does nt delegate request to
threads. I assume request is served quickly

proto = Proto() 

for if in ("eth0", "eth1")
    addr = getAddr(if)
    reactor.listenUDP(port, proto, interface = addr,)

I want to have same protocol *instance running* for
diff interface on same port. As this protocol does not
store any state.

Also instead of creating one when connection comes and
descard is when connection is broken. Use a single
one.

however, internet/protocol.py does not allow it?

def makeConnection(self, transport):
        assert self.transport == None
        self.transport = transport
        self.doStart()


Can not i use the same instance of the protocol for
each connection instead of getting new instance every
time. As it is single threaded and it must return
before next connection in q is served?

I am once the datagramReceived is call, it must return
before any other request is served. (i am not using
any deferrer)

Q1) Am i missing some concept?

Q2) What if the request is delegated to deferrer or
threads, can we still use the same instance of
protocol class?

Q3) What are the ways to create deferrer itself
There is little about it, reactor callfromthread or
callinthread? Any good doc?


Regards,
Abbey



__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From mwh at python.net  Wed Mar 15 12:54:14 2006
From: mwh at python.net (Michael Hudson)
Date: Wed, 15 Mar 2006 17:54:14 +0000
Subject: [Twisted-Python] Re: Twisted Website
References: <2m8xrr6emo.fsf@starship.python.net>
	<20060303140837.6122.1892915094.divmod.quotient.12718@ohm>
Message-ID: <2mhd5z4mrd.fsf@starship.python.net>

Jean-Paul Calderone <exarkun at divmod.com> writes:

> n Fri, 03 Mar 2006 09:50:39 +0000, Michael Hudson <mwh at python.net> wrote:
>>Jean-Paul Calderone <exarkun at divmod.com> writes:
>>
>>>   * Epydoc has been replaced by docextractor (to be renamed).
>>
>>Huh?  I admit I put about two seconds of thought so far into the
>>project name, but I still think I get to name my own projects :)
>
> Ahh, I' blame radix.  I think he said something about you trying to
> come up with a different name.

And indeed this has come to pass: the project is now called 'pydoctor'.

Cheers,
mwh

-- 
  incidentally, asking why things are "left out of the language" is
  a good sign that the asker is fairly clueless.
                                        -- Erik Naggum, comp.lang.lisp




From itamar at itamarst.org  Wed Mar 15 13:07:54 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 15 Mar 2006 13:07:54 -0500
Subject: [Twisted-Python] Writing Servers
In-Reply-To: <20060315163617.50649.qmail@web51607.mail.yahoo.com>
References: <20060315163617.50649.qmail@web51607.mail.yahoo.com>
Message-ID: <1142446074.9117.20.camel@localhost.localdomain>

On Wed, 2006-03-15 at 08:36 -0800, A S wrote:

> That when connection is accepted the new *instance* of
> a protocol is created. However as it is single
> threaded, can use the same instance?

In theory, yes, in practice the way the APIs work make this harder.

> For example (In case of UDP):

UDP doesn't have a factory, or for that matter connections; it's one
protocol instance per port you listen on.

> I want to have same protocol *instance running* for
> diff interface on same port. As this protocol does not
> store any state.

Just have it forward to an object that does the actual work. You can't
have same instance because of the self.transport attribute - how would
it work with two different transports?

> Also instead of creating one when connection comes and
> descard is when connection is broken. Use a single
> one.

That is already the case for UDP.

> I am once the datagramReceived is call, it must return
> before any other request is served. (i am not using
> any deferrer)
> 
> Q1) Am i missing some concept?

Nope.

> Q2) What if the request is delegated to deferrer or
> threads, can we still use the same instance of
> protocol class?

Yes.

> Q3) What are the ways to create deferrer itself
> There is little about it, reactor callfromthread or
> callinthread? Any good doc?

Deferreds don't magically make things not block the event loop, and they
almost never need threads. For example,
twisted.web.client.getPage("http://google.com") returns a Deferred but
doesn't use threads. A deferred is just a promise that some code,
responding to some future event (callLater, datagramReceived, a thread,
etc.) will give you a result.




From ralf at brainbot.com  Thu Mar 16 08:16:01 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Thu, 16 Mar 2006 14:16:01 +0100
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <60ed19d40603141630v4ba98949te6150b2f869ebe8f@mail.gmail.com>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>	<60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>	<20060315002438.GP10189@sourdust.home.puzzling.org>
	<60ed19d40603141630v4ba98949te6150b2f869ebe8f@mail.gmail.com>
Message-ID: <44196511.8070609@brainbot.com>

Christopher Armstrong schrieb:
> On 3/14/06, *Mary Gardiner* <mary-twisted at puzzling.org 
> <mailto:mary-twisted at puzzling.org>> wrote:
>
>     On Tue, Mar 14, 2006, Christopher Armstrong wrote:
>     > Fixed, thanks. For future reference: none of the pages that have
>     download
>     > links on them are editable by regular users.
>
>     How are we encouraging reports of problems on those pages? Bug
>     reports? 
>
>
> Yep, definitely bug reports.
>
plus unit tests :)

sorry, couldn't resist.

- Ralf





From blakeyrat at gmail.com  Sat Mar 18 18:13:50 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sat, 18 Mar 2006 15:13:50 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
Message-ID: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>

I'm new to both Twisted and Python, so excuse this question if it's a
stupid one.

I'm trying to create a telnet server for a MUD, and the twisted
classes look to be the easiest way to accomplish this.  I've found an
example on an archived post on this mailing list which used:

from twisted.protocols.telnet import *

When I run that example, I get the message that
twisted.protocols.telnet is deprecated and I should instead be using
twisted.conch.telnet.  So I made the switch, and then got the error
that conch wasn't found.  After digging around for a couple hours,
I've found out the following:

1) "conch" isn't part of the core install of Twisted, so I had to run
the installer again to get it.  In addition, it hasn't reached 1.0 yet
and is marked as "unstable."

2) "conch" has barely any documentation in the API reference:
http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

Is there something I'm missing here, or is Twisted telling me that I
should be using an unstable <1.0 library with no documentation that's
not even part of the core install instead of a 2.2 version library
with good documentation that *is* part of the core install?  Is this
deprecated warning in the wrong spot?  I don't get it.

Thanks for your help.



From exarkun at twistedmatrix.com  Sun Mar 19 01:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Mar 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1142748302.67.1081690624@twistedmatrix.com

Bug summary
______________________
Summary for 2006-03-12 through 2006-03-19
Bugs opened: 31    Bugs closed: 16  Total open bugs: 583 (+15)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +6  |Highest:  +5          |Conch:    +2           
|Enhancement: +10  |High:     -3          |Core:     +9           
|Task:         +2  |Normal:  +14          |Ftp:      +5           
                   |Low:      +2          |Names:    +0           
                                          |Trial:    +2           
                                          |Web2:     +6           
                                          |Website:  -5           
                                          |Words:    -1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1561] Qt reactor fails two TCP tests (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1561

[#1562] Permission denied errors on Win32 (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1562

[#1566] Allow tickets to be submitted if user enters an email address in the "Your email or username" field (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1566

[#1572] twistd starts services synchronously: it should  start them using the startup system event. (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1572

[#1581] Bug in Twisted Names (opened by wdy) (CLOSED, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1581

[#1583] twisted.names has crummy trailing whitespace (opened by exarkun) (CLOSED, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1583

                    ===== High =====
[#1560] Death to util.wait() (opened by jml)
    task            core       http://twistedmatrix.com/trac/ticket/1560

[#1564] Failure.getErrorMessage() uses safe_str (opened by moof) (CLOSED, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1564

[#1571] Typo in python/dispatch.py (opened by loic) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1571

[#1573] trial does not wait for the reactor to stop completely between tests/test methods/test suites/test runs/I don't know what (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/1573

[#1574] wxreactor completely broken if there are any startup triggers. (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/1574

                    ===== Normal =====
[#1563] trial --testmodule should be usable without causing test methods to run repeatedly (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1563

[#1565] VT102Writer.__str__ method in manhole.py does not check for special case (opened by htj)
    defect          core       http://twistedmatrix.com/trac/ticket/1565

[#1567] Use svnsync in a commit hook to update trac's repository on pyramid (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/1567

[#1568] Avoid redirects for broken DAV clients (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1568

[#1569] IRequest should have a uri object for accessing and mangling the requested uri (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1569

[#1570] static.File shouldn't allow excessive /s. (opened by jknight)
    defect          web2       http://twistedmatrix.com/trac/ticket/1570

[#1575] twisted.protocols.ftp.FTP.ftp_STOR() does not handle anonymous requests gracefully (opened by grimmtooth)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1575

[#1576] web2.dirlist.DirectoryLister should support unicode filenames (opened by htj)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1576

[#1577] Add MOVE tests (opened by wsanchez) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1577

[#1578] setsockopt fails on joinAddr (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1578

[#1579] FTP server example for twisted/doc/core/examples (opened by grimmtooth)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1579

[#1582] move web2.dav.method.* to web2.dav.method.davfile.* (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1582

[#1584] ftp.FTPAnonymousShell.access() handles non-existant file paths in a confusing way (opened by grimmtooth)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1584

[#1585] FTPClient should allow you to try logging in more than once (e.g. for implementing an interactive client) (opened by spiv)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1585

[#1587] web2 DirectoryLister is too inefficient! (opened by exarkun)
    defect          web2       http://twistedmatrix.com/trac/ticket/1587

[#1588] verifyHostKey fails if ~/.ssh/known_hosts missing or it's empty (opened by jaze)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1588

[#1589] cftp.py fails to transfer files (opened by jaze)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1589

                    ===== Low =====
[#1580] Reloading twisted.web2.http raises an exception (opened by edsuom)
    defect          web2       http://twistedmatrix.com/trac/ticket/1580

[#1586] FTP needs stream loving (opened by htj)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1586

[#1590] Wrong wiki link (opened by osuchw) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1590



Closed Bugs
______________________
                    ===== Highest =====
[#1581] Bug in Twisted Names (opened by wdy, closed by exarkun, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1581

[#1583] twisted.names has crummy trailing whitespace (opened by exarkun, closed by exarkun, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1583

                    ===== High =====
[#1564] Failure.getErrorMessage() uses safe_str (opened by moof, closed by moof, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1564

[#1571] Typo in python/dispatch.py (opened by loic, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1571

[#965 ] No general download page (and link) on website (opened by ash, closed by itamarst, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/965

[#965 ] No general download page (and link) on website (opened by ash, closed by itamarst, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/965

[#1137] Web site menu disappears when window not big (opened by justinj, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/1137

[#936 ] minor website rendering problem (opened by teratorn, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/936

[#1419] 404 from Main Page (opened by TimothyFitz, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/1419

[#1018] Two quirks noticed with the new WebSite (opened by mesozoic, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/1018

[#931 ] Add description of words to its project site (opened by hypatia, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/931

                    ===== Normal =====
[#1482] [PATCH] add RedirectResource (opened by andrea, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1482

[#1544] docextractor's makehtml cannot handle data from maketwisteddocsys path/with/trailing/slash/ (opened by exarkun, closed by mwh, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1544

[#1577] Add MOVE tests (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1577

                    ===== Low =====
[#1580] Reloading twisted.web2.http raises an exception (opened by edsuom, closed by jknight, )
    defect          web2       http://twistedmatrix.com/trac/ticket/1580

[#1590] Wrong wiki link (opened by osuchw, closed by radix, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1590





From radeex at gmail.com  Sun Mar 19 10:39:14 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 19 Mar 2006 10:39:14 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
Message-ID: <60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>

On 3/18/06, James Schend <blakeyrat at gmail.com> wrote:

> When I run that example, I get the message that
> twisted.protocols.telnet is deprecated and I should instead be using
> twisted.conch.telnet.


Is there something I'm missing here, or is Twisted telling me that I
> should be using an unstable <1.0 library with no documentation that's
> not even part of the core install instead of a 2.2 version library
> with good documentation that *is* part of the core install?  Is this
> deprecated warning in the wrong spot?  I don't get it.



The telnet protocol implementation was simply moved to Conch. That
particular code is no more or less stable and documented than it was in its
old location. Also, if you're downloading tarballs, you should be getting
the full Twisted tarball, not the individual core/subproject tarballs. Those
individual ones are for embedders and OS packagers, basically. (The old web
site didn't make this as clear, and the new one encourages you to download
the full Twisted package).


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060319/e1df024b/attachment.htm 

From radeex at gmail.com  Sun Mar 19 11:04:41 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 19 Mar 2006 11:04:41 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
	<60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
Message-ID: <60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>

On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
>
> On 3/18/06, James Schend <blakeyrat at gmail.com> wrote:
>
> When I run that example, I get the message that
> > twisted.protocols.telnet is deprecated and I should instead be using
> > twisted.conch.telnet.
>
>
> Is there something I'm missing here, or is Twisted telling me that I
> > should be using an unstable <1.0 library with no documentation that's
> > not even part of the core install instead of a 2.2 version library
> > with good documentation that *is* part of the core install?  Is this
> > deprecated warning in the wrong spot?  I don't get it.
>
>
>
> The telnet protocol implementation was simply moved to Conch. That
> particular code is no more or less stable and documented than it was in its
> old location. Also, if you're downloading tarballs, you should be getting
> the full Twisted tarball, not the individual core/subproject tarballs. Those
> individual ones are for embedders and OS packagers, basically. (The old web
> site didn't make this as clear, and the new one encourages you to download
> the full Twisted package).
>


I'm sorry, it appears I'm mistaken. I was thinking that the telnet protocol
implementation moved to twisted.conch in the Great Split of Two Point Oh,
but I see that this was something else. The implementation in conch is
definitely different (and probably better), but I don't think my comment
about the state of documentation and stability is any less true.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060319/741fd187/attachment.htm 

From blakeyrat at gmail.com  Sun Mar 19 13:08:47 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 10:08:47 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
	<60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
	<60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>
Message-ID: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>

I'm still not convinced.  If you look at the API reference under Conch:

http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

And the API refrerence under Protocols:

http://twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html

There's a HUGE difference in the amount of documentation available. 
Just learning this stuff for the first time, I need as much
documentation as I can get... all the examples, and all the API docs,
seem to be in twisted.protocols.telnet.  And of course I'd much rather
use something that's at version 2.2 than something that's at version
0.6.

If conch is still unstable and hasn't hit 1.0, why is the old
interface deprecated?  It seems silly to deprecate the old interface
if the new one, being unstable, might change and require being
deprecated again.  I'm sorry, I just don't understand.

(FYI, I did download the entire tarball, but I only installed the
"core" because I figured that that was all I needed.  I didn't
anticipate that "correct" telnet interface had moved because, again,
this isn't documented in the API reference, which I looked at before
installing.)

You say that Conch is better... how is it better?  Is
twisted.protocol.telnet going away in the near future?  What the heck
should I be using?  Other than the deprecated warning, I'm inclined to
use the "old" twisted.protocols.telnet interface which at least has
examples and documented functions.

Thanks again for your help.  It looks like I found your toolset in the
midst of some huge confusing rewrite or something.  :)  Just my luck.

On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
> On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
>
> >
> > On 3/18/06, James Schend <blakeyrat at gmail.com > wrote:
> >
> >
> >
> >
> > > When I run that example, I get the message that
> > > twisted.protocols.telnet is deprecated and I should instead be using
> > > twisted.conch.telnet.
> >
> >
> >
> > > Is there something I'm missing here, or is Twisted telling me that I
> > > should be using an unstable <1.0 library with no documentation that's
> > > not even part of the core install instead of a 2.2 version library
> > > with good documentation that *is* part of the core install?  Is this
> > > deprecated warning in the wrong spot?  I don't get it.
> >
> >
> >
> >
> > The telnet protocol implementation was simply moved to Conch. That
> particular code is no more or less stable and documented than it was in its
> old location. Also, if you're downloading tarballs, you should be getting
> the full Twisted tarball, not the individual core/subproject tarballs. Those
> individual ones are for embedders and OS packagers, basically. (The old web
> site didn't make this as clear, and the new one encourages you to download
> the full Twisted package).
>
>
>
> I'm sorry, it appears I'm mistaken. I was thinking that the telnet protocol
> implementation moved to twisted.conch in the Great Split of Two Point Oh,
> but I see that this was something else. The implementation in conch is
> definitely different (and probably better), but I don't think my comment
> about the state of documentation and stability is any less true.
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>



From exarkun at divmod.com  Sun Mar 19 13:38:16 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Mar 2006 13:38:16 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
Message-ID: <20060319183816.22481.7834952.divmod.quotient.2632@ohm>

On Sun, 19 Mar 2006 10:08:47 -0800, James Schend <blakeyrat at gmail.com> wrote:
>I'm still not convinced.  If you look at the API reference under Conch:
>
>http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html
>
>And the API refrerence under Protocols:
>
>http://twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html
>
>There's a HUGE difference in the amount of documentation available.

Yes.  There seems to be much more documentation for twisted.conch.telnet.

>Just learning this stuff for the first time, I need as much
>documentation as I can get... all the examples, and all the API docs,
>seem to be in twisted.protocols.telnet.  And of course I'd much rather
>use something that's at version 2.2 than something that's at version
>0.6.

Don't attach too much significance to these numbers.  It would be great if versioning actually conveyed some information, but it hardly does.  The only thing you can reliably take away from a version number is whether or not it is larger or smaller than another version /for the same piece of software/.  This loosely correlates with whether it is newer or older than another release of that software, little else.  In particular, you cannot compare version numbers of different pieces of software meaningfully.

>If conch is still unstable and hasn't hit 1.0, why is the old
>interface deprecated?

Because the old interface is quirky and incomplete and the implementation is unmaintained (and basically unfixable without breaking backwards compatibility).

>It seems silly to deprecate the old interface
>if the new one, being unstable, might change and require being
>deprecated again.  I'm sorry, I just don't understand.

The deprecation is an indication of our future plans.  If you are more worried about the twisted.conch.telnet API changing than you are about the incompleteness and unmaintainedness of twisted.protocols.telnet, by all means, use twisted.protocols.telnet.  It's not a "warning" for nothing.

>
>(FYI, I did download the entire tarball, but I only installed the
>"core" because I figured that that was all I needed.  I didn't
>anticipate that "correct" telnet interface had moved because, again,
>this isn't documented in the API reference, which I looked at before
>installing.)
>
>You say that Conch is better... how is it better?  Is
>twisted.protocol.telnet going away in the near future?

As soon as reasonably possible.

>What the heck should I be using?

twisted.conch.telnet.

>Other than the deprecated warning, I'm inclined to use the "old" 
>twisted.protocols.telnet interface which at least has examples 
>and documented functions.

I'm confused by your repeated claims of the absense of documentation for twisted.conch.telnet.  <http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html> lists two interfaces, six exception classes, and five protocol classes.  The API documentation pages for the two interfaces alone document the eleven public methods of twisted.conch.telnet completely, and <http://twistedmatrix.com/projects/conch/documentation/examples/> gives numerous examples of both custom telnet and ssh servers.

>
>Thanks again for your help.  It looks like I found your toolset in the
>midst of some huge confusing rewrite or something.  :)  Just my luck.

Things are pretty much always like this.  The only possible hope for perfect documentation is to have a dead project.  I much prefer an active one.

Jean-Paul



From blakeyrat at gmail.com  Sun Mar 19 13:54:27 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 10:54:27 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <20060319183816.22481.7834952.divmod.quotient.2632@ohm>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
Message-ID: <7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>

http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

It lists the classes, and then right next to (almost all of) them it
says "undocumented."

How can the two interfaces document the public method completely if
they're undocumented?

Thanks for your second link, however, I hadn't found that page during
my surfing of your site.  It looks useful.

I still don't understand why you'd deprecate a stable interface in
preference to an *unstable* one.  What happens if conch changes in
some way and needs to be deprecated again?  It seems to me like it's a
"damned if you do or damned if you don't"... if you use
twisted.protocols.telnet it'll be removed and your code won't work,
but if you use twisted.conch.telnet it could be changed and your code
won't work.

I'm not nearly concerned, BTW, about the <1.0 version number as I am
about the "unstable" warning.

If twisted.conch is what people are supposed to be using, wouldn't it
make sense to put that in the core install?

Sorry for being such a griper and for hammering a dead horse with this
one.  I guess I'd just like some assurance that my project, written
using twisted.conch, will still work as the conch library gets
upgraded to 1.0 (at which point, I presume, it would become stable?)



From exarkun at divmod.com  Sun Mar 19 14:28:07 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Mar 2006 14:28:07 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
Message-ID: <20060319192807.22481.1709252408.divmod.quotient.2643@ohm>

On Sun, 19 Mar 2006 10:54:27 -0800, James Schend <blakeyrat at gmail.com> wrote:
>http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html
>
>It lists the classes, and then right next to (almost all of) them it
>says "undocumented."
>
>How can the two interfaces document the public method completely if
>they're undocumented?

Did you try clicking on any links on that page?

>
>Thanks for your second link, however, I hadn't found that page during
>my surfing of your site.  It looks useful.

It should probably be displayed somewhere more prominently on the site.  For some reason, someone has added a link to the conch howtos to the front page, which may leave readers with the incorrect impression that is all of the conch documentation.

>
>I still don't understand why you'd deprecate a stable interface in
>preference to an *unstable* one.

Because I have no interest in maintaining the stable interface since it is so narrowly useful.


>What happens if conch changes in
>some way and needs to be deprecated again?  It seems to me like it's a
>"damned if you do or damned if you don't"... if you use
>twisted.protocols.telnet it'll be removed and your code won't work,
>but if you use twisted.conch.telnet it could be changed and your code
>won't work.

That's life when you're depending on the volunteer efforts of others. :)  That said, nothing is stopping you from using twisted.protocols.telnet: if it is someday removed, you can always distribute a copy of it with your software.

>
>I'm not nearly concerned, BTW, about the <1.0 version number as I am
>about the "unstable" warning.
>
>If twisted.conch is what people are supposed to be using, wouldn't it
>make sense to put that in the core install?

No, because the "core install" is a very special-purpose thing that most people aren't interested in.  It's part of the "Twisted install" already, and that's what most people should install.

>
>Sorry for being such a griper and for hammering a dead horse with this
>one.  I guess I'd just like some assurance that my project, written
>using twisted.conch, will still work as the conch library gets
>upgraded to 1.0

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

To look at this problem another way, how would you feel if you started to use twisted.conch.telnet and found that it satisfied 90% of your use-case, but that due to one critical oversight, you couldn't supply the remaining 10% yourself but instead had to write your own telnet library from scratch, because we had given up the freedom of making changes to twisted.conch.telnet?  That wouldn't be any more useful to you than the current situation.

What you can do is use it and provide feedback on what it does and does not do well and work with us to improve it to the point where we _are_ confident that it is good enough to abandon the hope of making further incompatible changes to it later on.

> (at which point, I presume, it would become stable?)

Maybe or maybe not.  Generally we mark APIs as stable or unstable with finer granularity than this.  It is unlikely that all of conch will become stable at the same time.

Jean-Paul



From blakeyrat at gmail.com  Sun Mar 19 14:42:01 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 11:42:01 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
Message-ID: <7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>

Ok, I think I've solved at least part of my problem.

On the website we've all been linking to back and forth:

http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

The link that is oh-so-helpfully labelled Undocumented:

http://schend.net/images/screenshots/twisted/no_documentation.png

Actually links to a page full of extensive documentation:

http://schend.net/images/screenshots/twisted/documentation.png

So it's poor web design that was hiding the API documentation from me.  Great.



From blakeyrat at gmail.com  Sun Mar 19 14:51:23 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 11:51:23 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
Message-ID: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>

Heh, I was typing my reply about the website issue just as you were
typing that email.  Please, please, please fix that!  Not only is the
link's label the exact OPPOSITE as the content of the link, but all
the other links on that (and the other) pages just link to full-page
versions of "Undocumented."  There is no possible way I could have
known there was documentation hidden in there.  Please fix!

>To look at this problem another way, how would you feel if you started to use
>twisted.conch.telnet and found that it satisfied 90% of your
use-case, but that due to one
>critical oversight, you couldn't supply the remaining 10% yourself
but instead had to write
>your own telnet library from scratch, because we had given up the
freedom of making
>changes to twisted.conch.telnet?  That wouldn't be any more useful to
you than the
>current situation.

Well, at the moment, the 90% I need to know is "if there's a security
hole in the library, and my users are forced to update it, will my
code no longer work because the interfaces changed?"

I understand that there is no warranty, yadda yadda, and I understand
that it's a volunteer effort and open source yadda yadda, but what I
really *need* right now is the guarantee of stability.  If conch's
interface can change at any time (on servers that I may not control
and have no say over their installed software), it becomes impossible
for me to support my program and I'd be better off writing my own,
even if that is more code.

So for me, stability is the number one concern.  However, I can't
distribute the old version of the library because of the potential for
undiscovered security holes.  So we're back to "damned if I do, damned
if I don't."

Anyway, I'll keep looking.  Maybe there's another library out there
that implements what I need with a stable interface.  Thanks.



From screwtape at froup.com  Sun Mar 19 15:12:44 2006
From: screwtape at froup.com (Tim Allen)
Date: Mon, 20 Mar 2006 07:12:44 +1100
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
Message-ID: <F4E6DF1F-F1B2-4452-90FF-BA66778791C5@froup.com>

On 20 Mar 2006, at 06:42, James Schend wrote:
> The link that is oh-so-helpfully labelled Undocumented:
>
> http://schend.net/images/screenshots/twisted/no_documentation.png
>
> Actually links to a page full of extensive documentation:
>
> http://schend.net/images/screenshots/twisted/documentation.png

I guess this should be filed as a bug against the new documentation  
system: "classes with no docstring should be labelled 'no class  
docstring' rather than 'undocumented'" or something like that.



From mwh at python.net  Sun Mar 19 16:42:18 2006
From: mwh at python.net (Michael Hudson)
Date: Sun, 19 Mar 2006 21:42:18 +0000
Subject: [Twisted-Python] Re: twisted.protocols.telnet or
	twisted.conch.telnet?
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
Message-ID: <2mek0y158l.fsf@starship.python.net>

"James Schend" <blakeyrat at gmail.com> writes:

> Heh, I was typing my reply about the website issue just as you were
> typing that email.  Please, please, please fix that!

I think the best fix is probably to add a short docstring to
t.c.i.ITelnetProtocol.

> Not only is the link's label the exact OPPOSITE as the content of
> the link, but all the other links on that (and the other) pages just
> link to full-page versions of "Undocumented."  There is no possible
> way I could have known there was documentation hidden in there.
> Please fix!

Do you have any concrete ideas for what to put in that box instead?
"No class docstring, 3/14 method docstrings" or something?  Seems a
bit verbose.

Cheers,
mwh

-- 
  ... so the notion that it is meaningful to pass pointers to memory
  objects into which any random function may write random values
  without having a clue where they point, has _not_ been debunked as
  the sheer idiocy it really is.        -- Erik Naggum, comp.lang.lisp




From golux at comcast.net  Sun Mar 19 17:10:28 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Sun, 19 Mar 2006 17:10:28 -0500
Subject: [Twisted-Python] Re: twisted.protocols.telnet
	or	twisted.conch.telnet?
In-Reply-To: <2mek0y158l.fsf@starship.python.net>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<2mek0y158l.fsf@starship.python.net>
Message-ID: <441DD6D4.7020501@comcast.net>

Michael Hudson wrote:
> Do you have any concrete ideas for what to put in that box instead?
> "No class docstring, 3/14 method docstrings" or something?  Seems a
> bit verbose.

Since there's nothing useful in those boxes right now,
I'd suggest doing one (or both) of the following:

(1)  (easiest) leave those boxes off entirely, since the
Interface/Class names are links to the docs anyway, or

(2)  add summary Interface / Class docstrings to the
source.

And maybe generate some boilerplate above such tables
that says something to the effect of:

"Follow the links for more detailed documentation."

Steve



From mcmillen at cs.cmu.edu  Sun Mar 19 17:25:13 2006
From: mcmillen at cs.cmu.edu (Colin McMillen)
Date: Sun, 19 Mar 2006 17:25:13 -0500
Subject: [Twisted-Python] Re: twisted.protocols.telnet or
	twisted.conch.telnet?
In-Reply-To: <2mek0y158l.fsf@starship.python.net>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<2mek0y158l.fsf@starship.python.net>
Message-ID: <20060319222513.GD32146@cs.cmu.edu>

> Do you have any concrete ideas for what to put in that box instead?
> "No class docstring, 3/14 method docstrings" or something?  Seems a
> bit verbose.

"Not fully documented"?

- Colin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060319/4ce29882/attachment.pgp 

From glyph at divmod.com  Sun Mar 19 19:56:00 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 19 Mar 2006 19:56:00 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
Message-ID: <20060320005600.22481.215433800.divmod.quotient.2711@ohm>

On Sun, 19 Mar 2006 11:51:23 -0800, James Schend <blakeyrat at gmail.com> wrote:

>So for me, stability is the number one concern.  However, I can't
>distribute the old version of the library because of the potential for
>undiscovered security holes.

Practically speaking, the potential for security holes in the code you're discussing is vanishingly small.  If there is a hole, we will likely release a minor-version patch for people still using recent affected releases, especially if the interface has changed.  I say this because there have almost never been holes in Twisted, and when there have been, they've been spotted so fast that a minor-version release was available soon after they were introduced.

You could easily include a tiny telnet module with your library without being worried about security holes.  twisted.protocols.telnet is 159 SLOC; twisted.conch.telnet is 572 SLOC.  If you know enough to be this concerned about security issues, surely you know enough to perform an audit of that small amount of code.  (Especially when half of it, in the latter case, is simply declaration of constants.)

>So we're back to "damned if I do, damned if I don't."

Welcome to the internet ;-).

At the core of this issue is a labor problem.  If you care about the telnet module, you could offer to provide the necessary labor (or funds!) maintain it, which would accellerate conch's official replacement of twisted.protocols.telnet, simplifying this situation.  As maintainer, you could also exercise some degree of control over changes to the telnet module which would avoid breaking your application.

What you are asking for right now is a guarantee of stability from people who simply don't have the resources to provide it to you.  If we could do that for free, we probably would, but it needs a dedicated maintainer, a clear plan for future development, some documentation, etc etc.

>Anyway, I'll keep looking.  Maybe there's another library out there
>that implements what I need with a stable interface.  Thanks.

This is vanishingly unlikely.  If you find a Twisted clone (with a proper telnet implementation!) which is open source, well maintained, and well documented, please let us know where it is.



From itamar at itamarst.org  Sun Mar 19 21:30:16 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 19 Mar 2006 21:30:16 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
Message-ID: <1142821816.8838.6.camel@localhost.localdomain>

On Sun, 2006-03-19 at 11:51 -0800, James Schend wrote:

> I understand that there is no warranty, yadda yadda, and I understand
> that it's a volunteer effort and open source yadda yadda, but what I
> really *need* right now is the guarantee of stability.  If conch's
> interface can change at any time (on servers that I may not control
> and have no say over their installed software), it becomes impossible
> for me to support my program and I'd be better off writing my own,
> even if that is more code.

Even when we change APIs, we do tend to try to keep them backwards
compatible. That's exactly why there's a new telnet library; old one
really needed massive changes, but rather than replacing the old one in
same location and breaking existing code, JP started a new
implementation elsewhere.

> So for me, stability is the number one concern.  However, I can't
> distribute the old version of the library because of the potential for
> undiscovered security holes.  So we're back to "damned if I do, damned
> if I don't."

1. If you "distribute old version", that's basically like writing your
own only bootstrapped. If you find security problem, just change your
copy. It's code you control after all. And if you're the only person
using it, only you/your users are likely to find security holes. Same
thing you'd do with something written from scratch.

2. We'd probably distribute security fixes for deprecated code if it
wasn't yet time to remove it outright.




From blakeyrat at gmail.com  Sun Mar 19 21:32:31 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 18:32:31 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <20060320005600.22481.215433800.divmod.quotient.2711@ohm>
References: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<20060320005600.22481.215433800.divmod.quotient.2711@ohm>
Message-ID: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>

Well, if this is a library that you expect people to actually be able
to use in production software, I hope that you take what I say under
some consideration.

One of the reasons to use a library, from my perspective, is that the
interfaces can remain constant while the internals can be patched to
ensure there are no bugs/security problems.  For instance, when libpng
had that buffer overflow last year, that single library was updated to
correct the problem without affecting the functioning of any of the
hundreds of programs that used it.  It would be nice if the same could
be done with Twisted but, as there is not currently a stable interface
to it, that is impossible.

I appreciate the work you put in to Twisted, but I'm sure I'm not the
only developer who feels this way about it.

At the bare minimum, you probably should deprecate an interface until
there's something stable to replace it with.  I wouldn't consider a
library with *no* stable interface whatsoever "well maintained,"
personally.



From radeex at gmail.com  Sun Mar 19 21:43:37 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 19 Mar 2006 21:43:37 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
References: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<20060320005600.22481.215433800.divmod.quotient.2711@ohm>
	<7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
Message-ID: <60ed19d40603191843u7a9819cep53c95b7ed108f66d@mail.gmail.com>

On 3/19/06, James Schend <blakeyrat at gmail.com> wrote:
>
> One of the reasons to use a library, from my perspective, is that the
> interfaces can remain constant while the internals can be patched to
> ensure there are no bugs/security problems.  For instance, when libpng
> had that buffer overflow last year, that single library was updated to
> correct the problem without affecting the functioning of any of the
> hundreds of programs that used it.  It would be nice if the same could
> be done with Twisted but, as there is not currently a stable interface
> to it, that is impossible.


You said a bunch of things about how great it is to share code, and then
made a weird assertion at the end about how some code in Twisted can't
provide those great things. I'm not seeing the logical connection. Why can't
we fix bugs, even security holes, just because the API is marked "unstable"?
The only thing an "unstable" marker means that we are allowing ourselves the
freedom of *also* changing the interface of the library. Anyway, as Itamar
said, we always try to keep interfaces backwards compatible, even if they're
marked as "unstable". The "unstable" marker does not say "we will ignore
backwards compatibility", it is "if there are really good reasons, we might
might break the interface". The only reason the *old* telnet implementation
wasn't marked unstable was that nobody had even gotten around to adding a
"stability" marker to it.

Anyway, as it comes down to it, you're telling us to do things that we can't
do without funding or more developer time.  Even if there are thousands of
developers who feel the same way, that doesn't change anything. Regardless,
I still strongy suggest that you're reading way too much into the "API
stability: unstable" marker, and I encourage you to use and help improve the
Telnet code in Conch.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060319/1db7597a/attachment.htm 

From glyph at divmod.com  Sun Mar 19 23:13:12 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 19 Mar 2006 23:13:12 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
Message-ID: <20060320041312.22481.1016542654.divmod.quotient.2780@ohm>

On Sun, 19 Mar 2006 18:32:31 -0800, James Schend <blakeyrat at gmail.com> wrote:
>Well, if this is a library that you expect people to actually be able
>to use in production software, I hope that you take what I say under
>some consideration.

Many of the people using Twisted in production, and there are many who are, contribute to its maintenance in some way.  It is still a project actively under development.  However, it's hardly a necessity, and probably half of the people on the Success Stories page have never contributed anything to Twisted.

It sure would be nice if it were totally stable and full-featured, but it would also be nice if I had a pony.  There is a difference between not having the kind of total stability and commercial-grade support guarantees that you want (for free) and being unusable in production.  Code which is *way* worse than Twisted, with less maintenance and security attention than Twisted, is used in "production" all over the world, every day.

By the way, there are definitely people who *will* provide commercial-grade support for Twisted, any version you like, for a very reasonable fee.  My company (Divmod) is among them.  Unfortunately for us, it turns out nobody actually needs commercial-grade support for Twisted, because the code actually stands on its own pretty well :).

>One of the reasons to use a library, from my perspective, is that the
>interfaces can remain constant while the internals can be patched to
>ensure there are no bugs/security problems.  For instance, when libpng
>had that buffer overflow last year, that single library was updated to
>correct the problem without affecting the functioning of any of the
>hundreds of programs that used it.

libpng's interface is hardly stable.  There is a libpng, libpng2, and libpng3, and a planned libpng4.  The interface changes every major release.  They may not write "deprecated! unstable!" all over version 2, but I bet if you were to ask a libpng developer which version you should use to write new code, they wouldn't say "use the one we wrote five years ago and haven't been able to update except for security reasons".

Granted, libpng provides better support for side-by-side installation of mutually incompatible versions than Twisted does, however, it also doesn't provide any "soft" interface changes, deprecation warnings, etc.  It just totally breaks the ABI every major release.

Now, you could easily talk about the merits of sustained parallel development tracks and side-by-side installation, but I don't think that this is a worthwhile discussion until someone is actually going to provide the resources to *do* it.  The best you can do right now is discourage and annoy the people who are dealing with maintaining Twisted's *one* sustained track of development.

>It would be nice if the same could
>be done with Twisted but, as there is not currently a stable interface
>to it, that is impossible.

This is just FUD.  There is nothing magical about the word "stable" which makes security patches possible.

If there are critical security bugs in Twisted, it may well be in someone's interest to do a maintenance release of each release-branch which is used in production.  There is nothing about having a "stable interface" which makes this easy or free.

>I appreciate the work you put in to Twisted, but I'm sure I'm not the
>only developer who feels this way about it.

The sort of security problem you are concerned about is literally so rare that it has never happened before.  Twisted's security bugs (2 in its 5-year history) have always been caught well before another major-version release has happened.

I'm sure other developers feel the same way you do, and that's unfortunate, but you will pardon me if I don't immediately re-configure Twisted Matrix Labs' priorities around an eventuality that has never happened and may only hypothetically happen in the future, simply because it concerns you.

>At the bare minimum, you probably should deprecate an interface until
>there's something stable to replace it with.  I wouldn't consider a
>library with *no* stable interface whatsoever "well maintained,"
>personally.

  http://www.dict.org/bin/Dict?Form=Dict2&Database=*&Query=deprecated

  deprecate \dep"re*cate\ (d[e^]p"r[-e]*k[=a]t), v. t.
     To pray against, as an evil; to seek to avert by prayer; to
     seek deliverance from; to express deep regret for; to desire
     the removal of.

When things are deprecated, it is a statement that we now understand that approach to be a bad idea, which we regret having implemented.  They may not be deprecated in favor of anything, or they may be deprecated in favor of something that isn't a part of Twisted (for example, the components system was deprecated in favor of Zope  Interface).  Sometimes, a particular API is just trying to accomplish an impossible task, or provides a bad way to structure code.  The first iteration of twisted.cred comes to mind.  Nothing attempts to do what the first version of twisted.cred did; the new cred has a much more restricted goal, because what the first version of twisted.cred was trying to do was nearly impossible and it turned out that it didn't actually work.

There was nothing stable in the telnet code in the first place; it just wasn't properly annotated as such.

Something being "well-maintained" within Twisted means that there are people working on it and actively interested in improving and advancing it.  To some extent, that is actually the *opposite* of stable; stable things are things that mostly work OK already.  It is possible to be both, of course. Some stable things, like the reactor, have a stable interface but a known-to-be-sub-optimal implementation, and the maintainers' work is being put towards improving just the implementation.  Those sorts of things are unfortunately rare, because interfaces turn out to be harder to get right than implementations.



From blakeyrat at gmail.com  Mon Mar 20 10:40:41 2006
From: blakeyrat at gmail.com (James Schend)
Date: Mon, 20 Mar 2006 07:40:41 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <20060320041312.22481.1016542654.divmod.quotient.2780@ohm>
References: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
	<20060320041312.22481.1016542654.divmod.quotient.2780@ohm>
Message-ID: <7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>

Look, all I want to be able to do is to write a program that can sit
on a server for 10 years and run without me touching it.  My users
won't necessarily be technical and (much more likely) the program
won't necessarily be maintained, so it is important that the libraries
used, if any, won't break my code with updates.

Maybe those are strange, unheard-of, constraints, but either way it
looks like I have to write my own telnet server.  I'd rather not, and
I'm sure you'd rather have me as a user, but that's just the way it
is.

One last question:  How do I uninstall Twisted?  Do I re-run setup.py
with "setup.py core uninstall?"

On 3/19/06, glyph at divmod.com <glyph at divmod.com> wrote:
> On Sun, 19 Mar 2006 18:32:31 -0800, James Schend <blakeyrat at gmail.com> wrote:
> >Well, if this is a library that you expect people to actually be able
> >to use in production software, I hope that you take what I say under
> >some consideration.
>
> Many of the people using Twisted in production, and there are many who are, contribute to its maintenance in some way.  It is still a project actively under development.  However, it's hardly a necessity, and probably half of the people on the Success Stories page have never contributed anything to Twisted.
>
> It sure would be nice if it were totally stable and full-featured, but it would also be nice if I had a pony.  There is a difference between not having the kind of total stability and commercial-grade support guarantees that you want (for free) and being unusable in production.  Code which is *way* worse than Twisted, with less maintenance and security attention than Twisted, is used in "production" all over the world, every day.
>
> By the way, there are definitely people who *will* provide commercial-grade support for Twisted, any version you like, for a very reasonable fee.  My company (Divmod) is among them.  Unfortunately for us, it turns out nobody actually needs commercial-grade support for Twisted, because the code actually stands on its own pretty well :).
>
> >One of the reasons to use a library, from my perspective, is that the
> >interfaces can remain constant while the internals can be patched to
> >ensure there are no bugs/security problems.  For instance, when libpng
> >had that buffer overflow last year, that single library was updated to
> >correct the problem without affecting the functioning of any of the
> >hundreds of programs that used it.
>
> libpng's interface is hardly stable.  There is a libpng, libpng2, and libpng3, and a planned libpng4.  The interface changes every major release.  They may not write "deprecated! unstable!" all over version 2, but I bet if you were to ask a libpng developer which version you should use to write new code, they wouldn't say "use the one we wrote five years ago and haven't been able to update except for security reasons".
>
> Granted, libpng provides better support for side-by-side installation of mutually incompatible versions than Twisted does, however, it also doesn't provide any "soft" interface changes, deprecation warnings, etc.  It just totally breaks the ABI every major release.
>
> Now, you could easily talk about the merits of sustained parallel development tracks and side-by-side installation, but I don't think that this is a worthwhile discussion until someone is actually going to provide the resources to *do* it.  The best you can do right now is discourage and annoy the people who are dealing with maintaining Twisted's *one* sustained track of development.
>
> >It would be nice if the same could
> >be done with Twisted but, as there is not currently a stable interface
> >to it, that is impossible.
>
> This is just FUD.  There is nothing magical about the word "stable" which makes security patches possible.
>
> If there are critical security bugs in Twisted, it may well be in someone's interest to do a maintenance release of each release-branch which is used in production.  There is nothing about having a "stable interface" which makes this easy or free.
>
> >I appreciate the work you put in to Twisted, but I'm sure I'm not the
> >only developer who feels this way about it.
>
> The sort of security problem you are concerned about is literally so rare that it has never happened before.  Twisted's security bugs (2 in its 5-year history) have always been caught well before another major-version release has happened.
>
> I'm sure other developers feel the same way you do, and that's unfortunate, but you will pardon me if I don't immediately re-configure Twisted Matrix Labs' priorities around an eventuality that has never happened and may only hypothetically happen in the future, simply because it concerns you.
>
> >At the bare minimum, you probably should deprecate an interface until
> >there's something stable to replace it with.  I wouldn't consider a
> >library with *no* stable interface whatsoever "well maintained,"
> >personally.
>
>   http://www.dict.org/bin/Dict?Form=Dict2&Database=*&Query=deprecated
>
>   deprecate \dep"re*cate\ (d[e^]p"r[-e]*k[=a]t), v. t.
>      To pray against, as an evil; to seek to avert by prayer; to
>      seek deliverance from; to express deep regret for; to desire
>      the removal of.
>
> When things are deprecated, it is a statement that we now understand that approach to be a bad idea, which we regret having implemented.  They may not be deprecated in favor of anything, or they may be deprecated in favor of something that isn't a part of Twisted (for example, the components system was deprecated in favor of Zope  Interface).  Sometimes, a particular API is just trying to accomplish an impossible task, or provides a bad way to structure code.  The first iteration of twisted.cred comes to mind.  Nothing attempts to do what the first version of twisted.cred did; the new cred has a much more restricted goal, because what the first version of twisted.cred was trying to do was nearly impossible and it turned out that it didn't actually work.
>
> There was nothing stable in the telnet code in the first place; it just wasn't properly annotated as such.
>
> Something being "well-maintained" within Twisted means that there are people working on it and actively interested in improving and advancing it.  To some extent, that is actually the *opposite* of stable; stable things are things that mostly work OK already.  It is possible to be both, of course. Some stable things, like the reactor, have a stable interface but a known-to-be-sub-optimal implementation, and the maintainers' work is being put towards improving just the implementation.  Those sorts of things are unfortunately rare, because interfaces turn out to be harder to get right than implementations.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From glyph at divmod.com  Mon Mar 20 13:07:53 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 20 Mar 2006 13:07:53 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>
Message-ID: <20060320180753.22481.1865394289.divmod.quotient.2969@ohm>



On Mon, 20 Mar 2006 07:40:41 -0800, James Schend <blakeyrat at gmail.com> wrote:
>Look, all I want to be able to do is to write a program that can sit
>on a server for 10 years and run without me touching it.  My users
>won't necessarily be technical and (much more likely) the program
>won't necessarily be maintained, so it is important that the libraries
>used, if any, won't break my code with updates.

If that's all you want, Twisted is the least of your worries:

  - MTBF on your hard drive is almost certainly less than 10 years.
  - libc won't continue to be compatible with your current build of Python for 10 years.
  - It's unlikely that the 10-years-hence version of Python will even _parse_ your code, let alone run it.  (Discussion of Python 3k has started in earnest recently... the timeframe looks to be less than a decade.)
  - the 10-years-hence version of Linux will probably not work with current builds of Python or libc.
  - it is unlikely that the x86 processor architecture will still be en vogue in 10 years, which leads to another set of problems.

A custom-coded project that expects to run with no maintenance programming staff - but to also receive up-to-the-minute security updates! - is unlikely to succeed.  I am not aware of any such project.

I can sympathize with your desire for a perpetually-supported platform; I had a similar crisis working on a project about 5 years ago which I just wanted to "write and forget", but the fact is that writing a platform which can weather a decade's changing hardware and software fads is an **immensely** difficult problem, one nobody has really solved yet.

>Maybe those are strange, unheard-of, constraints, but either way it
>looks like I have to write my own telnet server.  I'd rather not, and
>I'm sure you'd rather have me as a user, but that's just the way it
>is.

Your requirement for a telnet server is that it will be maintained with a stable interface indefinitely, so that libraries can be upgraded for security fixes forever.  However, you can't update your application code to any minor changes in the telnet server interface, because you're not going to be maintaining the application code at all.  Therefore, rather than packaging a copy of the telnet server for stability (because this wouldn't be updated) you are going to write your own (which you won't update, because you aren't planning to maintain the code, only the installation)?



From general at eepatents.com  Mon Mar 20 14:30:51 2006
From: general at eepatents.com (Ed Suominen)
Date: Mon, 20 Mar 2006 11:30:51 -0800
Subject: [Twisted-Python] Motivations of Twisted Developers & $200 Docstring
	Challenge
In-Reply-To: <E1FLOfl-0005Gi-02@pyramid.twistedmatrix.com>
References: <E1FLOfl-0005Gi-02@pyramid.twistedmatrix.com>
Message-ID: <441F02EB.3010705@eepatents.com>

"James Schend" <blakeyrat at gmail.com> wrote:
> Look, all I want to be able to do is to write a program that can sit on a server for 10 years and run without me touching it.  My users won't necessarily be technical and (much more likely) the program won't necessarily be maintained, so it is important that the libraries used, if any, won't break my code with updates.
> 
> Maybe those are strange, unheard-of, constraints, but either way it looks like I have to write my own telnet server.  I'd rather not, and I'm sure you'd rather have me as a user, but that's just the way it is.

I'm an active user of Twisted, but even after several years, I'm still
not sure whether the Twisted developers really *want* you as a user or
not. I'm not saying that with any hostility; I'm actually a big fan of
Twisted and those behind it. They certainly have been very helpful to me
with my specific questions on IRC, and in that way it's one of the most
responsive and "live" F/OSS projects around. Frankly, I think the
Twisted developers understand Python and the theoretical underpinnings
of software engineering better than 90% of the people developing with
Python today.

On the other hand, though, much of the style of development that goes on
almost seems *intended* to turn off potential users, such as abandoning
subprojects mid-stream in favor of a Next Big Thing that remains a
moving and largely undocumented target for long periods of time, and
failing, for reasons incomprehensible to me, to simply write even 2-3
lines explanations of what their New and Improved code is actually
*doing* in the docstrings that Python so conveniently provides for that
purpose. Ironically, one of the latest examples of this is a document
extractor under development that is supposed to fix some alledgedly
grevious flaws in epydoc (undetected by this user, by the way) that
actually has very little source material to work with from the Twisted
code itself!

Another most unfortunate example is that the most powerful way to do
networking with Python is without a recommendable HTTP server. The
Twisted devs won't recommend twisted.web because it is "hopelessly
broken" yet they have nothing released to support it. Twisted web2
remains largely undocumented and the developers advised those using it
to do so at their own peril. Note to developers: serving HTTP is the
biggest single use-case for Python networking!

I've complained about these issues for a long time. Now I'm going to put
my money where my mouth is. I hereby commit to a two hundred dollar
($200) payment to Twisted, c/o the exarkun at divmod.com account listed
under the "Contributing" heading of http://twistedmatrix.com/trac/, in
exchange for one or more of the Twisted developers committing SVN/trunk
changes in the next two weeks that implement at least 100 meaningful
class or method docstrings in new or active portions of the Twisted API.
(I'd personally appreciate a focus on twisted.web2 as that's what I'm
spending my time on right now, but this challenge is open to any active
parts of the API.)

That works out to $2 per docstring, and those "in the know" should be
able to write them in just minutes apiece. Spend five hours writing all
of them (improving "your" parts of Twisted in the process) at 20
docstrings per hour and pocket $40/hr for your efforts. It sounds like a
pretty good deal to me, and hopefully to the Twisted devs as well.

If this challenge is accepted and it works out well, I might even do it
again -- I'm *that* interested in the ultimate success of this sometimes
wonderfully crazy library/framework/Integratotron*

Let me know.

Best regards,
Ed Suominen

* See Glyph's somewhat amusing and thought-provoking blog entry of March
15: http://glyf.livejournal.com/54500.html




From jtanis at pycoder.org  Tue Mar 21 01:32:14 2006
From: jtanis at pycoder.org (James Tanis)
Date: Tue, 21 Mar 2006 01:32:14 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
	<60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
	<60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>
	<7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
Message-ID: <65dcde740603202232p76a09687yfd7f21aba4756ea@mail.gmail.com>

> There's a HUGE difference in the amount of documentation available.
> Just learning this stuff for the first time, I need as much
> documentation as I can get... all the examples, and all the API docs,
> seem to be in twisted.protocols.telnet.  And of course I'd much rather
> use something that's at version 2.2 than something that's at version
> 0.6.

If you want documentation on how to use Twisted 2.0+ O'Rielly's book
is the best way to go, at least with the api's you'll want to know
about. I guess I could send you the mud I started writing with
Twisted. Only got so far as the server with a very world/mob
definitions, can't actually do anything but log in :P.. kind of left
it until I had more interest.

Honestly the only way to learn twisted well is by reading every little
bit of code your importing, and that includes the twisted code that it
in turn depends on :P Twisted can be quite hard to use as well as
understand without a good bit of time invested in trial and error. I
spend a good couple of weeks trying to figure out how to write an
email server - I finished 98% in the first day or two, but I've always
found twisted's way of handling authentication a bit confusing.. long
story short, I ended up spending a very long on some very small bits
of code :P. The learning curve is worth it though, because once enough
items click, implementation is much quicker then any other alternative
I've ever heard of.

>
> If conch is still unstable and hasn't hit 1.0, why is the old
> interface deprecated?  It seems silly to deprecate the old interface
> if the new one, being unstable, might change and require being
> deprecated again.  I'm sorry, I just don't understand.

Thats because your making some assumptions, such as the old interface
being stable. Hopefully I won't make anyone angry here, but Twisted is
by far, not a stable programming framework, it has made some good
strides towards that end, especially with 2.0+. Typically stable, as
it applies to Twisted, refers to whether or not the API can be
expected to go through any changes in the near future.. it doesn't
necessarily refer to stability as a "performance attribute."

>
> (FYI, I did download the entire tarball, but I only installed the
> "core" because I figured that that was all I needed.  I didn't
> anticipate that "correct" telnet interface had moved because, again,
> this isn't documented in the API reference, which I looked at before
> installing.)
>
> You say that Conch is better... how is it better?  Is
> twisted.protocol.telnet going away in the near future?  What the heck
> should I be using?  Other than the deprecated warning, I'm inclined to
> use the "old" twisted.protocols.telnet interface which at least has
> examples and documented functions.

conch.telnet has these also, not to mention a  book. Perhaps you
should try google if what is under documentation/howto/examples on the
twisted website isn't good enough. These two interfaces are basically
the same, one has just been extended/integrated/whatever so it can
take advantage of many of conch's very useful features.. vt100/ansi
and friends to name one.. it'd be very feasible to code a mud with an
interface intuitive enough users wouldn't need a mud client any
longer.. its much easier to ask how it hasn't been improved :P.
Its obvious here that you haven't bothered to look at the code. Dont
rely on just an API web index.. be a coder, read the code :P.
>
> Thanks again for your help.  It looks like I found your toolset in the
> midst of some huge confusing rewrite or something.  :)  Just my luck.
>

Buy the book, read the code, and most of all take your time. You did
not stumble in during a confusing rewrite, your just confused. If two
interfaces, one having an "unstable" api while the other is depracted,
stumps you.. you have a rocky road ahead. Luck has nothing to do with
learning how to use Twisted, on the other hand knowledge of Python and
prior coding experience does.

> On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
> > On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
> >
> > >
> > > On 3/18/06, James Schend <blakeyrat at gmail.com > wrote:
> > >
> > >
> > >
> > >
> > > > When I run that example, I get the message that
> > > > twisted.protocols.telnet is deprecated and I should instead be using
> > > > twisted.conch.telnet.
> > >
> > >
> > >
> > > > Is there something I'm missing here, or is Twisted telling me that I
> > > > should be using an unstable <1.0 library with no documentation that's
> > > > not even part of the core install instead of a 2.2 version library
> > > > with good documentation that *is* part of the core install?  Is this
> > > > deprecated warning in the wrong spot?  I don't get it.
> > >
> > >
> > >
> > >
> > > The telnet protocol implementation was simply moved to Conch. That
> > particular code is no more or less stable and documented than it was in its
> > old location. Also, if you're downloading tarballs, you should be getting
> > the full Twisted tarball, not the individual core/subproject tarballs. Those
> > individual ones are for embedders and OS packagers, basically. (The old web
> > site didn't make this as clear, and the new one encourages you to download
> > the full Twisted package).
> >
> >
> >
> > I'm sorry, it appears I'm mistaken. I was thinking that the telnet protocol
> > implementation moved to twisted.conch in the Great Split of Two Point Oh,
> > but I see that this was something else. The implementation in conch is
> > definitely different (and probably better), but I don't think my comment
> > about the state of documentation and stability is any less true.
> >
> > --
> > Christopher Armstrong
> > International Man of Twistery
> > http://radix.twistedmatrix.com/
> > http://twistedmatrix.com/
> > http://canonical.com/
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
James Tanis
jtanis at pycoder.org
http://pycoder.org



From lycka at carmensystems.com  Tue Mar 21 03:50:13 2006
From: lycka at carmensystems.com (Magnus Lycka)
Date: Tue, 21 Mar 2006 09:50:13 +0100
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>
References: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>	<20060320041312.22481.1016542654.divmod.quotient.2780@ohm>
	<7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>
Message-ID: <441FBE45.10506@carmensystems.com>

James Schend wrote:

>Look, all I want to be able to do is to write a program that can sit
>on a server for 10 years and run without me touching it.  My users
>won't necessarily be technical and (much more likely) the program
>won't necessarily be maintained, so it is important that the libraries
>used, if any, won't break my code with updates.
>
As long as noone maintains it, the libraries won't get updated, so
you have nothing to worry about. ;^)

If you have a look at PEP 5 http://www.python.org/doc/peps/pep-0005/
you will notice that "There must be at least a one-year transition
period between the release of the transitional version of Python and
the release of the backwards incompatible version." In practice, it's
typically longer than that, but don't bet on it.

You never have anything near 10 year API stability guarantees in
Python if you update the software. Even basic syntax and built in
operators can change. Changes of the division operator have been
announced more than a year ago, so you already live on borrowed
time if you don't use "from __future__ import division" and make
sure that no libraries you use rely on the old behaviour.

There is no way Twisted can shield you from these Python problems.
It's true that a lot of Python code written 10 years ago still work,
but you have poor timing if you want to project that forward. There
will most probably be core language changes in that time that will
require maintenance work, such as the default behaviour of the
division operator, removal of old style classes, enforcement of new
style class exceptions, maybe even removal of some statements etc.
Don't expect any support for Python 2.x in ten years.

I'm sure you can still run a Python/Twisted app written today in
ten years from now, but don't expect to do it on an updated platform.

If this worries you, don't use Python.




From glyph at divmod.com  Tue Mar 21 07:31:27 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 21 Mar 2006 07:31:27 -0500
Subject: +$400 docstrings (was Re: [Twisted-Python] Motivations of Twisted
	Developers & $200 Docstring) Challenge
In-Reply-To: <441F02EB.3010705@eepatents.com>
Message-ID: <20060321123127.22481.1978052722.divmod.quotient.3240@ohm>

On Mon, 20 Mar 2006 11:30:51 -0800, Ed Suominen <general at eepatents.com> wrote:

>I'm an active user of Twisted, but even after several years, I'm still
>not sure whether the Twisted developers really *want* you as a user or
>not.

We need more developers, especially those who can make some kind of predictable time investment.  More non-developer users in the F/OSS world mainly help you track down defects faster, and right now we know about waaay more defects than we can handle :).

However, realistically the only way to get more developers is to get more users and then recruit from that userbase.  So, the project is in a bit of a conflicted state now.  We want more users but only the users that are likely to attract more developers.  People who require free guarantees of stability and such are pretty are pretty close to the bottom of the list.  (Of course, everybody *wants* free guarantees...)

>I'm not saying that with any hostility; I'm actually a big fan of
>Twisted and those behind it. They certainly have been very helpful to me
>with my specific questions on IRC, and in that way it's one of the most
>responsive and "live" F/OSS projects around. Frankly, I think the
>Twisted developers understand Python and the theoretical underpinnings
>of software engineering better than 90% of the people developing with
>Python today.

Why, thank you :)

>On the other hand, though, much of the style of development that goes on
>almost seems *intended* to turn off potential users, such as abandoning
>subprojects mid-stream in favor of a Next Big Thing that remains a
>moving and largely undocumented target for long periods of time, and
>failing, for reasons incomprehensible to me, to simply write even 2-3
>lines explanations of what their New and Improved code is actually
>*doing* in the docstrings that Python so conveniently provides for that
>purpose.

Agreed.  This is a huge problem.

>Ironically, one of the latest examples of this is a document
>extractor under development that is supposed to fix some alledgedly
>grevious flaws in epydoc (undetected by this user, by the way) that
>actually has very little source material to work with from the Twisted
>code itself!

The "grievous flaws in epydoc", just for the record, are that it would no longer run over the Twisted codebase at all.  Zope Interface broke it and that was never fully fixed, and other constructs have come along that would cause it to explode while trying to generate the documentation for Twisted.  Even when it was "working" it required a multi-page litany of monkeypatches to get through a complete run.  It was quite detectable by a user that the code had no generated API documentation ;).

However, an alpha of epydoc 3 is out, and it no longer has to import modules to generate documentation, so perhaps this situation is only temporary?

>Another most unfortunate example is that the most powerful way to do
>networking with Python is without a recommendable HTTP server. The
>Twisted devs won't recommend twisted.web because it is "hopelessly
>broken" yet they have nothing released to support it. Twisted web2
>remains largely undocumented and the developers advised those using it
>to do so at their own peril. Note to developers: serving HTTP is the
>biggest single use-case for Python networking!

We're aware of this.  Basically the web situation is this: the web1 server is problematic for a variety of reasons (no support for Deferreds, uploads are fully processed before requests are dispatched to user code, no HTTP/1.1 support, which means no pipelining, and no proper proxying).  The web2 server is remaining unstable because A) it's still desperately inefficient, and B) we all know we made a hash of HTTP the first time around, and so we're trying to get at least the *known* problems fixed for web2 so that we don't go around this wheel of pain again.

It does leave users in an unfortunate position for the time being, and believe me, I am definitely one of those users, and I directly feel this pain.  Divmod's product suffers directly from the web2 rewrite.  Right now we're using twisted.web 'classic' because it's more effort than it's worth to make Nevow work with t.web and t.web2 at the same time.  We want to do things that require the new code (like WebDAV, and tracking the progress of as-yet-incomplete uploads) but we are also hurting for performance at just about every layer and don't want to upgrade until things like streams.

So, if I could think of an easy solution to this problem, I already would have :).  James Knight has been the driving force behind web2 so far, and I admire his efforts, but he's just one guy (with the occasional help of David Reid) and he's not even using this code at work.  Again, there is a labor shortage here.  It's not even a funding shortage in this case: everyone who should be working on web2 has other jobs.  The best way to get this done, honestly, would be for 100 people to join the Divmod fan club and all say "WEB2!!!" in the next meeting :).

>I've complained about these issues for a long time. Now I'm going to put
>my money where my mouth is. I hereby commit to a two hundred dollar
>($200) payment to Twisted, c/o the exarkun at divmod.com account listed
>under the "Contributing" heading of http://twistedmatrix.com/trac/, in
>exchange for one or more of the Twisted developers committing SVN/trunk
>changes in the next two weeks that implement at least 100 meaningful
>class or method docstrings in new or active portions of the Twisted API.
>(I'd personally appreciate a focus on twisted.web2 as that's what I'm
>spending my time on right now, but this challenge is open to any active
>parts of the API.)

I still have $400 in contributions left over from my last birthday ( http://glyf.livejournal.com/2005/05/20/ ) set aside for improving Twisted.

>That works out to $2 per docstring, and those "in the know" should be
>able to write them in just minutes apiece. Spend five hours writing all
>of them (improving "your" parts of Twisted in the process) at 20
>docstrings per hour and pocket $40/hr for your efforts. It sounds like a
>pretty good deal to me, and hopefully to the Twisted devs as well.

That seems like a pretty good rate.  I'll add to that deal.  For each additional 100 docstrings, I'll give an additional 200 dollars directly to whoever does it.

>If this challenge is accepted and it works out well, I might even do it
>again -- I'm *that* interested in the ultimate success of this sometimes
>wonderfully crazy library/framework/Integratotron*

Thanks a lot :)



From Marcin.Kasperski at softax.com.pl  Tue Mar 21 08:36:45 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 21 Mar 2006 14:36:45 +0100
Subject: [Twisted-Python] Mixing generator style (yield+twisted.flow)
	functions with deferreds?
Message-ID: <200603211436.46452.Marcin.Kasperski@softax.com.pl>

I develop some twisted application using 'traditional' method 
(plenty of deferreds and small callbacks). Works well, but is 
not too readable and a bit difficult to maintain. Therefore, I 
would like to move into twisted.flow-style coding (single longer 
function returning flow.Cooperate() from time to time, wrapped 
with flow.Deferred).

There is a problem nevertheless. I still have some functions 
which return deferreds and which results are needed in the 
processing. Is it possible to somehow wrap them and keep 
yield-style of coding?

To explain what do I mean, take a look at the code below, written 
using generators. It is clean, nice and easy to maintain, but at 
the same time well-behaving in cooperative environment. Just 
what I want to use.

  from __future__ import generators
  from twisted.internet import reactor, defer
  from twisted.flow import flow

  def someFunction(name):
    return flow.Deferred( someFunctionBody(name) )

  def someFunctionBody(name):
     x = 1
     print name, x
     yield flow.Cooperate()
     x = x+1
     print name, x
     yield flow.Cooperate()
     x = x+1
     print name, x
     yield flow.Cooperate()
     x = x+1    
     print name, x
     yield x

  d = defer.DeferredList([someFunction('a'), someFunction('b')])
  d.addCallback(lambda _: reactor.stop())
  reactor.run() 

What is the problem? Imagine that somewhere within the function I 
need to call some deferred-returning function (and use its 
result in the further computation)? For instance so:

  def someFunctionBody(name):
     x = 1
     print name, x
     yield flow.Cooperate()
     x = x+1
     print name, x
     yield flow.Cooperate()
     d = functionReturningDeferredWhichFiresInteger(x)
     #### and here some magic to extract value from d to x
     #### would be so nice
     print name, x
     yield flow.Cooperate()
     x = x+1    
     print name, x
     yield x

Is it possible to apply some syntax glue to keep the code in one 
piece, without splitting the function and callback-ing 
explicite? I do *not* want to call deferred synchronously, I 
just search for opportunity to have nicely-looking code. At the 
first sight I doubt, but ... I would never believe that the 
generator-based code is possible until I saw it...

If the general solution is not possible, another question. What 
if, in the critical place, I need to call computation-intensive 
database function (currently deferred using enterprise api)?



From exarkun at divmod.com  Tue Mar 21 09:49:17 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Mar 2006 09:49:17 -0500
Subject: [Twisted-Python] Mixing generator style (yield+twisted.flow)
	functions with deferreds?
In-Reply-To: <200603211436.46452.Marcin.Kasperski@softax.com.pl>
Message-ID: <20060321144917.22481.772184156.divmod.quotient.3269@ohm>

On Tue, 21 Mar 2006 14:36:45 +0100, Marcin Kasperski <marcin.kasperski at softax.com.pl> wrote:
>I develop some twisted application using 'traditional' method
>(plenty of deferreds and small callbacks). Works well, but is
>not too readable and a bit difficult to maintain. Therefore, I
>would like to move into twisted.flow-style coding (single longer
>function returning flow.Cooperate() from time to time, wrapped
>with flow.Deferred).
>
>There is a problem nevertheless. I still have some functions
>which return deferreds and which results are needed in the
>processing. Is it possible to somehow wrap them and keep
>yield-style of coding?

There's no need to use twisted.flow for this, and I would discourage you from doing so.  Instead, if you want to use this style of programming, simply use waitForDeferred and deferredGenerator from twisted.internet.defer.

> [snip]
>
>What is the problem? Imagine that somewhere within the function I
>need to call some deferred-returning function (and use its
>result in the further computation)? For instance so:
>
>  def someFunctionBody(name):
>     x = 1
>     print name, x
>     yield flow.Cooperate()
>     x = x+1
>     print name, x
>     yield flow.Cooperate()
>     d = functionReturningDeferredWhichFiresInteger(x)
>     #### and here some magic to extract value from d to x
>     #### would be so nice
>     print name, x
>     yield flow.Cooperate()
>     x = x+1
>     print name, x
>     yield x


    def someFunction(name):
        x = 1
        print name, x
        yield None
        x += 1
        print name, x
        yield None
        d = defer.waitForDeferred(funcReturnDef(x))
        yield d
        x = d.getResult()
        print name, x
        ...
    someFunction = defer.deferredGenerator(someFunction)

Jean-Paul



From kim at trdlnk.com  Tue Mar 21 12:21:21 2006
From: kim at trdlnk.com (Kim Novak)
Date: Tue, 21 Mar 2006 11:21:21 -0600
Subject: [Twisted-Python] using gtk without threads and pb
In-Reply-To: <440C5DAB.2090705@trdlnk.com>
References: <440C5DAB.2090705@trdlnk.com>
Message-ID: <44203611.4020208@trdlnk.com>

I haven't heard a response on this. Can anyone answer?
Thanks
Kim

Kim Novak wrote:
> I am new to twisted and am trying to figure out if I can use it with 
> gtk but without threads.
>
> I need this because of an old library I'm using that doesn't work with 
> gtk threads. Since I have to run single threaded the async xml rpc 
> offered by Twisted is ideal for my application to work well.
>
> To test this I tweaked the example pbgtk2.py to disable threads as 
> recommended here:
> http://twistedmatrix.com/trac/ticket/1083
> The tweaked version is attached. I start pbecho.py and run my 
> pbgtk2.py. When I click connect it eventually times out. Without my 
> tweaks it connects immediately.
>
> Does anyone know if this is supposed to be possible? If so, what I am 
> I doing wrong?
>
> I am using python v2.3 and pygtk v2.6.
> Thanks
> Kim
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From exarkun at divmod.com  Tue Mar 21 12:36:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Mar 2006 12:36:54 -0500
Subject: [Twisted-Python] using gtk without threads and pb
In-Reply-To: <44203611.4020208@trdlnk.com>
Message-ID: <20060321173654.22481.428024593.divmod.quotient.3316@ohm>

On Tue, 21 Mar 2006 11:21:21 -0600, Kim Novak <kim at trdlnk.com> wrote:
>I haven't heard a response on this. Can anyone answer?
>Thanks
>Kim
>
>Kim Novak wrote:
>>I am new to twisted and am trying to figure out if I can use it with gtk 
>>but without threads.

This is not currently supported.

Jean-Paul



From kim at trdlnk.com  Tue Mar 21 12:58:40 2006
From: kim at trdlnk.com (Kim Novak)
Date: Tue, 21 Mar 2006 11:58:40 -0600
Subject: [Twisted-Python] using gtk without threads and pb
In-Reply-To: <20060321173654.22481.428024593.divmod.quotient.3316@ohm>
References: <20060321173654.22481.428024593.divmod.quotient.3316@ohm>
Message-ID: <44203ED0.4060209@trdlnk.com>

Thanks for the reply.
Kim

Jean-Paul Calderone wrote:
> On Tue, 21 Mar 2006 11:21:21 -0600, Kim Novak <kim at trdlnk.com> wrote:
>> I haven't heard a response on this. Can anyone answer?
>> Thanks
>> Kim
>>
>> Kim Novak wrote:
>>> I am new to twisted and am trying to figure out if I can use it with 
>>> gtk but without threads.
>
> This is not currently supported.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From Marcin.Kasperski at softax.com.pl  Tue Mar 21 15:29:03 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 21 Mar 2006 21:29:03 +0100
Subject: [Twisted-Python] Mixing generator style (yield+twisted.flow)
	functions with deferreds?
In-Reply-To: <20060321144917.22481.772184156.divmod.quotient.3269@ohm>
References: <20060321144917.22481.772184156.divmod.quotient.3269@ohm>
Message-ID: <200603212129.04605.Marcin.Kasperski@softax.com.pl>

>     def someFunction(name):
>         x = 1
>         print name, x
>         yield None
>         x += 1
>         print name, x
>         yield None
>         d = defer.waitForDeferred(funcReturnDef(x))
>         yield d
>         x = d.getResult()
>         print name, x
>         ...
>     someFunction = defer.deferredGenerator(someFunction)

GREAT!  Thank you very, very much!

Minor note, I am not sure to whom - I think that such example 
deservers its place in Twisted tutorial. Or maybe it is there? 
But I tried reading docs carefully and failed to find such a 
thing....



From johnpote at jptechnical.co.uk  Tue Mar 21 20:20:46 2006
From: johnpote at jptechnical.co.uk (John Pote)
Date: Wed, 22 Mar 2006 01:20:46 +0000
Subject: [Twisted-Python] ftp server
Message-ID: <4420A66E.4040003@jptechnical.co.uk>

Hi everyone.

I've just started looking at Twisted as I need an ftp server and 
possibly a TCP listener on an internet connected server.

I have the new 'Twisted' book which looks like it should get me going 
pretty quick.

But looking at the ......\twisted\protocols\ftp.py the following comment 
is found:-

"""
An FTP protocol implementation
.
.
API stability: FTPClient is stable, FTP and FTPFactory (server) is 
unstable.
"""
As it is the server that I am interested in the 'unstable' comment is 
somewhat worrying. Any comments on this instability would be 
appreciated. i.e. is it particular situations that cause problems or are 
there general problems with the server that may occur doing simple 
things. The application is for continuous data gathering where 
continuity of the data is vital. (The data source streams data 
continuously, sending small amounts of data every few minutes. Source 
buffering can back up 1 or 2 hours worth of data but then it has to be 
uploaded or it's lost forever)

Also I do not want the uploaded file contents written directly to disk. 
I want to pass it to another python app/object to decode it, format it 
and finally append it to a file on disk. Could the Twisted ftp server 
allow such 'filtering'? The reason for doing this via ftp is the data 
source client is a GPRS modem that has ftp built in (but not http). The 
alternative is to do my own thing directly via TCP. Comments invited.

Thanks for any help you can give,

John Pote



From radeex at gmail.com  Tue Mar 21 20:50:29 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 21 Mar 2006 20:50:29 -0500
Subject: [Twisted-Python] ftp server
In-Reply-To: <4420A66E.4040003@jptechnical.co.uk>
References: <4420A66E.4040003@jptechnical.co.uk>
Message-ID: <60ed19d40603211750t6c9128acp1633e179420bea54@mail.gmail.com>

On 3/21/06, John Pote <johnpote at jptechnical.co.uk> wrote:
>
> API stability: FTPClient is stable, FTP and FTPFactory (server) is
> unstable.



> As it is the server that I am interested in the 'unstable' comment is
> somewhat worrying. Any comments on this instability would be
> appreciated. i.e. is it particular situations that cause problems or are
> there general problems with the server that may occur doing simple
> things.
>

First, note that it refers to *API* stability, not performance stability.
The only thing "unstable" means in this context is that we reserve the right
to change the interface of the FTP server in a way that could possibly break
end-user code, although that's only if backwards compatibility is
impossible. In practice, code written against an "unstable" Twisted
interface doesn't often  break outright upon upgrade; instead deprecated
APIs will give you warnings when you continue to use them, and hopefully
sufficiently describe the correct way to use the functionality.

Also I do not want the uploaded file contents written directly to disk.
> I want to pass it to another python app/object to decode it, format it
> and finally append it to a file on disk. Could the Twisted ftp server
> allow such 'filtering'? The reason for doing this via ftp is the data
> source client is a GPRS modem that has ftp built in (but not http). The
> alternative is to do my own thing directly via TCP. Comments invited.


The FTP server framework definitely supports such things, although you have
to go through a bit of boilerplate. You eventually end up implementing your
own IConsumer to handle the data, which means you'll get chunks of data
handed to you as it comes in and you can do what you want with it.

Hope this helps. If you need any more detailed info feel free to post again.


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060321/d29a5a3c/attachment.htm 

From johnpote at jptechnical.co.uk  Wed Mar 22 04:46:18 2006
From: johnpote at jptechnical.co.uk (John Pote)
Date: Wed, 22 Mar 2006 09:46:18 +0000
Subject: [Twisted-Python] ftp server
In-Reply-To: <60ed19d40603211750t6c9128acp1633e179420bea54@mail.gmail.com>
References: <4420A66E.4040003@jptechnical.co.uk>
	<60ed19d40603211750t6c9128acp1633e179420bea54@mail.gmail.com>
Message-ID: <44211CEA.40205@jptechnical.co.uk>

Thanks for the replies. I can go ahead with Twisted with confidence. I 
guess I'll be back to this list for some help on the 'boiler plate' 
IConsumer stuff (or is this in the docs somewhere?).

Best wishes,

John Pote

Christopher Armstrong wrote:

> On 3/21/06, *John Pote* <johnpote at jptechnical.co.uk 
> <mailto:johnpote at jptechnical.co.uk>> wrote:
>
>     API stability: FTPClient is stable, FTP and FTPFactory (server) is
>     unstable.
>
>  
>
>     As it is the server that I am interested in the 'unstable' comment is
>     somewhat worrying. Any comments on this instability would be
>     appreciated. i.e. is it particular situations that cause problems
>     or are
>     there general problems with the server that may occur doing simple
>     things.
>
>
> First, note that it refers to *API* stability, not performance 
> stability. The only thing "unstable" means in this context is that we 
> reserve the right to change the interface of the FTP server in a way 
> that could possibly break end-user code, although that's only if 
> backwards compatibility is impossible. In practice, code written 
> against an "unstable" Twisted interface doesn't often  break outright 
> upon upgrade; instead deprecated APIs will give you warnings when you 
> continue to use them, and hopefully sufficiently describe the correct 
> way to use the functionality.
>
>     Also I do not want the uploaded file contents written directly to
>     disk.
>     I want to pass it to another python app/object to decode it,
>     format it
>     and finally append it to a file on disk. Could the Twisted ftp server
>     allow such 'filtering'? The reason for doing this via ftp is the data
>     source client is a GPRS modem that has ftp built in (but not
>     http). The
>     alternative is to do my own thing directly via TCP. Comments invited.
>
>
> The FTP server framework definitely supports such things, although you 
> have to go through a bit of boilerplate. You eventually end up 
> implementing your own IConsumer to handle the data, which means you'll 
> get chunks of data handed to you as it comes in and you can do what 
> you want with it.
>
> Hope this helps. If you need any more detailed info feel free to post 
> again.
>
>
> -- 
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>
>------------------------------------------------------------------------
>
>No virus found in this incoming message.
>Checked by AVG Free Edition.
>Version: 7.1.385 / Virus Database: 268.2.5/284 - Release Date: 17/03/2006
>  
>




From glyph at divmod.com  Thu Mar 23 12:05:46 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 23 Mar 2006 12:05:46 -0500
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: 0
Message-ID: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>


Right now, there are no exceptions to the rule of "make sure there's a ticket before you check any code in to trunk".

However, several people raised some concerns on IRC over the additional friction this adds for minor fixes (the change in question being spiv's doc correction of "the the").

It's worth noting that if branching is difficult for you, it is also perfectly acceptable to attach a patch to a ticket.  The important thing is that a ticket exist first, so that merging and reviewing can be done independently of committing, not that a branch actually be created in SVN.

For now, because defining "trivial" is so hard (what if your docstring fix has a typo which actually changes some code which breaks some tests?), and it is always too tempting to classify "just this one" branch as "trivial" because the author wants to merge it really fast and it's not _too_ long, the proposed solution is to have a shared "minor fixes" ticket and branch, which should be reviewed once a week or so, and merged en-masse.

To be clear: there are still *no exceptions* to this rule.  However, please feel free to file a general-purpose ticket for minor fixes and work with as many other developers checking into the branch for that ticket.



From mustafa at liqia.com  Thu Mar 23 13:06:59 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Thu, 23 Mar 2006 20:06:59 +0200
Subject: [Twisted-Python] Getting splitted data with SSHChannel.dataReceived
Message-ID: <4422E3C3.1070004@liqia.com>

Hi,

I am using twisted conch to execute a remote program (say ProgA) through 
ssh. In ProgA, I print some datas and catch them in the dataReceived 
method of SSHChannel.

Sometimes, the data comes partially, like this

ProgA                                    dataReceived
------------                              --------------------------------
prints TWISTED                    gets TWISTED  and appends it to TOTAL
.
.
.
prints TWISTED                    if len(TOTAL) is 1020 gets TWIS (gets 
at most 1024)
                                               => then gets TED (next time)

I think there's a buffer of something else, so dataReceived couldn't get 
the datas as they are printed.  They  are splitted if TOTAL reaches  
1024. I am looking for a solution to prevent getting splitted data.

Any help is greatly appreciated.
Greetings,

Saki



From andrew-twisted at puzzling.org  Thu Mar 23 13:09:03 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 24 Mar 2006 05:09:03 +1100
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
Message-ID: <20060323180903.GF10268@steerpike.home.puzzling.org>

On Thu, Mar 23, 2006 at 12:05:46PM -0500, glyph at divmod.com wrote:
[...]
> 
> For now, because defining "trivial" is so hard (what if your docstring fix 
> has a typo which actually changes some code which breaks some tests?), and 
> it is always too tempting to classify "just this one" branch as "trivial" 
> because the author wants to merge it really fast and it's not _too_ long, 
> the proposed solution is to have a shared "minor fixes" ticket and branch, 
> which should be reviewed once a week or so, and merged en-masse.

As stated on IRC, I think this adds significant, needless overhead to the
process for zero benefit.

The risk of a trivial commit (let's say this is defined as purely small cosmetic
or documentation changes, and that any code change is considered by definition
non-trivial) going wrong is low.  Even if it *does* go wrong, the cost of fixing
that is low (a simple revert away, and diagnosis is going to be easy with a diff
that tiny).  The proposed process is out of proportion with the problem.

Launchpad requires mandatory reviewer approval for merging to trunk -- with an
exception for trivial commits.  Trivial commits must have [trivial] in the
commit message, or they are automatically rejected.  Given we already puts diffs
in our commit mails, post hoc reviews are easy if anyone cares.  Abusing
[trivial] would be dealt with the same as any other abuse.  The system works
very well for us.  I think it would work well for Twisted, and the cost is
almost nothing: committers have to add "[trivial]" to commit messages.

Vote "no" to mindless bureaucracy! ;)

-Andrew.




From corydodt at twistedmatrix.com  Thu Mar 23 13:15:33 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 23 Mar 2006 10:15:33 -0800
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323180903.GF10268@steerpike.home.puzzling.org>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
	<20060323180903.GF10268@steerpike.home.puzzling.org>
Message-ID: <4422E5C5.7090908@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Andrew Bennetts wrote:
> On Thu, Mar 23, 2006 at 12:05:46PM -0500, glyph at divmod.com wrote:

> Launchpad requires mandatory reviewer approval for merging to trunk -- with an
> exception for trivial commits.  Trivial commits must have [trivial] in the
> commit message, or they are automatically rejected.  

+1
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEIuXF3A5SrXAiHQcRAqWPAKCOagQtLK24DCVo1K763+WtXzjGCwCgl5K6
FLCNUzMuSS/EQZc04k5Amxc=
=/uvp
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Thu Mar 23 13:29:08 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 24 Mar 2006 05:29:08 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
References: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
	<20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
Message-ID: <20060323182908.GG10268@steerpike.home.puzzling.org>

glyph at divmod.com wrote:
[...]
> It's also worth noting that if code fails the buildbot after review (or 
> lacks adequate tests and thereby breaks critical existing functionality), 
> it's the reviewer's fault, not the author's!  Therefore, it is suggested 
> that you make heavy use of buildbot's "build this branch" feature before 
> OKing a merge.

Or, more likely, is a pre-existing intermittent failure. :P

-Andrew.




From radeex at gmail.com  Thu Mar 23 13:37:05 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 23 Mar 2006 13:37:05 -0500
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
Message-ID: <60ed19d40603231037n64b6cb69t37eb1dd458b18b65@mail.gmail.com>

On 3/23/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
>
> Right now, there are no exceptions to the rule of "make sure there's a
> ticket before you check any code in to trunk".
>
> However, several people raised some concerns on IRC over the additional
> friction this adds for minor fixes (the change in question being spiv's doc
> correction of "the the").
>
> It's worth noting that if branching is difficult for you, it is also
> perfectly acceptable to attach a patch to a ticket.  The important thing is
> that a ticket exist first, so that merging and reviewing can be done
> independently of committing, not that a branch actually be created in SVN.
>
> For now, because defining "trivial" is so hard (what if your docstring fix
> has a typo which actually changes some code which breaks some tests?), and
> it is always too tempting to classify "just this one" branch as "trivial"
> because the author wants to merge it really fast and it's not _too_ long,
> the proposed solution is to have a shared "minor fixes" ticket and branch,
> which should be reviewed once a week or so, and merged en-masse.
>
> To be clear: there are still *no exceptions* to this rule.  However,
> please feel free to file a general-purpose ticket for minor fixes and work
> with as many other developers checking into the branch for that ticket.



Even if we don't allow  trivial changes to be committed straight to trunk, I
don't really feel good about having a long-lived branch for trivial commits.
The ticket would basically be meaningless, I think. Personally, I think what
I'll do is let minor changes sit around in my working copy until I decide I
want to commit them, at which point I'll make a ticket and branch for it, or
just a ticket + patch. (Oh oh, Combinator should grow a feature to create a
new ticket and send the current diff as an attachment. :)

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060323/d55c9b21/attachment.htm 

From exarkun at divmod.com  Thu Mar 23 13:39:07 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 23 Mar 2006 13:39:07 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060323182908.GG10268@steerpike.home.puzzling.org>
Message-ID: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>

On Fri, 24 Mar 2006 05:29:08 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>glyph at divmod.com wrote:
>[...]
>> It's also worth noting that if code fails the buildbot after review (or
>> lacks adequate tests and thereby breaks critical existing functionality),
>> it's the reviewer's fault, not the author's!  Therefore, it is suggested
>> that you make heavy use of buildbot's "build this branch" feature before
>> OKing a merge.
>
>Or, more likely, is a pre-existing intermittent failure. :P
>

Everyone who commits to Twisted should be familiar with the intermittent test failures present in the suite.  For anyone who isn't, I recommend you spend some time looking at the buildbot waterfall before making any further commits.

Jean-Paul



From exarkun at divmod.com  Thu Mar 23 13:40:46 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 23 Mar 2006 13:40:46 -0500
Subject: [Twisted-Python] Getting splitted data with
	SSHChannel.dataReceived
In-Reply-To: <4422E3C3.1070004@liqia.com>
Message-ID: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>

On Thu, 23 Mar 2006 20:06:59 +0200, Mustafa Sakalsiz <mustafa at liqia.com> wrote:
>Hi,
>
>I am using twisted conch to execute a remote program (say ProgA) through 
>ssh. In ProgA, I print some datas and catch them in the dataReceived method 
>of SSHChannel.
>
>Sometimes, the data comes partially, like this
>
>ProgA                                    dataReceived
>------------                              --------------------------------
>prints TWISTED                    gets TWISTED  and appends it to TOTAL
>.
>.
>.
>prints TWISTED                    if len(TOTAL) is 1020 gets TWIS (gets at 
>most 1024)
>                                               => then gets TED (next time)
>
>I think there's a buffer of something else, so dataReceived couldn't get the 
>datas as they are printed.  They  are splitted if TOTAL reaches  1024. I am 
>looking for a solution to prevent getting splitted data.

If you want to treat your data as line-oriented, you should be using LineReceiver and overriding the lineReceived method.  The dataReceived method is always subject to this kind of fragmentation.

Jean-Paul



From mary-twisted at puzzling.org  Thu Mar 23 16:02:30 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 24 Mar 2006 08:02:30 +1100
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
Message-ID: <20060323210230.GC8409@sourdust.home.puzzling.org>

On Thu, Mar 23, 2006, glyph at divmod.com wrote:
> For now, because defining "trivial" is so hard (what if your docstring fix 
> has a typo which actually changes some code which breaks some tests?), and 
> it is always too tempting to classify "just this one" branch as "trivial" 
> because the author wants to merge it really fast and it's not _too_ long, 
> the proposed solution is to have a shared "minor fixes" ticket and branch, 
> which should be reviewed once a week or so, and merged en-masse.

I don't know that I agree in general that we should allow trivial[1]
merges without branching or review, but I don't agree with this proposal
either, it seems *even more* bolted on to the "file bug, branch, fix,
review, merge" model as the "decide it's trivial, fix in place". If
nothing else, I've done code review too, and there's quite a lot of
headaches involved in reviewing 37 unrelated trivial changes in one go,
because they're unrelated and it involves 37 context switches.

Why don't we try the stricter model (no commits to trunk that aren't
merges, each merge to trunk has its own branch and its own bug) for a
few weeks and then we can see:
 1. how angry this has made everyone
 2. how many changes are backed up in review

(This will require some people to keep notes on things like "noticed
typo in docstrings, did not fix because did not have 30 minutes"
though.)

If the answers to 1 and 2 are "very" and "lots"... well, I still don't
think the "minor fixes" ticket and branch idea will be a great solution,
but we'd have some data to evaluate it on.

-Mary

[1] Incidently, describing something as 'hard to define' is not an
argument against anything. Now that I'm a computational semanticist
again, I can tell people (although not on list) in excruciating, gut
wrenching detail, just how hard any damn thing is to define, especially
when you want bright line definitions as we do here. If you want to try
this argument, you need to propose some 'reasonable' definitions first
and then explain why they are, in fact, so much suck. Andrew's attempt
is reasonable, although I would have thought "non-semantic small changes
to documentation" was better than "small changes to documentation."
Now... define 'non-semantic' and we're done! ;)



From jml at mumak.net  Thu Mar 23 16:32:35 2006
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 24 Mar 2006 08:32:35 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>
References: <20060323182908.GG10268@steerpike.home.puzzling.org>
	<20060323183907.22481.606834942.divmod.quotient.4113@ohm>
Message-ID: <d06a5cd30603231332s7a38e0bes1ae21e40e04f2fbf@mail.gmail.com>

On 3/24/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 24 Mar 2006 05:29:08 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> >glyph at divmod.com wrote:
> >[...]
> >> It's also worth noting that if code fails the buildbot after review (or
> >> lacks adequate tests and thereby breaks critical existing functionality),
> >> it's the reviewer's fault, not the author's!  Therefore, it is suggested
> >> that you make heavy use of buildbot's "build this branch" feature before
> >> OKing a merge.
> >
> >Or, more likely, is a pre-existing intermittent failure. :P
> >
>
> Everyone who commits to Twisted should be familiar with the intermittent test failures present in the suite.  For anyone who isn't, I recommend you spend some time looking at the buildbot waterfall before making any further commits.

That's too much work. Sorry.



From grimmtooth at gmail.com  Fri Mar 24 01:03:16 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 24 Mar 2006 01:03:16 -0500
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <60ed19d40603231037n64b6cb69t37eb1dd458b18b65@mail.gmail.com>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
	<60ed19d40603231037n64b6cb69t37eb1dd458b18b65@mail.gmail.com>
Message-ID: <8f4623fb0603232203w558ac1desf2b0dde64da64919@mail.gmail.com>

On 3/23/06, Christopher Armstrong <radeex at gmail.com> wrote:
>
>
> Even if we don't allow  trivial changes to be committed straight to trunk,
> I don't really feel good about having a long-lived branch for trivial
> commits. The ticket would basically be meaningless, I think. Personally, I
> think what I'll do is let minor changes sit around in my working copy until
> I decide I want to commit them, at which point I'll make a ticket and branch
> for it, or just a ticket + patch. (Oh oh, Combinator should grow a feature
> to create a new ticket and send the current diff as an attachment. :)
>

Pitching in my 2c worth here; my company has a similar thing going on (large
projects, multiple contributors, often trivial changes and strict rules
against *any* change going directly to the trunk), and the solution that
we've gravitated to has been, more or less, one or more branches collecting
'trivial' changes along with the really big ones (enhancements, non-trivial
corrections, etc).

Pretty much the same problems, irritations, gripes, etc. But to date - and
this particular division has been around since '94 or so - no better
solution has been found. Loosening the reigns was an unmitigated disaster,
prompting a return to the stricter model you're discussing.

Better minds than mine have been trying to find a happy medium on this
matter and so far have not found anything better. Right now the only real
problem we have with it is that some of our darling engineers will sneak
'trivial' stuff into a critical corrective branch without disclosing the
fact, then causing the acceptance to be delayed while QA beats him over the
head after they pull a suprise code review on his ass.

I really don't think there's a solution here that will make everyone 100%
happy. Right now we're going through the "bitching and griping" phase that
always follows change, so it's too early to tell if everyone's going to
settle down, or if they whip out a new, improved V3.0 development process in
a few weeks. Even money right now :-)

--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down." - The Muppet Show

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060324/b39db925/attachment.htm 

From mustafa at liqia.com  Fri Mar 24 02:59:10 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Fri, 24 Mar 2006 09:59:10 +0200
Subject: [Twisted-Python] Getting splitted data
	with	SSHChannel.dataReceived
In-Reply-To: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>
References: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>
Message-ID: <4423A6CE.7060308@liqia.com>

Yes, I am using line oriented datas. But, I am subclassing the  
twisted.consh.ssh.channel.SSHChannel, so how can I use a subclass of 
basic.LineReceiver to open a channel in SSHConnection.

Jean-Paul Calderone wrote:
> On Thu, 23 Mar 2006 20:06:59 +0200, Mustafa Sakalsiz 
> <mustafa at liqia.com> wrote:
>> Hi,
>>
>> I am using twisted conch to execute a remote program (say ProgA) 
>> through ssh. In ProgA, I print some datas and catch them in the 
>> dataReceived method of SSHChannel.
>>
>> Sometimes, the data comes partially, like this
>>
>> ProgA                                    dataReceived
>> ------------                              
>> --------------------------------
>> prints TWISTED                    gets TWISTED  and appends it to TOTAL
>> .
>> .
>> .
>> prints TWISTED                    if len(TOTAL) is 1020 gets TWIS 
>> (gets at most 1024)
>>                                               => then gets TED (next 
>> time)
>>
>> I think there's a buffer of something else, so dataReceived couldn't 
>> get the datas as they are printed.  They  are splitted if TOTAL 
>> reaches  1024. I am looking for a solution to prevent getting 
>> splitted data.
>
> If you want to treat your data as line-oriented, you should be using 
> LineReceiver and overriding the lineReceived method.  The dataReceived 
> method is always subject to this kind of fragmentation.
>
> Jean-Paul
>
>




From warner at lothar.com  Fri Mar 24 03:31:04 2006
From: warner at lothar.com (Brian Warner)
Date: Fri, 24 Mar 2006 00:31:04 -0800 (PST)
Subject: [Twisted-Python] new pb, cPB and general PBness?
Message-ID: <20060324.003104.10924864.warner@lothar.com>

[Sorry to take so long to respond to this]

Gabe Rudy <rudy at goldenhelix.com> writes:

> So I'm happily using pb and am generally content with the performace, but 
> noticed the documentation mentioning that a C version of the jelly functions 
> might be forthcoming kind of like the cPickle library. 
>
> What is the status of "c" pb? I also saw talk of a "new" pb implementation 
> (pb2?) and am wondering if the C version is being put on hold until the new 
> pb protocol stabilizes. The new pb talk has got me curious as well. What's 
> "new" or different about it?

"c" PB, by which you're probably referrering to cBanana, is still around, I
think. It replaces a small portion of the serialization process with a C
extension. I have no idea how much this might help. The architecture of
existing twisted.spread PB is not ideally suited towards replacing large
parts of it with C extensions, so there is probably a limit as to how much it
could be sped up this way.

"newpb", which is the next-generation PB that lives in twisted.pb (in SVN),
does not yet have any C extensions to speed it up, but I've tried to design
it in such a way that it will be easier to write them, and to make it
possible to replace more of the protocol implementation with C extensions
than in oldpb. This will need to interact with the creactor/cppreactor code
that Itamar has in his sandbox. But my hope is that newpb will be relatively
straightforward to make really fast.


I've just now created a trac/wiki page for newpb, with a brief list of
features and some pointers to docs.. please take a look!

 http://twistedmatrix.com/trac/wiki/NewPB

cheers,
 -Brian



From warner at lothar.com  Fri Mar 24 03:36:10 2006
From: warner at lothar.com (Brian Warner)
Date: Fri, 24 Mar 2006 00:36:10 -0800 (PST)
Subject: [Twisted-Python] **kwargs with PB
Message-ID: <20060324.003610.38698583.warner@lothar.com>

"Don Smith" <donwsmith at gmail.com> writes:

>    I'm experimenting with PB because I want to pass keyword arguments to
>    my remote methods, and I cannot do that with XML-RPC. But, I can't
>    seem to do it with PB either. I was wondering if anyone could confirm
>    or deny that **kwargs work with PB remote objects.

Hmm, I was about to say that no, they don't work, but in looking at the code
it appears that yes, they ought to work just fine. I haven't run a test to
verify this, though. What kind of error message are you seeing?

cheers,
 -Brian


PS: fyi, newpb is all-kwargs, all the time. I think I put in code to handle
positional args too, but only if you declare the method signature that will
be used on the far end. If not, then you are restricted to using only keyword
args, and positional args will cause an exception.



From glyph at divmod.com  Fri Mar 24 08:42:34 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Mar 2006 08:42:34 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>
Message-ID: <20060324134234.22481.1546550509.divmod.quotient.4559@ohm>



On Thu, 23 Mar 2006 13:39:07 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Fri, 24 Mar 2006 05:29:08 +1100, Andrew Bennetts <andrew- 
>twisted at puzzling.org> wrote:
>>glyph at divmod.com wrote:

>Everyone who commits to Twisted should be familiar with the intermittent 
>test failures present in the suite.  For anyone who isn't, I recommend you 
>spend some time looking at the buildbot waterfall before making any further 
>commits.

I think we should probably start flagging intermittently-failing tests as 'todo' or something.  Having them periodically mess up the buildbot display makes the red- or green-ness of the page misleading.



From andrew-twisted at puzzling.org  Fri Mar 24 09:43:01 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 25 Mar 2006 01:43:01 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060324134234.22481.1546550509.divmod.quotient.4559@ohm>
References: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>
	<20060324134234.22481.1546550509.divmod.quotient.4559@ohm>
Message-ID: <20060324144301.GL10268@steerpike.home.puzzling.org>

glyph at divmod.com wrote:
[...]
> 
> I think we should probably start flagging intermittently-failing tests as 
> 'todo' or something.  Having them periodically mess up the buildbot display 
> makes the red- or green-ness of the page misleading.

Something like this sounds like a very good idea.

-Andrew.




From itamar at itamarst.org  Fri Mar 24 11:27:21 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 24 Mar 2006 11:27:21 -0500
Subject: [Twisted-Python] new pb, cPB and general PBness?
In-Reply-To: <20060324.003104.10924864.warner@lothar.com>
References: <20060324.003104.10924864.warner@lothar.com>
Message-ID: <1143217641.9351.0.camel@localhost.localdomain>

On Fri, 2006-03-24 at 00:31 -0800, Brian Warner wrote:

> "c" PB, by which you're probably referrering to cBanana, is still around, I
> think. It replaces a small portion of the serialization process with a C
> extension. I have no idea how much this might help. The architecture of
> existing twisted.spread PB is not ideally suited towards replacing large
> parts of it with C extensions, so there is probably a limit as to how much it
> could be sped up this way.

I'm pretty sure it did speed things up, but the C code has some
potential security issues which we never got around to fixing, so it's
disabled these days. It could be enabled by users, if they're willing to
figure out the problem.





From matusis at matusis.com  Sat Mar 25 01:36:13 2006
From: matusis at matusis.com (Alec Matusis)
Date: Fri, 24 Mar 2006 22:36:13 -0800
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141943495.9187.9.camel@localhost.localdomain>
Message-ID: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>

We finally upgraded 1.3 to 2.2 without changing the code. The load shown by
'top' for that twistd process may have dropped form 98-99% to 96-98%,
although this is not clear. In any case, the load reduction was marginal, if
any. 
 
Even though the main source of load is OS poll(), we did expect some
improvement from the different scheduler algorithm in 2.2: we have
setTimeout() on each new connection and resetTimeout() every 90 sec on each
connection when keep-alives from the clients arrive.


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Itamar
Shtull-Trauring
Sent: Thursday, March 09, 2006 2:32 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Degrading under load

On Thu, 2006-03-09 at 13:49 -0800, Alec Matusis wrote:

> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

An epoll-based reactor would probably help significantly in this case.
Also note that Twisted 2.x had some algorithmic speed improvements over
1.3 and should scale better (though that doesn't help with poll() being
a bottleneck).


[Twisted-Python] twisted performance
Itamar Shtull-Trauring itamar at itamarst.org 
Wed Dec 7 10:15:43 MST 2005 

Previous message: [Twisted-Python] twisted performance 
Next message: [Twisted-Python] twisted performance 
Messages sorted by: [ date ] [ thread ] [ subject ] [ author ] 

----------------------------------------------------------------------------
----

On Wed, 2005-12-07 at 02:04 -0800, Alec Matusis wrote:
> I am running Twisted 1.3 server with a fairly large number of clients.
> The hardware is two 64 bit 3.0 GHz Xeons with HT, 4GB RAM, and it's on
> 2.6.11 kernel.
> I am using poll reactor.
> Currently, when the number of clients approaches 5000, the "top" shows
> 99% CPU load for twistd process, the event loop slows down and weird
> racing conditions show up. 

Could you try this experiment with Twisted 2.1, ideally with the latest
version of Python? There were a number of algorithmic improvements since
1.3 (the one that comes to mind in this case is the scheduler.)

One way to discover if the OS-level poll() is the problem is to use
oprofile; you should be able to use it to see how much time is spent in
there. Before that however, you'd want to use the Python profiler to
figure out if there's any obvious hotspots.







From exarkun at divmod.com  Sat Mar 25 14:09:03 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 25 Mar 2006 14:09:03 -0500
Subject: [Twisted-Python] Motivations of Twisted Developers & $200
	Docstring Challenge
In-Reply-To: <441F02EB.3010705@eepatents.com>
Message-ID: <20060325190903.22481.304688446.divmod.quotient.5254@ohm>

I've created a ticket (<http://twistedmatrix.com/trac/ticket/1604>), a branch (<svn://svn.twistedmatrix.com/svn/Twisted/branches/write-more-doc-strings-1604>), and a wiki page (<http://twistedmatrix.com/trac/wiki/UndocumentedTwisted>) in support of this effort.  Anyone interested in contributing, please do so in this branch, and indicate the progress you make on the wiki page.

Jean-Paul



From itamar at itamarst.org  Sat Mar 25 15:38:53 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 25 Mar 2006 15:38:53 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
Message-ID: <1143319133.8945.0.camel@localhost.localdomain>

On Fri, 2006-03-24 at 22:36 -0800, Alec Matusis wrote:
> We finally upgraded 1.3 to 2.2 without changing the code. The load shown by
> 'top' for that twistd process may have dropped form 98-99% to 96-98%,
> although this is not clear. In any case, the load reduction was marginal, if
> any. 
>  
> Even though the main source of load is OS poll(), we did expect some
> improvement from the different scheduler algorithm in 2.2: we have
> setTimeout() on each new connection and resetTimeout() every 90 sec on each
> connection when keep-alives from the clients arrive.

Looks like you want epoll().




From slevin at signpuddle.net  Sat Mar 25 16:28:43 2006
From: slevin at signpuddle.net (Steve Slevinski)
Date: Sat, 25 Mar 2006 16:28:43 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <1143319133.8945.0.camel@localhost.localdomain>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
Message-ID: <4425B60B.90302@signpuddle.net>

Would it be possible to install a Twisted application using GTK on a USB 
stick for Windows platforms?



From radeex at gmail.com  Sat Mar 25 17:22:24 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 25 Mar 2006 17:22:24 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425B60B.90302@signpuddle.net>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
	<4425B60B.90302@signpuddle.net>
Message-ID: <60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>

If you can write the program, you can probably store it on a USB stick.
(what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)

On 3/25/06, Steve Slevinski <slevin at signpuddle.net> wrote:
>
> Would it be possible to install a Twisted application using GTK on a USB
> stick for Windows platforms?




--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060325/9b497fd1/attachment.htm 

From slevin at signpuddle.net  Sat Mar 25 18:47:11 2006
From: slevin at signpuddle.net (Steve Slevinski)
Date: Sat, 25 Mar 2006 18:47:11 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>	<1143319133.8945.0.camel@localhost.localdomain>	<4425B60B.90302@signpuddle.net>
	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
Message-ID: <4425D67F.3050701@signpuddle.net>

What every size would be needed.  If I could install python, GTK, 
Twisted all on a USB stick, it would be easy to give my end users a 
working install without requiring and configuration on their part.

Christopher Armstrong wrote:
> If you can write the program, you can probably store it on a USB 
> stick. (what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)
>
> On 3/25/06, *Steve Slevinski * <slevin at signpuddle.net 
> <mailto:slevin at signpuddle.net>> wrote:
>
>     Would it be possible to install a Twisted application using GTK on
>     a USB
>     stick for Windows platforms?
>
>
>  
>
> -- 
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   
> ------------------------------------------------------------------------
>
> No virus found in this incoming message.
> Checked by AVG Free Edition.
> Version: 7.1.385 / Virus Database: 268.3.1/292 - Release Date: 3/24/2006
>   



From sebastian.hanlon at uleth.ca  Sat Mar 25 20:59:56 2006
From: sebastian.hanlon at uleth.ca (Sebastian Hanlon)
Date: Sat, 25 Mar 2006 18:59:56 -0700
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425D67F.3050701@signpuddle.net>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>	<1143319133.8945.0.camel@localhost.localdomain>	<4425B60B.90302@signpuddle.net>	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net>
Message-ID: <4425F59C.8060500@uleth.ca>

Steve Slevinski wrote:
> Christopher Armstrong wrote:
>> If you can write the program, you can probably store it on a USB
>> stick. (what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)
>
> What every size would be needed.  If I could install python, GTK,
> Twisted all on a USB stick, it would be easy to give my end users a
> working install without requiring and configuration on their part.

>From the sounds of it, you probably want something like py2app
(http://undefined.org/python/py2app.html, for Mac OS X deployment)
and/or py2exe (http://www.py2exe.org/). They do a good job of bundling
up Python programs with the Python runtime and any dependancies for
distribution.

I've used py2exe with Twisted and it works great--haven't tried it with
gtk, but it works with wxPython.

That is, assuming you're deploying on Win32 or Mac OSX. Bundling Python
for Linux, I got nothin'.

-sebastian



From mcmillen at cs.cmu.edu  Sat Mar 25 21:35:38 2006
From: mcmillen at cs.cmu.edu (Colin McMillen)
Date: Sat, 25 Mar 2006 21:35:38 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425F59C.8060500@uleth.ca>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
	<4425B60B.90302@signpuddle.net>
	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net> <4425F59C.8060500@uleth.ca>
Message-ID: <20060326023538.GF2371@cs.cmu.edu>

> That is, assuming you're deploying on Win32 or Mac OSX. Bundling Python
> for Linux, I got nothin'.

cx_freeze is rumored to be useful for Linux, but I've not actually
tried it myself, so can't vouch for it directly.

- Colin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060325/cc04decb/attachment.pgp 

From exarkun at twistedmatrix.com  Sun Mar 26 01:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Mar 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1143353102.03.1256555614@twistedmatrix.com

Bug summary
______________________
Summary for 2006-03-19 through 2006-03-26
Bugs opened: 15    Bugs closed: 27  Total open bugs: 571 (-12)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -3  |Highest:  -6          |:                    -1  
|Enhancement:  -8  |High:     -3          |Conch:               -2  
|Task:         -1  |Normal:   -2          |Core:                -1  
                   |Low:      -1          |Mail:                +0  
                                          |Release Management:  -1  
                                          |Trial:               +2  
                                          |Web:                 -3  
                                          |Web2:                -1  
                                          |Website:             -5  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1604] Write More Doc Strings (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1604

                    ===== High =====
[#1591] twisted.web2.dav.test.test_prop.PROP.test_PROPFIND fails if pyxattr is installed (opened by spiv)
    defect          web2       http://twistedmatrix.com/trac/ticket/1591

[#1594] [PATCH] Errors from Trial TestCases don't report as failures when run by pyunit (opened by spiv)
    defect          trial      http://twistedmatrix.com/trac/ticket/1594

                    ===== Normal =====
[#1592] twisted.trial.test.test_loader.FileTest.test_packageNotInPath fails (opened by spiv)
    defect          trial      http://twistedmatrix.com/trac/ticket/1592

[#1593] twisted.test.test_udp.OldConnectedUDPTestCase.testDNSFailure fails on Ubuntu Breezy (opened by spiv)
    defect          core       http://twistedmatrix.com/trac/ticket/1593

[#1595] .txt file doctest support for trial (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1595

[#1596] Leftover use of childNotFound() in t.w2.twcgi.CGIDirectory (opened by grimmtooth)
    defect          web2       http://twistedmatrix.com/trac/ticket/1596

[#1598] Review API stability markers (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1598

[#1599] t.p.c.Interface shouldn't warn when a user inherits from another interface (opened by jknight)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1599

[#1602] smtp.SMTP would be faster using LineOnlyReceiver (opened by nickm) (CLOSED, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/1602

[#1603] Typo in client howto (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1603

[#1605] twisted.python.components.{getAdapterClass,getAdapterClassWithInheritance} mispell "deprecated" in docstring (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1605

                    ===== Low =====
[#1597] Add query links to subprojects to quickly access tickets for that projet (opened by therve) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1597

[#1600] auto-reference ticket from branch with ticket number in name (opened by jknight)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1600

[#1601] t.py.text.greedyWrap makes t.py.usage.Options.longdesc ugly (opened by dreid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1601



Closed Bugs
______________________
                    ===== Highest =====
[#1530] Document API documentation update process (opened by exarkun, closed by radix, fixed)
    task            website    http://twistedmatrix.com/trac/ticket/1530

[#1331] "Sumo" is confusing and unnecessary (opened by exarkun, closed by radix, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1331

[#1561] Qt reactor fails two TCP tests (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1561

[#1497] quick command-line way to run web2 server (opened by glyph, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1497

[#737 ] Minor code cleanups (opened by HelmutG, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/737

[#1562] Permission denied errors on Win32 (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1562

[#1578] setsockopt fails on joinAddr (opened by ghazel, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1578

                    ===== High =====
[#551 ] [PATCH] Distrib throws exception when accessing /users/username/ where username exists but has no public_html (opened by Jerub, closed by radix, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/551

[#969 ] No .spec file in tarball as indicated by INSTALL file (opened by bjorn, closed by radix, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/969

[#340 ] [PATCH]intermittent freebsd UDP failure (opened by warner, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/340

[#872 ] [PATCH] Unhandled exception for incomplete XMLRPC (opened by Shawn, closed by exarkun, fixed)
    defect                     http://twistedmatrix.com/trac/ticket/872

[#993 ] [PATCH] Excessive deprecation warnings from MetaInterface.__getattr__ (opened by jknight, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/993

                    ===== Normal =====
[#1555] website no longer features Twisted logo (opened by glyph, closed by radix, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1555

[#1558] docextractor should parse C{name} etc in function summary listings (opened by spiv, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1558

[#1582] move web2.dav.method.* to web2.dav.method.davfile.* (opened by wsanchez, closed by wsanchez, wontfix)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1582

[#1556] API docs should have HTML title (opened by Tv, closed by mwh, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1556

[#1557] apidocs should exclude "test" packages (opened by jknight, closed by mwh, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1557

[#978 ] Document wxPython mess appropriately (opened by itamarst, closed by itamarst, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/978

[#477 ] More flexible profiling support (opened by exarkun, closed by exarkun, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/477

[#1474] [PATCH] Support for Basic Authentication in t.w.xmlrpc (opened by oubiwann, closed by exarkun, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1474

[#688 ] [PATCH] robots.txt parser sub-class for use with Twisted (opened by mcfletch, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/688

[#1325] [patch] Performance of Conch/SSH (opened by cooz, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1325

[#1602] smtp.SMTP would be faster using LineOnlyReceiver (opened by nickm, closed by exarkun, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/1602

                    ===== Low =====
[#1548] get rid of epilepsy inducing entry page (opened by itamarst, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1548

[#1471] replace StopTraversal with () or [] (opened by andrea, closed by dreid, wontfix)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1471

[#1500] iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE (opened by ghazel, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1500

[#1597] Add query links to subprojects to quickly access tickets for that projet (opened by therve, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1597





From moof at metamoof.net  Sun Mar 26 01:39:07 2006
From: moof at metamoof.net (Moof)
Date: Sun, 26 Mar 2006 07:39:07 +0100
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425F59C.8060500@uleth.ca>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
	<4425B60B.90302@signpuddle.net>
	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net> <4425F59C.8060500@uleth.ca>
Message-ID: <bff8eeef0603252239s104f8b04tcf79a404b9184957@mail.gmail.com>

On 3/26/06, Sebastian Hanlon <sebastian.hanlon at uleth.ca> wrote:
> Steve Slevinski wrote:
> >From the sounds of it, you probably want something like py2app
> (http://undefined.org/python/py2app.html, for Mac OS X deployment)
> and/or py2exe (http://www.py2exe.org/). They do a good job of bundling
> up Python programs with the Python runtime and any dependancies for
> distribution.

You might also want to take a peek at movable python:

<http://www.voidspace.org.uk/python/movpy/index.html>

It is more wxpython-based than gtk-based, but there's nothing to stop
you installing pyGTK onto it.

Moof



From tv at twistedmatrix.com  Sun Mar 26 04:58:58 2006
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Mar 2006 12:58:58 +0300
Subject: [Twisted-Python] Getting splitted
	data	with	SSHChannel.dataReceived
In-Reply-To: <4423A6CE.7060308@liqia.com>
References: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>
	<4423A6CE.7060308@liqia.com>
Message-ID: <442665E2.7020907@twistedmatrix.com>

Mustafa Sakalsiz wrote:
> Yes, I am using line oriented datas. But, I am subclassing the 
> twisted.consh.ssh.channel.SSHChannel, so how can I use a subclass of
> basic.LineReceiver to open a channel in SSHConnection.

When inheritance fails, use ownership.

class MyLineReceiver(basic.LineReceiver):
   def lineReceived(self, line):
       ...

class MySSHChannel(channel.SSHChannel):
   def __init__(self, ...):
      ...
      self.protocol = MyLineReceiver()

   def dataReceived(self, data):
      self.protocol.dataReceived(data)



From corydodt at twistedmatrix.com  Sun Mar 26 05:18:40 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Sun, 26 Mar 2006 02:18:40 -0800
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425D67F.3050701@signpuddle.net>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>	<1143319133.8945.0.camel@localhost.localdomain>	<4425B60B.90302@signpuddle.net>	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net>
Message-ID: <44266A80.7070004@twistedmatrix.com>

Not only is this possible, it's fairly easy to do with py2exe, and I've
done it on a couple of different apps.  I'm working on an app right now
with almost exactly these requirements.  (Originally, it was even going
to be stored on a usb stick, but now it just has to be lightly
downloadable, and it is.)

It uses Axiom, which means it pulls in substantial portions of Divmod's
software, Twisted, zope.interface, and god knows what else.  Like your
app, it uses GTK, which means it pulls in pygtk and the whole GTK runtime.

All this comes to 18M, including my app.  The compressed installer
version is 8MB.

Most of the solution is here:
<http://starship.python.net/crew/theller/moin.cgi/Py2exeAndPyGTK>.  You
don't have to do anything special for Twisted and zope.interface, nor
for Divmod stuff if that interests you; py2exe these days seems to
handle all that seamlessly.


C


Steve Slevinski wrote:
> What every size would be needed.  If I could install python, GTK,
> Twisted all on a USB stick, it would be easy to give my end users a
> working install without requiring and configuration on their part.
> 
> Christopher Armstrong wrote:
>> If you can write the program, you can probably store it on a USB
>> stick. (what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)
>>
>> On 3/25/06, *Steve Slevinski * <slevin at signpuddle.net
>> <mailto:slevin at signpuddle.net>> wrote:
>>
>>     Would it be possible to install a Twisted application using GTK on
>>     a USB
>>     stick for Windows platforms?
>>
>>
>>  
>>
>> -- 
>> Christopher Armstrong
>> International Man of Twistery
>> http://radix.twistedmatrix.com/
>> http://twistedmatrix.com/
>> http://canonical.com/
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>  
>> ------------------------------------------------------------------------
>>
>> No virus found in this incoming message.
>> Checked by AVG Free Edition.
>> Version: 7.1.385 / Virus Database: 268.3.1/292 - Release Date: 3/24/2006
>>   
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at tekNico.net  Mon Mar 27 05:19:01 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 27 Mar 2006 12:19:01 +0200
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
 [was: Re: Branch based development]
In-Reply-To: <20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
Message-ID: <e08e6l$him$1@sea.gmane.org>

Jean-Paul Calderone:
>>> Unless anyone can present a compelling case to the contrary, I think
>>> that as of now we should "officially" switch to the development
>>> procedures described by
>>> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

Itamar Shtull-Trauring:
>> We should probably use Combinator, so people have an easy time with
>> this.

glyph at divmod.com wrote:
> True enough.

I like Combinator, and would like to use it to hack on Twisted, in addition
to hacking with it. mkbranch seems to need write privileges to the SVN
repo, though. Is there a way around this, or do I just create a fake local
branch by copying the trunk in my local copy?

Actually, it would be better to have the branch up there in the repo, so
that the ongoing work is visible. Is there a way to get write access to the
branches and sandbox trees of the Twisted repo, without having it in the
tags and trunk trees?

-- 
Nicola Larosa - http://www.tekNico.net/

We are not seats or eyeballs or end users or consumers. We are human beings
- and our reach exceeds your grasp: deal with it. -- Chris Locke, Cluetrain




From radeex at gmail.com  Mon Mar 27 08:48:23 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 27 Mar 2006 08:48:23 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <e08e6l$him$1@sea.gmane.org>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
Message-ID: <60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>

On 3/27/06, Nicola Larosa <nico at teknico.net> wrote:
>
> I like Combinator, and would like to use it to hack on Twisted, in
> addition
> to hacking with it. mkbranch seems to need write privileges to the SVN
> repo, though. Is there a way around this, or do I just create a fake local
> branch by copying the trunk in my local copy?



This is a limitation of SVN, not Combinator. There's no way to write
branches to the server without having write access to the server.

Actually, it would be better to have the branch up there in the repo, so
> that the ongoing work is visible. Is there a way to get write access to
> the
> branches and sandbox trees of the Twisted repo, without having it in the
> tags and trunk trees?



We don't have an actual policy yet on what it takes to get write access
restricted to sandbox, and branches. We have given access to people on the
agreement that they only keep their stuff in /branches or /sandbox for a
while and someone has to review before merging, but this is exactly the
process we've switched to for everyone now, anyway. It'd still be nice to
get some access restrictions in place, though.

But really, the suggested workflow for offline Twisted hacking is this: Hack
on your checkout of trunk, do a "svn diff > my_patch", file a bug on the
tracker, and attach the patch. Do this successfully a few times, and real
commit access is imminent.


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060327/e2e5f407/attachment.htm 

From glyph at divmod.com  Mon Mar 27 10:02:27 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 10:02:27 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
Message-ID: <20060327150227.22481.116420393.divmod.quotient.6178@ohm>



On Mon, 27 Mar 2006 08:48:23 -0500, Christopher Armstrong <radeex at gmail.com> wrote:
>On 3/27/06, Nicola Larosa <nico at teknico.net> wrote:

>Actually, it would be better to have the branch up there in the repo, so
>> that the ongoing work is visible. Is there a way to get write access to
>> the
>> branches and sandbox trees of the Twisted repo, without having it in the
>> tags and trunk trees?

>But really, the suggested workflow for offline Twisted hacking is this: Hack
>on your checkout of trunk, do a "svn diff > my_patch", file a bug on the
>tracker, and attach the patch. Do this successfully a few times, and real
>commit access is imminent.

It's worth noting that since we have a real review process now, and everything has to go through it (instead of just submitted patches) it's more likely that bugs filed in this manner will be addressed promptly.

Make sure to attach the 'review' keyword when you submit a patch this way.



From glyph at divmod.com  Mon Mar 27 10:11:32 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 10:11:32 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <e08e6l$him$1@sea.gmane.org>
Message-ID: <20060327151132.22481.1685356056.divmod.quotient.6180@ohm>



On Mon, 27 Mar 2006 12:19:01 +0200, Nicola Larosa <nico at teknico.net> wrote:
>Jean-Paul Calderone:
>>>> Unless anyone can present a compelling case to the contrary, I think
>>>> that as of now we should "officially" switch to the development
>>>> procedures described by
>>>> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.
>
>Itamar Shtull-Trauring:
>>> We should probably use Combinator, so people have an easy time with
>>> this.
>
>glyph at divmod.com wrote:
>> True enough.
>
>I like Combinator, and would like to use it to hack on Twisted, in addition
>to hacking with it. mkbranch seems to need write privileges to the SVN
>repo, though. Is there a way around this, or do I just create a fake local
>branch by copying the trunk in my local copy?

You can create a fake local branch, except it will only work for 'chbranch', not 'unbranch', because SVN's merge functionality needs to talk to the server.



From foom at fuhm.net  Mon Mar 27 11:15:27 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Mar 2006 11:15:27 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <E1FNu45-0003WC-00@wolfwood>
References: <E1FNu45-0003WC-00@wolfwood>
Message-ID: <1BAD5939-2A6D-439C-A746-298525C1E8B2@fuhm.net>

> -    zsh_extras = [":file to read from:action", ":file to write  
> to:action"]
> +    zsh_extras = [\":file to read from:action\", \":file to write  
> to:action\"]

Why were changes like that made? Isn't it a no-op, since they were in  
triple-quoted strings anyhow? It would be nice if the docs were  
actually usable/readable by people viewing the source as well as  
people viewing the generated docs, where possible.

James



From itamar at itamarst.org  Mon Mar 27 11:31:16 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 27 Mar 2006 11:31:16 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <1BAD5939-2A6D-439C-A746-298525C1E8B2@fuhm.net>
References: <E1FNu45-0003WC-00@wolfwood>
	<1BAD5939-2A6D-439C-A746-298525C1E8B2@fuhm.net>
Message-ID: <1143477076.9079.4.camel@localhost.localdomain>

On Mon, 2006-03-27 at 11:15 -0500, James Y Knight wrote:

> Why were changes like that made? Isn't it a no-op, since they were in  
> triple-quoted strings anyhow? It would be nice if the docs were  
> actually usable/readable by people viewing the source as well as  
> people viewing the generated docs, where possible.

Probably to work around python-mode emacs brokenness?




From exarkun at divmod.com  Mon Mar 27 11:40:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Mar 2006 11:40:54 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <1143477076.9079.4.camel@localhost.localdomain>
Message-ID: <20060327164054.22481.1663179417.divmod.quotient.6200@ohm>

On Mon, 27 Mar 2006 11:31:16 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Mon, 2006-03-27 at 11:15 -0500, James Y Knight wrote:
>
>> Why were changes like that made? Isn't it a no-op, since they were in
>> triple-quoted strings anyhow? It would be nice if the docs were
>> actually usable/readable by people viewing the source as well as
>> people viewing the generated docs, where possible.
>
>Probably to work around python-mode emacs brokenness?
>

Yes.  See <http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/policy/coding-standard.xhtml?rev=16485#L174> :)

Jean-Paul



From mcmillen at cs.cmu.edu  Mon Mar 27 11:52:01 2006
From: mcmillen at cs.cmu.edu (Colin McMillen)
Date: Mon, 27 Mar 2006 11:52:01 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <20060327164054.22481.1663179417.divmod.quotient.6200@ohm>
References: <1143477076.9079.4.camel@localhost.localdomain>
	<20060327164054.22481.1663179417.divmod.quotient.6200@ohm>
Message-ID: <20060327165201.GJ2371@cs.cmu.edu>

On Mon, Mar 27, 2006 at 11:40:54AM -0500, Jean-Paul Calderone wrote:
> On Mon, 27 Mar 2006 11:31:16 -0500, Itamar Shtull-Trauring 
> <itamar at itamarst.org> wrote:
> >On Mon, 2006-03-27 at 11:15 -0500, James Y Knight wrote:
> >
> >>Why were changes like that made? Isn't it a no-op, since they were in
> >>triple-quoted strings anyhow? It would be nice if the docs were
> >>actually usable/readable by people viewing the source as well as
> >>people viewing the generated docs, where possible.
> >
> >Probably to work around python-mode emacs brokenness?
> >
> 
> Yes.  See 
> <http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/policy/coding-standard.xhtml?rev=16485#L174> :)

Has anyone tried fixing this brokenness in python-mode? I'm no emacs
hacker, but it seems like it's the sort of thing that ought to be,
say, a 10-line fix in some chunk of parsing code somewhere. I could be
massively wrong though :) If I've got a spare weekend, maybe I'll look
at it sometime.

- Colin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060327/a129f26c/attachment.pgp 

From itamar at itamarst.org  Mon Mar 27 12:08:37 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 27 Mar 2006 12:08:37 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <20060327165201.GJ2371@cs.cmu.edu>
References: <1143477076.9079.4.camel@localhost.localdomain>
	<20060327164054.22481.1663179417.divmod.quotient.6200@ohm>
	<20060327165201.GJ2371@cs.cmu.edu>
Message-ID: <1143479317.9079.8.camel@localhost.localdomain>

On Mon, 2006-03-27 at 11:52 -0500, Colin McMillen wrote:

> Has anyone tried fixing this brokenness in python-mode? I'm no emacs
> hacker, but it seems like it's the sort of thing that ought to be,
> say, a 10-line fix in some chunk of parsing code somewhere. I could be
> massively wrong though :) If I've got a spare weekend, maybe I'll look
> at it sometime.

It's fixed as of GNU Emacs 22, which has a rewritten emacs-mode. Probably still broken in xemacs.





From glyph at divmod.com  Mon Mar 27 12:12:32 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 12:12:32 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <20060327165201.GJ2371@cs.cmu.edu>
Message-ID: <20060327171232.22481.1113548991.divmod.quotient.6208@ohm>



On Mon, 27 Mar 2006 11:52:01 -0500, Colin McMillen <mcmillen at cs.cmu.edu> wrote:

>Has anyone tried fixing this brokenness in python-mode? I'm no emacs
>hacker, but it seems like it's the sort of thing that ought to be,
>say, a 10-line fix in some chunk of parsing code somewhere. I could be
>massively wrong though :) If I've got a spare weekend, maybe I'll look
>at it sometime.

There was an urban myth for quite some time that it was not possible to fix this problem given the way that Emacs does syntax highlighting.

However, the new "python.el" that comes with CVS emacs (as opposed to the "python-mode.el" which comes with XEmacs and is distributed by python.org) does not have this problem.  However, it has a few other issues, so it's a "six of one, half dozen of the other" sort of problem.  I think that the new "python.el" is better, but no effort seems to have yet been made to integrate the two efforts.



From mary-twisted at puzzling.org  Mon Mar 27 16:32:14 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 28 Mar 2006 08:32:14 +1100
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
Message-ID: <20060327213214.GH14261@sourdust.home.puzzling.org>

On Mon, Mar 27, 2006, Christopher Armstrong wrote:
> We don't have an actual policy yet on what it takes to get write access
> restricted to sandbox, and branches. We have given access to people on the
> agreement that they only keep their stuff in /branches or /sandbox for a
> while and someone has to review before merging, but this is exactly the
> process we've switched to for everyone now, anyway. It'd still be nice to
> get some access restrictions in place, though.

Is it the case that this should be the default process for everyone and
that something special needs to be done for merging? Andrew might have
already mentioned, but I know that for his project you need to tag
things in your commit message as "r=[reviewer's IRC name]" (or
[trivial]) and that the merging software actually checks this.

We could do something similar, or possibly even stricter where most
"Twisted committers" do not in fact actually have merge capability, only
reviewers do. It depends whether our reviewers are going to be pretty
much all of us who already have access, or some trusted subset.

-Mary

-- 
<skreech> I'm sorry. I forgot that in #twisted, all suggestions are taken seriously.



From radeex at gmail.com  Mon Mar 27 16:38:05 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 27 Mar 2006 16:38:05 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <20060327213214.GH14261@sourdust.home.puzzling.org>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
Message-ID: <60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>

On 3/27/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
>
> We could do something similar, or possibly even stricter where most
> "Twisted committers" do not in fact actually have merge capability, only
> reviewers do. It depends whether our reviewers are going to be pretty
> much all of us who already have access, or some trusted subset.



No, I think that's a big difference between launchpad's model and
Twisted's/Divmod's model. For example, Divmod sometimes has people who
aren't even divmod committers reviewing branches. At the very least, any
committer can review a branch.



--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060327/ff7300d3/attachment.htm 

From itamar at itamarst.org  Mon Mar 27 16:56:58 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 27 Mar 2006 16:56:58 -0500
Subject: [Twisted-Python] Using Combinator without write SVN
	privileges? [was: Re: Branch based development]
In-Reply-To: <60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
Message-ID: <1143496619.9079.49.camel@localhost.localdomain>

On Mon, 2006-03-27 at 16:38 -0500, Christopher Armstrong wrote:
> On 3/27/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
>         We could do something similar, or possibly even stricter where
>         most
>         "Twisted committers" do not in fact actually have merge
>         capability, only
>         reviewers do. It depends whether our reviewers are going to be
>         pretty 
>         much all of us who already have access, or some trusted
>         subset.
> 
> 
> No, I think that's a big difference between launchpad's model and
> Twisted's/Divmod's model. For example, Divmod sometimes has people who
> aren't even divmod committers reviewing branches. At the very least,
> any committer can review a branch. 

I think you're conflating reviewers with people who do merges/commits to
trunk?





From mary-twisted at puzzling.org  Mon Mar 27 17:01:36 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 28 Mar 2006 09:01:36 +1100
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <1143496619.9079.49.camel@localhost.localdomain>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
	<1143496619.9079.49.camel@localhost.localdomain>
Message-ID: <20060327220136.GA28105@sourdust.home.puzzling.org>

On Mon, Mar 27, 2006, Itamar Shtull-Trauring wrote:
> I think you're conflating reviewers with people who do merges/commits to
> trunk?

In the Launchpad model, the reviewers are a small group of people (a
proper subset of committers, actually), and anyone can merge to trunk
(or more specifically, since they use Bazaar, instruct a bot to merge to
trunk) as long as they present a "has been reviewed" token.

But in some alternative model, we could potentially have a really large
group of (potential) reviewers and a small group of people who actually
execute merges. Is there a reason to do that though?

-Mary

-- 
<Tv> thomasvs: why not just talk some authentication protocol to the other host?
<thomasvs> Tv: why use something arcane and difficult when I have THE POWER OF TWISTED ?



From radeex at gmail.com  Mon Mar 27 17:02:31 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 27 Mar 2006 17:02:31 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <1143496619.9079.49.camel@localhost.localdomain>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
	<1143496619.9079.49.camel@localhost.localdomain>
Message-ID: <60ed19d40603271402m2e1c6536oc3537f6f8ce50f0b@mail.gmail.com>

On 3/27/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Mon, 2006-03-27 at 16:38 -0500, Christopher Armstrong wrote:
> > On 3/27/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> >         We could do something similar, or possibly even stricter where
> >         most
> >         "Twisted committers" do not in fact actually have merge
> >         capability, only
> >         reviewers do. It depends whether our reviewers are going to be
> >         pretty
> >         much all of us who already have access, or some trusted
> >         subset.
> >
> >
> > No, I think that's a big difference between launchpad's model and
> > Twisted's/Divmod's model. For example, Divmod sometimes has people who
> > aren't even divmod committers reviewing branches. At the very least,
> > any committer can review a branch.
>
> I think you're conflating reviewers with people who do merges/commits to
> trunk?



Mary said "It depends whether our reviewers are going to be pretty much all
of us who already have access, or some trusted subset.". Reviewers in
Launchpad are a trusted subset. They're not a trusted subset in Twisted. I
guess the Launchpad Reviewers are *also* those who merge (is this true?),
but the difference remains.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060327/fdfbd021/attachment.htm 

From mary-twisted at puzzling.org  Mon Mar 27 17:07:32 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 28 Mar 2006 09:07:32 +1100
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <60ed19d40603271402m2e1c6536oc3537f6f8ce50f0b@mail.gmail.com>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
	<1143496619.9079.49.camel@localhost.localdomain>
	<60ed19d40603271402m2e1c6536oc3537f6f8ce50f0b@mail.gmail.com>
Message-ID: <20060327220732.GC28105@sourdust.home.puzzling.org>

On Mon, Mar 27, 2006, Christopher Armstrong wrote:
> I guess the Launchpad Reviewers are *also* those who merge (is this
> true?), but the difference remains.

No, all committers are also mergers, it's just that they need to say
"approved by a reviewer!" when merging. We don't want all committers to
be mergers, it seems.

-Mary

-- 
<strib> Sorry, I'm just in the middle of a paradigm warp right now.
<dash> strib: welcome to twisted



From glyph at divmod.com  Mon Mar 27 17:31:09 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 17:31:09 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <20060327213214.GH14261@sourdust.home.puzzling.org>
Message-ID: <20060327223109.22481.144225985.divmod.quotient.6301@ohm>



On Tue, 28 Mar 2006 08:32:14 +1100, Mary Gardiner <mary-twisted at puzzling.org> wrote:

>Is it the case that this should be the default process for everyone and
>that something special needs to be done for merging? Andrew might have
>already mentioned, but I know that for his project you need to tag
>things in your commit message as "r=[reviewer's IRC name]" (or
>[trivial]) and that the merging software actually checks this.

I could swear I wrote this down somewhere, but I can't find it now.

The format of commit messages to trunk is supposed to be something like this:

    <one-line summary>

    Author: <author>

    Reviewer: <reviewer>

    Fixes #<ticket number>

    <long description of changes, at least 2 full sentences, mentioning anything user-visible>




From exarkun at divmod.com  Mon Mar 27 17:38:08 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Mar 2006 17:38:08 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <20060327223109.22481.144225985.divmod.quotient.6301@ohm>
Message-ID: <20060327223808.22481.1864291685.divmod.quotient.6304@ohm>

On Mon, 27 Mar 2006 17:31:09 -0500, glyph at divmod.com wrote:
>
>
>On Tue, 28 Mar 2006 08:32:14 +1100, Mary Gardiner <mary- 
>twisted at puzzling.org> wrote:
>>Is it the case that this should be the default process for everyone and
>>that something special needs to be done for merging? Andrew might have
>>already mentioned, but I know that for his project you need to tag
>>things in your commit message as "r=[reviewer's IRC name]" (or
>>[trivial]) and that the merging software actually checks this.
>
>I could swear I wrote this down somewhere, but I can't find it now.

It's partially documented under the _Generate a Meaningful Changelog_ section at <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

>
>The format of commit messages to trunk is supposed to be something like 
>this:
>
>    <one-line summary>
>
>    Author: <author>
>
>    Reviewer: <reviewer>
>
>    Fixes #<ticket number>
>
>    <long description of changes, at least 2 full sentences, mentioning 
>anything user-visible>
>

Jean-Paul



From jmp at TWIN-TOWERS.MIT.EDU  Tue Mar 28 08:52:59 2006
From: jmp at TWIN-TOWERS.MIT.EDU (Justin Mazzola Paluska)
Date: Tue, 28 Mar 2006 08:52:59 -0500
Subject: [Twisted-Python] Nested/Aggregate Exceptions
Message-ID: <20060328135258.GB7270@mit.edu>

Hello,

I'm writing a Twisted application using Twisted 2.0.1 on Mandriva 2006
that uses PerspectiveBroker for communication between modules.  Our
application is based on a centralized Twisted server and web- and
GTK-based client applications that connect to the Twisted server to
manage a user database.  

Up until recently, most of methods exported by the Twisted server are
essentially single-operation functions that operate on a single user
(e.g., "update_user(user, **data)").  As such, exception handling in
the clients is easy: if the operation throws an exception, we know
what operation died and can report a reasonable error to the user
running the client program.

In the most recent version of our server, however, we've decided to
add several aggregate functions to our server that take in multiple
users (e.g., "update_users(users, **data)" where users is a Python
list of user names).  Essentially, these new aggregate functions
repeatedly call their single-operation counterparts multiple times.
Since each call that the aggregate function makes is independent from
other calls, we store away exceptions that get raised and continue
with the other operations.  At the end of the function, if there were
errors, we raise an AggregateException that contains the list of all
exceptions raised by the aggregate function.  This way our clients
know what the specific exceptions and what arguments they failed on.

The problem is, I can't figure out how to pass an AggregateException
across PB.  I know I can probably use pb.CopyableFailure, but my
experiments usually died when I passed non-Failure-subclasses into my
aggregate.  Do the mavens on the list have any suggestions?

Thanks!
	--Justin





From teratorn at twistedmatrix.com  Tue Mar 28 18:42:16 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 29 Mar 2006 09:42:16 +1000
Subject: [Twisted-Python] Nested/Aggregate Exceptions
In-Reply-To: <20060328135258.GB7270@mit.edu>
References: <20060328135258.GB7270@mit.edu>
Message-ID: <op.s65dgqo8y3d107@localhost.localdomain>

Hi

Justin Mazzola Paluska wrote:
[...]
> The problem is, I can't figure out how to pass an AggregateException
> across PB.  I know I can probably use pb.CopyableFailure, but my
> experiments usually died when I passed non-Failure-subclasses into my
> aggregate.  Do the mavens on the list have any suggestions?

I could hazard a few guesses, but it would be better if you provided  
details about what you're trying, what you're expecting to happen, and  
what actually happens.

-Eric



From teratorn at twistedmatrix.com  Tue Mar 28 18:50:25 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 29 Mar 2006 09:50:25 +1000
Subject: [Twisted-Python] Twisted Sponsors
Message-ID: <op.s65dubf6y3d107@localhost.localdomain>

So I'm compiling a web page listing everyone who has donated money,  
hardware, software, hosting, etc to Twisted. You can see the  
work-in-progress here:

http://twistedmatrix.com/trac/wiki/TwistedSponsors

As part of maintaining win32 I would like a place to thank people for all  
the stuff I am about to ask for ;)

I'm probably leaving out a lot of people, so would whoever is in the know  
please response, and we can get a comprehensive list sorted out.

-Eric



From teratorn at twistedmatrix.com  Tue Mar 28 19:14:57 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 29 Mar 2006 10:14:57 +1000
Subject: [Twisted-Python] Call for help! Support Twisted on Microsoft
	Windows!
Message-ID: <op.s65ey7syy3d107@localhost.localdomain>

Hello everyone,

Timothy Fitz (FireMoth) and I are trying to slap some sense in to Windows
and we need your help! We would like to establish a number of Windows
machines accessible to developers over the Internet. As well as provide
additional buildslaves on different Windows platforms.

We're basically asking for donations of hardware, hosting, and software
licenses. Corporate sponsors are welcome!

Please see http://twistedmatrix.com/trac/wiki/Windows for all the details.

Each individual and organisation who helps out will be prominently
recognized on our page listing Twisted sponsors:
http://twistedmatrix.com/trac/wiki/TwistedSponsors

This will be linked off the front page at some point in the near future.

NOTE: Please reply directly to me with offers. I don't want to discourage
anyone from offering help, just because someone else has publicly offered
something similar. I would prefer to get as many things on the table as
possible, and then choose the best way forward.

Thanks very much!
-Eric Mangold



From johann.borck at densedata.com  Tue Mar 28 19:59:53 2006
From: johann.borck at densedata.com (Johann Borck)
Date: Wed, 29 Mar 2006 02:59:53 +0200
Subject: [Twisted-Python] Nested/Aggregate Exceptions
In-Reply-To: <20060328135258.GB7270@mit.edu>
References: <20060328135258.GB7270@mit.edu>
Message-ID: <4429DC09.70203@densedata.com>

Justin Mazzola Paluska wrote:

>Hello,
>
>I'm writing a Twisted application using Twisted 2.0.1 on Mandriva 2006
>that uses PerspectiveBroker for communication between modules.  Our
>application is based on a centralized Twisted server and web- and
>GTK-based client applications that connect to the Twisted server to
>manage a user database.  
>
>Up until recently, most of methods exported by the Twisted server are
>essentially single-operation functions that operate on a single user
>(e.g., "update_user(user, **data)").  As such, exception handling in
>the clients is easy: if the operation throws an exception, we know
>what operation died and can report a reasonable error to the user
>running the client program.
>
>In the most recent version of our server, however, we've decided to
>add several aggregate functions to our server that take in multiple
>users (e.g., "update_users(users, **data)" where users is a Python
>list of user names).  Essentially, these new aggregate functions
>repeatedly call their single-operation counterparts multiple times.
>Since each call that the aggregate function makes is independent from
>other calls, we store away exceptions that get raised and continue
>with the other operations.  At the end of the function, if there were
>errors, we raise an AggregateException that contains the list of all
>exceptions raised by the aggregate function.  This way our clients
>know what the specific exceptions and what arguments they failed on.
>
>The problem is, I can't figure out how to pass an AggregateException
>across PB. 
>
You only want to pass information about what went wrong and how, why do
you have to transmit the exceptions themselves?  Isn't it even more
efficient to just submit the relevant info?  As far as I know PB takes a
set of classes which are allowed to be transmitted, and anything else
including unexpected Exceptions won't be. maybe there's already some
kind of exception-handling in PB, but iirc (though vaguely a phrase in
the docs like) "you have to care about Exceptions yourself".

Johann

> I know I can probably use pb.CopyableFailure, but my
>experiments usually died when I passed non-Failure-subclasses into my
>aggregate.  Do the mavens on the list have any suggestions?
>
>Thanks!
>	--Justin
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From rudy.schockaert at gmail.com  Wed Mar 29 02:43:09 2006
From: rudy.schockaert at gmail.com (Rudy Schockaert)
Date: Wed, 29 Mar 2006 09:43:09 +0200
Subject: [Twisted-Python] Call for help! Support Twisted on Microsoft
	Windows!
In-Reply-To: <op.s65ey7syy3d107@localhost.localdomain>
References: <op.s65ey7syy3d107@localhost.localdomain>
Message-ID: <60987dac0603282343y2f4096e5mf5a6bc11da9d8577@mail.gmail.com>

Hi Eric,

I think you need to add another License on your wish-list: Terminal
Services.

<quote>
A machine to run Win2K3 Server. This will be the primary Windows development
machine for the Twisted community, primarily because it allows multiple
concurrent RDP sessions (XP Pro allows at most two).
</quote>

This is true, but only if you buy the appropriate licenses to run Terminal
Services on Windows.

/Rudy

On 3/29/06, Eric Mangold <teratorn at twistedmatrix.com> wrote:
>
> Hello everyone,
>
> Timothy Fitz (FireMoth) and I are trying to slap some sense in to Windows
> and we need your help! We would like to establish a number of Windows
> machines accessible to developers over the Internet. As well as provide
> additional buildslaves on different Windows platforms.
>
> We're basically asking for donations of hardware, hosting, and software
> licenses. Corporate sponsors are welcome!
>
> Please see http://twistedmatrix.com/trac/wiki/Windows for all the details.
>
> Each individual and organisation who helps out will be prominently
> recognized on our page listing Twisted sponsors:
> http://twistedmatrix.com/trac/wiki/TwistedSponsors
>
> This will be linked off the front page at some point in the near future.
>
> NOTE: Please reply directly to me with offers. I don't want to discourage
> anyone from offering help, just because someone else has publicly offered
> something similar. I would prefer to get as many things on the table as
> possible, and then choose the best way forward.
>
> Thanks very much!
> -Eric Mangold
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



--
It is not economical to go to bed early to save the candles if the result is
twins. - Chinese Proverb
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060329/13983157/attachment.htm 

From ndbecker2 at gmail.com  Wed Mar 29 09:02:12 2006
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 29 Mar 2006 09:02:12 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
Message-ID: <e0e411$obe$1@sea.gmane.org>

There is a big problem with twisted on Fedora/Redhat multiarch.  For
example, x86_64.

The problem is that Fedora puts arch-independent (.py) code into a different
directory than arch-dependent code.

Unfortunately, this doesn't quite work correctly with python's module search
algorithm.

The problem shows up when twisted-sumo is installed.  Then we have:

/usr/lib/python2.4/site-packages/twisted/...
and
/usr/lib64/python2.4/site-packages/twisted/...

This won't work.

I realize the problem is with python module search, but it looks like a big
effort fix the code.  A simpler solution would be for twisted to just avoid
the problem.  If twisted put core c-code into a different place, we could
have:

/usr/lib64/python2.4/site-packages/twisted-core

That would solve the problem.





From itamar at itamarst.org  Wed Mar 29 09:36:19 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Mar 2006 09:36:19 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
In-Reply-To: <e0e411$obe$1@sea.gmane.org>
References: <e0e411$obe$1@sea.gmane.org>
Message-ID: <1143642981.8658.0.camel@localhost.localdomain>

On Wed, 2006-03-29 at 09:02 -0500, Neal Becker wrote:
> There is a big problem with twisted on Fedora/Redhat multiarch.  For
> example, x86_64.
> 
> The problem is that Fedora puts arch-independent (.py) code into a different
> directory than arch-dependent code.
> 
> Unfortunately, this doesn't quite work correctly with python's module search
> algorithm.

This sounds like a problem in Fedora, not Twisted. As a workaround, you
could install Twisted twice, once w/32bit and once with 64bit python?




From exarkun at divmod.com  Wed Mar 29 09:42:48 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Mar 2006 09:42:48 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
In-Reply-To: <e0e411$obe$1@sea.gmane.org>
Message-ID: <20060329144248.22481.81197549.divmod.quotient.7232@ohm>

On Wed, 29 Mar 2006 09:02:12 -0500, Neal Becker <ndbecker2 at gmail.com> wrote:
>There is a big problem with twisted on Fedora/Redhat multiarch.  For
>example, x86_64.
>
>The problem is that Fedora puts arch-independent (.py) code into a different
>directory than arch-dependent code.
>
>Unfortunately, this doesn't quite work correctly with python's module search
>algorithm.
>
>The problem shows up when twisted-sumo is installed.  Then we have:
>
>/usr/lib/python2.4/site-packages/twisted/...
>and
>/usr/lib64/python2.4/site-packages/twisted/...
>
>This won't work.
>
>I realize the problem is with python module search, but it looks like a big
>effort fix the code.  A simpler solution would be for twisted to just avoid
>the problem.  If twisted put core c-code into a different place, we could
>have:
>
>/usr/lib64/python2.4/site-packages/twisted-core
>
>That would solve the problem.
>

You could just delete the /usr/lib64 twisted package, which I am guessing is almost entirely empty.  Unless you're interested in twisted.runner, none of the extension modules are actually required.

Jean-Paul



From exarkun at divmod.com  Wed Mar 29 09:46:58 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Mar 2006 09:46:58 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
 wrapped in a CGIDirectory resource actually execute
In-Reply-To: <E1FOTF3-0005gV-00@wolfwood>
Message-ID: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>

On Tue, 28 Mar 2006 22:29:13 -0700, David Reid <dreid at wolfwood.twistedmatrix.com> wrote:
>Author: dreid
>Date: Tue Mar 28 22:29:11 2006
>New Revision: 16495
>
>Modified:
>   branches/childNotFound-1596/twisted/web2/test/test_cgi.py
>Log:
>test that scripts wrapped in a CGIDirectory resource actually execute
>
>Modified: branches/childNotFound-1596/twisted/web2/test/test_cgi.py
>==============================================================================
>--- branches/childNotFound-1596/twisted/web2/test/test_cgi.py	(original)
>+++ branches/childNotFound-1596/twisted/web2/test/test_cgi.py	Tue Mar 28 22:29:11 2006
>@@ -161,7 +161,7 @@
>
>         self.failUnless(isinstance(resource, (twcgi.CGIScript,)))
>
>-    def testAnotherDirectory(self):
>+    def testSubDirectory(self):
>         resource, segments = self.root.locateChild(None, ('directory',
>                                                           'paths',
>                                                           'that',
>@@ -170,4 +170,46 @@
>
>         self.failUnless(isinstance(resource, twcgi.CGIDirectory))
>
>-
>+    def createScript(self, filename):
>+	cgiFile = open(filename, 'wt')
>+	cgiFile.write("#!%s\n\n%s" % (sys.executable,
>+				      DUMMY_CGI))
>+	cgiFile.close()
>+	os.chmod(filename, 0700)
>+
>+    def testScriptsExecute(self):
>+	cgiBinDir = os.path.abspath(self.mktemp())
>+	os.mkdir(cgiBinDir)
>+	root = twcgi.CGIDirectory(cgiBinDir)
>+
>+        self.createScript(os.path.join(cgiBinDir, 'dummy'))
>+
>+	cgiSubDir = os.path.join(cgiBinDir, 'sub')
>+	os.mkdir(cgiSubDir)
>+
>+	self.createScript(os.path.join(cgiSubDir, 'dummy'))
>+
>+	self.p = reactor.listenTCP(0, channel.HTTPFactory(server.Site(root)))
>+	portnum = self.p.getHost().port
>+
>+	def _firstResponse(res):
>+	    self.failUnlessEqual(res, "cgi output%s" % os.linesep)
>+
>+	    return client.getPage('http://localhost:%d/sub/dummy' % portnum)
>+
>+	def _secondResponse(res):
>+	    self.failUnlessEqual(res, "cgi output%s" % os.linesep)
>+
>+	def _cleanup(res):
>+	    d = self.p.stopListening()
>+	    d.addCallback(lambda ign: res)
>+	    return d
>+
>+	d = client.getPage('http://localhost:%d/dummy' % portnum)
>+
>+	d.addCallback(_firstResponse
>+        ).addCallback(_secondResponse
>+	).addBoth(_cleanup)
>+
>+	return d
>+    testScriptsExecute.timeout=10
>

Tabs?

Jean-Paul



From foom at fuhm.net  Wed Mar 29 11:04:41 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 29 Mar 2006 11:04:41 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
In-Reply-To: <e0e411$obe$1@sea.gmane.org>
References: <e0e411$obe$1@sea.gmane.org>
Message-ID: <590D4CF9-1C22-4657-BEC7-9A364F7D193D@fuhm.net>


On Mar 29, 2006, at 9:02 AM, Neal Becker wrote:

> There is a big problem with twisted on Fedora/Redhat multiarch.  For
> example, x86_64.
>
> The problem is that Fedora puts arch-independent (.py) code into a  
> different
> directory than arch-dependent code.
>
> Unfortunately, this doesn't quite work correctly with python's  
> module search
> algorithm.
[...]
> I realize the problem is with python module search, but it looks  
> like a big
> effort fix the code.

In the thread on python-dev, I thought I saw a simple enough solution:

On Mar 17, 2006, at 4:03 PM, Martin v. L?wis wrote:
> Neal Becker wrote:
>> Sorry, maybe I used confusing terminology.
>>
>> A reference is here: http://fedoraproject.org/wiki/Packaging/Python
>> This is the current setup.  For example, this is a standard macro  
>> used by
>> Redhat in RPM SPEC files for python:
>>
>> %define python_sitearch %(%{__python} -c "from distutils.sysconfig  
>> import
>> get_python_lib; print get_python_lib(1)")}
>>
>> %define python_sitelib %(%{__python} -c "from distutils.sysconfig  
>> import
>> get_python_lib; print get_python_lib()")}
>>
>> Clearly this practice is widespread.  It would seem that module  
>> search needs
>> some modification to fully support it.
>
> Ah. That isn't supported at all, at the moment. Redhat should not be
> using it. Instead, there shouldn't be a difference between sitearch  
> and
> sitelib.


In any case, I don't see why twisted should do anything to fix this  
problem, it's for either Fedora or Python to fix.

James


From ndbecker2 at gmail.com  Wed Mar 29 11:02:37 2006
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 29 Mar 2006 11:02:37 -0500
Subject: [Twisted-Python] Resolved?: twisted-2 won't work with Fedora
References: <e0e411$obe$1@sea.gmane.org>
Message-ID: <e0eb2q$m86$1@sea.gmane.org>

I found that this will workaround:

sudo python setup.py all install --install-lib=/usr/lib64/python2.4/site-packages






From corydodt at twistedmatrix.com  Wed Mar 29 12:18:53 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 29 Mar 2006 09:18:53 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
	wrapped in a CGIDirectory resource actually execute
In-Reply-To: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
Message-ID: <442AC17D.1020309@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

For general discussion, I have attached a pre-commit hook that rejects commits
of .py files containing leading tabs on any line.  It does not do anything to
files not ending in .py.  It does check for tabs mixed with spaces.  It
ignores tabs occurring anywhere but the leading whitespace.  Here's the regex:

_tabs = re.compile(r'^\s*\t\s*.*$')

I have used this, albeit lightly.

C

Jean-Paul Calderone wrote:
>>
> 
> Tabs?
> 


====
#!/usr/bin/env python
"""This is a pre-commit hook that checks whether py files being committed
contain tabs in their significant whitespace.
TODO?: check for a file property that says to ignore the significant tabs,
in cases where they're actually needed (although I can't think of any).
"""
import sys
import re

from svn import core, fs, delta, repos

_tabs = re.compile(r'^\s*\t\s*.*$')

class ChangeReceiver(delta.Editor):
    def __init__(self, txn_root, base_root, pool):
        self.txn_root = txn_root
        self.base_root = base_root
        self.pool = pool

    def add_file(self, path, parent_baton,
                 copyfrom_path, copyfrom_revision, file_pool):
        return [0, path]

    def open_file(self, path, parent_baton, base_revision, file_pool):
        return [0, path]

    def apply_textdelta(self, file_baton, base_checksum):
        file_baton[0] = 1
        # no handler
        return None

    def close_file(self, file_baton, text_checksum):
        changed, path = file_baton
        if len(path) < 3 or path.lower()[-3:] != '.py' or not changed:
            # This is not a .py file, don't care about tabs
            # TODO - only look inside trunk
            return

        # Read the file contents through a tab-finder
        subpool = core.svn_pool_create(self.pool)

        stream = core.Stream(fs.file_contents(self.txn_root, path, subpool))

        data = stream.read()  # core.SVN_STREAM_CHUNK_SIZE)
        for line in data.splitlines():
            if _tabs.match(line):
                core.svn_pool_destroy(subpool)
                msg = ("Python file contains lines that begin with tabs: '%s'\n"
                       "There may be others as well." % (path,))
                sys.stderr.write(msg)
                sys.exit(1)

        core.svn_pool_destroy(subpool)

def check_tabs(pool, repos_path, txn):
    def authz_cb(root, path, pool):
        return 1

    fs_ptr = repos.svn_repos_fs(repos.svn_repos_open(repos_path, pool))
    txn_ptr = fs.open_txn(fs_ptr, txn, pool)
    txn_root = fs.txn_root(txn_ptr, pool)
    base_root = fs.revision_root(fs_ptr, fs.txn_base_revision(txn_ptr), pool)
    editor = ChangeReceiver(txn_root, base_root, pool)
    e_ptr, e_baton = delta.make_editor(editor, pool)
    repos.svn_repos_dir_delta(base_root, '', '', txn_root, '',
                              e_ptr, e_baton, authz_cb, 0, 1, 0, 0, pool)


if __name__ == '__main__':
    assert len(sys.argv) == 3
    core.run_app(check_tabs, sys.argv[1], sys.argv[2])

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEKsF93A5SrXAiHQcRAtG2AJ9FJHBr8T7MD6MUpxx85y3T12QBKACeJqXB
CxzYXpGospuBh7PUqQ1pYLk=
=36Ya
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Wed Mar 29 12:35:03 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 29 Mar 2006 09:35:03 -0800
Subject: anti-tab thing, Re: [Twisted-Python] Re: [Twisted-commits] r16495
In-Reply-To: <442AC17D.1020309@twistedmatrix.com>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
	<442AC17D.1020309@twistedmatrix.com>
Message-ID: <442AC547.7060307@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

In case you've never encountered a pre-commit hook, here's a sample of the
effects:

  cory ~/wc/vellum% echo '        ' > foo.py
  cory ~/wc/vellum% svn add foo.py
  A         foo.py
  cory ~/wc/vellum% svn ci -m "i did not read the coding standard" foo.py
  Adding         foo.py
  Transmitting file data .svn: Commit failed (details follow):
  svn: 'pre-commit' hook failed with error output:
  Python file contains lines that begin with tabs: 'trunk/foo.py'
  There may be others as well.

If Twisted wanted to adopt this, I would suggest adding a link to the coding
standard in this message, or something.

C



Cory Dodt wrote:
> For general discussion, I have attached a pre-commit hook that rejects commits
> of .py files containing leading tabs on any line.  It does not do anything to
> files not ending in .py.  It does check for tabs mixed with spaces.  It
> ignores tabs occurring anywhere but the leading whitespace.  Here's the regex:
> 
> _tabs = re.compile(r'^\s*\t\s*.*$')
> 
> I have used this, albeit lightly.
> 
> C
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEKsVH3A5SrXAiHQcRAgwkAJoDMNtUGzCt7An+vkv9JjhwEC88bACbB0Ys
X7LTPtokm3F/GYZsgi5+2Es=
=vuCz
-----END PGP SIGNATURE-----



From dreid at dreid.org  Wed Mar 29 14:29:42 2006
From: dreid at dreid.org (David Reid)
Date: Wed, 29 Mar 2006 11:29:42 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
	wrapped in a CGIDirectory resource actually execute
In-Reply-To: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
Message-ID: <442AE026.7080700@dreid.org>

Jean-Paul Calderone wrote:
> Tabs?

Yes, it's a new Emacs install, and Carbon Emacs still seems to ignore 
indent-tabs-mode unless it's set by customize, it's been fixed, I'll 
untabify and commit a little later today.

- David



From nico at tekNico.net  Thu Mar 30 02:58:22 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 30 Mar 2006 09:58:22 +0200
Subject: [Twisted-Python] Why does Selenium need Twisted 1.3?
Message-ID: <442B8F9E.9060107@tekNico.net>

"Download and install Twisted version 1.3 (this is important, because
things have been known not to work so well with Twisted 2.x)."

Running the Selenium Twisted server on Linux
http://agiletesting.blogspot.com/2006/03/running-selenium-twisted-server-on.html

Uh?

-- 
Nicola Larosa - http://www.tekNico.net/

The first markets were markets. Not bulls, bears, or invisible hands.
Not battlefields, targets, or arenas. Not demographics, eyeballs,
or seats. Most of all, not consumers. -- Cluetrain




From teratorn at twistedmatrix.com  Thu Mar 30 06:57:23 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Thu, 30 Mar 2006 21:57:23 +1000
Subject: [Twisted-Python] Why does Selenium need Twisted 1.3?
In-Reply-To: <442B8F9E.9060107@tekNico.net>
References: <442B8F9E.9060107@tekNico.net>
Message-ID: <op.s6755xk0y3d107@localhost.localdomain>

On Thu, 30 Mar 2006 17:58:22 +1000, Nicola Larosa <nico at tekNico.net> wrote:

> "Download and install Twisted version 1.3 (this is important, because
> things have been known not to work so well with Twisted 2.x)."
>
> Running the Selenium Twisted server on Linux
> http://agiletesting.blogspot.com/2006/03/running-selenium-twisted-server-on.html
>
> Uh?

Ask them?

-Eric



From jml at mumak.net  Thu Mar 30 07:20:12 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 30 Mar 2006 22:20:12 +1000
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
References: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>
	<20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <d06a5cd30603300420o5a218a97w11f5ef4625be43f1@mail.gmail.com>

On 3/15/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> Unless anyone can present a compelling case to the contrary, I think that as of now we should "officially" switch to the development procedures described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

I doubt this is a compelling case, but here we go.

I find that strict branch-based development greatly decreases the
likelihood that I will fix more than one bug in a day. This means that
its likely that I'll max out at about one bug a week.

I presume that the way to fix many different bugs is to branch from
trunk, fix first bug then wait for review. While waiting, branch again
from trunk, fix second bug then wait for review and so on. If there is
a better way, let me know.

To do this requires a context switching that is difficult for me. I
find it unpleasant to work on code which has a bug in it that I've
already fixed. The bigger the changes, the more difficult it becomes.
I'm not opposing branch-based development. This is my sole problem
with it.

As a side point, if we have switched to strict branch-based
development, then we should document the procedure on the Twisted web
site, not on the Divmod web site.

jml



From nico at tekNico.net  Thu Mar 30 07:39:25 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 30 Mar 2006 14:39:25 +0200
Subject: [Twisted-Python] Re: Why does Selenium need Twisted 1.3?
In-Reply-To: <op.s6755xk0y3d107@localhost.localdomain>
References: <442B8F9E.9060107@tekNico.net>
	<op.s6755xk0y3d107@localhost.localdomain>
Message-ID: <442BD17D.3040706@tekNico.net>

>> "Download and install Twisted version 1.3 (this is important, because
>> things have been known not to work so well with Twisted 2.x)."
>>
>> Running the Selenium Twisted server on Linux
>> http://agiletesting.blogspot.com/2006/03/running-selenium-twisted-server-on.html
>>
>> Uh?

> Ask them?

Yes, I Cc:ed the article author, but should have gone to their mailing list
instead... done.

I posted here because I thought somebody could be interested in a somewhat
disfuncional situation involving Twisted and an important Twisted-based
acceptance test tool.

-- 
Nicola Larosa - http://www.tekNico.net/

The first markets were markets. Not bulls, bears, or invisible hands.
Not battlefields, targets, or arenas. Not demographics, eyeballs,
or seats. Most of all, not consumers. -- Cluetrain




From foom at fuhm.net  Thu Mar 30 12:36:27 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu, 30 Mar 2006 12:36:27 -0500
Subject: [Twisted-Python] Re: Why does Selenium need Twisted 1.3?
In-Reply-To: <442BD17D.3040706@tekNico.net>
References: <442B8F9E.9060107@tekNico.net>
	<op.s6755xk0y3d107@localhost.localdomain>
	<442BD17D.3040706@tekNico.net>
Message-ID: <2229278A-1E0E-432C-8182-778E9D772136@fuhm.net>


On Mar 30, 2006, at 7:39 AM, Nicola Larosa wrote:

>>> "Download and install Twisted version 1.3 (this is important,  
>>> because
>>> things have been known not to work so well with Twisted 2.x)."
>>>
>>> Running the Selenium Twisted server on Linux
>>> http://agiletesting.blogspot.com/2006/03/running-selenium-twisted- 
>>> server-on.html
>>>
>>> Uh?
>
>> Ask them?
>
> Yes, I Cc:ed the article author, but should have gone to their  
> mailing list
> instead... done.
>
> I posted here because I thought somebody could be interested in a  
> somewhat
> disfuncional situation involving Twisted and an important Twisted- 
> based
> acceptance test tool.

As far as I know they have not approached us with any specific  
problems with later versions of Twisted nor help with some issue  
converting their code to be compatible with later versions.

James



From glyph at divmod.com  Thu Mar 30 23:42:56 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 30 Mar 2006 23:42:56 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <d06a5cd30603300420o5a218a97w11f5ef4625be43f1@mail.gmail.com>
Message-ID: <20060331044256.22481.299464125.divmod.quotient.8157@ohm>

On Thu, 30 Mar 2006 22:20:12 +1000, Jonathan Lange <jml at mumak.net> wrote:

>I presume that the way to fix many different bugs is to branch from
>trunk, fix first bug then wait for review. While waiting, branch again
>from trunk, fix second bug then wait for review and so on. If there is
>a better way, let me know.

It is perfectly acceptable to resolve multiple tickets with one review cycle.

If you are going to work for only a few hours, and close multiple tickets, the tickets are probably not big enough to each require their own branch, or their own individual review.  Feel free to reassign and resolve en-masse.

The only reason this practice is not already documented (and more strongly recommended) is that it isn't good to mix multiple tickets together in one branch or one patch if the reviewer is likely to agree with the code for resolving some tickets, but not others.  In some cases, this is unavoidable, because the same code needs to change for two issues; in still others, if the reviewer is unlikely to require major changes, and will be able to review all the changes in a reasonable amount of time, there's no particular reason not to bundle them together -- and convenience of limited-time development is a good reason *to* bundle them together.

Still - remember to write a descriptive commit message for each ticket being resolved when you merge to trunk :).

>As a side point, if we have switched to strict branch-based
>development, then we should document the procedure on the Twisted web
>site, not on the Divmod web site.

At the very least, there should be a link on the Twisted website, on a page explaining how we do development.

I think that "branch-based development" is a crummy name for this process, since it isn't very exciting and it's really about tickets, reviews, and changesets, not branches -- branches are an implementation detail to allow developers to continue to use the VCS as a file server.  I think I am going to change the name to "ultimate quality development system" and then we can abbreviate it "UQDS".



From radeex at gmail.com  Fri Mar 31 08:14:00 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 31 Mar 2006 08:14:00 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060331044256.22481.299464125.divmod.quotient.8157@ohm>
References: <d06a5cd30603300420o5a218a97w11f5ef4625be43f1@mail.gmail.com>
	<20060331044256.22481.299464125.divmod.quotient.8157@ohm>
Message-ID: <60ed19d40603310514u32420e66lc5a85fc276fd74ef@mail.gmail.com>

On 3/30/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
> At the very least, there should be a link on the Twisted website, on a
> page explaining how we do development.



It's been there since a few days ago, FYI:
http://twistedmatrix.com/trac/wiki/TwistedDevelopment



--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060331/83621a3f/attachment.htm 

From zooko at zooko.com  Fri Mar 31 08:30:42 2006
From: zooko at zooko.com (zooko at zooko.com)
Date: Fri, 31 Mar 2006 09:30:42 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
	wrapped in a CGIDirectory resource actually execute
In-Reply-To: <442AC17D.1020309@twistedmatrix.com>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
	<442AC17D.1020309@twistedmatrix.com>
Message-ID: <20060331133043.37A87CC8@yumyum.zooko.com>


See also tabnanny.py and reindent.py, included with Python.

Regards,

Zooko



From lucaberto at libero.it  Wed Mar  1 02:01:05 2006
From: lucaberto at libero.it (lucaberto at libero.it)
Date: Wed,  1 Mar 2006 10:01:05 +0100
Subject: [Twisted-Python] Com Port
Message-ID: <IVFYDT$948B30767F0C1A8BD810ED4AD578F03E@libero.it>

Hello i have some problem with pyserial.
In one forum peoples said the with twisted serial i can solve this problem.
Can you help me to configure the port as show below:

data baud = 38400
parity= odd
byte delay= 40000
rec timeout = 200
stop bit= 2
serial control line:
dtr = high
rts= low

toggle this line for a reset:

rts. 

and also were i can find some sample of twisted and serial communication

Thanks Luca





From sc at linux.it  Wed Mar  1 08:49:34 2006
From: sc at linux.it (Stefano Canepa)
Date: Wed, 01 Mar 2006 16:49:34 +0100
Subject: [Twisted-Python] Com Port
In-Reply-To: <IVFYDT$948B30767F0C1A8BD810ED4AD578F03E@libero.it>
References: <IVFYDT$948B30767F0C1A8BD810ED4AD578F03E@libero.it>
Message-ID: <1141228174.6746.24.camel@localhost.localdomain>

Il giorno mer, 01/03/2006 alle 10.01 +0100, lucaberto at libero.it ha
scritto:
> Hello i have some problem with pyserial.
> In one forum peoples said the with twisted serial i can solve this problem.
> Can you help me to configure the port as show below:
> 
> data baud = 38400
> parity= odd
> byte delay= 40000
> rec timeout = 200
> stop bit= 2
> serial control line:
> dtr = high
> rts= low
> 
> toggle this line for a reset:
> 
> rts. 
> 
> and also were i can find some sample of twisted and serial communication
> 
Luca,
	you can check out twisted from its subversion repository the go to the
doc/core/examples directory and take a look at gpsfix.py and mouse.py.
Just one little note serialport uses pyserial so I think that if do not
want to use twisted just try to figure out how pyserial work.

Ciao
Stefano

-- 
Stefano Canepa aka sc: sc at linux.it  http://www.stefanocanepa.it
Three great virtues of a programmer: laziness, impatience and hubris.
Le tre grandi virtù di un programmatore: pigrizia, impazienza e
arroganza. (Larry Wall)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20060301/2713a33e/attachment.sig>

From itamar at itamarst.org  Wed Mar  1 09:22:49 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 01 Mar 2006 11:22:49 -0500
Subject: [Twisted-Python] Twisted & SOAP
In-Reply-To: <4404D15C.3020802@reticulatus.plus.com>
References: <4404D15C.3020802@reticulatus.plus.com>
Message-ID: <1141230169.9119.1.camel@localhost.localdomain>

On Tue, 2006-02-28 at 22:40 +0000, Richard Townsend wrote:

> "Any objection to our diabolical plan to integrate
> wstools into ZSI and shove SOAPpy to a second class status? We'd like to
> converge on a single python web services solution, but we're working hard to
> make sure SOAPpy users can do in ZSI what they can do in SOAPpy..."
> 
> What effect will this development have on support for SOAP in Twisted?

twisted-web mailing list is probably right place for this question, but
since I'm not subscribed there -

I've not really been maintaining twisted.web.soap anyway; SOAPpy kept
changing basic APIs for parsing SOAP queries, and it was annoying to
keep up with. If it works maybe that means they finally stabilized. I
suggest opening a bug in the tracker for ZSI support for web2. XML-RPC
should be going in sometime soon so you can look at it for inspiration
if you want to implement it yourself.




From mary-twisted at puzzling.org  Wed Mar  1 16:10:33 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 2 Mar 2006 10:10:33 +1100
Subject: [Twisted-Python] A doc sprint... but first, a challenge
Message-ID: <20060301231033.GA27513@home.puzzling.org>

Feedback on my last (fairly unsuccessful) doc sprint was that reviewing
the documentation was a good idea and would provide a good *basis* for a
sprint but wasn't a great sprint in and of itself because it's not
collaborative.

However...

Since then no one has contributed documentation reviews, collaborative
or not. So we're not yet building our good basis for a sprint.

Therefore, a challenge. There are currently 4 reviews on
http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList .
When that number of reviews reachs 14 (ie, 10 more), I will schedule and
run a doc sprint day for us. I will do 2 and I know Andrew Bennetts has
one more in the works, so that leaves a grand total of 7 reviews for
other people to do before I hold a sprint. That's like 0.00001 reviews
per whine about our documentation over the lifetime of the Twisted
project!

Instructions on how to review the documentation are at
http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList .
You can also ask me questions by posting a response to this very mailing
list, or joining #twisted-docs on irc.freenode.net where I'll be
whenever I'm, well, at a computer.

-Mary

-- 
<Rainy-Day> no? jesus was like, love thy neighbour and shit



From jml at mumak.net  Wed Mar  1 16:19:21 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Mar 2006 10:19:21 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
Message-ID: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>

Hello,

Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
on 8th March (UTC+11). The topic of discussion is: how to improve the
Trial documentation.

Please come along, share your suggestions and help us write the documents.

Even if you are totally uninterested, come along anyway to show your
support of task-oriented, real-time, explicit collaboration within the
Twisted community.

cheers,
jml



From mary-twisted at puzzling.org  Wed Mar  1 16:45:37 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 2 Mar 2006 10:45:37 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <20060301234537.GB27513@home.puzzling.org>

On Thu, Mar 02, 2006, Jonathan Lange wrote:
> Hello,
> 
> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

For matching times around the world: http://tinyurl.com/fobak

-Mary

-- 
<slyphon> YAY SEGFAULTING!
* PenguinOfDoom is continually amazed at how a segfault is such a joyful occurence for Python programmers.
<itamar> PenguinOfDoom: it is somewhat like seeing someone levitating and then kicking you in the face
<itamar> it hurts, but at the same time you are distracted by the violation of your concept of reality



From rudy at goldenhelix.com  Wed Mar  1 17:34:43 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Wed, 1 Mar 2006 17:34:43 -0700
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <200603011734.44441.rudy@goldenhelix.com>


> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

UTC+11? where are you guys at? Australia?

I'd love to show up and support but that'd be 11PM my time (UTC-7) and I can't 
predict my late night hacking sessions that far in advance :)

--gabe



From jml at mumak.net  Wed Mar  1 17:38:38 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Mar 2006 11:38:38 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <200603011734.44441.rudy@goldenhelix.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<200603011734.44441.rudy@goldenhelix.com>
Message-ID: <d06a5cd30603011638x75961a7ahd45620212316be38@mail.gmail.com>

On 3/2/06, Gabe Rudy <rudy at goldenhelix.com> wrote:
>
> > Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> > on 8th March (UTC+11). The topic of discussion is: how to improve the
> > Trial documentation.
>
> UTC+11? where are you guys at? Australia?

Yes.

> I'd love to show up and support but that'd be 11PM my time (UTC-7) and I can't
> predict my late night hacking sessions that far in advance :)
>

Well, it'll be good to see you there if you make it. If you can't,
please email thoughts on documentation to the list.

jml



From mary-twisted at puzzling.org  Wed Mar  1 17:42:16 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 2 Mar 2006 11:42:16 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <200603011734.44441.rudy@goldenhelix.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<200603011734.44441.rudy@goldenhelix.com>
Message-ID: <20060302004216.GE27513@home.puzzling.org>

On Wed, Mar 01, 2006, Gabe Rudy wrote:
> UTC+11? where are you guys at? Australia?

Yes.

> I'd love to show up and support but that'd be 11PM my time (UTC-7) and
> I can't predict my late night hacking sessions that far in advance :)

For bigger discussions of the kind, or for sprints, we would try and
time them convieniently for as many attendees as possible, but in this
case there are two main interested parties and we happen to live in the
same timezone, so we have arranged things for maximum convienience to
ourselves.

Suggestions are welcome prior to the discussion on either ticket 1400
[1] or via the documentation analysis thing [2].

-Mary

[1] http://twistedmatrix.com/trac/ticket/1400
[2] http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList

-- 
<itamar> you know what causes most evilness? the WEB



From jml at mumak.net  Wed Mar  1 17:45:22 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 2 Mar 2006 11:45:22 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060302004216.GE27513@home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<200603011734.44441.rudy@goldenhelix.com>
	<20060302004216.GE27513@home.puzzling.org>
Message-ID: <d06a5cd30603011645t3a8154c0u3240d91712e00cbd@mail.gmail.com>

Disregard my post in favour of this one :)

On 3/2/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Wed, Mar 01, 2006, Gabe Rudy wrote:
> > UTC+11? where are you guys at? Australia?
>
> Yes.
>
> > I'd love to show up and support but that'd be 11PM my time (UTC-7) and
> > I can't predict my late night hacking sessions that far in advance :)
>
> For bigger discussions of the kind, or for sprints, we would try and
> time them convieniently for as many attendees as possible, but in this
> case there are two main interested parties and we happen to live in the
> same timezone, so we have arranged things for maximum convienience to
> ourselves.
>
> Suggestions are welcome prior to the discussion on either ticket 1400
> [1] or via the documentation analysis thing [2].
>
> -Mary
>
> [1] http://twistedmatrix.com/trac/ticket/1400
> [2] http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList
>
> --
> <itamar> you know what causes most evilness? the WEB
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mustafa at liqia.com  Thu Mar  2 06:43:30 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Thu, 02 Mar 2006 15:43:30 +0200
Subject: [Twisted-Python] QtReactor problem with Modal Dialogs (Twisted 2.x)
Message-ID: <4406F682.5040403@liqia.com>

I am using a pb client and a pb server. My client uses the twisted's 
qtreactor. Since twisted 2.0, modal dialogs causes "connection lost" and 
I couldn't overcome this problem for months. I tested this behaviour in 
twisted 1.3, 2.0, 2.1 and finally 2.2.

When I use twisted 1.3, no problem occurs, the other versions all causes 
the same error. I am posting the traceback and a small sample server and 
a qt client which imitates the problem I have.

Any help is greatly appreciated.
Thanks,

Musti



--------------------------------------------------------

Traceback (most recent call last):
  File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", 
line 294, in _startRunCallbacks
    self._runCallbacks()
  File "/usr/lib/python2.4/site-packages/twisted/internet/defer.py", 
line 307, in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "qttestclient.py", line 39, in success
    return self.openModalDialog(None)
  File "qttestclient.py", line 56, in openModalDialog
    return dialog.exec_loop()
--- <exception caught here> ---
  File "/usr/lib/python2.4/site-packages/twisted/internet/qtreactor.py", 
line 60, in read
    why = w.doRead()
  File "/usr/lib/python2.4/site-packages/twisted/internet/tcp.py", line 
349, in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line 
173, in dataReceived
    gotItem(self.incomingVocabulary[num])
  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line 
114, in gotItem
    self.callExpressionReceived(item)
  File "/usr/lib/python2.4/site-packages/twisted/spread/banana.py", line 
81, in callExpressionReceived
    self.expressionReceived(obj)
  File "/usr/lib/python2.4/site-packages/twisted/spread/pb.py", line 
567, in expressionReceived
    raise ProtocolError("Non-list expression received.")
twisted.spread.pb.ProtocolError: Non-list expression received.
error received: [Failure instance: Traceback (failure with no frames): 
twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback 
(failure with no frames): twisted.spread.pb.ProtocolError: Non-list 
expression received.
]
]
Lost: Non-list expression received.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: qttestclient.py
Type: application/x-python
Size: 1897 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060302/4ecf66f7/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testserver.py
Type: application/x-python
Size: 1034 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060302/4ecf66f7/attachment-0005.bin>

From itamar at itamarst.org  Thu Mar  2 09:04:59 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 02 Mar 2006 11:04:59 -0500
Subject: [Twisted-Python] QtReactor problem with Modal Dialogs (Twisted
	2.x)
In-Reply-To: <4406F682.5040403@liqia.com>
References: <4406F682.5040403@liqia.com>
Message-ID: <1141315499.9222.0.camel@localhost.localdomain>

Hi, 

Thanks for the bug report; could you add this to our issue tracker?




From mustafa at liqia.com  Thu Mar  2 09:51:50 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Thu, 02 Mar 2006 18:51:50 +0200
Subject: [Twisted-Python] QtReactor problem with Modal Dialogs (Twisted
	2.x)
In-Reply-To: <1141315499.9222.0.camel@localhost.localdomain>
References: <4406F682.5040403@liqia.com>
	<1141315499.9222.0.camel@localhost.localdomain>
Message-ID: <440722A6.40102@liqia.com>

OK, I created a ticket with ID #1531.

Thanks,

Musti

Itamar Shtull-Trauring wrote:
> Hi, 
>
> Thanks for the bug report; could you add this to our issue tracker?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From golux at comcast.net  Thu Mar  2 22:22:25 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 03 Mar 2006 00:22:25 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16149 - first complete
 draft of documentation, 
 one example module, and make some changes to tap.py so that things actually
 work as	documented.
In-Reply-To: <E1FF22S-0003Up-00@wolfwood>
References: <E1FF22S-0003Up-00@wolfwood>
Message-ID: <4407D291.30902@comcast.net>

David Reid wrote:
> +      ... Web2 makes use of TAP plugins, created by the mktap
> +      commandline utility.  This document outlines a few of the
> +      approaches for creating, configuring, and deploying a Twisted.Web2
> +      with mktap.</p>

Eh?  I must have missed something (not unusual) -- I thought
taps were going away ... are they coming back now?

Steve



From mwh at python.net  Fri Mar  3 02:50:39 2006
From: mwh at python.net (Michael Hudson)
Date: Fri, 03 Mar 2006 09:50:39 +0000
Subject: [Twisted-Python] Re: Twisted Website
References: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>
Message-ID: <2m8xrr6emo.fsf@starship.python.net>

Jean-Paul Calderone <exarkun at divmod.com> writes:

>   * Epydoc has been replaced by docextractor (to be renamed).  

Huh?  I admit I put about two seconds of thought so far into the
project name, but I still think I get to name my own projects :)

> Since we have so much documentation using epytext markup, we will
> likely continue to use that markup style.

It would be nice if more docstrings were actually in epytext rather
than something that looks a bit like it (around 400 errors in twisted
svn head, and that's after being nicer about indentation than epydoc
itself seems to be).

> API documentation emitted by docextractor is currently up on the
> website at the URL previously occupied by epydoc's output.  The
> docextractor markup is currently very rough. 

As you (JP) now know, it's a bit prettier already, though the version
on tm.com isn't yet.

> Patches are, as always, welcome ;) You will find the source at
> <http://codespeak.net/svn/user/mwh/docextractor/trunk>.

Currently I'm finding new and exciting ways to make pickle crap itself
:/

Cheers,
mwh

-- 
  It is time-consuming to produce high-quality software. However,
  that should not alone be a reason to give up the high standards
  of Python development.              -- Martin von Loewis, python-dev




From exarkun at divmod.com  Fri Mar  3 07:08:37 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Mar 2006 09:08:37 -0500
Subject: [Twisted-Python] Re: Twisted Website
In-Reply-To: <2m8xrr6emo.fsf@starship.python.net>
Message-ID: <20060303140837.6122.1892915094.divmod.quotient.12718@ohm>

n Fri, 03 Mar 2006 09:50:39 +0000, Michael Hudson <mwh at python.net> wrote:
>Jean-Paul Calderone <exarkun at divmod.com> writes:
>
>>   * Epydoc has been replaced by docextractor (to be renamed).
>
>Huh?  I admit I put about two seconds of thought so far into the
>project name, but I still think I get to name my own projects :)

Ahh, I' blame radix.  I think he said something about you trying to come up with a different name.

Jean-Paul



From itamar at itamarst.org  Fri Mar  3 08:36:09 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 03 Mar 2006 10:36:09 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16149 - first complete
	draft of documentation,  one example module, and make some changes to
	tap.py so that things actually work as	documented.
In-Reply-To: <4407D291.30902@comcast.net>
References: <E1FF22S-0003Up-00@wolfwood>  <4407D291.30902@comcast.net>
Message-ID: <1141400169.9397.1.camel@localhost.localdomain>

On Fri, 2006-03-03 at 00:22 -0500, Stephen Waterbury wrote:

> Eh?  I must have missed something (not unusual) -- I thought
> taps were going away ... are they coming back now?

It would be nice to have something better, but taps cover a couple of
different use cases (persistent configuration, quick configuration of
simple apps) that have no alternatives at the moment.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From donwsmith at gmail.com  Fri Mar  3 18:01:46 2006
From: donwsmith at gmail.com (Don Smith)
Date: Fri, 3 Mar 2006 17:01:46 -0800
Subject: [Twisted-Python] sample tac that needs a critique
Message-ID: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>

Okay, I've made some huge progress, I think with my Telnet connection stuff.
I'm curious what the Twisted pros think of this..syntax, if it is correct,
etc. Here is what I'm going for, I want to have this application running,
which provides an XML-RPC interface for 'controlling' it. The server, right
now, can start Telnet clients at the request of XML-RPC clients. This seems
to work, however, I'd also like to be able to stop said Telnet clients, or
see which ones are running, etc. I can't wrap my brain around how to
accomplish those bits of functionality. I've included the .tac file below
for reference.

Thanks so much for your assistance!

-Don


#Try to build a Twisted Connector Service the twisted way
from twisted.application import internet, service
from twisted.web import resource, server, static, xmlrpc
import re, time


from EventTypes import Event
connectiontypes = {'TelnetConnection':'A telnet client connection.',
'FileTailConnection':'Facilitates tailing a log file'}


class Connection:
    def __init__(self,name):
        # Constructor
        self.name=name
    #print "Connection name: %s" % self.name
    self.status=False

    def setStatus (self,status):
        self.status=status

####################
# TCP Client Stuff
####################
from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.conch.telnet import Telnet


##########################
# Telnet Clients
##########################
class TelnetClient(Telnet):
    "TelnetClient class."
    def connectionMade(self):
        #print "connection made to %s" % self.factory.name
    #if the cmd variable was set in the calling factory, lets iterate over
it.
    if self.factory.cmd:
        for cmd in self.factory.cmd:
            if "sleep" in cmd:
                #print re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime')
                sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                time.sleep(sleeptime)
            else:
                self.write(cmd)


    def write(self, data):
    #print data
    Telnet._write(self, data+"\r\n")


    def dataReceived(self, data):
        print "received:", data
    #always send data to the eventQueue
    self.factory.eventQueue.insert(Event(data, self.factory.name))
    #check if we should send any commands based on data received
    if self.factory.expect:
        #check if any of the expect dictionary keys are in data
        for key in self.factory.expect.keys():
            if key in data:
                for cmd in self.factory.expect[key]:
                if "sleep" in cmd:
                        sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                        time.sleep(sleeptime)
                    else:
                        self.write(cmd)



class TelnetConnection(Connection, ReconnectingClientFactory):
    "Telnets to host:port and executes cmd. cmd"
    protocol = TelnetClient
    def  __init__(self, name, eventQueue, cmd=None, expect=None):
        Connection.__init__(self, name)
    self.cmd = cmd
    self.expect = expect
    self.eventQueue = eventQueue




    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()


    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()


class ManagerService(service.Service):
    def __init__(self):
        pass

    # some XML-RPC function calls for twisted server
    def stop(self):
        return 'Shutdown initiated'

    def getConnectionTypes(self):
        """Return connection types"""
    return connectiontypes

    def xmlrpc_getActiveConnections(self):
        """Return all active connections"""

    def getConnectionStatus(self, connection):
        return "connection status"


    def getResource(self):
        """Return sum of arguments."""
    r = resource.Resource()
    x = xmlrpc.XMLRPC()
    x.xmlrpc_stop = self.stop
    x.xmlrpc_getConnectionStatus = self.getConnectionStatus
    x.xmlrpc_startTelnet = self.startTelnet

        r.putChild('RPC2', x)
        return r

    def startTelnet(self, host, port, name, queue, command, script):
        from twisted.internet import reactor
    from EventQueue import Queue
        #Create the Event Queue object
    self.queue = queue

        self.queue = Queue()

        reactor.connectTCP(host, int(port), TelnetConnection(name,self.queue
,command,script))
    return "%s started" % name


#create an application instance
application = service.Application('connectorservice', uid=1, gid=1)
m = ManagerService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(7090, server.Site(m.getResource())
                   ).setServiceParent(serviceCollection)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060303/52ce2635/attachment.html>

From nikl at nikl.net  Sat Mar  4 04:06:19 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Sat, 4 Mar 2006 12:06:19 +0100
Subject: [Twisted-Python] sample tac that needs a critique
In-Reply-To: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>
References: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>
Message-ID: <200603041206.25078.nikl@nikl.net>

> Okay, I've made some huge progress, I think with my Telnet connection
> stuff
up to now just one thing: there is no sample tac ;)
-- 
MfG,

 Nikl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 200 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060304/e83803ef/attachment.sig>

From mwh at python.net  Sat Mar  4 06:04:59 2006
From: mwh at python.net (Michael Hudson)
Date: Sat, 04 Mar 2006 13:04:59 +0000
Subject: [Twisted-Python] Re: Twisted Website
References: <2m8xrr6emo.fsf@starship.python.net>
	<20060303140837.6122.1892915094.divmod.quotient.12718@ohm>
Message-ID: <2mslpy4ays.fsf@starship.python.net>

Jean-Paul Calderone <exarkun at divmod.com> writes:

> n Fri, 03 Mar 2006 09:50:39 +0000, Michael Hudson <mwh at python.net> wrote:
>>Jean-Paul Calderone <exarkun at divmod.com> writes:
>>
>>>   * Epydoc has been replaced by docextractor (to be renamed).
>>
>>Huh?  I admit I put about two seconds of thought so far into the
>>project name, but I still think I get to name my own projects :)
>
> Ahh, I' blame radix.  I think he said something about you trying to
> come up with a different name.

Ah, OK.  Maybe I said something like that, don't really remember.

Sorry for the mis-read.

Cheers,
mwh

-- 
  QNX... the OS that walks like a duck, quacks like a duck, but is,
  in fact, a platypus. ... the adventures of porting duck software 
  to the platypus were avoidable this time.
                                 -- Chris Klein, alt.sysadmin.recovery




From donwsmith at gmail.com  Sat Mar  4 08:49:33 2006
From: donwsmith at gmail.com (Don Smith)
Date: Sat, 4 Mar 2006 07:49:33 -0800
Subject: [Twisted-Python] sample tac that needs a critique
In-Reply-To: <200603041206.25078.nikl@nikl.net>
References: <24f63c200603031701h7abcdac2nc10b9244230e8447@mail.gmail.com>
	<200603041206.25078.nikl@nikl.net>
Message-ID: <24f63c200603040749h29cf3d54n36374360bd592efc@mail.gmail.com>

it is in the email.

#Try to build a Twisted Connector Service the twisted way
from twisted.application import internet, service
from twisted.web import resource, server, static, xmlrpc
import re, time


from EventTypes import Event
connectiontypes = {'TelnetConnection':'A telnet client connection.',
'FileTailConnection':'Facilitates tailing a log file'}


class Connection:
    def __init__(self,name):
        # Constructor
        self.name=name
    #print "Connection name: %s" % self.name
    self.status=False

    def setStatus (self,status):
        self.status=status

####################
# TCP Client Stuff
####################
from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.conch.telnet import Telnet


##########################
# Telnet Clients
##########################
class TelnetClient(Telnet):
    "TelnetClient class."
    def connectionMade(self):
        #print "connection made to %s" % self.factory.name
    #if the cmd variable was set in the calling factory, lets iterate over
it.
    if self.factory.cmd:
        for cmd in self.factory.cmd:
            if "sleep" in cmd:
                #print re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime')
                sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                time.sleep(sleeptime)
            else:
                self.write(cmd)


    def write(self, data):
    #print data
    Telnet._write(self, data+"\r\n")


    def dataReceived(self, data):
        print "received:", data
    #always send data to the eventQueue
    self.factory.eventQueue.insert(Event(data, self.factory.name))
    #check if we should send any commands based on data received
    if self.factory.expect:
        #check if any of the expect dictionary keys are in data
        for key in self.factory.expect.keys():
            if key in data:
                for cmd in self.factory.expect [key]:
                if "sleep" in cmd:
                        sleeptime = int(re.compile
('(?P<sleeptime>(\d+))').search(cmd).group('sleeptime'))
                        time.sleep(sleeptime)
                    else:
                        self.write(cmd)



class TelnetConnection(Connection, ReconnectingClientFactory):
    "Telnets to host:port and executes cmd. cmd"
    protocol = TelnetClient
    def  __init__(self, name, eventQueue, cmd=None, expect=None):
        Connection.__init__(self, name)
    self.cmd = cmd
    self.expect = expect
    self.eventQueue = eventQueue




    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()


    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()


class ManagerService(service.Service):
    def __init__(self):
        pass

    # some XML-RPC function calls for twisted server
    def stop(self):
        return 'Shutdown initiated'

    def getConnectionTypes(self):
        """Return connection types"""
    return connectiontypes

    def xmlrpc_getActiveConnections(self):
        """Return all active connections"""

    def getConnectionStatus(self, connection):
        return "connection status"


    def getResource(self):
        """Return sum of arguments."""
    r = resource.Resource()
    x = xmlrpc.XMLRPC()
    x.xmlrpc_stop = self.stop
    x.xmlrpc_getConnectionStatus = self.getConnectionStatus
    x.xmlrpc_startTelnet = self.startTelnet

        r.putChild('RPC2', x)
        return r

    def startTelnet(self, host, port, name, queue, command, script):
        from twisted.internet import reactor
    from EventQueue import Queue
        #Create the Event Queue object
    self.queue = queue

        self.queue = Queue()

        reactor.connectTCP(host, int(port),
TelnetConnection(name,self.queue,command,script))
    return "%s started" % name


#create an application instance
application = service.Application('connectorservice', uid=1, gid=1)
m = ManagerService()
serviceCollection = service.IServiceCollection(application)
internet.TCPServer(7090, server.Site(m.getResource())
                   ).setServiceParent(serviceCollection)


On 3/4/06, Nikolaus Schlemm <nikl at nikl.net> wrote:
>
> > Okay, I've made some huge progress, I think with my Telnet connection
> > stuff
> up to now just one thing: there is no sample tac ;)
> --
> MfG,
>
> Nikl
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060304/4af1f8bd/attachment.html>

From tobi.lewitt at web.de  Sun Mar  5 10:35:38 2006
From: tobi.lewitt at web.de (Tobi Lewitt)
Date: Sun, 05 Mar 2006 18:35:38 +0100
Subject: [Twisted-Python] beginner's question to OSCAR & twisted
Message-ID: <1371335581@web.de>

Hello, my name is Tobi and i'm a student from germany.
I have some experience with python, but i think i'm still bad at all.
I have heard about twisted, and i am thinking for months to build an own ICQ/OSCAR-bot, so i downloaded Twisted-Words and looked at this OSCAR-file. but i dont know really what to do with it.

I think it would already help me if you give me perhaps a hint how to use twisted to connect with a ICQ-server, if i once know i think i would be alble to understand the rest on my own.

i hope my questions aren't too stubid for that list, tobi.
______________________________________________________________
Verschicken Sie romantische, coole und witzige Bilder per SMS!
Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193




From jadestorm at nc.rr.com  Sun Mar  5 11:13:07 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sun, 5 Mar 2006 13:13:07 -0500
Subject: [Twisted-Python] beginner's question to OSCAR & twisted
In-Reply-To: <1371335581@web.de>
References: <1371335581@web.de>
Message-ID: <4409B86F-86A7-457A-9582-5DA78DD5A261@nc.rr.com>

Hi Tobi!

There is an example 'bot' that uses oscar in doc/examples within the  
Twisted-Words dist.  It is called 'oscardemo.py'.  That's probably  
the best place to start!  I have a much more advanced copy of the  
oscar module within my jabber transports (pyicq and pyaim) but I need  
to clean it up, write up some docs, write up what all has changed,  
and write up some tests before it can be put back into TwistedWords.   
You can message me directly with questions as you work on it if you'd  
like.

Daniel

On Mar 5, 2006, at 12:35 PM, Tobi Lewitt wrote:

> Hello, my name is Tobi and i'm a student from germany.
> I have some experience with python, but i think i'm still bad at all.
> I have heard about twisted, and i am thinking for months to build  
> an own ICQ/OSCAR-bot, so i downloaded Twisted-Words and looked at  
> this OSCAR-file. but i dont know really what to do with it.
>
> I think it would already help me if you give me perhaps a hint how  
> to use twisted to connect with a ICQ-server, if i once know i think  
> i would be alble to understand the rest on my own.
>
> i hope my questions aren't too stubid for that list, tobi.
> ______________________________________________________________
> Verschicken Sie romantische, coole und witzige Bilder per SMS!
> Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From andreas at kostyrka.org  Sun Mar  5 12:06:20 2006
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Sun, 5 Mar 2006 20:06:20 +0100
Subject: [Twisted-Python] beginner's question to OSCAR & twisted
References: <1141585507.3698860A@fk13.dngr.org>
Message-ID: <1141585583.17DE75E3@fn13.dngr.org>

Ok, twisted/docs/words/examples contains oscardemo which works well 
enough.

If you are interested I've written on the base of it an AIM <-> IRC 
(xchat) bridge.

Andreas

Am Sonntag, 5. März 2006 18:42 schrieb Tobi Lewitt:
> Hello, my name is Tobi and i'm a student from germany.
> I have some experience with python, but i think i'm still bad at all.
> I have heard about twisted, and i am thinking for months to build an 
> own ICQ/OSCAR-bot, so i downloaded Twisted-Words and looked at this 
> OSCAR-file. but i dont know really what to do with it.
>
> I think it would already help me if you give me perhaps a hint how to 
> use twisted to connect with a ICQ-server, if i once know i think i 
> would be alble to understand the rest on my own.
>
> i hope my questions aren't too stubid for that list, tobi.
> ______________________________________________________________
> Verschicken Sie romantische, coole und witzige Bilder per SMS!
> Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- Andreas Kostyrka
-- Andreas Kostyrka


From diwaker.lists at gmail.com  Sun Mar  5 13:00:30 2006
From: diwaker.lists at gmail.com (Diwaker Gupta)
Date: Sun, 5 Mar 2006 12:00:30 -0800
Subject: [Twisted-Python] API reference
Message-ID: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>

Hi everyone,

The new website seems to be coming along nicely. However, I find
myself missing the old API reference a lot. The previous Javadoc style
reference was very easy to navigate, jump across things, and provided
a lot more useful information in the same screen space compared to the
current format (where everything is on its own HTML page, no frames)

It seems the pages are still being generated by epydoc -- some styling
is missing, and the frames page is missing? Is this something being
worked on/considered? Or is the current format of API reference final?

Thanks,
Diwaker
--
Web/Blog/Gallery: http://floatingsun.net/blog



From exarkun at divmod.com  Sun Mar  5 16:24:33 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 5 Mar 2006 18:24:33 -0500
Subject: [Twisted-Python] API reference
In-Reply-To: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>
Message-ID: <20060305232433.6122.1312468900.divmod.quotient.13226@ohm>

On Sun, 5 Mar 2006 12:00:30 -0800, Diwaker Gupta <diwaker.lists at gmail.com> wrote:
>Hi everyone,
>
>The new website seems to be coming along nicely. However, I find
>myself missing the old API reference a lot. The previous Javadoc style
>reference was very easy to navigate, jump across things, and provided
>a lot more useful information in the same screen space compared to the
>current format (where everything is on its own HTML page, no frames)
>
>It seems the pages are still being generated by epydoc -- some styling
>is missing, and the frames page is missing? Is this something being
>worked on/considered? Or is the current format of API reference final?

The documentation is being generated by mwh's docextractor project.  It is very much a work in progress.  And speaking of which, I've just updated the website with a version of the html which includes some significant style improvements from jml and mwh.  Further suggestions for improvements are welcome.

Jean-Paul



From simon at hedberg.net  Sun Mar  5 17:23:43 2006
From: simon at hedberg.net (Simon Hedberg)
Date: Mon, 6 Mar 2006 01:23:43 +0100
Subject: [Twisted-Python] SQLAlchemy with Twisted
Message-ID: <000001c640b4$39f36060$38aa20d4@hp>

Hi,
There were some talk on the list about this a while ago and Ed Suominen
had some code up for review. What's the status on this now? 
I haven't tested SQLAlchemy yet but it seems quite nice on paper, and it
would feel good to replace my own orm hack with something that has more
development efforts behind it. And I guess I'm not the only one in this
situation.. 

TIA
/Simon




From diwaker.lists at gmail.com  Sun Mar  5 17:35:13 2006
From: diwaker.lists at gmail.com (Diwaker Gupta)
Date: Sun, 5 Mar 2006 16:35:13 -0800
Subject: [Twisted-Python] API reference
In-Reply-To: <20060305232433.6122.1312468900.divmod.quotient.13226@ohm>
References: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>
	<20060305232433.6122.1312468900.divmod.quotient.13226@ohm>
Message-ID: <891be9410603051635m78a080d4n81a92f66874b1544@mail.gmail.com>

> The documentation is being generated by mwh's docextractor project.  It is very much a work in progress.  And speaking of which, I've just updated the website with a version of the html which includes some significant style improvements from jml and mwh.  Further suggestions for improvements are welcome.

The new pages look better (color/styles etc help in quickly going over
documentation), but I still find myself losing a lot of context
flipping back and forth between pages. I find the Javadoc style
frame-based documentation much more productive.

Just my 2c.
Diwaker
--
Web/Blog/Gallery: http://floatingsun.net/blog



From matusis at matusis.com  Sun Mar  5 17:49:53 2006
From: matusis at matusis.com (Alec Matusis)
Date: Sun, 5 Mar 2006 16:49:53 -0800
Subject: [Twisted-Python] API reference
In-Reply-To: <20060305232433.6122.1312468900.divmod.quotient.13226@ohm>
Message-ID: <E1FG3vL-00014Z-00@pyramid.twistedmatrix.com>

I agree, the old documentation was better. The thing that I miss the most is
the search, that would be restricted to Docs only, rather than the site-wide
search. 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul
Calderone
Sent: Sunday, March 05, 2006 3:25 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] API reference

On Sun, 5 Mar 2006 12:00:30 -0800, Diwaker Gupta <diwaker.lists at gmail.com>
wrote:
>Hi everyone,
>
>The new website seems to be coming along nicely. However, I find
>myself missing the old API reference a lot. The previous Javadoc style
>reference was very easy to navigate, jump across things, and provided
>a lot more useful information in the same screen space compared to the
>current format (where everything is on its own HTML page, no frames)
>
>It seems the pages are still being generated by epydoc -- some styling
>is missing, and the frames page is missing? Is this something being
>worked on/considered? Or is the current format of API reference final?

The documentation is being generated by mwh's docextractor project.  It is
very much a work in progress.  And speaking of which, I've just updated the
website with a version of the html which includes some significant style
improvements from jml and mwh.  Further suggestions for improvements are
welcome.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mwh at python.net  Sun Mar  5 18:27:34 2006
From: mwh at python.net (Michael Hudson)
Date: Mon, 06 Mar 2006 01:27:34 +0000
Subject: [Twisted-Python] Re: API reference
References: <891be9410603051200i1278edb8le9dec5907a772c01@mail.gmail.com>
Message-ID: <2mfylw4b21.fsf@starship.python.net>

"Diwaker Gupta" <diwaker.lists at gmail.com> writes:

> Hi everyone,
>
> The new website seems to be coming along nicely. However, I find
> myself missing the old API reference a lot. The previous Javadoc style
> reference was very easy to navigate, jump across things,

Strange, I always find epydoc output pretty hard to navigate...

[...]

> It seems the pages are still being generated by epydoc 

Nope.  epytext, epydoc's markup system is used by the docstrings
though, so we still use epydoc's parser/formatter for that.

> -- some styling is missing, and the frames page is missing? Is this
> something being worked on/considered? 

It's being worked on fairly actively:

http://codespeak.net/svn/user/mwh/docextractor/trunk/

> Or is the current format of API reference final?

Hardly!  In addition to what JP said, concrete suggestions on how to
improve it or even patches are very welcome.  I sometimes have a more
up-to-date/experimental version up at:

   http://starship.python.net/crew/mwh/apidocs/twisted.html

(it's only mildly different from what's on twistedmatrix.com
right now).

Cheers,
mwh

-- 
  The source passes lint without any complaint (if invoked with
  >/dev/null).    -- Daniel Fischer, http://www.ioccc.org/1998/df.hint




From kim at trdlnk.com  Mon Mar  6 09:04:59 2006
From: kim at trdlnk.com (Kim Novak)
Date: Mon, 06 Mar 2006 10:04:59 -0600
Subject: [Twisted-Python] using gtk without threads and pb
Message-ID: <440C5DAB.2090705@trdlnk.com>

I am new to twisted and am trying to figure out if I can use it with gtk 
but without threads.

I need this because of an old library I'm using that doesn't work with 
gtk threads. Since I have to run single threaded the async xml rpc 
offered by Twisted is ideal for my application to work well.

To test this I tweaked the example pbgtk2.py to disable threads as 
recommended here:
http://twistedmatrix.com/trac/ticket/1083
The tweaked version is attached. I start pbecho.py and run my pbgtk2.py. 
When I click connect it eventually times out. Without my tweaks it 
connects immediately.

Does anyone know if this is supposed to be possible? If so, what I am I 
doing wrong?

I am using python v2.3 and pygtk v2.6.
Thanks
Kim

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pbgtk2.py
Type: application/x-python
Size: 4285 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060306/9e9acbc7/attachment-0002.bin>

From rudy at goldenhelix.com  Mon Mar  6 15:45:08 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Mon, 6 Mar 2006 15:45:08 -0700
Subject: [Twisted-Python] new pb, cPB and general PBness?
In-Reply-To: <440C5DAB.2090705@trdlnk.com>
References: <440C5DAB.2090705@trdlnk.com>
Message-ID: <200603061545.08557.rudy@goldenhelix.com>

So I'm happily using pb and am generally content with the performace, but 
noticed the documentation mentioning that a C version of the jelly functions 
might be forthcoming kind of like the cPickle library. 

What is the status of "c" pb? I also saw talk of a "new" pb implementation 
(pb2?) and am wondering if the C version is being put on hold until the new 
pb protocol stabilizes. The new pb talk has got me curious as well. What's 
"new" or different about it?

I'd be willing to help/collaborate/code with the C pb project if there in fact 
is one. Well, once I have more time... a little crazy at the moment. :)

Thanks,

--gabe



From luc.stepniewski at adelux.fr  Tue Mar  7 04:11:40 2006
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Tue, 7 Mar 2006 12:11:40 +0100
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <200602211912.27692.uwe@oss4u.com>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<1140544697.10335.20.camel@localhost.localdomain>
	<200602211912.27692.uwe@oss4u.com>
Message-ID: <200603071211.40627.luc.stepniewski@adelux.fr>

Hello,

I tried to implement that timeout method. I think I did it corrrectly (example 
attached in this mail), but it seems that one can't disconnect() a PB if it 
hasn't replied yet :-( It looks like it is locked and waits for an answer 
from the remote PB.
So if you run a netcat (nc -vv -l -p 9003) and run my code, timeoutHandler()
is called but the factory is NOT disconnected :-(

Did you do something different from my code?

Thanks for your help,
Luc

On Wednesday 22 February 2006 04:12, Uwe C. Schroeder wrote:
> On Tuesday 21 February 2006 09:58, Itamar Shtull-Trauring wrote:
> > On Tue, 2006-02-21 at 18:40 +0100, Luc Stepniewski wrote:
> > > On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> > > > The typical way to do this is have some sort of remote_ping method
> > > > that returns immediately on the server (or on the client) that the
> > > > client (or the server) calls every once in a while, with a timeout
> > > > for the response. If that times out the problem is likely the
> > > > connection, not the server being slow, in which case you can close
> > > > the connection.
> > >
> > > Yes, it's the same thing as making a pseudo "timeout" with a callLater.
> >
> > Not exactly. What I'm suggesting is a different command that you send in
> > addition to your regular operations. This extra command, "ping", is
> > expected to return a result quickly; if it doesn't you know something is
> > wrong. That way even if your regular commands take a really long time
> > for the server to process you can still tell if the server itself (or
> > your connection to it) is ok. Every 10 seconds, say, you ping the
> > server; if you don't get a response back in 5 seconds it's probably
> > down.
>
> That's actually what I'm doing with my application - although for a
> different reason. I send a "ping" that immediate is answered by a "pong" -
> if I don't get the pong withing 30 seconds I shut the connection down.
> My reason is a missconfigured firewall at one of my clients which drops
> forwarding after about 90 seconds idle time. Since I couldn't get their
> (incompetent) network admin to fix it I send a ping every 30 sec, so the
> firewall thinks the connection is active and doesn't drop it.
>
> Luc: if you need the code for that (although it's very simple), drop me a
> line.


-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug.py
Type: application/x-python
Size: 1737 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060307/394f0447/attachment-0002.bin>

From mikeeee at hush.com  Tue Mar  7 11:19:27 2006
From: mikeeee at hush.com (Mike Christey)
Date: Tue,  7 Mar 2006 19:19:27 +0100
Subject: [Twisted-Python] ClientCreator error handling
Message-ID: <200603071819.k27IJS6r007361@mailserver2.hushmail.com>

Hi,

I don't know if this is right place to ask this kind of
question but I'm really stuck at this problem and documentation
seems not help (or better, I'm dumb).

For me who uses try/except on daily basis the twisted error handling
seems to be voodoo. All I want to do is add 'connection refused', 
'dns lookup er ror' and similiar handling to the sshsimpleclient.py 
script.

I tried something like:

def errorCallback(failure):
        print "Err"
        [...] # other code



d = defer.Deferred()
d.addErrback(errorCallback)
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 
22)
reactor.run()

but that's probably have nothing to do with way it should be done..

Anyone could help me please?




Concerned about your privacy? Instantly send FREE secure email, no account required
http://www.hushmail.com/send?l=480

Get the best prices on SSL certificates from Hushmail
https://www.hushssl.com?l=485




From itamar at itamarst.org  Tue Mar  7 11:46:54 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 07 Mar 2006 13:46:54 -0500
Subject: [Twisted-Python] ClientCreator error handling
In-Reply-To: <200603071819.k27IJS6r007361@mailserver2.hushmail.com>
References: <200603071819.k27IJS6r007361@mailserver2.hushmail.com>
Message-ID: <1141757214.9230.19.camel@localhost.localdomain>

On Tue, 2006-03-07 at 19:19 +0100, Mike Christey wrote:
> 
> def errorCallback(failure):
>         print "Err"
>         [...] # other code
> 
> 
> 
> d = defer.Deferred()
> d.addErrback(errorCallback)
> protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST, 
> 22)
> reactor.run() 

protocol.ClientCreator(reactor, SimpleTransport).connectTCP(HOST,
22).addErrback(errorCallback)

ClientCreator.connectTCP returns a Deferred.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From jml at mumak.net  Tue Mar  7 22:21:10 2006
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Mar 2006 16:21:10 +1100
Subject: [Twisted-Python] ATTN z3p: Errors in Conch tests
Message-ID: <d06a5cd30603072121w2d832e55qe2f70b89e4a4f2be@mail.gmail.com>

z3p,

I've switch the conch tests to use Deferreds rather than spinUntil and
spinWhile (See branches/deprecated-trial-1509 and
http://www.twistedmatrix.com/trac/ticket/1509).

However, two tests in test_conch are failing when run on Linux (they
pass on OS X).  The code looks fine and other reviewers can't seem to
spot the problem. Why is it breaking?

I'd appreciate a response as soon as possible, even a negative one.

cheers,
jml



From paulswartz at gmail.com  Tue Mar  7 22:36:18 2006
From: paulswartz at gmail.com (Paul Swartz)
Date: Wed, 08 Mar 2006 00:36:18 -0500
Subject: [Twisted-Python] ATTN z3p: Errors in Conch tests
In-Reply-To: <d06a5cd30603072121w2d832e55qe2f70b89e4a4f2be@mail.gmail.com>
References: <d06a5cd30603072121w2d832e55qe2f70b89e4a4f2be@mail.gmail.com>
Message-ID: <440E6D52.7020208@gmail.com>

Jonathan Lange wrote:
> z3p,
> 
> I've switch the conch tests to use Deferreds rather than spinUntil and
> spinWhile (See branches/deprecated-trial-1509 and
> http://www.twistedmatrix.com/trac/ticket/1509).
> 
> However, two tests in test_conch are failing when run on Linux (they
> pass on OS X).  The code looks fine and other reviewers can't seem to
> spot the problem. Why is it breaking?
> 
> I'd appreciate a response as soon as possible, even a negative one.

I'm quite busy with classes right now, but I'll try to take a look
tomorrow evening when I've got a bit of spare time.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.livejournal.com/
AIM: z3penguin
GPG: 5CF0B1C9



From gale at sefer.org  Wed Mar  8 03:46:35 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Wed, 8 Mar 2006 12:46:35 +0200
Subject: [Twisted-Python] Degrading under load
Message-ID: <2608b8a80603080246r559f5c6jc0c552b3063e9c24@mail.gmail.com>

I need to set up a TCP service (on a linux box)
that will get something like a few hunderd connections
per minute at peak load. For each connection, I do
some XML processing, and possibly send a query
to another nearby machine and get a respone.

Seems to me that twisted should be able to handle that.

But what happens when I get the occasional burst
of connections, lets say tens of connections within
one second? What I need is:

o Every client gets a socket connection promptly, so
  no danger of TCP timeout.
o Under medium load, clients will have to wait a
  bit longer for the response.
o Under heavy load, some clients will get a "busy"
  response (defined in the protocol I am implementing)
  and immediate socket close.

What is the best way to do that in twisted? I envision
one of the following architectures:

A. Just use twisted in the usual way. Watch twisted's
event queue for heavy load.

B. Two processes: one to dish out connections and one
to queue requests and process them.

C. Three processes: one to dish out connections, one
to queue requests and watch for load, and one to
process the requests.

Which of these do I need to use to get the desired
effect under load? Or is there some better way?

Thanks,
Yitz



From paul-lists at perforge.com  Wed Mar  8 04:27:51 2006
From: paul-lists at perforge.com (Paul G)
Date: Wed, 8 Mar 2006 06:27:51 -0500
Subject: [Twisted-Python] Degrading under load
References: <2608b8a80603080246r559f5c6jc0c552b3063e9c24@mail.gmail.com>
Message-ID: <752e01c642a3$56037f10$6402a8c0@dcore>


----- Original Message ----- 
From: "Yitzchak Gale" <gale at sefer.org>
To: <twisted-python at twistedmatrix.com>
Sent: Wednesday, March 08, 2006 5:46 AM
Subject: [Twisted-Python] Degrading under load

 --- snip ---

premature optimization is just as bad as premature 
$rhymes_with_optimization. implement all of this in a single process, 
benchmark under various loads and see if you need to do anything at all. if 
you do, consider splitting the full handling of a request into separate, 
cooperative pieces with a deferred/callLater (connection handling and xml 
processing would be the natural division here). if this is insufficient (eg 
if the xml processing is sufficiently expensive), perform it in a 
threadpool. i would only split it off into a completely separate process if 
you bottleneck on the GIL, which i wouldn't consider likely in your case.

-p 




From Brendan at BrendanSimon.com  Wed Mar  8 05:03:14 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Wed, 08 Mar 2006 23:03:14 +1100
Subject: [Twisted-Python] Conch and Rsync
Message-ID: <440EC802.9090404@BrendanSimon.com>

I have an application that runs on Windows, and I want to be able to 
sync files back and forth from/to a unix server.  The unix server has 
sshd and rsync.

Can I use twisted/conch on the Windows box to call rsync (over ssh) on 
the unix server to push/pull files to/from the Windows box ???

Do I need something like rsync.py in my Windows app ?
If so, would it be an rsync client and/or server ?

Thanks for any info and thoughts.
Brendan.




From mary-twisted at puzzling.org  Wed Mar  8 05:47:07 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 8 Mar 2006 23:47:07 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <20060308124707.GR24361@sourdust.home.puzzling.org>

On Thu, Mar 02, 2006, Jonathan Lange wrote:
> Hello,
> 
> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

And having said all that, I didn't make it! I'm awfully sorry Jonathan,
can we reschedule?

-Mary

-- 
<stranger> ok i think i need a polymorphic language with continuations and closures to write this properly
<stranger> should I give up and implement in C?



From ymalsot at besancon.parkeon.com  Wed Mar  8 08:43:30 2006
From: ymalsot at besancon.parkeon.com (Yvain Malsot)
Date: Wed, 08 Mar 2006 15:43:30 +0000
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
Message-ID: <440EFBA2.3020905@besancon.parkeon.com>

Message interesting for the following twisted developpers (@see ticket 
#1132):
 - oubiwann
 - jknight
 - itarmarst


Hi,

as we have seen in our developpment spikes and at this place: 
http://twistedmatrix.com/pipermail/twisted-web/2005-September/001903.html
there's a bug when Twisted XML-RPC server deals with 'None' method response.

The previous message has given a patch (seen at the end of message) for 
using the 'allow_none' parameter in order to resolve bug.

As we are new twisted users and haven't seen any revision for 
twisted.web.xmlrpc module (since 2 years), we are asking 
twisted-community the following questions:
 - is this patch acceptable?
 - will it be include in next twisted revision?

We have seen that a new xmlrpc.py is ready to be committed in the web2 
package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) 
but it doesn't seem to include the previous patch.

Moreover, what about ticket #914 (uncatched exceptions we have also 
encountered) ?

Regards,

Vincent & Yvain




From exarkun at divmod.com  Wed Mar  8 09:13:59 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Mar 2006 11:13:59 -0500
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
In-Reply-To: <440EFBA2.3020905@besancon.parkeon.com>
Message-ID: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>

On Wed, 08 Mar 2006 15:43:30 +0000, Yvain Malsot <ymalsot at besancon.parkeon.com> wrote:
>Message interesting for the following twisted developpers (@see ticket 
>#1132):
>- oubiwann
>- jknight
>- itarmarst
>
>
>Hi,
>
>as we have seen in our developpment spikes and at this place: 
>http://twistedmatrix.com/pipermail/twisted-web/2005-September/001903.html
>there's a bug when Twisted XML-RPC server deals with 'None' method response.
>
>The previous message has given a patch (seen at the end of message) for 
>using the 'allow_none' parameter in order to resolve bug.
>
>As we are new twisted users and haven't seen any revision for 
>twisted.web.xmlrpc module (since 2 years), we are asking twisted-community 
>the following questions:
>- is this patch acceptable?
>- will it be include in next twisted revision?
>
>We have seen that a new xmlrpc.py is ready to be committed in the web2 
>package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) but it 
>doesn't seem to include the previous patch.

Problems with the patch:

  * Doesn't follow the coding standard (allow_none should be allowNone)
  * Includes no unit tests
  * Includes no documentation
  * Isn't in the bug tracker

The feature itself and the implementation otherwise seem reasonable to me.

Jean-Paul



From itamar at itamarst.org  Wed Mar  8 09:54:20 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Mar 2006 11:54:20 -0500
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
In-Reply-To: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>
References: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>
Message-ID: <1141836860.9151.8.camel@localhost.localdomain>

On Wed, 2006-03-08 at 11:13 -0500, Jean-Paul Calderone wrote:

> >We have seen that a new xmlrpc.py is ready to be committed in the web2 
> >package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) but it 
> >doesn't seem to include the previous patch.
> 
> Problems with the patch:
> 
>   * Doesn't follow the coding standard (allow_none should be allowNone)
>   * Includes no unit tests
>   * Includes no documentation
>   * Isn't in the bug tracker

There's actually already a patch in the tracker for None support in
twisted.web.xmlrpc: http://twistedmatrix.com/trac/ticket/469 

However, it did not have tests, and also made the tests fail when last I
applied it.





From jml at mumak.net  Wed Mar  8 15:24:23 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 9 Mar 2006 09:24:23 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060308124707.GR24361@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
Message-ID: <d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>

On 3/8/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Thu, Mar 02, 2006, Jonathan Lange wrote:
> > Hello,
> >
> > Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> > on 8th March (UTC+11). The topic of discussion is: how to improve the
> > Trial documentation.
>
> And having said all that, I didn't make it! I'm awfully sorry Jonathan,
> can we reschedule?
>

No worries. We definitely can reschedule.

Monday early evenings and Wednesday early evenings are both good for
me (Although not 13 Mar). Same time OK?

jml



From mary-twisted at puzzling.org  Wed Mar  8 15:35:35 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 9 Mar 2006 09:35:35 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
Message-ID: <20060308223535.GA11982@sourdust.home.puzzling.org>

On Thu, Mar 09, 2006, Jonathan Lange wrote:
> Monday early evenings and Wednesday early evenings are both good for
> me (Although not 13 Mar). Same time OK?

I will get back to you tomorrow on which day is better.

Thanks,

Mary

-- 
<moshez> spiv: I cry wolf all the time, but that's because 
         WE'RE SURROUNDED BY WOLFS!



From mailinglists at smartology.nl  Thu Mar  9 09:43:59 2006
From: mailinglists at smartology.nl (Remi Cool)
Date: Thu, 09 Mar 2006 17:43:59 +0100
Subject: [Twisted-Python] XMLRPC Server: Bug with None response
In-Reply-To: <1141836860.9151.8.camel@localhost.localdomain>
References: <20060308161359.6122.663775605.divmod.quotient.14011@ohm>
	<1141836860.9151.8.camel@localhost.localdomain>
Message-ID: <44105B4F.6070805@smartology.nl>

Itamar Shtull-Trauring wrote:

>On Wed, 2006-03-08 at 11:13 -0500, Jean-Paul Calderone wrote:
>
>  
>
>>>We have seen that a new xmlrpc.py is ready to be committed in the web2 
>>>package (see ticket #1132: http://twistedmatrix.com/trac/ticket/1132) but it 
>>>doesn't seem to include the previous patch.
>>>      
>>>
>>Problems with the patch:
>>
>>  * Doesn't follow the coding standard (allow_none should be allowNone)
>>  * Includes no unit tests
>>  * Includes no documentation
>>  * Isn't in the bug tracker
>>    
>>
>
>There's actually already a patch in the tracker for None support in
>twisted.web.xmlrpc: http://twistedmatrix.com/trac/ticket/469 
>
>However, it did not have tests, and also made the tests fail when last I
>applied it.
>
>  
>
I've not delved into the code but found the following in:

http://twistedmatrix.com/trac/attachment/ticket/469/xmlrpc_allowNone_by_xmlrpclibVersion_rev4.patch

Line 297:

    def __init__(self, url, host, method, allowNone=0, *args):

I don't think you can have *args after a 'named' argument.

Have you tried:

    def __init__(self, url, host, method, *args, allowNone=0):


- Remi -





From PPNTWIMBXFFC at spammotel.com  Thu Mar  9 12:31:32 2006
From: PPNTWIMBXFFC at spammotel.com (Marco Aschwanden)
Date: Thu, 09 Mar 2006 20:31:32 +0100
Subject: [Twisted-Python] DB-Transaction spanning several calls
Message-ID: <op.s55u6ueac87q46@localhost.localdomain>

Hi
How do I make a db transaction that spans several xmlrpc calls before I  
can do a commit?
Do I have to manipulate the twisted.enterprise.adbapi by hand to reach my  
goal?

Thanks for any hints,
Have a nice day,
Marco




From gale at sefer.org  Thu Mar  9 14:13:21 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Thu, 9 Mar 2006 23:13:21 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141896657.0@gershon>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
Message-ID: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>

Sorry, I guess my question wasn't clear enough.

The most important things I need to know are:

When running listenTCP, how often does twisted
accept pending connections on the port? Is it only
when the previous connection is finished
processing, or every time the event loop gets
control, or something in between?

And when twisted does accept pending connections,
does it accept ALL of them and queue them all for
processing, or just one at a time?

Thanks,
Yitz

My original post:
> I need to set up a TCP service (on a linux box)
> that will get something like a few hunderd connections
> per minute at peak load. For each connection, I do
> some XML processing, and possibly send a query
> to another nearby machine and get a respone.
>
> Seems to me that twisted should be able to handle that.
>
> But what happens when I get the occasional burst
> of connections, lets say tens of connections within
> one second? What I need is:
>
> o Every client gets a socket connection promptly, so
>  no danger of TCP timeout.
> o Under medium load, clients will have to wait a
>  bit longer for the response.
> o Under heavy load, some clients will get a "busy"
>  response (defined in the protocol I am implementing)
>  and immediate socket close.
>
> What is the best way to do that in twisted? I envision
> one of the following architectures:
>
> A. Just use twisted in the usual way. Watch twisted's
> event queue for heavy load.
>
> B. Two processes: one to dish out connections and one
> to queue requests and process them.
>
> C. Three processes: one to dish out connections, one
> to queue requests and watch for load, and one to
> process the requests.
>
> Which of these do I need to use to get the desired
> effect under load? Or is there some better way?



From itamar at itamarst.org  Thu Mar  9 14:28:25 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Mar 2006 16:28:25 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
Message-ID: <1141939705.9187.2.camel@localhost.localdomain>

On Thu, 2006-03-09 at 23:13 +0200, Yitzchak Gale wrote:

> When running listenTCP, how often does twisted
> accept pending connections on the port? Is it only
> when the previous connection is finished
> processing, or every time the event loop gets
> control, or something in between?

A TCP connection can live for a long time (e.g. ssh session for hours or
days.) The server will therefore accept connections on each iteration of
the event loop where the server socket is readable.

If processing something when data is received takes a long time though
this mean the event loop won't get control back and so accept()ing will
be delayed. 

> And when twisted does accept pending connections,
> does it accept ALL of them and queue them all for
> processing, or just one at a time?

IIRC most reactors will try to accept as many as possible, up to some
limit in each iteration.




From alecm at chatango.com  Thu Mar  9 14:49:22 2006
From: alecm at chatango.com (Alec (Chatango))
Date: Thu, 9 Mar 2006 13:49:22 -0800
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
Message-ID: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>

Hi Yitzchak,

I can give you some information regarding option A.
We are running our chatserver using twisted. When we run twisted as a single
process, when the number of connections per second is more than 50 (> 3000
per min), twisted often blocks and does not accept new connections. The CPU
load showed by "top" for twisted process is 99.9% 
This behavior is on linux 2.6 on a 64 bit 4 CPU machine.
On 2.4 kernel on a 32 bit 4 CPU machine however, it always accepted new
connections, even with 99.9% load, but then they would often time out, since
under that load no data was written into them for a long time. This was with
Twisted 1.3

I should add here that in our case, the load was driven not by
connection/disconnection events, but by the number of established
connections. When that number was in the vicinity of 5000, system poll()
became very slow (we run poll reactor).

Another observation: we had a memory leak, so when the RSS memory grew say
3x the starting memory, the performance severely degraded. I should note
that the machine was not running out of memory: we have 4GB RAM, and the
total used memory was at most 400MB, with twistd process using maybe 160MB
at the most.

We are now moving to Twisted 2.2 and multiprocess architecture, somewhat
similar to your B option. 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Yitzchak Gale
Sent: Thursday, March 09, 2006 1:13 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Degrading under load

Sorry, I guess my question wasn't clear enough.

The most important things I need to know are:

When running listenTCP, how often does twisted
accept pending connections on the port? Is it only
when the previous connection is finished
processing, or every time the event loop gets
control, or something in between?

And when twisted does accept pending connections,
does it accept ALL of them and queue them all for
processing, or just one at a time?

Thanks,
Yitz

My original post:
> I need to set up a TCP service (on a linux box)
> that will get something like a few hunderd connections
> per minute at peak load. For each connection, I do
> some XML processing, and possibly send a query
> to another nearby machine and get a respone.
>
> Seems to me that twisted should be able to handle that.
>
> But what happens when I get the occasional burst
> of connections, lets say tens of connections within
> one second? What I need is:
>
> o Every client gets a socket connection promptly, so
>  no danger of TCP timeout.
> o Under medium load, clients will have to wait a
>  bit longer for the response.
> o Under heavy load, some clients will get a "busy"
>  response (defined in the protocol I am implementing)
>  and immediate socket close.
>
> What is the best way to do that in twisted? I envision
> one of the following architectures:
>
> A. Just use twisted in the usual way. Watch twisted's
> event queue for heavy load.
>
> B. Two processes: one to dish out connections and one
> to queue requests and process them.
>
> C. Three processes: one to dish out connections, one
> to queue requests and watch for load, and one to
> process the requests.
>
> Which of these do I need to use to get the desired
> effect under load? Or is there some better way?

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Thu Mar  9 15:31:35 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Mar 2006 17:31:35 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
References: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
Message-ID: <1141943495.9187.9.camel@localhost.localdomain>

On Thu, 2006-03-09 at 13:49 -0800, Alec (Chatango) wrote:

> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

An epoll-based reactor would probably help significantly in this case.
Also note that Twisted 2.x had some algorithmic speed improvements over
1.3 and should scale better (though that doesn't help with poll() being
a bottleneck).




From bruce at cubik.org  Thu Mar  9 15:37:40 2006
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 09 Mar 2006 15:37:40 -0700
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141943495.9187.9.camel@localhost.localdomain>
References: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
	<1141943495.9187.9.camel@localhost.localdomain>
Message-ID: <4410AE34.60401@cubik.org>

Itamar Shtull-Trauring wrote:
> On Thu, 2006-03-09 at 13:49 -0800, Alec (Chatango) wrote:
>> I should add here that in our case, the load was driven not by
>> connection/disconnection events, but by the number of established
>> connections. When that number was in the vicinity of 5000, system poll()
>> became very slow (we run poll reactor).
> 
> An epoll-based reactor would probably help significantly in this case.
> Also note that Twisted 2.x had some algorithmic speed improvements over
> 1.3 and should scale better (though that doesn't help with poll() being
> a bottleneck).

Wasn't there some work on a libevent-based reactor at some point? 
Where's that stand?

  - Bruce



From TimothyFitz at gmail.com  Thu Mar  9 16:15:49 2006
From: TimothyFitz at gmail.com (Timothy Fitz)
Date: Thu, 9 Mar 2006 18:15:49 -0500
Subject: [Twisted-Python] Twisted Windows Suggestions
Message-ID: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>

Teratorn and I are stepping up to support twisted on windows, and the
first thing we need to figure out is a list of fixes and features, by
priority. Our top priority is definitely making a windows reactor pass
all of the tests, but beyond that there are numerous issues. My first
project is rewriting the installer using distutils, but there are
numerous other issues to solve, three off the top of my head:

1. Running tac/tap files on windows is unnatural. Sure it's easy
enough for a developer but it's not windows system administrator
friendly. There are many ways to solve this, and I haven't thought
about it long enough, but step 1 would just be associating tac and tap
files with running python.exe twistd on them.

2. Installing tac/taps as services, seamlessly, without writing your
own service code.

3. Buildbots running on windows 2000, windows 2003, soon Vista as
well. I'm not sure how much interest is here, but we'd either need
donated hardware or we'd have to run VMWare somewhere.

What other big issues stop or hinder your usage of Twisted?



From matusis at matusis.com  Thu Mar  9 16:23:05 2006
From: matusis at matusis.com (Alec Matusis)
Date: Thu, 9 Mar 2006 15:23:05 -0800
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141943495.9187.9.camel@localhost.localdomain>
Message-ID: <E1FHUTg-00037F-00@pyramid.twistedmatrix.com>

Is there any stable/tested version of epoll reactor? 
Where could we get it?
I would love to get my hands on it! 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Itamar
Shtull-Trauring
Sent: Thursday, March 09, 2006 2:32 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Degrading under load

On Thu, 2006-03-09 at 13:49 -0800, Alec (Chatango) wrote:

> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

An epoll-based reactor would probably help significantly in this case.
Also note that Twisted 2.x had some algorithmic speed improvements over
1.3 and should scale better (though that doesn't help with poll() being
a bottleneck).


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From jml at mumak.net  Thu Mar  9 16:42:48 2006
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 10 Mar 2006 10:42:48 +1100
Subject: [Twisted-Python] Twisted Windows Suggestions
In-Reply-To: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
References: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
Message-ID: <d06a5cd30603091542u7fdf9788l190568eaee39753@mail.gmail.com>

On 3/10/06, Timothy Fitz <TimothyFitz at gmail.com> wrote:
> Teratorn and I are stepping up to support twisted on windows, and the
> first thing we need to figure out is a list of fixes and features, by
> priority. Our top priority is definitely making a windows reactor pass
> all of the tests, but beyond that there are numerous issues.

I'm glad of this.

At the moment, it doesn't really matter if code breaks tests on the
win32 bots. No one cares about the difference between 2-4
intermittently failing tests and 3-5 intermittently failing tests. The
only difference that matters is green and red.

> My first
> project is rewriting the installer using distutils, but there are
> numerous other issues to solve, three off the top of my head:

Your first project after fixing the win32-select tests, right? (All
the things you list sound like very good ideas for Windows support)

There are a list of issues sorted by priority on the tracker[1]. In
fact, there's a page on the wiki dedicated to storing useful Trac
queries[2]. I suggest that rather than replying to this email with
their issues, people should file bugs on the tracker with 'win32' in
the keyword field.

You can find some other reports on issues with Twisted by looking at
glyph's blog[3].

Thanks very much for doing this -- both you and Eric. Good luck.

jml

[1] http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&keywords=%7Ewin32&order=priority
[2] http://twistedmatrix.com/trac/wiki/UsefulQueries
[3] http://glyf.livejournal.com



From gale at sefer.org  Thu Mar  9 17:02:55 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Fri, 10 Mar 2006 02:02:55 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
Message-ID: <2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>

Alec,

Thanks for the great information!

Our situation is a bit different in that we will
not be keeping connections open for more
than a few seconds at a time (I hope).
So even at peak expected load, we shouldn't
ever have as many as 100 sockets open at any
given time.

Also, we will be load balancing at least two
boxes, for hardware redundancy. So we could
always throw in an extra box or two if things heat
up.

But I think I'll go with B anyway. It is neater in
that it separates performance under load
from the architechture of the high-level processing.
With A, we will always have to worry about
dividing the XML stuff into small enough pieces
to let the event loop in often enough.

Your platform comparisons will be very helpful.

-Yitz

On 3/9/06, Alec (Chatango) <alecm at chatango.com> wrote:
> Hi Yitzchak,
>
> I can give you some information regarding option A.
> We are running our chatserver using twisted. When we run twisted as a single
> process, when the number of connections per second is more than 50 (> 3000
> per min), twisted often blocks and does not accept new connections. The CPU
> load showed by "top" for twisted process is 99.9%
> This behavior is on linux 2.6 on a 64 bit 4 CPU machine.
> On 2.4 kernel on a 32 bit 4 CPU machine however, it always accepted new
> connections, even with 99.9% load, but then they would often time out, since
> under that load no data was written into them for a long time. This was with
> Twisted 1.3
>
> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).
>
> Another observation: we had a memory leak, so when the RSS memory grew say
> 3x the starting memory, the performance severely degraded. I should note
> that the machine was not running out of memory: we have 4GB RAM, and the
> total used memory was at most 400MB, with twistd process using maybe 160MB
> at the most.
>
> We are now moving to Twisted 2.2 and multiprocess architecture, somewhat
> similar to your B option.
>
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com
> [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Yitzchak Gale
> Sent: Thursday, March 09, 2006 1:13 PM
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Degrading under load
>
> Sorry, I guess my question wasn't clear enough.
>
> The most important things I need to know are:
>
> When running listenTCP, how often does twisted
> accept pending connections on the port? Is it only
> when the previous connection is finished
> processing, or every time the event loop gets
> control, or something in between?
>
> And when twisted does accept pending connections,
> does it accept ALL of them and queue them all for
> processing, or just one at a time?
>
> Thanks,
> Yitz
>
> My original post:
> > I need to set up a TCP service (on a linux box)
> > that will get something like a few hunderd connections
> > per minute at peak load. For each connection, I do
> > some XML processing, and possibly send a query
> > to another nearby machine and get a respone.
> >
> > Seems to me that twisted should be able to handle that.
> >
> > But what happens when I get the occasional burst
> > of connections, lets say tens of connections within
> > one second? What I need is:
> >
> > o Every client gets a socket connection promptly, so
> >  no danger of TCP timeout.
> > o Under medium load, clients will have to wait a
> >  bit longer for the response.
> > o Under heavy load, some clients will get a "busy"
> >  response (defined in the protocol I am implementing)
> >  and immediate socket close.
> >
> > What is the best way to do that in twisted? I envision
> > one of the following architectures:
> >
> > A. Just use twisted in the usual way. Watch twisted's
> > event queue for heavy load.
> >
> > B. Two processes: one to dish out connections and one
> > to queue requests and process them.
> >
> > C. Three processes: one to dish out connections, one
> > to queue requests and watch for load, and one to
> > process the requests.
> >
> > Which of these do I need to use to get the desired
> > effect under load? Or is there some better way?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From gale at sefer.org  Thu Mar  9 17:12:32 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Fri, 10 Mar 2006 02:12:32 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141939705.9187.2.camel@localhost.localdomain>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<1141939705.9187.2.camel@localhost.localdomain>
Message-ID: <2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>

On 3/9/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2006-03-09 at 23:13 +0200, Yitzchak Gale wrote:
>> When running listenTCP, how often does twisted
>> accept pending connections on the port?

> The server will... accept connections on each iteration of
> the event loop where the server socket is readable.

OK.

> If processing something when data is received takes a long time though
> this mean the event loop won't get control back and so accept()ing will
> be delayed.

Right. So in this scenario, performance under load would
depend on breaking up the higher-level processing steps
into small enough pieces.

>> And when twisted does accept pending connections,
>> does it accept ALL of them and queue them all for
>> processing, or just one at a time?

> IIRC most reactors will try to accept as many as possible,
> up to some limit in each iteration.

If I was going to do A, I would certainly want to check that
carefully. It's not like using select() or poll(). To get a
non-blocking accept(), for example, I think you need to
set some flag on the listen() call.

But right now it looks like I'll do B. It is still quite simple,
and looks more robust to me.

Thanks,
-Yitz



From donwsmith at gmail.com  Thu Mar  9 22:11:54 2006
From: donwsmith at gmail.com (Don Smith)
Date: Thu, 9 Mar 2006 21:11:54 -0800
Subject: [Twisted-Python] **kwargs with PB
Message-ID: <24f63c200603092111i7b9d94eah5ce86c6eee424a48@mail.gmail.com>

Greetings,

I'm experimenting with PB because I want to pass keyword arguments to my
remote methods, and I cannot do that with XML-RPC. But, I can't seem to do
it with PB either. I was wondering if anyone could confirm or deny that
**kwargs work with PB remote objects.

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060309/699883e0/attachment.html>

From gale at sefer.org  Fri Mar 10 02:36:46 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Fri, 10 Mar 2006 11:36:46 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
Message-ID: <2608b8a80603100136n60db7688v6a52f12661049479@mail.gmail.com>

Alec wrote:
> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

Wait a minute, how do the OS networking layers scale
with that many open connections? Are you sure this is
a twisted problem? Maybe you would be better off with
several cheaper boxes rather than one expensive one.
(I realize that for a chat server, that rather complicates
things, but it may be worth it.)

-Yitz



From moof at metamoof.net  Fri Mar 10 04:20:10 2006
From: moof at metamoof.net (Moof)
Date: Fri, 10 Mar 2006 12:20:10 +0100
Subject: [Twisted-Python] Twisted Windows Suggestions
In-Reply-To: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
References: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
Message-ID: <bff8eeef0603100320m21d1c0b4vf741c7b4f82f2f22@mail.gmail.com>

> 1. Running tac/tap files on windows is unnatural. Sure it's easy
> enough for a developer but it's not windows system administrator
> friendly. There are many ways to solve this, and I haven't thought
> about it long enough, but step 1 would just be associating tac and tap
> files with running python.exe twistd on them.
>
> 2. Installing tac/taps as services, seamlessly, without writing your
> own service code.

This is a slightly wider issue than just Windows, but seeing as I
develop on it, and it affects me, I'm vaguely lumping it here: twistd
needs better logfile handling. It appears to be incredibly difficult
to change the standard formatter, and I'm sick and tired fo "Romance
Standard Time" appearing all over my logfiles. Also, I see no way to
do anything meaningful like running a DailyLogFile instead of just a
normal stream. Windows file semantics are not the same as unix ones,
and one cannot run logrotate scripts on windows logs if the log files
are open by the logging application.

Running things in consoles is *not* the Windows way. Hell, the Windows
console sucks on so many levels it's unbelievable, so I'm tempted to
suggest setting up a default "windows console" for twistd which would
open up on the double-click of a .tap, .tac or whatever, that can be
minimised to the systray, and would allow you to do things like  shut
down the programme or "send sighup" in the defautl menus, maybe even
do it per service inside the application. It'd be even better if it
were controllable from within the .tac file, so the application
programmer can change things like the icon and add and remove menu
items. I'm happy to aid in the development of such a "console".

This is independently of being able to install it as a service, which
would, presumably, remove the need for such a GUI. I don't
administrate much in the way of windows machines, and certainly dont'
run much int he way of windows services, so I don't know what the
"windows way" is, as opposed to "my way" of doing services.



From njp at njp.us  Fri Mar 10 07:33:33 2006
From: njp at njp.us (Norm Petterson)
Date: Fri, 10 Mar 2006 09:33:33 -0500
Subject: [Twisted-Python] Twisted Windows Suggestions
In-Reply-To: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
References: <972ec5bd0603091515s17c6986du2c6617d8859f2028@mail.gmail.com>
Message-ID: <9670a730603100633u7648c048x5e88be97cf7200c0@mail.gmail.com>

On 3/9/06, Timothy Fitz <TimothyFitz at gmail.com> wrote:
>
> Teratorn and I are stepping up to support twisted on windows


Thank you!


2. Installing tac/taps as services, seamlessly, without writing your
> own service code.



More seamlessly than via Cory Dodt's sandbox ntsvc mechanism (
http://twistedmatrix.com/trac/browser/sandbox/moonfallen/README-ntsvc.txt?rev=16221),
which I'm happily using in many places? A little work to setup, but it
doesn't involve writing any service code directly...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060310/82c31ffb/attachment.html>

From itamar at itamarst.org  Fri Mar 10 09:47:03 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 10 Mar 2006 11:47:03 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<1141939705.9187.2.camel@localhost.localdomain>
	<2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>
Message-ID: <1142009224.9159.4.camel@localhost.localdomain>

On Fri, 2006-03-10 at 02:12 +0200, Yitzchak Gale wrote:

> > IIRC most reactors will try to accept as many as possible,
> > up to some limit in each iteration.
> 
> If I was going to do A, I would certainly want to check that
> carefully. It's not like using select() or poll(). To get a
> non-blocking accept(), for example, I think you need to
> set some flag on the listen() call.

In this context, "if I recall correctly" is referring to when glyph and
I wrote that code :) accept()s are certainly non-blocking,
 and I just checked the code and it does indeed accept up to a 100, with
some dynamic changes based on rate of connections.





From itamar at itamarst.org  Fri Mar 10 09:50:10 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 10 Mar 2006 11:50:10 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
	<2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>
Message-ID: <1142009411.9159.8.camel@localhost.localdomain>

On Fri, 2006-03-10 at 02:02 +0200, Yitzchak Gale wrote:

> But I think I'll go with B anyway. It is neater in
> that it separates performance under load
> from the architechture of the high-level processing.
> With A, we will always have to worry about
> dividing the XML stuff into small enough pieces
> to let the event loop in often enough.

You could also use a thread pool for the XML processing. This will
certainly help make the event loop stay more responsive without breaking
up work manually. However, if the heavy lifting in the code is pure
Python you won't be able to take advantage of multiple CPUs, because of
the global interpreter lock. Processes also have the benefit that you
can dispatch them to multiple machines.




From ellisonbg at gmail.com  Fri Mar 10 18:12:43 2006
From: ellisonbg at gmail.com (Brian Granger)
Date: Fri, 10 Mar 2006 17:12:43 -0800
Subject: [Twisted-Python] waitForDeferred Question
Message-ID: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>

Hi,

I have a function that returns a Deferred.  I need to have the result
of this Deferred returned in a (apparently) blocking/synchronous
manner:

def myfuncBlocking():
  d = myfuncReturnsDeferred()
  ...
  result =

  return result

I need to be able to call this function like:

result = myfuncBlocking()

The question is how to get the result out of the Deferred() and make
it *look* like myfuncBlocking() has blocked.  I have looked over the
waitForDeferred() docstrings and code, but it is still not obvious how
to use waitForDeferred() to accomplish this.  The blockOn() capability
of the gthreadless.py module (in the sandbox) seems to accomplish what
I want, but I would like to use things that are in the main twisted
trunk.  What is the best way to go about this?

Thanks

Brian

--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From glyph at divmod.com  Fri Mar 10 19:21:04 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 10 Mar 2006 21:21:04 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
Message-ID: <20060311022104.6122.2069055987.divmod.quotient.14752@ohm>

On Fri, 10 Mar 2006 17:12:43 -0800, Brian Granger <ellisonbg at gmail.com> wrote:

>What is the best way to go about this?

"The only way to win is not to play the game."

This issue has been discussed repeatedly - long story short, it's just a bad idea.  Since you didn't explain your exact problem, I have to assume that there's a way to do the higher-level thing that you want without presenting a blocking interface.

If you don't mind some vitriol, there is more information here, on my blog: http://glyf.livejournal.com/40037.html



From grimmtooth at gmail.com  Fri Mar 10 21:36:04 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 10 Mar 2006 23:36:04 -0500
Subject: [Twisted-Python] FTP: A little help?
Message-ID: <8f4623fb0603102036j6357b5d7xe9746babbe1aef71@mail.gmail.com>

For no good reason, I've been trying to implement a basic FTP server w/
Twisted 2.2. After a few puzzling exceptions, some custom code, TOSSING the
custom code, and more quality time with the source, I've come to the
conclusion that I need a nudge in the right direction.

Initially, it looks like it should be pretty straightforward (as much as it
ever gets in Twisted anyway :), but it's not working. Here's the code:

===============

from twisted.protocols.ftp  import FTPFactory
from twisted.protocols.ftp  import FTPRealm
from twisted.cred.portal    import Portal

print "Starting FTP server"

p = Portal(FTPRealm('./'))   # start up in local dir for giggles
f = FTPFactory(p)

from twisted.internet import reactor
reactor.listenTCP(21, f)
reactor.run()
print "FTP Server terminated."

===============

Simple. This raises no exceptions, and appears to be working until I
actually log in.

===============

ftp> open localhost
Connected to elric.
220 Twisted 2.2.0 FTP Server
User (elric:(none)): anonymous
331 Guest login ok, type your email address as password.
Password:
530 Sorry, Authentication failed.
Login failed.

===============

The shell it's running from shows no errors or exceptions. So why did my
anonymous login fail?

(I'll wait until I solve that before I tackle the issue of actual "real"
users)


--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060310/859e6e50/attachment.html>

From bgranger at scu.edu  Fri Mar 10 21:44:26 2006
From: bgranger at scu.edu (Brian Granger)
Date: Fri, 10 Mar 2006 20:44:26 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
Message-ID: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>

I probably should have given more details about what I am trying to
do.  Before I get going, I should mention that I have been using
Twisted heavily for 1.5 years and I have, for the most part, learned
to play the "Twisted Game."

So here is what I am working on:

I am developing objects (for scientific computing) that 1) use Twisted
to talk over the network and 2) need to be used interactively from a
python prompt.  This second point is really where the difficult and
interesting things are.

To allow Twisted-things to be used interactively I have built a
version of PyCrust/PyShell that is "Twisted enabled."  We have used
the standard threadedselectreactor to interleave the Twisted event
loop with that of PyShell.  We also inject the reactor into the users
interactive namespace.  Thus, you can use all of Twisted's
capabilities from an interactive python prompt.

As a side note, this situation is extremely nice for playing around
with Twisted and doing interactive debugging of Twisted-using
applications.

Here is a typical (madeup) usage case:

>>> a = TwistedEnabledObject()
>>> a.connect(addr)                # This uses reactor.connectTCP to
connect to a server
>>> myresult = a.computeSomethingUsingTwisted(args)     # This should block!!!
...and maybe...
>>> y = f(myresult)
>>> plot(y)

The key point is that the user will want to direclty use myresult
interactively.  Also they won't know ahead of time what actions they
will want to do.  Anyone who has used Matlab or Mathematica
(scientists) will find this way of working extremely familiar.  There
is simply no way that users will want to get a Deferred() and add
callbacks to trigger actions.  Thus I would argue that I DO want to
make my properly written asynchronous code blocking.

The implementation of computeSomethingUsingTwisted() is the difficult part:

class TwistedEnabledObject():

  def connect(addr):
    self.factory = MyClientFactory()
    self.connector = reactor.connectTCP(addr[0],addr[1],self.factory)

  def computeSomethingUsingTwisted(args):
    d = self.connector.transport.protocol.computeAndReturnDeferred(args)
    # Now I have a Deferred that will have the result, but I want to wait until
    # the result or an error is ready and then decide what the result should be
    result = # what to put here?
    return result

I don't think what I am doing goes against the "Twisted-way."  And my
needs are not coming from any inability on my part to write proper
asynchronous code.  The high level stuff here is really bbeing driven
by the need to use these object interactively.

On 3/10/06, glyph at divmod.com <glyph at divmod.com> wrote:

> If you don't mind some vitriol, there is more information here, on my blog: http://glyf.livejournal.com/40037.html

I am familiar with this and other similar "vitriols."  I fully agree
with most of what you say about threads.  But what does my usage case
have to do with threads?

cheers,

Brian

Brian Granger
Santa Clara University
ellisonbg at gmail.com



From screwtape at froup.com  Fri Mar 10 22:46:43 2006
From: screwtape at froup.com (Tim Allen)
Date: Sat, 11 Mar 2006 16:46:43 +1100
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
Message-ID: <08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>

On 11 Mar 2006, at 15:44, Brian Granger wrote:

> Here is a typical (madeup) usage case:
>
>>>> a = TwistedEnabledObject()
>>>> a.connect(addr)                # This uses reactor.connectTCP to
> connect to a server
>>>> myresult = a.computeSomethingUsingTwisted(args)     # This  
>>>> should block!!!
> ...and maybe...
>>>> y = f(myresult)
>>>> plot(y)
>
> The key point is that the user will want to direclty use myresult
> interactively.  Also they won't know ahead of time what actions they
> will want to do.  Anyone who has used Matlab or Mathematica
> (scientists) will find this way of working extremely familiar.  There
> is simply no way that users will want to get a Deferred() and add
> callbacks to trigger actions.  Thus I would argue that I DO want to
> make my properly written asynchronous code blocking.

It sounds like this is a user-interface problem rather than a  
software-design problem. A common tool for solving such problems is  
to ask, "What does other, similar software do?".

It occurs to me that the problem you're facing is not unlike, oh, job- 
control in bash or zsh. I'd imagine a usage case that looks something  
like this:

 >>> a = TwistedEnabledObject()
 >>> a.connect(addr)
[1] TwistedEnabledObject.connect(self, addr)
[1] done TwistedEnabledObject.connect(self, addr)
 >>> result1 = a.computeSomethingUsingTwisted(args)
[1] TwistedEnabledObject.computeSomethingUsingTwisted(args)
 >>> result2 = a.computeSomeOtherThingUsingTwisted(args)
[2] TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
 >>> print 1+3
4
 >>> jobs()
[1] running TwistedEnabledObject.computeSomethingUsingTwisted(args)
[2] running TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
 >>> print repr(result1)
<deferredResult (waiting for result)>
[1] done TwistedEnabledObject.computeSomethingUsingTwisted(args)
 >>> print repr(result1)
<deferredResult with value: 42>
 >>> print result.value
42

I think I'd appreciate an environment like that more than an  
environment that made me wait for things all the time. I don't know  
if it's possible to achieve with your PyCrust/Twisted hybrid, of course.



From bgranger at scu.edu  Fri Mar 10 23:13:05 2006
From: bgranger at scu.edu (Brian Granger)
Date: Fri, 10 Mar 2006 22:13:05 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
Message-ID: <fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>

On 3/10/06, Tim Allen <screwtape at froup.com> wrote:
> On 11 Mar 2006, at 15:44, Brian Granger wrote:
>
> > Here is a typical (madeup) usage case:
> >
> >>>> a = TwistedEnabledObject()
> >>>> a.connect(addr)                # This uses reactor.connectTCP to
> > connect to a server
> >>>> myresult = a.computeSomethingUsingTwisted(args)     # This
> >>>> should block!!!
> > ...and maybe...
> >>>> y = f(myresult)
> >>>> plot(y)
> >
> > The key point is that the user will want to direclty use myresult
> > interactively.  Also they won't know ahead of time what actions they
> > will want to do.  Anyone who has used Matlab or Mathematica
> > (scientists) will find this way of working extremely familiar.  There
> > is simply no way that users will want to get a Deferred() and add
> > callbacks to trigger actions.  Thus I would argue that I DO want to
> > make my properly written asynchronous code blocking.
>
> It sounds like this is a user-interface problem rather than a
> software-design problem. A common tool for solving such problems is
> to ask, "What does other, similar software do?".
>
> It occurs to me that the problem you're facing is not unlike, oh, job-
> control in bash or zsh. I'd imagine a usage case that looks something
> like this:
>

I agree that it is a user interface question.  Other software along
these lines, like Mathematica and Matlab are fully blocking. 
Personally, I think this is too restrictive.  For the cases you bring
up, where the computeSomethingUsingTwisted() method could take a long
time it completely makes sense to have something like a job control
interface.  In fact, we are building this design pattern into our UI
where appropriate.

But, in many cases, the computeSomethingUsingTwisted() doesn't take
long at all.  An example of this would be probing the status of the
remote server or a trivial computation that a server has relevant data
for.  In these cases, the result is available nearly instantly (faster
then the user could detect, like 1 ms) and it is silly to have a job
interface.  You simply want the result directly.

In our system, we can easily imagine a user making dozens of
interactive calls like this over short periods of time.  When all of
these results are available essentially immediately, it iseems like
overkill to have a more complicated UI.  But, it is very appropriate
to use Twisted underneath, because it really is an asynchronous system
and all the error detection and handling is best dealt with that
asynchronously.  But as long as there are no errors, I woult like the
Twisted machinery to just pass along the result directly.


>  >>> a = TwistedEnabledObject()
>  >>> a.connect(addr)
> [1] TwistedEnabledObject.connect(self, addr)
> [1] done TwistedEnabledObject.connect(self, addr)
>  >>> result1 = a.computeSomethingUsingTwisted(args)
> [1] TwistedEnabledObject.computeSomethingUsingTwisted(args)
>  >>> result2 = a.computeSomeOtherThingUsingTwisted(args)
> [2] TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
>  >>> print 1+3
> 4
>  >>> jobs()
> [1] running TwistedEnabledObject.computeSomethingUsingTwisted(args)
> [2] running TwistedEnabledObject.computeSomeOtherThingUsingTwisted(args)
>  >>> print repr(result1)
> <deferredResult (waiting for result)>
> [1] done TwistedEnabledObject.computeSomethingUsingTwisted(args)
>  >>> print repr(result1)
> <deferredResult with value: 42>
>  >>> print result.value
> 42
>
> I think I'd appreciate an environment like that more than an
> environment that made me wait for things all the time. I don't know
> if it's possible to achieve with your PyCrust/Twisted hybrid, of course.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From mike at mkp.ca  Fri Mar 10 23:24:59 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Sat, 11 Mar 2006 01:24:59 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
Message-ID: <86fylpebwk.wl%mike@mkp.ca>

At Fri, 10 Mar 2006 22:13:05 -0800,
Brian Granger wrote:
> 
> In our system, we can easily imagine a user making dozens of
> interactive calls like this over short periods of time.  When all of
> these results are available essentially immediately, it iseems like
> overkill to have a more complicated UI.  But, it is very appropriate
> to use Twisted underneath, because it really is an asynchronous system
> and all the error detection and handling is best dealt with that
> asynchronously.  But as long as there are no errors, I woult like the
> Twisted machinery to just pass along the result directly.

It sounds like you need to teach your interpreter to deal with
deferreds.  I'd do something very vaugely like this:

def eval_loop(result):
  print result
  expression = raw_input(">>> ")
  d = maybeDeferred(eval(expression))
  d.addCallback(lambda r:reactor.callLater(eval_loop, r))

reactor.callWhenRunning(eval_loop, "Welcome to StupidPython")
reactor.run()

Obviously this is not the correct way to implement an interpreter and
I don't know whether I've remembered all the names and signatures
correctly, but hopefully it conveys the idea.

Mike.



From corydodt at twistedmatrix.com  Fri Mar 10 23:57:36 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Fri, 10 Mar 2006 22:57:36 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
Message-ID: <441274E0.2040906@twistedmatrix.com>

Brian Granger wrote:
> But, in many cases, the computeSomethingUsingTwisted() doesn't take
> long at all.  An example of this would be probing the status of the
> remote server or a trivial computation that a server has relevant data
> for.  In these cases, the result is available nearly instantly (faster
> then the user could detect, like 1 ms) and it is silly to have a job
> interface.  You simply want the result directly.

Another approach: wait 10ms every time you push out a prompt.  The
problem is you're trying to generate the prompt in a synchronous manner
in an asynchronous environment.  10ms is well below the threshhold that
users will notice.  You'll still want job control for long calculations,
but you can present it in a more natural way.. if it's not available at
the first prompt, it's a background job.

C




From bgranger at scu.edu  Sat Mar 11 00:08:09 2006
From: bgranger at scu.edu (Brian Granger)
Date: Fri, 10 Mar 2006 23:08:09 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <441274E0.2040906@twistedmatrix.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
	<441274E0.2040906@twistedmatrix.com>
Message-ID: <fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>

On 3/10/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> Brian Granger wrote:
> > But, in many cases, the computeSomethingUsingTwisted() doesn't take
> > long at all.  An example of this would be probing the status of the
> > remote server or a trivial computation that a server has relevant data
> > for.  In these cases, the result is available nearly instantly (faster
> > then the user could detect, like 1 ms) and it is silly to have a job
> > interface.  You simply want the result directly.
>
> Another approach: wait 10ms every time you push out a prompt.  The
> problem is you're trying to generate the prompt in a synchronous manner
> in an asynchronous environment.  10ms is well below the threshhold that
> users will notice.  You'll still want job control for long calculations,
> but you can present it in a more natural way.. if it's not available at
> the first prompt, it's a background job.
>

I am not super familiar with PyShell/PyCrust, but I think everything
(including the prompt generation) is done asynchronously.  The only
thing that could really block would be long running python code
executed in the users namespace in PyShell.  But, I do like the idea
of having immediate results return directly, but have everything else
become a background job.  But, the question still remains - how do you
convert a Deferred() to a blocking, directly returned result?




> C
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From moof at metamoof.net  Sat Mar 11 05:37:43 2006
From: moof at metamoof.net (Moof)
Date: Sat, 11 Mar 2006 04:37:43 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
	<441274E0.2040906@twistedmatrix.com>
	<fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>
Message-ID: <bff8eeef0603110437k79d55741i88951ec0f54ea9f5@mail.gmail.com>

> I am not super familiar with PyShell/PyCrust, but I think everything
> (including the prompt generation) is done asynchronously.  The only
> thing that could really block would be long running python code
> executed in the users namespace in PyShell.  But, I do like the idea
> of having immediate results return directly, but have everything else
> become a background job.  But, the question still remains - how do you
> convert a Deferred() to a blocking, directly returned result?

You could use something like
http://svn.twistedmatrix.com/cvs/sandbox/exarkun/threadwrapper.py?view=markup&rev=12804
but I really dont' reccommend it. I think redefining the way the
interpreter works is the way ahead.

One way to do it would be to think of the space between the last >>>
prompt and the current one as "flexible". How about this for an
example session:

>>> somethingThatReturnsADeferred()

this will return a deferred, so natually the first thing you do is
attach callbacks and errbacks to it to know when the deferred has
finished. You display some indication of this:

<Deferred 1 at 0x12345678. Currently: Running>
>>>

You even make a nice coloured "running" icon to put on one side, if
you want. When it stops, you change "Running" to "Completed", in the
same line. Assuming nothing has been done yet, you either raise the
exception (or, I'd prefer printing out the traceback and putting the
Failure in a special variable, called, say _f, it's more flexible) or
print out repr(d.result) before putting d.result in _ and the deferred
in, say, d. The important thing here is to print out the result in the
space between the two >>>, expanding it as necessary. Thus the screen
ends up looking like this:

>>>  somethingThatReturnsADeferred()
<Deferred 1 at 0x12345678. Currently: Completed>
Result from Deferred 1:
['this', 'is', 'a', 'result']
>>>

If someone has already executed a new command, you display *which*
deferred the result comes form and skip the _ and d assignemnt step,
maybe assiging it to another special variable.

Other enhancement would be to add currently pending deferreds to a
variable or command you can quickly use to check the status, eg:

>>> jobs
1. <Deferred 1 at 0x12345678: Running, Next callback: somefunc(result,
arg1, arg2, kw1=val1>
2. <Deferred 2 at 0x12345679: Running, Next callback: somefunc(result,
arg1, arg2, kw1=val4>
3. <Deferred 3 at 0x12345680: Running, Next callback: somefunc(result,
arg1, arg2, kw1=val3>
>>> important_deferred = jobs[1] #so that deferred will not be garbage
collected once it falls out of scope

You might also want to add a convenience function result() which takes
a deferred and does the whole putting of the result in _ and the
deferred in d.

There are plenty of ways to do it. Trying to make it look blocking is
the wrong way to go about it, IMO.

Also, I'd be quite interested to see a twisted-compatible PyCrust.
Maybe even adding the twisted log to a tab in the bottom pane of the
window. I'd be happy to lend a hand in coding such a beast, if you'd
like one.

It'd be especilly nice if it could do something manhole-compatible, so
pycrust could attach to remote twisted processes...

Moof



From p.mayers at imperial.ac.uk  Sat Mar 11 06:31:58 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Mar 2006 13:31:58 +0000
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
Message-ID: <4412D14E.4080103@imperial.ac.uk>

Brian Granger wrote:
> I probably should have given more details about what I am trying to
> do.  Before I get going, I should mention that I have been using
> Twisted heavily for 1.5 years and I have, for the most part, learned
> to play the "Twisted Game."

If that is the case, you really ought to have known the answer was "you 
don't" ;o)

> 
> So here is what I am working on:
> 
> I am developing objects (for scientific computing) that 1) use Twisted
> to talk over the network and 2) need to be used interactively from a
> python prompt.  This second point is really where the difficult and
> interesting things are.

That is not an unreasonable use-case in fact (IMHO of course).

The sad thing is that PyCrust is wxPython so by definition AWFUL. The 
many suggestions already are correct - stop the interpreter GUI for a 
certain time (say 10ms) then if the deferred calls back, restart with 
the result else return a "backgrounded" job

That said, possible someone can comment if this code is current:

http://svn.twistedmatrix.com/cvs/trunk/doc/core/examples/threadedselect/blockingdemo.py

The Manager class getDeferred method might be a start, if you can 
integrate it with the wx-style tsr.



From exarkun at divmod.com  Sat Mar 11 09:12:40 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Mar 2006 11:12:40 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <8f4623fb0603102036j6357b5d7xe9746babbe1aef71@mail.gmail.com>
Message-ID: <20060311161240.6122.677387085.divmod.quotient.14968@ohm>

On Fri, 10 Mar 2006 23:36:04 -0500, Jeff Grimmett <grimmtooth at gmail.com> wrote:
>For no good reason, I've been trying to implement a basic FTP server w/
>Twisted 2.2. After a few puzzling exceptions, some custom code, TOSSING the
>custom code, and more quality time with the source, I've come to the
>conclusion that I need a nudge in the right direction.
>
>Initially, it looks like it should be pretty straightforward (as much as it
>ever gets in Twisted anyway :), but it's not working. Here's the code:
>
>===============
>
>from twisted.protocols.ftp  import FTPFactory
>from twisted.protocols.ftp  import FTPRealm
>from twisted.cred.portal    import Portal
>
>print "Starting FTP server"
>
>p = Portal(FTPRealm('./'))   # start up in local dir for giggles

Your portal has no credentials checkers, not even one that allows anonymous access.  So, no one can log in.  Try giving it a twisted.cred.checkers.AllowAnonymousAccess() at least and see if you get any further.

Jean-Paul



From itamar at itamarst.org  Sat Mar 11 09:22:18 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 11 Mar 2006 11:22:18 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
Message-ID: <1142094138.8679.12.camel@localhost.localdomain>

On Fri, 2006-03-10 at 20:44 -0800, Brian Granger wrote:

> To allow Twisted-things to be used interactively I have built a
> version of PyCrust/PyShell that is "Twisted enabled."  We have used
> the standard threadedselectreactor to interleave the Twisted event
> loop with that of PyShell.  We also inject the reactor into the users
> interactive namespace.  Thus, you can use all of Twisted's
> capabilities from an interactive python prompt.

I think the new manhole (python interpreter over ssh/telnet) in
twisted.conch has some Deferred support you might want to look at.





From bgranger at scu.edu  Sat Mar 11 11:10:38 2006
From: bgranger at scu.edu (Brian Granger)
Date: Sat, 11 Mar 2006 10:10:38 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <bff8eeef0603110437k79d55741i88951ec0f54ea9f5@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<08D3E91D-512A-496D-A751-C01CC879CA53@froup.com>
	<fa8579a40603102213y4d39d483m89f55f7895ec09d0@mail.gmail.com>
	<441274E0.2040906@twistedmatrix.com>
	<fa8579a40603102308r43f7cc23w161327116aeb6835@mail.gmail.com>
	<bff8eeef0603110437k79d55741i88951ec0f54ea9f5@mail.gmail.com>
Message-ID: <fa8579a40603111010m12cbd0c3l1528d815befedaab@mail.gmail.com>

On 3/11/06, Moof <moof at metamoof.net> wrote:
> > I am not super familiar with PyShell/PyCrust, but I think everything
> > (including the prompt generation) is done asynchronously.  The only
> > thing that could really block would be long running python code
> > executed in the users namespace in PyShell.  But, I do like the idea
> > of having immediate results return directly, but have everything else
> > become a background job.  But, the question still remains - how do you
> > convert a Deferred() to a blocking, directly returned result?
>
> You could use something like
> http://svn.twistedmatrix.com/cvs/sandbox/exarkun/threadwrapper.py?view=markup&rev=12804
> but I really dont' reccommend it. I think redefining the way the
> interpreter works is the way ahead.
>
> One way to do it would be to think of the space between the last >>>
> prompt and the current one as "flexible". How about this for an
> example session:
>
> >>> somethingThatReturnsADeferred()
>
> this will return a deferred, so natually the first thing you do is
> attach callbacks and errbacks to it to know when the deferred has
> finished. You display some indication of this:
>
> <Deferred 1 at 0x12345678. Currently: Running>
> >>>
>
> You even make a nice coloured "running" icon to put on one side, if
> you want. When it stops, you change "Running" to "Completed", in the
> same line. Assuming nothing has been done yet, you either raise the
> exception (or, I'd prefer printing out the traceback and putting the
> Failure in a special variable, called, say _f, it's more flexible) or
> print out repr(d.result) before putting d.result in _ and the deferred
> in, say, d. The important thing here is to print out the result in the
> space between the two >>>, expanding it as necessary. Thus the screen
> ends up looking like this:
>
> >>>  somethingThatReturnsADeferred()
> <Deferred 1 at 0x12345678. Currently: Completed>
> Result from Deferred 1:
> ['this', 'is', 'a', 'result']
> >>>
>
> If someone has already executed a new command, you display *which*
> deferred the result comes form and skip the _ and d assignemnt step,
> maybe assiging it to another special variable.
>

The problem is that the user will want to do:

>>> result = computeSomething()

OR

>>> result = 2.0*computeOneThing()*math.sin(computeAnother())

What should happen in these cases?  Ideally, the _entire_ command
should become a "job" that evaluates in a "smart" manner.  That is,
the final result shouldn't be computed until all other results are
available.  Meanwhile, the prompt should retrn to the user so they can
continue working.  But, I don't think this is possible w/o making
changes to CPython itself.  The alternative is to simply make each
command appear to block.

> Other enhancement would be to add currently pending deferreds to a
> variable or command you can quickly use to check the status, eg:
>
> >>> jobs
> 1. <Deferred 1 at 0x12345678: Running, Next callback: somefunc(result,
> arg1, arg2, kw1=val1>
> 2. <Deferred 2 at 0x12345679: Running, Next callback: somefunc(result,
> arg1, arg2, kw1=val4>
> 3. <Deferred 3 at 0x12345680: Running, Next callback: somefunc(result,
> arg1, arg2, kw1=val3>
> >>> important_deferred = jobs[1] #so that deferred will not be garbage
> collected once it falls out of scope
>
> You might also want to add a convenience function result() which takes
> a deferred and does the whole putting of the result in _ and the
> deferred in d.
>
> There are plenty of ways to do it. Trying to make it look blocking is
> the wrong way to go about it, IMO.
>

For long running commands I completely agree.  But for commands that
complete quickly (unless they fail in which case an exception should
be raised) I disagree.  For example:

>>> a = getPreComputedVariable('a')

Ib this case the onject 'a' on some server needs to be serialized and
brought back to the local machine.  There is no reason to mess with
Deferrreds in this case.

> Also, I'd be quite interested to see a twisted-compatible PyCrust.
> Maybe even adding the twisted log to a tab in the bottom pane of the
> window. I'd be happy to lend a hand in coding such a beast, if you'd
> like one.
>
> It'd be especilly nice if it could do something manhole-compatible, so
> pycrust could attach to remote twisted processes...
>
> Moof
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From bgranger at scu.edu  Sat Mar 11 11:24:37 2006
From: bgranger at scu.edu (Brian Granger)
Date: Sat, 11 Mar 2006 10:24:37 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <4412D14E.4080103@imperial.ac.uk>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<4412D14E.4080103@imperial.ac.uk>
Message-ID: <fa8579a40603111024k5b73bd8gb3c5801c8d98190f@mail.gmail.com>

On 3/11/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> Brian Granger wrote:
> > I probably should have given more details about what I am trying to
> > do.  Before I get going, I should mention that I have been using
> > Twisted heavily for 1.5 years and I have, for the most part, learned
> > to play the "Twisted Game."
>
> If that is the case, you really ought to have known the answer was "you
> don't" ;o)
>

I respectfully disagree that what I am trying to do somehow violates
the unwritten Twisted ethic.  I am not using threads and I don't have
blocking code anywhere.  When I write things like:

>>> myresult = a.computeSomethingThatUsesTwisted()

It does not really block - it only appears to block.  What I mean by
this is that is does not block execution, it only blocks the user from
starting new commands.  The full machinery of Twisted is free to
proceed while the result is pending.

I guess I think of it as a shorthand for making the callback of a
Deferred an assignment of the result to a global variable myresult. 
Everything is asynchronous.


> >
> > So here is what I am working on:
> >
> > I am developing objects (for scientific computing) that 1) use Twisted
> > to talk over the network and 2) need to be used interactively from a
> > python prompt.  This second point is really where the difficult and
> > interesting things are.
>
> That is not an unreasonable use-case in fact (IMHO of course).
>
> The sad thing is that PyCrust is wxPython so by definition AWFUL. The
> many suggestions already are correct - stop the interpreter GUI for a
> certain time (say 10ms) then if the deferred calls back, restart with
> the result else return a "backgrounded" job
>
> That said, possible someone can comment if this code is current:
>
> http://svn.twistedmatrix.com/cvs/trunk/doc/core/examples/threadedselect/blockingdemo.py
>
> The Manager class getDeferred method might be a start, if you can
> integrate it with the wx-style tsr.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
Brian Granger
Santa Clara University
ellisonbg at gmail.com



From bgranger at scu.edu  Sat Mar 11 11:32:43 2006
From: bgranger at scu.edu (Brian Granger)
Date: Sat, 11 Mar 2006 10:32:43 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <1142094138.8679.12.camel@localhost.localdomain>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<1142094138.8679.12.camel@localhost.localdomain>
Message-ID: <fa8579a40603111032s7907ef78t167b75533a6745a1@mail.gmail.com>

Regardless of whether or not I should *want* to do this (get the
result of a Deferred() in a manner the *appears* synchronous) there is
a question that remains:

Can it be accomplish using waitForDeferred?  The docstring seems to
imply that it can, but it is not clear.

If so, could someone provide an working example.

Just a side note, I seem to recall Guido has even citing this type of
usage scenario as one of the motivations for improving generators.

Cheers,

Brian



From radeex at gmail.com  Sat Mar 11 11:58:06 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 11 Mar 2006 10:58:06 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603111032s7907ef78t167b75533a6745a1@mail.gmail.com>
References: <fa8579a40603101712ic6f5d01tfe1869f2acbe1ca3@mail.gmail.com>
	<20060311022104.6122.2069055987.divmod.quotient.14752@ohm>
	<fa8579a40603102044r51bdcee0v4eb1067310d305fb@mail.gmail.com>
	<1142094138.8679.12.camel@localhost.localdomain>
	<fa8579a40603111032s7907ef78t167b75533a6745a1@mail.gmail.com>
Message-ID: <60ed19d40603111058o11ad3c6dp3a791d5fd5d381d9@mail.gmail.com>

On 3/11/06, Brian Granger <bgranger at scu.edu> wrote:
> Regardless of whether or not I should *want* to do this (get the
> result of a Deferred() in a manner the *appears* synchronous) there is
> a question that remains:
>
> Can it be accomplish using waitForDeferred?  The docstring seems to
> imply that it can, but it is not clear.
>
> If so, could someone provide an working example.
>
> Just a side note, I seem to recall Guido has even citing this type of
> usage scenario as one of the motivations for improving generators.

waitForDeferred really can't do this for you. I hope that the
docstring is clear enough to show that it really requires special
syntax every time you want to wait for a Deferred.

As far as the improved generators in the upcoming release of Python,
they *still* would require you to have special syntax when you want to
wait for a Deferred, but it's fewer lines of code.

I think what other people have suggested, about just having your UI
handle Deferreds specially, is the way to go. Of course, >>> 3 *
fetchDeferred() will be a quite difficult thing to do. I'm not sure if
it'd be possible at all with Python itself, so you may just end up
exposing some minilanguage other than Python to your end users. You
*might* be able to do some weird hacks with trace hooks or something
to do it in Python, but I'm not certain.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From grimmtooth at gmail.com  Sat Mar 11 12:37:15 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Sat, 11 Mar 2006 14:37:15 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <20060311161240.6122.677387085.divmod.quotient.14968@ohm>
References: <8f4623fb0603102036j6357b5d7xe9746babbe1aef71@mail.gmail.com>
	<20060311161240.6122.677387085.divmod.quotient.14968@ohm>
Message-ID: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>

On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
>
> Your portal has no credentials checkers, not even one that allows
> anonymous access.  So, no one can log in.  Try giving it a
> twisted.cred.checkers.AllowAnonymousAccess() at least and see if you get
> any further.
>

Bingo. That also gives me some insight at what I need to do to handle
authentication needs (from looking in t.c.checkers). Thanks!

Um, is there a place that recipies like this could be posted in general? I
know that the tm.com is now essentially a big wiki, but I'm getting lost on
it. I figure a mostly working example trumps no example at all :-)


--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060311/bd8e481d/attachment.html>

From exarkun at divmod.com  Sat Mar 11 12:44:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Mar 2006 14:44:21 -0500
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <fa8579a40603111010m12cbd0c3l1528d815befedaab@mail.gmail.com>
Message-ID: <20060311194421.6122.644459607.divmod.quotient.15047@ohm>

On Sat, 11 Mar 2006 10:10:38 -0800, Brian Granger <bgranger at scu.edu> wrote:
> [snip]
>
>The problem is that the user will want to do:
>
>>>> result = computeSomething()
>
>OR
>
>>>> result = 2.0*computeOneThing()*math.sin(computeAnother())
>
>What should happen in these cases?  Ideally, the _entire_ command
>should become a "job" that evaluates in a "smart" manner.  That is,
>the final result shouldn't be computed until all other results are
>available.  Meanwhile, the prompt should retrn to the user so they can
>continue working.  But, I don't think this is possible w/o making
>changes to CPython itself.  The alternative is to simply make each
>command appear to block.

The difficulty you are encountering is that you want to use a language which is very much like Python as the input for your command shell, but which is not quite Python.  If you look at it this way, it should be clear that simply evaluating the input as Python will never give you a satisfactory solution.

One approach you might take, instead, is to parse the input using the compiler module, rewrite the AST so as to account for a Deferred at every step of the evaluation of the expression, and then compile the result into bytecode and execute that.

Taking your example:

    result = 2.0 * computeOneThing() * math.sin(computeAnother())

You would want to rewrite this to:

    _d1 = defer.maybeDeferred(computeAnother)
    _d1.addCallback(lambda result: math.sin(result))
    _d2 = defer.maybeDeferred(computeOneThing)
    _d2.addCallback(lambda result: result * 2.0)
    _d3 = defer.gatherResults([_d1, _d2])
    _d3.addCallback(lambda (left, right): left * right)
    _d3.addCallback(lambda result: assign("result", result))
    _d3.addCallback(lambda ign: continueREPL())

As you can see, this is a fairly simple mechanical transformation.  In addition to the steps I've taken above, you may also want to serialize the operations, in case allowing computeOneThing() and computeAnother() to run in parallel would be surprising to your users.

Jean-Paul



From exarkun at divmod.com  Sat Mar 11 12:49:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 11 Mar 2006 14:49:47 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>
Message-ID: <20060311194947.6122.1121837635.divmod.quotient.15049@ohm>

On Sat, 11 Mar 2006 14:37:15 -0500, Jeff Grimmett <grimmtooth at gmail.com> wrote:
>On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>>
>>
>> Your portal has no credentials checkers, not even one that allows
>> anonymous access.  So, no one can log in.  Try giving it a
>> twisted.cred.checkers.AllowAnonymousAccess() at least and see if you get
>> any further.
>>
>
>Bingo. That also gives me some insight at what I need to do to handle
>authentication needs (from looking in t.c.checkers). Thanks!
>
>Um, is there a place that recipies like this could be posted in general? I
>know that the tm.com is now essentially a big wiki, but I'm getting lost on
>it. I figure a mostly working example trumps no example at all :-)

Twisted/doc/core/examples/ is probably a good place for an example FTP server.  If you submit one to the issue tracker, someone will add it to the repository.

Jean-Paul



From gale at sefer.org  Sat Mar 11 14:11:34 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Sat, 11 Mar 2006 23:11:34 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1142009224.9159.4.camel@localhost.localdomain>
References: <752e01c642a3$56037f10$6402a8c0@dcore> <1141896657.0@gershon>
	<2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<1141939705.9187.2.camel@localhost.localdomain>
	<2608b8a80603091612w84f1aefv3bad667947f1b21b@mail.gmail.com>
	<1142009224.9159.4.camel@localhost.localdomain>
Message-ID: <2608b8a80603111311g48467a50reb87b438c19233eb@mail.gmail.com>

Itamar wrote:
>>> IIRC most reactors will try to accept as many as possible,
>>> up to some limit in each iteration.

I wrote:
>> ...I would certainly want to check that carefully...

> ...I just checked the code and it does indeed accept
> up to a 100, with some dynamic changes based on
> rate of connections.

Great, thanks! 100 should work for me, at current
peak load.



From grimmtooth at gmail.com  Sat Mar 11 14:30:40 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Sat, 11 Mar 2006 16:30:40 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
References: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>
	<20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
Message-ID: <8f4623fb0603111330x606ca841y81b28ef14f35aaa9@mail.gmail.com>

On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:

Twisted/doc/core/examples/ is probably a good place for an example FTP
> server.  If you submit one to the issue tracker, someone will add it to the
> repository.
>

Will do. I'll work it up to be a little more useful then post it.

--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060311/bd192f6e/attachment.html>

From gale at sefer.org  Sat Mar 11 15:31:35 2006
From: gale at sefer.org (Yitzchak Gale)
Date: Sun, 12 Mar 2006 00:31:35 +0200
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1142009411.9159.8.camel@localhost.localdomain>
References: <2608b8a80603091313o3bd024e9sf55e82cb7afa189f@mail.gmail.com>
	<E1FHT10-0001ZK-00@pyramid.twistedmatrix.com>
	<2608b8a80603091602s4d80e7a5rf6120ae670bd79b3@mail.gmail.com>
	<1142009411.9159.8.camel@localhost.localdomain>
Message-ID: <2608b8a80603111431t2c1d9bc6tebdb36d7b8000763@mail.gmail.com>

Itamar Shtull-Trauring wrote:
> Yitzchak Gale wrote:

>> But I think I'll go with B [two processes] anyway.
>> It is neater in that it separates performance under load
>> from the architechture of the high-level processing.
>> With A [simple twisted], we will always have to worry about
>> dividing the XML stuff into small enough pieces
>> to let the event loop in often enough.

> You could also use a thread pool for the XML processing. This will
> certainly help make the event loop stay more responsive without breaking
> up work manually.

I am afraid that a thread pool will not play nicely with
our current monitoring framework.

> However, if the heavy lifting in the code is pure
> Python

It probably will be.

> you won't be able to take advantage of multiple CPUs, because of
> the global interpreter lock.

OK, that is also an issue.

> Processes also have the benefit that you
> can dispatch them to multiple machines.

Good.

Thanks,
Yitz



From general at eepatents.com  Sat Mar 11 16:21:26 2006
From: general at eepatents.com (Ed Suominen)
Date: Sat, 11 Mar 2006 15:21:26 -0800
Subject: [Twisted-Python] waitForDeferred Question
In-Reply-To: <E1FIBNE-0004jx-02@pyramid.twistedmatrix.com>
References: <E1FIBNE-0004jx-02@pyramid.twistedmatrix.com>
Message-ID: <44135B76.5070900@eepatents.com>

On 3/11/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> Brian Granger wrote:
>>> I probably should have given more details about what I am trying to
>>> do.  Before I get going, I should mention that I have been using
>>> Twisted heavily for 1.5 years and I have, for the most part, learned
>>> to play the "Twisted Game."
>> If that is the case, you really ought to have known the answer was "you
>> don't" ;o)
>  
> I respectfully disagree that what I am trying to do somehow violates
> the unwritten Twisted ethic.  I am not using threads and I don't have
> blocking code anywhere.  When I write things like:
>  
>>> myresult = a.computeSomethingThatUsesTwisted()
>  
> It does not really block - it only appears to block.  What I mean by
> this is that is does not block execution, it only blocks the user from
> starting new commands.  The full machinery of Twisted is free to
> proceed while the result is pending.

Rather than thinking of your goal as "blocking" the user from starting a
new command when once is pending, think of it as "deferring" execution
of any new commands entered by the user. With that Twisted-compatible
mindset in place, you can design a queue for deferring your user's commands.

If no commands are pending in the queue, you simply run it right away
and return a deferred to its result, as has been discussed. If the user
starts a new command while the first is still pending, simply wrap the
execution of that new command in its own deferred and chain it to the
pending deferred. If the new command depends on the result of the
pending one, that's just fine. When the first command completes, its
result will be passed to the callback that will then run your
second-entered command.

The outcome of all will be pretty cool for your user. He can type "x =
hugeFunction(a)" and get something like "Computing 'x =
hugeFunction(a)...'" Being impatient, he can then type "y =
massiveFunction(x)" and then get "Waiting for x to compute 'y =
hugeFunction(x)...'" and so on. Instead of being forced to just sit and
wait, he can *benefit* from the async power of Twisted by being able to
stack up his computations and see the whole chain of deferred operations.

By the way, I've been down this "it must block" road myself several
times before I eventually realized that it will never work. Code that
sits around and idles while it waits for something can only exist in a
separate thread or process from the Twisted event loop.

Best regards,
Ed Suominen





From foom at fuhm.net  Sat Mar 11 21:25:37 2006
From: foom at fuhm.net (James Y Knight)
Date: Sat, 11 Mar 2006 23:25:37 -0500
Subject: [Twisted-Python] Removal of deprecated twisted.python.components
	functionality
Message-ID: <112F6F41-865D-4E72-86F1-9203F323C0A6@fuhm.net>

Everything that was previously marked as deprecated in  
twisted.python.components (and has been since Twisted 2.0) is now  
being removed.

fixClassImplements and backwardsCompatImplements are now no-ops, and  
if you have them in any of your code, you should remove them.

Unfortunately we missed deprecating a few things, so not everything  
has been able to be removed yet. The most important thing that will  
be going but has not yet is the adaptation function call with a  
"default" keyword argument, as in: "IFoo(obj, default=whatever)".  
Zope.Interface calls the second arg "alternate" instead of "default",  
which is an incompatibility. Because of this, the Interfaces  
definitions in twisted cannot be changed to be straight  
zope.interface.Interface classes yet, and must still be  
t.p.c.Interface for at least another release to allow people to fix  
programs using the old "default" argument. (it now does give a  
deprecation warning suggesting replacing it with a positional second  
argument).

Most things are gone, what's left undeprecated is:
ComponentsDeprecationWarning
registerAdapter
getAdapterFactory
Adapter
Componentized
ReprableComponentized
getRegistry

And what's still there for now, newly deprecated:
Interface
getAdapterClass
getAdapterClassWithInheritance
backwardsCompatImplements
fixClassImplements

The exception class CannotAdapt is an alias for TypeError, so you  
should use that directly, although the attribute cannot be actually  
deprecated.

James



From grimmtooth at gmail.com  Sat Mar 11 23:02:22 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Sun, 12 Mar 2006 01:02:22 -0500
Subject: [Twisted-Python] FTP: A little help?
In-Reply-To: <20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
References: <8f4623fb0603111137o35002e7fp8e3d9f4ad13d5050@mail.gmail.com>
	<20060311194947.6122.1121837635.divmod.quotient.15049@ohm>
Message-ID: <8f4623fb0603112202j50deca57y104a517f74bff2ce@mail.gmail.com>

On 3/11/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:

Twisted/doc/core/examples/ is probably a good place for an example FTP
> server.  If you submit one to the issue tracker, someone will add it to the
> repository.
>

I'd love to, but trac seems to be having some problems. I can't enter a new
ticket without entering my email address on the account configuration page,
but there doesn't seem to be a submit button on it, so I can never add my
email address to it. Exceptions all over the place.

So....

I've attached my example. If it's not too much trouble? And feel free to
hack on my comments. Lord knows I probably misunderstood a few dozen things.

--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down."

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060312/734273ec/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ftp_server_example.py
Type: text/x-python
Size: 2079 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060312/734273ec/attachment-0002.py>

From mary-twisted at puzzling.org  Sat Mar 11 23:33:36 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 12 Mar 2006 17:33:36 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060308223535.GA11982@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
Message-ID: <20060312063336.GC6320@sourdust.home.puzzling.org>

On Thu, Mar 09, 2006, Mary Gardiner wrote:
> On Thu, Mar 09, 2006, Jonathan Lange wrote:
> > Monday early evenings and Wednesday early evenings are both good for
> > me (Although not 13 Mar). Same time OK?
> 
> I will get back to you tomorrow on which day is better.

I can do the 15th March, but only until about 5:30: how early can we
start?

-Mary



From jml at mumak.net  Sat Mar 11 23:36:56 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 12 Mar 2006 17:36:56 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060312063336.GC6320@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
Message-ID: <d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>

On 3/12/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Thu, Mar 09, 2006, Mary Gardiner wrote:
> > On Thu, Mar 09, 2006, Jonathan Lange wrote:
> > > Monday early evenings and Wednesday early evenings are both good for
> > > me (Although not 13 Mar). Same time OK?
> >
> > I will get back to you tomorrow on which day is better.
>
> I can do the 15th March, but only until about 5:30: how early can we
> start?
>

Any time after 1pm.



From mary-twisted at puzzling.org  Sat Mar 11 23:52:56 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 12 Mar 2006 17:52:56 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
	<d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
Message-ID: <20060312065256.GE6320@sourdust.home.puzzling.org>

On Sun, Mar 12, 2006, Jonathan Lange wrote:
> Any time after 1pm.

Ok, let's start at 2pm (GMT+11) on Wednesday 15th.

http://www.timeanddate.com/worldclock/fixedtime.html?month=3&day=15&year=2006&hour=15&min=0&sec=0&p1=240
gives the times around the world. #twisted-trialdocs, see you there.

-Mary

-- 
<Acapnotic> ... whenever I hear anything in this channel that smacks my
brain three feet into kata, chances are that glyph is the one that said
it



From jml at mumak.net  Sat Mar 11 23:55:52 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 12 Mar 2006 17:55:52 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <20060312065256.GE6320@sourdust.home.puzzling.org>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
	<d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
	<20060312065256.GE6320@sourdust.home.puzzling.org>
Message-ID: <d06a5cd30603112255q522a91cbr7116a5be6d5c2d5d@mail.gmail.com>

On 3/12/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> On Sun, Mar 12, 2006, Jonathan Lange wrote:
> > Any time after 1pm.
>
> Ok, let's start at 2pm (GMT+11) on Wednesday 15th.
>
> http://www.timeanddate.com/worldclock/fixedtime.html?month=3&day=15&year=2006&hour=15&min=0&sec=0&p1=240
> gives the times around the world. #twisted-trialdocs, see you there.
>

I completely blundered when I looked at my calendar.
The earliest I can start is 4pm. Sorry.



From mary-twisted at puzzling.org  Sat Mar 11 23:58:08 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 12 Mar 2006 17:58:08 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603112255q522a91cbr7116a5be6d5c2d5d@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
	<20060308124707.GR24361@sourdust.home.puzzling.org>
	<d06a5cd30603081424n38e80884uf908d286fb14ca9f@mail.gmail.com>
	<20060308223535.GA11982@sourdust.home.puzzling.org>
	<20060312063336.GC6320@sourdust.home.puzzling.org>
	<d06a5cd30603112236n2f907550n8d31b8fcfec81e8f@mail.gmail.com>
	<20060312065256.GE6320@sourdust.home.puzzling.org>
	<d06a5cd30603112255q522a91cbr7116a5be6d5c2d5d@mail.gmail.com>
Message-ID: <20060312065808.GF6320@sourdust.home.puzzling.org>

On Sun, Mar 12, 2006, Jonathan Lange wrote:
> > gives the times around the world. #twisted-trialdocs, see you there.
> >
> 
> I completely blundered when I looked at my calendar.
> The earliest I can start is 4pm. Sorry.

Still OK for me:

http://www.timeanddate.com/worldclock/fixedtime.html?month=3&day=16&year=2006&hour=15&min=0&sec=0&p1=240

-- 
<AccorDNGuy> You know, my academic career would've been more interesting if I'd answered my exams with porn stories.
<AccorDNGuy> "Explain AVL Trees." "Winer undid his zipper, casting a longing glance at Dvorak, who returned his smouldering gaze. There was going to be some serious pole-smoking tonight."



From exarkun at twistedmatrix.com  Sun Mar 12 13:17:30 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Mar 2006 20:17:30 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1142194650.47.145500680@twistedmatrix.com

Bug summary
______________________
Summary for 2006-02-22 through 2006-03-12
Bugs opened: 58    Bugs closed: 55  Total open bugs: 567 (+3)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +2  |Highest:  +0          |:                    +1  
|Enhancement:  +2  |High:    -10          |Conch:               -1  
|Task:         +2  |Normal:  +18          |Core:                +7  
                   |Low:      -3          |Ftp:                 -1  
                   |Lowest:   +1          |Mail:                -2  
                                          |Pb:                  -1  
                                          |Release Management:  +2  
                                          |Trial:               +2  
                                          |Web:                 -8  
                                          |Web2:                +1  
                                          |Website:             +8  
                                          |Words:               -2  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1505] Testing post-commit resolution. (opened by radix) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1505

[#1506] The URL of this ticket should be correct. (opened by radix) (CLOSED, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1506

[#1507] trial doesn't gc.collect between test methods (opened by jknight)
    defect          trial      http://twistedmatrix.com/trac/ticket/1507

[#1530] Document API documentation update process (opened by exarkun)
    task            website    http://twistedmatrix.com/trac/ticket/1530

[#1538] Trial timing reporter doesn't work (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/1538

[#1552] SMTP server doesn't support "AUTH <mechanism> <initial data>" for of authentication (opened by exarkun)
    defect          mail       http://twistedmatrix.com/trac/ticket/1552

                    ===== High =====
[#1502] call selectreactor._preenDescriptors for WSAENOTSOCK (opened by titty)
    defect                     http://twistedmatrix.com/trac/ticket/1502

[#1503] Make 'pydoc twisted.internet.reactor' do something more useful than it currently does (opened by radix) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1503

[#1504] Late delivery of MSG_CHANNEL_SUCCESS when CHANNEL_REQUEST:shell and reply required (opened by stefanomasini)
    defect          conch      http://twistedmatrix.com/trac/ticket/1504

[#1515] Web2 documentation should use lore. (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/1515

[#1540] admin/process-docs does not set version information for generated documentation (opened by exarkun) (CLOSED, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1540

[#1541] admin/process-docs does not process doc/core/index.xhtml (opened by exarkun) (CLOSED, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1541

[#1542] admin/process-docs is a giant mess (opened by exarkun)
    defect          release management http://twistedmatrix.com/trac/ticket/1542

                    ===== Normal =====
[#1508] test if twisted-bugs works (opened by jknight) (CLOSED, worksforme)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1508

[#1509] Remove deprecated functions from Trial (opened by jml) (CLOSED, fixed)
    task            trial      http://twistedmatrix.com/trac/ticket/1509

[#1510] abstract.py's writeSequence implementation accepts unicode (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1510

[#1511] remove old components interface backwards compat (opened by jknight) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1511

[#1512] macosx & twisted - unable to find a reactor (opened by cripcrip)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1512

[#1513] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1513

[#1514] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/1514

[#1516] trac lets people assign and cc bugs to nonexistent users (opened by jknight)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1516

[#1517] /bugs/issue# should redirect to /trac/ticket/# (opened by dreid)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1517

[#1519] Incorrect version number on main page (opened by TimothyFitz) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1519

[#1520] README-sumo is missing a date (opened by TimothyFitz)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1520

[#1521] website still only has 2.1 documentation up for twisted core (opened by itamarst) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1521

[#1522] Remove woven documentation from next release of twisted.web (opened by itamarst)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1522

[#1523] trial bombs completely when a test method calls reactor.stop() (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/1523

[#1524] twisted.web2 should run faster (opened by itamarst)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1524

[#1525] Move sslverify into twisted.internet (opened by itamarst) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1525

[#1526] a bunch of tests fail/error when you don't have sufficient ssl stuff installed (opened by mwh)
    defect          core       http://twistedmatrix.com/trac/ticket/1526

[#1527] test the ticket bot (opened by exarkun) (CLOSED, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/1527

[#1528] test the ticket bot (opened by exarkun) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1528

[#1529] twisted.words oscardemo throws traceback (opened by yacc) (CLOSED, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1529

[#1531] QtReactor Problems with Modal Dialogs (opened by mustafa)
    defect          pb         http://twistedmatrix.com/trac/ticket/1531

[#1533] Make Windows installs just use distutils (opened by TimothyFitz)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1533

[#1534] change req.args API for multipart form data (opened by andrea) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1534

[#1536] FTPClientBasic will fail on 'PORT' command (opened by saviour)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1536

[#1537] Total reactor meltdown on closed sockets (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1537

[#1539] pollreactor implements IReactorFDSet but doesn't z.i.implements() it (opened by mwh) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1539

[#1543] Request for Documentation: How to Review a Branch (opened by jml)
    defect          website    http://twistedmatrix.com/trac/ticket/1543

[#1544] docextractor's makehtml cannot handle data from maketwisteddocsys path/with/trailing/slash/ (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1544

[#1545] A bunch of Twisted docstrings contain invalid epytext markup (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1545

[#1547] Have old project pages etc. redirect to new wiki pages (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1547

[#1549] Add twisted.web2.xmlrpc docs and example code. (opened by oubiwann)
    task            web2       http://twistedmatrix.com/trac/ticket/1549

[#1550] requestReceived drops arguments after two or more '?' in the uri (opened by zectbumo)
    defect          web        http://twistedmatrix.com/trac/ticket/1550

[#1551] iocpreactor can receive data out of order (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1551

[#1553] _win32stdio.py does not implement ITransport (opened by amberite)
    defect          core       http://twistedmatrix.com/trac/ticket/1553

[#1554] waitForDeferred uses df.result not the actual final value (opened by ghazel) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1554

[#1555] website no longer features Twisted logo (opened by glyph)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1555

[#1556] API docs should have HTML title (opened by Tv)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1556

[#1557] apidocs should exclude "test" packages (opened by jknight)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1557

[#1558] docextractor should parse C{name} etc in function summary listings (opened by spiv)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1558

                    ===== Low =====
[#1518] Exit on failure (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1518

[#1532] use classImplements to have ReactorBase conditionally implement IReactorThreads (opened by mwh) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1532

[#1546] Add documentation search to site (including searching API) (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1546

                    ===== Lowest =====
[#1535] look, exarkun creates useless bugs. (opened by exarkun) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1535

[#1548] get rid of epilepsy inducing entry page (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1548

[#1559] doc/core/howto/listings/pb/pb1server.py needs reactor.run() (opened by mcmillen) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1559



Closed Bugs
______________________
                    ===== Highest =====
[#1505] Testing post-commit resolution. (opened by radix, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1505

[#1506] The URL of this ticket should be correct. (opened by radix, closed by radix, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1506

[#1495] Memory leak using minimal web server? (opened by chileverde, closed by foom, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1495

[#1453] When using "trial -u", old trial log observers are not removed (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1453

[#53  ] Explain producers & consumers (opened by radix, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/53

[#1538] Trial timing reporter doesn't work (opened by jml, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1538

                    ===== High =====
[#363 ] [PATCH]JellyToNode lacks support for boolean types in Python 2.3 (opened by aubin, closed by jerub, fixed)
    defect          pb         http://twistedmatrix.com/trac/ticket/363

[#135 ] [PATCH]Web tracebacks should be disable-able (opened by itamarst, closed by jerub, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/135

[#1429] web page left pane layout is broken (patch included) (opened by ghazel, closed by exarkun, wontfix)
    defect          conch      http://twistedmatrix.com/trac/ticket/1429

[#1127] web2 file upload and unit test problems (opened by exarkun, closed by dreid, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1127

[#1384] Document the meaning of trial's terminal output stanza (opened by warner, closed by jml, )
    task            trial      http://twistedmatrix.com/trac/ticket/1384

[#1541] admin/process-docs does not process doc/core/index.xhtml (opened by exarkun, closed by exarkun, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/1541

[#1540] admin/process-docs does not set version information for generated documentation (opened by exarkun, closed by exarkun, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1540

[#165 ] [PATCH]Multiple header with same name support in http (opened by itamarst, closed by exarkun, wontfix)
    defect          web        http://twistedmatrix.com/trac/ticket/165

[#418 ] ftp doesnt work in windows (opened by hunterp, closed by exarkun, fixed)
    defect          ftp        http://twistedmatrix.com/trac/ticket/418

[#1143] Documentation: Aliases not covered in the API documentation (opened by moof, closed by exarkun, duplicate)
    defect          mail       http://twistedmatrix.com/trac/ticket/1143

[#998 ] request.setHeader should fail if data has already been sent written to the client (opened by mg, closed by jknight, wontfix)
    defect          web        http://twistedmatrix.com/trac/ticket/998

[#1303] API docs aren't being linked from developer guides (opened by spiv, closed by itamarst, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1303

[#1189] twisted.web.test.test_woven calls reactor.iterate() (opened by exarkun, closed by foom, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1189

[#1188] twisted.web.test.test_webclient calls reactor.iterate() (opened by exarkun, closed by jknight, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/1188

[#1437] avoid exception in logbytecounter (opened by andrea, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1437

[#861 ] protocols.msn cockroach (opened by moea, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/861

[#1105] IMAP Client does not seem to handle unsolicited server responses (opened by cablehead, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1105

[#1307] IMAP4 Body parts fetch error (opened by therve, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1307

                    ===== Normal =====
[#1508] test if twisted-bugs works (opened by jknight, closed by jknight, worksforme)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1508

[#1513] twisted.spread.banana check for INT vs. LONGINT will fail on some 64-bit platforms (opened by itamarst, closed by itamarst, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1513

[#1519] Incorrect version number on main page (opened by TimothyFitz, closed by radix, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1519

[#343 ] reactor fd cleanup between tests (opened by warner, closed by jml, )
    enhancement     trial      http://twistedmatrix.com/trac/ticket/343

[#1527] test the ticket bot (opened by exarkun, closed by exarkun, invalid)
    task            website    http://twistedmatrix.com/trac/ticket/1527

[#1528] test the ticket bot (opened by exarkun, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1528

[#1529] twisted.words oscardemo throws traceback (opened by yacc, closed by yacc, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1529

[#1534] change req.args API for multipart form data (opened by andrea, closed by foom, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1534

[#1521] website still only has 2.1 documentation up for twisted core (opened by itamarst, closed by exarkun, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1521

[#54  ] cBanana profile support (opened by radix, closed by exarkun, wontfix)
    enhancement     pb         http://twistedmatrix.com/trac/ticket/54

[#76  ] twisted.web.distrib should pass file-like stream, not Request-ish object (opened by itamarst, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/76

[#96  ] Make the FTP server useful. (opened by spiv, closed by exarkun, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/96

[#166 ] Chunked encoding upload support for http server (opened by itamarst, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/166

[#273 ] microdom enhancement: getElementsByAttribute (opened by st0rm, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/273

[#1525] Move sslverify into twisted.internet (opened by itamarst, closed by exarkun, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1525

[#334 ] IRC DCC cleanup (opened by teratorn, closed by teratorn, wontfix)
    enhancement     words      http://twistedmatrix.com/trac/ticket/334

[#948 ] No PDF or PS versions of new docs on the website (opened by ash, closed by itamarst, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/948

[#1554] waitForDeferred uses df.result not the actual final value (opened by ghazel, closed by ghazel, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1554

[#1539] pollreactor implements IReactorFDSet but doesn't z.i.implements() it (opened by mwh, closed by foom, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1539

[#1132] XML-RPC for web2 - propose API changes (opened by itamarst, closed by foom, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1132

[#1509] Remove deprecated functions from Trial (opened by jml, closed by jml, fixed)
    task            trial      http://twistedmatrix.com/trac/ticket/1509

[#1511] remove old components interface backwards compat (opened by jknight, closed by foom, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1511

                    ===== Low =====
[#1532] use classImplements to have ReactorBase conditionally implement IReactorThreads (opened by mwh, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1532

[#61  ] SOAP client support (opened by itamarst, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/61

[#88  ] API docs don't show what a class implements (opened by spiv, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/88

[#143 ] Investigate speeding up twisted reactor and protocols with mem package (opened by itamarst, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/143

[#244 ] Support for bug dependencies in the issue tracker (opened by itamarst, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/244

[#1405] twisted callFromThread raises IndexError (opened by ghazel, closed by jknight, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1405

                    ===== Lowest =====
[#1535] look, exarkun creates useless bugs. (opened by exarkun, closed by PenguinOfDoom, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1535

[#1548] get rid of epilepsy inducing entry page (opened by itamarst, closed by itamarst, )
    enhancement     website    http://twistedmatrix.com/trac/ticket/1548

[#1559] doc/core/howto/listings/pb/pb1server.py needs reactor.run() (opened by mcmillen, closed by foom, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1559





From mary-twisted at puzzling.org  Mon Mar 13 04:06:50 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 13 Mar 2006 22:06:50 +1100
Subject: [Twisted-Python] A doc sprint... but first, a challenge
In-Reply-To: <20060301231033.GA27513@home.puzzling.org>
References: <20060301231033.GA27513@home.puzzling.org>
Message-ID: <20060313110650.GH7003@sourdust.home.puzzling.org>

On Thu, Mar 02, 2006, Mary Gardiner wrote:
> Therefore, a challenge. There are currently 4 reviews on
> http://twistedmatrix.com/trac/wiki/DocumentationAnalysis/DocumentList .
> When that number of reviews reachs 14 (ie, 10 more), I will schedule and
> run a doc sprint day for us. I will do 2 and I know Andrew Bennetts has
> one more in the works, so that leaves a grand total of 7 reviews for
> other people to do before I hold a sprint. That's like 0.00001 reviews
> per whine about our documentation over the lifetime of the Twisted
> project!

Ok, so Andrew's done his, I haven't done mine and... you haven't done
yours. Comments on the idea welcome ;)

-Mary

-- 
<SamB> what do interfaces do when you call them? is that even allowed?
<exarkun> welcome to the year 1973.
<exarkun> callable interfaces roam the surface of the earth
<exarkun> humanity has fled underground



From exarkun at divmod.com  Tue Mar 14 09:14:18 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Mar 2006 11:14:18 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16287 - Revert r16241;
	tests are passing.
In-Reply-To: <E1FIsnK-00023B-00@wolfwood>
Message-ID: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>

On Mon, 13 Mar 2006 12:33:30 -0700, Wilfredo Sanchez <wsanchez at wolfwood.twistedmatrix.com> wrote:
>Author: wsanchez
>Date: Mon Mar 13 12:33:27 2006
>New Revision: 16287
>
>Modified:
>   trunk/twisted/web2/dav/acl.py
>   trunk/twisted/web2/dav/element/base.py
>   trunk/twisted/web2/dav/element/rfc3744.py
>   trunk/twisted/web2/dav/http.py
>   trunk/twisted/web2/dav/idav.py
>   trunk/twisted/web2/dav/method/propfind.py
>   trunk/twisted/web2/dav/resource.py
>   trunk/twisted/web2/dav/static.py
>Log:
>Revert r16241; tests are passing.

This does not actually appear to be the case.  The quick build which ran as a result of this commit had these results:

Running 2 tests.
twisted.web2.dav.test.test_prop.PROP.test_PROPFIND ... [OK]
twisted.web2.dav.test.test_prop.PROP.test_PROPFIND ... [ERROR]

===============================================================================
[ERROR]: twisted.web2.dav.test.test_prop.PROP.test_PROPFIND

  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/http.py", line 287, in statusForFailure
    failure.raiseException()
  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/method/propfind.py", line 119, in gotXML
    properties_by_status[responsecode.OK].append(resource.readProperty(property, request))
  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/resource.py", line 129, in readProperty
    return davxml.GETContentLength(self.contentLength())
  File "/home/buildbot/BuildBot/slave/quick/Twisted/twisted/web2/dav/element/base.py", line 107, in __init__
    assert isinstance(child, (WebDAVElement, PCDATAElement)), "Not an element: %r" % (child,)
exceptions.AssertionError: Not an element: 2717L
-------------------------------------------------------------------------------
Ran 2 tests in 0.371s

FAILED (errors=1, successes=1)

This is slightly challenging to reproduce due to the fact that "trial -u twisted.web2.dav" crashes horribly after the first run.

Jean-Paul



From exarkun at divmod.com  Tue Mar 14 09:31:19 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Mar 2006 11:31:19 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>
Message-ID: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>

On Tue, 14 Mar 2006 11:14:18 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Mon, 13 Mar 2006 12:33:30 -0700, Wilfredo Sanchez 
><wsanchez at wolfwood.twistedmatrix.com> wrote:
>> [snip]
>>Log:
>>Revert r16241; tests are passing.
>
>This does not actually appear to be the case.

Okay, after a couple hours of trying to track down the problem here, I noticed that you fixed this bug with the very next commit.  This has caused me to realize that I don't think use of branches for all development on Twisted should be optional.

Unless anyone can present a compelling case to the contrary, I think that as of now we should "officially" switch to the development procedures described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

Jean-Paul



From itamar at itamarst.org  Tue Mar 14 09:41:55 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 14 Mar 2006 11:41:55 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
References: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <1142354515.9184.9.camel@localhost.localdomain>

On Tue, 2006-03-14 at 11:31 -0500, Jean-Paul Calderone wrote:

> Unless anyone can present a compelling case to the contrary, I think
> that as of now we should "officially" switch to the development
> procedures described by
> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

We should probably use Combinator, so people have an easy time with
this.

1. Is Combinator documented? 
2. Maybe Combinator should be in Twisted trunk, if it's a hard
dependency for development?





From glyph at divmod.com  Tue Mar 14 09:47:26 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 14 Mar 2006 11:47:26 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <20060314164726.6122.2055586154.divmod.quotient.16697@ohm>

On Tue, 14 Mar 2006 11:31:19 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:

>Okay, after a couple hours of trying to track down the problem here, I 
>noticed that you fixed this bug with the very next commit.  This has caused 
>me to realize that I don't think use of branches for all development on 
>Twisted should be optional.

I assume that you meant "should *not* be optional".

>Unless anyone can present a compelling case to the contrary, I think that as 
>of now we should "officially" switch to the development procedures described 
>by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

As the resident malevolent power here, I have performed the appropriate ritual to convert our policy.  We have officially switched.  Now, anyone who checks code into trunk without a branch or a review will be cursed, yea, unto the seventh generation!

Documentation to this effect on the website or in the repository should show up within the next few days.  

There will be a few days while we make sure that everyone understands the ramifications of this new policy, but in the near future, code that is checked in without having its review documented on a ticket may be reverted immediately even if it does not cause any tests to fail.  There may be other consequences as well, such as loss of commit access.

It's also worth noting that if code fails the buildbot after review (or lacks adequate tests and thereby breaks critical existing functionality), it's the reviewer's fault, not the author's!  Therefore, it is suggested that you make heavy use of buildbot's "build this branch" feature before OKing a merge.



From twisted at ralphm.ik.nu  Tue Mar 14 09:49:48 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 14 Mar 2006 17:49:48 +0100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
References: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>
	<20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <20060314164947.GA80304@ik.nu>

> [..]
>
> Unless anyone can present a compelling case to the contrary, I think that 
> as of now we should "officially" switch to the development procedures 
> described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

I've been trying this out. Not sure how the review process works from
the moment you add the 'review' keyword, though.

-- 
Groetjes,

ralphm



From glyph at divmod.com  Tue Mar 14 09:53:47 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 14 Mar 2006 11:53:47 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <1142354515.9184.9.camel@localhost.localdomain>
Message-ID: <20060314165347.6122.1467955561.divmod.quotient.16700@ohm>

On Tue, 14 Mar 2006 11:41:55 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2006-03-14 at 11:31 -0500, Jean-Paul Calderone wrote:
>
>> Unless anyone can present a compelling case to the contrary, I think
>> that as of now we should "officially" switch to the development
>> procedures described by
>> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.
>
>We should probably use Combinator, so people have an easy time with
>this.

True enough.

>1. Is Combinator documented?

Not the best doc in the world (I think it actually describes the configuration that non-Divmod Twisted devs might want to use, i.e. without the rest of the Divmod code) but it gets the general idea across:

http://divmod.org/trac/wiki/CombinatorTutorial

>2. Maybe Combinator should be in Twisted trunk, if it's a hard
>dependency for development?

There used to be problems with putting Combinator into the same sys.path entry as code it's managing - I'm not sure if they're all fixed.  It might work, but one of the reasons I'd held off making this pronouncement so long is that it would be handy to reorganize Twisted trunk first.

If someone wants to make a branch to move Combinator into Twisted though, I will review it :).



From glyph at divmod.com  Tue Mar 14 10:03:00 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 14 Mar 2006 12:03:00 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314164947.GA80304@ik.nu>
Message-ID: <20060314170300.6122.1278995348.divmod.quotient.16705@ohm>



On Tue, 14 Mar 2006 17:49:48 +0100, Ralph Meijer <twisted at ralphm.ik.nu> wrote:
>> [..]
>>
>> Unless anyone can present a compelling case to the contrary, I think that
>> as of now we should "officially" switch to the development procedures
>> described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.
>
>I've been trying this out. Not sure how the review process works from
>the moment you add the 'review' keyword, though.

1. Yell on IRC for a reviewer.  If someone responds, assign it to them.  If nobody responds, assign it to someone at random.
2. Set the priority to "highest".
3. The reviewer accepts the ticket.
4. The reviewer reviews, adds a comment.  (The comment should always include at least one positive and one negative comment about the branch, as well as an indication of whether it should be merged.)
5. If it's mergeable, and you're a committer, the reviewer then reassigns it to you for merging (for more accurate stat tracking).  If you're not a committer, the reviewer just merges it.  If it needs work, it's reassigned to you regardless.
6. Repeat as desired.

If you can't get past step 3, feel free to keep reassigning until you find someone who is responsive enough to accept / review it.  This does also assume that people will check their "my tickets" page on a regular basis, but that's just a good habit.



From mithrandi-twisted-python at mithrandi.za.net  Tue Mar 14 11:13:56 2006
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Tue, 14 Mar 2006 20:13:56 +0200
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
References: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
	<20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
Message-ID: <20060314181356.GC15940@mithrandi.za.net>

* glyph at divmod.com <glyph at divmod.com> [2006-03-14 11:47:26 -0500]:

> >caused me to realize that I don't think use of branches for all 
                               ^^^^^
> >development on Twisted should be optional.
> 
> I assume that you meant "should *not* be optional".

Probably not.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20060314/5614d43c/attachment.sig>

From mary-twisted at puzzling.org  Tue Mar 14 15:13:51 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 15 Mar 2006 09:13:51 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314170300.6122.1278995348.divmod.quotient.16705@ohm>
References: <20060314164947.GA80304@ik.nu>
	<20060314170300.6122.1278995348.divmod.quotient.16705@ohm>
Message-ID: <20060314221351.GI10189@sourdust.home.puzzling.org>

On Tue, Mar 14, 2006, glyph at divmod.com wrote:
> 1. Yell on IRC for a reviewer.  If someone responds, assign it to them.  If 
> nobody responds, assign it to someone at random.

Documentation can work a similar way, except just assign it to me.

-Mary

-- 
<moshez> jml: but euphemisms for sex are common in all languages :)
<exarkun> moshez: what about lojban?
<jml> exarkun: there's no record of any lojban speakers having sex. :)



From slamb at slamb.org  Tue Mar 14 17:02:46 2006
From: slamb at slamb.org (Scott Lamb)
Date: Tue, 14 Mar 2006 16:02:46 -0800
Subject: [Twisted-Python] Broken mailing list link on wiki
Message-ID: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>

Hey, the wiki page at <http://twistedmatrix.com/trac/wiki/ 
TwistedProject> links to <http://twistedmatrix.com/cgi-bin/mailman/ 
twisted-python>, which doesn't work. Looks like it should be <http:// 
twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>, as  
featured in the List-Subscribe: headers.

Is this page editable by anyone? If so, I'm blind...I don't see an  
edit link when logged into trac as my freshly-created user.

-- 
Scott Lamb <http://www.slamb.org/>





From radeex at gmail.com  Tue Mar 14 17:18:12 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 14 Mar 2006 19:18:12 -0500
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
Message-ID: <60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>

Fixed, thanks. For future reference: none of the pages that have download
links on them are editable by regular users.

On 3/14/06, Scott Lamb <slamb at slamb.org> wrote:
>
> Hey, the wiki page at <http://twistedmatrix.com/trac/wiki/
> TwistedProject> links to <http://twistedmatrix.com/cgi-bin/mailman/
> twisted-python>, which doesn't work. Looks like it should be <http://
> twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>, as
> featured in the List-Subscribe: headers.
>
> Is this page editable by anyone? If so, I'm blind...I don't see an
> edit link when logged into trac as my freshly-created user.
>
> --
> Scott Lamb <http://www.slamb.org/>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060314/7a6207b5/attachment.html>

From mary-twisted at puzzling.org  Tue Mar 14 17:24:38 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 15 Mar 2006 11:24:38 +1100
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
	<60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>
Message-ID: <20060315002438.GP10189@sourdust.home.puzzling.org>

On Tue, Mar 14, 2006, Christopher Armstrong wrote:
> Fixed, thanks. For future reference: none of the pages that have download
> links on them are editable by regular users.

How are we encouraging reports of problems on those pages? Bug reports?

-Mary



From radeex at gmail.com  Tue Mar 14 17:30:13 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 14 Mar 2006 19:30:13 -0500
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <20060315002438.GP10189@sourdust.home.puzzling.org>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>
	<60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>
	<20060315002438.GP10189@sourdust.home.puzzling.org>
Message-ID: <60ed19d40603141630v4ba98949te6150b2f869ebe8f@mail.gmail.com>

On 3/14/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
>
> On Tue, Mar 14, 2006, Christopher Armstrong wrote:
> > Fixed, thanks. For future reference: none of the pages that have
> download
> > links on them are editable by regular users.
>
> How are we encouraging reports of problems on those pages? Bug reports?


Yep, definitely bug reports.


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060314/c9089138/attachment.html>

From mary-twisted at puzzling.org  Tue Mar 14 22:14:39 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 15 Mar 2006 16:14:39 +1100
Subject: [Twisted-Python] IRC Meeting: Trial Documentation
In-Reply-To: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
References: <d06a5cd30603011519o64ef5cb7wf4d016f9cb171bef@mail.gmail.com>
Message-ID: <20060315051439.GV10189@sourdust.home.puzzling.org>

On Thu, Mar 02, 2006, Jonathan Lange wrote:
> Hello,
> 
> Mary and I will be meeting on #twisted-trialdocs (freenode) from 5pm
> on 8th March (UTC+11). The topic of discussion is: how to improve the
> Trial documentation.

This discussion on NOW...

-Mary



From abs621 at yahoo.com  Wed Mar 15 09:36:17 2006
From: abs621 at yahoo.com (A S)
Date: Wed, 15 Mar 2006 08:36:17 -0800 (PST)
Subject: [Twisted-Python] Writing Servers
Message-ID: <20060315163617.50649.qmail@web51607.mail.yahoo.com>

Hi,

It is said all over the documentation

That when connection is accepted the new *instance* of
a protocol is created. However as it is single
threaded, can use the same instance?


For example (In case of UDP):

port = x;

#some proto subclass of AbstractDatagramProtocol
#this protocol does not does nt delegate request to
threads. I assume request is served quickly

proto = Proto() 

for if in ("eth0", "eth1")
    addr = getAddr(if)
    reactor.listenUDP(port, proto, interface = addr,)

I want to have same protocol *instance running* for
diff interface on same port. As this protocol does not
store any state.

Also instead of creating one when connection comes and
descard is when connection is broken. Use a single
one.

however, internet/protocol.py does not allow it?

def makeConnection(self, transport):
        assert self.transport == None
        self.transport = transport
        self.doStart()


Can not i use the same instance of the protocol for
each connection instead of getting new instance every
time. As it is single threaded and it must return
before next connection in q is served?

I am once the datagramReceived is call, it must return
before any other request is served. (i am not using
any deferrer)

Q1) Am i missing some concept?

Q2) What if the request is delegated to deferrer or
threads, can we still use the same instance of
protocol class?

Q3) What are the ways to create deferrer itself
There is little about it, reactor callfromthread or
callinthread? Any good doc?


Regards,
Abbey



__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From mwh at python.net  Wed Mar 15 10:54:14 2006
From: mwh at python.net (Michael Hudson)
Date: Wed, 15 Mar 2006 17:54:14 +0000
Subject: [Twisted-Python] Re: Twisted Website
References: <2m8xrr6emo.fsf@starship.python.net>
	<20060303140837.6122.1892915094.divmod.quotient.12718@ohm>
Message-ID: <2mhd5z4mrd.fsf@starship.python.net>

Jean-Paul Calderone <exarkun at divmod.com> writes:

> n Fri, 03 Mar 2006 09:50:39 +0000, Michael Hudson <mwh at python.net> wrote:
>>Jean-Paul Calderone <exarkun at divmod.com> writes:
>>
>>>   * Epydoc has been replaced by docextractor (to be renamed).
>>
>>Huh?  I admit I put about two seconds of thought so far into the
>>project name, but I still think I get to name my own projects :)
>
> Ahh, I' blame radix.  I think he said something about you trying to
> come up with a different name.

And indeed this has come to pass: the project is now called 'pydoctor'.

Cheers,
mwh

-- 
  incidentally, asking why things are "left out of the language" is
  a good sign that the asker is fairly clueless.
                                        -- Erik Naggum, comp.lang.lisp




From itamar at itamarst.org  Wed Mar 15 11:07:54 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 15 Mar 2006 13:07:54 -0500
Subject: [Twisted-Python] Writing Servers
In-Reply-To: <20060315163617.50649.qmail@web51607.mail.yahoo.com>
References: <20060315163617.50649.qmail@web51607.mail.yahoo.com>
Message-ID: <1142446074.9117.20.camel@localhost.localdomain>

On Wed, 2006-03-15 at 08:36 -0800, A S wrote:

> That when connection is accepted the new *instance* of
> a protocol is created. However as it is single
> threaded, can use the same instance?

In theory, yes, in practice the way the APIs work make this harder.

> For example (In case of UDP):

UDP doesn't have a factory, or for that matter connections; it's one
protocol instance per port you listen on.

> I want to have same protocol *instance running* for
> diff interface on same port. As this protocol does not
> store any state.

Just have it forward to an object that does the actual work. You can't
have same instance because of the self.transport attribute - how would
it work with two different transports?

> Also instead of creating one when connection comes and
> descard is when connection is broken. Use a single
> one.

That is already the case for UDP.

> I am once the datagramReceived is call, it must return
> before any other request is served. (i am not using
> any deferrer)
> 
> Q1) Am i missing some concept?

Nope.

> Q2) What if the request is delegated to deferrer or
> threads, can we still use the same instance of
> protocol class?

Yes.

> Q3) What are the ways to create deferrer itself
> There is little about it, reactor callfromthread or
> callinthread? Any good doc?

Deferreds don't magically make things not block the event loop, and they
almost never need threads. For example,
twisted.web.client.getPage("http://google.com") returns a Deferred but
doesn't use threads. A deferred is just a promise that some code,
responding to some future event (callLater, datagramReceived, a thread,
etc.) will give you a result.




From ralf at brainbot.com  Thu Mar 16 06:16:01 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Thu, 16 Mar 2006 14:16:01 +0100
Subject: [Twisted-Python] Broken mailing list link on wiki
In-Reply-To: <60ed19d40603141630v4ba98949te6150b2f869ebe8f@mail.gmail.com>
References: <88EF1C30-5EAE-445E-A0F0-9D6E42A6EDA3@slamb.org>	<60ed19d40603141618j7c9928em1600e5166d41c0d6@mail.gmail.com>	<20060315002438.GP10189@sourdust.home.puzzling.org>
	<60ed19d40603141630v4ba98949te6150b2f869ebe8f@mail.gmail.com>
Message-ID: <44196511.8070609@brainbot.com>

Christopher Armstrong schrieb:
> On 3/14/06, *Mary Gardiner* <mary-twisted at puzzling.org 
> <mailto:mary-twisted at puzzling.org>> wrote:
>
>     On Tue, Mar 14, 2006, Christopher Armstrong wrote:
>     > Fixed, thanks. For future reference: none of the pages that have
>     download
>     > links on them are editable by regular users.
>
>     How are we encouraging reports of problems on those pages? Bug
>     reports? 
>
>
> Yep, definitely bug reports.
>
plus unit tests :)

sorry, couldn't resist.

- Ralf





From blakeyrat at gmail.com  Sat Mar 18 16:13:50 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sat, 18 Mar 2006 15:13:50 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
Message-ID: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>

I'm new to both Twisted and Python, so excuse this question if it's a
stupid one.

I'm trying to create a telnet server for a MUD, and the twisted
classes look to be the easiest way to accomplish this.  I've found an
example on an archived post on this mailing list which used:

from twisted.protocols.telnet import *

When I run that example, I get the message that
twisted.protocols.telnet is deprecated and I should instead be using
twisted.conch.telnet.  So I made the switch, and then got the error
that conch wasn't found.  After digging around for a couple hours,
I've found out the following:

1) "conch" isn't part of the core install of Twisted, so I had to run
the installer again to get it.  In addition, it hasn't reached 1.0 yet
and is marked as "unstable."

2) "conch" has barely any documentation in the API reference:
http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

Is there something I'm missing here, or is Twisted telling me that I
should be using an unstable <1.0 library with no documentation that's
not even part of the core install instead of a 2.2 version library
with good documentation that *is* part of the core install?  Is this
deprecated warning in the wrong spot?  I don't get it.

Thanks for your help.



From exarkun at twistedmatrix.com  Sat Mar 18 23:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Mar 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1142748302.67.1081690624@twistedmatrix.com

Bug summary
______________________
Summary for 2006-03-12 through 2006-03-19
Bugs opened: 31    Bugs closed: 16  Total open bugs: 583 (+15)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +6  |Highest:  +5          |Conch:    +2           
|Enhancement: +10  |High:     -3          |Core:     +9           
|Task:         +2  |Normal:  +14          |Ftp:      +5           
                   |Low:      +2          |Names:    +0           
                                          |Trial:    +2           
                                          |Web2:     +6           
                                          |Website:  -5           
                                          |Words:    -1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1561] Qt reactor fails two TCP tests (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1561

[#1562] Permission denied errors on Win32 (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1562

[#1566] Allow tickets to be submitted if user enters an email address in the "Your email or username" field (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1566

[#1572] twistd starts services synchronously: it should  start them using the startup system event. (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1572

[#1581] Bug in Twisted Names (opened by wdy) (CLOSED, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1581

[#1583] twisted.names has crummy trailing whitespace (opened by exarkun) (CLOSED, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1583

                    ===== High =====
[#1560] Death to util.wait() (opened by jml)
    task            core       http://twistedmatrix.com/trac/ticket/1560

[#1564] Failure.getErrorMessage() uses safe_str (opened by moof) (CLOSED, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1564

[#1571] Typo in python/dispatch.py (opened by loic) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1571

[#1573] trial does not wait for the reactor to stop completely between tests/test methods/test suites/test runs/I don't know what (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/1573

[#1574] wxreactor completely broken if there are any startup triggers. (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/1574

                    ===== Normal =====
[#1563] trial --testmodule should be usable without causing test methods to run repeatedly (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1563

[#1565] VT102Writer.__str__ method in manhole.py does not check for special case (opened by htj)
    defect          core       http://twistedmatrix.com/trac/ticket/1565

[#1567] Use svnsync in a commit hook to update trac's repository on pyramid (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/1567

[#1568] Avoid redirects for broken DAV clients (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1568

[#1569] IRequest should have a uri object for accessing and mangling the requested uri (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1569

[#1570] static.File shouldn't allow excessive /s. (opened by jknight)
    defect          web2       http://twistedmatrix.com/trac/ticket/1570

[#1575] twisted.protocols.ftp.FTP.ftp_STOR() does not handle anonymous requests gracefully (opened by grimmtooth)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1575

[#1576] web2.dirlist.DirectoryLister should support unicode filenames (opened by htj)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1576

[#1577] Add MOVE tests (opened by wsanchez) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1577

[#1578] setsockopt fails on joinAddr (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1578

[#1579] FTP server example for twisted/doc/core/examples (opened by grimmtooth)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1579

[#1582] move web2.dav.method.* to web2.dav.method.davfile.* (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1582

[#1584] ftp.FTPAnonymousShell.access() handles non-existant file paths in a confusing way (opened by grimmtooth)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1584

[#1585] FTPClient should allow you to try logging in more than once (e.g. for implementing an interactive client) (opened by spiv)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1585

[#1587] web2 DirectoryLister is too inefficient! (opened by exarkun)
    defect          web2       http://twistedmatrix.com/trac/ticket/1587

[#1588] verifyHostKey fails if ~/.ssh/known_hosts missing or it's empty (opened by jaze)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1588

[#1589] cftp.py fails to transfer files (opened by jaze)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1589

                    ===== Low =====
[#1580] Reloading twisted.web2.http raises an exception (opened by edsuom)
    defect          web2       http://twistedmatrix.com/trac/ticket/1580

[#1586] FTP needs stream loving (opened by htj)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1586

[#1590] Wrong wiki link (opened by osuchw) (CLOSED, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1590



Closed Bugs
______________________
                    ===== Highest =====
[#1581] Bug in Twisted Names (opened by wdy, closed by exarkun, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1581

[#1583] twisted.names has crummy trailing whitespace (opened by exarkun, closed by exarkun, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/1583

                    ===== High =====
[#1564] Failure.getErrorMessage() uses safe_str (opened by moof, closed by moof, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1564

[#1571] Typo in python/dispatch.py (opened by loic, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1571

[#965 ] No general download page (and link) on website (opened by ash, closed by itamarst, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/965

[#965 ] No general download page (and link) on website (opened by ash, closed by itamarst, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/965

[#1137] Web site menu disappears when window not big (opened by justinj, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/1137

[#936 ] minor website rendering problem (opened by teratorn, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/936

[#1419] 404 from Main Page (opened by TimothyFitz, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/1419

[#1018] Two quirks noticed with the new WebSite (opened by mesozoic, closed by dreid, invalid)
    defect          website    http://twistedmatrix.com/trac/ticket/1018

[#931 ] Add description of words to its project site (opened by hypatia, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/931

                    ===== Normal =====
[#1482] [PATCH] add RedirectResource (opened by andrea, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1482

[#1544] docextractor's makehtml cannot handle data from maketwisteddocsys path/with/trailing/slash/ (opened by exarkun, closed by mwh, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1544

[#1577] Add MOVE tests (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1577

                    ===== Low =====
[#1580] Reloading twisted.web2.http raises an exception (opened by edsuom, closed by jknight, )
    defect          web2       http://twistedmatrix.com/trac/ticket/1580

[#1590] Wrong wiki link (opened by osuchw, closed by radix, fixed)
    defect          website    http://twistedmatrix.com/trac/ticket/1590





From radeex at gmail.com  Sun Mar 19 08:39:14 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 19 Mar 2006 10:39:14 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
Message-ID: <60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>

On 3/18/06, James Schend <blakeyrat at gmail.com> wrote:

> When I run that example, I get the message that
> twisted.protocols.telnet is deprecated and I should instead be using
> twisted.conch.telnet.


Is there something I'm missing here, or is Twisted telling me that I
> should be using an unstable <1.0 library with no documentation that's
> not even part of the core install instead of a 2.2 version library
> with good documentation that *is* part of the core install?  Is this
> deprecated warning in the wrong spot?  I don't get it.



The telnet protocol implementation was simply moved to Conch. That
particular code is no more or less stable and documented than it was in its
old location. Also, if you're downloading tarballs, you should be getting
the full Twisted tarball, not the individual core/subproject tarballs. Those
individual ones are for embedders and OS packagers, basically. (The old web
site didn't make this as clear, and the new one encourages you to download
the full Twisted package).


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060319/e1df024b/attachment.html>

From radeex at gmail.com  Sun Mar 19 09:04:41 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 19 Mar 2006 11:04:41 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
	<60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
Message-ID: <60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>

On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
>
> On 3/18/06, James Schend <blakeyrat at gmail.com> wrote:
>
> When I run that example, I get the message that
> > twisted.protocols.telnet is deprecated and I should instead be using
> > twisted.conch.telnet.
>
>
> Is there something I'm missing here, or is Twisted telling me that I
> > should be using an unstable <1.0 library with no documentation that's
> > not even part of the core install instead of a 2.2 version library
> > with good documentation that *is* part of the core install?  Is this
> > deprecated warning in the wrong spot?  I don't get it.
>
>
>
> The telnet protocol implementation was simply moved to Conch. That
> particular code is no more or less stable and documented than it was in its
> old location. Also, if you're downloading tarballs, you should be getting
> the full Twisted tarball, not the individual core/subproject tarballs. Those
> individual ones are for embedders and OS packagers, basically. (The old web
> site didn't make this as clear, and the new one encourages you to download
> the full Twisted package).
>


I'm sorry, it appears I'm mistaken. I was thinking that the telnet protocol
implementation moved to twisted.conch in the Great Split of Two Point Oh,
but I see that this was something else. The implementation in conch is
definitely different (and probably better), but I don't think my comment
about the state of documentation and stability is any less true.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060319/741fd187/attachment.html>

From blakeyrat at gmail.com  Sun Mar 19 11:08:47 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 10:08:47 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
	<60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
	<60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>
Message-ID: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>

I'm still not convinced.  If you look at the API reference under Conch:

http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

And the API refrerence under Protocols:

http://twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html

There's a HUGE difference in the amount of documentation available. 
Just learning this stuff for the first time, I need as much
documentation as I can get... all the examples, and all the API docs,
seem to be in twisted.protocols.telnet.  And of course I'd much rather
use something that's at version 2.2 than something that's at version
0.6.

If conch is still unstable and hasn't hit 1.0, why is the old
interface deprecated?  It seems silly to deprecate the old interface
if the new one, being unstable, might change and require being
deprecated again.  I'm sorry, I just don't understand.

(FYI, I did download the entire tarball, but I only installed the
"core" because I figured that that was all I needed.  I didn't
anticipate that "correct" telnet interface had moved because, again,
this isn't documented in the API reference, which I looked at before
installing.)

You say that Conch is better... how is it better?  Is
twisted.protocol.telnet going away in the near future?  What the heck
should I be using?  Other than the deprecated warning, I'm inclined to
use the "old" twisted.protocols.telnet interface which at least has
examples and documented functions.

Thanks again for your help.  It looks like I found your toolset in the
midst of some huge confusing rewrite or something.  :)  Just my luck.

On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
> On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
>
> >
> > On 3/18/06, James Schend <blakeyrat at gmail.com > wrote:
> >
> >
> >
> >
> > > When I run that example, I get the message that
> > > twisted.protocols.telnet is deprecated and I should instead be using
> > > twisted.conch.telnet.
> >
> >
> >
> > > Is there something I'm missing here, or is Twisted telling me that I
> > > should be using an unstable <1.0 library with no documentation that's
> > > not even part of the core install instead of a 2.2 version library
> > > with good documentation that *is* part of the core install?  Is this
> > > deprecated warning in the wrong spot?  I don't get it.
> >
> >
> >
> >
> > The telnet protocol implementation was simply moved to Conch. That
> particular code is no more or less stable and documented than it was in its
> old location. Also, if you're downloading tarballs, you should be getting
> the full Twisted tarball, not the individual core/subproject tarballs. Those
> individual ones are for embedders and OS packagers, basically. (The old web
> site didn't make this as clear, and the new one encourages you to download
> the full Twisted package).
>
>
>
> I'm sorry, it appears I'm mistaken. I was thinking that the telnet protocol
> implementation moved to twisted.conch in the Great Split of Two Point Oh,
> but I see that this was something else. The implementation in conch is
> definitely different (and probably better), but I don't think my comment
> about the state of documentation and stability is any less true.
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>



From exarkun at divmod.com  Sun Mar 19 11:38:16 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Mar 2006 13:38:16 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
Message-ID: <20060319183816.22481.7834952.divmod.quotient.2632@ohm>

On Sun, 19 Mar 2006 10:08:47 -0800, James Schend <blakeyrat at gmail.com> wrote:
>I'm still not convinced.  If you look at the API reference under Conch:
>
>http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html
>
>And the API refrerence under Protocols:
>
>http://twistedmatrix.com/documents/current/api/twisted.protocols.telnet.Telnet.html
>
>There's a HUGE difference in the amount of documentation available.

Yes.  There seems to be much more documentation for twisted.conch.telnet.

>Just learning this stuff for the first time, I need as much
>documentation as I can get... all the examples, and all the API docs,
>seem to be in twisted.protocols.telnet.  And of course I'd much rather
>use something that's at version 2.2 than something that's at version
>0.6.

Don't attach too much significance to these numbers.  It would be great if versioning actually conveyed some information, but it hardly does.  The only thing you can reliably take away from a version number is whether or not it is larger or smaller than another version /for the same piece of software/.  This loosely correlates with whether it is newer or older than another release of that software, little else.  In particular, you cannot compare version numbers of different pieces of software meaningfully.

>If conch is still unstable and hasn't hit 1.0, why is the old
>interface deprecated?

Because the old interface is quirky and incomplete and the implementation is unmaintained (and basically unfixable without breaking backwards compatibility).

>It seems silly to deprecate the old interface
>if the new one, being unstable, might change and require being
>deprecated again.  I'm sorry, I just don't understand.

The deprecation is an indication of our future plans.  If you are more worried about the twisted.conch.telnet API changing than you are about the incompleteness and unmaintainedness of twisted.protocols.telnet, by all means, use twisted.protocols.telnet.  It's not a "warning" for nothing.

>
>(FYI, I did download the entire tarball, but I only installed the
>"core" because I figured that that was all I needed.  I didn't
>anticipate that "correct" telnet interface had moved because, again,
>this isn't documented in the API reference, which I looked at before
>installing.)
>
>You say that Conch is better... how is it better?  Is
>twisted.protocol.telnet going away in the near future?

As soon as reasonably possible.

>What the heck should I be using?

twisted.conch.telnet.

>Other than the deprecated warning, I'm inclined to use the "old" 
>twisted.protocols.telnet interface which at least has examples 
>and documented functions.

I'm confused by your repeated claims of the absense of documentation for twisted.conch.telnet.  <http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html> lists two interfaces, six exception classes, and five protocol classes.  The API documentation pages for the two interfaces alone document the eleven public methods of twisted.conch.telnet completely, and <http://twistedmatrix.com/projects/conch/documentation/examples/> gives numerous examples of both custom telnet and ssh servers.

>
>Thanks again for your help.  It looks like I found your toolset in the
>midst of some huge confusing rewrite or something.  :)  Just my luck.

Things are pretty much always like this.  The only possible hope for perfect documentation is to have a dead project.  I much prefer an active one.

Jean-Paul



From blakeyrat at gmail.com  Sun Mar 19 11:54:27 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 10:54:27 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <20060319183816.22481.7834952.divmod.quotient.2632@ohm>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
Message-ID: <7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>

http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

It lists the classes, and then right next to (almost all of) them it
says "undocumented."

How can the two interfaces document the public method completely if
they're undocumented?

Thanks for your second link, however, I hadn't found that page during
my surfing of your site.  It looks useful.

I still don't understand why you'd deprecate a stable interface in
preference to an *unstable* one.  What happens if conch changes in
some way and needs to be deprecated again?  It seems to me like it's a
"damned if you do or damned if you don't"... if you use
twisted.protocols.telnet it'll be removed and your code won't work,
but if you use twisted.conch.telnet it could be changed and your code
won't work.

I'm not nearly concerned, BTW, about the <1.0 version number as I am
about the "unstable" warning.

If twisted.conch is what people are supposed to be using, wouldn't it
make sense to put that in the core install?

Sorry for being such a griper and for hammering a dead horse with this
one.  I guess I'd just like some assurance that my project, written
using twisted.conch, will still work as the conch library gets
upgraded to 1.0 (at which point, I presume, it would become stable?)



From exarkun at divmod.com  Sun Mar 19 12:28:07 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Mar 2006 14:28:07 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
Message-ID: <20060319192807.22481.1709252408.divmod.quotient.2643@ohm>

On Sun, 19 Mar 2006 10:54:27 -0800, James Schend <blakeyrat at gmail.com> wrote:
>http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html
>
>It lists the classes, and then right next to (almost all of) them it
>says "undocumented."
>
>How can the two interfaces document the public method completely if
>they're undocumented?

Did you try clicking on any links on that page?

>
>Thanks for your second link, however, I hadn't found that page during
>my surfing of your site.  It looks useful.

It should probably be displayed somewhere more prominently on the site.  For some reason, someone has added a link to the conch howtos to the front page, which may leave readers with the incorrect impression that is all of the conch documentation.

>
>I still don't understand why you'd deprecate a stable interface in
>preference to an *unstable* one.

Because I have no interest in maintaining the stable interface since it is so narrowly useful.


>What happens if conch changes in
>some way and needs to be deprecated again?  It seems to me like it's a
>"damned if you do or damned if you don't"... if you use
>twisted.protocols.telnet it'll be removed and your code won't work,
>but if you use twisted.conch.telnet it could be changed and your code
>won't work.

That's life when you're depending on the volunteer efforts of others. :)  That said, nothing is stopping you from using twisted.protocols.telnet: if it is someday removed, you can always distribute a copy of it with your software.

>
>I'm not nearly concerned, BTW, about the <1.0 version number as I am
>about the "unstable" warning.
>
>If twisted.conch is what people are supposed to be using, wouldn't it
>make sense to put that in the core install?

No, because the "core install" is a very special-purpose thing that most people aren't interested in.  It's part of the "Twisted install" already, and that's what most people should install.

>
>Sorry for being such a griper and for hammering a dead horse with this
>one.  I guess I'd just like some assurance that my project, written
>using twisted.conch, will still work as the conch library gets
>upgraded to 1.0

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

To look at this problem another way, how would you feel if you started to use twisted.conch.telnet and found that it satisfied 90% of your use-case, but that due to one critical oversight, you couldn't supply the remaining 10% yourself but instead had to write your own telnet library from scratch, because we had given up the freedom of making changes to twisted.conch.telnet?  That wouldn't be any more useful to you than the current situation.

What you can do is use it and provide feedback on what it does and does not do well and work with us to improve it to the point where we _are_ confident that it is good enough to abandon the hope of making further incompatible changes to it later on.

> (at which point, I presume, it would become stable?)

Maybe or maybe not.  Generally we mark APIs as stable or unstable with finer granularity than this.  It is unlikely that all of conch will become stable at the same time.

Jean-Paul



From blakeyrat at gmail.com  Sun Mar 19 12:42:01 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 11:42:01 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
Message-ID: <7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>

Ok, I think I've solved at least part of my problem.

On the website we've all been linking to back and forth:

http://twistedmatrix.com/documents/current/api/twisted.conch.telnet.html

The link that is oh-so-helpfully labelled Undocumented:

http://schend.net/images/screenshots/twisted/no_documentation.png

Actually links to a page full of extensive documentation:

http://schend.net/images/screenshots/twisted/documentation.png

So it's poor web design that was hiding the API documentation from me.  Great.



From blakeyrat at gmail.com  Sun Mar 19 12:51:23 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 11:51:23 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
Message-ID: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>

Heh, I was typing my reply about the website issue just as you were
typing that email.  Please, please, please fix that!  Not only is the
link's label the exact OPPOSITE as the content of the link, but all
the other links on that (and the other) pages just link to full-page
versions of "Undocumented."  There is no possible way I could have
known there was documentation hidden in there.  Please fix!

>To look at this problem another way, how would you feel if you started to use
>twisted.conch.telnet and found that it satisfied 90% of your
use-case, but that due to one
>critical oversight, you couldn't supply the remaining 10% yourself
but instead had to write
>your own telnet library from scratch, because we had given up the
freedom of making
>changes to twisted.conch.telnet?  That wouldn't be any more useful to
you than the
>current situation.

Well, at the moment, the 90% I need to know is "if there's a security
hole in the library, and my users are forced to update it, will my
code no longer work because the interfaces changed?"

I understand that there is no warranty, yadda yadda, and I understand
that it's a volunteer effort and open source yadda yadda, but what I
really *need* right now is the guarantee of stability.  If conch's
interface can change at any time (on servers that I may not control
and have no say over their installed software), it becomes impossible
for me to support my program and I'd be better off writing my own,
even if that is more code.

So for me, stability is the number one concern.  However, I can't
distribute the old version of the library because of the potential for
undiscovered security holes.  So we're back to "damned if I do, damned
if I don't."

Anyway, I'll keep looking.  Maybe there's another library out there
that implements what I need with a stable interface.  Thanks.



From screwtape at froup.com  Sun Mar 19 13:12:44 2006
From: screwtape at froup.com (Tim Allen)
Date: Mon, 20 Mar 2006 07:12:44 +1100
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
Message-ID: <F4E6DF1F-F1B2-4452-90FF-BA66778791C5@froup.com>

On 20 Mar 2006, at 06:42, James Schend wrote:
> The link that is oh-so-helpfully labelled Undocumented:
>
> http://schend.net/images/screenshots/twisted/no_documentation.png
>
> Actually links to a page full of extensive documentation:
>
> http://schend.net/images/screenshots/twisted/documentation.png

I guess this should be filed as a bug against the new documentation  
system: "classes with no docstring should be labelled 'no class  
docstring' rather than 'undocumented'" or something like that.



From mwh at python.net  Sun Mar 19 14:42:18 2006
From: mwh at python.net (Michael Hudson)
Date: Sun, 19 Mar 2006 21:42:18 +0000
Subject: [Twisted-Python] Re: twisted.protocols.telnet or
	twisted.conch.telnet?
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
Message-ID: <2mek0y158l.fsf@starship.python.net>

"James Schend" <blakeyrat at gmail.com> writes:

> Heh, I was typing my reply about the website issue just as you were
> typing that email.  Please, please, please fix that!

I think the best fix is probably to add a short docstring to
t.c.i.ITelnetProtocol.

> Not only is the link's label the exact OPPOSITE as the content of
> the link, but all the other links on that (and the other) pages just
> link to full-page versions of "Undocumented."  There is no possible
> way I could have known there was documentation hidden in there.
> Please fix!

Do you have any concrete ideas for what to put in that box instead?
"No class docstring, 3/14 method docstrings" or something?  Seems a
bit verbose.

Cheers,
mwh

-- 
  ... so the notion that it is meaningful to pass pointers to memory
  objects into which any random function may write random values
  without having a clue where they point, has _not_ been debunked as
  the sheer idiocy it really is.        -- Erik Naggum, comp.lang.lisp




From golux at comcast.net  Sun Mar 19 15:10:28 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Sun, 19 Mar 2006 17:10:28 -0500
Subject: [Twisted-Python] Re: twisted.protocols.telnet
	or	twisted.conch.telnet?
In-Reply-To: <2mek0y158l.fsf@starship.python.net>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<2mek0y158l.fsf@starship.python.net>
Message-ID: <441DD6D4.7020501@comcast.net>

Michael Hudson wrote:
> Do you have any concrete ideas for what to put in that box instead?
> "No class docstring, 3/14 method docstrings" or something?  Seems a
> bit verbose.

Since there's nothing useful in those boxes right now,
I'd suggest doing one (or both) of the following:

(1)  (easiest) leave those boxes off entirely, since the
Interface/Class names are links to the docs anyway, or

(2)  add summary Interface / Class docstrings to the
source.

And maybe generate some boilerplate above such tables
that says something to the effect of:

"Follow the links for more detailed documentation."

Steve



From mcmillen at cs.cmu.edu  Sun Mar 19 15:25:13 2006
From: mcmillen at cs.cmu.edu (Colin McMillen)
Date: Sun, 19 Mar 2006 17:25:13 -0500
Subject: [Twisted-Python] Re: twisted.protocols.telnet or
	twisted.conch.telnet?
In-Reply-To: <2mek0y158l.fsf@starship.python.net>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<2mek0y158l.fsf@starship.python.net>
Message-ID: <20060319222513.GD32146@cs.cmu.edu>

> Do you have any concrete ideas for what to put in that box instead?
> "No class docstring, 3/14 method docstrings" or something?  Seems a
> bit verbose.

"Not fully documented"?

- Colin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20060319/4ce29882/attachment.sig>

From glyph at divmod.com  Sun Mar 19 17:56:00 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 19 Mar 2006 19:56:00 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
Message-ID: <20060320005600.22481.215433800.divmod.quotient.2711@ohm>

On Sun, 19 Mar 2006 11:51:23 -0800, James Schend <blakeyrat at gmail.com> wrote:

>So for me, stability is the number one concern.  However, I can't
>distribute the old version of the library because of the potential for
>undiscovered security holes.

Practically speaking, the potential for security holes in the code you're discussing is vanishingly small.  If there is a hole, we will likely release a minor-version patch for people still using recent affected releases, especially if the interface has changed.  I say this because there have almost never been holes in Twisted, and when there have been, they've been spotted so fast that a minor-version release was available soon after they were introduced.

You could easily include a tiny telnet module with your library without being worried about security holes.  twisted.protocols.telnet is 159 SLOC; twisted.conch.telnet is 572 SLOC.  If you know enough to be this concerned about security issues, surely you know enough to perform an audit of that small amount of code.  (Especially when half of it, in the latter case, is simply declaration of constants.)

>So we're back to "damned if I do, damned if I don't."

Welcome to the internet ;-).

At the core of this issue is a labor problem.  If you care about the telnet module, you could offer to provide the necessary labor (or funds!) maintain it, which would accellerate conch's official replacement of twisted.protocols.telnet, simplifying this situation.  As maintainer, you could also exercise some degree of control over changes to the telnet module which would avoid breaking your application.

What you are asking for right now is a guarantee of stability from people who simply don't have the resources to provide it to you.  If we could do that for free, we probably would, but it needs a dedicated maintainer, a clear plan for future development, some documentation, etc etc.

>Anyway, I'll keep looking.  Maybe there's another library out there
>that implements what I need with a stable interface.  Thanks.

This is vanishingly unlikely.  If you find a Twisted clone (with a proper telnet implementation!) which is open source, well maintained, and well documented, please let us know where it is.



From itamar at itamarst.org  Sun Mar 19 19:30:16 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 19 Mar 2006 21:30:16 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
References: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
	<20060319183816.22481.7834952.divmod.quotient.2632@ohm>
	<7ff1f2e0603191054q70bef69ek70f7d298bee49dda@mail.gmail.com>
	<7ff1f2e0603191142q79e3c24by607733da0654156d@mail.gmail.com>
	<7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
Message-ID: <1142821816.8838.6.camel@localhost.localdomain>

On Sun, 2006-03-19 at 11:51 -0800, James Schend wrote:

> I understand that there is no warranty, yadda yadda, and I understand
> that it's a volunteer effort and open source yadda yadda, but what I
> really *need* right now is the guarantee of stability.  If conch's
> interface can change at any time (on servers that I may not control
> and have no say over their installed software), it becomes impossible
> for me to support my program and I'd be better off writing my own,
> even if that is more code.

Even when we change APIs, we do tend to try to keep them backwards
compatible. That's exactly why there's a new telnet library; old one
really needed massive changes, but rather than replacing the old one in
same location and breaking existing code, JP started a new
implementation elsewhere.

> So for me, stability is the number one concern.  However, I can't
> distribute the old version of the library because of the potential for
> undiscovered security holes.  So we're back to "damned if I do, damned
> if I don't."

1. If you "distribute old version", that's basically like writing your
own only bootstrapped. If you find security problem, just change your
copy. It's code you control after all. And if you're the only person
using it, only you/your users are likely to find security holes. Same
thing you'd do with something written from scratch.

2. We'd probably distribute security fixes for deprecated code if it
wasn't yet time to remove it outright.




From blakeyrat at gmail.com  Sun Mar 19 19:32:31 2006
From: blakeyrat at gmail.com (James Schend)
Date: Sun, 19 Mar 2006 18:32:31 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <20060320005600.22481.215433800.divmod.quotient.2711@ohm>
References: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<20060320005600.22481.215433800.divmod.quotient.2711@ohm>
Message-ID: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>

Well, if this is a library that you expect people to actually be able
to use in production software, I hope that you take what I say under
some consideration.

One of the reasons to use a library, from my perspective, is that the
interfaces can remain constant while the internals can be patched to
ensure there are no bugs/security problems.  For instance, when libpng
had that buffer overflow last year, that single library was updated to
correct the problem without affecting the functioning of any of the
hundreds of programs that used it.  It would be nice if the same could
be done with Twisted but, as there is not currently a stable interface
to it, that is impossible.

I appreciate the work you put in to Twisted, but I'm sure I'm not the
only developer who feels this way about it.

At the bare minimum, you probably should deprecate an interface until
there's something stable to replace it with.  I wouldn't consider a
library with *no* stable interface whatsoever "well maintained,"
personally.



From radeex at gmail.com  Sun Mar 19 19:43:37 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 19 Mar 2006 21:43:37 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
References: <7ff1f2e0603191151j8bdca4bl720074c61d58dc9b@mail.gmail.com>
	<20060320005600.22481.215433800.divmod.quotient.2711@ohm>
	<7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
Message-ID: <60ed19d40603191843u7a9819cep53c95b7ed108f66d@mail.gmail.com>

On 3/19/06, James Schend <blakeyrat at gmail.com> wrote:
>
> One of the reasons to use a library, from my perspective, is that the
> interfaces can remain constant while the internals can be patched to
> ensure there are no bugs/security problems.  For instance, when libpng
> had that buffer overflow last year, that single library was updated to
> correct the problem without affecting the functioning of any of the
> hundreds of programs that used it.  It would be nice if the same could
> be done with Twisted but, as there is not currently a stable interface
> to it, that is impossible.


You said a bunch of things about how great it is to share code, and then
made a weird assertion at the end about how some code in Twisted can't
provide those great things. I'm not seeing the logical connection. Why can't
we fix bugs, even security holes, just because the API is marked "unstable"?
The only thing an "unstable" marker means that we are allowing ourselves the
freedom of *also* changing the interface of the library. Anyway, as Itamar
said, we always try to keep interfaces backwards compatible, even if they're
marked as "unstable". The "unstable" marker does not say "we will ignore
backwards compatibility", it is "if there are really good reasons, we might
might break the interface". The only reason the *old* telnet implementation
wasn't marked unstable was that nobody had even gotten around to adding a
"stability" marker to it.

Anyway, as it comes down to it, you're telling us to do things that we can't
do without funding or more developer time.  Even if there are thousands of
developers who feel the same way, that doesn't change anything. Regardless,
I still strongy suggest that you're reading way too much into the "API
stability: unstable" marker, and I encourage you to use and help improve the
Telnet code in Conch.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060319/1db7597a/attachment.html>

From glyph at divmod.com  Sun Mar 19 21:13:12 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 19 Mar 2006 23:13:12 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
Message-ID: <20060320041312.22481.1016542654.divmod.quotient.2780@ohm>

On Sun, 19 Mar 2006 18:32:31 -0800, James Schend <blakeyrat at gmail.com> wrote:
>Well, if this is a library that you expect people to actually be able
>to use in production software, I hope that you take what I say under
>some consideration.

Many of the people using Twisted in production, and there are many who are, contribute to its maintenance in some way.  It is still a project actively under development.  However, it's hardly a necessity, and probably half of the people on the Success Stories page have never contributed anything to Twisted.

It sure would be nice if it were totally stable and full-featured, but it would also be nice if I had a pony.  There is a difference between not having the kind of total stability and commercial-grade support guarantees that you want (for free) and being unusable in production.  Code which is *way* worse than Twisted, with less maintenance and security attention than Twisted, is used in "production" all over the world, every day.

By the way, there are definitely people who *will* provide commercial-grade support for Twisted, any version you like, for a very reasonable fee.  My company (Divmod) is among them.  Unfortunately for us, it turns out nobody actually needs commercial-grade support for Twisted, because the code actually stands on its own pretty well :).

>One of the reasons to use a library, from my perspective, is that the
>interfaces can remain constant while the internals can be patched to
>ensure there are no bugs/security problems.  For instance, when libpng
>had that buffer overflow last year, that single library was updated to
>correct the problem without affecting the functioning of any of the
>hundreds of programs that used it.

libpng's interface is hardly stable.  There is a libpng, libpng2, and libpng3, and a planned libpng4.  The interface changes every major release.  They may not write "deprecated! unstable!" all over version 2, but I bet if you were to ask a libpng developer which version you should use to write new code, they wouldn't say "use the one we wrote five years ago and haven't been able to update except for security reasons".

Granted, libpng provides better support for side-by-side installation of mutually incompatible versions than Twisted does, however, it also doesn't provide any "soft" interface changes, deprecation warnings, etc.  It just totally breaks the ABI every major release.

Now, you could easily talk about the merits of sustained parallel development tracks and side-by-side installation, but I don't think that this is a worthwhile discussion until someone is actually going to provide the resources to *do* it.  The best you can do right now is discourage and annoy the people who are dealing with maintaining Twisted's *one* sustained track of development.

>It would be nice if the same could
>be done with Twisted but, as there is not currently a stable interface
>to it, that is impossible.

This is just FUD.  There is nothing magical about the word "stable" which makes security patches possible.

If there are critical security bugs in Twisted, it may well be in someone's interest to do a maintenance release of each release-branch which is used in production.  There is nothing about having a "stable interface" which makes this easy or free.

>I appreciate the work you put in to Twisted, but I'm sure I'm not the
>only developer who feels this way about it.

The sort of security problem you are concerned about is literally so rare that it has never happened before.  Twisted's security bugs (2 in its 5-year history) have always been caught well before another major-version release has happened.

I'm sure other developers feel the same way you do, and that's unfortunate, but you will pardon me if I don't immediately re-configure Twisted Matrix Labs' priorities around an eventuality that has never happened and may only hypothetically happen in the future, simply because it concerns you.

>At the bare minimum, you probably should deprecate an interface until
>there's something stable to replace it with.  I wouldn't consider a
>library with *no* stable interface whatsoever "well maintained,"
>personally.

  http://www.dict.org/bin/Dict?Form=Dict2&Database=*&Query=deprecated

  deprecate \dep"re*cate\ (d[e^]p"r[-e]*k[=a]t), v. t.
     To pray against, as an evil; to seek to avert by prayer; to
     seek deliverance from; to express deep regret for; to desire
     the removal of.

When things are deprecated, it is a statement that we now understand that approach to be a bad idea, which we regret having implemented.  They may not be deprecated in favor of anything, or they may be deprecated in favor of something that isn't a part of Twisted (for example, the components system was deprecated in favor of Zope  Interface).  Sometimes, a particular API is just trying to accomplish an impossible task, or provides a bad way to structure code.  The first iteration of twisted.cred comes to mind.  Nothing attempts to do what the first version of twisted.cred did; the new cred has a much more restricted goal, because what the first version of twisted.cred was trying to do was nearly impossible and it turned out that it didn't actually work.

There was nothing stable in the telnet code in the first place; it just wasn't properly annotated as such.

Something being "well-maintained" within Twisted means that there are people working on it and actively interested in improving and advancing it.  To some extent, that is actually the *opposite* of stable; stable things are things that mostly work OK already.  It is possible to be both, of course. Some stable things, like the reactor, have a stable interface but a known-to-be-sub-optimal implementation, and the maintainers' work is being put towards improving just the implementation.  Those sorts of things are unfortunately rare, because interfaces turn out to be harder to get right than implementations.



From blakeyrat at gmail.com  Mon Mar 20 08:40:41 2006
From: blakeyrat at gmail.com (James Schend)
Date: Mon, 20 Mar 2006 07:40:41 -0800
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <20060320041312.22481.1016542654.divmod.quotient.2780@ohm>
References: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>
	<20060320041312.22481.1016542654.divmod.quotient.2780@ohm>
Message-ID: <7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>

Look, all I want to be able to do is to write a program that can sit
on a server for 10 years and run without me touching it.  My users
won't necessarily be technical and (much more likely) the program
won't necessarily be maintained, so it is important that the libraries
used, if any, won't break my code with updates.

Maybe those are strange, unheard-of, constraints, but either way it
looks like I have to write my own telnet server.  I'd rather not, and
I'm sure you'd rather have me as a user, but that's just the way it
is.

One last question:  How do I uninstall Twisted?  Do I re-run setup.py
with "setup.py core uninstall?"

On 3/19/06, glyph at divmod.com <glyph at divmod.com> wrote:
> On Sun, 19 Mar 2006 18:32:31 -0800, James Schend <blakeyrat at gmail.com> wrote:
> >Well, if this is a library that you expect people to actually be able
> >to use in production software, I hope that you take what I say under
> >some consideration.
>
> Many of the people using Twisted in production, and there are many who are, contribute to its maintenance in some way.  It is still a project actively under development.  However, it's hardly a necessity, and probably half of the people on the Success Stories page have never contributed anything to Twisted.
>
> It sure would be nice if it were totally stable and full-featured, but it would also be nice if I had a pony.  There is a difference between not having the kind of total stability and commercial-grade support guarantees that you want (for free) and being unusable in production.  Code which is *way* worse than Twisted, with less maintenance and security attention than Twisted, is used in "production" all over the world, every day.
>
> By the way, there are definitely people who *will* provide commercial-grade support for Twisted, any version you like, for a very reasonable fee.  My company (Divmod) is among them.  Unfortunately for us, it turns out nobody actually needs commercial-grade support for Twisted, because the code actually stands on its own pretty well :).
>
> >One of the reasons to use a library, from my perspective, is that the
> >interfaces can remain constant while the internals can be patched to
> >ensure there are no bugs/security problems.  For instance, when libpng
> >had that buffer overflow last year, that single library was updated to
> >correct the problem without affecting the functioning of any of the
> >hundreds of programs that used it.
>
> libpng's interface is hardly stable.  There is a libpng, libpng2, and libpng3, and a planned libpng4.  The interface changes every major release.  They may not write "deprecated! unstable!" all over version 2, but I bet if you were to ask a libpng developer which version you should use to write new code, they wouldn't say "use the one we wrote five years ago and haven't been able to update except for security reasons".
>
> Granted, libpng provides better support for side-by-side installation of mutually incompatible versions than Twisted does, however, it also doesn't provide any "soft" interface changes, deprecation warnings, etc.  It just totally breaks the ABI every major release.
>
> Now, you could easily talk about the merits of sustained parallel development tracks and side-by-side installation, but I don't think that this is a worthwhile discussion until someone is actually going to provide the resources to *do* it.  The best you can do right now is discourage and annoy the people who are dealing with maintaining Twisted's *one* sustained track of development.
>
> >It would be nice if the same could
> >be done with Twisted but, as there is not currently a stable interface
> >to it, that is impossible.
>
> This is just FUD.  There is nothing magical about the word "stable" which makes security patches possible.
>
> If there are critical security bugs in Twisted, it may well be in someone's interest to do a maintenance release of each release-branch which is used in production.  There is nothing about having a "stable interface" which makes this easy or free.
>
> >I appreciate the work you put in to Twisted, but I'm sure I'm not the
> >only developer who feels this way about it.
>
> The sort of security problem you are concerned about is literally so rare that it has never happened before.  Twisted's security bugs (2 in its 5-year history) have always been caught well before another major-version release has happened.
>
> I'm sure other developers feel the same way you do, and that's unfortunate, but you will pardon me if I don't immediately re-configure Twisted Matrix Labs' priorities around an eventuality that has never happened and may only hypothetically happen in the future, simply because it concerns you.
>
> >At the bare minimum, you probably should deprecate an interface until
> >there's something stable to replace it with.  I wouldn't consider a
> >library with *no* stable interface whatsoever "well maintained,"
> >personally.
>
>   http://www.dict.org/bin/Dict?Form=Dict2&Database=*&Query=deprecated
>
>   deprecate \dep"re*cate\ (d[e^]p"r[-e]*k[=a]t), v. t.
>      To pray against, as an evil; to seek to avert by prayer; to
>      seek deliverance from; to express deep regret for; to desire
>      the removal of.
>
> When things are deprecated, it is a statement that we now understand that approach to be a bad idea, which we regret having implemented.  They may not be deprecated in favor of anything, or they may be deprecated in favor of something that isn't a part of Twisted (for example, the components system was deprecated in favor of Zope  Interface).  Sometimes, a particular API is just trying to accomplish an impossible task, or provides a bad way to structure code.  The first iteration of twisted.cred comes to mind.  Nothing attempts to do what the first version of twisted.cred did; the new cred has a much more restricted goal, because what the first version of twisted.cred was trying to do was nearly impossible and it turned out that it didn't actually work.
>
> There was nothing stable in the telnet code in the first place; it just wasn't properly annotated as such.
>
> Something being "well-maintained" within Twisted means that there are people working on it and actively interested in improving and advancing it.  To some extent, that is actually the *opposite* of stable; stable things are things that mostly work OK already.  It is possible to be both, of course. Some stable things, like the reactor, have a stable interface but a known-to-be-sub-optimal implementation, and the maintainers' work is being put towards improving just the implementation.  Those sorts of things are unfortunately rare, because interfaces turn out to be harder to get right than implementations.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From glyph at divmod.com  Mon Mar 20 11:07:53 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 20 Mar 2006 13:07:53 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>
Message-ID: <20060320180753.22481.1865394289.divmod.quotient.2969@ohm>



On Mon, 20 Mar 2006 07:40:41 -0800, James Schend <blakeyrat at gmail.com> wrote:
>Look, all I want to be able to do is to write a program that can sit
>on a server for 10 years and run without me touching it.  My users
>won't necessarily be technical and (much more likely) the program
>won't necessarily be maintained, so it is important that the libraries
>used, if any, won't break my code with updates.

If that's all you want, Twisted is the least of your worries:

  - MTBF on your hard drive is almost certainly less than 10 years.
  - libc won't continue to be compatible with your current build of Python for 10 years.
  - It's unlikely that the 10-years-hence version of Python will even _parse_ your code, let alone run it.  (Discussion of Python 3k has started in earnest recently... the timeframe looks to be less than a decade.)
  - the 10-years-hence version of Linux will probably not work with current builds of Python or libc.
  - it is unlikely that the x86 processor architecture will still be en vogue in 10 years, which leads to another set of problems.

A custom-coded project that expects to run with no maintenance programming staff - but to also receive up-to-the-minute security updates! - is unlikely to succeed.  I am not aware of any such project.

I can sympathize with your desire for a perpetually-supported platform; I had a similar crisis working on a project about 5 years ago which I just wanted to "write and forget", but the fact is that writing a platform which can weather a decade's changing hardware and software fads is an **immensely** difficult problem, one nobody has really solved yet.

>Maybe those are strange, unheard-of, constraints, but either way it
>looks like I have to write my own telnet server.  I'd rather not, and
>I'm sure you'd rather have me as a user, but that's just the way it
>is.

Your requirement for a telnet server is that it will be maintained with a stable interface indefinitely, so that libraries can be upgraded for security fixes forever.  However, you can't update your application code to any minor changes in the telnet server interface, because you're not going to be maintaining the application code at all.  Therefore, rather than packaging a copy of the telnet server for stability (because this wouldn't be updated) you are going to write your own (which you won't update, because you aren't planning to maintain the code, only the installation)?



From general at eepatents.com  Mon Mar 20 12:30:51 2006
From: general at eepatents.com (Ed Suominen)
Date: Mon, 20 Mar 2006 11:30:51 -0800
Subject: [Twisted-Python] Motivations of Twisted Developers & $200 Docstring
	Challenge
In-Reply-To: <E1FLOfl-0005Gi-02@pyramid.twistedmatrix.com>
References: <E1FLOfl-0005Gi-02@pyramid.twistedmatrix.com>
Message-ID: <441F02EB.3010705@eepatents.com>

"James Schend" <blakeyrat at gmail.com> wrote:
> Look, all I want to be able to do is to write a program that can sit on a server for 10 years and run without me touching it.  My users won't necessarily be technical and (much more likely) the program won't necessarily be maintained, so it is important that the libraries used, if any, won't break my code with updates.
> 
> Maybe those are strange, unheard-of, constraints, but either way it looks like I have to write my own telnet server.  I'd rather not, and I'm sure you'd rather have me as a user, but that's just the way it is.

I'm an active user of Twisted, but even after several years, I'm still
not sure whether the Twisted developers really *want* you as a user or
not. I'm not saying that with any hostility; I'm actually a big fan of
Twisted and those behind it. They certainly have been very helpful to me
with my specific questions on IRC, and in that way it's one of the most
responsive and "live" F/OSS projects around. Frankly, I think the
Twisted developers understand Python and the theoretical underpinnings
of software engineering better than 90% of the people developing with
Python today.

On the other hand, though, much of the style of development that goes on
almost seems *intended* to turn off potential users, such as abandoning
subprojects mid-stream in favor of a Next Big Thing that remains a
moving and largely undocumented target for long periods of time, and
failing, for reasons incomprehensible to me, to simply write even 2-3
lines explanations of what their New and Improved code is actually
*doing* in the docstrings that Python so conveniently provides for that
purpose. Ironically, one of the latest examples of this is a document
extractor under development that is supposed to fix some alledgedly
grevious flaws in epydoc (undetected by this user, by the way) that
actually has very little source material to work with from the Twisted
code itself!

Another most unfortunate example is that the most powerful way to do
networking with Python is without a recommendable HTTP server. The
Twisted devs won't recommend twisted.web because it is "hopelessly
broken" yet they have nothing released to support it. Twisted web2
remains largely undocumented and the developers advised those using it
to do so at their own peril. Note to developers: serving HTTP is the
biggest single use-case for Python networking!

I've complained about these issues for a long time. Now I'm going to put
my money where my mouth is. I hereby commit to a two hundred dollar
($200) payment to Twisted, c/o the exarkun at divmod.com account listed
under the "Contributing" heading of http://twistedmatrix.com/trac/, in
exchange for one or more of the Twisted developers committing SVN/trunk
changes in the next two weeks that implement at least 100 meaningful
class or method docstrings in new or active portions of the Twisted API.
(I'd personally appreciate a focus on twisted.web2 as that's what I'm
spending my time on right now, but this challenge is open to any active
parts of the API.)

That works out to $2 per docstring, and those "in the know" should be
able to write them in just minutes apiece. Spend five hours writing all
of them (improving "your" parts of Twisted in the process) at 20
docstrings per hour and pocket $40/hr for your efforts. It sounds like a
pretty good deal to me, and hopefully to the Twisted devs as well.

If this challenge is accepted and it works out well, I might even do it
again -- I'm *that* interested in the ultimate success of this sometimes
wonderfully crazy library/framework/Integratotron*

Let me know.

Best regards,
Ed Suominen

* See Glyph's somewhat amusing and thought-provoking blog entry of March
15: http://glyf.livejournal.com/54500.html




From jtanis at pycoder.org  Mon Mar 20 23:32:14 2006
From: jtanis at pycoder.org (James Tanis)
Date: Tue, 21 Mar 2006 01:32:14 -0500
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
References: <7ff1f2e0603181513s33773f81q51bacc91d4f7f541@mail.gmail.com>
	<60ed19d40603190739o26999b19wfe8447c03c820dfa@mail.gmail.com>
	<60ed19d40603190804pd7e937fx137a4a238bb95aae@mail.gmail.com>
	<7ff1f2e0603191008s4c9fa3e7x7210fcf201ab1323@mail.gmail.com>
Message-ID: <65dcde740603202232p76a09687yfd7f21aba4756ea@mail.gmail.com>

> There's a HUGE difference in the amount of documentation available.
> Just learning this stuff for the first time, I need as much
> documentation as I can get... all the examples, and all the API docs,
> seem to be in twisted.protocols.telnet.  And of course I'd much rather
> use something that's at version 2.2 than something that's at version
> 0.6.

If you want documentation on how to use Twisted 2.0+ O'Rielly's book
is the best way to go, at least with the api's you'll want to know
about. I guess I could send you the mud I started writing with
Twisted. Only got so far as the server with a very world/mob
definitions, can't actually do anything but log in :P.. kind of left
it until I had more interest.

Honestly the only way to learn twisted well is by reading every little
bit of code your importing, and that includes the twisted code that it
in turn depends on :P Twisted can be quite hard to use as well as
understand without a good bit of time invested in trial and error. I
spend a good couple of weeks trying to figure out how to write an
email server - I finished 98% in the first day or two, but I've always
found twisted's way of handling authentication a bit confusing.. long
story short, I ended up spending a very long on some very small bits
of code :P. The learning curve is worth it though, because once enough
items click, implementation is much quicker then any other alternative
I've ever heard of.

>
> If conch is still unstable and hasn't hit 1.0, why is the old
> interface deprecated?  It seems silly to deprecate the old interface
> if the new one, being unstable, might change and require being
> deprecated again.  I'm sorry, I just don't understand.

Thats because your making some assumptions, such as the old interface
being stable. Hopefully I won't make anyone angry here, but Twisted is
by far, not a stable programming framework, it has made some good
strides towards that end, especially with 2.0+. Typically stable, as
it applies to Twisted, refers to whether or not the API can be
expected to go through any changes in the near future.. it doesn't
necessarily refer to stability as a "performance attribute."

>
> (FYI, I did download the entire tarball, but I only installed the
> "core" because I figured that that was all I needed.  I didn't
> anticipate that "correct" telnet interface had moved because, again,
> this isn't documented in the API reference, which I looked at before
> installing.)
>
> You say that Conch is better... how is it better?  Is
> twisted.protocol.telnet going away in the near future?  What the heck
> should I be using?  Other than the deprecated warning, I'm inclined to
> use the "old" twisted.protocols.telnet interface which at least has
> examples and documented functions.

conch.telnet has these also, not to mention a  book. Perhaps you
should try google if what is under documentation/howto/examples on the
twisted website isn't good enough. These two interfaces are basically
the same, one has just been extended/integrated/whatever so it can
take advantage of many of conch's very useful features.. vt100/ansi
and friends to name one.. it'd be very feasible to code a mud with an
interface intuitive enough users wouldn't need a mud client any
longer.. its much easier to ask how it hasn't been improved :P.
Its obvious here that you haven't bothered to look at the code. Dont
rely on just an API web index.. be a coder, read the code :P.
>
> Thanks again for your help.  It looks like I found your toolset in the
> midst of some huge confusing rewrite or something.  :)  Just my luck.
>

Buy the book, read the code, and most of all take your time. You did
not stumble in during a confusing rewrite, your just confused. If two
interfaces, one having an "unstable" api while the other is depracted,
stumps you.. you have a rocky road ahead. Luck has nothing to do with
learning how to use Twisted, on the other hand knowledge of Python and
prior coding experience does.

> On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
> > On 3/19/06, Christopher Armstrong <radeex at gmail.com> wrote:
> >
> > >
> > > On 3/18/06, James Schend <blakeyrat at gmail.com > wrote:
> > >
> > >
> > >
> > >
> > > > When I run that example, I get the message that
> > > > twisted.protocols.telnet is deprecated and I should instead be using
> > > > twisted.conch.telnet.
> > >
> > >
> > >
> > > > Is there something I'm missing here, or is Twisted telling me that I
> > > > should be using an unstable <1.0 library with no documentation that's
> > > > not even part of the core install instead of a 2.2 version library
> > > > with good documentation that *is* part of the core install?  Is this
> > > > deprecated warning in the wrong spot?  I don't get it.
> > >
> > >
> > >
> > >
> > > The telnet protocol implementation was simply moved to Conch. That
> > particular code is no more or less stable and documented than it was in its
> > old location. Also, if you're downloading tarballs, you should be getting
> > the full Twisted tarball, not the individual core/subproject tarballs. Those
> > individual ones are for embedders and OS packagers, basically. (The old web
> > site didn't make this as clear, and the new one encourages you to download
> > the full Twisted package).
> >
> >
> >
> > I'm sorry, it appears I'm mistaken. I was thinking that the telnet protocol
> > implementation moved to twisted.conch in the Great Split of Two Point Oh,
> > but I see that this was something else. The implementation in conch is
> > definitely different (and probably better), but I don't think my comment
> > about the state of documentation and stability is any less true.
> >
> > --
> > Christopher Armstrong
> > International Man of Twistery
> > http://radix.twistedmatrix.com/
> > http://twistedmatrix.com/
> > http://canonical.com/
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


--
James Tanis
jtanis at pycoder.org
http://pycoder.org



From lycka at carmensystems.com  Tue Mar 21 01:50:13 2006
From: lycka at carmensystems.com (Magnus Lycka)
Date: Tue, 21 Mar 2006 09:50:13 +0100
Subject: [Twisted-Python] twisted.protocols.telnet or twisted.conch.telnet?
In-Reply-To: <7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>
References: <7ff1f2e0603191832m329921b4t1a50654259d8c345@mail.gmail.com>	<20060320041312.22481.1016542654.divmod.quotient.2780@ohm>
	<7ff1f2e0603200740u27ca6ca1k10e7fe8951b9b8b0@mail.gmail.com>
Message-ID: <441FBE45.10506@carmensystems.com>

James Schend wrote:

>Look, all I want to be able to do is to write a program that can sit
>on a server for 10 years and run without me touching it.  My users
>won't necessarily be technical and (much more likely) the program
>won't necessarily be maintained, so it is important that the libraries
>used, if any, won't break my code with updates.
>
As long as noone maintains it, the libraries won't get updated, so
you have nothing to worry about. ;^)

If you have a look at PEP 5 http://www.python.org/doc/peps/pep-0005/
you will notice that "There must be at least a one-year transition
period between the release of the transitional version of Python and
the release of the backwards incompatible version." In practice, it's
typically longer than that, but don't bet on it.

You never have anything near 10 year API stability guarantees in
Python if you update the software. Even basic syntax and built in
operators can change. Changes of the division operator have been
announced more than a year ago, so you already live on borrowed
time if you don't use "from __future__ import division" and make
sure that no libraries you use rely on the old behaviour.

There is no way Twisted can shield you from these Python problems.
It's true that a lot of Python code written 10 years ago still work,
but you have poor timing if you want to project that forward. There
will most probably be core language changes in that time that will
require maintenance work, such as the default behaviour of the
division operator, removal of old style classes, enforcement of new
style class exceptions, maybe even removal of some statements etc.
Don't expect any support for Python 2.x in ten years.

I'm sure you can still run a Python/Twisted app written today in
ten years from now, but don't expect to do it on an updated platform.

If this worries you, don't use Python.




From glyph at divmod.com  Tue Mar 21 05:31:27 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 21 Mar 2006 07:31:27 -0500
Subject: +$400 docstrings (was Re: [Twisted-Python] Motivations of Twisted
	Developers & $200 Docstring) Challenge
In-Reply-To: <441F02EB.3010705@eepatents.com>
Message-ID: <20060321123127.22481.1978052722.divmod.quotient.3240@ohm>

On Mon, 20 Mar 2006 11:30:51 -0800, Ed Suominen <general at eepatents.com> wrote:

>I'm an active user of Twisted, but even after several years, I'm still
>not sure whether the Twisted developers really *want* you as a user or
>not.

We need more developers, especially those who can make some kind of predictable time investment.  More non-developer users in the F/OSS world mainly help you track down defects faster, and right now we know about waaay more defects than we can handle :).

However, realistically the only way to get more developers is to get more users and then recruit from that userbase.  So, the project is in a bit of a conflicted state now.  We want more users but only the users that are likely to attract more developers.  People who require free guarantees of stability and such are pretty are pretty close to the bottom of the list.  (Of course, everybody *wants* free guarantees...)

>I'm not saying that with any hostility; I'm actually a big fan of
>Twisted and those behind it. They certainly have been very helpful to me
>with my specific questions on IRC, and in that way it's one of the most
>responsive and "live" F/OSS projects around. Frankly, I think the
>Twisted developers understand Python and the theoretical underpinnings
>of software engineering better than 90% of the people developing with
>Python today.

Why, thank you :)

>On the other hand, though, much of the style of development that goes on
>almost seems *intended* to turn off potential users, such as abandoning
>subprojects mid-stream in favor of a Next Big Thing that remains a
>moving and largely undocumented target for long periods of time, and
>failing, for reasons incomprehensible to me, to simply write even 2-3
>lines explanations of what their New and Improved code is actually
>*doing* in the docstrings that Python so conveniently provides for that
>purpose.

Agreed.  This is a huge problem.

>Ironically, one of the latest examples of this is a document
>extractor under development that is supposed to fix some alledgedly
>grevious flaws in epydoc (undetected by this user, by the way) that
>actually has very little source material to work with from the Twisted
>code itself!

The "grievous flaws in epydoc", just for the record, are that it would no longer run over the Twisted codebase at all.  Zope Interface broke it and that was never fully fixed, and other constructs have come along that would cause it to explode while trying to generate the documentation for Twisted.  Even when it was "working" it required a multi-page litany of monkeypatches to get through a complete run.  It was quite detectable by a user that the code had no generated API documentation ;).

However, an alpha of epydoc 3 is out, and it no longer has to import modules to generate documentation, so perhaps this situation is only temporary?

>Another most unfortunate example is that the most powerful way to do
>networking with Python is without a recommendable HTTP server. The
>Twisted devs won't recommend twisted.web because it is "hopelessly
>broken" yet they have nothing released to support it. Twisted web2
>remains largely undocumented and the developers advised those using it
>to do so at their own peril. Note to developers: serving HTTP is the
>biggest single use-case for Python networking!

We're aware of this.  Basically the web situation is this: the web1 server is problematic for a variety of reasons (no support for Deferreds, uploads are fully processed before requests are dispatched to user code, no HTTP/1.1 support, which means no pipelining, and no proper proxying).  The web2 server is remaining unstable because A) it's still desperately inefficient, and B) we all know we made a hash of HTTP the first time around, and so we're trying to get at least the *known* problems fixed for web2 so that we don't go around this wheel of pain again.

It does leave users in an unfortunate position for the time being, and believe me, I am definitely one of those users, and I directly feel this pain.  Divmod's product suffers directly from the web2 rewrite.  Right now we're using twisted.web 'classic' because it's more effort than it's worth to make Nevow work with t.web and t.web2 at the same time.  We want to do things that require the new code (like WebDAV, and tracking the progress of as-yet-incomplete uploads) but we are also hurting for performance at just about every layer and don't want to upgrade until things like streams.

So, if I could think of an easy solution to this problem, I already would have :).  James Knight has been the driving force behind web2 so far, and I admire his efforts, but he's just one guy (with the occasional help of David Reid) and he's not even using this code at work.  Again, there is a labor shortage here.  It's not even a funding shortage in this case: everyone who should be working on web2 has other jobs.  The best way to get this done, honestly, would be for 100 people to join the Divmod fan club and all say "WEB2!!!" in the next meeting :).

>I've complained about these issues for a long time. Now I'm going to put
>my money where my mouth is. I hereby commit to a two hundred dollar
>($200) payment to Twisted, c/o the exarkun at divmod.com account listed
>under the "Contributing" heading of http://twistedmatrix.com/trac/, in
>exchange for one or more of the Twisted developers committing SVN/trunk
>changes in the next two weeks that implement at least 100 meaningful
>class or method docstrings in new or active portions of the Twisted API.
>(I'd personally appreciate a focus on twisted.web2 as that's what I'm
>spending my time on right now, but this challenge is open to any active
>parts of the API.)

I still have $400 in contributions left over from my last birthday ( http://glyf.livejournal.com/2005/05/20/ ) set aside for improving Twisted.

>That works out to $2 per docstring, and those "in the know" should be
>able to write them in just minutes apiece. Spend five hours writing all
>of them (improving "your" parts of Twisted in the process) at 20
>docstrings per hour and pocket $40/hr for your efforts. It sounds like a
>pretty good deal to me, and hopefully to the Twisted devs as well.

That seems like a pretty good rate.  I'll add to that deal.  For each additional 100 docstrings, I'll give an additional 200 dollars directly to whoever does it.

>If this challenge is accepted and it works out well, I might even do it
>again -- I'm *that* interested in the ultimate success of this sometimes
>wonderfully crazy library/framework/Integratotron*

Thanks a lot :)



From Marcin.Kasperski at softax.com.pl  Tue Mar 21 06:36:45 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 21 Mar 2006 14:36:45 +0100
Subject: [Twisted-Python] Mixing generator style (yield+twisted.flow)
	functions with deferreds?
Message-ID: <200603211436.46452.Marcin.Kasperski@softax.com.pl>

I develop some twisted application using 'traditional' method 
(plenty of deferreds and small callbacks). Works well, but is 
not too readable and a bit difficult to maintain. Therefore, I 
would like to move into twisted.flow-style coding (single longer 
function returning flow.Cooperate() from time to time, wrapped 
with flow.Deferred).

There is a problem nevertheless. I still have some functions 
which return deferreds and which results are needed in the 
processing. Is it possible to somehow wrap them and keep 
yield-style of coding?

To explain what do I mean, take a look at the code below, written 
using generators. It is clean, nice and easy to maintain, but at 
the same time well-behaving in cooperative environment. Just 
what I want to use.

  from __future__ import generators
  from twisted.internet import reactor, defer
  from twisted.flow import flow

  def someFunction(name):
    return flow.Deferred( someFunctionBody(name) )

  def someFunctionBody(name):
     x = 1
     print name, x
     yield flow.Cooperate()
     x = x+1
     print name, x
     yield flow.Cooperate()
     x = x+1
     print name, x
     yield flow.Cooperate()
     x = x+1    
     print name, x
     yield x

  d = defer.DeferredList([someFunction('a'), someFunction('b')])
  d.addCallback(lambda _: reactor.stop())
  reactor.run() 

What is the problem? Imagine that somewhere within the function I 
need to call some deferred-returning function (and use its 
result in the further computation)? For instance so:

  def someFunctionBody(name):
     x = 1
     print name, x
     yield flow.Cooperate()
     x = x+1
     print name, x
     yield flow.Cooperate()
     d = functionReturningDeferredWhichFiresInteger(x)
     #### and here some magic to extract value from d to x
     #### would be so nice
     print name, x
     yield flow.Cooperate()
     x = x+1    
     print name, x
     yield x

Is it possible to apply some syntax glue to keep the code in one 
piece, without splitting the function and callback-ing 
explicite? I do *not* want to call deferred synchronously, I 
just search for opportunity to have nicely-looking code. At the 
first sight I doubt, but ... I would never believe that the 
generator-based code is possible until I saw it...

If the general solution is not possible, another question. What 
if, in the critical place, I need to call computation-intensive 
database function (currently deferred using enterprise api)?



From exarkun at divmod.com  Tue Mar 21 07:49:17 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Mar 2006 09:49:17 -0500
Subject: [Twisted-Python] Mixing generator style (yield+twisted.flow)
	functions with deferreds?
In-Reply-To: <200603211436.46452.Marcin.Kasperski@softax.com.pl>
Message-ID: <20060321144917.22481.772184156.divmod.quotient.3269@ohm>

On Tue, 21 Mar 2006 14:36:45 +0100, Marcin Kasperski <marcin.kasperski at softax.com.pl> wrote:
>I develop some twisted application using 'traditional' method
>(plenty of deferreds and small callbacks). Works well, but is
>not too readable and a bit difficult to maintain. Therefore, I
>would like to move into twisted.flow-style coding (single longer
>function returning flow.Cooperate() from time to time, wrapped
>with flow.Deferred).
>
>There is a problem nevertheless. I still have some functions
>which return deferreds and which results are needed in the
>processing. Is it possible to somehow wrap them and keep
>yield-style of coding?

There's no need to use twisted.flow for this, and I would discourage you from doing so.  Instead, if you want to use this style of programming, simply use waitForDeferred and deferredGenerator from twisted.internet.defer.

> [snip]
>
>What is the problem? Imagine that somewhere within the function I
>need to call some deferred-returning function (and use its
>result in the further computation)? For instance so:
>
>  def someFunctionBody(name):
>     x = 1
>     print name, x
>     yield flow.Cooperate()
>     x = x+1
>     print name, x
>     yield flow.Cooperate()
>     d = functionReturningDeferredWhichFiresInteger(x)
>     #### and here some magic to extract value from d to x
>     #### would be so nice
>     print name, x
>     yield flow.Cooperate()
>     x = x+1
>     print name, x
>     yield x


    def someFunction(name):
        x = 1
        print name, x
        yield None
        x += 1
        print name, x
        yield None
        d = defer.waitForDeferred(funcReturnDef(x))
        yield d
        x = d.getResult()
        print name, x
        ...
    someFunction = defer.deferredGenerator(someFunction)

Jean-Paul



From kim at trdlnk.com  Tue Mar 21 10:21:21 2006
From: kim at trdlnk.com (Kim Novak)
Date: Tue, 21 Mar 2006 11:21:21 -0600
Subject: [Twisted-Python] using gtk without threads and pb
In-Reply-To: <440C5DAB.2090705@trdlnk.com>
References: <440C5DAB.2090705@trdlnk.com>
Message-ID: <44203611.4020208@trdlnk.com>

I haven't heard a response on this. Can anyone answer?
Thanks
Kim

Kim Novak wrote:
> I am new to twisted and am trying to figure out if I can use it with 
> gtk but without threads.
>
> I need this because of an old library I'm using that doesn't work with 
> gtk threads. Since I have to run single threaded the async xml rpc 
> offered by Twisted is ideal for my application to work well.
>
> To test this I tweaked the example pbgtk2.py to disable threads as 
> recommended here:
> http://twistedmatrix.com/trac/ticket/1083
> The tweaked version is attached. I start pbecho.py and run my 
> pbgtk2.py. When I click connect it eventually times out. Without my 
> tweaks it connects immediately.
>
> Does anyone know if this is supposed to be possible? If so, what I am 
> I doing wrong?
>
> I am using python v2.3 and pygtk v2.6.
> Thanks
> Kim
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From exarkun at divmod.com  Tue Mar 21 10:36:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Mar 2006 12:36:54 -0500
Subject: [Twisted-Python] using gtk without threads and pb
In-Reply-To: <44203611.4020208@trdlnk.com>
Message-ID: <20060321173654.22481.428024593.divmod.quotient.3316@ohm>

On Tue, 21 Mar 2006 11:21:21 -0600, Kim Novak <kim at trdlnk.com> wrote:
>I haven't heard a response on this. Can anyone answer?
>Thanks
>Kim
>
>Kim Novak wrote:
>>I am new to twisted and am trying to figure out if I can use it with gtk 
>>but without threads.

This is not currently supported.

Jean-Paul



From kim at trdlnk.com  Tue Mar 21 10:58:40 2006
From: kim at trdlnk.com (Kim Novak)
Date: Tue, 21 Mar 2006 11:58:40 -0600
Subject: [Twisted-Python] using gtk without threads and pb
In-Reply-To: <20060321173654.22481.428024593.divmod.quotient.3316@ohm>
References: <20060321173654.22481.428024593.divmod.quotient.3316@ohm>
Message-ID: <44203ED0.4060209@trdlnk.com>

Thanks for the reply.
Kim

Jean-Paul Calderone wrote:
> On Tue, 21 Mar 2006 11:21:21 -0600, Kim Novak <kim at trdlnk.com> wrote:
>> I haven't heard a response on this. Can anyone answer?
>> Thanks
>> Kim
>>
>> Kim Novak wrote:
>>> I am new to twisted and am trying to figure out if I can use it with 
>>> gtk but without threads.
>
> This is not currently supported.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From Marcin.Kasperski at softax.com.pl  Tue Mar 21 13:29:03 2006
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Tue, 21 Mar 2006 21:29:03 +0100
Subject: [Twisted-Python] Mixing generator style (yield+twisted.flow)
	functions with deferreds?
In-Reply-To: <20060321144917.22481.772184156.divmod.quotient.3269@ohm>
References: <20060321144917.22481.772184156.divmod.quotient.3269@ohm>
Message-ID: <200603212129.04605.Marcin.Kasperski@softax.com.pl>

>     def someFunction(name):
>         x = 1
>         print name, x
>         yield None
>         x += 1
>         print name, x
>         yield None
>         d = defer.waitForDeferred(funcReturnDef(x))
>         yield d
>         x = d.getResult()
>         print name, x
>         ...
>     someFunction = defer.deferredGenerator(someFunction)

GREAT!  Thank you very, very much!

Minor note, I am not sure to whom - I think that such example 
deservers its place in Twisted tutorial. Or maybe it is there? 
But I tried reading docs carefully and failed to find such a 
thing....



From johnpote at jptechnical.co.uk  Tue Mar 21 18:20:46 2006
From: johnpote at jptechnical.co.uk (John Pote)
Date: Wed, 22 Mar 2006 01:20:46 +0000
Subject: [Twisted-Python] ftp server
Message-ID: <4420A66E.4040003@jptechnical.co.uk>

Hi everyone.

I've just started looking at Twisted as I need an ftp server and 
possibly a TCP listener on an internet connected server.

I have the new 'Twisted' book which looks like it should get me going 
pretty quick.

But looking at the ......\twisted\protocols\ftp.py the following comment 
is found:-

"""
An FTP protocol implementation
.
.
API stability: FTPClient is stable, FTP and FTPFactory (server) is 
unstable.
"""
As it is the server that I am interested in the 'unstable' comment is 
somewhat worrying. Any comments on this instability would be 
appreciated. i.e. is it particular situations that cause problems or are 
there general problems with the server that may occur doing simple 
things. The application is for continuous data gathering where 
continuity of the data is vital. (The data source streams data 
continuously, sending small amounts of data every few minutes. Source 
buffering can back up 1 or 2 hours worth of data but then it has to be 
uploaded or it's lost forever)

Also I do not want the uploaded file contents written directly to disk. 
I want to pass it to another python app/object to decode it, format it 
and finally append it to a file on disk. Could the Twisted ftp server 
allow such 'filtering'? The reason for doing this via ftp is the data 
source client is a GPRS modem that has ftp built in (but not http). The 
alternative is to do my own thing directly via TCP. Comments invited.

Thanks for any help you can give,

John Pote



From radeex at gmail.com  Tue Mar 21 18:50:29 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Tue, 21 Mar 2006 20:50:29 -0500
Subject: [Twisted-Python] ftp server
In-Reply-To: <4420A66E.4040003@jptechnical.co.uk>
References: <4420A66E.4040003@jptechnical.co.uk>
Message-ID: <60ed19d40603211750t6c9128acp1633e179420bea54@mail.gmail.com>

On 3/21/06, John Pote <johnpote at jptechnical.co.uk> wrote:
>
> API stability: FTPClient is stable, FTP and FTPFactory (server) is
> unstable.



> As it is the server that I am interested in the 'unstable' comment is
> somewhat worrying. Any comments on this instability would be
> appreciated. i.e. is it particular situations that cause problems or are
> there general problems with the server that may occur doing simple
> things.
>

First, note that it refers to *API* stability, not performance stability.
The only thing "unstable" means in this context is that we reserve the right
to change the interface of the FTP server in a way that could possibly break
end-user code, although that's only if backwards compatibility is
impossible. In practice, code written against an "unstable" Twisted
interface doesn't often  break outright upon upgrade; instead deprecated
APIs will give you warnings when you continue to use them, and hopefully
sufficiently describe the correct way to use the functionality.

Also I do not want the uploaded file contents written directly to disk.
> I want to pass it to another python app/object to decode it, format it
> and finally append it to a file on disk. Could the Twisted ftp server
> allow such 'filtering'? The reason for doing this via ftp is the data
> source client is a GPRS modem that has ftp built in (but not http). The
> alternative is to do my own thing directly via TCP. Comments invited.


The FTP server framework definitely supports such things, although you have
to go through a bit of boilerplate. You eventually end up implementing your
own IConsumer to handle the data, which means you'll get chunks of data
handed to you as it comes in and you can do what you want with it.

Hope this helps. If you need any more detailed info feel free to post again.


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060321/d29a5a3c/attachment.html>

From johnpote at jptechnical.co.uk  Wed Mar 22 02:46:18 2006
From: johnpote at jptechnical.co.uk (John Pote)
Date: Wed, 22 Mar 2006 09:46:18 +0000
Subject: [Twisted-Python] ftp server
In-Reply-To: <60ed19d40603211750t6c9128acp1633e179420bea54@mail.gmail.com>
References: <4420A66E.4040003@jptechnical.co.uk>
	<60ed19d40603211750t6c9128acp1633e179420bea54@mail.gmail.com>
Message-ID: <44211CEA.40205@jptechnical.co.uk>

Thanks for the replies. I can go ahead with Twisted with confidence. I 
guess I'll be back to this list for some help on the 'boiler plate' 
IConsumer stuff (or is this in the docs somewhere?).

Best wishes,

John Pote

Christopher Armstrong wrote:

> On 3/21/06, *John Pote* <johnpote at jptechnical.co.uk 
> <mailto:johnpote at jptechnical.co.uk>> wrote:
>
>     API stability: FTPClient is stable, FTP and FTPFactory (server) is
>     unstable.
>
>  
>
>     As it is the server that I am interested in the 'unstable' comment is
>     somewhat worrying. Any comments on this instability would be
>     appreciated. i.e. is it particular situations that cause problems
>     or are
>     there general problems with the server that may occur doing simple
>     things.
>
>
> First, note that it refers to *API* stability, not performance 
> stability. The only thing "unstable" means in this context is that we 
> reserve the right to change the interface of the FTP server in a way 
> that could possibly break end-user code, although that's only if 
> backwards compatibility is impossible. In practice, code written 
> against an "unstable" Twisted interface doesn't often  break outright 
> upon upgrade; instead deprecated APIs will give you warnings when you 
> continue to use them, and hopefully sufficiently describe the correct 
> way to use the functionality.
>
>     Also I do not want the uploaded file contents written directly to
>     disk.
>     I want to pass it to another python app/object to decode it,
>     format it
>     and finally append it to a file on disk. Could the Twisted ftp server
>     allow such 'filtering'? The reason for doing this via ftp is the data
>     source client is a GPRS modem that has ftp built in (but not
>     http). The
>     alternative is to do my own thing directly via TCP. Comments invited.
>
>
> The FTP server framework definitely supports such things, although you 
> have to go through a bit of boilerplate. You eventually end up 
> implementing your own IConsumer to handle the data, which means you'll 
> get chunks of data handed to you as it comes in and you can do what 
> you want with it.
>
> Hope this helps. If you need any more detailed info feel free to post 
> again.
>
>
> -- 
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>
>------------------------------------------------------------------------
>
>No virus found in this incoming message.
>Checked by AVG Free Edition.
>Version: 7.1.385 / Virus Database: 268.2.5/284 - Release Date: 17/03/2006
>  
>




From glyph at divmod.com  Thu Mar 23 10:05:46 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 23 Mar 2006 12:05:46 -0500
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: 0
Message-ID: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>


Right now, there are no exceptions to the rule of "make sure there's a ticket before you check any code in to trunk".

However, several people raised some concerns on IRC over the additional friction this adds for minor fixes (the change in question being spiv's doc correction of "the the").

It's worth noting that if branching is difficult for you, it is also perfectly acceptable to attach a patch to a ticket.  The important thing is that a ticket exist first, so that merging and reviewing can be done independently of committing, not that a branch actually be created in SVN.

For now, because defining "trivial" is so hard (what if your docstring fix has a typo which actually changes some code which breaks some tests?), and it is always too tempting to classify "just this one" branch as "trivial" because the author wants to merge it really fast and it's not _too_ long, the proposed solution is to have a shared "minor fixes" ticket and branch, which should be reviewed once a week or so, and merged en-masse.

To be clear: there are still *no exceptions* to this rule.  However, please feel free to file a general-purpose ticket for minor fixes and work with as many other developers checking into the branch for that ticket.



From mustafa at liqia.com  Thu Mar 23 11:06:59 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Thu, 23 Mar 2006 20:06:59 +0200
Subject: [Twisted-Python] Getting splitted data with SSHChannel.dataReceived
Message-ID: <4422E3C3.1070004@liqia.com>

Hi,

I am using twisted conch to execute a remote program (say ProgA) through 
ssh. In ProgA, I print some datas and catch them in the dataReceived 
method of SSHChannel.

Sometimes, the data comes partially, like this

ProgA                                    dataReceived
------------                              --------------------------------
prints TWISTED                    gets TWISTED  and appends it to TOTAL
.
.
.
prints TWISTED                    if len(TOTAL) is 1020 gets TWIS (gets 
at most 1024)
                                               => then gets TED (next time)

I think there's a buffer of something else, so dataReceived couldn't get 
the datas as they are printed.  They  are splitted if TOTAL reaches  
1024. I am looking for a solution to prevent getting splitted data.

Any help is greatly appreciated.
Greetings,

Saki



From andrew-twisted at puzzling.org  Thu Mar 23 11:09:03 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 24 Mar 2006 05:09:03 +1100
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
Message-ID: <20060323180903.GF10268@steerpike.home.puzzling.org>

On Thu, Mar 23, 2006 at 12:05:46PM -0500, glyph at divmod.com wrote:
[...]
> 
> For now, because defining "trivial" is so hard (what if your docstring fix 
> has a typo which actually changes some code which breaks some tests?), and 
> it is always too tempting to classify "just this one" branch as "trivial" 
> because the author wants to merge it really fast and it's not _too_ long, 
> the proposed solution is to have a shared "minor fixes" ticket and branch, 
> which should be reviewed once a week or so, and merged en-masse.

As stated on IRC, I think this adds significant, needless overhead to the
process for zero benefit.

The risk of a trivial commit (let's say this is defined as purely small cosmetic
or documentation changes, and that any code change is considered by definition
non-trivial) going wrong is low.  Even if it *does* go wrong, the cost of fixing
that is low (a simple revert away, and diagnosis is going to be easy with a diff
that tiny).  The proposed process is out of proportion with the problem.

Launchpad requires mandatory reviewer approval for merging to trunk -- with an
exception for trivial commits.  Trivial commits must have [trivial] in the
commit message, or they are automatically rejected.  Given we already puts diffs
in our commit mails, post hoc reviews are easy if anyone cares.  Abusing
[trivial] would be dealt with the same as any other abuse.  The system works
very well for us.  I think it would work well for Twisted, and the cost is
almost nothing: committers have to add "[trivial]" to commit messages.

Vote "no" to mindless bureaucracy! ;)

-Andrew.




From corydodt at twistedmatrix.com  Thu Mar 23 11:15:33 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 23 Mar 2006 10:15:33 -0800
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323180903.GF10268@steerpike.home.puzzling.org>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
	<20060323180903.GF10268@steerpike.home.puzzling.org>
Message-ID: <4422E5C5.7090908@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Andrew Bennetts wrote:
> On Thu, Mar 23, 2006 at 12:05:46PM -0500, glyph at divmod.com wrote:

> Launchpad requires mandatory reviewer approval for merging to trunk -- with an
> exception for trivial commits.  Trivial commits must have [trivial] in the
> commit message, or they are automatically rejected.  

+1
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEIuXF3A5SrXAiHQcRAqWPAKCOagQtLK24DCVo1K763+WtXzjGCwCgl5K6
FLCNUzMuSS/EQZc04k5Amxc=
=/uvp
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Thu Mar 23 11:29:08 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 24 Mar 2006 05:29:08 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
References: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
	<20060314164726.6122.2055586154.divmod.quotient.16697@ohm>
Message-ID: <20060323182908.GG10268@steerpike.home.puzzling.org>

glyph at divmod.com wrote:
[...]
> It's also worth noting that if code fails the buildbot after review (or 
> lacks adequate tests and thereby breaks critical existing functionality), 
> it's the reviewer's fault, not the author's!  Therefore, it is suggested 
> that you make heavy use of buildbot's "build this branch" feature before 
> OKing a merge.

Or, more likely, is a pre-existing intermittent failure. :P

-Andrew.




From radeex at gmail.com  Thu Mar 23 11:37:05 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 23 Mar 2006 13:37:05 -0500
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
Message-ID: <60ed19d40603231037n64b6cb69t37eb1dd458b18b65@mail.gmail.com>

On 3/23/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
>
> Right now, there are no exceptions to the rule of "make sure there's a
> ticket before you check any code in to trunk".
>
> However, several people raised some concerns on IRC over the additional
> friction this adds for minor fixes (the change in question being spiv's doc
> correction of "the the").
>
> It's worth noting that if branching is difficult for you, it is also
> perfectly acceptable to attach a patch to a ticket.  The important thing is
> that a ticket exist first, so that merging and reviewing can be done
> independently of committing, not that a branch actually be created in SVN.
>
> For now, because defining "trivial" is so hard (what if your docstring fix
> has a typo which actually changes some code which breaks some tests?), and
> it is always too tempting to classify "just this one" branch as "trivial"
> because the author wants to merge it really fast and it's not _too_ long,
> the proposed solution is to have a shared "minor fixes" ticket and branch,
> which should be reviewed once a week or so, and merged en-masse.
>
> To be clear: there are still *no exceptions* to this rule.  However,
> please feel free to file a general-purpose ticket for minor fixes and work
> with as many other developers checking into the branch for that ticket.



Even if we don't allow  trivial changes to be committed straight to trunk, I
don't really feel good about having a long-lived branch for trivial commits.
The ticket would basically be meaningless, I think. Personally, I think what
I'll do is let minor changes sit around in my working copy until I decide I
want to commit them, at which point I'll make a ticket and branch for it, or
just a ticket + patch. (Oh oh, Combinator should grow a feature to create a
new ticket and send the current diff as an attachment. :)

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060323/d55c9b21/attachment.html>

From exarkun at divmod.com  Thu Mar 23 11:39:07 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 23 Mar 2006 13:39:07 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060323182908.GG10268@steerpike.home.puzzling.org>
Message-ID: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>

On Fri, 24 Mar 2006 05:29:08 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>glyph at divmod.com wrote:
>[...]
>> It's also worth noting that if code fails the buildbot after review (or
>> lacks adequate tests and thereby breaks critical existing functionality),
>> it's the reviewer's fault, not the author's!  Therefore, it is suggested
>> that you make heavy use of buildbot's "build this branch" feature before
>> OKing a merge.
>
>Or, more likely, is a pre-existing intermittent failure. :P
>

Everyone who commits to Twisted should be familiar with the intermittent test failures present in the suite.  For anyone who isn't, I recommend you spend some time looking at the buildbot waterfall before making any further commits.

Jean-Paul



From exarkun at divmod.com  Thu Mar 23 11:40:46 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 23 Mar 2006 13:40:46 -0500
Subject: [Twisted-Python] Getting splitted data with
	SSHChannel.dataReceived
In-Reply-To: <4422E3C3.1070004@liqia.com>
Message-ID: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>

On Thu, 23 Mar 2006 20:06:59 +0200, Mustafa Sakalsiz <mustafa at liqia.com> wrote:
>Hi,
>
>I am using twisted conch to execute a remote program (say ProgA) through 
>ssh. In ProgA, I print some datas and catch them in the dataReceived method 
>of SSHChannel.
>
>Sometimes, the data comes partially, like this
>
>ProgA                                    dataReceived
>------------                              --------------------------------
>prints TWISTED                    gets TWISTED  and appends it to TOTAL
>.
>.
>.
>prints TWISTED                    if len(TOTAL) is 1020 gets TWIS (gets at 
>most 1024)
>                                               => then gets TED (next time)
>
>I think there's a buffer of something else, so dataReceived couldn't get the 
>datas as they are printed.  They  are splitted if TOTAL reaches  1024. I am 
>looking for a solution to prevent getting splitted data.

If you want to treat your data as line-oriented, you should be using LineReceiver and overriding the lineReceived method.  The dataReceived method is always subject to this kind of fragmentation.

Jean-Paul



From mary-twisted at puzzling.org  Thu Mar 23 14:02:30 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Fri, 24 Mar 2006 08:02:30 +1100
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
Message-ID: <20060323210230.GC8409@sourdust.home.puzzling.org>

On Thu, Mar 23, 2006, glyph at divmod.com wrote:
> For now, because defining "trivial" is so hard (what if your docstring fix 
> has a typo which actually changes some code which breaks some tests?), and 
> it is always too tempting to classify "just this one" branch as "trivial" 
> because the author wants to merge it really fast and it's not _too_ long, 
> the proposed solution is to have a shared "minor fixes" ticket and branch, 
> which should be reviewed once a week or so, and merged en-masse.

I don't know that I agree in general that we should allow trivial[1]
merges without branching or review, but I don't agree with this proposal
either, it seems *even more* bolted on to the "file bug, branch, fix,
review, merge" model as the "decide it's trivial, fix in place". If
nothing else, I've done code review too, and there's quite a lot of
headaches involved in reviewing 37 unrelated trivial changes in one go,
because they're unrelated and it involves 37 context switches.

Why don't we try the stricter model (no commits to trunk that aren't
merges, each merge to trunk has its own branch and its own bug) for a
few weeks and then we can see:
 1. how angry this has made everyone
 2. how many changes are backed up in review

(This will require some people to keep notes on things like "noticed
typo in docstrings, did not fix because did not have 30 minutes"
though.)

If the answers to 1 and 2 are "very" and "lots"... well, I still don't
think the "minor fixes" ticket and branch idea will be a great solution,
but we'd have some data to evaluate it on.

-Mary

[1] Incidently, describing something as 'hard to define' is not an
argument against anything. Now that I'm a computational semanticist
again, I can tell people (although not on list) in excruciating, gut
wrenching detail, just how hard any damn thing is to define, especially
when you want bright line definitions as we do here. If you want to try
this argument, you need to propose some 'reasonable' definitions first
and then explain why they are, in fact, so much suck. Andrew's attempt
is reasonable, although I would have thought "non-semantic small changes
to documentation" was better than "small changes to documentation."
Now... define 'non-semantic' and we're done! ;)



From jml at mumak.net  Thu Mar 23 14:32:35 2006
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 24 Mar 2006 08:32:35 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>
References: <20060323182908.GG10268@steerpike.home.puzzling.org>
	<20060323183907.22481.606834942.divmod.quotient.4113@ohm>
Message-ID: <d06a5cd30603231332s7a38e0bes1ae21e40e04f2fbf@mail.gmail.com>

On 3/24/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 24 Mar 2006 05:29:08 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> >glyph at divmod.com wrote:
> >[...]
> >> It's also worth noting that if code fails the buildbot after review (or
> >> lacks adequate tests and thereby breaks critical existing functionality),
> >> it's the reviewer's fault, not the author's!  Therefore, it is suggested
> >> that you make heavy use of buildbot's "build this branch" feature before
> >> OKing a merge.
> >
> >Or, more likely, is a pre-existing intermittent failure. :P
> >
>
> Everyone who commits to Twisted should be familiar with the intermittent test failures present in the suite.  For anyone who isn't, I recommend you spend some time looking at the buildbot waterfall before making any further commits.

That's too much work. Sorry.



From grimmtooth at gmail.com  Thu Mar 23 23:03:16 2006
From: grimmtooth at gmail.com (Jeff Grimmett)
Date: Fri, 24 Mar 2006 01:03:16 -0500
Subject: [Twisted-Python] on avoiding our policy: casual fixes branch
In-Reply-To: <60ed19d40603231037n64b6cb69t37eb1dd458b18b65@mail.gmail.com>
References: <20060323170546.22481.954060276.divmod.quotient.4069@ohm>
	<60ed19d40603231037n64b6cb69t37eb1dd458b18b65@mail.gmail.com>
Message-ID: <8f4623fb0603232203w558ac1desf2b0dde64da64919@mail.gmail.com>

On 3/23/06, Christopher Armstrong <radeex at gmail.com> wrote:
>
>
> Even if we don't allow  trivial changes to be committed straight to trunk,
> I don't really feel good about having a long-lived branch for trivial
> commits. The ticket would basically be meaningless, I think. Personally, I
> think what I'll do is let minor changes sit around in my working copy until
> I decide I want to commit them, at which point I'll make a ticket and branch
> for it, or just a ticket + patch. (Oh oh, Combinator should grow a feature
> to create a new ticket and send the current diff as an attachment. :)
>

Pitching in my 2c worth here; my company has a similar thing going on (large
projects, multiple contributors, often trivial changes and strict rules
against *any* change going directly to the trunk), and the solution that
we've gravitated to has been, more or less, one or more branches collecting
'trivial' changes along with the really big ones (enhancements, non-trivial
corrections, etc).

Pretty much the same problems, irritations, gripes, etc. But to date - and
this particular division has been around since '94 or so - no better
solution has been found. Loosening the reigns was an unmitigated disaster,
prompting a return to the stricter model you're discussing.

Better minds than mine have been trying to find a happy medium on this
matter and so far have not found anything better. Right now the only real
problem we have with it is that some of our darling engineers will sneak
'trivial' stuff into a critical corrective branch without disclosing the
fact, then causing the acceptance to be delayed while QA beats him over the
head after they pull a suprise code review on his ass.

I really don't think there's a solution here that will make everyone 100%
happy. Right now we're going through the "bitching and griping" phase that
always follows change, so it's too early to tell if everyone's going to
settle down, or if they whip out a new, improved V3.0 development process in
a few weeks. Even money right now :-)

--
"Ladies and gentlemen, there's nothing to worry about ... but please keep
your heads down." - The Muppet Show

Best,

    Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060324/b39db925/attachment.html>

From mustafa at liqia.com  Fri Mar 24 00:59:10 2006
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Fri, 24 Mar 2006 09:59:10 +0200
Subject: [Twisted-Python] Getting splitted data
	with	SSHChannel.dataReceived
In-Reply-To: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>
References: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>
Message-ID: <4423A6CE.7060308@liqia.com>

Yes, I am using line oriented datas. But, I am subclassing the  
twisted.consh.ssh.channel.SSHChannel, so how can I use a subclass of 
basic.LineReceiver to open a channel in SSHConnection.

Jean-Paul Calderone wrote:
> On Thu, 23 Mar 2006 20:06:59 +0200, Mustafa Sakalsiz 
> <mustafa at liqia.com> wrote:
>> Hi,
>>
>> I am using twisted conch to execute a remote program (say ProgA) 
>> through ssh. In ProgA, I print some datas and catch them in the 
>> dataReceived method of SSHChannel.
>>
>> Sometimes, the data comes partially, like this
>>
>> ProgA                                    dataReceived
>> ------------                              
>> --------------------------------
>> prints TWISTED                    gets TWISTED  and appends it to TOTAL
>> .
>> .
>> .
>> prints TWISTED                    if len(TOTAL) is 1020 gets TWIS 
>> (gets at most 1024)
>>                                               => then gets TED (next 
>> time)
>>
>> I think there's a buffer of something else, so dataReceived couldn't 
>> get the datas as they are printed.  They  are splitted if TOTAL 
>> reaches  1024. I am looking for a solution to prevent getting 
>> splitted data.
>
> If you want to treat your data as line-oriented, you should be using 
> LineReceiver and overriding the lineReceived method.  The dataReceived 
> method is always subject to this kind of fragmentation.
>
> Jean-Paul
>
>




From warner at lothar.com  Fri Mar 24 01:31:04 2006
From: warner at lothar.com (Brian Warner)
Date: Fri, 24 Mar 2006 00:31:04 -0800 (PST)
Subject: [Twisted-Python] new pb, cPB and general PBness?
Message-ID: <20060324.003104.10924864.warner@lothar.com>

[Sorry to take so long to respond to this]

Gabe Rudy <rudy at goldenhelix.com> writes:

> So I'm happily using pb and am generally content with the performace, but 
> noticed the documentation mentioning that a C version of the jelly functions 
> might be forthcoming kind of like the cPickle library. 
>
> What is the status of "c" pb? I also saw talk of a "new" pb implementation 
> (pb2?) and am wondering if the C version is being put on hold until the new 
> pb protocol stabilizes. The new pb talk has got me curious as well. What's 
> "new" or different about it?

"c" PB, by which you're probably referrering to cBanana, is still around, I
think. It replaces a small portion of the serialization process with a C
extension. I have no idea how much this might help. The architecture of
existing twisted.spread PB is not ideally suited towards replacing large
parts of it with C extensions, so there is probably a limit as to how much it
could be sped up this way.

"newpb", which is the next-generation PB that lives in twisted.pb (in SVN),
does not yet have any C extensions to speed it up, but I've tried to design
it in such a way that it will be easier to write them, and to make it
possible to replace more of the protocol implementation with C extensions
than in oldpb. This will need to interact with the creactor/cppreactor code
that Itamar has in his sandbox. But my hope is that newpb will be relatively
straightforward to make really fast.


I've just now created a trac/wiki page for newpb, with a brief list of
features and some pointers to docs.. please take a look!

 http://twistedmatrix.com/trac/wiki/NewPB

cheers,
 -Brian



From warner at lothar.com  Fri Mar 24 01:36:10 2006
From: warner at lothar.com (Brian Warner)
Date: Fri, 24 Mar 2006 00:36:10 -0800 (PST)
Subject: [Twisted-Python] **kwargs with PB
Message-ID: <20060324.003610.38698583.warner@lothar.com>

"Don Smith" <donwsmith at gmail.com> writes:

>    I'm experimenting with PB because I want to pass keyword arguments to
>    my remote methods, and I cannot do that with XML-RPC. But, I can't
>    seem to do it with PB either. I was wondering if anyone could confirm
>    or deny that **kwargs work with PB remote objects.

Hmm, I was about to say that no, they don't work, but in looking at the code
it appears that yes, they ought to work just fine. I haven't run a test to
verify this, though. What kind of error message are you seeing?

cheers,
 -Brian


PS: fyi, newpb is all-kwargs, all the time. I think I put in code to handle
positional args too, but only if you declare the method signature that will
be used on the far end. If not, then you are restricted to using only keyword
args, and positional args will cause an exception.



From glyph at divmod.com  Fri Mar 24 06:42:34 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Mar 2006 08:42:34 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>
Message-ID: <20060324134234.22481.1546550509.divmod.quotient.4559@ohm>



On Thu, 23 Mar 2006 13:39:07 -0500, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>On Fri, 24 Mar 2006 05:29:08 +1100, Andrew Bennetts <andrew- 
>twisted at puzzling.org> wrote:
>>glyph at divmod.com wrote:

>Everyone who commits to Twisted should be familiar with the intermittent 
>test failures present in the suite.  For anyone who isn't, I recommend you 
>spend some time looking at the buildbot waterfall before making any further 
>commits.

I think we should probably start flagging intermittently-failing tests as 'todo' or something.  Having them periodically mess up the buildbot display makes the red- or green-ness of the page misleading.



From andrew-twisted at puzzling.org  Fri Mar 24 07:43:01 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 25 Mar 2006 01:43:01 +1100
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060324134234.22481.1546550509.divmod.quotient.4559@ohm>
References: <20060323183907.22481.606834942.divmod.quotient.4113@ohm>
	<20060324134234.22481.1546550509.divmod.quotient.4559@ohm>
Message-ID: <20060324144301.GL10268@steerpike.home.puzzling.org>

glyph at divmod.com wrote:
[...]
> 
> I think we should probably start flagging intermittently-failing tests as 
> 'todo' or something.  Having them periodically mess up the buildbot display 
> makes the red- or green-ness of the page misleading.

Something like this sounds like a very good idea.

-Andrew.




From itamar at itamarst.org  Fri Mar 24 09:27:21 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 24 Mar 2006 11:27:21 -0500
Subject: [Twisted-Python] new pb, cPB and general PBness?
In-Reply-To: <20060324.003104.10924864.warner@lothar.com>
References: <20060324.003104.10924864.warner@lothar.com>
Message-ID: <1143217641.9351.0.camel@localhost.localdomain>

On Fri, 2006-03-24 at 00:31 -0800, Brian Warner wrote:

> "c" PB, by which you're probably referrering to cBanana, is still around, I
> think. It replaces a small portion of the serialization process with a C
> extension. I have no idea how much this might help. The architecture of
> existing twisted.spread PB is not ideally suited towards replacing large
> parts of it with C extensions, so there is probably a limit as to how much it
> could be sped up this way.

I'm pretty sure it did speed things up, but the C code has some
potential security issues which we never got around to fixing, so it's
disabled these days. It could be enabled by users, if they're willing to
figure out the problem.





From matusis at matusis.com  Fri Mar 24 23:36:13 2006
From: matusis at matusis.com (Alec Matusis)
Date: Fri, 24 Mar 2006 22:36:13 -0800
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <1141943495.9187.9.camel@localhost.localdomain>
Message-ID: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>

We finally upgraded 1.3 to 2.2 without changing the code. The load shown by
'top' for that twistd process may have dropped form 98-99% to 96-98%,
although this is not clear. In any case, the load reduction was marginal, if
any. 
 
Even though the main source of load is OS poll(), we did expect some
improvement from the different scheduler algorithm in 2.2: we have
setTimeout() on each new connection and resetTimeout() every 90 sec on each
connection when keep-alives from the clients arrive.


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Itamar
Shtull-Trauring
Sent: Thursday, March 09, 2006 2:32 PM
To: Twisted general discussion
Subject: RE: [Twisted-Python] Degrading under load

On Thu, 2006-03-09 at 13:49 -0800, Alec Matusis wrote:

> I should add here that in our case, the load was driven not by
> connection/disconnection events, but by the number of established
> connections. When that number was in the vicinity of 5000, system poll()
> became very slow (we run poll reactor).

An epoll-based reactor would probably help significantly in this case.
Also note that Twisted 2.x had some algorithmic speed improvements over
1.3 and should scale better (though that doesn't help with poll() being
a bottleneck).


[Twisted-Python] twisted performance
Itamar Shtull-Trauring itamar at itamarst.org 
Wed Dec 7 10:15:43 MST 2005 

Previous message: [Twisted-Python] twisted performance 
Next message: [Twisted-Python] twisted performance 
Messages sorted by: [ date ] [ thread ] [ subject ] [ author ] 

----------------------------------------------------------------------------
----

On Wed, 2005-12-07 at 02:04 -0800, Alec Matusis wrote:
> I am running Twisted 1.3 server with a fairly large number of clients.
> The hardware is two 64 bit 3.0 GHz Xeons with HT, 4GB RAM, and it's on
> 2.6.11 kernel.
> I am using poll reactor.
> Currently, when the number of clients approaches 5000, the "top" shows
> 99% CPU load for twistd process, the event loop slows down and weird
> racing conditions show up. 

Could you try this experiment with Twisted 2.1, ideally with the latest
version of Python? There were a number of algorithmic improvements since
1.3 (the one that comes to mind in this case is the scheduler.)

One way to discover if the OS-level poll() is the problem is to use
oprofile; you should be able to use it to see how much time is spent in
there. Before that however, you'd want to use the Python profiler to
figure out if there's any obvious hotspots.







From exarkun at divmod.com  Sat Mar 25 12:09:03 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 25 Mar 2006 14:09:03 -0500
Subject: [Twisted-Python] Motivations of Twisted Developers & $200
	Docstring Challenge
In-Reply-To: <441F02EB.3010705@eepatents.com>
Message-ID: <20060325190903.22481.304688446.divmod.quotient.5254@ohm>

I've created a ticket (<http://twistedmatrix.com/trac/ticket/1604>), a branch (<svn://svn.twistedmatrix.com/svn/Twisted/branches/write-more-doc-strings-1604>), and a wiki page (<http://twistedmatrix.com/trac/wiki/UndocumentedTwisted>) in support of this effort.  Anyone interested in contributing, please do so in this branch, and indicate the progress you make on the wiki page.

Jean-Paul



From itamar at itamarst.org  Sat Mar 25 13:38:53 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 25 Mar 2006 15:38:53 -0500
Subject: [Twisted-Python] Degrading under load
In-Reply-To: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
Message-ID: <1143319133.8945.0.camel@localhost.localdomain>

On Fri, 2006-03-24 at 22:36 -0800, Alec Matusis wrote:
> We finally upgraded 1.3 to 2.2 without changing the code. The load shown by
> 'top' for that twistd process may have dropped form 98-99% to 96-98%,
> although this is not clear. In any case, the load reduction was marginal, if
> any. 
>  
> Even though the main source of load is OS poll(), we did expect some
> improvement from the different scheduler algorithm in 2.2: we have
> setTimeout() on each new connection and resetTimeout() every 90 sec on each
> connection when keep-alives from the clients arrive.

Looks like you want epoll().




From slevin at signpuddle.net  Sat Mar 25 14:28:43 2006
From: slevin at signpuddle.net (Steve Slevinski)
Date: Sat, 25 Mar 2006 16:28:43 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <1143319133.8945.0.camel@localhost.localdomain>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
Message-ID: <4425B60B.90302@signpuddle.net>

Would it be possible to install a Twisted application using GTK on a USB 
stick for Windows platforms?



From radeex at gmail.com  Sat Mar 25 15:22:24 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 25 Mar 2006 17:22:24 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425B60B.90302@signpuddle.net>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
	<4425B60B.90302@signpuddle.net>
Message-ID: <60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>

If you can write the program, you can probably store it on a USB stick.
(what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)

On 3/25/06, Steve Slevinski <slevin at signpuddle.net> wrote:
>
> Would it be possible to install a Twisted application using GTK on a USB
> stick for Windows platforms?




--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060325/9b497fd1/attachment.html>

From slevin at signpuddle.net  Sat Mar 25 16:47:11 2006
From: slevin at signpuddle.net (Steve Slevinski)
Date: Sat, 25 Mar 2006 18:47:11 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>	<1143319133.8945.0.camel@localhost.localdomain>	<4425B60B.90302@signpuddle.net>
	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
Message-ID: <4425D67F.3050701@signpuddle.net>

What every size would be needed.  If I could install python, GTK, 
Twisted all on a USB stick, it would be easy to give my end users a 
working install without requiring and configuration on their part.

Christopher Armstrong wrote:
> If you can write the program, you can probably store it on a USB 
> stick. (what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)
>
> On 3/25/06, *Steve Slevinski * <slevin at signpuddle.net 
> <mailto:slevin at signpuddle.net>> wrote:
>
>     Would it be possible to install a Twisted application using GTK on
>     a USB
>     stick for Windows platforms?
>
>
>  
>
> -- 
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   
> ------------------------------------------------------------------------
>
> No virus found in this incoming message.
> Checked by AVG Free Edition.
> Version: 7.1.385 / Virus Database: 268.3.1/292 - Release Date: 3/24/2006
>   



From sebastian.hanlon at uleth.ca  Sat Mar 25 18:59:56 2006
From: sebastian.hanlon at uleth.ca (Sebastian Hanlon)
Date: Sat, 25 Mar 2006 18:59:56 -0700
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425D67F.3050701@signpuddle.net>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>	<1143319133.8945.0.camel@localhost.localdomain>	<4425B60B.90302@signpuddle.net>	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net>
Message-ID: <4425F59C.8060500@uleth.ca>

Steve Slevinski wrote:
> Christopher Armstrong wrote:
>> If you can write the program, you can probably store it on a USB
>> stick. (what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)
>
> What every size would be needed.  If I could install python, GTK,
> Twisted all on a USB stick, it would be easy to give my end users a
> working install without requiring and configuration on their part.

>From the sounds of it, you probably want something like py2app
(http://undefined.org/python/py2app.html, for Mac OS X deployment)
and/or py2exe (http://www.py2exe.org/). They do a good job of bundling
up Python programs with the Python runtime and any dependancies for
distribution.

I've used py2exe with Twisted and it works great--haven't tried it with
gtk, but it works with wxPython.

That is, assuming you're deploying on Win32 or Mac OSX. Bundling Python
for Linux, I got nothin'.

-sebastian



From mcmillen at cs.cmu.edu  Sat Mar 25 19:35:38 2006
From: mcmillen at cs.cmu.edu (Colin McMillen)
Date: Sat, 25 Mar 2006 21:35:38 -0500
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425F59C.8060500@uleth.ca>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
	<4425B60B.90302@signpuddle.net>
	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net> <4425F59C.8060500@uleth.ca>
Message-ID: <20060326023538.GF2371@cs.cmu.edu>

> That is, assuming you're deploying on Win32 or Mac OSX. Bundling Python
> for Linux, I got nothin'.

cx_freeze is rumored to be useful for Linux, but I've not actually
tried it myself, so can't vouch for it directly.

- Colin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20060325/cc04decb/attachment.sig>

From exarkun at twistedmatrix.com  Sat Mar 25 23:05:02 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Mar 2006 06:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1143353102.03.1256555614@twistedmatrix.com

Bug summary
______________________
Summary for 2006-03-19 through 2006-03-26
Bugs opened: 15    Bugs closed: 27  Total open bugs: 571 (-12)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -3  |Highest:  -6          |:                    -1  
|Enhancement:  -8  |High:     -3          |Conch:               -2  
|Task:         -1  |Normal:   -2          |Core:                -1  
                   |Low:      -1          |Mail:                +0  
                                          |Release Management:  -1  
                                          |Trial:               +2  
                                          |Web:                 -3  
                                          |Web2:                -1  
                                          |Website:             -5  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1604] Write More Doc Strings (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1604

                    ===== High =====
[#1591] twisted.web2.dav.test.test_prop.PROP.test_PROPFIND fails if pyxattr is installed (opened by spiv)
    defect          web2       http://twistedmatrix.com/trac/ticket/1591

[#1594] [PATCH] Errors from Trial TestCases don't report as failures when run by pyunit (opened by spiv)
    defect          trial      http://twistedmatrix.com/trac/ticket/1594

                    ===== Normal =====
[#1592] twisted.trial.test.test_loader.FileTest.test_packageNotInPath fails (opened by spiv)
    defect          trial      http://twistedmatrix.com/trac/ticket/1592

[#1593] twisted.test.test_udp.OldConnectedUDPTestCase.testDNSFailure fails on Ubuntu Breezy (opened by spiv)
    defect          core       http://twistedmatrix.com/trac/ticket/1593

[#1595] .txt file doctest support for trial (opened by radix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1595

[#1596] Leftover use of childNotFound() in t.w2.twcgi.CGIDirectory (opened by grimmtooth)
    defect          web2       http://twistedmatrix.com/trac/ticket/1596

[#1598] Review API stability markers (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1598

[#1599] t.p.c.Interface shouldn't warn when a user inherits from another interface (opened by jknight)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1599

[#1602] smtp.SMTP would be faster using LineOnlyReceiver (opened by nickm) (CLOSED, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/1602

[#1603] Typo in client howto (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1603

[#1605] twisted.python.components.{getAdapterClass,getAdapterClassWithInheritance} mispell "deprecated" in docstring (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1605

                    ===== Low =====
[#1597] Add query links to subprojects to quickly access tickets for that projet (opened by therve) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1597

[#1600] auto-reference ticket from branch with ticket number in name (opened by jknight)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1600

[#1601] t.py.text.greedyWrap makes t.py.usage.Options.longdesc ugly (opened by dreid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1601



Closed Bugs
______________________
                    ===== Highest =====
[#1530] Document API documentation update process (opened by exarkun, closed by radix, fixed)
    task            website    http://twistedmatrix.com/trac/ticket/1530

[#1331] "Sumo" is confusing and unnecessary (opened by exarkun, closed by radix, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1331

[#1561] Qt reactor fails two TCP tests (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1561

[#1497] quick command-line way to run web2 server (opened by glyph, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1497

[#737 ] Minor code cleanups (opened by HelmutG, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/737

[#1562] Permission denied errors on Win32 (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1562

[#1578] setsockopt fails on joinAddr (opened by ghazel, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1578

                    ===== High =====
[#551 ] [PATCH] Distrib throws exception when accessing /users/username/ where username exists but has no public_html (opened by Jerub, closed by radix, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/551

[#969 ] No .spec file in tarball as indicated by INSTALL file (opened by bjorn, closed by radix, fixed)
    defect          release management http://twistedmatrix.com/trac/ticket/969

[#340 ] [PATCH]intermittent freebsd UDP failure (opened by warner, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/340

[#872 ] [PATCH] Unhandled exception for incomplete XMLRPC (opened by Shawn, closed by exarkun, fixed)
    defect                     http://twistedmatrix.com/trac/ticket/872

[#993 ] [PATCH] Excessive deprecation warnings from MetaInterface.__getattr__ (opened by jknight, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/993

                    ===== Normal =====
[#1555] website no longer features Twisted logo (opened by glyph, closed by radix, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1555

[#1558] docextractor should parse C{name} etc in function summary listings (opened by spiv, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1558

[#1582] move web2.dav.method.* to web2.dav.method.davfile.* (opened by wsanchez, closed by wsanchez, wontfix)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1582

[#1556] API docs should have HTML title (opened by Tv, closed by mwh, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1556

[#1557] apidocs should exclude "test" packages (opened by jknight, closed by mwh, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1557

[#978 ] Document wxPython mess appropriately (opened by itamarst, closed by itamarst, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/978

[#477 ] More flexible profiling support (opened by exarkun, closed by exarkun, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/477

[#1474] [PATCH] Support for Basic Authentication in t.w.xmlrpc (opened by oubiwann, closed by exarkun, fixed)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1474

[#688 ] [PATCH] robots.txt parser sub-class for use with Twisted (opened by mcfletch, closed by exarkun, wontfix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/688

[#1325] [patch] Performance of Conch/SSH (opened by cooz, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1325

[#1602] smtp.SMTP would be faster using LineOnlyReceiver (opened by nickm, closed by exarkun, fixed)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/1602

                    ===== Low =====
[#1548] get rid of epilepsy inducing entry page (opened by itamarst, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1548

[#1471] replace StopTraversal with () or [] (opened by andrea, closed by dreid, wontfix)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1471

[#1500] iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE (opened by ghazel, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1500

[#1597] Add query links to subprojects to quickly access tickets for that projet (opened by therve, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1597





From moof at metamoof.net  Sat Mar 25 23:39:07 2006
From: moof at metamoof.net (Moof)
Date: Sun, 26 Mar 2006 07:39:07 +0100
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425F59C.8060500@uleth.ca>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>
	<1143319133.8945.0.camel@localhost.localdomain>
	<4425B60B.90302@signpuddle.net>
	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net> <4425F59C.8060500@uleth.ca>
Message-ID: <bff8eeef0603252239s104f8b04tcf79a404b9184957@mail.gmail.com>

On 3/26/06, Sebastian Hanlon <sebastian.hanlon at uleth.ca> wrote:
> Steve Slevinski wrote:
> >From the sounds of it, you probably want something like py2app
> (http://undefined.org/python/py2app.html, for Mac OS X deployment)
> and/or py2exe (http://www.py2exe.org/). They do a good job of bundling
> up Python programs with the Python runtime and any dependancies for
> distribution.

You might also want to take a peek at movable python:

<http://www.voidspace.org.uk/python/movpy/index.html>

It is more wxpython-based than gtk-based, but there's nothing to stop
you installing pyGTK onto it.

Moof



From tv at twistedmatrix.com  Sun Mar 26 02:58:58 2006
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 26 Mar 2006 12:58:58 +0300
Subject: [Twisted-Python] Getting splitted
	data	with	SSHChannel.dataReceived
In-Reply-To: <4423A6CE.7060308@liqia.com>
References: <20060323184046.22481.1375921729.divmod.quotient.4115@ohm>
	<4423A6CE.7060308@liqia.com>
Message-ID: <442665E2.7020907@twistedmatrix.com>

Mustafa Sakalsiz wrote:
> Yes, I am using line oriented datas. But, I am subclassing the 
> twisted.consh.ssh.channel.SSHChannel, so how can I use a subclass of
> basic.LineReceiver to open a channel in SSHConnection.

When inheritance fails, use ownership.

class MyLineReceiver(basic.LineReceiver):
   def lineReceived(self, line):
       ...

class MySSHChannel(channel.SSHChannel):
   def __init__(self, ...):
      ...
      self.protocol = MyLineReceiver()

   def dataReceived(self, data):
      self.protocol.dataReceived(data)



From corydodt at twistedmatrix.com  Sun Mar 26 03:18:40 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Sun, 26 Mar 2006 02:18:40 -0800
Subject: [Twisted-Python] Twisted on a USB stick?
In-Reply-To: <4425D67F.3050701@signpuddle.net>
References: <E1FN2OJ-0007dd-00@pyramid.twistedmatrix.com>	<1143319133.8945.0.camel@localhost.localdomain>	<4425B60B.90302@signpuddle.net>	<60ed19d40603251422p7499ecc9q6deee6d5a544ecc8@mail.gmail.com>
	<4425D67F.3050701@signpuddle.net>
Message-ID: <44266A80.7070004@twistedmatrix.com>

Not only is this possible, it's fairly easy to do with py2exe, and I've
done it on a couple of different apps.  I'm working on an app right now
with almost exactly these requirements.  (Originally, it was even going
to be stored on a usb stick, but now it just has to be lightly
downloadable, and it is.)

It uses Axiom, which means it pulls in substantial portions of Divmod's
software, Twisted, zope.interface, and god knows what else.  Like your
app, it uses GTK, which means it pulls in pygtk and the whole GTK runtime.

All this comes to 18M, including my app.  The compressed installer
version is 8MB.

Most of the solution is here:
<http://starship.python.net/crew/theller/moin.cgi/Py2exeAndPyGTK>.  You
don't have to do anything special for Twisted and zope.interface, nor
for Divmod stuff if that interests you; py2exe these days seems to
handle all that seamlessly.


C


Steve Slevinski wrote:
> What every size would be needed.  If I could install python, GTK,
> Twisted all on a USB stick, it would be easy to give my end users a
> working install without requiring and configuration on their part.
> 
> Christopher Armstrong wrote:
>> If you can write the program, you can probably store it on a USB
>> stick. (what size are we talking? 16MB? 32MB? 64MB? 512MB? 1GB? 2GB?)
>>
>> On 3/25/06, *Steve Slevinski * <slevin at signpuddle.net
>> <mailto:slevin at signpuddle.net>> wrote:
>>
>>     Would it be possible to install a Twisted application using GTK on
>>     a USB
>>     stick for Windows platforms?
>>
>>
>>  
>>
>> -- 
>> Christopher Armstrong
>> International Man of Twistery
>> http://radix.twistedmatrix.com/
>> http://twistedmatrix.com/
>> http://canonical.com/
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>  
>> ------------------------------------------------------------------------
>>
>> No virus found in this incoming message.
>> Checked by AVG Free Edition.
>> Version: 7.1.385 / Virus Database: 268.3.1/292 - Release Date: 3/24/2006
>>   
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at tekNico.net  Mon Mar 27 03:19:01 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 27 Mar 2006 12:19:01 +0200
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
 [was: Re: Branch based development]
In-Reply-To: <20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
Message-ID: <e08e6l$him$1@sea.gmane.org>

Jean-Paul Calderone:
>>> Unless anyone can present a compelling case to the contrary, I think
>>> that as of now we should "officially" switch to the development
>>> procedures described by
>>> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

Itamar Shtull-Trauring:
>> We should probably use Combinator, so people have an easy time with
>> this.

glyph at divmod.com wrote:
> True enough.

I like Combinator, and would like to use it to hack on Twisted, in addition
to hacking with it. mkbranch seems to need write privileges to the SVN
repo, though. Is there a way around this, or do I just create a fake local
branch by copying the trunk in my local copy?

Actually, it would be better to have the branch up there in the repo, so
that the ongoing work is visible. Is there a way to get write access to the
branches and sandbox trees of the Twisted repo, without having it in the
tags and trunk trees?

-- 
Nicola Larosa - http://www.tekNico.net/

We are not seats or eyeballs or end users or consumers. We are human beings
- and our reach exceeds your grasp: deal with it. -- Chris Locke, Cluetrain




From radeex at gmail.com  Mon Mar 27 06:48:23 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 27 Mar 2006 08:48:23 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <e08e6l$him$1@sea.gmane.org>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
Message-ID: <60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>

On 3/27/06, Nicola Larosa <nico at teknico.net> wrote:
>
> I like Combinator, and would like to use it to hack on Twisted, in
> addition
> to hacking with it. mkbranch seems to need write privileges to the SVN
> repo, though. Is there a way around this, or do I just create a fake local
> branch by copying the trunk in my local copy?



This is a limitation of SVN, not Combinator. There's no way to write
branches to the server without having write access to the server.

Actually, it would be better to have the branch up there in the repo, so
> that the ongoing work is visible. Is there a way to get write access to
> the
> branches and sandbox trees of the Twisted repo, without having it in the
> tags and trunk trees?



We don't have an actual policy yet on what it takes to get write access
restricted to sandbox, and branches. We have given access to people on the
agreement that they only keep their stuff in /branches or /sandbox for a
while and someone has to review before merging, but this is exactly the
process we've switched to for everyone now, anyway. It'd still be nice to
get some access restrictions in place, though.

But really, the suggested workflow for offline Twisted hacking is this: Hack
on your checkout of trunk, do a "svn diff > my_patch", file a bug on the
tracker, and attach the patch. Do this successfully a few times, and real
commit access is imminent.


--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060327/e2e5f407/attachment.html>

From glyph at divmod.com  Mon Mar 27 08:02:27 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 10:02:27 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
Message-ID: <20060327150227.22481.116420393.divmod.quotient.6178@ohm>



On Mon, 27 Mar 2006 08:48:23 -0500, Christopher Armstrong <radeex at gmail.com> wrote:
>On 3/27/06, Nicola Larosa <nico at teknico.net> wrote:

>Actually, it would be better to have the branch up there in the repo, so
>> that the ongoing work is visible. Is there a way to get write access to
>> the
>> branches and sandbox trees of the Twisted repo, without having it in the
>> tags and trunk trees?

>But really, the suggested workflow for offline Twisted hacking is this: Hack
>on your checkout of trunk, do a "svn diff > my_patch", file a bug on the
>tracker, and attach the patch. Do this successfully a few times, and real
>commit access is imminent.

It's worth noting that since we have a real review process now, and everything has to go through it (instead of just submitted patches) it's more likely that bugs filed in this manner will be addressed promptly.

Make sure to attach the 'review' keyword when you submit a patch this way.



From glyph at divmod.com  Mon Mar 27 08:11:32 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 10:11:32 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <e08e6l$him$1@sea.gmane.org>
Message-ID: <20060327151132.22481.1685356056.divmod.quotient.6180@ohm>



On Mon, 27 Mar 2006 12:19:01 +0200, Nicola Larosa <nico at teknico.net> wrote:
>Jean-Paul Calderone:
>>>> Unless anyone can present a compelling case to the contrary, I think
>>>> that as of now we should "officially" switch to the development
>>>> procedures described by
>>>> <http://divmod.org/trac/wiki/BranchBasedDevelopment>.
>
>Itamar Shtull-Trauring:
>>> We should probably use Combinator, so people have an easy time with
>>> this.
>
>glyph at divmod.com wrote:
>> True enough.
>
>I like Combinator, and would like to use it to hack on Twisted, in addition
>to hacking with it. mkbranch seems to need write privileges to the SVN
>repo, though. Is there a way around this, or do I just create a fake local
>branch by copying the trunk in my local copy?

You can create a fake local branch, except it will only work for 'chbranch', not 'unbranch', because SVN's merge functionality needs to talk to the server.



From foom at fuhm.net  Mon Mar 27 09:15:27 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Mar 2006 11:15:27 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <E1FNu45-0003WC-00@wolfwood>
References: <E1FNu45-0003WC-00@wolfwood>
Message-ID: <1BAD5939-2A6D-439C-A746-298525C1E8B2@fuhm.net>

> -    zsh_extras = [":file to read from:action", ":file to write  
> to:action"]
> +    zsh_extras = [\":file to read from:action\", \":file to write  
> to:action\"]

Why were changes like that made? Isn't it a no-op, since they were in  
triple-quoted strings anyhow? It would be nice if the docs were  
actually usable/readable by people viewing the source as well as  
people viewing the generated docs, where possible.

James



From itamar at itamarst.org  Mon Mar 27 09:31:16 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 27 Mar 2006 11:31:16 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <1BAD5939-2A6D-439C-A746-298525C1E8B2@fuhm.net>
References: <E1FNu45-0003WC-00@wolfwood>
	<1BAD5939-2A6D-439C-A746-298525C1E8B2@fuhm.net>
Message-ID: <1143477076.9079.4.camel@localhost.localdomain>

On Mon, 2006-03-27 at 11:15 -0500, James Y Knight wrote:

> Why were changes like that made? Isn't it a no-op, since they were in  
> triple-quoted strings anyhow? It would be nice if the docs were  
> actually usable/readable by people viewing the source as well as  
> people viewing the generated docs, where possible.

Probably to work around python-mode emacs brokenness?




From exarkun at divmod.com  Mon Mar 27 09:40:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Mar 2006 11:40:54 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <1143477076.9079.4.camel@localhost.localdomain>
Message-ID: <20060327164054.22481.1663179417.divmod.quotient.6200@ohm>

On Mon, 27 Mar 2006 11:31:16 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Mon, 2006-03-27 at 11:15 -0500, James Y Knight wrote:
>
>> Why were changes like that made? Isn't it a no-op, since they were in
>> triple-quoted strings anyhow? It would be nice if the docs were
>> actually usable/readable by people viewing the source as well as
>> people viewing the generated docs, where possible.
>
>Probably to work around python-mode emacs brokenness?
>

Yes.  See <http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/policy/coding-standard.xhtml?rev=16485#L174> :)

Jean-Paul



From mcmillen at cs.cmu.edu  Mon Mar 27 09:52:01 2006
From: mcmillen at cs.cmu.edu (Colin McMillen)
Date: Mon, 27 Mar 2006 11:52:01 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <20060327164054.22481.1663179417.divmod.quotient.6200@ohm>
References: <1143477076.9079.4.camel@localhost.localdomain>
	<20060327164054.22481.1663179417.divmod.quotient.6200@ohm>
Message-ID: <20060327165201.GJ2371@cs.cmu.edu>

On Mon, Mar 27, 2006 at 11:40:54AM -0500, Jean-Paul Calderone wrote:
> On Mon, 27 Mar 2006 11:31:16 -0500, Itamar Shtull-Trauring 
> <itamar at itamarst.org> wrote:
> >On Mon, 2006-03-27 at 11:15 -0500, James Y Knight wrote:
> >
> >>Why were changes like that made? Isn't it a no-op, since they were in
> >>triple-quoted strings anyhow? It would be nice if the docs were
> >>actually usable/readable by people viewing the source as well as
> >>people viewing the generated docs, where possible.
> >
> >Probably to work around python-mode emacs brokenness?
> >
> 
> Yes.  See 
> <http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/policy/coding-standard.xhtml?rev=16485#L174> :)

Has anyone tried fixing this brokenness in python-mode? I'm no emacs
hacker, but it seems like it's the sort of thing that ought to be,
say, a 10-line fix in some chunk of parsing code somewhere. I could be
massively wrong though :) If I've got a spare weekend, maybe I'll look
at it sometime.

- Colin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20060327/a129f26c/attachment.sig>

From itamar at itamarst.org  Mon Mar 27 10:08:37 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 27 Mar 2006 12:08:37 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <20060327165201.GJ2371@cs.cmu.edu>
References: <1143477076.9079.4.camel@localhost.localdomain>
	<20060327164054.22481.1663179417.divmod.quotient.6200@ohm>
	<20060327165201.GJ2371@cs.cmu.edu>
Message-ID: <1143479317.9079.8.camel@localhost.localdomain>

On Mon, 2006-03-27 at 11:52 -0500, Colin McMillen wrote:

> Has anyone tried fixing this brokenness in python-mode? I'm no emacs
> hacker, but it seems like it's the sort of thing that ought to be,
> say, a 10-line fix in some chunk of parsing code somewhere. I could be
> massively wrong though :) If I've got a spare weekend, maybe I'll look
> at it sometime.

It's fixed as of GNU Emacs 22, which has a rewritten emacs-mode. Probably still broken in xemacs.





From glyph at divmod.com  Mon Mar 27 10:12:32 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 12:12:32 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16486 - Merge
	epytext-cleanups-1545
In-Reply-To: <20060327165201.GJ2371@cs.cmu.edu>
Message-ID: <20060327171232.22481.1113548991.divmod.quotient.6208@ohm>



On Mon, 27 Mar 2006 11:52:01 -0500, Colin McMillen <mcmillen at cs.cmu.edu> wrote:

>Has anyone tried fixing this brokenness in python-mode? I'm no emacs
>hacker, but it seems like it's the sort of thing that ought to be,
>say, a 10-line fix in some chunk of parsing code somewhere. I could be
>massively wrong though :) If I've got a spare weekend, maybe I'll look
>at it sometime.

There was an urban myth for quite some time that it was not possible to fix this problem given the way that Emacs does syntax highlighting.

However, the new "python.el" that comes with CVS emacs (as opposed to the "python-mode.el" which comes with XEmacs and is distributed by python.org) does not have this problem.  However, it has a few other issues, so it's a "six of one, half dozen of the other" sort of problem.  I think that the new "python.el" is better, but no effort seems to have yet been made to integrate the two efforts.



From mary-twisted at puzzling.org  Mon Mar 27 14:32:14 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 28 Mar 2006 08:32:14 +1100
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
Message-ID: <20060327213214.GH14261@sourdust.home.puzzling.org>

On Mon, Mar 27, 2006, Christopher Armstrong wrote:
> We don't have an actual policy yet on what it takes to get write access
> restricted to sandbox, and branches. We have given access to people on the
> agreement that they only keep their stuff in /branches or /sandbox for a
> while and someone has to review before merging, but this is exactly the
> process we've switched to for everyone now, anyway. It'd still be nice to
> get some access restrictions in place, though.

Is it the case that this should be the default process for everyone and
that something special needs to be done for merging? Andrew might have
already mentioned, but I know that for his project you need to tag
things in your commit message as "r=[reviewer's IRC name]" (or
[trivial]) and that the merging software actually checks this.

We could do something similar, or possibly even stricter where most
"Twisted committers" do not in fact actually have merge capability, only
reviewers do. It depends whether our reviewers are going to be pretty
much all of us who already have access, or some trusted subset.

-Mary

-- 
<skreech> I'm sorry. I forgot that in #twisted, all suggestions are taken seriously.



From radeex at gmail.com  Mon Mar 27 14:38:05 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 27 Mar 2006 16:38:05 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <20060327213214.GH14261@sourdust.home.puzzling.org>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
Message-ID: <60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>

On 3/27/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
>
> We could do something similar, or possibly even stricter where most
> "Twisted committers" do not in fact actually have merge capability, only
> reviewers do. It depends whether our reviewers are going to be pretty
> much all of us who already have access, or some trusted subset.



No, I think that's a big difference between launchpad's model and
Twisted's/Divmod's model. For example, Divmod sometimes has people who
aren't even divmod committers reviewing branches. At the very least, any
committer can review a branch.



--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060327/ff7300d3/attachment.html>

From itamar at itamarst.org  Mon Mar 27 14:56:58 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 27 Mar 2006 16:56:58 -0500
Subject: [Twisted-Python] Using Combinator without write SVN
	privileges? [was: Re: Branch based development]
In-Reply-To: <60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
Message-ID: <1143496619.9079.49.camel@localhost.localdomain>

On Mon, 2006-03-27 at 16:38 -0500, Christopher Armstrong wrote:
> On 3/27/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
>         We could do something similar, or possibly even stricter where
>         most
>         "Twisted committers" do not in fact actually have merge
>         capability, only
>         reviewers do. It depends whether our reviewers are going to be
>         pretty 
>         much all of us who already have access, or some trusted
>         subset.
> 
> 
> No, I think that's a big difference between launchpad's model and
> Twisted's/Divmod's model. For example, Divmod sometimes has people who
> aren't even divmod committers reviewing branches. At the very least,
> any committer can review a branch. 

I think you're conflating reviewers with people who do merges/commits to
trunk?





From mary-twisted at puzzling.org  Mon Mar 27 15:01:36 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 28 Mar 2006 09:01:36 +1100
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <1143496619.9079.49.camel@localhost.localdomain>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
	<1143496619.9079.49.camel@localhost.localdomain>
Message-ID: <20060327220136.GA28105@sourdust.home.puzzling.org>

On Mon, Mar 27, 2006, Itamar Shtull-Trauring wrote:
> I think you're conflating reviewers with people who do merges/commits to
> trunk?

In the Launchpad model, the reviewers are a small group of people (a
proper subset of committers, actually), and anyone can merge to trunk
(or more specifically, since they use Bazaar, instruct a bot to merge to
trunk) as long as they present a "has been reviewed" token.

But in some alternative model, we could potentially have a really large
group of (potential) reviewers and a small group of people who actually
execute merges. Is there a reason to do that though?

-Mary

-- 
<Tv> thomasvs: why not just talk some authentication protocol to the other host?
<thomasvs> Tv: why use something arcane and difficult when I have THE POWER OF TWISTED ?



From radeex at gmail.com  Mon Mar 27 15:02:31 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 27 Mar 2006 17:02:31 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <1143496619.9079.49.camel@localhost.localdomain>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
	<1143496619.9079.49.camel@localhost.localdomain>
Message-ID: <60ed19d40603271402m2e1c6536oc3537f6f8ce50f0b@mail.gmail.com>

On 3/27/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Mon, 2006-03-27 at 16:38 -0500, Christopher Armstrong wrote:
> > On 3/27/06, Mary Gardiner <mary-twisted at puzzling.org> wrote:
> >         We could do something similar, or possibly even stricter where
> >         most
> >         "Twisted committers" do not in fact actually have merge
> >         capability, only
> >         reviewers do. It depends whether our reviewers are going to be
> >         pretty
> >         much all of us who already have access, or some trusted
> >         subset.
> >
> >
> > No, I think that's a big difference between launchpad's model and
> > Twisted's/Divmod's model. For example, Divmod sometimes has people who
> > aren't even divmod committers reviewing branches. At the very least,
> > any committer can review a branch.
>
> I think you're conflating reviewers with people who do merges/commits to
> trunk?



Mary said "It depends whether our reviewers are going to be pretty much all
of us who already have access, or some trusted subset.". Reviewers in
Launchpad are a trusted subset. They're not a trusted subset in Twisted. I
guess the Launchpad Reviewers are *also* those who merge (is this true?),
but the difference remains.

--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060327/fdfbd021/attachment.html>

From mary-twisted at puzzling.org  Mon Mar 27 15:07:32 2006
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 28 Mar 2006 09:07:32 +1100
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <60ed19d40603271402m2e1c6536oc3537f6f8ce50f0b@mail.gmail.com>
References: <1142354515.9184.9.camel@localhost.localdomain>
	<20060314165347.6122.1467955561.divmod.quotient.16700@ohm>
	<e08e6l$him$1@sea.gmane.org>
	<60ed19d40603270548x21604ea3q63f0ea36c17c81a3@mail.gmail.com>
	<20060327213214.GH14261@sourdust.home.puzzling.org>
	<60ed19d40603271338x3e227e5exb1af0d3b46491b86@mail.gmail.com>
	<1143496619.9079.49.camel@localhost.localdomain>
	<60ed19d40603271402m2e1c6536oc3537f6f8ce50f0b@mail.gmail.com>
Message-ID: <20060327220732.GC28105@sourdust.home.puzzling.org>

On Mon, Mar 27, 2006, Christopher Armstrong wrote:
> I guess the Launchpad Reviewers are *also* those who merge (is this
> true?), but the difference remains.

No, all committers are also mergers, it's just that they need to say
"approved by a reviewer!" when merging. We don't want all committers to
be mergers, it seems.

-Mary

-- 
<strib> Sorry, I'm just in the middle of a paradigm warp right now.
<dash> strib: welcome to twisted



From glyph at divmod.com  Mon Mar 27 15:31:09 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 27 Mar 2006 17:31:09 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <20060327213214.GH14261@sourdust.home.puzzling.org>
Message-ID: <20060327223109.22481.144225985.divmod.quotient.6301@ohm>



On Tue, 28 Mar 2006 08:32:14 +1100, Mary Gardiner <mary-twisted at puzzling.org> wrote:

>Is it the case that this should be the default process for everyone and
>that something special needs to be done for merging? Andrew might have
>already mentioned, but I know that for his project you need to tag
>things in your commit message as "r=[reviewer's IRC name]" (or
>[trivial]) and that the merging software actually checks this.

I could swear I wrote this down somewhere, but I can't find it now.

The format of commit messages to trunk is supposed to be something like this:

    <one-line summary>

    Author: <author>

    Reviewer: <reviewer>

    Fixes #<ticket number>

    <long description of changes, at least 2 full sentences, mentioning anything user-visible>




From exarkun at divmod.com  Mon Mar 27 15:38:08 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Mar 2006 17:38:08 -0500
Subject: [Twisted-Python] Using Combinator without write SVN privileges?
	[was: Re: Branch based development]
In-Reply-To: <20060327223109.22481.144225985.divmod.quotient.6301@ohm>
Message-ID: <20060327223808.22481.1864291685.divmod.quotient.6304@ohm>

On Mon, 27 Mar 2006 17:31:09 -0500, glyph at divmod.com wrote:
>
>
>On Tue, 28 Mar 2006 08:32:14 +1100, Mary Gardiner <mary- 
>twisted at puzzling.org> wrote:
>>Is it the case that this should be the default process for everyone and
>>that something special needs to be done for merging? Andrew might have
>>already mentioned, but I know that for his project you need to tag
>>things in your commit message as "r=[reviewer's IRC name]" (or
>>[trivial]) and that the merging software actually checks this.
>
>I could swear I wrote this down somewhere, but I can't find it now.

It's partially documented under the _Generate a Meaningful Changelog_ section at <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

>
>The format of commit messages to trunk is supposed to be something like 
>this:
>
>    <one-line summary>
>
>    Author: <author>
>
>    Reviewer: <reviewer>
>
>    Fixes #<ticket number>
>
>    <long description of changes, at least 2 full sentences, mentioning 
>anything user-visible>
>

Jean-Paul



From jmp at TWIN-TOWERS.MIT.EDU  Tue Mar 28 06:52:59 2006
From: jmp at TWIN-TOWERS.MIT.EDU (Justin Mazzola Paluska)
Date: Tue, 28 Mar 2006 08:52:59 -0500
Subject: [Twisted-Python] Nested/Aggregate Exceptions
Message-ID: <20060328135258.GB7270@mit.edu>

Hello,

I'm writing a Twisted application using Twisted 2.0.1 on Mandriva 2006
that uses PerspectiveBroker for communication between modules.  Our
application is based on a centralized Twisted server and web- and
GTK-based client applications that connect to the Twisted server to
manage a user database.  

Up until recently, most of methods exported by the Twisted server are
essentially single-operation functions that operate on a single user
(e.g., "update_user(user, **data)").  As such, exception handling in
the clients is easy: if the operation throws an exception, we know
what operation died and can report a reasonable error to the user
running the client program.

In the most recent version of our server, however, we've decided to
add several aggregate functions to our server that take in multiple
users (e.g., "update_users(users, **data)" where users is a Python
list of user names).  Essentially, these new aggregate functions
repeatedly call their single-operation counterparts multiple times.
Since each call that the aggregate function makes is independent from
other calls, we store away exceptions that get raised and continue
with the other operations.  At the end of the function, if there were
errors, we raise an AggregateException that contains the list of all
exceptions raised by the aggregate function.  This way our clients
know what the specific exceptions and what arguments they failed on.

The problem is, I can't figure out how to pass an AggregateException
across PB.  I know I can probably use pb.CopyableFailure, but my
experiments usually died when I passed non-Failure-subclasses into my
aggregate.  Do the mavens on the list have any suggestions?

Thanks!
	--Justin





From teratorn at twistedmatrix.com  Tue Mar 28 16:42:16 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 29 Mar 2006 09:42:16 +1000
Subject: [Twisted-Python] Nested/Aggregate Exceptions
In-Reply-To: <20060328135258.GB7270@mit.edu>
References: <20060328135258.GB7270@mit.edu>
Message-ID: <op.s65dgqo8y3d107@localhost.localdomain>

Hi

Justin Mazzola Paluska wrote:
[...]
> The problem is, I can't figure out how to pass an AggregateException
> across PB.  I know I can probably use pb.CopyableFailure, but my
> experiments usually died when I passed non-Failure-subclasses into my
> aggregate.  Do the mavens on the list have any suggestions?

I could hazard a few guesses, but it would be better if you provided  
details about what you're trying, what you're expecting to happen, and  
what actually happens.

-Eric



From teratorn at twistedmatrix.com  Tue Mar 28 16:50:25 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 29 Mar 2006 09:50:25 +1000
Subject: [Twisted-Python] Twisted Sponsors
Message-ID: <op.s65dubf6y3d107@localhost.localdomain>

So I'm compiling a web page listing everyone who has donated money,  
hardware, software, hosting, etc to Twisted. You can see the  
work-in-progress here:

http://twistedmatrix.com/trac/wiki/TwistedSponsors

As part of maintaining win32 I would like a place to thank people for all  
the stuff I am about to ask for ;)

I'm probably leaving out a lot of people, so would whoever is in the know  
please response, and we can get a comprehensive list sorted out.

-Eric



From teratorn at twistedmatrix.com  Tue Mar 28 17:14:57 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 29 Mar 2006 10:14:57 +1000
Subject: [Twisted-Python] Call for help! Support Twisted on Microsoft
	Windows!
Message-ID: <op.s65ey7syy3d107@localhost.localdomain>

Hello everyone,

Timothy Fitz (FireMoth) and I are trying to slap some sense in to Windows
and we need your help! We would like to establish a number of Windows
machines accessible to developers over the Internet. As well as provide
additional buildslaves on different Windows platforms.

We're basically asking for donations of hardware, hosting, and software
licenses. Corporate sponsors are welcome!

Please see http://twistedmatrix.com/trac/wiki/Windows for all the details.

Each individual and organisation who helps out will be prominently
recognized on our page listing Twisted sponsors:
http://twistedmatrix.com/trac/wiki/TwistedSponsors

This will be linked off the front page at some point in the near future.

NOTE: Please reply directly to me with offers. I don't want to discourage
anyone from offering help, just because someone else has publicly offered
something similar. I would prefer to get as many things on the table as
possible, and then choose the best way forward.

Thanks very much!
-Eric Mangold



From johann.borck at densedata.com  Tue Mar 28 17:59:53 2006
From: johann.borck at densedata.com (Johann Borck)
Date: Wed, 29 Mar 2006 02:59:53 +0200
Subject: [Twisted-Python] Nested/Aggregate Exceptions
In-Reply-To: <20060328135258.GB7270@mit.edu>
References: <20060328135258.GB7270@mit.edu>
Message-ID: <4429DC09.70203@densedata.com>

Justin Mazzola Paluska wrote:

>Hello,
>
>I'm writing a Twisted application using Twisted 2.0.1 on Mandriva 2006
>that uses PerspectiveBroker for communication between modules.  Our
>application is based on a centralized Twisted server and web- and
>GTK-based client applications that connect to the Twisted server to
>manage a user database.  
>
>Up until recently, most of methods exported by the Twisted server are
>essentially single-operation functions that operate on a single user
>(e.g., "update_user(user, **data)").  As such, exception handling in
>the clients is easy: if the operation throws an exception, we know
>what operation died and can report a reasonable error to the user
>running the client program.
>
>In the most recent version of our server, however, we've decided to
>add several aggregate functions to our server that take in multiple
>users (e.g., "update_users(users, **data)" where users is a Python
>list of user names).  Essentially, these new aggregate functions
>repeatedly call their single-operation counterparts multiple times.
>Since each call that the aggregate function makes is independent from
>other calls, we store away exceptions that get raised and continue
>with the other operations.  At the end of the function, if there were
>errors, we raise an AggregateException that contains the list of all
>exceptions raised by the aggregate function.  This way our clients
>know what the specific exceptions and what arguments they failed on.
>
>The problem is, I can't figure out how to pass an AggregateException
>across PB. 
>
You only want to pass information about what went wrong and how, why do
you have to transmit the exceptions themselves?  Isn't it even more
efficient to just submit the relevant info?  As far as I know PB takes a
set of classes which are allowed to be transmitted, and anything else
including unexpected Exceptions won't be. maybe there's already some
kind of exception-handling in PB, but iirc (though vaguely a phrase in
the docs like) "you have to care about Exceptions yourself".

Johann

> I know I can probably use pb.CopyableFailure, but my
>experiments usually died when I passed non-Failure-subclasses into my
>aggregate.  Do the mavens on the list have any suggestions?
>
>Thanks!
>	--Justin
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From rudy.schockaert at gmail.com  Wed Mar 29 00:43:09 2006
From: rudy.schockaert at gmail.com (Rudy Schockaert)
Date: Wed, 29 Mar 2006 09:43:09 +0200
Subject: [Twisted-Python] Call for help! Support Twisted on Microsoft
	Windows!
In-Reply-To: <op.s65ey7syy3d107@localhost.localdomain>
References: <op.s65ey7syy3d107@localhost.localdomain>
Message-ID: <60987dac0603282343y2f4096e5mf5a6bc11da9d8577@mail.gmail.com>

Hi Eric,

I think you need to add another License on your wish-list: Terminal
Services.

<quote>
A machine to run Win2K3 Server. This will be the primary Windows development
machine for the Twisted community, primarily because it allows multiple
concurrent RDP sessions (XP Pro allows at most two).
</quote>

This is true, but only if you buy the appropriate licenses to run Terminal
Services on Windows.

/Rudy

On 3/29/06, Eric Mangold <teratorn at twistedmatrix.com> wrote:
>
> Hello everyone,
>
> Timothy Fitz (FireMoth) and I are trying to slap some sense in to Windows
> and we need your help! We would like to establish a number of Windows
> machines accessible to developers over the Internet. As well as provide
> additional buildslaves on different Windows platforms.
>
> We're basically asking for donations of hardware, hosting, and software
> licenses. Corporate sponsors are welcome!
>
> Please see http://twistedmatrix.com/trac/wiki/Windows for all the details.
>
> Each individual and organisation who helps out will be prominently
> recognized on our page listing Twisted sponsors:
> http://twistedmatrix.com/trac/wiki/TwistedSponsors
>
> This will be linked off the front page at some point in the near future.
>
> NOTE: Please reply directly to me with offers. I don't want to discourage
> anyone from offering help, just because someone else has publicly offered
> something similar. I would prefer to get as many things on the table as
> possible, and then choose the best way forward.
>
> Thanks very much!
> -Eric Mangold
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



--
It is not economical to go to bed early to save the candles if the result is
twins. - Chinese Proverb
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060329/13983157/attachment.html>

From ndbecker2 at gmail.com  Wed Mar 29 07:02:12 2006
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 29 Mar 2006 09:02:12 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
Message-ID: <e0e411$obe$1@sea.gmane.org>

There is a big problem with twisted on Fedora/Redhat multiarch.  For
example, x86_64.

The problem is that Fedora puts arch-independent (.py) code into a different
directory than arch-dependent code.

Unfortunately, this doesn't quite work correctly with python's module search
algorithm.

The problem shows up when twisted-sumo is installed.  Then we have:

/usr/lib/python2.4/site-packages/twisted/...
and
/usr/lib64/python2.4/site-packages/twisted/...

This won't work.

I realize the problem is with python module search, but it looks like a big
effort fix the code.  A simpler solution would be for twisted to just avoid
the problem.  If twisted put core c-code into a different place, we could
have:

/usr/lib64/python2.4/site-packages/twisted-core

That would solve the problem.





From itamar at itamarst.org  Wed Mar 29 07:36:19 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Mar 2006 09:36:19 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
In-Reply-To: <e0e411$obe$1@sea.gmane.org>
References: <e0e411$obe$1@sea.gmane.org>
Message-ID: <1143642981.8658.0.camel@localhost.localdomain>

On Wed, 2006-03-29 at 09:02 -0500, Neal Becker wrote:
> There is a big problem with twisted on Fedora/Redhat multiarch.  For
> example, x86_64.
> 
> The problem is that Fedora puts arch-independent (.py) code into a different
> directory than arch-dependent code.
> 
> Unfortunately, this doesn't quite work correctly with python's module search
> algorithm.

This sounds like a problem in Fedora, not Twisted. As a workaround, you
could install Twisted twice, once w/32bit and once with 64bit python?




From exarkun at divmod.com  Wed Mar 29 07:42:48 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Mar 2006 09:42:48 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
In-Reply-To: <e0e411$obe$1@sea.gmane.org>
Message-ID: <20060329144248.22481.81197549.divmod.quotient.7232@ohm>

On Wed, 29 Mar 2006 09:02:12 -0500, Neal Becker <ndbecker2 at gmail.com> wrote:
>There is a big problem with twisted on Fedora/Redhat multiarch.  For
>example, x86_64.
>
>The problem is that Fedora puts arch-independent (.py) code into a different
>directory than arch-dependent code.
>
>Unfortunately, this doesn't quite work correctly with python's module search
>algorithm.
>
>The problem shows up when twisted-sumo is installed.  Then we have:
>
>/usr/lib/python2.4/site-packages/twisted/...
>and
>/usr/lib64/python2.4/site-packages/twisted/...
>
>This won't work.
>
>I realize the problem is with python module search, but it looks like a big
>effort fix the code.  A simpler solution would be for twisted to just avoid
>the problem.  If twisted put core c-code into a different place, we could
>have:
>
>/usr/lib64/python2.4/site-packages/twisted-core
>
>That would solve the problem.
>

You could just delete the /usr/lib64 twisted package, which I am guessing is almost entirely empty.  Unless you're interested in twisted.runner, none of the extension modules are actually required.

Jean-Paul



From exarkun at divmod.com  Wed Mar 29 07:46:58 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Mar 2006 09:46:58 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
 wrapped in a CGIDirectory resource actually execute
In-Reply-To: <E1FOTF3-0005gV-00@wolfwood>
Message-ID: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>

On Tue, 28 Mar 2006 22:29:13 -0700, David Reid <dreid at wolfwood.twistedmatrix.com> wrote:
>Author: dreid
>Date: Tue Mar 28 22:29:11 2006
>New Revision: 16495
>
>Modified:
>   branches/childNotFound-1596/twisted/web2/test/test_cgi.py
>Log:
>test that scripts wrapped in a CGIDirectory resource actually execute
>
>Modified: branches/childNotFound-1596/twisted/web2/test/test_cgi.py
>==============================================================================
>--- branches/childNotFound-1596/twisted/web2/test/test_cgi.py	(original)
>+++ branches/childNotFound-1596/twisted/web2/test/test_cgi.py	Tue Mar 28 22:29:11 2006
>@@ -161,7 +161,7 @@
>
>         self.failUnless(isinstance(resource, (twcgi.CGIScript,)))
>
>-    def testAnotherDirectory(self):
>+    def testSubDirectory(self):
>         resource, segments = self.root.locateChild(None, ('directory',
>                                                           'paths',
>                                                           'that',
>@@ -170,4 +170,46 @@
>
>         self.failUnless(isinstance(resource, twcgi.CGIDirectory))
>
>-
>+    def createScript(self, filename):
>+	cgiFile = open(filename, 'wt')
>+	cgiFile.write("#!%s\n\n%s" % (sys.executable,
>+				      DUMMY_CGI))
>+	cgiFile.close()
>+	os.chmod(filename, 0700)
>+
>+    def testScriptsExecute(self):
>+	cgiBinDir = os.path.abspath(self.mktemp())
>+	os.mkdir(cgiBinDir)
>+	root = twcgi.CGIDirectory(cgiBinDir)
>+
>+        self.createScript(os.path.join(cgiBinDir, 'dummy'))
>+
>+	cgiSubDir = os.path.join(cgiBinDir, 'sub')
>+	os.mkdir(cgiSubDir)
>+
>+	self.createScript(os.path.join(cgiSubDir, 'dummy'))
>+
>+	self.p = reactor.listenTCP(0, channel.HTTPFactory(server.Site(root)))
>+	portnum = self.p.getHost().port
>+
>+	def _firstResponse(res):
>+	    self.failUnlessEqual(res, "cgi output%s" % os.linesep)
>+
>+	    return client.getPage('http://localhost:%d/sub/dummy' % portnum)
>+
>+	def _secondResponse(res):
>+	    self.failUnlessEqual(res, "cgi output%s" % os.linesep)
>+
>+	def _cleanup(res):
>+	    d = self.p.stopListening()
>+	    d.addCallback(lambda ign: res)
>+	    return d
>+
>+	d = client.getPage('http://localhost:%d/dummy' % portnum)
>+
>+	d.addCallback(_firstResponse
>+        ).addCallback(_secondResponse
>+	).addBoth(_cleanup)
>+
>+	return d
>+    testScriptsExecute.timeout=10
>

Tabs?

Jean-Paul



From foom at fuhm.net  Wed Mar 29 09:04:41 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 29 Mar 2006 11:04:41 -0500
Subject: [Twisted-Python] twisted-2 won't work with Fedora
In-Reply-To: <e0e411$obe$1@sea.gmane.org>
References: <e0e411$obe$1@sea.gmane.org>
Message-ID: <590D4CF9-1C22-4657-BEC7-9A364F7D193D@fuhm.net>


On Mar 29, 2006, at 9:02 AM, Neal Becker wrote:

> There is a big problem with twisted on Fedora/Redhat multiarch.  For
> example, x86_64.
>
> The problem is that Fedora puts arch-independent (.py) code into a  
> different
> directory than arch-dependent code.
>
> Unfortunately, this doesn't quite work correctly with python's  
> module search
> algorithm.
[...]
> I realize the problem is with python module search, but it looks  
> like a big
> effort fix the code.

In the thread on python-dev, I thought I saw a simple enough solution:

On Mar 17, 2006, at 4:03 PM, Martin v. Löwis wrote:
> Neal Becker wrote:
>> Sorry, maybe I used confusing terminology.
>>
>> A reference is here: http://fedoraproject.org/wiki/Packaging/Python
>> This is the current setup.  For example, this is a standard macro  
>> used by
>> Redhat in RPM SPEC files for python:
>>
>> %define python_sitearch %(%{__python} -c "from distutils.sysconfig  
>> import
>> get_python_lib; print get_python_lib(1)")}
>>
>> %define python_sitelib %(%{__python} -c "from distutils.sysconfig  
>> import
>> get_python_lib; print get_python_lib()")}
>>
>> Clearly this practice is widespread.  It would seem that module  
>> search needs
>> some modification to fully support it.
>
> Ah. That isn't supported at all, at the moment. Redhat should not be
> using it. Instead, there shouldn't be a difference between sitearch  
> and
> sitelib.


In any case, I don't see why twisted should do anything to fix this  
problem, it's for either Fedora or Python to fix.

James


From ndbecker2 at gmail.com  Wed Mar 29 09:02:37 2006
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 29 Mar 2006 11:02:37 -0500
Subject: [Twisted-Python] Resolved?: twisted-2 won't work with Fedora
References: <e0e411$obe$1@sea.gmane.org>
Message-ID: <e0eb2q$m86$1@sea.gmane.org>

I found that this will workaround:

sudo python setup.py all install --install-lib=/usr/lib64/python2.4/site-packages






From corydodt at twistedmatrix.com  Wed Mar 29 10:18:53 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 29 Mar 2006 09:18:53 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
	wrapped in a CGIDirectory resource actually execute
In-Reply-To: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
Message-ID: <442AC17D.1020309@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

For general discussion, I have attached a pre-commit hook that rejects commits
of .py files containing leading tabs on any line.  It does not do anything to
files not ending in .py.  It does check for tabs mixed with spaces.  It
ignores tabs occurring anywhere but the leading whitespace.  Here's the regex:

_tabs = re.compile(r'^\s*\t\s*.*$')

I have used this, albeit lightly.

C

Jean-Paul Calderone wrote:
>>
> 
> Tabs?
> 


====
#!/usr/bin/env python
"""This is a pre-commit hook that checks whether py files being committed
contain tabs in their significant whitespace.
TODO?: check for a file property that says to ignore the significant tabs,
in cases where they're actually needed (although I can't think of any).
"""
import sys
import re

from svn import core, fs, delta, repos

_tabs = re.compile(r'^\s*\t\s*.*$')

class ChangeReceiver(delta.Editor):
    def __init__(self, txn_root, base_root, pool):
        self.txn_root = txn_root
        self.base_root = base_root
        self.pool = pool

    def add_file(self, path, parent_baton,
                 copyfrom_path, copyfrom_revision, file_pool):
        return [0, path]

    def open_file(self, path, parent_baton, base_revision, file_pool):
        return [0, path]

    def apply_textdelta(self, file_baton, base_checksum):
        file_baton[0] = 1
        # no handler
        return None

    def close_file(self, file_baton, text_checksum):
        changed, path = file_baton
        if len(path) < 3 or path.lower()[-3:] != '.py' or not changed:
            # This is not a .py file, don't care about tabs
            # TODO - only look inside trunk
            return

        # Read the file contents through a tab-finder
        subpool = core.svn_pool_create(self.pool)

        stream = core.Stream(fs.file_contents(self.txn_root, path, subpool))

        data = stream.read()  # core.SVN_STREAM_CHUNK_SIZE)
        for line in data.splitlines():
            if _tabs.match(line):
                core.svn_pool_destroy(subpool)
                msg = ("Python file contains lines that begin with tabs: '%s'\n"
                       "There may be others as well." % (path,))
                sys.stderr.write(msg)
                sys.exit(1)

        core.svn_pool_destroy(subpool)

def check_tabs(pool, repos_path, txn):
    def authz_cb(root, path, pool):
        return 1

    fs_ptr = repos.svn_repos_fs(repos.svn_repos_open(repos_path, pool))
    txn_ptr = fs.open_txn(fs_ptr, txn, pool)
    txn_root = fs.txn_root(txn_ptr, pool)
    base_root = fs.revision_root(fs_ptr, fs.txn_base_revision(txn_ptr), pool)
    editor = ChangeReceiver(txn_root, base_root, pool)
    e_ptr, e_baton = delta.make_editor(editor, pool)
    repos.svn_repos_dir_delta(base_root, '', '', txn_root, '',
                              e_ptr, e_baton, authz_cb, 0, 1, 0, 0, pool)


if __name__ == '__main__':
    assert len(sys.argv) == 3
    core.run_app(check_tabs, sys.argv[1], sys.argv[2])

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEKsF93A5SrXAiHQcRAtG2AJ9FJHBr8T7MD6MUpxx85y3T12QBKACeJqXB
CxzYXpGospuBh7PUqQ1pYLk=
=36Ya
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Wed Mar 29 10:35:03 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 29 Mar 2006 09:35:03 -0800
Subject: anti-tab thing, Re: [Twisted-Python] Re: [Twisted-commits] r16495
In-Reply-To: <442AC17D.1020309@twistedmatrix.com>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
	<442AC17D.1020309@twistedmatrix.com>
Message-ID: <442AC547.7060307@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

In case you've never encountered a pre-commit hook, here's a sample of the
effects:

  cory ~/wc/vellum% echo '        ' > foo.py
  cory ~/wc/vellum% svn add foo.py
  A         foo.py
  cory ~/wc/vellum% svn ci -m "i did not read the coding standard" foo.py
  Adding         foo.py
  Transmitting file data .svn: Commit failed (details follow):
  svn: 'pre-commit' hook failed with error output:
  Python file contains lines that begin with tabs: 'trunk/foo.py'
  There may be others as well.

If Twisted wanted to adopt this, I would suggest adding a link to the coding
standard in this message, or something.

C



Cory Dodt wrote:
> For general discussion, I have attached a pre-commit hook that rejects commits
> of .py files containing leading tabs on any line.  It does not do anything to
> files not ending in .py.  It does check for tabs mixed with spaces.  It
> ignores tabs occurring anywhere but the leading whitespace.  Here's the regex:
> 
> _tabs = re.compile(r'^\s*\t\s*.*$')
> 
> I have used this, albeit lightly.
> 
> C
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEKsVH3A5SrXAiHQcRAgwkAJoDMNtUGzCt7An+vkv9JjhwEC88bACbB0Ys
X7LTPtokm3F/GYZsgi5+2Es=
=vuCz
-----END PGP SIGNATURE-----



From dreid at dreid.org  Wed Mar 29 12:29:42 2006
From: dreid at dreid.org (David Reid)
Date: Wed, 29 Mar 2006 11:29:42 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
	wrapped in a CGIDirectory resource actually execute
In-Reply-To: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
Message-ID: <442AE026.7080700@dreid.org>

Jean-Paul Calderone wrote:
> Tabs?

Yes, it's a new Emacs install, and Carbon Emacs still seems to ignore 
indent-tabs-mode unless it's set by customize, it's been fixed, I'll 
untabify and commit a little later today.

- David



From nico at tekNico.net  Thu Mar 30 00:58:22 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 30 Mar 2006 09:58:22 +0200
Subject: [Twisted-Python] Why does Selenium need Twisted 1.3?
Message-ID: <442B8F9E.9060107@tekNico.net>

"Download and install Twisted version 1.3 (this is important, because
things have been known not to work so well with Twisted 2.x)."

Running the Selenium Twisted server on Linux
http://agiletesting.blogspot.com/2006/03/running-selenium-twisted-server-on.html

Uh?

-- 
Nicola Larosa - http://www.tekNico.net/

The first markets were markets. Not bulls, bears, or invisible hands.
Not battlefields, targets, or arenas. Not demographics, eyeballs,
or seats. Most of all, not consumers. -- Cluetrain




From teratorn at twistedmatrix.com  Thu Mar 30 04:57:23 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Thu, 30 Mar 2006 21:57:23 +1000
Subject: [Twisted-Python] Why does Selenium need Twisted 1.3?
In-Reply-To: <442B8F9E.9060107@tekNico.net>
References: <442B8F9E.9060107@tekNico.net>
Message-ID: <op.s6755xk0y3d107@localhost.localdomain>

On Thu, 30 Mar 2006 17:58:22 +1000, Nicola Larosa <nico at tekNico.net> wrote:

> "Download and install Twisted version 1.3 (this is important, because
> things have been known not to work so well with Twisted 2.x)."
>
> Running the Selenium Twisted server on Linux
> http://agiletesting.blogspot.com/2006/03/running-selenium-twisted-server-on.html
>
> Uh?

Ask them?

-Eric



From jml at mumak.net  Thu Mar 30 05:20:12 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 30 Mar 2006 22:20:12 +1000
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
References: <20060314161418.6122.866019991.divmod.quotient.16679@ohm>
	<20060314163119.6122.1647095424.divmod.quotient.16689@ohm>
Message-ID: <d06a5cd30603300420o5a218a97w11f5ef4625be43f1@mail.gmail.com>

On 3/15/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> Unless anyone can present a compelling case to the contrary, I think that as of now we should "officially" switch to the development procedures described by <http://divmod.org/trac/wiki/BranchBasedDevelopment>.

I doubt this is a compelling case, but here we go.

I find that strict branch-based development greatly decreases the
likelihood that I will fix more than one bug in a day. This means that
its likely that I'll max out at about one bug a week.

I presume that the way to fix many different bugs is to branch from
trunk, fix first bug then wait for review. While waiting, branch again
from trunk, fix second bug then wait for review and so on. If there is
a better way, let me know.

To do this requires a context switching that is difficult for me. I
find it unpleasant to work on code which has a bug in it that I've
already fixed. The bigger the changes, the more difficult it becomes.
I'm not opposing branch-based development. This is my sole problem
with it.

As a side point, if we have switched to strict branch-based
development, then we should document the procedure on the Twisted web
site, not on the Divmod web site.

jml



From nico at tekNico.net  Thu Mar 30 05:39:25 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 30 Mar 2006 14:39:25 +0200
Subject: [Twisted-Python] Re: Why does Selenium need Twisted 1.3?
In-Reply-To: <op.s6755xk0y3d107@localhost.localdomain>
References: <442B8F9E.9060107@tekNico.net>
	<op.s6755xk0y3d107@localhost.localdomain>
Message-ID: <442BD17D.3040706@tekNico.net>

>> "Download and install Twisted version 1.3 (this is important, because
>> things have been known not to work so well with Twisted 2.x)."
>>
>> Running the Selenium Twisted server on Linux
>> http://agiletesting.blogspot.com/2006/03/running-selenium-twisted-server-on.html
>>
>> Uh?

> Ask them?

Yes, I Cc:ed the article author, but should have gone to their mailing list
instead... done.

I posted here because I thought somebody could be interested in a somewhat
disfuncional situation involving Twisted and an important Twisted-based
acceptance test tool.

-- 
Nicola Larosa - http://www.tekNico.net/

The first markets were markets. Not bulls, bears, or invisible hands.
Not battlefields, targets, or arenas. Not demographics, eyeballs,
or seats. Most of all, not consumers. -- Cluetrain




From foom at fuhm.net  Thu Mar 30 10:36:27 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu, 30 Mar 2006 12:36:27 -0500
Subject: [Twisted-Python] Re: Why does Selenium need Twisted 1.3?
In-Reply-To: <442BD17D.3040706@tekNico.net>
References: <442B8F9E.9060107@tekNico.net>
	<op.s6755xk0y3d107@localhost.localdomain>
	<442BD17D.3040706@tekNico.net>
Message-ID: <2229278A-1E0E-432C-8182-778E9D772136@fuhm.net>


On Mar 30, 2006, at 7:39 AM, Nicola Larosa wrote:

>>> "Download and install Twisted version 1.3 (this is important,  
>>> because
>>> things have been known not to work so well with Twisted 2.x)."
>>>
>>> Running the Selenium Twisted server on Linux
>>> http://agiletesting.blogspot.com/2006/03/running-selenium-twisted- 
>>> server-on.html
>>>
>>> Uh?
>
>> Ask them?
>
> Yes, I Cc:ed the article author, but should have gone to their  
> mailing list
> instead... done.
>
> I posted here because I thought somebody could be interested in a  
> somewhat
> disfuncional situation involving Twisted and an important Twisted- 
> based
> acceptance test tool.

As far as I know they have not approached us with any specific  
problems with later versions of Twisted nor help with some issue  
converting their code to be compatible with later versions.

James



From glyph at divmod.com  Thu Mar 30 21:42:56 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 30 Mar 2006 23:42:56 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <d06a5cd30603300420o5a218a97w11f5ef4625be43f1@mail.gmail.com>
Message-ID: <20060331044256.22481.299464125.divmod.quotient.8157@ohm>

On Thu, 30 Mar 2006 22:20:12 +1000, Jonathan Lange <jml at mumak.net> wrote:

>I presume that the way to fix many different bugs is to branch from
>trunk, fix first bug then wait for review. While waiting, branch again
>from trunk, fix second bug then wait for review and so on. If there is
>a better way, let me know.

It is perfectly acceptable to resolve multiple tickets with one review cycle.

If you are going to work for only a few hours, and close multiple tickets, the tickets are probably not big enough to each require their own branch, or their own individual review.  Feel free to reassign and resolve en-masse.

The only reason this practice is not already documented (and more strongly recommended) is that it isn't good to mix multiple tickets together in one branch or one patch if the reviewer is likely to agree with the code for resolving some tickets, but not others.  In some cases, this is unavoidable, because the same code needs to change for two issues; in still others, if the reviewer is unlikely to require major changes, and will be able to review all the changes in a reasonable amount of time, there's no particular reason not to bundle them together -- and convenience of limited-time development is a good reason *to* bundle them together.

Still - remember to write a descriptive commit message for each ticket being resolved when you merge to trunk :).

>As a side point, if we have switched to strict branch-based
>development, then we should document the procedure on the Twisted web
>site, not on the Divmod web site.

At the very least, there should be a link on the Twisted website, on a page explaining how we do development.

I think that "branch-based development" is a crummy name for this process, since it isn't very exciting and it's really about tickets, reviews, and changesets, not branches -- branches are an implementation detail to allow developers to continue to use the VCS as a file server.  I think I am going to change the name to "ultimate quality development system" and then we can abbreviate it "UQDS".



From radeex at gmail.com  Fri Mar 31 06:14:00 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 31 Mar 2006 08:14:00 -0500
Subject: Branch based development (Was Re: [Twisted-Python] Re:
	[Twisted-commits] r16287 - Revert r16241; tests are passing.)
In-Reply-To: <20060331044256.22481.299464125.divmod.quotient.8157@ohm>
References: <d06a5cd30603300420o5a218a97w11f5ef4625be43f1@mail.gmail.com>
	<20060331044256.22481.299464125.divmod.quotient.8157@ohm>
Message-ID: <60ed19d40603310514u32420e66lc5a85fc276fd74ef@mail.gmail.com>

On 3/30/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
> At the very least, there should be a link on the Twisted website, on a
> page explaining how we do development.



It's been there since a few days ago, FYI:
http://twistedmatrix.com/trac/wiki/TwistedDevelopment



--
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060331/83621a3f/attachment.html>

From zooko at zooko.com  Fri Mar 31 06:30:42 2006
From: zooko at zooko.com (zooko at zooko.com)
Date: Fri, 31 Mar 2006 09:30:42 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r16495 - test that scripts
	wrapped in a CGIDirectory resource actually execute
In-Reply-To: <442AC17D.1020309@twistedmatrix.com>
References: <20060329144658.22481.1678432881.divmod.quotient.7235@ohm>
	<442AC17D.1020309@twistedmatrix.com>
Message-ID: <20060331133043.37A87CC8@yumyum.zooko.com>


See also tabnanny.py and reindent.py, included with Python.

Regards,

Zooko



