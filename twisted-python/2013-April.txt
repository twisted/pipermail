From glyph at twistedmatrix.com  Mon Apr  1 03:49:41 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 1 Apr 2013 00:49:41 -0700
Subject: [Twisted-Python] How to determine whether transport.write()
	succeed?
In-Reply-To: <CAHZXDMJy4Sd84=dFyKyKJqDPv=YZQ2a=B+UCL-F291d4jUs60g@mail.gmail.com>
References: <CAHZXDMKnTsxmZNy7a6aq8jbP6ttpgbOfZwrP8uu6TNpqvfQgDA@mail.gmail.com>
	<97464120-5223-4F58-8BB8-B4C9713EC0D1@twistedmatrix.com>
	<CAHZXDMJy4Sd84=dFyKyKJqDPv=YZQ2a=B+UCL-F291d4jUs60g@mail.gmail.com>
Message-ID: <63CABE5D-027D-41B4-B00C-2F96EE8F2F4C@twistedmatrix.com>


On Mar 31, 2013, at 6:09 PM, Todong Ma <gbstack08 at gmail.com> wrote:

> I wrote a simple client and server to get system information (e.g. cpu, memory, etc.)
> Client send 'cpu' to the server, then server will return cpu's information to client.
> 
> Now client send multiple commands to server one time, e.g. cpu, memory, database, hard disk. But sometimes server couldn't receive some type information (e.g. cpu, database), and the missed information type is not fixed every time.
> 
> So I want client to check whether ITransport.write() sends message to server successfully. If failed, client will resend the message to server.

It's a good thing that write() doesn't convey information about send() succeeding so you can't trust it :).  You can't rely on send() succeeding to convey this information: send() can succeed but all that means is that data moved from your application into your kernel.

What you want to do is to have an application-level acknowledgement of the data that was sent.

AMP will provide this for you automatically; when the Deferred returned by callRemote fires, the other end has received and acknowledged the information.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130401/4a28897b/attachment.htm 

From cam.turn at gmail.com  Mon Apr  1 16:55:48 2013
From: cam.turn at gmail.com (Shell)
Date: Mon, 1 Apr 2013 21:55:48 +0100
Subject: [Twisted-Python] twisted.cred interface deficiences
Message-ID: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>

The twisted.cred.IUsernamePassword interface declares:

* IUsernamePassword.username - "The username associated with these credentials."
* IUsernamePassword.password - "The password associated with these credentials."
* IUsernamePassword.checkPassword(password) - "Validate these
credentials against the correct password."

The issue is that the interface (according to exarkun) allows you to
implement checkPassword() to do things other than the obvious
"password == self.password". Now, this is an issue because Twisted
then explicitly supports (again, according to exarkun) two different
uses of this interface by the credentials checker:

* Call the checkPassword() method, passing it the correct password
* Just take the password out and do whatever you want with it (which
is necessary in any secure system)

Now, imagine I write a version of checkPassword() in a library which
does something security-centric (what would this be? shouldn't it be
part of the checker?), assuming that it'll be used by a credentials
checker which calls checkPassword(). Except... then, a library user
uses it with a credentials checker which checks the password itself.
Now they're skipping over my security-centric code!

So I have to tell my library users that they have to use my library
with a credentials checker which makes sure to call checkPassword(),
not just one which accepts the correct interface.

IUsernamePassword's docstring claims that the stored password must be
reversible to plaintext to be compared with the password, which
implies that taking the password out and doing other things is
incorrect, unlike what exarkun suggests. In this case, exposing
password in the interface makes little sense. In addition,
twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
entirely already
(http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238).

I propose that IUsernamePassword should be split into at least two interfaces:

* IUsernamePassword, with only username and password, no methods,
which allows password to be used in any way
* Another interface, which only defines username and checkPassword() -
possibly just a rename of IUsernameHashedPassword, which declares a
similar interface

However, this has the issue that any credential checker which can use
the second interface would also be able to use an IUsernamePassword
here if there were an adapter between the two, but support for this
would have to go into every credential checker which supports the
second interface at present. Maybe the Portal could automatically
search for adapters if it can't find a direct match?

Thanks,
Cameron


From _ at lvh.cc  Mon Apr  1 17:12:21 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 1 Apr 2013 23:12:21 +0200
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
Message-ID: <CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>

Why does IUsernameHashedPassword have to be renamed? It sounds like it's
the appropriate thing already.


On Mon, Apr 1, 2013 at 10:55 PM, Shell <cam.turn at gmail.com> wrote:

> The twisted.cred.IUsernamePassword interface declares:
>
> * IUsernamePassword.username - "The username associated with these
> credentials."
> * IUsernamePassword.password - "The password associated with these
> credentials."
> * IUsernamePassword.checkPassword(password) - "Validate these
> credentials against the correct password."
>
> The issue is that the interface (according to exarkun) allows you to
> implement checkPassword() to do things other than the obvious
> "password == self.password". Now, this is an issue because Twisted
> then explicitly supports (again, according to exarkun) two different
> uses of this interface by the credentials checker:
>
> * Call the checkPassword() method, passing it the correct password
> * Just take the password out and do whatever you want with it (which
> is necessary in any secure system)
>
> Now, imagine I write a version of checkPassword() in a library which
> does something security-centric (what would this be? shouldn't it be
> part of the checker?), assuming that it'll be used by a credentials
> checker which calls checkPassword(). Except... then, a library user
> uses it with a credentials checker which checks the password itself.
> Now they're skipping over my security-centric code!
>
> So I have to tell my library users that they have to use my library
> with a credentials checker which makes sure to call checkPassword(),
> not just one which accepts the correct interface.
>
> IUsernamePassword's docstring claims that the stored password must be
> reversible to plaintext to be compared with the password, which
> implies that taking the password out and doing other things is
> incorrect, unlike what exarkun suggests. In this case, exposing
> password in the interface makes little sense. In addition,
> twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
> entirely already
> (
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238
> ).
>
> I propose that IUsernamePassword should be split into at least two
> interfaces:
>
> * IUsernamePassword, with only username and password, no methods,
> which allows password to be used in any way
> * Another interface, which only defines username and checkPassword() -
> possibly just a rename of IUsernameHashedPassword, which declares a
> similar interface
>
> However, this has the issue that any credential checker which can use
> the second interface would also be able to use an IUsernamePassword
> here if there were an adapter between the two, but support for this
> would have to go into every credential checker which supports the
> second interface at present. Maybe the Portal could automatically
> search for adapters if it can't find a direct match?
>
> Thanks,
> Cameron
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130401/a635dec6/attachment.htm 

From cam.turn at gmail.com  Mon Apr  1 17:34:36 2013
From: cam.turn at gmail.com (Shell)
Date: Mon, 1 Apr 2013 22:34:36 +0100
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
Message-ID: <CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>

It actually might be the appropriate thing already. There's a couple
of possible reasons for renaming; one is that the password might not
be hashed but the credentials object wants to insert additional logic
(exarkun's statement in IRC) anyway, but technically that's just
hashing using the identity function, so it should be OK.

The other is that the credentials object might want to collect the
plaintext password, and perform some logic based on that *before*
collecting something which can be compared to something derived from
the plaintext password from the other end of a protocol. I don't know
of any protocols which do this off the top of my head, but I have a
suspicion that at least a couple exist, and they'd fit perfectly into
this interface. If none do, then keeping it with the same name sounds
fine to me.

Cameron

On 1 April 2013 22:12, Laurens Van Houtven <_ at lvh.cc> wrote:
> Why does IUsernameHashedPassword have to be renamed? It sounds like it's the
> appropriate thing already.
>
>
> On Mon, Apr 1, 2013 at 10:55 PM, Shell <cam.turn at gmail.com> wrote:
>>
>> The twisted.cred.IUsernamePassword interface declares:
>>
>> * IUsernamePassword.username - "The username associated with these
>> credentials."
>> * IUsernamePassword.password - "The password associated with these
>> credentials."
>> * IUsernamePassword.checkPassword(password) - "Validate these
>> credentials against the correct password."
>>
>> The issue is that the interface (according to exarkun) allows you to
>> implement checkPassword() to do things other than the obvious
>> "password == self.password". Now, this is an issue because Twisted
>> then explicitly supports (again, according to exarkun) two different
>> uses of this interface by the credentials checker:
>>
>> * Call the checkPassword() method, passing it the correct password
>> * Just take the password out and do whatever you want with it (which
>> is necessary in any secure system)
>>
>> Now, imagine I write a version of checkPassword() in a library which
>> does something security-centric (what would this be? shouldn't it be
>> part of the checker?), assuming that it'll be used by a credentials
>> checker which calls checkPassword(). Except... then, a library user
>> uses it with a credentials checker which checks the password itself.
>> Now they're skipping over my security-centric code!
>>
>> So I have to tell my library users that they have to use my library
>> with a credentials checker which makes sure to call checkPassword(),
>> not just one which accepts the correct interface.
>>
>> IUsernamePassword's docstring claims that the stored password must be
>> reversible to plaintext to be compared with the password, which
>> implies that taking the password out and doing other things is
>> incorrect, unlike what exarkun suggests. In this case, exposing
>> password in the interface makes little sense. In addition,
>> twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
>> entirely already
>>
>> (http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238).
>>
>> I propose that IUsernamePassword should be split into at least two
>> interfaces:
>>
>> * IUsernamePassword, with only username and password, no methods,
>> which allows password to be used in any way
>> * Another interface, which only defines username and checkPassword() -
>> possibly just a rename of IUsernameHashedPassword, which declares a
>> similar interface
>>
>> However, this has the issue that any credential checker which can use
>> the second interface would also be able to use an IUsernamePassword
>> here if there were an adapter between the two, but support for this
>> would have to go into every credential checker which supports the
>> second interface at present. Maybe the Portal could automatically
>> search for adapters if it can't find a direct match?
>>
>> Thanks,
>> Cameron
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> --
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From byrsa at sinkhole.me  Tue Apr  2 02:48:58 2013
From: byrsa at sinkhole.me (byr sa)
Date: Mon, 1 Apr 2013 23:48:58 -0700
Subject: [Twisted-Python] t.n.c.lookupAddress returns DNSNameError for
	hostnames w/ no A record
Message-ID: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>

Hi all,

I saw in previous posts that DNSNameError signifies an 'NXDOMAIN' status
and DNSServerError signifies 'SERVFAIL'. However, I am getting a
DNSNameError from twisted.names.client.lookupAddress() when I query a
hostname that has no A records, but *does have* other records (NS, SOA,
etc).

An example:

; <<>> DiG 9.8.3-P1 <<>> megaupload.com ANY
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 19402
;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;megaupload.com. IN ANY

;; ANSWER SECTION:
megaupload.com. 21600 IN SOA ns5.cirfu.net. ipr.ic.fbi.gov. 2013022001 3600
900 604800 900
megaupload.com. 21600 IN NS ns5.cirfu.net.
megaupload.com. 21600 IN NS ns6.cirfu.net.


dig is telling me 'status: NOERROR'. Is there an easy way to determine the
status of a DNS query from a twisted.names.dns.Message ? I checked the
source and it wasn't readily apparent (to me). In my code I'm checking the
value of failure.value.__class__.__name__ to determine if an answer is NX
or SERVFAIL. Seems like there should be a better way... Here's the code if
anybody wants to take a look:

http://paste.ubuntu.com/5669612/

Thanks to the Twisted devs and maintainers for all your hard work!


byrsa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130401/13d189b1/attachment.htm 

From _ at lvh.cc  Tue Apr  2 04:51:33 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 2 Apr 2013 10:51:33 +0200
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
Message-ID: <CAE_Hg6ZwD0LigLdiNdwJsBkWLXUGYUz_JpU8Nmu8qEnJ7PtMOg@mail.gmail.com>

Okay, cool. I definitely agree that IUsernamePassword.checkPassword is dumb
and support deprecating it.

On Monday, April 1, 2013, Shell wrote:

> It actually might be the appropriate thing already. There's a couple
> of possible reasons for renaming; one is that the password might not
> be hashed but the credentials object wants to insert additional logic
> (exarkun's statement in IRC) anyway, but technically that's just
> hashing using the identity function, so it should be OK.
>
> The other is that the credentials object might want to collect the
> plaintext password, and perform some logic based on that *before*
> collecting something which can be compared to something derived from
> the plaintext password from the other end of a protocol. I don't know
> of any protocols which do this off the top of my head, but I have a
> suspicion that at least a couple exist, and they'd fit perfectly into
> this interface. If none do, then keeping it with the same name sounds
> fine to me.
>
> Cameron
>
> On 1 April 2013 22:12, Laurens Van Houtven <_ at lvh.cc> wrote:
> > Why does IUsernameHashedPassword have to be renamed? It sounds like it's
> the
> > appropriate thing already.
> >
> >
> > On Mon, Apr 1, 2013 at 10:55 PM, Shell <cam.turn at gmail.com> wrote:
> >>
> >> The twisted.cred.IUsernamePassword interface declares:
> >>
> >> * IUsernamePassword.username - "The username associated with these
> >> credentials."
> >> * IUsernamePassword.password - "The password associated with these
> >> credentials."
> >> * IUsernamePassword.checkPassword(password) - "Validate these
> >> credentials against the correct password."
> >>
> >> The issue is that the interface (according to exarkun) allows you to
> >> implement checkPassword() to do things other than the obvious
> >> "password == self.password". Now, this is an issue because Twisted
> >> then explicitly supports (again, according to exarkun) two different
> >> uses of this interface by the credentials checker:
> >>
> >> * Call the checkPassword() method, passing it the correct password
> >> * Just take the password out and do whatever you want with it (which
> >> is necessary in any secure system)
> >>
> >> Now, imagine I write a version of checkPassword() in a library which
> >> does something security-centric (what would this be? shouldn't it be
> >> part of the checker?), assuming that it'll be used by a credentials
> >> checker which calls checkPassword(). Except... then, a library user
> >> uses it with a credentials checker which checks the password itself.
> >> Now they're skipping over my security-centric code!
> >>
> >> So I have to tell my library users that they have to use my library
> >> with a credentials checker which makes sure to call checkPassword(),
> >> not just one which accepts the correct interface.
> >>
> >> IUsernamePassword's docstring claims that the stored password must be
> >> reversible to plaintext to be compared with the password, which
> >> implies that taking the password out and doing other things is
> >> incorrect, unlike what exarkun suggests. In this case, exposing
> >> password in the interface makes little sense. In addition,
> >> twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
> >> entirely already
> >>
> >> (
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238
> ).
> >>
> >> I propose that IUsernamePassword should be split into at least two
> >> interfaces:
> >>
> >> * IUsernamePassword, with only username and password, no methods,
> >> which allows password to be used in any way
> >> * Another interface, which only defines username and checkPassword() -
> >> possibly just a rename of IUsernameHashedPassword, which declares a
> >> similar interface
> >>
> >> However, this has the issue that any credential checker which can use
> >> the second interface would also be able to use an IUsernamePassword
> >> here if there were an adapter between the two, but support for this
> >> would have to go into every credential checker which supports the
> >> second interface at present. Maybe the Portal could automatically
> >> search for adapters if it can't find a direct match?
> >>
> >> Thanks,
> >> Cameron
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
> >
> > --
> > cheers
> > lvh
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>


-- 
Sent from Gmail Mobile
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130402/114ded18/attachment-0001.htm 

From hs at ox.cx  Tue Apr  2 06:52:39 2013
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 2 Apr 2013 12:52:39 +0200
Subject: [Twisted-Python] Current callback best practices
Message-ID: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>

Hi,

I?ve asked this one already at the Twisted dinner (thanks again for it, it was probably my PyCon highlight) and got various answers from people sitting around me. I?m still indecisive so I?d like to gather even more opinions[1]. I already tried to ask on IRC but my time zone is just not very #twisted friendly so I got zero replies.

My question can be simplified to: Closures yes or no?

They seem *really* handy since they allow to have some data present without handing it through all the time. Eg in my cred checker, I can refer to the user name from the closure instead of passing it around all the time ? making the code much cleaner. Also most current examples and callbacks-are-hard-FUD-rebuttals seem to use them.

OTOH, private methods like `_cbPrintResult` are nicer to test individually.

If ?yes, closures?: Still using cb/eb prefixes? I don?t see them very often in recent examples. What about addBoth handlers?

Bonus points for the preferred style for the Twisted code base.

Thanks in advance & thank you for your time,
Hynek

[1]: I?d be glad if people from the dinner replied again too so I/we have it in written form, my memory tends to be rather sloppy.

From _ at lvh.cc  Tue Apr  2 07:11:41 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 2 Apr 2013 13:11:41 +0200
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
Message-ID: <CAE_Hg6YMSJ=k7+tQ0y5OXrx6wvQN4vqk0D4SBFVUJsFnnxg2fQ@mail.gmail.com>

I use closures unless I use the same callback all the time.
On Apr 2, 2013 1:04 PM, "Hynek Schlawack" <hs at ox.cx> wrote:

> Hi,
>
> I?ve asked this one already at the Twisted dinner (thanks again for it, it
> was probably my PyCon highlight) and got various answers from people
> sitting around me. I?m still indecisive so I?d like to gather even more
> opinions[1]. I already tried to ask on IRC but my time zone is just not
> very #twisted friendly so I got zero replies.
>
> My question can be simplified to: Closures yes or no?
>
> They seem *really* handy since they allow to have some data present
> without handing it through all the time. Eg in my cred checker, I can refer
> to the user name from the closure instead of passing it around all the time
> ? making the code much cleaner. Also most current examples and
> callbacks-are-hard-FUD-rebuttals seem to use them.
>
> OTOH, private methods like `_cbPrintResult` are nicer to test individually.
>
> If ?yes, closures?: Still using cb/eb prefixes? I don?t see them very
> often in recent examples. What about addBoth handlers?
>
> Bonus points for the preferred style for the Twisted code base.
>
> Thanks in advance & thank you for your time,
> Hynek
>
> [1]: I?d be glad if people from the dinner replied again too so I/we have
> it in written form, my memory tends to be rather sloppy.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130402/cab7bed2/attachment.htm 

From exarkun at twistedmatrix.com  Tue Apr  2 08:03:19 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 02 Apr 2013 12:03:19 -0000
Subject: [Twisted-Python] t.n.c.lookupAddress returns DNSNameError
	for	hostnames w/ no A record
In-Reply-To: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>
References: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>
Message-ID: <20130402120319.24331.1753254230.divmod.xquotient.1@top>

On 06:48 am, byrsa at sinkhole.me wrote:
>Hi all,
>
>I saw in previous posts that DNSNameError signifies an 'NXDOMAIN' 
>status
>and DNSServerError signifies 'SERVFAIL'. However, I am getting a
>DNSNameError from twisted.names.client.lookupAddress() when I query a
>hostname that has no A records, but *does have* other records (NS, SOA,
>etc).
>
>An example:
>
>; <<>> DiG 9.8.3-P1 <<>> megaupload.com ANY
>;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 19402
>;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
>
>;; QUESTION SECTION:
>;megaupload.com. IN ANY
>
>;; ANSWER SECTION:
>megaupload.com. 21600 IN SOA ns5.cirfu.net. ipr.ic.fbi.gov. 2013022001 
>3600
>900 604800 900
>megaupload.com. 21600 IN NS ns5.cirfu.net.
>megaupload.com. 21600 IN NS ns6.cirfu.net.
>
>
>dig is telling me 'status: NOERROR'. Is there an easy way to determine 
>the
>status of a DNS query from a twisted.names.dns.Message ? I checked the
>source and it wasn't readily apparent (to me). In my code I'm checking 
>the
>value of failure.value.__class__.__name__ to determine if an answer is 
>NX
>or SERVFAIL. Seems like there should be a better way... Here's the code 
>if
>anybody wants to take a look:
>
>http://paste.ubuntu.com/5669612/
>
>Thanks to the Twisted devs and maintainers for all your hard work!

Hi byrsa,

The behavior you're describing does sound wrong.  However, I wasn't able 
to reproduce it locally.  Running your example, I get [] for 
megaupload.com, not an error.  Perhaps there is a tricky DNS server 
involved somewhere that is changing the response unexpectedly?  I 
suggest using something like tcpdump or wireshark to take a look at the 
actual traffic and perhaps produce a more deterministic demonstration of 
the problem.

Regarding how you should detect certain errors, though, Failure just 
wraps normal exceptions, so you can use `isinstance` to check for them 
instead of checking by name.  Failure also provides some APIs that wrap 
up isinstance to provide some more commonly useful behavior - see 
Failure.check and Failure.trap.

And regarding determining error from a Message, you can use the rCode 
attribute to get the raw server response code as an integer.  The values 
and their meanings are defined in the DNS RFC and there are symbolic 
constants in twisted.names.dns - eg OK, ENAME, ESERVER, etc.

Hope this helps,
Jean-Paul


From exarkun at twistedmatrix.com  Tue Apr  2 08:06:14 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 02 Apr 2013 12:06:14 -0000
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CAE_Hg6ZwD0LigLdiNdwJsBkWLXUGYUz_JpU8Nmu8qEnJ7PtMOg@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
	<CAE_Hg6ZwD0LigLdiNdwJsBkWLXUGYUz_JpU8Nmu8qEnJ7PtMOg@mail.gmail.com>
Message-ID: <20130402120614.24331.1066953971.divmod.xquotient.2@top>

On 08:51 am, _ at lvh.cc wrote:
>Okay, cool. I definitely agree that IUsernamePassword.checkPassword is 
>dumb
>and support deprecating it.

Hey lvh,

Please stop top-posting. :)

Jean-Paul


From glyph at twistedmatrix.com  Tue Apr  2 10:32:45 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 2 Apr 2013 07:32:45 -0700
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
Message-ID: <9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>


On Apr 2, 2013, at 3:52 AM, Hynek Schlawack <hs at ox.cx> wrote:

> My question can be simplified to: Closures yes or no?

"As appropriate".

> They seem *really* handy since they allow to have some data present without handing it through all the time. Eg in my cred checker, I can refer to the user name from the closure instead of passing it around all the time ? making the code much cleaner. Also most current examples and callbacks-are-hard-FUD-rebuttals seem to use them.
> 
> OTOH, private methods like `_cbPrintResult` are nicer to test individually.

Ideally, any private method exists in service of some goal of the public interface.  It's best to test them by exercising the case in the public API which they support, rather than calling them directly.  Before you write any such method, you ought to be able to write a failing test for the public interface which doesn't pass because you haven't written the private method yet :).

If you're writing private methods which need their own extensive internal test coverage, it might be good to consider whether what you're writing really needs to be public functionality.

However, even if you're going to have a private implementation detail complex enough to warrant its own test suite independent of the public feature it's supporting ? and it is better to have such a suite than to have an explosion of irrelevant complexity in the tests for the public API - it's best to go with a private class or module than private methods on a public class.  Callback methods like _cbSomethingSomethingResult generally indicate an ad-hoc state machine as part of your class.  Chances are, if you're going down this road, you're missing quite a few states, and the ad-hoc state is smeared out across many poorly-encapsulated attributes.  After all, since it's not a closure, your only place to store any resulting state is 'self'.

The best solution at this point is not to try to test _cbWhatever methods directly, but rather, to spin out all the _cbSetDisconnected and _ebFixUpStuff methods into a dedicated class which has its own "public" interface that can be tested, but which is still private for Twisted's compatibility purposes.  That dedicated class can then have an explicit state machine of its own and will have attributes dedicated to just encapsulating the state that it's tasked with maintaining, instead of a random potpourri of different states from different responsibilities.

So I guess my recommendation would be "closures", because any time using private methods as callbacks would be better, it seems like something else has gone wrong :).

> If ?yes, closures?: Still using cb/eb prefixes? I don?t see them very often in recent examples. What about addBoth handlers?

If you're using a closure, use a descriptive name.  The 'cb/eb' prefix notation is not particularly illustrative; I often use an english word like 'when'.  whenDisconnected, whenResponseReceived, etc.

The only hard and fast rule is, if you have a closure, don't start its name with an underscore, there's no point to that :).

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130402/d1717425/attachment.htm 

From byrsa at sinkhole.me  Tue Apr  2 11:40:12 2013
From: byrsa at sinkhole.me (byr sa)
Date: Tue, 2 Apr 2013 08:40:12 -0700
Subject: [Twisted-Python] t.n.c.lookupAddress returns DNSNameError for
 hostnames w/ no A record
In-Reply-To: <20130402120319.24331.1753254230.divmod.xquotient.1@top>
References: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>
	<20130402120319.24331.1753254230.divmod.xquotient.1@top>
Message-ID: <CAJZAHMHeekXBS_QCHzrgJAihNU8sDcStmxAbCXrxm9vHLENo_w@mail.gmail.com>

On Tue, Apr 2, 2013 at 5:03 AM, <exarkun at twistedmatrix.com> wrote:

> Hi byrsa,
>
> The behavior you're describing does sound wrong.  However, I wasn't able
> to reproduce it locally.  Running your example, I get [] for
> megaupload.com, not an error.  Perhaps there is a tricky DNS server
> involved somewhere that is changing the response unexpectedly?  I
> suggest using something like tcpdump or wireshark to take a look at the
> actual traffic and perhaps produce a more deterministic demonstration of
> the problem.
>
>
You are correct! I was running the code on a Linux machine and the 'dig'
command on my Macbook. The answers were different. At least I know the code
is working!



> Regarding how you should detect certain errors, though, Failure just
> wraps normal exceptions, so you can use `isinstance` to check for them
> instead of checking by name.  Failure also provides some APIs that wrap
> up isinstance to provide some more commonly useful behavior - see
> Failure.check and Failure.trap.
>
>
'isinstance' was my initial thought, as well. I'll have to re-visit that.
Thanks for the pointer.



> And regarding determining error from a Message, you can use the rCode
> attribute to get the raw server response code as an integer.  The values
> and their meanings are defined in the DNS RFC and there are symbolic
> constants in twisted.names.dns - eg OK, ENAME, ESERVER, etc.
>
>
That doesn't sound too bad.


> Hope this helps,
> Jean-Paul
>
>
Your feedback has been immensely helpful, thanks a lot, Jean-Paul!

 byrsa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130402/af0415ff/attachment-0001.htm 

From glyph at twistedmatrix.com  Tue Apr  2 11:57:55 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 2 Apr 2013 08:57:55 -0700
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <CAE_Hg6YMSJ=k7+tQ0y5OXrx6wvQN4vqk0D4SBFVUJsFnnxg2fQ@mail.gmail.com>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
	<CAE_Hg6YMSJ=k7+tQ0y5OXrx6wvQN4vqk0D4SBFVUJsFnnxg2fQ@mail.gmail.com>
Message-ID: <6473320D-E4D1-485F-B251-BD8AD88E9DBB@twistedmatrix.com>

On Apr 2, 2013, at 4:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
> I use closures unless I use the same callback all the time.
> 

Hey Laurens,

On this list we prefer inline replies, not top-posting.  Please stop top-posting.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130402/c6df0256/attachment.htm 

From glyph at twistedmatrix.com  Tue Apr  2 19:04:21 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 2 Apr 2013 16:04:21 -0700
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
Message-ID: <EAE3E9B5-52C6-4CBA-8BFE-0F982D05A3E8@twistedmatrix.com>


On Apr 1, 2013, at 2:34 PM, Shell <cam.turn at gmail.com> wrote:

>>> I propose that IUsernamePassword should be split into at least two
>>> interfaces:
>>> 
>>> * IUsernamePassword, with only username and password, no methods,
>>> which allows password to be used in any way
>>> * Another interface, which only defines username and checkPassword() -
>>> possibly just a rename of IUsernameHashedPassword, which declares a
>>> similar interface
>>> 
>>> However, this has the issue that any credential checker which can use
>>> the second interface would also be able to use an IUsernamePassword
>>> here if there were an adapter between the two, but support for this
>>> would have to go into every credential checker which supports the
>>> second interface at present. Maybe the Portal could automatically
>>> search for adapters if it can't find a direct match?

These don't sound like bad ideas, but I think that if you're going to try to fix cred's built-in credentials, this is a pretty labor-intensive and not particularly rewarding path to go down.  Further refining the sad username+password credential interface will provide only some internal factoring improvements to existing types of authentication, at the cost of retrofitting all of them; not to mention dealing with broad-spectrum deprecations.

A better use of energy would be directed at getting a generic SASL credentials implementation; in other words, fixing this fairly ancient ticket: <https://twistedmatrix.com/trac/ticket/2015>.

A well-implemented SASL credentials interface will address these issues, as well as allowing for proper challenge-response authentication, digest auth, external auth mechanisms like TLS, et cetera.

Your idea about adapters is well taken though; having the portal do that when SASL-ified checkers are available seems reasonable, provided that it won't break anything.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130402/534a836b/attachment.htm 

From gbstack08 at gmail.com  Wed Apr  3 05:09:14 2013
From: gbstack08 at gmail.com (Todong Ma)
Date: Wed, 3 Apr 2013 17:09:14 +0800
Subject: [Twisted-Python] How to determine whether transport.write()
	succeed?
In-Reply-To: <63CABE5D-027D-41B4-B00C-2F96EE8F2F4C@twistedmatrix.com>
References: <CAHZXDMKnTsxmZNy7a6aq8jbP6ttpgbOfZwrP8uu6TNpqvfQgDA@mail.gmail.com>
	<97464120-5223-4F58-8BB8-B4C9713EC0D1@twistedmatrix.com>
	<CAHZXDMJy4Sd84=dFyKyKJqDPv=YZQ2a=B+UCL-F291d4jUs60g@mail.gmail.com>
	<63CABE5D-027D-41B4-B00C-2F96EE8F2F4C@twistedmatrix.com>
Message-ID: <CAHZXDMJKC-tAAW1YY5xV8E6cBjBir+6CDBtfrX0N_RqrPzZsvA@mail.gmail.com>

Ok, will try AMP

thank you very much!


On Mon, Apr 1, 2013 at 3:49 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Mar 31, 2013, at 6:09 PM, Todong Ma <gbstack08 at gmail.com> wrote:
>
> I wrote a simple client and server to get system information (e.g. cpu,
> memory, etc.)
> Client send 'cpu' to the server, then server will return cpu's information
> to client.
>
> Now client send multiple commands to server one time, e.g. cpu, memory,
> database, hard disk. But sometimes server couldn't receive some type
> information (e.g. cpu, database), and the missed information type is not
> fixed every time.
>
> So I want client to check whether ITransport.write() sends message to
> server successfully. If failed, client will resend the message to server.
>
>
> It's a good thing that write() doesn't convey information about send()
> succeeding so you can't trust it :).  You can't rely on send() succeeding
> to convey this information: send() can succeed but all that means is that
> data moved from your application into your kernel.
>
> What you want to do is to have an application-level acknowledgement of the
> data that was sent.
>
> AMP will provide this for you automatically; when the Deferred returned by
> callRemote fires, the other end has received and acknowledged the
> information.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/4d54bd6b/attachment.htm 

From therve at free.fr  Wed Apr  3 07:11:21 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Wed, 03 Apr 2013 13:11:21 +0200
Subject: [Twisted-Python] Twisted 13.0.0 released
Message-ID: <515C0E59.8070109@free.fr>

On behalf of Twisted Matrix Laboratories, I am pleased to announce the
release of Twisted 13.0.

Among the 70 tickets closed, we can see:

 * A new "Introduction to Deferreds" document that you can find here:
http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html

 * A fix in twisted.web.template where attributes were not quoted
properly, risking HTML injection.

 * Support for unicode domain names in twisted.names SRVConnector and
Name classes, after a 12.3 regression.

 * A workaround for platform limitations when trying to schedule events
far in the future.


For more information, see the NEWS file here:

 http://twistedmatrix.com/Releases/Twisted/13.0/NEWS.txt


Download it now from:

 http://pypi.python.org/packages/source/T/Twisted/Twisted-13.0.0.tar.bz2 or

 http://pypi.python.org/packages/2.7/T/Twisted/Twisted-13.0.0.win32-py2.7.msi


Thanks to the supporters of Twisted via the Software Freedom Conservancy
and to the many contributors for this release.

-- 
Thomas


From hs at ox.cx  Wed Apr  3 07:25:51 2013
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 3 Apr 2013 13:25:51 +0200
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
	<9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>
Message-ID: <95DF1962-F428-4200-A617-12BE7C95EA7A@ox.cx>


Am 02.04.2013 um 16:32 schrieb Glyph <glyph at twistedmatrix.com>:

>> My question can be simplified to: Closures yes or no?
> "As appropriate".

I had that coming. :)

[?]

Thanks for your verbose explanations!

>> If ?yes, closures?: Still using cb/eb prefixes? I don?t see them very often in recent examples. What about addBoth handlers?
> If you're using a closure, use a descriptive name.  The 'cb/eb' prefix notation is not particularly illustrative; I often use an english word like 'when'.  whenDisconnected, whenResponseReceived, etc.

So you?re cool with calling callbacks after the event that triggered? That would?ve been my second question but I didn?t want it to divert the discussion. I kind of like `onData` et al too but the Twisted examples rather shun it.

Thanks,
Hynek

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/8b9d05b3/attachment.htm 

From kevin.horn at gmail.com  Wed Apr  3 12:06:02 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 3 Apr 2013 11:06:02 -0500
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <EAE3E9B5-52C6-4CBA-8BFE-0F982D05A3E8@twistedmatrix.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
	<EAE3E9B5-52C6-4CBA-8BFE-0F982D05A3E8@twistedmatrix.com>
Message-ID: <CA+U=zK23bnSoZQpJ+j4bFZt30zsim8C3n_4FVcTWvmpeGpKeWQ@mail.gmail.com>

On Tue, Apr 2, 2013 at 6:04 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Apr 1, 2013, at 2:34 PM, Shell <cam.turn at gmail.com> wrote:
>
> I propose that IUsernamePassword should be split into at least two
> interfaces:
>
> * IUsernamePassword, with only username and password, no methods,
> which allows password to be used in any way
> * Another interface, which only defines username and checkPassword() -
> possibly just a rename of IUsernameHashedPassword, which declares a
> similar interface
>
> However, this has the issue that any credential checker which can use
> the second interface would also be able to use an IUsernamePassword
> here if there were an adapter between the two, but support for this
> would have to go into every credential checker which supports the
> second interface at present. Maybe the Portal could automatically
> search for adapters if it can't find a direct match?
>
>
> These don't sound like bad ideas, but I think that if you're going to try
> to fix cred's built-in credentials, this is a pretty labor-intensive and
> not particularly rewarding path to go down.  Further refining the sad
> username+password credential interface will provide only some internal
> factoring improvements to existing types of authentication, at the cost of
> retrofitting all of them; not to mention dealing with broad-spectrum
> deprecations.
>
> A better use of energy would be directed at getting a generic SASL
> credentials implementation; in other words, fixing this fairly ancient
> ticket: <https://twistedmatrix.com/trac/ticket/2015>.
>
>
For what it's worth, I worked on this back when, and while I don't have
time to work on it right now (and probably won't for at least a couple of
weeks), I'm happy to answer questions, if anybody has them.

Mostly what needed to happen was to merge the code in the branch with the
code in trunk which had diverged somewhat, and create some documentation on
how to use them.

My recollection was that integrating the results of that with specific
protocols (and possibly with Cred using a "higher level" interface) would
happen on a subsequent ticket, which is probably a good idea.


> A well-implemented SASL credentials interface will address these issues,
> as well as allowing for proper challenge-response authentication, digest
> auth, external auth mechanisms like TLS, et cetera.
>
> Your idea about adapters is well taken though; having the portal do that
> when SASL-ified checkers are available seems reasonable, provided that it
> won't break anything.
>
> -glyph
>
>

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/9096b2b6/attachment.htm 

From therve at free.fr  Wed Apr  3 12:14:36 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Wed, 03 Apr 2013 18:14:36 +0200
Subject: [Twisted-Python] Release questions
Message-ID: <515C556C.5030704@free.fr>

Hey everyone,

During the latest release process, I was left with several things to
clarify, so now that it's done I think it's time:

 * We started building wheels for Windows. What do we do with me, should
we upload it to pypi? What happens when users try them?

 * Glyph mumbled something about sha sums of the release files, instead
of md5. Should we pursue that? We may need to update some trac
integration code.

 * There are several issues with SVN and the release branch. First the
Quotes file conflicts almost all the time. But this time we also
reverted a branch from trunk during the release, and then merged it
again, which created all sorts of troubles. Maybe we (I) just need to
write some documentation about it. But if anyone has an idea on how to
improve our tools, they are welcome.

Thanks!

-- 
Thomas


From _ at lvh.cc  Wed Apr  3 12:36:06 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 3 Apr 2013 18:36:06 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <515C556C.5030704@free.fr>
References: <515C556C.5030704@free.fr>
Message-ID: <CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>

On Wed, Apr 3, 2013 at 6:14 PM, Thomas Herv? <therve at free.fr> wrote:

>  * Glyph mumbled something about sha sums of the release files, instead
> of md5. Should we pursue that? We may need to update some trac
> integration code.
>

Depends, what's the goal of the checksums? If it's "we want people to be
able to check that the tarball they have is in fact the release and not
something tainted by patches or malware", perhaps we either should have a
Twisted signing key, or have the release manager sign the release instead
(especially since we have a lot of signatures since PyCon :)).

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/e8799d8e/attachment.htm 

From byrsa at sinkhole.me  Wed Apr  3 12:51:42 2013
From: byrsa at sinkhole.me (byr sa)
Date: Wed, 3 Apr 2013 09:51:42 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <515C556C.5030704@free.fr>
References: <515C556C.5030704@free.fr>
Message-ID: <CAJZAHMEYSOdtccHzMNBcJLY57Ggy2_RCgwdwT-7gfdSHun=53Q@mail.gmail.com>

On Wed, Apr 3, 2013 at 9:14 AM, Thomas Herv? <therve at free.fr> wrote:

>  * Glyph mumbled something about sha sums of the release files, instead
> of md5. Should we pursue that? We may need to update some trac
> integration code.
>
>
+1 for SHA-256 or SHA-512. High profile collision attacks against MD5 have
happened (google: flame md5 collision). People are working to crack SHA1
right now, get ahead of the curve!

byrsa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/55719dfb/attachment.htm 

From exarkun at twistedmatrix.com  Wed Apr  3 16:51:41 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 03 Apr 2013 20:51:41 -0000
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
Message-ID: <20130403205141.16138.1648575723.divmod.xquotient.7@top>

On 04:36 pm, _ at lvh.cc wrote:
>On Wed, Apr 3, 2013 at 6:14 PM, Thomas Herv? <therve at free.fr> wrote:
>>  * Glyph mumbled something about sha sums of the release files, 
>>instead
>>of md5. Should we pursue that? We may need to update some trac
>>integration code.
>
>Depends, what's the goal of the checksums? If it's "we want people to 
>be
>able to check that the tarball they have is in fact the release and not
>something tainted by patches or malware", perhaps we either should have 
>a
>Twisted signing key, or have the release manager sign the release 
>instead
>(especially since we have a lot of signatures since PyCon :)).

The question relates to step 4 beneath "Cut the tarballs & installers":

http://twistedmatrix.com/trac/wiki/ReleaseProcess#Cutthetarballsinstallers

The checksums are intended to let people verify their download was 
neither accidentally corrupted nor intentionally tampered with.

I think the original motivation for signing some checksums instead of 
signing the release artifacts was something like:

  * gpg is a pain to use, signing one thing is nicer than signing 30 
things
  * lots of people do not care about cryptographic concerns here, and the 
checksum is good enough for them

Generating and signing a single document containing checksums of all the 
files is less work for the release manager and offers both possible 
audiences some value.

Perhaps it's a round-about way to achieve those goals, though.  Is there 
something simpler that we could do that wouldn't make releases harder or 
kick sand in the eyes of people just trying to make sure their ethernet 
card didn't hiccup?

Jean-Paul


From glyph at twistedmatrix.com  Wed Apr  3 17:36:28 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 14:36:28 -0700
Subject: [Twisted-Python] Twisted 13.0.0 released
In-Reply-To: <515C0E59.8070109@free.fr>
References: <515C0E59.8070109@free.fr>
Message-ID: <9F157DE3-726F-405C-AC11-94904D8D9380@twistedmatrix.com>

On Apr 3, 2013, at 4:11 AM, Thomas Herv? <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 13.0.

Thank you Thomas for managing yet another excellent release!

> Among the 70 tickets closed, we can see:
> 
> * A new "Introduction to Deferreds" document that you can find here:
> http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html
> 
> * A fix in twisted.web.template where attributes were not quoted
> properly, risking HTML injection.
> 
> * Support for unicode domain names in twisted.names SRVConnector and
> Name classes, after a 12.3 regression.
> 
> * A workaround for platform limitations when trying to schedule events
> far in the future.

This is a great list.  And we have even more great stuff in the pipeline.  Everybody get to work on 13.1 ;-).

-glyph




From glyph at twistedmatrix.com  Wed Apr  3 17:40:00 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 14:40:00 -0700
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <95DF1962-F428-4200-A617-12BE7C95EA7A@ox.cx>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
	<9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>
	<95DF1962-F428-4200-A617-12BE7C95EA7A@ox.cx>
Message-ID: <327E134D-D0C3-4C49-838A-007B47154260@twistedmatrix.com>

On Apr 3, 2013, at 4:25 AM, Hynek Schlawack <hs at ox.cx> wrote:

> So you?re cool with calling callbacks after the event that triggered? That would?ve been my second question but I didn?t want it to divert the discussion. I kind of like `onData` et al too but the Twisted examples rather shun it.

The examples are not always the best examples of every aspect of style :).  Perhaps people don't like 'on' because it reminds them of JavaScript too much.  (Not me, though, it reminds *me* of SuperCard?)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/c77b8ca7/attachment-0001.htm 

From glyph at twistedmatrix.com  Wed Apr  3 17:55:40 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 14:55:40 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <515C556C.5030704@free.fr>
References: <515C556C.5030704@free.fr>
Message-ID: <98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>


On Apr 3, 2013, at 9:14 AM, Thomas Herv? <therve at free.fr> wrote:

> Hey everyone,
> 
> During the latest release process, I was left with several things to
> clarify, so now that it's done I think it's time:
> 
> * We started building wheels for Windows. What do we do with me, should
> we upload it to pypi? What happens when users try them?

We should definitely upload them to PyPI.  Right now, users won't even get them unless they explicitly say "pip --use-wheel", so there's not much risk associated with it.  When users try them, they should just get a working installation instead of what happens now ;).

> * Glyph mumbled something about sha sums of the release files, instead
> of md5. Should we pursue that? We may need to update some trac
> integration code.

We should.  If we're signing them, it's for security.  If it's for security, we should use a secure hash.  Let's skip sha1 and go straight to sha512 or something.

> * There are several issues with SVN and the release branch. First the
> Quotes file conflicts almost all the time. But this time we also
> reverted a branch from trunk during the release, and then merged it
> again, which created all sorts of troubles. Maybe we (I) just need to
> write some documentation about it. But if anyone has an idea on how to
> improve our tools, they are welcome.

I think that as long as we're still using an old version of SVN, documentation is the only solution.  Also we should have fewer bugs that need reverting :).

-glyph



From _ at lvh.cc  Wed Apr  3 17:58:44 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 3 Apr 2013 23:58:44 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130403205141.16138.1648575723.divmod.xquotient.7@top>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
Message-ID: <CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>

On Wed, Apr 3, 2013 at 10:51 PM, <exarkun at twistedmatrix.com> wrote:

> The question relates to step 4 beneath "Cut the tarballs & installers":
>
> http://twistedmatrix.com/trac/wiki/ReleaseProcess#Cutthetarballsinstallers
>
> The checksums are intended to let people verify their download was
> neither accidentally corrupted nor intentionally tampered with.
>

Is the accidental corruption thing a real risk? I thought that was the
point of, say, TCP checksums :) Perhaps I'm just mistaken as to how often
his happens in the wild...


> I think the original motivation for signing some checksums instead of
> signing the release artifacts was something like:
>
>   * gpg is a pain to use, signing one thing is nicer than signing 30
> things
>   * lots of people do not care about cryptographic concerns here, and the
> checksum is good enough for them
>

Okay, fair enough. I'm a little worried about the "I don't care about the
cryptography" part, if a user is consciously choosing that, fine; but what
if they think they're doing something (verifying the integrity of the
Twisted release) when in fact not doing that at all? Perhaps that's even
rarer than the accidental corruption thing I so quickly dismissed just now,
though ;-)

As for gpg being a pain to use, `ls | xargs -n 1 gpg --sign` seems to work
for me provided you have gpg-agent (and have it configured to not need a
signature every time). Is gpg-agent something we don't want to require from
release managers?

Generating and signing a single document containing checksums of all the
> files is less work for the release manager and offers both possible
> audiences some value.
>
> Perhaps it's a round-about way to achieve those goals, though.  Is there
> something simpler that we could do that wouldn't make releases harder or
> kick sand in the eyes of people just trying to make sure their ethernet
> card didn't hiccup?
>

Probably not, the current thing seems pretty easy, right? If I understand
correctly, the only complaint is that "MD5 sucks". So if we upgrade that to
SHA-256/512 (SHA-3 would be nice, but plenty of people don't have access to
it yet on the command line...), that'd do it.

I don't think there is anything wrong with a hash sum file, I'm just
concerned that the reasons for *not* having or verifying signatures might
not be that great.


> Jean-Paul
>

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/c32de243/attachment.htm 

From _ at lvh.cc  Wed Apr  3 17:59:38 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 3 Apr 2013 23:59:38 +0200
Subject: [Twisted-Python] Twisted 13.0.0 released
In-Reply-To: <515C0E59.8070109@free.fr>
References: <515C0E59.8070109@free.fr>
Message-ID: <CAE_Hg6aNAgARRyUXLfAu+w6BhyShfOYKK=yAk6Tg08qqK3dyoQ@mail.gmail.com>

Yay! Thanks, Thomas and everyone who contributed to this release :)


On Wed, Apr 3, 2013 at 1:11 PM, Thomas Herv? <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 13.0.
>
> Among the 70 tickets closed, we can see:
>
>  * A new "Introduction to Deferreds" document that you can find here:
> http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html
>
>  * A fix in twisted.web.template where attributes were not quoted
> properly, risking HTML injection.
>
>  * Support for unicode domain names in twisted.names SRVConnector and
> Name classes, after a 12.3 regression.
>
>  * A workaround for platform limitations when trying to schedule events
> far in the future.
>
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/13.0/NEWS.txt
>
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-13.0.0.tar.bz2or
>
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-13.0.0.win32-py2.7.msi
>
>
> Thanks to the supporters of Twisted via the Software Freedom Conservancy
> and to the many contributors for this release.
>
> --
> Thomas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/d6f1b2b9/attachment.htm 

From glyph at twistedmatrix.com  Wed Apr  3 18:04:05 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 15:04:05 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130403205141.16138.1648575723.divmod.xquotient.7@top>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
Message-ID: <9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>


On Apr 3, 2013, at 1:51 PM, exarkun at twistedmatrix.com wrote:

> On 04:36 pm, _ at lvh.cc wrote:
>> On Wed, Apr 3, 2013 at 6:14 PM, Thomas Herv? <therve at free.fr> wrote:
>>> * Glyph mumbled something about sha sums of the release files, 
>>> instead
>>> of md5. Should we pursue that? We may need to update some trac
>>> integration code.
>> 
>> Depends, what's the goal of the checksums? If it's "we want people to 
>> be
>> able to check that the tarball they have is in fact the release and not
>> something tainted by patches or malware", perhaps we either should have 
>> a
>> Twisted signing key, or have the release manager sign the release 
>> instead
>> (especially since we have a lot of signatures since PyCon :)).

The release manager already _does_ sign something.  Since PyCon, we do have much better trust web integration, which is great, but that's not really relevant to this discussion, which is just about changing what we sign and how it gets signed.

> The question relates to step 4 beneath "Cut the tarballs & installers":
> 
> http://twistedmatrix.com/trac/wiki/ReleaseProcess#Cutthetarballsinstallers
> 
> The checksums are intended to let people verify their download was 
> neither accidentally corrupted nor intentionally tampered with.
> 
> I think the original motivation for signing some checksums instead of 
> signing the release artifacts was something like:
> 
>  * gpg is a pain to use, signing one thing is nicer than signing 30 
> things
>  * lots of people do not care about cryptographic concerns here, and the 
> checksum is good enough for them
> 
> Generating and signing a single document containing checksums of all the 
> files is less work for the release manager and offers both possible 
> audiences some value.
> 
> Perhaps it's a round-about way to achieve those goals, though.  Is there 
> something simpler that we could do that wouldn't make releases harder or 
> kick sand in the eyes of people just trying to make sure their ethernet 
> card didn't hiccup?

Security-wise, signing an actually-secure hash is not that much different than signing the tarballs themselves.  Signing MD5 hashes, on the other hand, is useless as a security measure.

I think we should carry on with signing the list of signatures for now, and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some theoretical benefits that come from signing the whole binary blob, but that's a much bigger change for a much smaller benefit.

If anyone does have an interest in us doing this, I think the first step would be to write up a clear explanation of how it should be done.

-glyph



From _ at lvh.cc  Wed Apr  3 18:23:29 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 4 Apr 2013 00:23:29 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
Message-ID: <CAE_Hg6ZikgGwOd1KbTfTerGpuO4tBnzM3WwESTTVPmuqwOnGxA@mail.gmail.com>

On Thu, Apr 4, 2013 at 12:04 AM, Glyph <glyph at twistedmatrix.com> wrote:

> The release manager already _does_ sign something.  Since PyCon, we do
> have much better trust web integration, which is great, but that's not
> really relevant to this discussion, which is just about changing what we
> sign and how it gets signed.
>

Yes, sorry; I thought there were just a bunch of hashes in a file
somewhere, and forgot they were signed.


> I think we should carry on with signing the list of signatures for now,
> and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some
> theoretical benefits that come from signing the whole binary blob, but
> that's a much bigger change for a much smaller benefit.
>
> If anyone does have an interest in us doing this, I think the first step
> would be to write up a clear explanation of how it should be done.
>

I agree. Can't we just replace "md5sum" in the command line with "shasum -a
512"? Do we need a grace period where we deliver both the MD5 and SHA512
sums? (Perhaps there's an automated system out there that relies on the MD5
version being available, since that's all we have now.)


> -glyph
>

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130404/aa5c9987/attachment.htm 

From glyph at twistedmatrix.com  Wed Apr  3 18:41:27 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 15:41:27 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6ZikgGwOd1KbTfTerGpuO4tBnzM3WwESTTVPmuqwOnGxA@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAE_Hg6ZikgGwOd1KbTfTerGpuO4tBnzM3WwESTTVPmuqwOnGxA@mail.gmail.com>
Message-ID: <2688D2AE-20FE-4AA8-BAB8-E2D7F6E68068@twistedmatrix.com>


On Apr 3, 2013, at 3:23 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Thu, Apr 4, 2013 at 12:04 AM, Glyph <glyph at twistedmatrix.com> wrote:
> The release manager already _does_ sign something.  Since PyCon, we do have much better trust web integration, which is great, but that's not really relevant to this discussion, which is just about changing what we sign and how it gets signed.
> 
> Yes, sorry; I thought there were just a bunch of hashes in a file somewhere, and forgot they were signed.
>  
> I think we should carry on with signing the list of signatures for now, and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some theoretical benefits that come from signing the whole binary blob, but that's a much bigger change for a much smaller benefit.
> 
> If anyone does have an interest in us doing this, I think the first step would be to write up a clear explanation of how it should be done.
> 
> I agree. Can't we just replace "md5sum" in the command line with "shasum -a 512"? Do we need a grace period where we deliver both the MD5 and SHA512 sums? (Perhaps there's an automated system out there that relies on the MD5 version being available, since that's all we have now.)

Signing both certainly doesn't create any problems.  I just have no idea what automation stuff parses this file as part of our _own_ release process.  I was hoping someone who knew how it worked could examine it and tell me.

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130403/0816fbb9/attachment-0001.htm 

From mithrandi at mithrandi.net  Wed Apr  3 18:39:09 2013
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 4 Apr 2013 00:39:09 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
Message-ID: <CAMcKhMQrRhE38UbEVNQo_KZpMkR-DpSbY5xnSufpKAza8xNu6w@mail.gmail.com>

On Wed, Apr 3, 2013 at 11:58 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Is the accidental corruption thing a real risk? I thought that was the
> point of, say, TCP checksums :) Perhaps I'm just mistaken as to how often
> his happens in the wild...
>

TCP checksums don't protect you against corruption occurring on the server
or client, only corruption by intermediary routers (and if they recalculate
the checksum, not even that). In practice, the most common form of
accidental corruption I've encountered is truncation; many HTTP user agents
don't report any kind of error when fewer bytes are received from the
server (due to prematurely terminated HTTP connection, bad proxy server,
etc.) than expected.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130404/d73f0f17/attachment.htm 

From p.mayers at imperial.ac.uk  Thu Apr  4 04:56:00 2013
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 04 Apr 2013 09:56:00 +0100
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
Message-ID: <515D4020.5070603@imperial.ac.uk>

On 04/03/2013 10:58 PM, Laurens Van Houtven wrote:

> Is the accidental corruption thing a real risk? I thought that was the
> point of, say, TCP checksums :) Perhaps I'm just mistaken as to how
> often his happens in the wild...

TCP checksums absolutely can and do fail to protect you from in-flight 
corruption of data. I've seen this on several occasions over links with 
non-zero BER (i.e. any real-world link). A two-bit error in a single 
packet will not be identified unless you're using HTTPS or SSH or 
similar, with strong transport-layer hashes.

FWIW I saw it with very, very large downloads but it can obviously 
happen with smaller data, just with a lower probability.


From therve at free.fr  Thu Apr  4 06:18:24 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Thu, 04 Apr 2013 12:18:24 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
Message-ID: <515D5370.1060000@free.fr>

Le 03/04/2013 23:55, Glyph a ?crit :
> 
> On Apr 3, 2013, at 9:14 AM, Thomas Herv? <therve at free.fr> wrote:
> 
>> Hey everyone,
>>
>> During the latest release process, I was left with several things to
>> clarify, so now that it's done I think it's time:
>>
>> * We started building wheels for Windows. What do we do with me, should
>> we upload it to pypi? What happens when users try them?
> 
> We should definitely upload them to PyPI.  Right now, users won't even get them unless they explicitly say "pip --use-wheel", so there's not much risk associated with it.  When users try them, they should just get a working installation instead of what happens now ;).

Cool, that's done, and the release process has been updated. If any
windows users want to check what happens, it'd be nice.


>> * Glyph mumbled something about sha sums of the release files, instead
>> of md5. Should we pursue that? We may need to update some trac
>> integration code.
> 
> We should.  If we're signing them, it's for security.  If it's for security, we should use a secure hash.  Let's skip sha1 and go straight to sha512 or something.

OK. I've opened http://pad.lv/1164403 for the required changes in our
tool. I'll update the release document once that's done.

>> * There are several issues with SVN and the release branch. First the
>> Quotes file conflicts almost all the time. But this time we also
>> reverted a branch from trunk during the release, and then merged it
>> again, which created all sorts of troubles. Maybe we (I) just need to
>> write some documentation about it. But if anyone has an idea on how to
>> improve our tools, they are welcome.
> 
> I think that as long as we're still using an old version of SVN, documentation is the only solution.  Also we should have fewer bugs that need reverting :).

I was afraid you were going to say that :). But I agree with you, I'll
write done some notes.

Thanks!

-- 
Thomas



From exarkun at twistedmatrix.com  Thu Apr  4 07:14:32 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 04 Apr 2013 11:14:32 -0000
Subject: [Twisted-Python] Release questions
In-Reply-To: <515D5370.1060000@free.fr>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
Message-ID: <20130404111432.16138.96017106.divmod.xquotient.11@top>

On 10:18 am, therve at free.fr wrote:
>Le 03/04/2013 23:55, Glyph a ?crit :
>>
>>On Apr 3, 2013, at 9:14 AM, Thomas Herv? <therve at free.fr> wrote:
>>>* Glyph mumbled something about sha sums of the release files, 
>>>instead
>>>of md5. Should we pursue that? We may need to update some trac
>>>integration code.
>>
>>We should.  If we're signing them, it's for security.  If it's for 
>>security, we should use a secure hash.  Let's skip sha1 and go 
>>straight to sha512 or something.
>
>OK. I've opened http://pad.lv/1164403 for the required changes in our
>tool. I'll update the release document once that's done.

Hm.  As far as the download/release trac macro goes, the purpose of this 
to to generate links with md5 hashes for easy_install and similar tools. 
It should continue to operate with md5, not be switched to sha.

And apparently this should be documented somewhere?

Jean-Paul


From therve at free.fr  Thu Apr  4 12:00:57 2013
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Thu, 04 Apr 2013 18:00:57 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130404111432.16138.96017106.divmod.xquotient.11@top>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
Message-ID: <515DA3B9.8070909@free.fr>

Le 04/04/2013 13:14, exarkun at twistedmatrix.com a ?crit :
> On 10:18 am, therve at free.fr wrote:
>> OK. I've opened http://pad.lv/1164403 for the required changes in our
>> tool. I'll update the release document once that's done.
> 
> Hm.  As far as the download/release trac macro goes, the purpose of this 
> to to generate links with md5 hashes for easy_install and similar tools. 
> It should continue to operate with md5, not be switched to sha.

I realized that while looking at the code more in depth. So should we
just publish an additional list of sha sums?

-- 
Thomas



From exarkun at twistedmatrix.com  Thu Apr  4 12:53:47 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 04 Apr 2013 16:53:47 -0000
Subject: [Twisted-Python] Release questions
In-Reply-To: <515DA3B9.8070909@free.fr>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
	<515DA3B9.8070909@free.fr>
Message-ID: <20130404165347.2793.1130726141.divmod.xquotient.11@top>

On 04:00 pm, therve at free.fr wrote:
>Le 04/04/2013 13:14, exarkun at twistedmatrix.com a ?crit :
>>On 10:18 am, therve at free.fr wrote:
>>>OK. I've opened http://pad.lv/1164403 for the required changes in our
>>>tool. I'll update the release document once that's done.
>>
>>Hm.  As far as the download/release trac macro goes, the purpose of 
>>this
>>to to generate links with md5 hashes for easy_install and similar 
>>tools.
>>It should continue to operate with md5, not be switched to sha.
>
>I realized that while looking at the code more in depth. So should we
>just publish an additional list of sha sums?

Sounds like a step in the right direction.

Jean-Paul


From kevin.horn at gmail.com  Thu Apr  4 13:36:23 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 4 Apr 2013 12:36:23 -0500
Subject: [Twisted-Python] Twisted 13.0.0 released
In-Reply-To: <515C0E59.8070109@free.fr>
References: <515C0E59.8070109@free.fr>
Message-ID: <CA+U=zK0gwNV6qYHJ=qUcumSoDkRk-HBDheqE_Z-5E=R0c3apfA@mail.gmail.com>

On Wed, Apr 3, 2013 at 6:11 AM, Thomas Herv? <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 13.0.
>
> Among the 70 tickets closed, we can see:
>
>  * A new "Introduction to Deferreds" document that you can find here:
> http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html
>
>  * A fix in twisted.web.template where attributes were not quoted
> properly, risking HTML injection.
>
>  * Support for unicode domain names in twisted.names SRVConnector and
> Name classes, after a 12.3 regression.
>
>  * A workaround for platform limitations when trying to schedule events
> far in the future.
>
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/13.0/NEWS.txt
>
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-13.0.0.tar.bz2or
>
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-13.0.0.win32-py2.7.msi
>
>
> Thanks to the supporters of Twisted via the Software Freedom Conservancy
> and to the many contributors for this release.
>
> --
> Thomas
>

Hurrah!  Well done, Thomas!



--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130404/2cd6feb4/attachment.htm 

From mithrandi at mithrandi.net  Thu Apr  4 14:15:41 2013
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 4 Apr 2013 20:15:41 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
Message-ID: <CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>

On Thu, Apr 4, 2013 at 12:04 AM, Glyph <glyph at twistedmatrix.com> wrote:

> Security-wise, signing an actually-secure hash is not that much different
> than signing the tarballs themselves.  Signing MD5 hashes, on the other
> hand, is useless as a security measure.
>
> I think we should carry on with signing the list of signatures for now,
> and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some
> theoretical benefits that come from signing the whole binary blob, but
> that's a much bigger change for a much smaller benefit.
>

In fact, I believe there is no such thing as "signing the whole binary
blob". When you use something like gpg --sign, what is actually signed with
a public key signature algorithm is a hash of the content anyway. Thus,
assuming you use the same hash algorithm as you would have instructed gpg
to use (I think the default is SHA512 these days), there isn't any real
difference between signing the content directly, and signing a hash of the
content.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130404/e8475efc/attachment.htm 

From glyph at twistedmatrix.com  Thu Apr  4 19:41:01 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 4 Apr 2013 16:41:01 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130404165347.2793.1130726141.divmod.xquotient.11@top>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
	<515DA3B9.8070909@free.fr>
	<20130404165347.2793.1130726141.divmod.xquotient.11@top>
Message-ID: <AEA49082-12E4-43BD-8BC6-C0BE28E8343F@twistedmatrix.com>


On Apr 4, 2013, at 9:53 AM, exarkun at twistedmatrix.com wrote:

> On 04:00 pm, therve at free.fr wrote:
>> Le 04/04/2013 13:14, exarkun at twistedmatrix.com a ?crit :
>>> On 10:18 am, therve at free.fr wrote:
>>>> OK. I've opened http://pad.lv/1164403 for the required changes in our
>>>> tool. I'll update the release document once that's done.
>>> 
>>> Hm.  As far as the download/release trac macro goes, the purpose of 
>>> this
>>> to to generate links with md5 hashes for easy_install and similar 
>>> tools.
>>> It should continue to operate with md5, not be switched to sha.
>> 
>> I realized that while looking at the code more in depth. So should we
>> just publish an additional list of sha sums?
> 
> Sounds like a step in the right direction.

Would it actually break the existing macro to just include the sha sums inside the same signature list?  Presumably it has some way of ignoring the GPG signature lines; could that just be modified to ignore the shasum lines as well?

I ask because it would be nice to avoid giving the release manager two things to sign.  However, if not; still definitely a step in the right direction.

-glyph

From glyph at twistedmatrix.com  Thu Apr  4 19:42:41 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 4 Apr 2013 16:42:41 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
Message-ID: <ACCF6728-BD7B-4641-8225-7C11AECAF29C@twistedmatrix.com>

On Apr 4, 2013, at 11:15 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:

> In fact, I believe there is no such thing as "signing the whole binary blob". When you use something like gpg --sign, what is actually signed with a public key signature algorithm is a hash of the content anyway. Thus, assuming you use the same hash algorithm as you would have instructed gpg to use (I think the default is SHA512 these days), there isn't any real difference between signing the content directly, and signing a hash of the content.

This is my understanding as well; however, when I'm making potentially security-critical claims I try to be circumspect in describing systems I don't fully understand :).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130404/fc88f8d9/attachment.htm 

From _ at lvh.cc  Thu Apr  4 20:32:51 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 5 Apr 2013 02:32:51 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
Message-ID: <CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>

On Thu, Apr 4, 2013 at 8:15 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> In fact, I believe there is no such thing as "signing the whole binary
> blob". When you use something like gpg --sign, what is actually signed with
> a public key signature algorithm is a hash of the content anyway. Thus,
> assuming you use the same hash algorithm as you would have instructed gpg
> to use (I think the default is SHA512 these days), there isn't any real
> difference between signing the content directly, and signing a hash of the
> content.
>
>
While you technically could sign the entire thing, yes, that is how (at
least DSA) works.

DSA, by default, used SHA-1; recent revisions support SHA-2. A few years
ago, GnuPG and several big users including Debian and Apache started
suggesting the move to RSA instead of DSA keys. The algorithms vary a bit
in speed and signature size, but the main reason was to allow newer hash
functions.

That said, I'm pretty sure GPG uses a newer revision of DSA: when I left
the defaults untouched near the end of 2012, it still seemed to prefer
DSA/ElGamal despite the news from a few years ago. IIRC, the first version
of the algorithm only allowed 1024 bit keys, whereas my DSA key is 3072.

Here's how you check what you support and in which preference:

===== SNIPPET FOLLOWS =====

~ ? gpg --edit-key E6D6AAAE
gpg (GnuPG) 1.4.13; Copyright (C) 2012 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

pub  3072D/E6D6AAAE  created: 2012-10-14  expires: 2016-10-14  usage: SCA
                     trust: ultimate      validity: ultimate
sub  3072g/7EF5843E  created: 2012-10-14  expires: 2016-10-14  usage: E
[ultimate] (1). Laurens Van Houtven <_ at lvh.io>
[ultimate] (2)  Laurens Van Houtven <lvh at twistedmatrix.com>
[ultimate] (3)  Laurens Van Houtven <_ at lvh.cc>

gpg> showpref
[ultimate] (1). Laurens Van Houtven <_ at lvh.io>
     Cipher: AES256, AES192, AES, CAST5, 3DES, IDEA
     Digest: SHA256, SHA1, SHA384, SHA512, SHA224
     Compression: ZLIB, BZIP2, ZIP, Uncompressed
     Features: MDC, Keyserver no-modify
[ultimate] (2)  Laurens Van Houtven <lvh at twistedmatrix.com>
     Cipher: AES256, AES192, AES, CAST5, 3DES
     Digest: SHA256, SHA1, SHA384, SHA512, SHA224
     Compression: ZLIB, BZIP2, ZIP, Uncompressed
     Features: MDC, Keyserver no-modify
[ultimate] (3)  Laurens Van Houtven <_ at lvh.cc>
     Cipher: AES256, AES192, AES, CAST5, 3DES, IDEA
     Digest: SHA256, SHA1, SHA384, SHA512, SHA224
     Compression: ZLIB, BZIP2, ZIP, Uncompressed
     Features: MDC, Keyserver no-modify

gpg>

===== SNIPPET ENDS =====

As you can see, the preferred hash is SHA-256. That's, as far as we know,
perfectly secure right now; IIUC the only reason SHA-512 isn't the default
is backwards compatibility. PGP (the proprietary version) and gpg have both
supported SHA-256 for *years and years* (and SHA-512 for years too, just
not as many of the years ;-))

Assuming your key is recent (but please check with showpref as I
demonstrated above), there isn't a problem with signing shasum files.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130405/d344d10f/attachment-0001.htm 

From therve at free.fr  Fri Apr  5 03:18:26 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 05 Apr 2013 09:18:26 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <AEA49082-12E4-43BD-8BC6-C0BE28E8343F@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
	<515DA3B9.8070909@free.fr>
	<20130404165347.2793.1130726141.divmod.xquotient.11@top>
	<AEA49082-12E4-43BD-8BC6-C0BE28E8343F@twistedmatrix.com>
Message-ID: <515E7AC2.6010702@free.fr>

Le 05/04/2013 01:41, Glyph a ?crit :
> 
> On Apr 4, 2013, at 9:53 AM, exarkun at twistedmatrix.com wrote:
> 
>> On 04:00 pm, therve at free.fr wrote:
>>> Le 04/04/2013 13:14, exarkun at twistedmatrix.com a ?crit :
>>>> On 10:18 am, therve at free.fr wrote:
>>>>> OK. I've opened http://pad.lv/1164403 for the required changes in our
>>>>> tool. I'll update the release document once that's done.
>>>>
>>>> Hm.  As far as the download/release trac macro goes, the purpose of 
>>>> this
>>>> to to generate links with md5 hashes for easy_install and similar 
>>>> tools.
>>>> It should continue to operate with md5, not be switched to sha.
>>>
>>> I realized that while looking at the code more in depth. So should we
>>> just publish an additional list of sha sums?
>>
>> Sounds like a step in the right direction.
> 
> Would it actually break the existing macro to just include the sha sums inside the same signature list?  Presumably it has some way of ignoring the GPG signature lines; could that just be modified to ignore the shasum lines as well?
> 
> I ask because it would be nice to avoid giving the release manager two things to sign.  However, if not; still definitely a step in the right direction.

Well, the file is called "md5sums.txt", so we'd need to rename it, and
probably add tests to the macro code to make sure it works with several
hashes. As a casual release manager, I don't mind signing and uploading
an additional file.

-- 
Thomas



From exarkun at twistedmatrix.com  Fri Apr  5 08:24:26 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 05 Apr 2013 12:24:26 -0000
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
Message-ID: <20130405122426.2793.363555816.divmod.xquotient.34@top>

On 28 Mar, 05:16 pm, jonathan at stoppani.name wrote:
>Hello everybody (with access to the Trac DB),
>
>I am currently doing my master thesis on the "analysis and management
>of change propagation in complex systems". I'm concentrating my
>efforts on software-based complex systems.
>
>As part of my analysis, I gather data from different domains, such as
>dependencies between modules of the source code, interactions between
>people (like, for example, this mailing list) and change requests (in
>this specific case, issues and tickets on an issue tracking system).
>
>A couple of weeks ago I asked on IRC if it would be possible to get
>the Trac data from twistedmatrix.com and I was told to write a script
>to dump the database by excluding sensitive information.
>
>The script is up for review and auditing over here:
>
>https://gist.github.com/GaretJax/5264941
>
>It can be run by saving it to a .py file or directly with the following 
>command:
>
>curl -s 
>https://gist.github.com/GaretJax/5264941/raw/c478c2c4ec39cdb4bc3ceeb05d57a31063a0a486 
>/dump-trac.py
>| python - <projenv> <outfile>
>
>(by replacing the two arguments: trac base directory and the output 
>file).
>
>There are no privacy concerns, as all data being analyzes is publicly
>available, either in the repository, in the mailing list archives or
>on twistedmatrix.com
>
>After being reviewed, can someone with access to the server please run
>it for me?

Hi Jonathan,

A couple questions about the script.  There are a few more tables in the 
database that I'm not sure will be interesting to you.

Do you mind if we also exclude:

    spamfilter_bayes
    spamfilter_log

Some of the tables are also basically an inefficient mirror of the 
subversion repository - revision, node_change.  Do you want this data as 
well?

Lastly, I have some reluctance to distribute the contents of the 
permission table.  I could probably be easily convinced to do so, but if 
you don't thing you'll actually use that data, I'd just as soon not.

Thanks!
Jean-Paul
>Thanks,
>Jonathan
>
>P.S.: If someone would like more details about the research, a draft
>of the project statement can be found here:
>https://www.dropbox.com/s/qu3jpxcd4wpat2i/statement-0-r0-2013-03-19.pdf
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From mithrandi at mithrandi.net  Fri Apr  5 09:12:43 2013
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 5 Apr 2013 15:12:43 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
	<CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
Message-ID: <CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>

On Fri, Apr 5, 2013 at 2:32 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> DSA, by default, used SHA-1; recent revisions support SHA-2. A few years
> ago, GnuPG and several big users including Debian and Apache started
> suggesting the move to RSA instead of DSA keys. The algorithms vary a bit
> in speed and signature size, but the main reason was to allow newer hash
> functions.
>
> That said, I'm pretty sure GPG uses a newer revision of DSA: when I left
> the defaults untouched near the end of 2012, it still seemed to prefer
> DSA/ElGamal despite the news from a few years ago. IIRC, the first version
> of the algorithm only allowed 1024 bit keys, whereas my DSA key is 3072.
>

DSA keys larger than 1024 bit(?) are "non-standard", but I think the bigger
issue is that DSA only supports 160-bit hashes; larger hashes will be
truncated, which means you don't gain much by using SHA-256/SHA-512/etc.
instead of SHA-1. DSA2 can handle larger hashes, but there's no real reason
to use DSA2 when RSA is so widespread. I think this is the reason the
defaults are changing (were changed?) in GnuPG.

I guess this is drifting off-topic though...

Here's how you check what you support and in which preference:
>

Thanks, much more useful than my vague speculation about defaults ;)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130405/536fda2f/attachment.htm 

From _ at lvh.cc  Fri Apr  5 10:47:23 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 5 Apr 2013 16:47:23 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
	<CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
	<CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>
Message-ID: <CAE_Hg6YAw9a7+sbeVsABoNXpmSsx5nbcpE3VnMM+vBG+Nj5VRQ@mail.gmail.com>

On Fri, Apr 5, 2013 at 3:12 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> DSA keys larger than 1024 bit(?) are "non-standard", but I think the
> bigger issue is that DSA only supports 160-bit hashes; larger hashes will
> be truncated, which means you don't gain much by using SHA-256/SHA-512/etc.
> instead of SHA-1. DSA2 can handle larger hashes, but there's no real reason
> to use DSA2 when RSA is so widespread. I think this is the reason the
> defaults are changing (were changed?) in GnuPG.
>

As far as I can tell, the defaults are currently beyond plain old DSA. It
appears this support has been in GnuPG since 2006 and in PGP since at least
then, I would guess that it's been commonly available since 2008 or so. I'm
not sure *why* it's DSA now, but I'm hoping the GPG people had good reasons
:) (I'm guessing it's "adoption was sufficient that by the time we
considered changing the default the reasons were no longer valid")

For DSA, GPG selects the first hash algorithm in your digest preference
list that is of size >= q. q is the hash size for your DSA key, which is
hardcoded into the key. The defaults in GPG are:

q = 160 for 1024 bit keys (i.e. plain old DSA)
q = 224 for 1024 to 2048 bit keys
q = 256 bit for 2048 to 3072 bit keys

You can use gpg --list-packets to view this, but the output is a little
obscure. It's easier to use pgpdump, which, for my key produces (truncated
output):

====
Public Key Packet(tag 6)(1198 bytes)
Ver 4 - new
Public key creation time - Sun Oct 14 13:56:19 UTC 2012
Pub alg - DSA Digital Signature Algorithm(pub 17)
DSA p(3072 bits) - ...
DSA q(256 bits) - ...
DSA g(3068 bits) - ...
DSA y(3071 bits) - ...
====

The important bit is the q value: 256. Combined with my digest algorithm
preferences, that means I'll get SHA-256 (first hash of sufficient size),
not truncated (since 256 == 256 ;)).

I guess this is drifting off-topic though...
>

Sure thing :D I wasn't trying to argue for any particular algorithm, but
simply that:

- if you have a recent key of maximum allowable size for whatever the
default was on your system, you're probably fine
- signing a bunch of SHA sums is fine, provided it's SHA-256 or better,
preferably SHA-512 (SHA-3 wouldn't be wrong, but isn't commonly supported
yet, and SHA-2 has withstood attempts to break it so far better than anyone
anticipated, so we're good).

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130405/f7f52209/attachment.htm 

From _ at lvh.cc  Fri Apr  5 10:57:21 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 5 Apr 2013 16:57:21 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6YAw9a7+sbeVsABoNXpmSsx5nbcpE3VnMM+vBG+Nj5VRQ@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
	<CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
	<CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>
	<CAE_Hg6YAw9a7+sbeVsABoNXpmSsx5nbcpE3VnMM+vBG+Nj5VRQ@mail.gmail.com>
Message-ID: <CAE_Hg6Z7w845eoUvSY4LkvqbQrhDB8s1Ckvf6ysi=E1VNTvVJA@mail.gmail.com>

On Fri, Apr 5, 2013 at 4:47 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> As far as I can tell, the defaults are currently beyond plain old DSA.
>

Whoops, that's not entirely correct, as exarkun was nice enough to point
out to me. Apparently, it's beyond plain old DSA *only if you ask for DSA*.
The default, at least for plain old GPG, is to get you RSA/RSA. I could've
sworn that the default the GPG Keychain Access tool thing from MacGPG was
DSA, because I consciously didn't pick anything in particular and somehow
ended up with a 3072 bit DSA key.

 The rest of my e-mail still counts though :)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130405/851d4bba/attachment.htm 

From exarkun at twistedmatrix.com  Sun Apr  7 00:05:25 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Apr 2013 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1365307525.69.827492752@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130407/d9d19018/attachment.htm 

From jonathan at stoppani.name  Mon Apr  8 14:13:38 2013
From: jonathan at stoppani.name (Jonathan Stoppani)
Date: Mon, 8 Apr 2013 14:13:38 -0400
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <20130405122426.2793.363555816.divmod.xquotient.34@top>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
	<20130405122426.2793.363555816.divmod.xquotient.34@top>
Message-ID: <CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>

Hi Exarkun,

Thanks for coming back with this.

No problem if we exclude the spam filter tables. I don't need them.

Concerning the svn tables, if they don't carry additional information
linking revisions to other (trac-specific metadata), I don't need them
either.

I can understand your concerns regarding the permissions table. I thought
they may be useful to help determine a role of a specific user in the
organization, if that is enough as argumentation perfect, otherwise we can
leave them out as they are not my primary source of data.

Cheers,
Jonathan




On Fri, Apr 5, 2013 at 8:24 AM, <exarkun at twistedmatrix.com> wrote:

> On 28 Mar, 05:16 pm, jonathan at stoppani.name wrote:
> >Hello everybody (with access to the Trac DB),
> >
> >I am currently doing my master thesis on the "analysis and management
> >of change propagation in complex systems". I'm concentrating my
> >efforts on software-based complex systems.
> >
> >As part of my analysis, I gather data from different domains, such as
> >dependencies between modules of the source code, interactions between
> >people (like, for example, this mailing list) and change requests (in
> >this specific case, issues and tickets on an issue tracking system).
> >
> >A couple of weeks ago I asked on IRC if it would be possible to get
> >the Trac data from twistedmatrix.com and I was told to write a script
> >to dump the database by excluding sensitive information.
> >
> >The script is up for review and auditing over here:
> >
> >https://gist.github.com/GaretJax/5264941
> >
> >It can be run by saving it to a .py file or directly with the following
> >command:
> >
> >curl -s
> >
> https://gist.github.com/GaretJax/5264941/raw/c478c2c4ec39cdb4bc3ceeb05d57a31063a0a486
> >/dump-trac.py
> >| python - <projenv> <outfile>
> >
> >(by replacing the two arguments: trac base directory and the output
> >file).
> >
> >There are no privacy concerns, as all data being analyzes is publicly
> >available, either in the repository, in the mailing list archives or
> >on twistedmatrix.com
> >
> >After being reviewed, can someone with access to the server please run
> >it for me?
>
> Hi Jonathan,
>
> A couple questions about the script.  There are a few more tables in the
> database that I'm not sure will be interesting to you.
>
> Do you mind if we also exclude:
>
>     spamfilter_bayes
>     spamfilter_log
>
> Some of the tables are also basically an inefficient mirror of the
> subversion repository - revision, node_change.  Do you want this data as
> well?
>
> Lastly, I have some reluctance to distribute the contents of the
> permission table.  I could probably be easily convinced to do so, but if
> you don't thing you'll actually use that data, I'd just as soon not.
>
> Thanks!
> Jean-Paul
> >Thanks,
> >Jonathan
> >
> >P.S.: If someone would like more details about the research, a draft
> >of the project statement can be found here:
> >https://www.dropbox.com/s/qu3jpxcd4wpat2i/statement-0-r0-2013-03-19.pdf
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130408/d27da528/attachment.htm 

From phil at ultimate.com  Mon Apr  8 15:34:10 2013
From: phil at ultimate.com (Phil Budne)
Date: Mon, 08 Apr 2013 15:34:10 -0400
Subject: [Twisted-Python] Implementing a new stream transport
Message-ID: <201304081934.r38JYAcw028079@ultimate.com>

I looked for, but haven't (yet) found any documentation on how
to implement a Twisted "transport"

For some testing and prototype work I'm doing I implemented the
proprietary TCP connection multiplexing protocol a customer of mine
uses as a Twisted Protocol and a transport for the "channels" that are
multiplexed inside the real TCP connection.

When I tried running a twisted.web.server.Site Protocol on my new
"channel" transport I found I was missing members and methods in the
transport class.

As a quick crock, I made my transport a subclass of
twisted.internet.tcp.Server, and got away with it, but I'd like to do
the right thing.

I'd be delighted to find out that mixins exist that would solve my
problem, but I'd be happy to know what interfaces I need to implement,
or even better where I find find documentation on how to implement a
new "transport", especially one that isn't file-descriptor based.

Thanks!
Phil


From _ at lvh.cc  Mon Apr  8 15:47:36 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 8 Apr 2013 21:47:36 +0200
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <201304081934.r38JYAcw028079@ultimate.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
Message-ID: <CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>

On Apr 8, 2013 9:44 PM, "Phil Budne" <phil at ultimate.com> wrote:
> As a quick crock, I made my transport a subclass of
> twisted.internet.tcp.Server, and got away with it, but I'd like to do
> the right thing.
>
> I'd be delighted to find out that mixins exist that would solve my
> problem, but I'd be happy to know what interfaces I need to implement,
> or even better where I find find documentation on how to implement a
> new "transport", especially one that isn't file-descriptor based.

Are you familiar with interfaces? ITransport sounds like what you want.

> Thanks!
> Phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130408/42450136/attachment.htm 

From grickert at coldstorage.com  Mon Apr  8 17:10:41 2013
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 8 Apr 2013 21:10:41 +0000
Subject: [Twisted-Python] Custom Scheduler
Message-ID: <25CB87184063F24C9BDD8C5E3566EA2522DC68E6@kit-ex01.coldstorage.com>

Some background:
I have implemented a "relative frequency scheduler".
Tasks added to it are run with frequencies relative to one another - basically, if tasks 1-3 have relative frequencies of 1,2, and 3 respectively, then task 2 is run 1/2  as often as task 1, and task 3 is run 1/3 as often.
The tasks are all generators, so each iteration of the scheduler yields one item from one of its scheduled generators.
The scheduler will also run tasks on both a periodic basis (ie.run this task every X other tasks), as well as running tasks on a timed basis (ie. every X seconds).

I'd like to use twisted in the same program to do some network I/O as well as database interaction.
I did a small test with adding a task that calls both: reactor.doIteration(0) and reactor.runUntilCurrent() to my scheduler, and that seems to run both the network I/O, and the database interactions.

I was wondering if there were other issues with this type of setup?
I can't find any examples online of using other schedulers with twisted.

I glanced briefly at t.i.task.Cooperator, but I don't really need deferreds for any of the CPU stuff, and I'm not really sure how I could replace its scheduler with a non-reactor based one.

Thanks for any insight,
    Gerrat


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130408/7a292604/attachment.htm 

From itamar at itamarst.org  Mon Apr  8 19:38:47 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 08 Apr 2013 19:38:47 -0400
Subject: [Twisted-Python] Custom Scheduler
In-Reply-To: <25CB87184063F24C9BDD8C5E3566EA2522DC68E6@kit-ex01.coldstorage.com>
References: <25CB87184063F24C9BDD8C5E3566EA2522DC68E6@kit-ex01.coldstorage.com>
Message-ID: <51635507.4070700@itamarst.org>

On 04/08/2013 05:10 PM, Gerrat Rickert wrote:
>
> Some background:
>
> I have implemented a ?relative frequency scheduler?.
>
> Tasks added to it are run with frequencies relative to one another ? 
> basically, if tasks 1-3 have relative frequencies of 1,2, and 3 
> respectively, then task 2 is run 1/2 as often as task 1, and task 3 is 
> run 1/3 as often.
>
> The tasks are all generators, so each iteration of the scheduler 
> yields one item from one of its scheduled generators.
>
> The scheduler will also run tasks on both a periodic basis (ie.run 
> this task every X other tasks), as well as running tasks on a timed 
> basis (ie. every X seconds).
>
> I?d like to use twisted in the same program to do some network I/O as 
> well as database interaction.
>
> I did a small test with adding a task that calls both: 
> reactor.doIteration(0) and reactor.runUntilCurrent() to my scheduler, 
> and that seems to run both the network I/O, and the database interactions.
>
> I was wondering if there were other issues with this type of setup?
>
> I can?t find any examples online of using other schedulers with twisted.
>
By its nature, you cannot use a different schedule with an event loop. 
The event loop must drive things. So you need to use reactor.callLater 
to drive this if you want to work with Twisted in the same process. (Or, 
use http://github.com/itamarst/crochet, soon to be released, but that's 
more of a last resort).

That being said, the interface can be implemented by things other than a 
reactor, e.g. twisted.internet.task.Clock which is mostly used for unit 
tests. So you can have code that works both with and without Twisted if 
you write your code against the callLater API 
(twisted.internet.interfaces.IReactorTime is the interface I think).

> I glanced briefly at t.i.task.Cooperator, but I don?t really need 
> deferreds for any of the CPU stuff, and I?m not really sure how I 
> could replace its scheduler with a non-reactor based one.
>
>
Cooperator is basically a class for driving things based off iterators, 
including generators, so it's actually fairly close to what you're doing.


From phil at ultimate.com  Mon Apr  8 23:58:04 2013
From: phil at ultimate.com (Phil Budne)
Date: Mon, 08 Apr 2013 23:58:04 -0400
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
Message-ID: <201304090358.r393w4l2039127@ultimate.com>

Laurens Van Houtven wrote:
> Are you familiar with interfaces? ITransport sounds like what you want.

Yes, and I implemented the ITransport methods.

The first bump was that I was missing registerProducer and
unregisterProducer, which are defined as part of IConsumer.  But after
that I had another problem (which I can't reproduce at this moment).

Phil


From sergun at gmail.com  Tue Apr  9 02:48:43 2013
From: sergun at gmail.com (Sergey Gerasimov)
Date: Tue, 9 Apr 2013 10:48:43 +0400
Subject: [Twisted-Python] Connection was closed cleanly.
Message-ID: <083901ce34ee$4804d4a0$d80e7de0$@gmail.com>

Hello to all!

 

I see in the log file many failures like:

[Broker, client Failure: twisted.spread.pb.PBConnectionLost: [Failure
instance: Traceback (failure with no frames): < class
'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly.]

 

All communications via PB use loopback in my program.

 

I don't see any unhandled exceptions..

 

What is reason of these errors? 

 

Sergey.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130409/4ee8e8bb/attachment.htm 

From _ at lvh.cc  Tue Apr  9 06:29:26 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 9 Apr 2013 12:29:26 +0200
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <201304090358.r393w4l2039127@ultimate.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
	<201304090358.r393w4l2039127@ultimate.com>
Message-ID: <CAE_Hg6Y8r4eJoU+BHs_PcfHyNx7R9=3TV2Fd_Ty+oBVb=8Th1w@mail.gmail.com>

On Tue, Apr 9, 2013 at 5:58 AM, Phil Budne <phil at ultimate.com> wrote:

> Yes, and I implemented the ITransport methods.
>
> The first bump was that I was missing registerProducer and
> unregisterProducer, which are defined as part of IConsumer.  But after
> that I had another problem (which I can't reproduce at this moment).
>

Huh. If the interface you're passing it to claims it needs an ITransport,
and an ITransport didn't work, that's a bug. The consumer/producer
interfaces are somewhat related to transports, but definitely distinct.

Could you paste some code that you tried illustrating the problem? (You
mentioned something involving Sites and Protocols, but a Site is a
ServerFactory.)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130409/3f780ffa/attachment.htm 

From itamar at itamarst.org  Tue Apr  9 07:49:06 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 09 Apr 2013 07:49:06 -0400
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <CAE_Hg6Y8r4eJoU+BHs_PcfHyNx7R9=3TV2Fd_Ty+oBVb=8Th1w@mail.gmail.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
	<201304090358.r393w4l2039127@ultimate.com>
	<CAE_Hg6Y8r4eJoU+BHs_PcfHyNx7R9=3TV2Fd_Ty+oBVb=8Th1w@mail.gmail.com>
Message-ID: <51640032.2060304@itamarst.org>

On 04/09/2013 06:29 AM, Laurens Van Houtven wrote:
> On Tue, Apr 9, 2013 at 5:58 AM, Phil Budne <phil at ultimate.com 
> <mailto:phil at ultimate.com>> wrote:
>
>     Yes, and I implemented the ITransport methods.
>
>     The first bump was that I was missing registerProducer and
>     unregisterProducer, which are defined as part of IConsumer.  But after
>     that I had another problem (which I can't reproduce at this moment).
>
>
> Huh. If the interface you're passing it to claims it needs an 
> ITransport, and an ITransport didn't work, that's a bug. The 
> consumer/producer interfaces are somewhat related to transports, but 
> definitely distinct.
I'm pretty sure the twisted.web server code uses the consumer API on the 
transport.



From _ at lvh.cc  Tue Apr  9 08:02:02 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 9 Apr 2013 14:02:02 +0200
Subject: [Twisted-Python] Why is this epytext docstring bad?
Message-ID: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>

Hi,

I'm trying to get twisted.positioning landed, but it's blocking on an
invalid epytext docstring. I've stared at this docstring a few times in the
past weeks, but that didn't help.

Failing buildbot log:
https://buildbot.twistedmatrix.com/builders/documentation/builds/3141/steps/api-documentation/logs/stdio

Docstring:
https://twistedmatrix.com/trac/browser/branches/positioning-3926-2/twisted/positioning/nmea.py?rev=37997#L256

If someone could tell me what's wrong with it, that'd be much appreciated :)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130409/933767d6/attachment.htm 

From exarkun at twistedmatrix.com  Tue Apr  9 09:00:57 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 09 Apr 2013 13:00:57 -0000
Subject: [Twisted-Python] Why is this epytext docstring bad?
In-Reply-To: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
References: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
Message-ID: <20130409130057.2793.1921039654.divmod.xquotient.86@top>

On 12:02 pm, _ at lvh.cc wrote:
>Hi,
>
>I'm trying to get twisted.positioning landed, but it's blocking on an
>invalid epytext docstring. I've stared at this docstring a few times in 
>the
>past weeks, but that didn't help.
>
>Failing buildbot log:
>https://buildbot.twistedmatrix.com/builders/documentation/builds/3141/steps 
>/api-documentation/logs/stdio
>
>Docstring:
>https://twistedmatrix.com/trac/browser/branches/positioning-3926-2/twisted/positioning/nmea.py?rev=37997#L256
>
>If someone could tell me what's wrong with it, that'd be much 
>appreciated :)

Here's how you can find out what's wrong with an epytext docstring:

    >>> from epydoc.markup.epytext import parse_docstring
    >>> from twisted.positioning.nmea import NMEASentence
    >>> errors = []
    >>> parse_docstring(NMEASentence.__doc__, errors)
    >>> errors
    [<ParseError on line 70>, <ParseError on line 73>, ...]
    >>> print errors[0]
    Line 70: Possible mal-formatted field item.
    >>>

In this particular case, I think a lot of the errors are caused by 
interleaving "fields" (epytext calls things that start with "@" 
"fields") with prose.  My understanding of the rules are that prose must 
come first and fields must come last.  The epytext documentation seems 
to bear this out:

    Fields must be placed at the end of the docstring, after the
    description of the object. Fields may be included in any order.

from http://epydoc.sourceforge.net/epytext.html

Jean-Paul


From indradhanush.gupta at gmail.com  Tue Apr  9 11:22:45 2013
From: indradhanush.gupta at gmail.com (Indradhanush Gupta)
Date: Tue, 9 Apr 2013 20:52:45 +0530
Subject: [Twisted-Python] Implementing Download Manger for GSoC 2013
Message-ID: <CAO=EPqi1QumTjpa1rERrj8yjzHyYktkfd1begT5O1qCg7PNT2A@mail.gmail.com>

Hello,

I was wondering that whether implementing a download manager could be an
interesting project idea this year at GSoC. Needless to say, it would have
pause/resume support along with multiple download at the same time.

Looking for feedback. Thanks!

-- 
Indradhanush Gupta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130409/1196bb4e/attachment.htm 

From _ at lvh.cc  Tue Apr  9 12:17:57 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 9 Apr 2013 18:17:57 +0200
Subject: [Twisted-Python] Why is this epytext docstring bad?
In-Reply-To: <20130409130057.2793.1921039654.divmod.xquotient.86@top>
References: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
	<20130409130057.2793.1921039654.divmod.xquotient.86@top>
Message-ID: <CAE_Hg6awa8kqR9BjmG878hmLiF9W9mO1y1tXnaqseqDqk0Vm=Q@mail.gmail.com>

Cool, thanks, I'll try to debug it this way.

Why doesn't the buildbot produce similar output? IIUC, pydoctor produces
similarly useful output, but the output from the buildbot wasnt' useful in
debugging this.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130409/7d107802/attachment.htm 

From exarkun at twistedmatrix.com  Tue Apr  9 13:09:30 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 09 Apr 2013 17:09:30 -0000
Subject: [Twisted-Python] Why is this epytext docstring bad?
In-Reply-To: <CAE_Hg6awa8kqR9BjmG878hmLiF9W9mO1y1tXnaqseqDqk0Vm=Q@mail.gmail.com>
References: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
	<20130409130057.2793.1921039654.divmod.xquotient.86@top>
	<CAE_Hg6awa8kqR9BjmG878hmLiF9W9mO1y1tXnaqseqDqk0Vm=Q@mail.gmail.com>
Message-ID: <20130409170930.2793.227571370.divmod.xquotient.87@top>

On 04:17 pm, _ at lvh.cc wrote:
>Cool, thanks, I'll try to debug it this way.
>
>Why doesn't the buildbot produce similar output? IIUC, pydoctor 
>produces
>similarly useful output, but the output from the buildbot wasnt' useful 
>in
>debugging this.

Perhaps the buildbot config should be changed to produce better output. 
:)

See http://launchpad.net/twisted-buildbot-configuration

Jean-Paul


From itamar at itamarst.org  Tue Apr  9 16:56:26 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 09 Apr 2013 16:56:26 -0400
Subject: [Twisted-Python] Implementing Download Manger for GSoC 2013
In-Reply-To: <CAO=EPqi1QumTjpa1rERrj8yjzHyYktkfd1begT5O1qCg7PNT2A@mail.gmail.com>
References: <CAO=EPqi1QumTjpa1rERrj8yjzHyYktkfd1begT5O1qCg7PNT2A@mail.gmail.com>
Message-ID: <5164807A.70504@itamarst.org>

On 04/09/2013 11:22 AM, Indradhanush Gupta wrote:
>
> Hello,
>
> I was wondering that whether implementing a download manager could be 
> an interesting project idea this year at GSoC. Needless to say, it 
> would have pause/resume support along with multiple download at the 
> same time.
>
In general we're trying to do GSoC projects that involve improving 
Twisted itself or the tools around it. Twisted itself doesn't need a 
download manager and so we wouldn't want that as a project. You can work 
on that on your own, of course. Are you interested in one of the 
projects we have posted?


From z858570636 at gmail.com  Wed Apr 10 12:20:05 2013
From: z858570636 at gmail.com (yuyan zhang)
Date: Thu, 11 Apr 2013 00:20:05 +0800
Subject: [Twisted-Python] use twisted get ftp's version
Message-ID: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>

i use nc command
bash-3.2# nc 83.85.85.238 21
220 (vsFTPd 2.0.5)
get the version of the ftp
but i want to use twisted to do this,and i don't know the function
can anyone help me?
Thank you very much.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130411/a7ae7b6b/attachment.htm 

From _ at lvh.cc  Wed Apr 10 13:57:33 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 10 Apr 2013 19:57:33 +0200
Subject: [Twisted-Python] use twisted get ftp's version
In-Reply-To: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
References: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
Message-ID: <CAE_Hg6aRNAXt8w-7aP+AC2Kd15=71LCjgXKkPM6_hpsydfPkYA@mail.gmail.com>

Are you only interested in the version, or would you also like to actually
do FTP?


On Wed, Apr 10, 2013 at 6:20 PM, yuyan zhang <z858570636 at gmail.com> wrote:

> i use nc command
> bash-3.2# nc 83.85.85.238 21
> 220 (vsFTPd 2.0.5)
> get the version of the ftp
> but i want to use twisted to do this,and i don't know the function
> can anyone help me?
> Thank you very much.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130410/197d08a1/attachment.htm 

From darkrho at gmail.com  Wed Apr 10 14:53:27 2013
From: darkrho at gmail.com (Rolando Espinoza La Fuente)
Date: Wed, 10 Apr 2013 14:53:27 -0400
Subject: [Twisted-Python] use twisted get ftp's version
In-Reply-To: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
References: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
Message-ID: <CAAeL7QAJD-siJJkfO+_gQicm6ciRQ8B2ArKEWsPwmXqkG3Te2A@mail.gmail.com>

On Wed, Apr 10, 2013 at 12:20 PM, yuyan zhang <z858570636 at gmail.com> wrote:
> i use nc command
> bash-3.2# nc 83.85.85.238 21
> 220 (vsFTPd 2.0.5)
> get the version of the ftp
> but i want to use twisted to do this,and i don't know the function
> can anyone help me?

Perhaps this is what you are looking for:

# getversion.py
import sys

from twisted.internet.protocol import ClientFactory
from twisted.protocols.basic import LineReceiver


class GetVersion(LineReceiver):
    def lineReceived(self, line):
        sys.stdout.write(line + '\n')
        # close after first line
        self.transport.loseConnection()


class MyFactory(ClientFactory):
    protocol = GetVersion
    clientConnectionLost = lambda *a: reactor.stop()
    clientConnectionFailed = lambda *a: reactor.stop()


if __name__ == '__main__':
    from twisted.internet import reactor
    host, port = '83.85.85.238', 21
    reactor.connectTCP(host, port, MyFactory())
    reactor.run()


From glyph at twistedmatrix.com  Thu Apr 11 02:43:01 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 11 Apr 2013 02:43:01 -0400
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
Message-ID: <6D681898-CDC1-4627-AB00-1517465441C7@twistedmatrix.com>


On Apr 8, 2013, at 3:47 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Apr 8, 2013 9:44 PM, "Phil Budne" <phil at ultimate.com> wrote:
> > As a quick crock, I made my transport a subclass of
> > twisted.internet.tcp.Server, and got away with it, but I'd like to do
> > the right thing.
> >
> > I'd be delighted to find out that mixins exist that would solve my
> > problem, but I'd be happy to know what interfaces I need to implement,
> > or even better where I find find documentation on how to implement a
> > new "transport", especially one that isn't file-descriptor based.
> 
> Are you familiar with interfaces? ITransport sounds like what you want.
> 
> 

Saying that ITransport is sufficient is unfortunately a bit simplistic.  I am not sure about our HTTP server, but many protocols rely on other interfaces provided by Server, including:

>>> from twisted.internet.tcp import Server
>>> from zope.interface import implementedBy
>>> from pprint import pprint
>>> from twisted.python.reflect import qual
>>> pprint([qual(x) for x in implementedBy(Server)])
['twisted.internet.interfaces.ITCPTransport',
 'twisted.internet.interfaces.ISystemHandle',
 'twisted.internet.interfaces.ITLSTransport',
 'twisted.internet.interfaces.IPushProducer',
 'twisted.internet.interfaces.IReadWriteDescriptor',
 'twisted.internet.interfaces.IConsumer',
 'twisted.internet.interfaces.ITransport',
 'twisted.internet.interfaces.IHalfCloseableDescriptor',
 'twisted.internet.interfaces.ILoggingContext']

It might be useful to note the possible presence of some of these in the documentation for servers and clients.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130411/eaf94513/attachment.htm 

From glyph at twistedmatrix.com  Thu Apr 11 02:48:29 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 11 Apr 2013 02:48:29 -0400
Subject: [Twisted-Python] Connection was closed cleanly.
In-Reply-To: <083901ce34ee$4804d4a0$d80e7de0$@gmail.com>
References: <083901ce34ee$4804d4a0$d80e7de0$@gmail.com>
Message-ID: <47F6A6B6-7C45-43F5-AD07-0550C282A808@twistedmatrix.com>


On Apr 9, 2013, at 2:48 AM, Sergey Gerasimov <sergun at gmail.com> wrote:

> Hello to all!
>  
> I see in the log file many failures like:
> [Broker, client Failure: twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): < class ?twisted.internet.error.ConnectionDone?>: Connection was closed cleanly.]
>  
> All communications via PB use loopback in my program.
>  
> I don?t see any unhandled exceptions..
>  
> What is reason of these errors?

My guess is that this means that you made a callRemote call, and the other end closed the connection for some reason before it shut down.  Maybe you have implemented a 'quit' command that calls loseConnection on the transport, which would make this happen almost all the time.

In order to actually say though, you'd have to attach a simple program that could reproduce this issue.  See <http://sscce.org>.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130411/623a45b2/attachment.htm 

From max.haarhaus at gmail.com  Thu Apr 11 13:55:33 2013
From: max.haarhaus at gmail.com (Max Haarhaus)
Date: Thu, 11 Apr 2013 13:55:33 -0400
Subject: [Twisted-Python] Summer of Code Interest
Message-ID: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>

Hi, I sent this message to your GSoC mailing list, but I'm not sure if
that's active yet or anything, so I figured I should send it here too.

My name is Max Haarhaus, and I'm a student at Stony Brook University in New
York. I'm interesting in working on Twisted for the Google Summer of Code.
I have experience in Python, including some web development using Google
App Engine, and I have taken classes in computer networks, so I have some
knowledge of internet tools and protocols.

I'd be interested in either of the projects currently listed on your page,
but it does say that there may be more ideas, and I'm open to anything.

Thanks for your time,

Max Haarhaus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130411/90bf8068/attachment.htm 

From itamar at itamarst.org  Thu Apr 11 16:16:01 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Apr 2013 16:16:01 -0400
Subject: [Twisted-Python] Summer of Code Interest
In-Reply-To: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
References: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
Message-ID: <51671A01.7030106@itamarst.org>

In case anyone is interested, twisted-gsoc is the correct list, we just 
had a few emails slip through the cracks. I've followed up with Max 
off-list.


From rachee.singh at gmail.com  Thu Apr 11 20:07:46 2013
From: rachee.singh at gmail.com (Rachee Singh)
Date: Fri, 12 Apr 2013 05:37:46 +0530
Subject: [Twisted-Python] Summer of Code Interest
In-Reply-To: <51671A01.7030106@itamarst.org>
References: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
	<51671A01.7030106@itamarst.org>
Message-ID: <CAPWmKCwc-NgPMvb5eKzbMtY0ns25uUwd1qix=f+G8CURUO=ghA@mail.gmail.com>

Hi,

Is this list the correct place for the applicants of Outreach Program for
Women?

Thanks,
Rachee Singh


On Fri, Apr 12, 2013 at 1:46 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> In case anyone is interested, twisted-gsoc is the correct list, we just
> had a few emails slip through the cracks. I've followed up with Max
> off-list.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130412/40d2971a/attachment.htm 

From itamar at itamarst.org  Thu Apr 11 21:29:12 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Apr 2013 21:29:12 -0400
Subject: [Twisted-Python] Summer of Code Interest
In-Reply-To: <CAPWmKCwc-NgPMvb5eKzbMtY0ns25uUwd1qix=f+G8CURUO=ghA@mail.gmail.com>
References: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
	<51671A01.7030106@itamarst.org>
	<CAPWmKCwc-NgPMvb5eKzbMtY0ns25uUwd1qix=f+G8CURUO=ghA@mail.gmail.com>
Message-ID: <51676368.8010805@itamarst.org>

On 04/11/2013 08:07 PM, Rachee Singh wrote:
> Hi,
>
> Is this list the correct place for the applicants of Outreach Program 
> for Women?
>
Please post to twisted-gsoc at twistedmatrix.com if you're interested in 
either that or the Google Summer of Code.

-Itamar


From ewing.rj at gmail.com  Fri Apr 12 02:43:34 2013
From: ewing.rj at gmail.com (RJ Ewing)
Date: Thu, 11 Apr 2013 23:43:34 -0700
Subject: [Twisted-Python] Deprecated Modules
Message-ID: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>

If I import a deprecated module and then run the test-suite should I be
seeing an error? I think that I should be seeing an error, but I am not. I
am not sure if I am doing something wrong or if my local environment is
weird.

Thanks,
RJ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130411/cb19dc9b/attachment.htm 

From itamar at itamarst.org  Fri Apr 12 07:03:52 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 12 Apr 2013 07:03:52 -0400
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
Message-ID: <5167EA18.3080102@itamarst.org>

On 04/12/2013 02:43 AM, RJ Ewing wrote:
> If I import a deprecated module and then run the test-suite should I 
> be seeing an error? I think that I should be seeing an error, but I am 
> not. I am not sure if I am doing something wrong or if my local 
> environment is weird.
>
You should see a deprecation warning. If your Python command line 
includes certain options, or your set certain env variables 
(PYTHONWARNINGS) this might be converted into an exception.


From ralphm at ik.nu  Fri Apr 12 07:14:24 2013
From: ralphm at ik.nu (Ralph Meijer)
Date: Fri, 12 Apr 2013 13:14:24 +0200
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
Message-ID: <5167EC90.7040707@ik.nu>

On 2013-04-12 08:43, RJ Ewing wrote:
> If I import a deprecated module and then run the test-suite should I be
> seeing an error? I think that I should be seeing an error, but I am not.
> I am not sure if I am doing something wrong or if my local environment
> is weird.

Twisted should always emit DeprecationWarnings for such uses. However, 
since Python 2.7, these are suppressed by default and you need to 
specifically enable the 'default' setting to see them again. Yeah.

See 
<http://docs.python.org/dev/whatsnew/2.7.html#the-future-for-python-2-x> 
for details.

-- 
ralphm


From exarkun at twistedmatrix.com  Fri Apr 12 08:08:28 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 12 Apr 2013 12:08:28 -0000
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <5167EC90.7040707@ik.nu>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
	<5167EC90.7040707@ik.nu>
Message-ID: <20130412120828.2793.328338921.divmod.xquotient.107@top>

On 11:14 am, ralphm at ik.nu wrote:
>On 2013-04-12 08:43, RJ Ewing wrote:
>>If I import a deprecated module and then run the test-suite should I 
>>be
>>seeing an error? I think that I should be seeing an error, but I am 
>>not.
>>I am not sure if I am doing something wrong or if my local environment
>>is weird.
>
>Twisted should always emit DeprecationWarnings for such uses. However,
>since Python 2.7, these are suppressed by default and you need to
>specifically enable the 'default' setting to see them again. Yeah.
>
>See
><http://docs.python.org/dev/whatsnew/2.7.html#the-future-for- 
>python-2-x>
>for details.

This is an unfortunate bug, though.  See <http://tm.tl/6348>.

Jean-Paul


From ewing.rj at gmail.com  Fri Apr 12 20:07:51 2013
From: ewing.rj at gmail.com (RJ Ewing)
Date: Fri, 12 Apr 2013 17:07:51 -0700
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <20130412120828.2793.328338921.divmod.xquotient.107@top>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
	<5167EC90.7040707@ik.nu>
	<20130412120828.2793.328338921.divmod.xquotient.107@top>
Message-ID: <CAOSSsV0d+_J8x0ERs2CzXhCBEOZac0SLues_=FpUUUJ1GYL_aA@mail.gmail.com>

Thank you. That was the problem.

RJ


On Fri, Apr 12, 2013 at 5:08 AM, <exarkun at twistedmatrix.com> wrote:

> On 11:14 am, ralphm at ik.nu wrote:
> >On 2013-04-12 08:43, RJ Ewing wrote:
> >>If I import a deprecated module and then run the test-suite should I
> >>be
> >>seeing an error? I think that I should be seeing an error, but I am
> >>not.
> >>I am not sure if I am doing something wrong or if my local environment
> >>is weird.
> >
> >Twisted should always emit DeprecationWarnings for such uses. However,
> >since Python 2.7, these are suppressed by default and you need to
> >specifically enable the 'default' setting to see them again. Yeah.
> >
> >See
> ><http://docs.python.org/dev/whatsnew/2.7.html#the-future-for-
> >python-2-x>
> >for details.
>
> This is an unfortunate bug, though.  See <http://tm.tl/6348>.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130412/1c657136/attachment.htm 

From pallavikumarijha at gmail.com  Sat Apr 13 08:17:58 2013
From: pallavikumarijha at gmail.com (Pallavi Jha)
Date: Sat, 13 Apr 2013 17:47:58 +0530
Subject: [Twisted-Python] Guidance for OPW 2013
Message-ID: <CACtyrE1sm03G8uxrKW12xS34wCdmhUm+J38Q_q7j8naKDFv+NA@mail.gmail.com>

Hi Everyone,

I am Pallavi Kumari Jha. I want to apply for OutreachProgramForWomen 2013
this year and am looking for a good project. I have good knowledge of
Python, pytest, unit testing framework, code coverage.I came across the
idea mentioned in "Goal #2: Test suite cleanup". I would like to work on
this project. Please guide me with your valuable suggestions on how to get
started with it.

Thanks,
Pallavi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130413/876fdcf8/attachment.htm 

From exarkun at twistedmatrix.com  Sun Apr 14 00:05:25 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Apr 2013 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1365912325.55.1777761592@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130414/15c13346/attachment.htm 

From indradhanush.gupta at gmail.com  Sun Apr 14 02:41:50 2013
From: indradhanush.gupta at gmail.com (Indradhanush Gupta)
Date: Sun, 14 Apr 2013 12:11:50 +0530
Subject: [Twisted-Python] GSoC 13 Project Idea : Rewriting
	twisted.internet.stdio to use the reactor
Message-ID: <CAO=EPqir47sDRdi--U_NhbBa7bsnmh-TomXUoTVdpNWL_545Mg@mail.gmail.com>

HI,

I just went through twisted.internet.stdio and I see it doesnt use the
reactor. Its mentioned as a future plan along with support for stderr.
Could it be a viable GSoC project this year? If so, I would enjoy working
on it.

Indradhanush Gupta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130414/f7559f11/attachment.htm 

From itamar at itamarst.org  Sun Apr 14 08:18:25 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Apr 2013 08:18:25 -0400
Subject: [Twisted-Python] GSoC 13 Project Idea : Rewriting
 twisted.internet.stdio to use the reactor
In-Reply-To: <CAO=EPqir47sDRdi--U_NhbBa7bsnmh-TomXUoTVdpNWL_545Mg@mail.gmail.com>
References: <CAO=EPqir47sDRdi--U_NhbBa7bsnmh-TomXUoTVdpNWL_545Mg@mail.gmail.com>
Message-ID: <516A9E91.9080506@itamarst.org>

On 04/14/2013 02:41 AM, Indradhanush Gupta wrote:
>
> HI,
>
> I just went through twisted.internet.stdio and I see it doesnt use the 
> reactor. Its mentioned as a future plan along with support for stderr. 
> Could it be a viable GSoC project this year? If so, I would enjoy 
> working on it.
>
twisted.internet.stdio does actually use the reactor, it's just implicit 
rather than being explicitly passed in. Neither of those features are 
probably big enough for a GSoC project.


From rodrigc at crodrigues.org  Mon Apr 15 04:47:34 2013
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 15 Apr 2013 01:47:34 -0700
Subject: [Twisted-Python] Coursera course on network design patterns
Message-ID: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>

Hi,

In this posting:
http://twistedmatrix.com/pipermail/twisted-python/2012-November/026324.html

I mentioned that Professor. Douglas C. Schmidt is teaching a Coursera
course:
"Pattern-Oriented Software Architectures for Concurrent and Networked
Software"
This course is going on right now:

https://www.coursera.org/course/posa

There are a lot of very good video lectures in this course.
There are also several programming assignments.

Students are allowed to implement the programming assignments in whatever
language they want.  People are submitting assignments
in Java, C++, Python, Ruby, Scala.

For the students who wish to program in Python, I have been
pushing students to look at Twisted on the course discussion board.

I have also asked Prof. Schmidt to take assignment 3 for the course,
and add special wording for Twisted.   The assignment 3 targeted
at Twisted is here:

https://class.coursera.org/posa-001/human_grading/view/courses/970268/assessments/35/submissions

If there are some people in the Twisted community with some free time
who can help,  can you please join the course
(it is free) and provide feedback on the wording of the assignment?
It would help to correct any mistakes, and point people to the correct
sections of the Twisted documentation.
Since you need to join the class to see the wording of the assignment,
I am attaching it here.

This is a good opportunity to promote Twisted to new students who want
to use Python, but also learn how to implement network design patterns

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130415/64772f35/attachment.htm 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: posa_assignment3_twisted_python.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130415/64772f35/attachment.txt 

From itamar at itamarst.org  Mon Apr 15 07:53:40 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 15 Apr 2013 07:53:40 -0400
Subject: [Twisted-Python] Coursera course on network design patterns
In-Reply-To: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>
References: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>
Message-ID: <516BEA44.7030400@itamarst.org>

On 04/15/2013 04:47 AM, Craig Rodrigues wrote:
> I have also asked Prof. Schmidt to take assignment 3 for the course,
> and add special wording for Twisted.   The assignment 3 targeted
> at Twisted is here:
>
> https://class.coursera.org/posa-001/human_grading/view/courses/970268/assessments/35/submissions
>
> If there are some people in the Twisted community with some free time
> who can help,  can you please join the course
> (it is free) and provide feedback on the wording of the assignment?
> It would help to correct any mistakes, and point people to the correct
> sections of the Twisted documentation.
> Since you need to join the class to see the wording of the assignment,
> I am attaching it here.
>
Cool! I would suggest linking to 
http://twistedmatrix.com/documents/current/core/howto/servers.html 
rather than to IReactorTCP.


From jiabao.foss at gmail.com  Tue Apr 16 09:16:39 2013
From: jiabao.foss at gmail.com (Jiabao Wu)
Date: Tue, 16 Apr 2013 23:16:39 +1000
Subject: [Twisted-Python]  GSoC and OPW Participation
Message-ID: <CAF9aoD=VKpkSg4=ovNF=Zpw0LghYXCRRHZA1XQU2cyBnfqO42A@mail.gmail.com>

Hi,

I am Jiabao Wu, 1st year postgraduate student in Australian National
University. At the end of last year, I graduated in B.IT in ANU with double
major of Software Development and IT in New Media Arts.

I am currently studying a course of free and opensource software
development. This has boosted my passion to contribute to the FOSS
community. I am going to apply GSoC and OPW. In the mean time, I would like
to start contribute to Twisted.

The "Maintain a sub-project" sounds really fun to me and seems within my
capability. "Rewrite twisted.web.client.getPage using Agent" also looks
cool for me. Could you give me some suggestions which sub-project is a good
choice for starting?

Cheers,
Jiabao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130416/adf06cac/attachment.htm 

From jonathan at stoppani.name  Tue Apr 16 16:11:01 2013
From: jonathan at stoppani.name (Jonathan Stoppani)
Date: Tue, 16 Apr 2013 16:11:01 -0400
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
	<20130405122426.2793.363555816.divmod.xquotient.34@top>
	<CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>
Message-ID: <CAFzCN1s6X04ktVMEW-W+_Wtdy447jNiM+ivzPUdp44TjPMsFMA@mail.gmail.com>

Gentle reminder. ;-)


On Mon, Apr 8, 2013 at 2:13 PM, Jonathan Stoppani <jonathan at stoppani.name>wrote:

> Hi Exarkun,
>
> Thanks for coming back with this.
>
> No problem if we exclude the spam filter tables. I don't need them.
>
> Concerning the svn tables, if they don't carry additional information
> linking revisions to other (trac-specific metadata), I don't need them
> either.
>
> I can understand your concerns regarding the permissions table. I thought
> they may be useful to help determine a role of a specific user in the
> organization, if that is enough as argumentation perfect, otherwise we can
> leave them out as they are not my primary source of data.
>
> Cheers,
> Jonathan
>
>
>
>
> On Fri, Apr 5, 2013 at 8:24 AM, <exarkun at twistedmatrix.com> wrote:
>
>> On 28 Mar, 05:16 pm, jonathan at stoppani.name wrote:
>> >Hello everybody (with access to the Trac DB),
>> >
>> >I am currently doing my master thesis on the "analysis and management
>> >of change propagation in complex systems". I'm concentrating my
>> >efforts on software-based complex systems.
>> >
>> >As part of my analysis, I gather data from different domains, such as
>> >dependencies between modules of the source code, interactions between
>> >people (like, for example, this mailing list) and change requests (in
>> >this specific case, issues and tickets on an issue tracking system).
>> >
>> >A couple of weeks ago I asked on IRC if it would be possible to get
>> >the Trac data from twistedmatrix.com and I was told to write a script
>> >to dump the database by excluding sensitive information.
>> >
>> >The script is up for review and auditing over here:
>> >
>> >https://gist.github.com/GaretJax/5264941
>> >
>> >It can be run by saving it to a .py file or directly with the following
>> >command:
>> >
>> >curl -s
>> >
>> https://gist.github.com/GaretJax/5264941/raw/c478c2c4ec39cdb4bc3ceeb05d57a31063a0a486
>> >/dump-trac.py
>> >| python - <projenv> <outfile>
>> >
>> >(by replacing the two arguments: trac base directory and the output
>> >file).
>> >
>> >There are no privacy concerns, as all data being analyzes is publicly
>> >available, either in the repository, in the mailing list archives or
>> >on twistedmatrix.com
>> >
>> >After being reviewed, can someone with access to the server please run
>> >it for me?
>>
>> Hi Jonathan,
>>
>> A couple questions about the script.  There are a few more tables in the
>> database that I'm not sure will be interesting to you.
>>
>> Do you mind if we also exclude:
>>
>>     spamfilter_bayes
>>     spamfilter_log
>>
>> Some of the tables are also basically an inefficient mirror of the
>> subversion repository - revision, node_change.  Do you want this data as
>> well?
>>
>> Lastly, I have some reluctance to distribute the contents of the
>> permission table.  I could probably be easily convinced to do so, but if
>> you don't thing you'll actually use that data, I'd just as soon not.
>>
>> Thanks!
>> Jean-Paul
>> >Thanks,
>> >Jonathan
>> >
>> >P.S.: If someone would like more details about the research, a draft
>> >of the project statement can be found here:
>> >https://www.dropbox.com/s/qu3jpxcd4wpat2i/statement-0-r0-2013-03-19.pdf
>> >
>> >_______________________________________________
>> >Twisted-Python mailing list
>> >Twisted-Python at twistedmatrix.com
>> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130416/ea9ff5c9/attachment.htm 

From itamar at itamarst.org  Tue Apr 16 16:33:24 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 16 Apr 2013 16:33:24 -0400
Subject: [Twisted-Python] GSoC and OPW Participation
In-Reply-To: <CAF9aoD=VKpkSg4=ovNF=Zpw0LghYXCRRHZA1XQU2cyBnfqO42A@mail.gmail.com>
References: <CAF9aoD=VKpkSg4=ovNF=Zpw0LghYXCRRHZA1XQU2cyBnfqO42A@mail.gmail.com>
Message-ID: <516DB594.7060108@itamarst.org>

On 04/16/2013 09:16 AM, Jiabao Wu wrote:
> Hi,
>
> I am Jiabao Wu, 1st year postgraduate student in Australian National 
> University. At the end of last year, I graduated in B.IT <http://B.IT> 
> in ANU with double major of Software Development and IT in New Media 
> Arts.
>
> I am currently studying a course of free and opensource software 
> development. This has boosted my passion to contribute to the FOSS 
> community. I am going to apply GSoC and OPW. In the mean time, I would 
> like to start contribute to Twisted.
>
> The "Maintain a sub-project" sounds really fun to me and seems within 
> my capability. "Rewrite twisted.web.client.getPage using Agent" also 
> looks cool for me. Could you give me some suggestions which 
> sub-project is a good choice for starting?
>

Glad you're interested! Please email twisted-gsoc at twistedmatrix.com so 
we can track you.

To get going with your application, you should read 
https://twistedmatrix.com/trac/wiki/GSoC2013#GettingStartedwithTwistedDevelopment, 
and then pick a first ticket to work on - 
https://bit.ly/easy-twisted-tickets is a good starting point. Tickets in 
this category that have review comments and haven't been touched for a 
few months are fine, and let you know what to do next. On the other 
hand, if someone else assigned the ticket to themselves recently, you 
shouldn't work on it to prevent duplicate work.

Let us know once you've submitted a ticket, or if you have any questions 
or need any help.

Regards,
-Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130416/9253a50a/attachment.htm 

From exarkun at twistedmatrix.com  Tue Apr 16 20:00:21 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 17 Apr 2013 00:00:21 -0000
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <CAFzCN1s6X04ktVMEW-W+_Wtdy447jNiM+ivzPUdp44TjPMsFMA@mail.gmail.com>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
	<20130405122426.2793.363555816.divmod.xquotient.34@top>
	<CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>
	<CAFzCN1s6X04ktVMEW-W+_Wtdy447jNiM+ivzPUdp44TjPMsFMA@mail.gmail.com>
Message-ID: <20130417000021.2793.1554838720.divmod.xquotient.125@top>

On 16 Apr, 08:11 pm, jonathan at stoppani.name wrote:
>Gentle reminder. ;-)

Thanks. :)  You should get an email from me off-list shortly.

Jean-Paul


From itamar at itamarst.org  Wed Apr 17 20:55:39 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 17 Apr 2013 20:55:39 -0400
Subject: [Twisted-Python] Please help with Google Summer of Code and
	Outreach Program for Women
Message-ID: <516F448B.8020804@itamarst.org>

We've got lots of interested candidates for GSoC and OPW, and could use 
the community's help.

 1. If you know of any easy tickets, please add the easy keyword to them.
 2. Please review tickets that have the easy keyword, they are likely
    from potential candidates, and Tom Prince has some urgent stuff
    taking most of his time.
 3. If you have any project ideas, please email
    twisted-gsoc at twistedmatrix.com

Thanks!



From itamar at futurefoundries.com  Thu Apr 18 11:55:12 2013
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 18 Apr 2013 11:55:12 -0400
Subject: [Twisted-Python] Job posting: Technical Team Lead at CritSend
Message-ID: <CAOp9P3oj1fe70CBVLoNiYbFioLAOv3Qw90gYZd0jdv8ZtbTaEA@mail.gmail.com>

One of my consulting clients is hiring a team lead; lots of Twisted
development, as well as Django:


https://docs.google.com/a/futurefoundries.com/document/d/1dPgt3fc_3-7bS6Wr_YZO6nEaIFrdFNqQ653wUgD3MNY/edit

Regards,
 -Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130418/2bc9f221/attachment.htm 

From carlos.sotelo.pinto at gmail.com  Thu Apr 18 20:33:49 2013
From: carlos.sotelo.pinto at gmail.com (Carlos Eduardo Sotelo Pinto)
Date: Thu, 18 Apr 2013 19:33:49 -0500
Subject: [Twisted-Python] Multiple clients and ports
Message-ID: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>

I am doing a gps tracker wich use multiple protocols and multiple
clients, my problen is when I have more than one client on more than
one protocol at the same time, data and validation start to crashing
one to other

My Server is

#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Heracles Tracker Listener Server."""

from twisted.internet import threads
from twisted.protocols.gps.nmea import NMEAReceiver
from twisted.internet.protocol import Factory, Protocol
import binascii

#class TrackerServer(NMEAReceiver):
#class TrackerServer(LineReceiver):
class TrackerServer(Protocol):
    """Tracker Twisted Protocol Class."""

    def __init__(self, decoder):
        """Class Constructor."""
        decoderModule = __import__('listener.protocols.%sDecoder' %
(decoder, ), fromlist=['%sDecoder' % (decoder, )])
        decoderClass = getattr(decoderModule, '%sDecoder' % (decoder, ))
        self.decoder = decoderClass()
        #self.delimiter = '0';

    def connectionMade(self):
        """ConnectionMade Twisted event."""
        try:
            print 'Connection made to', self.transport.getHost(),
'from', self.transport.getPeer()
        except ValueError:
            print "Oops!  Connection was not started"

    def connectionLost(self, reason):
        """ConnectionLost Twisted event."""
        print "Connection lost ", reason

    def dataReceived(self, data):
        Protocol.dataReceived(self, data)

        """DataReceived Twisted event."""
        try:
            self.sendResponse(self.decoder.processDatagram(data))
            #d = threads.deferToThread(self.decoder.processDatagram(data ))
            #d.addCallback(self.sendResponse)
        except ValueError:
            print "Oops!  That was no valid data.  Try again..."

    def sendResponse (self, response):
        self.transport.write(response)

class TrackerFactory(Factory):
    """Tracker Factory Twisted Class."""

    def __init__(self, decoder):
        """Class Constructor. """
        self.decoder = decoder

    def buildProtocol(self, addr):
        """BuildProtocol Twisted."""
        return TrackerServer(self.decoder)


My tac file is

#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, sys
import ConfigParser
from twisted.application import internet, service
from listener.TrackerServer import TrackerFactory

PROJECT_DIR = os.path.abspath(os.path.dirname(__file__))
sys.path.append(PROJECT_DIR)

path = None
config = ConfigParser.ConfigParser()
config.read('protocols.cfg')

application = service.Application("tracker")
for protocol in config.get('protocols', 'keys').split(','):
    port = int(config.get(protocol, 'port'))
    factory = TrackerFactory(config.get(protocol, 'name'))
    trackerService = internet.TCPServer(port, factory) # create the service
    trackerService.setServiceParent(application)




--
Carlos Eduardo Sotelo Pinto | http://carlossotelo.com | csotelo at twitter
    GNU Linux Admin | PHP Senior Web Developer
    Mobil: RPC (Claro)+51, 958194614 | Mov: +51, 959980794
    GTalk: carlos.sotelo.pinto at gmail.com | Skype: csotelop
    MSN: carlos.sotelo.pinto at gmail.com | Yahoo: csotelop
    GNULinux RU #379182 | GNULinux RM #277661
GPG FP:697E FAB8 8E83 1D60 BBFB 2264 9E3D 5761 F855 4F6B


From johnnypops at gmail.com  Fri Apr 19 02:21:22 2013
From: johnnypops at gmail.com (John Popplewell)
Date: Fri, 19 Apr 2013 02:21:22 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
Message-ID: <20130419022045@johnnypops.co.uk>

Hi all,

I've recently put together a series of patches and new files that expand
upon and improve the work done in Ticket #2157
http://twistedmatrix.com/trac/ticket/2157

I've got working cftp.py and conch.py scripts and imap4client.py also
works. The console support works on a Windows-7 buildbot and acts like a
normal console with a flashing cursor and working scroll-back (no
editing yet, but back-space works).

I missed exarkun's message until after I'd uploaded the patches there :(

As I got familiar with the code-base again (I was using some of this
stuff on windows over 5 years ago), I looked at lots of tests that could
be enabled now, and have a set of other patches for more tests (I got
up to 6999 :)

Not sure how to proceed so I'm doing as exarkun suggested, and posting
here,

best regards,
John Popplewell
PS I married a beautiful American woman last year and now reside in
Northern Michigan - looking for work, thought I'd try and do something
useful.



From p.mayers at imperial.ac.uk  Fri Apr 19 04:20:24 2013
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 19 Apr 2013 09:20:24 +0100
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
Message-ID: <5170FE48.8050408@imperial.ac.uk>

On 04/19/2013 01:33 AM, Carlos Eduardo Sotelo Pinto wrote:
> I am doing a gps tracker wich use multiple protocols and multiple
> clients, my problen is when I have more than one client on more than
> one protocol at the same time, data and validation start to crashing
> one to other

I don't understand what you mean. Can you be more specific?

>
>      def __init__(self, decoder):
>          """Class Constructor."""
>          decoderModule = __import__('listener.protocols.%sDecoder' %
> (decoder, ), fromlist=['%sDecoder' % (decoder, )])
>          decoderClass = getattr(decoderModule, '%sDecoder' % (decoder, ))

You might want to look at "twisted.python.reflect" which contains utils 
to do that kind of "give me the python object at this import"


>      def dataReceived(self, data):
>          Protocol.dataReceived(self, data)
>
>          """DataReceived Twisted event."""
>          try:
>              self.sendResponse(self.decoder.processDatagram(data))

Not sure if this is your problem - but stream protocols (TCP) don't 
guarantee that "message" boundaries will be preserved - that is, if the 
sender does:

write(100 bytes)
write(100 bytes)

...you might get

dataReceived(10 bytes)
dataReceived(39 bytes)
dataReceived(27 bytes)

...or any other variation - the data can arrive in arbitrary chunks. 
Unless your processDatagram is doing the reassembly, you need to 
implement message framing in your dataReceived method.

Note that the commented out versions of your base classes were all for 
protocols which do framing (e.g. line-based, etc.)

Normally this looks something like:

  def dataReceived(self, data):
     self.buffer += data
     if hasFullMessage(self.buffer):
       msg, self.buffer = extractMessage(self.buffer)
       processMsg(msg)




From carlos.sotelo.pinto at gmail.com  Fri Apr 19 07:35:44 2013
From: carlos.sotelo.pinto at gmail.com (Carlos Eduardo Sotelo Pinto)
Date: Fri, 19 Apr 2013 06:35:44 -0500
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <5170FE48.8050408@imperial.ac.uk>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
	<5170FE48.8050408@imperial.ac.uk>
Message-ID: <CAEhw=E8Z=hWOmjtfwoW7gP8uzjmhz0WipZooxo34-+f+-ZdFBg@mail.gmail.com>

Dear Phil

I am glad on your fast answer

2013/4/19 Phil Mayers <p.mayers at imperial.ac.uk>:
> On 04/19/2013 01:33 AM, Carlos Eduardo Sotelo Pinto wrote:
>> I am doing a gps tracker wich use multiple protocols and multiple
>> clients, my problen is when I have more than one client on more than
>> one protocol at the same time, data and validation start to crashing
>> one to other

I am receiving data from gps that must be validated and keep each
connectoin independent, for exmaple

I am working with different datagram protocolos form gps, a protocol
is a kind of parsing, for exmaple one gps send a login datagram, that
on hex  could be something like

datagram 70700112345678 as first for start a comunication where 7070
and 01 is the comman that says the datagram is trying to start a
comunicacion, 12345678 is the imei or device id
datagram 707002123456780f0f0f0f0f..... is the location datagram just
the comand changee that sais that it is a location datagram and then
the location info start, it is working on 5050 port

I have other device
datagram 20200187654321 as first for start a comunication where 2020
and 01 is the comman that says the datagram is trying to start a
comunicacion, 87654321 is the imei or device id
datagram 3030020f0f0f0f0f..... is the location datagram, the header
changed and no imei is provided, it is working on port 4040

I must do that the devies start comunication after login and the parse
info, also validate headers, command and others

as both are working at the same time, when arrive the first one with
header 7070, the class wich decode this device, keep on memory and
when the second one arrive, the validation will be wrong, cause will
try to validate the header 7070 with the values 2020, and on the
seconds one devie, could start checking datagram , s no imei, with the
first one ime

I have seen it on my program, however they are different parser clases
on diferent protocols, i need to keep each device complete independent

when I have more decvice the problem is bigger on the crashes, how
could I avoid that on keeping infor independent asyncronus is ok or
cred, I dont know

Best regards




>
> I don't understand what you mean. Can you be more specific?
>
>>
>>      def __init__(self, decoder):
>>          """Class Constructor."""
>>          decoderModule = __import__('listener.protocols.%sDecoder' %
>> (decoder, ), fromlist=['%sDecoder' % (decoder, )])
>>          decoderClass = getattr(decoderModule, '%sDecoder' % (decoder, ))
>
> You might want to look at "twisted.python.reflect" which contains utils
> to do that kind of "give me the python object at this import"
>
>
>>      def dataReceived(self, data):
>>          Protocol.dataReceived(self, data)
>>
>>          """DataReceived Twisted event."""
>>          try:
>>              self.sendResponse(self.decoder.processDatagram(data))
>
> Not sure if this is your problem - but stream protocols (TCP) don't
> guarantee that "message" boundaries will be preserved - that is, if the
> sender does:
>
> write(100 bytes)
> write(100 bytes)
>
> ...you might get
>
> dataReceived(10 bytes)
> dataReceived(39 bytes)
> dataReceived(27 bytes)
>
> ...or any other variation - the data can arrive in arbitrary chunks.
> Unless your processDatagram is doing the reassembly, you need to
> implement message framing in your dataReceived method.
>
> Note that the commented out versions of your base classes were all for
> protocols which do framing (e.g. line-based, etc.)
>
> Normally this looks something like:
>
>   def dataReceived(self, data):
>      self.buffer += data
>      if hasFullMessage(self.buffer):
>        msg, self.buffer = extractMessage(self.buffer)
>        processMsg(msg)
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



--
Carlos Eduardo Sotelo Pinto | http://carlossotelo.com | csotelo at twitter
    GNU Linux Admin | PHP Senior Web Developer
    Mobil: RPC (Claro)+51, 958194614 | Mov: +51, 959980794
    GTalk: carlos.sotelo.pinto at gmail.com | Skype: csotelop
    MSN: carlos.sotelo.pinto at gmail.com | Yahoo: csotelop
    GNULinux RU #379182 | GNULinux RM #277661
GPG FP:697E FAB8 8E83 1D60 BBFB 2264 9E3D 5761 F855 4F6B


From _ at lvh.io  Fri Apr 19 10:38:52 2013
From: _ at lvh.io (Laurens Van Houtven)
Date: Fri, 19 Apr 2013 16:38:52 +0200
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
Message-ID: <CAE_Hg6awjT5jbWLMz02SVj=rXsmaKYLUVxPz_S8-mHOGxBTTgA@mail.gmail.com>

Not a direct answer to your question, but I hope to get twisted.positioning
in the next release of Twisted. It's a new and improved interface for
positioning (including NMEA) that I started back when I was writing
something extremely similar to what you are now. Hopefully you'll be one of
its first happy users :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130419/7a48d888/attachment.htm 

From carlos.sotelo.pinto at gmail.com  Fri Apr 19 10:53:31 2013
From: carlos.sotelo.pinto at gmail.com (Carlos Eduardo Sotelo Pinto)
Date: Fri, 19 Apr 2013 09:53:31 -0500
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <CAE_Hg6awjT5jbWLMz02SVj=rXsmaKYLUVxPz_S8-mHOGxBTTgA@mail.gmail.com>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
	<CAE_Hg6awjT5jbWLMz02SVj=rXsmaKYLUVxPz_S8-mHOGxBTTgA@mail.gmail.com>
Message-ID: <CAEhw=E-_Nmo=E_odA4XXx_0mPOonFmE9qA2LHwQQtAxKSHaDVg@mail.gmail.com>

of course, but I need to solve it, cause I am on working now, and if I
could help you on anything

best regards



2013/4/19 Laurens Van Houtven <_ at lvh.io>:
> Not a direct answer to your question, but I hope to get twisted.positioning
> in the next release of Twisted. It's a new and improved interface for
> positioning (including NMEA) that I started back when I was writing
> something extremely similar to what you are now. Hopefully you'll be one of
> its first happy users :-)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Carlos Eduardo Sotelo Pinto | http://carlossotelo.com | csotelo at twitter
    GNU Linux Admin | PHP Senior Web Developer
    Mobil: RPC (Claro)+51, 958194614 | Mov: +51, 959980794
    GTalk: carlos.sotelo.pinto at gmail.com | Skype: csotelop
    MSN: carlos.sotelo.pinto at gmail.com | Yahoo: csotelop
    GNULinux RU #379182 | GNULinux RM #277661
GPG FP:697E FAB8 8E83 1D60 BBFB 2264 9E3D 5761 F855 4F6B


From kevin.horn at gmail.com  Fri Apr 19 12:36:43 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 19 Apr 2013 11:36:43 -0500
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419022045@johnnypops.co.uk>
References: <20130419022045@johnnypops.co.uk>
Message-ID: <CA+U=zK06=PktxOn01C7=fRmr51u8==D=X-Q=wx7kuk_x6js-iA@mail.gmail.com>

On Fri, Apr 19, 2013 at 1:21 AM, John Popplewell <johnnypops at gmail.com>wrote:

> Hi all,
>
> I've recently put together a series of patches and new files that expand
> upon and improve the work done in Ticket #2157
> http://twistedmatrix.com/trac/ticket/2157
>
> I've got working cftp.py and conch.py scripts and imap4client.py also
> works. The console support works on a Windows-7 buildbot and acts like a
> normal console with a flashing cursor and working scroll-back (no
> editing yet, but back-space works).
>
> I missed exarkun's message until after I'd uploaded the patches there :(
>
> As I got familiar with the code-base again (I was using some of this
> stuff on windows over 5 years ago), I looked at lots of tests that could
> be enabled now, and have a set of other patches for more tests (I got
> up to 6999 :)
>
> Not sure how to proceed so I'm doing as exarkun suggested, and posting
> here,
>
> best regards,
> John Popplewell
> PS I married a beautiful American woman last year and now reside in
> Northern Michigan - looking for work, thought I'd try and do something
> useful.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Fantastic to see someone picking up this work!

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130419/58890891/attachment.htm 

From itamar at futurefoundries.com  Fri Apr 19 14:21:48 2013
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Fri, 19 Apr 2013 14:21:48 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419022045@johnnypops.co.uk>
References: <20130419022045@johnnypops.co.uk>
Message-ID: <CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>

On Fri, Apr 19, 2013 at 2:21 AM, John Popplewell <johnnypops at gmail.com>wrote:

> Hi all,
>
> I've recently put together a series of patches and new files that expand
> upon and improve the work done in Ticket #2157
> http://twistedmatrix.com/trac/ticket/2157
>
>
> Not sure how to proceed so I'm doing as exarkun suggested, and posting
> here,
>

The main issue is that the patch is too big? The easiest way to solve that
is to split it up into multiple tickets, each addressing a subsection of
the problem, with a corresponding small patch. It's fine to say "and this
patch requires ticket #1234 to be fixed."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130419/ef1b61a0/attachment.htm 

From johnnypops at gmail.com  Fri Apr 19 14:55:30 2013
From: johnnypops at gmail.com (John Popplewell)
Date: Fri, 19 Apr 2013 14:55:30 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
Message-ID: <20130419145450@johnnypops.co.uk>

On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
> On Fri, Apr 19, 2013 at 2:21 AM, John Popplewell <johnnypops at gmail.com>wrote:
> 
> > Hi all,
> >
> > I've recently put together a series of patches and new files that expand
> > upon and improve the work done in Ticket #2157
> > http://twistedmatrix.com/trac/ticket/2157
> >
> >
> > Not sure how to proceed so I'm doing as exarkun suggested, and posting
> > here,
> >
> 
> The main issue is that the patch is too big? The easiest way to solve that
> is to split it up into multiple tickets, each addressing a subsection of
> the problem, with a corresponding small patch. It's fine to say "and this
> patch requires ticket #1234 to be fixed."

OK, thanks, I'll do that.



From exarkun at twistedmatrix.com  Fri Apr 19 15:58:33 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 19 Apr 2013 19:58:33 -0000
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419145450@johnnypops.co.uk>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
	<20130419145450@johnnypops.co.uk>
Message-ID: <20130419195833.2793.1352576413.divmod.xquotient.143@top>

On 06:55 pm, johnnypops at gmail.com wrote:
>On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
>>
>>The main issue is that the patch is too big? The easiest way to solve 
>>that
>>is to split it up into multiple tickets, each addressing a subsection 
>>of
>>the problem, with a corresponding small patch. It's fine to say "and 
>>this
>>patch requires ticket #1234 to be fixed."
>
>OK, thanks, I'll do that.

To add to what Itamar wrote a bit, an important part of this strategy is 
that the individual pieces the task gets split into need to each make 
some kind of sense on their own.  It's fine for there to be dependencies 
(but the dependencies should only go in one direction), but a ticket the 
summary of which is "apply this patch to _win32stdio.py that I wrote" 
won't work very well.  Instead, be sure that the tickets are things like 
"implement feature foo for Win32EventsReactor".

Jean-Paul


From glyph at twistedmatrix.com  Fri Apr 19 16:35:41 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 19 Apr 2013 13:35:41 -0700
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419195833.2793.1352576413.divmod.xquotient.143@top>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
	<20130419145450@johnnypops.co.uk>
	<20130419195833.2793.1352576413.divmod.xquotient.143@top>
Message-ID: <80390E99-9963-4625-A073-98B664A34E86@twistedmatrix.com>


On Apr 19, 2013, at 12:58 PM, exarkun at twistedmatrix.com wrote:

> On 06:55 pm, johnnypops at gmail.com wrote:
>> On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
>>> 
>>> The main issue is that the patch is too big? The easiest way to solve 
>>> that
>>> is to split it up into multiple tickets, each addressing a subsection 
>>> of
>>> the problem, with a corresponding small patch. It's fine to say "and 
>>> this
>>> patch requires ticket #1234 to be fixed."
>> 
>> OK, thanks, I'll do that.
> 
> To add to what Itamar wrote a bit, an important part of this strategy is 
> that the individual pieces the task gets split into need to each make 
> some kind of sense on their own.  It's fine for there to be dependencies 
> (but the dependencies should only go in one direction), but a ticket the 
> summary of which is "apply this patch to _win32stdio.py that I wrote" 
> won't work very well.  Instead, be sure that the tickets are things like 
> "implement feature foo for Win32EventsReactor".

And to refine this even further:

It's OK for the patches to be smaller than "implement feature foo", as long as they make sense on their own.

For example if we already implement feature foo, but you want to re-factor it so that it's easy to implement feature bar in terms of that same code, you could have a ticket just for doing the inner refactoring, that does not expose any new public classes or features, as long as that refactoring has a good explanation and a good impact on the internal API.

Based on the last patch I see on this ticket, it looks like that's what you're trying to do with a lot of the 'Channel' objects; these need better documentation and test coverage, but it looks like some of that work could be off on its own.

-glyph

From chitrankdixit at gmail.com  Sat Apr 20 04:10:16 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Sat, 20 Apr 2013 13:40:16 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
Message-ID: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>

Good Evening

Twisted Matrix is a great module for Networking and I would like to work
with this project. I want to propose Twisted a new Idea of Promoting the
project to Porting to Python 3 (with backward compatibility). Porting
benefits by grabbing the Python 3 users and would prepare the Twisted for
the Future.



P.S. : I am not sure if this project idea is suitable for Google Summer of
Code.





*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130420/e0d060a1/attachment.htm 

From _ at lvh.io  Sat Apr 20 05:31:47 2013
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 20 Apr 2013 11:31:47 +0200
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
Message-ID: <CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>

On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit <chitrankdixit at gmail.com>wrote:

> Good Evening
>

Hi! :-)


> Twisted Matrix is a great module for Networking and I would like to work
> with this project. I want to propose Twisted a new Idea of Promoting the
> project to Porting to Python 3 (with backward compatibility). Porting
> benefits by grabbing the Python 3 users and would prepare the Twisted for
> the Future.
>

Helping the Python 3 porting effort sounds like a GSoC project to me :) You
might not finish it (there's a lot of work, and some of the problems are
very tricky), but it's definitely an area I think deserves some full-time
attention.

Are you familiar with the Twisted contribution process? It is my
understanding that we ask GSoC students to find and fix a single, easy
(usually "easy" literally means minutes of actual work, once your system is
set up for Twisted development) to qualify, so that they're already
familiar with what they'd need to do.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130420/d9874d40/attachment.htm 

From exarkun at twistedmatrix.com  Sat Apr 20 09:50:57 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 20 Apr 2013 13:50:57 -0000
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
Message-ID: <20130420135057.2793.839284122.divmod.xquotient.148@top>

>On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit 
><chitrankdixit at gmail.com>wrote:
>>Good Evening
>>
>>Twisted Matrix is a great module for Networking and I would like to 
>>work
>>with this project. I want to propose Twisted a new Idea of Promoting 
>>the
>>project to Porting to Python 3 (with backward compatibility). Porting
>>benefits by grabbing the Python 3 users and would prepare the Twisted 
>>for
>>the Future.
>

Please have a look at <http://twistedmatrix.com/trac/wiki/GSoC2013>. 
Thanks!

Jean-Paul


From chitrankdixit at gmail.com  Sat Apr 20 11:22:14 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Sat, 20 Apr 2013 20:52:14 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
Message-ID: <CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>

Thanks Laurens I know the Twisted Matrix Module at good Extend and
would definitely contribute to the Twisted development. I have read the
Twisted GSOC where it is required to submit atleast one patch.

I have set up my development environment for Twisted Matrix and Working on
Twisted.

*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*



On Sat, Apr 20, 2013 at 3:01 PM, Laurens Van Houtven <_ at lvh.io> wrote:

> On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit <chitrankdixit at gmail.com>wrote:
>
>> Good Evening
>>
>
> Hi! :-)
>
>
>> Twisted Matrix is a great module for Networking and I would like to work
>> with this project. I want to propose Twisted a new Idea of Promoting the
>> project to Porting to Python 3 (with backward compatibility). Porting
>> benefits by grabbing the Python 3 users and would prepare the Twisted for
>> the Future.
>>
>
> Helping the Python 3 porting effort sounds like a GSoC project to me :)
> You might not finish it (there's a lot of work, and some of the problems
> are very tricky), but it's definitely an area I think deserves some
> full-time attention.
>
> Are you familiar with the Twisted contribution process? It is my
> understanding that we ask GSoC students to find and fix a single, easy
> (usually "easy" literally means minutes of actual work, once your system is
> set up for Twisted development) to qualify, so that they're already
> familiar with what they'd need to do.
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130420/6f44f0a5/attachment.htm 

From johnnypops at gmail.com  Sat Apr 20 11:37:52 2013
From: johnnypops at gmail.com (John Popplewell)
Date: Sat, 20 Apr 2013 11:37:52 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <80390E99-9963-4625-A073-98B664A34E86@twistedmatrix.com>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
	<20130419145450@johnnypops.co.uk>
	<20130419195833.2793.1352576413.divmod.xquotient.143@top>
	<80390E99-9963-4625-A073-98B664A34E86@twistedmatrix.com>
Message-ID: <20130420111758@johnnypops.co.uk>

On Fri, Apr 19, 2013 at 01:35:41PM -0700, Glyph wrote:
> 
> On Apr 19, 2013, at 12:58 PM, exarkun at twistedmatrix.com wrote:
> 
> > On 06:55 pm, johnnypops at gmail.com wrote:
> >> On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
> >>> 
> >>> The main issue is that the patch is too big? The easiest way to solve 
> >>> that
> >>> is to split it up into multiple tickets, each addressing a subsection 
> >>> of
> >>> the problem, with a corresponding small patch. It's fine to say "and 
> >>> this
> >>> patch requires ticket #1234 to be fixed."
> >> 
> >> OK, thanks, I'll do that.
> > 
> > To add to what Itamar wrote a bit, an important part of this strategy is 
> > that the individual pieces the task gets split into need to each make 
> > some kind of sense on their own.  It's fine for there to be dependencies 
> > (but the dependencies should only go in one direction), but a ticket the 
> > summary of which is "apply this patch to _win32stdio.py that I wrote" 
> > won't work very well.  Instead, be sure that the tickets are things like 
> > "implement feature foo for Win32EventsReactor".
> 
> And to refine this even further:
> 
> It's OK for the patches to be smaller than "implement feature foo", as
> long as they make sense on their own.
> 
> For example if we already implement feature foo, but you want to
> re-factor it so that it's easy to implement feature bar in terms of
> that same code, you could have a ticket just for doing the inner
> refactoring, that does not expose any new public classes or features,
> as long as that refactoring has a good explanation and a good impact
> on the internal API.
> 
> Based on the last patch I see on this ticket, it looks like that's
> what you're trying to do with a lot of the 'Channel' objects; these
> need better documentation and test coverage, but it looks like some of
> that work could be off on its own.
> 
> -glyph

Ok, I'm following this. Just been off my PC for 18 hours. I'm up for
doing things properly (unlike some of my previous, um, code dumps).

I've had some practice figuring out tests, I've had a look at the
coding standard and I'm happy to have a go at some documentation.

I'm finally getting the patch+test coverage message especially as
several of the existing tests (after I enabled them) pointed out
short-comings in the code as I was working on it.

I should be able to get something together in the next day or two, right
now I need some sleep.

Thanks for your helpful reponses, I'm keen to make a useful contribution
to Twisted as it has served me well over the years,

best regards,
John.



From max.haarhaus at gmail.com  Sat Apr 20 14:15:26 2013
From: max.haarhaus at gmail.com (Max Haarhaus)
Date: Sat, 20 Apr 2013 14:15:26 -0400
Subject: [Twisted-Python] GSoC Project Proposal
Message-ID: <CAMTd3ROgycnz12NE0u3T=dZZVCBjm7zt0X_j3eK85KWmN0ftzg@mail.gmail.com>

So I have submitted and updated a patch here:

http://twistedmatrix.com/trac/ticket/5228

And I was wondering about writing the project proposal. I'm interested in
the Deferred Cancellation idea, but not married to it. The GSoC page says
that the proposal should be written with a mentor from Twisted. Is that
still true? If not, are there any particular things you're looking for in
the proposal, other than what's listed by Google in the requirements?

Thanks a lot,

Max Haarhaus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130420/dcb52cb2/attachment.htm 

From exarkun at twistedmatrix.com  Sun Apr 21 00:05:25 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Apr 2013 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1366517125.77.620005863@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130421/ad028bc6/attachment.htm 

From chitrankdixit at gmail.com  Sun Apr 21 03:00:50 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Sun, 21 Apr 2013 12:30:50 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
Message-ID: <CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>

Good Morning

Hello Lauren and exarkun As per the page you have suggested to me
http://twistedmatrix.com/trac/wiki/GSoC2013

I have progressed to step 3 and submitted some of the patches that are
under review process. I have submitted some of the patches
http://twistedmatrix.com/trac/ticket/6440
http://twistedmatrix.com/trac/ticket/6441
http://twistedmatrix.com/trac/ticket/6438

but these patches have Low or somewhat Normal priority and these are tagged
"easy" not "easy gsoc" or "documentation gsoc". So Is it okay for me to
apply for the Google Summer of Code. Meanwhile I am getting familiar with
the Twisted Development Process. Using one of the Source provided at the
Twisted Website that is Orielly Twisted Network Programming Essentials.
So would it be alright ?.

Should I keep on submitting such patches or try for some more higher
priority patches ?

Should I give my project proposal to the Mentor ?

Please let me know



*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130421/1cefb79e/attachment.htm 

From twisted at tomvn.com  Sun Apr 21 06:58:06 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Sun, 21 Apr 2013 11:58:06 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
Message-ID: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>

Hi all

I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
Scala on the Play framework, and used a combination of ab and gattling to
see how fast each was on an m1.small instance on Amazon EC2. I also tested
it on bare metal (my laptop:)) but I'll get to that later.

The code I used for twisted was the web server code sample from the front
page of twistedmatrix.com with the numberRequests increment dropped and a
simple "Hello World!" returned instead.
For cyclone I used the sample code from the cyclone docs with the same
string being returned.
Node was the sample from their front page.
Play and Go I've never worked with before so those were copy pastes from
various examples on their pages but again same URI and return string as the
other frameworks.


From tobias.oberstein at tavendo.de  Sun Apr 21 08:36:14 2013
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 21 Apr 2013 05:36:14 -0700
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>

Tom,

which OS are you running on your EC2 instance? Amazon Linux?

Which reactor are you running your Twisted test with? Epoll?

Are you running on CPython or PyPy?

Can we see you Twisted hello world test app?

Tobias


Mit freundlichen Gr??en,

Tobias Oberstein
Gesch?ftsf?hrer

+49(0)9131 940 3574
+49(0)176 23 752 055
tobias.oberstein at tavendo.de
Skype: toberstein
Twitter: @oberstet
Xing: Tobias Oberstein



Tavendo GmbH ? Am Weihersbach 13 ? 91074 Herzogenaurach ? Deutschland
Office / Postanschrift : Waldstrasse 18 ? 91054 Erlangen ? Deutschland
+49(+)700 GO TAVENDO ? +49(0)700 46 828 36 36 ? www.tavendo.de
Amtsgericht F?rth ? HRB 10365 ? USt-Id.Nr DE246462916 ? Gesch?ftsf?hrer Tobias Oberstein

Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van Neerijnen
Gesendet: Sonntag, 21. April 2013 12:58
An: twisted-python at twistedmatrix.com
Betreff: [Twisted-Python] Speed of twisted on Amazon EC2

Hi all
I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and Scala on the Play framework, and used a combination of ab and gattling to see how fast each was on an m1.small instance on Amazon EC2. I also tested it on bare metal (my laptop:)) but I'll get to that later.
The code I used for twisted was the web server code sample from the front page of twistedmatrix.com with the numberRequests increment dropped and a simple "Hello World!" returned instead.
For cyclone I used the sample code from the cyclone docs with the same string being returned.
Node was the sample from their front page.
Play and Go I've never worked with before so those were copy pastes from various examples on their pages but again same URI and return string as the other frameworks.


From tom.prince at ualberta.net  Sun Apr 21 11:03:24 2013
From: tom.prince at ualberta.net (Tom Prince)
Date: Sun, 21 Apr 2013 09:03:24 -0600
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
	<CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
Message-ID: <87ip3gc4eb.fsf@hermes.hocat.ca>

Chitrank Dixit <chitrankdixit at gmail.com> writes:

> but these patches have Low or somewhat Normal priority and these are tagged
> "easy" not "easy gsoc" or "documentation gsoc".

The 'gsoc' keyword there is actually for reviewers, to give priority to
them. (And it is incoistently applied.)

> Should I keep on submitting such patches or try for some more higher
> priority patches ?

The priority is mostly meaningless, and won't affect whether you get
selected.

  Tom


From dynamicgl at gmail.com  Sun Apr 21 11:26:28 2013
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 21 Apr 2013 23:26:28 +0800
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CABkOF6TzmHJ8TH+oZcLxtcOvwCfJKk7FT4g_t=EKp67cgAF7dg@mail.gmail.com>

On Sun, Apr 21, 2013 at 8:36 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Tom,
>
> which OS are you running on your EC2 instance? Amazon Linux?
>
> Which reactor are you running your Twisted test with? Epoll?
>
> Are you running on CPython or PyPy?
>
> Can we see you Twisted hello world test app?
>
> Tobias
>
>
> Mit freundlichen Gr??en,
>
> Tobias Oberstein
> Gesch?ftsf?hrer
>
> +49(0)9131 940 3574
> +49(0)176 23 752 055
> tobias.oberstein at tavendo.de
> Skype: toberstein
> Twitter: @oberstet
> Xing: Tobias Oberstein
>
>
>
> Tavendo GmbH ? Am Weihersbach 13 ? 91074 Herzogenaurach ? Deutschland
> Office / Postanschrift : Waldstrasse 18 ? 91054 Erlangen ? Deutschland
> +49(+)700 GO TAVENDO ? +49(0)700 46 828 36 36 ? www.tavendo.de
> Amtsgericht F?rth ? HRB 10365 ? USt-Id.Nr DE246462916 ? Gesch?ftsf?hrer
> Tobias Oberstein
>
> Von: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van Neerijnen
> Gesendet: Sonntag, 21. April 2013 12:58
> An: twisted-python at twistedmatrix.com
> Betreff: [Twisted-Python] Speed of twisted on Amazon EC2
>
> Hi all
> I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
> Scala on the Play framework, and used a combination of ab and gattling to
> see how fast each was on an m1.small instance on Amazon EC2. I also tested
> it on bare metal (my laptop:)) but I'll get to that later.
> The code I used for twisted was the web server code sample from the front
> page of twistedmatrix.com with the numberRequests increment dropped and a
> simple "Hello World!" returned instead.
> For cyclone I used the sample code from the cyclone docs with the same
> string being returned.
> Node was the sample from their front page.
> Play and Go I've never worked with before so those were copy pastes from
> various examples on their pages but again same URI and return string as the
> other frameworks.
>
> From one m1.small to another, Go, Play and node were handling about 1.5k
> requests per second while Twisted and Cyclone were only handling 400-500
> requests per second.
> On loopback from the same m1.small I suspect I was starting to load test
> the load testers more than the apps but locally all the frameworks were
> performing similarly.
> Load testing from another machine to my laptop I was seeing far better
> performance from Twisted and Cyclone, both doing closer to 2k requests per
> second. The other frameworks were only a little quicker but again, there's
> a chance the machine running the load tests was the bottle neck.
> These tests were very unscientifically done but I still wasn't expecting
> to see such a big difference between specifically node and Twisted.  500
> req/sec is plenty quick for 90% of what I do and of course I know there's
> so much more to an application than returning hello world but I was
> wondering if I was missing some trick to speed Twisted up to get close to
> the others on EC2.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Hi

   I suggest trying pypy. python actually is quite slow with lots of
function calls. I did have a benchmark for cyclone & pypy. it is almost 3
times faster. twisted can work with pypy well so you definitely should give
it a try.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130421/8d7fc901/attachment.htm 

From twisted at tomvn.com  Sun Apr 21 16:24:01 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Sun, 21 Apr 2013 21:24:01 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>

Hi Tobias

My apologies, I should have included that information.
Before I get into my responses you've alluded to the answer already, which
is to say I should have been running on PyPy in the first place.
Twisted on PyPy is, at least for this really pointless benchmark, faster
than node.

I've re-run my tests using virtualenvs ( I was using Ubuntu packages which
may have been behind the latest releases), taken more care to record the
machine states, added PyPy to the mix and am responding inline with my
answers.

On Sun, Apr 21, 2013 at 1:36 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Tom,
>
> which OS are you running on your EC2 instance? Amazon Linux?
>
I am running two m1.small Ubuntu 12.10 64bit in us-east-1, one for the web
server and the other for the ab.


> Which reactor are you running your Twisted test with? Epoll?
>
Default Linux reactor, so it's Epoll.


> Are you running on CPython or PyPy?
>
I am running on CPython with twisted 13.0.0 installed into a virtualenv,
but please see my results for PyPy below, they're far more impressive.


>
> Can we see you Twisted hello world test app?
>
Sure:
from twisted.web import server, resource
from twisted.internet import reactor

class HelloResource(resource.Resource):
    isLeaf = True

    def render_GET(self, request):
        request.setHeader("content-type", "text/plain")
        return "Hello world!\n"

reactor.listenTCP(8080, server.Site(HelloResource()))
reactor.run()


And for comparison the node code:
var http = require('http');
http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello world!\n');
}).listen(8080, '0.0.0.0');


As I said you've already answered my question but here are my slightly more
controlled benchmarks from an ab -c 10 -n 100000 (I ran three and used the
average of the last two to ensure a warm JIT).

This time Twisted 13.0.0 in a CPython virtualenv yielded around 700 req/s.
Twisted 13.0.0 in a PyPy virtualenv yielded around 1.6k req/s.
Node 0.6.19 yielded around 1.6k req/s.

And for giggles 3x the concurrency with ab -c 30 -n 100000, which shows
Twisted on PyPy pulling ahead:
Twisted 13.0.0 in a PyPy virtualenv yielded around 2k req/s.
Node 0.6.19 yielded around 1.6k req/s.


> Tobias
>
>
> Mit freundlichen Gr??en,
>
> Tobias Oberstein
> Gesch?ftsf?hrer
>
> +49(0)9131 940 3574
> +49(0)176 23 752 055
> tobias.oberstein at tavendo.de
> Skype: toberstein
> Twitter: @oberstet
> Xing: Tobias Oberstein
>
>
>
> Tavendo GmbH ? Am Weihersbach 13 ? 91074 Herzogenaurach ? Deutschland
> Office / Postanschrift : Waldstrasse 18 ? 91054 Erlangen ? Deutschland
> +49(+)700 GO TAVENDO ? +49(0)700 46 828 36 36 ? www.tavendo.de
> Amtsgericht F?rth ? HRB 10365 ? USt-Id.Nr DE246462916 ? Gesch?ftsf?hrer
> Tobias Oberstein
>
> Von: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van Neerijnen
> Gesendet: Sonntag, 21. April 2013 12:58
> An: twisted-python at twistedmatrix.com
> Betreff: [Twisted-Python] Speed of twisted on Amazon EC2
>
> Hi all
> I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
> Scala on the Play framework, and used a combination of ab and gattling to
> see how fast each was on an m1.small instance on Amazon EC2. I also tested
> it on bare metal (my laptop:)) but I'll get to that later.
> The code I used for twisted was the web server code sample from the front
> page of twistedmatrix.com with the numberRequests increment dropped and a
> simple "Hello World!" returned instead.
> For cyclone I used the sample code from the cyclone docs with the same
> string being returned.
> Node was the sample from their front page.
> Play and Go I've never worked with before so those were copy pastes from
> various examples on their pages but again same URI and return string as the
> other frameworks.
>
> From one m1.small to another, Go, Play and node were handling about 1.5k
> requests per second while Twisted and Cyclone were only handling 400-500
> requests per second.
> On loopback from the same m1.small I suspect I was starting to load test
> the load testers more than the apps but locally all the frameworks were
> performing similarly.
> Load testing from another machine to my laptop I was seeing far better
> performance from Twisted and Cyclone, both doing closer to 2k requests per
> second. The other frameworks were only a little quicker but again, there's
> a chance the machine running the load tests was the bottle neck.
> These tests were very unscientifically done but I still wasn't expecting
> to see such a big difference between specifically node and Twisted.  500
> req/sec is plenty quick for 90% of what I do and of course I know there's
> so much more to an application than returning hello world but I was
> wondering if I was missing some trick to speed Twisted up to get close to
> the others on EC2.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130421/66683cee/attachment.htm 

From twisted at tomvn.com  Sun Apr 21 16:27:58 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Sun, 21 Apr 2013 21:27:58 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <CABkOF6TzmHJ8TH+oZcLxtcOvwCfJKk7FT4g_t=EKp67cgAF7dg@mail.gmail.com>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
	<CABkOF6TzmHJ8TH+oZcLxtcOvwCfJKk7FT4g_t=EKp67cgAF7dg@mail.gmail.com>
Message-ID: <CAMwy1twxH4momdXeh4sRmkJ1vBC3Y4--wpaJi-p_42TEPUSsGw@mail.gmail.com>

Thank you Gelin, as you suggested I benchmarked again on PyPy and am very
impressed with it. It was significantly quicker, beating node by a fair
margin on a higher concurrency. I pasted some results in another reply in
this same thread.


On Sun, Apr 21, 2013 at 4:26 PM, Gelin Yan <dynamicgl at gmail.com> wrote:

>
>
>
> On Sun, Apr 21, 2013 at 8:36 PM, Tobias Oberstein <
> tobias.oberstein at tavendo.de> wrote:
>
>> Tom,
>>
>> which OS are you running on your EC2 instance? Amazon Linux?
>>
>> Which reactor are you running your Twisted test with? Epoll?
>>
>> Are you running on CPython or PyPy?
>>
>> Can we see you Twisted hello world test app?
>>
>> Tobias
>>
>>
>> Mit freundlichen Gr??en,
>>
>> Tobias Oberstein
>> Gesch?ftsf?hrer
>>
>> +49(0)9131 940 3574
>> +49(0)176 23 752 055
>> tobias.oberstein at tavendo.de
>> Skype: toberstein
>> Twitter: @oberstet
>> Xing: Tobias Oberstein
>>
>>
>>
>> Tavendo GmbH ? Am Weihersbach 13 ? 91074 Herzogenaurach ? Deutschland
>> Office / Postanschrift : Waldstrasse 18 ? 91054 Erlangen ? Deutschland
>> +49(+)700 GO TAVENDO ? +49(0)700 46 828 36 36 ? www.tavendo.de
>> Amtsgericht F?rth ? HRB 10365 ? USt-Id.Nr DE246462916 ? Gesch?ftsf?hrer
>> Tobias Oberstein
>>
>> Von: twisted-python-bounces at twistedmatrix.com [mailto:
>> twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van
>> Neerijnen
>> Gesendet: Sonntag, 21. April 2013 12:58
>> An: twisted-python at twistedmatrix.com
>> Betreff: [Twisted-Python] Speed of twisted on Amazon EC2
>>
>> Hi all
>> I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
>> Scala on the Play framework, and used a combination of ab and gattling to
>> see how fast each was on an m1.small instance on Amazon EC2. I also tested
>> it on bare metal (my laptop:)) but I'll get to that later.
>> The code I used for twisted was the web server code sample from the front
>> page of twistedmatrix.com with the numberRequests increment dropped and
>> a simple "Hello World!" returned instead.
>> For cyclone I used the sample code from the cyclone docs with the same
>> string being returned.
>> Node was the sample from their front page.
>> Play and Go I've never worked with before so those were copy pastes from
>> various examples on their pages but again same URI and return string as the
>> other frameworks.
>>
>> From one m1.small to another, Go, Play and node were handling about 1.5k
>> requests per second while Twisted and Cyclone were only handling 400-500
>> requests per second.
>> On loopback from the same m1.small I suspect I was starting to load test
>> the load testers more than the apps but locally all the frameworks were
>> performing similarly.
>> Load testing from another machine to my laptop I was seeing far better
>> performance from Twisted and Cyclone, both doing closer to 2k requests per
>> second. The other frameworks were only a little quicker but again, there's
>> a chance the machine running the load tests was the bottle neck.
>> These tests were very unscientifically done but I still wasn't expecting
>> to see such a big difference between specifically node and Twisted.  500
>> req/sec is plenty quick for 90% of what I do and of course I know there's
>> so much more to an application than returning hello world but I was
>> wondering if I was missing some trick to speed Twisted up to get close to
>> the others on EC2.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
> Hi
>
>    I suggest trying pypy. python actually is quite slow with lots of
> function calls. I did have a benchmark for cyclone & pypy. it is almost 3
> times faster. twisted can work with pypy well so you definitely should give
> it a try.
>
> Regards
>
> gelin yan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130421/f6246a21/attachment.htm 

From chandrika3437 at gmail.com  Mon Apr 22 01:50:09 2013
From: chandrika3437 at gmail.com (chandrika parimoo)
Date: Mon, 22 Apr 2013 11:20:09 +0530
Subject: [Twisted-Python] Outreach For Women
Message-ID: <CACHGq=Av7z80Qri-puvSCafDcyahNwT_y=Sjq3=x94XyhMzEZQ@mail.gmail.com>

Hi, i am a second year IT Undergraduate from Pune institute of Computer
Technology, India.
I came across the Program Outreach For Women and i went through the ideas
list of Twisted. I am very keen on working on the project as  I have
experience of programming in Python.

Looking forward for more details.
Thanks :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130422/8be558a4/attachment-0001.htm 

From tobias.oberstein at tavendo.de  Mon Apr 22 03:12:55 2013
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 22 Apr 2013 00:12:55 -0700
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
	<CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D44229D49B0E@EXVMBX020-12.exch020.serverdata.net>

Tom,

>>which OS are you running on your EC2 instance? Amazon Linux?
>I am running two m1.small Ubuntu 12.10 64bit in us-east-1, one for the web server and the other for the ab.
>>Which reactor are you running your Twisted test with? Epoll?
>Default Linux reactor, so it's Epoll.

ok, thats good. just wanted to make sure you are aware of this and make sure epoll is actually used.

>>Are you running on CPython or PyPy?
>I am running on CPython with twisted 13.0.0 installed into a virtualenv, but please see my results for PyPy below, they're far more impressive.

thats also good (and I was somehow expecting this .. at least thats also my experience).

there is 1 thing to note when benchmarking networking stuff on PyPy vs CPython that I noticed in my testing:

both the throughput (bits/s or reqs/s) as well as the average (arithmetic mean) response times are far better with PyPy vs CPy

BUT (my testings - Twisted/Autobahn/WebSocket): e.g. the 95% quantile (and the worst case) response latency?of PyPy is worse than CPy.

this was PyPy 1.6 on both Linux (epoll) and FreeBSD (kqueue).

the reason might be GC .. PyPy's GCs might be not as sophisticated as CPy's (likely) or V8's (definitely).

note: this might have changed with PyPy 2 (did not test that). Armin at least was planning for a generational/incremental GC in PyPy. dunno.

so: you might wanna test for latency also .. I'd be interested in results.

regarding GC, V8 and Erlang (and possibly that other VMs with the J at the beginning) have an edge ..

both LuaJIT and PyPy plan to improve on this though ..

Tobias


From bino at indoakses-online.com  Mon Apr 22 03:25:28 2013
From: bino at indoakses-online.com (bino at indoakses-online.com)
Date: Mon, 22 Apr 2013 14:25:28 +0700
Subject: [Twisted-Python] question : txdbus and dbus-send
Message-ID: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>

Dear All
I take
https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_server
and save it to /home/bino/Documents/mbink/pythons/coretac/dbus00.py

bino at bino-pata:~$ ls -la /home/bino/Documents/mbink/pythons/coretac |grep
dbus
-rwxrwxr-x 1 bino bino  1026 Apr 22 12:08 dbus00.py

It's work as expected when 'called' using
https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_client

Now I need to callable using dbus-send
I wrote '/usr/share/dbus-1/services/org.example.service' as :

[D-BUS Service]
Name=org.example.MyObjPath
Exec=/home/bino/Documents/mbink/pythons/coretac/dbus00.py

I try to call :
dbus-send --system --print-reply \
--type=method_call \
--dest='org.example.MyObjPath' '/org/example/MyObjPath' \
org.example.MyObjPath.exampleMethod string:'MYTEXT'

But I got error msg :

Error org.freedesktop.DBus.Error.ServiceUnknown: The name
org.example.MyObjPath was not provided by any .service files


Kindly please give me any enlightenment

sincerely
-bino-



From adi at roiban.ro  Mon Apr 22 05:01:52 2013
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 22 Apr 2013 12:01:52 +0300
Subject: [Twisted-Python] twisted.conch.checkers.SSHPublicKeyDatabase
	validate signature data
Message-ID: <CAFycZ9cHs48AsPBtq5jyWtOc9c5q+n72pR6+CNMjsH+CN16d-Q@mail.gmail.com>

Hi,

In RFC 4252 http://www.ietf.org/rfc/rfc4252.txt for The Secure Shell (SSH)
Authentication Protocol at section 7. Public Key Authentication Method:
"publickey"

There is the following information about SSH public key signature.

 The value of 'signature' is a signature by the corresponding private
key over the following data, in the following order:

      string    session identifier
      byte      SSH_MSG_USERAUTH_REQUEST
      string    user name
      string    service name
      string    "publickey"
      boolean   TRUE
      string    public key algorithm name
      string    public key to be used for authentication

   When the server receives this message, it MUST check whether the
supplied key is acceptable for authentication, and if so, it MUST
check whether the signature is correct.

The current code check that key is accepted for authentication and it also
verifies if signature is correct.

It does not check that session the format of the signed data, especially if
session identifier from signed data is  the same as the session of the the
current SSH transport  session.

-----

I also found this document describing how ssh public key authentication
works, but it differes from the current conch.ssh userauth.py
implementation... maybe it is for SSH v1
http://www.unixwiz.net/techtips/ssh-agent-forwarding.html#chal

------

Shouldn't twisted.conch.checkers.SSHPublicKeyDatabase also check that
session id from signed data match the one from transport session?

Maybe it does but I am not looking at the right place.

I see that in conch/checkers.py line 167
https://github.com/tomprince/twisted/blob/trunk/twisted/conch/checkers.py#L167
there is this check, which once signature is valid  it just returns
avatar_id:

                if pubKey.verify(credentials.signature,
credentials.sigData):
                    return credentials.username

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130422/39a6ba35/attachment.htm 

From adi at roiban.ro  Mon Apr 22 07:35:48 2013
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 22 Apr 2013 14:35:48 +0300
Subject: [Twisted-Python] twisted.conch.checkers.SSHPublicKeyDatabase
	validate signature data
In-Reply-To: <CAFycZ9cHs48AsPBtq5jyWtOc9c5q+n72pR6+CNMjsH+CN16d-Q@mail.gmail.com>
References: <CAFycZ9cHs48AsPBtq5jyWtOc9c5q+n72pR6+CNMjsH+CN16d-Q@mail.gmail.com>
Message-ID: <CAFycZ9c24ZOa2h1kKFd1Cg1d_D1hbp5kAFeQPzeKqGtyvzscXQ@mail.gmail.com>

On 22 April 2013 12:01, Adi Roiban <adi at roiban.ro> wrote:

> Hi,
>
> In RFC 4252 http://www.ietf.org/rfc/rfc4252.txt for The Secure Shell
> (SSH) Authentication Protocol at section 7. Public Key Authentication
> Method: "publickey"
>
> There is the following information about SSH public key signature.
>
>  The value of 'signature' is a signature by the corresponding private key over the following data, in the following order:
>
>       string    session identifier
>       byte      SSH_MSG_USERAUTH_REQUEST
>       string    user name
>       string    service name
>       string    "publickey"
>       boolean   TRUE
>       string    public key algorithm name
>       string    public key to be used for authentication
>
>    When the server receives this message, it MUST check whether the supplied key is acceptable for authentication, and if so, it MUST check whether the signature is correct.
>
> The current code check that key is accepted for authentication and it also
> verifies if signature is correct.
>
> It does not check that session the format of the signed data, especially
> if session identifier from signed data is  the same as the session of the
> the current SSH transport  session.
>
> -----
>
> I also found this document describing how ssh public key authentication
> works, but it differes from the current conch.ssh userauth.py
> implementation... maybe it is for SSH v1
> http://www.unixwiz.net/techtips/ssh-agent-forwarding.html#chal
>
> ------
>
> Shouldn't twisted.conch.checkers.SSHPublicKeyDatabase also check that
> session id from signed data match the one from transport session?
>
> Maybe it does but I am not looking at the right place.
>
> I see that in conch/checkers.py line 167
> https://github.com/tomprince/twisted/blob/trunk/twisted/conch/checkers.py#L167
> there is this check, which once signature is valid  it just returns
> avatar_id:
>
>                 if pubKey.verify(credentials.signature,
> credentials.sigData):
>                     return credentials.username
>

I found out that I was wrong and I found how the signed data is generated.
Here is the imprtant part:
https://github.com/tomprince/twisted/blob/trunk/twisted/conch/ssh/userauth.py#L268



Sorry for the trouble!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130422/7e40ecb8/attachment.htm 

From jessica.mckellar at gmail.com  Mon Apr 22 08:04:44 2013
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Mon, 22 Apr 2013 08:04:44 -0400
Subject: [Twisted-Python] Outreach For Women
In-Reply-To: <CACHGq=Av7z80Qri-puvSCafDcyahNwT_y=Sjq3=x94XyhMzEZQ@mail.gmail.com>
References: <CACHGq=Av7z80Qri-puvSCafDcyahNwT_y=Sjq3=x94XyhMzEZQ@mail.gmail.com>
Message-ID: <CAKDZRcgpuR+fj+fh=dFtsXkczgUH2Euf_d1OF1HWDce07AXH0A@mail.gmail.com>

Hi Chandrika,

(Moving twisted-python to BCC)

> Hi, i am a second year IT Undergraduate from Pune institute of Computer
> Technology, India.
> I came across the Program Outreach For Women and i went through the ideas
> list of Twisted. I am very keen on working on the project as  I have
> experience of programming in Python.

Hello and welcome!

Once you've gone through the steps at
https://twistedmatrix.com/trac/wiki/GSoC2013#GettingStartedwithTwistedDevelopment,
please pick a Twisted ticket to work on.

https://twistedmatrix.com/trac/report/1 is the full list of tickets,
and https://bit.ly/easy-twisted-tickets is a list of tickets
particularly appropriate for new contributors. If you need any help
picking a ticket or working on it, please don't hesitate to ask in the
#twisted IRC channel or send me an e-mail.

Regards,
-Jessica


From tom.cocagne at gmail.com  Tue Apr 23 00:27:24 2013
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Mon, 22 Apr 2013 23:27:24 -0500
Subject: [Twisted-Python] question : txdbus and dbus-send
In-Reply-To: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>
References: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>
Message-ID: <CAFKh6jAsuduee3PQu0o4T3k-aTvjhM3jAtMT38uzknn5159Otw@mail.gmail.com>

On Mon, Apr 22, 2013 at 2:25 AM, <bino at indoakses-online.com> wrote:

> Dear All
> I take
>
> https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_server
> and save it to /home/bino/Documents/mbink/pythons/coretac/dbus00.py
>
> It's work as expected when 'called' using
>
> https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_client
>
> Now I need to callable using dbus-send
> I wrote '/usr/share/dbus-1/services/org.example.service' as :
>
> [D-BUS Service]
> Name=org.example.MyObjPath
> Exec=/home/bino/Documents/mbink/pythons/coretac/dbus00.py
>

The "Name" in the org.example.services file refers to the bus name(s)
exported by the application. The file should instead read:

[D-BUS Service]
Name=org.example
Exec=/home/bino/Documents/mbink/pythons/coretac/dbus00.py


>
> I try to call :
> dbus-send --system --print-reply \
> --type=method_call \
> --dest='org.example.MyObjPath' '/org/example/MyObjPath' \
> org.example.MyObjPath.exampleMethod string:'MYTEXT'
>
> But I got error msg ... <snip>
>

There are several problems here. The command should be:

dbus-send --session --print-reply --type=method_call --dest='org.example'
'/MyObjPath' org.example.MyIFace.exampleMethod string:'MYTEXT'

--session means you're using the session bus instead of the system bus
(which requires a .service file in a different directory and, possibly, an
entry in /etc/dbus-1/..). The --dest flag, similar to the Name of the
.service file, refers to the bus name rather than the object. '/MyObjPath'
is the full object path exported by the server application. Lastly, the
fully-qualified method name is the interface name plus the method name
rather than the object name plus method name. It's pretty easy to confuse
the various names and paths in DBus. I did so more than once while writing
up this reply.

Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130422/a8c9ee29/attachment.htm 

From bino at indoakses-online.com  Tue Apr 23 23:54:00 2013
From: bino at indoakses-online.com (bino at indoakses-online.com)
Date: Wed, 24 Apr 2013 10:54:00 +0700
Subject: [Twisted-Python] question : txdbus and dbus-send
In-Reply-To: <CAFKh6jAsuduee3PQu0o4T3k-aTvjhM3jAtMT38uzknn5159Otw@mail.gmail.com>
References: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>
	<CAFKh6jAsuduee3PQu0o4T3k-aTvjhM3jAtMT38uzknn5159Otw@mail.gmail.com>
Message-ID: <8a8dad1e4f41fccc20bd4f6efe0eefcd.squirrel@localhost>

Dear Tom
>
> --session means you're using the session bus instead of the system bus
> (which requires a .service file in a different directory and, possibly, an
> entry in /etc/dbus-1/..). The --dest flag, similar to the Name of the
> .service file, refers to the bus name rather than the object. '/MyObjPath'
> is the full object path exported by the server application. Lastly, the
> fully-qualified method name is the interface name plus the method name
> rather than the object name plus method name. It's pretty easy to confuse
> the various names and paths in DBus. I did so more than once while writing
> up this reply.

I really appreciate your enlightenment.
I'll do your suggestion.

Sincerely
-bino-



From twisted at tomvn.com  Wed Apr 24 05:59:39 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Wed, 24 Apr 2013 10:59:39 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <634914A010D0B943A035D226786325D44229D49B0E@EXVMBX020-12.exch020.serverdata.net>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
	<CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49B0E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAMwy1tzvSJv=70fhxwWLDt4DqRfRbRCpk+shGS+Jiz9QasxWtA@mail.gmail.com>

Hi Tobias

Some comments inline but first an update on the next load test slightly
closer to my ultimate use case, which showed PyPy smoking the competition.

My test is now a request to a URL scheme like this:
/version/{app}/platform/{platform}. This gets translated into a get on
Redis for {app}-{platform} and the value is returned to the client.
All tests were on Ubuntu 12.10 on an m1.small instance on AWS with the load
test machine being an m1.large. The load test ran for about 10 minutes for
each framework.
Using Cyclone 1.1 on Twisted 13 on PyPy 2.0beta2 I was averaging about 1.8k
r/s.
Using node-restify 2.4.1 and node-redis 0.8.3 node 0.10.4 I was doing about
1.2 r/s.
Go and Scala on Play were comparable to node.

This very simple load test has me very impressed with PyPys performance and
I look forward to load testing our full app when it's ready.

Thanks for the comments, they've been very helpful.

On Mon, Apr 22, 2013 at 8:12 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Tom,
>
> >>which OS are you running on your EC2 instance? Amazon Linux?
> >I am running two m1.small Ubuntu 12.10 64bit in us-east-1, one for the
> web server and the other for the ab.
> >>Which reactor are you running your Twisted test with? Epoll?
> >Default Linux reactor, so it's Epoll.
>
> ok, thats good. just wanted to make sure you are aware of this and make
> sure epoll is actually used.
>
> >>Are you running on CPython or PyPy?
> >I am running on CPython with twisted 13.0.0 installed into a virtualenv,
> but please see my results for PyPy below, they're far more impressive.
>
> thats also good (and I was somehow expecting this .. at least thats also
> my experience).
>
> there is 1 thing to note when benchmarking networking stuff on PyPy vs
> CPython that I noticed in my testing:
>
> both the throughput (bits/s or reqs/s) as well as the average (arithmetic
> mean) response times are far better with PyPy vs CPy
>
> BUT (my testings - Twisted/Autobahn/WebSocket): e.g. the 95% quantile (and
> the worst case) response latency of PyPy is worse than CPy.
>
> this was PyPy 1.6 on both Linux (epoll) and FreeBSD (kqueue).
>
> the reason might be GC .. PyPy's GCs might be not as sophisticated as
> CPy's (likely) or V8's (definitely).
>
> note: this might have changed with PyPy 2 (did not test that). Armin at
> least was planning for a generational/incremental GC in PyPy. dunno.
>
> so: you might wanna test for latency also .. I'd be interested in results.
>
PyPy 2.0beta2 had comparable 95 percentile latency to all the other
frameworks in my limited test so maybe that's the improvements you
mentioned? Or maybe my naive load tests, but I like to think it's the
improvements.


> regarding GC, V8 and Erlang (and possibly that other VMs with the J at the
> beginning) have an edge ..
>
> both LuaJIT and PyPy plan to improve on this though ..
>
> I don't know much about the workings of the various GCs but my feeling is
I wasn't really stressing the GC with my limited test as there weren't very
many data structures in play.
That said over 10 minute load tests I didn't notice any blips in r/s or
response times so for my limited test it was all good.


> Tobias
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130424/1f455730/attachment.htm 

From keturn at keturn.net  Wed Apr 24 17:29:11 2013
From: keturn at keturn.net (Kevin Turner)
Date: Wed, 24 Apr 2013 14:29:11 -0700
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
	<CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
Message-ID: <1366838951.31741.140661222344614.7340658B@webmail.messagingengine.com>

Hi Chitrank,



On Sun, Apr 21, 2013, at 12:00 AM, Chitrank Dixit wrote:

I have progressed to step 3 and submitted some of the patches that are
under review process. I have submitted some of the patches
[1]http://twistedmatrix.com/trac/ticket/6440
[2]http://twistedmatrix.com/trac/ticket/6441
[3]http://twistedmatrix.com/trac/ticket/6438


Thank you for your submissions!  A few notes:

1) To avoid duplication of work, avoid tickets that have recently been
assigned to someone else. That is, the tickets are in status "assigned"
and the "owner" is set. (If the ticket has been assigned for a long
time with no activity, it may be appropriate to ask the owner if
they're still working on it.)

2) When submitting your patch, be sure to place the ticket in "review"
state. Without this, reviewers will not notice it is ready for review.
This is described in step 8 of Submitting a Patch
here: [4]http://twistedmatrix.com/trac/wiki/TwistedDevelopment#Submitti
ngaPatch


Should I give my project proposal to the Mentor ?


Please continue to send ideas for projects to
[5]twisted-gsoc at twistedmatrix.com, it will be received by all us
mentors.

Thanks,

 - Kevin

References

1. http://twistedmatrix.com/trac/ticket/6440
2. http://twistedmatrix.com/trac/ticket/6441
3. http://twistedmatrix.com/trac/ticket/6438
4. http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch
5. mailto:twisted-gsoc at twistedmatrix.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130424/00d64f07/attachment.htm 

From chitrankdixit at gmail.com  Wed Apr 24 21:59:58 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Thu, 25 Apr 2013 07:29:58 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <1366838951.31741.140661222344614.7340658B@webmail.messagingengine.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
	<CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
	<1366838951.31741.140661222344614.7340658B@webmail.messagingengine.com>
Message-ID: <CAH7uNX2m8UUqgm-mC71d=5LXS0_tOn9FqXfXX40Bk_Bjk-G2Zg@mail.gmail.com>

Thanks Kevin for letting me know about the submitted patches you are also a
Mentor on Twisted.
Does my Idea of Porting would work for this year's GSOC under Twisted.
Please let me know this I have made a proposal over this Idea. So should I
submit the Proposal or try to fix more bugs , or I can fix bugs later as
well.

*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*


On Thu, Apr 25, 2013 at 2:59 AM, Kevin Turner <keturn at keturn.net> wrote:

> **
> Hi Chitrank,
>
> On Sun, Apr 21, 2013, at 12:00 AM, Chitrank Dixit wrote:
>
> I have progressed to step 3 and submitted some of the patches that are
> under review process. I have submitted some of the patches
> http://twistedmatrix.com/trac/ticket/6440
> http://twistedmatrix.com/trac/ticket/6441
> http://twistedmatrix.com/trac/ticket/6438
>
>
> Thank you for your submissions!  A few notes:
>
> 1) To avoid duplication of work, avoid tickets that have recently been
> assigned to someone else. That is, the tickets are in status "assigned" and
> the "owner" is set. (If the ticket has been assigned for a long time with
> no activity, it may be appropriate to ask the owner if they're still
> working on it.)
>
> 2) When submitting your patch, be sure to place the ticket in "review"
> state. Without this, reviewers will not notice it is ready for review. This
> is described in step 8 of Submitting a Patch here:
> http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch
>
>
>
> Should I give my project proposal to the Mentor ?
>
>
> Please continue to send ideas for projects to
> twisted-gsoc at twistedmatrix.com, it will be received by all us mentors.
>
> Thanks,
>
>  - Kevin
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130425/730fe50d/attachment.htm 

From rodrigc at crodrigues.org  Thu Apr 25 14:49:00 2013
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 25 Apr 2013 11:49:00 -0700
Subject: [Twisted-Python] Coursera course on network design patterns
In-Reply-To: <516BEA44.7030400@itamarst.org>
References: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>
	<516BEA44.7030400@itamarst.org>
Message-ID: <CAG=rPVdod=h4Pae3L+rJYZAsoCd7FfG-nUi_q7XrcaJq58nSbw@mail.gmail.com>

On Mon, Apr 15, 2013 at 4:53 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> On 04/15/2013 04:47 AM, Craig Rodrigues wrote:
> >
> >
> https://class.coursera.org/posa-001/human_grading/view/courses/970268/assessments/35/submissions
> >
> >
> Cool! I would suggest linking to
> http://twistedmatrix.com/documents/current/core/howto/servers.html
> rather than to IReactorTCP.
>
>
Itamar,

Someone in the class discovered this posting of yours 12 years ago:

http://twistedmatrix.com/pipermail/twisted-python/2001-September/000368.html

where you pointed out where in Twisted there are implementations of the
design patterns in Prof. Schmidt's "Pattern-Oriented Software
Architectures, Volume 2" (POSA2) book.

 We are discussing it here:
https://class.coursera.org/posa-001/forum/thread?thread_id=856#post-3771

Thanks!

-- 
Craig Rodrigues
rodrigc at crodrigues.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130425/5e577684/attachment.htm 

From kevin.horn at gmail.com  Thu Apr 25 14:50:35 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 25 Apr 2013 13:50:35 -0500
Subject: [Twisted-Python] Lore2sphinx current status
Message-ID: <CA+U=zK3e7xaKDxX0y76sVh2hQEjSyDp7GGbnMd-kiz2gc-7X6A@mail.gmail.com>

Someone asked me off-list recently about how to help out with the
Lore2Sphinx project.  My response seemed like it would be generally helpful
to anyone interested, and long enough that I wouldn't want to write it
again, so I'm posting most of it here, for anyone else that is interested.

====

The "current" version of lore2sphinx is here:
https://bitbucket.org/khorn/lore2sphinx

This is the version that is currently being used by the Twisted project in
the documentation buildbot.  However, it is brittle, and hard to modify,
and in general doesn't do some things very well.  It also hasn't been
updated in some time.  I consider it to be in stasis for the time being.

Some time ago I forked that repo into this one:
https://bitbucket.org/khorn/lore2sphinx-ng

The plan for the NG branch is to:
a) split out the rendering of reStructuredText into a separate library.
 That library has it's own repo here: https://bitbucket.org/khorn/rstgen
Eventually I'd like for this library to be useful for any tool which wants
to emit reStructuredText.  The idea is that code using this library will
create a tree of document elements, and each of which knows how to render
itself into reST.  Then you call the .render() element on the root element
in that tree, and you get back some reST.
(the old/current version just created a bunch of strings and munged them
together, which has caused all kinds of ugliness)

b) rewrite/adapt lore2sphinx to use rstgen to generate reST

c) clean up and extend command-line handling to make it easier to use
lore2sphinx in different use-cases.  For example, in the old/current
version it was impossible to only convert a single file, or a single
directory.  You had to convert an entire Sphinx project all at once.  This
was pretty annoying and (I think) has been fixed now.

Any future development should be handled on the lore2sphinx-ng "branch"
and/or the rstgen repo (both mentioned above).


Stuff that needs to be done:

1) Rstgen needs to support a few more core reST element types (by which I
mean the ones supported in vanilla docutils).  The one that comes to mind
immediately is tables.  There is some table support in the old/current
version of lore2sphinx, which it might be possible to adapt.  I haven't
started on tables in the new version at all.

2) Rstgen could use some "convenience" elements, for example, elements for
specific directives, rather than just using the generic directive element
all the time.

3) I'd like Rstgen to also have specific support for generating
Sphinx-specific elements, but I haven't started on this.  Probably most of
these will be subtypes of the document element types already present in
rstgen.  Examples include sphinx-specific directives, etc.

4) Rstgen needs to have some sort of Document object which represents an
individual document, and has the ability to organize things like footnotes,
citations, etc.  There's a stub for this, but, like a platypus, it doesn't
do much.

5) clean up cruft and abandoned code in the lore2sphinx-ng repo.  There's a
lot of it.

6) Finish re-writing the lore2sphinx code which generates rstgen elements.
 Some code for this is there already, but obviously there isn't anything
for the elements that rstgen doesn't handle yet.  Also, some of the code
that is there isn't specific enough, and doesn't yet accurately represent
the way that lore elements should be interpreted.  The old lore2sphinx code
which used strings does a pretty good job of this, I think, and is still in
the repo, AFAICR (I did mention cruft, right?), so you might take a look at
that for more details.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130425/7e5ffea1/attachment.htm 

From chitrankdixit at gmail.com  Thu Apr 25 21:20:29 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Fri, 26 Apr 2013 06:50:29 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <20130420135057.2793.839284122.divmod.xquotient.148@top>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<20130420135057.2793.839284122.divmod.xquotient.148@top>
Message-ID: <CAH7uNX1y_WL5PSs+i_RXj2O=k9dn=iUOxJBXAWmQ_7gqh8ntKg@mail.gmail.com>

Thanks Exarkun for making me aware of the GSOC process of twisted. I have
made my project proposal and looking forward for further suggestions from
the mentor.

Proposal Link:
http://www.google-melange.com/gsoc/proposal/review/google/gsoc2013/chitrankdixit/1



*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*


On Sat, Apr 20, 2013 at 7:20 PM, <exarkun at twistedmatrix.com> wrote:

> >On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit
> ><chitrankdixit at gmail.com>wrote:
> >>Good Evening
> >>
> >>Twisted Matrix is a great module for Networking and I would like to
> >>work
> >>with this project. I want to propose Twisted a new Idea of Promoting
> >>the
> >>project to Porting to Python 3 (with backward compatibility). Porting
> >>benefits by grabbing the Python 3 users and would prepare the Twisted
> >>for
> >>the Future.
> >
>
> Please have a look at <http://twistedmatrix.com/trac/wiki/GSoC2013>.
> Thanks!
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130426/2316e13f/attachment.htm 

From indradhanush.gupta at gmail.com  Thu Apr 25 23:09:56 2013
From: indradhanush.gupta at gmail.com (Indradhanush Gupta)
Date: Fri, 26 Apr 2013 08:39:56 +0530
Subject: [Twisted-Python] GSoC Project Idea
Message-ID: <CAO=EPqgvT+xnRyRqPDpqTT_j+=wZCBhk+YMsygvNF-517EQkzw@mail.gmail.com>

Hi,

I want to help improve Twisted's support for Mobile Communications. Based
on a chat with exarkun on irc a couple of days back, he suggested : 'write
some drop-in software for installation on raspi so that you can scatter a
handful of them over a square km or so and have a network with no
additional configuration'

I would like to build on that. He also suggested that writing a routing
protocol would be long enough for a GSoC project, given the time
limitations. So, what could be initial starting point of such an idea? I
mean in terms of the routing protocol, I guess its going to be one for a
MANET, and thus I am thinking of implementing one of the Reactive routing
protocols, probably either DSDV or OLSR. Could someone shed light on how to
frame this project?

Thanks,
Indradhanush Gupta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130426/da1d4ec9/attachment.htm 

From exarkun at twistedmatrix.com  Sun Apr 28 00:05:28 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Apr 2013 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1367121928.16.2010908647@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20130428/293c4f2d/attachment.htm 

From bra at fsn.hu  Sun Apr 28 05:55:01 2013
From: bra at fsn.hu (Attila Nagy)
Date: Sun, 28 Apr 2013 11:55:01 +0200
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
In-Reply-To: <200406111656.45460.dev-python@smartology.nl>
References: <200406111534.56969.dev-python@smartology.nl>
	<1086964536.16996.7.camel@sheriffpony>
	<200406111656.45460.dev-python@smartology.nl>
Message-ID: <517CF1F5.1070004@fsn.hu>

On 06/11/04 16:56, Remy C. Cool wrote:
> On Friday 11 June 2004 16:35, Itamar Shtull-Trauring wrote:
>> On Fri, 2004-06-11 at 09:34, Remy C. Cool wrote:
>>> I'm currently in the process of changing from a customized
>>> SimpleXMLRPCServer to a twisted XMLRPC server solution and I need
>>> to insert the client IP into the attributes passed to the called
>>> xmlrpc method. Anyone who knows the answer and is willing to
>>> share the info?
>> The render() method of the XMLRPC class has access to the request
>> object, which may have request.getPeer() or
>> request.transport.getPeer().
> Thanks for the answer.
>
> The following works, but is this a 'twisted' way to go?
>
>
> class Examle(xmlrpc.XMLRPC):
>      """An example object to be published."""
>          
>      def _getPeerAddress(self):
>              return self.request.getClientIP()
>              
>      def render(self, request):
>          self.request = request
>          xmlrpc.XMLRPC.render(self, request)
>
Just for the record, this is the way to go (guess it was implemented later):

from twisted.web import xmlrpc
class Examle(xmlrpc.XMLRPC):
	@xmlrpc.withRequest
	def xmlrpc_whatIsMyAddress(self,request):
		return request.transport.getPeer().host




From itamar at itamarst.org  Tue Apr 30 18:41:57 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 30 Apr 2013 18:41:57 -0400
Subject: [Twisted-Python] [Twisted-gsoc] Eligible for OPW this summer?
In-Reply-To: <8EC18F4F-4503-4E61-92B1-AFC35054C556@cs.wisc.edu>
References: <17C2CA28-F2AE-42EC-ABD9-1F27F99739F3@cs.wisc.edu>
	<61E7F961-E26B-4912-9DD3-75059B0CF5D8@cs.wisc.edu>
	<517F0ABB.4060007@itamarst.org>
	<8EC18F4F-4503-4E61-92B1-AFC35054C556@cs.wisc.edu>
Message-ID: <518048B5.50403@itamarst.org>

On 04/30/2013 04:28 PM, mulhern wrote:
> OK!
>
> Should I send in code samples to you?or do they go elsewhere?

Send them to twisted-gsoc at twistedmatrix.com.

> A lot of the easy tickets are in some sense taken?at least have a patch.

Yeah, lots of Google Summer of Code candidates so we're running low.

> I think some of the more challenging require unit tests. I'm going to take a stab at #6484 which is to write a unit test for a particular procedure?essentially reverse engineering what it ought to do based on the existing code and then putting that into some unit tests. Let me know if you think something else would be better.
>
> Thanks for the help and suggestions.
>
That sounds like an OK ticket. If you look through the code there are 
existing tests that create directory structures with some utility 
function, IIRC.

Since the deadline is tomorrow, definitely send us code samples ASAP, 
and you should make sure to send in your submission by the deadline 
(https://live.gnome.org/OutreachProgramForWomen has the details). Was 
there a particular project idea you wanted to work on?


From itamar at itamarst.org  Tue Apr 30 19:22:53 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 30 Apr 2013 19:22:53 -0400
Subject: [Twisted-Python] [Twisted-gsoc] Eligible for OPW this summer?
In-Reply-To: <518048B5.50403@itamarst.org>
References: <17C2CA28-F2AE-42EC-ABD9-1F27F99739F3@cs.wisc.edu>
	<61E7F961-E26B-4912-9DD3-75059B0CF5D8@cs.wisc.edu>
	<517F0ABB.4060007@itamarst.org>
	<8EC18F4F-4503-4E61-92B1-AFC35054C556@cs.wisc.edu>
	<518048B5.50403@itamarst.org>
Message-ID: <5180524D.6060005@itamarst.org>

Argh. Wrong list. Sorry.


From glyph at twistedmatrix.com  Mon Apr  1 01:49:41 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 1 Apr 2013 00:49:41 -0700
Subject: [Twisted-Python] How to determine whether transport.write()
	succeed?
In-Reply-To: <CAHZXDMJy4Sd84=dFyKyKJqDPv=YZQ2a=B+UCL-F291d4jUs60g@mail.gmail.com>
References: <CAHZXDMKnTsxmZNy7a6aq8jbP6ttpgbOfZwrP8uu6TNpqvfQgDA@mail.gmail.com>
	<97464120-5223-4F58-8BB8-B4C9713EC0D1@twistedmatrix.com>
	<CAHZXDMJy4Sd84=dFyKyKJqDPv=YZQ2a=B+UCL-F291d4jUs60g@mail.gmail.com>
Message-ID: <63CABE5D-027D-41B4-B00C-2F96EE8F2F4C@twistedmatrix.com>


On Mar 31, 2013, at 6:09 PM, Todong Ma <gbstack08 at gmail.com> wrote:

> I wrote a simple client and server to get system information (e.g. cpu, memory, etc.)
> Client send 'cpu' to the server, then server will return cpu's information to client.
> 
> Now client send multiple commands to server one time, e.g. cpu, memory, database, hard disk. But sometimes server couldn't receive some type information (e.g. cpu, database), and the missed information type is not fixed every time.
> 
> So I want client to check whether ITransport.write() sends message to server successfully. If failed, client will resend the message to server.

It's a good thing that write() doesn't convey information about send() succeeding so you can't trust it :).  You can't rely on send() succeeding to convey this information: send() can succeed but all that means is that data moved from your application into your kernel.

What you want to do is to have an application-level acknowledgement of the data that was sent.

AMP will provide this for you automatically; when the Deferred returned by callRemote fires, the other end has received and acknowledged the information.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130401/4a28897b/attachment.html>

From cam.turn at gmail.com  Mon Apr  1 14:55:48 2013
From: cam.turn at gmail.com (Shell)
Date: Mon, 1 Apr 2013 21:55:48 +0100
Subject: [Twisted-Python] twisted.cred interface deficiences
Message-ID: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>

The twisted.cred.IUsernamePassword interface declares:

* IUsernamePassword.username - "The username associated with these credentials."
* IUsernamePassword.password - "The password associated with these credentials."
* IUsernamePassword.checkPassword(password) - "Validate these
credentials against the correct password."

The issue is that the interface (according to exarkun) allows you to
implement checkPassword() to do things other than the obvious
"password == self.password". Now, this is an issue because Twisted
then explicitly supports (again, according to exarkun) two different
uses of this interface by the credentials checker:

* Call the checkPassword() method, passing it the correct password
* Just take the password out and do whatever you want with it (which
is necessary in any secure system)

Now, imagine I write a version of checkPassword() in a library which
does something security-centric (what would this be? shouldn't it be
part of the checker?), assuming that it'll be used by a credentials
checker which calls checkPassword(). Except... then, a library user
uses it with a credentials checker which checks the password itself.
Now they're skipping over my security-centric code!

So I have to tell my library users that they have to use my library
with a credentials checker which makes sure to call checkPassword(),
not just one which accepts the correct interface.

IUsernamePassword's docstring claims that the stored password must be
reversible to plaintext to be compared with the password, which
implies that taking the password out and doing other things is
incorrect, unlike what exarkun suggests. In this case, exposing
password in the interface makes little sense. In addition,
twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
entirely already
(http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238).

I propose that IUsernamePassword should be split into at least two interfaces:

* IUsernamePassword, with only username and password, no methods,
which allows password to be used in any way
* Another interface, which only defines username and checkPassword() -
possibly just a rename of IUsernameHashedPassword, which declares a
similar interface

However, this has the issue that any credential checker which can use
the second interface would also be able to use an IUsernamePassword
here if there were an adapter between the two, but support for this
would have to go into every credential checker which supports the
second interface at present. Maybe the Portal could automatically
search for adapters if it can't find a direct match?

Thanks,
Cameron



From _ at lvh.cc  Mon Apr  1 15:12:21 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 1 Apr 2013 23:12:21 +0200
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
Message-ID: <CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>

Why does IUsernameHashedPassword have to be renamed? It sounds like it's
the appropriate thing already.


On Mon, Apr 1, 2013 at 10:55 PM, Shell <cam.turn at gmail.com> wrote:

> The twisted.cred.IUsernamePassword interface declares:
>
> * IUsernamePassword.username - "The username associated with these
> credentials."
> * IUsernamePassword.password - "The password associated with these
> credentials."
> * IUsernamePassword.checkPassword(password) - "Validate these
> credentials against the correct password."
>
> The issue is that the interface (according to exarkun) allows you to
> implement checkPassword() to do things other than the obvious
> "password == self.password". Now, this is an issue because Twisted
> then explicitly supports (again, according to exarkun) two different
> uses of this interface by the credentials checker:
>
> * Call the checkPassword() method, passing it the correct password
> * Just take the password out and do whatever you want with it (which
> is necessary in any secure system)
>
> Now, imagine I write a version of checkPassword() in a library which
> does something security-centric (what would this be? shouldn't it be
> part of the checker?), assuming that it'll be used by a credentials
> checker which calls checkPassword(). Except... then, a library user
> uses it with a credentials checker which checks the password itself.
> Now they're skipping over my security-centric code!
>
> So I have to tell my library users that they have to use my library
> with a credentials checker which makes sure to call checkPassword(),
> not just one which accepts the correct interface.
>
> IUsernamePassword's docstring claims that the stored password must be
> reversible to plaintext to be compared with the password, which
> implies that taking the password out and doing other things is
> incorrect, unlike what exarkun suggests. In this case, exposing
> password in the interface makes little sense. In addition,
> twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
> entirely already
> (
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238
> ).
>
> I propose that IUsernamePassword should be split into at least two
> interfaces:
>
> * IUsernamePassword, with only username and password, no methods,
> which allows password to be used in any way
> * Another interface, which only defines username and checkPassword() -
> possibly just a rename of IUsernameHashedPassword, which declares a
> similar interface
>
> However, this has the issue that any credential checker which can use
> the second interface would also be able to use an IUsernamePassword
> here if there were an adapter between the two, but support for this
> would have to go into every credential checker which supports the
> second interface at present. Maybe the Portal could automatically
> search for adapters if it can't find a direct match?
>
> Thanks,
> Cameron
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130401/a635dec6/attachment.html>

From cam.turn at gmail.com  Mon Apr  1 15:34:36 2013
From: cam.turn at gmail.com (Shell)
Date: Mon, 1 Apr 2013 22:34:36 +0100
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
Message-ID: <CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>

It actually might be the appropriate thing already. There's a couple
of possible reasons for renaming; one is that the password might not
be hashed but the credentials object wants to insert additional logic
(exarkun's statement in IRC) anyway, but technically that's just
hashing using the identity function, so it should be OK.

The other is that the credentials object might want to collect the
plaintext password, and perform some logic based on that *before*
collecting something which can be compared to something derived from
the plaintext password from the other end of a protocol. I don't know
of any protocols which do this off the top of my head, but I have a
suspicion that at least a couple exist, and they'd fit perfectly into
this interface. If none do, then keeping it with the same name sounds
fine to me.

Cameron

On 1 April 2013 22:12, Laurens Van Houtven <_ at lvh.cc> wrote:
> Why does IUsernameHashedPassword have to be renamed? It sounds like it's the
> appropriate thing already.
>
>
> On Mon, Apr 1, 2013 at 10:55 PM, Shell <cam.turn at gmail.com> wrote:
>>
>> The twisted.cred.IUsernamePassword interface declares:
>>
>> * IUsernamePassword.username - "The username associated with these
>> credentials."
>> * IUsernamePassword.password - "The password associated with these
>> credentials."
>> * IUsernamePassword.checkPassword(password) - "Validate these
>> credentials against the correct password."
>>
>> The issue is that the interface (according to exarkun) allows you to
>> implement checkPassword() to do things other than the obvious
>> "password == self.password". Now, this is an issue because Twisted
>> then explicitly supports (again, according to exarkun) two different
>> uses of this interface by the credentials checker:
>>
>> * Call the checkPassword() method, passing it the correct password
>> * Just take the password out and do whatever you want with it (which
>> is necessary in any secure system)
>>
>> Now, imagine I write a version of checkPassword() in a library which
>> does something security-centric (what would this be? shouldn't it be
>> part of the checker?), assuming that it'll be used by a credentials
>> checker which calls checkPassword(). Except... then, a library user
>> uses it with a credentials checker which checks the password itself.
>> Now they're skipping over my security-centric code!
>>
>> So I have to tell my library users that they have to use my library
>> with a credentials checker which makes sure to call checkPassword(),
>> not just one which accepts the correct interface.
>>
>> IUsernamePassword's docstring claims that the stored password must be
>> reversible to plaintext to be compared with the password, which
>> implies that taking the password out and doing other things is
>> incorrect, unlike what exarkun suggests. In this case, exposing
>> password in the interface makes little sense. In addition,
>> twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
>> entirely already
>>
>> (http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238).
>>
>> I propose that IUsernamePassword should be split into at least two
>> interfaces:
>>
>> * IUsernamePassword, with only username and password, no methods,
>> which allows password to be used in any way
>> * Another interface, which only defines username and checkPassword() -
>> possibly just a rename of IUsernameHashedPassword, which declares a
>> similar interface
>>
>> However, this has the issue that any credential checker which can use
>> the second interface would also be able to use an IUsernamePassword
>> here if there were an adapter between the two, but support for this
>> would have to go into every credential checker which supports the
>> second interface at present. Maybe the Portal could automatically
>> search for adapters if it can't find a direct match?
>>
>> Thanks,
>> Cameron
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> --
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From byrsa at sinkhole.me  Tue Apr  2 00:48:58 2013
From: byrsa at sinkhole.me (byr sa)
Date: Mon, 1 Apr 2013 23:48:58 -0700
Subject: [Twisted-Python] t.n.c.lookupAddress returns DNSNameError for
	hostnames w/ no A record
Message-ID: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>

Hi all,

I saw in previous posts that DNSNameError signifies an 'NXDOMAIN' status
and DNSServerError signifies 'SERVFAIL'. However, I am getting a
DNSNameError from twisted.names.client.lookupAddress() when I query a
hostname that has no A records, but *does have* other records (NS, SOA,
etc).

An example:

; <<>> DiG 9.8.3-P1 <<>> megaupload.com ANY
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 19402
;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;megaupload.com. IN ANY

;; ANSWER SECTION:
megaupload.com. 21600 IN SOA ns5.cirfu.net. ipr.ic.fbi.gov. 2013022001 3600
900 604800 900
megaupload.com. 21600 IN NS ns5.cirfu.net.
megaupload.com. 21600 IN NS ns6.cirfu.net.


dig is telling me 'status: NOERROR'. Is there an easy way to determine the
status of a DNS query from a twisted.names.dns.Message ? I checked the
source and it wasn't readily apparent (to me). In my code I'm checking the
value of failure.value.__class__.__name__ to determine if an answer is NX
or SERVFAIL. Seems like there should be a better way... Here's the code if
anybody wants to take a look:

http://paste.ubuntu.com/5669612/

Thanks to the Twisted devs and maintainers for all your hard work!


byrsa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130401/13d189b1/attachment.html>

From _ at lvh.cc  Tue Apr  2 02:51:33 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 2 Apr 2013 10:51:33 +0200
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
Message-ID: <CAE_Hg6ZwD0LigLdiNdwJsBkWLXUGYUz_JpU8Nmu8qEnJ7PtMOg@mail.gmail.com>

Okay, cool. I definitely agree that IUsernamePassword.checkPassword is dumb
and support deprecating it.

On Monday, April 1, 2013, Shell wrote:

> It actually might be the appropriate thing already. There's a couple
> of possible reasons for renaming; one is that the password might not
> be hashed but the credentials object wants to insert additional logic
> (exarkun's statement in IRC) anyway, but technically that's just
> hashing using the identity function, so it should be OK.
>
> The other is that the credentials object might want to collect the
> plaintext password, and perform some logic based on that *before*
> collecting something which can be compared to something derived from
> the plaintext password from the other end of a protocol. I don't know
> of any protocols which do this off the top of my head, but I have a
> suspicion that at least a couple exist, and they'd fit perfectly into
> this interface. If none do, then keeping it with the same name sounds
> fine to me.
>
> Cameron
>
> On 1 April 2013 22:12, Laurens Van Houtven <_ at lvh.cc> wrote:
> > Why does IUsernameHashedPassword have to be renamed? It sounds like it's
> the
> > appropriate thing already.
> >
> >
> > On Mon, Apr 1, 2013 at 10:55 PM, Shell <cam.turn at gmail.com> wrote:
> >>
> >> The twisted.cred.IUsernamePassword interface declares:
> >>
> >> * IUsernamePassword.username - "The username associated with these
> >> credentials."
> >> * IUsernamePassword.password - "The password associated with these
> >> credentials."
> >> * IUsernamePassword.checkPassword(password) - "Validate these
> >> credentials against the correct password."
> >>
> >> The issue is that the interface (according to exarkun) allows you to
> >> implement checkPassword() to do things other than the obvious
> >> "password == self.password". Now, this is an issue because Twisted
> >> then explicitly supports (again, according to exarkun) two different
> >> uses of this interface by the credentials checker:
> >>
> >> * Call the checkPassword() method, passing it the correct password
> >> * Just take the password out and do whatever you want with it (which
> >> is necessary in any secure system)
> >>
> >> Now, imagine I write a version of checkPassword() in a library which
> >> does something security-centric (what would this be? shouldn't it be
> >> part of the checker?), assuming that it'll be used by a credentials
> >> checker which calls checkPassword(). Except... then, a library user
> >> uses it with a credentials checker which checks the password itself.
> >> Now they're skipping over my security-centric code!
> >>
> >> So I have to tell my library users that they have to use my library
> >> with a credentials checker which makes sure to call checkPassword(),
> >> not just one which accepts the correct interface.
> >>
> >> IUsernamePassword's docstring claims that the stored password must be
> >> reversible to plaintext to be compared with the password, which
> >> implies that taking the password out and doing other things is
> >> incorrect, unlike what exarkun suggests. In this case, exposing
> >> password in the interface makes little sense. In addition,
> >> twisted.cred.checkers.FilePasswordDB apparently ignores this docstring
> >> entirely already
> >>
> >> (
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-12.3.0/twisted/cred/checkers.py#L238
> ).
> >>
> >> I propose that IUsernamePassword should be split into at least two
> >> interfaces:
> >>
> >> * IUsernamePassword, with only username and password, no methods,
> >> which allows password to be used in any way
> >> * Another interface, which only defines username and checkPassword() -
> >> possibly just a rename of IUsernameHashedPassword, which declares a
> >> similar interface
> >>
> >> However, this has the issue that any credential checker which can use
> >> the second interface would also be able to use an IUsernamePassword
> >> here if there were an adapter between the two, but support for this
> >> would have to go into every credential checker which supports the
> >> second interface at present. Maybe the Portal could automatically
> >> search for adapters if it can't find a direct match?
> >>
> >> Thanks,
> >> Cameron
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
> >
> > --
> > cheers
> > lvh
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>


-- 
Sent from Gmail Mobile
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130402/114ded18/attachment.html>

From hs at ox.cx  Tue Apr  2 04:52:39 2013
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 2 Apr 2013 12:52:39 +0200
Subject: [Twisted-Python] Current callback best practices
Message-ID: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>

Hi,

I’ve asked this one already at the Twisted dinner (thanks again for it, it was probably my PyCon highlight) and got various answers from people sitting around me. I’m still indecisive so I’d like to gather even more opinions[1]. I already tried to ask on IRC but my time zone is just not very #twisted friendly so I got zero replies.

My question can be simplified to: Closures yes or no?

They seem *really* handy since they allow to have some data present without handing it through all the time. Eg in my cred checker, I can refer to the user name from the closure instead of passing it around all the time – making the code much cleaner. Also most current examples and callbacks-are-hard-FUD-rebuttals seem to use them.

OTOH, private methods like `_cbPrintResult` are nicer to test individually.

If “yes, closures”: Still using cb/eb prefixes? I don’t see them very often in recent examples. What about addBoth handlers?

Bonus points for the preferred style for the Twisted code base.

Thanks in advance & thank you for your time,
Hynek

[1]: I’d be glad if people from the dinner replied again too so I/we have it in written form, my memory tends to be rather sloppy.


From _ at lvh.cc  Tue Apr  2 05:11:41 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 2 Apr 2013 13:11:41 +0200
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
Message-ID: <CAE_Hg6YMSJ=k7+tQ0y5OXrx6wvQN4vqk0D4SBFVUJsFnnxg2fQ@mail.gmail.com>

I use closures unless I use the same callback all the time.
On Apr 2, 2013 1:04 PM, "Hynek Schlawack" <hs at ox.cx> wrote:

> Hi,
>
> I’ve asked this one already at the Twisted dinner (thanks again for it, it
> was probably my PyCon highlight) and got various answers from people
> sitting around me. I’m still indecisive so I’d like to gather even more
> opinions[1]. I already tried to ask on IRC but my time zone is just not
> very #twisted friendly so I got zero replies.
>
> My question can be simplified to: Closures yes or no?
>
> They seem *really* handy since they allow to have some data present
> without handing it through all the time. Eg in my cred checker, I can refer
> to the user name from the closure instead of passing it around all the time
> – making the code much cleaner. Also most current examples and
> callbacks-are-hard-FUD-rebuttals seem to use them.
>
> OTOH, private methods like `_cbPrintResult` are nicer to test individually.
>
> If “yes, closures”: Still using cb/eb prefixes? I don’t see them very
> often in recent examples. What about addBoth handlers?
>
> Bonus points for the preferred style for the Twisted code base.
>
> Thanks in advance & thank you for your time,
> Hynek
>
> [1]: I’d be glad if people from the dinner replied again too so I/we have
> it in written form, my memory tends to be rather sloppy.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130402/cab7bed2/attachment.html>

From exarkun at twistedmatrix.com  Tue Apr  2 06:03:19 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 02 Apr 2013 12:03:19 -0000
Subject: [Twisted-Python] t.n.c.lookupAddress returns DNSNameError
	for	hostnames w/ no A record
In-Reply-To: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>
References: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>
Message-ID: <20130402120319.24331.1753254230.divmod.xquotient.1@top>

On 06:48 am, byrsa at sinkhole.me wrote:
>Hi all,
>
>I saw in previous posts that DNSNameError signifies an 'NXDOMAIN' 
>status
>and DNSServerError signifies 'SERVFAIL'. However, I am getting a
>DNSNameError from twisted.names.client.lookupAddress() when I query a
>hostname that has no A records, but *does have* other records (NS, SOA,
>etc).
>
>An example:
>
>; <<>> DiG 9.8.3-P1 <<>> megaupload.com ANY
>;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 19402
>;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
>
>;; QUESTION SECTION:
>;megaupload.com. IN ANY
>
>;; ANSWER SECTION:
>megaupload.com. 21600 IN SOA ns5.cirfu.net. ipr.ic.fbi.gov. 2013022001 
>3600
>900 604800 900
>megaupload.com. 21600 IN NS ns5.cirfu.net.
>megaupload.com. 21600 IN NS ns6.cirfu.net.
>
>
>dig is telling me 'status: NOERROR'. Is there an easy way to determine 
>the
>status of a DNS query from a twisted.names.dns.Message ? I checked the
>source and it wasn't readily apparent (to me). In my code I'm checking 
>the
>value of failure.value.__class__.__name__ to determine if an answer is 
>NX
>or SERVFAIL. Seems like there should be a better way... Here's the code 
>if
>anybody wants to take a look:
>
>http://paste.ubuntu.com/5669612/
>
>Thanks to the Twisted devs and maintainers for all your hard work!

Hi byrsa,

The behavior you're describing does sound wrong.  However, I wasn't able 
to reproduce it locally.  Running your example, I get [] for 
megaupload.com, not an error.  Perhaps there is a tricky DNS server 
involved somewhere that is changing the response unexpectedly?  I 
suggest using something like tcpdump or wireshark to take a look at the 
actual traffic and perhaps produce a more deterministic demonstration of 
the problem.

Regarding how you should detect certain errors, though, Failure just 
wraps normal exceptions, so you can use `isinstance` to check for them 
instead of checking by name.  Failure also provides some APIs that wrap 
up isinstance to provide some more commonly useful behavior - see 
Failure.check and Failure.trap.

And regarding determining error from a Message, you can use the rCode 
attribute to get the raw server response code as an integer.  The values 
and their meanings are defined in the DNS RFC and there are symbolic 
constants in twisted.names.dns - eg OK, ENAME, ESERVER, etc.

Hope this helps,
Jean-Paul



From exarkun at twistedmatrix.com  Tue Apr  2 06:06:14 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 02 Apr 2013 12:06:14 -0000
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CAE_Hg6ZwD0LigLdiNdwJsBkWLXUGYUz_JpU8Nmu8qEnJ7PtMOg@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
	<CAE_Hg6ZwD0LigLdiNdwJsBkWLXUGYUz_JpU8Nmu8qEnJ7PtMOg@mail.gmail.com>
Message-ID: <20130402120614.24331.1066953971.divmod.xquotient.2@top>

On 08:51 am, _ at lvh.cc wrote:
>Okay, cool. I definitely agree that IUsernamePassword.checkPassword is 
>dumb
>and support deprecating it.

Hey lvh,

Please stop top-posting. :)

Jean-Paul



From glyph at twistedmatrix.com  Tue Apr  2 08:32:45 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 2 Apr 2013 07:32:45 -0700
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
Message-ID: <9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>


On Apr 2, 2013, at 3:52 AM, Hynek Schlawack <hs at ox.cx> wrote:

> My question can be simplified to: Closures yes or no?

"As appropriate".

> They seem *really* handy since they allow to have some data present without handing it through all the time. Eg in my cred checker, I can refer to the user name from the closure instead of passing it around all the time – making the code much cleaner. Also most current examples and callbacks-are-hard-FUD-rebuttals seem to use them.
> 
> OTOH, private methods like `_cbPrintResult` are nicer to test individually.

Ideally, any private method exists in service of some goal of the public interface.  It's best to test them by exercising the case in the public API which they support, rather than calling them directly.  Before you write any such method, you ought to be able to write a failing test for the public interface which doesn't pass because you haven't written the private method yet :).

If you're writing private methods which need their own extensive internal test coverage, it might be good to consider whether what you're writing really needs to be public functionality.

However, even if you're going to have a private implementation detail complex enough to warrant its own test suite independent of the public feature it's supporting – and it is better to have such a suite than to have an explosion of irrelevant complexity in the tests for the public API - it's best to go with a private class or module than private methods on a public class.  Callback methods like _cbSomethingSomethingResult generally indicate an ad-hoc state machine as part of your class.  Chances are, if you're going down this road, you're missing quite a few states, and the ad-hoc state is smeared out across many poorly-encapsulated attributes.  After all, since it's not a closure, your only place to store any resulting state is 'self'.

The best solution at this point is not to try to test _cbWhatever methods directly, but rather, to spin out all the _cbSetDisconnected and _ebFixUpStuff methods into a dedicated class which has its own "public" interface that can be tested, but which is still private for Twisted's compatibility purposes.  That dedicated class can then have an explicit state machine of its own and will have attributes dedicated to just encapsulating the state that it's tasked with maintaining, instead of a random potpourri of different states from different responsibilities.

So I guess my recommendation would be "closures", because any time using private methods as callbacks would be better, it seems like something else has gone wrong :).

> If “yes, closures”: Still using cb/eb prefixes? I don’t see them very often in recent examples. What about addBoth handlers?

If you're using a closure, use a descriptive name.  The 'cb/eb' prefix notation is not particularly illustrative; I often use an english word like 'when'.  whenDisconnected, whenResponseReceived, etc.

The only hard and fast rule is, if you have a closure, don't start its name with an underscore, there's no point to that :).

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130402/d1717425/attachment.html>

From byrsa at sinkhole.me  Tue Apr  2 09:40:12 2013
From: byrsa at sinkhole.me (byr sa)
Date: Tue, 2 Apr 2013 08:40:12 -0700
Subject: [Twisted-Python] t.n.c.lookupAddress returns DNSNameError for
 hostnames w/ no A record
In-Reply-To: <20130402120319.24331.1753254230.divmod.xquotient.1@top>
References: <CAJZAHMGBeoZ23uDGUY_rbqYue_1PzEZQsQrbP41c5-9OQXdxdA@mail.gmail.com>
	<20130402120319.24331.1753254230.divmod.xquotient.1@top>
Message-ID: <CAJZAHMHeekXBS_QCHzrgJAihNU8sDcStmxAbCXrxm9vHLENo_w@mail.gmail.com>

On Tue, Apr 2, 2013 at 5:03 AM, <exarkun at twistedmatrix.com> wrote:

> Hi byrsa,
>
> The behavior you're describing does sound wrong.  However, I wasn't able
> to reproduce it locally.  Running your example, I get [] for
> megaupload.com, not an error.  Perhaps there is a tricky DNS server
> involved somewhere that is changing the response unexpectedly?  I
> suggest using something like tcpdump or wireshark to take a look at the
> actual traffic and perhaps produce a more deterministic demonstration of
> the problem.
>
>
You are correct! I was running the code on a Linux machine and the 'dig'
command on my Macbook. The answers were different. At least I know the code
is working!



> Regarding how you should detect certain errors, though, Failure just
> wraps normal exceptions, so you can use `isinstance` to check for them
> instead of checking by name.  Failure also provides some APIs that wrap
> up isinstance to provide some more commonly useful behavior - see
> Failure.check and Failure.trap.
>
>
'isinstance' was my initial thought, as well. I'll have to re-visit that.
Thanks for the pointer.



> And regarding determining error from a Message, you can use the rCode
> attribute to get the raw server response code as an integer.  The values
> and their meanings are defined in the DNS RFC and there are symbolic
> constants in twisted.names.dns - eg OK, ENAME, ESERVER, etc.
>
>
That doesn't sound too bad.


> Hope this helps,
> Jean-Paul
>
>
Your feedback has been immensely helpful, thanks a lot, Jean-Paul!

 byrsa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130402/af0415ff/attachment.html>

From glyph at twistedmatrix.com  Tue Apr  2 09:57:55 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 2 Apr 2013 08:57:55 -0700
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <CAE_Hg6YMSJ=k7+tQ0y5OXrx6wvQN4vqk0D4SBFVUJsFnnxg2fQ@mail.gmail.com>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
	<CAE_Hg6YMSJ=k7+tQ0y5OXrx6wvQN4vqk0D4SBFVUJsFnnxg2fQ@mail.gmail.com>
Message-ID: <6473320D-E4D1-485F-B251-BD8AD88E9DBB@twistedmatrix.com>

On Apr 2, 2013, at 4:11 AM, Laurens Van Houtven <_ at lvh.cc> wrote:
> I use closures unless I use the same callback all the time.
> 

Hey Laurens,

On this list we prefer inline replies, not top-posting.  Please stop top-posting.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130402/c6df0256/attachment-0001.html>

From glyph at twistedmatrix.com  Tue Apr  2 17:04:21 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 2 Apr 2013 16:04:21 -0700
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
Message-ID: <EAE3E9B5-52C6-4CBA-8BFE-0F982D05A3E8@twistedmatrix.com>


On Apr 1, 2013, at 2:34 PM, Shell <cam.turn at gmail.com> wrote:

>>> I propose that IUsernamePassword should be split into at least two
>>> interfaces:
>>> 
>>> * IUsernamePassword, with only username and password, no methods,
>>> which allows password to be used in any way
>>> * Another interface, which only defines username and checkPassword() -
>>> possibly just a rename of IUsernameHashedPassword, which declares a
>>> similar interface
>>> 
>>> However, this has the issue that any credential checker which can use
>>> the second interface would also be able to use an IUsernamePassword
>>> here if there were an adapter between the two, but support for this
>>> would have to go into every credential checker which supports the
>>> second interface at present. Maybe the Portal could automatically
>>> search for adapters if it can't find a direct match?

These don't sound like bad ideas, but I think that if you're going to try to fix cred's built-in credentials, this is a pretty labor-intensive and not particularly rewarding path to go down.  Further refining the sad username+password credential interface will provide only some internal factoring improvements to existing types of authentication, at the cost of retrofitting all of them; not to mention dealing with broad-spectrum deprecations.

A better use of energy would be directed at getting a generic SASL credentials implementation; in other words, fixing this fairly ancient ticket: <https://twistedmatrix.com/trac/ticket/2015>.

A well-implemented SASL credentials interface will address these issues, as well as allowing for proper challenge-response authentication, digest auth, external auth mechanisms like TLS, et cetera.

Your idea about adapters is well taken though; having the portal do that when SASL-ified checkers are available seems reasonable, provided that it won't break anything.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130402/534a836b/attachment.html>

From gbstack08 at gmail.com  Wed Apr  3 03:09:14 2013
From: gbstack08 at gmail.com (Todong Ma)
Date: Wed, 3 Apr 2013 17:09:14 +0800
Subject: [Twisted-Python] How to determine whether transport.write()
	succeed?
In-Reply-To: <63CABE5D-027D-41B4-B00C-2F96EE8F2F4C@twistedmatrix.com>
References: <CAHZXDMKnTsxmZNy7a6aq8jbP6ttpgbOfZwrP8uu6TNpqvfQgDA@mail.gmail.com>
	<97464120-5223-4F58-8BB8-B4C9713EC0D1@twistedmatrix.com>
	<CAHZXDMJy4Sd84=dFyKyKJqDPv=YZQ2a=B+UCL-F291d4jUs60g@mail.gmail.com>
	<63CABE5D-027D-41B4-B00C-2F96EE8F2F4C@twistedmatrix.com>
Message-ID: <CAHZXDMJKC-tAAW1YY5xV8E6cBjBir+6CDBtfrX0N_RqrPzZsvA@mail.gmail.com>

Ok, will try AMP

thank you very much!


On Mon, Apr 1, 2013 at 3:49 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Mar 31, 2013, at 6:09 PM, Todong Ma <gbstack08 at gmail.com> wrote:
>
> I wrote a simple client and server to get system information (e.g. cpu,
> memory, etc.)
> Client send 'cpu' to the server, then server will return cpu's information
> to client.
>
> Now client send multiple commands to server one time, e.g. cpu, memory,
> database, hard disk. But sometimes server couldn't receive some type
> information (e.g. cpu, database), and the missed information type is not
> fixed every time.
>
> So I want client to check whether ITransport.write() sends message to
> server successfully. If failed, client will resend the message to server.
>
>
> It's a good thing that write() doesn't convey information about send()
> succeeding so you can't trust it :).  You can't rely on send() succeeding
> to convey this information: send() can succeed but all that means is that
> data moved from your application into your kernel.
>
> What you want to do is to have an application-level acknowledgement of the
> data that was sent.
>
> AMP will provide this for you automatically; when the Deferred returned by
> callRemote fires, the other end has received and acknowledged the
> information.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/4d54bd6b/attachment.html>

From therve at free.fr  Wed Apr  3 05:11:21 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Wed, 03 Apr 2013 13:11:21 +0200
Subject: [Twisted-Python] Twisted 13.0.0 released
Message-ID: <515C0E59.8070109@free.fr>

On behalf of Twisted Matrix Laboratories, I am pleased to announce the
release of Twisted 13.0.

Among the 70 tickets closed, we can see:

 * A new "Introduction to Deferreds" document that you can find here:
http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html

 * A fix in twisted.web.template where attributes were not quoted
properly, risking HTML injection.

 * Support for unicode domain names in twisted.names SRVConnector and
Name classes, after a 12.3 regression.

 * A workaround for platform limitations when trying to schedule events
far in the future.


For more information, see the NEWS file here:

 http://twistedmatrix.com/Releases/Twisted/13.0/NEWS.txt


Download it now from:

 http://pypi.python.org/packages/source/T/Twisted/Twisted-13.0.0.tar.bz2 or

 http://pypi.python.org/packages/2.7/T/Twisted/Twisted-13.0.0.win32-py2.7.msi


Thanks to the supporters of Twisted via the Software Freedom Conservancy
and to the many contributors for this release.

-- 
Thomas



From hs at ox.cx  Wed Apr  3 05:25:51 2013
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 3 Apr 2013 13:25:51 +0200
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
	<9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>
Message-ID: <95DF1962-F428-4200-A617-12BE7C95EA7A@ox.cx>


Am 02.04.2013 um 16:32 schrieb Glyph <glyph at twistedmatrix.com>:

>> My question can be simplified to: Closures yes or no?
> "As appropriate".

I had that coming. :)

[…]

Thanks for your verbose explanations!

>> If “yes, closures”: Still using cb/eb prefixes? I don’t see them very often in recent examples. What about addBoth handlers?
> If you're using a closure, use a descriptive name.  The 'cb/eb' prefix notation is not particularly illustrative; I often use an english word like 'when'.  whenDisconnected, whenResponseReceived, etc.

So you’re cool with calling callbacks after the event that triggered? That would’ve been my second question but I didn’t want it to divert the discussion. I kind of like `onData` et al too but the Twisted examples rather shun it.

Thanks,
Hynek

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/8b9d05b3/attachment.html>

From kevin.horn at gmail.com  Wed Apr  3 10:06:02 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 3 Apr 2013 11:06:02 -0500
Subject: [Twisted-Python] twisted.cred interface deficiences
In-Reply-To: <EAE3E9B5-52C6-4CBA-8BFE-0F982D05A3E8@twistedmatrix.com>
References: <CANmrDMVs5ncXDuNgoDa=CwG67g+P_ZsuMBMOjpuntZiV=CdNiQ@mail.gmail.com>
	<CAE_Hg6bXeZf1xXrtFDM5skxzC=s8AFGVnUhY7jj3p0a0OUGLCw@mail.gmail.com>
	<CANmrDMUC_cWvFHVtVBz6ScMeXFOP2rrFpKnRLFKit0D0+MQSrg@mail.gmail.com>
	<EAE3E9B5-52C6-4CBA-8BFE-0F982D05A3E8@twistedmatrix.com>
Message-ID: <CA+U=zK23bnSoZQpJ+j4bFZt30zsim8C3n_4FVcTWvmpeGpKeWQ@mail.gmail.com>

On Tue, Apr 2, 2013 at 6:04 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Apr 1, 2013, at 2:34 PM, Shell <cam.turn at gmail.com> wrote:
>
> I propose that IUsernamePassword should be split into at least two
> interfaces:
>
> * IUsernamePassword, with only username and password, no methods,
> which allows password to be used in any way
> * Another interface, which only defines username and checkPassword() -
> possibly just a rename of IUsernameHashedPassword, which declares a
> similar interface
>
> However, this has the issue that any credential checker which can use
> the second interface would also be able to use an IUsernamePassword
> here if there were an adapter between the two, but support for this
> would have to go into every credential checker which supports the
> second interface at present. Maybe the Portal could automatically
> search for adapters if it can't find a direct match?
>
>
> These don't sound like bad ideas, but I think that if you're going to try
> to fix cred's built-in credentials, this is a pretty labor-intensive and
> not particularly rewarding path to go down.  Further refining the sad
> username+password credential interface will provide only some internal
> factoring improvements to existing types of authentication, at the cost of
> retrofitting all of them; not to mention dealing with broad-spectrum
> deprecations.
>
> A better use of energy would be directed at getting a generic SASL
> credentials implementation; in other words, fixing this fairly ancient
> ticket: <https://twistedmatrix.com/trac/ticket/2015>.
>
>
For what it's worth, I worked on this back when, and while I don't have
time to work on it right now (and probably won't for at least a couple of
weeks), I'm happy to answer questions, if anybody has them.

Mostly what needed to happen was to merge the code in the branch with the
code in trunk which had diverged somewhat, and create some documentation on
how to use them.

My recollection was that integrating the results of that with specific
protocols (and possibly with Cred using a "higher level" interface) would
happen on a subsequent ticket, which is probably a good idea.


> A well-implemented SASL credentials interface will address these issues,
> as well as allowing for proper challenge-response authentication, digest
> auth, external auth mechanisms like TLS, et cetera.
>
> Your idea about adapters is well taken though; having the portal do that
> when SASL-ified checkers are available seems reasonable, provided that it
> won't break anything.
>
> -glyph
>
>

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/9096b2b6/attachment.html>

From therve at free.fr  Wed Apr  3 10:14:36 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Wed, 03 Apr 2013 18:14:36 +0200
Subject: [Twisted-Python] Release questions
Message-ID: <515C556C.5030704@free.fr>

Hey everyone,

During the latest release process, I was left with several things to
clarify, so now that it's done I think it's time:

 * We started building wheels for Windows. What do we do with me, should
we upload it to pypi? What happens when users try them?

 * Glyph mumbled something about sha sums of the release files, instead
of md5. Should we pursue that? We may need to update some trac
integration code.

 * There are several issues with SVN and the release branch. First the
Quotes file conflicts almost all the time. But this time we also
reverted a branch from trunk during the release, and then merged it
again, which created all sorts of troubles. Maybe we (I) just need to
write some documentation about it. But if anyone has an idea on how to
improve our tools, they are welcome.

Thanks!

-- 
Thomas



From _ at lvh.cc  Wed Apr  3 10:36:06 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 3 Apr 2013 18:36:06 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <515C556C.5030704@free.fr>
References: <515C556C.5030704@free.fr>
Message-ID: <CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>

On Wed, Apr 3, 2013 at 6:14 PM, Thomas Hervé <therve at free.fr> wrote:

>  * Glyph mumbled something about sha sums of the release files, instead
> of md5. Should we pursue that? We may need to update some trac
> integration code.
>

Depends, what's the goal of the checksums? If it's "we want people to be
able to check that the tarball they have is in fact the release and not
something tainted by patches or malware", perhaps we either should have a
Twisted signing key, or have the release manager sign the release instead
(especially since we have a lot of signatures since PyCon :)).

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/e8799d8e/attachment.html>

From byrsa at sinkhole.me  Wed Apr  3 10:51:42 2013
From: byrsa at sinkhole.me (byr sa)
Date: Wed, 3 Apr 2013 09:51:42 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <515C556C.5030704@free.fr>
References: <515C556C.5030704@free.fr>
Message-ID: <CAJZAHMEYSOdtccHzMNBcJLY57Ggy2_RCgwdwT-7gfdSHun=53Q@mail.gmail.com>

On Wed, Apr 3, 2013 at 9:14 AM, Thomas Hervé <therve at free.fr> wrote:

>  * Glyph mumbled something about sha sums of the release files, instead
> of md5. Should we pursue that? We may need to update some trac
> integration code.
>
>
+1 for SHA-256 or SHA-512. High profile collision attacks against MD5 have
happened (google: flame md5 collision). People are working to crack SHA1
right now, get ahead of the curve!

byrsa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/55719dfb/attachment.html>

From exarkun at twistedmatrix.com  Wed Apr  3 14:51:41 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 03 Apr 2013 20:51:41 -0000
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
Message-ID: <20130403205141.16138.1648575723.divmod.xquotient.7@top>

On 04:36 pm, _ at lvh.cc wrote:
>On Wed, Apr 3, 2013 at 6:14 PM, Thomas Hervé <therve at free.fr> wrote:
>>  * Glyph mumbled something about sha sums of the release files, 
>>instead
>>of md5. Should we pursue that? We may need to update some trac
>>integration code.
>
>Depends, what's the goal of the checksums? If it's "we want people to 
>be
>able to check that the tarball they have is in fact the release and not
>something tainted by patches or malware", perhaps we either should have 
>a
>Twisted signing key, or have the release manager sign the release 
>instead
>(especially since we have a lot of signatures since PyCon :)).

The question relates to step 4 beneath "Cut the tarballs & installers":

http://twistedmatrix.com/trac/wiki/ReleaseProcess#Cutthetarballsinstallers

The checksums are intended to let people verify their download was 
neither accidentally corrupted nor intentionally tampered with.

I think the original motivation for signing some checksums instead of 
signing the release artifacts was something like:

  * gpg is a pain to use, signing one thing is nicer than signing 30 
things
  * lots of people do not care about cryptographic concerns here, and the 
checksum is good enough for them

Generating and signing a single document containing checksums of all the 
files is less work for the release manager and offers both possible 
audiences some value.

Perhaps it's a round-about way to achieve those goals, though.  Is there 
something simpler that we could do that wouldn't make releases harder or 
kick sand in the eyes of people just trying to make sure their ethernet 
card didn't hiccup?

Jean-Paul



From glyph at twistedmatrix.com  Wed Apr  3 15:36:28 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 14:36:28 -0700
Subject: [Twisted-Python] Twisted 13.0.0 released
In-Reply-To: <515C0E59.8070109@free.fr>
References: <515C0E59.8070109@free.fr>
Message-ID: <9F157DE3-726F-405C-AC11-94904D8D9380@twistedmatrix.com>

On Apr 3, 2013, at 4:11 AM, Thomas Hervé <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 13.0.

Thank you Thomas for managing yet another excellent release!

> Among the 70 tickets closed, we can see:
> 
> * A new "Introduction to Deferreds" document that you can find here:
> http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html
> 
> * A fix in twisted.web.template where attributes were not quoted
> properly, risking HTML injection.
> 
> * Support for unicode domain names in twisted.names SRVConnector and
> Name classes, after a 12.3 regression.
> 
> * A workaround for platform limitations when trying to schedule events
> far in the future.

This is a great list.  And we have even more great stuff in the pipeline.  Everybody get to work on 13.1 ;-).

-glyph





From glyph at twistedmatrix.com  Wed Apr  3 15:40:00 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 14:40:00 -0700
Subject: [Twisted-Python] Current callback best practices
In-Reply-To: <95DF1962-F428-4200-A617-12BE7C95EA7A@ox.cx>
References: <FCAC657B-11A9-4343-A0DB-60ABE7125423@ox.cx>
	<9FC6C1DF-7EFB-4BCE-B482-B1EF6BE2DAD7@twistedmatrix.com>
	<95DF1962-F428-4200-A617-12BE7C95EA7A@ox.cx>
Message-ID: <327E134D-D0C3-4C49-838A-007B47154260@twistedmatrix.com>

On Apr 3, 2013, at 4:25 AM, Hynek Schlawack <hs at ox.cx> wrote:

> So you’re cool with calling callbacks after the event that triggered? That would’ve been my second question but I didn’t want it to divert the discussion. I kind of like `onData` et al too but the Twisted examples rather shun it.

The examples are not always the best examples of every aspect of style :).  Perhaps people don't like 'on' because it reminds them of JavaScript too much.  (Not me, though, it reminds *me* of SuperCard…)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/c77b8ca7/attachment.html>

From glyph at twistedmatrix.com  Wed Apr  3 15:55:40 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 14:55:40 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <515C556C.5030704@free.fr>
References: <515C556C.5030704@free.fr>
Message-ID: <98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>


On Apr 3, 2013, at 9:14 AM, Thomas Hervé <therve at free.fr> wrote:

> Hey everyone,
> 
> During the latest release process, I was left with several things to
> clarify, so now that it's done I think it's time:
> 
> * We started building wheels for Windows. What do we do with me, should
> we upload it to pypi? What happens when users try them?

We should definitely upload them to PyPI.  Right now, users won't even get them unless they explicitly say "pip --use-wheel", so there's not much risk associated with it.  When users try them, they should just get a working installation instead of what happens now ;).

> * Glyph mumbled something about sha sums of the release files, instead
> of md5. Should we pursue that? We may need to update some trac
> integration code.

We should.  If we're signing them, it's for security.  If it's for security, we should use a secure hash.  Let's skip sha1 and go straight to sha512 or something.

> * There are several issues with SVN and the release branch. First the
> Quotes file conflicts almost all the time. But this time we also
> reverted a branch from trunk during the release, and then merged it
> again, which created all sorts of troubles. Maybe we (I) just need to
> write some documentation about it. But if anyone has an idea on how to
> improve our tools, they are welcome.

I think that as long as we're still using an old version of SVN, documentation is the only solution.  Also we should have fewer bugs that need reverting :).

-glyph




From _ at lvh.cc  Wed Apr  3 15:58:44 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 3 Apr 2013 23:58:44 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130403205141.16138.1648575723.divmod.xquotient.7@top>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
Message-ID: <CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>

On Wed, Apr 3, 2013 at 10:51 PM, <exarkun at twistedmatrix.com> wrote:

> The question relates to step 4 beneath "Cut the tarballs & installers":
>
> http://twistedmatrix.com/trac/wiki/ReleaseProcess#Cutthetarballsinstallers
>
> The checksums are intended to let people verify their download was
> neither accidentally corrupted nor intentionally tampered with.
>

Is the accidental corruption thing a real risk? I thought that was the
point of, say, TCP checksums :) Perhaps I'm just mistaken as to how often
his happens in the wild...


> I think the original motivation for signing some checksums instead of
> signing the release artifacts was something like:
>
>   * gpg is a pain to use, signing one thing is nicer than signing 30
> things
>   * lots of people do not care about cryptographic concerns here, and the
> checksum is good enough for them
>

Okay, fair enough. I'm a little worried about the "I don't care about the
cryptography" part, if a user is consciously choosing that, fine; but what
if they think they're doing something (verifying the integrity of the
Twisted release) when in fact not doing that at all? Perhaps that's even
rarer than the accidental corruption thing I so quickly dismissed just now,
though ;-)

As for gpg being a pain to use, `ls | xargs -n 1 gpg --sign` seems to work
for me provided you have gpg-agent (and have it configured to not need a
signature every time). Is gpg-agent something we don't want to require from
release managers?

Generating and signing a single document containing checksums of all the
> files is less work for the release manager and offers both possible
> audiences some value.
>
> Perhaps it's a round-about way to achieve those goals, though.  Is there
> something simpler that we could do that wouldn't make releases harder or
> kick sand in the eyes of people just trying to make sure their ethernet
> card didn't hiccup?
>

Probably not, the current thing seems pretty easy, right? If I understand
correctly, the only complaint is that "MD5 sucks". So if we upgrade that to
SHA-256/512 (SHA-3 would be nice, but plenty of people don't have access to
it yet on the command line...), that'd do it.

I don't think there is anything wrong with a hash sum file, I'm just
concerned that the reasons for *not* having or verifying signatures might
not be that great.


> Jean-Paul
>

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/c32de243/attachment.html>

From _ at lvh.cc  Wed Apr  3 15:59:38 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 3 Apr 2013 23:59:38 +0200
Subject: [Twisted-Python] Twisted 13.0.0 released
In-Reply-To: <515C0E59.8070109@free.fr>
References: <515C0E59.8070109@free.fr>
Message-ID: <CAE_Hg6aNAgARRyUXLfAu+w6BhyShfOYKK=yAk6Tg08qqK3dyoQ@mail.gmail.com>

Yay! Thanks, Thomas and everyone who contributed to this release :)


On Wed, Apr 3, 2013 at 1:11 PM, Thomas Hervé <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 13.0.
>
> Among the 70 tickets closed, we can see:
>
>  * A new "Introduction to Deferreds" document that you can find here:
> http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html
>
>  * A fix in twisted.web.template where attributes were not quoted
> properly, risking HTML injection.
>
>  * Support for unicode domain names in twisted.names SRVConnector and
> Name classes, after a 12.3 regression.
>
>  * A workaround for platform limitations when trying to schedule events
> far in the future.
>
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/13.0/NEWS.txt
>
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-13.0.0.tar.bz2or
>
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-13.0.0.win32-py2.7.msi
>
>
> Thanks to the supporters of Twisted via the Software Freedom Conservancy
> and to the many contributors for this release.
>
> --
> Thomas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/d6f1b2b9/attachment.html>

From glyph at twistedmatrix.com  Wed Apr  3 16:04:05 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 15:04:05 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130403205141.16138.1648575723.divmod.xquotient.7@top>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
Message-ID: <9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>


On Apr 3, 2013, at 1:51 PM, exarkun at twistedmatrix.com wrote:

> On 04:36 pm, _ at lvh.cc wrote:
>> On Wed, Apr 3, 2013 at 6:14 PM, Thomas Hervé <therve at free.fr> wrote:
>>> * Glyph mumbled something about sha sums of the release files, 
>>> instead
>>> of md5. Should we pursue that? We may need to update some trac
>>> integration code.
>> 
>> Depends, what's the goal of the checksums? If it's "we want people to 
>> be
>> able to check that the tarball they have is in fact the release and not
>> something tainted by patches or malware", perhaps we either should have 
>> a
>> Twisted signing key, or have the release manager sign the release 
>> instead
>> (especially since we have a lot of signatures since PyCon :)).

The release manager already _does_ sign something.  Since PyCon, we do have much better trust web integration, which is great, but that's not really relevant to this discussion, which is just about changing what we sign and how it gets signed.

> The question relates to step 4 beneath "Cut the tarballs & installers":
> 
> http://twistedmatrix.com/trac/wiki/ReleaseProcess#Cutthetarballsinstallers
> 
> The checksums are intended to let people verify their download was 
> neither accidentally corrupted nor intentionally tampered with.
> 
> I think the original motivation for signing some checksums instead of 
> signing the release artifacts was something like:
> 
>  * gpg is a pain to use, signing one thing is nicer than signing 30 
> things
>  * lots of people do not care about cryptographic concerns here, and the 
> checksum is good enough for them
> 
> Generating and signing a single document containing checksums of all the 
> files is less work for the release manager and offers both possible 
> audiences some value.
> 
> Perhaps it's a round-about way to achieve those goals, though.  Is there 
> something simpler that we could do that wouldn't make releases harder or 
> kick sand in the eyes of people just trying to make sure their ethernet 
> card didn't hiccup?

Security-wise, signing an actually-secure hash is not that much different than signing the tarballs themselves.  Signing MD5 hashes, on the other hand, is useless as a security measure.

I think we should carry on with signing the list of signatures for now, and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some theoretical benefits that come from signing the whole binary blob, but that's a much bigger change for a much smaller benefit.

If anyone does have an interest in us doing this, I think the first step would be to write up a clear explanation of how it should be done.

-glyph




From _ at lvh.cc  Wed Apr  3 16:23:29 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 4 Apr 2013 00:23:29 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
Message-ID: <CAE_Hg6ZikgGwOd1KbTfTerGpuO4tBnzM3WwESTTVPmuqwOnGxA@mail.gmail.com>

On Thu, Apr 4, 2013 at 12:04 AM, Glyph <glyph at twistedmatrix.com> wrote:

> The release manager already _does_ sign something.  Since PyCon, we do
> have much better trust web integration, which is great, but that's not
> really relevant to this discussion, which is just about changing what we
> sign and how it gets signed.
>

Yes, sorry; I thought there were just a bunch of hashes in a file
somewhere, and forgot they were signed.


> I think we should carry on with signing the list of signatures for now,
> and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some
> theoretical benefits that come from signing the whole binary blob, but
> that's a much bigger change for a much smaller benefit.
>
> If anyone does have an interest in us doing this, I think the first step
> would be to write up a clear explanation of how it should be done.
>

I agree. Can't we just replace "md5sum" in the command line with "shasum -a
512"? Do we need a grace period where we deliver both the MD5 and SHA512
sums? (Perhaps there's an automated system out there that relies on the MD5
version being available, since that's all we have now.)


> -glyph
>

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130404/aa5c9987/attachment.html>

From glyph at twistedmatrix.com  Wed Apr  3 16:41:27 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 3 Apr 2013 15:41:27 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6ZikgGwOd1KbTfTerGpuO4tBnzM3WwESTTVPmuqwOnGxA@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAE_Hg6ZikgGwOd1KbTfTerGpuO4tBnzM3WwESTTVPmuqwOnGxA@mail.gmail.com>
Message-ID: <2688D2AE-20FE-4AA8-BAB8-E2D7F6E68068@twistedmatrix.com>


On Apr 3, 2013, at 3:23 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Thu, Apr 4, 2013 at 12:04 AM, Glyph <glyph at twistedmatrix.com> wrote:
> The release manager already _does_ sign something.  Since PyCon, we do have much better trust web integration, which is great, but that's not really relevant to this discussion, which is just about changing what we sign and how it gets signed.
> 
> Yes, sorry; I thought there were just a bunch of hashes in a file somewhere, and forgot they were signed.
>  
> I think we should carry on with signing the list of signatures for now, and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some theoretical benefits that come from signing the whole binary blob, but that's a much bigger change for a much smaller benefit.
> 
> If anyone does have an interest in us doing this, I think the first step would be to write up a clear explanation of how it should be done.
> 
> I agree. Can't we just replace "md5sum" in the command line with "shasum -a 512"? Do we need a grace period where we deliver both the MD5 and SHA512 sums? (Perhaps there's an automated system out there that relies on the MD5 version being available, since that's all we have now.)

Signing both certainly doesn't create any problems.  I just have no idea what automation stuff parses this file as part of our _own_ release process.  I was hoping someone who knew how it worked could examine it and tell me.

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130403/0816fbb9/attachment.html>

From mithrandi at mithrandi.net  Wed Apr  3 16:39:09 2013
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 4 Apr 2013 00:39:09 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
Message-ID: <CAMcKhMQrRhE38UbEVNQo_KZpMkR-DpSbY5xnSufpKAza8xNu6w@mail.gmail.com>

On Wed, Apr 3, 2013 at 11:58 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Is the accidental corruption thing a real risk? I thought that was the
> point of, say, TCP checksums :) Perhaps I'm just mistaken as to how often
> his happens in the wild...
>

TCP checksums don't protect you against corruption occurring on the server
or client, only corruption by intermediary routers (and if they recalculate
the checksum, not even that). In practice, the most common form of
accidental corruption I've encountered is truncation; many HTTP user agents
don't report any kind of error when fewer bytes are received from the
server (due to prematurely terminated HTTP connection, bad proxy server,
etc.) than expected.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130404/d73f0f17/attachment.html>

From p.mayers at imperial.ac.uk  Thu Apr  4 02:56:00 2013
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 04 Apr 2013 09:56:00 +0100
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<CAE_Hg6b=aXp4Jar2ZK=EQELrjn9RVjay664F16jXj_nV90PH2Q@mail.gmail.com>
Message-ID: <515D4020.5070603@imperial.ac.uk>

On 04/03/2013 10:58 PM, Laurens Van Houtven wrote:

> Is the accidental corruption thing a real risk? I thought that was the
> point of, say, TCP checksums :) Perhaps I'm just mistaken as to how
> often his happens in the wild...

TCP checksums absolutely can and do fail to protect you from in-flight 
corruption of data. I've seen this on several occasions over links with 
non-zero BER (i.e. any real-world link). A two-bit error in a single 
packet will not be identified unless you're using HTTPS or SSH or 
similar, with strong transport-layer hashes.

FWIW I saw it with very, very large downloads but it can obviously 
happen with smaller data, just with a lower probability.



From therve at free.fr  Thu Apr  4 04:18:24 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Thu, 04 Apr 2013 12:18:24 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
Message-ID: <515D5370.1060000@free.fr>

Le 03/04/2013 23:55, Glyph a écrit :
> 
> On Apr 3, 2013, at 9:14 AM, Thomas Hervé <therve at free.fr> wrote:
> 
>> Hey everyone,
>>
>> During the latest release process, I was left with several things to
>> clarify, so now that it's done I think it's time:
>>
>> * We started building wheels for Windows. What do we do with me, should
>> we upload it to pypi? What happens when users try them?
> 
> We should definitely upload them to PyPI.  Right now, users won't even get them unless they explicitly say "pip --use-wheel", so there's not much risk associated with it.  When users try them, they should just get a working installation instead of what happens now ;).

Cool, that's done, and the release process has been updated. If any
windows users want to check what happens, it'd be nice.


>> * Glyph mumbled something about sha sums of the release files, instead
>> of md5. Should we pursue that? We may need to update some trac
>> integration code.
> 
> We should.  If we're signing them, it's for security.  If it's for security, we should use a secure hash.  Let's skip sha1 and go straight to sha512 or something.

OK. I've opened http://pad.lv/1164403 for the required changes in our
tool. I'll update the release document once that's done.

>> * There are several issues with SVN and the release branch. First the
>> Quotes file conflicts almost all the time. But this time we also
>> reverted a branch from trunk during the release, and then merged it
>> again, which created all sorts of troubles. Maybe we (I) just need to
>> write some documentation about it. But if anyone has an idea on how to
>> improve our tools, they are welcome.
> 
> I think that as long as we're still using an old version of SVN, documentation is the only solution.  Also we should have fewer bugs that need reverting :).

I was afraid you were going to say that :). But I agree with you, I'll
write done some notes.

Thanks!

-- 
Thomas




From exarkun at twistedmatrix.com  Thu Apr  4 05:14:32 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 04 Apr 2013 11:14:32 -0000
Subject: [Twisted-Python] Release questions
In-Reply-To: <515D5370.1060000@free.fr>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
Message-ID: <20130404111432.16138.96017106.divmod.xquotient.11@top>

On 10:18 am, therve at free.fr wrote:
>Le 03/04/2013 23:55, Glyph a écrit :
>>
>>On Apr 3, 2013, at 9:14 AM, Thomas Hervé <therve at free.fr> wrote:
>>>* Glyph mumbled something about sha sums of the release files, 
>>>instead
>>>of md5. Should we pursue that? We may need to update some trac
>>>integration code.
>>
>>We should.  If we're signing them, it's for security.  If it's for 
>>security, we should use a secure hash.  Let's skip sha1 and go 
>>straight to sha512 or something.
>
>OK. I've opened http://pad.lv/1164403 for the required changes in our
>tool. I'll update the release document once that's done.

Hm.  As far as the download/release trac macro goes, the purpose of this 
to to generate links with md5 hashes for easy_install and similar tools. 
It should continue to operate with md5, not be switched to sha.

And apparently this should be documented somewhere?

Jean-Paul



From therve at free.fr  Thu Apr  4 10:00:57 2013
From: therve at free.fr (=?UTF-8?B?VGhvbWFzIEhlcnbDqQ==?=)
Date: Thu, 04 Apr 2013 18:00:57 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130404111432.16138.96017106.divmod.xquotient.11@top>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
Message-ID: <515DA3B9.8070909@free.fr>

Le 04/04/2013 13:14, exarkun at twistedmatrix.com a écrit :
> On 10:18 am, therve at free.fr wrote:
>> OK. I've opened http://pad.lv/1164403 for the required changes in our
>> tool. I'll update the release document once that's done.
> 
> Hm.  As far as the download/release trac macro goes, the purpose of this 
> to to generate links with md5 hashes for easy_install and similar tools. 
> It should continue to operate with md5, not be switched to sha.

I realized that while looking at the code more in depth. So should we
just publish an additional list of sha sums?

-- 
Thomas




From exarkun at twistedmatrix.com  Thu Apr  4 10:53:47 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 04 Apr 2013 16:53:47 -0000
Subject: [Twisted-Python] Release questions
In-Reply-To: <515DA3B9.8070909@free.fr>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
	<515DA3B9.8070909@free.fr>
Message-ID: <20130404165347.2793.1130726141.divmod.xquotient.11@top>

On 04:00 pm, therve at free.fr wrote:
>Le 04/04/2013 13:14, exarkun at twistedmatrix.com a écrit :
>>On 10:18 am, therve at free.fr wrote:
>>>OK. I've opened http://pad.lv/1164403 for the required changes in our
>>>tool. I'll update the release document once that's done.
>>
>>Hm.  As far as the download/release trac macro goes, the purpose of 
>>this
>>to to generate links with md5 hashes for easy_install and similar 
>>tools.
>>It should continue to operate with md5, not be switched to sha.
>
>I realized that while looking at the code more in depth. So should we
>just publish an additional list of sha sums?

Sounds like a step in the right direction.

Jean-Paul



From kevin.horn at gmail.com  Thu Apr  4 11:36:23 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 4 Apr 2013 12:36:23 -0500
Subject: [Twisted-Python] Twisted 13.0.0 released
In-Reply-To: <515C0E59.8070109@free.fr>
References: <515C0E59.8070109@free.fr>
Message-ID: <CA+U=zK0gwNV6qYHJ=qUcumSoDkRk-HBDheqE_Z-5E=R0c3apfA@mail.gmail.com>

On Wed, Apr 3, 2013 at 6:11 AM, Thomas Hervé <therve at free.fr> wrote:

> On behalf of Twisted Matrix Laboratories, I am pleased to announce the
> release of Twisted 13.0.
>
> Among the 70 tickets closed, we can see:
>
>  * A new "Introduction to Deferreds" document that you can find here:
> http://twistedmatrix.com/documents/13.0.0/core/howto/defer-intro.html
>
>  * A fix in twisted.web.template where attributes were not quoted
> properly, risking HTML injection.
>
>  * Support for unicode domain names in twisted.names SRVConnector and
> Name classes, after a 12.3 regression.
>
>  * A workaround for platform limitations when trying to schedule events
> far in the future.
>
>
> For more information, see the NEWS file here:
>
>  http://twistedmatrix.com/Releases/Twisted/13.0/NEWS.txt
>
>
> Download it now from:
>
>  http://pypi.python.org/packages/source/T/Twisted/Twisted-13.0.0.tar.bz2or
>
>
> http://pypi.python.org/packages/2.7/T/Twisted/Twisted-13.0.0.win32-py2.7.msi
>
>
> Thanks to the supporters of Twisted via the Software Freedom Conservancy
> and to the many contributors for this release.
>
> --
> Thomas
>

Hurrah!  Well done, Thomas!



--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130404/2cd6feb4/attachment.html>

From mithrandi at mithrandi.net  Thu Apr  4 12:15:41 2013
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 4 Apr 2013 20:15:41 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
Message-ID: <CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>

On Thu, Apr 4, 2013 at 12:04 AM, Glyph <glyph at twistedmatrix.com> wrote:

> Security-wise, signing an actually-secure hash is not that much different
> than signing the tarballs themselves.  Signing MD5 hashes, on the other
> hand, is useless as a security measure.
>
> I think we should carry on with signing the list of signatures for now,
> and just upgrade the hash algorithm.  Baby steps.  Perhaps there are some
> theoretical benefits that come from signing the whole binary blob, but
> that's a much bigger change for a much smaller benefit.
>

In fact, I believe there is no such thing as "signing the whole binary
blob". When you use something like gpg --sign, what is actually signed with
a public key signature algorithm is a hash of the content anyway. Thus,
assuming you use the same hash algorithm as you would have instructed gpg
to use (I think the default is SHA512 these days), there isn't any real
difference between signing the content directly, and signing a hash of the
content.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130404/e8475efc/attachment.html>

From glyph at twistedmatrix.com  Thu Apr  4 17:41:01 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 4 Apr 2013 16:41:01 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <20130404165347.2793.1130726141.divmod.xquotient.11@top>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
	<515DA3B9.8070909@free.fr>
	<20130404165347.2793.1130726141.divmod.xquotient.11@top>
Message-ID: <AEA49082-12E4-43BD-8BC6-C0BE28E8343F@twistedmatrix.com>


On Apr 4, 2013, at 9:53 AM, exarkun at twistedmatrix.com wrote:

> On 04:00 pm, therve at free.fr wrote:
>> Le 04/04/2013 13:14, exarkun at twistedmatrix.com a écrit :
>>> On 10:18 am, therve at free.fr wrote:
>>>> OK. I've opened http://pad.lv/1164403 for the required changes in our
>>>> tool. I'll update the release document once that's done.
>>> 
>>> Hm.  As far as the download/release trac macro goes, the purpose of 
>>> this
>>> to to generate links with md5 hashes for easy_install and similar 
>>> tools.
>>> It should continue to operate with md5, not be switched to sha.
>> 
>> I realized that while looking at the code more in depth. So should we
>> just publish an additional list of sha sums?
> 
> Sounds like a step in the right direction.

Would it actually break the existing macro to just include the sha sums inside the same signature list?  Presumably it has some way of ignoring the GPG signature lines; could that just be modified to ignore the shasum lines as well?

I ask because it would be nice to avoid giving the release manager two things to sign.  However, if not; still definitely a step in the right direction.

-glyph


From glyph at twistedmatrix.com  Thu Apr  4 17:42:41 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 4 Apr 2013 16:42:41 -0700
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
Message-ID: <ACCF6728-BD7B-4641-8225-7C11AECAF29C@twistedmatrix.com>

On Apr 4, 2013, at 11:15 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:

> In fact, I believe there is no such thing as "signing the whole binary blob". When you use something like gpg --sign, what is actually signed with a public key signature algorithm is a hash of the content anyway. Thus, assuming you use the same hash algorithm as you would have instructed gpg to use (I think the default is SHA512 these days), there isn't any real difference between signing the content directly, and signing a hash of the content.

This is my understanding as well; however, when I'm making potentially security-critical claims I try to be circumspect in describing systems I don't fully understand :).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130404/fc88f8d9/attachment.html>

From _ at lvh.cc  Thu Apr  4 18:32:51 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 5 Apr 2013 02:32:51 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
Message-ID: <CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>

On Thu, Apr 4, 2013 at 8:15 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> In fact, I believe there is no such thing as "signing the whole binary
> blob". When you use something like gpg --sign, what is actually signed with
> a public key signature algorithm is a hash of the content anyway. Thus,
> assuming you use the same hash algorithm as you would have instructed gpg
> to use (I think the default is SHA512 these days), there isn't any real
> difference between signing the content directly, and signing a hash of the
> content.
>
>
While you technically could sign the entire thing, yes, that is how (at
least DSA) works.

DSA, by default, used SHA-1; recent revisions support SHA-2. A few years
ago, GnuPG and several big users including Debian and Apache started
suggesting the move to RSA instead of DSA keys. The algorithms vary a bit
in speed and signature size, but the main reason was to allow newer hash
functions.

That said, I'm pretty sure GPG uses a newer revision of DSA: when I left
the defaults untouched near the end of 2012, it still seemed to prefer
DSA/ElGamal despite the news from a few years ago. IIRC, the first version
of the algorithm only allowed 1024 bit keys, whereas my DSA key is 3072.

Here's how you check what you support and in which preference:

===== SNIPPET FOLLOWS =====

~ ❯ gpg --edit-key E6D6AAAE
gpg (GnuPG) 1.4.13; Copyright (C) 2012 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

pub  3072D/E6D6AAAE  created: 2012-10-14  expires: 2016-10-14  usage: SCA
                     trust: ultimate      validity: ultimate
sub  3072g/7EF5843E  created: 2012-10-14  expires: 2016-10-14  usage: E
[ultimate] (1). Laurens Van Houtven <_ at lvh.io>
[ultimate] (2)  Laurens Van Houtven <lvh at twistedmatrix.com>
[ultimate] (3)  Laurens Van Houtven <_ at lvh.cc>

gpg> showpref
[ultimate] (1). Laurens Van Houtven <_ at lvh.io>
     Cipher: AES256, AES192, AES, CAST5, 3DES, IDEA
     Digest: SHA256, SHA1, SHA384, SHA512, SHA224
     Compression: ZLIB, BZIP2, ZIP, Uncompressed
     Features: MDC, Keyserver no-modify
[ultimate] (2)  Laurens Van Houtven <lvh at twistedmatrix.com>
     Cipher: AES256, AES192, AES, CAST5, 3DES
     Digest: SHA256, SHA1, SHA384, SHA512, SHA224
     Compression: ZLIB, BZIP2, ZIP, Uncompressed
     Features: MDC, Keyserver no-modify
[ultimate] (3)  Laurens Van Houtven <_ at lvh.cc>
     Cipher: AES256, AES192, AES, CAST5, 3DES, IDEA
     Digest: SHA256, SHA1, SHA384, SHA512, SHA224
     Compression: ZLIB, BZIP2, ZIP, Uncompressed
     Features: MDC, Keyserver no-modify

gpg>

===== SNIPPET ENDS =====

As you can see, the preferred hash is SHA-256. That's, as far as we know,
perfectly secure right now; IIUC the only reason SHA-512 isn't the default
is backwards compatibility. PGP (the proprietary version) and gpg have both
supported SHA-256 for *years and years* (and SHA-512 for years too, just
not as many of the years ;-))

Assuming your key is recent (but please check with showpref as I
demonstrated above), there isn't a problem with signing shasum files.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130405/d344d10f/attachment.html>

From therve at free.fr  Fri Apr  5 01:18:26 2013
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 05 Apr 2013 09:18:26 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <AEA49082-12E4-43BD-8BC6-C0BE28E8343F@twistedmatrix.com>
References: <515C556C.5030704@free.fr>
	<98189555-C27B-4590-BAFA-94B85DD89887@twistedmatrix.com>
	<515D5370.1060000@free.fr>
	<20130404111432.16138.96017106.divmod.xquotient.11@top>
	<515DA3B9.8070909@free.fr>
	<20130404165347.2793.1130726141.divmod.xquotient.11@top>
	<AEA49082-12E4-43BD-8BC6-C0BE28E8343F@twistedmatrix.com>
Message-ID: <515E7AC2.6010702@free.fr>

Le 05/04/2013 01:41, Glyph a écrit :
> 
> On Apr 4, 2013, at 9:53 AM, exarkun at twistedmatrix.com wrote:
> 
>> On 04:00 pm, therve at free.fr wrote:
>>> Le 04/04/2013 13:14, exarkun at twistedmatrix.com a écrit :
>>>> On 10:18 am, therve at free.fr wrote:
>>>>> OK. I've opened http://pad.lv/1164403 for the required changes in our
>>>>> tool. I'll update the release document once that's done.
>>>>
>>>> Hm.  As far as the download/release trac macro goes, the purpose of 
>>>> this
>>>> to to generate links with md5 hashes for easy_install and similar 
>>>> tools.
>>>> It should continue to operate with md5, not be switched to sha.
>>>
>>> I realized that while looking at the code more in depth. So should we
>>> just publish an additional list of sha sums?
>>
>> Sounds like a step in the right direction.
> 
> Would it actually break the existing macro to just include the sha sums inside the same signature list?  Presumably it has some way of ignoring the GPG signature lines; could that just be modified to ignore the shasum lines as well?
> 
> I ask because it would be nice to avoid giving the release manager two things to sign.  However, if not; still definitely a step in the right direction.

Well, the file is called "md5sums.txt", so we'd need to rename it, and
probably add tests to the macro code to make sure it works with several
hashes. As a casual release manager, I don't mind signing and uploading
an additional file.

-- 
Thomas




From exarkun at twistedmatrix.com  Fri Apr  5 06:24:26 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 05 Apr 2013 12:24:26 -0000
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
Message-ID: <20130405122426.2793.363555816.divmod.xquotient.34@top>

On 28 Mar, 05:16 pm, jonathan at stoppani.name wrote:
>Hello everybody (with access to the Trac DB),
>
>I am currently doing my master thesis on the "analysis and management
>of change propagation in complex systems". I'm concentrating my
>efforts on software-based complex systems.
>
>As part of my analysis, I gather data from different domains, such as
>dependencies between modules of the source code, interactions between
>people (like, for example, this mailing list) and change requests (in
>this specific case, issues and tickets on an issue tracking system).
>
>A couple of weeks ago I asked on IRC if it would be possible to get
>the Trac data from twistedmatrix.com and I was told to write a script
>to dump the database by excluding sensitive information.
>
>The script is up for review and auditing over here:
>
>https://gist.github.com/GaretJax/5264941
>
>It can be run by saving it to a .py file or directly with the following 
>command:
>
>curl -s 
>https://gist.github.com/GaretJax/5264941/raw/c478c2c4ec39cdb4bc3ceeb05d57a31063a0a486 
>/dump-trac.py
>| python - <projenv> <outfile>
>
>(by replacing the two arguments: trac base directory and the output 
>file).
>
>There are no privacy concerns, as all data being analyzes is publicly
>available, either in the repository, in the mailing list archives or
>on twistedmatrix.com
>
>After being reviewed, can someone with access to the server please run
>it for me?

Hi Jonathan,

A couple questions about the script.  There are a few more tables in the 
database that I'm not sure will be interesting to you.

Do you mind if we also exclude:

    spamfilter_bayes
    spamfilter_log

Some of the tables are also basically an inefficient mirror of the 
subversion repository - revision, node_change.  Do you want this data as 
well?

Lastly, I have some reluctance to distribute the contents of the 
permission table.  I could probably be easily convinced to do so, but if 
you don't thing you'll actually use that data, I'd just as soon not.

Thanks!
Jean-Paul
>Thanks,
>Jonathan
>
>P.S.: If someone would like more details about the research, a draft
>of the project statement can be found here:
>https://www.dropbox.com/s/qu3jpxcd4wpat2i/statement-0-r0-2013-03-19.pdf
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From mithrandi at mithrandi.net  Fri Apr  5 07:12:43 2013
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 5 Apr 2013 15:12:43 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
	<CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
Message-ID: <CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>

On Fri, Apr 5, 2013 at 2:32 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> DSA, by default, used SHA-1; recent revisions support SHA-2. A few years
> ago, GnuPG and several big users including Debian and Apache started
> suggesting the move to RSA instead of DSA keys. The algorithms vary a bit
> in speed and signature size, but the main reason was to allow newer hash
> functions.
>
> That said, I'm pretty sure GPG uses a newer revision of DSA: when I left
> the defaults untouched near the end of 2012, it still seemed to prefer
> DSA/ElGamal despite the news from a few years ago. IIRC, the first version
> of the algorithm only allowed 1024 bit keys, whereas my DSA key is 3072.
>

DSA keys larger than 1024 bit(?) are "non-standard", but I think the bigger
issue is that DSA only supports 160-bit hashes; larger hashes will be
truncated, which means you don't gain much by using SHA-256/SHA-512/etc.
instead of SHA-1. DSA2 can handle larger hashes, but there's no real reason
to use DSA2 when RSA is so widespread. I think this is the reason the
defaults are changing (were changed?) in GnuPG.

I guess this is drifting off-topic though...

Here's how you check what you support and in which preference:
>

Thanks, much more useful than my vague speculation about defaults ;)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130405/536fda2f/attachment.html>

From _ at lvh.cc  Fri Apr  5 08:47:23 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 5 Apr 2013 16:47:23 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
	<CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
	<CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>
Message-ID: <CAE_Hg6YAw9a7+sbeVsABoNXpmSsx5nbcpE3VnMM+vBG+Nj5VRQ@mail.gmail.com>

On Fri, Apr 5, 2013 at 3:12 PM, Tristan Seligmann
<mithrandi at mithrandi.net>wrote:

> DSA keys larger than 1024 bit(?) are "non-standard", but I think the
> bigger issue is that DSA only supports 160-bit hashes; larger hashes will
> be truncated, which means you don't gain much by using SHA-256/SHA-512/etc.
> instead of SHA-1. DSA2 can handle larger hashes, but there's no real reason
> to use DSA2 when RSA is so widespread. I think this is the reason the
> defaults are changing (were changed?) in GnuPG.
>

As far as I can tell, the defaults are currently beyond plain old DSA. It
appears this support has been in GnuPG since 2006 and in PGP since at least
then, I would guess that it's been commonly available since 2008 or so. I'm
not sure *why* it's DSA now, but I'm hoping the GPG people had good reasons
:) (I'm guessing it's "adoption was sufficient that by the time we
considered changing the default the reasons were no longer valid")

For DSA, GPG selects the first hash algorithm in your digest preference
list that is of size >= q. q is the hash size for your DSA key, which is
hardcoded into the key. The defaults in GPG are:

q = 160 for 1024 bit keys (i.e. plain old DSA)
q = 224 for 1024 to 2048 bit keys
q = 256 bit for 2048 to 3072 bit keys

You can use gpg --list-packets to view this, but the output is a little
obscure. It's easier to use pgpdump, which, for my key produces (truncated
output):

====
Public Key Packet(tag 6)(1198 bytes)
Ver 4 - new
Public key creation time - Sun Oct 14 13:56:19 UTC 2012
Pub alg - DSA Digital Signature Algorithm(pub 17)
DSA p(3072 bits) - ...
DSA q(256 bits) - ...
DSA g(3068 bits) - ...
DSA y(3071 bits) - ...
====

The important bit is the q value: 256. Combined with my digest algorithm
preferences, that means I'll get SHA-256 (first hash of sufficient size),
not truncated (since 256 == 256 ;)).

I guess this is drifting off-topic though...
>

Sure thing :D I wasn't trying to argue for any particular algorithm, but
simply that:

- if you have a recent key of maximum allowable size for whatever the
default was on your system, you're probably fine
- signing a bunch of SHA sums is fine, provided it's SHA-256 or better,
preferably SHA-512 (SHA-3 wouldn't be wrong, but isn't commonly supported
yet, and SHA-2 has withstood attempts to break it so far better than anyone
anticipated, so we're good).

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130405/f7f52209/attachment.html>

From _ at lvh.cc  Fri Apr  5 08:57:21 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 5 Apr 2013 16:57:21 +0200
Subject: [Twisted-Python] Release questions
In-Reply-To: <CAE_Hg6YAw9a7+sbeVsABoNXpmSsx5nbcpE3VnMM+vBG+Nj5VRQ@mail.gmail.com>
References: <515C556C.5030704@free.fr>
	<CAE_Hg6b9fKQaXNF_E8UpzfT1LRheqOzEmDtqkERkBsbfuJzx6w@mail.gmail.com>
	<20130403205141.16138.1648575723.divmod.xquotient.7@top>
	<9ABDF971-33F0-4B81-A085-319F34EE33E5@twistedmatrix.com>
	<CAMcKhMS-iJEBG_oyXG8b5EYRdrZ2DCmG0m=TmQGgXQFqAXgojA@mail.gmail.com>
	<CAE_Hg6aZ2mFMUbbMucNTUzAcUbMBrggCoO0DDti8ADo6fDwBWw@mail.gmail.com>
	<CAMcKhMTF0f6cJA=poqKxSsJhnLCAqYJ43fvnVUzFps1W1kkx0w@mail.gmail.com>
	<CAE_Hg6YAw9a7+sbeVsABoNXpmSsx5nbcpE3VnMM+vBG+Nj5VRQ@mail.gmail.com>
Message-ID: <CAE_Hg6Z7w845eoUvSY4LkvqbQrhDB8s1Ckvf6ysi=E1VNTvVJA@mail.gmail.com>

On Fri, Apr 5, 2013 at 4:47 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> As far as I can tell, the defaults are currently beyond plain old DSA.
>

Whoops, that's not entirely correct, as exarkun was nice enough to point
out to me. Apparently, it's beyond plain old DSA *only if you ask for DSA*.
The default, at least for plain old GPG, is to get you RSA/RSA. I could've
sworn that the default the GPG Keychain Access tool thing from MacGPG was
DSA, because I consciously didn't pick anything in particular and somehow
ended up with a 3072 bit DSA key.

 The rest of my e-mail still counts though :)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130405/851d4bba/attachment.html>

From exarkun at twistedmatrix.com  Sat Apr  6 22:05:25 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Apr 2013 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1365307525.69.827492752@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130407/d9d19018/attachment.html>

From jonathan at stoppani.name  Mon Apr  8 12:13:38 2013
From: jonathan at stoppani.name (Jonathan Stoppani)
Date: Mon, 8 Apr 2013 14:13:38 -0400
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <20130405122426.2793.363555816.divmod.xquotient.34@top>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
	<20130405122426.2793.363555816.divmod.xquotient.34@top>
Message-ID: <CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>

Hi Exarkun,

Thanks for coming back with this.

No problem if we exclude the spam filter tables. I don't need them.

Concerning the svn tables, if they don't carry additional information
linking revisions to other (trac-specific metadata), I don't need them
either.

I can understand your concerns regarding the permissions table. I thought
they may be useful to help determine a role of a specific user in the
organization, if that is enough as argumentation perfect, otherwise we can
leave them out as they are not my primary source of data.

Cheers,
Jonathan




On Fri, Apr 5, 2013 at 8:24 AM, <exarkun at twistedmatrix.com> wrote:

> On 28 Mar, 05:16 pm, jonathan at stoppani.name wrote:
> >Hello everybody (with access to the Trac DB),
> >
> >I am currently doing my master thesis on the "analysis and management
> >of change propagation in complex systems". I'm concentrating my
> >efforts on software-based complex systems.
> >
> >As part of my analysis, I gather data from different domains, such as
> >dependencies between modules of the source code, interactions between
> >people (like, for example, this mailing list) and change requests (in
> >this specific case, issues and tickets on an issue tracking system).
> >
> >A couple of weeks ago I asked on IRC if it would be possible to get
> >the Trac data from twistedmatrix.com and I was told to write a script
> >to dump the database by excluding sensitive information.
> >
> >The script is up for review and auditing over here:
> >
> >https://gist.github.com/GaretJax/5264941
> >
> >It can be run by saving it to a .py file or directly with the following
> >command:
> >
> >curl -s
> >
> https://gist.github.com/GaretJax/5264941/raw/c478c2c4ec39cdb4bc3ceeb05d57a31063a0a486
> >/dump-trac.py
> >| python - <projenv> <outfile>
> >
> >(by replacing the two arguments: trac base directory and the output
> >file).
> >
> >There are no privacy concerns, as all data being analyzes is publicly
> >available, either in the repository, in the mailing list archives or
> >on twistedmatrix.com
> >
> >After being reviewed, can someone with access to the server please run
> >it for me?
>
> Hi Jonathan,
>
> A couple questions about the script.  There are a few more tables in the
> database that I'm not sure will be interesting to you.
>
> Do you mind if we also exclude:
>
>     spamfilter_bayes
>     spamfilter_log
>
> Some of the tables are also basically an inefficient mirror of the
> subversion repository - revision, node_change.  Do you want this data as
> well?
>
> Lastly, I have some reluctance to distribute the contents of the
> permission table.  I could probably be easily convinced to do so, but if
> you don't thing you'll actually use that data, I'd just as soon not.
>
> Thanks!
> Jean-Paul
> >Thanks,
> >Jonathan
> >
> >P.S.: If someone would like more details about the research, a draft
> >of the project statement can be found here:
> >https://www.dropbox.com/s/qu3jpxcd4wpat2i/statement-0-r0-2013-03-19.pdf
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130408/d27da528/attachment.html>

From phil at ultimate.com  Mon Apr  8 13:34:10 2013
From: phil at ultimate.com (Phil Budne)
Date: Mon, 08 Apr 2013 15:34:10 -0400
Subject: [Twisted-Python] Implementing a new stream transport
Message-ID: <201304081934.r38JYAcw028079@ultimate.com>

I looked for, but haven't (yet) found any documentation on how
to implement a Twisted "transport"

For some testing and prototype work I'm doing I implemented the
proprietary TCP connection multiplexing protocol a customer of mine
uses as a Twisted Protocol and a transport for the "channels" that are
multiplexed inside the real TCP connection.

When I tried running a twisted.web.server.Site Protocol on my new
"channel" transport I found I was missing members and methods in the
transport class.

As a quick crock, I made my transport a subclass of
twisted.internet.tcp.Server, and got away with it, but I'd like to do
the right thing.

I'd be delighted to find out that mixins exist that would solve my
problem, but I'd be happy to know what interfaces I need to implement,
or even better where I find find documentation on how to implement a
new "transport", especially one that isn't file-descriptor based.

Thanks!
Phil



From _ at lvh.cc  Mon Apr  8 13:47:36 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 8 Apr 2013 21:47:36 +0200
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <201304081934.r38JYAcw028079@ultimate.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
Message-ID: <CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>

On Apr 8, 2013 9:44 PM, "Phil Budne" <phil at ultimate.com> wrote:
> As a quick crock, I made my transport a subclass of
> twisted.internet.tcp.Server, and got away with it, but I'd like to do
> the right thing.
>
> I'd be delighted to find out that mixins exist that would solve my
> problem, but I'd be happy to know what interfaces I need to implement,
> or even better where I find find documentation on how to implement a
> new "transport", especially one that isn't file-descriptor based.

Are you familiar with interfaces? ITransport sounds like what you want.

> Thanks!
> Phil
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130408/42450136/attachment.html>

From grickert at coldstorage.com  Mon Apr  8 15:10:41 2013
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 8 Apr 2013 21:10:41 +0000
Subject: [Twisted-Python] Custom Scheduler
Message-ID: <25CB87184063F24C9BDD8C5E3566EA2522DC68E6@kit-ex01.coldstorage.com>

Some background:
I have implemented a "relative frequency scheduler".
Tasks added to it are run with frequencies relative to one another - basically, if tasks 1-3 have relative frequencies of 1,2, and 3 respectively, then task 2 is run 1/2  as often as task 1, and task 3 is run 1/3 as often.
The tasks are all generators, so each iteration of the scheduler yields one item from one of its scheduled generators.
The scheduler will also run tasks on both a periodic basis (ie.run this task every X other tasks), as well as running tasks on a timed basis (ie. every X seconds).

I'd like to use twisted in the same program to do some network I/O as well as database interaction.
I did a small test with adding a task that calls both: reactor.doIteration(0) and reactor.runUntilCurrent() to my scheduler, and that seems to run both the network I/O, and the database interactions.

I was wondering if there were other issues with this type of setup?
I can't find any examples online of using other schedulers with twisted.

I glanced briefly at t.i.task.Cooperator, but I don't really need deferreds for any of the CPU stuff, and I'm not really sure how I could replace its scheduler with a non-reactor based one.

Thanks for any insight,
    Gerrat


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130408/7a292604/attachment.html>

From itamar at itamarst.org  Mon Apr  8 17:38:47 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 08 Apr 2013 19:38:47 -0400
Subject: [Twisted-Python] Custom Scheduler
In-Reply-To: <25CB87184063F24C9BDD8C5E3566EA2522DC68E6@kit-ex01.coldstorage.com>
References: <25CB87184063F24C9BDD8C5E3566EA2522DC68E6@kit-ex01.coldstorage.com>
Message-ID: <51635507.4070700@itamarst.org>

On 04/08/2013 05:10 PM, Gerrat Rickert wrote:
>
> Some background:
>
> I have implemented a “relative frequency scheduler”.
>
> Tasks added to it are run with frequencies relative to one another – 
> basically, if tasks 1-3 have relative frequencies of 1,2, and 3 
> respectively, then task 2 is run 1/2 as often as task 1, and task 3 is 
> run 1/3 as often.
>
> The tasks are all generators, so each iteration of the scheduler 
> yields one item from one of its scheduled generators.
>
> The scheduler will also run tasks on both a periodic basis (ie.run 
> this task every X other tasks), as well as running tasks on a timed 
> basis (ie. every X seconds).
>
> I’d like to use twisted in the same program to do some network I/O as 
> well as database interaction.
>
> I did a small test with adding a task that calls both: 
> reactor.doIteration(0) and reactor.runUntilCurrent() to my scheduler, 
> and that seems to run both the network I/O, and the database interactions.
>
> I was wondering if there were other issues with this type of setup?
>
> I can’t find any examples online of using other schedulers with twisted.
>
By its nature, you cannot use a different schedule with an event loop. 
The event loop must drive things. So you need to use reactor.callLater 
to drive this if you want to work with Twisted in the same process. (Or, 
use http://github.com/itamarst/crochet, soon to be released, but that's 
more of a last resort).

That being said, the interface can be implemented by things other than a 
reactor, e.g. twisted.internet.task.Clock which is mostly used for unit 
tests. So you can have code that works both with and without Twisted if 
you write your code against the callLater API 
(twisted.internet.interfaces.IReactorTime is the interface I think).

> I glanced briefly at t.i.task.Cooperator, but I don’t really need 
> deferreds for any of the CPU stuff, and I’m not really sure how I 
> could replace its scheduler with a non-reactor based one.
>
>
Cooperator is basically a class for driving things based off iterators, 
including generators, so it's actually fairly close to what you're doing.



From phil at ultimate.com  Mon Apr  8 21:58:04 2013
From: phil at ultimate.com (Phil Budne)
Date: Mon, 08 Apr 2013 23:58:04 -0400
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
Message-ID: <201304090358.r393w4l2039127@ultimate.com>

Laurens Van Houtven wrote:
> Are you familiar with interfaces? ITransport sounds like what you want.

Yes, and I implemented the ITransport methods.

The first bump was that I was missing registerProducer and
unregisterProducer, which are defined as part of IConsumer.  But after
that I had another problem (which I can't reproduce at this moment).

Phil



From sergun at gmail.com  Tue Apr  9 00:48:43 2013
From: sergun at gmail.com (Sergey Gerasimov)
Date: Tue, 9 Apr 2013 10:48:43 +0400
Subject: [Twisted-Python] Connection was closed cleanly.
Message-ID: <083901ce34ee$4804d4a0$d80e7de0$@gmail.com>

Hello to all!

 

I see in the log file many failures like:

[Broker, client Failure: twisted.spread.pb.PBConnectionLost: [Failure
instance: Traceback (failure with no frames): < class
'twisted.internet.error.ConnectionDone'>: Connection was closed cleanly.]

 

All communications via PB use loopback in my program.

 

I don't see any unhandled exceptions..

 

What is reason of these errors? 

 

Sergey.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130409/4ee8e8bb/attachment.html>

From _ at lvh.cc  Tue Apr  9 04:29:26 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 9 Apr 2013 12:29:26 +0200
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <201304090358.r393w4l2039127@ultimate.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
	<201304090358.r393w4l2039127@ultimate.com>
Message-ID: <CAE_Hg6Y8r4eJoU+BHs_PcfHyNx7R9=3TV2Fd_Ty+oBVb=8Th1w@mail.gmail.com>

On Tue, Apr 9, 2013 at 5:58 AM, Phil Budne <phil at ultimate.com> wrote:

> Yes, and I implemented the ITransport methods.
>
> The first bump was that I was missing registerProducer and
> unregisterProducer, which are defined as part of IConsumer.  But after
> that I had another problem (which I can't reproduce at this moment).
>

Huh. If the interface you're passing it to claims it needs an ITransport,
and an ITransport didn't work, that's a bug. The consumer/producer
interfaces are somewhat related to transports, but definitely distinct.

Could you paste some code that you tried illustrating the problem? (You
mentioned something involving Sites and Protocols, but a Site is a
ServerFactory.)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130409/3f780ffa/attachment.html>

From itamar at itamarst.org  Tue Apr  9 05:49:06 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 09 Apr 2013 07:49:06 -0400
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <CAE_Hg6Y8r4eJoU+BHs_PcfHyNx7R9=3TV2Fd_Ty+oBVb=8Th1w@mail.gmail.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
	<201304090358.r393w4l2039127@ultimate.com>
	<CAE_Hg6Y8r4eJoU+BHs_PcfHyNx7R9=3TV2Fd_Ty+oBVb=8Th1w@mail.gmail.com>
Message-ID: <51640032.2060304@itamarst.org>

On 04/09/2013 06:29 AM, Laurens Van Houtven wrote:
> On Tue, Apr 9, 2013 at 5:58 AM, Phil Budne <phil at ultimate.com 
> <mailto:phil at ultimate.com>> wrote:
>
>     Yes, and I implemented the ITransport methods.
>
>     The first bump was that I was missing registerProducer and
>     unregisterProducer, which are defined as part of IConsumer.  But after
>     that I had another problem (which I can't reproduce at this moment).
>
>
> Huh. If the interface you're passing it to claims it needs an 
> ITransport, and an ITransport didn't work, that's a bug. The 
> consumer/producer interfaces are somewhat related to transports, but 
> definitely distinct.
I'm pretty sure the twisted.web server code uses the consumer API on the 
transport.




From _ at lvh.cc  Tue Apr  9 06:02:02 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 9 Apr 2013 14:02:02 +0200
Subject: [Twisted-Python] Why is this epytext docstring bad?
Message-ID: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>

Hi,

I'm trying to get twisted.positioning landed, but it's blocking on an
invalid epytext docstring. I've stared at this docstring a few times in the
past weeks, but that didn't help.

Failing buildbot log:
https://buildbot.twistedmatrix.com/builders/documentation/builds/3141/steps/api-documentation/logs/stdio

Docstring:
https://twistedmatrix.com/trac/browser/branches/positioning-3926-2/twisted/positioning/nmea.py?rev=37997#L256

If someone could tell me what's wrong with it, that'd be much appreciated :)

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130409/933767d6/attachment.html>

From exarkun at twistedmatrix.com  Tue Apr  9 07:00:57 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 09 Apr 2013 13:00:57 -0000
Subject: [Twisted-Python] Why is this epytext docstring bad?
In-Reply-To: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
References: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
Message-ID: <20130409130057.2793.1921039654.divmod.xquotient.86@top>

On 12:02 pm, _ at lvh.cc wrote:
>Hi,
>
>I'm trying to get twisted.positioning landed, but it's blocking on an
>invalid epytext docstring. I've stared at this docstring a few times in 
>the
>past weeks, but that didn't help.
>
>Failing buildbot log:
>https://buildbot.twistedmatrix.com/builders/documentation/builds/3141/steps 
>/api-documentation/logs/stdio
>
>Docstring:
>https://twistedmatrix.com/trac/browser/branches/positioning-3926-2/twisted/positioning/nmea.py?rev=37997#L256
>
>If someone could tell me what's wrong with it, that'd be much 
>appreciated :)

Here's how you can find out what's wrong with an epytext docstring:

    >>> from epydoc.markup.epytext import parse_docstring
    >>> from twisted.positioning.nmea import NMEASentence
    >>> errors = []
    >>> parse_docstring(NMEASentence.__doc__, errors)
    >>> errors
    [<ParseError on line 70>, <ParseError on line 73>, ...]
    >>> print errors[0]
    Line 70: Possible mal-formatted field item.
    >>>

In this particular case, I think a lot of the errors are caused by 
interleaving "fields" (epytext calls things that start with "@" 
"fields") with prose.  My understanding of the rules are that prose must 
come first and fields must come last.  The epytext documentation seems 
to bear this out:

    Fields must be placed at the end of the docstring, after the
    description of the object. Fields may be included in any order.

from http://epydoc.sourceforge.net/epytext.html

Jean-Paul



From indradhanush.gupta at gmail.com  Tue Apr  9 09:22:45 2013
From: indradhanush.gupta at gmail.com (Indradhanush Gupta)
Date: Tue, 9 Apr 2013 20:52:45 +0530
Subject: [Twisted-Python] Implementing Download Manger for GSoC 2013
Message-ID: <CAO=EPqi1QumTjpa1rERrj8yjzHyYktkfd1begT5O1qCg7PNT2A@mail.gmail.com>

Hello,

I was wondering that whether implementing a download manager could be an
interesting project idea this year at GSoC. Needless to say, it would have
pause/resume support along with multiple download at the same time.

Looking for feedback. Thanks!

-- 
Indradhanush Gupta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130409/1196bb4e/attachment.html>

From _ at lvh.cc  Tue Apr  9 10:17:57 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 9 Apr 2013 18:17:57 +0200
Subject: [Twisted-Python] Why is this epytext docstring bad?
In-Reply-To: <20130409130057.2793.1921039654.divmod.xquotient.86@top>
References: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
	<20130409130057.2793.1921039654.divmod.xquotient.86@top>
Message-ID: <CAE_Hg6awa8kqR9BjmG878hmLiF9W9mO1y1tXnaqseqDqk0Vm=Q@mail.gmail.com>

Cool, thanks, I'll try to debug it this way.

Why doesn't the buildbot produce similar output? IIUC, pydoctor produces
similarly useful output, but the output from the buildbot wasnt' useful in
debugging this.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130409/7d107802/attachment.html>

From exarkun at twistedmatrix.com  Tue Apr  9 11:09:30 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 09 Apr 2013 17:09:30 -0000
Subject: [Twisted-Python] Why is this epytext docstring bad?
In-Reply-To: <CAE_Hg6awa8kqR9BjmG878hmLiF9W9mO1y1tXnaqseqDqk0Vm=Q@mail.gmail.com>
References: <CAE_Hg6b4LcHJUXa3h2nQqBwpwsJBER4iv=ev5pYRfMv5fOQoMA@mail.gmail.com>
	<20130409130057.2793.1921039654.divmod.xquotient.86@top>
	<CAE_Hg6awa8kqR9BjmG878hmLiF9W9mO1y1tXnaqseqDqk0Vm=Q@mail.gmail.com>
Message-ID: <20130409170930.2793.227571370.divmod.xquotient.87@top>

On 04:17 pm, _ at lvh.cc wrote:
>Cool, thanks, I'll try to debug it this way.
>
>Why doesn't the buildbot produce similar output? IIUC, pydoctor 
>produces
>similarly useful output, but the output from the buildbot wasnt' useful 
>in
>debugging this.

Perhaps the buildbot config should be changed to produce better output. 
:)

See http://launchpad.net/twisted-buildbot-configuration

Jean-Paul



From itamar at itamarst.org  Tue Apr  9 14:56:26 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 09 Apr 2013 16:56:26 -0400
Subject: [Twisted-Python] Implementing Download Manger for GSoC 2013
In-Reply-To: <CAO=EPqi1QumTjpa1rERrj8yjzHyYktkfd1begT5O1qCg7PNT2A@mail.gmail.com>
References: <CAO=EPqi1QumTjpa1rERrj8yjzHyYktkfd1begT5O1qCg7PNT2A@mail.gmail.com>
Message-ID: <5164807A.70504@itamarst.org>

On 04/09/2013 11:22 AM, Indradhanush Gupta wrote:
>
> Hello,
>
> I was wondering that whether implementing a download manager could be 
> an interesting project idea this year at GSoC. Needless to say, it 
> would have pause/resume support along with multiple download at the 
> same time.
>
In general we're trying to do GSoC projects that involve improving 
Twisted itself or the tools around it. Twisted itself doesn't need a 
download manager and so we wouldn't want that as a project. You can work 
on that on your own, of course. Are you interested in one of the 
projects we have posted?



From z858570636 at gmail.com  Wed Apr 10 10:20:05 2013
From: z858570636 at gmail.com (yuyan zhang)
Date: Thu, 11 Apr 2013 00:20:05 +0800
Subject: [Twisted-Python] use twisted get ftp's version
Message-ID: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>

i use nc command
bash-3.2# nc 83.85.85.238 21
220 (vsFTPd 2.0.5)
get the version of the ftp
but i want to use twisted to do this,and i don't know the function
can anyone help me?
Thank you very much.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130411/a7ae7b6b/attachment.html>

From _ at lvh.cc  Wed Apr 10 11:57:33 2013
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 10 Apr 2013 19:57:33 +0200
Subject: [Twisted-Python] use twisted get ftp's version
In-Reply-To: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
References: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
Message-ID: <CAE_Hg6aRNAXt8w-7aP+AC2Kd15=71LCjgXKkPM6_hpsydfPkYA@mail.gmail.com>

Are you only interested in the version, or would you also like to actually
do FTP?


On Wed, Apr 10, 2013 at 6:20 PM, yuyan zhang <z858570636 at gmail.com> wrote:

> i use nc command
> bash-3.2# nc 83.85.85.238 21
> 220 (vsFTPd 2.0.5)
> get the version of the ftp
> but i want to use twisted to do this,and i don't know the function
> can anyone help me?
> Thank you very much.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130410/197d08a1/attachment.html>

From darkrho at gmail.com  Wed Apr 10 12:53:27 2013
From: darkrho at gmail.com (Rolando Espinoza La Fuente)
Date: Wed, 10 Apr 2013 14:53:27 -0400
Subject: [Twisted-Python] use twisted get ftp's version
In-Reply-To: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
References: <CA+ggLOLvPHfFdF-CAitVRC8C2Ngy7vjjCcn5JkAgN6Xdwnu3Jg@mail.gmail.com>
Message-ID: <CAAeL7QAJD-siJJkfO+_gQicm6ciRQ8B2ArKEWsPwmXqkG3Te2A@mail.gmail.com>

On Wed, Apr 10, 2013 at 12:20 PM, yuyan zhang <z858570636 at gmail.com> wrote:
> i use nc command
> bash-3.2# nc 83.85.85.238 21
> 220 (vsFTPd 2.0.5)
> get the version of the ftp
> but i want to use twisted to do this,and i don't know the function
> can anyone help me?

Perhaps this is what you are looking for:

# getversion.py
import sys

from twisted.internet.protocol import ClientFactory
from twisted.protocols.basic import LineReceiver


class GetVersion(LineReceiver):
    def lineReceived(self, line):
        sys.stdout.write(line + '\n')
        # close after first line
        self.transport.loseConnection()


class MyFactory(ClientFactory):
    protocol = GetVersion
    clientConnectionLost = lambda *a: reactor.stop()
    clientConnectionFailed = lambda *a: reactor.stop()


if __name__ == '__main__':
    from twisted.internet import reactor
    host, port = '83.85.85.238', 21
    reactor.connectTCP(host, port, MyFactory())
    reactor.run()



From glyph at twistedmatrix.com  Thu Apr 11 00:43:01 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 11 Apr 2013 02:43:01 -0400
Subject: [Twisted-Python] Implementing a new stream transport
In-Reply-To: <CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
References: <201304081934.r38JYAcw028079@ultimate.com>
	<CAE_Hg6ZT8BXHiWRr1OpEvKZ6Bq+F7yKrA52NFp_aXei75MYA4Q@mail.gmail.com>
Message-ID: <6D681898-CDC1-4627-AB00-1517465441C7@twistedmatrix.com>


On Apr 8, 2013, at 3:47 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> On Apr 8, 2013 9:44 PM, "Phil Budne" <phil at ultimate.com> wrote:
> > As a quick crock, I made my transport a subclass of
> > twisted.internet.tcp.Server, and got away with it, but I'd like to do
> > the right thing.
> >
> > I'd be delighted to find out that mixins exist that would solve my
> > problem, but I'd be happy to know what interfaces I need to implement,
> > or even better where I find find documentation on how to implement a
> > new "transport", especially one that isn't file-descriptor based.
> 
> Are you familiar with interfaces? ITransport sounds like what you want.
> 
> 

Saying that ITransport is sufficient is unfortunately a bit simplistic.  I am not sure about our HTTP server, but many protocols rely on other interfaces provided by Server, including:

>>> from twisted.internet.tcp import Server
>>> from zope.interface import implementedBy
>>> from pprint import pprint
>>> from twisted.python.reflect import qual
>>> pprint([qual(x) for x in implementedBy(Server)])
['twisted.internet.interfaces.ITCPTransport',
 'twisted.internet.interfaces.ISystemHandle',
 'twisted.internet.interfaces.ITLSTransport',
 'twisted.internet.interfaces.IPushProducer',
 'twisted.internet.interfaces.IReadWriteDescriptor',
 'twisted.internet.interfaces.IConsumer',
 'twisted.internet.interfaces.ITransport',
 'twisted.internet.interfaces.IHalfCloseableDescriptor',
 'twisted.internet.interfaces.ILoggingContext']

It might be useful to note the possible presence of some of these in the documentation for servers and clients.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130411/eaf94513/attachment.html>

From glyph at twistedmatrix.com  Thu Apr 11 00:48:29 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 11 Apr 2013 02:48:29 -0400
Subject: [Twisted-Python] Connection was closed cleanly.
In-Reply-To: <083901ce34ee$4804d4a0$d80e7de0$@gmail.com>
References: <083901ce34ee$4804d4a0$d80e7de0$@gmail.com>
Message-ID: <47F6A6B6-7C45-43F5-AD07-0550C282A808@twistedmatrix.com>


On Apr 9, 2013, at 2:48 AM, Sergey Gerasimov <sergun at gmail.com> wrote:

> Hello to all!
>  
> I see in the log file many failures like:
> [Broker, client Failure: twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback (failure with no frames): < class ‘twisted.internet.error.ConnectionDone’>: Connection was closed cleanly.]
>  
> All communications via PB use loopback in my program.
>  
> I don’t see any unhandled exceptions..
>  
> What is reason of these errors?

My guess is that this means that you made a callRemote call, and the other end closed the connection for some reason before it shut down.  Maybe you have implemented a 'quit' command that calls loseConnection on the transport, which would make this happen almost all the time.

In order to actually say though, you'd have to attach a simple program that could reproduce this issue.  See <http://sscce.org>.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130411/623a45b2/attachment.html>

From max.haarhaus at gmail.com  Thu Apr 11 11:55:33 2013
From: max.haarhaus at gmail.com (Max Haarhaus)
Date: Thu, 11 Apr 2013 13:55:33 -0400
Subject: [Twisted-Python] Summer of Code Interest
Message-ID: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>

Hi, I sent this message to your GSoC mailing list, but I'm not sure if
that's active yet or anything, so I figured I should send it here too.

My name is Max Haarhaus, and I'm a student at Stony Brook University in New
York. I'm interesting in working on Twisted for the Google Summer of Code.
I have experience in Python, including some web development using Google
App Engine, and I have taken classes in computer networks, so I have some
knowledge of internet tools and protocols.

I'd be interested in either of the projects currently listed on your page,
but it does say that there may be more ideas, and I'm open to anything.

Thanks for your time,

Max Haarhaus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130411/90bf8068/attachment.html>

From itamar at itamarst.org  Thu Apr 11 14:16:01 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Apr 2013 16:16:01 -0400
Subject: [Twisted-Python] Summer of Code Interest
In-Reply-To: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
References: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
Message-ID: <51671A01.7030106@itamarst.org>

In case anyone is interested, twisted-gsoc is the correct list, we just 
had a few emails slip through the cracks. I've followed up with Max 
off-list.



From rachee.singh at gmail.com  Thu Apr 11 18:07:46 2013
From: rachee.singh at gmail.com (Rachee Singh)
Date: Fri, 12 Apr 2013 05:37:46 +0530
Subject: [Twisted-Python] Summer of Code Interest
In-Reply-To: <51671A01.7030106@itamarst.org>
References: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
	<51671A01.7030106@itamarst.org>
Message-ID: <CAPWmKCwc-NgPMvb5eKzbMtY0ns25uUwd1qix=f+G8CURUO=ghA@mail.gmail.com>

Hi,

Is this list the correct place for the applicants of Outreach Program for
Women?

Thanks,
Rachee Singh


On Fri, Apr 12, 2013 at 1:46 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> In case anyone is interested, twisted-gsoc is the correct list, we just
> had a few emails slip through the cracks. I've followed up with Max
> off-list.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130412/40d2971a/attachment.html>

From itamar at itamarst.org  Thu Apr 11 19:29:12 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Apr 2013 21:29:12 -0400
Subject: [Twisted-Python] Summer of Code Interest
In-Reply-To: <CAPWmKCwc-NgPMvb5eKzbMtY0ns25uUwd1qix=f+G8CURUO=ghA@mail.gmail.com>
References: <CAMTd3ROw0dRpEChwfrD+eruN9=F1LFoCZq2MxiqRVWHDwC1Ccg@mail.gmail.com>
	<51671A01.7030106@itamarst.org>
	<CAPWmKCwc-NgPMvb5eKzbMtY0ns25uUwd1qix=f+G8CURUO=ghA@mail.gmail.com>
Message-ID: <51676368.8010805@itamarst.org>

On 04/11/2013 08:07 PM, Rachee Singh wrote:
> Hi,
>
> Is this list the correct place for the applicants of Outreach Program 
> for Women?
>
Please post to twisted-gsoc at twistedmatrix.com if you're interested in 
either that or the Google Summer of Code.

-Itamar



From ewing.rj at gmail.com  Fri Apr 12 00:43:34 2013
From: ewing.rj at gmail.com (RJ Ewing)
Date: Thu, 11 Apr 2013 23:43:34 -0700
Subject: [Twisted-Python] Deprecated Modules
Message-ID: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>

If I import a deprecated module and then run the test-suite should I be
seeing an error? I think that I should be seeing an error, but I am not. I
am not sure if I am doing something wrong or if my local environment is
weird.

Thanks,
RJ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130411/cb19dc9b/attachment.html>

From itamar at itamarst.org  Fri Apr 12 05:03:52 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 12 Apr 2013 07:03:52 -0400
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
Message-ID: <5167EA18.3080102@itamarst.org>

On 04/12/2013 02:43 AM, RJ Ewing wrote:
> If I import a deprecated module and then run the test-suite should I 
> be seeing an error? I think that I should be seeing an error, but I am 
> not. I am not sure if I am doing something wrong or if my local 
> environment is weird.
>
You should see a deprecation warning. If your Python command line 
includes certain options, or your set certain env variables 
(PYTHONWARNINGS) this might be converted into an exception.



From ralphm at ik.nu  Fri Apr 12 05:14:24 2013
From: ralphm at ik.nu (Ralph Meijer)
Date: Fri, 12 Apr 2013 13:14:24 +0200
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
Message-ID: <5167EC90.7040707@ik.nu>

On 2013-04-12 08:43, RJ Ewing wrote:
> If I import a deprecated module and then run the test-suite should I be
> seeing an error? I think that I should be seeing an error, but I am not.
> I am not sure if I am doing something wrong or if my local environment
> is weird.

Twisted should always emit DeprecationWarnings for such uses. However, 
since Python 2.7, these are suppressed by default and you need to 
specifically enable the 'default' setting to see them again. Yeah.

See 
<http://docs.python.org/dev/whatsnew/2.7.html#the-future-for-python-2-x> 
for details.

-- 
ralphm



From exarkun at twistedmatrix.com  Fri Apr 12 06:08:28 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 12 Apr 2013 12:08:28 -0000
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <5167EC90.7040707@ik.nu>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
	<5167EC90.7040707@ik.nu>
Message-ID: <20130412120828.2793.328338921.divmod.xquotient.107@top>

On 11:14 am, ralphm at ik.nu wrote:
>On 2013-04-12 08:43, RJ Ewing wrote:
>>If I import a deprecated module and then run the test-suite should I 
>>be
>>seeing an error? I think that I should be seeing an error, but I am 
>>not.
>>I am not sure if I am doing something wrong or if my local environment
>>is weird.
>
>Twisted should always emit DeprecationWarnings for such uses. However,
>since Python 2.7, these are suppressed by default and you need to
>specifically enable the 'default' setting to see them again. Yeah.
>
>See
><http://docs.python.org/dev/whatsnew/2.7.html#the-future-for- 
>python-2-x>
>for details.

This is an unfortunate bug, though.  See <http://tm.tl/6348>.

Jean-Paul



From ewing.rj at gmail.com  Fri Apr 12 18:07:51 2013
From: ewing.rj at gmail.com (RJ Ewing)
Date: Fri, 12 Apr 2013 17:07:51 -0700
Subject: [Twisted-Python] Deprecated Modules
In-Reply-To: <20130412120828.2793.328338921.divmod.xquotient.107@top>
References: <CAOSSsV0ncWKNqi-PjPSHzGe9ep0fRBEDsith4kZca07hdaGkqQ@mail.gmail.com>
	<5167EC90.7040707@ik.nu>
	<20130412120828.2793.328338921.divmod.xquotient.107@top>
Message-ID: <CAOSSsV0d+_J8x0ERs2CzXhCBEOZac0SLues_=FpUUUJ1GYL_aA@mail.gmail.com>

Thank you. That was the problem.

RJ


On Fri, Apr 12, 2013 at 5:08 AM, <exarkun at twistedmatrix.com> wrote:

> On 11:14 am, ralphm at ik.nu wrote:
> >On 2013-04-12 08:43, RJ Ewing wrote:
> >>If I import a deprecated module and then run the test-suite should I
> >>be
> >>seeing an error? I think that I should be seeing an error, but I am
> >>not.
> >>I am not sure if I am doing something wrong or if my local environment
> >>is weird.
> >
> >Twisted should always emit DeprecationWarnings for such uses. However,
> >since Python 2.7, these are suppressed by default and you need to
> >specifically enable the 'default' setting to see them again. Yeah.
> >
> >See
> ><http://docs.python.org/dev/whatsnew/2.7.html#the-future-for-
> >python-2-x>
> >for details.
>
> This is an unfortunate bug, though.  See <http://tm.tl/6348>.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130412/1c657136/attachment.html>

From pallavikumarijha at gmail.com  Sat Apr 13 06:17:58 2013
From: pallavikumarijha at gmail.com (Pallavi Jha)
Date: Sat, 13 Apr 2013 17:47:58 +0530
Subject: [Twisted-Python] Guidance for OPW 2013
Message-ID: <CACtyrE1sm03G8uxrKW12xS34wCdmhUm+J38Q_q7j8naKDFv+NA@mail.gmail.com>

Hi Everyone,

I am Pallavi Kumari Jha. I want to apply for OutreachProgramForWomen 2013
this year and am looking for a good project. I have good knowledge of
Python, pytest, unit testing framework, code coverage.I came across the
idea mentioned in "Goal #2: Test suite cleanup". I would like to work on
this project. Please guide me with your valuable suggestions on how to get
started with it.

Thanks,
Pallavi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130413/876fdcf8/attachment.html>

From exarkun at twistedmatrix.com  Sat Apr 13 22:05:25 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Apr 2013 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1365912325.55.1777761592@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130414/15c13346/attachment.html>

From indradhanush.gupta at gmail.com  Sun Apr 14 00:41:50 2013
From: indradhanush.gupta at gmail.com (Indradhanush Gupta)
Date: Sun, 14 Apr 2013 12:11:50 +0530
Subject: [Twisted-Python] GSoC 13 Project Idea : Rewriting
	twisted.internet.stdio to use the reactor
Message-ID: <CAO=EPqir47sDRdi--U_NhbBa7bsnmh-TomXUoTVdpNWL_545Mg@mail.gmail.com>

HI,

I just went through twisted.internet.stdio and I see it doesnt use the
reactor. Its mentioned as a future plan along with support for stderr.
Could it be a viable GSoC project this year? If so, I would enjoy working
on it.

Indradhanush Gupta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130414/f7559f11/attachment.html>

From itamar at itamarst.org  Sun Apr 14 06:18:25 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Apr 2013 08:18:25 -0400
Subject: [Twisted-Python] GSoC 13 Project Idea : Rewriting
 twisted.internet.stdio to use the reactor
In-Reply-To: <CAO=EPqir47sDRdi--U_NhbBa7bsnmh-TomXUoTVdpNWL_545Mg@mail.gmail.com>
References: <CAO=EPqir47sDRdi--U_NhbBa7bsnmh-TomXUoTVdpNWL_545Mg@mail.gmail.com>
Message-ID: <516A9E91.9080506@itamarst.org>

On 04/14/2013 02:41 AM, Indradhanush Gupta wrote:
>
> HI,
>
> I just went through twisted.internet.stdio and I see it doesnt use the 
> reactor. Its mentioned as a future plan along with support for stderr. 
> Could it be a viable GSoC project this year? If so, I would enjoy 
> working on it.
>
twisted.internet.stdio does actually use the reactor, it's just implicit 
rather than being explicitly passed in. Neither of those features are 
probably big enough for a GSoC project.



From rodrigc at crodrigues.org  Mon Apr 15 02:47:34 2013
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 15 Apr 2013 01:47:34 -0700
Subject: [Twisted-Python] Coursera course on network design patterns
Message-ID: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>

Hi,

In this posting:
http://twistedmatrix.com/pipermail/twisted-python/2012-November/026324.html

I mentioned that Professor. Douglas C. Schmidt is teaching a Coursera
course:
"Pattern-Oriented Software Architectures for Concurrent and Networked
Software"
This course is going on right now:

https://www.coursera.org/course/posa

There are a lot of very good video lectures in this course.
There are also several programming assignments.

Students are allowed to implement the programming assignments in whatever
language they want.  People are submitting assignments
in Java, C++, Python, Ruby, Scala.

For the students who wish to program in Python, I have been
pushing students to look at Twisted on the course discussion board.

I have also asked Prof. Schmidt to take assignment 3 for the course,
and add special wording for Twisted.   The assignment 3 targeted
at Twisted is here:

https://class.coursera.org/posa-001/human_grading/view/courses/970268/assessments/35/submissions

If there are some people in the Twisted community with some free time
who can help,  can you please join the course
(it is free) and provide feedback on the wording of the assignment?
It would help to correct any mistakes, and point people to the correct
sections of the Twisted documentation.
Since you need to join the class to see the wording of the assignment,
I am attaching it here.

This is a good opportunity to promote Twisted to new students who want
to use Python, but also learn how to implement network design patterns

Thanks.
--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130415/64772f35/attachment.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: posa_assignment3_twisted_python.txt
URL: </pipermail/twisted-python/attachments/20130415/64772f35/attachment-0002.txt>

From itamar at itamarst.org  Mon Apr 15 05:53:40 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 15 Apr 2013 07:53:40 -0400
Subject: [Twisted-Python] Coursera course on network design patterns
In-Reply-To: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>
References: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>
Message-ID: <516BEA44.7030400@itamarst.org>

On 04/15/2013 04:47 AM, Craig Rodrigues wrote:
> I have also asked Prof. Schmidt to take assignment 3 for the course,
> and add special wording for Twisted.   The assignment 3 targeted
> at Twisted is here:
>
> https://class.coursera.org/posa-001/human_grading/view/courses/970268/assessments/35/submissions
>
> If there are some people in the Twisted community with some free time
> who can help,  can you please join the course
> (it is free) and provide feedback on the wording of the assignment?
> It would help to correct any mistakes, and point people to the correct
> sections of the Twisted documentation.
> Since you need to join the class to see the wording of the assignment,
> I am attaching it here.
>
Cool! I would suggest linking to 
http://twistedmatrix.com/documents/current/core/howto/servers.html 
rather than to IReactorTCP.



From jiabao.foss at gmail.com  Tue Apr 16 07:16:39 2013
From: jiabao.foss at gmail.com (Jiabao Wu)
Date: Tue, 16 Apr 2013 23:16:39 +1000
Subject: [Twisted-Python]  GSoC and OPW Participation
Message-ID: <CAF9aoD=VKpkSg4=ovNF=Zpw0LghYXCRRHZA1XQU2cyBnfqO42A@mail.gmail.com>

Hi,

I am Jiabao Wu, 1st year postgraduate student in Australian National
University. At the end of last year, I graduated in B.IT in ANU with double
major of Software Development and IT in New Media Arts.

I am currently studying a course of free and opensource software
development. This has boosted my passion to contribute to the FOSS
community. I am going to apply GSoC and OPW. In the mean time, I would like
to start contribute to Twisted.

The "Maintain a sub-project" sounds really fun to me and seems within my
capability. "Rewrite twisted.web.client.getPage using Agent" also looks
cool for me. Could you give me some suggestions which sub-project is a good
choice for starting?

Cheers,
Jiabao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130416/adf06cac/attachment-0001.html>

From jonathan at stoppani.name  Tue Apr 16 14:11:01 2013
From: jonathan at stoppani.name (Jonathan Stoppani)
Date: Tue, 16 Apr 2013 16:11:01 -0400
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
	<20130405122426.2793.363555816.divmod.xquotient.34@top>
	<CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>
Message-ID: <CAFzCN1s6X04ktVMEW-W+_Wtdy447jNiM+ivzPUdp44TjPMsFMA@mail.gmail.com>

Gentle reminder. ;-)


On Mon, Apr 8, 2013 at 2:13 PM, Jonathan Stoppani <jonathan at stoppani.name>wrote:

> Hi Exarkun,
>
> Thanks for coming back with this.
>
> No problem if we exclude the spam filter tables. I don't need them.
>
> Concerning the svn tables, if they don't carry additional information
> linking revisions to other (trac-specific metadata), I don't need them
> either.
>
> I can understand your concerns regarding the permissions table. I thought
> they may be useful to help determine a role of a specific user in the
> organization, if that is enough as argumentation perfect, otherwise we can
> leave them out as they are not my primary source of data.
>
> Cheers,
> Jonathan
>
>
>
>
> On Fri, Apr 5, 2013 at 8:24 AM, <exarkun at twistedmatrix.com> wrote:
>
>> On 28 Mar, 05:16 pm, jonathan at stoppani.name wrote:
>> >Hello everybody (with access to the Trac DB),
>> >
>> >I am currently doing my master thesis on the "analysis and management
>> >of change propagation in complex systems". I'm concentrating my
>> >efforts on software-based complex systems.
>> >
>> >As part of my analysis, I gather data from different domains, such as
>> >dependencies between modules of the source code, interactions between
>> >people (like, for example, this mailing list) and change requests (in
>> >this specific case, issues and tickets on an issue tracking system).
>> >
>> >A couple of weeks ago I asked on IRC if it would be possible to get
>> >the Trac data from twistedmatrix.com and I was told to write a script
>> >to dump the database by excluding sensitive information.
>> >
>> >The script is up for review and auditing over here:
>> >
>> >https://gist.github.com/GaretJax/5264941
>> >
>> >It can be run by saving it to a .py file or directly with the following
>> >command:
>> >
>> >curl -s
>> >
>> https://gist.github.com/GaretJax/5264941/raw/c478c2c4ec39cdb4bc3ceeb05d57a31063a0a486
>> >/dump-trac.py
>> >| python - <projenv> <outfile>
>> >
>> >(by replacing the two arguments: trac base directory and the output
>> >file).
>> >
>> >There are no privacy concerns, as all data being analyzes is publicly
>> >available, either in the repository, in the mailing list archives or
>> >on twistedmatrix.com
>> >
>> >After being reviewed, can someone with access to the server please run
>> >it for me?
>>
>> Hi Jonathan,
>>
>> A couple questions about the script.  There are a few more tables in the
>> database that I'm not sure will be interesting to you.
>>
>> Do you mind if we also exclude:
>>
>>     spamfilter_bayes
>>     spamfilter_log
>>
>> Some of the tables are also basically an inefficient mirror of the
>> subversion repository - revision, node_change.  Do you want this data as
>> well?
>>
>> Lastly, I have some reluctance to distribute the contents of the
>> permission table.  I could probably be easily convinced to do so, but if
>> you don't thing you'll actually use that data, I'd just as soon not.
>>
>> Thanks!
>> Jean-Paul
>> >Thanks,
>> >Jonathan
>> >
>> >P.S.: If someone would like more details about the research, a draft
>> >of the project statement can be found here:
>> >https://www.dropbox.com/s/qu3jpxcd4wpat2i/statement-0-r0-2013-03-19.pdf
>> >
>> >_______________________________________________
>> >Twisted-Python mailing list
>> >Twisted-Python at twistedmatrix.com
>> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130416/ea9ff5c9/attachment-0001.html>

From itamar at itamarst.org  Tue Apr 16 14:33:24 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 16 Apr 2013 16:33:24 -0400
Subject: [Twisted-Python] GSoC and OPW Participation
In-Reply-To: <CAF9aoD=VKpkSg4=ovNF=Zpw0LghYXCRRHZA1XQU2cyBnfqO42A@mail.gmail.com>
References: <CAF9aoD=VKpkSg4=ovNF=Zpw0LghYXCRRHZA1XQU2cyBnfqO42A@mail.gmail.com>
Message-ID: <516DB594.7060108@itamarst.org>

On 04/16/2013 09:16 AM, Jiabao Wu wrote:
> Hi,
>
> I am Jiabao Wu, 1st year postgraduate student in Australian National 
> University. At the end of last year, I graduated in B.IT <http://B.IT> 
> in ANU with double major of Software Development and IT in New Media 
> Arts.
>
> I am currently studying a course of free and opensource software 
> development. This has boosted my passion to contribute to the FOSS 
> community. I am going to apply GSoC and OPW. In the mean time, I would 
> like to start contribute to Twisted.
>
> The "Maintain a sub-project" sounds really fun to me and seems within 
> my capability. "Rewrite twisted.web.client.getPage using Agent" also 
> looks cool for me. Could you give me some suggestions which 
> sub-project is a good choice for starting?
>

Glad you're interested! Please email twisted-gsoc at twistedmatrix.com so 
we can track you.

To get going with your application, you should read 
https://twistedmatrix.com/trac/wiki/GSoC2013#GettingStartedwithTwistedDevelopment, 
and then pick a first ticket to work on - 
https://bit.ly/easy-twisted-tickets is a good starting point. Tickets in 
this category that have review comments and haven't been touched for a 
few months are fine, and let you know what to do next. On the other 
hand, if someone else assigned the ticket to themselves recently, you 
shouldn't work on it to prevent duplicate work.

Let us know once you've submitted a ticket, or if you have any questions 
or need any help.

Regards,
-Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130416/9253a50a/attachment.html>

From exarkun at twistedmatrix.com  Tue Apr 16 18:00:21 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 17 Apr 2013 00:00:21 -0000
Subject: [Twisted-Python] Twisted source, changes and social analysis
In-Reply-To: <CAFzCN1s6X04ktVMEW-W+_Wtdy447jNiM+ivzPUdp44TjPMsFMA@mail.gmail.com>
References: <CAFzCN1sU4Kc_TU2+JA-uH7XtGz-J=trv60Va2xGd4bH9CsPeoQ@mail.gmail.com>
	<20130405122426.2793.363555816.divmod.xquotient.34@top>
	<CAFzCN1u7ZuoFw_y1vne6RCK=wmCA0GKetkauSLu-1Y5uM541gA@mail.gmail.com>
	<CAFzCN1s6X04ktVMEW-W+_Wtdy447jNiM+ivzPUdp44TjPMsFMA@mail.gmail.com>
Message-ID: <20130417000021.2793.1554838720.divmod.xquotient.125@top>

On 16 Apr, 08:11 pm, jonathan at stoppani.name wrote:
>Gentle reminder. ;-)

Thanks. :)  You should get an email from me off-list shortly.

Jean-Paul



From itamar at itamarst.org  Wed Apr 17 18:55:39 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 17 Apr 2013 20:55:39 -0400
Subject: [Twisted-Python] Please help with Google Summer of Code and
	Outreach Program for Women
Message-ID: <516F448B.8020804@itamarst.org>

We've got lots of interested candidates for GSoC and OPW, and could use 
the community's help.

 1. If you know of any easy tickets, please add the easy keyword to them.
 2. Please review tickets that have the easy keyword, they are likely
    from potential candidates, and Tom Prince has some urgent stuff
    taking most of his time.
 3. If you have any project ideas, please email
    twisted-gsoc at twistedmatrix.com

Thanks!




From itamar at futurefoundries.com  Thu Apr 18 09:55:12 2013
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Thu, 18 Apr 2013 11:55:12 -0400
Subject: [Twisted-Python] Job posting: Technical Team Lead at CritSend
Message-ID: <CAOp9P3oj1fe70CBVLoNiYbFioLAOv3Qw90gYZd0jdv8ZtbTaEA@mail.gmail.com>

One of my consulting clients is hiring a team lead; lots of Twisted
development, as well as Django:


https://docs.google.com/a/futurefoundries.com/document/d/1dPgt3fc_3-7bS6Wr_YZO6nEaIFrdFNqQ653wUgD3MNY/edit

Regards,
 -Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130418/2bc9f221/attachment.html>

From carlos.sotelo.pinto at gmail.com  Thu Apr 18 18:33:49 2013
From: carlos.sotelo.pinto at gmail.com (Carlos Eduardo Sotelo Pinto)
Date: Thu, 18 Apr 2013 19:33:49 -0500
Subject: [Twisted-Python] Multiple clients and ports
Message-ID: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>

I am doing a gps tracker wich use multiple protocols and multiple
clients, my problen is when I have more than one client on more than
one protocol at the same time, data and validation start to crashing
one to other

My Server is

#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Heracles Tracker Listener Server."""

from twisted.internet import threads
from twisted.protocols.gps.nmea import NMEAReceiver
from twisted.internet.protocol import Factory, Protocol
import binascii

#class TrackerServer(NMEAReceiver):
#class TrackerServer(LineReceiver):
class TrackerServer(Protocol):
    """Tracker Twisted Protocol Class."""

    def __init__(self, decoder):
        """Class Constructor."""
        decoderModule = __import__('listener.protocols.%sDecoder' %
(decoder, ), fromlist=['%sDecoder' % (decoder, )])
        decoderClass = getattr(decoderModule, '%sDecoder' % (decoder, ))
        self.decoder = decoderClass()
        #self.delimiter = '0';

    def connectionMade(self):
        """ConnectionMade Twisted event."""
        try:
            print 'Connection made to', self.transport.getHost(),
'from', self.transport.getPeer()
        except ValueError:
            print "Oops!  Connection was not started"

    def connectionLost(self, reason):
        """ConnectionLost Twisted event."""
        print "Connection lost ", reason

    def dataReceived(self, data):
        Protocol.dataReceived(self, data)

        """DataReceived Twisted event."""
        try:
            self.sendResponse(self.decoder.processDatagram(data))
            #d = threads.deferToThread(self.decoder.processDatagram(data ))
            #d.addCallback(self.sendResponse)
        except ValueError:
            print "Oops!  That was no valid data.  Try again..."

    def sendResponse (self, response):
        self.transport.write(response)

class TrackerFactory(Factory):
    """Tracker Factory Twisted Class."""

    def __init__(self, decoder):
        """Class Constructor. """
        self.decoder = decoder

    def buildProtocol(self, addr):
        """BuildProtocol Twisted."""
        return TrackerServer(self.decoder)


My tac file is

#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, sys
import ConfigParser
from twisted.application import internet, service
from listener.TrackerServer import TrackerFactory

PROJECT_DIR = os.path.abspath(os.path.dirname(__file__))
sys.path.append(PROJECT_DIR)

path = None
config = ConfigParser.ConfigParser()
config.read('protocols.cfg')

application = service.Application("tracker")
for protocol in config.get('protocols', 'keys').split(','):
    port = int(config.get(protocol, 'port'))
    factory = TrackerFactory(config.get(protocol, 'name'))
    trackerService = internet.TCPServer(port, factory) # create the service
    trackerService.setServiceParent(application)




--
Carlos Eduardo Sotelo Pinto | http://carlossotelo.com | csotelo at twitter
    GNU Linux Admin | PHP Senior Web Developer
    Mobil: RPC (Claro)+51, 958194614 | Mov: +51, 959980794
    GTalk: carlos.sotelo.pinto at gmail.com | Skype: csotelop
    MSN: carlos.sotelo.pinto at gmail.com | Yahoo: csotelop
    GNULinux RU #379182 | GNULinux RM #277661
GPG FP:697E FAB8 8E83 1D60 BBFB 2264 9E3D 5761 F855 4F6B



From johnnypops at gmail.com  Fri Apr 19 00:21:22 2013
From: johnnypops at gmail.com (John Popplewell)
Date: Fri, 19 Apr 2013 02:21:22 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
Message-ID: <20130419022045@johnnypops.co.uk>

Hi all,

I've recently put together a series of patches and new files that expand
upon and improve the work done in Ticket #2157
http://twistedmatrix.com/trac/ticket/2157

I've got working cftp.py and conch.py scripts and imap4client.py also
works. The console support works on a Windows-7 buildbot and acts like a
normal console with a flashing cursor and working scroll-back (no
editing yet, but back-space works).

I missed exarkun's message until after I'd uploaded the patches there :(

As I got familiar with the code-base again (I was using some of this
stuff on windows over 5 years ago), I looked at lots of tests that could
be enabled now, and have a set of other patches for more tests (I got
up to 6999 :)

Not sure how to proceed so I'm doing as exarkun suggested, and posting
here,

best regards,
John Popplewell
PS I married a beautiful American woman last year and now reside in
Northern Michigan - looking for work, thought I'd try and do something
useful.




From p.mayers at imperial.ac.uk  Fri Apr 19 02:20:24 2013
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 19 Apr 2013 09:20:24 +0100
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
Message-ID: <5170FE48.8050408@imperial.ac.uk>

On 04/19/2013 01:33 AM, Carlos Eduardo Sotelo Pinto wrote:
> I am doing a gps tracker wich use multiple protocols and multiple
> clients, my problen is when I have more than one client on more than
> one protocol at the same time, data and validation start to crashing
> one to other

I don't understand what you mean. Can you be more specific?

>
>      def __init__(self, decoder):
>          """Class Constructor."""
>          decoderModule = __import__('listener.protocols.%sDecoder' %
> (decoder, ), fromlist=['%sDecoder' % (decoder, )])
>          decoderClass = getattr(decoderModule, '%sDecoder' % (decoder, ))

You might want to look at "twisted.python.reflect" which contains utils 
to do that kind of "give me the python object at this import"


>      def dataReceived(self, data):
>          Protocol.dataReceived(self, data)
>
>          """DataReceived Twisted event."""
>          try:
>              self.sendResponse(self.decoder.processDatagram(data))

Not sure if this is your problem - but stream protocols (TCP) don't 
guarantee that "message" boundaries will be preserved - that is, if the 
sender does:

write(100 bytes)
write(100 bytes)

...you might get

dataReceived(10 bytes)
dataReceived(39 bytes)
dataReceived(27 bytes)

...or any other variation - the data can arrive in arbitrary chunks. 
Unless your processDatagram is doing the reassembly, you need to 
implement message framing in your dataReceived method.

Note that the commented out versions of your base classes were all for 
protocols which do framing (e.g. line-based, etc.)

Normally this looks something like:

  def dataReceived(self, data):
     self.buffer += data
     if hasFullMessage(self.buffer):
       msg, self.buffer = extractMessage(self.buffer)
       processMsg(msg)





From carlos.sotelo.pinto at gmail.com  Fri Apr 19 05:35:44 2013
From: carlos.sotelo.pinto at gmail.com (Carlos Eduardo Sotelo Pinto)
Date: Fri, 19 Apr 2013 06:35:44 -0500
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <5170FE48.8050408@imperial.ac.uk>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
	<5170FE48.8050408@imperial.ac.uk>
Message-ID: <CAEhw=E8Z=hWOmjtfwoW7gP8uzjmhz0WipZooxo34-+f+-ZdFBg@mail.gmail.com>

Dear Phil

I am glad on your fast answer

2013/4/19 Phil Mayers <p.mayers at imperial.ac.uk>:
> On 04/19/2013 01:33 AM, Carlos Eduardo Sotelo Pinto wrote:
>> I am doing a gps tracker wich use multiple protocols and multiple
>> clients, my problen is when I have more than one client on more than
>> one protocol at the same time, data and validation start to crashing
>> one to other

I am receiving data from gps that must be validated and keep each
connectoin independent, for exmaple

I am working with different datagram protocolos form gps, a protocol
is a kind of parsing, for exmaple one gps send a login datagram, that
on hex  could be something like

datagram 70700112345678 as first for start a comunication where 7070
and 01 is the comman that says the datagram is trying to start a
comunicacion, 12345678 is the imei or device id
datagram 707002123456780f0f0f0f0f..... is the location datagram just
the comand changee that sais that it is a location datagram and then
the location info start, it is working on 5050 port

I have other device
datagram 20200187654321 as first for start a comunication where 2020
and 01 is the comman that says the datagram is trying to start a
comunicacion, 87654321 is the imei or device id
datagram 3030020f0f0f0f0f..... is the location datagram, the header
changed and no imei is provided, it is working on port 4040

I must do that the devies start comunication after login and the parse
info, also validate headers, command and others

as both are working at the same time, when arrive the first one with
header 7070, the class wich decode this device, keep on memory and
when the second one arrive, the validation will be wrong, cause will
try to validate the header 7070 with the values 2020, and on the
seconds one devie, could start checking datagram , s no imei, with the
first one ime

I have seen it on my program, however they are different parser clases
on diferent protocols, i need to keep each device complete independent

when I have more decvice the problem is bigger on the crashes, how
could I avoid that on keeping infor independent asyncronus is ok or
cred, I dont know

Best regards




>
> I don't understand what you mean. Can you be more specific?
>
>>
>>      def __init__(self, decoder):
>>          """Class Constructor."""
>>          decoderModule = __import__('listener.protocols.%sDecoder' %
>> (decoder, ), fromlist=['%sDecoder' % (decoder, )])
>>          decoderClass = getattr(decoderModule, '%sDecoder' % (decoder, ))
>
> You might want to look at "twisted.python.reflect" which contains utils
> to do that kind of "give me the python object at this import"
>
>
>>      def dataReceived(self, data):
>>          Protocol.dataReceived(self, data)
>>
>>          """DataReceived Twisted event."""
>>          try:
>>              self.sendResponse(self.decoder.processDatagram(data))
>
> Not sure if this is your problem - but stream protocols (TCP) don't
> guarantee that "message" boundaries will be preserved - that is, if the
> sender does:
>
> write(100 bytes)
> write(100 bytes)
>
> ...you might get
>
> dataReceived(10 bytes)
> dataReceived(39 bytes)
> dataReceived(27 bytes)
>
> ...or any other variation - the data can arrive in arbitrary chunks.
> Unless your processDatagram is doing the reassembly, you need to
> implement message framing in your dataReceived method.
>
> Note that the commented out versions of your base classes were all for
> protocols which do framing (e.g. line-based, etc.)
>
> Normally this looks something like:
>
>   def dataReceived(self, data):
>      self.buffer += data
>      if hasFullMessage(self.buffer):
>        msg, self.buffer = extractMessage(self.buffer)
>        processMsg(msg)
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



--
Carlos Eduardo Sotelo Pinto | http://carlossotelo.com | csotelo at twitter
    GNU Linux Admin | PHP Senior Web Developer
    Mobil: RPC (Claro)+51, 958194614 | Mov: +51, 959980794
    GTalk: carlos.sotelo.pinto at gmail.com | Skype: csotelop
    MSN: carlos.sotelo.pinto at gmail.com | Yahoo: csotelop
    GNULinux RU #379182 | GNULinux RM #277661
GPG FP:697E FAB8 8E83 1D60 BBFB 2264 9E3D 5761 F855 4F6B



From _ at lvh.io  Fri Apr 19 08:38:52 2013
From: _ at lvh.io (Laurens Van Houtven)
Date: Fri, 19 Apr 2013 16:38:52 +0200
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
Message-ID: <CAE_Hg6awjT5jbWLMz02SVj=rXsmaKYLUVxPz_S8-mHOGxBTTgA@mail.gmail.com>

Not a direct answer to your question, but I hope to get twisted.positioning
in the next release of Twisted. It's a new and improved interface for
positioning (including NMEA) that I started back when I was writing
something extremely similar to what you are now. Hopefully you'll be one of
its first happy users :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130419/7a48d888/attachment.html>

From carlos.sotelo.pinto at gmail.com  Fri Apr 19 08:53:31 2013
From: carlos.sotelo.pinto at gmail.com (Carlos Eduardo Sotelo Pinto)
Date: Fri, 19 Apr 2013 09:53:31 -0500
Subject: [Twisted-Python] Multiple clients and ports
In-Reply-To: <CAE_Hg6awjT5jbWLMz02SVj=rXsmaKYLUVxPz_S8-mHOGxBTTgA@mail.gmail.com>
References: <CAEhw=E8+_=E9yW2=TKvD0MDjvWx3b9xpV6RHbW09T4B2okFBAg@mail.gmail.com>
	<CAE_Hg6awjT5jbWLMz02SVj=rXsmaKYLUVxPz_S8-mHOGxBTTgA@mail.gmail.com>
Message-ID: <CAEhw=E-_Nmo=E_odA4XXx_0mPOonFmE9qA2LHwQQtAxKSHaDVg@mail.gmail.com>

of course, but I need to solve it, cause I am on working now, and if I
could help you on anything

best regards



2013/4/19 Laurens Van Houtven <_ at lvh.io>:
> Not a direct answer to your question, but I hope to get twisted.positioning
> in the next release of Twisted. It's a new and improved interface for
> positioning (including NMEA) that I started back when I was writing
> something extremely similar to what you are now. Hopefully you'll be one of
> its first happy users :-)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Carlos Eduardo Sotelo Pinto | http://carlossotelo.com | csotelo at twitter
    GNU Linux Admin | PHP Senior Web Developer
    Mobil: RPC (Claro)+51, 958194614 | Mov: +51, 959980794
    GTalk: carlos.sotelo.pinto at gmail.com | Skype: csotelop
    MSN: carlos.sotelo.pinto at gmail.com | Yahoo: csotelop
    GNULinux RU #379182 | GNULinux RM #277661
GPG FP:697E FAB8 8E83 1D60 BBFB 2264 9E3D 5761 F855 4F6B



From kevin.horn at gmail.com  Fri Apr 19 10:36:43 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 19 Apr 2013 11:36:43 -0500
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419022045@johnnypops.co.uk>
References: <20130419022045@johnnypops.co.uk>
Message-ID: <CA+U=zK06=PktxOn01C7=fRmr51u8==D=X-Q=wx7kuk_x6js-iA@mail.gmail.com>

On Fri, Apr 19, 2013 at 1:21 AM, John Popplewell <johnnypops at gmail.com>wrote:

> Hi all,
>
> I've recently put together a series of patches and new files that expand
> upon and improve the work done in Ticket #2157
> http://twistedmatrix.com/trac/ticket/2157
>
> I've got working cftp.py and conch.py scripts and imap4client.py also
> works. The console support works on a Windows-7 buildbot and acts like a
> normal console with a flashing cursor and working scroll-back (no
> editing yet, but back-space works).
>
> I missed exarkun's message until after I'd uploaded the patches there :(
>
> As I got familiar with the code-base again (I was using some of this
> stuff on windows over 5 years ago), I looked at lots of tests that could
> be enabled now, and have a set of other patches for more tests (I got
> up to 6999 :)
>
> Not sure how to proceed so I'm doing as exarkun suggested, and posting
> here,
>
> best regards,
> John Popplewell
> PS I married a beautiful American woman last year and now reside in
> Northern Michigan - looking for work, thought I'd try and do something
> useful.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Fantastic to see someone picking up this work!

--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130419/58890891/attachment.html>

From itamar at futurefoundries.com  Fri Apr 19 12:21:48 2013
From: itamar at futurefoundries.com (Itamar Turner-Trauring)
Date: Fri, 19 Apr 2013 14:21:48 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419022045@johnnypops.co.uk>
References: <20130419022045@johnnypops.co.uk>
Message-ID: <CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>

On Fri, Apr 19, 2013 at 2:21 AM, John Popplewell <johnnypops at gmail.com>wrote:

> Hi all,
>
> I've recently put together a series of patches and new files that expand
> upon and improve the work done in Ticket #2157
> http://twistedmatrix.com/trac/ticket/2157
>
>
> Not sure how to proceed so I'm doing as exarkun suggested, and posting
> here,
>

The main issue is that the patch is too big? The easiest way to solve that
is to split it up into multiple tickets, each addressing a subsection of
the problem, with a corresponding small patch. It's fine to say "and this
patch requires ticket #1234 to be fixed."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130419/ef1b61a0/attachment.html>

From johnnypops at gmail.com  Fri Apr 19 12:55:30 2013
From: johnnypops at gmail.com (John Popplewell)
Date: Fri, 19 Apr 2013 14:55:30 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
Message-ID: <20130419145450@johnnypops.co.uk>

On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
> On Fri, Apr 19, 2013 at 2:21 AM, John Popplewell <johnnypops at gmail.com>wrote:
> 
> > Hi all,
> >
> > I've recently put together a series of patches and new files that expand
> > upon and improve the work done in Ticket #2157
> > http://twistedmatrix.com/trac/ticket/2157
> >
> >
> > Not sure how to proceed so I'm doing as exarkun suggested, and posting
> > here,
> >
> 
> The main issue is that the patch is too big? The easiest way to solve that
> is to split it up into multiple tickets, each addressing a subsection of
> the problem, with a corresponding small patch. It's fine to say "and this
> patch requires ticket #1234 to be fixed."

OK, thanks, I'll do that.




From exarkun at twistedmatrix.com  Fri Apr 19 13:58:33 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 19 Apr 2013 19:58:33 -0000
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419145450@johnnypops.co.uk>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
	<20130419145450@johnnypops.co.uk>
Message-ID: <20130419195833.2793.1352576413.divmod.xquotient.143@top>

On 06:55 pm, johnnypops at gmail.com wrote:
>On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
>>
>>The main issue is that the patch is too big? The easiest way to solve 
>>that
>>is to split it up into multiple tickets, each addressing a subsection 
>>of
>>the problem, with a corresponding small patch. It's fine to say "and 
>>this
>>patch requires ticket #1234 to be fixed."
>
>OK, thanks, I'll do that.

To add to what Itamar wrote a bit, an important part of this strategy is 
that the individual pieces the task gets split into need to each make 
some kind of sense on their own.  It's fine for there to be dependencies 
(but the dependencies should only go in one direction), but a ticket the 
summary of which is "apply this patch to _win32stdio.py that I wrote" 
won't work very well.  Instead, be sure that the tickets are things like 
"implement feature foo for Win32EventsReactor".

Jean-Paul



From glyph at twistedmatrix.com  Fri Apr 19 14:35:41 2013
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 19 Apr 2013 13:35:41 -0700
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <20130419195833.2793.1352576413.divmod.xquotient.143@top>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
	<20130419145450@johnnypops.co.uk>
	<20130419195833.2793.1352576413.divmod.xquotient.143@top>
Message-ID: <80390E99-9963-4625-A073-98B664A34E86@twistedmatrix.com>


On Apr 19, 2013, at 12:58 PM, exarkun at twistedmatrix.com wrote:

> On 06:55 pm, johnnypops at gmail.com wrote:
>> On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
>>> 
>>> The main issue is that the patch is too big? The easiest way to solve 
>>> that
>>> is to split it up into multiple tickets, each addressing a subsection 
>>> of
>>> the problem, with a corresponding small patch. It's fine to say "and 
>>> this
>>> patch requires ticket #1234 to be fixed."
>> 
>> OK, thanks, I'll do that.
> 
> To add to what Itamar wrote a bit, an important part of this strategy is 
> that the individual pieces the task gets split into need to each make 
> some kind of sense on their own.  It's fine for there to be dependencies 
> (but the dependencies should only go in one direction), but a ticket the 
> summary of which is "apply this patch to _win32stdio.py that I wrote" 
> won't work very well.  Instead, be sure that the tickets are things like 
> "implement feature foo for Win32EventsReactor".

And to refine this even further:

It's OK for the patches to be smaller than "implement feature foo", as long as they make sense on their own.

For example if we already implement feature foo, but you want to re-factor it so that it's easy to implement feature bar in terms of that same code, you could have a ticket just for doing the inner refactoring, that does not expose any new public classes or features, as long as that refactoring has a good explanation and a good impact on the internal API.

Based on the last patch I see on this ticket, it looks like that's what you're trying to do with a lot of the 'Channel' objects; these need better documentation and test coverage, but it looks like some of that work could be off on its own.

-glyph


From chitrankdixit at gmail.com  Sat Apr 20 02:10:16 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Sat, 20 Apr 2013 13:40:16 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
Message-ID: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>

Good Evening

Twisted Matrix is a great module for Networking and I would like to work
with this project. I want to propose Twisted a new Idea of Promoting the
project to Porting to Python 3 (with backward compatibility). Porting
benefits by grabbing the Python 3 users and would prepare the Twisted for
the Future.



P.S. : I am not sure if this project idea is suitable for Google Summer of
Code.





*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130420/e0d060a1/attachment.html>

From _ at lvh.io  Sat Apr 20 03:31:47 2013
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 20 Apr 2013 11:31:47 +0200
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
Message-ID: <CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>

On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit <chitrankdixit at gmail.com>wrote:

> Good Evening
>

Hi! :-)


> Twisted Matrix is a great module for Networking and I would like to work
> with this project. I want to propose Twisted a new Idea of Promoting the
> project to Porting to Python 3 (with backward compatibility). Porting
> benefits by grabbing the Python 3 users and would prepare the Twisted for
> the Future.
>

Helping the Python 3 porting effort sounds like a GSoC project to me :) You
might not finish it (there's a lot of work, and some of the problems are
very tricky), but it's definitely an area I think deserves some full-time
attention.

Are you familiar with the Twisted contribution process? It is my
understanding that we ask GSoC students to find and fix a single, easy
(usually "easy" literally means minutes of actual work, once your system is
set up for Twisted development) to qualify, so that they're already
familiar with what they'd need to do.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130420/d9874d40/attachment.html>

From exarkun at twistedmatrix.com  Sat Apr 20 07:50:57 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 20 Apr 2013 13:50:57 -0000
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
Message-ID: <20130420135057.2793.839284122.divmod.xquotient.148@top>

>On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit 
><chitrankdixit at gmail.com>wrote:
>>Good Evening
>>
>>Twisted Matrix is a great module for Networking and I would like to 
>>work
>>with this project. I want to propose Twisted a new Idea of Promoting 
>>the
>>project to Porting to Python 3 (with backward compatibility). Porting
>>benefits by grabbing the Python 3 users and would prepare the Twisted 
>>for
>>the Future.
>

Please have a look at <http://twistedmatrix.com/trac/wiki/GSoC2013>. 
Thanks!

Jean-Paul



From chitrankdixit at gmail.com  Sat Apr 20 09:22:14 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Sat, 20 Apr 2013 20:52:14 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
Message-ID: <CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>

Thanks Laurens I know the Twisted Matrix Module at good Extend and
would definitely contribute to the Twisted development. I have read the
Twisted GSOC where it is required to submit atleast one patch.

I have set up my development environment for Twisted Matrix and Working on
Twisted.

*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*



On Sat, Apr 20, 2013 at 3:01 PM, Laurens Van Houtven <_ at lvh.io> wrote:

> On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit <chitrankdixit at gmail.com>wrote:
>
>> Good Evening
>>
>
> Hi! :-)
>
>
>> Twisted Matrix is a great module for Networking and I would like to work
>> with this project. I want to propose Twisted a new Idea of Promoting the
>> project to Porting to Python 3 (with backward compatibility). Porting
>> benefits by grabbing the Python 3 users and would prepare the Twisted for
>> the Future.
>>
>
> Helping the Python 3 porting effort sounds like a GSoC project to me :)
> You might not finish it (there's a lot of work, and some of the problems
> are very tricky), but it's definitely an area I think deserves some
> full-time attention.
>
> Are you familiar with the Twisted contribution process? It is my
> understanding that we ask GSoC students to find and fix a single, easy
> (usually "easy" literally means minutes of actual work, once your system is
> set up for Twisted development) to qualify, so that they're already
> familiar with what they'd need to do.
>
> cheers
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130420/6f44f0a5/attachment.html>

From johnnypops at gmail.com  Sat Apr 20 09:37:52 2013
From: johnnypops at gmail.com (John Popplewell)
Date: Sat, 20 Apr 2013 11:37:52 -0400
Subject: [Twisted-Python] Improved StandardIO support in Windows
In-Reply-To: <80390E99-9963-4625-A073-98B664A34E86@twistedmatrix.com>
References: <20130419022045@johnnypops.co.uk>
	<CAOp9P3o_WXFw-EAyEnddzDy_1uman7b57pZRo9uc7gs0Ud_Xnw@mail.gmail.com>
	<20130419145450@johnnypops.co.uk>
	<20130419195833.2793.1352576413.divmod.xquotient.143@top>
	<80390E99-9963-4625-A073-98B664A34E86@twistedmatrix.com>
Message-ID: <20130420111758@johnnypops.co.uk>

On Fri, Apr 19, 2013 at 01:35:41PM -0700, Glyph wrote:
> 
> On Apr 19, 2013, at 12:58 PM, exarkun at twistedmatrix.com wrote:
> 
> > On 06:55 pm, johnnypops at gmail.com wrote:
> >> On Fri, Apr 19, 2013 at 02:21:48PM -0400, Itamar Turner-Trauring wrote:
> >>> 
> >>> The main issue is that the patch is too big? The easiest way to solve 
> >>> that
> >>> is to split it up into multiple tickets, each addressing a subsection 
> >>> of
> >>> the problem, with a corresponding small patch. It's fine to say "and 
> >>> this
> >>> patch requires ticket #1234 to be fixed."
> >> 
> >> OK, thanks, I'll do that.
> > 
> > To add to what Itamar wrote a bit, an important part of this strategy is 
> > that the individual pieces the task gets split into need to each make 
> > some kind of sense on their own.  It's fine for there to be dependencies 
> > (but the dependencies should only go in one direction), but a ticket the 
> > summary of which is "apply this patch to _win32stdio.py that I wrote" 
> > won't work very well.  Instead, be sure that the tickets are things like 
> > "implement feature foo for Win32EventsReactor".
> 
> And to refine this even further:
> 
> It's OK for the patches to be smaller than "implement feature foo", as
> long as they make sense on their own.
> 
> For example if we already implement feature foo, but you want to
> re-factor it so that it's easy to implement feature bar in terms of
> that same code, you could have a ticket just for doing the inner
> refactoring, that does not expose any new public classes or features,
> as long as that refactoring has a good explanation and a good impact
> on the internal API.
> 
> Based on the last patch I see on this ticket, it looks like that's
> what you're trying to do with a lot of the 'Channel' objects; these
> need better documentation and test coverage, but it looks like some of
> that work could be off on its own.
> 
> -glyph

Ok, I'm following this. Just been off my PC for 18 hours. I'm up for
doing things properly (unlike some of my previous, um, code dumps).

I've had some practice figuring out tests, I've had a look at the
coding standard and I'm happy to have a go at some documentation.

I'm finally getting the patch+test coverage message especially as
several of the existing tests (after I enabled them) pointed out
short-comings in the code as I was working on it.

I should be able to get something together in the next day or two, right
now I need some sleep.

Thanks for your helpful reponses, I'm keen to make a useful contribution
to Twisted as it has served me well over the years,

best regards,
John.




From max.haarhaus at gmail.com  Sat Apr 20 12:15:26 2013
From: max.haarhaus at gmail.com (Max Haarhaus)
Date: Sat, 20 Apr 2013 14:15:26 -0400
Subject: [Twisted-Python] GSoC Project Proposal
Message-ID: <CAMTd3ROgycnz12NE0u3T=dZZVCBjm7zt0X_j3eK85KWmN0ftzg@mail.gmail.com>

So I have submitted and updated a patch here:

http://twistedmatrix.com/trac/ticket/5228

And I was wondering about writing the project proposal. I'm interested in
the Deferred Cancellation idea, but not married to it. The GSoC page says
that the proposal should be written with a mentor from Twisted. Is that
still true? If not, are there any particular things you're looking for in
the proposal, other than what's listed by Google in the requirements?

Thanks a lot,

Max Haarhaus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130420/dcb52cb2/attachment.html>

From exarkun at twistedmatrix.com  Sat Apr 20 22:05:25 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Apr 2013 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1366517125.77.620005863@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130421/ad028bc6/attachment.html>

From chitrankdixit at gmail.com  Sun Apr 21 01:00:50 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Sun, 21 Apr 2013 12:30:50 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
Message-ID: <CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>

Good Morning

Hello Lauren and exarkun As per the page you have suggested to me
http://twistedmatrix.com/trac/wiki/GSoC2013

I have progressed to step 3 and submitted some of the patches that are
under review process. I have submitted some of the patches
http://twistedmatrix.com/trac/ticket/6440
http://twistedmatrix.com/trac/ticket/6441
http://twistedmatrix.com/trac/ticket/6438

but these patches have Low or somewhat Normal priority and these are tagged
"easy" not "easy gsoc" or "documentation gsoc". So Is it okay for me to
apply for the Google Summer of Code. Meanwhile I am getting familiar with
the Twisted Development Process. Using one of the Source provided at the
Twisted Website that is Orielly Twisted Network Programming Essentials.
So would it be alright ?.

Should I keep on submitting such patches or try for some more higher
priority patches ?

Should I give my project proposal to the Mentor ?

Please let me know



*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130421/1cefb79e/attachment.html>

From twisted at tomvn.com  Sun Apr 21 04:58:06 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Sun, 21 Apr 2013 11:58:06 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
Message-ID: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>

Hi all

I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
Scala on the Play framework, and used a combination of ab and gattling to
see how fast each was on an m1.small instance on Amazon EC2. I also tested
it on bare metal (my laptop:)) but I'll get to that later.

The code I used for twisted was the web server code sample from the front
page of twistedmatrix.com with the numberRequests increment dropped and a
simple "Hello World!" returned instead.
For cyclone I used the sample code from the cyclone docs with the same
string being returned.
Node was the sample from their front page.
Play and Go I've never worked with before so those were copy pastes from
various examples on their pages but again same URI and return string as the
other frameworks.

>From one m1.small to another, Go, Play and node were handling about 1.5k
requests per second while Twisted and Cyclone were only handling 400-500
requests per second.

On loopback from the same m1.small I suspect I was starting to load test
the load testers more than the apps but locally all the frameworks were
performing similarly.

Load testing from another machine to my laptop I was seeing far better
performance from Twisted and Cyclone, both doing closer to 2k requests per
second. The other frameworks were only a little quicker but again, there's
a chance the machine running the load tests was the bottle neck.

These tests were very unscientifically done but I still wasn't expecting to
see such a big difference between specifically node and Twisted.  500
req/sec is plenty quick for 90% of what I do and of course I know there's
so much more to an application than returning hello world but I was
wondering if I was missing some trick to speed Twisted up to get close to
the others on EC2.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130421/0e7e9eb6/attachment.html>

From tobias.oberstein at tavendo.de  Sun Apr 21 06:36:14 2013
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 21 Apr 2013 05:36:14 -0700
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>

Tom,

which OS are you running on your EC2 instance? Amazon Linux?

Which reactor are you running your Twisted test with? Epoll?

Are you running on CPython or PyPy?

Can we see you Twisted hello world test app?

Tobias


Mit freundlichen Grüßen,

Tobias Oberstein
Geschäftsführer

+49(0)9131 940 3574
+49(0)176 23 752 055
tobias.oberstein at tavendo.de
Skype: toberstein
Twitter: @oberstet
Xing: Tobias Oberstein



Tavendo GmbH · Am Weihersbach 13 · 91074 Herzogenaurach · Deutschland
Office / Postanschrift : Waldstrasse 18 · 91054 Erlangen · Deutschland
+49(+)700 GO TAVENDO · +49(0)700 46 828 36 36 · www.tavendo.de
Amtsgericht Fürth · HRB 10365 · USt-Id.Nr DE246462916 · Geschäftsführer Tobias Oberstein

Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van Neerijnen
Gesendet: Sonntag, 21. April 2013 12:58
An: twisted-python at twistedmatrix.com
Betreff: [Twisted-Python] Speed of twisted on Amazon EC2

Hi all
I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and Scala on the Play framework, and used a combination of ab and gattling to see how fast each was on an m1.small instance on Amazon EC2. I also tested it on bare metal (my laptop:)) but I'll get to that later.
The code I used for twisted was the web server code sample from the front page of twistedmatrix.com with the numberRequests increment dropped and a simple "Hello World!" returned instead.
For cyclone I used the sample code from the cyclone docs with the same string being returned.
Node was the sample from their front page.
Play and Go I've never worked with before so those were copy pastes from various examples on their pages but again same URI and return string as the other frameworks.

>From one m1.small to another, Go, Play and node were handling about 1.5k requests per second while Twisted and Cyclone were only handling 400-500 requests per second.
On loopback from the same m1.small I suspect I was starting to load test the load testers more than the apps but locally all the frameworks were performing similarly.
Load testing from another machine to my laptop I was seeing far better performance from Twisted and Cyclone, both doing closer to 2k requests per second. The other frameworks were only a little quicker but again, there's a chance the machine running the load tests was the bottle neck.
These tests were very unscientifically done but I still wasn't expecting to see such a big difference between specifically node and Twisted.  500 req/sec is plenty quick for 90% of what I do and of course I know there's so much more to an application than returning hello world but I was wondering if I was missing some trick to speed Twisted up to get close to the others on EC2.



From tom.prince at ualberta.net  Sun Apr 21 09:03:24 2013
From: tom.prince at ualberta.net (Tom Prince)
Date: Sun, 21 Apr 2013 09:03:24 -0600
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
	<CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
Message-ID: <87ip3gc4eb.fsf@hermes.hocat.ca>

Chitrank Dixit <chitrankdixit at gmail.com> writes:

> but these patches have Low or somewhat Normal priority and these are tagged
> "easy" not "easy gsoc" or "documentation gsoc".

The 'gsoc' keyword there is actually for reviewers, to give priority to
them. (And it is incoistently applied.)

> Should I keep on submitting such patches or try for some more higher
> priority patches ?

The priority is mostly meaningless, and won't affect whether you get
selected.

  Tom



From dynamicgl at gmail.com  Sun Apr 21 09:26:28 2013
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 21 Apr 2013 23:26:28 +0800
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CABkOF6TzmHJ8TH+oZcLxtcOvwCfJKk7FT4g_t=EKp67cgAF7dg@mail.gmail.com>

On Sun, Apr 21, 2013 at 8:36 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Tom,
>
> which OS are you running on your EC2 instance? Amazon Linux?
>
> Which reactor are you running your Twisted test with? Epoll?
>
> Are you running on CPython or PyPy?
>
> Can we see you Twisted hello world test app?
>
> Tobias
>
>
> Mit freundlichen Grüßen,
>
> Tobias Oberstein
> Geschäftsführer
>
> +49(0)9131 940 3574
> +49(0)176 23 752 055
> tobias.oberstein at tavendo.de
> Skype: toberstein
> Twitter: @oberstet
> Xing: Tobias Oberstein
>
>
>
> Tavendo GmbH · Am Weihersbach 13 · 91074 Herzogenaurach · Deutschland
> Office / Postanschrift : Waldstrasse 18 · 91054 Erlangen · Deutschland
> +49(+)700 GO TAVENDO · +49(0)700 46 828 36 36 · www.tavendo.de
> Amtsgericht Fürth · HRB 10365 · USt-Id.Nr DE246462916 · Geschäftsführer
> Tobias Oberstein
>
> Von: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van Neerijnen
> Gesendet: Sonntag, 21. April 2013 12:58
> An: twisted-python at twistedmatrix.com
> Betreff: [Twisted-Python] Speed of twisted on Amazon EC2
>
> Hi all
> I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
> Scala on the Play framework, and used a combination of ab and gattling to
> see how fast each was on an m1.small instance on Amazon EC2. I also tested
> it on bare metal (my laptop:)) but I'll get to that later.
> The code I used for twisted was the web server code sample from the front
> page of twistedmatrix.com with the numberRequests increment dropped and a
> simple "Hello World!" returned instead.
> For cyclone I used the sample code from the cyclone docs with the same
> string being returned.
> Node was the sample from their front page.
> Play and Go I've never worked with before so those were copy pastes from
> various examples on their pages but again same URI and return string as the
> other frameworks.
>
> From one m1.small to another, Go, Play and node were handling about 1.5k
> requests per second while Twisted and Cyclone were only handling 400-500
> requests per second.
> On loopback from the same m1.small I suspect I was starting to load test
> the load testers more than the apps but locally all the frameworks were
> performing similarly.
> Load testing from another machine to my laptop I was seeing far better
> performance from Twisted and Cyclone, both doing closer to 2k requests per
> second. The other frameworks were only a little quicker but again, there's
> a chance the machine running the load tests was the bottle neck.
> These tests were very unscientifically done but I still wasn't expecting
> to see such a big difference between specifically node and Twisted.  500
> req/sec is plenty quick for 90% of what I do and of course I know there's
> so much more to an application than returning hello world but I was
> wondering if I was missing some trick to speed Twisted up to get close to
> the others on EC2.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Hi

   I suggest trying pypy. python actually is quite slow with lots of
function calls. I did have a benchmark for cyclone & pypy. it is almost 3
times faster. twisted can work with pypy well so you definitely should give
it a try.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130421/8d7fc901/attachment.html>

From twisted at tomvn.com  Sun Apr 21 14:24:01 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Sun, 21 Apr 2013 21:24:01 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>

Hi Tobias

My apologies, I should have included that information.
Before I get into my responses you've alluded to the answer already, which
is to say I should have been running on PyPy in the first place.
Twisted on PyPy is, at least for this really pointless benchmark, faster
than node.

I've re-run my tests using virtualenvs ( I was using Ubuntu packages which
may have been behind the latest releases), taken more care to record the
machine states, added PyPy to the mix and am responding inline with my
answers.

On Sun, Apr 21, 2013 at 1:36 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Tom,
>
> which OS are you running on your EC2 instance? Amazon Linux?
>
I am running two m1.small Ubuntu 12.10 64bit in us-east-1, one for the web
server and the other for the ab.


> Which reactor are you running your Twisted test with? Epoll?
>
Default Linux reactor, so it's Epoll.


> Are you running on CPython or PyPy?
>
I am running on CPython with twisted 13.0.0 installed into a virtualenv,
but please see my results for PyPy below, they're far more impressive.


>
> Can we see you Twisted hello world test app?
>
Sure:
from twisted.web import server, resource
from twisted.internet import reactor

class HelloResource(resource.Resource):
    isLeaf = True

    def render_GET(self, request):
        request.setHeader("content-type", "text/plain")
        return "Hello world!\n"

reactor.listenTCP(8080, server.Site(HelloResource()))
reactor.run()


And for comparison the node code:
var http = require('http');
http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello world!\n');
}).listen(8080, '0.0.0.0');


As I said you've already answered my question but here are my slightly more
controlled benchmarks from an ab -c 10 -n 100000 (I ran three and used the
average of the last two to ensure a warm JIT).

This time Twisted 13.0.0 in a CPython virtualenv yielded around 700 req/s.
Twisted 13.0.0 in a PyPy virtualenv yielded around 1.6k req/s.
Node 0.6.19 yielded around 1.6k req/s.

And for giggles 3x the concurrency with ab -c 30 -n 100000, which shows
Twisted on PyPy pulling ahead:
Twisted 13.0.0 in a PyPy virtualenv yielded around 2k req/s.
Node 0.6.19 yielded around 1.6k req/s.


> Tobias
>
>
> Mit freundlichen Grüßen,
>
> Tobias Oberstein
> Geschäftsführer
>
> +49(0)9131 940 3574
> +49(0)176 23 752 055
> tobias.oberstein at tavendo.de
> Skype: toberstein
> Twitter: @oberstet
> Xing: Tobias Oberstein
>
>
>
> Tavendo GmbH · Am Weihersbach 13 · 91074 Herzogenaurach · Deutschland
> Office / Postanschrift : Waldstrasse 18 · 91054 Erlangen · Deutschland
> +49(+)700 GO TAVENDO · +49(0)700 46 828 36 36 · www.tavendo.de
> Amtsgericht Fürth · HRB 10365 · USt-Id.Nr DE246462916 · Geschäftsführer
> Tobias Oberstein
>
> Von: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van Neerijnen
> Gesendet: Sonntag, 21. April 2013 12:58
> An: twisted-python at twistedmatrix.com
> Betreff: [Twisted-Python] Speed of twisted on Amazon EC2
>
> Hi all
> I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
> Scala on the Play framework, and used a combination of ab and gattling to
> see how fast each was on an m1.small instance on Amazon EC2. I also tested
> it on bare metal (my laptop:)) but I'll get to that later.
> The code I used for twisted was the web server code sample from the front
> page of twistedmatrix.com with the numberRequests increment dropped and a
> simple "Hello World!" returned instead.
> For cyclone I used the sample code from the cyclone docs with the same
> string being returned.
> Node was the sample from their front page.
> Play and Go I've never worked with before so those were copy pastes from
> various examples on their pages but again same URI and return string as the
> other frameworks.
>
> From one m1.small to another, Go, Play and node were handling about 1.5k
> requests per second while Twisted and Cyclone were only handling 400-500
> requests per second.
> On loopback from the same m1.small I suspect I was starting to load test
> the load testers more than the apps but locally all the frameworks were
> performing similarly.
> Load testing from another machine to my laptop I was seeing far better
> performance from Twisted and Cyclone, both doing closer to 2k requests per
> second. The other frameworks were only a little quicker but again, there's
> a chance the machine running the load tests was the bottle neck.
> These tests were very unscientifically done but I still wasn't expecting
> to see such a big difference between specifically node and Twisted.  500
> req/sec is plenty quick for 90% of what I do and of course I know there's
> so much more to an application than returning hello world but I was
> wondering if I was missing some trick to speed Twisted up to get close to
> the others on EC2.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130421/66683cee/attachment.html>

From twisted at tomvn.com  Sun Apr 21 14:27:58 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Sun, 21 Apr 2013 21:27:58 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <CABkOF6TzmHJ8TH+oZcLxtcOvwCfJKk7FT4g_t=EKp67cgAF7dg@mail.gmail.com>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
	<CABkOF6TzmHJ8TH+oZcLxtcOvwCfJKk7FT4g_t=EKp67cgAF7dg@mail.gmail.com>
Message-ID: <CAMwy1twxH4momdXeh4sRmkJ1vBC3Y4--wpaJi-p_42TEPUSsGw@mail.gmail.com>

Thank you Gelin, as you suggested I benchmarked again on PyPy and am very
impressed with it. It was significantly quicker, beating node by a fair
margin on a higher concurrency. I pasted some results in another reply in
this same thread.


On Sun, Apr 21, 2013 at 4:26 PM, Gelin Yan <dynamicgl at gmail.com> wrote:

>
>
>
> On Sun, Apr 21, 2013 at 8:36 PM, Tobias Oberstein <
> tobias.oberstein at tavendo.de> wrote:
>
>> Tom,
>>
>> which OS are you running on your EC2 instance? Amazon Linux?
>>
>> Which reactor are you running your Twisted test with? Epoll?
>>
>> Are you running on CPython or PyPy?
>>
>> Can we see you Twisted hello world test app?
>>
>> Tobias
>>
>>
>> Mit freundlichen Grüßen,
>>
>> Tobias Oberstein
>> Geschäftsführer
>>
>> +49(0)9131 940 3574
>> +49(0)176 23 752 055
>> tobias.oberstein at tavendo.de
>> Skype: toberstein
>> Twitter: @oberstet
>> Xing: Tobias Oberstein
>>
>>
>>
>> Tavendo GmbH · Am Weihersbach 13 · 91074 Herzogenaurach · Deutschland
>> Office / Postanschrift : Waldstrasse 18 · 91054 Erlangen · Deutschland
>> +49(+)700 GO TAVENDO · +49(0)700 46 828 36 36 · www.tavendo.de
>> Amtsgericht Fürth · HRB 10365 · USt-Id.Nr DE246462916 · Geschäftsführer
>> Tobias Oberstein
>>
>> Von: twisted-python-bounces at twistedmatrix.com [mailto:
>> twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom van
>> Neerijnen
>> Gesendet: Sonntag, 21. April 2013 12:58
>> An: twisted-python at twistedmatrix.com
>> Betreff: [Twisted-Python] Speed of twisted on Amazon EC2
>>
>> Hi all
>> I recently wrote a hello world HTTP app in Twisted, Cyclone, node, Go and
>> Scala on the Play framework, and used a combination of ab and gattling to
>> see how fast each was on an m1.small instance on Amazon EC2. I also tested
>> it on bare metal (my laptop:)) but I'll get to that later.
>> The code I used for twisted was the web server code sample from the front
>> page of twistedmatrix.com with the numberRequests increment dropped and
>> a simple "Hello World!" returned instead.
>> For cyclone I used the sample code from the cyclone docs with the same
>> string being returned.
>> Node was the sample from their front page.
>> Play and Go I've never worked with before so those were copy pastes from
>> various examples on their pages but again same URI and return string as the
>> other frameworks.
>>
>> From one m1.small to another, Go, Play and node were handling about 1.5k
>> requests per second while Twisted and Cyclone were only handling 400-500
>> requests per second.
>> On loopback from the same m1.small I suspect I was starting to load test
>> the load testers more than the apps but locally all the frameworks were
>> performing similarly.
>> Load testing from another machine to my laptop I was seeing far better
>> performance from Twisted and Cyclone, both doing closer to 2k requests per
>> second. The other frameworks were only a little quicker but again, there's
>> a chance the machine running the load tests was the bottle neck.
>> These tests were very unscientifically done but I still wasn't expecting
>> to see such a big difference between specifically node and Twisted.  500
>> req/sec is plenty quick for 90% of what I do and of course I know there's
>> so much more to an application than returning hello world but I was
>> wondering if I was missing some trick to speed Twisted up to get close to
>> the others on EC2.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
> Hi
>
>    I suggest trying pypy. python actually is quite slow with lots of
> function calls. I did have a benchmark for cyclone & pypy. it is almost 3
> times faster. twisted can work with pypy well so you definitely should give
> it a try.
>
> Regards
>
> gelin yan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130421/f6246a21/attachment.html>

From chandrika3437 at gmail.com  Sun Apr 21 23:50:09 2013
From: chandrika3437 at gmail.com (chandrika parimoo)
Date: Mon, 22 Apr 2013 11:20:09 +0530
Subject: [Twisted-Python] Outreach For Women
Message-ID: <CACHGq=Av7z80Qri-puvSCafDcyahNwT_y=Sjq3=x94XyhMzEZQ@mail.gmail.com>

Hi, i am a second year IT Undergraduate from Pune institute of Computer
Technology, India.
I came across the Program Outreach For Women and i went through the ideas
list of Twisted. I am very keen on working on the project as  I have
experience of programming in Python.

Looking forward for more details.
Thanks :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130422/8be558a4/attachment.html>

From tobias.oberstein at tavendo.de  Mon Apr 22 01:12:55 2013
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 22 Apr 2013 00:12:55 -0700
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
	<CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D44229D49B0E@EXVMBX020-12.exch020.serverdata.net>

Tom,

>>which OS are you running on your EC2 instance? Amazon Linux?
>I am running two m1.small Ubuntu 12.10 64bit in us-east-1, one for the web server and the other for the ab.
>>Which reactor are you running your Twisted test with? Epoll?
>Default Linux reactor, so it's Epoll.

ok, thats good. just wanted to make sure you are aware of this and make sure epoll is actually used.

>>Are you running on CPython or PyPy?
>I am running on CPython with twisted 13.0.0 installed into a virtualenv, but please see my results for PyPy below, they're far more impressive.

thats also good (and I was somehow expecting this .. at least thats also my experience).

there is 1 thing to note when benchmarking networking stuff on PyPy vs CPython that I noticed in my testing:

both the throughput (bits/s or reqs/s) as well as the average (arithmetic mean) response times are far better with PyPy vs CPy

BUT (my testings - Twisted/Autobahn/WebSocket): e.g. the 95% quantile (and the worst case) response latency of PyPy is worse than CPy.

this was PyPy 1.6 on both Linux (epoll) and FreeBSD (kqueue).

the reason might be GC .. PyPy's GCs might be not as sophisticated as CPy's (likely) or V8's (definitely).

note: this might have changed with PyPy 2 (did not test that). Armin at least was planning for a generational/incremental GC in PyPy. dunno.

so: you might wanna test for latency also .. I'd be interested in results.

regarding GC, V8 and Erlang (and possibly that other VMs with the J at the beginning) have an edge ..

both LuaJIT and PyPy plan to improve on this though ..

Tobias



From bino at indoakses-online.com  Mon Apr 22 01:25:28 2013
From: bino at indoakses-online.com (bino at indoakses-online.com)
Date: Mon, 22 Apr 2013 14:25:28 +0700
Subject: [Twisted-Python] question : txdbus and dbus-send
Message-ID: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>

Dear All
I take
https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_server
and save it to /home/bino/Documents/mbink/pythons/coretac/dbus00.py

bino at bino-pata:~$ ls -la /home/bino/Documents/mbink/pythons/coretac |grep
dbus
-rwxrwxr-x 1 bino bino  1026 Apr 22 12:08 dbus00.py

It's work as expected when 'called' using
https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_client

Now I need to callable using dbus-send
I wrote '/usr/share/dbus-1/services/org.example.service' as :

[D-BUS Service]
Name=org.example.MyObjPath
Exec=/home/bino/Documents/mbink/pythons/coretac/dbus00.py

I try to call :
dbus-send --system --print-reply \
--type=method_call \
--dest='org.example.MyObjPath' '/org/example/MyObjPath' \
org.example.MyObjPath.exampleMethod string:'MYTEXT'

But I got error msg :

Error org.freedesktop.DBus.Error.ServiceUnknown: The name
org.example.MyObjPath was not provided by any .service files


Kindly please give me any enlightenment

sincerely
-bino-




From adi at roiban.ro  Mon Apr 22 03:01:52 2013
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 22 Apr 2013 12:01:52 +0300
Subject: [Twisted-Python] twisted.conch.checkers.SSHPublicKeyDatabase
	validate signature data
Message-ID: <CAFycZ9cHs48AsPBtq5jyWtOc9c5q+n72pR6+CNMjsH+CN16d-Q@mail.gmail.com>

Hi,

In RFC 4252 http://www.ietf.org/rfc/rfc4252.txt for The Secure Shell (SSH)
Authentication Protocol at section 7. Public Key Authentication Method:
"publickey"

There is the following information about SSH public key signature.

 The value of 'signature' is a signature by the corresponding private
key over the following data, in the following order:

      string    session identifier
      byte      SSH_MSG_USERAUTH_REQUEST
      string    user name
      string    service name
      string    "publickey"
      boolean   TRUE
      string    public key algorithm name
      string    public key to be used for authentication

   When the server receives this message, it MUST check whether the
supplied key is acceptable for authentication, and if so, it MUST
check whether the signature is correct.

The current code check that key is accepted for authentication and it also
verifies if signature is correct.

It does not check that session the format of the signed data, especially if
session identifier from signed data is  the same as the session of the the
current SSH transport  session.

-----

I also found this document describing how ssh public key authentication
works, but it differes from the current conch.ssh userauth.py
implementation... maybe it is for SSH v1
http://www.unixwiz.net/techtips/ssh-agent-forwarding.html#chal

------

Shouldn't twisted.conch.checkers.SSHPublicKeyDatabase also check that
session id from signed data match the one from transport session?

Maybe it does but I am not looking at the right place.

I see that in conch/checkers.py line 167
https://github.com/tomprince/twisted/blob/trunk/twisted/conch/checkers.py#L167
there is this check, which once signature is valid  it just returns
avatar_id:

                if pubKey.verify(credentials.signature,
credentials.sigData):
                    return credentials.username

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130422/39a6ba35/attachment.html>

From adi at roiban.ro  Mon Apr 22 05:35:48 2013
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 22 Apr 2013 14:35:48 +0300
Subject: [Twisted-Python] twisted.conch.checkers.SSHPublicKeyDatabase
	validate signature data
In-Reply-To: <CAFycZ9cHs48AsPBtq5jyWtOc9c5q+n72pR6+CNMjsH+CN16d-Q@mail.gmail.com>
References: <CAFycZ9cHs48AsPBtq5jyWtOc9c5q+n72pR6+CNMjsH+CN16d-Q@mail.gmail.com>
Message-ID: <CAFycZ9c24ZOa2h1kKFd1Cg1d_D1hbp5kAFeQPzeKqGtyvzscXQ@mail.gmail.com>

On 22 April 2013 12:01, Adi Roiban <adi at roiban.ro> wrote:

> Hi,
>
> In RFC 4252 http://www.ietf.org/rfc/rfc4252.txt for The Secure Shell
> (SSH) Authentication Protocol at section 7. Public Key Authentication
> Method: "publickey"
>
> There is the following information about SSH public key signature.
>
>  The value of 'signature' is a signature by the corresponding private key over the following data, in the following order:
>
>       string    session identifier
>       byte      SSH_MSG_USERAUTH_REQUEST
>       string    user name
>       string    service name
>       string    "publickey"
>       boolean   TRUE
>       string    public key algorithm name
>       string    public key to be used for authentication
>
>    When the server receives this message, it MUST check whether the supplied key is acceptable for authentication, and if so, it MUST check whether the signature is correct.
>
> The current code check that key is accepted for authentication and it also
> verifies if signature is correct.
>
> It does not check that session the format of the signed data, especially
> if session identifier from signed data is  the same as the session of the
> the current SSH transport  session.
>
> -----
>
> I also found this document describing how ssh public key authentication
> works, but it differes from the current conch.ssh userauth.py
> implementation... maybe it is for SSH v1
> http://www.unixwiz.net/techtips/ssh-agent-forwarding.html#chal
>
> ------
>
> Shouldn't twisted.conch.checkers.SSHPublicKeyDatabase also check that
> session id from signed data match the one from transport session?
>
> Maybe it does but I am not looking at the right place.
>
> I see that in conch/checkers.py line 167
> https://github.com/tomprince/twisted/blob/trunk/twisted/conch/checkers.py#L167
> there is this check, which once signature is valid  it just returns
> avatar_id:
>
>                 if pubKey.verify(credentials.signature,
> credentials.sigData):
>                     return credentials.username
>

I found out that I was wrong and I found how the signed data is generated.
Here is the imprtant part:
https://github.com/tomprince/twisted/blob/trunk/twisted/conch/ssh/userauth.py#L268



Sorry for the trouble!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130422/7e40ecb8/attachment.html>

From jessica.mckellar at gmail.com  Mon Apr 22 06:04:44 2013
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Mon, 22 Apr 2013 08:04:44 -0400
Subject: [Twisted-Python] Outreach For Women
In-Reply-To: <CACHGq=Av7z80Qri-puvSCafDcyahNwT_y=Sjq3=x94XyhMzEZQ@mail.gmail.com>
References: <CACHGq=Av7z80Qri-puvSCafDcyahNwT_y=Sjq3=x94XyhMzEZQ@mail.gmail.com>
Message-ID: <CAKDZRcgpuR+fj+fh=dFtsXkczgUH2Euf_d1OF1HWDce07AXH0A@mail.gmail.com>

Hi Chandrika,

(Moving twisted-python to BCC)

> Hi, i am a second year IT Undergraduate from Pune institute of Computer
> Technology, India.
> I came across the Program Outreach For Women and i went through the ideas
> list of Twisted. I am very keen on working on the project as  I have
> experience of programming in Python.

Hello and welcome!

Once you've gone through the steps at
https://twistedmatrix.com/trac/wiki/GSoC2013#GettingStartedwithTwistedDevelopment,
please pick a Twisted ticket to work on.

https://twistedmatrix.com/trac/report/1 is the full list of tickets,
and https://bit.ly/easy-twisted-tickets is a list of tickets
particularly appropriate for new contributors. If you need any help
picking a ticket or working on it, please don't hesitate to ask in the
#twisted IRC channel or send me an e-mail.

Regards,
-Jessica



From tom.cocagne at gmail.com  Mon Apr 22 22:27:24 2013
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Mon, 22 Apr 2013 23:27:24 -0500
Subject: [Twisted-Python] question : txdbus and dbus-send
In-Reply-To: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>
References: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>
Message-ID: <CAFKh6jAsuduee3PQu0o4T3k-aTvjhM3jAtMT38uzknn5159Otw@mail.gmail.com>

On Mon, Apr 22, 2013 at 2:25 AM, <bino at indoakses-online.com> wrote:

> Dear All
> I take
>
> https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_server
> and save it to /home/bino/Documents/mbink/pythons/coretac/dbus00.py
>
> It's work as expected when 'called' using
>
> https://github.com/cocagne/txdbus/blob/master/doc/tutorial_examples/simple_client
>
> Now I need to callable using dbus-send
> I wrote '/usr/share/dbus-1/services/org.example.service' as :
>
> [D-BUS Service]
> Name=org.example.MyObjPath
> Exec=/home/bino/Documents/mbink/pythons/coretac/dbus00.py
>

The "Name" in the org.example.services file refers to the bus name(s)
exported by the application. The file should instead read:

[D-BUS Service]
Name=org.example
Exec=/home/bino/Documents/mbink/pythons/coretac/dbus00.py


>
> I try to call :
> dbus-send --system --print-reply \
> --type=method_call \
> --dest='org.example.MyObjPath' '/org/example/MyObjPath' \
> org.example.MyObjPath.exampleMethod string:'MYTEXT'
>
> But I got error msg ... <snip>
>

There are several problems here. The command should be:

dbus-send --session --print-reply --type=method_call --dest='org.example'
'/MyObjPath' org.example.MyIFace.exampleMethod string:'MYTEXT'

--session means you're using the session bus instead of the system bus
(which requires a .service file in a different directory and, possibly, an
entry in /etc/dbus-1/..). The --dest flag, similar to the Name of the
.service file, refers to the bus name rather than the object. '/MyObjPath'
is the full object path exported by the server application. Lastly, the
fully-qualified method name is the interface name plus the method name
rather than the object name plus method name. It's pretty easy to confuse
the various names and paths in DBus. I did so more than once while writing
up this reply.

Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130422/a8c9ee29/attachment-0001.html>

From bino at indoakses-online.com  Tue Apr 23 21:54:00 2013
From: bino at indoakses-online.com (bino at indoakses-online.com)
Date: Wed, 24 Apr 2013 10:54:00 +0700
Subject: [Twisted-Python] question : txdbus and dbus-send
In-Reply-To: <CAFKh6jAsuduee3PQu0o4T3k-aTvjhM3jAtMT38uzknn5159Otw@mail.gmail.com>
References: <aac426c2cc7f34ab1108145f8ee7f8a8.squirrel@localhost>
	<CAFKh6jAsuduee3PQu0o4T3k-aTvjhM3jAtMT38uzknn5159Otw@mail.gmail.com>
Message-ID: <8a8dad1e4f41fccc20bd4f6efe0eefcd.squirrel@localhost>

Dear Tom
>
> --session means you're using the session bus instead of the system bus
> (which requires a .service file in a different directory and, possibly, an
> entry in /etc/dbus-1/..). The --dest flag, similar to the Name of the
> .service file, refers to the bus name rather than the object. '/MyObjPath'
> is the full object path exported by the server application. Lastly, the
> fully-qualified method name is the interface name plus the method name
> rather than the object name plus method name. It's pretty easy to confuse
> the various names and paths in DBus. I did so more than once while writing
> up this reply.

I really appreciate your enlightenment.
I'll do your suggestion.

Sincerely
-bino-




From twisted at tomvn.com  Wed Apr 24 03:59:39 2013
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Wed, 24 Apr 2013 10:59:39 +0100
Subject: [Twisted-Python] Speed of twisted on Amazon EC2
In-Reply-To: <634914A010D0B943A035D226786325D44229D49B0E@EXVMBX020-12.exch020.serverdata.net>
References: <CAMwy1txvdC_t8bH1h0N87M2D0j8c_hJX7QRqdFrk9X3R+WDw9A@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49ACD@EXVMBX020-12.exch020.serverdata.net>
	<CAMwy1tzzPdt_B9cOyAFeeWTaCMgwdAAX9XJ+=8LD6q5iMLt2Ng@mail.gmail.com>
	<634914A010D0B943A035D226786325D44229D49B0E@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAMwy1tzvSJv=70fhxwWLDt4DqRfRbRCpk+shGS+Jiz9QasxWtA@mail.gmail.com>

Hi Tobias

Some comments inline but first an update on the next load test slightly
closer to my ultimate use case, which showed PyPy smoking the competition.

My test is now a request to a URL scheme like this:
/version/{app}/platform/{platform}. This gets translated into a get on
Redis for {app}-{platform} and the value is returned to the client.
All tests were on Ubuntu 12.10 on an m1.small instance on AWS with the load
test machine being an m1.large. The load test ran for about 10 minutes for
each framework.
Using Cyclone 1.1 on Twisted 13 on PyPy 2.0beta2 I was averaging about 1.8k
r/s.
Using node-restify 2.4.1 and node-redis 0.8.3 node 0.10.4 I was doing about
1.2 r/s.
Go and Scala on Play were comparable to node.

This very simple load test has me very impressed with PyPys performance and
I look forward to load testing our full app when it's ready.

Thanks for the comments, they've been very helpful.

On Mon, Apr 22, 2013 at 8:12 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Tom,
>
> >>which OS are you running on your EC2 instance? Amazon Linux?
> >I am running two m1.small Ubuntu 12.10 64bit in us-east-1, one for the
> web server and the other for the ab.
> >>Which reactor are you running your Twisted test with? Epoll?
> >Default Linux reactor, so it's Epoll.
>
> ok, thats good. just wanted to make sure you are aware of this and make
> sure epoll is actually used.
>
> >>Are you running on CPython or PyPy?
> >I am running on CPython with twisted 13.0.0 installed into a virtualenv,
> but please see my results for PyPy below, they're far more impressive.
>
> thats also good (and I was somehow expecting this .. at least thats also
> my experience).
>
> there is 1 thing to note when benchmarking networking stuff on PyPy vs
> CPython that I noticed in my testing:
>
> both the throughput (bits/s or reqs/s) as well as the average (arithmetic
> mean) response times are far better with PyPy vs CPy
>
> BUT (my testings - Twisted/Autobahn/WebSocket): e.g. the 95% quantile (and
> the worst case) response latency of PyPy is worse than CPy.
>
> this was PyPy 1.6 on both Linux (epoll) and FreeBSD (kqueue).
>
> the reason might be GC .. PyPy's GCs might be not as sophisticated as
> CPy's (likely) or V8's (definitely).
>
> note: this might have changed with PyPy 2 (did not test that). Armin at
> least was planning for a generational/incremental GC in PyPy. dunno.
>
> so: you might wanna test for latency also .. I'd be interested in results.
>
PyPy 2.0beta2 had comparable 95 percentile latency to all the other
frameworks in my limited test so maybe that's the improvements you
mentioned? Or maybe my naive load tests, but I like to think it's the
improvements.


> regarding GC, V8 and Erlang (and possibly that other VMs with the J at the
> beginning) have an edge ..
>
> both LuaJIT and PyPy plan to improve on this though ..
>
> I don't know much about the workings of the various GCs but my feeling is
I wasn't really stressing the GC with my limited test as there weren't very
many data structures in play.
That said over 10 minute load tests I didn't notice any blips in r/s or
response times so for my limited test it was all good.


> Tobias
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130424/1f455730/attachment-0001.html>

From keturn at keturn.net  Wed Apr 24 15:29:11 2013
From: keturn at keturn.net (Kevin Turner)
Date: Wed, 24 Apr 2013 14:29:11 -0700
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
	<CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
Message-ID: <1366838951.31741.140661222344614.7340658B@webmail.messagingengine.com>

Hi Chitrank,



On Sun, Apr 21, 2013, at 12:00 AM, Chitrank Dixit wrote:

I have progressed to step 3 and submitted some of the patches that are
under review process. I have submitted some of the patches
[1]http://twistedmatrix.com/trac/ticket/6440
[2]http://twistedmatrix.com/trac/ticket/6441
[3]http://twistedmatrix.com/trac/ticket/6438


Thank you for your submissions!  A few notes:

1) To avoid duplication of work, avoid tickets that have recently been
assigned to someone else. That is, the tickets are in status "assigned"
and the "owner" is set. (If the ticket has been assigned for a long
time with no activity, it may be appropriate to ask the owner if
they're still working on it.)

2) When submitting your patch, be sure to place the ticket in "review"
state. Without this, reviewers will not notice it is ready for review.
This is described in step 8 of Submitting a Patch
here: [4]http://twistedmatrix.com/trac/wiki/TwistedDevelopment#Submitti
ngaPatch


Should I give my project proposal to the Mentor ?


Please continue to send ideas for projects to
[5]twisted-gsoc at twistedmatrix.com, it will be received by all us
mentors.

Thanks,

 - Kevin

References

1. http://twistedmatrix.com/trac/ticket/6440
2. http://twistedmatrix.com/trac/ticket/6441
3. http://twistedmatrix.com/trac/ticket/6438
4. http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch
5. mailto:twisted-gsoc at twistedmatrix.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130424/00d64f07/attachment.html>

From chitrankdixit at gmail.com  Wed Apr 24 19:59:58 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Thu, 25 Apr 2013 07:29:58 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <1366838951.31741.140661222344614.7340658B@webmail.messagingengine.com>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<CAH7uNX3M-8S=KfBXt4c+QrwFYqSfyDHOOD0tusL5_tCcroZ4YQ@mail.gmail.com>
	<CAH7uNX0xJMPFjku14xAi3Uza8pyjECX3BqQK6Na=JQaXfT0=vQ@mail.gmail.com>
	<1366838951.31741.140661222344614.7340658B@webmail.messagingengine.com>
Message-ID: <CAH7uNX2m8UUqgm-mC71d=5LXS0_tOn9FqXfXX40Bk_Bjk-G2Zg@mail.gmail.com>

Thanks Kevin for letting me know about the submitted patches you are also a
Mentor on Twisted.
Does my Idea of Porting would work for this year's GSOC under Twisted.
Please let me know this I have made a proposal over this Idea. So should I
submit the Proposal or try to fix more bugs , or I can fix bugs later as
well.

*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*


On Thu, Apr 25, 2013 at 2:59 AM, Kevin Turner <keturn at keturn.net> wrote:

> **
> Hi Chitrank,
>
> On Sun, Apr 21, 2013, at 12:00 AM, Chitrank Dixit wrote:
>
> I have progressed to step 3 and submitted some of the patches that are
> under review process. I have submitted some of the patches
> http://twistedmatrix.com/trac/ticket/6440
> http://twistedmatrix.com/trac/ticket/6441
> http://twistedmatrix.com/trac/ticket/6438
>
>
> Thank you for your submissions!  A few notes:
>
> 1) To avoid duplication of work, avoid tickets that have recently been
> assigned to someone else. That is, the tickets are in status "assigned" and
> the "owner" is set. (If the ticket has been assigned for a long time with
> no activity, it may be appropriate to ask the owner if they're still
> working on it.)
>
> 2) When submitting your patch, be sure to place the ticket in "review"
> state. Without this, reviewers will not notice it is ready for review. This
> is described in step 8 of Submitting a Patch here:
> http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch
>
>
>
> Should I give my project proposal to the Mentor ?
>
>
> Please continue to send ideas for projects to
> twisted-gsoc at twistedmatrix.com, it will be received by all us mentors.
>
> Thanks,
>
>  - Kevin
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130425/730fe50d/attachment.html>

From rodrigc at crodrigues.org  Thu Apr 25 12:49:00 2013
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 25 Apr 2013 11:49:00 -0700
Subject: [Twisted-Python] Coursera course on network design patterns
In-Reply-To: <516BEA44.7030400@itamarst.org>
References: <CAG=rPVe1LvrLRkZ4xz3dL6A28YLJKZFoN8JE87LDwTFZU8LsmQ@mail.gmail.com>
	<516BEA44.7030400@itamarst.org>
Message-ID: <CAG=rPVdod=h4Pae3L+rJYZAsoCd7FfG-nUi_q7XrcaJq58nSbw@mail.gmail.com>

On Mon, Apr 15, 2013 at 4:53 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> On 04/15/2013 04:47 AM, Craig Rodrigues wrote:
> >
> >
> https://class.coursera.org/posa-001/human_grading/view/courses/970268/assessments/35/submissions
> >
> >
> Cool! I would suggest linking to
> http://twistedmatrix.com/documents/current/core/howto/servers.html
> rather than to IReactorTCP.
>
>
Itamar,

Someone in the class discovered this posting of yours 12 years ago:

http://twistedmatrix.com/pipermail/twisted-python/2001-September/000368.html

where you pointed out where in Twisted there are implementations of the
design patterns in Prof. Schmidt's "Pattern-Oriented Software
Architectures, Volume 2" (POSA2) book.

 We are discussing it here:
https://class.coursera.org/posa-001/forum/thread?thread_id=856#post-3771

Thanks!

-- 
Craig Rodrigues
rodrigc at crodrigues.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130425/5e577684/attachment.html>

From kevin.horn at gmail.com  Thu Apr 25 12:50:35 2013
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 25 Apr 2013 13:50:35 -0500
Subject: [Twisted-Python] Lore2sphinx current status
Message-ID: <CA+U=zK3e7xaKDxX0y76sVh2hQEjSyDp7GGbnMd-kiz2gc-7X6A@mail.gmail.com>

Someone asked me off-list recently about how to help out with the
Lore2Sphinx project.  My response seemed like it would be generally helpful
to anyone interested, and long enough that I wouldn't want to write it
again, so I'm posting most of it here, for anyone else that is interested.

====

The "current" version of lore2sphinx is here:
https://bitbucket.org/khorn/lore2sphinx

This is the version that is currently being used by the Twisted project in
the documentation buildbot.  However, it is brittle, and hard to modify,
and in general doesn't do some things very well.  It also hasn't been
updated in some time.  I consider it to be in stasis for the time being.

Some time ago I forked that repo into this one:
https://bitbucket.org/khorn/lore2sphinx-ng

The plan for the NG branch is to:
a) split out the rendering of reStructuredText into a separate library.
 That library has it's own repo here: https://bitbucket.org/khorn/rstgen
Eventually I'd like for this library to be useful for any tool which wants
to emit reStructuredText.  The idea is that code using this library will
create a tree of document elements, and each of which knows how to render
itself into reST.  Then you call the .render() element on the root element
in that tree, and you get back some reST.
(the old/current version just created a bunch of strings and munged them
together, which has caused all kinds of ugliness)

b) rewrite/adapt lore2sphinx to use rstgen to generate reST

c) clean up and extend command-line handling to make it easier to use
lore2sphinx in different use-cases.  For example, in the old/current
version it was impossible to only convert a single file, or a single
directory.  You had to convert an entire Sphinx project all at once.  This
was pretty annoying and (I think) has been fixed now.

Any future development should be handled on the lore2sphinx-ng "branch"
and/or the rstgen repo (both mentioned above).


Stuff that needs to be done:

1) Rstgen needs to support a few more core reST element types (by which I
mean the ones supported in vanilla docutils).  The one that comes to mind
immediately is tables.  There is some table support in the old/current
version of lore2sphinx, which it might be possible to adapt.  I haven't
started on tables in the new version at all.

2) Rstgen could use some "convenience" elements, for example, elements for
specific directives, rather than just using the generic directive element
all the time.

3) I'd like Rstgen to also have specific support for generating
Sphinx-specific elements, but I haven't started on this.  Probably most of
these will be subtypes of the document element types already present in
rstgen.  Examples include sphinx-specific directives, etc.

4) Rstgen needs to have some sort of Document object which represents an
individual document, and has the ability to organize things like footnotes,
citations, etc.  There's a stub for this, but, like a platypus, it doesn't
do much.

5) clean up cruft and abandoned code in the lore2sphinx-ng repo.  There's a
lot of it.

6) Finish re-writing the lore2sphinx code which generates rstgen elements.
 Some code for this is there already, but obviously there isn't anything
for the elements that rstgen doesn't handle yet.  Also, some of the code
that is there isn't specific enough, and doesn't yet accurately represent
the way that lore elements should be interpreted.  The old lore2sphinx code
which used strings does a pretty good job of this, I think, and is still in
the repo, AFAICR (I did mention cruft, right?), so you might take a look at
that for more details.


--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130425/7e5ffea1/attachment.html>

From chitrankdixit at gmail.com  Thu Apr 25 19:20:29 2013
From: chitrankdixit at gmail.com (Chitrank Dixit)
Date: Fri, 26 Apr 2013 06:50:29 +0530
Subject: [Twisted-Python] GSOC 2013 Project Idea for Twisted Matrix
In-Reply-To: <20130420135057.2793.839284122.divmod.xquotient.148@top>
References: <CAH7uNX33=KSZY3L7NhY3bNhkdE4qv3rgTVXVrgs_iUvJYVm6Ow@mail.gmail.com>
	<CAE_Hg6YVJj5wsjPfAXHyVw1TxpE+agcKn+oW+SiTX9kuxJ2hPw@mail.gmail.com>
	<20130420135057.2793.839284122.divmod.xquotient.148@top>
Message-ID: <CAH7uNX1y_WL5PSs+i_RXj2O=k9dn=iUOxJBXAWmQ_7gqh8ntKg@mail.gmail.com>

Thanks Exarkun for making me aware of the GSOC process of twisted. I have
made my project proposal and looking forward for further suggestions from
the mentor.

Proposal Link:
http://www.google-melange.com/gsoc/proposal/review/google/gsoc2013/chitrankdixit/1



*Regards
*
*Chitrank Dixit
*
*IIPS-DAVV
*
*MCA
*
*trackleech.blogspot.in*


On Sat, Apr 20, 2013 at 7:20 PM, <exarkun at twistedmatrix.com> wrote:

> >On Sat, Apr 20, 2013 at 10:10 AM, Chitrank Dixit
> ><chitrankdixit at gmail.com>wrote:
> >>Good Evening
> >>
> >>Twisted Matrix is a great module for Networking and I would like to
> >>work
> >>with this project. I want to propose Twisted a new Idea of Promoting
> >>the
> >>project to Porting to Python 3 (with backward compatibility). Porting
> >>benefits by grabbing the Python 3 users and would prepare the Twisted
> >>for
> >>the Future.
> >
>
> Please have a look at <http://twistedmatrix.com/trac/wiki/GSoC2013>.
> Thanks!
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130426/2316e13f/attachment.html>

From indradhanush.gupta at gmail.com  Thu Apr 25 21:09:56 2013
From: indradhanush.gupta at gmail.com (Indradhanush Gupta)
Date: Fri, 26 Apr 2013 08:39:56 +0530
Subject: [Twisted-Python] GSoC Project Idea
Message-ID: <CAO=EPqgvT+xnRyRqPDpqTT_j+=wZCBhk+YMsygvNF-517EQkzw@mail.gmail.com>

Hi,

I want to help improve Twisted's support for Mobile Communications. Based
on a chat with exarkun on irc a couple of days back, he suggested : 'write
some drop-in software for installation on raspi so that you can scatter a
handful of them over a square km or so and have a network with no
additional configuration'

I would like to build on that. He also suggested that writing a routing
protocol would be long enough for a GSoC project, given the time
limitations. So, what could be initial starting point of such an idea? I
mean in terms of the routing protocol, I guess its going to be one for a
MANET, and thus I am thinking of implementing one of the Reactive routing
protocols, probably either DSDV or OLSR. Could someone shed light on how to
frame this project?

Thanks,
Indradhanush Gupta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130426/da1d4ec9/attachment.html>

From exarkun at twistedmatrix.com  Sat Apr 27 22:05:28 2013
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Apr 2013 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1367121928.16.2010908647@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20130428/293c4f2d/attachment-0001.html>

From bra at fsn.hu  Sun Apr 28 03:55:01 2013
From: bra at fsn.hu (Attila Nagy)
Date: Sun, 28 Apr 2013 11:55:01 +0200
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
In-Reply-To: <200406111656.45460.dev-python@smartology.nl>
References: <200406111534.56969.dev-python@smartology.nl>
	<1086964536.16996.7.camel@sheriffpony>
	<200406111656.45460.dev-python@smartology.nl>
Message-ID: <517CF1F5.1070004@fsn.hu>

On 06/11/04 16:56, Remy C. Cool wrote:
> On Friday 11 June 2004 16:35, Itamar Shtull-Trauring wrote:
>> On Fri, 2004-06-11 at 09:34, Remy C. Cool wrote:
>>> I'm currently in the process of changing from a customized
>>> SimpleXMLRPCServer to a twisted XMLRPC server solution and I need
>>> to insert the client IP into the attributes passed to the called
>>> xmlrpc method. Anyone who knows the answer and is willing to
>>> share the info?
>> The render() method of the XMLRPC class has access to the request
>> object, which may have request.getPeer() or
>> request.transport.getPeer().
> Thanks for the answer.
>
> The following works, but is this a 'twisted' way to go?
>
>
> class Examle(xmlrpc.XMLRPC):
>      """An example object to be published."""
>          
>      def _getPeerAddress(self):
>              return self.request.getClientIP()
>              
>      def render(self, request):
>          self.request = request
>          xmlrpc.XMLRPC.render(self, request)
>
Just for the record, this is the way to go (guess it was implemented later):

from twisted.web import xmlrpc
class Examle(xmlrpc.XMLRPC):
	@xmlrpc.withRequest
	def xmlrpc_whatIsMyAddress(self,request):
		return request.transport.getPeer().host





From itamar at itamarst.org  Tue Apr 30 16:41:57 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 30 Apr 2013 18:41:57 -0400
Subject: [Twisted-Python] [Twisted-gsoc] Eligible for OPW this summer?
In-Reply-To: <8EC18F4F-4503-4E61-92B1-AFC35054C556@cs.wisc.edu>
References: <17C2CA28-F2AE-42EC-ABD9-1F27F99739F3@cs.wisc.edu>
	<61E7F961-E26B-4912-9DD3-75059B0CF5D8@cs.wisc.edu>
	<517F0ABB.4060007@itamarst.org>
	<8EC18F4F-4503-4E61-92B1-AFC35054C556@cs.wisc.edu>
Message-ID: <518048B5.50403@itamarst.org>

On 04/30/2013 04:28 PM, mulhern wrote:
> OK!
>
> Should I send in code samples to you…or do they go elsewhere?

Send them to twisted-gsoc at twistedmatrix.com.

> A lot of the easy tickets are in some sense taken…at least have a patch.

Yeah, lots of Google Summer of Code candidates so we're running low.

> I think some of the more challenging require unit tests. I'm going to take a stab at #6484 which is to write a unit test for a particular procedure…essentially reverse engineering what it ought to do based on the existing code and then putting that into some unit tests. Let me know if you think something else would be better.
>
> Thanks for the help and suggestions.
>
That sounds like an OK ticket. If you look through the code there are 
existing tests that create directory structures with some utility 
function, IIRC.

Since the deadline is tomorrow, definitely send us code samples ASAP, 
and you should make sure to send in your submission by the deadline 
(https://live.gnome.org/OutreachProgramForWomen has the details). Was 
there a particular project idea you wanted to work on?



From itamar at itamarst.org  Tue Apr 30 17:22:53 2013
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 30 Apr 2013 19:22:53 -0400
Subject: [Twisted-Python] [Twisted-gsoc] Eligible for OPW this summer?
In-Reply-To: <518048B5.50403@itamarst.org>
References: <17C2CA28-F2AE-42EC-ABD9-1F27F99739F3@cs.wisc.edu>
	<61E7F961-E26B-4912-9DD3-75059B0CF5D8@cs.wisc.edu>
	<517F0ABB.4060007@itamarst.org>
	<8EC18F4F-4503-4E61-92B1-AFC35054C556@cs.wisc.edu>
	<518048B5.50403@itamarst.org>
Message-ID: <5180524D.6060005@itamarst.org>

Argh. Wrong list. Sorry.



