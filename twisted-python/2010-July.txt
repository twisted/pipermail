From jessica.mckellar at gmail.com  Fri Jul  2 08:31:34 2010
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Fri, 2 Jul 2010 08:31:34 -0400
Subject: [Twisted-Python] making Screwtape (Tim Allen) a committer
In-Reply-To: <FF6ABFC8-334F-4554-955E-CE4B34F56C2E@twistedmatrix.com>
References: <FF6ABFC8-334F-4554-955E-CE4B34F56C2E@twistedmatrix.com>
Message-ID: <AANLkTilhby5hTVgUogUXHEbyL6DCdBvM2Wv2tSZgDDvu@mail.gmail.com>

+1!

On Wed, Jun 9, 2010 at 6:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> I think we should give screwtape an SVN account and make him an official
> reviewer.  He's been doing a lot of work on the distutils code which would
> be made easier by that, and he's been doing pretty decent reviews.
>
> Thoughts?  (Feel free to voice any comments off-list, too.)
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100702/14d4f363/attachment.htm 

From jml at mumak.net  Fri Jul  2 09:08:06 2010
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 2 Jul 2010 14:08:06 +0100
Subject: [Twisted-Python] Twisted 10.1.0 release status update
Message-ID: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>

Hello everyone,

The Twisted 10.1.0 release is now a month overdue. Sorry.

We've got a pre-release which appears to be free of critical bugs, and
I'm up to step 4 of "How to do a final release" on
http://twistedmatrix.com/trac/wiki/ReleaseProcess.

My intent is to complete the final steps of the release this weekend.
It would be very, very helpful to have someone around who has root on
cube and is able to be responsive to requests during a UK afternoon /
evening.

Twisted prevails,
jml


From glyph at twistedmatrix.com  Fri Jul  2 17:15:50 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 2 Jul 2010 17:15:50 -0400
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
Message-ID: <0DFB15D2-1F1D-4DDE-A58D-8A40F6BE3D5C@twistedmatrix.com>


On Jul 2, 2010, at 9:08 AM, Jonathan Lange wrote:

> My intent is to complete the final steps of the release this weekend.
> It would be very, very helpful to have someone around who has root on
> cube and is able to be responsive to requests during a UK afternoon /
> evening.

I will make an attempt to be available, and on IRC, from 3PM to 9PM United Kingdom Time on the 3rd and 4th of July.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100702/d66edaa3/attachment.htm 

From jaroslaw.fedewicz at gmail.com  Sat Jul  3 07:23:34 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sat, 3 Jul 2010 14:23:34 +0300
Subject: [Twisted-Python] Advice seeked on SMPP implementation
Message-ID: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>

Hello,

I'm currently busy with implementing SMPP in Twisted, and there is
something I would like to have a piece of advice with.

If I'm going to make it internal to my needs, there's only issue of
making it work and be done with it. But that's not quite a way I would
like to do it; I would like to end up with an implementation which
would be reusable and beneficial for the community as well, so that
anyone would be then able to take this implementation and get his or
her service an almost instant ability to talk SMPP (news via SMS?
microblogging via SMS? ...)

Thus keeping in mind that SMPP by its nature is not entirely unlike
your old instant messaging and mailing protocols, albeit geared
towards mobile content, there might be some interfaces already in
Twisted which I would need to implement before it becomes interesting
to anyone else.

Can anyone give me some useful pointers on that?

P. S. I have seen some SMPP-related discussions popping up on this
list, but it seems that to date, nothing open source and under active
development and maintenance has been produced so far.

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: Will it block?


From jml at mumak.net  Sat Jul  3 12:10:06 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 3 Jul 2010 17:10:06 +0100
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
Message-ID: <AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>

On Fri, Jul 2, 2010 at 2:08 PM, Jonathan Lange <jml at mumak.net> wrote:
...
> My intent is to complete the final steps of the release this weekend.
> It would be very, very helpful to have someone around who has root on
> cube and is able to be responsive to requests during a UK afternoon /
> evening.

Currently the release is blocked due to an anomaly on the Windows MSI
buildslaves.

The slaves are building MSIs that are named with "10.0.0" rather than
the expected "10.1.0". I don't have anything locally that will analyze
the MSIs to see whether this problem goes deeper than the name of the
file, but 'strings' hints that it's likely.

See http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162
for more details.

jml


From glyph at twistedmatrix.com  Sat Jul  3 13:29:58 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 3 Jul 2010 13:29:58 -0400
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
Message-ID: <B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>


On Jul 3, 2010, at 12:10 PM, Jonathan Lange wrote:

> On Fri, Jul 2, 2010 at 2:08 PM, Jonathan Lange <jml at mumak.net> wrote:
> ...
>> My intent is to complete the final steps of the release this weekend.
>> It would be very, very helpful to have someone around who has root on
>> cube and is able to be responsive to requests during a UK afternoon /
>> evening.
> 
> Currently the release is blocked due to an anomaly on the Windows MSI
> buildslaves.
> 
> The slaves are building MSIs that are named with "10.0.0" rather than
> the expected "10.1.0". I don't have anything locally that will analyze
> the MSIs to see whether this problem goes deeper than the name of the
> file, but 'strings' hints that it's likely.
> 
> See http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162
> for more details.

It looks like <http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162/steps/setproperty/logs/stdio> is identifying the version number for Twisted incorrectly.  I note that the log doesn't appear to have a PYTHONPATH entry for "C:\twistedbot\winxp32-py2.5-msi\Twisted", which is where the code actually lives; it's apparently just picking up the system Twisted that buildbot is using.

Does anybody have access to this machine to fix this build step?



From lvh at laurensvh.be  Sat Jul  3 15:19:18 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 3 Jul 2010 21:19:18 +0200
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
Message-ID: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>

Hi!


For those who don't know what OAuth is; the Wikipedia definition is
pretty good: "OAuth (Open Authorization) is an open standard that
allows users to share their private resources (e.g. photos, videos,
contact lists) stored on one site with another site without having to
hand out their username and password." It is currently being used by
big names like Google, Facebook, and Twitter. There's a number of ways
it can do this; the current draft RFC is here:
http://tools.ietf.org/html/rfc5849 . The "Example" section is short
and a recommended read.

A number of people have tried to implement it in Twisted. AFAICT most
of them just use oauth.py. That uses urllib. Basically I guess it just
crosses its fingers and hopes that the OAuth API endpoints will always
be reachable and responsive. (I have been told this is completely
unrealistic.)

Thankfully, the OAuth spec is asynchronous in nature. I'm trying to
implement OAuth using twisted (specifically twisted.cred and
twisted.web) to promote code re-use.

In order to do the authentication OAuth relies on redirection (in most
use cases, this is HTTP redirection), which would be protocol
specific. I'm not sure how twisted.cred fits into this since it
appears to expect everything beyond the portal to be
protocol-agnostic.

I'm not sure what the credentials would be.

If I understand correctly the avatar would be the thing that has the
token credentials (for those who haven't read the OAuth spec, "token
credentials" are an OAuth thing, and not necessarily the credentials
in the twisted.cred sense); it represents a single authenticated
transaction (which might consist of many authenticated requests). This
takes care of steps 6 7 and 8 in
http://twistedmatrix.com/documents/current/core/img/cred-login.png.

The strange bits start in the CredentialsChecker, since credentials
are checked by someone else entirely.

I really don't understand the Mind, but it sounds like something that
might be required in the context of a three-actor auth system like
OAuth.

I would be really grateful if someone who actually understood
twisted.cred (and hopefully also OAuth) could shed some light on this.

Thanks in advance
Laurens


From jaroslaw.fedewicz at gmail.com  Sat Jul  3 15:44:24 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sat, 3 Jul 2010 22:44:24 +0300
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
In-Reply-To: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
References: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
Message-ID: <AANLkTinulZsC3iP8e14skI5M2l8IG6jnijmPD2hciRAI@mail.gmail.com>

> The strange bits start in the CredentialsChecker, since credentials are checked by someone else entirely.

I see nothing strange. A checker which delegates checking to another
entity and returns a Deferred. Which may go through a whole lot of
callbacks and stages of verification before your own callbacks even
start...

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?


From therve at free.fr  Sat Jul  3 16:43:16 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 03 Jul 2010 22:43:16 +0200
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
	<B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
Message-ID: <1278189796.3426.0.camel@brainwave>

Le samedi 03 juillet 2010 ? 13:29 -0400, Glyph Lefkowitz a ?crit :
> On Jul 3, 2010, at 12:10 PM, Jonathan Lange wrote:
> 
> > On Fri, Jul 2, 2010 at 2:08 PM, Jonathan Lange <jml at mumak.net> wrote:
> > ...
> >> My intent is to complete the final steps of the release this weekend.
> >> It would be very, very helpful to have someone around who has root on
> >> cube and is able to be responsive to requests during a UK afternoon /
> >> evening.
> > 
> > Currently the release is blocked due to an anomaly on the Windows MSI
> > buildslaves.
> > 
> > The slaves are building MSIs that are named with "10.0.0" rather than
> > the expected "10.1.0". I don't have anything locally that will analyze
> > the MSIs to see whether this problem goes deeper than the name of the
> > file, but 'strings' hints that it's likely.
> > 
> > See http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162
> > for more details.
> 
> It looks like <http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162/steps/setproperty/logs/stdio> is identifying the version number for Twisted incorrectly.  I note that the log doesn't appear to have a PYTHONPATH entry for "C:\twistedbot\winxp32-py2.5-msi\Twisted", which is where the code actually lives; it's apparently just picking up the system Twisted that buildbot is using.
> 
> Does anybody have access to this machine to fix this build step?

The build step is in the master on cube. I think I've fixed it, sorry
for the trouble.

-- 
Thomas



From exarkun at twistedmatrix.com  Sun Jul  4 00:05:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Jul 2010 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1278216331.38.1119638712@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100704/c01c15ff/attachment-0001.htm 

From jml at mumak.net  Sun Jul  4 05:05:16 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 4 Jul 2010 10:05:16 +0100
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <1278189796.3426.0.camel@brainwave>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
	<B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
	<1278189796.3426.0.camel@brainwave>
Message-ID: <AANLkTim_u79L2J83IjiKynYwJ9X02svY6G_o3ZCQX-NJ@mail.gmail.com>

On Sat, Jul 3, 2010 at 9:43 PM, Thomas Herv? <therve at free.fr> wrote:
...
>
> The build step is in the master on cube. I think I've fixed it, sorry
> for the trouble.

Thanks. It looks like they're working now.

What was the problem? If something like this happened again, is there
anything we can do other than ask for help and then wait?

jml


From lvh at laurensvh.be  Sun Jul  4 09:53:38 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 4 Jul 2010 15:53:38 +0200
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
In-Reply-To: <AANLkTinulZsC3iP8e14skI5M2l8IG6jnijmPD2hciRAI@mail.gmail.com>
References: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
	<AANLkTinulZsC3iP8e14skI5M2l8IG6jnijmPD2hciRAI@mail.gmail.com>
Message-ID: <AANLkTill-aSpeXoVWS1gbDh2nOEeM_1cobb3HPso_PFn@mail.gmail.com>

I was confused about the latest spec; see
https://datatracker.ietf.org/doc/draft-ietf-oauth-v2/

I'm trying to figure out what changed from OAuth v1, some things
appear more complex, some changes are pretty trivial, but there's a
lot of different people writing and editing it now (Yahoo!, Facebook,
Microsoft), so this is probably the one to look out for even though
it's still in draft.

cheers
Laurens


From jml at mumak.net  Sun Jul  4 11:36:19 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 4 Jul 2010 16:36:19 +0100
Subject: [Twisted-Python] Twisted 10.1.0 released
Message-ID: <AANLkTinBcj50Bz0lERPbXvCtdWRwLedTljto9Nz2ss0f@mail.gmail.com>

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 10.1.0.

Highlights include:

 * Deferreds now support cancellation

 * A new "endpoint" interface which can abstractly describe stream
transport endpoints such as TCP and SSL

 * inotify support for Linux, which allows monitoring of file system events.

 * AMP supports transferring timestamps

Note also that this is the *last* supported release of Twisted for
Python 2.4 on Windows.

For more information, see the NEWS file.

It's stable, backwards compatible, well tested and in every way an
improvement. Download it now from:

 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.tar.bz2
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.winxp32-py2.5.msi
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.winxp32-py2.6.msi

Many thanks to Glyph Lefkowitz, who helped do the release preparation,
and the PyCon 2010 sprinters, who did so much of the work for this
release.

jml


From jml at mumak.net  Sun Jul  4 12:13:21 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 4 Jul 2010 17:13:21 +0100
Subject: [Twisted-Python] 10.1 release follow-up
Message-ID: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>

Hello everybody,

As you've seen, the Twisted 10.1.0 release is out there.

I've started this thread for any discussions about the way the release
was done and for the next release.

Glyph Lefkowitz has kindly offered to be the RM for the 10.2 release,
which is scheduled for September 15, 2010.

Note that the Ubuntu feature freeze is August 12th, so we can expect
10.1 to be the release that goes into Ubuntu 10.10.

There were four open tickets on the 10.1 milestone. I have moved them
off the milestone and closed them. When they are fixed, I'll be happy
to consider re-opening the milestone and rolling out a 10.1.1.

As part of this release, there have been many improvements to the
release process document, see
http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
appreciate it if the document could be reviewed for clarity and
correctness.

The biggest blockers to a swift release, from my perspective, were the
following:
  * myself having work travel and then vacation around the scheduled
time of the release
  * delaying to wait for feedback on the release candidate
  * waiting for the review for the release ticket
  * waiting for someone else to solve the buildbot issues for Windows

I've filed a ticket for moving the release document into version
control, http://twistedmatrix.com/trac/ticket/4543. I'm happy to do
so, but I'd like at least a rubber-stamp from someone before I do the
work.

jml


From therve at free.fr  Sun Jul  4 16:48:44 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sun, 04 Jul 2010 22:48:44 +0200
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTim_u79L2J83IjiKynYwJ9X02svY6G_o3ZCQX-NJ@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
	<B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
	<1278189796.3426.0.camel@brainwave>
	<AANLkTim_u79L2J83IjiKynYwJ9X02svY6G_o3ZCQX-NJ@mail.gmail.com>
Message-ID: <1278276524.2221.5.camel@brainwave>

Le dimanche 04 juillet 2010 ? 10:05 +0100, Jonathan Lange a ?crit :
> On Sat, Jul 3, 2010 at 9:43 PM, Thomas Herv? <therve at free.fr> wrote:
> ...
> >
> > The build step is in the master on cube. I think I've fixed it, sorry
> > for the trouble.
> 
> Thanks. It looks like they're working now.
> 
> What was the problem? If something like this happened again, is there
> anything we can do other than ask for help and then wait?

The problem was in the msi builder class in the buildbot master. The
specific files holding those objects
is /srv/bb-master/BuildBot/master/twisted_factories.py

This is the interesting part:


class TwistedBdistMsiFactory(TwistedBaseFactory):
    treeStableTimer = 5*60

    uploadBase = 'public_html/builds/'
    def __init__(self, source, uncleanWarnings, platform, pyVersion):
        python = self.python(pyVersion)
        TwistedBaseFactory.__init__(self, python, source,
           uncleanWarnings)
        self.addStep(
            LearnVersion, python=python, package='twisted', 
            workdir='Twisted')


The problem was that the step used to specify "source" as workdir,
instead of "Twisted". The "source" directory probably doesn't even
exist, so it didn't get the version from the correct place. It got the
wrong value because this step was wrongly copied from
PyOpenSSLBuildFactoryBase class.

Once fixed, a "make restart-master" in /srv/bb-master/BuildBot/ takes
the changed file into account.

Hope this helps,

-- 
Thomas






From exarkun at twistedmatrix.com  Sun Jul  4 22:08:04 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Jul 2010 02:08:04 -0000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
Message-ID: <20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>

On 4 Jul, 04:13 pm, jml at mumak.net wrote:
>Hello everybody,
>
>As you've seen, the Twisted 10.1.0 release is out there.
>
>I've started this thread for any discussions about the way the release
>was done and for the next release.
>
>Glyph Lefkowitz has kindly offered to be the RM for the 10.2 release,
>which is scheduled for September 15, 2010.
>
>Note that the Ubuntu feature freeze is August 12th, so we can expect
>10.1 to be the release that goes into Ubuntu 10.10.
>
>There were four open tickets on the 10.1 milestone. I have moved them
>off the milestone and closed them. When they are fixed, I'll be happy
>to consider re-opening the milestone and rolling out a 10.1.1.
>
>As part of this release, there have been many improvements to the
>release process document, see
>http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
>appreciate it if the document could be reviewed for clarity and
>correctness.
>
>The biggest blockers to a swift release, from my perspective, were the
>following:
>  * myself having work travel and then vacation around the scheduled
>time of the release
>  * delaying to wait for feedback on the release candidate
>  * waiting for the review for the release ticket
>  * waiting for someone else to solve the buildbot issues for Windows
>
>I've filed a ticket for moving the release document into version
>control, http://twistedmatrix.com/trac/ticket/4543. I'm happy to do
>so, but I'd like at least a rubber-stamp from someone before I do the
>work.

Hi jml,

Thanks for your work on this release, and congratulations on getting it 
out the door. :)

I'm curious about plans to update the documentation on the website and 
distribute the .exe Windows installers.

Jean-Paul


From jml at mumak.net  Mon Jul  5 04:23:26 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 09:23:26 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
Message-ID: <AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>

On Mon, Jul 5, 2010 at 3:08 AM,  <exarkun at twistedmatrix.com> wrote:
...
> Thanks for your work on this release, and congratulations on getting it
> out the door. :)
>
> I'm curious about plans to update the documentation on the website and
> distribute the .exe Windows installers.
>

Oops, forgot to switch over the symlink for the docs. That's done now.

I don't remember anyone saying anything about exes until now.

jml


From rlotun at gmail.com  Mon Jul  5 06:21:40 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 5 Jul 2010 11:21:40 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
Message-ID: <AANLkTimCwZjmrV8W650hG0QItxxlwjUTlGUUCU0tYH2C@mail.gmail.com>

On Sun, Jul 4, 2010 at 5:13 PM, Jonathan Lange <jml at mumak.net> wrote:
> Hello everybody,
>
> As you've seen, the Twisted 10.1.0 release is out there.
>
> ...

Just a note that I tried to view the release process document but I'm
getting "Could not connect" errors.

I don't recall anyone mentioning this before, but it would be great if
there was a "What's new in Twisted X.Y.Z" mini-article that's
hand-written with every release. If it was something like
http://docs.python.org/dev/whatsnew/2.7.html and even used the same
template, that would be cool. Coming from the perspective of a Twisted
*user* I'd love to see a small snippet of how to use deferred
cancellation or endpoints without necessarily having to hunt down the
full documentation.

Anyway, good job everyone on this release!

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun


From peter.westlake at pobox.com  Mon Jul  5 08:22:06 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 05 Jul 2010 13:22:06 +0100
Subject: [Twisted-Python] Problem with twistedmatrix.com
Message-ID: <1278332526.21782.1383341571@webmail.messagingengine.com>

Some of twistedmatrix.com is working, but the top level
(http://twistedmatrix.com/) says "Could not connect", and the Subversion
repository does the same:

svn checkout svn://svn.twistedmatrix.com/svn/Twisted
svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused

Peter.


From exarkun at twistedmatrix.com  Mon Jul  5 08:36:25 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Jul 2010 12:36:25 -0000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
Message-ID: <20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>

On 08:23 am, jml at mumak.net wrote:
>On Mon, Jul 5, 2010 at 3:08 AM,  <exarkun at twistedmatrix.com> wrote:
>...
>>Thanks for your work on this release, and congratulations on getting 
>>it
>>out the door. :)
>>
>>I'm curious about plans to update the documentation on the website and
>>distribute the .exe Windows installers.
>
>Oops, forgot to switch over the symlink for the docs. That's done now.

Great, thanks!

One thing that it looks like we missed again (and I'm not surprised, 
it's not well documented) is the Google Analytics doc template changes. 
This is mentioned on the APIDocs page, but maybe not described in 
sufficient detail?
>
>I don't remember anyone saying anything about exes until now.

These are mentioned on ReleaseProcess (Cut the tarballs & installers, 
3.4), but apparently only in one of the several places where they need 
to be handled.  This is the first release where we're trying to provide 
them (#4427).

Jean-Paul


From peter.westlake at pobox.com  Mon Jul  5 08:53:45 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 05 Jul 2010 13:53:45 +0100
Subject: [Twisted-Python] Problem with twistedmatrix.com
In-Reply-To: <1278332526.21782.1383341571@webmail.messagingengine.com>
References: <1278332526.21782.1383341571@webmail.messagingengine.com>
Message-ID: <1278334425.29684.1383346003@webmail.messagingengine.com>

It's all working again now.

On Mon, 05 Jul 2010 13:22 +0100, "Peter Westlake"
<peter.westlake at pobox.com> wrote:
> Some of twistedmatrix.com is working, but the top level
> (http://twistedmatrix.com/) says "Could not connect", and the Subversion
> repository does the same:
> 
> svn checkout svn://svn.twistedmatrix.com/svn/Twisted
> svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
> 
> Peter.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


From jml at mumak.net  Mon Jul  5 08:58:01 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 13:58:01 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
Message-ID: <AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>

On Mon, Jul 5, 2010 at 1:36 PM,  <exarkun at twistedmatrix.com> wrote:
> On 08:23 am, jml at mumak.net wrote:
>>On Mon, Jul 5, 2010 at 3:08 AM, ?<exarkun at twistedmatrix.com> wrote:
>>...
>>>Thanks for your work on this release, and congratulations on getting
>>>it
>>>out the door. :)
>>>
>>>I'm curious about plans to update the documentation on the website and
>>>distribute the .exe Windows installers.
>>
>>Oops, forgot to switch over the symlink for the docs. That's done now.
>
> Great, thanks!
>
> One thing that it looks like we missed again (and I'm not surprised,
> it's not well documented) is the Google Analytics doc template changes.
> This is mentioned on the APIDocs page, but maybe not described in
> sufficient detail?

I think it's not so much lacking detail as leaving gaps for
interpretation or not being step-by-step enough (which I guess is the
same thing, but a subtly different goal).

Following the documentation generation instructions was confusing for
me because:
  * originally they were incomplete and messy
  * the "api documentation" and "general documentation" steps were conflated
  * at least one of the steps required a special kind of tree, which
took me some time to figure out
  * I was using the last release and release 8.2.0 as a way of double
checking that I was doing the right thing

Things we can do now:
  * Update the current documentation so that it uses the correct template
  * Update the release process to be clearer (I think this is done
now, but I can use the previous step to double check)
  * Delete APIDocs, or at least stop recommending it -- it's easier
followed if folded in to the release doc

>>
>>I don't remember anyone saying anything about exes until now.
>
> These are mentioned on ReleaseProcess (Cut the tarballs & installers,
> 3.4), but apparently only in one of the several places where they need
> to be handled. ?This is the first release where we're trying to provide
> them (#4427).
>

Ahh, ok, I see that now. I think if I'd received some sort of direct
communication about it, I wouldn't have missed them.

Other things we can do, now, to make this easier:
  * Upload the exes, re-issue the md5sum file
  * Add the exes to the Downloads page
  * Make a decision about whether we want the exes on the front page,
act on that decision
  * Update the examples in the release process doc to include the exes
  * Update the release blog post pointing to the exes

For both of these issues, a more satisfying solution would be to
automate them, putting them outside the realm of human error. However,
I think the interim steps listed above are worthwhile.

I'll do these now, and email back when I'm done.

I would greatly appreciate thoughts on the issues I raised in my original post.

jml


From jml at mumak.net  Mon Jul  5 09:23:47 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 14:23:47 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
Message-ID: <AANLkTikYWQfDQdUkw2ff3hkoCt5hBBzDUZYLAzjXcNY7@mail.gmail.com>

On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
...
> Other things we can do, now, to make this easier:
> ?* Upload the exes, re-issue the md5sum file

Done.

> ?* Add the exes to the Downloads page

Done.

> ?* Make a decision about whether we want the exes on the front page,
> act on that decision

Done. I have the exes linked in parens after the msis.

> ?* Update the examples in the release process doc to include the exes

Done.

> ?* Update the release blog post pointing to the exes
>

Done.

jml


From jml at mumak.net  Mon Jul  5 10:21:35 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 15:21:35 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
Message-ID: <AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>

On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
...
> Things we can do now:
> ?* Update the current documentation so that it uses the correct template
> ?* Update the release process to be clearer (I think this is done
> now, but I can use the previous step to double check)
> ?* Delete APIDocs, or at least stop recommending it -- it's easier
> followed if folded in to the release doc
>

These are all done. APIDocs still exists but is no longer referred to
by the release document.

Please confirm that the analytics stuff works.

jml


From exarkun at twistedmatrix.com  Mon Jul  5 10:58:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Jul 2010 14:58:29 -0000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
	<AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>
Message-ID: <20100705145829.2967.1413978396.divmod.xquotient.22@localhost.localdomain>

On 02:21 pm, jml at mumak.net wrote:
>On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
>...
>>Things we can do now:
>>?* Update the current documentation so that it uses the correct 
>>template
>>?* Update the release process to be clearer (I think this is done
>>now, but I can use the previous step to double check)
>>?* Delete APIDocs, or at least stop recommending it -- it's easier
>>followed if folded in to the release doc
>
>These are all done. APIDocs still exists but is no longer referred to
>by the release document.
>
>Please confirm that the analytics stuff works.

It looks like it's working on the API docs but not on the howtos.  The 
quoting seems to be a bit messed up:

<!-- Google analytics, obviously. --> <script src="http://www.google- 
analytics.com/urchin.js" type="text/javascript"/> <script 
type="text/javascript"> _uacct = &quot;UA-99018-6&quot;;
urchinTracker();
</script>
I think this needs to be `_uacct = "UA-99018-6";`.  I seem to recall 
having some difficulty getting this output when generating the 9.0 docs, 
though. :/

Let's chat on IRC if you run into similar problems.

Jean-Paul


From jml at mumak.net  Mon Jul  5 12:15:34 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 17:15:34 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <20100705145829.2967.1413978396.divmod.xquotient.22@localhost.localdomain>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
	<AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>
	<20100705145829.2967.1413978396.divmod.xquotient.22@localhost.localdomain>
Message-ID: <AANLkTimJ7W8QEW8LsfeWYu4G7U73YVdRZA00midsLDcC@mail.gmail.com>

On Mon, Jul 5, 2010 at 3:58 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:21 pm, jml at mumak.net wrote:
>>
>> On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
>> ...
>>>
>>> Things we can do now:
>>> ?* Update the current documentation so that it uses the correct template
>>> ?* Update the release process to be clearer (I think this is done
>>> now, but I can use the previous step to double check)
>>> ?* Delete APIDocs, or at least stop recommending it -- it's easier
>>> followed if folded in to the release doc
>>
>> These are all done. APIDocs still exists but is no longer referred to
>> by the release document.
>>
>> Please confirm that the analytics stuff works.
>
> It looks like it's working on the API docs but not on the howtos. ?The
> quoting seems to be a bit messed up:
>
> <!-- Google analytics, obviously. --> <script src="http://www.google-
> analytics.com/urchin.js" type="text/javascript"/> <script
> type="text/javascript"> _uacct = &quot;UA-99018-6&quot;;
> urchinTracker();
> </script>
> I think this needs to be `_uacct = "UA-99018-6";`. ?I seem to recall having
> some difficulty getting this output when generating the 9.0 docs, though. :/
>

These are now fixed. I've updated the release document with
workarounds and filed bugs #4544 and #4545.

jml


From glyph at twistedmatrix.com  Mon Jul  5 13:48:01 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 13:48:01 -0400
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
In-Reply-To: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
References: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
Message-ID: <50B8BDD6-01E6-44D5-BFDA-4DB4442D0732@twistedmatrix.com>


On Jul 3, 2010, at 3:19 PM, Laurens Van Houtven wrote:

> A number of people have tried to implement it in Twisted. AFAICT most
> of them just use oauth.py. That uses urllib. Basically I guess it just
> crosses its fingers and hopes that the OAuth API endpoints will always
> be reachable and responsive. (I have been told this is completely
> unrealistic.)

It always is.

> Thankfully, the OAuth spec is asynchronous in nature. I'm trying to
> implement OAuth using twisted (specifically twisted.cred and
> twisted.web) to promote code re-use.

Great!

> In order to do the authentication OAuth relies on redirection (in most
> use cases, this is HTTP redirection), which would be protocol
> specific. I'm not sure how twisted.cred fits into this since it
> appears to expect everything beyond the portal to be
> protocol-agnostic.

Not at all.

Checkers are as protocol-specific as necessary.  That's why they have a credentialInterfaces attribute, to indicate what type of credentials they may be used with.

Now, many *application* protocols do share obvious checker behavior such as "does this password match", and it would be a shame to re-implement that logic, but that's not to say that *authentication* protocols shouldn't have their own, more specific interfaces.  Especially if you could see some way to abstractly re-implement, let's say, SMTP authentication to rely on OAuth.

As someone else already noted in a reply, the main thing is that this stuff returns a Deferred, so HTTP redirection could be neatly handled there.

> I'm not sure what the credentials would be.

I'm not going to read 40 pages of RFC just to answer this one email :) but the credentials object should be something that contains enough information for the checker to do its work.

What the checker needs to be able to do is to map the credentials into a locally useful "avatar ID".  This is probably just an URI which identifies the authenticated principal (which presumably the IRealm could use to map into a local database row).

Of course it would be *good* if you could boil down OAuth credentials to something simple that could be re-used by other protocols, or better yet some existing interface.  Then you could use an existing checker, or perhaps even provide a strcred plugin.  But, that seems unlikely, given that its domain model for authentication is a bit broader than the usual username/password check.

> If I understand correctly the avatar would be the thing that has the
> token credentials (for those who haven't read the OAuth spec, "token
> credentials" are an OAuth thing, and not necessarily the credentials
> in the twisted.cred sense); it represents a single authenticated
> transaction (which might consist of many authenticated requests). This
> takes care of steps 6 7 and 8 in
> http://twistedmatrix.com/documents/current/core/img/cred-login.png.

The avatar is made entirely of application logic.  It shouldn't have any authentication stuff stuck to it at all.  (Although maybe that's not what "token credentials" means...)  Please note that it must be an implementation of an _existing_ protocol interface, as that's the whole point of cred's abstraction: to allow existing application logic to be re-used independent of authentication or authorization mechanism.  If this is an authentication mechanism for an HTTP protocol, the avatar is an IResource provider.  HTTP already has a defined avatar interface within Twisted, and that's it; so if you want to use any existing code that talks to cred, you have to use it.

If the avatar needs to be passed more information in order to operate correctly, then you can pass that information as part of the avatar ID somehow, and have the realm implementation break it down into the necessary parts to pass on.  This is, admittedly, a crufty corner of cred, but that's the best option available right now.  Hopefully OAuth doesn't require this :).

> The strange bits start in the CredentialsChecker, since credentials
> are checked by someone else entirely.

A credentials checker doesn't need to actually check the credentials itself; it's just the logic that knows who to delegate to and what information to give them.

> I really don't understand the Mind, but it sounds like something that
> might be required in the context of a three-actor auth system like
> OAuth.

The Mind is for connection-oriented protocols to provide a callback mechanism to the originating side of the connection.  For example, if I'm logging in to an IRC server, the 'mind' would be a wrapper around the client connection that would allow the avatar to be associated with a TCP socket it could send IRC messages to.  I don't think it applies in this case.

> I would be really grateful if someone who actually understood
> twisted.cred (and hopefully also OAuth) could shed some light on this.

I hope this has been more useful than confusing.  Let me know if you have more questions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100705/081cdf28/attachment.htm 

From ddwiggins at advpubtech.com  Mon Jul  5 21:26:08 2010
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 05 Jul 2010 18:26:08 -0700
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com>
References: <i0bfj2$iem$1@dough.gmane.org>
	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com>
Message-ID: <i0u0nh$fki$1@dough.gmane.org>

Hugh,
> The way I do this is I isolate all the COM stuff in a separate thread
> from thread that runs my reactor.

This all looks good, and I think I understand it.  One question, though: 
from my investigation, it seems that the hangup is in the COM object 
creation itself, where Mark and I think it's waiting on a Windows 
message.  Wouldn't I have to have the event loop running before calling 
Dispatch?  (FWIW, I do call CoInitializeEx the same way you do, and have 
the object built with apartment threading.)

>
> This thread starts by calling:
>
>      pythoncom.CoInitializeEx(pythoncom.COINIT_APARTMENTTHREADED)
>
> it then creates the COM object and runs an event loop something like this:
>
>      while keepRunning:
>          n = MsgWaitForMultipleObjects(handles, False, timeout, QS_ALLINPUT)
>          if n == WAIT_OBJECT_0 + nHandles:
>              # There is a win32 message waiting.
>              if pythoncom.PumpWaitingMessages():
>                  keepRunning = False
>
> I send messages to the thread by putting them in a queue and setting
> an event.  The messages cause methods to be called on the COM object.
> I send the results of the COM methods back to the reactor thread using
> reactor.callFromThread().

Thanks much for the help,

-- 
Don Dwiggins
Advanced Publishing Technology



From glyph at twistedmatrix.com  Mon Jul  5 22:30:15 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 22:30:15 -0400
Subject: [Twisted-Python] relative priority of deprecation tickets
Message-ID: <C5E6757D-5DD2-4242-A3F7-EBBC0C3BACA6@twistedmatrix.com>

Hello there everybody - and by "everybody" I mostly mean "thijs" :-).

I've noticed that there is an increasing proliferation of small, "remove some deprecated stuff" tickets in the Twisted tracker.  While, nominally, according to our own process, everything that is deprecated should eventually be removed, some removals should be more eventual than others.

For example, Jean-Paul Calderone had this to say (on IRC) about <http://twistedmatrix.com/trac/ticket/4548>:

<exarkun> The thing that's deprecated in twisted.news.nntp is supporting applications that return a string from a particular api instead of an Article instance
<exarkun> The support code for that case is one line
<exarkun> In the 6 years it has existed, it has cost zero maintenance time

The real purpose of these 'removal' tickets is to reduce maintenance overhead by eliminating redundant code that doesn't need to be maintained, and shouldn't be presented to new users (in API docs, in examples, etc).  Some code really does produce a maintenance burden and needs to be thought about a lot.  But we can really afford to let innocuous one-liners slide for quite a long time; in the meanwhile, all they're doing is providing a more useful error message for developers using the older API.

Of course, small maintenance tickets like this do serve as a way to provide 'easy' work to newcomers, and that's great.  But if newcomers are going to do easy things, a much more worthwhile type of grunt-work would be for them to remove warnings that Twisted itself, especially 'trial twisted' is _emitting_.  Similarly, if anyone would like to spend time filing individual tickets to provide more fine-grained warning-removal tickets ("twisted emits warnings" is obviously way too big for one patch) that would be more helpful.

If you are going to file tickets for removing code that nobody is really having to maintain at the moment, please set their priority to 'lowest', since leaving them at 'normal' creates the misleading impression that they are just as important as fixing bugs, adding documentation or implementing features.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100705/4eb73847/attachment.htm 

From glyph at twistedmatrix.com  Mon Jul  5 22:52:52 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 22:52:52 -0400
Subject: [Twisted-Python] Advice seeked on SMPP implementation
In-Reply-To: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
References: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
Message-ID: <D95EFCBC-8007-464F-B01E-3E9BA0D8403A@twistedmatrix.com>


On Jul 3, 2010, at 7:23 AM, Yaroslav Fedevych wrote:

> If I'm going to make it internal to my needs, there's only issue of
> making it work and be done with it. But that's not quite a way I would
> like to do it; I would like to end up with an implementation which
> would be reusable and beneficial for the community as well, so that
> anyone would be then able to take this implementation and get his or
> her service an almost instant ability to talk SMPP (news via SMS?
> microblogging via SMS? ...)

That would indeed be cool :).

> Thus keeping in mind that SMPP by its nature is not entirely unlike
> your old instant messaging and mailing protocols, albeit geared
> towards mobile content, there might be some interfaces already in
> Twisted which I would need to implement before it becomes interesting
> to anyone else.
> 
> Can anyone give me some useful pointers on that?

There are some existing interfaces in twisted.words.im, which you can see here:

	<http://twistedmatrix.com/trac/browser/trunk/twisted/words/im/interfaces.py>

but they have not seen a lot of maintenance, and they date back to a much less awesome time in Twisted's history.  Still, there may be some small utility in implementing them, if for no other reason than to encourage them to become better documented and supported!

I don't have much advice as to *what* to implement, how to structure your code and such, but I do have some advice as to *how* you should go about it:

	1. put it up on Launchpad.  don't wait until your design is done; develop it in the open to solicit feedback.
	2. choose a nice, obvious name (might I suggest 'txsmpp'?)
	3. use test-driven development, so that your code is maintainable!
	4. join the 'tx' meta-project <https://launchpad.net/tx>
	5. when you are, of course, totally successful, write a success story and send it to <mailto:success at twistedmatrix.com>.

Hope that helps,

-glyph



From glyph at twistedmatrix.com  Mon Jul  5 22:53:43 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 22:53:43 -0400
Subject: [Twisted-Python] Advice seeked on SMPP implementation
In-Reply-To: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
References: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
Message-ID: <14296B7F-B858-480F-A3C4-094E23E08291@twistedmatrix.com>


On Jul 3, 2010, at 7:23 AM, Yaroslav Fedevych wrote:

> Engineer : How do I do it?
> Economist : How much will it cost?
> Twisted Developer: Will it block?

and by the way, this is hilarious :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100705/b82f57e0/attachment.htm 

From glyph at twistedmatrix.com  Mon Jul  5 23:08:57 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 23:08:57 -0400
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
Message-ID: <E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>


On Jul 4, 2010, at 12:13 PM, Jonathan Lange wrote:

> As you've seen, the Twisted 10.1.0 release is out there.

Yay!

> I've started this thread for any discussions about the way the release
> was done and for the next release.

I am generally very pleased with the way it went.  It appears to have been the smoothest release thus far.

> Glyph Lefkowitz has kindly offered to be the RM for the 10.2 release,
> which is scheduled for September 15, 2010.

Oh boy.  I'm really in for it now.

> Note that the Ubuntu feature freeze is August 12th, so we can expect
> 10.1 to be the release that goes into Ubuntu 10.10.

I would *like* to accelerate the schedule for this release if we can get certain important features in which missed the last release (documentation for endpoints, documentation for cancellation, endpoint string parsing, endpoint plugins, and some SSL issues that Jean-Paul and I discovered while working on these).  It would be nice to establish the precedent that important features cause releases to happen *faster*, rather than causing them to be delayed.  

But I certainly don't want to make any promises about getting it done by a particular advance date.  I thought that you handled the delays and setbacks in this release fairly well - I can't see myself doing it substantially better - and so trying to accelerate the schedule may just result in the release actually occurring on time.

> There were four open tickets on the 10.1 milestone. I have moved them
> off the milestone and closed them. When they are fixed, I'll be happy
> to consider re-opening the milestone and rolling out a 10.1.1.
> 
> As part of this release, there have been many improvements to the
> release process document, see
> http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
> appreciate it if the document could be reviewed for clarity and
> correctness.

I will obviously be doing this in more detail as I move forward with the next release, but the recent edits are a big improvement to the clarity and completeness of the document.  Thank you for all your efforts here; as your successor and therefore the primary beneficiary of those efforts, I _much_ appreciate them.  I will try to continue the same trend with my own release work.

> The biggest blockers to a swift release, from my perspective, were the
> following:
>  * myself having work travel and then vacation around the scheduled
> time of the release
>  * delaying to wait for feedback on the release candidate

This seems to me like a necessary delay.  I wish that we could motivate the readers of this mailing list to be a bit more responsive, but I don't see how we could have been much louder about it :).

>  * waiting for the review for the release ticket
>  * waiting for someone else to solve the buildbot issues for Windows

It looks like those issues were a one-time thing, at least.

> I've filed a ticket for moving the release document into version
> control, http://twistedmatrix.com/trac/ticket/4543. I'm happy to do
> so, but I'd like at least a rubber-stamp from someone before I do the
> work.

I left some comments there.

Thanks again for all your hard work, JML.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100705/0df5e07b/attachment.htm 

From mithrandi at mithrandi.net  Tue Jul  6 00:07:07 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 6 Jul 2010 06:07:07 +0200
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
Message-ID: <AANLkTikglX55HiXczsKTod5pgRg7oWW881jBELzUgA2Y@mail.gmail.com>

On Tue, Jul 6, 2010 at 5:08 AM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> I would *like* to accelerate the schedule for this release if we can get
> certain important features in which missed the last release (documentation
> for endpoints, documentation for cancellation, endpoint string parsing,
> endpoint plugins, and some SSL issues that Jean-Paul and I discovered while
> working on these). ?It would be nice to establish the precedent that
> important features cause releases to happen *faster*, rather than causing
> them to be delayed.

The best solution for "this cool stuff should really be in the
release!" is "don't worry, there's another release just around the
corner". If you know the release after this one will happen reasonably
soon, there's not as much stress to cram everything you can into this
one. Of course, achieving that requires streamlining the release
process so that it's pleasantly easy to perform frequently, instead of
painfully unpleasant; but I guess jml already described what is
necessary to make that happen.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From hugh.emberson at gmail.com  Tue Jul  6 01:53:12 2010
From: hugh.emberson at gmail.com (Hugh Emberson)
Date: Tue, 6 Jul 2010 15:53:12 +1000
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <i0u0nh$fki$1@dough.gmane.org>
References: <i0bfj2$iem$1@dough.gmane.org>
	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com> 
	<i0u0nh$fki$1@dough.gmane.org>
Message-ID: <AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com>

On Tue, Jul 6, 2010 at 11:26 AM, Don Dwiggins <ddwiggins at advpubtech.com> wrote:
> Hugh,
>> The way I do this is I isolate all the COM stuff in a separate thread
>> from thread that runs my reactor.
>
> This all looks good, and I think I understand it. ?One question, though:
> from my investigation, it seems that the hangup is in the COM object
> creation itself, where Mark and I think it's waiting on a Windows
> message. ?Wouldn't I have to have the event loop running before calling
> Dispatch? ?(FWIW, I do call CoInitializeEx the same way you do, and have
> the object built with apartment threading.)

I got the order wrong.  On further reading of the code, the COM object
is created in response to a message from the Twisted thread, so at
that point the event loop has iterated at least once.

In my case the COM object is wrapped in a C++ wrapper that I don't
have the source for, so I don't know exactly what happens in there.
That C++ wrapper is then wrapped in a very thin python extension
module which doesn't do anything interesting.

> Thanks much for the help,

My pleasure.

Hugh


From f.schneider at de-bleek.demon.nl  Tue Jul  6 07:31:13 2010
From: f.schneider at de-bleek.demon.nl (Schneider)
Date: Tue, 6 Jul 2010 13:31:13 +0200
Subject: [Twisted-Python] Newbie: using cred  strcred.AuthOptionMixin
Message-ID: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>

Hi,

I need a perspective broker with authentification and followed the Twisted
documentation on
http://twistedmatrix.com/documents/current/core/howto/tap.html#auto4 to get
the twistd plugin to work. Now I want to make it work with the /etc/shadow,
but don't know how to get it to work.  

The plugin looks like:
-----------------------------------------------------------------------
from zope.interface import implements
from twisted.python import usage
from twisted.plugin import IPlugin
from twisted.application.service import IServiceMaker from
twisted.application import internet from twisted.cred import credentials,
portal, strcred from twisted.spread import pb

from qxmt.QXMTServer import QXMTUser

class Options(usage.Options, strcred.AuthOptionMixin):
    # This part is optional; it tells AuthOptionMixin what
    # kinds of credential interfaces the user can give us.
    supportedInterfaces = (credentials.IUsernamePassword,)

    optParameters = [["port", "p", 8789, "Server port number"]]


class QXMTRealm:
    implements(portal.IRealm)
    def requestAvatar(self, avatarId, mind, *interfaces):
        if pb.IPerspective not in interfaces:
            raise NotImplementedError
        return pb.IPerspective, QXMTUser(avatarId), lambda: None

class QXMTServiceMaker(object):
    implements(IServiceMaker, IPlugin)
    tapname = "qxmt"
    description = "The QXtend remote error processing tool."
    options = Options

    def makeService(self, options):
        """
        Construct a TCPServer from a factory defined in qxmt.
        """
        p = portal.Portal(QXMTRealm(), options["credCheckers"])
        #c = checkers.InMemoryUsernamePasswordDatabaseDontUse(user1="pass1",
        #p.registerChecker(c)
        return internet.TCPServer(int(options['port']),
                                  pb.PBServerFactory(p))

serviceMaker = QXMTServiceMaker()
-----------------------------------------------------------------------

Running twistd qxmt --help-auth gives

Usage: --auth AuthType[:ArgString]
For detailed help: --help-auth-type AuthType

  AuthType      ArgString format
  ========      ================
  memory        A colon-separated list (name:password:...)
  file          Location of a FilePasswordDB-formatted file.
  unix          No argstring required.

And twistd qxmt --help-auth-type unix gives

Usage: --auth unix[:ArgString]
ArgString format: No argstring required.

  This checker will attempt to use every resource available to
  authenticate against the list of users on the local UNIX system.
  (This does not support Windows servers for very obvious reasons.)

  Right now, this includes support for:

    * Python's pwd module (which checks /etc/passwd)
    * Python's spwd module (which checks /etc/shadow)

  Future versions may include support for PAM authentication. 

So, I guess the server now should be able to use the system's shadow
passwords for authentification.

As a client I used with the InMemoryUsernamePasswordDatabaseDontUse checker
the following code.

-----------------------------------------------------------------------
#!/usr/bin/env python

# Copyright (c) 2009 Twisted Matrix Laboratories.
# See LICENSE for details.

from twisted.spread import pb
from twisted.internet import reactor
from twisted.cred import credentials

def main():
    factory = pb.PBClientFactory()
    reactor.connectTCP("localhost", 8789, factory)
    def1 = factory.login(credentials.UsernamePassword("user1", "pass1"))
    def1.addCallback(connected)
    reactor.run()

def connected(perspective):
    print "got perspective1 ref:", perspective
    print "asking it to foo(13)"
    perspective.callRemote("foo", 13)

main()
-----------------------------------------------------------------------

How to rewrite the client to make it work with --auth=unix ?

Thanks,

Frans






From exarkun at twistedmatrix.com  Tue Jul  6 08:29:17 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 06 Jul 2010 12:29:17 -0000
Subject: [Twisted-Python] Newbie: using cred  strcred.AuthOptionMixin
In-Reply-To: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>
References: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>
Message-ID: <20100706122917.2549.408974701.divmod.xquotient.34@localhost.localdomain>

On 11:31 am, f.schneider at de-bleek.demon.nl wrote:
>Hi,
>
>I need a perspective broker with authentification and followed the 
>Twisted
>documentation on
>http://twistedmatrix.com/documents/current/core/howto/tap.html#auto4 to 
>get
>the twistd plugin to work. Now I want to make it work with the 
>/etc/shadow,
>but don't know how to get it to work.

The /etc/shadow cred plugin supports checking IUsernamePassword 
credentials.  PBServerFactory creates protocol instances that only know 
how to check IUsernameHashedPassword, IUsernameMD5Password, and 
IAnonymous credentials, though.  So no clients will be able to 
authenticate with this configuration.

You can add support for new credentials types to your PB server by 
creating the PBServerFactory with an IPBRoot provider that returns a 
root object (typically a Referenceable instance) with a "remote_login" 
method - or any other method that you make your PBClientFactory's login 
method call with credentials information.

The most straightforward thing to implement would be simple 
username/password authentication where the client sends both pieces of 
information to the server and the server verifies them.  This would only 
be secure if used over a secure transport such as SSL, of course.

It might also help to look at how authentication is implemented now, in 
twisted/spread/pb.py, in the _PortalRoot, _PortalWrapper, and 
_PortalAuthChallenger.

Jean-Paul


From jaroslaw.fedewicz at gmail.com  Tue Jul  6 08:41:14 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Tue, 6 Jul 2010 15:41:14 +0300
Subject: [Twisted-Python] Advice seeked on SMPP implementation
In-Reply-To: <14296B7F-B858-480F-A3C4-094E23E08291@twistedmatrix.com>
References: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
	<14296B7F-B858-480F-A3C4-094E23E08291@twistedmatrix.com>
Message-ID: <AANLkTimNL6h5eX5SbHow8hf3b6v1kMrOff8SJw32oBM8@mail.gmail.com>

Thanks a lot for reply,

however turns out that most SMPP appliances behave in a way rather
different than your average mailbox/IM sessions. So I will in fact
need to reinvent a wheel... This, however, has little to do with
actual SMPProtocol class. Bridging it with t.words or even t.mail
would cover only a tiny fraction of use cases (most of which are in
fact routing, throttling and charging for the messages sent in bulk,
and sending messages in bulk).

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?


From f.schneider at de-bleek.demon.nl  Tue Jul  6 08:51:52 2010
From: f.schneider at de-bleek.demon.nl (Schneider)
Date: Tue, 6 Jul 2010 14:51:52 +0200
Subject: [Twisted-Python] Newbie: using cred  strcred.AuthOptionMixin
In-Reply-To: <20100706122917.2549.408974701.divmod.xquotient.34@localhost.localdomain>
References: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>
	<20100706122917.2549.408974701.divmod.xquotient.34@localhost.localdomain>
Message-ID: <001001cb1d0a$01c1fd00$0545f700$@schneider@de-bleek.demon.nl>

Thanks for the reply.

For a newbie, that's a little too much. I'll stick to a simple
username/password file checking for the moment.

Frans



From jml at mumak.net  Tue Jul  6 09:09:47 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 6 Jul 2010 14:09:47 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
Message-ID: <AANLkTin9_MB2yPR9qBd1zOyuiLSueqd44hCR9Zu0gMKN@mail.gmail.com>

On Tue, Jul 6, 2010 at 4:08 AM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Jul 4, 2010, at 12:13 PM, Jonathan Lange wrote:
...
>> I've started this thread for any discussions about the way the release
>> was done and for the next release.
>
> I am generally very pleased with the way it went. ?It appears to have been
> the smoothest release thus far.
>

It's certainly the smoothest I've done.

I can't stress how amazingly helpful it is to have a detailed process
doc, and how important it is to see any glitches in the release as
bugs in the document.

>> Note that the Ubuntu feature freeze is August 12th, so we can expect
>> 10.1 to be the release that goes into Ubuntu 10.10.
>
> I would *like* to accelerate the schedule for this release if we can get
> certain important features in which missed the last release (documentation
> for endpoints, documentation for cancellation, endpoint string parsing,
> endpoint plugins, and some SSL issues that Jean-Paul and I discovered while
> working on these). ?It would be nice to establish the precedent that
> important features cause releases to happen *faster*, rather than causing
> them to be delayed.

I would like the same.

I was going to say that maybe those things are worth doing a 10.1.1
release for, but then I thought better. Let's keep point releases for
critical defects.

> But I certainly don't want to make any promises about getting it done by a
> particular advance date. ?I thought that you handled the delays and setbacks
> in this release fairly well - I can't see myself doing it substantially
> better - and so trying to accelerate the schedule may just result in the
> release actually occurring on time.
>

Making promises about time is difficult for unpaid volunteers. :)

>> As part of this release, there have been many improvements to the
>> release process document, see
>> http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
>> appreciate it if the document could be reviewed for clarity and
>> correctness.
>
> I will obviously be doing this in more detail as I move forward with the
> next release, but the recent edits are a big improvement to the clarity and
> completeness of the document.

Thanks.

It's basically only possible to test the document by doing a release.
My brain turns to cheese whenever I try to review it while not
actually doing something.

>
>> The biggest blockers to a swift release, from my perspective, were the
>> following:
...
>
> ?* delaying to wait for feedback on the release candidate
>
> This seems to me like a necessary delay. ?I wish that we could motivate the
> readers of this mailing list to be a bit more responsive, but I don't see
> how we could have been much louder about it :).
>

I think I should have announced the closing date for testing (as in,
if it's not in by June Xth, we aren't going to do know about it).

> ?* waiting for the review for the release ticket
> ?* waiting for someone else to solve the buildbot issues for Windows
>
> It looks like those issues were a one-time thing, at least.
>

The delay on waiting for the ticket to be reviewed happened last time also.

I don't really have any ideas as to what to do about it, but I'd like
to avoid the experience of sitting around for hours killing time at my
computer on a weekend waiting for a review that may never come.

jml


From screwtape at froup.com  Tue Jul  6 09:39:26 2010
From: screwtape at froup.com (Tim Allen)
Date: Tue, 6 Jul 2010 23:39:26 +1000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTin9_MB2yPR9qBd1zOyuiLSueqd44hCR9Zu0gMKN@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
	<AANLkTin9_MB2yPR9qBd1zOyuiLSueqd44hCR9Zu0gMKN@mail.gmail.com>
Message-ID: <20100706133926.GC15744@boombah.thristian.org>

On Tue, Jul 06, 2010 at 02:09:47PM +0100, Jonathan Lange wrote:
> The delay on waiting for the ticket to be reviewed happened last time also.
> 
> I don't really have any ideas as to what to do about it, but I'd like
> to avoid the experience of sitting around for hours killing time at my
> computer on a weekend waiting for a review that may never come.

This might be an argument for always having two people go through the
release process together: firstly, so that one can write the ticket and
the other can review it, and secondly to keep the release process Bus
Factor above 1:

    http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/python/_release.py#L29


From jml at mumak.net  Tue Jul  6 14:16:31 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 6 Jul 2010 20:16:31 +0200
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
Message-ID: <AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>

On Fri, Mar 5, 2010 at 7:33 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
...
> As far as I know, there aren't any tickets in Trac yet.? I was planning on
> making some (or asking others to do so) once a "master ticket" and a branch
> are created.
>

I have filed such a master ticket here:
  http://twistedmatrix.com/trac/ticket/4553

And created a milestone here:
  http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx

You should probably add any new tickets you file to the milestone.

Personally, I'd love to see the transition happen.

jml


From jml at mumak.net  Tue Jul  6 14:27:45 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 6 Jul 2010 20:27:45 +0200
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
Message-ID: <AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>

On Tue, Jul 6, 2010 at 8:16 PM, Jonathan Lange <jml at mumak.net> wrote:
> On Fri, Mar 5, 2010 at 7:33 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
> ...
>> As far as I know, there aren't any tickets in Trac yet.? I was planning on
>> making some (or asking others to do so) once a "master ticket" and a branch
>> are created.
>>
>
> I have filed such a master ticket here:
> ?http://twistedmatrix.com/trac/ticket/4553
>
> And created a milestone here:
> ?http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx
>
> You should probably add any new tickets you file to the milestone.
>

Hey and look a ticket was already filed (#4500) and
http://twistedsphinx.funsize.net/transition_plan.html is out of date
:)

jml


From m.beyer5 at gmx.de  Tue Jul  6 14:29:56 2010
From: m.beyer5 at gmx.de (m.beyer5 at gmx.de)
Date: Tue, 06 Jul 2010 20:29:56 +0200
Subject: [Twisted-Python] twisted 10.1 ppa
Message-ID: <20100706182956.151340@gmx.net>

Hi,

I'm anxious to try out the new 10.1 release.
Please push it to the ppa to make it easily accessable. 

Thanks :)

Marcus
-- 
GMX DSL: Internet-, Telefon- und Handy-Flat ab 19,99 EUR/mtl.  
Bis zu 150 EUR Startguthaben inklusive! http://portal.gmx.net/de/go/dsl

-- 
GMX DSL: Internet-, Telefon- und Handy-Flat ab 19,99 EUR/mtl.  
Bis zu 150 EUR Startguthaben inklusive! http://portal.gmx.net/de/go/dsl


From kevin.horn at gmail.com  Tue Jul  6 16:09:49 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 6 Jul 2010 15:09:49 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
Message-ID: <AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>

On Tue, Jul 6, 2010 at 1:27 PM, Jonathan Lange <jml at mumak.net> wrote:

> On Tue, Jul 6, 2010 at 8:16 PM, Jonathan Lange <jml at mumak.net> wrote:
> > On Fri, Mar 5, 2010 at 7:33 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
> > ...
> >> As far as I know, there aren't any tickets in Trac yet.  I was planning
> on
> >> making some (or asking others to do so) once a "master ticket" and a
> branch
> >> are created.
> >>
> >
> > I have filed such a master ticket here:
> >  http://twistedmatrix.com/trac/ticket/4553
> >
> > And created a milestone here:
> >  http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx
> >
> > You should probably add any new tickets you file to the milestone.
> >
>
> Hey and look a ticket was already filed (#4500) and
> http://twistedsphinx.funsize.net/transition_plan.html is out of date
> :)
>
> jml
>
>
>
Doh! Sorry about that... I didn't realize anyone was actually looking at it.
:)

So now that Jonathan has cut the 10.1 release, my plan is to start the
conversion process pretty soon (meaning sometime between tonight and
Wednesday).

Once I have the branch created and the basic conversion completed it would
be really great to have some help with the (yet to be created) "chunk
tickets".

We're getting really close...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100706/98f7b881/attachment.htm 

From ddwiggins at advpubtech.com  Wed Jul  7 19:44:32 2010
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 07 Jul 2010 16:44:32 -0700
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com>
References: <i0bfj2$iem$1@dough.gmane.org>	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com>
	<i0u0nh$fki$1@dough.gmane.org>
	<AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com>
Message-ID: <i133h0$rrv$1@dough.gmane.org>

  On 7/5/2010 10:53 PM, Hugh Emberson wrote:
> I got the order wrong. On further reading of the code, the COM object
> is created in response to a message from the Twisted thread, so at
> that point the event loop has iterated at least once.
>
> In my case the COM object is wrapped in a C++ wrapper that I don't
> have the source for, so I don't know exactly what happens in there.
> That C++ wrapper is then wrapped in a very thin python extension
> module which doesn't do anything interesting.

OK.  In my case, the "wrapper" and Python extension is Hammond's 
win32com Dispatch.

Question: to your knowledge, would it work to run the message pumping 
loop in a different thread from the one that creates and calls the COM 
object?  I think this would simplify things a bit.

-- Don Dwiggins Advanced Publishing Technology





From hugh.emberson at gmail.com  Wed Jul  7 23:53:32 2010
From: hugh.emberson at gmail.com (Hugh Emberson)
Date: Thu, 8 Jul 2010 13:53:32 +1000
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <i133h0$rrv$1@dough.gmane.org>
References: <i0bfj2$iem$1@dough.gmane.org>
	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com> 
	<i0u0nh$fki$1@dough.gmane.org>
	<AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com> 
	<i133h0$rrv$1@dough.gmane.org>
Message-ID: <AANLkTilTOVPrLeEepGPVtKR551yNSqmmNLVuWBslisDP@mail.gmail.com>

On Thu, Jul 8, 2010 at 9:44 AM, Don Dwiggins <ddwiggins at advpubtech.com> wrote:
> ?On 7/5/2010 10:53 PM, Hugh Emberson wrote:
>> I got the order wrong. On further reading of the code, the COM object
>> is created in response to a message from the Twisted thread, so at
>> that point the event loop has iterated at least once.
>>
>> In my case the COM object is wrapped in a C++ wrapper that I don't
>> have the source for, so I don't know exactly what happens in there.
>> That C++ wrapper is then wrapped in a very thin python extension
>> module which doesn't do anything interesting.
>
> OK. ?In my case, the "wrapper" and Python extension is Hammond's
> win32com Dispatch.
>
> Question: to your knowledge, would it work to run the message pumping
> loop in a different thread from the one that creates and calls the COM
> object? ?I think this would simplify things a bit.

You'd have to use a multi-threaded apartment model.  See the
'Processes, Threads, and Apartments' article in MSDN (
http://msdn.microsoft.com/en-us/library/ms693344%28v=VS.85%29.aspx ).
I guess it should work, but I've never tried it.  Please report back
if you try it.

Hugh


From jeandaniel.browne at gmail.com  Thu Jul  8 17:46:41 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Thu, 8 Jul 2010 23:46:41 +0200
Subject: [Twisted-Python] conceptually,
	why a deferred can't be used more than once?
Message-ID: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>

Dear list,

Concerning the concept of the deferred, why is it more useful to go
with a deferred which gets consumed and can only be fired once?

In my small script I realize I need to take special care that the
deferred has not been used, and that I must recreate explicitly a
deferred for each network request. In a parallel world someone might
have come up with a deferred concept which happily fires the callback
as many times as there data coming back from the server. Is it a dumb
idea?

Could the deferred design be part of the solution to the network
problem of two requests passing each other as each ends is not yet
aware that the other has just sent a request? Buggy networks nodes
would expect a response but get a request instead and go crazy...

Thanks for your help,


From terry at jon.es  Thu Jul  8 18:13:47 2010
From: terry at jon.es (Terry Jones)
Date: Fri, 9 Jul 2010 00:13:47 +0200
Subject: [Twisted-Python] conceptually,
 why a deferred can't be used more than once?
In-Reply-To: Your message at 23:46:41 on Thursday, 8 July 2010
References: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>
Message-ID: <19510.19867.604061.151177@jon.es>

Hi Jean

> Concerning the concept of the deferred, why is it more useful to go with
> a deferred which gets consumed and can only be fired once?

I can't speak for the Twisted devs, but my #1 reason would be that it's
just simpler that way (and Deferreds are already complex enough).

> In my small script I realize I need to take special care that the
> deferred has not been used, and that I must recreate explicitly a
> deferred for each network request. In a parallel world someone might have
> come up with a deferred concept which happily fires the callback as many
> times as there data coming back from the server. Is it a dumb idea?

No, I don't think so. I've done some thinking and playing along these
lines.  At one point I thought about a Deferred class that could be called
multiple times, but decided the code changes were too ugly.

Recently I did some experiments in which Deferreds could be re-used.  The
first observation was that the time taken to create Deferreds is really
negligible. That is, just re-using an already allocated object doesn't save
you much.

More interestingly, the adding of call/errback functions to a Deferred does
take significant time. I don't have the details of what I did handy, but
from memory I managed to get about a 2x speedup in a simple test when
Deferreds were having about 5 call/errbacks added to them.

I wrote a class that allowed you to reset a Deferred, leaving the
call/errback chain on it (snipping off other things that might have been
added to the chain), and there was also a DeferredPool class that could
hand you back an already prepared Deferred (or make you a new one if the
pool was empty). I.e., if you're in a situation where you're repeatedly
using Deferreds and putting exactly the same call/errbacks on them, you
might get a win by resetting and reusing already fired Deferred. On the
other hand, you'd also be a social pariah :-)

If anyone wants more details, I'm happy to dig up my experimental code. It
was fun and it seemed to work just fine.

> Could the deferred design be part of the solution to the network problem
> of two requests passing each other as each ends is not yet aware that the
> other has just sent a request? Buggy networks nodes would expect a
> response but get a request instead and go crazy...

OK, I'll leave that one for someone else...

T


From andrew at bemusement.org  Fri Jul  9 01:06:13 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Fri, 9 Jul 2010 15:06:13 +1000
Subject: [Twisted-Python] conceptually,
 why a deferred can't be used more than once?
In-Reply-To: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>
References: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>
Message-ID: <20100709050613.GL14856@steerpike.home.puzzling.org>

Jean Daniel wrote:
> Dear list,
> 
> Concerning the concept of the deferred, why is it more useful to go
> with a deferred which gets consumed and can only be fired once?

Because they are basically a way to provide asynchronous function calls.  In
plain Python a function call only returns (or raises) once.  Deferreds are no
different.

If you want a callback that can be invoked multiple times... well, just pass a
function to the thing generating callbacks.  For instance, Protocol objects have
a dataReceived method that may be called many times.

-Andrew.


From esteve at sindominio.net  Fri Jul  9 16:22:55 2010
From: esteve at sindominio.net (Esteve Fernandez)
Date: Fri, 9 Jul 2010 22:22:55 +0200 (CEST)
Subject: [Twisted-Python] twisted 10.1 ppa
In-Reply-To: <20100706182956.151340@gmx.net>
References: <20100706182956.151340@gmx.net>
Message-ID: <3b1f6738ff76e5d10d65e6a48cff7236.squirrel@webmail.sindominio.net>

Hi

sorry for the late response, I've been dealing with lots of work lately.

> I'm anxious to try out the new 10.1 release.
> Please push it to the ppa to make it easily accessable.

Ok, will do :-)

Cheers.



From jasonjwwilliams at gmail.com  Fri Jul  9 18:38:11 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 9 Jul 2010 16:38:11 -0600
Subject: [Twisted-Python] Congrats to ITA
Message-ID: <AANLkTinD8TBR4SUP76wkudTc2b-1up0MegPt3kpRP-f3@mail.gmail.com>

Just wanted to drop a note of congrats to ITA on their acquisition by
Google. It'll be great to see Twisted in play at the Googleplex for
travel.

-J


From clemesha at gmail.com  Fri Jul  9 18:52:18 2010
From: clemesha at gmail.com (Alex Clemesha)
Date: Fri, 9 Jul 2010 15:52:18 -0700
Subject: [Twisted-Python] Congrats to ITA
In-Reply-To: <AANLkTinD8TBR4SUP76wkudTc2b-1up0MegPt3kpRP-f3@mail.gmail.com>
References: <AANLkTinD8TBR4SUP76wkudTc2b-1up0MegPt3kpRP-f3@mail.gmail.com>
Message-ID: <AANLkTim8wpQm4AGtQTeK1KK3W37z1pjwGPiqbBe7lMEK@mail.gmail.com>

On Fri, Jul 9, 2010 at 3:38 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Just wanted to drop a note of congrats to ITA on their acquisition by
> Google. It'll be great to see Twisted in play at the Googleplex for
> travel.
>
Yeah, that is very cool.  Here's some discussion of ITA's Twisted usage:
http://itasoftware.com/careers/l_e_t_python.html
but can anyone provide more details than that about how they are using
Twisted?

-Alex



>
> -J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100709/ecdb6c88/attachment.htm 

From exarkun at twistedmatrix.com  Fri Jul  9 22:58:40 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 10 Jul 2010 02:58:40 -0000
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
Message-ID: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>

On 6 Jul, 08:09 pm, kevin.horn at gmail.com wrote:
>
>So now that Jonathan has cut the 10.1 release, my plan is to start the
>conversion process pretty soon (meaning sometime between tonight and
>Wednesday).
>
>Once I have the branch created and the basic conversion completed it 
>would
>be really great to have some help with the (yet to be created) "chunk
>tickets".
>
>We're getting really close...

At last I've got a buildbot set up generating the sphinx docs.  The 
build results can be seen here:

  http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/

(or with a different revision number for different revisions; the 
containing directory is browseable).

It would be great if everyone could go look around and report any 
problems you see.

Here's one from me.  On <http://buildbot.twistedmatrix.com/builds 
/sphinx-html-15615/projects/core/howto/pb-intro.html>, there are a bunch 
of API links which don't appear to have been rendered properly.

Jean-Paul


From glyph at twistedmatrix.com  Fri Jul  9 23:52:53 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 9 Jul 2010 23:52:53 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
Message-ID: <3245568B-1E77-45E2-95A7-B3690D6BE066@twistedmatrix.com>


On Jul 9, 2010, at 10:58 PM, exarkun at twistedmatrix.com wrote:

> At last I've got a buildbot set up generating the sphinx docs.  The 
> build results can be seen here:

Thanks for setting this up.

In the table of contents, both the "Core" and "Conch" outlines have a section called "Twisted Documentation".  I assume this is a placeholder for a directory that Lore didn't have a title for?

It strikes me as somewhat ironic that the table on <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/lore/howto/lore.html> came out rather nicely, though.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100709/61c7631f/attachment.htm 

From jaepyoung.kim at gmail.com  Sat Jul 10 01:40:11 2010
From: jaepyoung.kim at gmail.com (Jaepyoung Kim)
Date: Fri, 9 Jul 2010 22:40:11 -0700
Subject: [Twisted-Python] Uploading multiple files using ftpclient in Twisted
Message-ID: <AANLkTikscNy2IcWqm1hhv1-JG53xCGdj4bIJkbiJNAJi@mail.gmail.com>

Dear twisted-python expert,

I am build engineer and I need to upload binary to ftp server.
Binary files are about 30 and each file size is about 30M.

The current script is uploading using ftplib and it takes time about 1 hour.
I want to change this script to use twisted asynchronous function.
I thought if I use asynchronous function in twisted like following,
then file uploading will be executed in parallel.
But this was executed sequentially. Uploading second file starts afer
completing first file upload.
Could you check what was wrong in my source code? Or Am I wrong in
understanding asynchronous function?


        for file in fileList:
    	ftpClient.cwd("/tmp").addCallbacks(uploadFiles, fail,
callbackArgs=(file,ftpClient))

Thanks,
Jaepyoung



Full source code:

def filesucess(ab):
    print ab

def uploadFiles(result, file,ftpClient):
    d1,d2=ftpClient.storeFile('/tmp/'+file)
    d1.addCallback(cbStore, file).addErrback(fileTransferFail)
    d1.addCallback(filesucess)
    return d2



def fileTransferFail(failure):
    failure.printTraceback()
    reactor.stop()


def showBuffer(result, bufferProtocol):
    print 'Got data:'
    print bufferProtocol.buffer.getvalue()


class Options(usage.Options):
    optParameters = [['host', 'h', 'localhost'],
                     ['port', 'p', 21],
                     ['username', 'u', 'user'],
                     ['password', None, 'password'],
                     ['passive', None, 0],
                     ['debug', 'd', 1],
                    ]
def cbStore(consumer, filename):
    fs = FileSender()
    print filename+" cbstror"
    d = fs.beginFileTransfer(open(filename, 'r'), consumer)
    d.addCallback(lambda _: consumer.finish()).addErrback(fileTransferFail)
    return d

def run():
    # Get config
    config = Options()
    config.parseOptions()
    config.opts['port'] = int(config.opts['port'])
    config.opts['passive'] = int(config.opts['passive'])
    config.opts['debug'] = int(config.opts['debug'])

    # Create the client
    FTPClient.debug = config.opts['debug']
    creator = ClientCreator(reactor, FTPClient, config.opts['username'],
                            config.opts['password'],
passive=config.opts['passive'])
    print config.opts['password']
    creator.connectTCP(config.opts['host'],
config.opts['port'],timeout=10).addCallback(connectionMade).addErrback(connectionFailed)
    reactor.run()


def connectionFailed(f):
    print "Connection Failed:", f
    reactor.stop()

def connectionMade(ftpClient):
    # Get the current working directory
    ftpClient.pwd().addCallbacks(success, fail)
    fileList = os.listdir('./temp')
    for file in fileList:
    	ftpClient.cwd("/tmp").addCallbacks(uploadFiles, fail,
callbackArgs=(file,ftpClient))
    print "connectionmade"


From screwtape at froup.com  Sat Jul 10 03:40:59 2010
From: screwtape at froup.com (Tim Allen)
Date: Sat, 10 Jul 2010 17:40:59 +1000
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
Message-ID: <20100710074059.GA1816@boombah.thristian.org>

On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.com wrote:
> At last I've got a buildbot set up generating the sphinx docs.  The 
> build results can be seen here:
> 
>   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
> 
> (or with a different revision number for different revisions; the 
> containing directory is browseable).
> 
> It would be great if everyone could go look around and report any 
> problems you see.

    - In the Documentation Table Of Contents page, "Historical
      Documents" is listed between "Twisted Core" and "Twisted Lore"
      (presumably because of alphabetical order) but this seems
      a strange place for it. Could it be moved to the bottom, or an
      appendix, or something?
    - The bottom of every page has a "Download in other formats: Plain
      Text" link that doesn't work; presumably scooped up from the Trac
      templates. It should be removed (the Sphinx "Show Source" link is
      in the right-hand sidebar anyway).
    - When the breadcrumb navigation at the top of the page gets too
      long[1], it wraps to a second line, which looks kind of odd
      because the nice gradient background image loops. Changing the CSS
      background colour to be the same as the bottom of the gradient
      image would probably help.
    - Firefox's Error Console reports:
	- a bogus "%" on line 56 of twistedtrac.css,
	- bogus // comments on lines 559, 577, 588, 598 of trac.css (CSS
	  only allows /* winged comments */)
    - Chromium's error console reports:
	- A 404 error for "/trac/chrome/common/js/jquery.js"
	- A 404 error for "/trac/chrome/common/js/trac.js"
	- A 404 error for "/trac/chrome/common/js/search.js"
	- A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
    - The Twisted.Conch tutorial[1] has a number of things surrounded
      with double-backticks like "``Deferred``" or
      "``ClientTransport``". I'm not sure if that's deliberate or if
      it's markup gone horribly wrong.
    - On the same page, the text ":api:`
      twisted.internet.interface.Transport
      < twisted.internet.interface.Transport>`" appears, which also
      looks wrong.
    - The Conch code examples (as linked from the code examples page[2])
      are sent with a Python mime-type (which Firefox tries to download)
      while the .tac files are sent as text/html; this may be an
      artifact of the docs being hosted on the buildbot machine rather
      than Sphinx, but I think it would be nice if by default they were
      displayed in the browser, syntax-highlighted, with an option to
      download the original files (much like Trac does).
    - The Twisted Split FAQ[3] has more visible markup:
      "twisted.protocols:superscript::ref:`[1]
      <core-upgrades-2.0-split-protocols> `". The footnote target is
      kind of messed up, too.
    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
      still named twisted.*subproject*?", but it's not obvious whether
      the author was trying to use italics (in which case it's
      a lore2sphinx bug) or globbing (in which case it's not).
    - The Twisted Zope Interfaces FAQ[4] has inline Python source
      examples that don't appear to be marked up properly (although this
      is possibly a problem with the original Lore source). The answer
      to question "How can I update my own code?" is one example.
    - The Banana Protocol Specifications[5], under the heading
      "Examples" mentions "the type bytes are marked in bold" but
      actually they're surrounded by double-asterisks.
    - The Twisted Coding Standard[6], mentions "the complete test
      suite in trunk at HEAD" - and "trunk at HEAD" is converted into
      a mailto: link.
    - Links followed by punctuation seem to leave a space between the
      link text and the punctuation. See "test-driven ." and "Test
      Standard ." in the Twisted Coding Standard[6], but I've observed
      the same problem on multiple pages.
    - The Twisted Coding Standard[6] mentions "If you modify, or write
      a new, HOWTO, please read the Lore documentation to learn how to
      format the docs"; if there's not already a follow-up ticket for
      the lore-sphinx conversion titled "Remove references to Lore from
      Twisted's non-Lore-related documentation", there should be, and
      this should be in it.
    - The Twisted Coding Standard[6], under the heading "Modules" says
      "Use this template:" and then
      "../listings/new_module_template.py".. and *then* includes the
      content of said template inline. Presumably it should either link
      to it or include it, but not both.
    - The HTML Documentation Standard for Twisted[7] has more visible
      markup: in the list of allowable markup, most tags are rendered
      properly except for "``<tr>``".
    - It seems that the HTML Documentation Standard for Twisted[7] is
      actually "how to write Lore documentation", despite the name.
      Maybe this file should be scheduled for the post-transition purge,
      or at least moved to the Lore documentation.
    - Working from Twisted's Subversion Repository[8] has visible markup
      that looks like an attempt to link "the Subversion homepage" under
      the heading "Checkout".
    - Under the heading "Alternate tree names", the document uses
      RIGHT DOUBLE QUOTATION MARK instead of LEFT DOUBLE QUOTATION MARK
      in 'directory other than?Twisted? .' Looks like a problem in the
      original markup. Also note the space between the LEFT DOUBLE
      QUOTATION MARK and the punctuation.
    - The same document has more broken links under the "Combinator"
      heading.
    - The same document has broken markup under "Running tests":
      "``twisted/protocols/imap4.py``" and later
      "``twisted.mail.test.test_imap``".
    - The same document has broken markup under "Building docs":
      "``doc/development/policy/svn-dev.xhtml`` ," (also trailing space
      before punctuation) and
      "``doc/development/policy/svn-dev.html`` :" (again).
    - The same document has a broken link under "Committing and
      Post-commit Hooks", attempting to link the text
      "trac-post-commit-hook".
    - The same document has broken markup under "Emacs":
      "``emacs/twisted-dev.el``".
    - The same document has a broken link under "Building Debian
      packages", attempting to link th text "stdeb".

That's probably enough feedback to be getting on with; most of the
problems appear to be from normalising "\n" in Lore docs to "" instead
of " ", and also from adding whitespace after things. It is generally
looking pretty great, though!

Some extra thoughts:
    - The ReviewingDocumentation wiki page has a section called "Editing
      man pages" that describes how to turn the nicely-formatted
      manpages into Lore input files. Would it be possible to do that as
      part of the lore2sphinx run, have the manpages included in the
      Sphinx documentation, and from then on generate the manpages from
      the .rst files instead of the other way around?

[1]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    conch/howto/conch_client.html>
[2]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    conch/examples/index.html>
[3]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/upgrades/2.0/split.html>
[4]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/upgrades/2.0/components.html>
[5]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/specifications/banana.html>
[6]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/development/policy/coding-standard.html>
[7]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/development/policy/doc-standard.html>
[8]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/development/policy/svn-dev.html>


From kevin.horn at gmail.com  Sat Jul 10 15:34:30 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 14:34:30 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
Message-ID: <AANLkTiljOwhA6MQ1375cEf22IB7vBI2syWmS12opQDR0@mail.gmail.com>

On Fri, Jul 9, 2010 at 9:58 PM, <exarkun at twistedmatrix.com> wrote:

> On 6 Jul, 08:09 pm, kevin.horn at gmail.com wrote:
> >
> >So now that Jonathan has cut the 10.1 release, my plan is to start the
> >conversion process pretty soon (meaning sometime between tonight and
> >Wednesday).
> >
> >Once I have the branch created and the basic conversion completed it
> >would
> >be really great to have some help with the (yet to be created) "chunk
> >tickets".
> >
> >We're getting really close...
>
> At last I've got a buildbot set up generating the sphinx docs.  The
> build results can be seen here:
>
>  http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
>
> (or with a different revision number for different revisions; the
> containing directory is browseable).
>

cool, good work.


>
> It would be great if everyone could go look around and report any
> problems you see.
>
> Here's one from me.  On <http://buildbot.twistedmatrix.com/builds
> /sphinx-html-15615/projects/core/howto/pb-intro.html>, there are a bunch
> of API links which don't appear to have been rendered properly.
>
>
Ah, welcome to the joys of "nested inline markup", which xml/xhtml does fine
and RestructuredText doesn't.

I expect this issue and extra or missing space characters are the two main
things which will have to be fixed manually.


Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/1730878e/attachment.htm 

From kevin.horn at gmail.com  Sat Jul 10 15:38:38 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 14:38:38 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <3245568B-1E77-45E2-95A7-B3690D6BE066@twistedmatrix.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<3245568B-1E77-45E2-95A7-B3690D6BE066@twistedmatrix.com>
Message-ID: <AANLkTimhRIfuU3a4kwpbCWHtJ9Q_a0aR8RIfJPkOgYgh@mail.gmail.com>

On Fri, Jul 9, 2010 at 10:52 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jul 9, 2010, at 10:58 PM, exarkun at twistedmatrix.com wrote:
>
> At last I've got a buildbot set up generating the sphinx docs.  The
> build results can be seen here:
>
>
> Thanks for setting this up.
>
> In the table of contents, both the "Core" and "Conch" outlines have a
> section called "Twisted Documentation".  I assume this is a placeholder for
> a directory that Lore didn't have a title for?
>

Nope, that's what the titles of those documents are in the source
documents.  I presume the Conch one is supposed to say something else.


>
> It strikes me as somewhat ironic that the table on <
> http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/lore/howto/lore.html>
> came out rather nicely, though.
>
>
>
Yes, I spent probably too much time on that table, but it sure was handy.  I
spent a lot of time during this process referring to it, and it was much
nicer on the eyes that the old one :).

I had originally intended to just convert the tables by hand (I think
there's only two), but I found some code on the net that did almost what I
wanted and adapted it, so it actually wasn't too onerous.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/9531b0d7/attachment.htm 

From kevin.horn at gmail.com  Sat Jul 10 16:17:03 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 15:17:03 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710074059.GA1816@boombah.thristian.org>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
Message-ID: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>

On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:

> On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.com wrote:
> > At last I've got a buildbot set up generating the sphinx docs.  The
> > build results can be seen here:
> >
> >   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
> >
> > (or with a different revision number for different revisions; the
> > containing directory is browseable).
> >
> > It would be great if everyone could go look around and report any
> > problems you see.
>
>     - In the Documentation Table Of Contents page, "Historical
>      Documents" is listed between "Twisted Core" and "Twisted Lore"
>      (presumably because of alphabetical order) but this seems
>      a strange place for it. Could it be moved to the bottom, or an
>      appendix, or something?
>

They're in alphabetical order.  The TOC page is generated dynamically by
looking at the file structure of the docs and that's the order file-globbing
lists them in.  We can fix this manually post-conversion.


>    - The bottom of every page has a "Download in other formats: Plain
>      Text" link that doesn't work; presumably scooped up from the Trac
>      templates. It should be removed (the Sphinx "Show Source" link is
>      in the right-hand sidebar anyway).
>

Yeah, this is a flaw in the trac theme.  Looks like I forgot to remove it.


>    - When the breadcrumb navigation at the top of the page gets too
>      long[1], it wraps to a second line, which looks kind of odd
>      because the nice gradient background image loops. Changing the CSS
>      background colour to be the same as the bottom of the gradient
>      image would probably help.
>    - Firefox's Error Console reports:
>        - a bogus "%" on line 56 of twistedtrac.css,
>        - bogus // comments on lines 559, 577, 588, 598 of trac.css (CSS
>          only allows /* winged comments */)
>    - Chromium's error console reports:
>        - A 404 error for "/trac/chrome/common/js/jquery.js"
>        - A 404 error for "/trac/chrome/common/js/trac.js"
>        - A 404 error for "/trac/chrome/common/js/search.js"
>        - A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
>

Ah! This explains why the search quit working.  Not sure why these files are
missing,  Probably something to do with the custom theme.


>    - The Twisted.Conch tutorial[1] has a number of things surrounded
>      with double-backticks like "``Deferred``" or
>      "``ClientTransport``". I'm not sure if that's deliberate or if
>      it's markup gone horribly wrong.
>

This is probably due to missing spaces before/after the markup in the rst
source.  One of those things that will need to be fixed manually.  I spent a
lot of time trying to fix this in lore2sphinx and when you fix it in one
place, it breaks somewhere else.  Right now the automated conversion is
about as good as it is likely to get with a sane amount of effort.


>    - On the same page, the text ":api:`
>      twisted.internet.interface.Transport
>      < twisted.internet.interface.Transport>`" appears, which also
>      looks wrong.
>

DItto.


>    - The Conch code examples (as linked from the code examples page[2])
>      are sent with a Python mime-type (which Firefox tries to download)
>      while the .tac files are sent as text/html; this may be an
>      artifact of the docs being hosted on the buildbot machine rather
>      than Sphinx, but I think it would be nice if by default they were
>      displayed in the browser, syntax-highlighted, with an option to
>      download the original files (much like Trac does).
>

This is a web server configuration thing.  The files are actually .py and
.tac files (and probably need to remain so, if we ever want to get automated
example code tests going).

Maybe we can do some web server magic to get them nicely displayed in the
browser, but I see that as a secondary issue for the moment.  Anyone should
feel free to give a shout if they disagree, though.


>    - The Twisted Split FAQ[3] has more visible markup:
>      "twisted.protocols:superscript::ref:`[1]
>      <core-upgrades-2.0-split-protocols> `". The footnote target is
>      kind of messed up, too.
>

Another spacing issue.


>    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
>      still named twisted.*subproject*?", but it's not obvious whether
>      the author was trying to use italics (in which case it's
>      a lore2sphinx bug) or globbing (in which case it's not).
>

Pretty sure it was supposed to be italics.  Spacing again.  There are ways
to make this display properly, but it'll need to be done manually.

Also, this is pretty outdated stuff...we might consider just removing some
of this.  Or perhaps moving some of it into a more obvious place.


>    - The Twisted Zope Interfaces FAQ[4] has inline Python source
>      examples that don't appear to be marked up properly (although this
>      is possibly a problem with the original Lore source). The answer
>      to question "How can I update my own code?" is one example.
>

The code bits are marked up this way because of the attributes used on the
elements in the Lore source.  We can change it easily


>    - The Banana Protocol Specifications[5], under the heading
>      "Examples" mentions "the type bytes are marked in bold" but
>      actually they're surrounded by double-asterisks.
>

Double asterisks are the markup for bold in rst.  Another spacing and/or
nested inline markup issue.


>    - The Twisted Coding Standard[6], mentions "the complete test
>      suite in trunk at HEAD" - and "trunk at HEAD" is converted into
>      a mailto: link.
>

Huh.  I guess that's Sphinx trying to be helpful.  Good catch.  That'll
definitely need fixing.


>    - Links followed by punctuation seem to leave a space between the
>      link text and the punctuation. See "test-driven ." and "Test
>      Standard ." in the Twisted Coding Standard[6], but I've observed
>      the same problem on multiple pages.
>

This is the spacing issue again, but in reverse.  It's relatively easy for
lore2sphinx to detect links and add a space at the end, so that's what it
does.  There's ways to get around this and get rid of the space by escaping
it, but it rapidly get mind-boggling, so this is another thing that will
need manual fixing.


>    - The Twisted Coding Standard[6] mentions "If you modify, or write
>      a new, HOWTO, please read the Lore documentation to learn how to
>      format the docs"; if there's not already a follow-up ticket for
>      the lore-sphinx conversion titled "Remove references to Lore from
>      Twisted's non-Lore-related documentation", there should be, and
>      this should be in it.
>

There isn't, but there will be.  See the transition plan here:
http://twistedsphinx.funsize.net/transition_plan.html


>    - The Twisted Coding Standard[6], under the heading "Modules" says
>      "Use this template:" and then
>      "../listings/new_module_template.py".. and *then* includes the
>      content of said template inline. Presumably it should either link
>      to it or include it, but not both.
>

It actually is including an external file there (i.e. the contents are not
in the rst source, but in the
"../listings/new_module_template.py" file.  What looks like a link there is
actually a sort of heading to
let the reader see where it's coming from.  I think this can probably be
made clearer with some theme/css changes.


>    - The HTML Documentation Standard for Twisted[7] has more visible
>      markup: in the list of allowable markup, most tags are rendered
>      properly except for "``<tr>``".
>

Missing space after preceding comma.  Another manual fix.


>    - It seems that the HTML Documentation Standard for Twisted[7] is
>      actually "how to write Lore documentation", despite the name.
>      Maybe this file should be scheduled for the post-transition purge,
>      or at least moved to the Lore documentation.
>

It pretty much is "how to write Lore documentation".  I think it should
probably be moved into the Lore docs, and replaced with the
(yet to be written, but again see the transition plan) planned Twisted
Documentation Guide.


>    - Working from Twisted's Subversion Repository[8] has visible markup
>      that looks like an attempt to link "the Subversion homepage" under
>      the heading "Checkout".
>

Missing preceding space again.


>    - Under the heading "Alternate tree names", the document uses
>      RIGHT DOUBLE QUOTATION MARK instead of LEFT DOUBLE QUOTATION MARK
>      in 'directory other than?Twisted? .' Looks like a problem in the
>      original markup. Also note the space between the LEFT DOUBLE
>      QUOTATION MARK and the punctuation.
>

The missing preceding space actually is what's causing the quotes to be
wrong.


>    - The same document has more broken links under the "Combinator"
>      heading.
>

Missing preceding spaces again.


>    - The same document has broken markup under "Running tests":
>      "``twisted/protocols/imap4.py``" and later
>      "``twisted.mail.test.test_imap``".
>    - The same document has broken markup under "Building docs":
>      "``doc/development/policy/svn-dev.xhtml`` ," (also trailing space
>      before punctuation) and
>      "``doc/development/policy/svn-dev.html`` :" (again).
>    - The same document has a broken link under "Committing and
>      Post-commit Hooks", attempting to link the text
>      "trac-post-commit-hook".
>    - The same document has broken markup under "Emacs":
>      "``emacs/twisted-dev.el``".
>    - The same document has a broken link under "Building Debian
>      packages", attempting to link th text "stdeb".
>

All bad spacing issues.


>
> That's probably enough feedback to be getting on with; most of the
> problems appear to be from normalising "\n" in Lore docs to "" instead
> of " ", and also from adding whitespace after things. It is generally
> looking pretty great, though!
>

Yeah, that's pretty much it.  As I said above though, if you "fix" it one
place, it breaks in another, so I tried to balance things in such a way that
the least broken markup appears in the output.

Almost all of the remaining problems will need to be fixed manually.


>
> Some extra thoughts:
>    - The ReviewingDocumentation wiki page has a section called "Editing
>      man pages" that describes how to turn the nicely-formatted
>      manpages into Lore input files. Would it be possible to do that as
>      part of the lore2sphinx run, have the manpages included in the
>      Sphinx documentation, and from then on generate the manpages from
>      the .rst files instead of the other way around?
>

Sphinx does have a man page builder now, but I don't think it existed when I
was writing lore2sphinx, so I haven't really considered this.

So you're suggesting convert the man pages to Lore format -> use lore2sphinx
to convert the resulting Lore docs to rst -> build as part of the Sphinx
process, yes?

I think this is a worthwhile idea, but I'd prefer to leave it until after
the main docs are converted (i.e. under a separate ticket).  lore2sphinx can
be used on just the man files later on if need be, though it would take a
little mucking around.


>
> [1]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    conch/howto/conch_client.html>
> [2]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    conch/examples/index.html>
> [3]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/upgrades/2.0/split.html>
> [4]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/upgrades/2.0/components.html>
> [5]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/specifications/banana.html>
> [6]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/development/policy/coding-standard.html>
> [7]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/development/policy/doc-standard.html>
> [8]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/development/policy/svn-dev.html>
>
>
Thanks for the fantastic (and nicely detailed) feedback, Tim!

Please take a look at the transition plan.  In a few days (maybe sooner), I
should have the base docs in a branch, and the "chunk tickets" referenced in
the transition plan created.  This is pretty much _exactly_ what I'd like to
see in those "chunk tickets".  Hopefully you haven't already burned up your
brain staring at markup issues. :) We could really use this kind of help
throughout the process.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/19c735a6/attachment-0001.htm 

From db3l.net at gmail.com  Sat Jul 10 18:56:20 2010
From: db3l.net at gmail.com (David Bolen)
Date: Sat, 10 Jul 2010 18:56:20 -0400
Subject: [Twisted-Python] Uploading multiple files using ftpclient in
	Twisted
References: <AANLkTikscNy2IcWqm1hhv1-JG53xCGdj4bIJkbiJNAJi@mail.gmail.com>
Message-ID: <m2iq4n3q0b.fsf@valheru.db3l.homeip.net>

Jaepyoung Kim <jaepyoung.kim at gmail.com> writes:

> The current script is uploading using ftplib and it takes time about 1 hour.
> I want to change this script to use twisted asynchronous function.
> I thought if I use asynchronous function in twisted like following,
> then file uploading will be executed in parallel.
> But this was executed sequentially. Uploading second file starts afer
> completing first file upload.
> Could you check what was wrong in my source code? Or Am I wrong in
> understanding asynchronous function?

I'm pretty sure you'll need separate connections to an FTP server to
achieve parallel transfers, regardless of how you write the client.
At least as long as you stick with regular get/put commands.  So while
using a twisted approach can enable you to manage those parallel
streams pretty easily, you'll need distinct connections for each
transfer and manage which file transfer is using which connection in
your code.

Essentially a store or fetch FTP operation initiates a transfer over
the dedicated data channel, so that channel is in use until the
transfer completes or is aborted.  The data on the data channel is not
encapsulated nor multiplexed in any way so you can only have a single
transfer using the data channel at once.  Passive transfers do create
new data channels, but the FTP protocol specifically says a server
needs to stop accepting connections and shut down any open connections
on old passive ports once a new passive request is received, so you're
still limited to one at a time.

Thus, your callbacks for each store operation, will only file when the
store has completed, and you'll only be able to initiate the next
store request at that point since its only then that the channel to
the server is free to transfer another file.

I believe some servers have implemented custom extensions to implement
parallel operations at a finer grained level than a file, but I don't
think they're commonly implemented in ftp libraries (nor in servers
commonly in use).

What I'd suggest, in terms of your code, is to instantiate a pool of
FTPClients to the same server, initiate transfers on them in parallel
and then as one completes, use it to pick up the next file.  You'll
need to handle the distribution of files amongst the pool of clients
yourself.

Is there any particular reason you expect this to yield an improvement
in overall time?  Unless you're transferring very large numbers of
files that are very small compared to the bandwidth*latency of your
network connection to the server (which doesn't sound like the case
here), the overhead of the protocol itself will be quite small, and
your bottleneck is either going to be the network throughput, or the
slower of the disk I/O on either end.

Neither of those bottlenecks will likely be improved by doing multiple
transfers in parallel, and in fact your total time can worsen if the
prior bottleneck was the disk I/O since you'll have competing
operations for the disks as opposed to simple sequential access.  Or
you may find that you get very marginal benefit with the expense of
much more complicated to maintain code.

You might grab an existing ftp client that supports parallel transfers
and use it to run some tests before trying to re-implement things
yourself.  There should be several options, but for example, I believe
FileZilla supports it under Windows, or lftp under Linux.

-- David



From jaepyoung.kim at gmail.com  Sat Jul 10 20:26:19 2010
From: jaepyoung.kim at gmail.com (Jaepyoung Kim)
Date: Sat, 10 Jul 2010 17:26:19 -0700
Subject: [Twisted-Python] Uploading multiple files using ftpclient in
	Twisted
In-Reply-To: <m2iq4n3q0b.fsf@valheru.db3l.homeip.net>
References: <AANLkTikscNy2IcWqm1hhv1-JG53xCGdj4bIJkbiJNAJi@mail.gmail.com>
	<m2iq4n3q0b.fsf@valheru.db3l.homeip.net>
Message-ID: <AANLkTilOG41W6-7kRmDLNo_xTFeAqsbGm4jzaYlgLTAU@mail.gmail.com>

David,

Great thanks for your perfect answer.

I think Disk IO will not be a bottleneck.
There are four servers which share disks.
I executed the scrpit in seperate servers and this reduced the upload
speed a lot.
After I saw this performance improvement, I started changing script.

I will try your suggestion..

Thanks,
Jaepyoung


On Sat, Jul 10, 2010 at 3:56 PM, David Bolen <db3l.net at gmail.com> wrote:
> Jaepyoung Kim <jaepyoung.kim at gmail.com> writes:
>
>> The current script is uploading using ftplib and it takes time about 1 hour.
>> I want to change this script to use twisted asynchronous function.
>> I thought if I use asynchronous function in twisted like following,
>> then file uploading will be executed in parallel.
>> But this was executed sequentially. Uploading second file starts afer
>> completing first file upload.
>> Could you check what was wrong in my source code? Or Am I wrong in
>> understanding asynchronous function?
>
> I'm pretty sure you'll need separate connections to an FTP server to
> achieve parallel transfers, regardless of how you write the client.
> At least as long as you stick with regular get/put commands. ?So while
> using a twisted approach can enable you to manage those parallel
> streams pretty easily, you'll need distinct connections for each
> transfer and manage which file transfer is using which connection in
> your code.
>
> Essentially a store or fetch FTP operation initiates a transfer over
> the dedicated data channel, so that channel is in use until the
> transfer completes or is aborted. ?The data on the data channel is not
> encapsulated nor multiplexed in any way so you can only have a single
> transfer using the data channel at once. ?Passive transfers do create
> new data channels, but the FTP protocol specifically says a server
> needs to stop accepting connections and shut down any open connections
> on old passive ports once a new passive request is received, so you're
> still limited to one at a time.
>
> Thus, your callbacks for each store operation, will only file when the
> store has completed, and you'll only be able to initiate the next
> store request at that point since its only then that the channel to
> the server is free to transfer another file.
>
> I believe some servers have implemented custom extensions to implement
> parallel operations at a finer grained level than a file, but I don't
> think they're commonly implemented in ftp libraries (nor in servers
> commonly in use).
>
> What I'd suggest, in terms of your code, is to instantiate a pool of
> FTPClients to the same server, initiate transfers on them in parallel
> and then as one completes, use it to pick up the next file. ?You'll
> need to handle the distribution of files amongst the pool of clients
> yourself.
>
> Is there any particular reason you expect this to yield an improvement
> in overall time? ?Unless you're transferring very large numbers of
> files that are very small compared to the bandwidth*latency of your
> network connection to the server (which doesn't sound like the case
> here), the overhead of the protocol itself will be quite small, and
> your bottleneck is either going to be the network throughput, or the
> slower of the disk I/O on either end.
>
> Neither of those bottlenecks will likely be improved by doing multiple
> transfers in parallel, and in fact your total time can worsen if the
> prior bottleneck was the disk I/O since you'll have competing
> operations for the disks as opposed to simple sequential access. ?Or
> you may find that you get very marginal benefit with the expense of
> much more complicated to maintain code.
>
> You might grab an existing ftp client that supports parallel transfers
> and use it to run some tests before trying to re-implement things
> yourself. ?There should be several options, but for example, I believe
> FileZilla supports it under Windows, or lftp under Linux.
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jaepyoung Kim
(Cellular phone) 1-310-848-7774


From screwtape at froup.com  Sat Jul 10 21:19:44 2010
From: screwtape at froup.com (Tim Allen)
Date: Sun, 11 Jul 2010 11:19:44 +1000
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
Message-ID: <20100711011944.GB1816@boombah.thristian.org>

On Sat, Jul 10, 2010 at 03:17:03PM -0500, Kevin Horn wrote:
> On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
> > That's probably enough feedback to be getting on with; most of the
> > problems appear to be from normalising "\n" in Lore docs to "" instead
> > of " ", and also from adding whitespace after things. It is generally
> > looking pretty great, though!
> 
> Yeah, that's pretty much it.  As I said above though, if you "fix" it one
> place, it breaks in another, so I tried to balance things in such a way that
> the least broken markup appears in the output.
> 
> Almost all of the remaining problems will need to be fixed manually.

It sounds like a lot of the manual fixes will involve rewriting
things so that inline markup does not appear at the end of a sentence
next to the punctuation. That seems like a recipe for awkward prose. :/

> > Some extra thoughts:
> >    - The ReviewingDocumentation wiki page has a section called "Editing
> >      man pages" that describes how to turn the nicely-formatted
> >      manpages into Lore input files. Would it be possible to do that as
> >      part of the lore2sphinx run, have the manpages included in the
> >      Sphinx documentation, and from then on generate the manpages from
> >      the .rst files instead of the other way around?
> 
> Sphinx does have a man page builder now, but I don't think it existed when I
> was writing lore2sphinx, so I haven't really considered this.
> 
> So you're suggesting convert the man pages to Lore format -> use lore2sphinx
> to convert the resulting Lore docs to rst -> build as part of the Sphinx
> process, yes?

Yes. At least for trial, there's a bunch of stuff that's *only* in the
man page and not the online docs, and a bunch of stuff that's *only* in
the online docs and not the man page (and stuff that's *only* in the
core/development/policy section of the docs, and not in the Trial
section...). Hopefully if they're all part of the same doc system, it'll
be easier to have everything in the one place and easy to find.

> I think this is a worthwhile idea, but I'd prefer to leave it until after
> the main docs are converted (i.e. under a separate ticket).  lore2sphinx can
> be used on just the man files later on if need be, though it would take a
> little mucking around.

Something to add to the "open ticket for: anything else???" section of
your transition plan, then? :)

> Thanks for the fantastic (and nicely detailed) feedback, Tim!
> 
> Please take a look at the transition plan.  In a few days (maybe sooner), I
> should have the base docs in a branch, and the "chunk tickets" referenced in
> the transition plan created.  This is pretty much _exactly_ what I'd like to
> see in those "chunk tickets".

Having done pretty much the first two of your suggested "chunks" in my
previous mail, they look to be about the right size.

> Hopefully you haven't already burned up your brain staring at markup
> issues. :) We could really use this kind of help throughout the
> process.

I'm looking forward to learning a little more about Sphinx and ReST. :)


From glyph at twistedmatrix.com  Sat Jul 10 22:21:59 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 10 Jul 2010 22:21:59 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
Message-ID: <2DB04741-C874-4EA5-85AE-A3E9DE49E8DA@twistedmatrix.com>


On Jul 10, 2010, at 4:17 PM, Kevin Horn wrote:

> On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
> On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.com wrote:
> > At last I've got a buildbot set up generating the sphinx docs.  The
> > build results can be seen here:
> >
> >   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
> >
> > (or with a different revision number for different revisions; the
> > containing directory is browseable).
> >
> > It would be great if everyone could go look around and report any
> > problems you see.
> 
>    - In the Documentation Table Of Contents page, "Historical
>      Documents" is listed between "Twisted Core" and "Twisted Lore"
>      (presumably because of alphabetical order) but this seems
>      a strange place for it. Could it be moved to the bottom, or an
>      appendix, or something?
> 
> They're in alphabetical order.  The TOC page is generated dynamically by looking at the file structure of the docs and that's the order file-globbing lists them in.  We can fix this manually post-conversion.

It's worth noting that even in this peculiar order, the existence of this document is an upgrade.  It did not previously exist.  Or, rather, it did, but I think the analogous page in the current system is this: <http://twistedmatrix.com/documents/10.1.0/>, which is certainly not as nice.

(If you were expecting to see something like <http://twistedmatrix.com/documents/10.1.0/core/howto/index.html>, that's here: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/core/howto/index.html>.)

>  
>    - The bottom of every page has a "Download in other formats: Plain
>      Text" link that doesn't work; presumably scooped up from the Trac
>      templates. It should be removed (the Sphinx "Show Source" link is
>      in the right-hand sidebar anyway).
> 
> Yeah, this is a flaw in the trac theme.  Looks like I forgot to remove it.

This seems like a simple fix - if you could do it quickly so we can see if fixes get propagated to the buildbot, that would be great (so we can get the build logistics out of the way for future, more complex issues).

>    - When the breadcrumb navigation at the top of the page gets too
>      long[1], it wraps to a second line, which looks kind of odd
>      because the nice gradient background image loops. Changing the CSS
>      background colour to be the same as the bottom of the gradient
>      image would probably help.

The breadcrumb names are also kinda weird, and very wordy.

<http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/conch/howto/conch_client.html> says "Twisted >> Twisted Documentation Table of Contents >> Twisted Conch Documentation >> Twisted Documentation".  This is altogether too many "Twisted"s ;-).

It should really be more like

'Twisted >> Documentation >> Conch >> "Writing a client with Twisted.Conch"'

Again: this is a new feature, so I'm not too concerned if we defer fixing this; go ahead if it's easy, but if it's hard, it's still better than the status quo, which is to say, not having any navigation at all.

>    - Chromium's error console reports:
>        - A 404 error for "/trac/chrome/common/js/jquery.js"
>        - A 404 error for "/trac/chrome/common/js/trac.js"
>        - A 404 error for "/trac/chrome/common/js/search.js"
>        - A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
> 
> Ah! This explains why the search quit working.  Not sure why these files are missing,  Probably something to do with the custom theme.

They're missing because this code is hosted on buildbot.twistedmatrix.com, not twistedmatrix.com.  It's probably most expedient to just make those links include the netloc for now.

>    - The Twisted.Conch tutorial[1] has a number of things surrounded
>      with double-backticks like "``Deferred``" or
>      "``ClientTransport``". I'm not sure if that's deliberate or if
>      it's markup gone horribly wrong.
> 
> This is probably due to missing spaces before/after the markup in the rst source.  One of those things that will need to be fixed manually.  I spent a lot of time trying to fix this in lore2sphinx and when you fix it in one place, it breaks somewhere else.  Right now the automated conversion is about as good as it is likely to get with a sane amount of effort.

Pardon my ignorance, but why not just always add the spaces when generating this type of markup?  It doesn't seem like it should be that hard; docutils claims to be able to treat ReST as structured, right?  Isn't there an API to construct some objects that will do the quoting for you?

>    - The Conch code examples (as linked from the code examples page[2])
>      are sent with a Python mime-type (which Firefox tries to download)
>      while the .tac files are sent as text/html; this may be an
>      artifact of the docs being hosted on the buildbot machine rather
>      than Sphinx, but I think it would be nice if by default they were
>      displayed in the browser, syntax-highlighted, with an option to
>      download the original files (much like Trac does).
> 
> This is a web server configuration thing.  The files are actually .py and .tac files (and probably need to remain so, if we ever want to get automated example code tests going).

> Maybe we can do some web server magic to get them nicely displayed in the browser, but I see that as a secondary issue for the moment.  Anyone should feel free to give a shout if they disagree, though.

I agree completely.

We should fix it so the .tac files are text/x-python as well, so your browser can DTRT with them; when I click on an example, I often want to download it.

Perhaps the lore markup should be adjusted to format them inline as well, though?

>    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
>      still named twisted.*subproject*?", but it's not obvious whether
>      the author was trying to use italics (in which case it's
>      a lore2sphinx bug) or globbing (in which case it's not).
> 
> Pretty sure it was supposed to be italics.  Spacing again.  There are ways to make this display properly, but it'll need to be done manually.
> 
> Also, this is pretty outdated stuff...we might consider just removing some of this.  Or perhaps moving some of it into a more obvious place.

Let's try to have those discussions in separate threads so they can be resolved individually.  I don't have an opinion at the moment and would not like to develop one in the middle of a monster thread about the whole conversion :).
 
>    - The Twisted Coding Standard[6] mentions "If you modify, or write
>      a new, HOWTO, please read the Lore documentation to learn how to
>      format the docs"; if there's not already a follow-up ticket for
>      the lore-sphinx conversion titled "Remove references to Lore from
>      Twisted's non-Lore-related documentation", there should be, and
>      this should be in it.
> 
> There isn't, but there will be.  See the transition plan here: http://twistedsphinx.funsize.net/transition_plan.html

FWIW, you should really start linking to the ticket <http://twistedmatrix.com/trac/ticket/4500>, rather than the "transition plan" page, so that folks can comment, link to other tickets, bookmark it for review when it comes up, etc.

> [...] All bad spacing issues. [...] Almost all of the remaining problems will need to be fixed manually.

It really seems like there's a lot of these.  I'm grateful to Tim for such a thorough job finding them, but I'm sure he missed some - maybe it would be worthwhile to get someone else to help make the tool be correct more often?

> Thanks for the fantastic (and nicely detailed) feedback, Tim!

+1.

(I had some thoughts about manual pages but those deserved their own message, so I'll send them separately.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/e0b6f17a/attachment-0001.htm 

From glyph at twistedmatrix.com  Sat Jul 10 22:42:49 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 10 Jul 2010 22:42:49 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
Message-ID: <E5EF629E-37A2-4692-BEA9-CE36C1B6C0B4@twistedmatrix.com>


On Jul 10, 2010, at 4:17 PM, Kevin Horn wrote:

>  Some extra thoughts:
>    - The ReviewingDocumentation wiki page has a section called "Editing
>      man pages" that describes how to turn the nicely-formatted
>      manpages into Lore input files. Would it be possible to do that as
>      part of the lore2sphinx run, have the manpages included in the
>      Sphinx documentation, and from then on generate the manpages from
>      the .rst files instead of the other way around?
> 
> Sphinx does have a man page builder now, but I don't think it existed when I was writing lore2sphinx, so I haven't really considered this.
> 
> So you're suggesting convert the man pages to Lore format -> use lore2sphinx to convert the resulting Lore docs to rst -> build as part of the Sphinx process, yes?

I think there may be some confusion here.  However, the current situation is extremely confused, so I will try to shed some light...

First, the goal: we should include the content of the man pages that you get from a UNIX command prompt, but formatted in a manner consistent with the rest of our documentation.  As Tim noted in another message:

> At least for trial, there's a bunch of stuff that's *only* in the
> man page and not the online docs, and a bunch of stuff that's *only* in
> the online docs and not the man page (and stuff that's *only* in the
> core/development/policy section of the docs, and not in the Trial
> section...). Hopefully if they're all part of the same doc system, it'll
> be easier to have everything in the one place and easy to find.


It would definitely be better to have this information more centrally located and maintained.

This is a good goal, and something we are nominally already supposed to be doing.  (And in the process of writing this up, I discovered, oops, we're not, but more on that later.)

Lore already has a plugin which attempts to convert man pages (groff input) into HTML.  To be clear: it creates lore *input* documents, which are intended to be an intermediate state; they're supposed to be re-processed in the same way as the rest of the lore input, to produce lore output.

Lest it seem like editing groff directly is a thing only an insane person would want to do (and arguably, Moshe Zadka, the author of this feature, is in fact an insane person (we love you Moshe)), he designed it this way for a good reason.  The thinking at the time among several Twisted developers was that it would be more useful to go from groff (which has a fairly limited vocabulary) to HTML (which is pretty expressive) than the other way around, since you'd have to give up if you ran into some HTML nuance that couldn't be expressed in groff.

This is slightly good news for including the manpages in the current process being tested on the buildbot, because it just means you have to add one additional command-line to generate the input, and the .rst output can be generated along the same lines as what is already being done.  At least, this is all you need to do to get HTML that probably looks reasonable.  Getting manpages out is another matter.

Unfortunately there's no 'man2rst', so we can't keep man pages around as input for sphinx.  So, in order to continue with the same workflow we've had - with groff as source - we'd have to do several undesirable things:

Produce a convoluted document conversion process where we start with groff input, go through HTML, then end up with rst, then some more, different HTML generated from that.  One goal of this process would be for the document generation pipeline to be a simple, single command (I am hoping something like 'sphinx doc' and that's it...).
Keep maintaining lore2sphinx.  This was an explicit non-goal of the migration process, given that there are going to be some manual fixes required.  (Despite my suggestion that I think we should have fewer of these, I don't think that maintaining it long-term is a good idea.)
Keep maintaining lore, since that's where the manpage conversion code lives.  Since the whole point of this process is so that we can dump lore out of the nearest airlock, this strikes me as a dealbreaker by itself.

There is, however, an 'rst2man'. <http://docutils.sourceforge.net/sandbox/manpage-writer/rst2man.txt>, which appears to be the basis for sphinx's manpage generator.  And this is where we encounter the problem where it's somewhat difficult to get manpages as output: it seems to have exactly the issues that the lore groff-input thingy was designed to prevent.  It just chokes and dies on groff-unfriendly markup, and it requires several annotations which can't be provided in the HTML input.  That means the output generated from the groff->lore->rst pipeline will be missing a bunch of stuff that rst2man wants, such as ":Manual section:" and ":Manual group:" fields.  Which, in turn, means that this task will require a distinct set of manual (no pun intended) post-processing that the rest of the documents won't.

Of course, these limitations and the extra work might be worth living with for the reasons listed at the beginning of this message.

But there's good(-ish) news.  We don't currently generate readable HTML from manpages anywhere.  So if we don't have it in the next release, it won't be a regression.

The code used by the current release process, here - <http://twistedmatrix.com/trac/wiki/ReleaseProcess#Buildhowtodocumentsforwebsite> - has a bug in it, where it generates the lore input, but then uses a dictionary to avoid processing those generated input documents.  Nobody ever sees this half-generated input, because it's only available here <http://twistedmatrix.com/documents/10.1.0/core/man/>, a secret index to which I can't find a link anywhere in the browsable bits of the lore documentation!

Anyway, I apologize for the extremely long-winded enumeration, because ultimately it's just to say I agree with this:

> I think this is a worthwhile idea, but I'd prefer to leave it until after the main docs are converted (i.e. under a separate ticket).  lore2sphinx can be used on just the man files later on if need be, though it would take a little mucking around.

I shouldn't let all the effort of composing this message go to waste though, so I'll be more specific.

We should use lore and then lore2sphinx to convert these documents to rst, in a one-shot process similar to the one we're using to convert the rest of the documentation, manually add in the information required by 'rst2man', and add 'rst2man' as part of our build process.  Of course, part of this task will be making sure that the documentation buildbot turns red if we have any rst in the desginated 'man' documents that doesn't get turned into valid groff.  And we'll have to keep lore in the tree until this is done, because otherwise it'll be a pain to get the code installed for the man-page-conversion pipeline.

Again, since we're lacking it now, I don't think this is a high-priority task.  I would be happy to have even a couple of releases with no pretense at HTML manpages, until we can do this separate conversion.

Until then, I encourage our users to please enjoy these fine links from die.net: <http://linux.die.net/man/1/twistd>, <http://linux.die.net/man/1/trial>, <http://linux.die.net/man/1/conch>, <http://linux.die.net/man/1/cftp>, <http://linux.die.net/man/1/lore>.

(Since this is so low-priority, It's too bad I just spent over an hour writing an email about it.  Oh well.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/2734a4fe/attachment.htm 

From kevin.horn at gmail.com  Sat Jul 10 22:48:13 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 21:48:13 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100711011944.GB1816@boombah.thristian.org>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
	<20100711011944.GB1816@boombah.thristian.org>
Message-ID: <AANLkTimNyrkY4M4QQShx3d22Mmf8dWQU6inCwP6dSh6B@mail.gmail.com>

On Sat, Jul 10, 2010 at 8:19 PM, Tim Allen <screwtape at froup.com> wrote:

> On Sat, Jul 10, 2010 at 03:17:03PM -0500, Kevin Horn wrote:
> > On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
> > > That's probably enough feedback to be getting on with; most of the
> > > problems appear to be from normalising "\n" in Lore docs to "" instead
> > > of " ", and also from adding whitespace after things. It is generally
> > > looking pretty great, though!
> >
> > Yeah, that's pretty much it.  As I said above though, if you "fix" it one
> > place, it breaks in another, so I tried to balance things in such a way
> that
> > the least broken markup appears in the output.
> >
> > Almost all of the remaining problems will need to be fixed manually.
>
> It sounds like a lot of the manual fixes will involve rewriting
> things so that inline markup does not appear at the end of a sentence
> next to the punctuation. That seems like a recipe for awkward prose. :/
>

Not necessarily.  There are ways around a lot of these things, but they make
the markup a bit more complex and thus more complicated to generate
automatically.

For example, if the markup requires that there be a space, but you don't
actually want a space there, you insert an 'escaped space' ("\ ", that's a
backslash-space).

But the exact rules for what can abut the beginning and end of inline markup
are more complicated than that, and accounting for every special case would
be....er...

Let's just say there's a reason that there's not an official docutils tool
to _create_ restructuredText.


>
> > > Some extra thoughts:
> > >    - The ReviewingDocumentation wiki page has a section called "Editing
> > >      man pages" that describes how to turn the nicely-formatted
> > >      manpages into Lore input files. Would it be possible to do that as
> > >      part of the lore2sphinx run, have the manpages included in the
> > >      Sphinx documentation, and from then on generate the manpages from
> > >      the .rst files instead of the other way around?
> >
> > Sphinx does have a man page builder now, but I don't think it existed
> when I
> > was writing lore2sphinx, so I haven't really considered this.
> >
> > So you're suggesting convert the man pages to Lore format -> use
> lore2sphinx
> > to convert the resulting Lore docs to rst -> build as part of the Sphinx
> > process, yes?
>
> Yes. At least for trial, there's a bunch of stuff that's *only* in the
> man page and not the online docs, and a bunch of stuff that's *only* in
> the online docs and not the man page (and stuff that's *only* in the
> core/development/policy section of the docs, and not in the Trial
> section...). Hopefully if they're all part of the same doc system, it'll
> be easier to have everything in the one place and easy to find.
>
> > I think this is a worthwhile idea, but I'd prefer to leave it until after
> > the main docs are converted (i.e. under a separate ticket).  lore2sphinx
> can
> > be used on just the man files later on if need be, though it would take a
> > little mucking around.
>
> Something to add to the "open ticket for: anything else???" section of
> your transition plan, then? :)
>

Sounds like it.


>
> > Thanks for the fantastic (and nicely detailed) feedback, Tim!
> >
> > Please take a look at the transition plan.  In a few days (maybe sooner),
> I
> > should have the base docs in a branch, and the "chunk tickets" referenced
> in
> > the transition plan created.  This is pretty much _exactly_ what I'd like
> to
> > see in those "chunk tickets".
>
> Having done pretty much the first two of your suggested "chunks" in my
> previous mail, they look to be about the right size.
>
> > Hopefully you haven't already burned up your brain staring at markup
> > issues. :) We could really use this kind of help throughout the
> > process.
>
> I'm looking forward to learning a little more about Sphinx and ReST. :)
>
>

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/134dbab6/attachment-0001.htm 

From glyph at twistedmatrix.com  Sat Jul 10 23:39:56 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 10 Jul 2010 23:39:56 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTimNyrkY4M4QQShx3d22Mmf8dWQU6inCwP6dSh6B@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
	<20100711011944.GB1816@boombah.thristian.org>
	<AANLkTimNyrkY4M4QQShx3d22Mmf8dWQU6inCwP6dSh6B@mail.gmail.com>
Message-ID: <C2FD72EA-9378-4336-A240-54240EAC2C3D@twistedmatrix.com>


On Jul 10, 2010, at 10:48 PM, Kevin Horn wrote:

> Let's just say there's a reason that there's not an official docutils tool to _create_ restructuredText.

Is that really true?  If so, it concerns me.  Isn't that what docutils.writer.UnfilteredWriter does?  Even if not, it should be possible - reasonable, even - to write a docutils.writer.Writer which just emits reST.

Sphinx is a nice tool, but reST's grossness bothers me more and more.  If there are really no tools which can emit reStructuredText from a data structure, that means we have no hope of ever processing our source documentation in deterministic, correct ways (as a trivial example, let's say we wanted to change the name of a package).  It's not a lot of fun to process XML documents, but there are plenty of APIs to do it and to be sure that the output is still XML when you're done.

This is really a theoretical concern (in the years we've been using lore, we never really managed to use any XML tools with it), and on balance all the features that sphinx brings to the table are almost certainly worth living with it, but it still bugs me.  Where should I file and/or vote for a bug report or feature request?  Is this sphinx's problem, docutils, or both?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/4030fa97/attachment.htm 

From kevin.horn at gmail.com  Sat Jul 10 23:49:54 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 22:49:54 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <2DB04741-C874-4EA5-85AE-A3E9DE49E8DA@twistedmatrix.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
	<2DB04741-C874-4EA5-85AE-A3E9DE49E8DA@twistedmatrix.com>
Message-ID: <AANLkTik0PmnA0s5ieUudkqBRAlqhRGUUoNAMyc7H9Uf5@mail.gmail.com>

On Sat, Jul 10, 2010 at 9:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jul 10, 2010, at 4:17 PM, Kevin Horn wrote:
>
> On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
>
>> On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.comwrote:
>> > At last I've got a buildbot set up generating the sphinx docs.  The
>> > build results can be seen here:
>> >
>> >   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
>> >
>> > (or with a different revision number for different revisions; the
>> > containing directory is browseable).
>> >
>> > It would be great if everyone could go look around and report any
>> > problems you see.
>>
>>     - In the Documentation Table Of Contents page, "Historical
>>      Documents" is listed between "Twisted Core" and "Twisted Lore"
>>      (presumably because of alphabetical order) but this seems
>>      a strange place for it. Could it be moved to the bottom, or an
>>      appendix, or something?
>>
>
> They're in alphabetical order.  The TOC page is generated dynamically by
> looking at the file structure of the docs and that's the order file-globbing
> lists them in.  We can fix this manually post-conversion.
>
>
> It's worth noting that even in this peculiar order, the existence of this
> document is an upgrade.  It did not previously exist.  Or, rather, it did,
> but I think the analogous page in the current system is this: <
> http://twistedmatrix.com/documents/10.1.0/>, which is certainly not as
> nice.
>
> (If you were expecting to see something like <
> http://twistedmatrix.com/documents/10.1.0/core/howto/index.html>, that's
> here: <
> http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/core/howto/index.html
> >.)
>

As I said, the order can be changed manually.


>
>
>
>>    - The bottom of every page has a "Download in other formats: Plain
>>      Text" link that doesn't work; presumably scooped up from the Trac
>>      templates. It should be removed (the Sphinx "Show Source" link is
>>      in the right-hand sidebar anyway).
>>
>
> Yeah, this is a flaw in the trac theme.  Looks like I forgot to remove it.
>
>
> This seems like a simple fix - if you could do it quickly so we can see if
> fixes get propagated to the buildbot, that would be great (so we can get the
> build logistics out of the way for future, more complex issues).
>
>
Hmmm...it won't be propagated to the buildbot automatically, since it's in
the theme files in the lore2sphinx repo.  From what exarkun said it sounds
like it would require another manual checkout of that repo.

I'll change it pretty soon, though.


>
>    - When the breadcrumb navigation at the top of the page gets too
>>      long[1], it wraps to a second line, which looks kind of odd
>>      because the nice gradient background image loops. Changing the CSS
>>      background colour to be the same as the bottom of the gradient
>>      image would probably help.
>>
>
> The breadcrumb names are also kinda weird, and very wordy.
>
> <
> http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/conch/howto/conch_client.html>
> says "Twisted >> Twisted Documentation Table of Contents >> Twisted Conch
> Documentation >> Twisted Documentation".  This is altogether too many
> "Twisted"s ;-).
>
> It should really be more like
>
> 'Twisted >> Documentation >> Conch >> "Writing a client with
> Twisted.Conch"'
>
> Again: this is a new feature, so I'm not too concerned if we defer fixing
> this; go ahead if it's easy, but if it's hard, it's still better than the
> status quo, which is to say, not having any navigation at all.
>
>
The breadcrumbs use document titles.  Of course, in my opinion the word
Twisted is used far too often in the document titles, which I think will be
less necessary as we move the docs toward a cohesive whole, rather than a
bunch of separate articles (which I see as a long-term,
out-of-scope-for-this-discussion goal).


>    - Chromium's error console reports:
>>        - A 404 error for "/trac/chrome/common/js/jquery.js"
>>        - A 404 error for "/trac/chrome/common/js/trac.js"
>>        - A 404 error for "/trac/chrome/common/js/search.js"
>>        - A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
>>
>
> Ah! This explains why the search quit working.  Not sure why these files
> are missing,  Probably something to do with the custom theme.
>
>
> They're missing because this code is hosted on *buildbot*.
> twistedmatrix.com, not twistedmatrix.com.  It's probably most expedient to
> just make those links include the netloc for now.
>
>
<facepalm>

of course.


>    - The Twisted.Conch tutorial[1] has a number of things surrounded
>>      with double-backticks like "``Deferred``" or
>>      "``ClientTransport``". I'm not sure if that's deliberate or if
>>      it's markup gone horribly wrong.
>>
>
> This is probably due to missing spaces before/after the markup in the rst
> source.  One of those things that will need to be fixed manually.  I spent a
> lot of time trying to fix this in lore2sphinx and when you fix it in one
> place, it breaks somewhere else.  Right now the automated conversion is
> about as good as it is likely to get with a sane amount of effort.
>
>
> Pardon my ignorance, but why not just *always* add the spaces when
> generating this type of markup?  It doesn't seem like it should be that
> hard; docutils claims to be able to treat ReST as structured, right?  Isn't
> there an API to construct some objects that will do the quoting for you?
>

It sounds reasonable doesn't it?  But it's harder than that, because extra
spaces in the wrong place can throw off indentation, which is a whole other
mess.  I would much rather go back through and add/remove a bunch of
isolated spaces than try to reconstruct indentation in some of these complex
document structures.


>
>    - The Conch code examples (as linked from the code examples page[2])
>>      are sent with a Python mime-type (which Firefox tries to download)
>>      while the .tac files are sent as text/html; this may be an
>>      artifact of the docs being hosted on the buildbot machine rather
>>      than Sphinx, but I think it would be nice if by default they were
>>      displayed in the browser, syntax-highlighted, with an option to
>>      download the original files (much like Trac does).
>>
>
> This is a web server configuration thing.  The files are actually .py and
> .tac files (and probably need to remain so, if we ever want to get automated
> example code tests going).
>
>
> Maybe we can do some web server magic to get them nicely displayed in the
> browser, but I see that as a secondary issue for the moment.  Anyone should
> feel free to give a shout if they disagree, though.
>
>
> I agree completely.
>
> We should fix it so the .tac files are text/x-python as well, so your
> browser can DTRT with them; when I click on an example, I often want to
> download it.
>
> Perhaps the lore markup should be adjusted to format them inline as well,
> though?
>
>    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
>>      still named twisted.*subproject*?", but it's not obvious whether
>>      the author was trying to use italics (in which case it's
>>      a lore2sphinx bug) or globbing (in which case it's not).
>>
>
> Pretty sure it was supposed to be italics.  Spacing again.  There are ways
> to make this display properly, but it'll need to be done manually.
>
> Also, this is pretty outdated stuff...we might consider just removing some
> of this.  Or perhaps moving some of it into a more obvious place.
>
>
> Let's try to have those discussions in separate threads so they can be
> resolved individually.  I don't have an opinion at the moment and would not
> like to develop one in the middle of a monster thread about the whole
> conversion :).
>

Good idea.


>
>
>    - The Twisted Coding Standard[6] mentions "If you modify, or write
>>      a new, HOWTO, please read the Lore documentation to learn how to
>>      format the docs"; if there's not already a follow-up ticket for
>>      the lore-sphinx conversion titled "Remove references to Lore from
>>      Twisted's non-Lore-related documentation", there should be, and
>>      this should be in it.
>>
>
> There isn't, but there will be.  See the transition plan here:
> http://twistedsphinx.funsize.net/transition_plan.html
>
>
> FWIW, you should really start linking to the ticket <
> http://twistedmatrix.com/trac/ticket/4500>, rather than the "transition
> plan" page, so that folks can comment, link to other tickets, bookmark it
> for review when it comes up, etc.
>

Hmmm...maybe.  Though the transition plan (which I guess I should update
some) covers more than the ticket, IMO.

I _did_ ask for feedback on it back when, but nobody spoke up...and silence
implies consent :)

At any rate, if there need to be changes made to my sketch of a transition
plan, let's get that figured out ASAP.


>
> [...] All bad spacing issues. [...] Almost all of the remaining problems
> will need to be fixed manually.
>
>
> It really seems like there's a lot of these.  I'm grateful to Tim for such
> a thorough job finding them, but I'm sure he missed some - maybe it would be
> worthwhile to get someone else to help make the tool be correct more often?
>

If someone else can do it great.  What's there at the moment is about as
good as I can make it (unless someone can pay me truly ridiculous amounts of
money...I always have that proviso :) ).


>
> Thanks for the fantastic (and nicely detailed) feedback, Tim!
>
>
> +1.
>
> (I had some thoughts about manual pages but those deserved their own
> message, so I'll send them separately.)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100710/24c7ce44/attachment-0001.htm 

From exarkun at twistedmatrix.com  Sun Jul 11 00:05:43 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Jul 2010 04:05:43 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1278821143.78.1045102529@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100711/5d6b6a85/attachment.htm 

From codeprophecy1 at gmail.com  Sun Jul 11 03:26:22 2010
From: codeprophecy1 at gmail.com (code prophecy)
Date: Sun, 11 Jul 2010 02:26:22 -0500
Subject: [Twisted-Python] msn file transfer
Message-ID: <AANLkTinBLGzMr8uj7C8fdOwYSobBXWxwPrpMv3Su6AET@mail.gmail.com>

Hi,

Can anyone provide an example of msn file transfer ? Twisted msn
implementation does have the filesender/recver classes but i cant figue out
how to use them.Any help is welcome.

Also, can anyone suggest a way to implement avatar/display image
functionality to the existing module? i'm ready to do it but need some
pointers or hint as to how to go abt it.

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100711/1ee6b7a0/attachment.htm 

From gelonida at gmail.com  Sun Jul 11 15:02:22 2010
From: gelonida at gmail.com (Gelonida)
Date: Sun, 11 Jul 2010 21:02:22 +0200
Subject: [Twisted-Python] https server example with client certs for twisted
Message-ID: <i1d4fu$ija$1@dough.gmane.org>

H,

I'd like to implement a small https twisted server,

which can wrap a wsgi module and which
can verify client certificates


I am able to do this with apache, but would like to do the same with
twisted.


What I have running is following.

The

#!/bin/sh
certfile=mycert.crt
keyfile=mycert.key
wsgi_module=tw_wrapper.application

twistd -n web --https 4433 \
    --certificate $certfile --privkey $keyfile \
    --wsgi $wsgi_module



I wondered where I could find any good example code
implementing a web server with client certificate authentication
( and ideally with a  subsequent wsgi module)

TIA



From exarkun at twistedmatrix.com  Sun Jul 11 22:04:10 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 12 Jul 2010 02:04:10 -0000
Subject: [Twisted-Python] https server example with client certs
	for	twisted
In-Reply-To: <i1d4fu$ija$1@dough.gmane.org>
References: <i1d4fu$ija$1@dough.gmane.org>
Message-ID: <20100712020410.1937.664044251.divmod.xquotient.15@localhost.localdomain>

On 11 Jul, 07:02 pm, gelonida at gmail.com wrote:
>H,
>
>I'd like to implement a small https twisted server,
>
>which can wrap a wsgi module and which
>can verify client certificates
>
>
>I am able to do this with apache, but would like to do the same with
>twisted.
>
>
>What I have running is following.
>
>The
>
>#!/bin/sh
>certfile=mycert.crt
>keyfile=mycert.key
>wsgi_module=tw_wrapper.application
>
>twistd -n web --https 4433 \
>    --certificate $certfile --privkey $keyfile \
>    --wsgi $wsgi_module
>
>
>
>I wondered where I could find any good example code
>implementing a web server with client certificate authentication
>( and ideally with a  subsequent wsgi module)

Twisted uses pyOpenSSL to support HTTPS.  You can read a bit about the 
basic SSL customization APIs in Twisted here:

    http://twistedmatrix.com/documents/current/core/howto/ssl.html

And you can read more about the underlying pyOpenSSL APIs here:

    http://packages.python.org/pyOpenSSL/

In particular, you're probably interested in customizing a Context 
instance:

    http://packages.python.org/pyOpenSSL/openssl-context.html

So that it requires and validates a peer certificate.

Unfortunately, we haven't yet made this level of customization available 
directly from the "twistd" command line, so you'll have to switch from 
using the "twistd web" command to something like a tac file:

http://twistedmatrix.com/documents/current/core/howto/application.html

You'll be able to set up the same kind of web server created by "twistd 
web", but you'll have to invoke some of the service APIs, such as 
SSLServer.  You can find an example of this sort of thing midway through 
the finger tutorial:

http://twistedmatrix.com/documents/current/core/howto/tutorial/factory.html#auto1

Jean-Paul


From jeandaniel.browne at gmail.com  Mon Jul 12 12:43:55 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Mon, 12 Jul 2010 18:43:55 +0200
Subject: [Twisted-Python] asynchronous python generator
Message-ID: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>

Hello,

I wrote a small client protocol which connects to a notification
server. The client role is to connect, and then to print the
notification which comes from the server until the server says "stop"
(a netcat server do just fine, I use "nc -C -l 6789"). I would like
the API for this client protocol to be compatible with the "for"
python loop. Here is the client

class Notif(basic.LineReceiver):

    def lineReceived(self, data):
        self.d.callback(data)

    def __iter__(self):
        return self

    @defer.inlineCallbacks
    def next(self):
        self.d = defer.Deferred()
        notif = yield self.d
        if notif=="stop":
            defer.returnValue(Failure(StopIteration()))
        else:
            defer.returnValue(notif)

Here is an example of how to use this client:


@defer.inlineCallbacks
def gotConnection(conn):

    for notif in conn:
        print notif

    reactor.stop()

c = protocol.ClientCreator(reactor, Notif)
c.connectTCP("localhost", 6789).addCallback(gotConnection)
reactor.run()

Except that is does not work: I think that the next() method of the
generator is indeed automatically called by the "for" machinery but
its return value is not yielded as the inlineCallbacks requires it.
This works for instance, and it is very close to a for loop:

@defer.inlineCallbacks
def gotConnection(conn):

    while True:
        try:
            print (yield conn.next())
        except StopIteration:
            break

Does someone knows how to make the for loop work with data coming from
network requests?


From exarkun at twistedmatrix.com  Mon Jul 12 14:00:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 12 Jul 2010 18:00:24 -0000
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
Message-ID: <20100712180024.1650.979084983.divmod.xquotient.10@localhost.localdomain>

On 04:43 pm, jeandaniel.browne at gmail.com wrote:
>Hello,
>
>I wrote a small client protocol which connects to a notification
>server. The client role is to connect, and then to print the
>notification which comes from the server until the server says "stop"
>(a netcat server do just fine, I use "nc -C -l 6789"). I would like
>the API for this client protocol to be compatible with the "for"
>python loop. Here is the client
>
>class Notif(basic.LineReceiver):
>
>    def lineReceived(self, data):
>        self.d.callback(data)
>
>    def __iter__(self):
>        return self
>
>    @defer.inlineCallbacks
>    def next(self):
>        self.d = defer.Deferred()
>        notif = yield self.d
>        if notif=="stop":
>            defer.returnValue(Failure(StopIteration()))
>        else:
>            defer.returnValue(notif)
>
>Here is an example of how to use this client:
>
>
>@defer.inlineCallbacks
>def gotConnection(conn):
>
>    for notif in conn:
>        print notif
>
>    reactor.stop()

This is an invalid use of inlineCallbacks.  Only generator functions 
(functions which use `yield`) can be decorated with inlineCallbacks.
>
>c = protocol.ClientCreator(reactor, Notif)
>c.connectTCP("localhost", 6789).addCallback(gotConnection)
>reactor.run()
>
>Except that is does not work: I think that the next() method of the
>generator is indeed automatically called by the "for" machinery but
>its return value is not yielded as the inlineCallbacks requires it.

Quite so.  And why would it be?  That's not what `for` does in Python.
>
>This works for instance, and it is very close to a for loop:
>
>@defer.inlineCallbacks
>def gotConnection(conn):
>
>    while True:
>        try:
>            print (yield conn.next())
>        except StopIteration:
>            break
>
>Does someone knows how to make the for loop work with data coming from
>network requests?

You didn't have to switch to a while loop here.  The simplest fix for 
your for loop is this:

    @inlineCallbacks
    def gotConnection(conn):
        for lineEvent in conn:
            line = yield lineEvent
            print line

But aside from that...

No, you must have the `yield` somewhere in the function.  If you want 
something less scrutable than this, then you probably want something 
like corotwine.

Jean-Paul


From ltaylor.volks at gmail.com  Mon Jul 12 14:35:02 2010
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Mon, 12 Jul 2010 13:35:02 -0500
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
Message-ID: <4C3B6056.9020802@gmail.com>

On 7/12/10 11:43 AM, Jean Daniel wrote:

> Hello,
> 
> I wrote a small client protocol which connects to a notification
> server. The client role is to connect, and then to print the
> notification which comes from the server until the server says "stop"

<snip>

> 
> Does someone knows how to make the for loop work with data coming from
> network requests?
> 

Maybe you've got bigger things in mind, but I don't know what all of
that buys you, at least from your example use case (client connects,
prints response from server, quits on 'stop'). What's wrong with keeping
it simple and handling responses in the Protocol?

def lineReceived(self, line):
    if line == 'stop':
        reactor.stop()
    else:
        print(line)




From jeandaniel.browne at gmail.com  Mon Jul 12 17:46:14 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Mon, 12 Jul 2010 23:46:14 +0200
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <20100712180024.1650.979084983.divmod.xquotient.10@localhost.localdomain>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
	<20100712180024.1650.979084983.divmod.xquotient.10@localhost.localdomain>
Message-ID: <AANLkTilSLpKfsmPZ1cYnjBczgt0lbrMmG0C-xjh4frQg@mail.gmail.com>

> You didn't have to switch to a while loop here. ?The simplest fix for
> your for loop is this:
>
> ? ?@inlineCallbacks
> ? ?def gotConnection(conn):
> ? ? ? ?for lineEvent in conn:
> ? ? ? ? ? ?line = yield lineEvent
> ? ? ? ? ? ?print line

Yes, I did that too. I wanted the loop to be able to terminate without
user intervention on a signalisation message: this is handy with for
when it is only a matter of raising StopIteration. In our two
examples, the user will have to be prepared for Exception to stop the
loop.

Thank you,

>
> But aside from that...
>
> No, you must have the `yield` somewhere in the function. ?If you want
> something less scrutable than this, then you probably want something
> like corotwine.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From jeandaniel.browne at gmail.com  Mon Jul 12 17:56:49 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Mon, 12 Jul 2010 23:56:49 +0200
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <4C3B6056.9020802@gmail.com>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
	<4C3B6056.9020802@gmail.com>
Message-ID: <AANLkTinnQkKIKUGRJO-Hqqe47b0vDX7eApceTSeSlCHf@mail.gmail.com>

> Maybe you've got bigger things in mind, but I don't know what all of
> that buys you, at least from your example use case (client connects,
> prints response from server, quits on 'stop'). What's wrong with keeping
> it simple and handling responses in the Protocol?
>
> def lineReceived(self, line):
> ? ?if line == 'stop':
> ? ? ? ?reactor.stop()
> ? ?else:
> ? ? ? ?print(line)

I think it buys a bit of simplicity if the ClientCreator is called and
all handy methods are attached to the protocol argument of the
callback. For the code that you show, there is a need to import the
right package and the right base class, name a class, override a
method. So, it does not buy much, actually.

More importantly IMHO, in your example the code embeds the knowledge
of the protocol strings. In some context, it is useful to hide it
behind an API to spare the developers the reading of the RFC, or in
others context, the wire protocol might change while the API stays
stable.

Cheers,

>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From jasonjwwilliams at gmail.com  Mon Jul 12 20:51:29 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jul 2010 18:51:29 -0600
Subject: [Twisted-Python] SMTP Client Blocking Connects
Message-ID: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>

Hi Guys,

Are TCP connects in Twisted usually blocking? Noticing a behavior when
I've got several simultaneous SMTP client objects operating, where
when one of them hits a server that times out on the connect...the
program blocks until the connect times out. Everything else is working
async/non-blocking as expected.

-J


From glyph at twistedmatrix.com  Mon Jul 12 20:53:20 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 12 Jul 2010 20:53:20 -0400
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
Message-ID: <B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>


On Jul 12, 2010, at 8:51 PM, Jason J. W. Williams wrote:

> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.

They're absolutely not supposed to be!  If you can reproduce this, you've definitely found a bug.  (A quick search doesn't turn up any existing bugs.)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100712/508d503d/attachment.htm 

From alvinwang at gmail.com  Tue Jul 13 05:32:17 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Tue, 13 Jul 2010 02:32:17 -0700
Subject: [Twisted-Python] Email problem
Message-ID: <AANLkTikXJqoK-Uo5IbcD8p9--BmSRjNnCVWYUnMBX0Rr@mail.gmail.com>

Problem send email through gmail with an attachment

Any help is appreciated

Thanks
Alvin

""" Does not work

"""
from twisted.internet.ssl import ClientContextFactory
from twisted.internet.defer import Deferred
from twisted.mail.smtp import ESMTPSenderFactory
from twisted.internet import reactor
import smtplib, sys, MimeWriter, mimetypes, mimetools, base64

import StringIO
import time
import os

sender = 'acct at gmail.com'
senderpw = 'password'
to = 'alvinwang at gmail.org'
subject = 'gc' + str(time.time())
text = 'Message Text Body'

attachments = ["/home/alvin/Pictures/alvin.jpg",
"/home/alvin/Pictures/badlogo.gif"]

contextFactory = ClientContextFactory()
result = Deferred()

message = StringIO.StringIO()
writer = MimeWriter.MimeWriter(message)
writer.addheader('To', to)
writer.addheader('From', sender)
writer.addheader('Subject', subject)
writer.addheader('MIME-Version', '1.0')
writer.startmultipartbody('mixed')

part = writer.nextpart()
body = part.startbody('text/plain')
part.flushheaders()
body.write(text)

# now add the attachments
if attachments is not None:
    for a in attachments:
        filename = os.path.basename(a)
        ctype, encoding = mimetypes.guess_type(a)
        if ctype is None:
            ctype = 'application/octet-stream'
            encoding = 'base64'
        elif ctype == 'text/plain':
            encoding = 'quoted-printable'
        else:
            encoding = 'base64'

        part = writer.nextpart()
        part.addheader('Content-Transfer-Encoding', encoding)
        body = part.startbody("%s; name=%s" % (ctype, filename))
        mimetools.encode(open(a, 'rb'), body, encoding)

# that's all falks
writer.lastpart()
m = message.getvalue()
message.close()


factory = ESMTPSenderFactory(sender,
                           senderpw,
                           sender,
                           to,
                           m,
                           result,
                           contextFactory=contextFactory)
reactor.connectTCP('smtp.gmail.com', 25, factory)
result.addCallback(lambda ign: reactor.stop())
reactor.run()




/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py:10:
DeprecationWarning: the MimeWriter module is deprecated; use the email
package instead
  import MimeWriter, tempfile, rfc822
Traceback (most recent call last):
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 84, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 69, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py", line 137,
in doRead
    return Connection.doRead(self)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py", line 460,
in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
251, in dataReceived
    why = self.lineReceived(line)
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1069,
in lineReceived
    why = self._okresponse(self.code,'\n'.join(self.resp))
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1134,
in smtpState_data
    self.getMailData(), self.transport, self.transformChunk)
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
493, in beginFileTransfer
    self.consumer.registerProducer(self, False)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/abstract.py", line
313, in registerProducer
    producer.resumeProducing()
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
499, in resumeProducing
    chunk = self.file.read(self.CHUNK_SIZE)
exceptions.AttributeError: 'str' object has no attribute 'read'
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: exceptions.Exception: Consumer asked us to stop producing
Traceback (most recent call last):
  File "postprob.py", line 71, in <module>
    reactor.run()
  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py", line
1170, in run
    self.mainLoop()
  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py", line
1182, in mainLoop
    self.doIteration(t)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 140, in doSelect
    _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 84, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 69, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 156, in _doReadOrWrite
    self._disconnectSelectable(selectable, why, method=="doRead")
  File "/usr/lib/python2.6/dist-packages/twisted/internet/posixbase.py",
line 197, in _disconnectSelectable
    selectable.connectionLost(failure.Failure(why))
  File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py", line 678,
in connectionLost
    self.connector.connectionLost(reason)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py", line
1039, in connectionLost
    self.factory.clientConnectionLost(self, reason)
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1713,
in clientConnectionLost
    self._processConnectionError(connector, err)
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1721,
in _processConnectionError
    self.file.seek(0, 0)
exceptions.AttributeError: 'str' object has no attribute 'seek'
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100713/27ace390/attachment-0001.htm 

From tim at commsecure.com.au  Tue Jul 13 05:44:48 2010
From: tim at commsecure.com.au (Tim Allen)
Date: Tue, 13 Jul 2010 19:44:48 +1000
Subject: [Twisted-Python] Email problem
In-Reply-To: <AANLkTikXJqoK-Uo5IbcD8p9--BmSRjNnCVWYUnMBX0Rr@mail.gmail.com>
References: <AANLkTikXJqoK-Uo5IbcD8p9--BmSRjNnCVWYUnMBX0Rr@mail.gmail.com>
Message-ID: <4C3C3590.7060807@commsecure.com.au>

On 07/13/2010 07:32 PM, Alvin Wang wrote:
> # that's all falks
> writer.lastpart()
> m = message.getvalue()
> message.close()

Here, you set "m" to be a string containing the message contents.

> factory = ESMTPSenderFactory(sender,
>                             senderpw,
>                             sender,
>                             to,
>                             m,
>                             result,
>                             contextFactory=contextFactory)

The documentation for ESMTPSenderFactory[1] says that the parameter 
after "to" is:

"file	A file-like object containing the message to send."

Try passing the "message" variable instead of your "m" variable.

[1] 
<http://twistedmatrix.com/documents/10.1.0/api/twisted.mail.smtp.ESMTPSenderFactory.html#__init__>


From twisted-web at udmvt.ru  Tue Jul 13 08:57:32 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Tue, 13 Jul 2010 16:57:32 +0400
Subject: [Twisted-Python] What is the minimum effort solution to make
	inetd-managed	twisted-based application?
Message-ID: <20100713125732.GE14318@ruber.office.udmvt.ru>

What is the minimal effort method for building protocol instance (maybe out of
already implemented protocol factory) using a transport, that uses
parent-inherited sockets (or any other already connected sockets) ?
I haven't yet found any single-line solution for that.

For example, how to start an inetd-managed SMTP server (with STARTTLS support),
suppose, we have protocol (and factory) already implemented, but
how to construct the correct transport out of fd with the minimal effort?

Or how to implement ucspi-tcp's tcpclient client on top of twisted framework?

Right now I am looking at t.i.unix.Connector and t.i.unix.Port to understand
how do transports get constructed by them, but well, that is too complex for a single evening.
Should I really get into the details of implementing my own transport (or their constructors)
to do what I need? I'm sure there should be something, that I missed in the documentation
(or in the code?).

And by the way, I haven't found any socketpair(2) usage in the twisted framework (except for tests),
how can that be? Transport based on socketpair sockets will have the same
implementation, as I need. Is it true, that nobody in twisted community uses
anonymous preconnected sockets in real life?

PS: I need socket-based transport, that is, full-duplex, half-closeable, with support
of getting the remote endpoint address and with ability to start TLS on top of it
and without implementing every that feature myself :)

Thanks for a great framework!
Alexey.

-- 
? ?????????,
??????? ??????
????????? ?????????????
???? ???????? ??????
???????????? ?????? ????????????????
??? "????????????" 
?????? ? ?????????? ??????????.


From exarkun at twistedmatrix.com  Tue Jul 13 10:37:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 13 Jul 2010 14:37:08 -0000
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100713125732.GE14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
Message-ID: <20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>

On 12:57 pm, twisted-web at udmvt.ru wrote:
>What is the minimal effort method for building protocol instance (maybe 
>out of
>already implemented protocol factory) using a transport, that uses
>parent-inherited sockets (or any other already connected sockets) ?
>I haven't yet found any single-line solution for that.

This isn't supported, but we'd like to support it.  There's a ticket in 
the issue tracker, <http://twistedmatrix.com/trac/ticket/4387>, related 
to this (but with a somewhat wider scope).
>For example, how to start an inetd-managed SMTP server (with STARTTLS 
>support),
>suppose, we have protocol (and factory) already implemented, but
>how to construct the correct transport out of fd with the minimal 
>effort?
>
>Or how to implement ucspi-tcp's tcpclient client on top of twisted 
>framework?
>
>Right now I am looking at t.i.unix.Connector and t.i.unix.Port to 
>understand
>how do transports get constructed by them, but well, that is too 
>complex for a single evening.
>Should I really get into the details of implementing my own transport 
>(or their constructors)
>to do what I need? I'm sure there should be something, that I missed in 
>the documentation
>(or in the code?).

Despite not appearing to be private, things like t.i.unix.Connector and 
t.i.unix.Port aren't really intended for use by applications.

This is the right part of Twisted to be looking at if you want to 
contribute a patch which adds this feature, though.  And I encourage you 
to do that. :)

The implementation should be fairly straight-forward.  Most things like 
Port and Client and Server have a "createInternetSocket" method.  All 
that's really necessary to use an externally created file descriptor is 
get "createInternetSocket" to return that descriptor instead of creating 
a new one (or skip the call to the method entirely and just use the 
descriptor you have already).

The biggest question I have is what the API should look like.  Somehow 
the file descriptor needs to get from your application code (which knows 
that inetd put an open TCP connection on fd 0) to the 
Port/Client/Server.

The obvious options, adding another argument to 
listen/connectTCP/UNIX/etc, would work, but is somewhat ugly (you have 
the issue that existing mandatory arguments would just be ignored).

Another idea would be adding new methods entirely.  I don't know if 
that's much better, though.

So, if we can come up with a nice API, I think this will be a pretty 
quick feature to implement.
>And by the way, I haven't found any socketpair(2) usage in the twisted 
>framework (except for tests),
>how can that be? Transport based on socketpair sockets will have the 
>same
>implementation, as I need. Is it true, that nobody in twisted community 
>uses
>anonymous preconnected sockets in real life?

Apparently. :)
>
>PS: I need socket-based transport, that is, full-duplex, half- 
>closeable, with support
>of getting the remote endpoint address and with ability to start TLS on 
>top of it
>and without implementing every that feature myself :)

Hopefully if we can figure out how to create a Twisted transport object 
from an existing file descriptor, you should have no trouble with the 
rest of these.
>Thanks for a great framework!

You're welcome, and thanks! :)

Jean-Paul


From twisted-web at udmvt.ru  Tue Jul 13 12:52:52 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Tue, 13 Jul 2010 20:52:52 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
Message-ID: <20100713165252.GG14318@ruber.office.udmvt.ru>

On Tue, Jul 13, 2010 at 02:37:08PM -0000, exarkun at twistedmatrix.com wrote:
> On 12:57 pm, twisted-web at udmvt.ru wrote:
> >What is the minimal effort method for building protocol instance (maybe 
> >out of
> >already implemented protocol factory) using a transport, that uses
> >parent-inherited sockets (or any other already connected sockets) ?
> >I haven't yet found any single-line solution for that.
> 
> This isn't supported, but we'd like to support it.

Oops, the Bad news.

>  There's a ticket in 
> the issue tracker, <http://twistedmatrix.com/trac/ticket/4387>, related 
> to this (but with a somewhat wider scope).

Well, that feature will benefit from the feature I need. By the way, twisted
architecture and abstractions allow one (for a limited number of protocols)
to transfer the state along with the FD of the opened connection.
Say, one may want to read HTTP headers and then send
the connection FD to another process along with the read headers, so it will
receive and "re-read" them with dataReceived(). Modification of HTTP protocol
code will not be required here. But we need a modified transport constructor.

> >Right now I am looking at t.i.unix.Connector and t.i.unix.Port to 
> >understand
> >how do transports get constructed by them, but well, that is too 
> >complex for a single evening.
> >Should I really get into the details of implementing my own transport 
> >(or their constructors)
> >to do what I need? I'm sure there should be something, that I missed in 
> >the documentation
> >(or in the code?).
> 
> Despite not appearing to be private, things like t.i.unix.Connector and 
> t.i.unix.Port aren't really intended for use by applications.

No, no, I'm only using them as a documentation about what transport looks like
from the inside of the twisted, to other parts of the framework.

> 
> This is the right part of Twisted to be looking at if you want to 
> contribute a patch which adds this feature, though.  And I encourage you 
> to do that. :)

Well, I was trying to get into it during last evening, but it turned out to be
more appropriate to spend a week or two on that process. It looks, like
transport abstraction is not documented as a whole, only the user visible
parts, or better say, protocol visible parts. I am still not sure whether
it is advisable to subclass a base.BaseConnector or we can simply
create a transport instance without that "complications". It looks like
BaseConnector contain some portion of code, that should be reused.

> 
> The implementation should be fairly straight-forward.  Most things like 
> Port and Client and Server have a "createInternetSocket" method.  All 
> that's really necessary to use an externally created file descriptor is 
> get "createInternetSocket" to return that descriptor instead of creating 
> a new one (or skip the call to the method entirely and just use the 
> descriptor you have already).
> 
> The biggest question I have is what the API should look like.  Somehow 
> the file descriptor needs to get from your application code (which knows 
> that inetd put an open TCP connection on fd 0) to the 
> Port/Client/Server.

That depends. Are we going to limit that feature to socket FDs only, or
should we provide more specific interfaces for different type of files?
Two (pipe) FDs may be used to construct full-duplex half-closeable transport too.
Or may someone be interested also in master pty based transport? That would indeed require some
terminal-specific support to be present in the transport instance, wouldn't it?
Like transport.sendBreak()
Perhaps one may use a full-duplex transport constructed from a tty/slave-pty FD?
It may be useful to provide analogous interface for half-duplex connections too, IMHO.

I think it may look like
  connection = somenewmodulename.socketConnection(fd, protocolFactory, addrFamily, sockType, reactor=None)
or
  import socket
  connection = somenewmodulename.socketConnection(socket.fromfd(fd, addrFamily, sockType), protocolFactory, reactor=None)

Create a transport object and associate/build a new protocol instance with/on it.
For other FD types there should be different functions, returning instances
of other types.

Would you comment on that?

> 
> The obvious options, adding another argument to 
> listen/connectTCP/UNIX/etc, would work, but is somewhat ugly (you have 
> the issue that existing mandatory arguments would just be ignored).
> 
> Another idea would be adding new methods entirely.  I don't know if 
> that's much better, though.

Adding new methods to reactor? I thought it can live completely separate
from the reactor code and do not pollute reactor interface. Reactor is only
used in the process of attaching a FD to a transport when new transport
registers it's FDs in the reactor, so it can be an (optional?) argument
to a constructor. However, yes, API consistency may suffer from that.

> 
> So, if we can come up with a nice API, I think this will be a pretty 
> quick feature to implement.

I think it could be a set of functions inside a platform-dependent module
if that functions will be FD-type dependent.

> >And by the way, I haven't found any socketpair(2) usage in the twisted 
> >framework (except for tests),
> >how can that be? Transport based on socketpair sockets will have the 
> >same
> >implementation, as I need. Is it true, that nobody in twisted community 
> >uses
> >anonymous preconnected sockets in real life?
> 
> Apparently. :)

Oops, surprise!..
BTW creating a socketpair and forking and then communicating via PB seems
like an elegant and convenient feature to me. Perhaps non-portable?

> >
> >PS: I need socket-based transport, that is, full-duplex, half- 
> >closeable, with support
> >of getting the remote endpoint address and with ability to start TLS on 
> >top of it
> >and without implementing every that feature myself :)
> 
> Hopefully if we can figure out how to create a Twisted transport object 
> from an existing file descriptor, you should have no trouble with the 
> rest of these.

That's what I need, and I really hoped, that it is already implemented. What a surprise.
Surely, I would not mind contibuting to such a great project, but first I
would have to get more understanding of it's abstractions.

Alexey.

-- 
? ?????????,
??????? ??????
????????? ?????????????
???? ???????? ??????
???????????? ?????? ????????????????
??? "????????????" 
?????? ? ?????????? ??????????.


From dominic at baudvine.net  Tue Jul 13 17:18:10 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Tue, 13 Jul 2010 23:18:10 +0200
Subject: [Twisted-Python] Knowing whether spawnProcess did anything useful
Message-ID: <4C3CD812.2030203@baudvine.net>

Hiya,

I'm looking for a way to know whether spawnProcess() did anything
useful.  That is, whether anything has actually been executed. In my
specific case the executables are all persistent (pluggable modules,
they stick around for a while) so based on the following snippet I
thought I could check whether the resulting ProcessTransport has a pid:

"From before IProcessProtocol.makeConnection is called to before
IProcessProtocol.processEnded is called, pid is an int giving the
platform process ID of this process. pid is None at all other times."[1]

However, a quick tour on the REPL shows otherwise (than I expected, not
necessarily otherwise than what the docs say):

>>> from twisted.internet import reactor
>>> from twisted.internet import protocol
>>> p = protocol.ProcessProtocol()
>>> f = reactor.spawnProcess(p, "fail", ["fail"])
>>> f
<Process pid=21053 status=-1>
>>> f.pid
21053

I thought status might be of some relevance, but it didn't really change
when I gave it a shot with actual executables.

Something tells me I'm being massively stupid here, but I'm genuinely
stuck.  Can't really believe that there's no way to do this, though.

Thanks.

[1]
http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IProcessTransport.html#pid

-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising


From jasonjwwilliams at gmail.com  Tue Jul 13 19:23:28 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 13 Jul 2010 17:23:28 -0600
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
Message-ID: <AANLkTinLFW80KKg1ZMJkIJChERcnBH9XvobdK1lNqA0Z@mail.gmail.com>

Hey Glyph,

Thanks for responding so fast. Lemme code up a simple test that
replicates what the code is doing and see if I can replicate it that
way.

-J

On Mon, Jul 12, 2010 at 6:53 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Jul 12, 2010, at 8:51 PM, Jason J. W. Williams wrote:
>
> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.
>
> They're absolutely not supposed to be! ?If you can reproduce this, you've
> definitely found a bug. ?(A quick search doesn't turn up any existing bugs.)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From exarkun at twistedmatrix.com  Tue Jul 13 22:31:46 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jul 2010 02:31:46 -0000
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100713165252.GG14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
Message-ID: <20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>

On 13 Jul, 04:52 pm, twisted-web at udmvt.ru wrote:
>On Tue, Jul 13, 2010 at 02:37:08PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>On 12:57 pm, twisted-web at udmvt.ru wrote:
>> >What is the minimal effort method for building protocol instance 
>>(maybe
>> >out of
>> >already implemented protocol factory) using a transport, that uses
>> >parent-inherited sockets (or any other already connected sockets) ?
>> >I haven't yet found any single-line solution for that.
>>
>>This isn't supported, but we'd like to support it.
>
>Oops, the Bad news.
>>  There's a ticket in
>>the issue tracker, <http://twistedmatrix.com/trac/ticket/4387>, 
>>related
>>to this (but with a somewhat wider scope).
>
>Well, that feature will benefit from the feature I need. By the way, 
>twisted
>architecture and abstractions allow one (for a limited number of 
>protocols)
>to transfer the state along with the FD of the opened connection.
>Say, one may want to read HTTP headers and then send
>the connection FD to another process along with the read headers, so it 
>will
>receive and "re-read" them with dataReceived(). Modification of HTTP 
>protocol
>code will not be required here. But we need a modified transport 
>constructor.
>> >Right now I am looking at t.i.unix.Connector and t.i.unix.Port to
>> >understand
>> >how do transports get constructed by them, but well, that is too
>> >complex for a single evening.
>> >Should I really get into the details of implementing my own transport
>> >(or their constructors)
>> >to do what I need? I'm sure there should be something, that I missed 
>>in
>> >the documentation
>> >(or in the code?).
>>
>>Despite not appearing to be private, things like t.i.unix.Connector 
>>and
>>t.i.unix.Port aren't really intended for use by applications.
>
>No, no, I'm only using them as a documentation about what transport 
>looks like
>from the inside of the twisted, to other parts of the framework.
>>
>>This is the right part of Twisted to be looking at if you want to
>>contribute a patch which adds this feature, though.  And I encourage 
>>you
>>to do that. :)
>
>Well, I was trying to get into it during last evening, but it turned 
>out to be
>more appropriate to spend a week or two on that process. It looks, like
>transport abstraction is not documented as a whole, only the user 
>visible
>parts, or better say, protocol visible parts. I am still not sure 
>whether
>it is advisable to subclass a base.BaseConnector or we can simply
>create a transport instance without that "complications". It looks like
>BaseConnector contain some portion of code, that should be reused.
>>
>>The implementation should be fairly straight-forward.  Most things 
>>like
>>Port and Client and Server have a "createInternetSocket" method.  All
>>that's really necessary to use an externally created file descriptor 
>>is
>>get "createInternetSocket" to return that descriptor instead of 
>>creating
>>a new one (or skip the call to the method entirely and just use the
>>descriptor you have already).
>>
>>The biggest question I have is what the API should look like.  Somehow
>>the file descriptor needs to get from your application code (which 
>>knows
>>that inetd put an open TCP connection on fd 0) to the
>>Port/Client/Server.
>
>That depends. Are we going to limit that feature to socket FDs only, or
>should we provide more specific interfaces for different type of files?

Ultimately it would be nice to support it for each transport type 
Twisted supports.  That doesn't mean we have to do it all at once 
though. :)
>
>Two (pipe) FDs may be used to construct full-duplex half-closeable 
>transport too.
>Or may someone be interested also in master pty based transport? That 
>would indeed require some
>terminal-specific support to be present in the transport instance, 
>wouldn't it?
>Like transport.sendBreak()
>Perhaps one may use a full-duplex transport constructed from a tty 
>/slave-pty FD?
>It may be useful to provide analogous interface for half-duplex 
>connections too, IMHO.

Actually, in twisted/internet/process.py ("Do NOT use this module 
directly"), you'll see ProcessReader and ProcessWriter which are 
transports for pipes/ptys.  The normal way to access these is via 
reactor.spawnProcess.  But you'll notice that they even accept a fileno 
as an __init__ argument, unlike most other transports in Twisted.

Mirroring this on the opposite side is twisted/internet/_posixstdio.py, 
which is a standard io transport, and also accepts filenos to its 
__init__.
>I think it may look like
>  connection = somenewmodulename.socketConnection(fd, protocolFactory, 
>addrFamily, sockType, reactor=None)
>or
>  import socket
>  connection = somenewmodulename.socketConnection(socket.fromfd(fd, 
>addrFamily, sockType), protocolFactory, reactor=None)
>
>Create a transport object and associate/build a new protocol instance 
>with/on it.
>For other FD types there should be different functions, returning 
>instances
>of other types.
>
>Would you comment on that?

Something to keep in mind here is that it may be desirable to support 
Windows at some point.  This is one reason why it may make sense to have 
these APIs as methods on the reactor: the reactor can already easily be 
replaced by alternate implementations to cater to different platforms.
>>
>>The obvious options, adding another argument to
>>listen/connectTCP/UNIX/etc, would work, but is somewhat ugly (you have
>>the issue that existing mandatory arguments would just be ignored).
>>
>>Another idea would be adding new methods entirely.  I don't know if
>>that's much better, though.
>
>Adding new methods to reactor? I thought it can live completely 
>separate
>from the reactor code and do not pollute reactor interface. Reactor is 
>only
>used in the process of attaching a FD to a transport when new transport
>registers it's FDs in the reactor, so it can be an (optional?) argument
>to a constructor. However, yes, API consistency may suffer from that.

If it's possible to do this, it's probably a good idea.  Just keep in 
mind that Windows doesn't use FDs for lots of things.  StandardIO shows 
that the API inconsistency is annoying but not fatal.  Plus, we're 
working on an API which can be a layer on top of this to make it all 
consistent again (twisted.internet.endpoints).
>>
>>So, if we can come up with a nice API, I think this will be a pretty
>>quick feature to implement.
>
>I think it could be a set of functions inside a platform-dependent 
>module
>if that functions will be FD-type dependent.
>> >And by the way, I haven't found any socketpair(2) usage in the 
>>twisted
>> >framework (except for tests),
>> >how can that be? Transport based on socketpair sockets will have the
>> >same
>> >implementation, as I need. Is it true, that nobody in twisted 
>>community
>> >uses
>> >anonymous preconnected sockets in real life?
>>
>>Apparently. :)
>
>Oops, surprise!..
>BTW creating a socketpair and forking and then communicating via PB 
>seems
>like an elegant and convenient feature to me. Perhaps non-portable?

Windows doesn't have fork, so yea, you'll run into problems there. :) 
There are also problems with the way fork interacts with kqueue and 
epoll.  The usual approach is reactor.spawnProcess to create an entirely 
new Python process, and then either connect to it over TCP or just use 
stdin/stdout to talk to it.
>> >
>> >PS: I need socket-based transport, that is, full-duplex, half-
>> >closeable, with support
>> >of getting the remote endpoint address and with ability to start TLS 
>>on
>> >top of it
>> >and without implementing every that feature myself :)
>>
>>Hopefully if we can figure out how to create a Twisted transport 
>>object
>>from an existing file descriptor, you should have no trouble with the
>>rest of these.
>
>That's what I need, and I really hoped, that it is already implemented. 
>What a surprise.
>Surely, I would not mind contibuting to such a great project, but first 
>I
>would have to get more understanding of it's abstractions.

I'll answer whatever questions I can. :)

Jean-Paul


From exarkun at twistedmatrix.com  Tue Jul 13 22:34:34 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jul 2010 02:34:34 -0000
Subject: [Twisted-Python] Knowing whether spawnProcess did anything
	useful
In-Reply-To: <4C3CD812.2030203@baudvine.net>
References: <4C3CD812.2030203@baudvine.net>
Message-ID: <20100714023434.2312.1644270933.divmod.xquotient.21@localhost.localdomain>

On 13 Jul, 09:18 pm, dominic at baudvine.net wrote:
>Hiya,
>
>I'm looking for a way to know whether spawnProcess() did anything
>useful.  That is, whether anything has actually been executed. In my
>specific case the executables are all persistent (pluggable modules,
>they stick around for a while) so based on the following snippet I
>thought I could check whether the resulting ProcessTransport has a pid:
>
>"From before IProcessProtocol.makeConnection is called to before
>IProcessProtocol.processEnded is called, pid is an int giving the
>platform process ID of this process. pid is None at all other 
>times."[1]
>
>However, a quick tour on the REPL shows otherwise (than I expected, not
>necessarily otherwise than what the docs say):
>>>>from twisted.internet import reactor
>>>>from twisted.internet import protocol
>>>>p = protocol.ProcessProtocol()
>>>>f = reactor.spawnProcess(p, "fail", ["fail"])
>>>>f
><Process pid=21053 status=-1>
>>>>f.pid
>21053
>
>I thought status might be of some relevance, but it didn't really 
>change
>when I gave it a shot with actual executables.
>
>Something tells me I'm being massively stupid here, but I'm genuinely
>stuck.  Can't really believe that there's no way to do this, though.

Without the reactor running, neither the pid nor the status will ever be 
updated.  The event loop is needed in order to respond to the event of 
the child process exiting.

Also, the usual way to interact with the IProcessTransport provider (the 
Process instance) is via the ProcessProtocol instance.  Subclass it, 
override connectionMade or processExited or one of the other methods and 
wait for the reactor to call them.  Oh, and start up the reactor, too. 
:)

Jean-Paul


From albert.brandl at weiermayer.com  Wed Jul 14 05:20:58 2010
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 14 Jul 2010 11:20:58 +0200
Subject: [Twisted-Python]
	twisted.protocols.basic.NetstringReceiver:	Some errors are
	not visible
In-Reply-To: <g2he2b218021004060347r7b42d2f6v53f7588be7c6833d@mail.gmail.com>
References: <g2he2b218021004060347r7b42d2f6v53f7588be7c6833d@mail.gmail.com>
Message-ID: <20100714092057.GA7846@weiermayer.com>

On Tue, Apr 06, 2010 at 11:47:48AM +0100, Carlos Valiente wrote:
> [...]
> The error message "netstring too long" is shadowed by the except
> block. I'd like to see it in my log files.

The problems described in http://twistedmatrix.com/trac/ticket/4378 
have been fixed now. Would you like to create a new ticket about the
missing log messages? 
-- 

Best regards,

Albert Brandl

Weiermayer Solutions GmbH
Abteistra?e 12
A-4813 Altm?nster
phone: +43 (0) 720 70 30 14
fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com 


From dominic at baudvine.net  Wed Jul 14 08:02:57 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Wed, 14 Jul 2010 14:02:57 +0200
Subject: [Twisted-Python] Knowing whether spawnProcess did anything
	useful
In-Reply-To: <20100714023434.2312.1644270933.divmod.xquotient.21@localhost.localdomain>
References: <4C3CD812.2030203@baudvine.net>
	<20100714023434.2312.1644270933.divmod.xquotient.21@localhost.localdomain>
Message-ID: <4C3DA771.4040005@baudvine.net>

On 14-7-2010 4:34, exarkun at twistedmatrix.com wrote:
> Without the reactor running, neither the pid nor the status will ever be 
> updated.  The event loop is needed in order to respond to the event of 
> the child process exiting.
> 
<snip>

Knew I was forgetting something - starting the reactor would probably be
a fine idea, yeah.  The code I've got on file does all the subclassing
and even starts the reactor, I just blindly forgot to start the reactor
on the REPL.  That's what I get for copying the base of my code from an
example.

Thanks!
-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising


From konrads.smelkovs at gmail.com  Wed Jul 14 10:18:49 2010
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Wed, 14 Jul 2010 17:18:49 +0300
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
Message-ID: <AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>

Maybe there is a firewall that limits incoming connections?
--
Konrads Smelkovs
Applied IT sorcery.


On Tue, Jul 13, 2010 at 3:51 AM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hi Guys,
>
> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.
>
> -J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100714/32c201ae/attachment.htm 

From jaroslaw.fedewicz at gmail.com  Wed Jul 14 11:34:17 2010
From: jaroslaw.fedewicz at gmail.com (=?utf-8?Q?Jaros=C5=82aw_Fedewicz?=)
Date: Wed, 14 Jul 2010 18:34:17 +0300
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>
Message-ID: <5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>


On 14 ???. 2010, at 17:18, Konrads Smelkovs wrote:

> Maybe there is a firewall that limits incoming connections?
> --
> Konrads Smelkovs
> Applied IT sorcery.

Even if it drops packets, it should not block. It should return immediately with a Deferred, which will eventually fail.

-- 
Engineer: How do we do it?
Economist: How much does it cost?
Twisted Developer: Will it block?

From twisted-web at udmvt.ru  Wed Jul 14 12:00:00 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Wed, 14 Jul 2010 20:00:00 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
Message-ID: <20100714160000.GM14318@ruber.office.udmvt.ru>

On Wed, Jul 14, 2010 at 02:31:46AM -0000, exarkun at twistedmatrix.com wrote:
> I'll answer whatever questions I can. :)

Oh, I have some questions...
I asked some questions in the form of suggestions, well, don't take them seriously,
I only ask, not really propose anything. However I'm ready to hear you
about what I'm wrong with.

Here, what I have discovered so far:
There are transport factories in twisted, not defined as such, but really they are,
like tcp.Port and tcp.Connector.

They interface with protocol factories. That interface is asymmetric between
server protocol factory and client protocol factory. Well, the implementation
of client's side protocol factory and server's side should differ, but why should interfaces?
That is okay, while you only have different and asymmetric transport factories
the ones for client transports and the others for server transports.
But is there really something in created and connected transport,
that makes it server's or client's ? I guess nothing, except protocol instance attached.

Q: Why should protocol factory interface "bother" about client/server dichotomy?
For example, why should I be limited to only using PBClientFactory with connectXXX()
variants of transport factories?
Why should I do not want (under some crazy circumstances) to use reverse-connects
and run PBServerFactory with connectXXX()?
Well, maybe not PB, but what about other protocols?
Should it work? Well, I suppose, it would break if you try now, but is
is supposed to be that asymmetric?

And after all, there is absolute symmetry in UDP-based transports.

Q: Consider socketpair() variant - a pair of completely symmetric mutually
connected sockets.
Should I provide transport factory for use with server protocol factories
and another transport factory for use with client protocol factories?

That idea sounds stupid to me, there can be no difference in the implementation,
except in the interfaces to protocol factories.

I see there are some code, that can be moved from tcp.Port and tcp.Connector
to some common base class of an abstract transport factory. That class could
interfere with protocol factory without knowing whether it is server or client.
Protocol factory already knows about it's own asymmetry.

I do identify the events, that protocol factory receives from transport factory as these,
please correct me if I'm wrong:

global (factory-context) events:
- start factory                         doStart
- entering transport creation phase     startedConnecting       <server: when bind&listen succeeds why does anybody
                                                                 not invoke something like startedListenig ?>
- stop factory                          doStop

per transport connection events:
- on transport creation                 <none exists?why?>      <after connect() or listen() returns result, at this point
                                                                 we may decide to prevent further transport instantiation,
                                                                 especially if we are server-side protocol factory>
- transport creation failed             clientConnectionFailed  <server: direct analogy - accept() may return an error,
                                                                 but that event not exists for server. why?>
- transport created succesfully         buildProtocol           <a request to build a protocol instance implies, that
                                                                 transport instance have been succesfully created. or not?>
- build protocol                        buildProtocol           
- after transport and protocol creation clientConnectionMade    <in t.s.pb.PBXXXXFactory, event sent by protocol instance,
                                                                 name not defined in any Interface, why not?>
- transport closed                      clientConnectionLost    <why not define this for server too to be consistent?>

They are not client/servers asymmetric as I see them, but have asymmetric names in twisted
and sometimes when server variants exists, they have no fixed names defined in Interface classes :(

What is the difference between doStart and startedConnecting (together with imaginary startedListening)?

And who is responsible for sending which events? That is not defined in documentation.

What do you think about these names:
doStart()
transportFactoryStarted()
onBeforeTransportCreate()
connectionFailed()
buildProtocol()
connectionMade()
connectionLost()
doStop()
Well, I understand, you will veto them arguing by lot of code using old names,
but I am interested to know will they break the abstraction of protocol factory?

Can please anyone explain the asymmetry of the interfaces of protocol factories
and tell how can it be useful for me.

Thanks for your time.

Alexey.

-- 
? ?????????,
??????? ??????
????????? ?????????????
???? ???????? ??????
???????????? ?????? ????????????????
??? "????????????" 
?????? ? ?????????? ??????????.


From superdupont at gmail.com  Wed Jul 14 12:38:17 2010
From: superdupont at gmail.com (Carlos Valiente)
Date: Wed, 14 Jul 2010 17:38:17 +0100
Subject: [Twisted-Python] twisted.protocols.basic.NetstringReceiver:
	Some errors are not visible
In-Reply-To: <20100714092057.GA7846@weiermayer.com>
References: <g2he2b218021004060347r7b42d2f6v53f7588be7c6833d@mail.gmail.com>
	<20100714092057.GA7846@weiermayer.com>
Message-ID: <AANLkTingz-AEBawG_mCr1M7LvuBwj7Q4x7Fo5yhgqexX@mail.gmail.com>

On Wed, Jul 14, 2010 at 10:20, Albert Brandl
<albert.brandl at weiermayer.com> wrote:
> On Tue, Apr 06, 2010 at 11:47:48AM +0100, Carlos Valiente wrote:
>> [...]
>> The error message "netstring too long" is shadowed by the except
>> block. I'd like to see it in my log files.
>
> The problems described in http://twistedmatrix.com/trac/ticket/4378
> have been fixed now. Would you like to create a new ticket about the
> missing log messages?

Thanks for the heads-up, Albert. I switched from NetstringReceiver to
Int32StringReceiver, so I don't really need the error message any
longer.

C


From luke-lists at hybrid-logic.co.uk  Thu Jul 15 04:33:27 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 15 Jul 2010 09:33:27 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
Message-ID: <1279182807.8628.6.camel@pow>

Hi all,

Is there any existing support for any Twisted HTTP client to simulate
the behaviour of all modern browsers in that -- if an address returns
multiple A records -- and if one IP fails (connection refused, etc) then
the client attempts a number of the other IPs before giving up?

If not, where should I start? I understand that client.Agent is more
modern than client.getPage.

Thanks for an awesome framework!

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420



From rlotun at gmail.com  Thu Jul 15 05:46:00 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 15 Jul 2010 10:46:00 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
In-Reply-To: <1279182807.8628.6.camel@pow>
References: <1279182807.8628.6.camel@pow>
Message-ID: <AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>

Hi Luke,

> Is there any existing support for any Twisted HTTP client to simulate
> the behaviour of all modern browsers in that -- if an address returns
> multiple A records -- and if one IP fails (connection refused, etc) then
> the client attempts a number of the other IPs before giving up?

As for connecting to hosts that resolve to multiple A records - I
presume as a means of load balancing via DNS round robin - I'm not
quite sure this is natively supported in Twisted. I believe since all
TCP connections are mediated via connectTCP hostnames are ultimately
resolved via socket.gethostbyname. I think you really want the support
provided by socket.gethostbyname_ex
(http://docs.python.org/library/socket.html#socket.gethostbyname_ex).

It's a good question though. I'm sure a core dev will come along and
give a proper answer soon ;-)

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:? rlotun at gmail.com
work:?? reza at tweetdeck.com
twitter: @rlotun


From itamar at itamarst.org  Thu Jul 15 07:57:50 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Jul 2010 07:57:50 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
Message-ID: <1279195070.1619.0.camel@blake>

On Thu, 2010-07-15 at 10:46 +0100, Reza Lotun wrote:

> I believe since all
> TCP connections are mediated via connectTCP hostnames are ultimately
> resolved via socket.gethostbyname.

Twisted uses a thread pool to do DNS lookups by default, so this
shouldn't block anything.



From itamar at itamarst.org  Thu Jul 15 08:06:00 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Jul 2010 08:06:00 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
Message-ID: <1279195560.1619.8.camel@blake>

On Thu, 2010-07-15 at 10:46 +0100, Reza Lotun wrote:

> As for connecting to hosts that resolve to multiple A records - I
> presume as a means of load balancing via DNS round robin - I'm not
> quite sure this is natively supported in Twisted. I believe since all
> TCP connections are mediated via connectTCP hostnames are ultimately
> resolved via socket.gethostbyname. I think you really want the support
> provided by socket.gethostbyname_ex
> (http://docs.python.org/library/socket.html#socket.gethostbyname_ex).
> 
> It's a good question though. I'm sure a core dev will come along and
> give a proper answer soon ;-)

Gar. I should read better. Twisted uses a threadpool of gethostname by
default, but you can plug in your own resolver (e.g. you can use
twisted.names):

http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver

The question is whether the client code re-resolves on each re-connect,
and whether the current lookup interface is sufficient for this use
case.

Alas, I'm pretty sure the answer is no.

You could however always just do the DNS lookup yourself, passing
resulting correct IP to connectTCP, just make sure you don't block (e.g.
by using deferToThread to call gethostbyname_ex).



From luke-lists at hybrid-logic.co.uk  Thu Jul 15 08:33:41 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 15 Jul 2010 13:33:41 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <1279195560.1619.8.camel@blake>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake>
Message-ID: <1279197221.8628.119.camel@pow>

On Thu, 2010-07-15 at 08:06 -0400, Itamar Turner-Trauring wrote:
> On Thu, 2010-07-15 at 10:46 +0100, Reza Lotun wrote:
> 
> > As for connecting to hosts that resolve to multiple A records - I
> > presume as a means of load balancing via DNS round robin

We're actually using it to provide redundancy in this instance. In our
application any request for any site can be made to any (live) server,
so having dead servers in the pool of A records doesn't matter so long
as real web browsers failover to some other A record within a second,
which they do! http://crypto.stanford.edu/dns/dns-rebinding.pdf

The problem is that my test application uses client.getPage which,
because it uses the reactor's standard DNS lookup mechanism, picks just
one A record and sticks to it. So, it reports connection errors (some
fraction of the time, as A records are randomised) even when the user of
a "real" web browser would not experience them. These errors go away
when the dead server(s) drop out of the DNS pool and reactor's lookups
stops returning the dead IP, but this takes some time.


> Gar. I should read better. Twisted uses a threadpool of gethostname by
> default, but you can plug in your own resolver (e.g. you can use
> twisted.names):
> 
> http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver
> 
> The question is whether the client code re-resolves on each re-connect,
> and whether the current lookup interface is sufficient for this use
> case.
> 
> Alas, I'm pretty sure the answer is no.
> 
> You could however always just do the DNS lookup yourself, passing
> resulting correct IP to connectTCP, just make sure you don't block (e.g.
> by using deferToThread to call gethostbyname_ex).

Thanks Itamar, this is massively useful. I'll try subclassing
twisted.web.client.Agent to do its own DNS lookups with twisted.names so
as to be aware of the full list of A records returned. It would then
attempt all the IP addresses in turn until it finds one which works,
giving up only if all the IPs yield connection errors. This should
mirror the behaviour of the majority of web browsers "in the wild".

Would you be interested in having this code contributed back to Twisted
if I can get it working? It might be a useful addition to the Agent.

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420



From itamar at itamarst.org  Thu Jul 15 08:55:25 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Jul 2010 08:55:25 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <1279197221.8628.119.camel@pow>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake>  <1279197221.8628.119.camel@pow>
Message-ID: <1279198525.1619.9.camel@blake>

On Thu, 2010-07-15 at 13:33 +0100, Luke Marsden wrote:
> Thanks Itamar, this is massively useful. I'll try subclassing
> twisted.web.client.Agent to do its own DNS lookups with twisted.names so
> as to be aware of the full list of A records returned. It would then
> attempt all the IP addresses in turn until it finds one which works,
> giving up only if all the IPs yield connection errors. This should
> mirror the behaviour of the majority of web browsers "in the wild".

I suspect you can do this without subclassing... pass in IP address, and
just make sure you pass correct Host header. I forget the exact API
though.



From rlotun at gmail.com  Thu Jul 15 09:28:55 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 15 Jul 2010 14:28:55 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
In-Reply-To: <1279198525.1619.9.camel@blake>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<1279198525.1619.9.camel@blake>
Message-ID: <AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>

> I suspect you can do this without subclassing... pass in IP address, and
> just make sure you pass correct Host header. I forget the exact API
> though.

Yeah, I was about to say, why not just call socket.gethostbyname_ex in
deferToThread and in the callback do a regular Agent.request?

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:? rlotun at gmail.com
work:?? reza at tweetdeck.com
twitter: @rlotun


From luke-lists at hybrid-logic.co.uk  Thu Jul 15 09:54:22 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 15 Jul 2010 14:54:22 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<1279198525.1619.9.camel@blake>
	<AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>
Message-ID: <1279202062.8628.153.camel@pow>

On Thu, 2010-07-15 at 14:28 +0100, Reza Lotun wrote:
> > I suspect you can do this without subclassing... pass in IP address, and
> > just make sure you pass correct Host header. I forget the exact API
> > though.

This makes sense. Conceptually I had considered it to be the
responsibility of the web client itself to handle the reconnection, not
the calling code, hence my plan for a subclass. But a separate class
which uses the Agent's API makes a lot more sense, and it can equally
provide the same interface as Agent so that any code which uses Agent
can use it without modifications.

> Yeah, I was about to say, why not just call socket.gethostbyname_ex in
> deferToThread and in the callback do a regular Agent.request?

Sounds like a plan! Thanks guys.

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420



From exarkun at twistedmatrix.com  Thu Jul 15 10:56:45 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Jul 2010 14:56:45 -0000
Subject: [Twisted-Python] Twisted HTTP client supporting failover
	for	multiple A records?
In-Reply-To: <1279202062.8628.153.camel@pow>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<1279198525.1619.9.camel@blake>
	<AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>
	<1279202062.8628.153.camel@pow>
Message-ID: <20100715145645.1664.934038279.divmod.xquotient.4@localhost.localdomain>

On 01:54 pm, luke-lists at hybrid-logic.co.uk wrote:
>On Thu, 2010-07-15 at 14:28 +0100, Reza Lotun wrote:
>> > I suspect you can do this without subclassing... pass in IP address, 
>>and
>> > just make sure you pass correct Host header. I forget the exact API
>> > though.
>
>[snip]
>But a separate class
>which uses the Agent's API makes a lot more sense, and it can equally
>provide the same interface as Agent so that any code which uses Agent
>can use it without modifications.

Hooray.  This is exactly the intended approach to extending Agent.  I'm 
glad you figured it out on your own. :)

Jean-Paul


From exarkun at twistedmatrix.com  Thu Jul 15 12:15:43 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Jul 2010 16:15:43 -0000
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100714160000.GM14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
Message-ID: <20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>

On 14 Jul, 04:00 pm, twisted-web at udmvt.ru wrote:
>On Wed, Jul 14, 2010 at 02:31:46AM -0000, exarkun at twistedmatrix.com 
>wrote:
>>I'll answer whatever questions I can. :)
>
>Oh, I have some questions...
>I asked some questions in the form of suggestions, well, don't take 
>them seriously,
>I only ask, not really propose anything. However I'm ready to hear you
>about what I'm wrong with.
>
>Here, what I have discovered so far:
>There are transport factories in twisted, not defined as such, but 
>really they are,
>like tcp.Port and tcp.Connector.
>
>They interface with protocol factories. That interface is asymmetric 
>between
>server protocol factory and client protocol factory. Well, the 
>implementation
>of client's side protocol factory and server's side should differ, but 
>why should interfaces?

startedConnecting, clientConnectionFailed, and clientConnectionLost only 
exist to facilitate client reconnection.  See the end of the email for 
more about that.
>That is okay, while you only have different and asymmetric transport 
>factories
>the ones for client transports and the others for server transports.
>But is there really something in created and connected transport,
>that makes it server's or client's ? I guess nothing, except protocol 
>instance attached.

That's probably true.  And there could probably be a little less 
duplication of code between the Client and Server transports (although 
there's not a *lot* now).
>
>Q: Why should protocol factory interface "bother" about client/server 
>dichotomy?
>For example, why should I be limited to only using PBClientFactory with 
>connectXXX()
>variants of transport factories?
>Why should I do not want (under some crazy circumstances) to use 
>reverse-connects
>and run PBServerFactory with connectXXX()?
>Well, maybe not PB, but what about other protocols?
>Should it work? Well, I suppose, it would break if you try now, but is
>is supposed to be that asymmetric?

You can certainly implement protocols that don't care about which side 
of the underlying transport is the client and which side is the server. 
It probably wouldn't be much work to get PB to be such an 
implementation.  But apparently no one really cares about this, 
otherwise it might have come up before. ;)
>And after all, there is absolute symmetry in UDP-based transports.

Okay.  But SOCK_DGRAM is completely different from SOCK_STREAM, so I 
don't know if this comparison really means anything.
>Q: Consider socketpair() variant - a pair of completely symmetric 
>mutually
>connected sockets.
>Should I provide transport factory for use with server protocol 
>factories
>and another transport factory for use with client protocol factories?
>
>That idea sounds stupid to me, there can be no difference in the 
>implementation,
>except in the interfaces to protocol factories.

I'd probably start off with a low-level interface that's completely 
symmetric and doesn't involve factories.  After all, it's not like 
socketpairs can spontaneously spring into existing (like client 
connections on a server can).  On top of that, if you want, construct an 
API using factories to support multiple connections.
>
>I see there are some code, that can be moved from tcp.Port and 
>tcp.Connector
>to some common base class of an abstract transport factory. That class 
>could
>interfere with protocol factory without knowing whether it is server or 
>client.
>Protocol factory already knows about it's own asymmetry.
>
>I do identify the events, that protocol factory receives from transport 
>factory as these,
>please correct me if I'm wrong:
>
>global (factory-context) events:
>- start factory                         doStart
>- entering transport creation phase     startedConnecting 
><server: when bind&listen succeeds why does anybody
>                                                                 not 
>invoke something like startedListenig ?>
>- stop factory                          doStop

Make sure you don't get confused when you use "start factory" and "stop 
factory" as labels for doStart and doStop.  The base implementation of 
doStart calls startFactory and the base implementation of doStop calls 
stopFactory.

There's no startedListening because no one imagined there might be a 
kind of port that could only be created asynchronously.  listenTCP, 
listenSSL, listenUNIX, listenUDP, listenMulticast can all complete 
immediately, so they all return an IPort provider.  So if you wanted the 
startedListening callback, you can just call it yourself immediately 
after you call the listenXXX method.

This may be an oversight for the general case.  Vertex, for example, 
certainly wants to expose an asynchronous listen API.  Other similar 
use-cases might be a listen API that uses UPnP to request a hole in a 
firewall.

Still, listening is a one-off event.  So if you can at least return a 
Deferred from your listen API, then when the Deferred fires, you have 
your "started listening" notification.
>
>per transport connection events:
>- on transport creation                 <none exists?why?>      <after 
>connect() or listen() returns result, at this point
>                                                                 we may 
>decide to prevent further transport instantiation,
>especially if we are server-side protocol factory>

The factory can choose to do this in buildProtocol.
>- transport creation failed             clientConnectionFailed 
><server: direct analogy - accept() may return an error,
>                                                                 but 
>that event not exists for server. why?>

I don't think accept() failing is really analogous to 
clientConnectionFailed.  Nevertheless, exposing accept() failures to 
application code is definitely a good idea.  There's currently a ticket 
open for adding that feature.
>- transport created succesfully         buildProtocol           <a 
>request to build a protocol instance implies, that
>transport instance have been succesfully created. or not?>
>- build protocol                        buildProtocol

In general, no such implication exists.  It just means someone wants a 
new protocol instance to do something with.  Usually that's because 
there's a new transport to connect it to, but maybe it's just a unit 
test calling the method.
>- after transport and protocol creation clientConnectionMade    <in 
>t.s.pb.PBXXXXFactory, event sent by protocol instance,
>                                                                 name 
>not defined in any Interface, why not?>


PB wanted to put some logic on the factory when a new connection was 
first established.  I'm not sure why it does this instead of putting the 
logic in Protocol.connectionMade.
>- transport closed                      clientConnectionLost    <why 
>not define this for server too to be consistent?>

Consistency is alright, but sometimes it's not a sufficient 
justification.  Over the years, I think the *existence* of 
ClientFactory.clientConnectionLost has caused more confusion and 
questions than the *lack* of ServerFactory.clientConnectionLost.  In 
both cases, the information is available from Protocol.connectionLost.
>They are not client/servers asymmetric as I see them, but have 
>asymmetric names in twisted
>and sometimes when server variants exists, they have no fixed names 
>defined in Interface classes :(
>
>What is the difference between doStart and startedConnecting (together 
>with imaginary startedListening)?

doStart is called when a factory is hooked up to a network event source. 
That means there'll probably be just one call to doStart.  For a 
reconnecting client factory, startedConnecting may be called many times.

But really, doStart/startFactory/doStop/stopFactory are pretty obscure 
and rarely used.  I wouldn't be surprised if we could come up with a 
better way to present this information pretty easily.
>And who is responsible for sending which events? That is not defined in 
>documentation.

The reactor implementation.  There's no "how to implement a reactor" 
document because people don't do that very often.
>What do you think about these names:
>doStart()
>transportFactoryStarted()
>onBeforeTransportCreate()
>connectionFailed()
>buildProtocol()
>connectionMade()
>connectionLost()
>doStop()
>Well, I understand, you will veto them arguing by lot of code using old 
>names,
>but I am interested to know will they break the abstraction of protocol 
>factory?

What are they methods on?  What are the precise semantics of each?
>Can please anyone explain the asymmetry of the interfaces of protocol 
>factories
>and tell how can it be useful for me.

There's a lot of noise amongst the long-time Twisted developers about 
how client factories are no good and we should just dump them, leaving 
only server factories.  That doesn't exactly make things symmetric, but 
it gets rid of the asymmetric factory interfaces. :)
>Thanks for your time.
>
>Alexey.
>
>--
>D1 D3C2C0C6C5CDC8C5CC,
>A0CBC5CAD1C5C9 B8CFC0C3C8CD
>D1C8D1D2C5CCCDDBC9 C0C4CCC8CDC8D1D2D0C0D2CED0
>D6C5D5C0 CFC5D0C5C4C0D7C8 C4C0CDCDDBD5
>D2C5D5CDC8D7C5D1CACEC3CE D6C5CDD2D0C0 D2C5CBC5CACECCCCD3CDC8CAC0D6C8C9
>AEA0AE "A2CECBC3C0B2C5CBC5CACECC"
>D4C8CBC8C0CB C2 B3C4CCD3D0D2D1CACEC9 D0C5D1CFD3C1CBC8CAC5.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From drken567 at gmail.com  Thu Jul 15 16:32:33 2010
From: drken567 at gmail.com (Ken MacDonald)
Date: Thu, 15 Jul 2010 16:32:33 -0400
Subject: [Twisted-Python] Deferred instance has no attribute '__getitem__'
	??????
Message-ID: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>

I have a function and two convenience functions, like this:

    @defer.inlineCallbacks
    def round_value_and_percent(id, value, percent):
            daily = 1.

            params = dict(nutidin=id, valuein=value, dvin=daily)
            query = "ROUND_NUT_DV"
            q_result = yield named_query_param(ctx, "nut", query, params)
// db query
            rounded = {}
            rounded["value"] = q_result[0][0]
            rounded["percent"] = q_result[0][1]
            defer.returnValue((rounded['value'], rounded['percent']))

    @defer.inlineCallbacks
    def round_val(id, value, rule):
        """
        Return first element of round_value_and_percent
        """
        defer.returnValue(round_value_and_percent(id, value, 0, rule)[0])


    @defer.inlineCallbacks
    def round_per(id, percent, rule):
        """
        Return second element of round_value_and_percent.
        """
        defer.returnValue(round_value_and_percent(id, 0, percent, rule)[1])

When I do:
result = yield round_val(1, 2, 3)

I get this: Deferred instance has no attribute '__getitem__'

Clues appreciated!
Ken
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100715/fd171361/attachment.htm 

From washort at twistedmatrix.com  Thu Jul 15 16:58:10 2010
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 15 Jul 2010 13:58:10 -0700
Subject: [Twisted-Python] Deferred instance has no attribute
	'__getitem__' ??????
In-Reply-To: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
References: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
Message-ID: <AANLkTini7voL_kcPbEOLqyxGvHLnpg6KTB1Mm9cB2tg0@mail.gmail.com>

>     @defer.inlineCallbacks
>     def round_val(id, value, rule):
>         """
>         Return first element of round_value_and_percent
>         """
>         defer.returnValue(round_value_and_percent(id, value, 0, rule)[0])

> When I do:
> result = yield round_val(1, 2, 3)
>
> I get this: Deferred instance has no attribute '__getitem__'
>

round_value_and_percent returns a Deferred. You probably want:

     @defer.inlineCallbacks
     def round_val(id, value, rule):
         """
         Return first element of round_value_and_percent
         """
        x = yield round_value_and_percent(id, value, 0, rule)
         defer.returnValue(x[0])


From db3l.net at gmail.com  Thu Jul 15 19:18:23 2010
From: db3l.net at gmail.com (David Bolen)
Date: Thu, 15 Jul 2010 19:18:23 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
Message-ID: <m2eif449mo.fsf@valheru.db3l.homeip.net>

Luke Marsden <luke-lists at hybrid-logic.co.uk> writes:

> We're actually using it to provide redundancy in this instance. In our
> application any request for any site can be made to any (live) server,
> so having dead servers in the pool of A records doesn't matter so long
> as real web browsers failover to some other A record within a second,
> which they do! http://crypto.stanford.edu/dns/dns-rebinding.pdf

Be aware that the time to failover to an alternate A record need not
be that fast depending on the sort of failure involved.  Failover can
only occur quickly as long as the outage (network unreachable, port no
longer active on the host, etc..) is such that the connection attempt
is explicitly rejected by the target host or a router along the way.

If it's a more complicated outage (e.g., a routing loop or total
machine failure) for which no explicit failure response will be
received by the client, you'll be subject to the client's connect
timeout (one per each failing address and attempt to that address it
tries).  These may vary by client and/or platform, but can easily be
30-60s - certainly long enough for the human involved to potentially
want to give up.  Also, since web browsers typically cache DNS
responses, if a bad address is early in the list, a timeout will be
encountered for each and every individual browser request generated.

I did a quick test with a stock FireFox 3.6 under OSX and with a bad
initial A record (non-existent host) it took about 75s to failover to
the next A record.  In my test case even that was unusable since the
host I was referencing had other references to itself needed to load
that home page, and each of those references themselves took another
75 seconds to time out.  So it took more than 2 minutes for me to see
the page I wanted, which I presume most people would give up on.

That's not to say using multiple A records isn't a helpful practice
for many sorts of outages (especially to permit controlled
maintenance).  Just don't expect it to necessarily be sufficient in
all failure modes depending on the behavior you want clients to
experience.

If this is strictly limited to a client you control, it's much less of
an issue, since you can drop the TCP connect timeout much lower than
what it defaults to, though you still probably can't match how fast it
can happen for rejected connections, since you'll want to leave enough
room for occasional latency or response time issues without
immediately failing over.  But you can do a lot better than the system
defaults.

-- David



From glyph at twistedmatrix.com  Thu Jul 15 23:38:44 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 15 Jul 2010 23:38:44 -0400
Subject: [Twisted-Python] Deferred instance has no attribute
	'__getitem__' ??????
In-Reply-To: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
References: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
Message-ID: <AF751E95-2C1E-4789-B296-BC404DAA5F21@twistedmatrix.com>


On Jul 15, 2010, at 4:32 PM, Ken MacDonald wrote:

>     @defer.inlineCallbacks
>     def round_val(id, value, rule):
>         """
>         Return first element of round_value_and_percent
>         """
>         defer.returnValue(round_value_and_percent(id, value, 0, rule)[0])

> When I do:
> result = yield round_val(1, 2, 3)
> 
> I get this: Deferred instance has no attribute '__getitem__'
> 
> Clues appreciated!


@inlineCallbacks must decorate only generator functions.

Since 'yield' doesn't appear anywhere in the body of round_val (or, for that matter, round_per) this code will break in other ways.  Allen Short's suggestion will fix your code because it added a 'yield', but you need to be aware of this issue in case there are other such functions in the future that don't actually handle any Deferreds.

Also, inlineCallbacks adds some overhead, and really should only be used when the resulting code is easier to read.  Personally, I think a simpler definition of round_val would be simply

    def round_val(id, value, rule):
        """
        Return first element of round_value_and_percent
        """
        return round_value_and_percent(id, value, 0, rule).addCallback(
            lambda valueAndPercent: valueAndPercent[0]
        )

no @inlineCallbacks required.



From rlotun at gmail.com  Fri Jul 16 09:07:57 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 16 Jul 2010 14:07:57 +0100
Subject: [Twisted-Python] WebSocket Support #4173
Message-ID: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>

Hi All,

As suggested by therve (Thomas) I just wanted to kick off a discussion
about the current state of the WebSocket ticket
(http://http://twistedmatrix.com/trac/ticket/4173).

At the moment there are two patches linked against the ticket - mine
and progrium's (Jeff?). Based on Jeff's comments it seems that while
his patch may contain a more elegant implementation (to be honest, I
haven't looked carefully at it yet), my patch seems to work against
the dev version of chromium.

Is there any way we can work to combine the patches, and extend the unit tests?

Cheers,
Reza


-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:? rlotun at gmail.com
work:?? reza at tweetdeck.com
twitter: @rlotun


From drken567 at gmail.com  Fri Jul 16 09:32:08 2010
From: drken567 at gmail.com (Ken MacDonald)
Date: Fri, 16 Jul 2010 09:32:08 -0400
Subject: [Twisted-Python] Deferred instance has no attribute
	'__getitem__' ??????
In-Reply-To: <AF751E95-2C1E-4789-B296-BC404DAA5F21@twistedmatrix.com>
References: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com> 
	<AF751E95-2C1E-4789-B296-BC404DAA5F21@twistedmatrix.com>
Message-ID: <AANLkTimeNtEamcy5ogpOIfVH-UVZeHNpoOcR9maA4eJr@mail.gmail.com>

Thanks for the assist, we ended up using something quite  similar to this.
I'm refactoring a portion of an app that was originally all in python, but
now some functions were required to use the DB stored procedures instead for
compatibility, and they weren't designed to be used in Twisted-fashion! On
to the next interesting Twisted problem.....
Ken

@inlineCallbacks must decorate only generator functions.
>
> Since 'yield' doesn't appear anywhere in the body of round_val (or, for
> that matter, round_per) this code will break in other ways.  Allen Short's
> suggestion will fix your code because it added a 'yield', but you need to be
> aware of this issue in case there are other such functions in the future
> that don't actually handle any Deferreds.
>
> Also, inlineCallbacks adds some overhead, and really should only be used
> when the resulting code is easier to read.  Personally, I think a simpler
> definition of round_val would be simply
>
>    def round_val(id, value, rule):
>        """
>        Return first element of round_value_and_percent
>        """
>         return round_value_and_percent(id, value, 0, rule).addCallback(
>            lambda valueAndPercent: valueAndPercent[0]
>        )
>
> no @inlineCallbacks required.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100716/82d50c8b/attachment-0001.htm 

From luke-lists at hybrid-logic.co.uk  Fri Jul 16 15:24:13 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Fri, 16 Jul 2010 20:24:13 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <m2eif449mo.fsf@valheru.db3l.homeip.net>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<m2eif449mo.fsf@valheru.db3l.homeip.net>
Message-ID: <1279308253.2622.298.camel@pow>

Hi David,

> That's not to say using multiple A records isn't a helpful practice
> for many sorts of outages (especially to permit controlled
> maintenance).  Just don't expect it to necessarily be sufficient in
> all failure modes depending on the behavior you want clients to
> experience.

Indeed, in our application it's considered an optimisation over DNS
failover. This is why we also use a low TTL (30 seconds) to purge the
bad A records out of the pool as soon as possible.

> If this is strictly limited to a client you control, it's much less of
> an issue, since you can drop the TCP connect timeout much lower than
> what it defaults to, though you still probably can't match how fast it
> can happen for rejected connections, since you'll want to leave enough
> room for occasional latency or response time issues without
> immediately failing over.  But you can do a lot better than the system
> defaults.

Unfortunately we have no control over the clients' configuration (this
is a LAMP web hosting environment). But 30 seconds is considered much
more acceptable than the days it can often take a manual repair job if a
server goes down.

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420



From exarkun at twistedmatrix.com  Sat Jul 17 11:21:10 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 17 Jul 2010 15:21:10 -0000
Subject: [Twisted-Python] WebSocket Support #4173
In-Reply-To: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
References: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
Message-ID: <20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>

On 16 Jul, 01:07 pm, rlotun at gmail.com wrote:
>Hi All,
>
>As suggested by therve (Thomas) I just wanted to kick off a discussion
>about the current state of the WebSocket ticket
>(http://http://twistedmatrix.com/trac/ticket/4173).
>
>At the moment there are two patches linked against the ticket - mine
>and progrium's (Jeff?). Based on Jeff's comments it seems that while
>his patch may contain a more elegant implementation (to be honest, I
>haven't looked carefully at it yet), my patch seems to work against
>the dev version of chromium.
>
>Is there any way we can work to combine the patches, and extend the 
>unit tests?

I'm not invested in websockets at this point.  I'm not using them for 
anything and I don't anticipate using them for anything in the 
foreseeable future.

That said, as a lot of people seem to be excited about them, I hope 
Twisted will eventually have nice support for them.

It seems like the pace of revision of the specification demands 
something different from Twisted's normal development/release cycle 
though.  How would people feel about taking the code from #4173 and 
developing it outside of Twisted until the specification is finalized, 
then moving it back in?  As far as I know, it should be equally easy to 
implement as an external feature for Twisted Web as it is to do as an 
integral part.  And since there are so many people interested in this, 
moving the source into a VCS with a better distributed workflow and 
better merging features seems to make sense.

Jean-Paul


From konrads at smelkovs.com  Sun Jul 18 04:58:30 2010
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sun, 18 Jul 2010 11:58:30 +0300
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com> 
	<AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com> 
	<5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>
Message-ID: <AANLkTinNMv9NRzkXuse8BCBQNxAoMCpQPGvok2Id5TBO@mail.gmail.com>

Not unless it drops it on the floor as opposed to reject with icmp
--
Konrads Smelkovs
Applied IT sorcery.


2010/7/14 Jaros?aw Fedewicz <jaroslaw.fedewicz at gmail.com>

>
> On 14 ???. 2010, at 17:18, Konrads Smelkovs wrote:
>
> > Maybe there is a firewall that limits incoming connections?
> > --
> > Konrads Smelkovs
> > Applied IT sorcery.
>
> Even if it drops packets, it should not block. It should return immediately
> with a Deferred, which will eventually fail.
>
> --
> Engineer: How do we do it?
> Economist: How much does it cost?
> Twisted Developer: Will it block?
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100718/f0817de1/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jul 18 09:36:34 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jul 2010 13:36:34 -0000
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTinNMv9NRzkXuse8BCBQNxAoMCpQPGvok2Id5TBO@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>
	<5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>
	<AANLkTinNMv9NRzkXuse8BCBQNxAoMCpQPGvok2Id5TBO@mail.gmail.com>
Message-ID: <20100718133634.26967.620803649.divmod.xquotient.8@localhost.localdomain>

On 08:58 am, konrads at smelkovs.com wrote:
>Not unless it drops it on the floor as opposed to reject with icmp

No.  It should never block.

Jean-Paul
>--
>Konrads Smelkovs
>Applied IT sorcery.
>
>
>2010/7/14 Jaros2aw Fedewicz <jaroslaw.fedewicz at gmail.com>
>>
>>On 14 CBC8CF. 2010, at 17:18, Konrads Smelkovs wrote:
>>
>> > Maybe there is a firewall that limits incoming connections?
>> > --
>> > Konrads Smelkovs
>> > Applied IT sorcery.
>>
>>Even if it drops packets, it should not block. It should return 
>>immediately
>>with a Deferred, which will eventually fail.
>>
>>--
>>Engineer: How do we do it?
>>Economist: How much does it cost?
>>Twisted Developer: Will it block?
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From exarkun at twistedmatrix.com  Sun Jul 18 10:15:42 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jul 2010 14:15:42 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1279462542.18.666437835@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100718/08da5e7f/attachment.htm 

From glyph at twistedmatrix.com  Sun Jul 18 16:08:04 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 18 Jul 2010 16:08:04 -0400
Subject: [Twisted-Python] WebSocket Support #4173
In-Reply-To: <20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>
References: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
	<20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>
Message-ID: <04F73A4E-5DA1-4C5E-8B70-8BD49CE20AF2@twistedmatrix.com>


On Jul 17, 2010, at 11:21 AM, exarkun at twistedmatrix.com wrote:

> It seems like the pace of revision of the specification demands 
> something different from Twisted's normal development/release cycle 
> though.  How would people feel about taking the code from #4173 and 
> developing it outside of Twisted until the specification is finalized, 
> then moving it back in?  As far as I know, it should be equally easy to 
> implement as an external feature for Twisted Web as it is to do as an 
> integral part.  And since there are so many people interested in this, 
> moving the source into a VCS with a better distributed workflow and 
> better merging features seems to make sense.


It looks like this suggestion has already been acted upon: <http://github.com/rlotun/txWebSocket>.  I noted the same on the ticket.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100718/a51dec42/attachment.htm 

From rlotun at gmail.com  Sun Jul 18 16:16:15 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Sun, 18 Jul 2010 21:16:15 +0100
Subject: [Twisted-Python] WebSocket Support #4173
In-Reply-To: <04F73A4E-5DA1-4C5E-8B70-8BD49CE20AF2@twistedmatrix.com>
References: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
	<20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>
	<04F73A4E-5DA1-4C5E-8B70-8BD49CE20AF2@twistedmatrix.com>
Message-ID: <AANLkTikaMFkm8oIB_tG0cwYwPFkpyMCoM3kiMdHkBZGL@mail.gmail.com>

On Sun, Jul 18, 2010 at 9:08 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> It looks like this suggestion has already been acted upon:
> <http://github.com/rlotun/txWebSocket>. ?I noted the same on the ticket.

Thanks glyph, was just about to mention that. Everyone is welcome to
submit issues against that regarding Twisted WebSocket support. As
soon as the spec settles down we can bring the discussion back to the
ticket for proper review etc.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:? rlotun at gmail.com
work:?? reza at tweetdeck.com
twitter: @rlotun


From zooko at zooko.com  Mon Jul 19 12:12:49 2010
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Mon, 19 Jul 2010 10:12:49 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.7.1
Message-ID: <AANLkTik7g0RIOr72WYneUumTkJQiWG2O99VRywDIqz4U@mail.gmail.com>

ANNOUNCING Tahoe, the Least-Authority File System, v1.7.1

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.7.1 of Tahoe-LAFS, an extremely
reliable distributed storage system.

Tahoe-LAFS is the first distributed storage system which
offers "provider-independent security"?meaning that not even
the operators of your storage servers can read or alter your
data without your consent. Here is the one-page explanation of
its unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

Tahoe-LAFS v1.7.1 is the successor to v1.7.0, which was
released June 18, 2010 [1].

v1.7.1 is a stable minor release which adds several bugfixes
and improvements in security, forward-compatibility,
packaging, usability, and portability. See the NEWS file [2]
for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers are
compromised by by an attacker, the entire filesystem continues
to work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers have
built other projects on top of Tahoe-LAFS and have integrated
Tahoe-LAFS with existing systems.

These include frontends for Windows, Macintosh, JavaScript,
iPhone, and Android, and plugins for Hadoop, bzr, mercurial,
duplicity, TiddlyWiki, and more. See the Related Projects page
on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or "cloud storage" systems.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all currently known issues please see the
known_issues.txt file [4].)


COMPATIBILITY

This release is fully compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the tenth release in the version 1 series. This series
of Tahoe-LAFS will be actively supported and maintained for
the forseeable future, and future versions of Tahoe-LAFS will
retain the ability to read and write files compatible with
this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they have continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports. Thank you to Allmydata,
Inc. for their generous and public-spirited support.

Google, Inc. is sponsoring Tahoe-LAFS development as part of
the Google Summer of Code 2010. Google suggested that we
should apply for the Summer of Code program, and when we did
they generously awarded four sponsorships to students from
around the world to hack on Tahoe-LAFS this summer. Thank you
to Google, Inc. for their generous and public-spirited
support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the fifth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

David-Sarah Hopwood and Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

July 18, 2010
Rainhill, Merseyside, UK and Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4514
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=4577
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=4567
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/


From jasonjwwilliams at gmail.com  Mon Jul 19 13:19:59 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 19 Jul 2010 11:19:59 -0600
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
Message-ID: <AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>

Hey Glyph,

Sorry it took me a week...thanks for looking at it. This is an
approximation of just the SMTP logic that I thought was blocking. It
appears not to block, but has an issue executing the other deferreds.

http://gist.github.com/481684

-J

On Mon, Jul 12, 2010 at 6:53 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Jul 12, 2010, at 8:51 PM, Jason J. W. Williams wrote:
>
> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.
>
> They're absolutely not supposed to be! ?If you can reproduce this, you've
> definitely found a bug. ?(A quick search doesn't turn up any existing bugs.)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From glyph at twistedmatrix.com  Mon Jul 19 23:35:47 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Jul 2010 23:35:47 -0400
Subject: [Twisted-Python] [Twisted-web] Mirror Down
In-Reply-To: <20100720022017.27251.420066821.divmod.xquotient.75@localhost.localdomain>
References: <4C4452EC.2060202@gmail.com>
	<20100720022017.27251.420066821.divmod.xquotient.75@localhost.localdomain>
Message-ID: <EC49D719-F997-4FB3-95B5-9C894C35B914@twistedmatrix.com>


On Jul 19, 2010, at 10:20 PM, exarkun at twistedmatrix.com wrote:

> On 19 Jul, 01:28 pm, nickpholden at gmail.com wrote:
>> Hi,
>> 
>> The main mirror for the twisted download is down, this is causing
>> easy_install to hang for ages and fail when I try and install:
> 
> For Twisted 10.1, we took the extra step of loading the tarball to PyPI 
> to address this issue.  Apparently that was pointless, though?  Because 
> easy_install doesn't care about the downloads available on PyPI?  It'd 
> be good to know if this is the case, so we can consider whether or not 
> to waste the time for the next release.

As an experiment, I took the _additional_ step of updating the "download_url" field to point at the PyPI URL, <http://pypi.python.org/packages/source/T/Twisted/Twisted-10.1.0.tar.bz2>.

Before I did this, easy_install selected the download link from twistedmatrix.com.  Now, it reliably selects the PyPI URL first.

Looking at the history now, I can see that therve actually updated the download_url to something else already, but now I can't see what he set it to.  Maybe it was pointing at "twistedmatrix.com" and that's why it was screen-scraping?

I am not sure how to *remove* the download_url, though; it might be interesting to see what PyPI does in that case.

Can anyone with some more direct knowledge of how PyPI works comment on this?

(Cross-posting to the main Twisted list because this is of general interest.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100719/ea1b66c6/attachment.htm 

From glyph at twistedmatrix.com  Mon Jul 19 23:45:51 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Jul 2010 23:45:51 -0400
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
	<AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
Message-ID: <C543E9D9-28C0-4B79-99F0-5794CE664409@twistedmatrix.com>


On Jul 19, 2010, at 1:19 PM, Jason J. W. Williams wrote:

> Sorry it took me a week...thanks for looking at it. This is an
> approximation of just the SMTP logic that I thought was blocking. It
> appears not to block, but has an issue executing the other deferreds.
> 
> http://gist.github.com/481684

Well, whew!  I'm glad that you haven't discovered a bug that serious, at least :).

(Apologies that I don't have the energy to sift through all that code and figure out what the problem is right now.  If you wrote a unit test it would probably be easier to check into; not that I'm promising anything myself...)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100719/996f4fcf/attachment.htm 

From ssoni at nextdigital.com  Tue Jul 20 03:13:44 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Tue, 20 Jul 2010 07:13:44 +0000
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>

Hi There,

Does Twisted support or is there any way of loading intermediate CA certs from a chain file?

I have a SSL certificate issued by Thawte, but my system administrator says as quoted:

Looks like you may need to install an Intermediary certificate. Relevant certs for Thawte can be found at https://search.thawte.com/support/ssl-digital-certificates/index?page=content&actp=CROSSLINK&id=SO13881

I am not sure, how to generate a chain file and later, how to use it in twisted ssl enabled server.

At the moment, I am using following line of code:

root_ssl_service = internet.SSLServer(443, site_ssl,
            DefaultOpenSSLContextFactory(
                privateKeyFileName="cert/server.key",
                certificateFileName="cert/server.pem"))


Thanks in advance.

Sury
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100720/d4887cdf/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jul 20 09:47:14 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 20 Jul 2010 13:47:14 -0000
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
In-Reply-To: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
Message-ID: <20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>

On 07:13 am, ssoni at nextdigital.com wrote:
>Hi There,
>
>Does Twisted support or is there any way of loading intermediate CA 
>certs from a chain file?

Twisted uses pyOpenSSL for it's SSL support.  So you can do pretty much 
anything pyOpenSSL allows.  http://packages.python.org/pyOpenSSL 
/openssl-context.html documents the Context interface; in particular the 
use_certificate_chain_file might be interesting.  However, I recently 
had a conversation with someone who was using this method and still 
couldn't get their chain certificate to work reliably.  I think he's 
still trying to track down the issue.

Jean-Paul


From konrads at smelkovs.com  Tue Jul 20 10:58:01 2010
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Tue, 20 Jul 2010 17:58:01 +0300
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
In-Reply-To: <20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
	<20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>
Message-ID: <AANLkTimPYmj3sB41GX4-YgKI5Bm4hWsY1GztY3NM2eei@mail.gmail.com>

what i recommend is to add all chain in one file using openssl kit
(maybe just cat'ing works). However, most certs issued nowadays
contain the chain already in. You can check with openssl x509 -in
cert.pem -text and see the attached signers cerificate in base64, copy
that to a new.pem and repeat. You can walk this way up the chain to
root cert. If you can, the chaining is not your problem.
Try playing with openssl toolkit alone and see what it says about cert and key.

2010/7/20, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> On 07:13 am, ssoni at nextdigital.com wrote:
>>Hi There,
>>
>>Does Twisted support or is there any way of loading intermediate CA
>>certs from a chain file?
>
> Twisted uses pyOpenSSL for it's SSL support.  So you can do pretty much
> anything pyOpenSSL allows.  http://packages.python.org/pyOpenSSL
> /openssl-context.html documents the Context interface; in particular the
> use_certificate_chain_file might be interesting.  However, I recently
> had a conversation with someone who was using this method and still
> couldn't get their chain certificate to work reliably.  I think he's
> still trying to track down the issue.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
Nos?t?ts no manas mobil?s ier?ces

--
Konrads Smelkovs
Applied IT sorcery.


From ssoni at nextdigital.com  Tue Jul 20 22:26:37 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Wed, 21 Jul 2010 02:26:37 +0000
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
In-Reply-To: <AANLkTimPYmj3sB41GX4-YgKI5Bm4hWsY1GztY3NM2eei@mail.gmail.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
	<20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>
	<AANLkTimPYmj3sB41GX4-YgKI5Bm4hWsY1GztY3NM2eei@mail.gmail.com>
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF728604532B@exmbx01.corp.nextdigital.com>

I was able to solve this problem by writing following class. Thank you JP for pointing me to use_certificate_chain_file function.

class ChainedOpenSSLContextFactory(DefaultOpenSSLContextFactory):
    def __init__(self, privateKeyFileName, certificateChainFileName,
                 sslmethod=SSL.SSLv23_METHOD):
        """
        @param privateKeyFileName: Name of a file containing a private key
        @param certificateChainFileName: Name of a file containing a certificate chain
        @param sslmethod: The SSL method to use
        """
        self.privateKeyFileName = privateKeyFileName
        self.certificateChainFileName = certificateChainFileName
        self.sslmethod = sslmethod
        self.cacheContext()
    
    def cacheContext(self):
        ctx = SSL.Context(self.sslmethod)
        ctx.use_certificate_chain_file(self.certificateChainFileName)
        ctx.use_privatekey_file(self.privateKeyFileName)
        self._context = ctx

And I used it in place of DefaultOpenSSLContextFactory like this:

ssl_service = internet.SSLServer(443, site_ssl, 
            ChainedOpenSSLContextFactory(
                privateKeyFileName="cert/server.key",
                certificateChainFileName="cert/chain.pem", 
                sslmethod = SSL.SSLv3_METHOD))

Where chain.pem was cat'ing version of my certificate + CA certificate + ROOT certificate. Thank you Konards for suggesting me this cat'ing thing.

If anyone still have problem in this area, they will have to track correct chain of certificates. I myself got stuck in choosing correct CA certificate, since Thawte have many different CA certificate for different purpose. Eventually, I was fine with choosing the right one.

Cheers.

-Sury

---------------------
what i recommend is to add all chain in one file using openssl kit (maybe just cat'ing works). However, most certs issued nowadays contain the chain already in. You can check with openssl x509 -in cert.pem -text and see the attached signers cerificate in base64, copy that to a new.pem and repeat. You can walk this way up the chain to root cert. If you can, the chaining is not your problem.
Try playing with openssl toolkit alone and see what it says about cert and key.

2010/7/20, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> On 07:13 am, ssoni at nextdigital.com wrote:
>>Hi There,
>>
>>Does Twisted support or is there any way of loading intermediate CA 
>>certs from a chain file?
>
> Twisted uses pyOpenSSL for it's SSL support.  So you can do pretty 
> much anything pyOpenSSL allows.  http://packages.python.org/pyOpenSSL
> /openssl-context.html documents the Context interface; in particular 
> the use_certificate_chain_file might be interesting.  However, I 
> recently had a conversation with someone who was using this method and 
> still couldn't get their chain certificate to work reliably.  I think 
> he's still trying to track down the issue.
>
> Jean-Paul


--
Konrads Smelkovs
Applied IT sorcery.


From smdugan01 at gmail.com  Wed Jul 21 01:37:14 2010
From: smdugan01 at gmail.com (Sean Dugan)
Date: Wed, 21 Jul 2010 01:37:14 -0400
Subject: [Twisted-Python] Client/Server upload problem
Message-ID: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>

I can't seem to figure out how a client uploads a file to the server using
twisted.protocols.ftp. For the server side I am using the ftpserver example
from the twisted website. For the client I have the following:

from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
from twisted.internet.protocol import Protocol, ClientCreator
from twisted.python import usage
from twisted.internet import reactor

from twisted.protocols.basic import FileSender


# Standard library imports
import string
import sys
try:
    from cStringIO import StringIO
except ImportError:
    from StringIO import StringIO


class BufferingProtocol(Protocol):
    """Simple utility class that holds all data written to it in a
buffer."""
    def __init__(self, fileToWrite):
        self.buffer = StringIO()
        self.fileToWrite = fileToWrite

    def dataReceived(self, data):
        self.buffer.write(data)

# Define some callbacks

def success(response):
    print 'Success!  Got response:'
    print '---'
    if response is None:
        print None
    else:
        print string.join(response, '\n')
    print '---'


def fail(error):
    print 'Failed.  Error was:'
    print error

def showFiles(result, fileListProtocol):
    print 'Processed file listing:'
    for file in fileListProtocol.files:
        print '    %s: %d bytes, %s' \
              % (file['filename'], file['size'], file['date'])
    print 'Total: %d files' % (len(fileListProtocol.files))

def showBuffer(result, bufferProtocol):
    print 'Got data:'
    print bufferProtocol.buffer.getvalue()

def writeBufferToFile(result, bufferProtocol):
    f = open(bufferProtocol.fileToWrite, 'w')
    f.write(bufferProtocol.buffer.getvalue())
    f.close()


class Options(usage.Options):
    optParameters = [['host', 'h', 'localhost'],
                     ['port', 'p', 21],
                     ['username', 'u', 'anonymous'],
                     ['password', None, 'bozo'],
                     ['passive', None, 0],
                     ['debug', 'd', 1],
                    ]

def run():
    # Get config
    config = Options()
    config.parseOptions()
    config.opts['port'] = int(config.opts['port'])
    config.opts['passive'] = int(config.opts['passive'])
    config.opts['debug'] = int(config.opts['debug'])

    # Create the client
    FTPClient.debug = config.opts['debug']
    creator = ClientCreator(reactor, FTPClient, config.opts['username'],
                            config.opts['password'],
passive=config.opts['passive'])
    creator.connectTCP(config.opts['host'],
config.opts['port']).addCallback(connectionMade).addErrback(connectionFailed)
    reactor.run()

def connectionFailed(f):
    print "Connection Failed:", f
    reactor.stop()

def fileTransferFail(failure):
    failure.printTraceback()
    reactor.stop()

def cbStore(consumer, filename):
    fs = FileSender()
    d = fs.beginFileTransfer(open(filename, 'r'), consumer)
    d.addCallback(lambda _: consumer.finish()).addErrback(fileTransferFail)
    return d


def connectionMade(ftpClient):
    # Get the current working directory
    ftpClient.pwd().addCallbacks(success, fail)

    # Get a detailed listing of the current directory
    fileList = FTPFileListProtocol()
    d = ftpClient.list('.', fileList)
    d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))

    # Change to the parent directory
    ftpClient.cdup().addCallbacks(success, fail)

    filename = "FtpDownload.txt"
    uploadpath = "FtpUpload.txt"
    d1, d2 = ftpClient.storeFile(uploadpath)
    d1.addCallback(cbStore, filename).addErrback(fileTransferFail)
    d2.addCallback(lambda _: reactor.stop())


# this only runs if the module was *not* imported
if __name__ == '__main__':
    run()

When I run this, it returns ?Failure: twisted.protocols.ftp.CommandFailed:
['550 FtpUpload.txt: Permission denied']?. I can download a file, and view
the files in a folder, I just can't upload a file. Also if I log-in as one
the users in the .dat file, instead of anonymous, I can't even view the
files in a folder. So is there a way to give anonymous or a user in the .dat
file more permissions, like the write permission?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100721/3a80b7e5/attachment.htm 

From albert.brandl at weiermayer.com  Wed Jul 21 03:14:32 2010
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 21 Jul 2010 09:14:32 +0200
Subject: [Twisted-Python] Uses of StringIO instead of cStringIO
Message-ID: <20100721071432.GA4028@weiermayer.com>

Hi!

There are several modules in twisted that import StringIO instead of
cStringIO (e.g. twisted/mail/maildir.py, twisted/news/nntp.py, 
twisted/web/script.py). Are there any reasons why they use the slower
variant implemented in Python instead of the C variant?

If not, I'd like to create a ticket to fix these imports.
-- 

Best regards,

Albert Brandl

Weiermayer Solutions GmbH
Abteistra?e 12
A-4813 Altm?nster
phone: +43 (0) 720 70 30 14
fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com 


From andrew at bemusement.org  Wed Jul 21 06:55:07 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Wed, 21 Jul 2010 20:55:07 +1000
Subject: [Twisted-Python] Uses of StringIO instead of cStringIO
In-Reply-To: <20100721071432.GA4028@weiermayer.com>
References: <20100721071432.GA4028@weiermayer.com>
Message-ID: <20100721105507.GC14973@steerpike.home.puzzling.org>

Albert Brandl wrote:
> Hi!
> 
> There are several modules in twisted that import StringIO instead of
> cStringIO (e.g. twisted/mail/maildir.py, twisted/news/nntp.py, 
> twisted/web/script.py). Are there any reasons why they use the slower
> variant implemented in Python instead of the C variant?
> 
> If not, I'd like to create a ticket to fix these imports.

It appears someone has gotten there first ? take a look at trunk :)

-Andrew.



From nathan.stocks at gmail.com  Wed Jul 21 20:30:40 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 21 Jul 2010 17:30:40 -0700
Subject: [Twisted-Python] trial newbie
Message-ID: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>

Okay, so I'm just starting to learn how to use trial (I know, I'm a
bad, bad boy), and I'm having trouble getting started.

The trial page[1] says "Tests that subclass the standard library
TestCase and don't do anything "too weird" should be able to be
discoverable and runnable by the Trial test runner without the authors
of those tests having to jump through hoops."

So I made a small concept file to try that out:

=-=-=-=-=-=-=-
#!/usr/bin/env python

import unittest, sys
from distutils import version

class TestPrerequsites(unittest.TestCase):
   def setUp(self):
      pass

   def test_00(self):
      "Supported OS?"
      self.assertTrue(sys.platform in ['darwin'])

if __name__ == '__main__':
   unittest.main()
=-=-=-=-=-=-=-


I named it 'test.py' and made sure it worked with python:


=-=-=-=-=-=-=-
$ python test.py -v
Supported OS? ... ok

----------------------------------------------------------------------
Ran 1 test in 0.000s

OK
=-=-=-=-=-=-=-


and then I tried running it in trial under Twisted 8.2.0 on OS
10.6...and it crashed...sorta.  A traceback was output, but after the
traceback stuff it also seemed to run the test.  So I thought, "I
probably just need to upgrade."  So I upgraded to Twisted 10.1.0 and
ran it again.  It still crashed...sorta.  Here's what it looks like.

$ trial test.py
Traceback (most recent call last):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 295, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 281, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 199, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 178, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 745, in setContent
    f = sib.open('w')
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 495, in open
    return self.create()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 771, in create
    fdint = os.open(self.path, _CREATE_FLAGS)
exceptions.OSError: [Errno 13] Permission denied:
'/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/plugins/n8ARdewBqzybvuUpdropin.cache.new'
test
  TestPrerequsites
    test_00 ...                                                            [OK]

-------------------------------------------------------------------------------
Ran 1 tests in 0.023s

PASSED (successes=1)


Anyone know what's going on?  I installed/upgraded version 10.1.0 by
downloading the tarball and running "sudo python setup.py install"

~ Nathan

[1] http://twistedmatrix.com/documents/current/api/twisted.trial.html


From ltaylor.volks at gmail.com  Wed Jul 21 21:29:42 2010
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 21 Jul 2010 20:29:42 -0500
Subject: [Twisted-Python] trial newbie
In-Reply-To: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>
References: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>
Message-ID: <4C479F06.5080000@gmail.com>

On 7/21/10 7:30 PM, Nathan wrote:

> Anyone know what's going on?  I installed/upgraded version 10.1.0 by
> downloading the tarball and running "sudo python setup.py install"

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions
FAQ 3.20
(Search for "Permission denied")

You can follow the advice there, or you should also be able to run "sudo
twistd --help" to rewrite the plugin cache and get rid of the error.





From mithrandi at mithrandi.net  Thu Jul 22 00:06:06 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 22 Jul 2010 06:06:06 +0200
Subject: [Twisted-Python] Client/Server upload problem
In-Reply-To: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>
References: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>
Message-ID: <AANLkTimIBy2Vx3UpG6h9rOc54e8sMgmRbnyxobUeigUv@mail.gmail.com>

On Wed, Jul 21, 2010 at 7:37 AM, Sean Dugan <smdugan01 at gmail.com> wrote:
> When I run this, it returns ?Failure: twisted.protocols.ftp.CommandFailed:
> ['550 FtpUpload.txt: Permission denied']?. I can download a file, and view
> the files in a folder, I just can't upload a file. Also if I log-in as one
> the users in the .dat file, instead of anonymous, I can't even view the
> files in a folder. So is there a way to give anonymous or a user in the .dat
> file more permissions, like the write permission?

The ftpserver.py example uses twisted.protocols.ftp.FTPRealm, which
returns an FTPAnonymousShell instance wrapped around the given path
for anonymous users, and an FTPShell instance wrapped around
/home/username for authenticated users. FTPAnonymousShell does not
allow anything other than read-only access, and /home/yourselecteduser
possibly doesn't even exist on your system. You probably want to write
your own realm implementation that does things a little differently;
you can look at the implementation of FTPRealm to get started, it
isn't very complicated.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From nathan.stocks at gmail.com  Thu Jul 22 02:16:58 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 21 Jul 2010 23:16:58 -0700
Subject: [Twisted-Python] trial newbie
In-Reply-To: <4C479F06.5080000@gmail.com>
References: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>
	<4C479F06.5080000@gmail.com>
Message-ID: <AANLkTinH7IX5p_UMD1BIeV8bynNUfuUsy38bi2omj3oW@mail.gmail.com>

On Wed, Jul 21, 2010 at 6:29 PM, Lucas Taylor <ltaylor.volks at gmail.com> wrote:
> On 7/21/10 7:30 PM, Nathan wrote:
>
>> Anyone know what's going on? ?I installed/upgraded version 10.1.0 by
>> downloading the tarball and running "sudo python setup.py install"
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions
> FAQ 3.20
> (Search for "Permission denied")
>
> You can follow the advice there, or you should also be able to run "sudo
> twistd --help" to rewrite the plugin cache and get rid of the error.

That was it, thanks!  I ran "sudo twistd --help" like you suggested
and now everything runs without error.

~ Nathan


From smdugan01 at gmail.com  Thu Jul 22 12:43:00 2010
From: smdugan01 at gmail.com (Sean Dugan)
Date: Thu, 22 Jul 2010 12:43:00 -0400
Subject: [Twisted-Python] Client/Server upload problem
In-Reply-To: <AANLkTimIBy2Vx3UpG6h9rOc54e8sMgmRbnyxobUeigUv@mail.gmail.com>
References: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>
	<AANLkTimIBy2Vx3UpG6h9rOc54e8sMgmRbnyxobUeigUv@mail.gmail.com>
Message-ID: <AANLkTimVbIbawP_hzUz6d0mhFRwMERGiKeJkjUcHKhwc@mail.gmail.com>

Creating my own FTPRealm implementation fixed my problem, now I can upload.
It worked great, thanks a lot for your help.

On Thu, Jul 22, 2010 at 12:06 AM, Tristan Seligmann <mithrandi at mithrandi.net
> wrote:

> On Wed, Jul 21, 2010 at 7:37 AM, Sean Dugan <smdugan01 at gmail.com> wrote:
> > When I run this, it returns ?Failure:
> twisted.protocols.ftp.CommandFailed:
> > ['550 FtpUpload.txt: Permission denied']?. I can download a file, and
> view
> > the files in a folder, I just can't upload a file. Also if I log-in as
> one
> > the users in the .dat file, instead of anonymous, I can't even view the
> > files in a folder. So is there a way to give anonymous or a user in the
> .dat
> > file more permissions, like the write permission?
>
> The ftpserver.py example uses twisted.protocols.ftp.FTPRealm, which
> returns an FTPAnonymousShell instance wrapped around the given path
> for anonymous users, and an FTPShell instance wrapped around
> /home/username for authenticated users. FTPAnonymousShell does not
> allow anything other than read-only access, and /home/yourselecteduser
> possibly doesn't even exist on your system. You probably want to write
> your own realm implementation that does things a little differently;
> you can look at the implementation of FTPRealm to get started, it
> isn't very complicated.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100722/4cddd23d/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jul 25 00:05:28 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jul 2010 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1280030728.92.1934895521@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100725/ad2e1648/attachment.htm 

From lynxluna at gmail.com  Sun Jul 25 08:37:05 2010
From: lynxluna at gmail.com (Didiet Noor)
Date: Sun, 25 Jul 2010 19:37:05 +0700
Subject: [Twisted-Python] How to make a 'router'
Message-ID: <AANLkTinomCKbKJ0mUxG9PBDvynQ4G4JOEpztvFrJXhLd@mail.gmail.com>

Dear All,

I am new in twisted framework, and currently building a twisted app that
will route a packet from one client to multiple servers via TCP connection,
back and forth.

The program will work like this

                               /----> server A
Client --> twisted routing apps ----> server B
                               \----> server C

I also wrote the server apps using twisted by using simple
Int32StringReceiver. I haven't made this kind of application before. So
could you guys give me pointers on how to do that?

Thanks in advance,

LynxLuna
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100725/62467e8d/attachment.htm 

From itamar at itamarst.org  Sun Jul 25 09:03:56 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 25 Jul 2010 09:03:56 -0400
Subject: [Twisted-Python] How to make a 'router'
In-Reply-To: <AANLkTinomCKbKJ0mUxG9PBDvynQ4G4JOEpztvFrJXhLd@mail.gmail.com>
References: <AANLkTinomCKbKJ0mUxG9PBDvynQ4G4JOEpztvFrJXhLd@mail.gmail.com>
Message-ID: <1280063036.1583.1.camel@blake>

On Sun, 2010-07-25 at 19:37 +0700, Didiet Noor wrote:
> Dear All,
> 
> I am new in twisted framework, and currently building a twisted app
> that will route a packet from one client to multiple servers via TCP
> connection, back and forth.
> 
> The program will work like this
> 
>                                /----> server A
> Client --> twisted routing apps ----> server B
>                                \----> server C
> 
> 
> I also wrote the server apps using twisted by using simple
> Int32StringReceiver. I haven't made this kind of application before.
> So could you guys give me pointers on how to do that?

Possibly this may help a little:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

along with client and server howtos:
http://twistedmatrix.com/documents/current/core/howto/index.html




From exarkun at twistedmatrix.com  Mon Jul 26 22:39:27 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 27 Jul 2010 02:39:27 -0000
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
	<AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
Message-ID: <20100727023927.27251.491397406.divmod.xquotient.151@localhost.localdomain>

On 19 Jul, 05:19 pm, jasonjwwilliams at gmail.com wrote:
>Hey Glyph,
>
>Sorry it took me a week...thanks for looking at it. This is an
>approximation of just the SMTP logic that I thought was blocking. It
>appears not to block, but has an issue executing the other deferreds.
>
>http://gist.github.com/481684

I'm not sure if you figured this out already, but I guess what you mean 
by "an issue executing the other deferreds" is that only one of your 
SMTP transactions completes.  This is probably because the 
`reactor.connectTCP` call at the end of `SMTPcall` is mis-indented and 
only executes once.

Jean-Paul


From avenpace at gmail.com  Wed Jul 28 02:25:25 2010
From: avenpace at gmail.com (Uung H.R Bhuwono)
Date: Wed, 28 Jul 2010 13:25:25 +0700
Subject: [Twisted-Python] Using zeromq inside twisted matrix daemon
Message-ID: <AANLkTikUWHbu6vniwGcQ37BDrsy3dJJDXSVbaVPOt+Z8@mail.gmail.com>

Hi,

I've been trying to make use zeromq on my twisted daemon script
When zeromq send message to the queue, this work since send_pyobj()
return True.
But the subscriber never get the message from queue using recv_pyobj()
and it just freeze like there's nothing on the queue

My twisted daemon script as a follow:

- serve_message.py
class MyService(service.Service):
    def __init__(self):
        pass
    def startService(self):
        c = zmq.Context(1)
        s = c.socket(zmq.PUB)
        s.bind("tcp://127.0.0.1:6666")
        s.send_pyobj("helo there")
    def stopService(self):
        pass

def getMyService():
    myService = MyService()
    return myService

application = service.Application("My Service Application")

# attach the service to its parent application
procd = getMyService()
procd.setServiceParent(application)

my simple subscriber script subscriber.py

import zmq
c = zmq.Context(1)
s = c.socket(zmq.SUB)
s.connect("tcp://127.0.0.1:9999")
s.setsockopt(zmq.SUBSCRIBE, "")
s.recv_pyobj()

Does it possible to use zeromq with twisted daemon on Linux?
Please help me to solve this

Thanks,

Uung


From avenpace at gmail.com  Wed Jul 28 02:27:26 2010
From: avenpace at gmail.com (Uung H.R Bhuwono)
Date: Wed, 28 Jul 2010 13:27:26 +0700
Subject: [Twisted-Python] Using zeromq inside twisted matrix daemon
In-Reply-To: <AANLkTikUWHbu6vniwGcQ37BDrsy3dJJDXSVbaVPOt+Z8@mail.gmail.com>
References: <AANLkTikUWHbu6vniwGcQ37BDrsy3dJJDXSVbaVPOt+Z8@mail.gmail.com>
Message-ID: <AANLkTin_=+yt__zSBm0R3ffcTu=+AiVAhTSJ87Wcxd00@mail.gmail.com>

Sorry for there's typo on my question bellow, the port should be 6666

Thanks,

Uung

On Wed, Jul 28, 2010 at 1:25 PM, Uung H.R Bhuwono <avenpace at gmail.com> wrote:
> Hi,
>
> I've been trying to make use zeromq on my twisted daemon script
> When zeromq send message to the queue, this work since send_pyobj()
> return True.
> But the subscriber never get the message from queue using recv_pyobj()
> and it just freeze like there's nothing on the queue
>
> My twisted daemon script as a follow:
>
> - serve_message.py
> class MyService(service.Service):
> ? ?def __init__(self):
> ? ? ? ?pass
> ? ?def startService(self):
> ? ? ? ?c = zmq.Context(1)
> ? ? ? ?s = c.socket(zmq.PUB)
> ? ? ? ?s.bind("tcp://127.0.0.1:6666")
> ? ? ? ?s.send_pyobj("helo there")
> ? ?def stopService(self):
> ? ? ? ?pass
>
> def getMyService():
> ? ?myService = MyService()
> ? ?return myService
>
> application = service.Application("My Service Application")
>
> # attach the service to its parent application
> procd = getMyService()
> procd.setServiceParent(application)
>
> my simple subscriber script subscriber.py
>
> import zmq
> c = zmq.Context(1)
> s = c.socket(zmq.SUB)
> s.connect("tcp://127.0.0.1:9999")
> s.setsockopt(zmq.SUBSCRIBE, "")
> s.recv_pyobj()
>
> Does it possible to use zeromq with twisted daemon on Linux?
> Please help me to solve this
>
> Thanks,
>
> Uung
>


From twisted-web at udmvt.ru  Wed Jul 28 07:14:22 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Wed, 28 Jul 2010 15:14:22 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
	<20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
Message-ID: <20100728111422.GF14318@ruber.office.udmvt.ru>

After all, I'm posting my angry code.
The first file is a module with some classes, that can be used
to accomplish my task.
The second file is a UNIX program, it uses socketpair() and then fork()
to start both client and server, they talk each other via PB protocol.
Running that produces some noise to the screen and then they exit.

That was my minimal effort...
That is really a partial solution to the problem, but:
 a. it already works for me,
 b. I'm not sure it will work for other protocols,
 c. I found it too complex and involving a lot of other code to make it in a proper way
so, sorry, I haven't worked toward a real contribution to a twisted code.

Perhaps anyone may suggest another "proper" solution, more elegant?
I'm interested in having this kind of functionality supported by twisted.

-- 
Alexey.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tx_fake_connector.py
Type: text/x-python
Size: 8564 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20100728/3b55121e/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tx_test.py
Type: text/x-python
Size: 2971 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20100728/3b55121e/attachment-0001.py 

From itamar at itamarst.org  Wed Jul 28 08:10:48 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 28 Jul 2010 08:10:48 -0400
Subject: [Twisted-Python] What is the minimum effort solution to make
 inetd-managed twisted-based application?
In-Reply-To: <20100728111422.GF14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
	<20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
	<20100728111422.GF14318@ruber.office.udmvt.ru>
Message-ID: <1280319048.1616.2.camel@blake>

On Wed, 2010-07-28 at 15:14 +0400, twisted-web at udmvt.ru wrote:
> After all, I'm posting my angry code.
> The first file is a module with some classes, that can be used
> to accomplish my task.
> The second file is a UNIX program, it uses socketpair() and then fork()
> to start both client and server, they talk each other via PB protocol.
> Running that produces some noise to the screen and then they exit.

You probably want to use reactor.spawnProcess, not fork - it also allows
you to pass arbitrary file descriptors to the child process:

http://twistedmatrix.com/documents/current/core/howto/process.html

Also, an example:
http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/runner/inetd.py




From twisted-web at udmvt.ru  Thu Jul 29 03:22:25 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Thu, 29 Jul 2010 11:22:25 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <1280319048.1616.2.camel@blake>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
	<20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
	<20100728111422.GF14318@ruber.office.udmvt.ru>
	<1280319048.1616.2.camel@blake>
Message-ID: <20100729072225.GG14318@ruber.office.udmvt.ru>

On Wed, Jul 28, 2010 at 08:10:48AM -0400, Itamar Turner-Trauring wrote:
> On Wed, 2010-07-28 at 15:14 +0400, twisted-web at udmvt.ru wrote:
> > The second file is a UNIX program, it uses socketpair() and then fork()
> > to start both client and server, they talk each other via PB protocol.
> > Running that produces some noise to the screen and then they exit.
> 
> You probably want to use reactor.spawnProcess, not fork - it also allows
> you to pass arbitrary file descriptors to the child process:
> 
> http://twistedmatrix.com/documents/current/core/howto/process.html
Yes, ofcourse, in real program I'd use that.
But for demo purposes I decided to place all code into single python program.

> 
> Also, an example:
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/runner/inetd.py
Thanks.

> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Alexey.


From twisted-web at udmvt.ru  Thu Jul 29 03:23:48 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Thu, 29 Jul 2010 11:23:48 +0400
Subject: [Twisted-Python] Is that behavior of t.i.stdio.StandardIO known?
Message-ID: <20100729072348.GH14318@ruber.office.udmvt.ru>

The code is in attachment.

I run it on Debian/Linux, twisted 10.0.0
When you run it on a terminal, it works by prefixing the data you enter with "dataReceived: "
and outputting that back to terminal.
 $ ./program.py
i: blabla
o: dataReceived: 'blabla
o: '
i: ^D
o: readConnectionLost(input is done)
i: ^C
o: OK
 $

The same happens if you redirect output to a pipe (no matter if it a named FIFO or an anonymous pipe).
But if you redirect output to a file or to a /dev/null, this happens:
 $ ./program.py > /dev/null
<a short pause, no input>
o: StdioProtocol.connectionLost('[Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionLost'>: Connection to the other side was lost in a non-clean fashion.
o: ]')OK
 $

But I expected it to work the same way, regardless of redirections.
I haven't traced the source of that Failure, so just asking, whether that behavior is
known, or maybe intended?
Or, perhaps, I do something incorrectly?

Well, right now I'm using the workaround with /bin/cat:
 $ ./program.py > >(cat > file)
or with an extra shell process:
 $ ./program.py | cat > file

-------------- next part --------------
A non-text attachment was scrubbed...
Name: program.py
Type: text/x-python
Size: 1515 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20100729/4f3d90d0/attachment.py 

From itamar at itamarst.org  Thu Jul 29 08:13:06 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 29 Jul 2010 08:13:06 -0400
Subject: [Twisted-Python] Is that behavior of t.i.stdio.StandardIO known?
In-Reply-To: <20100729072348.GH14318@ruber.office.udmvt.ru>
References: <20100729072348.GH14318@ruber.office.udmvt.ru>
Message-ID: <1280405586.1611.0.camel@blake>

On Thu, 2010-07-29 at 11:23 +0400, Alexey wrote:

> The same happens if you redirect output to a pipe (no matter if it a named FIFO or an anonymous pipe).
> But if you redirect output to a file or to a /dev/null, this happens:
>  $ ./program.py > /dev/null
> <a short pause, no input>
> o: StdioProtocol.connectionLost('[Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionLost'>: Connection to the other side was lost in a non-clean fashion.
> o: ]')OK
>  $

This was a bug, and was fixed in Twisted 10.1. From the release notes:

"""
- twisted.internet.stdio now supports stdout being redirected to a
   normal file (except when using epollreactor). (#2259)
"""

So, upgrade to Twisted 10.1.



From twisted-web at udmvt.ru  Thu Jul 29 08:33:12 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Thu, 29 Jul 2010 16:33:12 +0400
Subject: [Twisted-Python] Is that behavior of t.i.stdio.StandardIO	known?
In-Reply-To: <1280405586.1611.0.camel@blake>
References: <20100729072348.GH14318@ruber.office.udmvt.ru>
	<1280405586.1611.0.camel@blake>
Message-ID: <20100729123312.GK14318@ruber.office.udmvt.ru>

On Thu, Jul 29, 2010 at 08:13:06AM -0400, Itamar Turner-Trauring wrote:
> This was a bug, and was fixed in Twisted 10.1. From the release notes:
> 
> """
> - twisted.internet.stdio now supports stdout being redirected to a
>    normal file (except when using epollreactor). (#2259)
> """
> 
> So, upgrade to Twisted 10.1.

Great!!!

Thanks a lot!

-- 
Alexey.


From isahn74 at gmail.com  Fri Jul 30 06:28:01 2010
From: isahn74 at gmail.com (Michele -)
Date: Fri, 30 Jul 2010 11:28:01 +0100
Subject: [Twisted-Python] Asynchronous gzipped content decompression: best
	approach
Message-ID: <AANLkTi=NkD2nhxoGXHyARZHJ-Ds=bEa_7fPfo-o-htLB@mail.gmail.com>

Hi,

I have written a small utility function to replace
"twisted.web.client.getPage", to be able to read the response header.

I have to say that the ever improving documentation made it quite easy for
me to do it using the new twisted.web.client.Agent, so well done to all!

Since my wrapper works quite well, I decided to add gzip response support,
as it's another feature lacking from the original getPage. Again, it was
quite simple and it looks it works quite well, in proof of concept scenario.

Then it came my dilemma. What I'm doing now is a synchronous decompression
as shown below:

compressedstream = StringIO.StringIO(inzip)
gzipper = gzip.GzipFile(fileobj=compressedstream)
_data = gzipper.read()
return _data

This works quite well, but I wanted to add support for arbitrary large
compressed responses, and I wanted to ask your opinion on the best approach
for this:

-a separate thread? it has it's limit, as it's not scaling well at all, but,
in the possible scenario of a getPage usege shouldn't be a big issue (i.e.
not many concurrent calls)

-a Producer/consumer? That sounded like the modern twisted way of doing it,
but I didn't manage to be able to implement it properly, as I could create a
proper "consumer" class by looking to the example in the documentation...

-twisted.python.zipstream.DeflatedZipFileEntry?
I found this and seemed a potential way of doing it, with may be the use
of inline generators?
But then, I thought, is it a too  complex approach for a simple  problem?

I guess that decompressing data in twisted should be a fairly common task,
but I have not found a sample that looked like the "best" way for doing it,
so... here is this email

Thanks for you help, and I'll be happy to post the final code for future
reference if anyone is interested

Michele
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100730/c2442106/attachment.htm 

From peter.westlake at pobox.com  Fri Jul 30 06:54:27 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 30 Jul 2010 11:54:27 +0100
Subject: [Twisted-Python] LDAP binds appears to succeed with no password
Message-ID: <1280487267.545.1387497975@webmail.messagingengine.com>

I'm using LDAP to authenticate users, and when I give it an empty
password, it appears to succeed! Can anyone see what I'm doing wrong?
I've added comments by the log messages that appear in the output.

Peter.

from twisted.internet import reactor, defer
from ldaptor.protocols.ldap import ldapclient, ldapsyntax,
ldapconnector, ldaperrors
from ldaptor.protocols import pureldap as L

import log

class LDAPAuthenticationSource(object):
    def __init__(self, base_dn, hostname=None, attr='uid', bind_dn='',
                 bind_pw='', filter=L.LDAPFilter_present('cn')):
        self.hostname = hostname
        self.base_dn = base_dn
        self.attr = attr
        self.bind_dn = bind_dn
        self.bind_pw = bind_pw
        self.filter = filter
        self.cli = None

    @defer.inlineCallbacks
    def authenticate(self, username, password):
        if not password:
            log.info('Empty password!!!!')                  #######
            appears
        else:
            log.debug('Attempting to login as', username)

        c = ldapconnector.LDAPClientCreator(reactor,
        ldapclient.LDAPClient)
        self.client = yield c.connect(self.base_dn)

        yield ldapsyntax.LDAPEntry(self.client,
        self.bind_dn).bind(self.bind_pw)

        entries = []
        base = ldapsyntax.LDAPEntry(self.client, self.base_dn)

        yield base.search(
            filterObject=L.LDAPFilter_and(
                [L.LDAPFilter_equalityMatch(
                        attributeDesc=L.LDAPAttributeDescription(self.attr),
                        assertionValue=L.LDAPAssertionValue(username)
                    ),
                 self.filter,
                 ]),
            attributes = (self.attr,),  # No need to read the whole
            entry!
            callback=entries.append
        )
        n_entries = len(entries)
        if n_entries == 0:
            self.client.unbind()
            log.debug('Failed login for %s: no search results' %
            (username,))
            raise Exception('No search results!')
        elif n_entries > 1:
            self.client.unbind()
            log.debug('Failed login as %s: %d search results for unique
            entry!' % (username, n_entries))
            raise Exception('%d search results for unique entry!' %
            n_entries)
        else:
            # The password matches if we can bind as this DN with it.
            try:
                if not password:
                    log.info('Empty password')                          
                      ##### appears
                user_entry = yield entries[0].bind(password)
                if not password:
                    log.info('Succeeded with an empty password!')       
                      ##### appears
                    log.info('user_entry:')                             
                      ##### appears
                    log.info(user_entry)                                
                      ##### appears
                log.info('Login:', username)
            except ldaperrors.LDAPInvalidCredentials:
                log.info('Failed login for %s: invalid credentials' %
                username)
                raise
            except Exception, e:
                log.rep(e, 'Error while binding with user password')
                self.client.unbind()
                raise
            self.client.unbind()
            defer.returnValue(user_entry)


From mailing at franzoni.eu  Fri Jul 30 07:55:42 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Fri, 30 Jul 2010 13:55:42 +0200
Subject: [Twisted-Python] LDAP binds appears to succeed with no password
In-Reply-To: <1280487267.545.1387497975@webmail.messagingengine.com>
References: <1280487267.545.1387497975@webmail.messagingengine.com>
Message-ID: <4C52BDBE.5090704@franzoni.eu>

On 7/30/10 12:54 PM, Peter Westlake wrote:
> I'm using LDAP to authenticate users, and when I give it an empty
> password, it appears to succeed! Can anyone see what I'm doing wrong?
> I've added comments by the log messages that appear in the output.

Please post the full code, including how you're using such class. Also:

- log the entry you've found and that you're using to re-bind. It might
not be what you're expecting.
- try the very same query using something like ldapsearch or Apache LDAP
Studio, and see whether the result differs.



-- 
Alan Franzoni
contact me at public@[mysurname].eu


From itamar at itamarst.org  Fri Jul 30 08:08:20 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 30 Jul 2010 08:08:20 -0400
Subject: [Twisted-Python] Asynchronous gzipped content decompression:
 best approach
In-Reply-To: <AANLkTi=NkD2nhxoGXHyARZHJ-Ds=bEa_7fPfo-o-htLB@mail.gmail.com>
References: <AANLkTi=NkD2nhxoGXHyARZHJ-Ds=bEa_7fPfo-o-htLB@mail.gmail.com>
Message-ID: <1280491700.1585.5.camel@blake>

On Fri, 2010-07-30 at 11:28 +0100, Michele - wrote:
> Hi,
> 
> 
> I have written a small utility function to replace
> "twisted.web.client.getPage", to be able to read the response header.
> 
> 
> I have to say that the ever improving documentation made it quite easy
> for me to do it using the new twisted.web.client.Agent, so well done
> to all!
> 
> 
> Since my wrapper works quite well, I decided to add gzip response
> support, as it's another feature lacking from the original getPage.
> Again, it was quite simple and it looks it works quite well, in proof
> of concept scenario.
> 
> 
> Then it came my dilemma. What I'm doing now is
> a synchronous decompression as shown below:
> 
> 
> compressedstream = StringIO.StringIO(inzip)  
> gzipper = gzip.GzipFile(fileobj=compressedstream)
> _data = gzipper.read()
> return _data

In the standard Agent API, streaming data is downloaded to a protocol.
So a gunzipping version would do the same: you have a wrapper protocol
that uncompresses data, then delivers to underlying protocol.

The basic logic would require reimplementing a small part of the gzip
module: first few bytes of data are gzip header, which you skip. Then,
use the zlib module to decompress data as it arrives (specifically you'd
want a decompression object) and deliver it to the wrapped protocol's
dataReceived.





From peter.westlake at pobox.com  Fri Jul 30 09:31:00 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 30 Jul 2010 14:31:00 +0100
Subject: [Twisted-Python] LDAP binds appears to succeed with no password
In-Reply-To: <4C52BDBE.5090704@franzoni.eu>
References: <1280487267.545.1387497975@webmail.messagingengine.com>
	<4C52BDBE.5090704@franzoni.eu>
Message-ID: <1280496660.1622.1387517469@webmail.messagingengine.com>

On Fri, 30 Jul 2010 13:55 +0200, "Alan Franzoni" <mailing at franzoni.eu>
wrote:
> On 7/30/10 12:54 PM, Peter Westlake wrote:
> > I'm using LDAP to authenticate users, and when I give it an empty
> > password, it appears to succeed! Can anyone see what I'm doing wrong?
> > I've added comments by the log messages that appear in the output.
> 
> Please post the full code, including how you're using such class. Also:

The rest of it is below.

> - log the entry you've found and that you're using to re-bind. It might
> not be what you're expecting.

It is, though - it's my directory entry. See the output, below.

> - try the very same query using something like ldapsearch or Apache LDAP
> Studio, and see whether the result differs.

With ldapsearch, it fails as expected. That's a bit different to my
code, though, because it only does a bind and a search. It isn't
trying to re-bind using the entry it finds.

LDAP Studio is a great find, thank you! And thank you for your help.

Peter.

Here's the test program:
-----------------------------------------------------------------------
auth.py:

from lda import LDAPAuthenticator

import getpass
from twisted.internet import reactor

import log

username = raw_input('Username: ')
password = getpass.getpass('Password: ')


def _success(entry):
    log.info('Successful authentication as %r' % username)
    return username

def _failure(f):
    log.info('Failed authentication as %r' % username, f)
    raise Exception('Authentication failed')

def stop(result):
    print 'Result', result
    reactor.stop()

authenticator= LDAPAuthenticator(
    hostname=LDAP_HOST,
    base_dn=LDAP_ROOT,
    attr='sAMAccountName',
    bind_dn=LDAP_BIND_DN,
    bind_pw=LDAP_BIND_PW
    )
try:
    print 'Before authenticate'
    d = authenticator.authenticate(username, password)
    print 'Called authenticate'
except Exception, e:
    print 'Exception was:'
    print e
    reactor.stop()

d.addCallbacks(_success, _failure)
d.addBoth(stop)

reactor.run()

--------------------------------------------------------------------------------
log.py:

# Simplified log for test purposes.

def info(*message):
    print message

def debug(*message):
    print message

def rep(e, *message):
    print message
    print 'Exception is:', e
-------------------------------------------------------------------------------
The output of the program:

$ python auth.py
Username: peterw
Password:
Before authenticate
('Empty password!!!!',)
Called authenticate
('Empty password',)
('Succeeded with an empty password!',)
('user_entry:',)
(LDAPEntryWithClient(dn='CN=Peter Westlake,OU=....',
attributes={'sAMAccountName':
JournaledLDAPAttributeSet('sAMAccountName', ['peterw'])}),)
('Login:', 'peterw')
("Successful authentication as 'peterw'",)
Result peterw
---------------------------------------------------------------------------------
The file I posted last time, for completeness and ease of reference:

lda.py:

from twisted.internet import reactor, defer
from ldaptor.protocols.ldap import ldapclient, ldapsyntax,
ldapconnector, ldaperrors
from ldaptor.protocols import pureldap as L

import log

class LDAPAuthenticator(object):
    def __init__(self, base_dn, hostname=None, attr='uid', bind_dn='',
                 bind_pw='', filter=L.LDAPFilter_present('cn')):
        self.hostname = hostname
        self.base_dn = base_dn
        self.attr = attr
        self.bind_dn = bind_dn
        self.bind_pw = bind_pw
        self.filter = filter
        self.cli = None

    @defer.inlineCallbacks
    def authenticate(self, username, password):
        if not password:
            log.info('Empty password!!!!')
        else:
            log.debug('Attempting to login as', username)

        c = ldapconnector.LDAPClientCreator(reactor,
        ldapclient.LDAPClient)
        self.client = yield c.connect(self.base_dn)

        yield ldapsyntax.LDAPEntry(self.client,
        self.bind_dn).bind(self.bind_pw)

        entries = []
        base = ldapsyntax.LDAPEntry(self.client, self.base_dn)

        yield base.search(
            filterObject=L.LDAPFilter_and(
                [L.LDAPFilter_equalityMatch(
                        attributeDesc=L.LDAPAttributeDescription(self.attr),
                        assertionValue=L.LDAPAssertionValue(username)
                    ),
                 self.filter,
                 ]),
            attributes = (self.attr,),  # No need to read the whole
            entry!
            callback=entries.append
        )
        n_entries = len(entries)
        if n_entries == 0:
            self.client.unbind()
            log.debug('Failed login for %s: no search results' %
            (username,))
            raise Exception('No search results!')
        elif n_entries > 1:
            self.client.unbind()
            log.debug('Failed login as %s: %d search results for unique
            entry!' % (username, n_entries))
            raise Exception('%d search results for unique entry!' %
            n_entries)
        else:
            # The password matches if we can bind as this DN with it.
            try:
                if not password:
                    log.info('Empty password')
                user_entry = yield entries[0].bind(password)
                if not password:
                    log.info('Succeeded with an empty password!')
                    log.info('user_entry:')
                    log.info(user_entry)
                log.info('Login:', username)
            except ldaperrors.LDAPInvalidCredentials:
                log.info('Failed login for %s: invalid credentials' %
                username)
                raise
            except Exception, e:
                log.rep(e, 'Error while binding with user password')
                self.client.unbind()
                raise
            self.client.unbind()
            defer.returnValue(user_entry)
--------END-----------


From isahn74 at gmail.com  Fri Jul 30 12:10:48 2010
From: isahn74 at gmail.com (Michele -)
Date: Fri, 30 Jul 2010 17:10:48 +0100
Subject: [Twisted-Python] Asynchronous gzipped content decompression: best
	approach
Message-ID: <AANLkTikH5kMsWBvRfWJ7TYWpyq-7Mbb=fsEH+DrJjRzr@mail.gmail.com>

Hi?Itamar,

Thanks for the hint, it took me a while to make it work but it does do
the job very well.

For future reference to the thread readers, the bytes to skip are the
first 10 of the first set of data received by the protocol.


Thanks again

Michele


From alvinwang at gmail.com  Sat Jul 31 00:56:07 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 30 Jul 2010 21:56:07 -0700
Subject: [Twisted-Python] OpenStack uses Twisted
Message-ID: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>

FYI - I went to a presentation on Nova/OpenStack
https://launchpad.net/nova

They use Twisted and they are planning on taking out Tornado.  You can run
your own amazon using Twisted.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100730/235c8713/attachment.htm 

From donal.mcmullan at gmail.com  Sat Jul 31 01:41:15 2010
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sat, 31 Jul 2010 17:41:15 +1200
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
Message-ID: <AANLkTikJEn6ipJ9uNu4pp26fvxU0X1sFRKrg=YofGayz@mail.gmail.com>

Hi Alvin - I understand they've been using both Tornado and Twisted... did
they elaborate on their decision to remove Tornado? Will the features
supported by Tornado be reimplemented with Twisted?

Thanks

D

On 31 July 2010 16:56, Alvin Wang <alvinwang at gmail.com> wrote:

> FYI - I went to a presentation on Nova/OpenStack
> https://launchpad.net/nova
>
> They use Twisted and they are planning on taking out Tornado.  You can run
> your own amazon using Twisted.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100731/7fce55d5/attachment.htm 

From alvinwang at gmail.com  Sat Jul 31 04:05:43 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Sat, 31 Jul 2010 01:05:43 -0700
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTikJEn6ipJ9uNu4pp26fvxU0X1sFRKrg=YofGayz@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com> 
	<AANLkTikJEn6ipJ9uNu4pp26fvxU0X1sFRKrg=YofGayz@mail.gmail.com>
Message-ID: <AANLkTi=A-skE+SMkymaNEEoULfpy_ErNCwjXmnCE8sPj@mail.gmail.com>

That was my understanding.  I think they want to simplify the development.
Currently, it is a pain to install.  There are a lot of dependencies.

Alvin

On Fri, Jul 30, 2010 at 10:41 PM, Donal McMullan
<donal.mcmullan at gmail.com>wrote:

> Hi Alvin - I understand they've been using both Tornado and Twisted... did
> they elaborate on their decision to remove Tornado? Will the features
> supported by Tornado be reimplemented with Twisted?
>
> Thanks
>
> D
>
> On 31 July 2010 16:56, Alvin Wang <alvinwang at gmail.com> wrote:
>
>> FYI - I went to a presentation on Nova/OpenStack
>> https://launchpad.net/nova
>>
>> They use Twisted and they are planning on taking out Tornado.  You can run
>> your own amazon using Twisted.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100731/913a2c8d/attachment.htm 

From jasonjwwilliams at gmail.com  Sat Jul 31 17:51:39 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 31 Jul 2010 15:51:39 -0600
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
Message-ID: <8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>

Hey Alvin,

Where on the launchpad did you find the preso?

-J

Sent via iPhone

Is your e-mail Premiere?

On Jul 30, 2010, at 22:56, Alvin Wang <alvinwang at gmail.com> wrote:

> FYI - I went to a presentation on Nova/OpenStack
> https://launchpad.net/nova
> 
> They use Twisted and they are planning on taking out Tornado.  You can run your own amazon using Twisted.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20100731/920b0d2f/attachment.htm 

From jessica.mckellar at gmail.com  Fri Jul  2 06:31:34 2010
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Fri, 2 Jul 2010 08:31:34 -0400
Subject: [Twisted-Python] making Screwtape (Tim Allen) a committer
In-Reply-To: <FF6ABFC8-334F-4554-955E-CE4B34F56C2E@twistedmatrix.com>
References: <FF6ABFC8-334F-4554-955E-CE4B34F56C2E@twistedmatrix.com>
Message-ID: <AANLkTilhby5hTVgUogUXHEbyL6DCdBvM2Wv2tSZgDDvu@mail.gmail.com>

+1!

On Wed, Jun 9, 2010 at 6:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> I think we should give screwtape an SVN account and make him an official
> reviewer.  He's been doing a lot of work on the distutils code which would
> be made easier by that, and he's been doing pretty decent reviews.
>
> Thoughts?  (Feel free to voice any comments off-list, too.)
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100702/14d4f363/attachment-0001.html>

From jml at mumak.net  Fri Jul  2 07:08:06 2010
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 2 Jul 2010 14:08:06 +0100
Subject: [Twisted-Python] Twisted 10.1.0 release status update
Message-ID: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>

Hello everyone,

The Twisted 10.1.0 release is now a month overdue. Sorry.

We've got a pre-release which appears to be free of critical bugs, and
I'm up to step 4 of "How to do a final release" on
http://twistedmatrix.com/trac/wiki/ReleaseProcess.

My intent is to complete the final steps of the release this weekend.
It would be very, very helpful to have someone around who has root on
cube and is able to be responsive to requests during a UK afternoon /
evening.

Twisted prevails,
jml



From glyph at twistedmatrix.com  Fri Jul  2 15:15:50 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 2 Jul 2010 17:15:50 -0400
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
Message-ID: <0DFB15D2-1F1D-4DDE-A58D-8A40F6BE3D5C@twistedmatrix.com>


On Jul 2, 2010, at 9:08 AM, Jonathan Lange wrote:

> My intent is to complete the final steps of the release this weekend.
> It would be very, very helpful to have someone around who has root on
> cube and is able to be responsive to requests during a UK afternoon /
> evening.

I will make an attempt to be available, and on IRC, from 3PM to 9PM United Kingdom Time on the 3rd and 4th of July.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100702/d66edaa3/attachment-0001.html>

From jaroslaw.fedewicz at gmail.com  Sat Jul  3 05:23:34 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sat, 3 Jul 2010 14:23:34 +0300
Subject: [Twisted-Python] Advice seeked on SMPP implementation
Message-ID: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>

Hello,

I'm currently busy with implementing SMPP in Twisted, and there is
something I would like to have a piece of advice with.

If I'm going to make it internal to my needs, there's only issue of
making it work and be done with it. But that's not quite a way I would
like to do it; I would like to end up with an implementation which
would be reusable and beneficial for the community as well, so that
anyone would be then able to take this implementation and get his or
her service an almost instant ability to talk SMPP (news via SMS?
microblogging via SMS? ...)

Thus keeping in mind that SMPP by its nature is not entirely unlike
your old instant messaging and mailing protocols, albeit geared
towards mobile content, there might be some interfaces already in
Twisted which I would need to implement before it becomes interesting
to anyone else.

Can anyone give me some useful pointers on that?

P. S. I have seen some SMPP-related discussions popping up on this
list, but it seems that to date, nothing open source and under active
development and maintenance has been produced so far.

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: Will it block?



From jml at mumak.net  Sat Jul  3 10:10:06 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 3 Jul 2010 17:10:06 +0100
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
Message-ID: <AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>

On Fri, Jul 2, 2010 at 2:08 PM, Jonathan Lange <jml at mumak.net> wrote:
...
> My intent is to complete the final steps of the release this weekend.
> It would be very, very helpful to have someone around who has root on
> cube and is able to be responsive to requests during a UK afternoon /
> evening.

Currently the release is blocked due to an anomaly on the Windows MSI
buildslaves.

The slaves are building MSIs that are named with "10.0.0" rather than
the expected "10.1.0". I don't have anything locally that will analyze
the MSIs to see whether this problem goes deeper than the name of the
file, but 'strings' hints that it's likely.

See http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162
for more details.

jml



From glyph at twistedmatrix.com  Sat Jul  3 11:29:58 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 3 Jul 2010 13:29:58 -0400
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
Message-ID: <B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>


On Jul 3, 2010, at 12:10 PM, Jonathan Lange wrote:

> On Fri, Jul 2, 2010 at 2:08 PM, Jonathan Lange <jml at mumak.net> wrote:
> ...
>> My intent is to complete the final steps of the release this weekend.
>> It would be very, very helpful to have someone around who has root on
>> cube and is able to be responsive to requests during a UK afternoon /
>> evening.
> 
> Currently the release is blocked due to an anomaly on the Windows MSI
> buildslaves.
> 
> The slaves are building MSIs that are named with "10.0.0" rather than
> the expected "10.1.0". I don't have anything locally that will analyze
> the MSIs to see whether this problem goes deeper than the name of the
> file, but 'strings' hints that it's likely.
> 
> See http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162
> for more details.

It looks like <http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162/steps/setproperty/logs/stdio> is identifying the version number for Twisted incorrectly.  I note that the log doesn't appear to have a PYTHONPATH entry for "C:\twistedbot\winxp32-py2.5-msi\Twisted", which is where the code actually lives; it's apparently just picking up the system Twisted that buildbot is using.

Does anybody have access to this machine to fix this build step?




From lvh at laurensvh.be  Sat Jul  3 13:19:18 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 3 Jul 2010 21:19:18 +0200
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
Message-ID: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>

Hi!


For those who don't know what OAuth is; the Wikipedia definition is
pretty good: "OAuth (Open Authorization) is an open standard that
allows users to share their private resources (e.g. photos, videos,
contact lists) stored on one site with another site without having to
hand out their username and password." It is currently being used by
big names like Google, Facebook, and Twitter. There's a number of ways
it can do this; the current draft RFC is here:
http://tools.ietf.org/html/rfc5849 . The "Example" section is short
and a recommended read.

A number of people have tried to implement it in Twisted. AFAICT most
of them just use oauth.py. That uses urllib. Basically I guess it just
crosses its fingers and hopes that the OAuth API endpoints will always
be reachable and responsive. (I have been told this is completely
unrealistic.)

Thankfully, the OAuth spec is asynchronous in nature. I'm trying to
implement OAuth using twisted (specifically twisted.cred and
twisted.web) to promote code re-use.

In order to do the authentication OAuth relies on redirection (in most
use cases, this is HTTP redirection), which would be protocol
specific. I'm not sure how twisted.cred fits into this since it
appears to expect everything beyond the portal to be
protocol-agnostic.

I'm not sure what the credentials would be.

If I understand correctly the avatar would be the thing that has the
token credentials (for those who haven't read the OAuth spec, "token
credentials" are an OAuth thing, and not necessarily the credentials
in the twisted.cred sense); it represents a single authenticated
transaction (which might consist of many authenticated requests). This
takes care of steps 6 7 and 8 in
http://twistedmatrix.com/documents/current/core/img/cred-login.png.

The strange bits start in the CredentialsChecker, since credentials
are checked by someone else entirely.

I really don't understand the Mind, but it sounds like something that
might be required in the context of a three-actor auth system like
OAuth.

I would be really grateful if someone who actually understood
twisted.cred (and hopefully also OAuth) could shed some light on this.

Thanks in advance
Laurens



From jaroslaw.fedewicz at gmail.com  Sat Jul  3 13:44:24 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sat, 3 Jul 2010 22:44:24 +0300
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
In-Reply-To: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
References: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
Message-ID: <AANLkTinulZsC3iP8e14skI5M2l8IG6jnijmPD2hciRAI@mail.gmail.com>

> The strange bits start in the CredentialsChecker, since credentials are checked by someone else entirely.

I see nothing strange. A checker which delegates checking to another
entity and returns a Deferred. Which may go through a whole lot of
callbacks and stages of verification before your own callbacks even
start...

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?



From therve at free.fr  Sat Jul  3 14:43:16 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 03 Jul 2010 22:43:16 +0200
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
	<B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
Message-ID: <1278189796.3426.0.camel@brainwave>

Le samedi 03 juillet 2010 à 13:29 -0400, Glyph Lefkowitz a écrit :
> On Jul 3, 2010, at 12:10 PM, Jonathan Lange wrote:
> 
> > On Fri, Jul 2, 2010 at 2:08 PM, Jonathan Lange <jml at mumak.net> wrote:
> > ...
> >> My intent is to complete the final steps of the release this weekend.
> >> It would be very, very helpful to have someone around who has root on
> >> cube and is able to be responsive to requests during a UK afternoon /
> >> evening.
> > 
> > Currently the release is blocked due to an anomaly on the Windows MSI
> > buildslaves.
> > 
> > The slaves are building MSIs that are named with "10.0.0" rather than
> > the expected "10.1.0". I don't have anything locally that will analyze
> > the MSIs to see whether this problem goes deeper than the name of the
> > file, but 'strings' hints that it's likely.
> > 
> > See http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162
> > for more details.
> 
> It looks like <http://buildbot.twistedmatrix.com/builders/winxp32-py2.5-msi/builds/162/steps/setproperty/logs/stdio> is identifying the version number for Twisted incorrectly.  I note that the log doesn't appear to have a PYTHONPATH entry for "C:\twistedbot\winxp32-py2.5-msi\Twisted", which is where the code actually lives; it's apparently just picking up the system Twisted that buildbot is using.
> 
> Does anybody have access to this machine to fix this build step?

The build step is in the master on cube. I think I've fixed it, sorry
for the trouble.

-- 
Thomas




From exarkun at twistedmatrix.com  Sat Jul  3 22:05:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Jul 2010 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1278216331.38.1119638712@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100704/c01c15ff/attachment.html>

From jml at mumak.net  Sun Jul  4 03:05:16 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 4 Jul 2010 10:05:16 +0100
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <1278189796.3426.0.camel@brainwave>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
	<B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
	<1278189796.3426.0.camel@brainwave>
Message-ID: <AANLkTim_u79L2J83IjiKynYwJ9X02svY6G_o3ZCQX-NJ@mail.gmail.com>

On Sat, Jul 3, 2010 at 9:43 PM, Thomas Hervé <therve at free.fr> wrote:
...
>
> The build step is in the master on cube. I think I've fixed it, sorry
> for the trouble.

Thanks. It looks like they're working now.

What was the problem? If something like this happened again, is there
anything we can do other than ask for help and then wait?

jml



From lvh at laurensvh.be  Sun Jul  4 07:53:38 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 4 Jul 2010 15:53:38 +0200
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
In-Reply-To: <AANLkTinulZsC3iP8e14skI5M2l8IG6jnijmPD2hciRAI@mail.gmail.com>
References: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
	<AANLkTinulZsC3iP8e14skI5M2l8IG6jnijmPD2hciRAI@mail.gmail.com>
Message-ID: <AANLkTill-aSpeXoVWS1gbDh2nOEeM_1cobb3HPso_PFn@mail.gmail.com>

I was confused about the latest spec; see
https://datatracker.ietf.org/doc/draft-ietf-oauth-v2/

I'm trying to figure out what changed from OAuth v1, some things
appear more complex, some changes are pretty trivial, but there's a
lot of different people writing and editing it now (Yahoo!, Facebook,
Microsoft), so this is probably the one to look out for even though
it's still in draft.

cheers
Laurens



From jml at mumak.net  Sun Jul  4 09:36:19 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 4 Jul 2010 16:36:19 +0100
Subject: [Twisted-Python] Twisted 10.1.0 released
Message-ID: <AANLkTinBcj50Bz0lERPbXvCtdWRwLedTljto9Nz2ss0f@mail.gmail.com>

On behalf of Twisted Matrix Laboratories, I am honored to announce the
release of Twisted 10.1.0.

Highlights include:

 * Deferreds now support cancellation

 * A new "endpoint" interface which can abstractly describe stream
transport endpoints such as TCP and SSL

 * inotify support for Linux, which allows monitoring of file system events.

 * AMP supports transferring timestamps

Note also that this is the *last* supported release of Twisted for
Python 2.4 on Windows.

For more information, see the NEWS file.

It's stable, backwards compatible, well tested and in every way an
improvement. Download it now from:

 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.tar.bz2
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.winxp32-py2.5.msi
 http://tmrc.mit.edu/mirror/twisted/Twisted/10.1/Twisted-10.1.0.winxp32-py2.6.msi

Many thanks to Glyph Lefkowitz, who helped do the release preparation,
and the PyCon 2010 sprinters, who did so much of the work for this
release.

jml



From jml at mumak.net  Sun Jul  4 10:13:21 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 4 Jul 2010 17:13:21 +0100
Subject: [Twisted-Python] 10.1 release follow-up
Message-ID: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>

Hello everybody,

As you've seen, the Twisted 10.1.0 release is out there.

I've started this thread for any discussions about the way the release
was done and for the next release.

Glyph Lefkowitz has kindly offered to be the RM for the 10.2 release,
which is scheduled for September 15, 2010.

Note that the Ubuntu feature freeze is August 12th, so we can expect
10.1 to be the release that goes into Ubuntu 10.10.

There were four open tickets on the 10.1 milestone. I have moved them
off the milestone and closed them. When they are fixed, I'll be happy
to consider re-opening the milestone and rolling out a 10.1.1.

As part of this release, there have been many improvements to the
release process document, see
http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
appreciate it if the document could be reviewed for clarity and
correctness.

The biggest blockers to a swift release, from my perspective, were the
following:
  * myself having work travel and then vacation around the scheduled
time of the release
  * delaying to wait for feedback on the release candidate
  * waiting for the review for the release ticket
  * waiting for someone else to solve the buildbot issues for Windows

I've filed a ticket for moving the release document into version
control, http://twistedmatrix.com/trac/ticket/4543. I'm happy to do
so, but I'd like at least a rubber-stamp from someone before I do the
work.

jml



From therve at free.fr  Sun Jul  4 14:48:44 2010
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sun, 04 Jul 2010 22:48:44 +0200
Subject: [Twisted-Python] Twisted 10.1.0 release status update
In-Reply-To: <AANLkTim_u79L2J83IjiKynYwJ9X02svY6G_o3ZCQX-NJ@mail.gmail.com>
References: <AANLkTimD22qltBnZDpGsXlcFQNx0CNSLlZYjn0hrWAZX@mail.gmail.com>
	<AANLkTik6siuIO925f5UwGC9N8l6cIRhs3OfL_QgAGBwV@mail.gmail.com>
	<B784DEB7-853C-4351-A7D1-6D5C3519A5C6@twistedmatrix.com>
	<1278189796.3426.0.camel@brainwave>
	<AANLkTim_u79L2J83IjiKynYwJ9X02svY6G_o3ZCQX-NJ@mail.gmail.com>
Message-ID: <1278276524.2221.5.camel@brainwave>

Le dimanche 04 juillet 2010 à 10:05 +0100, Jonathan Lange a écrit :
> On Sat, Jul 3, 2010 at 9:43 PM, Thomas Hervé <therve at free.fr> wrote:
> ...
> >
> > The build step is in the master on cube. I think I've fixed it, sorry
> > for the trouble.
> 
> Thanks. It looks like they're working now.
> 
> What was the problem? If something like this happened again, is there
> anything we can do other than ask for help and then wait?

The problem was in the msi builder class in the buildbot master. The
specific files holding those objects
is /srv/bb-master/BuildBot/master/twisted_factories.py

This is the interesting part:


class TwistedBdistMsiFactory(TwistedBaseFactory):
    treeStableTimer = 5*60

    uploadBase = 'public_html/builds/'
    def __init__(self, source, uncleanWarnings, platform, pyVersion):
        python = self.python(pyVersion)
        TwistedBaseFactory.__init__(self, python, source,
           uncleanWarnings)
        self.addStep(
            LearnVersion, python=python, package='twisted', 
            workdir='Twisted')


The problem was that the step used to specify "source" as workdir,
instead of "Twisted". The "source" directory probably doesn't even
exist, so it didn't get the version from the correct place. It got the
wrong value because this step was wrongly copied from
PyOpenSSLBuildFactoryBase class.

Once fixed, a "make restart-master" in /srv/bb-master/BuildBot/ takes
the changed file into account.

Hope this helps,

-- 
Thomas







From exarkun at twistedmatrix.com  Sun Jul  4 20:08:04 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Jul 2010 02:08:04 -0000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
Message-ID: <20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>

On 4 Jul, 04:13 pm, jml at mumak.net wrote:
>Hello everybody,
>
>As you've seen, the Twisted 10.1.0 release is out there.
>
>I've started this thread for any discussions about the way the release
>was done and for the next release.
>
>Glyph Lefkowitz has kindly offered to be the RM for the 10.2 release,
>which is scheduled for September 15, 2010.
>
>Note that the Ubuntu feature freeze is August 12th, so we can expect
>10.1 to be the release that goes into Ubuntu 10.10.
>
>There were four open tickets on the 10.1 milestone. I have moved them
>off the milestone and closed them. When they are fixed, I'll be happy
>to consider re-opening the milestone and rolling out a 10.1.1.
>
>As part of this release, there have been many improvements to the
>release process document, see
>http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
>appreciate it if the document could be reviewed for clarity and
>correctness.
>
>The biggest blockers to a swift release, from my perspective, were the
>following:
>  * myself having work travel and then vacation around the scheduled
>time of the release
>  * delaying to wait for feedback on the release candidate
>  * waiting for the review for the release ticket
>  * waiting for someone else to solve the buildbot issues for Windows
>
>I've filed a ticket for moving the release document into version
>control, http://twistedmatrix.com/trac/ticket/4543. I'm happy to do
>so, but I'd like at least a rubber-stamp from someone before I do the
>work.

Hi jml,

Thanks for your work on this release, and congratulations on getting it 
out the door. :)

I'm curious about plans to update the documentation on the website and 
distribute the .exe Windows installers.

Jean-Paul



From jml at mumak.net  Mon Jul  5 02:23:26 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 09:23:26 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
Message-ID: <AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>

On Mon, Jul 5, 2010 at 3:08 AM,  <exarkun at twistedmatrix.com> wrote:
...
> Thanks for your work on this release, and congratulations on getting it
> out the door. :)
>
> I'm curious about plans to update the documentation on the website and
> distribute the .exe Windows installers.
>

Oops, forgot to switch over the symlink for the docs. That's done now.

I don't remember anyone saying anything about exes until now.

jml



From rlotun at gmail.com  Mon Jul  5 04:21:40 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 5 Jul 2010 11:21:40 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
Message-ID: <AANLkTimCwZjmrV8W650hG0QItxxlwjUTlGUUCU0tYH2C@mail.gmail.com>

On Sun, Jul 4, 2010 at 5:13 PM, Jonathan Lange <jml at mumak.net> wrote:
> Hello everybody,
>
> As you've seen, the Twisted 10.1.0 release is out there.
>
> ...

Just a note that I tried to view the release process document but I'm
getting "Could not connect" errors.

I don't recall anyone mentioning this before, but it would be great if
there was a "What's new in Twisted X.Y.Z" mini-article that's
hand-written with every release. If it was something like
http://docs.python.org/dev/whatsnew/2.7.html and even used the same
template, that would be cool. Coming from the perspective of a Twisted
*user* I'd love to see a small snippet of how to use deferred
cancellation or endpoints without necessarily having to hunt down the
full documentation.

Anyway, good job everyone on this release!

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From peter.westlake at pobox.com  Mon Jul  5 06:22:06 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 05 Jul 2010 13:22:06 +0100
Subject: [Twisted-Python] Problem with twistedmatrix.com
Message-ID: <1278332526.21782.1383341571@webmail.messagingengine.com>

Some of twistedmatrix.com is working, but the top level
(http://twistedmatrix.com/) says "Could not connect", and the Subversion
repository does the same:

svn checkout svn://svn.twistedmatrix.com/svn/Twisted
svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused

Peter.



From exarkun at twistedmatrix.com  Mon Jul  5 06:36:25 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Jul 2010 12:36:25 -0000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
Message-ID: <20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>

On 08:23 am, jml at mumak.net wrote:
>On Mon, Jul 5, 2010 at 3:08 AM,  <exarkun at twistedmatrix.com> wrote:
>...
>>Thanks for your work on this release, and congratulations on getting 
>>it
>>out the door. :)
>>
>>I'm curious about plans to update the documentation on the website and
>>distribute the .exe Windows installers.
>
>Oops, forgot to switch over the symlink for the docs. That's done now.

Great, thanks!

One thing that it looks like we missed again (and I'm not surprised, 
it's not well documented) is the Google Analytics doc template changes. 
This is mentioned on the APIDocs page, but maybe not described in 
sufficient detail?
>
>I don't remember anyone saying anything about exes until now.

These are mentioned on ReleaseProcess (Cut the tarballs & installers, 
3.4), but apparently only in one of the several places where they need 
to be handled.  This is the first release where we're trying to provide 
them (#4427).

Jean-Paul



From peter.westlake at pobox.com  Mon Jul  5 06:53:45 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 05 Jul 2010 13:53:45 +0100
Subject: [Twisted-Python] Problem with twistedmatrix.com
In-Reply-To: <1278332526.21782.1383341571@webmail.messagingengine.com>
References: <1278332526.21782.1383341571@webmail.messagingengine.com>
Message-ID: <1278334425.29684.1383346003@webmail.messagingengine.com>

It's all working again now.

On Mon, 05 Jul 2010 13:22 +0100, "Peter Westlake"
<peter.westlake at pobox.com> wrote:
> Some of twistedmatrix.com is working, but the top level
> (http://twistedmatrix.com/) says "Could not connect", and the Subversion
> repository does the same:
> 
> svn checkout svn://svn.twistedmatrix.com/svn/Twisted
> svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
> 
> Peter.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From jml at mumak.net  Mon Jul  5 06:58:01 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 13:58:01 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
Message-ID: <AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>

On Mon, Jul 5, 2010 at 1:36 PM,  <exarkun at twistedmatrix.com> wrote:
> On 08:23 am, jml at mumak.net wrote:
>>On Mon, Jul 5, 2010 at 3:08 AM,  <exarkun at twistedmatrix.com> wrote:
>>...
>>>Thanks for your work on this release, and congratulations on getting
>>>it
>>>out the door. :)
>>>
>>>I'm curious about plans to update the documentation on the website and
>>>distribute the .exe Windows installers.
>>
>>Oops, forgot to switch over the symlink for the docs. That's done now.
>
> Great, thanks!
>
> One thing that it looks like we missed again (and I'm not surprised,
> it's not well documented) is the Google Analytics doc template changes.
> This is mentioned on the APIDocs page, but maybe not described in
> sufficient detail?

I think it's not so much lacking detail as leaving gaps for
interpretation or not being step-by-step enough (which I guess is the
same thing, but a subtly different goal).

Following the documentation generation instructions was confusing for
me because:
  * originally they were incomplete and messy
  * the "api documentation" and "general documentation" steps were conflated
  * at least one of the steps required a special kind of tree, which
took me some time to figure out
  * I was using the last release and release 8.2.0 as a way of double
checking that I was doing the right thing

Things we can do now:
  * Update the current documentation so that it uses the correct template
  * Update the release process to be clearer (I think this is done
now, but I can use the previous step to double check)
  * Delete APIDocs, or at least stop recommending it -- it's easier
followed if folded in to the release doc

>>
>>I don't remember anyone saying anything about exes until now.
>
> These are mentioned on ReleaseProcess (Cut the tarballs & installers,
> 3.4), but apparently only in one of the several places where they need
> to be handled.  This is the first release where we're trying to provide
> them (#4427).
>

Ahh, ok, I see that now. I think if I'd received some sort of direct
communication about it, I wouldn't have missed them.

Other things we can do, now, to make this easier:
  * Upload the exes, re-issue the md5sum file
  * Add the exes to the Downloads page
  * Make a decision about whether we want the exes on the front page,
act on that decision
  * Update the examples in the release process doc to include the exes
  * Update the release blog post pointing to the exes

For both of these issues, a more satisfying solution would be to
automate them, putting them outside the realm of human error. However,
I think the interim steps listed above are worthwhile.

I'll do these now, and email back when I'm done.

I would greatly appreciate thoughts on the issues I raised in my original post.

jml



From jml at mumak.net  Mon Jul  5 07:23:47 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 14:23:47 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
Message-ID: <AANLkTikYWQfDQdUkw2ff3hkoCt5hBBzDUZYLAzjXcNY7@mail.gmail.com>

On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
...
> Other things we can do, now, to make this easier:
>  * Upload the exes, re-issue the md5sum file

Done.

>  * Add the exes to the Downloads page

Done.

>  * Make a decision about whether we want the exes on the front page,
> act on that decision

Done. I have the exes linked in parens after the msis.

>  * Update the examples in the release process doc to include the exes

Done.

>  * Update the release blog post pointing to the exes
>

Done.

jml



From jml at mumak.net  Mon Jul  5 08:21:35 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 15:21:35 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
Message-ID: <AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>

On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
...
> Things we can do now:
>  * Update the current documentation so that it uses the correct template
>  * Update the release process to be clearer (I think this is done
> now, but I can use the previous step to double check)
>  * Delete APIDocs, or at least stop recommending it -- it's easier
> followed if folded in to the release doc
>

These are all done. APIDocs still exists but is no longer referred to
by the release document.

Please confirm that the analytics stuff works.

jml



From exarkun at twistedmatrix.com  Mon Jul  5 08:58:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Jul 2010 14:58:29 -0000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
	<AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>
Message-ID: <20100705145829.2967.1413978396.divmod.xquotient.22@localhost.localdomain>

On 02:21 pm, jml at mumak.net wrote:
>On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
>...
>>Things we can do now:
>>�* Update the current documentation so that it uses the correct 
>>template
>>�* Update the release process to be clearer (I think this is done
>>now, but I can use the previous step to double check)
>>�* Delete APIDocs, or at least stop recommending it -- it's easier
>>followed if folded in to the release doc
>
>These are all done. APIDocs still exists but is no longer referred to
>by the release document.
>
>Please confirm that the analytics stuff works.

It looks like it's working on the API docs but not on the howtos.  The 
quoting seems to be a bit messed up:

<!-- Google analytics, obviously. --> <script src="http://www.google- 
analytics.com/urchin.js" type="text/javascript"/> <script 
type="text/javascript"> _uacct = &quot;UA-99018-6&quot;;
urchinTracker();
</script>
I think this needs to be `_uacct = "UA-99018-6";`.  I seem to recall 
having some difficulty getting this output when generating the 9.0 docs, 
though. :/

Let's chat on IRC if you run into similar problems.

Jean-Paul



From jml at mumak.net  Mon Jul  5 10:15:34 2010
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Jul 2010 17:15:34 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <20100705145829.2967.1413978396.divmod.xquotient.22@localhost.localdomain>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<20100705020804.2967.1053883193.divmod.xquotient.3@localhost.localdomain>
	<AANLkTilMpKMFsTLx9FpxIuBjfnarXn5lVxRKDIafHihD@mail.gmail.com>
	<20100705123625.2967.1963776436.divmod.xquotient.12@localhost.localdomain>
	<AANLkTimj-6cB_IdwtbdC0Y1uMN6qsXP3hxxkwncJntVE@mail.gmail.com>
	<AANLkTimAOotJy74wTKB87ZOI5FxzJRi8aLCmb4xXhF_5@mail.gmail.com>
	<20100705145829.2967.1413978396.divmod.xquotient.22@localhost.localdomain>
Message-ID: <AANLkTimJ7W8QEW8LsfeWYu4G7U73YVdRZA00midsLDcC@mail.gmail.com>

On Mon, Jul 5, 2010 at 3:58 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:21 pm, jml at mumak.net wrote:
>>
>> On Mon, Jul 5, 2010 at 1:58 PM, Jonathan Lange <jml at mumak.net> wrote:
>> ...
>>>
>>> Things we can do now:
>>>  * Update the current documentation so that it uses the correct template
>>>  * Update the release process to be clearer (I think this is done
>>> now, but I can use the previous step to double check)
>>>  * Delete APIDocs, or at least stop recommending it -- it's easier
>>> followed if folded in to the release doc
>>
>> These are all done. APIDocs still exists but is no longer referred to
>> by the release document.
>>
>> Please confirm that the analytics stuff works.
>
> It looks like it's working on the API docs but not on the howtos.  The
> quoting seems to be a bit messed up:
>
> <!-- Google analytics, obviously. --> <script src="http://www.google-
> analytics.com/urchin.js" type="text/javascript"/> <script
> type="text/javascript"> _uacct = &quot;UA-99018-6&quot;;
> urchinTracker();
> </script>
> I think this needs to be `_uacct = "UA-99018-6";`.  I seem to recall having
> some difficulty getting this output when generating the 9.0 docs, though. :/
>

These are now fixed. I've updated the release document with
workarounds and filed bugs #4544 and #4545.

jml



From glyph at twistedmatrix.com  Mon Jul  5 11:48:01 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 13:48:01 -0400
Subject: [Twisted-Python] Implementing OAuth in twisted.cred
In-Reply-To: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
References: <AANLkTike2pnGZn8mXZvmDknqb3aSb9X42kqo_RPmhI0K@mail.gmail.com>
Message-ID: <50B8BDD6-01E6-44D5-BFDA-4DB4442D0732@twistedmatrix.com>


On Jul 3, 2010, at 3:19 PM, Laurens Van Houtven wrote:

> A number of people have tried to implement it in Twisted. AFAICT most
> of them just use oauth.py. That uses urllib. Basically I guess it just
> crosses its fingers and hopes that the OAuth API endpoints will always
> be reachable and responsive. (I have been told this is completely
> unrealistic.)

It always is.

> Thankfully, the OAuth spec is asynchronous in nature. I'm trying to
> implement OAuth using twisted (specifically twisted.cred and
> twisted.web) to promote code re-use.

Great!

> In order to do the authentication OAuth relies on redirection (in most
> use cases, this is HTTP redirection), which would be protocol
> specific. I'm not sure how twisted.cred fits into this since it
> appears to expect everything beyond the portal to be
> protocol-agnostic.

Not at all.

Checkers are as protocol-specific as necessary.  That's why they have a credentialInterfaces attribute, to indicate what type of credentials they may be used with.

Now, many *application* protocols do share obvious checker behavior such as "does this password match", and it would be a shame to re-implement that logic, but that's not to say that *authentication* protocols shouldn't have their own, more specific interfaces.  Especially if you could see some way to abstractly re-implement, let's say, SMTP authentication to rely on OAuth.

As someone else already noted in a reply, the main thing is that this stuff returns a Deferred, so HTTP redirection could be neatly handled there.

> I'm not sure what the credentials would be.

I'm not going to read 40 pages of RFC just to answer this one email :) but the credentials object should be something that contains enough information for the checker to do its work.

What the checker needs to be able to do is to map the credentials into a locally useful "avatar ID".  This is probably just an URI which identifies the authenticated principal (which presumably the IRealm could use to map into a local database row).

Of course it would be *good* if you could boil down OAuth credentials to something simple that could be re-used by other protocols, or better yet some existing interface.  Then you could use an existing checker, or perhaps even provide a strcred plugin.  But, that seems unlikely, given that its domain model for authentication is a bit broader than the usual username/password check.

> If I understand correctly the avatar would be the thing that has the
> token credentials (for those who haven't read the OAuth spec, "token
> credentials" are an OAuth thing, and not necessarily the credentials
> in the twisted.cred sense); it represents a single authenticated
> transaction (which might consist of many authenticated requests). This
> takes care of steps 6 7 and 8 in
> http://twistedmatrix.com/documents/current/core/img/cred-login.png.

The avatar is made entirely of application logic.  It shouldn't have any authentication stuff stuck to it at all.  (Although maybe that's not what "token credentials" means...)  Please note that it must be an implementation of an _existing_ protocol interface, as that's the whole point of cred's abstraction: to allow existing application logic to be re-used independent of authentication or authorization mechanism.  If this is an authentication mechanism for an HTTP protocol, the avatar is an IResource provider.  HTTP already has a defined avatar interface within Twisted, and that's it; so if you want to use any existing code that talks to cred, you have to use it.

If the avatar needs to be passed more information in order to operate correctly, then you can pass that information as part of the avatar ID somehow, and have the realm implementation break it down into the necessary parts to pass on.  This is, admittedly, a crufty corner of cred, but that's the best option available right now.  Hopefully OAuth doesn't require this :).

> The strange bits start in the CredentialsChecker, since credentials
> are checked by someone else entirely.

A credentials checker doesn't need to actually check the credentials itself; it's just the logic that knows who to delegate to and what information to give them.

> I really don't understand the Mind, but it sounds like something that
> might be required in the context of a three-actor auth system like
> OAuth.

The Mind is for connection-oriented protocols to provide a callback mechanism to the originating side of the connection.  For example, if I'm logging in to an IRC server, the 'mind' would be a wrapper around the client connection that would allow the avatar to be associated with a TCP socket it could send IRC messages to.  I don't think it applies in this case.

> I would be really grateful if someone who actually understood
> twisted.cred (and hopefully also OAuth) could shed some light on this.

I hope this has been more useful than confusing.  Let me know if you have more questions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100705/081cdf28/attachment.html>

From ddwiggins at advpubtech.com  Mon Jul  5 19:26:08 2010
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Mon, 05 Jul 2010 18:26:08 -0700
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com>
References: <i0bfj2$iem$1@dough.gmane.org>
	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com>
Message-ID: <i0u0nh$fki$1@dough.gmane.org>

Hugh,
> The way I do this is I isolate all the COM stuff in a separate thread
> from thread that runs my reactor.

This all looks good, and I think I understand it.  One question, though: 
from my investigation, it seems that the hangup is in the COM object 
creation itself, where Mark and I think it's waiting on a Windows 
message.  Wouldn't I have to have the event loop running before calling 
Dispatch?  (FWIW, I do call CoInitializeEx the same way you do, and have 
the object built with apartment threading.)

>
> This thread starts by calling:
>
>      pythoncom.CoInitializeEx(pythoncom.COINIT_APARTMENTTHREADED)
>
> it then creates the COM object and runs an event loop something like this:
>
>      while keepRunning:
>          n = MsgWaitForMultipleObjects(handles, False, timeout, QS_ALLINPUT)
>          if n == WAIT_OBJECT_0 + nHandles:
>              # There is a win32 message waiting.
>              if pythoncom.PumpWaitingMessages():
>                  keepRunning = False
>
> I send messages to the thread by putting them in a queue and setting
> an event.  The messages cause methods to be called on the COM object.
> I send the results of the COM methods back to the reactor thread using
> reactor.callFromThread().

Thanks much for the help,

-- 
Don Dwiggins
Advanced Publishing Technology




From glyph at twistedmatrix.com  Mon Jul  5 20:30:15 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 22:30:15 -0400
Subject: [Twisted-Python] relative priority of deprecation tickets
Message-ID: <C5E6757D-5DD2-4242-A3F7-EBBC0C3BACA6@twistedmatrix.com>

Hello there everybody - and by "everybody" I mostly mean "thijs" :-).

I've noticed that there is an increasing proliferation of small, "remove some deprecated stuff" tickets in the Twisted tracker.  While, nominally, according to our own process, everything that is deprecated should eventually be removed, some removals should be more eventual than others.

For example, Jean-Paul Calderone had this to say (on IRC) about <http://twistedmatrix.com/trac/ticket/4548>:

<exarkun> The thing that's deprecated in twisted.news.nntp is supporting applications that return a string from a particular api instead of an Article instance
<exarkun> The support code for that case is one line
<exarkun> In the 6 years it has existed, it has cost zero maintenance time

The real purpose of these 'removal' tickets is to reduce maintenance overhead by eliminating redundant code that doesn't need to be maintained, and shouldn't be presented to new users (in API docs, in examples, etc).  Some code really does produce a maintenance burden and needs to be thought about a lot.  But we can really afford to let innocuous one-liners slide for quite a long time; in the meanwhile, all they're doing is providing a more useful error message for developers using the older API.

Of course, small maintenance tickets like this do serve as a way to provide 'easy' work to newcomers, and that's great.  But if newcomers are going to do easy things, a much more worthwhile type of grunt-work would be for them to remove warnings that Twisted itself, especially 'trial twisted' is _emitting_.  Similarly, if anyone would like to spend time filing individual tickets to provide more fine-grained warning-removal tickets ("twisted emits warnings" is obviously way too big for one patch) that would be more helpful.

If you are going to file tickets for removing code that nobody is really having to maintain at the moment, please set their priority to 'lowest', since leaving them at 'normal' creates the misleading impression that they are just as important as fixing bugs, adding documentation or implementing features.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100705/4eb73847/attachment.html>

From glyph at twistedmatrix.com  Mon Jul  5 20:52:52 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 22:52:52 -0400
Subject: [Twisted-Python] Advice seeked on SMPP implementation
In-Reply-To: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
References: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
Message-ID: <D95EFCBC-8007-464F-B01E-3E9BA0D8403A@twistedmatrix.com>


On Jul 3, 2010, at 7:23 AM, Yaroslav Fedevych wrote:

> If I'm going to make it internal to my needs, there's only issue of
> making it work and be done with it. But that's not quite a way I would
> like to do it; I would like to end up with an implementation which
> would be reusable and beneficial for the community as well, so that
> anyone would be then able to take this implementation and get his or
> her service an almost instant ability to talk SMPP (news via SMS?
> microblogging via SMS? ...)

That would indeed be cool :).

> Thus keeping in mind that SMPP by its nature is not entirely unlike
> your old instant messaging and mailing protocols, albeit geared
> towards mobile content, there might be some interfaces already in
> Twisted which I would need to implement before it becomes interesting
> to anyone else.
> 
> Can anyone give me some useful pointers on that?

There are some existing interfaces in twisted.words.im, which you can see here:

	<http://twistedmatrix.com/trac/browser/trunk/twisted/words/im/interfaces.py>

but they have not seen a lot of maintenance, and they date back to a much less awesome time in Twisted's history.  Still, there may be some small utility in implementing them, if for no other reason than to encourage them to become better documented and supported!

I don't have much advice as to *what* to implement, how to structure your code and such, but I do have some advice as to *how* you should go about it:

	1. put it up on Launchpad.  don't wait until your design is done; develop it in the open to solicit feedback.
	2. choose a nice, obvious name (might I suggest 'txsmpp'?)
	3. use test-driven development, so that your code is maintainable!
	4. join the 'tx' meta-project <https://launchpad.net/tx>
	5. when you are, of course, totally successful, write a success story and send it to <mailto:success at twistedmatrix.com>.

Hope that helps,

-glyph




From glyph at twistedmatrix.com  Mon Jul  5 20:53:43 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 22:53:43 -0400
Subject: [Twisted-Python] Advice seeked on SMPP implementation
In-Reply-To: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
References: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
Message-ID: <14296B7F-B858-480F-A3C4-094E23E08291@twistedmatrix.com>


On Jul 3, 2010, at 7:23 AM, Yaroslav Fedevych wrote:

> Engineer : How do I do it?
> Economist : How much will it cost?
> Twisted Developer: Will it block?

and by the way, this is hilarious :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100705/b82f57e0/attachment.html>

From glyph at twistedmatrix.com  Mon Jul  5 21:08:57 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Jul 2010 23:08:57 -0400
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
Message-ID: <E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>


On Jul 4, 2010, at 12:13 PM, Jonathan Lange wrote:

> As you've seen, the Twisted 10.1.0 release is out there.

Yay!

> I've started this thread for any discussions about the way the release
> was done and for the next release.

I am generally very pleased with the way it went.  It appears to have been the smoothest release thus far.

> Glyph Lefkowitz has kindly offered to be the RM for the 10.2 release,
> which is scheduled for September 15, 2010.

Oh boy.  I'm really in for it now.

> Note that the Ubuntu feature freeze is August 12th, so we can expect
> 10.1 to be the release that goes into Ubuntu 10.10.

I would *like* to accelerate the schedule for this release if we can get certain important features in which missed the last release (documentation for endpoints, documentation for cancellation, endpoint string parsing, endpoint plugins, and some SSL issues that Jean-Paul and I discovered while working on these).  It would be nice to establish the precedent that important features cause releases to happen *faster*, rather than causing them to be delayed.  

But I certainly don't want to make any promises about getting it done by a particular advance date.  I thought that you handled the delays and setbacks in this release fairly well - I can't see myself doing it substantially better - and so trying to accelerate the schedule may just result in the release actually occurring on time.

> There were four open tickets on the 10.1 milestone. I have moved them
> off the milestone and closed them. When they are fixed, I'll be happy
> to consider re-opening the milestone and rolling out a 10.1.1.
> 
> As part of this release, there have been many improvements to the
> release process document, see
> http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
> appreciate it if the document could be reviewed for clarity and
> correctness.

I will obviously be doing this in more detail as I move forward with the next release, but the recent edits are a big improvement to the clarity and completeness of the document.  Thank you for all your efforts here; as your successor and therefore the primary beneficiary of those efforts, I _much_ appreciate them.  I will try to continue the same trend with my own release work.

> The biggest blockers to a swift release, from my perspective, were the
> following:
>  * myself having work travel and then vacation around the scheduled
> time of the release
>  * delaying to wait for feedback on the release candidate

This seems to me like a necessary delay.  I wish that we could motivate the readers of this mailing list to be a bit more responsive, but I don't see how we could have been much louder about it :).

>  * waiting for the review for the release ticket
>  * waiting for someone else to solve the buildbot issues for Windows

It looks like those issues were a one-time thing, at least.

> I've filed a ticket for moving the release document into version
> control, http://twistedmatrix.com/trac/ticket/4543. I'm happy to do
> so, but I'd like at least a rubber-stamp from someone before I do the
> work.

I left some comments there.

Thanks again for all your hard work, JML.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100705/0df5e07b/attachment.html>

From mithrandi at mithrandi.net  Mon Jul  5 22:07:07 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 6 Jul 2010 06:07:07 +0200
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
Message-ID: <AANLkTikglX55HiXczsKTod5pgRg7oWW881jBELzUgA2Y@mail.gmail.com>

On Tue, Jul 6, 2010 at 5:08 AM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> I would *like* to accelerate the schedule for this release if we can get
> certain important features in which missed the last release (documentation
> for endpoints, documentation for cancellation, endpoint string parsing,
> endpoint plugins, and some SSL issues that Jean-Paul and I discovered while
> working on these).  It would be nice to establish the precedent that
> important features cause releases to happen *faster*, rather than causing
> them to be delayed.

The best solution for "this cool stuff should really be in the
release!" is "don't worry, there's another release just around the
corner". If you know the release after this one will happen reasonably
soon, there's not as much stress to cram everything you can into this
one. Of course, achieving that requires streamlining the release
process so that it's pleasantly easy to perform frequently, instead of
painfully unpleasant; but I guess jml already described what is
necessary to make that happen.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From hugh.emberson at gmail.com  Mon Jul  5 23:53:12 2010
From: hugh.emberson at gmail.com (Hugh Emberson)
Date: Tue, 6 Jul 2010 15:53:12 +1000
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <i0u0nh$fki$1@dough.gmane.org>
References: <i0bfj2$iem$1@dough.gmane.org>
	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com> 
	<i0u0nh$fki$1@dough.gmane.org>
Message-ID: <AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com>

On Tue, Jul 6, 2010 at 11:26 AM, Don Dwiggins <ddwiggins at advpubtech.com> wrote:
> Hugh,
>> The way I do this is I isolate all the COM stuff in a separate thread
>> from thread that runs my reactor.
>
> This all looks good, and I think I understand it.  One question, though:
> from my investigation, it seems that the hangup is in the COM object
> creation itself, where Mark and I think it's waiting on a Windows
> message.  Wouldn't I have to have the event loop running before calling
> Dispatch?  (FWIW, I do call CoInitializeEx the same way you do, and have
> the object built with apartment threading.)

I got the order wrong.  On further reading of the code, the COM object
is created in response to a message from the Twisted thread, so at
that point the event loop has iterated at least once.

In my case the COM object is wrapped in a C++ wrapper that I don't
have the source for, so I don't know exactly what happens in there.
That C++ wrapper is then wrapped in a very thin python extension
module which doesn't do anything interesting.

> Thanks much for the help,

My pleasure.

Hugh



From f.schneider at de-bleek.demon.nl  Tue Jul  6 05:31:13 2010
From: f.schneider at de-bleek.demon.nl (Schneider)
Date: Tue, 6 Jul 2010 13:31:13 +0200
Subject: [Twisted-Python] Newbie: using cred  strcred.AuthOptionMixin
Message-ID: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>

Hi,

I need a perspective broker with authentification and followed the Twisted
documentation on
http://twistedmatrix.com/documents/current/core/howto/tap.html#auto4 to get
the twistd plugin to work. Now I want to make it work with the /etc/shadow,
but don't know how to get it to work.  

The plugin looks like:
-----------------------------------------------------------------------
from zope.interface import implements
from twisted.python import usage
from twisted.plugin import IPlugin
from twisted.application.service import IServiceMaker from
twisted.application import internet from twisted.cred import credentials,
portal, strcred from twisted.spread import pb

from qxmt.QXMTServer import QXMTUser

class Options(usage.Options, strcred.AuthOptionMixin):
    # This part is optional; it tells AuthOptionMixin what
    # kinds of credential interfaces the user can give us.
    supportedInterfaces = (credentials.IUsernamePassword,)

    optParameters = [["port", "p", 8789, "Server port number"]]


class QXMTRealm:
    implements(portal.IRealm)
    def requestAvatar(self, avatarId, mind, *interfaces):
        if pb.IPerspective not in interfaces:
            raise NotImplementedError
        return pb.IPerspective, QXMTUser(avatarId), lambda: None

class QXMTServiceMaker(object):
    implements(IServiceMaker, IPlugin)
    tapname = "qxmt"
    description = "The QXtend remote error processing tool."
    options = Options

    def makeService(self, options):
        """
        Construct a TCPServer from a factory defined in qxmt.
        """
        p = portal.Portal(QXMTRealm(), options["credCheckers"])
        #c = checkers.InMemoryUsernamePasswordDatabaseDontUse(user1="pass1",
        #p.registerChecker(c)
        return internet.TCPServer(int(options['port']),
                                  pb.PBServerFactory(p))

serviceMaker = QXMTServiceMaker()
-----------------------------------------------------------------------

Running twistd qxmt --help-auth gives

Usage: --auth AuthType[:ArgString]
For detailed help: --help-auth-type AuthType

  AuthType      ArgString format
  ========      ================
  memory        A colon-separated list (name:password:...)
  file          Location of a FilePasswordDB-formatted file.
  unix          No argstring required.

And twistd qxmt --help-auth-type unix gives

Usage: --auth unix[:ArgString]
ArgString format: No argstring required.

  This checker will attempt to use every resource available to
  authenticate against the list of users on the local UNIX system.
  (This does not support Windows servers for very obvious reasons.)

  Right now, this includes support for:

    * Python's pwd module (which checks /etc/passwd)
    * Python's spwd module (which checks /etc/shadow)

  Future versions may include support for PAM authentication. 

So, I guess the server now should be able to use the system's shadow
passwords for authentification.

As a client I used with the InMemoryUsernamePasswordDatabaseDontUse checker
the following code.

-----------------------------------------------------------------------
#!/usr/bin/env python

# Copyright (c) 2009 Twisted Matrix Laboratories.
# See LICENSE for details.

from twisted.spread import pb
from twisted.internet import reactor
from twisted.cred import credentials

def main():
    factory = pb.PBClientFactory()
    reactor.connectTCP("localhost", 8789, factory)
    def1 = factory.login(credentials.UsernamePassword("user1", "pass1"))
    def1.addCallback(connected)
    reactor.run()

def connected(perspective):
    print "got perspective1 ref:", perspective
    print "asking it to foo(13)"
    perspective.callRemote("foo", 13)

main()
-----------------------------------------------------------------------

How to rewrite the client to make it work with --auth=unix ?

Thanks,

Frans







From exarkun at twistedmatrix.com  Tue Jul  6 06:29:17 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 06 Jul 2010 12:29:17 -0000
Subject: [Twisted-Python] Newbie: using cred  strcred.AuthOptionMixin
In-Reply-To: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>
References: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>
Message-ID: <20100706122917.2549.408974701.divmod.xquotient.34@localhost.localdomain>

On 11:31 am, f.schneider at de-bleek.demon.nl wrote:
>Hi,
>
>I need a perspective broker with authentification and followed the 
>Twisted
>documentation on
>http://twistedmatrix.com/documents/current/core/howto/tap.html#auto4 to 
>get
>the twistd plugin to work. Now I want to make it work with the 
>/etc/shadow,
>but don't know how to get it to work.

The /etc/shadow cred plugin supports checking IUsernamePassword 
credentials.  PBServerFactory creates protocol instances that only know 
how to check IUsernameHashedPassword, IUsernameMD5Password, and 
IAnonymous credentials, though.  So no clients will be able to 
authenticate with this configuration.

You can add support for new credentials types to your PB server by 
creating the PBServerFactory with an IPBRoot provider that returns a 
root object (typically a Referenceable instance) with a "remote_login" 
method - or any other method that you make your PBClientFactory's login 
method call with credentials information.

The most straightforward thing to implement would be simple 
username/password authentication where the client sends both pieces of 
information to the server and the server verifies them.  This would only 
be secure if used over a secure transport such as SSL, of course.

It might also help to look at how authentication is implemented now, in 
twisted/spread/pb.py, in the _PortalRoot, _PortalWrapper, and 
_PortalAuthChallenger.

Jean-Paul



From jaroslaw.fedewicz at gmail.com  Tue Jul  6 06:41:14 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Tue, 6 Jul 2010 15:41:14 +0300
Subject: [Twisted-Python] Advice seeked on SMPP implementation
In-Reply-To: <14296B7F-B858-480F-A3C4-094E23E08291@twistedmatrix.com>
References: <AANLkTikbqk4Z0qxPcy9bGzywdtc2piBl_o71q2uH8Us4@mail.gmail.com>
	<14296B7F-B858-480F-A3C4-094E23E08291@twistedmatrix.com>
Message-ID: <AANLkTimNL6h5eX5SbHow8hf3b6v1kMrOff8SJw32oBM8@mail.gmail.com>

Thanks a lot for reply,

however turns out that most SMPP appliances behave in a way rather
different than your average mailbox/IM sessions. So I will in fact
need to reinvent a wheel... This, however, has little to do with
actual SMPProtocol class. Bridging it with t.words or even t.mail
would cover only a tiny fraction of use cases (most of which are in
fact routing, throttling and charging for the messages sent in bulk,
and sending messages in bulk).

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?



From f.schneider at de-bleek.demon.nl  Tue Jul  6 06:51:52 2010
From: f.schneider at de-bleek.demon.nl (Schneider)
Date: Tue, 6 Jul 2010 14:51:52 +0200
Subject: [Twisted-Python] Newbie: using cred  strcred.AuthOptionMixin
In-Reply-To: <20100706122917.2549.408974701.divmod.xquotient.34@localhost.localdomain>
References: <000a01cb1cfe$be1cf1f0$3a56d5d0$@schneider@de-bleek.demon.nl>
	<20100706122917.2549.408974701.divmod.xquotient.34@localhost.localdomain>
Message-ID: <001001cb1d0a$01c1fd00$0545f700$@schneider@de-bleek.demon.nl>

Thanks for the reply.

For a newbie, that's a little too much. I'll stick to a simple
username/password file checking for the moment.

Frans




From jml at mumak.net  Tue Jul  6 07:09:47 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 6 Jul 2010 14:09:47 +0100
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
Message-ID: <AANLkTin9_MB2yPR9qBd1zOyuiLSueqd44hCR9Zu0gMKN@mail.gmail.com>

On Tue, Jul 6, 2010 at 4:08 AM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Jul 4, 2010, at 12:13 PM, Jonathan Lange wrote:
...
>> I've started this thread for any discussions about the way the release
>> was done and for the next release.
>
> I am generally very pleased with the way it went.  It appears to have been
> the smoothest release thus far.
>

It's certainly the smoothest I've done.

I can't stress how amazingly helpful it is to have a detailed process
doc, and how important it is to see any glitches in the release as
bugs in the document.

>> Note that the Ubuntu feature freeze is August 12th, so we can expect
>> 10.1 to be the release that goes into Ubuntu 10.10.
>
> I would *like* to accelerate the schedule for this release if we can get
> certain important features in which missed the last release (documentation
> for endpoints, documentation for cancellation, endpoint string parsing,
> endpoint plugins, and some SSL issues that Jean-Paul and I discovered while
> working on these).  It would be nice to establish the precedent that
> important features cause releases to happen *faster*, rather than causing
> them to be delayed.

I would like the same.

I was going to say that maybe those things are worth doing a 10.1.1
release for, but then I thought better. Let's keep point releases for
critical defects.

> But I certainly don't want to make any promises about getting it done by a
> particular advance date.  I thought that you handled the delays and setbacks
> in this release fairly well - I can't see myself doing it substantially
> better - and so trying to accelerate the schedule may just result in the
> release actually occurring on time.
>

Making promises about time is difficult for unpaid volunteers. :)

>> As part of this release, there have been many improvements to the
>> release process document, see
>> http://twistedmatrix.com/trac/wiki/ReleaseProcess. I would greatly
>> appreciate it if the document could be reviewed for clarity and
>> correctness.
>
> I will obviously be doing this in more detail as I move forward with the
> next release, but the recent edits are a big improvement to the clarity and
> completeness of the document.

Thanks.

It's basically only possible to test the document by doing a release.
My brain turns to cheese whenever I try to review it while not
actually doing something.

>
>> The biggest blockers to a swift release, from my perspective, were the
>> following:
...
>
>  * delaying to wait for feedback on the release candidate
>
> This seems to me like a necessary delay.  I wish that we could motivate the
> readers of this mailing list to be a bit more responsive, but I don't see
> how we could have been much louder about it :).
>

I think I should have announced the closing date for testing (as in,
if it's not in by June Xth, we aren't going to do know about it).

>  * waiting for the review for the release ticket
>  * waiting for someone else to solve the buildbot issues for Windows
>
> It looks like those issues were a one-time thing, at least.
>

The delay on waiting for the ticket to be reviewed happened last time also.

I don't really have any ideas as to what to do about it, but I'd like
to avoid the experience of sitting around for hours killing time at my
computer on a weekend waiting for a review that may never come.

jml



From screwtape at froup.com  Tue Jul  6 07:39:26 2010
From: screwtape at froup.com (Tim Allen)
Date: Tue, 6 Jul 2010 23:39:26 +1000
Subject: [Twisted-Python] 10.1 release follow-up
In-Reply-To: <AANLkTin9_MB2yPR9qBd1zOyuiLSueqd44hCR9Zu0gMKN@mail.gmail.com>
References: <AANLkTiknnb8OJ7Y952LauXqnqbjE4SlkPd61AUPEXmQw@mail.gmail.com>
	<E4CF8C79-FFD7-4684-9F7A-FEFCE76A884F@twistedmatrix.com>
	<AANLkTin9_MB2yPR9qBd1zOyuiLSueqd44hCR9Zu0gMKN@mail.gmail.com>
Message-ID: <20100706133926.GC15744@boombah.thristian.org>

On Tue, Jul 06, 2010 at 02:09:47PM +0100, Jonathan Lange wrote:
> The delay on waiting for the ticket to be reviewed happened last time also.
> 
> I don't really have any ideas as to what to do about it, but I'd like
> to avoid the experience of sitting around for hours killing time at my
> computer on a weekend waiting for a review that may never come.

This might be an argument for always having two people go through the
release process together: firstly, so that one can write the ticket and
the other can review it, and secondly to keep the release process Bus
Factor above 1:

    http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/python/_release.py#L29



From jml at mumak.net  Tue Jul  6 12:16:31 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 6 Jul 2010 20:16:31 +0200
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
Message-ID: <AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>

On Fri, Mar 5, 2010 at 7:33 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
...
> As far as I know, there aren't any tickets in Trac yet.  I was planning on
> making some (or asking others to do so) once a "master ticket" and a branch
> are created.
>

I have filed such a master ticket here:
  http://twistedmatrix.com/trac/ticket/4553

And created a milestone here:
  http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx

You should probably add any new tickets you file to the milestone.

Personally, I'd love to see the transition happen.

jml



From jml at mumak.net  Tue Jul  6 12:27:45 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 6 Jul 2010 20:27:45 +0200
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
Message-ID: <AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>

On Tue, Jul 6, 2010 at 8:16 PM, Jonathan Lange <jml at mumak.net> wrote:
> On Fri, Mar 5, 2010 at 7:33 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
> ...
>> As far as I know, there aren't any tickets in Trac yet.  I was planning on
>> making some (or asking others to do so) once a "master ticket" and a branch
>> are created.
>>
>
> I have filed such a master ticket here:
>  http://twistedmatrix.com/trac/ticket/4553
>
> And created a milestone here:
>  http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx
>
> You should probably add any new tickets you file to the milestone.
>

Hey and look a ticket was already filed (#4500) and
http://twistedsphinx.funsize.net/transition_plan.html is out of date
:)

jml



From m.beyer5 at gmx.de  Tue Jul  6 12:29:56 2010
From: m.beyer5 at gmx.de (m.beyer5 at gmx.de)
Date: Tue, 06 Jul 2010 20:29:56 +0200
Subject: [Twisted-Python] twisted 10.1 ppa
Message-ID: <20100706182956.151340@gmx.net>

Hi,

I'm anxious to try out the new 10.1 release.
Please push it to the ppa to make it easily accessable. 

Thanks :)

Marcus
-- 
GMX DSL: Internet-, Telefon- und Handy-Flat ab 19,99 EUR/mtl.  
Bis zu 150 EUR Startguthaben inklusive! http://portal.gmx.net/de/go/dsl

-- 
GMX DSL: Internet-, Telefon- und Handy-Flat ab 19,99 EUR/mtl.  
Bis zu 150 EUR Startguthaben inklusive! http://portal.gmx.net/de/go/dsl



From kevin.horn at gmail.com  Tue Jul  6 14:09:49 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 6 Jul 2010 15:09:49 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
Message-ID: <AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>

On Tue, Jul 6, 2010 at 1:27 PM, Jonathan Lange <jml at mumak.net> wrote:

> On Tue, Jul 6, 2010 at 8:16 PM, Jonathan Lange <jml at mumak.net> wrote:
> > On Fri, Mar 5, 2010 at 7:33 PM, Kevin Horn <kevin.horn at gmail.com> wrote:
> > ...
> >> As far as I know, there aren't any tickets in Trac yet.  I was planning
> on
> >> making some (or asking others to do so) once a "master ticket" and a
> branch
> >> are created.
> >>
> >
> > I have filed such a master ticket here:
> >  http://twistedmatrix.com/trac/ticket/4553
> >
> > And created a milestone here:
> >  http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx
> >
> > You should probably add any new tickets you file to the milestone.
> >
>
> Hey and look a ticket was already filed (#4500) and
> http://twistedsphinx.funsize.net/transition_plan.html is out of date
> :)
>
> jml
>
>
>
Doh! Sorry about that... I didn't realize anyone was actually looking at it.
:)

So now that Jonathan has cut the 10.1 release, my plan is to start the
conversion process pretty soon (meaning sometime between tonight and
Wednesday).

Once I have the branch created and the basic conversion completed it would
be really great to have some help with the (yet to be created) "chunk
tickets".

We're getting really close...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100706/98f7b881/attachment-0001.html>

From ddwiggins at advpubtech.com  Wed Jul  7 17:44:32 2010
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 07 Jul 2010 16:44:32 -0700
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com>
References: <i0bfj2$iem$1@dough.gmane.org>	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com>
	<i0u0nh$fki$1@dough.gmane.org>
	<AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com>
Message-ID: <i133h0$rrv$1@dough.gmane.org>

  On 7/5/2010 10:53 PM, Hugh Emberson wrote:
> I got the order wrong. On further reading of the code, the COM object
> is created in response to a message from the Twisted thread, so at
> that point the event loop has iterated at least once.
>
> In my case the COM object is wrapped in a C++ wrapper that I don't
> have the source for, so I don't know exactly what happens in there.
> That C++ wrapper is then wrapped in a very thin python extension
> module which doesn't do anything interesting.

OK.  In my case, the "wrapper" and Python extension is Hammond's 
win32com Dispatch.

Question: to your knowledge, would it work to run the message pumping 
loop in a different thread from the one that creates and calls the COM 
object?  I think this would simplify things a bit.

-- Don Dwiggins Advanced Publishing Technology






From hugh.emberson at gmail.com  Wed Jul  7 21:53:32 2010
From: hugh.emberson at gmail.com (Hugh Emberson)
Date: Thu, 8 Jul 2010 13:53:32 +1000
Subject: [Twisted-Python] Creating a COM object in a thread
In-Reply-To: <i133h0$rrv$1@dough.gmane.org>
References: <i0bfj2$iem$1@dough.gmane.org>
	<AANLkTimFQTnhonipDS99jC_hZbwqmKRC0l7G28L4pxvc@mail.gmail.com> 
	<i0u0nh$fki$1@dough.gmane.org>
	<AANLkTikLzcbyMS66aUscCe7cBeEtIBItnpjvjJD9AOzo@mail.gmail.com> 
	<i133h0$rrv$1@dough.gmane.org>
Message-ID: <AANLkTilTOVPrLeEepGPVtKR551yNSqmmNLVuWBslisDP@mail.gmail.com>

On Thu, Jul 8, 2010 at 9:44 AM, Don Dwiggins <ddwiggins at advpubtech.com> wrote:
>  On 7/5/2010 10:53 PM, Hugh Emberson wrote:
>> I got the order wrong. On further reading of the code, the COM object
>> is created in response to a message from the Twisted thread, so at
>> that point the event loop has iterated at least once.
>>
>> In my case the COM object is wrapped in a C++ wrapper that I don't
>> have the source for, so I don't know exactly what happens in there.
>> That C++ wrapper is then wrapped in a very thin python extension
>> module which doesn't do anything interesting.
>
> OK.  In my case, the "wrapper" and Python extension is Hammond's
> win32com Dispatch.
>
> Question: to your knowledge, would it work to run the message pumping
> loop in a different thread from the one that creates and calls the COM
> object?  I think this would simplify things a bit.

You'd have to use a multi-threaded apartment model.  See the
'Processes, Threads, and Apartments' article in MSDN (
http://msdn.microsoft.com/en-us/library/ms693344%28v=VS.85%29.aspx ).
I guess it should work, but I've never tried it.  Please report back
if you try it.

Hugh



From jeandaniel.browne at gmail.com  Thu Jul  8 15:46:41 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Thu, 8 Jul 2010 23:46:41 +0200
Subject: [Twisted-Python] conceptually,
	why a deferred can't be used more than once?
Message-ID: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>

Dear list,

Concerning the concept of the deferred, why is it more useful to go
with a deferred which gets consumed and can only be fired once?

In my small script I realize I need to take special care that the
deferred has not been used, and that I must recreate explicitly a
deferred for each network request. In a parallel world someone might
have come up with a deferred concept which happily fires the callback
as many times as there data coming back from the server. Is it a dumb
idea?

Could the deferred design be part of the solution to the network
problem of two requests passing each other as each ends is not yet
aware that the other has just sent a request? Buggy networks nodes
would expect a response but get a request instead and go crazy...

Thanks for your help,



From terry at jon.es  Thu Jul  8 16:13:47 2010
From: terry at jon.es (Terry Jones)
Date: Fri, 9 Jul 2010 00:13:47 +0200
Subject: [Twisted-Python] conceptually,
 why a deferred can't be used more than once?
In-Reply-To: Your message at 23:46:41 on Thursday, 8 July 2010
References: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>
Message-ID: <19510.19867.604061.151177@jon.es>

Hi Jean

> Concerning the concept of the deferred, why is it more useful to go with
> a deferred which gets consumed and can only be fired once?

I can't speak for the Twisted devs, but my #1 reason would be that it's
just simpler that way (and Deferreds are already complex enough).

> In my small script I realize I need to take special care that the
> deferred has not been used, and that I must recreate explicitly a
> deferred for each network request. In a parallel world someone might have
> come up with a deferred concept which happily fires the callback as many
> times as there data coming back from the server. Is it a dumb idea?

No, I don't think so. I've done some thinking and playing along these
lines.  At one point I thought about a Deferred class that could be called
multiple times, but decided the code changes were too ugly.

Recently I did some experiments in which Deferreds could be re-used.  The
first observation was that the time taken to create Deferreds is really
negligible. That is, just re-using an already allocated object doesn't save
you much.

More interestingly, the adding of call/errback functions to a Deferred does
take significant time. I don't have the details of what I did handy, but
from memory I managed to get about a 2x speedup in a simple test when
Deferreds were having about 5 call/errbacks added to them.

I wrote a class that allowed you to reset a Deferred, leaving the
call/errback chain on it (snipping off other things that might have been
added to the chain), and there was also a DeferredPool class that could
hand you back an already prepared Deferred (or make you a new one if the
pool was empty). I.e., if you're in a situation where you're repeatedly
using Deferreds and putting exactly the same call/errbacks on them, you
might get a win by resetting and reusing already fired Deferred. On the
other hand, you'd also be a social pariah :-)

If anyone wants more details, I'm happy to dig up my experimental code. It
was fun and it seemed to work just fine.

> Could the deferred design be part of the solution to the network problem
> of two requests passing each other as each ends is not yet aware that the
> other has just sent a request? Buggy networks nodes would expect a
> response but get a request instead and go crazy...

OK, I'll leave that one for someone else...

T



From andrew at bemusement.org  Thu Jul  8 23:06:13 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Fri, 9 Jul 2010 15:06:13 +1000
Subject: [Twisted-Python] conceptually,
 why a deferred can't be used more than once?
In-Reply-To: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>
References: <AANLkTilxenOIqEyhKusZkb3T0SPU-j5VBdvnV-0w-YrN@mail.gmail.com>
Message-ID: <20100709050613.GL14856@steerpike.home.puzzling.org>

Jean Daniel wrote:
> Dear list,
> 
> Concerning the concept of the deferred, why is it more useful to go
> with a deferred which gets consumed and can only be fired once?

Because they are basically a way to provide asynchronous function calls.  In
plain Python a function call only returns (or raises) once.  Deferreds are no
different.

If you want a callback that can be invoked multiple times... well, just pass a
function to the thing generating callbacks.  For instance, Protocol objects have
a dataReceived method that may be called many times.

-Andrew.



From esteve at sindominio.net  Fri Jul  9 14:22:55 2010
From: esteve at sindominio.net (Esteve Fernandez)
Date: Fri, 9 Jul 2010 22:22:55 +0200 (CEST)
Subject: [Twisted-Python] twisted 10.1 ppa
In-Reply-To: <20100706182956.151340@gmx.net>
References: <20100706182956.151340@gmx.net>
Message-ID: <3b1f6738ff76e5d10d65e6a48cff7236.squirrel@webmail.sindominio.net>

Hi

sorry for the late response, I've been dealing with lots of work lately.

> I'm anxious to try out the new 10.1 release.
> Please push it to the ppa to make it easily accessable.

Ok, will do :-)

Cheers.




From jasonjwwilliams at gmail.com  Fri Jul  9 16:38:11 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 9 Jul 2010 16:38:11 -0600
Subject: [Twisted-Python] Congrats to ITA
Message-ID: <AANLkTinD8TBR4SUP76wkudTc2b-1up0MegPt3kpRP-f3@mail.gmail.com>

Just wanted to drop a note of congrats to ITA on their acquisition by
Google. It'll be great to see Twisted in play at the Googleplex for
travel.

-J



From clemesha at gmail.com  Fri Jul  9 16:52:18 2010
From: clemesha at gmail.com (Alex Clemesha)
Date: Fri, 9 Jul 2010 15:52:18 -0700
Subject: [Twisted-Python] Congrats to ITA
In-Reply-To: <AANLkTinD8TBR4SUP76wkudTc2b-1up0MegPt3kpRP-f3@mail.gmail.com>
References: <AANLkTinD8TBR4SUP76wkudTc2b-1up0MegPt3kpRP-f3@mail.gmail.com>
Message-ID: <AANLkTim8wpQm4AGtQTeK1KK3W37z1pjwGPiqbBe7lMEK@mail.gmail.com>

On Fri, Jul 9, 2010 at 3:38 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Just wanted to drop a note of congrats to ITA on their acquisition by
> Google. It'll be great to see Twisted in play at the Googleplex for
> travel.
>
Yeah, that is very cool.  Here's some discussion of ITA's Twisted usage:
http://itasoftware.com/careers/l_e_t_python.html
but can anyone provide more details than that about how they are using
Twisted?

-Alex



>
> -J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100709/ecdb6c88/attachment.html>

From exarkun at twistedmatrix.com  Fri Jul  9 20:58:40 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 10 Jul 2010 02:58:40 -0000
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
Message-ID: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>

On 6 Jul, 08:09 pm, kevin.horn at gmail.com wrote:
>
>So now that Jonathan has cut the 10.1 release, my plan is to start the
>conversion process pretty soon (meaning sometime between tonight and
>Wednesday).
>
>Once I have the branch created and the basic conversion completed it 
>would
>be really great to have some help with the (yet to be created) "chunk
>tickets".
>
>We're getting really close...

At last I've got a buildbot set up generating the sphinx docs.  The 
build results can be seen here:

  http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/

(or with a different revision number for different revisions; the 
containing directory is browseable).

It would be great if everyone could go look around and report any 
problems you see.

Here's one from me.  On <http://buildbot.twistedmatrix.com/builds 
/sphinx-html-15615/projects/core/howto/pb-intro.html>, there are a bunch 
of API links which don't appear to have been rendered properly.

Jean-Paul



From glyph at twistedmatrix.com  Fri Jul  9 21:52:53 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 9 Jul 2010 23:52:53 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
Message-ID: <3245568B-1E77-45E2-95A7-B3690D6BE066@twistedmatrix.com>


On Jul 9, 2010, at 10:58 PM, exarkun at twistedmatrix.com wrote:

> At last I've got a buildbot set up generating the sphinx docs.  The 
> build results can be seen here:

Thanks for setting this up.

In the table of contents, both the "Core" and "Conch" outlines have a section called "Twisted Documentation".  I assume this is a placeholder for a directory that Lore didn't have a title for?

It strikes me as somewhat ironic that the table on <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/lore/howto/lore.html> came out rather nicely, though.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100709/61c7631f/attachment.html>

From jaepyoung.kim at gmail.com  Fri Jul  9 23:40:11 2010
From: jaepyoung.kim at gmail.com (Jaepyoung Kim)
Date: Fri, 9 Jul 2010 22:40:11 -0700
Subject: [Twisted-Python] Uploading multiple files using ftpclient in Twisted
Message-ID: <AANLkTikscNy2IcWqm1hhv1-JG53xCGdj4bIJkbiJNAJi@mail.gmail.com>

Dear twisted-python expert,

I am build engineer and I need to upload binary to ftp server.
Binary files are about 30 and each file size is about 30M.

The current script is uploading using ftplib and it takes time about 1 hour.
I want to change this script to use twisted asynchronous function.
I thought if I use asynchronous function in twisted like following,
then file uploading will be executed in parallel.
But this was executed sequentially. Uploading second file starts afer
completing first file upload.
Could you check what was wrong in my source code? Or Am I wrong in
understanding asynchronous function?


        for file in fileList:
    	ftpClient.cwd("/tmp").addCallbacks(uploadFiles, fail,
callbackArgs=(file,ftpClient))

Thanks,
Jaepyoung



Full source code:

def filesucess(ab):
    print ab

def uploadFiles(result, file,ftpClient):
    d1,d2=ftpClient.storeFile('/tmp/'+file)
    d1.addCallback(cbStore, file).addErrback(fileTransferFail)
    d1.addCallback(filesucess)
    return d2



def fileTransferFail(failure):
    failure.printTraceback()
    reactor.stop()


def showBuffer(result, bufferProtocol):
    print 'Got data:'
    print bufferProtocol.buffer.getvalue()


class Options(usage.Options):
    optParameters = [['host', 'h', 'localhost'],
                     ['port', 'p', 21],
                     ['username', 'u', 'user'],
                     ['password', None, 'password'],
                     ['passive', None, 0],
                     ['debug', 'd', 1],
                    ]
def cbStore(consumer, filename):
    fs = FileSender()
    print filename+" cbstror"
    d = fs.beginFileTransfer(open(filename, 'r'), consumer)
    d.addCallback(lambda _: consumer.finish()).addErrback(fileTransferFail)
    return d

def run():
    # Get config
    config = Options()
    config.parseOptions()
    config.opts['port'] = int(config.opts['port'])
    config.opts['passive'] = int(config.opts['passive'])
    config.opts['debug'] = int(config.opts['debug'])

    # Create the client
    FTPClient.debug = config.opts['debug']
    creator = ClientCreator(reactor, FTPClient, config.opts['username'],
                            config.opts['password'],
passive=config.opts['passive'])
    print config.opts['password']
    creator.connectTCP(config.opts['host'],
config.opts['port'],timeout=10).addCallback(connectionMade).addErrback(connectionFailed)
    reactor.run()


def connectionFailed(f):
    print "Connection Failed:", f
    reactor.stop()

def connectionMade(ftpClient):
    # Get the current working directory
    ftpClient.pwd().addCallbacks(success, fail)
    fileList = os.listdir('./temp')
    for file in fileList:
    	ftpClient.cwd("/tmp").addCallbacks(uploadFiles, fail,
callbackArgs=(file,ftpClient))
    print "connectionmade"



From screwtape at froup.com  Sat Jul 10 01:40:59 2010
From: screwtape at froup.com (Tim Allen)
Date: Sat, 10 Jul 2010 17:40:59 +1000
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
Message-ID: <20100710074059.GA1816@boombah.thristian.org>

On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.com wrote:
> At last I've got a buildbot set up generating the sphinx docs.  The 
> build results can be seen here:
> 
>   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
> 
> (or with a different revision number for different revisions; the 
> containing directory is browseable).
> 
> It would be great if everyone could go look around and report any 
> problems you see.

    - In the Documentation Table Of Contents page, "Historical
      Documents" is listed between "Twisted Core" and "Twisted Lore"
      (presumably because of alphabetical order) but this seems
      a strange place for it. Could it be moved to the bottom, or an
      appendix, or something?
    - The bottom of every page has a "Download in other formats: Plain
      Text" link that doesn't work; presumably scooped up from the Trac
      templates. It should be removed (the Sphinx "Show Source" link is
      in the right-hand sidebar anyway).
    - When the breadcrumb navigation at the top of the page gets too
      long[1], it wraps to a second line, which looks kind of odd
      because the nice gradient background image loops. Changing the CSS
      background colour to be the same as the bottom of the gradient
      image would probably help.
    - Firefox's Error Console reports:
	- a bogus "%" on line 56 of twistedtrac.css,
	- bogus // comments on lines 559, 577, 588, 598 of trac.css (CSS
	  only allows /* winged comments */)
    - Chromium's error console reports:
	- A 404 error for "/trac/chrome/common/js/jquery.js"
	- A 404 error for "/trac/chrome/common/js/trac.js"
	- A 404 error for "/trac/chrome/common/js/search.js"
	- A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
    - The Twisted.Conch tutorial[1] has a number of things surrounded
      with double-backticks like "``Deferred``" or
      "``ClientTransport``". I'm not sure if that's deliberate or if
      it's markup gone horribly wrong.
    - On the same page, the text ":api:`
      twisted.internet.interface.Transport
      < twisted.internet.interface.Transport>`" appears, which also
      looks wrong.
    - The Conch code examples (as linked from the code examples page[2])
      are sent with a Python mime-type (which Firefox tries to download)
      while the .tac files are sent as text/html; this may be an
      artifact of the docs being hosted on the buildbot machine rather
      than Sphinx, but I think it would be nice if by default they were
      displayed in the browser, syntax-highlighted, with an option to
      download the original files (much like Trac does).
    - The Twisted Split FAQ[3] has more visible markup:
      "twisted.protocols:superscript::ref:`[1]
      <core-upgrades-2.0-split-protocols> `". The footnote target is
      kind of messed up, too.
    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
      still named twisted.*subproject*?", but it's not obvious whether
      the author was trying to use italics (in which case it's
      a lore2sphinx bug) or globbing (in which case it's not).
    - The Twisted Zope Interfaces FAQ[4] has inline Python source
      examples that don't appear to be marked up properly (although this
      is possibly a problem with the original Lore source). The answer
      to question "How can I update my own code?" is one example.
    - The Banana Protocol Specifications[5], under the heading
      "Examples" mentions "the type bytes are marked in bold" but
      actually they're surrounded by double-asterisks.
    - The Twisted Coding Standard[6], mentions "the complete test
      suite in trunk at HEAD" - and "trunk at HEAD" is converted into
      a mailto: link.
    - Links followed by punctuation seem to leave a space between the
      link text and the punctuation. See "test-driven ." and "Test
      Standard ." in the Twisted Coding Standard[6], but I've observed
      the same problem on multiple pages.
    - The Twisted Coding Standard[6] mentions "If you modify, or write
      a new, HOWTO, please read the Lore documentation to learn how to
      format the docs"; if there's not already a follow-up ticket for
      the lore-sphinx conversion titled "Remove references to Lore from
      Twisted's non-Lore-related documentation", there should be, and
      this should be in it.
    - The Twisted Coding Standard[6], under the heading "Modules" says
      "Use this template:" and then
      "../listings/new_module_template.py".. and *then* includes the
      content of said template inline. Presumably it should either link
      to it or include it, but not both.
    - The HTML Documentation Standard for Twisted[7] has more visible
      markup: in the list of allowable markup, most tags are rendered
      properly except for "``<tr>``".
    - It seems that the HTML Documentation Standard for Twisted[7] is
      actually "how to write Lore documentation", despite the name.
      Maybe this file should be scheduled for the post-transition purge,
      or at least moved to the Lore documentation.
    - Working from Twisted's Subversion Repository[8] has visible markup
      that looks like an attempt to link "the Subversion homepage" under
      the heading "Checkout".
    - Under the heading "Alternate tree names", the document uses
      RIGHT DOUBLE QUOTATION MARK instead of LEFT DOUBLE QUOTATION MARK
      in 'directory other than”Twisted” .' Looks like a problem in the
      original markup. Also note the space between the LEFT DOUBLE
      QUOTATION MARK and the punctuation.
    - The same document has more broken links under the "Combinator"
      heading.
    - The same document has broken markup under "Running tests":
      "``twisted/protocols/imap4.py``" and later
      "``twisted.mail.test.test_imap``".
    - The same document has broken markup under "Building docs":
      "``doc/development/policy/svn-dev.xhtml`` ," (also trailing space
      before punctuation) and
      "``doc/development/policy/svn-dev.html`` :" (again).
    - The same document has a broken link under "Committing and
      Post-commit Hooks", attempting to link the text
      "trac-post-commit-hook".
    - The same document has broken markup under "Emacs":
      "``emacs/twisted-dev.el``".
    - The same document has a broken link under "Building Debian
      packages", attempting to link th text "stdeb".

That's probably enough feedback to be getting on with; most of the
problems appear to be from normalising "\n" in Lore docs to "" instead
of " ", and also from adding whitespace after things. It is generally
looking pretty great, though!

Some extra thoughts:
    - The ReviewingDocumentation wiki page has a section called "Editing
      man pages" that describes how to turn the nicely-formatted
      manpages into Lore input files. Would it be possible to do that as
      part of the lore2sphinx run, have the manpages included in the
      Sphinx documentation, and from then on generate the manpages from
      the .rst files instead of the other way around?

[1]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    conch/howto/conch_client.html>
[2]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    conch/examples/index.html>
[3]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/upgrades/2.0/split.html>
[4]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/upgrades/2.0/components.html>
[5]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/specifications/banana.html>
[6]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/development/policy/coding-standard.html>
[7]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/development/policy/doc-standard.html>
[8]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
    core/development/policy/svn-dev.html>



From kevin.horn at gmail.com  Sat Jul 10 13:34:30 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 14:34:30 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
Message-ID: <AANLkTiljOwhA6MQ1375cEf22IB7vBI2syWmS12opQDR0@mail.gmail.com>

On Fri, Jul 9, 2010 at 9:58 PM, <exarkun at twistedmatrix.com> wrote:

> On 6 Jul, 08:09 pm, kevin.horn at gmail.com wrote:
> >
> >So now that Jonathan has cut the 10.1 release, my plan is to start the
> >conversion process pretty soon (meaning sometime between tonight and
> >Wednesday).
> >
> >Once I have the branch created and the basic conversion completed it
> >would
> >be really great to have some help with the (yet to be created) "chunk
> >tickets".
> >
> >We're getting really close...
>
> At last I've got a buildbot set up generating the sphinx docs.  The
> build results can be seen here:
>
>  http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
>
> (or with a different revision number for different revisions; the
> containing directory is browseable).
>

cool, good work.


>
> It would be great if everyone could go look around and report any
> problems you see.
>
> Here's one from me.  On <http://buildbot.twistedmatrix.com/builds
> /sphinx-html-15615/projects/core/howto/pb-intro.html>, there are a bunch
> of API links which don't appear to have been rendered properly.
>
>
Ah, welcome to the joys of "nested inline markup", which xml/xhtml does fine
and RestructuredText doesn't.

I expect this issue and extra or missing space characters are the two main
things which will have to be fixed manually.


Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/1730878e/attachment.html>

From kevin.horn at gmail.com  Sat Jul 10 13:38:38 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 14:38:38 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <3245568B-1E77-45E2-95A7-B3690D6BE066@twistedmatrix.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<3245568B-1E77-45E2-95A7-B3690D6BE066@twistedmatrix.com>
Message-ID: <AANLkTimhRIfuU3a4kwpbCWHtJ9Q_a0aR8RIfJPkOgYgh@mail.gmail.com>

On Fri, Jul 9, 2010 at 10:52 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jul 9, 2010, at 10:58 PM, exarkun at twistedmatrix.com wrote:
>
> At last I've got a buildbot set up generating the sphinx docs.  The
> build results can be seen here:
>
>
> Thanks for setting this up.
>
> In the table of contents, both the "Core" and "Conch" outlines have a
> section called "Twisted Documentation".  I assume this is a placeholder for
> a directory that Lore didn't have a title for?
>

Nope, that's what the titles of those documents are in the source
documents.  I presume the Conch one is supposed to say something else.


>
> It strikes me as somewhat ironic that the table on <
> http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/lore/howto/lore.html>
> came out rather nicely, though.
>
>
>
Yes, I spent probably too much time on that table, but it sure was handy.  I
spent a lot of time during this process referring to it, and it was much
nicer on the eyes that the old one :).

I had originally intended to just convert the tables by hand (I think
there's only two), but I found some code on the net that did almost what I
wanted and adapted it, so it actually wasn't too onerous.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/9531b0d7/attachment.html>

From kevin.horn at gmail.com  Sat Jul 10 14:17:03 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 15:17:03 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100710074059.GA1816@boombah.thristian.org>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
Message-ID: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>

On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:

> On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.com wrote:
> > At last I've got a buildbot set up generating the sphinx docs.  The
> > build results can be seen here:
> >
> >   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
> >
> > (or with a different revision number for different revisions; the
> > containing directory is browseable).
> >
> > It would be great if everyone could go look around and report any
> > problems you see.
>
>     - In the Documentation Table Of Contents page, "Historical
>      Documents" is listed between "Twisted Core" and "Twisted Lore"
>      (presumably because of alphabetical order) but this seems
>      a strange place for it. Could it be moved to the bottom, or an
>      appendix, or something?
>

They're in alphabetical order.  The TOC page is generated dynamically by
looking at the file structure of the docs and that's the order file-globbing
lists them in.  We can fix this manually post-conversion.


>    - The bottom of every page has a "Download in other formats: Plain
>      Text" link that doesn't work; presumably scooped up from the Trac
>      templates. It should be removed (the Sphinx "Show Source" link is
>      in the right-hand sidebar anyway).
>

Yeah, this is a flaw in the trac theme.  Looks like I forgot to remove it.


>    - When the breadcrumb navigation at the top of the page gets too
>      long[1], it wraps to a second line, which looks kind of odd
>      because the nice gradient background image loops. Changing the CSS
>      background colour to be the same as the bottom of the gradient
>      image would probably help.
>    - Firefox's Error Console reports:
>        - a bogus "%" on line 56 of twistedtrac.css,
>        - bogus // comments on lines 559, 577, 588, 598 of trac.css (CSS
>          only allows /* winged comments */)
>    - Chromium's error console reports:
>        - A 404 error for "/trac/chrome/common/js/jquery.js"
>        - A 404 error for "/trac/chrome/common/js/trac.js"
>        - A 404 error for "/trac/chrome/common/js/search.js"
>        - A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
>

Ah! This explains why the search quit working.  Not sure why these files are
missing,  Probably something to do with the custom theme.


>    - The Twisted.Conch tutorial[1] has a number of things surrounded
>      with double-backticks like "``Deferred``" or
>      "``ClientTransport``". I'm not sure if that's deliberate or if
>      it's markup gone horribly wrong.
>

This is probably due to missing spaces before/after the markup in the rst
source.  One of those things that will need to be fixed manually.  I spent a
lot of time trying to fix this in lore2sphinx and when you fix it in one
place, it breaks somewhere else.  Right now the automated conversion is
about as good as it is likely to get with a sane amount of effort.


>    - On the same page, the text ":api:`
>      twisted.internet.interface.Transport
>      < twisted.internet.interface.Transport>`" appears, which also
>      looks wrong.
>

DItto.


>    - The Conch code examples (as linked from the code examples page[2])
>      are sent with a Python mime-type (which Firefox tries to download)
>      while the .tac files are sent as text/html; this may be an
>      artifact of the docs being hosted on the buildbot machine rather
>      than Sphinx, but I think it would be nice if by default they were
>      displayed in the browser, syntax-highlighted, with an option to
>      download the original files (much like Trac does).
>

This is a web server configuration thing.  The files are actually .py and
.tac files (and probably need to remain so, if we ever want to get automated
example code tests going).

Maybe we can do some web server magic to get them nicely displayed in the
browser, but I see that as a secondary issue for the moment.  Anyone should
feel free to give a shout if they disagree, though.


>    - The Twisted Split FAQ[3] has more visible markup:
>      "twisted.protocols:superscript::ref:`[1]
>      <core-upgrades-2.0-split-protocols> `". The footnote target is
>      kind of messed up, too.
>

Another spacing issue.


>    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
>      still named twisted.*subproject*?", but it's not obvious whether
>      the author was trying to use italics (in which case it's
>      a lore2sphinx bug) or globbing (in which case it's not).
>

Pretty sure it was supposed to be italics.  Spacing again.  There are ways
to make this display properly, but it'll need to be done manually.

Also, this is pretty outdated stuff...we might consider just removing some
of this.  Or perhaps moving some of it into a more obvious place.


>    - The Twisted Zope Interfaces FAQ[4] has inline Python source
>      examples that don't appear to be marked up properly (although this
>      is possibly a problem with the original Lore source). The answer
>      to question "How can I update my own code?" is one example.
>

The code bits are marked up this way because of the attributes used on the
elements in the Lore source.  We can change it easily


>    - The Banana Protocol Specifications[5], under the heading
>      "Examples" mentions "the type bytes are marked in bold" but
>      actually they're surrounded by double-asterisks.
>

Double asterisks are the markup for bold in rst.  Another spacing and/or
nested inline markup issue.


>    - The Twisted Coding Standard[6], mentions "the complete test
>      suite in trunk at HEAD" - and "trunk at HEAD" is converted into
>      a mailto: link.
>

Huh.  I guess that's Sphinx trying to be helpful.  Good catch.  That'll
definitely need fixing.


>    - Links followed by punctuation seem to leave a space between the
>      link text and the punctuation. See "test-driven ." and "Test
>      Standard ." in the Twisted Coding Standard[6], but I've observed
>      the same problem on multiple pages.
>

This is the spacing issue again, but in reverse.  It's relatively easy for
lore2sphinx to detect links and add a space at the end, so that's what it
does.  There's ways to get around this and get rid of the space by escaping
it, but it rapidly get mind-boggling, so this is another thing that will
need manual fixing.


>    - The Twisted Coding Standard[6] mentions "If you modify, or write
>      a new, HOWTO, please read the Lore documentation to learn how to
>      format the docs"; if there's not already a follow-up ticket for
>      the lore-sphinx conversion titled "Remove references to Lore from
>      Twisted's non-Lore-related documentation", there should be, and
>      this should be in it.
>

There isn't, but there will be.  See the transition plan here:
http://twistedsphinx.funsize.net/transition_plan.html


>    - The Twisted Coding Standard[6], under the heading "Modules" says
>      "Use this template:" and then
>      "../listings/new_module_template.py".. and *then* includes the
>      content of said template inline. Presumably it should either link
>      to it or include it, but not both.
>

It actually is including an external file there (i.e. the contents are not
in the rst source, but in the
"../listings/new_module_template.py" file.  What looks like a link there is
actually a sort of heading to
let the reader see where it's coming from.  I think this can probably be
made clearer with some theme/css changes.


>    - The HTML Documentation Standard for Twisted[7] has more visible
>      markup: in the list of allowable markup, most tags are rendered
>      properly except for "``<tr>``".
>

Missing space after preceding comma.  Another manual fix.


>    - It seems that the HTML Documentation Standard for Twisted[7] is
>      actually "how to write Lore documentation", despite the name.
>      Maybe this file should be scheduled for the post-transition purge,
>      or at least moved to the Lore documentation.
>

It pretty much is "how to write Lore documentation".  I think it should
probably be moved into the Lore docs, and replaced with the
(yet to be written, but again see the transition plan) planned Twisted
Documentation Guide.


>    - Working from Twisted's Subversion Repository[8] has visible markup
>      that looks like an attempt to link "the Subversion homepage" under
>      the heading "Checkout".
>

Missing preceding space again.


>    - Under the heading "Alternate tree names", the document uses
>      RIGHT DOUBLE QUOTATION MARK instead of LEFT DOUBLE QUOTATION MARK
>      in 'directory other than”Twisted” .' Looks like a problem in the
>      original markup. Also note the space between the LEFT DOUBLE
>      QUOTATION MARK and the punctuation.
>

The missing preceding space actually is what's causing the quotes to be
wrong.


>    - The same document has more broken links under the "Combinator"
>      heading.
>

Missing preceding spaces again.


>    - The same document has broken markup under "Running tests":
>      "``twisted/protocols/imap4.py``" and later
>      "``twisted.mail.test.test_imap``".
>    - The same document has broken markup under "Building docs":
>      "``doc/development/policy/svn-dev.xhtml`` ," (also trailing space
>      before punctuation) and
>      "``doc/development/policy/svn-dev.html`` :" (again).
>    - The same document has a broken link under "Committing and
>      Post-commit Hooks", attempting to link the text
>      "trac-post-commit-hook".
>    - The same document has broken markup under "Emacs":
>      "``emacs/twisted-dev.el``".
>    - The same document has a broken link under "Building Debian
>      packages", attempting to link th text "stdeb".
>

All bad spacing issues.


>
> That's probably enough feedback to be getting on with; most of the
> problems appear to be from normalising "\n" in Lore docs to "" instead
> of " ", and also from adding whitespace after things. It is generally
> looking pretty great, though!
>

Yeah, that's pretty much it.  As I said above though, if you "fix" it one
place, it breaks in another, so I tried to balance things in such a way that
the least broken markup appears in the output.

Almost all of the remaining problems will need to be fixed manually.


>
> Some extra thoughts:
>    - The ReviewingDocumentation wiki page has a section called "Editing
>      man pages" that describes how to turn the nicely-formatted
>      manpages into Lore input files. Would it be possible to do that as
>      part of the lore2sphinx run, have the manpages included in the
>      Sphinx documentation, and from then on generate the manpages from
>      the .rst files instead of the other way around?
>

Sphinx does have a man page builder now, but I don't think it existed when I
was writing lore2sphinx, so I haven't really considered this.

So you're suggesting convert the man pages to Lore format -> use lore2sphinx
to convert the resulting Lore docs to rst -> build as part of the Sphinx
process, yes?

I think this is a worthwhile idea, but I'd prefer to leave it until after
the main docs are converted (i.e. under a separate ticket).  lore2sphinx can
be used on just the man files later on if need be, though it would take a
little mucking around.


>
> [1]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    conch/howto/conch_client.html>
> [2]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    conch/examples/index.html>
> [3]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/upgrades/2.0/split.html>
> [4]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/upgrades/2.0/components.html>
> [5]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/specifications/banana.html>
> [6]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/development/policy/coding-standard.html>
> [7]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/development/policy/doc-standard.html>
> [8]: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/
>    core/development/policy/svn-dev.html>
>
>
Thanks for the fantastic (and nicely detailed) feedback, Tim!

Please take a look at the transition plan.  In a few days (maybe sooner), I
should have the base docs in a branch, and the "chunk tickets" referenced in
the transition plan created.  This is pretty much _exactly_ what I'd like to
see in those "chunk tickets".  Hopefully you haven't already burned up your
brain staring at markup issues. :) We could really use this kind of help
throughout the process.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/19c735a6/attachment.html>

From db3l.net at gmail.com  Sat Jul 10 16:56:20 2010
From: db3l.net at gmail.com (David Bolen)
Date: Sat, 10 Jul 2010 18:56:20 -0400
Subject: [Twisted-Python] Uploading multiple files using ftpclient in
	Twisted
References: <AANLkTikscNy2IcWqm1hhv1-JG53xCGdj4bIJkbiJNAJi@mail.gmail.com>
Message-ID: <m2iq4n3q0b.fsf@valheru.db3l.homeip.net>

Jaepyoung Kim <jaepyoung.kim at gmail.com> writes:

> The current script is uploading using ftplib and it takes time about 1 hour.
> I want to change this script to use twisted asynchronous function.
> I thought if I use asynchronous function in twisted like following,
> then file uploading will be executed in parallel.
> But this was executed sequentially. Uploading second file starts afer
> completing first file upload.
> Could you check what was wrong in my source code? Or Am I wrong in
> understanding asynchronous function?

I'm pretty sure you'll need separate connections to an FTP server to
achieve parallel transfers, regardless of how you write the client.
At least as long as you stick with regular get/put commands.  So while
using a twisted approach can enable you to manage those parallel
streams pretty easily, you'll need distinct connections for each
transfer and manage which file transfer is using which connection in
your code.

Essentially a store or fetch FTP operation initiates a transfer over
the dedicated data channel, so that channel is in use until the
transfer completes or is aborted.  The data on the data channel is not
encapsulated nor multiplexed in any way so you can only have a single
transfer using the data channel at once.  Passive transfers do create
new data channels, but the FTP protocol specifically says a server
needs to stop accepting connections and shut down any open connections
on old passive ports once a new passive request is received, so you're
still limited to one at a time.

Thus, your callbacks for each store operation, will only file when the
store has completed, and you'll only be able to initiate the next
store request at that point since its only then that the channel to
the server is free to transfer another file.

I believe some servers have implemented custom extensions to implement
parallel operations at a finer grained level than a file, but I don't
think they're commonly implemented in ftp libraries (nor in servers
commonly in use).

What I'd suggest, in terms of your code, is to instantiate a pool of
FTPClients to the same server, initiate transfers on them in parallel
and then as one completes, use it to pick up the next file.  You'll
need to handle the distribution of files amongst the pool of clients
yourself.

Is there any particular reason you expect this to yield an improvement
in overall time?  Unless you're transferring very large numbers of
files that are very small compared to the bandwidth*latency of your
network connection to the server (which doesn't sound like the case
here), the overhead of the protocol itself will be quite small, and
your bottleneck is either going to be the network throughput, or the
slower of the disk I/O on either end.

Neither of those bottlenecks will likely be improved by doing multiple
transfers in parallel, and in fact your total time can worsen if the
prior bottleneck was the disk I/O since you'll have competing
operations for the disks as opposed to simple sequential access.  Or
you may find that you get very marginal benefit with the expense of
much more complicated to maintain code.

You might grab an existing ftp client that supports parallel transfers
and use it to run some tests before trying to re-implement things
yourself.  There should be several options, but for example, I believe
FileZilla supports it under Windows, or lftp under Linux.

-- David




From jaepyoung.kim at gmail.com  Sat Jul 10 18:26:19 2010
From: jaepyoung.kim at gmail.com (Jaepyoung Kim)
Date: Sat, 10 Jul 2010 17:26:19 -0700
Subject: [Twisted-Python] Uploading multiple files using ftpclient in
	Twisted
In-Reply-To: <m2iq4n3q0b.fsf@valheru.db3l.homeip.net>
References: <AANLkTikscNy2IcWqm1hhv1-JG53xCGdj4bIJkbiJNAJi@mail.gmail.com>
	<m2iq4n3q0b.fsf@valheru.db3l.homeip.net>
Message-ID: <AANLkTilOG41W6-7kRmDLNo_xTFeAqsbGm4jzaYlgLTAU@mail.gmail.com>

David,

Great thanks for your perfect answer.

I think Disk IO will not be a bottleneck.
There are four servers which share disks.
I executed the scrpit in seperate servers and this reduced the upload
speed a lot.
After I saw this performance improvement, I started changing script.

I will try your suggestion..

Thanks,
Jaepyoung


On Sat, Jul 10, 2010 at 3:56 PM, David Bolen <db3l.net at gmail.com> wrote:
> Jaepyoung Kim <jaepyoung.kim at gmail.com> writes:
>
>> The current script is uploading using ftplib and it takes time about 1 hour.
>> I want to change this script to use twisted asynchronous function.
>> I thought if I use asynchronous function in twisted like following,
>> then file uploading will be executed in parallel.
>> But this was executed sequentially. Uploading second file starts afer
>> completing first file upload.
>> Could you check what was wrong in my source code? Or Am I wrong in
>> understanding asynchronous function?
>
> I'm pretty sure you'll need separate connections to an FTP server to
> achieve parallel transfers, regardless of how you write the client.
> At least as long as you stick with regular get/put commands.  So while
> using a twisted approach can enable you to manage those parallel
> streams pretty easily, you'll need distinct connections for each
> transfer and manage which file transfer is using which connection in
> your code.
>
> Essentially a store or fetch FTP operation initiates a transfer over
> the dedicated data channel, so that channel is in use until the
> transfer completes or is aborted.  The data on the data channel is not
> encapsulated nor multiplexed in any way so you can only have a single
> transfer using the data channel at once.  Passive transfers do create
> new data channels, but the FTP protocol specifically says a server
> needs to stop accepting connections and shut down any open connections
> on old passive ports once a new passive request is received, so you're
> still limited to one at a time.
>
> Thus, your callbacks for each store operation, will only file when the
> store has completed, and you'll only be able to initiate the next
> store request at that point since its only then that the channel to
> the server is free to transfer another file.
>
> I believe some servers have implemented custom extensions to implement
> parallel operations at a finer grained level than a file, but I don't
> think they're commonly implemented in ftp libraries (nor in servers
> commonly in use).
>
> What I'd suggest, in terms of your code, is to instantiate a pool of
> FTPClients to the same server, initiate transfers on them in parallel
> and then as one completes, use it to pick up the next file.  You'll
> need to handle the distribution of files amongst the pool of clients
> yourself.
>
> Is there any particular reason you expect this to yield an improvement
> in overall time?  Unless you're transferring very large numbers of
> files that are very small compared to the bandwidth*latency of your
> network connection to the server (which doesn't sound like the case
> here), the overhead of the protocol itself will be quite small, and
> your bottleneck is either going to be the network throughput, or the
> slower of the disk I/O on either end.
>
> Neither of those bottlenecks will likely be improved by doing multiple
> transfers in parallel, and in fact your total time can worsen if the
> prior bottleneck was the disk I/O since you'll have competing
> operations for the disks as opposed to simple sequential access.  Or
> you may find that you get very marginal benefit with the expense of
> much more complicated to maintain code.
>
> You might grab an existing ftp client that supports parallel transfers
> and use it to run some tests before trying to re-implement things
> yourself.  There should be several options, but for example, I believe
> FileZilla supports it under Windows, or lftp under Linux.
>
> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jaepyoung Kim
(Cellular phone) 1-310-848-7774



From screwtape at froup.com  Sat Jul 10 19:19:44 2010
From: screwtape at froup.com (Tim Allen)
Date: Sun, 11 Jul 2010 11:19:44 +1000
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
Message-ID: <20100711011944.GB1816@boombah.thristian.org>

On Sat, Jul 10, 2010 at 03:17:03PM -0500, Kevin Horn wrote:
> On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
> > That's probably enough feedback to be getting on with; most of the
> > problems appear to be from normalising "\n" in Lore docs to "" instead
> > of " ", and also from adding whitespace after things. It is generally
> > looking pretty great, though!
> 
> Yeah, that's pretty much it.  As I said above though, if you "fix" it one
> place, it breaks in another, so I tried to balance things in such a way that
> the least broken markup appears in the output.
> 
> Almost all of the remaining problems will need to be fixed manually.

It sounds like a lot of the manual fixes will involve rewriting
things so that inline markup does not appear at the end of a sentence
next to the punctuation. That seems like a recipe for awkward prose. :/

> > Some extra thoughts:
> >    - The ReviewingDocumentation wiki page has a section called "Editing
> >      man pages" that describes how to turn the nicely-formatted
> >      manpages into Lore input files. Would it be possible to do that as
> >      part of the lore2sphinx run, have the manpages included in the
> >      Sphinx documentation, and from then on generate the manpages from
> >      the .rst files instead of the other way around?
> 
> Sphinx does have a man page builder now, but I don't think it existed when I
> was writing lore2sphinx, so I haven't really considered this.
> 
> So you're suggesting convert the man pages to Lore format -> use lore2sphinx
> to convert the resulting Lore docs to rst -> build as part of the Sphinx
> process, yes?

Yes. At least for trial, there's a bunch of stuff that's *only* in the
man page and not the online docs, and a bunch of stuff that's *only* in
the online docs and not the man page (and stuff that's *only* in the
core/development/policy section of the docs, and not in the Trial
section...). Hopefully if they're all part of the same doc system, it'll
be easier to have everything in the one place and easy to find.

> I think this is a worthwhile idea, but I'd prefer to leave it until after
> the main docs are converted (i.e. under a separate ticket).  lore2sphinx can
> be used on just the man files later on if need be, though it would take a
> little mucking around.

Something to add to the "open ticket for: anything else???" section of
your transition plan, then? :)

> Thanks for the fantastic (and nicely detailed) feedback, Tim!
> 
> Please take a look at the transition plan.  In a few days (maybe sooner), I
> should have the base docs in a branch, and the "chunk tickets" referenced in
> the transition plan created.  This is pretty much _exactly_ what I'd like to
> see in those "chunk tickets".

Having done pretty much the first two of your suggested "chunks" in my
previous mail, they look to be about the right size.

> Hopefully you haven't already burned up your brain staring at markup
> issues. :) We could really use this kind of help throughout the
> process.

I'm looking forward to learning a little more about Sphinx and ReST. :)



From glyph at twistedmatrix.com  Sat Jul 10 20:21:59 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 10 Jul 2010 22:21:59 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
Message-ID: <2DB04741-C874-4EA5-85AE-A3E9DE49E8DA@twistedmatrix.com>


On Jul 10, 2010, at 4:17 PM, Kevin Horn wrote:

> On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
> On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.com wrote:
> > At last I've got a buildbot set up generating the sphinx docs.  The
> > build results can be seen here:
> >
> >   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
> >
> > (or with a different revision number for different revisions; the
> > containing directory is browseable).
> >
> > It would be great if everyone could go look around and report any
> > problems you see.
> 
>    - In the Documentation Table Of Contents page, "Historical
>      Documents" is listed between "Twisted Core" and "Twisted Lore"
>      (presumably because of alphabetical order) but this seems
>      a strange place for it. Could it be moved to the bottom, or an
>      appendix, or something?
> 
> They're in alphabetical order.  The TOC page is generated dynamically by looking at the file structure of the docs and that's the order file-globbing lists them in.  We can fix this manually post-conversion.

It's worth noting that even in this peculiar order, the existence of this document is an upgrade.  It did not previously exist.  Or, rather, it did, but I think the analogous page in the current system is this: <http://twistedmatrix.com/documents/10.1.0/>, which is certainly not as nice.

(If you were expecting to see something like <http://twistedmatrix.com/documents/10.1.0/core/howto/index.html>, that's here: <http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/core/howto/index.html>.)

>  
>    - The bottom of every page has a "Download in other formats: Plain
>      Text" link that doesn't work; presumably scooped up from the Trac
>      templates. It should be removed (the Sphinx "Show Source" link is
>      in the right-hand sidebar anyway).
> 
> Yeah, this is a flaw in the trac theme.  Looks like I forgot to remove it.

This seems like a simple fix - if you could do it quickly so we can see if fixes get propagated to the buildbot, that would be great (so we can get the build logistics out of the way for future, more complex issues).

>    - When the breadcrumb navigation at the top of the page gets too
>      long[1], it wraps to a second line, which looks kind of odd
>      because the nice gradient background image loops. Changing the CSS
>      background colour to be the same as the bottom of the gradient
>      image would probably help.

The breadcrumb names are also kinda weird, and very wordy.

<http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/conch/howto/conch_client.html> says "Twisted >> Twisted Documentation Table of Contents >> Twisted Conch Documentation >> Twisted Documentation".  This is altogether too many "Twisted"s ;-).

It should really be more like

'Twisted >> Documentation >> Conch >> "Writing a client with Twisted.Conch"'

Again: this is a new feature, so I'm not too concerned if we defer fixing this; go ahead if it's easy, but if it's hard, it's still better than the status quo, which is to say, not having any navigation at all.

>    - Chromium's error console reports:
>        - A 404 error for "/trac/chrome/common/js/jquery.js"
>        - A 404 error for "/trac/chrome/common/js/trac.js"
>        - A 404 error for "/trac/chrome/common/js/search.js"
>        - A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
> 
> Ah! This explains why the search quit working.  Not sure why these files are missing,  Probably something to do with the custom theme.

They're missing because this code is hosted on buildbot.twistedmatrix.com, not twistedmatrix.com.  It's probably most expedient to just make those links include the netloc for now.

>    - The Twisted.Conch tutorial[1] has a number of things surrounded
>      with double-backticks like "``Deferred``" or
>      "``ClientTransport``". I'm not sure if that's deliberate or if
>      it's markup gone horribly wrong.
> 
> This is probably due to missing spaces before/after the markup in the rst source.  One of those things that will need to be fixed manually.  I spent a lot of time trying to fix this in lore2sphinx and when you fix it in one place, it breaks somewhere else.  Right now the automated conversion is about as good as it is likely to get with a sane amount of effort.

Pardon my ignorance, but why not just always add the spaces when generating this type of markup?  It doesn't seem like it should be that hard; docutils claims to be able to treat ReST as structured, right?  Isn't there an API to construct some objects that will do the quoting for you?

>    - The Conch code examples (as linked from the code examples page[2])
>      are sent with a Python mime-type (which Firefox tries to download)
>      while the .tac files are sent as text/html; this may be an
>      artifact of the docs being hosted on the buildbot machine rather
>      than Sphinx, but I think it would be nice if by default they were
>      displayed in the browser, syntax-highlighted, with an option to
>      download the original files (much like Trac does).
> 
> This is a web server configuration thing.  The files are actually .py and .tac files (and probably need to remain so, if we ever want to get automated example code tests going).

> Maybe we can do some web server magic to get them nicely displayed in the browser, but I see that as a secondary issue for the moment.  Anyone should feel free to give a shout if they disagree, though.

I agree completely.

We should fix it so the .tac files are text/x-python as well, so your browser can DTRT with them; when I click on an example, I often want to download it.

Perhaps the lore markup should be adjusted to format them inline as well, though?

>    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
>      still named twisted.*subproject*?", but it's not obvious whether
>      the author was trying to use italics (in which case it's
>      a lore2sphinx bug) or globbing (in which case it's not).
> 
> Pretty sure it was supposed to be italics.  Spacing again.  There are ways to make this display properly, but it'll need to be done manually.
> 
> Also, this is pretty outdated stuff...we might consider just removing some of this.  Or perhaps moving some of it into a more obvious place.

Let's try to have those discussions in separate threads so they can be resolved individually.  I don't have an opinion at the moment and would not like to develop one in the middle of a monster thread about the whole conversion :).
 
>    - The Twisted Coding Standard[6] mentions "If you modify, or write
>      a new, HOWTO, please read the Lore documentation to learn how to
>      format the docs"; if there's not already a follow-up ticket for
>      the lore-sphinx conversion titled "Remove references to Lore from
>      Twisted's non-Lore-related documentation", there should be, and
>      this should be in it.
> 
> There isn't, but there will be.  See the transition plan here: http://twistedsphinx.funsize.net/transition_plan.html

FWIW, you should really start linking to the ticket <http://twistedmatrix.com/trac/ticket/4500>, rather than the "transition plan" page, so that folks can comment, link to other tickets, bookmark it for review when it comes up, etc.

> [...] All bad spacing issues. [...] Almost all of the remaining problems will need to be fixed manually.

It really seems like there's a lot of these.  I'm grateful to Tim for such a thorough job finding them, but I'm sure he missed some - maybe it would be worthwhile to get someone else to help make the tool be correct more often?

> Thanks for the fantastic (and nicely detailed) feedback, Tim!

+1.

(I had some thoughts about manual pages but those deserved their own message, so I'll send them separately.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/e0b6f17a/attachment.html>

From glyph at twistedmatrix.com  Sat Jul 10 20:42:49 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 10 Jul 2010 22:42:49 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
Message-ID: <E5EF629E-37A2-4692-BEA9-CE36C1B6C0B4@twistedmatrix.com>


On Jul 10, 2010, at 4:17 PM, Kevin Horn wrote:

>  Some extra thoughts:
>    - The ReviewingDocumentation wiki page has a section called "Editing
>      man pages" that describes how to turn the nicely-formatted
>      manpages into Lore input files. Would it be possible to do that as
>      part of the lore2sphinx run, have the manpages included in the
>      Sphinx documentation, and from then on generate the manpages from
>      the .rst files instead of the other way around?
> 
> Sphinx does have a man page builder now, but I don't think it existed when I was writing lore2sphinx, so I haven't really considered this.
> 
> So you're suggesting convert the man pages to Lore format -> use lore2sphinx to convert the resulting Lore docs to rst -> build as part of the Sphinx process, yes?

I think there may be some confusion here.  However, the current situation is extremely confused, so I will try to shed some light...

First, the goal: we should include the content of the man pages that you get from a UNIX command prompt, but formatted in a manner consistent with the rest of our documentation.  As Tim noted in another message:

> At least for trial, there's a bunch of stuff that's *only* in the
> man page and not the online docs, and a bunch of stuff that's *only* in
> the online docs and not the man page (and stuff that's *only* in the
> core/development/policy section of the docs, and not in the Trial
> section...). Hopefully if they're all part of the same doc system, it'll
> be easier to have everything in the one place and easy to find.


It would definitely be better to have this information more centrally located and maintained.

This is a good goal, and something we are nominally already supposed to be doing.  (And in the process of writing this up, I discovered, oops, we're not, but more on that later.)

Lore already has a plugin which attempts to convert man pages (groff input) into HTML.  To be clear: it creates lore *input* documents, which are intended to be an intermediate state; they're supposed to be re-processed in the same way as the rest of the lore input, to produce lore output.

Lest it seem like editing groff directly is a thing only an insane person would want to do (and arguably, Moshe Zadka, the author of this feature, is in fact an insane person (we love you Moshe)), he designed it this way for a good reason.  The thinking at the time among several Twisted developers was that it would be more useful to go from groff (which has a fairly limited vocabulary) to HTML (which is pretty expressive) than the other way around, since you'd have to give up if you ran into some HTML nuance that couldn't be expressed in groff.

This is slightly good news for including the manpages in the current process being tested on the buildbot, because it just means you have to add one additional command-line to generate the input, and the .rst output can be generated along the same lines as what is already being done.  At least, this is all you need to do to get HTML that probably looks reasonable.  Getting manpages out is another matter.

Unfortunately there's no 'man2rst', so we can't keep man pages around as input for sphinx.  So, in order to continue with the same workflow we've had - with groff as source - we'd have to do several undesirable things:

Produce a convoluted document conversion process where we start with groff input, go through HTML, then end up with rst, then some more, different HTML generated from that.  One goal of this process would be for the document generation pipeline to be a simple, single command (I am hoping something like 'sphinx doc' and that's it...).
Keep maintaining lore2sphinx.  This was an explicit non-goal of the migration process, given that there are going to be some manual fixes required.  (Despite my suggestion that I think we should have fewer of these, I don't think that maintaining it long-term is a good idea.)
Keep maintaining lore, since that's where the manpage conversion code lives.  Since the whole point of this process is so that we can dump lore out of the nearest airlock, this strikes me as a dealbreaker by itself.

There is, however, an 'rst2man'. <http://docutils.sourceforge.net/sandbox/manpage-writer/rst2man.txt>, which appears to be the basis for sphinx's manpage generator.  And this is where we encounter the problem where it's somewhat difficult to get manpages as output: it seems to have exactly the issues that the lore groff-input thingy was designed to prevent.  It just chokes and dies on groff-unfriendly markup, and it requires several annotations which can't be provided in the HTML input.  That means the output generated from the groff->lore->rst pipeline will be missing a bunch of stuff that rst2man wants, such as ":Manual section:" and ":Manual group:" fields.  Which, in turn, means that this task will require a distinct set of manual (no pun intended) post-processing that the rest of the documents won't.

Of course, these limitations and the extra work might be worth living with for the reasons listed at the beginning of this message.

But there's good(-ish) news.  We don't currently generate readable HTML from manpages anywhere.  So if we don't have it in the next release, it won't be a regression.

The code used by the current release process, here - <http://twistedmatrix.com/trac/wiki/ReleaseProcess#Buildhowtodocumentsforwebsite> - has a bug in it, where it generates the lore input, but then uses a dictionary to avoid processing those generated input documents.  Nobody ever sees this half-generated input, because it's only available here <http://twistedmatrix.com/documents/10.1.0/core/man/>, a secret index to which I can't find a link anywhere in the browsable bits of the lore documentation!

Anyway, I apologize for the extremely long-winded enumeration, because ultimately it's just to say I agree with this:

> I think this is a worthwhile idea, but I'd prefer to leave it until after the main docs are converted (i.e. under a separate ticket).  lore2sphinx can be used on just the man files later on if need be, though it would take a little mucking around.

I shouldn't let all the effort of composing this message go to waste though, so I'll be more specific.

We should use lore and then lore2sphinx to convert these documents to rst, in a one-shot process similar to the one we're using to convert the rest of the documentation, manually add in the information required by 'rst2man', and add 'rst2man' as part of our build process.  Of course, part of this task will be making sure that the documentation buildbot turns red if we have any rst in the desginated 'man' documents that doesn't get turned into valid groff.  And we'll have to keep lore in the tree until this is done, because otherwise it'll be a pain to get the code installed for the man-page-conversion pipeline.

Again, since we're lacking it now, I don't think this is a high-priority task.  I would be happy to have even a couple of releases with no pretense at HTML manpages, until we can do this separate conversion.

Until then, I encourage our users to please enjoy these fine links from die.net: <http://linux.die.net/man/1/twistd>, <http://linux.die.net/man/1/trial>, <http://linux.die.net/man/1/conch>, <http://linux.die.net/man/1/cftp>, <http://linux.die.net/man/1/lore>.

(Since this is so low-priority, It's too bad I just spent over an hour writing an email about it.  Oh well.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/2734a4fe/attachment.html>

From kevin.horn at gmail.com  Sat Jul 10 20:48:13 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 21:48:13 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <20100711011944.GB1816@boombah.thristian.org>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
	<20100711011944.GB1816@boombah.thristian.org>
Message-ID: <AANLkTimNyrkY4M4QQShx3d22Mmf8dWQU6inCwP6dSh6B@mail.gmail.com>

On Sat, Jul 10, 2010 at 8:19 PM, Tim Allen <screwtape at froup.com> wrote:

> On Sat, Jul 10, 2010 at 03:17:03PM -0500, Kevin Horn wrote:
> > On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
> > > That's probably enough feedback to be getting on with; most of the
> > > problems appear to be from normalising "\n" in Lore docs to "" instead
> > > of " ", and also from adding whitespace after things. It is generally
> > > looking pretty great, though!
> >
> > Yeah, that's pretty much it.  As I said above though, if you "fix" it one
> > place, it breaks in another, so I tried to balance things in such a way
> that
> > the least broken markup appears in the output.
> >
> > Almost all of the remaining problems will need to be fixed manually.
>
> It sounds like a lot of the manual fixes will involve rewriting
> things so that inline markup does not appear at the end of a sentence
> next to the punctuation. That seems like a recipe for awkward prose. :/
>

Not necessarily.  There are ways around a lot of these things, but they make
the markup a bit more complex and thus more complicated to generate
automatically.

For example, if the markup requires that there be a space, but you don't
actually want a space there, you insert an 'escaped space' ("\ ", that's a
backslash-space).

But the exact rules for what can abut the beginning and end of inline markup
are more complicated than that, and accounting for every special case would
be....er...

Let's just say there's a reason that there's not an official docutils tool
to _create_ restructuredText.


>
> > > Some extra thoughts:
> > >    - The ReviewingDocumentation wiki page has a section called "Editing
> > >      man pages" that describes how to turn the nicely-formatted
> > >      manpages into Lore input files. Would it be possible to do that as
> > >      part of the lore2sphinx run, have the manpages included in the
> > >      Sphinx documentation, and from then on generate the manpages from
> > >      the .rst files instead of the other way around?
> >
> > Sphinx does have a man page builder now, but I don't think it existed
> when I
> > was writing lore2sphinx, so I haven't really considered this.
> >
> > So you're suggesting convert the man pages to Lore format -> use
> lore2sphinx
> > to convert the resulting Lore docs to rst -> build as part of the Sphinx
> > process, yes?
>
> Yes. At least for trial, there's a bunch of stuff that's *only* in the
> man page and not the online docs, and a bunch of stuff that's *only* in
> the online docs and not the man page (and stuff that's *only* in the
> core/development/policy section of the docs, and not in the Trial
> section...). Hopefully if they're all part of the same doc system, it'll
> be easier to have everything in the one place and easy to find.
>
> > I think this is a worthwhile idea, but I'd prefer to leave it until after
> > the main docs are converted (i.e. under a separate ticket).  lore2sphinx
> can
> > be used on just the man files later on if need be, though it would take a
> > little mucking around.
>
> Something to add to the "open ticket for: anything else???" section of
> your transition plan, then? :)
>

Sounds like it.


>
> > Thanks for the fantastic (and nicely detailed) feedback, Tim!
> >
> > Please take a look at the transition plan.  In a few days (maybe sooner),
> I
> > should have the base docs in a branch, and the "chunk tickets" referenced
> in
> > the transition plan created.  This is pretty much _exactly_ what I'd like
> to
> > see in those "chunk tickets".
>
> Having done pretty much the first two of your suggested "chunks" in my
> previous mail, they look to be about the right size.
>
> > Hopefully you haven't already burned up your brain staring at markup
> > issues. :) We could really use this kind of help throughout the
> > process.
>
> I'm looking forward to learning a little more about Sphinx and ReST. :)
>
>

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/134dbab6/attachment.html>

From glyph at twistedmatrix.com  Sat Jul 10 21:39:56 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 10 Jul 2010 23:39:56 -0400
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <AANLkTimNyrkY4M4QQShx3d22Mmf8dWQU6inCwP6dSh6B@mail.gmail.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
	<20100711011944.GB1816@boombah.thristian.org>
	<AANLkTimNyrkY4M4QQShx3d22Mmf8dWQU6inCwP6dSh6B@mail.gmail.com>
Message-ID: <C2FD72EA-9378-4336-A240-54240EAC2C3D@twistedmatrix.com>


On Jul 10, 2010, at 10:48 PM, Kevin Horn wrote:

> Let's just say there's a reason that there's not an official docutils tool to _create_ restructuredText.

Is that really true?  If so, it concerns me.  Isn't that what docutils.writer.UnfilteredWriter does?  Even if not, it should be possible - reasonable, even - to write a docutils.writer.Writer which just emits reST.

Sphinx is a nice tool, but reST's grossness bothers me more and more.  If there are really no tools which can emit reStructuredText from a data structure, that means we have no hope of ever processing our source documentation in deterministic, correct ways (as a trivial example, let's say we wanted to change the name of a package).  It's not a lot of fun to process XML documents, but there are plenty of APIs to do it and to be sure that the output is still XML when you're done.

This is really a theoretical concern (in the years we've been using lore, we never really managed to use any XML tools with it), and on balance all the features that sphinx brings to the table are almost certainly worth living with it, but it still bugs me.  Where should I file and/or vote for a bug report or feature request?  Is this sphinx's problem, docutils, or both?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/4030fa97/attachment.html>

From kevin.horn at gmail.com  Sat Jul 10 21:49:54 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Sat, 10 Jul 2010 22:49:54 -0500
Subject: [Twisted-Python] Lore to Sphinx Conversion Progress Report 6
In-Reply-To: <2DB04741-C874-4EA5-85AE-A3E9DE49E8DA@twistedmatrix.com>
References: <562bcc11003041449x1d1ba2fdx5f9ba6262bd49643@mail.gmail.com>
	<368574aa1003050730p476bee78x5ed0e262783258d3@mail.gmail.com>
	<562bcc11003050933t3d810980n94aadef31cc6c62c@mail.gmail.com>
	<AANLkTikrw3lxZJ2eDcH2MX5ghNxwMt0ymcaj16lWHmkb@mail.gmail.com>
	<AANLkTinK9rL2GxVMnMo7icRtlm2ZXS0x7YQAQPV4b6Yx@mail.gmail.com>
	<AANLkTinqjWNo3BegEkCRmGmlqCw9dOVNQ123uF5myI6X@mail.gmail.com>
	<20100710025840.2208.1465807206.divmod.xquotient.13@localhost.localdomain>
	<20100710074059.GA1816@boombah.thristian.org>
	<AANLkTilgY095g4mp7DVseYM-eEnnMBFNrxyiiZ0j0YPz@mail.gmail.com>
	<2DB04741-C874-4EA5-85AE-A3E9DE49E8DA@twistedmatrix.com>
Message-ID: <AANLkTik0PmnA0s5ieUudkqBRAlqhRGUUoNAMyc7H9Uf5@mail.gmail.com>

On Sat, Jul 10, 2010 at 9:21 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> On Jul 10, 2010, at 4:17 PM, Kevin Horn wrote:
>
> On Sat, Jul 10, 2010 at 2:40 AM, Tim Allen <screwtape at froup.com> wrote:
>
>> On Sat, Jul 10, 2010 at 02:58:40AM -0000, exarkun at twistedmatrix.comwrote:
>> > At last I've got a buildbot set up generating the sphinx docs.  The
>> > build results can be seen here:
>> >
>> >   http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/
>> >
>> > (or with a different revision number for different revisions; the
>> > containing directory is browseable).
>> >
>> > It would be great if everyone could go look around and report any
>> > problems you see.
>>
>>     - In the Documentation Table Of Contents page, "Historical
>>      Documents" is listed between "Twisted Core" and "Twisted Lore"
>>      (presumably because of alphabetical order) but this seems
>>      a strange place for it. Could it be moved to the bottom, or an
>>      appendix, or something?
>>
>
> They're in alphabetical order.  The TOC page is generated dynamically by
> looking at the file structure of the docs and that's the order file-globbing
> lists them in.  We can fix this manually post-conversion.
>
>
> It's worth noting that even in this peculiar order, the existence of this
> document is an upgrade.  It did not previously exist.  Or, rather, it did,
> but I think the analogous page in the current system is this: <
> http://twistedmatrix.com/documents/10.1.0/>, which is certainly not as
> nice.
>
> (If you were expecting to see something like <
> http://twistedmatrix.com/documents/10.1.0/core/howto/index.html>, that's
> here: <
> http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/core/howto/index.html
> >.)
>

As I said, the order can be changed manually.


>
>
>
>>    - The bottom of every page has a "Download in other formats: Plain
>>      Text" link that doesn't work; presumably scooped up from the Trac
>>      templates. It should be removed (the Sphinx "Show Source" link is
>>      in the right-hand sidebar anyway).
>>
>
> Yeah, this is a flaw in the trac theme.  Looks like I forgot to remove it.
>
>
> This seems like a simple fix - if you could do it quickly so we can see if
> fixes get propagated to the buildbot, that would be great (so we can get the
> build logistics out of the way for future, more complex issues).
>
>
Hmmm...it won't be propagated to the buildbot automatically, since it's in
the theme files in the lore2sphinx repo.  From what exarkun said it sounds
like it would require another manual checkout of that repo.

I'll change it pretty soon, though.


>
>    - When the breadcrumb navigation at the top of the page gets too
>>      long[1], it wraps to a second line, which looks kind of odd
>>      because the nice gradient background image loops. Changing the CSS
>>      background colour to be the same as the bottom of the gradient
>>      image would probably help.
>>
>
> The breadcrumb names are also kinda weird, and very wordy.
>
> <
> http://buildbot.twistedmatrix.com/builds/sphinx-html-15615/projects/conch/howto/conch_client.html>
> says "Twisted >> Twisted Documentation Table of Contents >> Twisted Conch
> Documentation >> Twisted Documentation".  This is altogether too many
> "Twisted"s ;-).
>
> It should really be more like
>
> 'Twisted >> Documentation >> Conch >> "Writing a client with
> Twisted.Conch"'
>
> Again: this is a new feature, so I'm not too concerned if we defer fixing
> this; go ahead if it's easy, but if it's hard, it's still better than the
> status quo, which is to say, not having any navigation at all.
>
>
The breadcrumbs use document titles.  Of course, in my opinion the word
Twisted is used far too often in the document titles, which I think will be
less necessary as we move the docs toward a cohesive whole, rather than a
bunch of separate articles (which I see as a long-term,
out-of-scope-for-this-discussion goal).


>    - Chromium's error console reports:
>>        - A 404 error for "/trac/chrome/common/js/jquery.js"
>>        - A 404 error for "/trac/chrome/common/js/trac.js"
>>        - A 404 error for "/trac/chrome/common/js/search.js"
>>        - A 404 error for "/builds/sphinx-html-15615/_static/dots.gif"
>>
>
> Ah! This explains why the search quit working.  Not sure why these files
> are missing,  Probably something to do with the custom theme.
>
>
> They're missing because this code is hosted on *buildbot*.
> twistedmatrix.com, not twistedmatrix.com.  It's probably most expedient to
> just make those links include the netloc for now.
>
>
<facepalm>

of course.


>    - The Twisted.Conch tutorial[1] has a number of things surrounded
>>      with double-backticks like "``Deferred``" or
>>      "``ClientTransport``". I'm not sure if that's deliberate or if
>>      it's markup gone horribly wrong.
>>
>
> This is probably due to missing spaces before/after the markup in the rst
> source.  One of those things that will need to be fixed manually.  I spent a
> lot of time trying to fix this in lore2sphinx and when you fix it in one
> place, it breaks somewhere else.  Right now the automated conversion is
> about as good as it is likely to get with a sane amount of effort.
>
>
> Pardon my ignorance, but why not just *always* add the spaces when
> generating this type of markup?  It doesn't seem like it should be that
> hard; docutils claims to be able to treat ReST as structured, right?  Isn't
> there an API to construct some objects that will do the quoting for you?
>

It sounds reasonable doesn't it?  But it's harder than that, because extra
spaces in the wrong place can throw off indentation, which is a whole other
mess.  I would much rather go back through and add/remove a bunch of
isolated spaces than try to reconstruct indentation in some of these complex
document structures.


>
>    - The Conch code examples (as linked from the code examples page[2])
>>      are sent with a Python mime-type (which Firefox tries to download)
>>      while the .tac files are sent as text/html; this may be an
>>      artifact of the docs being hosted on the buildbot machine rather
>>      than Sphinx, but I think it would be nice if by default they were
>>      displayed in the browser, syntax-highlighted, with an option to
>>      download the original files (much like Trac does).
>>
>
> This is a web server configuration thing.  The files are actually .py and
> .tac files (and probably need to remain so, if we ever want to get automated
> example code tests going).
>
>
> Maybe we can do some web server magic to get them nicely displayed in the
> browser, but I see that as a secondary issue for the moment.  Anyone should
> feel free to give a shout if they disagree, though.
>
>
> I agree completely.
>
> We should fix it so the .tac files are text/x-python as well, so your
> browser can DTRT with them; when I click on an example, I often want to
> download it.
>
> Perhaps the lore markup should be adjusted to format them inline as well,
> though?
>
>    - The Twisted Split FAQ[3] has a heading "Why are arr the packages
>>      still named twisted.*subproject*?", but it's not obvious whether
>>      the author was trying to use italics (in which case it's
>>      a lore2sphinx bug) or globbing (in which case it's not).
>>
>
> Pretty sure it was supposed to be italics.  Spacing again.  There are ways
> to make this display properly, but it'll need to be done manually.
>
> Also, this is pretty outdated stuff...we might consider just removing some
> of this.  Or perhaps moving some of it into a more obvious place.
>
>
> Let's try to have those discussions in separate threads so they can be
> resolved individually.  I don't have an opinion at the moment and would not
> like to develop one in the middle of a monster thread about the whole
> conversion :).
>

Good idea.


>
>
>    - The Twisted Coding Standard[6] mentions "If you modify, or write
>>      a new, HOWTO, please read the Lore documentation to learn how to
>>      format the docs"; if there's not already a follow-up ticket for
>>      the lore-sphinx conversion titled "Remove references to Lore from
>>      Twisted's non-Lore-related documentation", there should be, and
>>      this should be in it.
>>
>
> There isn't, but there will be.  See the transition plan here:
> http://twistedsphinx.funsize.net/transition_plan.html
>
>
> FWIW, you should really start linking to the ticket <
> http://twistedmatrix.com/trac/ticket/4500>, rather than the "transition
> plan" page, so that folks can comment, link to other tickets, bookmark it
> for review when it comes up, etc.
>

Hmmm...maybe.  Though the transition plan (which I guess I should update
some) covers more than the ticket, IMO.

I _did_ ask for feedback on it back when, but nobody spoke up...and silence
implies consent :)

At any rate, if there need to be changes made to my sketch of a transition
plan, let's get that figured out ASAP.


>
> [...] All bad spacing issues. [...] Almost all of the remaining problems
> will need to be fixed manually.
>
>
> It really seems like there's a lot of these.  I'm grateful to Tim for such
> a thorough job finding them, but I'm sure he missed some - maybe it would be
> worthwhile to get someone else to help make the tool be correct more often?
>

If someone else can do it great.  What's there at the moment is about as
good as I can make it (unless someone can pay me truly ridiculous amounts of
money...I always have that proviso :) ).


>
> Thanks for the fantastic (and nicely detailed) feedback, Tim!
>
>
> +1.
>
> (I had some thoughts about manual pages but those deserved their own
> message, so I'll send them separately.)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100710/24c7ce44/attachment.html>

From exarkun at twistedmatrix.com  Sat Jul 10 22:05:43 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Jul 2010 04:05:43 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1278821143.78.1045102529@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100711/5d6b6a85/attachment.html>

From codeprophecy1 at gmail.com  Sun Jul 11 01:26:22 2010
From: codeprophecy1 at gmail.com (code prophecy)
Date: Sun, 11 Jul 2010 02:26:22 -0500
Subject: [Twisted-Python] msn file transfer
Message-ID: <AANLkTinBLGzMr8uj7C8fdOwYSobBXWxwPrpMv3Su6AET@mail.gmail.com>

Hi,

Can anyone provide an example of msn file transfer ? Twisted msn
implementation does have the filesender/recver classes but i cant figue out
how to use them.Any help is welcome.

Also, can anyone suggest a way to implement avatar/display image
functionality to the existing module? i'm ready to do it but need some
pointers or hint as to how to go abt it.

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100711/1ee6b7a0/attachment.html>

From gelonida at gmail.com  Sun Jul 11 13:02:22 2010
From: gelonida at gmail.com (Gelonida)
Date: Sun, 11 Jul 2010 21:02:22 +0200
Subject: [Twisted-Python] https server example with client certs for twisted
Message-ID: <i1d4fu$ija$1@dough.gmane.org>

H,

I'd like to implement a small https twisted server,

which can wrap a wsgi module and which
can verify client certificates


I am able to do this with apache, but would like to do the same with
twisted.


What I have running is following.

The

#!/bin/sh
certfile=mycert.crt
keyfile=mycert.key
wsgi_module=tw_wrapper.application

twistd -n web --https 4433 \
    --certificate $certfile --privkey $keyfile \
    --wsgi $wsgi_module



I wondered where I could find any good example code
implementing a web server with client certificate authentication
( and ideally with a  subsequent wsgi module)

TIA




From exarkun at twistedmatrix.com  Sun Jul 11 20:04:10 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 12 Jul 2010 02:04:10 -0000
Subject: [Twisted-Python] https server example with client certs
	for	twisted
In-Reply-To: <i1d4fu$ija$1@dough.gmane.org>
References: <i1d4fu$ija$1@dough.gmane.org>
Message-ID: <20100712020410.1937.664044251.divmod.xquotient.15@localhost.localdomain>

On 11 Jul, 07:02 pm, gelonida at gmail.com wrote:
>H,
>
>I'd like to implement a small https twisted server,
>
>which can wrap a wsgi module and which
>can verify client certificates
>
>
>I am able to do this with apache, but would like to do the same with
>twisted.
>
>
>What I have running is following.
>
>The
>
>#!/bin/sh
>certfile=mycert.crt
>keyfile=mycert.key
>wsgi_module=tw_wrapper.application
>
>twistd -n web --https 4433 \
>    --certificate $certfile --privkey $keyfile \
>    --wsgi $wsgi_module
>
>
>
>I wondered where I could find any good example code
>implementing a web server with client certificate authentication
>( and ideally with a  subsequent wsgi module)

Twisted uses pyOpenSSL to support HTTPS.  You can read a bit about the 
basic SSL customization APIs in Twisted here:

    http://twistedmatrix.com/documents/current/core/howto/ssl.html

And you can read more about the underlying pyOpenSSL APIs here:

    http://packages.python.org/pyOpenSSL/

In particular, you're probably interested in customizing a Context 
instance:

    http://packages.python.org/pyOpenSSL/openssl-context.html

So that it requires and validates a peer certificate.

Unfortunately, we haven't yet made this level of customization available 
directly from the "twistd" command line, so you'll have to switch from 
using the "twistd web" command to something like a tac file:

http://twistedmatrix.com/documents/current/core/howto/application.html

You'll be able to set up the same kind of web server created by "twistd 
web", but you'll have to invoke some of the service APIs, such as 
SSLServer.  You can find an example of this sort of thing midway through 
the finger tutorial:

http://twistedmatrix.com/documents/current/core/howto/tutorial/factory.html#auto1

Jean-Paul



From jeandaniel.browne at gmail.com  Mon Jul 12 10:43:55 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Mon, 12 Jul 2010 18:43:55 +0200
Subject: [Twisted-Python] asynchronous python generator
Message-ID: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>

Hello,

I wrote a small client protocol which connects to a notification
server. The client role is to connect, and then to print the
notification which comes from the server until the server says "stop"
(a netcat server do just fine, I use "nc -C -l 6789"). I would like
the API for this client protocol to be compatible with the "for"
python loop. Here is the client

class Notif(basic.LineReceiver):

    def lineReceived(self, data):
        self.d.callback(data)

    def __iter__(self):
        return self

    @defer.inlineCallbacks
    def next(self):
        self.d = defer.Deferred()
        notif = yield self.d
        if notif=="stop":
            defer.returnValue(Failure(StopIteration()))
        else:
            defer.returnValue(notif)

Here is an example of how to use this client:


@defer.inlineCallbacks
def gotConnection(conn):

    for notif in conn:
        print notif

    reactor.stop()

c = protocol.ClientCreator(reactor, Notif)
c.connectTCP("localhost", 6789).addCallback(gotConnection)
reactor.run()

Except that is does not work: I think that the next() method of the
generator is indeed automatically called by the "for" machinery but
its return value is not yielded as the inlineCallbacks requires it.
This works for instance, and it is very close to a for loop:

@defer.inlineCallbacks
def gotConnection(conn):

    while True:
        try:
            print (yield conn.next())
        except StopIteration:
            break

Does someone knows how to make the for loop work with data coming from
network requests?



From exarkun at twistedmatrix.com  Mon Jul 12 12:00:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 12 Jul 2010 18:00:24 -0000
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
Message-ID: <20100712180024.1650.979084983.divmod.xquotient.10@localhost.localdomain>

On 04:43 pm, jeandaniel.browne at gmail.com wrote:
>Hello,
>
>I wrote a small client protocol which connects to a notification
>server. The client role is to connect, and then to print the
>notification which comes from the server until the server says "stop"
>(a netcat server do just fine, I use "nc -C -l 6789"). I would like
>the API for this client protocol to be compatible with the "for"
>python loop. Here is the client
>
>class Notif(basic.LineReceiver):
>
>    def lineReceived(self, data):
>        self.d.callback(data)
>
>    def __iter__(self):
>        return self
>
>    @defer.inlineCallbacks
>    def next(self):
>        self.d = defer.Deferred()
>        notif = yield self.d
>        if notif=="stop":
>            defer.returnValue(Failure(StopIteration()))
>        else:
>            defer.returnValue(notif)
>
>Here is an example of how to use this client:
>
>
>@defer.inlineCallbacks
>def gotConnection(conn):
>
>    for notif in conn:
>        print notif
>
>    reactor.stop()

This is an invalid use of inlineCallbacks.  Only generator functions 
(functions which use `yield`) can be decorated with inlineCallbacks.
>
>c = protocol.ClientCreator(reactor, Notif)
>c.connectTCP("localhost", 6789).addCallback(gotConnection)
>reactor.run()
>
>Except that is does not work: I think that the next() method of the
>generator is indeed automatically called by the "for" machinery but
>its return value is not yielded as the inlineCallbacks requires it.

Quite so.  And why would it be?  That's not what `for` does in Python.
>
>This works for instance, and it is very close to a for loop:
>
>@defer.inlineCallbacks
>def gotConnection(conn):
>
>    while True:
>        try:
>            print (yield conn.next())
>        except StopIteration:
>            break
>
>Does someone knows how to make the for loop work with data coming from
>network requests?

You didn't have to switch to a while loop here.  The simplest fix for 
your for loop is this:

    @inlineCallbacks
    def gotConnection(conn):
        for lineEvent in conn:
            line = yield lineEvent
            print line

But aside from that...

No, you must have the `yield` somewhere in the function.  If you want 
something less scrutable than this, then you probably want something 
like corotwine.

Jean-Paul



From ltaylor.volks at gmail.com  Mon Jul 12 12:35:02 2010
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Mon, 12 Jul 2010 13:35:02 -0500
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
Message-ID: <4C3B6056.9020802@gmail.com>

On 7/12/10 11:43 AM, Jean Daniel wrote:

> Hello,
> 
> I wrote a small client protocol which connects to a notification
> server. The client role is to connect, and then to print the
> notification which comes from the server until the server says "stop"

<snip>

> 
> Does someone knows how to make the for loop work with data coming from
> network requests?
> 

Maybe you've got bigger things in mind, but I don't know what all of
that buys you, at least from your example use case (client connects,
prints response from server, quits on 'stop'). What's wrong with keeping
it simple and handling responses in the Protocol?

def lineReceived(self, line):
    if line == 'stop':
        reactor.stop()
    else:
        print(line)





From jeandaniel.browne at gmail.com  Mon Jul 12 15:46:14 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Mon, 12 Jul 2010 23:46:14 +0200
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <20100712180024.1650.979084983.divmod.xquotient.10@localhost.localdomain>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
	<20100712180024.1650.979084983.divmod.xquotient.10@localhost.localdomain>
Message-ID: <AANLkTilSLpKfsmPZ1cYnjBczgt0lbrMmG0C-xjh4frQg@mail.gmail.com>

> You didn't have to switch to a while loop here.  The simplest fix for
> your for loop is this:
>
>    @inlineCallbacks
>    def gotConnection(conn):
>        for lineEvent in conn:
>            line = yield lineEvent
>            print line

Yes, I did that too. I wanted the loop to be able to terminate without
user intervention on a signalisation message: this is handy with for
when it is only a matter of raising StopIteration. In our two
examples, the user will have to be prepared for Exception to stop the
loop.

Thank you,

>
> But aside from that...
>
> No, you must have the `yield` somewhere in the function.  If you want
> something less scrutable than this, then you probably want something
> like corotwine.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jeandaniel.browne at gmail.com  Mon Jul 12 15:56:49 2010
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Mon, 12 Jul 2010 23:56:49 +0200
Subject: [Twisted-Python] asynchronous python generator
In-Reply-To: <4C3B6056.9020802@gmail.com>
References: <AANLkTimz2izrOBE_QOXnzHBy3-IfSC-zBgIaHqw4fROp@mail.gmail.com>
	<4C3B6056.9020802@gmail.com>
Message-ID: <AANLkTinnQkKIKUGRJO-Hqqe47b0vDX7eApceTSeSlCHf@mail.gmail.com>

> Maybe you've got bigger things in mind, but I don't know what all of
> that buys you, at least from your example use case (client connects,
> prints response from server, quits on 'stop'). What's wrong with keeping
> it simple and handling responses in the Protocol?
>
> def lineReceived(self, line):
>    if line == 'stop':
>        reactor.stop()
>    else:
>        print(line)

I think it buys a bit of simplicity if the ClientCreator is called and
all handy methods are attached to the protocol argument of the
callback. For the code that you show, there is a need to import the
right package and the right base class, name a class, override a
method. So, it does not buy much, actually.

More importantly IMHO, in your example the code embeds the knowledge
of the protocol strings. In some context, it is useful to hide it
behind an API to spare the developers the reading of the RFC, or in
others context, the wire protocol might change while the API stays
stable.

Cheers,

>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jasonjwwilliams at gmail.com  Mon Jul 12 18:51:29 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 12 Jul 2010 18:51:29 -0600
Subject: [Twisted-Python] SMTP Client Blocking Connects
Message-ID: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>

Hi Guys,

Are TCP connects in Twisted usually blocking? Noticing a behavior when
I've got several simultaneous SMTP client objects operating, where
when one of them hits a server that times out on the connect...the
program blocks until the connect times out. Everything else is working
async/non-blocking as expected.

-J



From glyph at twistedmatrix.com  Mon Jul 12 18:53:20 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 12 Jul 2010 20:53:20 -0400
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
Message-ID: <B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>


On Jul 12, 2010, at 8:51 PM, Jason J. W. Williams wrote:

> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.

They're absolutely not supposed to be!  If you can reproduce this, you've definitely found a bug.  (A quick search doesn't turn up any existing bugs.)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100712/508d503d/attachment.html>

From alvinwang at gmail.com  Tue Jul 13 03:32:17 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Tue, 13 Jul 2010 02:32:17 -0700
Subject: [Twisted-Python] Email problem
Message-ID: <AANLkTikXJqoK-Uo5IbcD8p9--BmSRjNnCVWYUnMBX0Rr@mail.gmail.com>

Problem send email through gmail with an attachment

Any help is appreciated

Thanks
Alvin

""" Does not work

"""
from twisted.internet.ssl import ClientContextFactory
from twisted.internet.defer import Deferred
from twisted.mail.smtp import ESMTPSenderFactory
from twisted.internet import reactor
import smtplib, sys, MimeWriter, mimetypes, mimetools, base64

import StringIO
import time
import os

sender = 'acct at gmail.com'
senderpw = 'password'
to = 'alvinwang at gmail.org'
subject = 'gc' + str(time.time())
text = 'Message Text Body'

attachments = ["/home/alvin/Pictures/alvin.jpg",
"/home/alvin/Pictures/badlogo.gif"]

contextFactory = ClientContextFactory()
result = Deferred()

message = StringIO.StringIO()
writer = MimeWriter.MimeWriter(message)
writer.addheader('To', to)
writer.addheader('From', sender)
writer.addheader('Subject', subject)
writer.addheader('MIME-Version', '1.0')
writer.startmultipartbody('mixed')

part = writer.nextpart()
body = part.startbody('text/plain')
part.flushheaders()
body.write(text)

# now add the attachments
if attachments is not None:
    for a in attachments:
        filename = os.path.basename(a)
        ctype, encoding = mimetypes.guess_type(a)
        if ctype is None:
            ctype = 'application/octet-stream'
            encoding = 'base64'
        elif ctype == 'text/plain':
            encoding = 'quoted-printable'
        else:
            encoding = 'base64'

        part = writer.nextpart()
        part.addheader('Content-Transfer-Encoding', encoding)
        body = part.startbody("%s; name=%s" % (ctype, filename))
        mimetools.encode(open(a, 'rb'), body, encoding)

# that's all falks
writer.lastpart()
m = message.getvalue()
message.close()


factory = ESMTPSenderFactory(sender,
                           senderpw,
                           sender,
                           to,
                           m,
                           result,
                           contextFactory=contextFactory)
reactor.connectTCP('smtp.gmail.com', 25, factory)
result.addCallback(lambda ign: reactor.stop())
reactor.run()




/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py:10:
DeprecationWarning: the MimeWriter module is deprecated; use the email
package instead
  import MimeWriter, tempfile, rfc822
Traceback (most recent call last):
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 84, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 69, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
    why = getattr(selectable, method)()
  File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py", line 137,
in doRead
    return Connection.doRead(self)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py", line 460,
in doRead
    return self.protocol.dataReceived(data)
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
251, in dataReceived
    why = self.lineReceived(line)
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1069,
in lineReceived
    why = self._okresponse(self.code,'\n'.join(self.resp))
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1134,
in smtpState_data
    self.getMailData(), self.transport, self.transformChunk)
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
493, in beginFileTransfer
    self.consumer.registerProducer(self, False)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/abstract.py", line
313, in registerProducer
    producer.resumeProducing()
  File "/usr/lib/python2.6/dist-packages/twisted/protocols/basic.py", line
499, in resumeProducing
    chunk = self.file.read(self.CHUNK_SIZE)
exceptions.AttributeError: 'str' object has no attribute 'read'
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: exceptions.Exception: Consumer asked us to stop producing
Traceback (most recent call last):
  File "postprob.py", line 71, in <module>
    reactor.run()
  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py", line
1170, in run
    self.mainLoop()
  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py", line
1182, in mainLoop
    self.doIteration(t)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 140, in doSelect
    _logrun(selectable, _drdw, selectable, method, dict)
--- <exception caught here> ---
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 84, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/log.py", line 69, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/lib/python2.6/dist-packages/twisted/python/context.py", line
37, in callWithContext
    return func(*args,**kw)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 156, in _doReadOrWrite
    self._disconnectSelectable(selectable, why, method=="doRead")
  File "/usr/lib/python2.6/dist-packages/twisted/internet/posixbase.py",
line 197, in _disconnectSelectable
    selectable.connectionLost(failure.Failure(why))
  File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py", line 678,
in connectionLost
    self.connector.connectionLost(reason)
  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py", line
1039, in connectionLost
    self.factory.clientConnectionLost(self, reason)
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1713,
in clientConnectionLost
    self._processConnectionError(connector, err)
  File "/usr/lib/python2.6/dist-packages/twisted/mail/smtp.py", line 1721,
in _processConnectionError
    self.file.seek(0, 0)
exceptions.AttributeError: 'str' object has no attribute 'seek'
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100713/27ace390/attachment.html>

From tim at commsecure.com.au  Tue Jul 13 03:44:48 2010
From: tim at commsecure.com.au (Tim Allen)
Date: Tue, 13 Jul 2010 19:44:48 +1000
Subject: [Twisted-Python] Email problem
In-Reply-To: <AANLkTikXJqoK-Uo5IbcD8p9--BmSRjNnCVWYUnMBX0Rr@mail.gmail.com>
References: <AANLkTikXJqoK-Uo5IbcD8p9--BmSRjNnCVWYUnMBX0Rr@mail.gmail.com>
Message-ID: <4C3C3590.7060807@commsecure.com.au>

On 07/13/2010 07:32 PM, Alvin Wang wrote:
> # that's all falks
> writer.lastpart()
> m = message.getvalue()
> message.close()

Here, you set "m" to be a string containing the message contents.

> factory = ESMTPSenderFactory(sender,
>                             senderpw,
>                             sender,
>                             to,
>                             m,
>                             result,
>                             contextFactory=contextFactory)

The documentation for ESMTPSenderFactory[1] says that the parameter 
after "to" is:

"file	A file-like object containing the message to send."

Try passing the "message" variable instead of your "m" variable.

[1] 
<http://twistedmatrix.com/documents/10.1.0/api/twisted.mail.smtp.ESMTPSenderFactory.html#__init__>



From twisted-web at udmvt.ru  Tue Jul 13 06:57:32 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Tue, 13 Jul 2010 16:57:32 +0400
Subject: [Twisted-Python] What is the minimum effort solution to make
	inetd-managed	twisted-based application?
Message-ID: <20100713125732.GE14318@ruber.office.udmvt.ru>

What is the minimal effort method for building protocol instance (maybe out of
already implemented protocol factory) using a transport, that uses
parent-inherited sockets (or any other already connected sockets) ?
I haven't yet found any single-line solution for that.

For example, how to start an inetd-managed SMTP server (with STARTTLS support),
suppose, we have protocol (and factory) already implemented, but
how to construct the correct transport out of fd with the minimal effort?

Or how to implement ucspi-tcp's tcpclient client on top of twisted framework?

Right now I am looking at t.i.unix.Connector and t.i.unix.Port to understand
how do transports get constructed by them, but well, that is too complex for a single evening.
Should I really get into the details of implementing my own transport (or their constructors)
to do what I need? I'm sure there should be something, that I missed in the documentation
(or in the code?).

And by the way, I haven't found any socketpair(2) usage in the twisted framework (except for tests),
how can that be? Transport based on socketpair sockets will have the same
implementation, as I need. Is it true, that nobody in twisted community uses
anonymous preconnected sockets in real life?

PS: I need socket-based transport, that is, full-duplex, half-closeable, with support
of getting the remote endpoint address and with ability to start TLS on top of it
and without implementing every that feature myself :)

Thanks for a great framework!
Alexey.

-- 
с уважением,
Алексей Шпагин
системный администратор
цеха передачи данных
технического центра телекоммуникаций
ОАО "ВолгаТелеком" 
филиал в Удмуртской республике.



From exarkun at twistedmatrix.com  Tue Jul 13 08:37:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 13 Jul 2010 14:37:08 -0000
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100713125732.GE14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
Message-ID: <20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>

On 12:57 pm, twisted-web at udmvt.ru wrote:
>What is the minimal effort method for building protocol instance (maybe 
>out of
>already implemented protocol factory) using a transport, that uses
>parent-inherited sockets (or any other already connected sockets) ?
>I haven't yet found any single-line solution for that.

This isn't supported, but we'd like to support it.  There's a ticket in 
the issue tracker, <http://twistedmatrix.com/trac/ticket/4387>, related 
to this (but with a somewhat wider scope).
>For example, how to start an inetd-managed SMTP server (with STARTTLS 
>support),
>suppose, we have protocol (and factory) already implemented, but
>how to construct the correct transport out of fd with the minimal 
>effort?
>
>Or how to implement ucspi-tcp's tcpclient client on top of twisted 
>framework?
>
>Right now I am looking at t.i.unix.Connector and t.i.unix.Port to 
>understand
>how do transports get constructed by them, but well, that is too 
>complex for a single evening.
>Should I really get into the details of implementing my own transport 
>(or their constructors)
>to do what I need? I'm sure there should be something, that I missed in 
>the documentation
>(or in the code?).

Despite not appearing to be private, things like t.i.unix.Connector and 
t.i.unix.Port aren't really intended for use by applications.

This is the right part of Twisted to be looking at if you want to 
contribute a patch which adds this feature, though.  And I encourage you 
to do that. :)

The implementation should be fairly straight-forward.  Most things like 
Port and Client and Server have a "createInternetSocket" method.  All 
that's really necessary to use an externally created file descriptor is 
get "createInternetSocket" to return that descriptor instead of creating 
a new one (or skip the call to the method entirely and just use the 
descriptor you have already).

The biggest question I have is what the API should look like.  Somehow 
the file descriptor needs to get from your application code (which knows 
that inetd put an open TCP connection on fd 0) to the 
Port/Client/Server.

The obvious options, adding another argument to 
listen/connectTCP/UNIX/etc, would work, but is somewhat ugly (you have 
the issue that existing mandatory arguments would just be ignored).

Another idea would be adding new methods entirely.  I don't know if 
that's much better, though.

So, if we can come up with a nice API, I think this will be a pretty 
quick feature to implement.
>And by the way, I haven't found any socketpair(2) usage in the twisted 
>framework (except for tests),
>how can that be? Transport based on socketpair sockets will have the 
>same
>implementation, as I need. Is it true, that nobody in twisted community 
>uses
>anonymous preconnected sockets in real life?

Apparently. :)
>
>PS: I need socket-based transport, that is, full-duplex, half- 
>closeable, with support
>of getting the remote endpoint address and with ability to start TLS on 
>top of it
>and without implementing every that feature myself :)

Hopefully if we can figure out how to create a Twisted transport object 
from an existing file descriptor, you should have no trouble with the 
rest of these.
>Thanks for a great framework!

You're welcome, and thanks! :)

Jean-Paul



From twisted-web at udmvt.ru  Tue Jul 13 10:52:52 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Tue, 13 Jul 2010 20:52:52 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
Message-ID: <20100713165252.GG14318@ruber.office.udmvt.ru>

On Tue, Jul 13, 2010 at 02:37:08PM -0000, exarkun at twistedmatrix.com wrote:
> On 12:57 pm, twisted-web at udmvt.ru wrote:
> >What is the minimal effort method for building protocol instance (maybe 
> >out of
> >already implemented protocol factory) using a transport, that uses
> >parent-inherited sockets (or any other already connected sockets) ?
> >I haven't yet found any single-line solution for that.
> 
> This isn't supported, but we'd like to support it.

Oops, the Bad news.

>  There's a ticket in 
> the issue tracker, <http://twistedmatrix.com/trac/ticket/4387>, related 
> to this (but with a somewhat wider scope).

Well, that feature will benefit from the feature I need. By the way, twisted
architecture and abstractions allow one (for a limited number of protocols)
to transfer the state along with the FD of the opened connection.
Say, one may want to read HTTP headers and then send
the connection FD to another process along with the read headers, so it will
receive and "re-read" them with dataReceived(). Modification of HTTP protocol
code will not be required here. But we need a modified transport constructor.

> >Right now I am looking at t.i.unix.Connector and t.i.unix.Port to 
> >understand
> >how do transports get constructed by them, but well, that is too 
> >complex for a single evening.
> >Should I really get into the details of implementing my own transport 
> >(or their constructors)
> >to do what I need? I'm sure there should be something, that I missed in 
> >the documentation
> >(or in the code?).
> 
> Despite not appearing to be private, things like t.i.unix.Connector and 
> t.i.unix.Port aren't really intended for use by applications.

No, no, I'm only using them as a documentation about what transport looks like
from the inside of the twisted, to other parts of the framework.

> 
> This is the right part of Twisted to be looking at if you want to 
> contribute a patch which adds this feature, though.  And I encourage you 
> to do that. :)

Well, I was trying to get into it during last evening, but it turned out to be
more appropriate to spend a week or two on that process. It looks, like
transport abstraction is not documented as a whole, only the user visible
parts, or better say, protocol visible parts. I am still not sure whether
it is advisable to subclass a base.BaseConnector or we can simply
create a transport instance without that "complications". It looks like
BaseConnector contain some portion of code, that should be reused.

> 
> The implementation should be fairly straight-forward.  Most things like 
> Port and Client and Server have a "createInternetSocket" method.  All 
> that's really necessary to use an externally created file descriptor is 
> get "createInternetSocket" to return that descriptor instead of creating 
> a new one (or skip the call to the method entirely and just use the 
> descriptor you have already).
> 
> The biggest question I have is what the API should look like.  Somehow 
> the file descriptor needs to get from your application code (which knows 
> that inetd put an open TCP connection on fd 0) to the 
> Port/Client/Server.

That depends. Are we going to limit that feature to socket FDs only, or
should we provide more specific interfaces for different type of files?
Two (pipe) FDs may be used to construct full-duplex half-closeable transport too.
Or may someone be interested also in master pty based transport? That would indeed require some
terminal-specific support to be present in the transport instance, wouldn't it?
Like transport.sendBreak()
Perhaps one may use a full-duplex transport constructed from a tty/slave-pty FD?
It may be useful to provide analogous interface for half-duplex connections too, IMHO.

I think it may look like
  connection = somenewmodulename.socketConnection(fd, protocolFactory, addrFamily, sockType, reactor=None)
or
  import socket
  connection = somenewmodulename.socketConnection(socket.fromfd(fd, addrFamily, sockType), protocolFactory, reactor=None)

Create a transport object and associate/build a new protocol instance with/on it.
For other FD types there should be different functions, returning instances
of other types.

Would you comment on that?

> 
> The obvious options, adding another argument to 
> listen/connectTCP/UNIX/etc, would work, but is somewhat ugly (you have 
> the issue that existing mandatory arguments would just be ignored).
> 
> Another idea would be adding new methods entirely.  I don't know if 
> that's much better, though.

Adding new methods to reactor? I thought it can live completely separate
from the reactor code and do not pollute reactor interface. Reactor is only
used in the process of attaching a FD to a transport when new transport
registers it's FDs in the reactor, so it can be an (optional?) argument
to a constructor. However, yes, API consistency may suffer from that.

> 
> So, if we can come up with a nice API, I think this will be a pretty 
> quick feature to implement.

I think it could be a set of functions inside a platform-dependent module
if that functions will be FD-type dependent.

> >And by the way, I haven't found any socketpair(2) usage in the twisted 
> >framework (except for tests),
> >how can that be? Transport based on socketpair sockets will have the 
> >same
> >implementation, as I need. Is it true, that nobody in twisted community 
> >uses
> >anonymous preconnected sockets in real life?
> 
> Apparently. :)

Oops, surprise!..
BTW creating a socketpair and forking and then communicating via PB seems
like an elegant and convenient feature to me. Perhaps non-portable?

> >
> >PS: I need socket-based transport, that is, full-duplex, half- 
> >closeable, with support
> >of getting the remote endpoint address and with ability to start TLS on 
> >top of it
> >and without implementing every that feature myself :)
> 
> Hopefully if we can figure out how to create a Twisted transport object 
> from an existing file descriptor, you should have no trouble with the 
> rest of these.

That's what I need, and I really hoped, that it is already implemented. What a surprise.
Surely, I would not mind contibuting to such a great project, but first I
would have to get more understanding of it's abstractions.

Alexey.

-- 
с уважением,
Алексей Шпагин
системный администратор
цеха передачи данных
технического центра телекоммуникаций
ОАО "ВолгаТелеком" 
филиал в Удмуртской республике.



From dominic at baudvine.net  Tue Jul 13 15:18:10 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Tue, 13 Jul 2010 23:18:10 +0200
Subject: [Twisted-Python] Knowing whether spawnProcess did anything useful
Message-ID: <4C3CD812.2030203@baudvine.net>

Hiya,

I'm looking for a way to know whether spawnProcess() did anything
useful.  That is, whether anything has actually been executed. In my
specific case the executables are all persistent (pluggable modules,
they stick around for a while) so based on the following snippet I
thought I could check whether the resulting ProcessTransport has a pid:

"From before IProcessProtocol.makeConnection is called to before
IProcessProtocol.processEnded is called, pid is an int giving the
platform process ID of this process. pid is None at all other times."[1]

However, a quick tour on the REPL shows otherwise (than I expected, not
necessarily otherwise than what the docs say):

>>> from twisted.internet import reactor
>>> from twisted.internet import protocol
>>> p = protocol.ProcessProtocol()
>>> f = reactor.spawnProcess(p, "fail", ["fail"])
>>> f
<Process pid=21053 status=-1>
>>> f.pid
21053

I thought status might be of some relevance, but it didn't really change
when I gave it a shot with actual executables.

Something tells me I'm being massively stupid here, but I'm genuinely
stuck.  Can't really believe that there's no way to do this, though.

Thanks.

[1]
http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IProcessTransport.html#pid

-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising



From jasonjwwilliams at gmail.com  Tue Jul 13 17:23:28 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Tue, 13 Jul 2010 17:23:28 -0600
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
Message-ID: <AANLkTinLFW80KKg1ZMJkIJChERcnBH9XvobdK1lNqA0Z@mail.gmail.com>

Hey Glyph,

Thanks for responding so fast. Lemme code up a simple test that
replicates what the code is doing and see if I can replicate it that
way.

-J

On Mon, Jul 12, 2010 at 6:53 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Jul 12, 2010, at 8:51 PM, Jason J. W. Williams wrote:
>
> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.
>
> They're absolutely not supposed to be!  If you can reproduce this, you've
> definitely found a bug.  (A quick search doesn't turn up any existing bugs.)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From exarkun at twistedmatrix.com  Tue Jul 13 20:31:46 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jul 2010 02:31:46 -0000
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100713165252.GG14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
Message-ID: <20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>

On 13 Jul, 04:52 pm, twisted-web at udmvt.ru wrote:
>On Tue, Jul 13, 2010 at 02:37:08PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>On 12:57 pm, twisted-web at udmvt.ru wrote:
>> >What is the minimal effort method for building protocol instance 
>>(maybe
>> >out of
>> >already implemented protocol factory) using a transport, that uses
>> >parent-inherited sockets (or any other already connected sockets) ?
>> >I haven't yet found any single-line solution for that.
>>
>>This isn't supported, but we'd like to support it.
>
>Oops, the Bad news.
>>  There's a ticket in
>>the issue tracker, <http://twistedmatrix.com/trac/ticket/4387>, 
>>related
>>to this (but with a somewhat wider scope).
>
>Well, that feature will benefit from the feature I need. By the way, 
>twisted
>architecture and abstractions allow one (for a limited number of 
>protocols)
>to transfer the state along with the FD of the opened connection.
>Say, one may want to read HTTP headers and then send
>the connection FD to another process along with the read headers, so it 
>will
>receive and "re-read" them with dataReceived(). Modification of HTTP 
>protocol
>code will not be required here. But we need a modified transport 
>constructor.
>> >Right now I am looking at t.i.unix.Connector and t.i.unix.Port to
>> >understand
>> >how do transports get constructed by them, but well, that is too
>> >complex for a single evening.
>> >Should I really get into the details of implementing my own transport
>> >(or their constructors)
>> >to do what I need? I'm sure there should be something, that I missed 
>>in
>> >the documentation
>> >(or in the code?).
>>
>>Despite not appearing to be private, things like t.i.unix.Connector 
>>and
>>t.i.unix.Port aren't really intended for use by applications.
>
>No, no, I'm only using them as a documentation about what transport 
>looks like
>from the inside of the twisted, to other parts of the framework.
>>
>>This is the right part of Twisted to be looking at if you want to
>>contribute a patch which adds this feature, though.  And I encourage 
>>you
>>to do that. :)
>
>Well, I was trying to get into it during last evening, but it turned 
>out to be
>more appropriate to spend a week or two on that process. It looks, like
>transport abstraction is not documented as a whole, only the user 
>visible
>parts, or better say, protocol visible parts. I am still not sure 
>whether
>it is advisable to subclass a base.BaseConnector or we can simply
>create a transport instance without that "complications". It looks like
>BaseConnector contain some portion of code, that should be reused.
>>
>>The implementation should be fairly straight-forward.  Most things 
>>like
>>Port and Client and Server have a "createInternetSocket" method.  All
>>that's really necessary to use an externally created file descriptor 
>>is
>>get "createInternetSocket" to return that descriptor instead of 
>>creating
>>a new one (or skip the call to the method entirely and just use the
>>descriptor you have already).
>>
>>The biggest question I have is what the API should look like.  Somehow
>>the file descriptor needs to get from your application code (which 
>>knows
>>that inetd put an open TCP connection on fd 0) to the
>>Port/Client/Server.
>
>That depends. Are we going to limit that feature to socket FDs only, or
>should we provide more specific interfaces for different type of files?

Ultimately it would be nice to support it for each transport type 
Twisted supports.  That doesn't mean we have to do it all at once 
though. :)
>
>Two (pipe) FDs may be used to construct full-duplex half-closeable 
>transport too.
>Or may someone be interested also in master pty based transport? That 
>would indeed require some
>terminal-specific support to be present in the transport instance, 
>wouldn't it?
>Like transport.sendBreak()
>Perhaps one may use a full-duplex transport constructed from a tty 
>/slave-pty FD?
>It may be useful to provide analogous interface for half-duplex 
>connections too, IMHO.

Actually, in twisted/internet/process.py ("Do NOT use this module 
directly"), you'll see ProcessReader and ProcessWriter which are 
transports for pipes/ptys.  The normal way to access these is via 
reactor.spawnProcess.  But you'll notice that they even accept a fileno 
as an __init__ argument, unlike most other transports in Twisted.

Mirroring this on the opposite side is twisted/internet/_posixstdio.py, 
which is a standard io transport, and also accepts filenos to its 
__init__.
>I think it may look like
>  connection = somenewmodulename.socketConnection(fd, protocolFactory, 
>addrFamily, sockType, reactor=None)
>or
>  import socket
>  connection = somenewmodulename.socketConnection(socket.fromfd(fd, 
>addrFamily, sockType), protocolFactory, reactor=None)
>
>Create a transport object and associate/build a new protocol instance 
>with/on it.
>For other FD types there should be different functions, returning 
>instances
>of other types.
>
>Would you comment on that?

Something to keep in mind here is that it may be desirable to support 
Windows at some point.  This is one reason why it may make sense to have 
these APIs as methods on the reactor: the reactor can already easily be 
replaced by alternate implementations to cater to different platforms.
>>
>>The obvious options, adding another argument to
>>listen/connectTCP/UNIX/etc, would work, but is somewhat ugly (you have
>>the issue that existing mandatory arguments would just be ignored).
>>
>>Another idea would be adding new methods entirely.  I don't know if
>>that's much better, though.
>
>Adding new methods to reactor? I thought it can live completely 
>separate
>from the reactor code and do not pollute reactor interface. Reactor is 
>only
>used in the process of attaching a FD to a transport when new transport
>registers it's FDs in the reactor, so it can be an (optional?) argument
>to a constructor. However, yes, API consistency may suffer from that.

If it's possible to do this, it's probably a good idea.  Just keep in 
mind that Windows doesn't use FDs for lots of things.  StandardIO shows 
that the API inconsistency is annoying but not fatal.  Plus, we're 
working on an API which can be a layer on top of this to make it all 
consistent again (twisted.internet.endpoints).
>>
>>So, if we can come up with a nice API, I think this will be a pretty
>>quick feature to implement.
>
>I think it could be a set of functions inside a platform-dependent 
>module
>if that functions will be FD-type dependent.
>> >And by the way, I haven't found any socketpair(2) usage in the 
>>twisted
>> >framework (except for tests),
>> >how can that be? Transport based on socketpair sockets will have the
>> >same
>> >implementation, as I need. Is it true, that nobody in twisted 
>>community
>> >uses
>> >anonymous preconnected sockets in real life?
>>
>>Apparently. :)
>
>Oops, surprise!..
>BTW creating a socketpair and forking and then communicating via PB 
>seems
>like an elegant and convenient feature to me. Perhaps non-portable?

Windows doesn't have fork, so yea, you'll run into problems there. :) 
There are also problems with the way fork interacts with kqueue and 
epoll.  The usual approach is reactor.spawnProcess to create an entirely 
new Python process, and then either connect to it over TCP or just use 
stdin/stdout to talk to it.
>> >
>> >PS: I need socket-based transport, that is, full-duplex, half-
>> >closeable, with support
>> >of getting the remote endpoint address and with ability to start TLS 
>>on
>> >top of it
>> >and without implementing every that feature myself :)
>>
>>Hopefully if we can figure out how to create a Twisted transport 
>>object
>>from an existing file descriptor, you should have no trouble with the
>>rest of these.
>
>That's what I need, and I really hoped, that it is already implemented. 
>What a surprise.
>Surely, I would not mind contibuting to such a great project, but first 
>I
>would have to get more understanding of it's abstractions.

I'll answer whatever questions I can. :)

Jean-Paul



From exarkun at twistedmatrix.com  Tue Jul 13 20:34:34 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Jul 2010 02:34:34 -0000
Subject: [Twisted-Python] Knowing whether spawnProcess did anything
	useful
In-Reply-To: <4C3CD812.2030203@baudvine.net>
References: <4C3CD812.2030203@baudvine.net>
Message-ID: <20100714023434.2312.1644270933.divmod.xquotient.21@localhost.localdomain>

On 13 Jul, 09:18 pm, dominic at baudvine.net wrote:
>Hiya,
>
>I'm looking for a way to know whether spawnProcess() did anything
>useful.  That is, whether anything has actually been executed. In my
>specific case the executables are all persistent (pluggable modules,
>they stick around for a while) so based on the following snippet I
>thought I could check whether the resulting ProcessTransport has a pid:
>
>"From before IProcessProtocol.makeConnection is called to before
>IProcessProtocol.processEnded is called, pid is an int giving the
>platform process ID of this process. pid is None at all other 
>times."[1]
>
>However, a quick tour on the REPL shows otherwise (than I expected, not
>necessarily otherwise than what the docs say):
>>>>from twisted.internet import reactor
>>>>from twisted.internet import protocol
>>>>p = protocol.ProcessProtocol()
>>>>f = reactor.spawnProcess(p, "fail", ["fail"])
>>>>f
><Process pid=21053 status=-1>
>>>>f.pid
>21053
>
>I thought status might be of some relevance, but it didn't really 
>change
>when I gave it a shot with actual executables.
>
>Something tells me I'm being massively stupid here, but I'm genuinely
>stuck.  Can't really believe that there's no way to do this, though.

Without the reactor running, neither the pid nor the status will ever be 
updated.  The event loop is needed in order to respond to the event of 
the child process exiting.

Also, the usual way to interact with the IProcessTransport provider (the 
Process instance) is via the ProcessProtocol instance.  Subclass it, 
override connectionMade or processExited or one of the other methods and 
wait for the reactor to call them.  Oh, and start up the reactor, too. 
:)

Jean-Paul



From albert.brandl at weiermayer.com  Wed Jul 14 03:20:58 2010
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 14 Jul 2010 11:20:58 +0200
Subject: [Twisted-Python]
	twisted.protocols.basic.NetstringReceiver:	Some errors are
	not visible
In-Reply-To: <g2he2b218021004060347r7b42d2f6v53f7588be7c6833d@mail.gmail.com>
References: <g2he2b218021004060347r7b42d2f6v53f7588be7c6833d@mail.gmail.com>
Message-ID: <20100714092057.GA7846@weiermayer.com>

On Tue, Apr 06, 2010 at 11:47:48AM +0100, Carlos Valiente wrote:
> [...]
> The error message "netstring too long" is shadowed by the except
> block. I'd like to see it in my log files.

The problems described in http://twistedmatrix.com/trac/ticket/4378 
have been fixed now. Would you like to create a new ticket about the
missing log messages? 
-- 

Best regards,

Albert Brandl

Weiermayer Solutions GmbH
Abteistraße 12
A-4813 Altmünster
phone: +43 (0) 720 70 30 14
fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com 



From dominic at baudvine.net  Wed Jul 14 06:02:57 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Wed, 14 Jul 2010 14:02:57 +0200
Subject: [Twisted-Python] Knowing whether spawnProcess did anything
	useful
In-Reply-To: <20100714023434.2312.1644270933.divmod.xquotient.21@localhost.localdomain>
References: <4C3CD812.2030203@baudvine.net>
	<20100714023434.2312.1644270933.divmod.xquotient.21@localhost.localdomain>
Message-ID: <4C3DA771.4040005@baudvine.net>

On 14-7-2010 4:34, exarkun at twistedmatrix.com wrote:
> Without the reactor running, neither the pid nor the status will ever be 
> updated.  The event loop is needed in order to respond to the event of 
> the child process exiting.
> 
<snip>

Knew I was forgetting something - starting the reactor would probably be
a fine idea, yeah.  The code I've got on file does all the subclassing
and even starts the reactor, I just blindly forgot to start the reactor
on the REPL.  That's what I get for copying the base of my code from an
example.

Thanks!
-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising



From konrads.smelkovs at gmail.com  Wed Jul 14 08:18:49 2010
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Wed, 14 Jul 2010 17:18:49 +0300
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
Message-ID: <AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>

Maybe there is a firewall that limits incoming connections?
--
Konrads Smelkovs
Applied IT sorcery.


On Tue, Jul 13, 2010 at 3:51 AM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hi Guys,
>
> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.
>
> -J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100714/32c201ae/attachment-0001.html>

From jaroslaw.fedewicz at gmail.com  Wed Jul 14 09:34:17 2010
From: jaroslaw.fedewicz at gmail.com (=?utf-8?Q?Jaros=C5=82aw_Fedewicz?=)
Date: Wed, 14 Jul 2010 18:34:17 +0300
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>
Message-ID: <5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>


On 14 лип. 2010, at 17:18, Konrads Smelkovs wrote:

> Maybe there is a firewall that limits incoming connections?
> --
> Konrads Smelkovs
> Applied IT sorcery.

Even if it drops packets, it should not block. It should return immediately with a Deferred, which will eventually fail.

-- 
Engineer: How do we do it?
Economist: How much does it cost?
Twisted Developer: Will it block?


From twisted-web at udmvt.ru  Wed Jul 14 10:00:00 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Wed, 14 Jul 2010 20:00:00 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
Message-ID: <20100714160000.GM14318@ruber.office.udmvt.ru>

On Wed, Jul 14, 2010 at 02:31:46AM -0000, exarkun at twistedmatrix.com wrote:
> I'll answer whatever questions I can. :)

Oh, I have some questions...
I asked some questions in the form of suggestions, well, don't take them seriously,
I only ask, not really propose anything. However I'm ready to hear you
about what I'm wrong with.

Here, what I have discovered so far:
There are transport factories in twisted, not defined as such, but really they are,
like tcp.Port and tcp.Connector.

They interface with protocol factories. That interface is asymmetric between
server protocol factory and client protocol factory. Well, the implementation
of client's side protocol factory and server's side should differ, but why should interfaces?
That is okay, while you only have different and asymmetric transport factories
the ones for client transports and the others for server transports.
But is there really something in created and connected transport,
that makes it server's or client's ? I guess nothing, except protocol instance attached.

Q: Why should protocol factory interface "bother" about client/server dichotomy?
For example, why should I be limited to only using PBClientFactory with connectXXX()
variants of transport factories?
Why should I do not want (under some crazy circumstances) to use reverse-connects
and run PBServerFactory with connectXXX()?
Well, maybe not PB, but what about other protocols?
Should it work? Well, I suppose, it would break if you try now, but is
is supposed to be that asymmetric?

And after all, there is absolute symmetry in UDP-based transports.

Q: Consider socketpair() variant - a pair of completely symmetric mutually
connected sockets.
Should I provide transport factory for use with server protocol factories
and another transport factory for use with client protocol factories?

That idea sounds stupid to me, there can be no difference in the implementation,
except in the interfaces to protocol factories.

I see there are some code, that can be moved from tcp.Port and tcp.Connector
to some common base class of an abstract transport factory. That class could
interfere with protocol factory without knowing whether it is server or client.
Protocol factory already knows about it's own asymmetry.

I do identify the events, that protocol factory receives from transport factory as these,
please correct me if I'm wrong:

global (factory-context) events:
- start factory                         doStart
- entering transport creation phase     startedConnecting       <server: when bind&listen succeeds why does anybody
                                                                 not invoke something like startedListenig ?>
- stop factory                          doStop

per transport connection events:
- on transport creation                 <none exists?why?>      <after connect() or listen() returns result, at this point
                                                                 we may decide to prevent further transport instantiation,
                                                                 especially if we are server-side protocol factory>
- transport creation failed             clientConnectionFailed  <server: direct analogy - accept() may return an error,
                                                                 but that event not exists for server. why?>
- transport created succesfully         buildProtocol           <a request to build a protocol instance implies, that
                                                                 transport instance have been succesfully created. or not?>
- build protocol                        buildProtocol           
- after transport and protocol creation clientConnectionMade    <in t.s.pb.PBXXXXFactory, event sent by protocol instance,
                                                                 name not defined in any Interface, why not?>
- transport closed                      clientConnectionLost    <why not define this for server too to be consistent?>

They are not client/servers asymmetric as I see them, but have asymmetric names in twisted
and sometimes when server variants exists, they have no fixed names defined in Interface classes :(

What is the difference between doStart and startedConnecting (together with imaginary startedListening)?

And who is responsible for sending which events? That is not defined in documentation.

What do you think about these names:
doStart()
transportFactoryStarted()
onBeforeTransportCreate()
connectionFailed()
buildProtocol()
connectionMade()
connectionLost()
doStop()
Well, I understand, you will veto them arguing by lot of code using old names,
but I am interested to know will they break the abstraction of protocol factory?

Can please anyone explain the asymmetry of the interfaces of protocol factories
and tell how can it be useful for me.

Thanks for your time.

Alexey.

-- 
с уважением,
Алексей Шпагин
системный администратор
цеха передачи данных
технического центра телекоммуникаций
ОАО "ВолгаТелеком" 
филиал в Удмуртской республике.



From superdupont at gmail.com  Wed Jul 14 10:38:17 2010
From: superdupont at gmail.com (Carlos Valiente)
Date: Wed, 14 Jul 2010 17:38:17 +0100
Subject: [Twisted-Python] twisted.protocols.basic.NetstringReceiver:
	Some errors are not visible
In-Reply-To: <20100714092057.GA7846@weiermayer.com>
References: <g2he2b218021004060347r7b42d2f6v53f7588be7c6833d@mail.gmail.com>
	<20100714092057.GA7846@weiermayer.com>
Message-ID: <AANLkTingz-AEBawG_mCr1M7LvuBwj7Q4x7Fo5yhgqexX@mail.gmail.com>

On Wed, Jul 14, 2010 at 10:20, Albert Brandl
<albert.brandl at weiermayer.com> wrote:
> On Tue, Apr 06, 2010 at 11:47:48AM +0100, Carlos Valiente wrote:
>> [...]
>> The error message "netstring too long" is shadowed by the except
>> block. I'd like to see it in my log files.
>
> The problems described in http://twistedmatrix.com/trac/ticket/4378
> have been fixed now. Would you like to create a new ticket about the
> missing log messages?

Thanks for the heads-up, Albert. I switched from NetstringReceiver to
Int32StringReceiver, so I don't really need the error message any
longer.

C



From luke-lists at hybrid-logic.co.uk  Thu Jul 15 02:33:27 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 15 Jul 2010 09:33:27 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
Message-ID: <1279182807.8628.6.camel@pow>

Hi all,

Is there any existing support for any Twisted HTTP client to simulate
the behaviour of all modern browsers in that -- if an address returns
multiple A records -- and if one IP fails (connection refused, etc) then
the client attempts a number of the other IPs before giving up?

If not, where should I start? I understand that client.Agent is more
modern than client.getPage.

Thanks for an awesome framework!

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420




From rlotun at gmail.com  Thu Jul 15 03:46:00 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 15 Jul 2010 10:46:00 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
In-Reply-To: <1279182807.8628.6.camel@pow>
References: <1279182807.8628.6.camel@pow>
Message-ID: <AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>

Hi Luke,

> Is there any existing support for any Twisted HTTP client to simulate
> the behaviour of all modern browsers in that -- if an address returns
> multiple A records -- and if one IP fails (connection refused, etc) then
> the client attempts a number of the other IPs before giving up?

As for connecting to hosts that resolve to multiple A records - I
presume as a means of load balancing via DNS round robin - I'm not
quite sure this is natively supported in Twisted. I believe since all
TCP connections are mediated via connectTCP hostnames are ultimately
resolved via socket.gethostbyname. I think you really want the support
provided by socket.gethostbyname_ex
(http://docs.python.org/library/socket.html#socket.gethostbyname_ex).

It's a good question though. I'm sure a core dev will come along and
give a proper answer soon ;-)

Cheers,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From itamar at itamarst.org  Thu Jul 15 05:57:50 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Jul 2010 07:57:50 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
Message-ID: <1279195070.1619.0.camel@blake>

On Thu, 2010-07-15 at 10:46 +0100, Reza Lotun wrote:

> I believe since all
> TCP connections are mediated via connectTCP hostnames are ultimately
> resolved via socket.gethostbyname.

Twisted uses a thread pool to do DNS lookups by default, so this
shouldn't block anything.




From itamar at itamarst.org  Thu Jul 15 06:06:00 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Jul 2010 08:06:00 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
Message-ID: <1279195560.1619.8.camel@blake>

On Thu, 2010-07-15 at 10:46 +0100, Reza Lotun wrote:

> As for connecting to hosts that resolve to multiple A records - I
> presume as a means of load balancing via DNS round robin - I'm not
> quite sure this is natively supported in Twisted. I believe since all
> TCP connections are mediated via connectTCP hostnames are ultimately
> resolved via socket.gethostbyname. I think you really want the support
> provided by socket.gethostbyname_ex
> (http://docs.python.org/library/socket.html#socket.gethostbyname_ex).
> 
> It's a good question though. I'm sure a core dev will come along and
> give a proper answer soon ;-)

Gar. I should read better. Twisted uses a threadpool of gethostname by
default, but you can plug in your own resolver (e.g. you can use
twisted.names):

http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver

The question is whether the client code re-resolves on each re-connect,
and whether the current lookup interface is sufficient for this use
case.

Alas, I'm pretty sure the answer is no.

You could however always just do the DNS lookup yourself, passing
resulting correct IP to connectTCP, just make sure you don't block (e.g.
by using deferToThread to call gethostbyname_ex).




From luke-lists at hybrid-logic.co.uk  Thu Jul 15 06:33:41 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 15 Jul 2010 13:33:41 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <1279195560.1619.8.camel@blake>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake>
Message-ID: <1279197221.8628.119.camel@pow>

On Thu, 2010-07-15 at 08:06 -0400, Itamar Turner-Trauring wrote:
> On Thu, 2010-07-15 at 10:46 +0100, Reza Lotun wrote:
> 
> > As for connecting to hosts that resolve to multiple A records - I
> > presume as a means of load balancing via DNS round robin

We're actually using it to provide redundancy in this instance. In our
application any request for any site can be made to any (live) server,
so having dead servers in the pool of A records doesn't matter so long
as real web browsers failover to some other A record within a second,
which they do! http://crypto.stanford.edu/dns/dns-rebinding.pdf

The problem is that my test application uses client.getPage which,
because it uses the reactor's standard DNS lookup mechanism, picks just
one A record and sticks to it. So, it reports connection errors (some
fraction of the time, as A records are randomised) even when the user of
a "real" web browser would not experience them. These errors go away
when the dead server(s) drop out of the DNS pool and reactor's lookups
stops returning the dead IP, but this takes some time.


> Gar. I should read better. Twisted uses a threadpool of gethostname by
> default, but you can plug in your own resolver (e.g. you can use
> twisted.names):
> 
> http://twistedmatrix.com/documents/10.1.0/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver
> 
> The question is whether the client code re-resolves on each re-connect,
> and whether the current lookup interface is sufficient for this use
> case.
> 
> Alas, I'm pretty sure the answer is no.
> 
> You could however always just do the DNS lookup yourself, passing
> resulting correct IP to connectTCP, just make sure you don't block (e.g.
> by using deferToThread to call gethostbyname_ex).

Thanks Itamar, this is massively useful. I'll try subclassing
twisted.web.client.Agent to do its own DNS lookups with twisted.names so
as to be aware of the full list of A records returned. It would then
attempt all the IP addresses in turn until it finds one which works,
giving up only if all the IPs yield connection errors. This should
mirror the behaviour of the majority of web browsers "in the wild".

Would you be interested in having this code contributed back to Twisted
if I can get it working? It might be a useful addition to the Agent.

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420




From itamar at itamarst.org  Thu Jul 15 06:55:25 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Jul 2010 08:55:25 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <1279197221.8628.119.camel@pow>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake>  <1279197221.8628.119.camel@pow>
Message-ID: <1279198525.1619.9.camel@blake>

On Thu, 2010-07-15 at 13:33 +0100, Luke Marsden wrote:
> Thanks Itamar, this is massively useful. I'll try subclassing
> twisted.web.client.Agent to do its own DNS lookups with twisted.names so
> as to be aware of the full list of A records returned. It would then
> attempt all the IP addresses in turn until it finds one which works,
> giving up only if all the IPs yield connection errors. This should
> mirror the behaviour of the majority of web browsers "in the wild".

I suspect you can do this without subclassing... pass in IP address, and
just make sure you pass correct Host header. I forget the exact API
though.




From rlotun at gmail.com  Thu Jul 15 07:28:55 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Thu, 15 Jul 2010 14:28:55 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
In-Reply-To: <1279198525.1619.9.camel@blake>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<1279198525.1619.9.camel@blake>
Message-ID: <AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>

> I suspect you can do this without subclassing... pass in IP address, and
> just make sure you pass correct Host header. I forget the exact API
> though.

Yeah, I was about to say, why not just call socket.gethostbyname_ex in
deferToThread and in the callback do a regular Agent.request?

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From luke-lists at hybrid-logic.co.uk  Thu Jul 15 07:54:22 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Thu, 15 Jul 2010 14:54:22 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<1279198525.1619.9.camel@blake>
	<AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>
Message-ID: <1279202062.8628.153.camel@pow>

On Thu, 2010-07-15 at 14:28 +0100, Reza Lotun wrote:
> > I suspect you can do this without subclassing... pass in IP address, and
> > just make sure you pass correct Host header. I forget the exact API
> > though.

This makes sense. Conceptually I had considered it to be the
responsibility of the web client itself to handle the reconnection, not
the calling code, hence my plan for a subclass. But a separate class
which uses the Agent's API makes a lot more sense, and it can equally
provide the same interface as Agent so that any code which uses Agent
can use it without modifications.

> Yeah, I was about to say, why not just call socket.gethostbyname_ex in
> deferToThread and in the callback do a regular Agent.request?

Sounds like a plan! Thanks guys.

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420




From exarkun at twistedmatrix.com  Thu Jul 15 08:56:45 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Jul 2010 14:56:45 -0000
Subject: [Twisted-Python] Twisted HTTP client supporting failover
	for	multiple A records?
In-Reply-To: <1279202062.8628.153.camel@pow>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<1279198525.1619.9.camel@blake>
	<AANLkTinP4X8bfRmrsEND-193YfYqDzWjn5YKhVU-re80@mail.gmail.com>
	<1279202062.8628.153.camel@pow>
Message-ID: <20100715145645.1664.934038279.divmod.xquotient.4@localhost.localdomain>

On 01:54 pm, luke-lists at hybrid-logic.co.uk wrote:
>On Thu, 2010-07-15 at 14:28 +0100, Reza Lotun wrote:
>> > I suspect you can do this without subclassing... pass in IP address, 
>>and
>> > just make sure you pass correct Host header. I forget the exact API
>> > though.
>
>[snip]
>But a separate class
>which uses the Agent's API makes a lot more sense, and it can equally
>provide the same interface as Agent so that any code which uses Agent
>can use it without modifications.

Hooray.  This is exactly the intended approach to extending Agent.  I'm 
glad you figured it out on your own. :)

Jean-Paul



From exarkun at twistedmatrix.com  Thu Jul 15 10:15:43 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 15 Jul 2010 16:15:43 -0000
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100714160000.GM14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
Message-ID: <20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>

On 14 Jul, 04:00 pm, twisted-web at udmvt.ru wrote:
>On Wed, Jul 14, 2010 at 02:31:46AM -0000, exarkun at twistedmatrix.com 
>wrote:
>>I'll answer whatever questions I can. :)
>
>Oh, I have some questions...
>I asked some questions in the form of suggestions, well, don't take 
>them seriously,
>I only ask, not really propose anything. However I'm ready to hear you
>about what I'm wrong with.
>
>Here, what I have discovered so far:
>There are transport factories in twisted, not defined as such, but 
>really they are,
>like tcp.Port and tcp.Connector.
>
>They interface with protocol factories. That interface is asymmetric 
>between
>server protocol factory and client protocol factory. Well, the 
>implementation
>of client's side protocol factory and server's side should differ, but 
>why should interfaces?

startedConnecting, clientConnectionFailed, and clientConnectionLost only 
exist to facilitate client reconnection.  See the end of the email for 
more about that.
>That is okay, while you only have different and asymmetric transport 
>factories
>the ones for client transports and the others for server transports.
>But is there really something in created and connected transport,
>that makes it server's or client's ? I guess nothing, except protocol 
>instance attached.

That's probably true.  And there could probably be a little less 
duplication of code between the Client and Server transports (although 
there's not a *lot* now).
>
>Q: Why should protocol factory interface "bother" about client/server 
>dichotomy?
>For example, why should I be limited to only using PBClientFactory with 
>connectXXX()
>variants of transport factories?
>Why should I do not want (under some crazy circumstances) to use 
>reverse-connects
>and run PBServerFactory with connectXXX()?
>Well, maybe not PB, but what about other protocols?
>Should it work? Well, I suppose, it would break if you try now, but is
>is supposed to be that asymmetric?

You can certainly implement protocols that don't care about which side 
of the underlying transport is the client and which side is the server. 
It probably wouldn't be much work to get PB to be such an 
implementation.  But apparently no one really cares about this, 
otherwise it might have come up before. ;)
>And after all, there is absolute symmetry in UDP-based transports.

Okay.  But SOCK_DGRAM is completely different from SOCK_STREAM, so I 
don't know if this comparison really means anything.
>Q: Consider socketpair() variant - a pair of completely symmetric 
>mutually
>connected sockets.
>Should I provide transport factory for use with server protocol 
>factories
>and another transport factory for use with client protocol factories?
>
>That idea sounds stupid to me, there can be no difference in the 
>implementation,
>except in the interfaces to protocol factories.

I'd probably start off with a low-level interface that's completely 
symmetric and doesn't involve factories.  After all, it's not like 
socketpairs can spontaneously spring into existing (like client 
connections on a server can).  On top of that, if you want, construct an 
API using factories to support multiple connections.
>
>I see there are some code, that can be moved from tcp.Port and 
>tcp.Connector
>to some common base class of an abstract transport factory. That class 
>could
>interfere with protocol factory without knowing whether it is server or 
>client.
>Protocol factory already knows about it's own asymmetry.
>
>I do identify the events, that protocol factory receives from transport 
>factory as these,
>please correct me if I'm wrong:
>
>global (factory-context) events:
>- start factory                         doStart
>- entering transport creation phase     startedConnecting 
><server: when bind&listen succeeds why does anybody
>                                                                 not 
>invoke something like startedListenig ?>
>- stop factory                          doStop

Make sure you don't get confused when you use "start factory" and "stop 
factory" as labels for doStart and doStop.  The base implementation of 
doStart calls startFactory and the base implementation of doStop calls 
stopFactory.

There's no startedListening because no one imagined there might be a 
kind of port that could only be created asynchronously.  listenTCP, 
listenSSL, listenUNIX, listenUDP, listenMulticast can all complete 
immediately, so they all return an IPort provider.  So if you wanted the 
startedListening callback, you can just call it yourself immediately 
after you call the listenXXX method.

This may be an oversight for the general case.  Vertex, for example, 
certainly wants to expose an asynchronous listen API.  Other similar 
use-cases might be a listen API that uses UPnP to request a hole in a 
firewall.

Still, listening is a one-off event.  So if you can at least return a 
Deferred from your listen API, then when the Deferred fires, you have 
your "started listening" notification.
>
>per transport connection events:
>- on transport creation                 <none exists?why?>      <after 
>connect() or listen() returns result, at this point
>                                                                 we may 
>decide to prevent further transport instantiation,
>especially if we are server-side protocol factory>

The factory can choose to do this in buildProtocol.
>- transport creation failed             clientConnectionFailed 
><server: direct analogy - accept() may return an error,
>                                                                 but 
>that event not exists for server. why?>

I don't think accept() failing is really analogous to 
clientConnectionFailed.  Nevertheless, exposing accept() failures to 
application code is definitely a good idea.  There's currently a ticket 
open for adding that feature.
>- transport created succesfully         buildProtocol           <a 
>request to build a protocol instance implies, that
>transport instance have been succesfully created. or not?>
>- build protocol                        buildProtocol

In general, no such implication exists.  It just means someone wants a 
new protocol instance to do something with.  Usually that's because 
there's a new transport to connect it to, but maybe it's just a unit 
test calling the method.
>- after transport and protocol creation clientConnectionMade    <in 
>t.s.pb.PBXXXXFactory, event sent by protocol instance,
>                                                                 name 
>not defined in any Interface, why not?>


PB wanted to put some logic on the factory when a new connection was 
first established.  I'm not sure why it does this instead of putting the 
logic in Protocol.connectionMade.
>- transport closed                      clientConnectionLost    <why 
>not define this for server too to be consistent?>

Consistency is alright, but sometimes it's not a sufficient 
justification.  Over the years, I think the *existence* of 
ClientFactory.clientConnectionLost has caused more confusion and 
questions than the *lack* of ServerFactory.clientConnectionLost.  In 
both cases, the information is available from Protocol.connectionLost.
>They are not client/servers asymmetric as I see them, but have 
>asymmetric names in twisted
>and sometimes when server variants exists, they have no fixed names 
>defined in Interface classes :(
>
>What is the difference between doStart and startedConnecting (together 
>with imaginary startedListening)?

doStart is called when a factory is hooked up to a network event source. 
That means there'll probably be just one call to doStart.  For a 
reconnecting client factory, startedConnecting may be called many times.

But really, doStart/startFactory/doStop/stopFactory are pretty obscure 
and rarely used.  I wouldn't be surprised if we could come up with a 
better way to present this information pretty easily.
>And who is responsible for sending which events? That is not defined in 
>documentation.

The reactor implementation.  There's no "how to implement a reactor" 
document because people don't do that very often.
>What do you think about these names:
>doStart()
>transportFactoryStarted()
>onBeforeTransportCreate()
>connectionFailed()
>buildProtocol()
>connectionMade()
>connectionLost()
>doStop()
>Well, I understand, you will veto them arguing by lot of code using old 
>names,
>but I am interested to know will they break the abstraction of protocol 
>factory?

What are they methods on?  What are the precise semantics of each?
>Can please anyone explain the asymmetry of the interfaces of protocol 
>factories
>and tell how can it be useful for me.

There's a lot of noise amongst the long-time Twisted developers about 
how client factories are no good and we should just dump them, leaving 
only server factories.  That doesn't exactly make things symmetric, but 
it gets rid of the asymmetric factory interfaces. :)
>Thanks for your time.
>
>Alexey.
>
>--
>D1 D3C2C0C6C5CDC8C5CC,
>A0CBC5CAD1C5C9 B8CFC0C3C8CD
>D1C8D1D2C5CCCDDBC9 C0C4CCC8CDC8D1D2D0C0D2CED0
>D6C5D5C0 CFC5D0C5C4C0D7C8 C4C0CDCDDBD5
>D2C5D5CDC8D7C5D1CACEC3CE D6C5CDD2D0C0 D2C5CBC5CACECCCCD3CDC8CAC0D6C8C9
>AEA0AE "A2CECBC3C0B2C5CBC5CACECC"
>D4C8CBC8C0CB C2 B3C4CCD3D0D2D1CACEC9 D0C5D1CFD3C1CBC8CAC5.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From drken567 at gmail.com  Thu Jul 15 14:32:33 2010
From: drken567 at gmail.com (Ken MacDonald)
Date: Thu, 15 Jul 2010 16:32:33 -0400
Subject: [Twisted-Python] Deferred instance has no attribute '__getitem__'
	??????
Message-ID: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>

I have a function and two convenience functions, like this:

    @defer.inlineCallbacks
    def round_value_and_percent(id, value, percent):
            daily = 1.

            params = dict(nutidin=id, valuein=value, dvin=daily)
            query = "ROUND_NUT_DV"
            q_result = yield named_query_param(ctx, "nut", query, params)
// db query
            rounded = {}
            rounded["value"] = q_result[0][0]
            rounded["percent"] = q_result[0][1]
            defer.returnValue((rounded['value'], rounded['percent']))

    @defer.inlineCallbacks
    def round_val(id, value, rule):
        """
        Return first element of round_value_and_percent
        """
        defer.returnValue(round_value_and_percent(id, value, 0, rule)[0])


    @defer.inlineCallbacks
    def round_per(id, percent, rule):
        """
        Return second element of round_value_and_percent.
        """
        defer.returnValue(round_value_and_percent(id, 0, percent, rule)[1])

When I do:
result = yield round_val(1, 2, 3)

I get this: Deferred instance has no attribute '__getitem__'

Clues appreciated!
Ken
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100715/fd171361/attachment.html>

From washort at twistedmatrix.com  Thu Jul 15 14:58:10 2010
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 15 Jul 2010 13:58:10 -0700
Subject: [Twisted-Python] Deferred instance has no attribute
	'__getitem__' ??????
In-Reply-To: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
References: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
Message-ID: <AANLkTini7voL_kcPbEOLqyxGvHLnpg6KTB1Mm9cB2tg0@mail.gmail.com>

>     @defer.inlineCallbacks
>     def round_val(id, value, rule):
>         """
>         Return first element of round_value_and_percent
>         """
>         defer.returnValue(round_value_and_percent(id, value, 0, rule)[0])

> When I do:
> result = yield round_val(1, 2, 3)
>
> I get this: Deferred instance has no attribute '__getitem__'
>

round_value_and_percent returns a Deferred. You probably want:

     @defer.inlineCallbacks
     def round_val(id, value, rule):
         """
         Return first element of round_value_and_percent
         """
        x = yield round_value_and_percent(id, value, 0, rule)
         defer.returnValue(x[0])



From db3l.net at gmail.com  Thu Jul 15 17:18:23 2010
From: db3l.net at gmail.com (David Bolen)
Date: Thu, 15 Jul 2010 19:18:23 -0400
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
	multiple A records?
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
Message-ID: <m2eif449mo.fsf@valheru.db3l.homeip.net>

Luke Marsden <luke-lists at hybrid-logic.co.uk> writes:

> We're actually using it to provide redundancy in this instance. In our
> application any request for any site can be made to any (live) server,
> so having dead servers in the pool of A records doesn't matter so long
> as real web browsers failover to some other A record within a second,
> which they do! http://crypto.stanford.edu/dns/dns-rebinding.pdf

Be aware that the time to failover to an alternate A record need not
be that fast depending on the sort of failure involved.  Failover can
only occur quickly as long as the outage (network unreachable, port no
longer active on the host, etc..) is such that the connection attempt
is explicitly rejected by the target host or a router along the way.

If it's a more complicated outage (e.g., a routing loop or total
machine failure) for which no explicit failure response will be
received by the client, you'll be subject to the client's connect
timeout (one per each failing address and attempt to that address it
tries).  These may vary by client and/or platform, but can easily be
30-60s - certainly long enough for the human involved to potentially
want to give up.  Also, since web browsers typically cache DNS
responses, if a bad address is early in the list, a timeout will be
encountered for each and every individual browser request generated.

I did a quick test with a stock FireFox 3.6 under OSX and with a bad
initial A record (non-existent host) it took about 75s to failover to
the next A record.  In my test case even that was unusable since the
host I was referencing had other references to itself needed to load
that home page, and each of those references themselves took another
75 seconds to time out.  So it took more than 2 minutes for me to see
the page I wanted, which I presume most people would give up on.

That's not to say using multiple A records isn't a helpful practice
for many sorts of outages (especially to permit controlled
maintenance).  Just don't expect it to necessarily be sufficient in
all failure modes depending on the behavior you want clients to
experience.

If this is strictly limited to a client you control, it's much less of
an issue, since you can drop the TCP connect timeout much lower than
what it defaults to, though you still probably can't match how fast it
can happen for rejected connections, since you'll want to leave enough
room for occasional latency or response time issues without
immediately failing over.  But you can do a lot better than the system
defaults.

-- David




From glyph at twistedmatrix.com  Thu Jul 15 21:38:44 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 15 Jul 2010 23:38:44 -0400
Subject: [Twisted-Python] Deferred instance has no attribute
	'__getitem__' ??????
In-Reply-To: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
References: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com>
Message-ID: <AF751E95-2C1E-4789-B296-BC404DAA5F21@twistedmatrix.com>


On Jul 15, 2010, at 4:32 PM, Ken MacDonald wrote:

>     @defer.inlineCallbacks
>     def round_val(id, value, rule):
>         """
>         Return first element of round_value_and_percent
>         """
>         defer.returnValue(round_value_and_percent(id, value, 0, rule)[0])

> When I do:
> result = yield round_val(1, 2, 3)
> 
> I get this: Deferred instance has no attribute '__getitem__'
> 
> Clues appreciated!


@inlineCallbacks must decorate only generator functions.

Since 'yield' doesn't appear anywhere in the body of round_val (or, for that matter, round_per) this code will break in other ways.  Allen Short's suggestion will fix your code because it added a 'yield', but you need to be aware of this issue in case there are other such functions in the future that don't actually handle any Deferreds.

Also, inlineCallbacks adds some overhead, and really should only be used when the resulting code is easier to read.  Personally, I think a simpler definition of round_val would be simply

    def round_val(id, value, rule):
        """
        Return first element of round_value_and_percent
        """
        return round_value_and_percent(id, value, 0, rule).addCallback(
            lambda valueAndPercent: valueAndPercent[0]
        )

no @inlineCallbacks required.




From rlotun at gmail.com  Fri Jul 16 07:07:57 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 16 Jul 2010 14:07:57 +0100
Subject: [Twisted-Python] WebSocket Support #4173
Message-ID: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>

Hi All,

As suggested by therve (Thomas) I just wanted to kick off a discussion
about the current state of the WebSocket ticket
(http://http://twistedmatrix.com/trac/ticket/4173).

At the moment there are two patches linked against the ticket - mine
and progrium's (Jeff?). Based on Jeff's comments it seems that while
his patch may contain a more elegant implementation (to be honest, I
haven't looked carefully at it yet), my patch seems to work against
the dev version of chromium.

Is there any way we can work to combine the patches, and extend the unit tests?

Cheers,
Reza


-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From drken567 at gmail.com  Fri Jul 16 07:32:08 2010
From: drken567 at gmail.com (Ken MacDonald)
Date: Fri, 16 Jul 2010 09:32:08 -0400
Subject: [Twisted-Python] Deferred instance has no attribute
	'__getitem__' ??????
In-Reply-To: <AF751E95-2C1E-4789-B296-BC404DAA5F21@twistedmatrix.com>
References: <AANLkTim8AwX-GfRPzrVr42eO-KriFl3eXtNceB2i7eCZ@mail.gmail.com> 
	<AF751E95-2C1E-4789-B296-BC404DAA5F21@twistedmatrix.com>
Message-ID: <AANLkTimeNtEamcy5ogpOIfVH-UVZeHNpoOcR9maA4eJr@mail.gmail.com>

Thanks for the assist, we ended up using something quite  similar to this.
I'm refactoring a portion of an app that was originally all in python, but
now some functions were required to use the DB stored procedures instead for
compatibility, and they weren't designed to be used in Twisted-fashion! On
to the next interesting Twisted problem.....
Ken

@inlineCallbacks must decorate only generator functions.
>
> Since 'yield' doesn't appear anywhere in the body of round_val (or, for
> that matter, round_per) this code will break in other ways.  Allen Short's
> suggestion will fix your code because it added a 'yield', but you need to be
> aware of this issue in case there are other such functions in the future
> that don't actually handle any Deferreds.
>
> Also, inlineCallbacks adds some overhead, and really should only be used
> when the resulting code is easier to read.  Personally, I think a simpler
> definition of round_val would be simply
>
>    def round_val(id, value, rule):
>        """
>        Return first element of round_value_and_percent
>        """
>         return round_value_and_percent(id, value, 0, rule).addCallback(
>            lambda valueAndPercent: valueAndPercent[0]
>        )
>
> no @inlineCallbacks required.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100716/82d50c8b/attachment.html>

From luke-lists at hybrid-logic.co.uk  Fri Jul 16 13:24:13 2010
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Fri, 16 Jul 2010 20:24:13 +0100
Subject: [Twisted-Python] Twisted HTTP client supporting failover for
 multiple A records?
In-Reply-To: <m2eif449mo.fsf@valheru.db3l.homeip.net>
References: <1279182807.8628.6.camel@pow>
	<AANLkTilVYiI9BLZpz4UWLvLkok-8D5XppYhhuXNVgqMN@mail.gmail.com>
	<1279195560.1619.8.camel@blake> <1279197221.8628.119.camel@pow>
	<m2eif449mo.fsf@valheru.db3l.homeip.net>
Message-ID: <1279308253.2622.298.camel@pow>

Hi David,

> That's not to say using multiple A records isn't a helpful practice
> for many sorts of outages (especially to permit controlled
> maintenance).  Just don't expect it to necessarily be sufficient in
> all failure modes depending on the behavior you want clients to
> experience.

Indeed, in our application it's considered an optimisation over DNS
failover. This is why we also use a low TTL (30 seconds) to purge the
bad A records out of the pool as soon as possible.

> If this is strictly limited to a client you control, it's much less of
> an issue, since you can drop the TCP connect timeout much lower than
> what it defaults to, though you still probably can't match how fast it
> can happen for rejected connections, since you'll want to leave enough
> room for occasional latency or response time issues without
> immediately failing over.  But you can do a lot better than the system
> defaults.

Unfortunately we have no control over the clients' configuration (this
is a LAMP web hosting environment). But 30 seconds is considered much
more acceptable than the days it can often take a manual repair job if a
server goes down.

-- 
Best Regards,
Luke Marsden
Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting based on FreeBSD and ZFS

Mobile: +447791750420




From exarkun at twistedmatrix.com  Sat Jul 17 09:21:10 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 17 Jul 2010 15:21:10 -0000
Subject: [Twisted-Python] WebSocket Support #4173
In-Reply-To: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
References: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
Message-ID: <20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>

On 16 Jul, 01:07 pm, rlotun at gmail.com wrote:
>Hi All,
>
>As suggested by therve (Thomas) I just wanted to kick off a discussion
>about the current state of the WebSocket ticket
>(http://http://twistedmatrix.com/trac/ticket/4173).
>
>At the moment there are two patches linked against the ticket - mine
>and progrium's (Jeff?). Based on Jeff's comments it seems that while
>his patch may contain a more elegant implementation (to be honest, I
>haven't looked carefully at it yet), my patch seems to work against
>the dev version of chromium.
>
>Is there any way we can work to combine the patches, and extend the 
>unit tests?

I'm not invested in websockets at this point.  I'm not using them for 
anything and I don't anticipate using them for anything in the 
foreseeable future.

That said, as a lot of people seem to be excited about them, I hope 
Twisted will eventually have nice support for them.

It seems like the pace of revision of the specification demands 
something different from Twisted's normal development/release cycle 
though.  How would people feel about taking the code from #4173 and 
developing it outside of Twisted until the specification is finalized, 
then moving it back in?  As far as I know, it should be equally easy to 
implement as an external feature for Twisted Web as it is to do as an 
integral part.  And since there are so many people interested in this, 
moving the source into a VCS with a better distributed workflow and 
better merging features seems to make sense.

Jean-Paul



From konrads at smelkovs.com  Sun Jul 18 02:58:30 2010
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Sun, 18 Jul 2010 11:58:30 +0300
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com> 
	<AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com> 
	<5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>
Message-ID: <AANLkTinNMv9NRzkXuse8BCBQNxAoMCpQPGvok2Id5TBO@mail.gmail.com>

Not unless it drops it on the floor as opposed to reject with icmp
--
Konrads Smelkovs
Applied IT sorcery.


2010/7/14 Jarosław Fedewicz <jaroslaw.fedewicz at gmail.com>

>
> On 14 лип. 2010, at 17:18, Konrads Smelkovs wrote:
>
> > Maybe there is a firewall that limits incoming connections?
> > --
> > Konrads Smelkovs
> > Applied IT sorcery.
>
> Even if it drops packets, it should not block. It should return immediately
> with a Deferred, which will eventually fail.
>
> --
> Engineer: How do we do it?
> Economist: How much does it cost?
> Twisted Developer: Will it block?
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100718/f0817de1/attachment-0001.html>

From exarkun at twistedmatrix.com  Sun Jul 18 07:36:34 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jul 2010 13:36:34 -0000
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTinNMv9NRzkXuse8BCBQNxAoMCpQPGvok2Id5TBO@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<AANLkTinnVASFVEk8OxOtbMUaZGTK7Ps5pgUIX4Yot2Kz@mail.gmail.com>
	<5B27254D-912C-4855-8D66-62A50F14092E@gmail.com>
	<AANLkTinNMv9NRzkXuse8BCBQNxAoMCpQPGvok2Id5TBO@mail.gmail.com>
Message-ID: <20100718133634.26967.620803649.divmod.xquotient.8@localhost.localdomain>

On 08:58 am, konrads at smelkovs.com wrote:
>Not unless it drops it on the floor as opposed to reject with icmp

No.  It should never block.

Jean-Paul
>--
>Konrads Smelkovs
>Applied IT sorcery.
>
>
>2010/7/14 Jaros2aw Fedewicz <jaroslaw.fedewicz at gmail.com>
>>
>>On 14 CBC8CF. 2010, at 17:18, Konrads Smelkovs wrote:
>>
>> > Maybe there is a firewall that limits incoming connections?
>> > --
>> > Konrads Smelkovs
>> > Applied IT sorcery.
>>
>>Even if it drops packets, it should not block. It should return 
>>immediately
>>with a Deferred, which will eventually fail.
>>
>>--
>>Engineer: How do we do it?
>>Economist: How much does it cost?
>>Twisted Developer: Will it block?
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at twistedmatrix.com  Sun Jul 18 08:15:42 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jul 2010 14:15:42 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1279462542.18.666437835@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100718/08da5e7f/attachment.html>

From glyph at twistedmatrix.com  Sun Jul 18 14:08:04 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 18 Jul 2010 16:08:04 -0400
Subject: [Twisted-Python] WebSocket Support #4173
In-Reply-To: <20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>
References: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
	<20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>
Message-ID: <04F73A4E-5DA1-4C5E-8B70-8BD49CE20AF2@twistedmatrix.com>


On Jul 17, 2010, at 11:21 AM, exarkun at twistedmatrix.com wrote:

> It seems like the pace of revision of the specification demands 
> something different from Twisted's normal development/release cycle 
> though.  How would people feel about taking the code from #4173 and 
> developing it outside of Twisted until the specification is finalized, 
> then moving it back in?  As far as I know, it should be equally easy to 
> implement as an external feature for Twisted Web as it is to do as an 
> integral part.  And since there are so many people interested in this, 
> moving the source into a VCS with a better distributed workflow and 
> better merging features seems to make sense.


It looks like this suggestion has already been acted upon: <http://github.com/rlotun/txWebSocket>.  I noted the same on the ticket.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100718/a51dec42/attachment-0001.html>

From rlotun at gmail.com  Sun Jul 18 14:16:15 2010
From: rlotun at gmail.com (Reza Lotun)
Date: Sun, 18 Jul 2010 21:16:15 +0100
Subject: [Twisted-Python] WebSocket Support #4173
In-Reply-To: <04F73A4E-5DA1-4C5E-8B70-8BD49CE20AF2@twistedmatrix.com>
References: <AANLkTilJ7O4SidjiWfCejzD0JnlSA69vN1dXOozMPnhw@mail.gmail.com>
	<20100717152110.26967.552451181.divmod.xquotient.7@localhost.localdomain>
	<04F73A4E-5DA1-4C5E-8B70-8BD49CE20AF2@twistedmatrix.com>
Message-ID: <AANLkTikaMFkm8oIB_tG0cwYwPFkpyMCoM3kiMdHkBZGL@mail.gmail.com>

On Sun, Jul 18, 2010 at 9:08 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> It looks like this suggestion has already been acted upon:
> <http://github.com/rlotun/txWebSocket>.  I noted the same on the ticket.

Thanks glyph, was just about to mention that. Everyone is welcome to
submit issues against that regarding Twisted WebSocket support. As
soon as the spec settles down we can bring the discussion back to the
ticket for proper review etc.

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   reza at tweetdeck.com
twitter: @rlotun



From zooko at zooko.com  Mon Jul 19 10:12:49 2010
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Mon, 19 Jul 2010 10:12:49 -0600
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.7.1
Message-ID: <AANLkTik7g0RIOr72WYneUumTkJQiWG2O99VRywDIqz4U@mail.gmail.com>

ANNOUNCING Tahoe, the Least-Authority File System, v1.7.1

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.7.1 of Tahoe-LAFS, an extremely
reliable distributed storage system.

Tahoe-LAFS is the first distributed storage system which
offers "provider-independent security"—meaning that not even
the operators of your storage servers can read or alter your
data without your consent. Here is the one-page explanation of
its unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

Tahoe-LAFS v1.7.1 is the successor to v1.7.0, which was
released June 18, 2010 [1].

v1.7.1 is a stable minor release which adds several bugfixes
and improvements in security, forward-compatibility,
packaging, usability, and portability. See the NEWS file [2]
for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers are
compromised by by an attacker, the entire filesystem continues
to work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers have
built other projects on top of Tahoe-LAFS and have integrated
Tahoe-LAFS with existing systems.

These include frontends for Windows, Macintosh, JavaScript,
iPhone, and Android, and plugins for Hadoop, bzr, mercurial,
duplicity, TiddlyWiki, and more. See the Related Projects page
on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or "cloud storage" systems.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all currently known issues please see the
known_issues.txt file [4].)


COMPATIBILITY

This release is fully compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the tenth release in the version 1 series. This series
of Tahoe-LAFS will be actively supported and maintained for
the forseeable future, and future versions of Tahoe-LAFS will
retain the ability to read and write files compatible with
this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they have continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports. Thank you to Allmydata,
Inc. for their generous and public-spirited support.

Google, Inc. is sponsoring Tahoe-LAFS development as part of
the Google Summer of Code 2010. Google suggested that we
should apply for the Summer of Code program, and when we did
they generously awarded four sponsorships to students from
around the world to hack on Tahoe-LAFS this summer. Thank you
to Google, Inc. for their generous and public-spirited
support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the fifth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

David-Sarah Hopwood and Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

July 18, 2010
Rainhill, Merseyside, UK and Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4514
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=4577
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.txt
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=4567
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/



From jasonjwwilliams at gmail.com  Mon Jul 19 11:19:59 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Mon, 19 Jul 2010 11:19:59 -0600
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
Message-ID: <AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>

Hey Glyph,

Sorry it took me a week...thanks for looking at it. This is an
approximation of just the SMTP logic that I thought was blocking. It
appears not to block, but has an issue executing the other deferreds.

http://gist.github.com/481684

-J

On Mon, Jul 12, 2010 at 6:53 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Jul 12, 2010, at 8:51 PM, Jason J. W. Williams wrote:
>
> Are TCP connects in Twisted usually blocking? Noticing a behavior when
> I've got several simultaneous SMTP client objects operating, where
> when one of them hits a server that times out on the connect...the
> program blocks until the connect times out. Everything else is working
> async/non-blocking as expected.
>
> They're absolutely not supposed to be!  If you can reproduce this, you've
> definitely found a bug.  (A quick search doesn't turn up any existing bugs.)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From glyph at twistedmatrix.com  Mon Jul 19 21:35:47 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Jul 2010 23:35:47 -0400
Subject: [Twisted-Python] [Twisted-web] Mirror Down
In-Reply-To: <20100720022017.27251.420066821.divmod.xquotient.75@localhost.localdomain>
References: <4C4452EC.2060202@gmail.com>
	<20100720022017.27251.420066821.divmod.xquotient.75@localhost.localdomain>
Message-ID: <EC49D719-F997-4FB3-95B5-9C894C35B914@twistedmatrix.com>


On Jul 19, 2010, at 10:20 PM, exarkun at twistedmatrix.com wrote:

> On 19 Jul, 01:28 pm, nickpholden at gmail.com wrote:
>> Hi,
>> 
>> The main mirror for the twisted download is down, this is causing
>> easy_install to hang for ages and fail when I try and install:
> 
> For Twisted 10.1, we took the extra step of loading the tarball to PyPI 
> to address this issue.  Apparently that was pointless, though?  Because 
> easy_install doesn't care about the downloads available on PyPI?  It'd 
> be good to know if this is the case, so we can consider whether or not 
> to waste the time for the next release.

As an experiment, I took the _additional_ step of updating the "download_url" field to point at the PyPI URL, <http://pypi.python.org/packages/source/T/Twisted/Twisted-10.1.0.tar.bz2>.

Before I did this, easy_install selected the download link from twistedmatrix.com.  Now, it reliably selects the PyPI URL first.

Looking at the history now, I can see that therve actually updated the download_url to something else already, but now I can't see what he set it to.  Maybe it was pointing at "twistedmatrix.com" and that's why it was screen-scraping?

I am not sure how to *remove* the download_url, though; it might be interesting to see what PyPI does in that case.

Can anyone with some more direct knowledge of how PyPI works comment on this?

(Cross-posting to the main Twisted list because this is of general interest.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100719/ea1b66c6/attachment.html>

From glyph at twistedmatrix.com  Mon Jul 19 21:45:51 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Jul 2010 23:45:51 -0400
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
	<AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
Message-ID: <C543E9D9-28C0-4B79-99F0-5794CE664409@twistedmatrix.com>


On Jul 19, 2010, at 1:19 PM, Jason J. W. Williams wrote:

> Sorry it took me a week...thanks for looking at it. This is an
> approximation of just the SMTP logic that I thought was blocking. It
> appears not to block, but has an issue executing the other deferreds.
> 
> http://gist.github.com/481684

Well, whew!  I'm glad that you haven't discovered a bug that serious, at least :).

(Apologies that I don't have the energy to sift through all that code and figure out what the problem is right now.  If you wrote a unit test it would probably be easier to check into; not that I'm promising anything myself...)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100719/996f4fcf/attachment.html>

From ssoni at nextdigital.com  Tue Jul 20 01:13:44 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Tue, 20 Jul 2010 07:13:44 +0000
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>

Hi There,

Does Twisted support or is there any way of loading intermediate CA certs from a chain file?

I have a SSL certificate issued by Thawte, but my system administrator says as quoted:

Looks like you may need to install an Intermediary certificate. Relevant certs for Thawte can be found at https://search.thawte.com/support/ssl-digital-certificates/index?page=content&actp=CROSSLINK&id=SO13881

I am not sure, how to generate a chain file and later, how to use it in twisted ssl enabled server.

At the moment, I am using following line of code:

root_ssl_service = internet.SSLServer(443, site_ssl,
            DefaultOpenSSLContextFactory(
                privateKeyFileName="cert/server.key",
                certificateFileName="cert/server.pem"))


Thanks in advance.

Sury
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100720/d4887cdf/attachment.html>

From exarkun at twistedmatrix.com  Tue Jul 20 07:47:14 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 20 Jul 2010 13:47:14 -0000
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
In-Reply-To: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
Message-ID: <20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>

On 07:13 am, ssoni at nextdigital.com wrote:
>Hi There,
>
>Does Twisted support or is there any way of loading intermediate CA 
>certs from a chain file?

Twisted uses pyOpenSSL for it's SSL support.  So you can do pretty much 
anything pyOpenSSL allows.  http://packages.python.org/pyOpenSSL 
/openssl-context.html documents the Context interface; in particular the 
use_certificate_chain_file might be interesting.  However, I recently 
had a conversation with someone who was using this method and still 
couldn't get their chain certificate to work reliably.  I think he's 
still trying to track down the issue.

Jean-Paul



From konrads at smelkovs.com  Tue Jul 20 08:58:01 2010
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Tue, 20 Jul 2010 17:58:01 +0300
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
In-Reply-To: <20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
	<20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>
Message-ID: <AANLkTimPYmj3sB41GX4-YgKI5Bm4hWsY1GztY3NM2eei@mail.gmail.com>

what i recommend is to add all chain in one file using openssl kit
(maybe just cat'ing works). However, most certs issued nowadays
contain the chain already in. You can check with openssl x509 -in
cert.pem -text and see the attached signers cerificate in base64, copy
that to a new.pem and repeat. You can walk this way up the chain to
root cert. If you can, the chaining is not your problem.
Try playing with openssl toolkit alone and see what it says about cert and key.

2010/7/20, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> On 07:13 am, ssoni at nextdigital.com wrote:
>>Hi There,
>>
>>Does Twisted support or is there any way of loading intermediate CA
>>certs from a chain file?
>
> Twisted uses pyOpenSSL for it's SSL support.  So you can do pretty much
> anything pyOpenSSL allows.  http://packages.python.org/pyOpenSSL
> /openssl-context.html documents the Context interface; in particular the
> use_certificate_chain_file might be interesting.  However, I recently
> had a conversation with someone who was using this method and still
> couldn't get their chain certificate to work reliably.  I think he's
> still trying to track down the issue.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
Nosūtīts no manas mobilās ierīces

--
Konrads Smelkovs
Applied IT sorcery.



From ssoni at nextdigital.com  Tue Jul 20 20:26:37 2010
From: ssoni at nextdigital.com (Sury Soni)
Date: Wed, 21 Jul 2010 02:26:37 +0000
Subject: [Twisted-Python] loading intermediate CA certs from a chain file
In-Reply-To: <AANLkTimPYmj3sB41GX4-YgKI5Bm4hWsY1GztY3NM2eei@mail.gmail.com>
References: <6CD03B2AA6AE4747BAF3A0D5EEEF72860451C3@exmbx01.corp.nextdigital.com>
	<20100720134714.27251.168869149.divmod.xquotient.135@localhost.localdomain>
	<AANLkTimPYmj3sB41GX4-YgKI5Bm4hWsY1GztY3NM2eei@mail.gmail.com>
Message-ID: <6CD03B2AA6AE4747BAF3A0D5EEEF728604532B@exmbx01.corp.nextdigital.com>

I was able to solve this problem by writing following class. Thank you JP for pointing me to use_certificate_chain_file function.

class ChainedOpenSSLContextFactory(DefaultOpenSSLContextFactory):
    def __init__(self, privateKeyFileName, certificateChainFileName,
                 sslmethod=SSL.SSLv23_METHOD):
        """
        @param privateKeyFileName: Name of a file containing a private key
        @param certificateChainFileName: Name of a file containing a certificate chain
        @param sslmethod: The SSL method to use
        """
        self.privateKeyFileName = privateKeyFileName
        self.certificateChainFileName = certificateChainFileName
        self.sslmethod = sslmethod
        self.cacheContext()
    
    def cacheContext(self):
        ctx = SSL.Context(self.sslmethod)
        ctx.use_certificate_chain_file(self.certificateChainFileName)
        ctx.use_privatekey_file(self.privateKeyFileName)
        self._context = ctx

And I used it in place of DefaultOpenSSLContextFactory like this:

ssl_service = internet.SSLServer(443, site_ssl, 
            ChainedOpenSSLContextFactory(
                privateKeyFileName="cert/server.key",
                certificateChainFileName="cert/chain.pem", 
                sslmethod = SSL.SSLv3_METHOD))

Where chain.pem was cat'ing version of my certificate + CA certificate + ROOT certificate. Thank you Konards for suggesting me this cat'ing thing.

If anyone still have problem in this area, they will have to track correct chain of certificates. I myself got stuck in choosing correct CA certificate, since Thawte have many different CA certificate for different purpose. Eventually, I was fine with choosing the right one.

Cheers.

-Sury

---------------------
what i recommend is to add all chain in one file using openssl kit (maybe just cat'ing works). However, most certs issued nowadays contain the chain already in. You can check with openssl x509 -in cert.pem -text and see the attached signers cerificate in base64, copy that to a new.pem and repeat. You can walk this way up the chain to root cert. If you can, the chaining is not your problem.
Try playing with openssl toolkit alone and see what it says about cert and key.

2010/7/20, exarkun at twistedmatrix.com <exarkun at twistedmatrix.com>:
> On 07:13 am, ssoni at nextdigital.com wrote:
>>Hi There,
>>
>>Does Twisted support or is there any way of loading intermediate CA 
>>certs from a chain file?
>
> Twisted uses pyOpenSSL for it's SSL support.  So you can do pretty 
> much anything pyOpenSSL allows.  http://packages.python.org/pyOpenSSL
> /openssl-context.html documents the Context interface; in particular 
> the use_certificate_chain_file might be interesting.  However, I 
> recently had a conversation with someone who was using this method and 
> still couldn't get their chain certificate to work reliably.  I think 
> he's still trying to track down the issue.
>
> Jean-Paul


--
Konrads Smelkovs
Applied IT sorcery.


From smdugan01 at gmail.com  Tue Jul 20 23:37:14 2010
From: smdugan01 at gmail.com (Sean Dugan)
Date: Wed, 21 Jul 2010 01:37:14 -0400
Subject: [Twisted-Python] Client/Server upload problem
Message-ID: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>

I can't seem to figure out how a client uploads a file to the server using
twisted.protocols.ftp. For the server side I am using the ftpserver example
from the twisted website. For the client I have the following:

from twisted.protocols.ftp import FTPClient, FTPFileListProtocol
from twisted.internet.protocol import Protocol, ClientCreator
from twisted.python import usage
from twisted.internet import reactor

from twisted.protocols.basic import FileSender


# Standard library imports
import string
import sys
try:
    from cStringIO import StringIO
except ImportError:
    from StringIO import StringIO


class BufferingProtocol(Protocol):
    """Simple utility class that holds all data written to it in a
buffer."""
    def __init__(self, fileToWrite):
        self.buffer = StringIO()
        self.fileToWrite = fileToWrite

    def dataReceived(self, data):
        self.buffer.write(data)

# Define some callbacks

def success(response):
    print 'Success!  Got response:'
    print '---'
    if response is None:
        print None
    else:
        print string.join(response, '\n')
    print '---'


def fail(error):
    print 'Failed.  Error was:'
    print error

def showFiles(result, fileListProtocol):
    print 'Processed file listing:'
    for file in fileListProtocol.files:
        print '    %s: %d bytes, %s' \
              % (file['filename'], file['size'], file['date'])
    print 'Total: %d files' % (len(fileListProtocol.files))

def showBuffer(result, bufferProtocol):
    print 'Got data:'
    print bufferProtocol.buffer.getvalue()

def writeBufferToFile(result, bufferProtocol):
    f = open(bufferProtocol.fileToWrite, 'w')
    f.write(bufferProtocol.buffer.getvalue())
    f.close()


class Options(usage.Options):
    optParameters = [['host', 'h', 'localhost'],
                     ['port', 'p', 21],
                     ['username', 'u', 'anonymous'],
                     ['password', None, 'bozo'],
                     ['passive', None, 0],
                     ['debug', 'd', 1],
                    ]

def run():
    # Get config
    config = Options()
    config.parseOptions()
    config.opts['port'] = int(config.opts['port'])
    config.opts['passive'] = int(config.opts['passive'])
    config.opts['debug'] = int(config.opts['debug'])

    # Create the client
    FTPClient.debug = config.opts['debug']
    creator = ClientCreator(reactor, FTPClient, config.opts['username'],
                            config.opts['password'],
passive=config.opts['passive'])
    creator.connectTCP(config.opts['host'],
config.opts['port']).addCallback(connectionMade).addErrback(connectionFailed)
    reactor.run()

def connectionFailed(f):
    print "Connection Failed:", f
    reactor.stop()

def fileTransferFail(failure):
    failure.printTraceback()
    reactor.stop()

def cbStore(consumer, filename):
    fs = FileSender()
    d = fs.beginFileTransfer(open(filename, 'r'), consumer)
    d.addCallback(lambda _: consumer.finish()).addErrback(fileTransferFail)
    return d


def connectionMade(ftpClient):
    # Get the current working directory
    ftpClient.pwd().addCallbacks(success, fail)

    # Get a detailed listing of the current directory
    fileList = FTPFileListProtocol()
    d = ftpClient.list('.', fileList)
    d.addCallbacks(showFiles, fail, callbackArgs=(fileList,))

    # Change to the parent directory
    ftpClient.cdup().addCallbacks(success, fail)

    filename = "FtpDownload.txt"
    uploadpath = "FtpUpload.txt"
    d1, d2 = ftpClient.storeFile(uploadpath)
    d1.addCallback(cbStore, filename).addErrback(fileTransferFail)
    d2.addCallback(lambda _: reactor.stop())


# this only runs if the module was *not* imported
if __name__ == '__main__':
    run()

When I run this, it returns “Failure: twisted.protocols.ftp.CommandFailed:
['550 FtpUpload.txt: Permission denied']”. I can download a file, and view
the files in a folder, I just can't upload a file. Also if I log-in as one
the users in the .dat file, instead of anonymous, I can't even view the
files in a folder. So is there a way to give anonymous or a user in the .dat
file more permissions, like the write permission?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100721/3a80b7e5/attachment-0001.html>

From albert.brandl at weiermayer.com  Wed Jul 21 01:14:32 2010
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 21 Jul 2010 09:14:32 +0200
Subject: [Twisted-Python] Uses of StringIO instead of cStringIO
Message-ID: <20100721071432.GA4028@weiermayer.com>

Hi!

There are several modules in twisted that import StringIO instead of
cStringIO (e.g. twisted/mail/maildir.py, twisted/news/nntp.py, 
twisted/web/script.py). Are there any reasons why they use the slower
variant implemented in Python instead of the C variant?

If not, I'd like to create a ticket to fix these imports.
-- 

Best regards,

Albert Brandl

Weiermayer Solutions GmbH
Abteistraße 12
A-4813 Altmünster
phone: +43 (0) 720 70 30 14
fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com 



From andrew at bemusement.org  Wed Jul 21 04:55:07 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Wed, 21 Jul 2010 20:55:07 +1000
Subject: [Twisted-Python] Uses of StringIO instead of cStringIO
In-Reply-To: <20100721071432.GA4028@weiermayer.com>
References: <20100721071432.GA4028@weiermayer.com>
Message-ID: <20100721105507.GC14973@steerpike.home.puzzling.org>

Albert Brandl wrote:
> Hi!
> 
> There are several modules in twisted that import StringIO instead of
> cStringIO (e.g. twisted/mail/maildir.py, twisted/news/nntp.py, 
> twisted/web/script.py). Are there any reasons why they use the slower
> variant implemented in Python instead of the C variant?
> 
> If not, I'd like to create a ticket to fix these imports.

It appears someone has gotten there first — take a look at trunk :)

-Andrew.




From nathan.stocks at gmail.com  Wed Jul 21 18:30:40 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 21 Jul 2010 17:30:40 -0700
Subject: [Twisted-Python] trial newbie
Message-ID: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>

Okay, so I'm just starting to learn how to use trial (I know, I'm a
bad, bad boy), and I'm having trouble getting started.

The trial page[1] says "Tests that subclass the standard library
TestCase and don't do anything "too weird" should be able to be
discoverable and runnable by the Trial test runner without the authors
of those tests having to jump through hoops."

So I made a small concept file to try that out:

=-=-=-=-=-=-=-
#!/usr/bin/env python

import unittest, sys
from distutils import version

class TestPrerequsites(unittest.TestCase):
   def setUp(self):
      pass

   def test_00(self):
      "Supported OS?"
      self.assertTrue(sys.platform in ['darwin'])

if __name__ == '__main__':
   unittest.main()
=-=-=-=-=-=-=-


I named it 'test.py' and made sure it worked with python:


=-=-=-=-=-=-=-
$ python test.py -v
Supported OS? ... ok

----------------------------------------------------------------------
Ran 1 test in 0.000s

OK
=-=-=-=-=-=-=-


and then I tried running it in trial under Twisted 8.2.0 on OS
10.6...and it crashed...sorta.  A traceback was output, but after the
traceback stuff it also seemed to run the test.  So I thought, "I
probably just need to upgrade."  So I upgraded to Twisted 10.1.0 and
ran it again.  It still crashed...sorta.  Here's what it looks like.

$ trial test.py
Traceback (most recent call last):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 295, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/scripts/trial.py",
line 281, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 199, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/plugin.py",
line 178, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 745, in setContent
    f = sib.open('w')
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 495, in open
    return self.create()
  File "/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/python/filepath.py",
line 771, in create
    fdint = os.open(self.path, _CREATE_FLAGS)
exceptions.OSError: [Errno 13] Permission denied:
'/Library/Python/2.6/site-packages/Twisted-10.1.0-py2.6-macosx-10.6-universal.egg/twisted/plugins/n8ARdewBqzybvuUpdropin.cache.new'
test
  TestPrerequsites
    test_00 ...                                                            [OK]

-------------------------------------------------------------------------------
Ran 1 tests in 0.023s

PASSED (successes=1)


Anyone know what's going on?  I installed/upgraded version 10.1.0 by
downloading the tarball and running "sudo python setup.py install"

~ Nathan

[1] http://twistedmatrix.com/documents/current/api/twisted.trial.html



From ltaylor.volks at gmail.com  Wed Jul 21 19:29:42 2010
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 21 Jul 2010 20:29:42 -0500
Subject: [Twisted-Python] trial newbie
In-Reply-To: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>
References: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>
Message-ID: <4C479F06.5080000@gmail.com>

On 7/21/10 7:30 PM, Nathan wrote:

> Anyone know what's going on?  I installed/upgraded version 10.1.0 by
> downloading the tarball and running "sudo python setup.py install"

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions
FAQ 3.20
(Search for "Permission denied")

You can follow the advice there, or you should also be able to run "sudo
twistd --help" to rewrite the plugin cache and get rid of the error.






From mithrandi at mithrandi.net  Wed Jul 21 22:06:06 2010
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Thu, 22 Jul 2010 06:06:06 +0200
Subject: [Twisted-Python] Client/Server upload problem
In-Reply-To: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>
References: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>
Message-ID: <AANLkTimIBy2Vx3UpG6h9rOc54e8sMgmRbnyxobUeigUv@mail.gmail.com>

On Wed, Jul 21, 2010 at 7:37 AM, Sean Dugan <smdugan01 at gmail.com> wrote:
> When I run this, it returns “Failure: twisted.protocols.ftp.CommandFailed:
> ['550 FtpUpload.txt: Permission denied']”. I can download a file, and view
> the files in a folder, I just can't upload a file. Also if I log-in as one
> the users in the .dat file, instead of anonymous, I can't even view the
> files in a folder. So is there a way to give anonymous or a user in the .dat
> file more permissions, like the write permission?

The ftpserver.py example uses twisted.protocols.ftp.FTPRealm, which
returns an FTPAnonymousShell instance wrapped around the given path
for anonymous users, and an FTPShell instance wrapped around
/home/username for authenticated users. FTPAnonymousShell does not
allow anything other than read-only access, and /home/yourselecteduser
possibly doesn't even exist on your system. You probably want to write
your own realm implementation that does things a little differently;
you can look at the implementation of FTPRealm to get started, it
isn't very complicated.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From nathan.stocks at gmail.com  Thu Jul 22 00:16:58 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 21 Jul 2010 23:16:58 -0700
Subject: [Twisted-Python] trial newbie
In-Reply-To: <4C479F06.5080000@gmail.com>
References: <AANLkTileInboPUKvozcq1hav2tiNhw91UbqiagChkxsb@mail.gmail.com>
	<4C479F06.5080000@gmail.com>
Message-ID: <AANLkTinH7IX5p_UMD1BIeV8bynNUfuUsy38bi2omj3oW@mail.gmail.com>

On Wed, Jul 21, 2010 at 6:29 PM, Lucas Taylor <ltaylor.volks at gmail.com> wrote:
> On 7/21/10 7:30 PM, Nathan wrote:
>
>> Anyone know what's going on?  I installed/upgraded version 10.1.0 by
>> downloading the tarball and running "sudo python setup.py install"
>
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions
> FAQ 3.20
> (Search for "Permission denied")
>
> You can follow the advice there, or you should also be able to run "sudo
> twistd --help" to rewrite the plugin cache and get rid of the error.

That was it, thanks!  I ran "sudo twistd --help" like you suggested
and now everything runs without error.

~ Nathan



From smdugan01 at gmail.com  Thu Jul 22 10:43:00 2010
From: smdugan01 at gmail.com (Sean Dugan)
Date: Thu, 22 Jul 2010 12:43:00 -0400
Subject: [Twisted-Python] Client/Server upload problem
In-Reply-To: <AANLkTimIBy2Vx3UpG6h9rOc54e8sMgmRbnyxobUeigUv@mail.gmail.com>
References: <AANLkTimurH6XnWqBVCVPPRe0Q0ohPLyeLBtMIupUXpJy@mail.gmail.com>
	<AANLkTimIBy2Vx3UpG6h9rOc54e8sMgmRbnyxobUeigUv@mail.gmail.com>
Message-ID: <AANLkTimVbIbawP_hzUz6d0mhFRwMERGiKeJkjUcHKhwc@mail.gmail.com>

Creating my own FTPRealm implementation fixed my problem, now I can upload.
It worked great, thanks a lot for your help.

On Thu, Jul 22, 2010 at 12:06 AM, Tristan Seligmann <mithrandi at mithrandi.net
> wrote:

> On Wed, Jul 21, 2010 at 7:37 AM, Sean Dugan <smdugan01 at gmail.com> wrote:
> > When I run this, it returns “Failure:
> twisted.protocols.ftp.CommandFailed:
> > ['550 FtpUpload.txt: Permission denied']”. I can download a file, and
> view
> > the files in a folder, I just can't upload a file. Also if I log-in as
> one
> > the users in the .dat file, instead of anonymous, I can't even view the
> > files in a folder. So is there a way to give anonymous or a user in the
> .dat
> > file more permissions, like the write permission?
>
> The ftpserver.py example uses twisted.protocols.ftp.FTPRealm, which
> returns an FTPAnonymousShell instance wrapped around the given path
> for anonymous users, and an FTPShell instance wrapped around
> /home/username for authenticated users. FTPAnonymousShell does not
> allow anything other than read-only access, and /home/yourselecteduser
> possibly doesn't even exist on your system. You probably want to write
> your own realm implementation that does things a little differently;
> you can look at the implementation of FTPRealm to get started, it
> isn't very complicated.
> --
> mithrandi, i Ainil en-Balandor, a faer Ambar
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100722/4cddd23d/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Jul 24 22:05:28 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jul 2010 04:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1280030728.92.1934895521@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100725/ad2e1648/attachment-0001.html>

From lynxluna at gmail.com  Sun Jul 25 06:37:05 2010
From: lynxluna at gmail.com (Didiet Noor)
Date: Sun, 25 Jul 2010 19:37:05 +0700
Subject: [Twisted-Python] How to make a 'router'
Message-ID: <AANLkTinomCKbKJ0mUxG9PBDvynQ4G4JOEpztvFrJXhLd@mail.gmail.com>

Dear All,

I am new in twisted framework, and currently building a twisted app that
will route a packet from one client to multiple servers via TCP connection,
back and forth.

The program will work like this

                               /----> server A
Client --> twisted routing apps ----> server B
                               \----> server C

I also wrote the server apps using twisted by using simple
Int32StringReceiver. I haven't made this kind of application before. So
could you guys give me pointers on how to do that?

Thanks in advance,

LynxLuna
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100725/62467e8d/attachment.html>

From itamar at itamarst.org  Sun Jul 25 07:03:56 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 25 Jul 2010 09:03:56 -0400
Subject: [Twisted-Python] How to make a 'router'
In-Reply-To: <AANLkTinomCKbKJ0mUxG9PBDvynQ4G4JOEpztvFrJXhLd@mail.gmail.com>
References: <AANLkTinomCKbKJ0mUxG9PBDvynQ4G4JOEpztvFrJXhLd@mail.gmail.com>
Message-ID: <1280063036.1583.1.camel@blake>

On Sun, 2010-07-25 at 19:37 +0700, Didiet Noor wrote:
> Dear All,
> 
> I am new in twisted framework, and currently building a twisted app
> that will route a packet from one client to multiple servers via TCP
> connection, back and forth.
> 
> The program will work like this
> 
>                                /----> server A
> Client --> twisted routing apps ----> server B
>                                \----> server C
> 
> 
> I also wrote the server apps using twisted by using simple
> Int32StringReceiver. I haven't made this kind of application before.
> So could you guys give me pointers on how to do that?

Possibly this may help a little:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

along with client and server howtos:
http://twistedmatrix.com/documents/current/core/howto/index.html





From exarkun at twistedmatrix.com  Mon Jul 26 20:39:27 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 27 Jul 2010 02:39:27 -0000
Subject: [Twisted-Python] SMTP Client Blocking Connects
In-Reply-To: <AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
References: <AANLkTik4wx5B7Lr_qviP5b3BKOZgBNMrExfW25pbMXm9@mail.gmail.com>
	<B3B45EF0-0469-439B-89DD-D1BBCFD2DA1A@twistedmatrix.com>
	<AANLkTim8lyp_4OTr4CKB8iVT1dfxEpgTpAlep2l6vMH2@mail.gmail.com>
Message-ID: <20100727023927.27251.491397406.divmod.xquotient.151@localhost.localdomain>

On 19 Jul, 05:19 pm, jasonjwwilliams at gmail.com wrote:
>Hey Glyph,
>
>Sorry it took me a week...thanks for looking at it. This is an
>approximation of just the SMTP logic that I thought was blocking. It
>appears not to block, but has an issue executing the other deferreds.
>
>http://gist.github.com/481684

I'm not sure if you figured this out already, but I guess what you mean 
by "an issue executing the other deferreds" is that only one of your 
SMTP transactions completes.  This is probably because the 
`reactor.connectTCP` call at the end of `SMTPcall` is mis-indented and 
only executes once.

Jean-Paul



From avenpace at gmail.com  Wed Jul 28 00:25:25 2010
From: avenpace at gmail.com (Uung H.R Bhuwono)
Date: Wed, 28 Jul 2010 13:25:25 +0700
Subject: [Twisted-Python] Using zeromq inside twisted matrix daemon
Message-ID: <AANLkTikUWHbu6vniwGcQ37BDrsy3dJJDXSVbaVPOt+Z8@mail.gmail.com>

Hi,

I've been trying to make use zeromq on my twisted daemon script
When zeromq send message to the queue, this work since send_pyobj()
return True.
But the subscriber never get the message from queue using recv_pyobj()
and it just freeze like there's nothing on the queue

My twisted daemon script as a follow:

- serve_message.py
class MyService(service.Service):
    def __init__(self):
        pass
    def startService(self):
        c = zmq.Context(1)
        s = c.socket(zmq.PUB)
        s.bind("tcp://127.0.0.1:6666")
        s.send_pyobj("helo there")
    def stopService(self):
        pass

def getMyService():
    myService = MyService()
    return myService

application = service.Application("My Service Application")

# attach the service to its parent application
procd = getMyService()
procd.setServiceParent(application)

my simple subscriber script subscriber.py

import zmq
c = zmq.Context(1)
s = c.socket(zmq.SUB)
s.connect("tcp://127.0.0.1:9999")
s.setsockopt(zmq.SUBSCRIBE, "")
s.recv_pyobj()

Does it possible to use zeromq with twisted daemon on Linux?
Please help me to solve this

Thanks,

Uung



From avenpace at gmail.com  Wed Jul 28 00:27:26 2010
From: avenpace at gmail.com (Uung H.R Bhuwono)
Date: Wed, 28 Jul 2010 13:27:26 +0700
Subject: [Twisted-Python] Using zeromq inside twisted matrix daemon
In-Reply-To: <AANLkTikUWHbu6vniwGcQ37BDrsy3dJJDXSVbaVPOt+Z8@mail.gmail.com>
References: <AANLkTikUWHbu6vniwGcQ37BDrsy3dJJDXSVbaVPOt+Z8@mail.gmail.com>
Message-ID: <AANLkTin_=+yt__zSBm0R3ffcTu=+AiVAhTSJ87Wcxd00@mail.gmail.com>

Sorry for there's typo on my question bellow, the port should be 6666

Thanks,

Uung

On Wed, Jul 28, 2010 at 1:25 PM, Uung H.R Bhuwono <avenpace at gmail.com> wrote:
> Hi,
>
> I've been trying to make use zeromq on my twisted daemon script
> When zeromq send message to the queue, this work since send_pyobj()
> return True.
> But the subscriber never get the message from queue using recv_pyobj()
> and it just freeze like there's nothing on the queue
>
> My twisted daemon script as a follow:
>
> - serve_message.py
> class MyService(service.Service):
>    def __init__(self):
>        pass
>    def startService(self):
>        c = zmq.Context(1)
>        s = c.socket(zmq.PUB)
>        s.bind("tcp://127.0.0.1:6666")
>        s.send_pyobj("helo there")
>    def stopService(self):
>        pass
>
> def getMyService():
>    myService = MyService()
>    return myService
>
> application = service.Application("My Service Application")
>
> # attach the service to its parent application
> procd = getMyService()
> procd.setServiceParent(application)
>
> my simple subscriber script subscriber.py
>
> import zmq
> c = zmq.Context(1)
> s = c.socket(zmq.SUB)
> s.connect("tcp://127.0.0.1:9999")
> s.setsockopt(zmq.SUBSCRIBE, "")
> s.recv_pyobj()
>
> Does it possible to use zeromq with twisted daemon on Linux?
> Please help me to solve this
>
> Thanks,
>
> Uung
>



From twisted-web at udmvt.ru  Wed Jul 28 05:14:22 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Wed, 28 Jul 2010 15:14:22 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
	<20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
Message-ID: <20100728111422.GF14318@ruber.office.udmvt.ru>

After all, I'm posting my angry code.
The first file is a module with some classes, that can be used
to accomplish my task.
The second file is a UNIX program, it uses socketpair() and then fork()
to start both client and server, they talk each other via PB protocol.
Running that produces some noise to the screen and then they exit.

That was my minimal effort...
That is really a partial solution to the problem, but:
 a. it already works for me,
 b. I'm not sure it will work for other protocols,
 c. I found it too complex and involving a lot of other code to make it in a proper way
so, sorry, I haven't worked toward a real contribution to a twisted code.

Perhaps anyone may suggest another "proper" solution, more elegant?
I'm interested in having this kind of functionality supported by twisted.

-- 
Alexey.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tx_fake_connector.py
Type: text/x-python
Size: 8564 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20100728/3b55121e/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tx_test.py
Type: text/x-python
Size: 2971 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20100728/3b55121e/attachment-0005.py>

From itamar at itamarst.org  Wed Jul 28 06:10:48 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 28 Jul 2010 08:10:48 -0400
Subject: [Twisted-Python] What is the minimum effort solution to make
 inetd-managed twisted-based application?
In-Reply-To: <20100728111422.GF14318@ruber.office.udmvt.ru>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
	<20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
	<20100728111422.GF14318@ruber.office.udmvt.ru>
Message-ID: <1280319048.1616.2.camel@blake>

On Wed, 2010-07-28 at 15:14 +0400, twisted-web at udmvt.ru wrote:
> After all, I'm posting my angry code.
> The first file is a module with some classes, that can be used
> to accomplish my task.
> The second file is a UNIX program, it uses socketpair() and then fork()
> to start both client and server, they talk each other via PB protocol.
> Running that produces some noise to the screen and then they exit.

You probably want to use reactor.spawnProcess, not fork - it also allows
you to pass arbitrary file descriptors to the child process:

http://twistedmatrix.com/documents/current/core/howto/process.html

Also, an example:
http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/runner/inetd.py





From twisted-web at udmvt.ru  Thu Jul 29 01:22:25 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Thu, 29 Jul 2010 11:22:25 +0400
Subject: [Twisted-Python] What is the minimum effort solution to
	make	inetd-managed twisted-based application?
In-Reply-To: <1280319048.1616.2.camel@blake>
References: <20100713125732.GE14318@ruber.office.udmvt.ru>
	<20100713143708.2105.59269190.divmod.xquotient.26@localhost.localdomain>
	<20100713165252.GG14318@ruber.office.udmvt.ru>
	<20100714023146.2312.1322622072.divmod.xquotient.16@localhost.localdomain>
	<20100714160000.GM14318@ruber.office.udmvt.ru>
	<20100715161543.1664.510303979.divmod.xquotient.99@localhost.localdomain>
	<20100728111422.GF14318@ruber.office.udmvt.ru>
	<1280319048.1616.2.camel@blake>
Message-ID: <20100729072225.GG14318@ruber.office.udmvt.ru>

On Wed, Jul 28, 2010 at 08:10:48AM -0400, Itamar Turner-Trauring wrote:
> On Wed, 2010-07-28 at 15:14 +0400, twisted-web at udmvt.ru wrote:
> > The second file is a UNIX program, it uses socketpair() and then fork()
> > to start both client and server, they talk each other via PB protocol.
> > Running that produces some noise to the screen and then they exit.
> 
> You probably want to use reactor.spawnProcess, not fork - it also allows
> you to pass arbitrary file descriptors to the child process:
> 
> http://twistedmatrix.com/documents/current/core/howto/process.html
Yes, ofcourse, in real program I'd use that.
But for demo purposes I decided to place all code into single python program.

> 
> Also, an example:
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-10.1.0/twisted/runner/inetd.py
Thanks.

> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Alexey.



From twisted-web at udmvt.ru  Thu Jul 29 01:23:48 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Thu, 29 Jul 2010 11:23:48 +0400
Subject: [Twisted-Python] Is that behavior of t.i.stdio.StandardIO known?
Message-ID: <20100729072348.GH14318@ruber.office.udmvt.ru>

The code is in attachment.

I run it on Debian/Linux, twisted 10.0.0
When you run it on a terminal, it works by prefixing the data you enter with "dataReceived: "
and outputting that back to terminal.
 $ ./program.py
i: blabla
o: dataReceived: 'blabla
o: '
i: ^D
o: readConnectionLost(input is done)
i: ^C
o: OK
 $

The same happens if you redirect output to a pipe (no matter if it a named FIFO or an anonymous pipe).
But if you redirect output to a file or to a /dev/null, this happens:
 $ ./program.py > /dev/null
<a short pause, no input>
o: StdioProtocol.connectionLost('[Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionLost'>: Connection to the other side was lost in a non-clean fashion.
o: ]')OK
 $

But I expected it to work the same way, regardless of redirections.
I haven't traced the source of that Failure, so just asking, whether that behavior is
known, or maybe intended?
Or, perhaps, I do something incorrectly?

Well, right now I'm using the workaround with /bin/cat:
 $ ./program.py > >(cat > file)
or with an extra shell process:
 $ ./program.py | cat > file

-------------- next part --------------
A non-text attachment was scrubbed...
Name: program.py
Type: text/x-python
Size: 1515 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20100729/4f3d90d0/attachment-0002.py>

From itamar at itamarst.org  Thu Jul 29 06:13:06 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 29 Jul 2010 08:13:06 -0400
Subject: [Twisted-Python] Is that behavior of t.i.stdio.StandardIO known?
In-Reply-To: <20100729072348.GH14318@ruber.office.udmvt.ru>
References: <20100729072348.GH14318@ruber.office.udmvt.ru>
Message-ID: <1280405586.1611.0.camel@blake>

On Thu, 2010-07-29 at 11:23 +0400, Alexey wrote:

> The same happens if you redirect output to a pipe (no matter if it a named FIFO or an anonymous pipe).
> But if you redirect output to a file or to a /dev/null, this happens:
>  $ ./program.py > /dev/null
> <a short pause, no input>
> o: StdioProtocol.connectionLost('[Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionLost'>: Connection to the other side was lost in a non-clean fashion.
> o: ]')OK
>  $

This was a bug, and was fixed in Twisted 10.1. From the release notes:

"""
- twisted.internet.stdio now supports stdout being redirected to a
   normal file (except when using epollreactor). (#2259)
"""

So, upgrade to Twisted 10.1.




From twisted-web at udmvt.ru  Thu Jul 29 06:33:12 2010
From: twisted-web at udmvt.ru (Alexey)
Date: Thu, 29 Jul 2010 16:33:12 +0400
Subject: [Twisted-Python] Is that behavior of t.i.stdio.StandardIO	known?
In-Reply-To: <1280405586.1611.0.camel@blake>
References: <20100729072348.GH14318@ruber.office.udmvt.ru>
	<1280405586.1611.0.camel@blake>
Message-ID: <20100729123312.GK14318@ruber.office.udmvt.ru>

On Thu, Jul 29, 2010 at 08:13:06AM -0400, Itamar Turner-Trauring wrote:
> This was a bug, and was fixed in Twisted 10.1. From the release notes:
> 
> """
> - twisted.internet.stdio now supports stdout being redirected to a
>    normal file (except when using epollreactor). (#2259)
> """
> 
> So, upgrade to Twisted 10.1.

Great!!!

Thanks a lot!

-- 
Alexey.



From isahn74 at gmail.com  Fri Jul 30 04:28:01 2010
From: isahn74 at gmail.com (Michele -)
Date: Fri, 30 Jul 2010 11:28:01 +0100
Subject: [Twisted-Python] Asynchronous gzipped content decompression: best
	approach
Message-ID: <AANLkTi=NkD2nhxoGXHyARZHJ-Ds=bEa_7fPfo-o-htLB@mail.gmail.com>

Hi,

I have written a small utility function to replace
"twisted.web.client.getPage", to be able to read the response header.

I have to say that the ever improving documentation made it quite easy for
me to do it using the new twisted.web.client.Agent, so well done to all!

Since my wrapper works quite well, I decided to add gzip response support,
as it's another feature lacking from the original getPage. Again, it was
quite simple and it looks it works quite well, in proof of concept scenario.

Then it came my dilemma. What I'm doing now is a synchronous decompression
as shown below:

compressedstream = StringIO.StringIO(inzip)
gzipper = gzip.GzipFile(fileobj=compressedstream)
_data = gzipper.read()
return _data

This works quite well, but I wanted to add support for arbitrary large
compressed responses, and I wanted to ask your opinion on the best approach
for this:

-a separate thread? it has it's limit, as it's not scaling well at all, but,
in the possible scenario of a getPage usege shouldn't be a big issue (i.e.
not many concurrent calls)

-a Producer/consumer? That sounded like the modern twisted way of doing it,
but I didn't manage to be able to implement it properly, as I could create a
proper "consumer" class by looking to the example in the documentation...

-twisted.python.zipstream.DeflatedZipFileEntry?
I found this and seemed a potential way of doing it, with may be the use
of inline generators?
But then, I thought, is it a too  complex approach for a simple  problem?

I guess that decompressing data in twisted should be a fairly common task,
but I have not found a sample that looked like the "best" way for doing it,
so... here is this email

Thanks for you help, and I'll be happy to post the final code for future
reference if anyone is interested

Michele
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100730/c2442106/attachment-0001.html>

From peter.westlake at pobox.com  Fri Jul 30 04:54:27 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 30 Jul 2010 11:54:27 +0100
Subject: [Twisted-Python] LDAP binds appears to succeed with no password
Message-ID: <1280487267.545.1387497975@webmail.messagingengine.com>

I'm using LDAP to authenticate users, and when I give it an empty
password, it appears to succeed! Can anyone see what I'm doing wrong?
I've added comments by the log messages that appear in the output.

Peter.

from twisted.internet import reactor, defer
from ldaptor.protocols.ldap import ldapclient, ldapsyntax,
ldapconnector, ldaperrors
from ldaptor.protocols import pureldap as L

import log

class LDAPAuthenticationSource(object):
    def __init__(self, base_dn, hostname=None, attr='uid', bind_dn='',
                 bind_pw='', filter=L.LDAPFilter_present('cn')):
        self.hostname = hostname
        self.base_dn = base_dn
        self.attr = attr
        self.bind_dn = bind_dn
        self.bind_pw = bind_pw
        self.filter = filter
        self.cli = None

    @defer.inlineCallbacks
    def authenticate(self, username, password):
        if not password:
            log.info('Empty password!!!!')                  #######
            appears
        else:
            log.debug('Attempting to login as', username)

        c = ldapconnector.LDAPClientCreator(reactor,
        ldapclient.LDAPClient)
        self.client = yield c.connect(self.base_dn)

        yield ldapsyntax.LDAPEntry(self.client,
        self.bind_dn).bind(self.bind_pw)

        entries = []
        base = ldapsyntax.LDAPEntry(self.client, self.base_dn)

        yield base.search(
            filterObject=L.LDAPFilter_and(
                [L.LDAPFilter_equalityMatch(
                        attributeDesc=L.LDAPAttributeDescription(self.attr),
                        assertionValue=L.LDAPAssertionValue(username)
                    ),
                 self.filter,
                 ]),
            attributes = (self.attr,),  # No need to read the whole
            entry!
            callback=entries.append
        )
        n_entries = len(entries)
        if n_entries == 0:
            self.client.unbind()
            log.debug('Failed login for %s: no search results' %
            (username,))
            raise Exception('No search results!')
        elif n_entries > 1:
            self.client.unbind()
            log.debug('Failed login as %s: %d search results for unique
            entry!' % (username, n_entries))
            raise Exception('%d search results for unique entry!' %
            n_entries)
        else:
            # The password matches if we can bind as this DN with it.
            try:
                if not password:
                    log.info('Empty password')                          
                      ##### appears
                user_entry = yield entries[0].bind(password)
                if not password:
                    log.info('Succeeded with an empty password!')       
                      ##### appears
                    log.info('user_entry:')                             
                      ##### appears
                    log.info(user_entry)                                
                      ##### appears
                log.info('Login:', username)
            except ldaperrors.LDAPInvalidCredentials:
                log.info('Failed login for %s: invalid credentials' %
                username)
                raise
            except Exception, e:
                log.rep(e, 'Error while binding with user password')
                self.client.unbind()
                raise
            self.client.unbind()
            defer.returnValue(user_entry)



From mailing at franzoni.eu  Fri Jul 30 05:55:42 2010
From: mailing at franzoni.eu (Alan Franzoni)
Date: Fri, 30 Jul 2010 13:55:42 +0200
Subject: [Twisted-Python] LDAP binds appears to succeed with no password
In-Reply-To: <1280487267.545.1387497975@webmail.messagingengine.com>
References: <1280487267.545.1387497975@webmail.messagingengine.com>
Message-ID: <4C52BDBE.5090704@franzoni.eu>

On 7/30/10 12:54 PM, Peter Westlake wrote:
> I'm using LDAP to authenticate users, and when I give it an empty
> password, it appears to succeed! Can anyone see what I'm doing wrong?
> I've added comments by the log messages that appear in the output.

Please post the full code, including how you're using such class. Also:

- log the entry you've found and that you're using to re-bind. It might
not be what you're expecting.
- try the very same query using something like ldapsearch or Apache LDAP
Studio, and see whether the result differs.



-- 
Alan Franzoni
contact me at public@[mysurname].eu



From itamar at itamarst.org  Fri Jul 30 06:08:20 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 30 Jul 2010 08:08:20 -0400
Subject: [Twisted-Python] Asynchronous gzipped content decompression:
 best approach
In-Reply-To: <AANLkTi=NkD2nhxoGXHyARZHJ-Ds=bEa_7fPfo-o-htLB@mail.gmail.com>
References: <AANLkTi=NkD2nhxoGXHyARZHJ-Ds=bEa_7fPfo-o-htLB@mail.gmail.com>
Message-ID: <1280491700.1585.5.camel@blake>

On Fri, 2010-07-30 at 11:28 +0100, Michele - wrote:
> Hi,
> 
> 
> I have written a small utility function to replace
> "twisted.web.client.getPage", to be able to read the response header.
> 
> 
> I have to say that the ever improving documentation made it quite easy
> for me to do it using the new twisted.web.client.Agent, so well done
> to all!
> 
> 
> Since my wrapper works quite well, I decided to add gzip response
> support, as it's another feature lacking from the original getPage.
> Again, it was quite simple and it looks it works quite well, in proof
> of concept scenario.
> 
> 
> Then it came my dilemma. What I'm doing now is
> a synchronous decompression as shown below:
> 
> 
> compressedstream = StringIO.StringIO(inzip)  
> gzipper = gzip.GzipFile(fileobj=compressedstream)
> _data = gzipper.read()
> return _data

In the standard Agent API, streaming data is downloaded to a protocol.
So a gunzipping version would do the same: you have a wrapper protocol
that uncompresses data, then delivers to underlying protocol.

The basic logic would require reimplementing a small part of the gzip
module: first few bytes of data are gzip header, which you skip. Then,
use the zlib module to decompress data as it arrives (specifically you'd
want a decompression object) and deliver it to the wrapped protocol's
dataReceived.






From peter.westlake at pobox.com  Fri Jul 30 07:31:00 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 30 Jul 2010 14:31:00 +0100
Subject: [Twisted-Python] LDAP binds appears to succeed with no password
In-Reply-To: <4C52BDBE.5090704@franzoni.eu>
References: <1280487267.545.1387497975@webmail.messagingengine.com>
	<4C52BDBE.5090704@franzoni.eu>
Message-ID: <1280496660.1622.1387517469@webmail.messagingengine.com>

On Fri, 30 Jul 2010 13:55 +0200, "Alan Franzoni" <mailing at franzoni.eu>
wrote:
> On 7/30/10 12:54 PM, Peter Westlake wrote:
> > I'm using LDAP to authenticate users, and when I give it an empty
> > password, it appears to succeed! Can anyone see what I'm doing wrong?
> > I've added comments by the log messages that appear in the output.
> 
> Please post the full code, including how you're using such class. Also:

The rest of it is below.

> - log the entry you've found and that you're using to re-bind. It might
> not be what you're expecting.

It is, though - it's my directory entry. See the output, below.

> - try the very same query using something like ldapsearch or Apache LDAP
> Studio, and see whether the result differs.

With ldapsearch, it fails as expected. That's a bit different to my
code, though, because it only does a bind and a search. It isn't
trying to re-bind using the entry it finds.

LDAP Studio is a great find, thank you! And thank you for your help.

Peter.

Here's the test program:
-----------------------------------------------------------------------
auth.py:

from lda import LDAPAuthenticator

import getpass
from twisted.internet import reactor

import log

username = raw_input('Username: ')
password = getpass.getpass('Password: ')


def _success(entry):
    log.info('Successful authentication as %r' % username)
    return username

def _failure(f):
    log.info('Failed authentication as %r' % username, f)
    raise Exception('Authentication failed')

def stop(result):
    print 'Result', result
    reactor.stop()

authenticator= LDAPAuthenticator(
    hostname=LDAP_HOST,
    base_dn=LDAP_ROOT,
    attr='sAMAccountName',
    bind_dn=LDAP_BIND_DN,
    bind_pw=LDAP_BIND_PW
    )
try:
    print 'Before authenticate'
    d = authenticator.authenticate(username, password)
    print 'Called authenticate'
except Exception, e:
    print 'Exception was:'
    print e
    reactor.stop()

d.addCallbacks(_success, _failure)
d.addBoth(stop)

reactor.run()

--------------------------------------------------------------------------------
log.py:

# Simplified log for test purposes.

def info(*message):
    print message

def debug(*message):
    print message

def rep(e, *message):
    print message
    print 'Exception is:', e
-------------------------------------------------------------------------------
The output of the program:

$ python auth.py
Username: peterw
Password:
Before authenticate
('Empty password!!!!',)
Called authenticate
('Empty password',)
('Succeeded with an empty password!',)
('user_entry:',)
(LDAPEntryWithClient(dn='CN=Peter Westlake,OU=....',
attributes={'sAMAccountName':
JournaledLDAPAttributeSet('sAMAccountName', ['peterw'])}),)
('Login:', 'peterw')
("Successful authentication as 'peterw'",)
Result peterw
---------------------------------------------------------------------------------
The file I posted last time, for completeness and ease of reference:

lda.py:

from twisted.internet import reactor, defer
from ldaptor.protocols.ldap import ldapclient, ldapsyntax,
ldapconnector, ldaperrors
from ldaptor.protocols import pureldap as L

import log

class LDAPAuthenticator(object):
    def __init__(self, base_dn, hostname=None, attr='uid', bind_dn='',
                 bind_pw='', filter=L.LDAPFilter_present('cn')):
        self.hostname = hostname
        self.base_dn = base_dn
        self.attr = attr
        self.bind_dn = bind_dn
        self.bind_pw = bind_pw
        self.filter = filter
        self.cli = None

    @defer.inlineCallbacks
    def authenticate(self, username, password):
        if not password:
            log.info('Empty password!!!!')
        else:
            log.debug('Attempting to login as', username)

        c = ldapconnector.LDAPClientCreator(reactor,
        ldapclient.LDAPClient)
        self.client = yield c.connect(self.base_dn)

        yield ldapsyntax.LDAPEntry(self.client,
        self.bind_dn).bind(self.bind_pw)

        entries = []
        base = ldapsyntax.LDAPEntry(self.client, self.base_dn)

        yield base.search(
            filterObject=L.LDAPFilter_and(
                [L.LDAPFilter_equalityMatch(
                        attributeDesc=L.LDAPAttributeDescription(self.attr),
                        assertionValue=L.LDAPAssertionValue(username)
                    ),
                 self.filter,
                 ]),
            attributes = (self.attr,),  # No need to read the whole
            entry!
            callback=entries.append
        )
        n_entries = len(entries)
        if n_entries == 0:
            self.client.unbind()
            log.debug('Failed login for %s: no search results' %
            (username,))
            raise Exception('No search results!')
        elif n_entries > 1:
            self.client.unbind()
            log.debug('Failed login as %s: %d search results for unique
            entry!' % (username, n_entries))
            raise Exception('%d search results for unique entry!' %
            n_entries)
        else:
            # The password matches if we can bind as this DN with it.
            try:
                if not password:
                    log.info('Empty password')
                user_entry = yield entries[0].bind(password)
                if not password:
                    log.info('Succeeded with an empty password!')
                    log.info('user_entry:')
                    log.info(user_entry)
                log.info('Login:', username)
            except ldaperrors.LDAPInvalidCredentials:
                log.info('Failed login for %s: invalid credentials' %
                username)
                raise
            except Exception, e:
                log.rep(e, 'Error while binding with user password')
                self.client.unbind()
                raise
            self.client.unbind()
            defer.returnValue(user_entry)
--------END-----------



From isahn74 at gmail.com  Fri Jul 30 10:10:48 2010
From: isahn74 at gmail.com (Michele -)
Date: Fri, 30 Jul 2010 17:10:48 +0100
Subject: [Twisted-Python] Asynchronous gzipped content decompression: best
	approach
Message-ID: <AANLkTikH5kMsWBvRfWJ7TYWpyq-7Mbb=fsEH+DrJjRzr@mail.gmail.com>

Hi Itamar,

Thanks for the hint, it took me a while to make it work but it does do
the job very well.

For future reference to the thread readers, the bytes to skip are the
first 10 of the first set of data received by the protocol.


Thanks again

Michele



From alvinwang at gmail.com  Fri Jul 30 22:56:07 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Fri, 30 Jul 2010 21:56:07 -0700
Subject: [Twisted-Python] OpenStack uses Twisted
Message-ID: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>

FYI - I went to a presentation on Nova/OpenStack
https://launchpad.net/nova

They use Twisted and they are planning on taking out Tornado.  You can run
your own amazon using Twisted.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100730/235c8713/attachment-0001.html>

From donal.mcmullan at gmail.com  Fri Jul 30 23:41:15 2010
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sat, 31 Jul 2010 17:41:15 +1200
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
Message-ID: <AANLkTikJEn6ipJ9uNu4pp26fvxU0X1sFRKrg=YofGayz@mail.gmail.com>

Hi Alvin - I understand they've been using both Tornado and Twisted... did
they elaborate on their decision to remove Tornado? Will the features
supported by Tornado be reimplemented with Twisted?

Thanks

D

On 31 July 2010 16:56, Alvin Wang <alvinwang at gmail.com> wrote:

> FYI - I went to a presentation on Nova/OpenStack
> https://launchpad.net/nova
>
> They use Twisted and they are planning on taking out Tornado.  You can run
> your own amazon using Twisted.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100731/7fce55d5/attachment.html>

From alvinwang at gmail.com  Sat Jul 31 02:05:43 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Sat, 31 Jul 2010 01:05:43 -0700
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTikJEn6ipJ9uNu4pp26fvxU0X1sFRKrg=YofGayz@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com> 
	<AANLkTikJEn6ipJ9uNu4pp26fvxU0X1sFRKrg=YofGayz@mail.gmail.com>
Message-ID: <AANLkTi=A-skE+SMkymaNEEoULfpy_ErNCwjXmnCE8sPj@mail.gmail.com>

That was my understanding.  I think they want to simplify the development.
Currently, it is a pain to install.  There are a lot of dependencies.

Alvin

On Fri, Jul 30, 2010 at 10:41 PM, Donal McMullan
<donal.mcmullan at gmail.com>wrote:

> Hi Alvin - I understand they've been using both Tornado and Twisted... did
> they elaborate on their decision to remove Tornado? Will the features
> supported by Tornado be reimplemented with Twisted?
>
> Thanks
>
> D
>
> On 31 July 2010 16:56, Alvin Wang <alvinwang at gmail.com> wrote:
>
>> FYI - I went to a presentation on Nova/OpenStack
>> https://launchpad.net/nova
>>
>> They use Twisted and they are planning on taking out Tornado.  You can run
>> your own amazon using Twisted.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100731/913a2c8d/attachment.html>

From jasonjwwilliams at gmail.com  Sat Jul 31 15:51:39 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 31 Jul 2010 15:51:39 -0600
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com>
Message-ID: <8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>

Hey Alvin,

Where on the launchpad did you find the preso?

-J

Sent via iPhone

Is your e-mail Premiere?

On Jul 30, 2010, at 22:56, Alvin Wang <alvinwang at gmail.com> wrote:

> FYI - I went to a presentation on Nova/OpenStack
> https://launchpad.net/nova
> 
> They use Twisted and they are planning on taking out Tornado.  You can run your own amazon using Twisted.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100731/920b0d2f/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Jul 31 22:05:35 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Aug 2010 04:05:35 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1280635535.78.1764854842@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100801/4686e524/attachment.html>

From alvinwang at gmail.com  Sat Jul 31 23:24:06 2010
From: alvinwang at gmail.com (Alvin Wang)
Date: Sat, 31 Jul 2010 22:24:06 -0700
Subject: [Twisted-Python] OpenStack uses Twisted
In-Reply-To: <8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>
References: <AANLkTi=PBJ1JtAipQsSts=q7xnwmUNsTyx+jNHcYuu5K@mail.gmail.com> 
	<8E5F8ACC-2715-464D-A69D-8FC9FC66E0CD@gmail.com>
Message-ID: <AANLkTimguv5Sz7VvsPud=ZRCLQJRreJu-W-LW65PWCtZ@mail.gmail.com>

I went to a live Presentation at the cloudkick HQ last Thursday.
http://www.meetup.com/openstack/

If you are in the SF Bay Area, they are going to have a tour of NASA before
the next meeting.

Alvin

On Sat, Jul 31, 2010 at 2:51 PM, Jason J. W. Williams <
jasonjwwilliams at gmail.com> wrote:

> Hey Alvin,
>
> Where on the launchpad did you find the preso?
>
> -J
>
> Sent via iPhone
>
> Is your e-mail Premiere?
>
> On Jul 30, 2010, at 22:56, Alvin Wang <alvinwang at gmail.com> wrote:
>
> FYI - I went to a presentation on Nova/OpenStack
> <https://launchpad.net/nova>https://launchpad.net/nova
>
> They use Twisted and they are planning on taking out Tornado.  You can run
> your own amazon using Twisted.
>
> _______________________________________________
>
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20100731/4b80a90d/attachment.html>

