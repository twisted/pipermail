From projects at reedflute.com  Thu Jul  1 16:30:39 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 01 Jul 2004 22:30:39 +0200
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
Message-ID: <40E4746F.40703@reedflute.com>

Hi,

Being new to both Twisted and ZODB and not finding too much info on 
Twisted.Persisted by googling I have decided to post this question.

I have also noticed a few projects running Twisted "on top of"  ZODB as 
it were.

I get the impression that Twisted.Persisted is more of an utility 
add-on  to Twisted whereas ZODB is a full fledged object database.

Still - I  would very much like to  use Twisted.Persisted for trancient 
data/metadata in a new project I'm tackling cause it is always good to 
minimize dependencies and I know I can use postgreSQL with Twisted for 
heavy duty stuff - which I still believe a better option than OODB.

How does Twisted.Persisted  compare to ZODB - if such a comparison can 
be made? Any other OODB's to be considered for use with Twisted?

I would also very much appreciate some links to on-line docs/examples 
regarding Twisted.Persisted if they exist. 

kind regards,

Eugene Coetzee

===============================================
Web                 -> www.reedflute.com
=============================================== 





From exarkun at divmod.com  Thu Jul  1 17:41:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 01 Jul 2004 17:41:21 -0400
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <40E4746F.40703@reedflute.com>
References: <40E4746F.40703@reedflute.com>
Message-ID: <40E48501.7000007@divmod.com>

Eugene Coetzee wrote:
> Hi,
> 
> Being new to both Twisted and ZODB and not finding too much info on 
> Twisted.Persisted by googling I have decided to post this question.
> 
> I have also noticed a few projects running Twisted "on top of"  ZODB as 
> it were.
> 
> I get the impression that Twisted.Persisted is more of an utility 
> add-on  to Twisted whereas ZODB is a full fledged object database.

   That is true.  Nothing in twisted.persisted is usable by itself as a 
persistence mechanism for a non-trivial application.

   AOT and Marmalade are graph serialization formats.  Neither supports 
new-style objects very well, IIRC.  Even if they do, neither is 
particularly quick, nor provides anything beyond simple storage of a 
complete object graph, hardly the only requirement for a database.

   dirdbm is a cute toy, but not again really useful as a non-trivial 
data store.  It's slow and fragile, and doesn't provide any 
functionality beyond what the bsddb module in Python 2.3 provides.

   sob is a handy front-end to AOT, Marmalade, pickle, and tac files.

   crefutil is helper code for aot and jelly and perhaps some other 
serialization modules.

   The styles module has all the cool code.  It lets you pickle 
otherwise unpickleable types and provides the Versioned class, which 
lets you deal with mixing old data with new code.

> 
> Still - I  would very much like to  use Twisted.Persisted for trancient 
> data/metadata in a new project I'm tackling cause it is always good to 
> minimize dependencies and I know I can use postgreSQL with Twisted for 
> heavy duty stuff - which I still believe a better option than OODB.

   Unless you have very little data, and you don't care _terribly_ if 
you lose it, twisted.persisted probably isn't going to do it for you.

> 
> How does Twisted.Persisted  compare to ZODB - if such a comparison can 
> be made? Any other OODB's to be considered for use with Twisted?

   You might look at Atop.  It's somewhat lighter weight than ZODB. 
http://www.divmod.org/ has some docs, but it needs more.  It also isn't 
distributed separately from Quotient yet (but is easily separable once 
you download it).

> 
> I would also very much appreciate some links to on-line docs/examples 
> regarding Twisted.Persisted if they exist.
> kind regards,
> 

   I wish I could point you at something, but I hope the above has been 
an adequate substitute.

   Jp



From python at praxsys.com  Thu Jul  1 19:07:13 2004
From: python at praxsys.com (Kevin)
Date: Thu, 01 Jul 2004 18:07:13 -0500
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <40E48501.7000007@divmod.com>
References: <40E4746F.40703@reedflute.com> <40E48501.7000007@divmod.com>
Message-ID: <40E49921.5010109@praxsys.com>

you might also look at http://modeling.sourceforge.net/

it is definitely different than other persistance layers in python- but 
if you have a background similar to mine, it will feel more comfortable 
to some of these other systems.

good luck,
kevin

Jp Calderone wrote:

> Eugene Coetzee wrote:
>
>> Hi,
>>
>> Being new to both Twisted and ZODB and not finding too much info on 
>> Twisted.Persisted by googling I have decided to post this question.
>>
>> I have also noticed a few projects running Twisted "on top of"  ZODB 
>> as it were.
>>
>> I get the impression that Twisted.Persisted is more of an utility 
>> add-on  to Twisted whereas ZODB is a full fledged object database.
>
>
>   That is true.  Nothing in twisted.persisted is usable by itself as a 
> persistence mechanism for a non-trivial application.
>
>   AOT and Marmalade are graph serialization formats.  Neither supports 
> new-style objects very well, IIRC.  Even if they do, neither is 
> particularly quick, nor provides anything beyond simple storage of a 
> complete object graph, hardly the only requirement for a database.
>
>   dirdbm is a cute toy, but not again really useful as a non-trivial 
> data store.  It's slow and fragile, and doesn't provide any 
> functionality beyond what the bsddb module in Python 2.3 provides.
>
>   sob is a handy front-end to AOT, Marmalade, pickle, and tac files.
>
>   crefutil is helper code for aot and jelly and perhaps some other 
> serialization modules.
>
>   The styles module has all the cool code.  It lets you pickle 
> otherwise unpickleable types and provides the Versioned class, which 
> lets you deal with mixing old data with new code.
>
>>
>> Still - I  would very much like to  use Twisted.Persisted for 
>> trancient data/metadata in a new project I'm tackling cause it is 
>> always good to minimize dependencies and I know I can use postgreSQL 
>> with Twisted for heavy duty stuff - which I still believe a better 
>> option than OODB.
>
>
>   Unless you have very little data, and you don't care _terribly_ if 
> you lose it, twisted.persisted probably isn't going to do it for you.
>
>>
>> How does Twisted.Persisted  compare to ZODB - if such a comparison 
>> can be made? Any other OODB's to be considered for use with Twisted?
>
>
>   You might look at Atop.  It's somewhat lighter weight than ZODB. 
> http://www.divmod.org/ has some docs, but it needs more.  It also 
> isn't distributed separately from Quotient yet (but is easily 
> separable once you download it).
>
>>
>> I would also very much appreciate some links to on-line docs/examples 
>> regarding Twisted.Persisted if they exist.
>> kind regards,
>>
>
>   I wish I could point you at something, but I hope the above has been 
> an adequate substitute.
>
>   Jp
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From matt at pollenation.net  Thu Jul  1 20:10:21 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri, 02 Jul 2004 01:10:21 +0100
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <40E49921.5010109@praxsys.com>
References: <40E4746F.40703@reedflute.com> <40E48501.7000007@divmod.com>
	<40E49921.5010109@praxsys.com>
Message-ID: <1088727021.405.4.camel@debian>

On Thu, 2004-07-01 at 18:07 -0500, Kevin wrote:
> you might also look at http://modeling.sourceforge.net/
> 
> it is definitely different than other persistance layers in python- but 
> if you have a background similar to mine, it will feel more comfortable 
> to some of these other systems.

I haven't looked at Modeling for a long time. IIRC, it manages database
connections using its own pool and all interaction takes place within an
EditingContext. Out of interest, how do you integrate Twisted and
Modeling? Do you just defer the calls into Modeling to a thread or do
you have something clever going on?

Thanks, Matt

> 
> good luck,
> kevin
> 
> Jp Calderone wrote:
> 
> > Eugene Coetzee wrote:
> >
> >> Hi,
> >>
> >> Being new to both Twisted and ZODB and not finding too much info on 
> >> Twisted.Persisted by googling I have decided to post this question.
> >>
> >> I have also noticed a few projects running Twisted "on top of"  ZODB 
> >> as it were.
> >>
> >> I get the impression that Twisted.Persisted is more of an utility 
> >> add-on  to Twisted whereas ZODB is a full fledged object database.
> >
> >
> >   That is true.  Nothing in twisted.persisted is usable by itself as a 
> > persistence mechanism for a non-trivial application.
> >
> >   AOT and Marmalade are graph serialization formats.  Neither supports 
> > new-style objects very well, IIRC.  Even if they do, neither is 
> > particularly quick, nor provides anything beyond simple storage of a 
> > complete object graph, hardly the only requirement for a database.
> >
> >   dirdbm is a cute toy, but not again really useful as a non-trivial 
> > data store.  It's slow and fragile, and doesn't provide any 
> > functionality beyond what the bsddb module in Python 2.3 provides.
> >
> >   sob is a handy front-end to AOT, Marmalade, pickle, and tac files.
> >
> >   crefutil is helper code for aot and jelly and perhaps some other 
> > serialization modules.
> >
> >   The styles module has all the cool code.  It lets you pickle 
> > otherwise unpickleable types and provides the Versioned class, which 
> > lets you deal with mixing old data with new code.
> >
> >>
> >> Still - I  would very much like to  use Twisted.Persisted for 
> >> trancient data/metadata in a new project I'm tackling cause it is 
> >> always good to minimize dependencies and I know I can use postgreSQL 
> >> with Twisted for heavy duty stuff - which I still believe a better 
> >> option than OODB.
> >
> >
> >   Unless you have very little data, and you don't care _terribly_ if 
> > you lose it, twisted.persisted probably isn't going to do it for you.
> >
> >>
> >> How does Twisted.Persisted  compare to ZODB - if such a comparison 
> >> can be made? Any other OODB's to be considered for use with Twisted?
> >
> >
> >   You might look at Atop.  It's somewhat lighter weight than ZODB. 
> > http://www.divmod.org/ has some docs, but it needs more.  It also 
> > isn't distributed separately from Quotient yet (but is easily 
> > separable once you download it).
> >
> >>
> >> I would also very much appreciate some links to on-line docs/examples 
> >> regarding Twisted.Persisted if they exist.
> >> kind regards,
> >>
> >
> >   I wish I could point you at something, but I hope the above has been 
> > an adequate substitute.
> >
> >   Jp
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From kevin at praxsys.com  Fri Jul  2 09:05:02 2004
From: kevin at praxsys.com (Kevin Koym)
Date: Fri, 02 Jul 2004 08:05:02 -0500
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <1088727021.405.4.camel@debian>
References: <40E4746F.40703@reedflute.com>
	<40E48501.7000007@divmod.com>	<40E49921.5010109@praxsys.com>
	<1088727021.405.4.camel@debian>
Message-ID: <40E55D7E.70408@praxsys.com>

Matt,
I have not integrated the two yet.... (so perhaps my other message was 
not appropriate for the list... but I did want to mention the modeling 
package as being another direction to look for object persistance.) I am 
interested in hearing what others have to say about modeling and twisted 
too.  I can tell, based on the activity on modeling list, things are 
moving on it quicker than was before. I believe that the community 
around modeling is starting to grow... so it might have further 
usefulness/robustness in the future than it might have in the past.

Thanks,
Kevin

Matt Goodall wrote:

>On Thu, 2004-07-01 at 18:07 -0500, Kevin wrote:
>  
>
>>you might also look at http://modeling.sourceforge.net/
>>
>>it is definitely different than other persistance layers in python- but 
>>if you have a background similar to mine, it will feel more comfortable 
>>to some of these other systems.
>>    
>>
>
>I haven't looked at Modeling for a long time. IIRC, it manages database
>connections using its own pool and all interaction takes place within an
>EditingContext. Out of interest, how do you integrate Twisted and
>Modeling? Do you just defer the calls into Modeling to a thread or do
>you have something clever going on?
>
>Thanks, Matt
>
>  
>
>>good luck,
>>kevin
>>
>>Jp Calderone wrote:
>>
>>    
>>
>>>Eugene Coetzee wrote:
>>>
>>>      
>>>
>>>>Hi,
>>>>
>>>>Being new to both Twisted and ZODB and not finding too much info on 
>>>>Twisted.Persisted by googling I have decided to post this question.
>>>>
>>>>I have also noticed a few projects running Twisted "on top of"  ZODB 
>>>>as it were.
>>>>
>>>>I get the impression that Twisted.Persisted is more of an utility 
>>>>add-on  to Twisted whereas ZODB is a full fledged object database.
>>>>        
>>>>
>>>  That is true.  Nothing in twisted.persisted is usable by itself as a 
>>>persistence mechanism for a non-trivial application.
>>>
>>>  AOT and Marmalade are graph serialization formats.  Neither supports 
>>>new-style objects very well, IIRC.  Even if they do, neither is 
>>>particularly quick, nor provides anything beyond simple storage of a 
>>>complete object graph, hardly the only requirement for a database.
>>>
>>>  dirdbm is a cute toy, but not again really useful as a non-trivial 
>>>data store.  It's slow and fragile, and doesn't provide any 
>>>functionality beyond what the bsddb module in Python 2.3 provides.
>>>
>>>  sob is a handy front-end to AOT, Marmalade, pickle, and tac files.
>>>
>>>  crefutil is helper code for aot and jelly and perhaps some other 
>>>serialization modules.
>>>
>>>  The styles module has all the cool code.  It lets you pickle 
>>>otherwise unpickleable types and provides the Versioned class, which 
>>>lets you deal with mixing old data with new code.
>>>
>>>      
>>>
>>>>Still - I  would very much like to  use Twisted.Persisted for 
>>>>trancient data/metadata in a new project I'm tackling cause it is 
>>>>always good to minimize dependencies and I know I can use postgreSQL 
>>>>with Twisted for heavy duty stuff - which I still believe a better 
>>>>option than OODB.
>>>>        
>>>>
>>>  Unless you have very little data, and you don't care _terribly_ if 
>>>you lose it, twisted.persisted probably isn't going to do it for you.
>>>
>>>      
>>>
>>>>How does Twisted.Persisted  compare to ZODB - if such a comparison 
>>>>can be made? Any other OODB's to be considered for use with Twisted?
>>>>        
>>>>
>>>  You might look at Atop.  It's somewhat lighter weight than ZODB. 
>>>http://www.divmod.org/ has some docs, but it needs more.  It also 
>>>isn't distributed separately from Quotient yet (but is easily 
>>>separable once you download it).
>>>
>>>      
>>>
>>>>I would also very much appreciate some links to on-line docs/examples 
>>>>regarding Twisted.Persisted if they exist.
>>>>kind regards,
>>>>
>>>>        
>>>>
>>>  I wish I could point you at something, but I hope the above has been 
>>>an adequate substitute.
>>>
>>>  Jp
>>>
>>>_______________________________________________
>>>Twisted-Python mailing list
>>>Twisted-Python at twistedmatrix.com
>>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>      
>>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>    
>>

-- 
Kevin Koym

Innovation

kevin at praxsys.com
+1.512.698.9328 cell in US


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040702/cf78a423/attachment.htm 

From serj_trejo at hotmail.com  Sun Jul  4 09:40:32 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 04 Jul 2004 09:40:32 -0400
Subject: [Twisted-Python] Spread or SOAP
Message-ID: <BAY12-F177QbUfLx96X00011359@hotmail.com>

Hi, I'm new to Twisted and just discovered it today. It looks to be amazing 
and versatile. I want to use the Twisted Web server to receive an HTTP POST 
and when the POST comes in, I want to relay a message to another object that 
happens to be running on the same physical machine (although in the future 
it may not be running on the same machine). The message that will be sent 
will contain some basic data. To do this, should I use Spread with the 
Perspective Broker for interobject communication (can I even do this from, 
say, a cgi application in Twisted Web server), or should I do something a 
bit more fancier such as using SOAP?

Thank you for any suggestions -- I am really happy to see (initially at the 
surface before I dig into it further) all of the capabilities of Twisted as 
I think Python is a really great language!

Sincerely,

Sergio

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From klcheung0829 at sinaman.com  Mon Jul  5 02:49:58 2004
From: klcheung0829 at sinaman.com (klcheung0829 at sinaman.com)
Date: Mon, 5 Jul 2004 14:49:58 +0800
Subject: [Twisted-Python] Max number of simultaneous TCP connection 
Message-ID: <20040705064959.15547.qmail@hk.sina.com.hk>


Is there a maximum number of simultaneous connection for the TCPServer?  I already set the ulimit -n 10000.  But it fails to accept connection once it reaches about 1024.  Any way to increase it ?

Thanks.
==========================================================================================
????, ????! ???????? -
http://adimages.sina.com.hk/WSI_0704.html
??? ?????? -
http://news.sina.com.hk/focus/20040628/
????? ????? -
http://euro04.sina.com.hk/




From itamar at itamarst.org  Mon Jul  5 10:56:08 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 05 Jul 2004 10:56:08 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP connection
In-Reply-To: <20040705064959.15547.qmail@hk.sina.com.hk>
References: <20040705064959.15547.qmail@hk.sina.com.hk>
Message-ID: <1089039367.14054.1.camel@sheriffpony>

On Mon, 2004-07-05 at 02:49, klcheung0829 at sinaman.com wrote:

> Is there a maximum number of simultaneous connection for the
> TCPServer?  I already set the ulimit -n 10000.  But it fails to accept
> connection once it reaches about 1024.  Any way to increase it ?

ulimit may still be 1024, if you're not root. Check again after setting
it. Also there may be kernel limitations (changeable somewhre in /proc)
etc..

-- 
Itamar Shtull-Trauring    http://itamarst.org





From orbitz at ezabel.com  Mon Jul  5 12:33:33 2004
From: orbitz at ezabel.com (orbitz)
Date: Mon, 05 Jul 2004 12:33:33 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP connection
In-Reply-To: <1089039367.14054.1.camel@sheriffpony>
References: <20040705064959.15547.qmail@hk.sina.com.hk>
	<1089039367.14054.1.camel@sheriffpony>
Message-ID: <40E982DD.7000705@ezabel.com>

Has there been any work into seeing how many simultaneous connections 
twisted can handle?  Python gets a lot of flack for being slow, and as 
far as I know twisted is completely, if not mostly written in python, so 
does that put limitations on what one can handle?  Could a twisted app 
possibly handle 10k connections easily?


Itamar Shtull-Trauring wrote:

>On Mon, 2004-07-05 at 02:49, klcheung0829 at sinaman.com wrote:
>
>  
>
>>Is there a maximum number of simultaneous connection for the
>>TCPServer?  I already set the ulimit -n 10000.  But it fails to accept
>>connection once it reaches about 1024.  Any way to increase it ?
>>    
>>
>
>ulimit may still be 1024, if you're not root. Check again after setting
>it. Also there may be kernel limitations (changeable somewhre in /proc)
>etc..
>
>  
>




From dripton at ripton.net  Mon Jul  5 19:10:55 2004
From: dripton at ripton.net (David Ripton)
Date: Mon, 5 Jul 2004 16:10:55 -0700
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <BAY12-F177QbUfLx96X00011359@hotmail.com>
References: <BAY12-F177QbUfLx96X00011359@hotmail.com>
Message-ID: <20040705231055.GA898@vidar.dreamhost.com>

On 2004.07.04 09:40:32 +0000, Sergio Trejo wrote:
> Hi, I'm new to Twisted and just discovered it today. It looks to be amazing 
> and versatile. I want to use the Twisted Web server to receive an HTTP POST 
> and when the POST comes in, I want to relay a message to another object 
> that happens to be running on the same physical machine (although in the 
> future it may not be running on the same machine). The message that will be 
> sent will contain some basic data. To do this, should I use Spread with the 
> Perspective Broker for interobject communication (can I even do this from, 
> say, a cgi application in Twisted Web server), or should I do something a 
> bit more fancier such as using SOAP?

PB is excellent, within its range of applicability.  If you control both
sides, can choose Python, and prefer async operation, I highly recommend it.
Yeah, it should be easy to integrate with other Twisted bits.

XML-RPC is reasonable, if you need cross-language support or more buzzword 
compliance.

SOAP is XML-RPC attacked by Microsoft and a committee.  It's hard to read 
the specs without laughing, and harder to try to interoperate with someone 
using Microsoft's broken^Wenhanced implementation of it without crying.

But what did you expect to hear on a Twisted list?

-- 
David Ripton    dripton at ripton.net



From serj_trejo at hotmail.com  Mon Jul  5 21:19:13 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 05 Jul 2004 21:19:13 -0400
Subject: [Twisted-Python] Spread or SOAP
Message-ID: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>

Mr. Ripton,

Thank you for your very kind and helpful response. I will most definitely 
give PB a spin since my project is in-house and thus I can run Python on 
both sides of the conversation. I didn't realize that SOAP is Microsoft FUD, 
as I thought SOAP is a W3C standard. Is W3C the committee that Microsoft is 
trying to manipulate?

Thanks again for your hepful feedback. Python really rocks the world and I 
think will continue to do so for a long time to come.

Sergio

>From: David Ripton <dripton at ripton.net>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Spread or SOAP
>Date: Mon, 5 Jul 2004 16:10:55 -0700
>
>On 2004.07.04 09:40:32 +0000, Sergio Trejo wrote:
> > Hi, I'm new to Twisted and just discovered it today. It looks to be 
>amazing
> > and versatile. I want to use the Twisted Web server to receive an HTTP 
>POST
> > and when the POST comes in, I want to relay a message to another object
> > that happens to be running on the same physical machine (although in the
> > future it may not be running on the same machine). The message that will 
>be
> > sent will contain some basic data. To do this, should I use Spread with 
>the
> > Perspective Broker for interobject communication (can I even do this 
>from,
> > say, a cgi application in Twisted Web server), or should I do something 
>a
> > bit more fancier such as using SOAP?
>
>PB is excellent, within its range of applicability.  If you control both
>sides, can choose Python, and prefer async operation, I highly recommend 
>it.
>Yeah, it should be easy to integrate with other Twisted bits.
>
>XML-RPC is reasonable, if you need cross-language support or more buzzword
>compliance.
>
>SOAP is XML-RPC attacked by Microsoft and a committee.  It's hard to read
>the specs without laughing, and harder to try to interoperate with someone
>using Microsoft's broken^Wenhanced implementation of it without crying.
>
>But what did you expect to hear on a Twisted list?
>
>--
>David Ripton    dripton at ripton.net
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From pje at telecommunity.com  Mon Jul  5 21:41:21 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 05 Jul 2004 21:41:21 -0400
Subject: [Twisted-Python] PyProtocols 0.9.3 Release Candidate 1
Message-ID: <5.1.1.6.0.20040705213222.01f13a90@mail.telecommunity.com>

PyProtocols 0.9.3 release candidate 1 is now available for 
download.  Assuming there are no bugs reported in the next 3-4 weeks, it 
will become the 0.9.3 final release in early August.


What is PyProtocols?
--------------------

PyProtocols is an extended implementation of PEP 246, adding a new 
"declaration  API" that lets you easily define your own interfaces and 
adapters, and declare what adapters should be used to adapt what types, 
objects, or interfaces.  Using PyProtocols, you can easily make flexible 
frameworks that you or other developers can extend without needing to 
modify the base framework.  PyProtocols interfaces can interoperate with 
those of Twisted and Zope, or can be used entirely standalone.

PyProtocols may be used, modified, and distributed under the same terms and 
conditions as Python or Zope.


What's new in version 0.9.3rc1? (Highlights)
--------------------------------------------

* Adapter factories can now accept just one argument, the way Twisted and 
Zope adapters do.

* Interface and protocol objects can be called, as a shortcut for 'adapt()' 
(as Zope and Twisted interfaces do)

* You can now more easily install PyProtocols without a C compiler, using 
the '--without-speedups' option to 'setup.py' (see the README.txt file for 
details.)

* Numerous other bug fixes and enhancements - see CHANGES.txt for details.

IMPORTANT: If you are upgrading from a previous version of PyProtocols, 
please read UPGRADING.txt for important information.  Certain rarely-used 
features have been deprecated, and others have changed slightly.  Most 
users should not experience any problems (except perhaps for 
DeprecationWarnings), but please be sure to verify this before you upgrade 
any production code from 0.9.2 to 0.9.3.



PyProtocols Resources
---------------------

* Upgrading to PyProtocols 0.9.3 (and a look ahead to 1.0)
    http://peak.telecommunity.com/protocol_api/UPGRADING.txt.html

* Detailed Changes for all releases:
    http://peak.telecommunity.com/protocol_api/CHANGES.txt.html

* Release notes, installation instructions, and browsable API docs:
    http://peak.telecommunity.com/protocol_api/

* Source and Binary Releases:
    http://peak.telecommunity.com/dist/

* Reference Manual (HTML):
    http://peak.telecommunity.com/protocol_ref/module-protocols.html

* Reference Manual (PDF):
    http://peak.telecommunity.com/protocol_ref.pdf

* Browsable CVS Repository:
    http://cvs.eby-sarna.com/PyProtocols/ 




From klcheung0829 at sinaman.com  Tue Jul  6 08:04:40 2004
From: klcheung0829 at sinaman.com (klcheung0829 at sinaman.com)
Date: Tue, 6 Jul 2004 20:04:40 +0800
Subject: =?big5?B?UmU6IFJlOiBbVHdpc3RlZC1QeXRob25dIE1heCBudW1iZXIgb2Ygc2ltdWx0YW5lb3VzIFRDUA==?=
Message-ID: <20040706120441.3141.qmail@hk.sina.com.hk>


I checked the ulimit is increased.
I am new to the /proc, may I know how may I change the kernel setting there?


Yes, I am exactly trying to see how much connection Twisted-Python can handle.
==========================================================================================
????, ????! ???????? -
http://adimages.sina.com.hk/WSI_0704.html
??? ?????? -
http://news.sina.com.hk/focus/20040628/
????? ????? -
http://euro04.sina.com.hk/




From exarkun at divmod.com  Tue Jul  6 12:29:30 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 06 Jul 2004 12:29:30 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP
In-Reply-To: <20040706120441.3141.qmail@hk.sina.com.hk>
References: <20040706120441.3141.qmail@hk.sina.com.hk>
Message-ID: <40EAD36A.2060708@divmod.com>

klcheung0829 at sinaman.com wrote:
> I checked the ulimit is increased.
> I am new to the /proc, may I know how may I change the kernel setting there?
> 

  Even with the ulimit raised, select() will still only support about a
thousand sockets, unless you recompile libc.  Try using the poll
reactor, or another reactor which is not limited in such a way.

  Jp



From foom at fuhm.net  Tue Jul  6 12:49:51 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 6 Jul 2004 12:49:51 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP connection 
In-Reply-To: <20040705064959.15547.qmail@hk.sina.com.hk>
References: <20040705064959.15547.qmail@hk.sina.com.hk>
Message-ID: <7F86F37B-CF6C-11D8-A0E1-000A95A50FB2@fuhm.net>

On Jul 5, 2004, at 2:49 AM, klcheung0829 at sinaman.com wrote:
> Is there a maximum number of simultaneous connection for the 
> TCPServer?  I already set the ulimit -n 10000.  But it fails to accept 
> connection once it reaches about 1024.  Any way to increase it ?

This is a limit on the select() system call, which twisted uses in its 
default reactor. The maximum is changable via a #define (for C code), 
but you'd have to recompile python to do that. Fortunately, twisted 
includes a poll-based reactor, which doesn't have this limit. Use 
"twistd --reactor=poll".

BTW, the python poll API is such that epoll support could be added with 
no python-level API change. The python poll() object already uses add 
and remove methods with no way to read back the current list, so 
changing it to maintain the state in the kernel instead of in userspace 
should be pretty easy.

James




From dripton at ripton.net  Tue Jul  6 15:15:47 2004
From: dripton at ripton.net (David Ripton)
Date: Tue, 6 Jul 2004 12:15:47 -0700
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
Message-ID: <20040706191547.GA25695@vidar.dreamhost.com>

On 2004.07.05 21:19:13 +0000, Sergio Trejo wrote:
> I didn't realize that SOAP is Microsoft 
> FUD, as I thought SOAP is a W3C standard. Is W3C the committee that 
> Microsoft is trying to manipulate?

I didn't say anything about FUD or manipulation.  Microsoft and W3C
committees are perfectly capable of producing absolute garbage even 
when aiming for something good.  (Sturgeon's Law most definitely applies 
to software.)

If you like the basic idea of SOAP (client/server RPC via XML over http), 
I think XML-RPC (which is basically an early draft of SOAP) is fine.
Then feeping creaturism set in, and SOAP (plus the ring of associated
cruft like WSDL) is no longer simple.

I think PB is easier to use than XML-RPC, and (other than the Python
requirement) more flexible.  It allows passing general Python objects 
rather than just simple types, and supports asynchronous server-to-client 
callbacks over the original socket.

If pure request-response with just basic types is all you need, then 
either will work fine.  (So will SOAP, or CORBA for that matter if 
firewalls don't preclude it -- there'll just be more docs to read.)

-- 
David Ripton    dripton at ripton.net



From sam at couter.dropbear.id.au  Tue Jul  6 18:29:13 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Wed, 7 Jul 2004 08:29:13 +1000
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <20040706191547.GA25695@vidar.dreamhost.com>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
Message-ID: <20040706222913.GS25515@yosamite.tekno.house>

David Ripton <dripton at ripton.net> wrote:
> If you like the basic idea of SOAP (client/server RPC via XML over http), 
> I think XML-RPC (which is basically an early draft of SOAP) is fine.
> Then feeping creaturism set in, and SOAP (plus the ring of associated
> cruft like WSDL) is no longer simple.

WSDL is one of the very few redeeming features of SOAP - it's the
equivalent of CORBA's IDL, and allows you to define an interface and what
types it expects. For languages less dynamic than python, the WSDL can be
used to generate stub and skeleton code in an automated fashion.

Without WSDL, that code has to be written by hand. That's a menial, error
prone and BORING task. Other RPC systems worked out not to do that
decades ago.

For languages as dynamic as python, it allows code to dynamically
interrogate an interface to find what functions it provides.

> If pure request-response with just basic types is all you need, then 
> either will work fine.  (So will SOAP, or CORBA for that matter if 
> firewalls don't preclude it -- there'll just be more docs to read.)

Both SOAP and CORBA allow you to define complex objects to be marshalled
over the wire. Neither are limited to simple types. CORBA is not limited
to simple request-response.

With CORBA the remote end can get a stub (object reference) that they can
call remote methods on (callbacks). Object references can be passed back
and forth all over the place, and the stub knows where to send the
callback requests to find the original implementation of that object.

SOAP is value-object (structured data, no methods) only.

As far as I can tell, PB is a python-only equivalent to CORBA.
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040707/39550da6/attachment.pgp 

From golux at comcast.net  Tue Jul  6 21:19:07 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 06 Jul 2004 21:19:07 -0400
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <20040706222913.GS25515@yosamite.tekno.house>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
Message-ID: <40EB4F8B.3080400@comcast.net>

Sam Couter wrote:
> David Ripton <dripton at ripton.net> wrote:
> 
>>If you like the basic idea of SOAP (client/server RPC via XML over http), 
>>I think XML-RPC (which is basically an early draft of SOAP) is fine.
>>Then feeping creaturism set in, and SOAP (plus the ring of associated
>>cruft like WSDL) is no longer simple.
> 
> WSDL is one of the very few redeeming features of SOAP - it's the
> equivalent of CORBA's IDL, ...

... only it's in XML -- ooo, isn't that lovely!  Not.  8^P
IDL was more elegant.

> ... and allows you to define an interface and what
> types it expects. For languages less dynamic than python, the WSDL can be
> used to generate stub and skeleton code in an automated fashion.
> 
> Without WSDL, that code has to be written by hand. That's a menial, error
> prone and BORING task. Other RPC systems worked out not to do that
> decades ago.
> 
> For languages as dynamic as python, it allows code to dynamically
> interrogate an interface to find what functions it provides.

IMNSHO, these capabilities are okay, but very overrated.  Stub and
skeleton code is usually pretty trivial, and could be auto-generated
using much simpler, more natural, and better-supported approaches
than WSDL.  Seen any WSDL tools lately?  Me neither.

>>If pure request-response with just basic types is all you need, then 
>>either will work fine.  (So will SOAP, or CORBA for that matter if 
>>firewalls don't preclude it -- there'll just be more docs to read.)
> 
> Both SOAP and CORBA allow you to define complex objects to be marshalled
> over the wire. Neither are limited to simple types. CORBA is not limited
> to simple request-response.
> 
> With CORBA the remote end can get a stub (object reference) that they can
> call remote methods on (callbacks). Object references can be passed back
> and forth all over the place, and the stub knows where to send the
> callback requests to find the original implementation of that object.
> 
> SOAP is value-object (structured data, no methods) only.
> 
> As far as I can tell, PB is a python-only equivalent to CORBA.

Not exactly, but I'll let the more PB-savvy types respond to this.
Maybe Brian?  ;)  A very important distinction is that PB is, by
design, not "transparent", as CORBA tries to be.  One reason for
this is that quite often it's important for your application to
know what's remote and what's local.

But hey, RTFM -- the PB howtos are pretty good, methinks!  ;)

- Steve



From sam at couter.dropbear.id.au  Wed Jul  7 04:23:37 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Wed, 7 Jul 2004 18:23:37 +1000
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <40EB4F8B.3080400@comcast.net>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net>
Message-ID: <20040707082337.GT25515@yosamite.tekno.house>

Stephen Waterbury <golux at comcast.net> wrote:
> ... only it's in XML -- ooo, isn't that lovely!  Not.  8^P
> IDL was more elegant.

Definately. I'm not saying WSDL is better than IDL, I'm saying that WSDL
is better than no interface specification at all.

> IMNSHO, these capabilities are okay, but very overrated.  Stub and
> skeleton code is usually pretty trivial, and could be auto-generated
> using much simpler, more natural, and better-supported approaches
> than WSDL.  Seen any WSDL tools lately?  Me neither.

I use them in my day job (WebSphere). Microsoft's SOAP stuff has tools for
WSDL also. But I believe IBM and Microsoft have various patents on WSDL
processing, and as you say, WSDL isn't exactly nice. I haven't seen any
Free tools for parsing WSDL. Apache's Axis libraries can generate it
from Java classes and some extra type mapping information.

Anyway, this has drifted off-topic, since it's not about PB anymore.
No more from me.
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040707/721200ca/attachment.pgp 

From serj_trejo at hotmail.com  Wed Jul  7 08:22:42 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 07 Jul 2004 08:22:42 -0400
Subject: [Twisted-Python] Sincere Thanks!
Message-ID: <BAY12-F342pf8gVHzg100027f2e@hotmail.com>

My head keeps spinning as I'm reading about Twisted and all that it can do. 
I think Twisted is a great word for what it does to fire the human neurons 
in ones brain when one first discovers Twisted (its like discovering a new 
planet)! I just finished reading the document titled, "Network Programming 
for the Rest of Us" and its really awesome. Network programming is not for 
the faint of heart and abstractions such as Deferred and using Event Loops 
for an asynchronous interdependent world that we now live in is just way way 
cool (as is the simplicity and the namespace being well done).

It may not be as big of a deal for those who have lived closer to the world 
of networked programming, but I think Twisted represents a major leap for 
humankind because it truly opens the doors of opportunity for programming 
really interesting and dynamic applications (especially for those who need 
to bridge information science with another discipline or two). The Twisted 
contributors are "gods" IMHO! Thank you thank you thank you!!!!

Sergio

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From db3l at fitlinxx.com  Wed Jul  7 11:30:33 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 07 Jul 2004 11:30:33 -0400
Subject: [Twisted-Python] Re: Spread or SOAP
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net>
Message-ID: <u1xjn25t2.fsf@fitlinxx.com>

Stephen Waterbury <golux at comcast.net> writes:

> Not exactly, but I'll let the more PB-savvy types respond to this.
> Maybe Brian?  ;)  A very important distinction is that PB is, by
> design, not "transparent", as CORBA tries to be.  One reason for
> this is that quite often it's important for your application to
> know what's remote and what's local.

If your objects themselves already use a deferrable interface
(otherwise you couldn't hide the object's use of callRemote which is
asynchronous), it's also possible to wrap such references so they can
be used more transparently.  We were able to come up with a mix-in
remote class that handled this transparently for our objects, with
occasional custom handling of individual methods on the remote side
(mostly those that needed to wrap their own results).

To me, another really important distinction between PB and CORBA is
that object references do not survive the lifetime of the network
connection on which they were created, even if the objects themselves
continue to exist on the machine where they were instantiated.  It's
been a while for me, but with CORBA I believe an IOR can always be
used to connect and execute calls against an object even across
multiple connections to the machine where the object is instantiated.
While actual object IDs retrieved from binding are transient, brokers
can implement automatic rebinding (since the original name remains
valid) across network outages.

That PB invalidates such references does make some sense in that
otherwise the side of the PB connection that handed out the reference
might be the only reason keeping the object alive within that Python
runtime, but it does introduce complexity in dealing with network
outages.  In our case, it's been a driving force towards defining
which objects are returned as references (only those for which there
are natural "lookup" points in the application on which a network
failure/retry mechanism can be hung) and which are returned as copies,
and how we perform updates to such copies (sending back the new object
as another copy rather than using a reference to it).

I'd love to see a graceful persistent object reference scheme added to
PB, but there are a number of issues to think about for any such
system.  Note also that this does not mean that PB isn't extremely
good at what it does do, since it is, and we're definitely using it.
To me, much of the strength of PB compared to other remoting
approaches is its simplicity and straight-forward nature due to
choices of what to support and not support (like not trying to be
transparent or persistent).

-- David




From miracle at slingshot.co.nz  Wed Jul  7 20:35:18 2004
From: miracle at slingshot.co.nz (Matthew Sherborne)
Date: Thu, 08 Jul 2004 12:35:18 +1200
Subject: [Twisted-Python] wxPython integration solution
In-Reply-To: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
References: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
Message-ID: <40EC96C6.9050507@slingshot.co.nz>

Hi All,

I've posted a solution for wx - twisted integration. Based on Itamars 
suggestions of two threads.

It's very easy to use.

To call a twisted method from wx thread just do:
   netCall(someTwistedThing, myParam, kword1=x, kword2=1)

It returns a deferred, that will be calledback and erredback safely in 
the wx thread.

Same for calling gui stuff from a twisted thread.
  guiCall(someGuiThing, (p1, p2))

or even easier create an interlayer object:
from twisted.protocols.basic import LineReceiver

class Gui2Net(LineReceiver):
    ...
    def send(self, someData):
        self.transport.send(someData)
    send = makeNetSafe(send)

In this example an instance of GuiNet can be used safely by the gui 
thread, it can send data, just like if it was a normal twisted call; it 
will return a deferred. "makeNetSafe" means make this net call safe to 
be called from the gui.

There is also a "makeGuiSafe" call, but I haven't tested it.

You can still use the wrapper object in your test cases if you dont have 
a gui. If no TwistedThread is instansiated netCall and makeNetSafe just 
pass through.

Comments appreciated.

Matthew Sherborne
Sherborne International Ltd
www.sherborneinternational.com




From miracle at slingshot.co.nz  Wed Jul  7 20:55:03 2004
From: miracle at slingshot.co.nz (Matthew Sherborne)
Date: Thu, 08 Jul 2004 12:55:03 +1200
Subject: [Twisted-Python] wxPython integration solution
In-Reply-To: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
References: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
Message-ID: <40EC9B67.9090400@slingshot.co.nz>

Sorry forgot the URL.

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/286201

It's long because there's a demo chat app in there...

Matthew Sherborne
Sherborne International Ltd
www.sherborneinternational.com





From glyph at divmod.com  Wed Jul  7 21:10:43 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 07 Jul 2004 21:10:43 -0400
Subject: [Twisted-Python] Re: Spread or SOAP
In-Reply-To: <u1xjn25t2.fsf@fitlinxx.com>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net>  <u1xjn25t2.fsf@fitlinxx.com>
Message-ID: <1089249043.8254.46.camel@kazekage>

On Wed, 2004-07-07 at 11:30, David Bolen wrote:

> I'd love to see a graceful persistent object reference scheme added to
> PB, 

In the next version of PB, URLs are a part of the connection structure,
and so persistent object references can be accomplished by publishing a
URL.




From db3l at fitlinxx.com  Thu Jul  8 20:40:09 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 08 Jul 2004 20:40:09 -0400
Subject: [Twisted-Python] Re: Spread or SOAP
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net> <u1xjn25t2.fsf@fitlinxx.com>
	<1089249043.8254.46.camel@kazekage>
Message-ID: <uoemq9fo6.fsf@fitlinxx.com>

Glyph Lefkowitz <glyph at divmod.com> writes:

> On Wed, 2004-07-07 at 11:30, David Bolen wrote:
> 
> > I'd love to see a graceful persistent object reference scheme added to
> > PB, 
> 
> In the next version of PB, URLs are a part of the connection structure,
> and so persistent object references can be accomplished by publishing a
> URL.

Sounds promising...

Next version as in CVS somewhere or just plans at this point?

Might it also come with a broker that would automatically re-establish
an object's connection if a dead remote reference were used
(presumably it would require remote references to also keep track of
their original URL used)?

-- David




From andreas at mtg.co.at  Fri Jul  9 05:37:57 2004
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Fri, 09 Jul 2004 11:37:57 +0200
Subject: [Twisted-Python] Small Docu fix
Message-ID: <1089365876.1727.36.camel@andi-lap>

The ImportError is nice, but for the records it should be documented: :)
Index: INSTALL
===================================================================
--- INSTALL     (revision 11042)
+++ INSTALL     (working copy)
@@ -1,6 +1,7 @@
 Requirements

   Python 2.2 or later.
+  ZopeInterfaces (http://zope.org/Products/ZopeInterface)

   SSL/TLS: PyOpenSSL 0.5.1 or later (http://pyopenssl.sf.net)
   Serial: PySerial (http://pyserial.sf.net)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040709/37430bb9/attachment.pgp 

From jt at parspro.com  Sun Jul 11 14:37:21 2004
From: jt at parspro.com (John Toohey)
Date: Sun, 11 Jul 2004 14:37:21 -0400
Subject: [Twisted-Python] Insecure Jelly exception in daemon mode
Message-ID: <586F6EB2-D369-11D8-81E6-000A95AE562E@parspro.com>

I have two servers, A and B. Server A polls a datasource, and pushes 
data to server B. Server B caches this data and expose a SOAP interface 
for external clients to call. When I run server B with twistd -n -y 
server.py, Server A can connect and send data. However, when I create a 
TAP file for server B and run its as a background daemon, I get 
Insecure Jelly exception when I send the data.

Is there something I need to do, in my code, to remove this error when 
running in daemon mode?

Any help greatly appreciated.

JT




From jon at totient.demon.co.uk  Mon Jul 12 16:09:20 2004
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Mon, 12 Jul 2004 21:09:20 +0100
Subject: [Twisted-Python] connect/listenUNIX with fd's from socketpair
Message-ID: <200407122109.20906.jon@totient.demon.co.uk>

Hi

assuming a working version of socketpair (which I do have courtesy of the scgi 
module here http://www.mems-exchange.org/software/scgi/)

Is there a way to perform listenUNIX or connectUNIX on the reactor with
just the raw file descriptors?

I have twisted script, which I plan to fork after calling socketpair
which will give me a child processes connected to each other? 


Jon




From jlb at houseofdistraction.com  Mon Jul 12 18:30:44 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Mon, 12 Jul 2004 15:30:44 -0700
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write vs
	unicode
Message-ID: <40F31114.4000108@houseofdistraction.com>

Is there a good reason for 
twisted.internet.abstract.FileDescription.write to require 
isinstance(data, str) rather than also allowing isinstance(type, unicode)??




From foom at fuhm.net  Mon Jul 12 18:48:29 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 12 Jul 2004 18:48:29 -0400
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F31114.4000108@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
Message-ID: <97E60AE0-D455-11D8-9656-000A95A50FB2@fuhm.net>

Yes. Sockets can only transmit and files can only store bytes, not 
characters. The python 'str' unfortunately does double-duty as a 
byte-string and a character string limited to ASCII and/or ISO8859-1 
characters, which often causes confusion among users.

The python 'unicode' is a character string, and thus has no place being 
written to a socket/file. If you want to write unicode data, first 
convert to the appropriate byte encoding, using .encode(encname). I'd 
suggest something like "UTF-8" or, perhaps you'd prefer "UTF-16LE". Or 
maybe something else...whatever your app requires.

James

On Jul 12, 2004, at 6:30 PM, Jeff Bowden wrote:

> Is there a good reason for 
> twisted.internet.abstract.FileDescription.write to require 
> isinstance(data, str) rather than also allowing isinstance(type, 
> unicode)??




From mary-twisted at puzzling.org  Mon Jul 12 18:53:12 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 13 Jul 2004 08:53:12 +1000
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F31114.4000108@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
Message-ID: <20040712225312.GC3278@titus.home.puzzling.org>

On Mon, Jul 12, 2004, Jeff Bowden wrote:
> Is there a good reason for 
> twisted.internet.abstract.FileDescription.write to require 
> isinstance(data, str) rather than also allowing isinstance(type, unicode)??

This is one of those rare things, an FAQ that really is a "Frequently
Asked Question" not a "Question We Wish You'd Ask".

Unfortunately, I haven't actually added it to the FAQs yet :( See the
discussion at
http://www.twistedmatrix.com/users/roundup.twistd/twisted/issue617, in
particular Glyph Lefkowitz's comment:

    
    "Q. Why doesn't {API X} accept both string objects and unicode
    objects?  Isn't it better to use unicode so you can support
    internationalization?

    A. Unicode is for talking about strings of human-readable text.
    String objects can also be used for this purpose, and when they are,
    it is better to use unicode, you are correct.  However, {API X} is
    dealing with raw data, probably coming from a network connection,
    and is using String objects as containers of sequences of bytes.
    Unicode has no way of representing sequences of bytes and streams of
    'raw', unparsed data.  The data has to be translated at some level
    *above* that, in order to get things like unicode character
    alignment correct.

    For more information and some idea of the complexity involved, read
    http://www.sidhe.org/~dan/blog/archives/000255.html and
    http://www.joelonsoftware.com/articles/Unicode.html"

-Mary



From bob at redivi.com  Mon Jul 12 18:55:12 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 12 Jul 2004 18:55:12 -0400
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F31114.4000108@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
Message-ID: <8865488C-D456-11D8-803B-000A95686CD8@redivi.com>

On Jul 12, 2004, at 6:30 PM, Jeff Bowden wrote:

> Is there a good reason for 
> twisted.internet.abstract.FileDescription.write to require 
> isinstance(data, str) rather than also allowing isinstance(type, 
> unicode)??

Yeah, unicode doesn't have a designated wire format and Python's 
default encoding choice is generally VERY stupid (usually ascii or 
latin-1) which leads to hard to detect bugs.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040712/0c20c9f9/attachment.bin 

From miracle at slingshot.co.nz  Mon Jul 12 19:20:56 2004
From: miracle at slingshot.co.nz (Matthew Sherborne)
Date: Tue, 13 Jul 2004 11:20:56 +1200
Subject: [Twisted-Python] Re: Insecure Jelly exception in daemon mode (John
	Toohey)
In-Reply-To: <E1Bk563-0006Fz-00@pyramid.twistedmatrix.com>
References: <E1Bk563-0006Fz-00@pyramid.twistedmatrix.com>
Message-ID: <40F31CD8.60605@slingshot.co.nz>

Turn the data into nice types, with pg you might get PgInt types from 
your data, and each row of the database is in a special list & dict type 
allowing numeric or nomical access the value of each column.

Easy way:
tosend = []
for row in data:
   newRow = tuple([str(item) for item in row])
   tosend.append(newRow)

Better way?
Surposing your data is returned as an int, a date/time, an interval 
(mx.datetimedelta) and a string...
tosend = []
for myint, mydate, mydelta, mystr in data:
   tosend.append((int(myint), packageDate(mydate), 
packageDateTimeDelta(mydelta), str(mystr)))

def packageDate(d):
   return d.year, d.month, d.day, d.hour, d.minute, d.second

def unpackageDate(d):
  from mx.DateTime import DateTime
  return DateTime(*d)

I will leave the rest as an exercise for the reader.

See 
*http://twisted.sourceforge.net/TwistedDocs-1.2.1alpha1/howto/pb-copyable.html

May God bless you and your family
Matthew Sherborne
www.sherborneinternational.com
*



From jlb at houseofdistraction.com  Tue Jul 13 00:50:43 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Mon, 12 Jul 2004 21:50:43 -0700
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <20040712225312.GC3278@titus.home.puzzling.org>
References: <40F31114.4000108@houseofdistraction.com>
	<20040712225312.GC3278@titus.home.puzzling.org>
Message-ID: <40F36A23.5010107@houseofdistraction.com>

Mary Gardiner wrote:

>On Mon, Jul 12, 2004, Jeff Bowden wrote:
>  
>
>>Is there a good reason for 
>>twisted.internet.abstract.FileDescription.write to require 
>>isinstance(data, str) rather than also allowing isinstance(type, unicode)??
>>    
>>
>
>This is one of those rare things, an FAQ that really is a "Frequently
>Asked Question" not a "Question We Wish You'd Ask".
>
>Unfortunately, I haven't actually added it to the FAQs yet :( See the
>discussion at
>http://www.twistedmatrix.com/users/roundup.twistd/twisted/issue617, in
>particular Glyph Lefkowitz's comment:
>
>    
>    "Q. Why doesn't {API X} accept both string objects and unicode
>    objects?  Isn't it better to use unicode so you can support
>    internationalization?
>
>    A. Unicode is for talking about strings of human-readable text.
>    String objects can also be used for this purpose, and when they are,
>    it is better to use unicode, you are correct.  However, {API X} is
>    dealing with raw data, probably coming from a network connection,
>    and is using String objects as containers of sequences of bytes.
>    Unicode has no way of representing sequences of bytes and streams of
>    'raw', unparsed data.  The data has to be translated at some level
>    *above* that, in order to get things like unicode character
>    alignment correct.
>
>    For more information and some idea of the complexity involved, read
>    http://www.sidhe.org/~dan/blog/archives/000255.html and
>    http://www.joelonsoftware.com/articles/Unicode.html"
>  
>

Right, so I worked around this problem by calling .encode('utf8') in all 
the places where strings go out (after making appropriate changes to the 
content-encoding).

It wasn't that complicated but it was a PITA and it will be an ongoing 
maintenance headache.  It would be a lot nicer if the framework dealt 
with it transparently.

FileDescriptor.write does seem like the wrong place to handle it even 
though that's where the error message pops out.  Apparently what's 
needed is another layer on top of the http layer.   Has anyone attempted 
to write one?





From serj_trejo at hotmail.com  Tue Jul 13 06:26:23 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 13 Jul 2004 06:26:23 -0400
Subject: [Twisted-Python] Reactor use with blocking + sequencing?
Message-ID: <BAY12-F19vVQIBs5j6T0001c7ba@hotmail.com>

I have a few legacy simple Python modules that run on a machine that doesn't 
give me access to a crontab (I know, this sounds kind of dumb but 
unfortunately this is the policy of this a shared account that I have no 
choice but to use). With these legacy modules I have to run two (extrnal, 
non-Python) programs periodically (thus, similar to a cron) and also 
sequentially (I.e., when program A finishes, run program B) and thus 
blocking is required. To do this I've been using Python's popen3() -- and it 
has worked fine. There is an old saying: "If it ain't broke, don't fix it." 
However, I'm tempted to re-think these modules by perhaps using the Twisted 
reactor because it has all of these other nice benefits such as provisioning 
daemonization.

I realize that Twisted's core strength is for network programming of 
asynchronous non-blocking apps and perhaps I might be better off sticking 
with my popen's instead? Any suggestions from the Twisted veterans?

Sergio

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From mwh at python.net  Tue Jul 13 09:30:01 2004
From: mwh at python.net (Michael Hudson)
Date: Tue, 13 Jul 2004 14:30:01 +0100
Subject: [Twisted-Python] 
	Re: twisted.internet.abstract.FileDescription.write vs unicode
References: <40F31114.4000108@houseofdistraction.com>
	<8865488C-D456-11D8-803B-000A95686CD8@redivi.com>
Message-ID: <2m4qocyqzq.fsf@starship.python.net>

Bob Ippolito <bob at redivi.com> writes:

> On Jul 12, 2004, at 6:30 PM, Jeff Bowden wrote:
>
>> Is there a good reason for
>> twisted.internet.abstract.FileDescription.write to require
>> isinstance(data, str) rather than also allowing isinstance(type,
>> unicode)??
>
> Yeah, unicode doesn't have a designated wire format and Python's
> default encoding choice is generally VERY stupid (usually ascii or
> latin-1) which leads to hard to detect bugs.

Pff, Python's choice is very wimpy which means that bugs bite you
earlier.  The real problem is the double-duty thing others alluded to;
there's no way changing the default encoding can make this go away.

Cheers,
mwh

-- 
  same software, different verbosity settings (this one goes to
  eleven)                             -- the effbot on the martellibot




From matt at pollenation.net  Tue Jul 13 10:35:33 2004
From: matt at pollenation.net (Matt Goodall)
Date: Tue, 13 Jul 2004 15:35:33 +0100
Subject: [Twisted-Python] Reactor use with blocking + sequencing?
In-Reply-To: <BAY12-F19vVQIBs5j6T0001c7ba@hotmail.com>
References: <BAY12-F19vVQIBs5j6T0001c7ba@hotmail.com>
Message-ID: <1089729332.15152.301.camel@harold>

On Tue, 2004-07-13 at 11:26, Sergio Trejo wrote:
> I have a few legacy simple Python modules that run on a machine that doesn't 
> give me access to a crontab (I know, this sounds kind of dumb but 
> unfortunately this is the policy of this a shared account that I have no 
> choice but to use). With these legacy modules I have to run two (extrnal, 
> non-Python) programs periodically (thus, similar to a cron) and also 
> sequentially (I.e., when program A finishes, run program B) and thus 
> blocking is required. To do this I've been using Python's popen3() -- and it 
> has worked fine. There is an old saying: "If it ain't broke, don't fix it." 
> However, I'm tempted to re-think these modules by perhaps using the Twisted 
> reactor because it has all of these other nice benefits such as provisioning 
> daemonization.
> 
> I realize that Twisted's core strength is for network programming of 
> asynchronous non-blocking apps and perhaps I might be better off sticking 
> with my popen's instead? Any suggestions from the Twisted veterans?

You can spawn processes via the reactor. See
http://twistedmatrix.com/documents/current/howto/process for details.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From itamar at itamarst.org  Tue Jul 13 11:10:16 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 13 Jul 2004 11:10:16 -0400
Subject: [Twisted-Python] connect/listenUNIX with fd's from socketpair
In-Reply-To: <200407122109.20906.jon@totient.demon.co.uk>
References: <200407122109.20906.jon@totient.demon.co.uk>
Message-ID: <1089731416.29326.16.camel@sheriffpony>

On Mon, 2004-07-12 at 16:09, Jon Dyte wrote:

> I have twisted script, which I plan to fork after calling socketpair
> which will give me a child processes connected to each other? 

The current spawnProcess API allows something like that already, I
think, though I don't know enough to be sure (you can have arbitrary fds
be either read or write from the parent process).

-- 
Itamar Shtull-Trauring    http://itamarst.org





From foom at fuhm.net  Tue Jul 13 13:23:25 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 13 Jul 2004 13:23:25 -0400
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F36A23.5010107@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
	<20040712225312.GC3278@titus.home.puzzling.org>
	<40F36A23.5010107@houseofdistraction.com>
Message-ID: <591D608C-D4F1-11D8-B5AB-000A95A50FB2@fuhm.net>

On Jul 13, 2004, at 12:50 AM, Jeff Bowden wrote:
> Right, so I worked around this problem by calling .encode('utf8') in 
> all the places where strings go out (after making appropriate changes 
> to the content-encoding).
>
> It wasn't that complicated but it was a PITA and it will be an ongoing 
> maintenance headache.  It would be a lot nicer if the framework dealt 
> with it transparently.
>
> FileDescriptor.write does seem like the wrong place to handle it even 
> though that's where the error message pops out.  Apparently what's 
> needed is another layer on top of the http layer.   Has anyone 
> attempted to write one?

I assume you know about Nevow?

James




From jlb at houseofdistraction.com  Tue Jul 13 16:00:35 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Tue, 13 Jul 2004 13:00:35 -0700
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <591D608C-D4F1-11D8-B5AB-000A95A50FB2@fuhm.net>
References: <40F31114.4000108@houseofdistraction.com>	<20040712225312.GC3278@titus.home.puzzling.org>	<40F36A23.5010107@houseofdistraction.com>
	<591D608C-D4F1-11D8-B5AB-000A95A50FB2@fuhm.net>
Message-ID: <40F43F63.9060703@houseofdistraction.com>

James Y Knight wrote:

> On Jul 13, 2004, at 12:50 AM, Jeff Bowden wrote:
>
>> Right, so I worked around this problem by calling .encode('utf8') in 
>> all the places where strings go out (after making appropriate changes 
>> to the content-encoding).
>>
>> It wasn't that complicated but it was a PITA and it will be an 
>> ongoing maintenance headache.  It would be a lot nicer if the 
>> framework dealt with it transparently.
>>
>> FileDescriptor.write does seem like the wrong place to handle it even 
>> though that's where the error message pops out.  Apparently what's 
>> needed is another layer on top of the http layer.   Has anyone 
>> attempted to write one?
>
>
> I assume you know about Nevow?
>

I do and I'm using it for my client web frontend, but it's not 
appropriate for the backend part of my application.  Does it handle 
unicode transparently?




From general at eepatents.com  Wed Jul 14 16:26:56 2004
From: general at eepatents.com (Ed Suominen)
Date: Wed, 14 Jul 2004 13:26:56 -0700
Subject: [Twisted-Python] Collaborative Text Editor
Message-ID: <cd44u3$eva$1@sea.gmane.org>

I'm thinking of implementing a real-time collaborative text editor in Python
using Twisted. An initial plan is to use a Twisted PB server daemon that
accepts user:password:file connections from text editor clients to make
changes to a specified file on the server, and have the text editor clients
update their local copies of the file based on local user input or input
entered from other users, relayed via the server.

Jabber compatibility would be nice, as would color-coding of different
users' text, etc. But I really want to keep this as simple as possible for
a specific purpose. (I've written with twisted PB recently and am very
pleased with its power and ease of use.)

I'd appreciate pointers to any existing, simple Python-based text editors
suitable for being adapted to this purpose. "Suitable" means under an
OSI-approved license and written cleanly and modularly to facilitate
incorporation into another project.

Offers to collaborate would be gratefully accepted. The result, if any, will
be GPL'd and released. If anyone wants to take these ideas and run with a
project of their own, be my guest.

Thanks, Ed

-- 
Ed Suominen
Registered Patent Agent 
Open Source Developer (Yes, both...)
Web Site: http://www.eepatents.com





From spam at mike-warren.com  Wed Jul 14 17:24:29 2004
From: spam at mike-warren.com (Mike Warren)
Date: Wed, 14 Jul 2004 15:24:29 -0600
Subject: [Twisted-Python] Collaborative Text Editor
In-Reply-To: <cd44u3$eva$1@sea.gmane.org>
References: <cd44u3$eva$1@sea.gmane.org>
Message-ID: <E1BkrEr-0005Di-00@meejah.homeip.net>

Ed Suominen <general at eepatents.com> writes:

> I'd appreciate pointers to any existing, simple Python-based text editors
> suitable for being adapted to this purpose. "Suitable" means under an
> OSI-approved license and written cleanly and modularly to facilitate
> incorporation into another project.

I seem to recall that there's an xemacs implementation of twisted's PB
stuff [checks; yes, it's true, but "partial"]; IMO, such a
text-editing thing will only be useful if one uses a "real" text
editor like emacs (or whatever your favourite "real" text-editor is,
but I'm reasonably sure [1] it's not IDLE or something Pythonic for
most programmers...)


Footnotes: 
[1] of course, I say that sitting inside a GNUS inside a SCREEN
    instance inside RATPOISON, so I might not be "average"...

Good luck,

-- 
mike [at] mike [dash] warren [dot] com
<URL:http://www.mike-warren.com>
gpg --keyserver 80.71.227.37 --recv-key 579911BD
87F2 4D98 BDB0 0E90 EE2A 0CF9 1087 0884 5799 11BD



From ken at kenkinder.com  Wed Jul 14 18:27:43 2004
From: ken at kenkinder.com (Ken Kinder)
Date: Wed, 14 Jul 2004 17:27:43 -0500
Subject: [Twisted-Python] Issue with calling back deferreds from threads
Message-ID: <40F5B35F.30903@kenkinder.com>

Introduced in one of the recent versions of Twisted was a patch 
described here. I'm cc'ing itamar because he created the patch:

    
http://twistedmatrix.com/pipermail/twisted-commits/2003-November/010059.html

This makes sure you can't callback with Deferred objects. However, some 
of my code depends on doing just that because of the blocking DNS issue:

def mymethod(*args):
    def go(*args):
       return xmlproxy.callRemote(*args)
    twisted.internet.threads.deferToThread(go)

As you can see, I'm deferring something that should not be blocking to a 
thread. The purpose for doing so is that sometimes resolving the 
hostname can take a while for this call. (Unrelated document issue with 
Twisted: DNS is blocking.) So, in this case, it is desirable (although 
hackish) to defer the creation of a deferred object to a thread, and 
itamar's patch prevents this process.

One option I have is to make go() blocking, but that will hold a thread 
open for longer than is necessary. Another option is to comment out the 
assertion, but that's probably not a good idea. Until the DNS blocking 
issue is resolved, I'm not sure how to solve this one.

Suggestions?

Thanks
Ken



From bob at redivi.com  Wed Jul 14 19:26:13 2004
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 14 Jul 2004 19:26:13 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>


On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:

> Introduced in one of the recent versions of Twisted was a patch  
> described here. I'm cc'ing itamar because he created the patch:
>
>     
> http://twistedmatrix.com/pipermail/twisted-commits/2003-November/ 
> 010059.html
>
> This makes sure you can't callback with Deferred objects. However,  
> some of my code depends on doing just that because of the blocking DNS  
> issue:
>
> def mymethod(*args):
>    def go(*args):
>       return xmlproxy.callRemote(*args)
>    twisted.internet.threads.deferToThread(go)
>
> As you can see, I'm deferring something that should not be blocking to  
> a thread. The purpose for doing so is that sometimes resolving the  
> hostname can take a while for this call. (Unrelated document issue  
> with Twisted: DNS is blocking.) So, in this case, it is desirable  
> (although hackish) to defer the creation of a deferred object to a  
> thread, and itamar's patch prevents this process.

Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
non-blocking?

> One option I have is to make go() blocking, but that will hold a  
> thread open for longer than is necessary. Another option is to comment  
> out the assertion, but that's probably not a good idea. Until the DNS  
> blocking issue is resolved, I'm not sure how to solve this one.
>
> Suggestions?

Yeah, use reactor.callFromThread.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040714/0ca7625f/attachment.bin 

From bob at redivi.com  Wed Jul 14 19:26:13 2004
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 14 Jul 2004 19:26:13 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>


On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:

> Introduced in one of the recent versions of Twisted was a patch  
> described here. I'm cc'ing itamar because he created the patch:
>
>     
> http://twistedmatrix.com/pipermail/twisted-commits/2003-November/ 
> 010059.html
>
> This makes sure you can't callback with Deferred objects. However,  
> some of my code depends on doing just that because of the blocking DNS  
> issue:
>
> def mymethod(*args):
>    def go(*args):
>       return xmlproxy.callRemote(*args)
>    twisted.internet.threads.deferToThread(go)
>
> As you can see, I'm deferring something that should not be blocking to  
> a thread. The purpose for doing so is that sometimes resolving the  
> hostname can take a while for this call. (Unrelated document issue  
> with Twisted: DNS is blocking.) So, in this case, it is desirable  
> (although hackish) to defer the creation of a deferred object to a  
> thread, and itamar's patch prevents this process.

Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
non-blocking?

> One option I have is to make go() blocking, but that will hold a  
> thread open for longer than is necessary. Another option is to comment  
> out the assertion, but that's probably not a good idea. Until the DNS  
> blocking issue is resolved, I'm not sure how to solve this one.
>
> Suggestions?

Yeah, use reactor.callFromThread.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040714/0ca7625f/attachment-0001.bin 

From bob at redivi.com  Wed Jul 14 19:31:09 2004
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 14 Jul 2004 19:31:09 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <E2F1D271-D5ED-11D8-A28E-000A95686CD8@redivi.com>


On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:

> Introduced in one of the recent versions of Twisted was a patch  
> described here. I'm cc'ing itamar because he created the patch:
>
>     
> http://twistedmatrix.com/pipermail/twisted-commits/2003-November/ 
> 010059.html
>
> This makes sure you can't callback with Deferred objects. However,  
> some of my code depends on doing just that because of the blocking DNS  
> issue:
>
> def mymethod(*args):
>    def go(*args):
>       return xmlproxy.callRemote(*args)
>    twisted.internet.threads.deferToThread(go)
>
> As you can see, I'm deferring something that should not be blocking to  
> a thread. The purpose for doing so is that sometimes resolving the  
> hostname can take a while for this call. (Unrelated document issue  
> with Twisted: DNS is blocking.) So, in this case, it is desirable  
> (although hackish) to defer the creation of a deferred object to a  
> thread, and itamar's patch prevents this process.

Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
non-blocking?

> One option I have is to make go() blocking, but that will hold a  
> thread open for longer than is necessary. Another option is to comment  
> out the assertion, but that's probably not a good idea. Until the DNS  
> blocking issue is resolved, I'm not sure how to solve this one.
>
> Suggestions?

Yeah, use reactor.callFromThread.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040714/182865a1/attachment.bin 

From andrew-twisted at puzzling.org  Thu Jul 15 01:33:05 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 15 Jul 2004 15:33:05 +1000
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>
References: <40F5B35F.30903@kenkinder.com>
	<32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>
Message-ID: <20040715053305.GC28548@frobozz>

On Wed, Jul 14, 2004 at 07:26:13PM -0400, Bob Ippolito wrote:
> 
> On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:
> 
[...]
> >hostname can take a while for this call. (Unrelated document issue  
> >with Twisted: DNS is blocking.) So, in this case, it is desirable  
> >(although hackish) to defer the creation of a deferred object to a  
> >thread, and itamar's patch prevents this process.
> 
> Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
> non-blocking?

There is, although not clearly documented anywhere I know of.  It's:

    from twisted.names import client
    from twisted.internet import reactor
    reactor.installResolver(client.theResolver)

If you need a resolver with different behavior to the default (e.g. you want
to tell it to use a specific DNS server), use:

    resolver = client.createResolver(servers=[('127.0.0.1', 53)])
    reactor.installResolver(resolver)

There's also a ThreadedResolver, which just uses Python's builtin
socket.gethostbyname in a thread.  You could install that one with:

    reactor.installResolver(client.ThreadedResolver())

-Andrew.




From nico at tekNico.net  Thu Jul 15 03:53:19 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 15 Jul 2004 09:53:19 +0200
Subject: [Twisted-Python] Re: Collaborative Text Editor
References: <cd44u3$eva$1@sea.gmane.org>
Message-ID: <200407150953.23445.nico@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> I'm thinking of implementing a real-time collaborative text editor in
> Python using Twisted.

Are you aware of LeoN?
http://ryalias.freezope.org/souvenirs/leon

Leo (without 'N') is an outlining editor written in Python, old and
powerful, and LeoN is an extension for collaborative editing based on
Twisted, new and alpha, but probably worth a look.


- --
Nicola Larosa - nico at tekNico.net

"When a student asks why case matters, simply ask why it shouldn't matter.
If they think it would be easier to use Python if they can be inconsistent
in their use of case, then they have the answer. Python helps teach that
consistency matters." -- Michael McLay, April 2004

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFA9jfyUE0NcK/GJXYRAlebAJ9wNXcLDrZknQpM7fjGiSBo909qswCffbKt
iRExrxWyVXAXczvdLRFChPk=
=ZQax
-----END PGP SIGNATURE-----



From serj_trejo at hotmail.com  Thu Jul 15 07:03:12 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Thu, 15 Jul 2004 07:03:12 -0400
Subject: [Twisted-Python] Semantics sought: lambda?
Message-ID: <BAY12-F12nGEbJ8MqU200038f36@hotmail.com>

In the Twisted documentation, there are several examples and references that 
use the term "lambda" but I can't find any semantic definition of what 
lambda is about. For example:

d.addCallback(lambda object: object.callRemote("echo", "hello network"))

I'm kind of new to Python and prior to Twisted, I have not seen this type of 
syntax before:

"lambda object: "

Any references would be appreciated.

Sergio

_________________________________________________________________
Add photos to your messages with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From matt at pollenation.net  Thu Jul 15 07:41:15 2004
From: matt at pollenation.net (Matt Goodall)
Date: Thu, 15 Jul 2004 12:41:15 +0100
Subject: [Twisted-Python] Semantics sought: lambda?
In-Reply-To: <BAY12-F12nGEbJ8MqU200038f36@hotmail.com>
References: <BAY12-F12nGEbJ8MqU200038f36@hotmail.com>
Message-ID: <1089891675.26390.12.camel@harold>

On Thu, 2004-07-15 at 12:03, Sergio Trejo wrote:
> In the Twisted documentation, there are several examples and references that 
> use the term "lambda" but I can't find any semantic definition of what 
> lambda is about. For example:
> 
> d.addCallback(lambda object: object.callRemote("echo", "hello network"))
> 
> I'm kind of new to Python and prior to Twisted, I have not seen this type of 
> syntax before:
> 
> "lambda object: "
> 
> Any references would be appreciated.

lambdas are Python's way of creating short, anonymous functions. They
are document at python.org:

 - http://www.python.org/doc/current/ref/lambdas.html
 - http://docs.python.org/tut/node6.html#SECTION006750000000000000000

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From itamar at itamarst.org  Thu Jul 15 09:53:48 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Jul 2004 09:53:48 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <1089899627.29322.49.camel@sheriffpony>

On Wed, 2004-07-14 at 18:27, Ken Kinder wrote:

> So, in this case, it is desirable (although 
> hackish) to defer the creation of a deferred object to a thread, and 
> itamar's patch prevents this process.

1. Twisted is NOT THREAD SAFE. Code that talks to Twisted in any way
will break if run in a thread in parallel to the main reactor thread.
Use reactor.callFromThread to call Twisted code in the reactor thread
from other threads.

2. Twisted supports non-blocking DNS, see other posts.

3. If you *do* need to connect two Deferreds together, you might want to
look at twisted.internet.defer.maybeDeferred and Deferred.chainDeferred,
functions.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From ken at kenkinder.com  Thu Jul 15 10:22:24 2004
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 15 Jul 2004 09:22:24 -0500
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <20040715053305.GC28548@frobozz>
References: <40F5B35F.30903@kenkinder.com>	<32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>
	<20040715053305.GC28548@frobozz>
Message-ID: <40F69320.6070706@kenkinder.com>

Andrew Bennetts wrote:

>On Wed, Jul 14, 2004 at 07:26:13PM -0400, Bob Ippolito wrote:
>  
>
>>On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:
>>
>>    
>>
>[...]
>  
>
>>>hostname can take a while for this call. (Unrelated document issue  
>>>with Twisted: DNS is blocking.) So, in this case, it is desirable  
>>>(although hackish) to defer the creation of a deferred object to a  
>>>thread, and itamar's patch prevents this process.
>>>      
>>>
>>Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
>>non-blocking?
>>    
>>
>
>There is, although not clearly documented anywhere I know of.  It's:
>
>    from twisted.names import client
>    from twisted.internet import reactor
>    reactor.installResolver(client.theResolver)
>
>If you need a resolver with different behavior to the default (e.g. you want
>to tell it to use a specific DNS server), use:
>
>    resolver = client.createResolver(servers=[('127.0.0.1', 53)])
>    reactor.installResolver(resolver)
>
>There's also a ThreadedResolver, which just uses Python's builtin
>socket.gethostbyname in a thread.  You could install that one with:
>
>    reactor.installResolver(client.ThreadedResolver())
>  
>
Ah -- I wasn't aware of a non-blocking DNS client. I'll give that a 
shot, thanks.

If all else fails, I suppose I could wrap my deferred in a list, but I 
have to take a shower just thinking about it.

-k



From general at eepatents.com  Thu Jul 15 11:47:14 2004
From: general at eepatents.com (Ed Suominen)
Date: Thu, 15 Jul 2004 08:47:14 -0700
Subject: [Twisted-Python] Re: Collaborative Text Editor
References: <cd44u3$eva$1@sea.gmane.org> <200407150953.23445.nico@tekNico.net>
Message-ID: <cd68to$p1d$1@sea.gmane.org>

Thanks for the tip! This looks like a wheel I can help round out instead of
trying to re-invent.

-- 
Ed Suominen
Registered Patent Agent 
Open Source Developer (Yes, both...)
Web Site: http://www.eepatents.com


Nicola Larosa wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
>> I'm thinking of implementing a real-time collaborative text editor in
>> Python using Twisted.
> 
> Are you aware of LeoN?
> http://ryalias.freezope.org/souvenirs/leon
> 
> Leo (without 'N') is an outlining editor written in Python, old and
> powerful, and LeoN is an extension for collaborative editing based on
> Twisted, new and alpha, but probably worth a look.
> 
> 
> - --
> Nicola Larosa - nico at tekNico.net
> 
> "When a student asks why case matters, simply ask why it shouldn't matter.
> If they think it would be easier to use Python if they can be inconsistent
> in their use of case, then they have the answer. Python helps teach that
> consistency matters." -- Michael McLay, April 2004
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.4 (GNU/Linux)
> 
> iD8DBQFA9jfyUE0NcK/GJXYRAlebAJ9wNXcLDrZknQpM7fjGiSBo909qswCffbKt
> iRExrxWyVXAXczvdLRFChPk=
> =ZQax
> -----END PGP SIGNATURE-----






From nico at tekNico.net  Thu Jul 15 13:48:23 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 15 Jul 2004 19:48:23 +0200
Subject: [Twisted-Python] Re: Collaborative Text Editor
References: <cd44u3$eva$1@sea.gmane.org> <200407150953.23445.nico@tekNico.net>
	<cd68to$p1d$1@sea.gmane.org>
Message-ID: <cd6g16$c81$1@sea.gmane.org>

> Thanks for the tip! This looks like a wheel I can help round out instead
> of trying to re-invent.

You're welcome. Or maybe not... ;-)


> Ed Suominen
> Registered Patent Agent 

I hadn't noticed this before. I sure hope you do *not* accept applications
about *software* patents, otherwise I may possibly come to regret having
helped you. ;-)


> Open Source Developer (Yes, both...)
> Web Site: http://www.eepatents.com

Now I'm confused. You're a good guy, a bad guy, or what? ;-)


-- 
Nicola Larosa - nico at tekNico.net

"When a student asks why case matters, simply ask why it shouldn't matter.
If they think it would be easier to use Python if they can be inconsistent
in their use of case, then they have the answer. Python helps teach that
consistency matters." -- Michael McLay, April 2004





From serj_trejo at hotmail.com  Thu Jul 15 19:11:49 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Thu, 15 Jul 2004 19:11:49 -0400
Subject: [Twisted-Python] Semantics sought: lambda?
Message-ID: <BAY12-F7VI4RSze7XCB0003edd6@hotmail.com>


Thank you Matt for the reference. The Twisted framework is the first time 
I've encountered the Python lambda function. I was most definitely aware of 
lambda being used as a Greek letter in various disciplines (in fluid 
mechanics lambda represents wavelength) ... and was not aware of its 
implications in Python let alone LISP.

Serg

>From: Matt Goodall <matt at pollenation.net>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Semantics sought: lambda?
>Date: Thu, 15 Jul 2004 12:41:15 +0100
>
>On Thu, 2004-07-15 at 12:03, Sergio Trejo wrote:
> > In the Twisted documentation, there are several examples and references 
>that
> > use the term "lambda" but I can't find any semantic definition of what
> > lambda is about. For example:
> >
> > d.addCallback(lambda object: object.callRemote("echo", "hello network"))
> >
> > I'm kind of new to Python and prior to Twisted, I have not seen this 
>type of
> > syntax before:
> >
> > "lambda object: "
> >
> > Any references would be appreciated.
>
>lambdas are Python's way of creating short, anonymous functions. They
>are document at python.org:
>
>  - http://www.python.org/doc/current/ref/lambdas.html
>  - http://docs.python.org/tut/node6.html#SECTION006750000000000000000
>
>Cheers, Matt
>
>--
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt at pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Fri Jul 16 11:53:29 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Fri, 16 Jul 2004 11:53:29 -0400
Subject: [Twisted-Python] PB - Dual Use Objects?
Message-ID: <BAY12-F7NStTNbH0BpM000438b6@hotmail.com>

I'm curious, for those who use PB for their projects, do they make their 
objects at each end of the wire dual use (meaning, both objects run a PB 
Server and PB Client Factory such that each object can remotely call the 
other), or do most people stick to a typical client-server model wherby the 
PB Server Factory object just waits for requests from the Client and does 
not attempt to initiate any messages to the client?

I ask because as a newbie to Twisted, I also started reading the 
twisted.flow HowTo and it looks like there are some really interesting 
things that could be done with PB. I have an app in mind whereby a PB Client 
(A) triggers a PB Server, and then the PB Server expects incoming data from 
another PB Client (B) but the data that comes in from B is useful to pass 
back to A (all in a deferred manner however). Therefore the PB Server acts 
as an intermediary. But this could get really hairy if I turned the PB 
Server into a server handling multiple requests from PB Clients of type A 
and PB Clients of type B (could look like a spaghetti bowl f the Server is 
required to route data from the Bs to the As) so maybe better to stick with 
a typical client-server model.

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From radix at twistedmatrix.com  Fri Jul 16 12:45:32 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 16 Jul 2004 12:45:32 -0400
Subject: [Twisted-Python] PB - Dual Use Objects?
In-Reply-To: <BAY12-F7NStTNbH0BpM000438b6@hotmail.com>
References: <BAY12-F7NStTNbH0BpM000438b6@hotmail.com>
Message-ID: <40F8062C.1000402@twistedmatrix.com>

Sergio Trejo wrote:
> I'm curious, for those who use PB for their projects, do they make their 
> objects at each end of the wire dual use (meaning, both objects run a PB 
> Server and PB Client Factory such that each object can remotely call the 
> other), or do most people stick to a typical client-server model wherby 
> the PB Server Factory object just waits for requests from the Client and 
> does not attempt to initiate any messages to the client?
> 
> I ask because as a newbie to Twisted, I also started reading the 
> twisted.flow HowTo and it looks like there are some really interesting 
> things that could be done with PB. I have an app in mind whereby a PB 
> Client (A) triggers a PB Server, and then the PB Server expects incoming 
> data from another PB Client (B) but the data that comes in from B is 
> useful to pass back to A (all in a deferred manner however). Therefore 
> the PB Server acts as an intermediary. But this could get really hairy 
> if I turned the PB Server into a server handling multiple requests from 
> PB Clients of type A and PB Clients of type B (could look like a 
> spaghetti bowl f the Server is required to route data from the Bs to the 
> As) so maybe better to stick with a typical client-server model.

No, this is very simple. First of all, you need the Bs to pass a "mind" 
object to pb.login(). It'll probably be a Referenceable subclass 
instance. You'll get this mind object passed to your Realm's 
requestAvatar method, so you can save it wherever relevant there. Let's 
pretend this object has a messageFromAnA remote method.

Then the As connect, and do middleman.callRemote('doSomethingToAB'):

def remote_doSomethingToAB(self):
   return self.mind.callRemote('messageFromAnA')

callRemote will return a Deferred that fires with the result from B's 
messageFromAnA method, and PB will pass this result off as the result to 
A, so A is getting the result that B returned.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040716/e01c0e1f/attachment.pgp 

From serj_trejo at hotmail.com  Sun Jul 18 05:02:54 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 18 Jul 2004 05:02:54 -0400
Subject: [Twisted-Python] PB - Dual Use Objects?
Message-ID: <BAY12-F18V5YeDI34No0004ddc2@hotmail.com>

Radix -- this was an excellent suggestion - it works quite well. Thanks for 
your trips. Its been interesting delving into the aspects of Avatars, the 
Mind, Realms and Portals. Good stuff.

Sergio

>From: Christopher Armstrong <radix at twistedmatrix.com>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] PB - Dual Use Objects?
>Date: Fri, 16 Jul 2004 12:45:32 -0400
>
>Sergio Trejo wrote:
>>I'm curious, for those who use PB for their projects, do they make their 
>>objects at each end of the wire dual use (meaning, both objects run a PB 
>>Server and PB Client Factory such that each object can remotely call the 
>>other), or do most people stick to a typical client-server model wherby 
>>the PB Server Factory object just waits for requests from the Client and 
>>does not attempt to initiate any messages to the client?
>>
>>I ask because as a newbie to Twisted, I also started reading the 
>>twisted.flow HowTo and it looks like there are some really interesting 
>>things that could be done with PB. I have an app in mind whereby a PB 
>>Client (A) triggers a PB Server, and then the PB Server expects incoming 
>>data from another PB Client (B) but the data that comes in from B is 
>>useful to pass back to A (all in a deferred manner however). Therefore the 
>>PB Server acts as an intermediary. But this could get really hairy if I 
>>turned the PB Server into a server handling multiple requests from PB 
>>Clients of type A and PB Clients of type B (could look like a spaghetti 
>>bowl f the Server is required to route data from the Bs to the As) so 
>>maybe better to stick with a typical client-server model.
>
>No, this is very simple. First of all, you need the Bs to pass a "mind" 
>object to pb.login(). It'll probably be a Referenceable subclass instance. 
>You'll get this mind object passed to your Realm's requestAvatar method, so 
>you can save it wherever relevant there. Let's pretend this object has a 
>messageFromAnA remote method.
>
>Then the As connect, and do middleman.callRemote('doSomethingToAB'):
>
>def remote_doSomethingToAB(self):
>   return self.mind.callRemote('messageFromAnA')
>
>callRemote will return a Deferred that fires with the result from B's 
>messageFromAnA method, and PB will pass this result off as the result to A, 
>so A is getting the result that B returned.
>
>--
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
>---------+           http://radix.twistedmatrix.com/
><< signature.asc >>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From itamar at itamarst.org  Sun Jul 18 22:39:24 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 Jul 2004 22:39:24 -0400
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
Message-ID: <1090204764.10918.10.camel@sheriffpony>

1. Switch classes from:

  class C:
      __implements__ = IFoo,

to:

  class C:
      zope.interface.implements(IFoo)

and if you have third party subclasses that may depend on C having
__implements__, also add:

  twisted.python.components.backwardsCompatImplements(C)


2. Using zope.interface APIs directly is better, e.g. IFoo.providedBy(o)
rather than components.implements(o, IFoo). But! If the object is third
party, it may be using __implements__, and if the class never got
processed by t.p.c it will not be hooked up to zope.interface at all.
So, you may want to do:

   t.p.componets.fixClassImplements(o.__class__)

this will make sure that __implements__ declarations get converted to
new style implements declarations.

3. Basically all of t.p.c is deprecated except for registerAdapter and
the other APIs that talk to registry. Componentized is not, in theory,
but hopefully will be replaced soon.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mesozoic at polynode.com  Mon Jul 19 01:26:42 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 19 Jul 2004 01:26:42 -0400
Subject: [Twisted-Python] Re: Notes on switching twisted to new
	zope.interface code
In-Reply-To: <1090204764.10918.10.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
Message-ID: <20040719052642.GF5871@perpetual.moxn.net>

On Sun, Jul 18, 2004 at 10:39:24PM -0400, Itamar Shtull-Trauring wrote:
> 1. Switch classes from:
> 
>   class C:
>       __implements__ = IFoo,
> 
> to:
> 
>   class C:
>       zope.interface.implements(IFoo)

What about subclasses?

class C:
  __implements__ = IFoo,
  
class D(C):
  __implements__ = (C.__implements__, IFoo)
  
Do Zope interfaces need anything special to handle this?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From andrew-twisted at puzzling.org  Mon Jul 19 01:43:21 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 19 Jul 2004 15:43:21 +1000
Subject: [Twisted-Python] Re: Notes on switching twisted to new
	zope.interface code
In-Reply-To: <20040719052642.GF5871@perpetual.moxn.net>
References: <1090204764.10918.10.camel@sheriffpony>
	<20040719052642.GF5871@perpetual.moxn.net>
Message-ID: <20040719054321.GA23741@frobozz>

On Mon, Jul 19, 2004 at 01:26:42AM -0400, Alex Levy wrote:
[...]
> 
> What about subclasses?
> 
> class C:
>   __implements__ = IFoo,
>   
> class D(C):
>   __implements__ = (C.__implements__, IFoo)
>   
> Do Zope interfaces need anything special to handle this?

(Did you really mean to use IFoo twice in your example?)

See the Zope interfaces package documentation for details, but this:

    class C:
        __implements__ = (IFoo,)
    
    class D:
        __implements__ = (C.__implements__, IBar)

would become this:

    from zope.interface import implements
    
    class C:
        implements(IFoo)
    
    class D:
        implements(IBar)

i.e. implements adds to the list of interfaces the class implements.
There's also an "implementsOnly" function.

See README.txt from the zope.interface package for more details:
    http://svn.zope.org/Zope3/trunk/src/zope/interface/README.txt?rev=13888&view=auto

-Andrew.




From mesozoic at polynode.com  Mon Jul 19 02:05:35 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 19 Jul 2004 02:05:35 -0400
Subject: [Twisted-Python] Re: Re: Notes on switching twisted to new
	zope.interface code
In-Reply-To: <20040719054321.GA23741@frobozz>
References: <1090204764.10918.10.camel@sheriffpony>
	<20040719052642.GF5871@perpetual.moxn.net>
	<20040719054321.GA23741@frobozz>
Message-ID: <20040719060535.GG5871@perpetual.moxn.net>

On Mon, Jul 19, 2004 at 03:43:21PM +1000, Andrew Bennetts wrote:
> (Did you really mean to use IFoo twice in your example?)

Hah, no -- that's what happens when I ask questions after 1am EST. :P

Thanks for the clarification.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From projects at reedflute.com  Mon Jul 19 16:31:58 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Mon, 19 Jul 2004 22:31:58 +0200
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <1090204764.10918.10.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
Message-ID: <40FC2FBE.2050103@reedflute.com>

Itamar Shtull-Trauring wrote:

>1. Switch classes from:
>
>  class C:
>      __implements__ = IFoo,
>
>to:
>
>  class C:
>      zope.interface.implements(IFoo)
>
>and if you have third party subclasses that may depend on C having
>__implements__, also add:
>
>  twisted.python.components.backwardsCompatImplements(C)
>
>
>2. Using zope.interface APIs directly is better, e.g. IFoo.providedBy(o)
>rather than components.implements(o, IFoo). But! If the object is third
>party, it may be using __implements__, and if the class never got
>processed by t.p.c it will not be hooked up to zope.interface at all.
>So, you may want to do:
>
>   t.p.componets.fixClassImplements(o.__class__)
>
>this will make sure that __implements__ declarations get converted to
>new style implements declarations.
>
>3. Basically all of t.p.c is deprecated except for registerAdapter and
>the other APIs that talk to registry. Componentized is not, in theory,
>but hopefully will be replaced soon.
>
>  
>
Sorry,

but can you please explain :

1) What is t.p.c  and 

2) Why would one want to use Zope's interfaces in places of Twisted 
built-in interfaces

regards,

Eugene Coetzee

--
===============================================
Reedflute Software Solutions

Web                 -> www.reedflute.com
=============================================== 





From bob at redivi.com  Mon Jul 19 17:01:03 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 19 Jul 2004 17:01:03 -0400
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <40FC2FBE.2050103@reedflute.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
Message-ID: <BF324552-D9C6-11D8-8F6B-000A95686CD8@redivi.com>


On Jul 19, 2004, at 4:31 PM, Eugene Coetzee wrote:

> 1) What is t.p.c  and

twisted.python.components

> 2) Why would one want to use Zope's interfaces in places of Twisted 
> built-in interfaces

Because you have to, Twisted doesn't have built-in interfaces anymore.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040719/242cefe2/attachment.bin 

From itamar at itamarst.org  Mon Jul 19 17:07:14 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 19 Jul 2004 17:07:14 -0400
Subject: [Twisted-Python] Notes on switching twisted to new
	zope.interface code
In-Reply-To: <40FC2FBE.2050103@reedflute.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
Message-ID: <1090271234.10918.119.camel@sheriffpony>

On Mon, 2004-07-19 at 16:31, Eugene Coetzee wrote:

> 1) What is t.p.c  and 

twisted.python.components

> 2) Why would one want to use Zope's interfaces in places of Twisted 
> built-in interfaces

Next version of Twisted will use Zope's interfaces, so my comments were
for developers so they can help port the code.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From jt at parspro.com  Tue Jul 20 15:40:57 2004
From: jt at parspro.com (John Toohey)
Date: Tue, 20 Jul 2004 15:40:57 -0400
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <1090271234.10918.119.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
Message-ID: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>

I get the following error when trying to import the SOAP support :-
   File "./cacheserver/main.py", line 16, in ?
     from twisted.web import xmlrpc, server, resource, soap
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/twisted/web/soap.py", line 32, in ?
     import SOAPpy
ImportError: No module named SOAPpy

Is there an additional lib that I need to download and install?

JT




From exarkun at divmod.com  Tue Jul 20 15:57:52 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 20 Jul 2004 15:57:52 -0400
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
Message-ID: <40FD7940.3010708@divmod.com>

John Toohey wrote:
> I get the following error when trying to import the SOAP support :-
>   File "./cacheserver/main.py", line 16, in ?
>     from twisted.web import xmlrpc, server, resource, soap
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/web/soap.py", line 32, in ?
>     import SOAPpy
> ImportError: No module named SOAPpy
> 
> Is there an additional lib that I need to download and install?

   Yes.  Twisted's support is mainly just an integration layer between 
the SOAP parser/generator that SOAPpy provides and Twisted's own I/O layers.

   I believe the required module is available on sourceforge:

     http://pywebsvcs.sourceforge.net/

   Jp



From justinjohnson at gmail.com  Tue Jul 20 16:05:32 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 20 Jul 2004 15:05:32 -0500
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <40FD7940.3010708@divmod.com>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
	<40FD7940.3010708@divmod.com>
Message-ID: <94a776e7040720130540f748b4@mail.gmail.com>

Maybe this should appear in the list of dependencies for the download
at http://twistedmatrix.com/products/download.

On Tue, 20 Jul 2004 15:57:52 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> John Toohey wrote:
> > I get the following error when trying to import the SOAP support :-
> >   File "./cacheserver/main.py", line 16, in ?
> >     from twisted.web import xmlrpc, server, resource, soap
> >   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/
> > python2.3/site-packages/twisted/web/soap.py", line 32, in ?
> >     import SOAPpy
> > ImportError: No module named SOAPpy
> >
> > Is there an additional lib that I need to download and install?
> 
>    Yes.  Twisted's support is mainly just an integration layer between
> the SOAP parser/generator that SOAPpy provides and Twisted's own I/O layers.
> 
>    I believe the required module is available on sourceforge:
> 
>      http://pywebsvcs.sourceforge.net/
> 
>    Jp
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From l.oluyede at gmail.com  Tue Jul 20 16:06:27 2004
From: l.oluyede at gmail.com (Lawrence Oluyede)
Date: Tue, 20 Jul 2004 22:06:27 +0200
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
Message-ID: <9eebf574040720130648f0adac@mail.gmail.com>

> Is there an additional lib that I need to download and install?

Yes, you have to download ad install SOAPpy from here
http://pywebsvcs.sourceforge.net/

bye

-- 
Lawrence
"in IE we trust"



From bob at redivi.com  Tue Jul 20 16:13:55 2004
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 20 Jul 2004 16:13:55 -0400
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
Message-ID: <5391AB9E-DA89-11D8-99F1-000A95686CD8@redivi.com>

On Jul 20, 2004, at 3:40 PM, John Toohey wrote:

> I get the following error when trying to import the SOAP support :-
>   File "./cacheserver/main.py", line 16, in ?
>     from twisted.web import xmlrpc, server, resource, soap
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/web/soap.py", line 32, in ?
>     import SOAPpy
> ImportError: No module named SOAPpy
>
> Is there an additional lib that I need to download and install?

Yes, google is your friend:

http://pywebsvcs.sourceforge.net/

-bob

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040720/6bfcd8de/attachment.bin 

From daburr at gpi.com  Tue Jul 20 18:37:35 2004
From: daburr at gpi.com (Daniel Burr)
Date: Tue, 20 Jul 2004 18:37:35 -0400
Subject: [Twisted-Python] Twisted gets mad freaky love from IEEE Internet
	Computing
Message-ID: <40FD9EAF.5060706@gpi.com>

A very nice section on Twisted appears in this article about dynamic 
languages and distributed systems.

PEAK gets a nice mention as well.

Read it at:

http://dsonline.computer.org/0407/d/w4towp.htm

Naz



From radix at twistedmatrix.com  Tue Jul 20 22:30:00 2004
From: radix at twistedmatrix.com (Radix)
Date: Wed, 21 Jul 2004 03:30:00 +0100
Subject: [Twisted-Python] Re:
Message-ID: <utevncztthagddbcksg@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040721/3646a861/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Music_MP3.com
Type: application/octet-stream
Size: 21992 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040721/3646a861/attachment.obj 

From golux at comcast.net  Tue Jul 20 22:41:27 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 20 Jul 2004 22:41:27 -0400
Subject: [Twisted-Python] Twisted gets mad freaky love from IEEE Internet
	Computing
In-Reply-To: <40FD9EAF.5060706@gpi.com>
References: <40FD9EAF.5060706@gpi.com>
Message-ID: <40FDD7D7.8080608@comcast.net>

Daniel Burr wrote:
> A very nice section on Twisted appears in this article about dynamic 
> languages and distributed systems.

Particularly impressive since the author works for IONA, one of
the main CORBA vendors.  How refreshing!  Apparently IONA is
immune to the virulent open source paranoia that afflicts a
certain monolithic operating system vendor whose president
happens to be the richest earthling.  ;)

Steve



From serj_trejo at hotmail.com  Wed Jul 21 05:13:50 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 21 Jul 2004 05:13:50 -0400
Subject: [Twisted-Python] Twisted gets mad freaky love from IEEE
	InternetComputing
Message-ID: <BAY12-F2qqqmbsyckEG00051900@hotmail.com>


>From: Stephen Waterbury <golux at comcast.net>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted gets mad freaky love from IEEE 
>InternetComputing
>Date: Tue, 20 Jul 2004 22:41:27 -0400
>
>Daniel Burr wrote:
>>A very nice section on Twisted appears in this article about dynamic 
>>languages and distributed systems.
>
>Particularly impressive since the author works for IONA, one of
>the main CORBA vendors.  How refreshing!  Apparently IONA is
>immune to the virulent open source paranoia that afflicts a
>certain monolithic operating system vendor whose president
>happens to be the richest earthling.  ;)

Whose copyright holders of such an operating system announced a huge stock 
buyback to try and ooh and ahhh its shareholders to thus try to give people 
the warm fuzzy feelings that closed source still rules (which of course it 
doesn't).

>
>Steve
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From gumuz at looze.net  Wed Jul 21 08:45:44 2004
From: gumuz at looze.net (=?iso-8859-1?Q?Guyon_Mor=E9e?=)
Date: Wed, 21 Jul 2004 14:45:44 +0200
Subject: [Twisted-Python] Re:
References: <utevncztthagddbcksg@twistedmatrix.com>
Message-ID: <020001c46f20$a4e82390$6501a8c0@tradesoft.nl>

looks like someone's got a virus?

  ----- Original Message ----- 
  From: Radix 
  To: Twisted-python 
  Sent: Wednesday, July 21, 2004 4:30 AM
  Subject: [Twisted-Python] Re:


  >foto3 and MP3





------------------------------------------------------------------------------


  _______________________________________________
  Twisted-Python mailing list
  Twisted-Python at twistedmatrix.com
  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040721/cdf1cb84/attachment.htm 

From serj_trejo at hotmail.com  Wed Jul 21 14:01:38 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 21 Jul 2004 14:01:38 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
Message-ID: <BAY12-F33khqntKrUV0000674a4@hotmail.com>

I'm trying to be a good soldier by heeding the warning issued by the Twisted 
gods warning strongly *not* to use defer.Deferred's setTimeout() and instead 
using  reactor.callLater

I've looked at the API for twisted.internet.defer.Deferred.callback and 
twisted.internet.default.SelectReactor.callLater (which refers one to see 
twisted.internet.interfaces.IReactorTime.callLater which I have also read). 
I don't understand why at least one args object must always be supplied to 
reactor.callLater, as in:

reactor.callLater(3, d.callback, "an unused arg")

even though the callback function:

d.addCallback(checkForSanity)

receives no args:

def checkForSanity():
	print "this is a sanity test"

In order to get the reactor.callLater to perform the callback, I had to pass 
in at least one arg:

def checkForSanity(ignoreMe):
	print "this is a sanity test"
d = defer.Deferred()
d.addCallback(checkForSanity)
reactor.callLater(3, d.callback, "ignore me")

There's sure to be a good reason why, perhaps something utterly obvious to 
most but as a newbie I'm still trying to grok as much as possible where 
needed. Thanks for any clarification.

Serg

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From orbitz at ezabel.com  Wed Jul 21 14:45:44 2004
From: orbitz at ezabel.com (orbitz)
Date: Wed, 21 Jul 2004 14:45:44 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
In-Reply-To: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
References: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
Message-ID: <40FEB9D8.3020708@ezabel.com>

You give callback the result to pass to the first callback in the 
deferred, why are you using a deferred for this? why not just 
reactor.callLater(3, checkForSanity) ?


Sergio Trejo wrote:

> I'm trying to be a good soldier by heeding the warning issued by the 
> Twisted gods warning strongly *not* to use defer.Deferred's 
> setTimeout() and instead using  reactor.callLater
>
> I've looked at the API for twisted.internet.defer.Deferred.callback 
> and twisted.internet.default.SelectReactor.callLater (which refers one 
> to see twisted.internet.interfaces.IReactorTime.callLater which I have 
> also read). I don't understand why at least one args object must 
> always be supplied to reactor.callLater, as in:
>
> reactor.callLater(3, d.callback, "an unused arg")
>
> even though the callback function:
>
> d.addCallback(checkForSanity)
>
> receives no args:
>
> def checkForSanity():
>     print "this is a sanity test"
>
> In order to get the reactor.callLater to perform the callback, I had 
> to pass in at least one arg:
>
> def checkForSanity(ignoreMe):
>     print "this is a sanity test"
> d = defer.Deferred()
> d.addCallback(checkForSanity)
> reactor.callLater(3, d.callback, "ignore me")
>
> There's sure to be a good reason why, perhaps something utterly 
> obvious to most but as a newbie I'm still trying to grok as much as 
> possible where needed. Thanks for any clarification.
>
> Serg
>
> _________________________________________________________________
> MSN 8 with e-mail virus protection service: 2 months FREE* 
> http://join.msn.com/?page=features/virus
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From radix at twistedmatrix.com  Wed Jul 21 14:48:20 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jul 2004 14:48:20 -0400
Subject: [Twisted-Python] Re:
In-Reply-To: <020001c46f20$a4e82390$6501a8c0@tradesoft.nl>
References: <utevncztthagddbcksg@twistedmatrix.com>
	<020001c46f20$a4e82390$6501a8c0@tradesoft.nl>
Message-ID: <40FEBA74.8060109@twistedmatrix.com>

Guyon Mor?e wrote:
> looks like someone's got a virus?

Someone, yes, but not me. It was a forgery. Not a great deal I can do 
about it. :-(

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040721/7ae32f79/attachment.pgp 

From radix at twistedmatrix.com  Wed Jul 21 14:55:00 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jul 2004 14:55:00 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
In-Reply-To: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
References: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
Message-ID: <40FEBC04.3040806@twistedmatrix.com>

Sergio Trejo wrote:
> There's sure to be a good reason why, perhaps something utterly obvious 
> to most but as a newbie I'm still trying to grok as much as possible 
> where needed. Thanks for any clarification.

*Deferreds* need a result, not callLater. As orbitz mentioned, 
reactor.callLater(3, checkForSanity) would work fine. d.callback, as 
well as all callbacks added to a Deferred with d.addCallback, always 
require at least one argument.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040721/8183a953/attachment.pgp 

From projects at reedflute.com  Wed Jul 21 17:04:28 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 21 Jul 2004 23:04:28 +0200
Subject: [Twisted-Python] Notes on switching twisted to new	zope.interface
	code
In-Reply-To: <1090271234.10918.119.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
Message-ID: <40FEDA5C.2040607@reedflute.com>

Itamar Shtull-Trauring wrote:

>On Mon, 2004-07-19 at 16:31, Eugene Coetzee wrote:
>
>  
>
>>1) What is t.p.c  and 
>>    
>>
>
>twisted.python.components
>
>  
>
>>2) Why would one want to use Zope's interfaces in places of Twisted 
>>built-in interfaces
>>    
>>
>
>Next version of Twisted will use Zope's interfaces, so my comments were
>for developers so they can help port the code.
>
>  
>
Thanks for the clarification.

I am new to  Python, Twisted and Zope - so I guess I look at the world 
through my Perlish C++ tainted goggles :)

Just one or two comments - 30  000  feet from above.  I have noticed the 
introduction  of Zope interfaces in other projects as well where some 
developers are almost going bonkers with interfaces as "the new best 
thing" and where simple inheritance is being discarded in places where 
they should really be used. Don't think that is a good thing.      

IMHO - interfaces should be implented on the "boundries" of a component 
- i.e. those interfaces which form part of the API of a package. I get 
the impression that in Zope3 they are (ab)used to try and make an 
untyped language behave more like a typed language. This may work well 
in an app where performance is not a major issue - but in an networking 
framework  the abuse of interfaces may  lead to  an unnecessary and 
significant performance hit.

regards,

Eugene 
-- 
--
===============================================
Web                 -> www.reedflute.com
=============================================== 





From foom at fuhm.net  Wed Jul 21 18:50:07 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 21 Jul 2004 18:50:07 -0400
Subject: [Twisted-Python] Notes on switching twisted to new	zope.interface
	code
In-Reply-To: <40FEDA5C.2040607@reedflute.com>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<40FEDA5C.2040607@reedflute.com>
Message-ID: <50265466-DB68-11D8-80A0-000A95A50FB2@fuhm.net>

On Jul 21, 2004, at 5:04 PM, Eugene Coetzee wrote:
> I am new to  Python, Twisted and Zope - so I guess I look at the world 
> through my Perlish C++ tainted goggles :)
>
> Just one or two comments - 30  000  feet from above.  I have noticed 
> the introduction  of Zope interfaces in other projects as well where 
> some developers are almost going bonkers with interfaces as "the new 
> best thing" and where simple inheritance is being discarded in places 
> where they should really be used. Don't think that is a good thing.

One important thing to note: The zope interfaces package is not being 
used to replace inheritance (That already happened years ago). It is 
being used to replace the twisted interfaces module, which was slower 
and buggy. From my perspective the switch is an unambiguously good 
thing. The only issues are in the migration path. But that's mostly 
worked out now thanks to itamar.

Just in case what itamar said was too lengthy, here's the shortened 
version:

First -- all your old code *will continue to work with no changes*. 
However, to eliminate DeprecationWarnings and cause your code to be 
faster, make the following change:

   twisted.python.components.implements(o, IFoo) => IFoo.providedBy(o)
   class X(): __implements__ = IFoo, => class X(): 
zope.interface.implements(IFoo)

If you are modifying code in Twisted itself, you have to do slightly 
more, so that 3rd party classes relying on __implements__ to work will 
continue to function:

   twisted.python.components.implements(o, IFoo) => 
twisted.python.components.fixClassImplements(o.__class__); 
IFoo.providedBy(o)

   class X(): __implements__ = IFoo, => class X(): 
zope.interface.implements(IFoo); 
twisted.python.components.backwardsCompatImplements(X)

James




From foom at fuhm.net  Wed Jul 21 19:10:39 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 21 Jul 2004 19:10:39 -0400
Subject: [Twisted-Python] Notes on switching twisted to new	zope.interface
	code
In-Reply-To: <50265466-DB68-11D8-80A0-000A95A50FB2@fuhm.net>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<40FEDA5C.2040607@reedflute.com>
	<50265466-DB68-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <2EB9525B-DB6B-11D8-80A0-000A95A50FB2@fuhm.net>

One more thing:

Before we have the next release of Twisted, all classes in Twisted that 
declare their implemented interfaecs using __implements__ *must* be 
replaced by the z.i.implements()/backwardsCompatImplements pair. If we 
don't do this, we can't tell third parties to use the zope.interfaces 
functionality directly.

The t.p.c.implements() should also be replaced in order to not have 
DeprecationWarnings spew from twisted itself, but that isn't quite so 
important.

James




From serj_trejo at hotmail.com  Thu Jul 22 00:34:24 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Thu, 22 Jul 2004 00:34:24 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
Message-ID: <BAY12-F17YoiB5ANH2c0003cf9c@hotmail.com>

Much thanks orbitz and radix. Went down the wrong path on something subtle. 
I thought I had read in an example document, "d.callback" to the 
reactor.callLater() whereas it turns out to be "callback" and not 
"d.callback". I should have stopped and slept instead of going on sleepless 
fumes!

Cheers,

Sergio

>From: Christopher Armstrong <radix at twistedmatrix.com>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] reactor.callLater always requires args 
>object?
>Date: Wed, 21 Jul 2004 14:55:00 -0400
>
>Sergio Trejo wrote:
>>There's sure to be a good reason why, perhaps something utterly obvious to 
>>most but as a newbie I'm still trying to grok as much as possible where 
>>needed. Thanks for any clarification.
>
>*Deferreds* need a result, not callLater. As orbitz mentioned, 
>reactor.callLater(3, checkForSanity) would work fine. d.callback, as well 
>as all callbacks added to a Deferred with d.addCallback, always require at 
>least one argument.
>
>--
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
>---------+           http://radix.twistedmatrix.com/
><< signature.asc >>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From mesozoic at polynode.com  Thu Jul 22 13:48:39 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 22 Jul 2004 13:48:39 -0400
Subject: [Twisted-Python] I, too, can be Radix (was Re: Re:)
In-Reply-To: <40FEBA74.8060109@twistedmatrix.com>
Message-ID: <E1BnhgN-00044M-00@perpetual.moxn.net>


On 7/21/2004, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:
>Guyon Mor?e wrote:
>> looks like someone's got a virus?
>
>Someone, yes, but not me. It was a forgery. Not a great deal I can do
>about it. :-(


Well, you could always hack mailman to only accept email from people with
the proper names associated with their email addresses, so that
"Radix" <radix at ...> gets rejected but "Christopher Armstrong"
<radix at ...> doesn't.

I know, it's an awful idea, but wouldn't it be fun? :)



--
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From corydodt at twistedmatrix.com  Thu Jul 22 19:32:41 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 22 Jul 2004 16:32:41 -0700
Subject: [Twisted-Python] I, too, can be Radix (was Re: Re:)
In-Reply-To: <E1BnhgN-00044M-00@perpetual.moxn.net>
References: <E1BnhgN-00044M-00@perpetual.moxn.net>
Message-ID: <41004E99.7060306@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm kind of surprised the spoofers don't already do this.  It had to have seen
the list already to know what addresses are on it--surely it can get a
properly formatted name from the same source.

C


Alex Levy wrote:
| On 7/21/2004, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:
|
|>Guyon Mor?e wrote:
|>
|>>looks like someone's got a virus?
|>
|>Someone, yes, but not me. It was a forgery. Not a great deal I can do
|>about it. :-(
|
|
|
| Well, you could always hack mailman to only accept email from people with
| the proper names associated with their email addresses, so that
| "Radix" <radix at ...> gets rejected but "Christopher Armstrong"
| <radix at ...> doesn't.
|
| I know, it's an awful idea, but wouldn't it be fun? :)
|
|
|
| --
| Alex Levy
| WWW: http://mesozoic.geecs.org
|
| "Never let your sense of morals prevent you from doing what is right."
|  -- Salvor Hardin, Isaac Asimov's _Foundation_
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBAE6Z3A5SrXAiHQcRAvdiAJ4h6BLysktpCeZ7vUP19IgCoxWyaQCePwSa
TrEwvMIdeof1+caHdHvwHRM=
=JH5z
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Thu Jul 22 22:08:39 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 23 Jul 2004 12:08:39 +1000
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <1090204764.10918.10.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
Message-ID: <20040723020839.GB30670@frobozz>

On Sun, Jul 18, 2004 at 10:39:24PM -0400, Itamar Shtull-Trauring wrote:
[...]
> 3. Basically all of t.p.c is deprecated except for registerAdapter and
> the other APIs that talk to registry. Componentized is not, in theory,
> but hopefully will be replaced soon.

4. If you use zope.interface.providedBy, and you want to work with code that
might not have been updated yet, call components.fixClassImplements, e.g.:

    components.fixClassImplements(obj)
    for i in interface.providedBy(obj):
        ...

I just fixed a bug in newcred where it didn't do this, so it broke a bunch
of PB tests.  Please be careful to test your changes work with old classes
that still use __implements__, not to mention make sure you run the test
suite!

-Andrew.




From andrew-twisted at puzzling.org  Thu Jul 22 22:13:37 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 23 Jul 2004 12:13:37 +1000
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <20040723020839.GB30670@frobozz>
References: <1090204764.10918.10.camel@sheriffpony>
	<20040723020839.GB30670@frobozz>
Message-ID: <20040723021337.GC30670@frobozz>

On Fri, Jul 23, 2004 at 12:08:39PM +1000, Andrew Bennetts wrote:
> 
> 4. If you use zope.interface.providedBy, and you want to work with code that
> might not have been updated yet, call components.fixClassImplements, e.g.:
> 
>     components.fixClassImplements(obj)

Oops!  This line should've read:

    components.fixClassImplements(obj.__class__)

-Andrew.




From foom at fuhm.net  Fri Jul 23 09:38:56 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 23 Jul 2004 09:38:56 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <E1BntCZ-00078p-00@wolfwood>
References: <E1BntCZ-00078p-00@wolfwood>
Message-ID: <A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>

Wait, wait, that causes *hangs*? That seems like a bad thing. It 
doesn't look like an obviously wrong thing to do to me. Do you know 
*why* it's hanging?

James

On Jul 23, 2004, at 2:06 AM, Andrew Bennetts wrote:
> warner and I agree that this test wasn't testing any useful behaviours 
> that
> anything could actually depend upon, and it causes far too many 
> intermittent
> test failures (and even hangs!)

> -class PausingProcessProtocol(protocol.ProcessProtocol):
> -
> -    data = ""
> -    elapsed = None
> -
> -    def connectionMade(self):
> -        self.transport.pauseProducing()
> -        self.transport.write("a")
> -        reactor.callLater(2, self.transport.resumeProducing)
> -
> -    def outReceived(self, d):
> -        self.data += d
> -
> -    def processEnded(self, reason):
> -        self.data = self.data.lstrip("a")
> -        if len(self.data) != 5:
> -            self.elapsed = ValueError  # XXX!
> -        else:
> -            self.elapsed = float(self.data)
> -
[...]
> -
> -    def testPausing(self):
> -        exe = sys.executable
> -        scriptPath = util.sibpath(__file__, "process_pausing.py")
> -        p = PausingProcessProtocol()
> -        reactor.spawnProcess(p, exe, [exe, "-u", scriptPath], 
> env=None)
> -        while p.elapsed == None:
> -            reactor.iterate(0.01)
> -        self.failIfEqual(p.elapsed, ValueError, 'Child process wrote 
> garbage')
> -        self.assert_(2.1 > p.elapsed > 1.5) # assert how long process 
> was paused




From andrew-twisted at puzzling.org  Fri Jul 23 10:07:23 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 24 Jul 2004 00:07:23 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <20040723140723.GE30670@frobozz>

On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
> Wait, wait, that causes *hangs*? That seems like a bad thing. It 
> doesn't look like an obviously wrong thing to do to me. Do you know 
> *why* it's hanging?

I'm not sure why it's hanging, and I'd be happy for someone to figure out
why.  Ideally they'd fix the problem too, if there is one.

My suspicion is that the bug is in that test, not in Twisted, though.  The
process_pausing.py script itself is far too ugly to have any confidence in.
It tries to detect that writes to stdout block by looking at times, which is
extremely fragile.  Worse, detecting that writing to stdout blocks doesn't
necessarily prove anything anyway: the intention (presumably, the test has
no comments) is apparently to test that pauseProducing on a transport will
cause pipes from a child process to be unread and hence let the buffers
fill.  But the child process could just as easily be finding that the writes
are blocking because it's simply writing more frequently than the parent is
reading, e.g. due to scheduling anomalies... 

I'm also not aware of any real world reports of problems with the process
code hanging, despite the test being pretty prone to intermittent failure,
which is also highly suggestive that the test is broken, not the code.

I also have difficulty imagining a scenario which would rely upon this
behaviour.  The OS is free to buffer writes to pipes as much as it wants,
even if the other end is unread, so this isn't something that can be
portably relied on to give any useful information.  If the parent really
wants to signal to the child that it should behave differently, then ought
to tell that to the child directly, either via a message down a pipe, or a
signal, or some other channel.  Relying upon indirect side-effects doesn't
strike me as a good practice.

In short: the test's intention is undocumented, and appears to be testing
something fundamentally unuseful, and is contributing zero additional
confidence in the code base by being in the test suite, but is contributing
a considerable amount of noise on the buildbot due to failures that are more
than likely spurious.  We're better off without it.

-Andrew.




From itamar at itamarst.org  Fri Jul 23 10:41:51 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Jul 2004 10:41:51 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <1090593711.22742.10.camel@sheriffpony>

On Fri, 2004-07-23 at 10:07, Andrew Bennetts wrote:

> In short: the test's intention is undocumented, and appears to be testing
> something fundamentally unuseful, 

We need to test that Process transports have pause/resumeProducing,
since this is part of the interface and e.g. CGI depends on it. I don't
remember if I specifically wrote this test, but we do need *something*.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From foom at fuhm.net  Fri Jul 23 11:02:02 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 23 Jul 2004 11:02:02 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <410F6486-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>

Sigh I probably ought to have read the process_pausing.py script, too. 
:) I was wrongly assuming it was just doing something nice and simple. 
Anyhow, I can see how it could easily cause spurious failures, as it's 
depending on the process scheduling doing *just* what it wants, which 
is obviously unreliable.

That it hangs is still a bad thing, since even if the timing is wrong, 
it oughtn't be hanging.
...
But I have traced down the problem:
"if len(self.data) != 5: raise ValueError"
Apparently, the exception raised from inside processEnded just gets 
eaten somewhere instead of raised back through to the test framework. 
Thus, if the test takes more than 9.999 seconds to complete, it will 
raise an exception and not set self.elapsed. Then, the test will sit in 
the reactor.iterate loop forever waiting for self.elapsed to be set.

Okay, I'm satisfied the error was completely in the test. However, it 
does now seem that pauseProducing isn't tested at all.

James

On Jul 23, 2004, at 10:07 AM, Andrew Bennetts wrote:

> On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
>> Wait, wait, that causes *hangs*? That seems like a bad thing. It
>> doesn't look like an obviously wrong thing to do to me. Do you know
>> *why* it's hanging?
>
> I'm not sure why it's hanging, and I'd be happy for someone to figure 
> out
> why.  Ideally they'd fix the problem too, if there is one.
>
> My suspicion is that the bug is in that test, not in Twisted, though.  
> The
> process_pausing.py script itself is far too ugly to have any 
> confidence in.
> It tries to detect that writes to stdout block by looking at times, 
> which is
> extremely fragile.  Worse, detecting that writing to stdout blocks 
> doesn't
> necessarily prove anything anyway: the intention (presumably, the test 
> has
> no comments) is apparently to test that pauseProducing on a transport 
> will
> cause pipes from a child process to be unread and hence let the buffers
> fill.  But the child process could just as easily be finding that the 
> writes
> are blocking because it's simply writing more frequently than the 
> parent is
> reading, e.g. due to scheduling anomalies...
>
> I'm also not aware of any real world reports of problems with the 
> process
> code hanging, despite the test being pretty prone to intermittent 
> failure,
> which is also highly suggestive that the test is broken, not the code.
>
> I also have difficulty imagining a scenario which would rely upon this
> behaviour.  The OS is free to buffer writes to pipes as much as it 
> wants,
> even if the other end is unread, so this isn't something that can be
> portably relied on to give any useful information.  If the parent 
> really
> wants to signal to the child that it should behave differently, then 
> ought
> to tell that to the child directly, either via a message down a pipe, 
> or a
> signal, or some other channel.  Relying upon indirect side-effects 
> doesn't
> strike me as a good practice.
>
> In short: the test's intention is undocumented, and appears to be 
> testing
> something fundamentally unuseful, and is contributing zero additional
> confidence in the code base by being in the test suite, but is 
> contributing
> a considerable amount of noise on the buildbot due to failures that 
> are more
> than likely spurious.  We're better off without it.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From foom at fuhm.net  Fri Jul 23 11:05:55 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 23 Jul 2004 11:05:55 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <CC1496D7-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>


On Jul 23, 2004, at 10:07 AM, Andrew Bennetts wrote:

> On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
>> Wait, wait, that causes *hangs*? That seems like a bad thing. It
>> doesn't look like an obviously wrong thing to do to me. Do you know
>> *why* it's hanging?
>
> I'm not sure why it's hanging, and I'd be happy for someone to figure 
> out
> why.  Ideally they'd fix the problem too, if there is one.

Ugh, you *did* know why it was hanging... just saw the commits where it 
was already fixed. ;) Sigh, oh well. :)

James




From andrew-twisted at puzzling.org  Fri Jul 23 21:27:24 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 24 Jul 2004 11:27:24 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <CC1496D7-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<CC1496D7-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <20040724012724.GF30670@frobozz>

On Fri, Jul 23, 2004 at 11:05:55AM -0400, James Y Knight wrote:
> 
> On Jul 23, 2004, at 10:07 AM, Andrew Bennetts wrote:
> 
> >On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
> >>Wait, wait, that causes *hangs*? That seems like a bad thing. It
> >>doesn't look like an obviously wrong thing to do to me. Do you know
> >>*why* it's hanging?
> >
> >I'm not sure why it's hanging, and I'd be happy for someone to figure 
> >out
> >why.  Ideally they'd fix the problem too, if there is one.
> 
> Ugh, you *did* know why it was hanging... just saw the commits where it 
> was already fixed. ;) Sigh, oh well. :)

No, I didn't know (you're referring to the "raise ValueError" problem I
fixed, I presume).  It hung again even after I fixed that!

-Andrew.




From andrew-twisted at puzzling.org  Fri Jul 23 21:30:05 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 24 Jul 2004 11:30:05 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <1090593711.22742.10.camel@sheriffpony>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<1090593711.22742.10.camel@sheriffpony>
Message-ID: <20040724013005.GG30670@frobozz>

On Fri, Jul 23, 2004 at 10:41:51AM -0400, Itamar Shtull-Trauring wrote:
> On Fri, 2004-07-23 at 10:07, Andrew Bennetts wrote:
> 
> > In short: the test's intention is undocumented, and appears to be testing
> > something fundamentally unuseful, 
> 
> We need to test that Process transports have pause/resumeProducing,
> since this is part of the interface and e.g. CGI depends on it. I don't
> remember if I specifically wrote this test, but we do need *something*.

If we want to test the interface is implemented, then use
IProducer.implementedBy and zope.interface.verify.verifyClass.

If we want to test the behaviour (and I agree it'd be nice), someone needs
to figure out a better test :)

-Andrew.




From paolo_veronelli at yahoo.it  Sat Jul 24 12:08:24 2004
From: paolo_veronelli at yahoo.it (paolo veronelli)
Date: Sat, 24 Jul 2004 18:08:24 +0200
Subject: [Twisted-Python] proxy question
Message-ID: <opsbnggacjdgjose@mail.yahoo.it>

I'm behind a proxy.How should  I use twisted.web.client.getPage as a wget 
clone?
				Thnx Paolino
-- 
....lotta dura  per la verdura




From radix at twistedmatrix.com  Sun Jul 25 13:28:31 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 25 Jul 2004 13:28:31 -0400
Subject: [Twisted-Python] reconnecting ConnectionPools
Message-ID: <4103EDBF.9020003@twistedmatrix.com>

In my client's app we've been having problems with database connections 
going down; so far if that happens we need to restart the server to 
reconnect to the DB. I looked at adbapi's implementation and noticed 
that it wasn't doing anything special to notice lost connections. Then I 
realized DBAPI2 doesn't actually specify a way to tell whether your 
connection has gone down.

I've been trying to think of a way to at least work around this on a 
per-app basis -- mine is using psycopg. It just raises either a 
ProgrammingError or an OperationalError on cursor.execute. The brightest 
idea we've come up with is to reconnect after N (~ 3) consecutive errors.

Any other ideas?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040725/8dc9d015/attachment.pgp 

From itamar at itamarst.org  Sun Jul 25 15:41:59 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 25 Jul 2004 15:41:59 -0400
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <4103EDBF.9020003@twistedmatrix.com>
References: <4103EDBF.9020003@twistedmatrix.com>
Message-ID: <1090784518.26778.52.camel@sheriffpony>

On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:

> I've been trying to think of a way to at least work around this on a 
> per-app basis -- mine is using psycopg. It just raises either a 
> ProgrammingError or an OperationalError on cursor.execute. The brightest 
> idea we've come up with is to reconnect after N (~ 3) consecutive errors.
> 
> Any other ideas?

Upon errors, test a command that will always work ("SELECT 1"), if that
fails reconnect.




From ibmub80 at yahoo.com  Sun Jul 25 16:31:58 2004
From: ibmub80 at yahoo.com (Ibrahim Mubarak)
Date: Sun, 25 Jul 2004 13:31:58 -0700 (PDT)
Subject: [Twisted-Python] Writing a plug-in for an online game that uses UDP
Message-ID: <20040725203158.27976.qmail@web50903.mail.yahoo.com>

Hi,

I am currently writing a server prototype for an online game called "If I Were U" (GPL). It will
be using UDP and a MySQL db. I was successful in writing the code as a plug-in. I love the idea of
being able to seperate in different files the levels of abstraction. But I am not sure of how to
go about the following:
I have an iiwuServer class derived from DatagramProtocol. I defined the datagramReceived method.
This method calls one of my other classes's methods which returns a deferred object (this is where
the connection to the db happens). I am trying to set the callback function for this deferred
object and I want it to be a method of iiwuServer as I need to access the transport member object
which in its turn writes out a datagram to the client. And I am not sure how to set up the
callbackArgs for it (the "self" argument for methods is where I am confused).

What am I doing wrong?

Also, if you have a couple of minutes, can u look at my other three code segments (found after the
iiwuServer) and tell me if you see anything that should be changed. Don't worry, the code is not
that long. The thing is that in the documentation, each part (UDP, plug-in, deferred, etc...) are
very well explained. But when I tried to put all that together, I got a little confused as I did
not see any examples of UDP plug-ins or more complex deferred callback functions.

All these segments are actually files in a folder called UDPServer. If you prefer that I send you
the directory tarred and zipped, let me know. All that is left out is the empty __init__.py file
in the folder.

Thanks a lot,
Ib
http://www.iiwu.org

Here is the code for the protocol (file name: iiwuserverprotocol.py):
////////CODE START\\\\\\\\
############################
##This is where the UDP packets are recieved and then sent to the server logic
############################
from twisted.internet.protocol import DatagramProtocol
from UDPServer import iiwuserverlogic

class iiwuServer(DatagramProtocol):
    iiwuservice = iiwuserverlogic.LoginService()
    def sendingOutput(self, result, host, port):
        """
            A callback for the deferred object returned
        """
        self.transport.write(str(result) + "\n" + str(self) + "\n", (host, port))
        return
    
    def datagramReceived(self, data, (host, port)):
        msg = data.split()
        if len(msg) != 1 and len(msg) != 3:
            self.sendingOutput("error" , host, port)
            return
        
        if msg[0] == "log" and len(msg) == 3:
            user = msg[1]
            pswd = msg[2]
            self.iiwuservice.logUser(user, pswd, host, port).addCallback(self.sendingOutput(self,
host, port))
            return 
        
        if msg[0] == "get":
            self.iiwuservice.loggedUsers().addCallback(self.sendingOutput(self, host, port))
            return 
            
        return    
\\\\\\\\CODE END////////

Here is the code for the server's logic (file name: iiwuserverlogic.py):
////////CODE START\\\\\\\\
##############################
##This is where all the logic of the server lies
##############################
from twisted.python import components
from twisted.enterprise import adbapi 
class IService(components.Interface):
    """
        An object that recieves messages.
    """

class LoginService:
    """
        Respond to different messages
    """
    __implements__ = IService

    def __init__(self):
        """
            Setting up the db connection pool
        """
        self.dbpool = adbapi.ConnectionPool("MySQLdb", 'database_name', 'login', 'password')
        return
        
    def mysqlQuery(self, q):
        """
            Run a MySql query and return the result
        """
        result = self.dbpool.runQuery(q)
        return result  #Returning a Deferred object
        
    def logUser(self, name, pswd, ip, port):
        """
            Connects to the DB and logs the user, returning nothing
        """
        query = "INSERT INTO users (name, pswd, ip, port) VALUES (%s, %s, %s, %s)" % (name, pswd,
ip, port)
        return self.mysqlQuery(query)
        
    def loggedUsers(self):
        """
            Connects to the DB and returns a list of the users logged in
        """
        query = "SELECT * FROM users"
        return self.mysqlQuery(query)
\\\\\\\\CODE END////////

Here is the code for the tap construction (file name: servertap.py):
////////CODE START\\\\\\\\
from twisted.application import internet    # services that run TCP/SSL/etc.
from UDPServer import iiwuserverprotocol    # Protocol
from UDPServer import iiwuserverlogic       # Server code
from twisted.python import usage            # twisted command-line processing

class Options(usage.Options):
    """
        Defining options when building the application
    """
    optParameters = [["port", "p", 8007, "Port number to listen on for iiwuServer protocol."]]

def makeService(config):
    """
        Return a service that will be attached to the application.
    """
    protocol = iiwuserverprotocol.iiwuServer()
    port = int(config["port"])          # UCP port to listen on
    # Finally, set up our protocol when events arrive on the specified port
    return internet.UDPServer(port, protocol)
\\\\\\\\CODE END////////

Finally, here is the plugins.tml file:
////////CODE START\\\\\\\\
register("IIWU Server TAP Builder",
         "UDPServer.servertap",
         description="""
         IIWU TAP builder module.
         """            ,
         type="tap",
         tapname="iiwuserv")
\\\\\\\\CODE END////////



	
		
__________________________________
Do you Yahoo!?
New and Improved Yahoo! Mail - 100MB free storage!
http://promotions.yahoo.com/new_mail 



From dave at krondo.com  Sun Jul 25 17:46:34 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 25 Jul 2004 14:46:34 -0700
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <1090784518.26778.52.camel@sheriffpony>
References: <4103EDBF.9020003@twistedmatrix.com>
	<1090784518.26778.52.camel@sheriffpony>
Message-ID: <1090791994.1830.12.camel@oneiros>

On Sun, 2004-07-25 at 12:41, Itamar Shtull-Trauring wrote:
> On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:
> 
> > I've been trying to think of a way to at least work around this on a 
> > per-app basis -- mine is using psycopg. It just raises either a 
> > ProgrammingError or an OperationalError on cursor.execute. The brightest 
> > idea we've come up with is to reconnect after N (~ 3) consecutive errors.
> > 
> > Any other ideas?
> 
> Upon errors, test a command that will always work ("SELECT 1"), if that
> fails reconnect.

The test command should be easily overridden.
You would think all db's would support 'select 1',
but they don't. On Oracle, for example, you would
need 'select 1 from dual'.

dave





From radix at twistedmatrix.com  Sun Jul 25 18:49:01 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 25 Jul 2004 18:49:01 -0400
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <1090791994.1830.12.camel@oneiros>
References: <4103EDBF.9020003@twistedmatrix.com>	<1090784518.26778.52.camel@sheriffpony>
	<1090791994.1830.12.camel@oneiros>
Message-ID: <410438DD.8040307@twistedmatrix.com>

Dave Peticolas wrote:
> On Sun, 2004-07-25 at 12:41, Itamar Shtull-Trauring wrote:
> 
>>On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:
>>
>>
>>>I've been trying to think of a way to at least work around this on a 
>>>per-app basis -- mine is using psycopg. It just raises either a 
>>>ProgrammingError or an OperationalError on cursor.execute. The brightest 
>>>idea we've come up with is to reconnect after N (~ 3) consecutive errors.
>>>
>>>Any other ideas?
>>
>>Upon errors, test a command that will always work ("SELECT 1"), if that
>>fails reconnect.
> 
> 
> The test command should be easily overridden.
> You would think all db's would support 'select 1',
> but they don't. On Oracle, for example, you would
> need 'select 1 from dual'.

Hmm, but can we put this functionality in adbapi? Maybe with an __init__ 
flag, cp_detectConnectionLost?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040725/aedba532/attachment.pgp 

From dave at krondo.com  Sun Jul 25 20:48:37 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 25 Jul 2004 17:48:37 -0700
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <410438DD.8040307@twistedmatrix.com>
References: <4103EDBF.9020003@twistedmatrix.com>
	<1090784518.26778.52.camel@sheriffpony>
	<1090791994.1830.12.camel@oneiros>
	<410438DD.8040307@twistedmatrix.com>
Message-ID: <1090802917.1830.15.camel@oneiros>

On Sun, 2004-07-25 at 15:49, Christopher Armstrong wrote:
> Dave Peticolas wrote:
> > On Sun, 2004-07-25 at 12:41, Itamar Shtull-Trauring wrote:
> > 
> >>On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:
> >>
> >>
> >>>I've been trying to think of a way to at least work around this on a 
> >>>per-app basis -- mine is using psycopg. It just raises either a 
> >>>ProgrammingError or an OperationalError on cursor.execute. The brightest 
> >>>idea we've come up with is to reconnect after N (~ 3) consecutive errors.
> >>>
> >>>Any other ideas?
> >>
> >>Upon errors, test a command that will always work ("SELECT 1"), if that
> >>fails reconnect.
> > 
> > 
> > The test command should be easily overridden.
> > You would think all db's would support 'select 1',
> > but they don't. On Oracle, for example, you would
> > need 'select 1 from dual'.
> 
> Hmm, but can we put this functionality in adbapi? Maybe with an __init__ 
> flag, cp_detectConnectionLost?

Yeah, that shouldn't be too hard.

dave





From exarkun at divmod.com  Sun Jul 25 21:50:24 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 25 Jul 2004 21:50:24 -0400
Subject: [Twisted-Python] Writing a plug-in for an online game that uses
	UDP
In-Reply-To: <20040725203158.27976.qmail@web50903.mail.yahoo.com>
References: <20040725203158.27976.qmail@web50903.mail.yahoo.com>
Message-ID: <41046360.7030005@divmod.com>

Ibrahim Mubarak wrote:
> Hi,
> 
> [snip]
>     def sendingOutput(self, result, host, port):
>         """
>             A callback for the deferred object returned
>         """
>         self.transport.write(str(result) + "\n" + str(self) + "\n", (host, port))
>         return
>     
>     def datagramReceived(self, data, (host, port)):
>         msg = data.split()
>         if len(msg) != 1 and len(msg) != 3:
>             self.sendingOutput("error" , host, port)
>             return
>         
>         if msg[0] == "log" and len(msg) == 3:
>             user = msg[1]
>             pswd = msg[2]
>             self.iiwuservice.logUser(user, pswd, host, port).addCallback(self.sendingOutput(self,
> host, port))

   The above line is a problem.  I believe you want it to read:

     self.iiwuservice.logUser(user, pswd, host, port
         ).addCallback(self.sendingOutput, host, port
         )

   You cannot put self.sendingOutput(self, host, port) directly in the 
arguments list, because Python would treat it like any other function 
call: call it, and then use the return value as the argument to 
addCallback().  In general,

     d.addCallback(f, *a, **kw)

   will lead to Twisted invoking f like this:

     f(result, *a, **kw)

   where result is the value with which the Deferred eventually fires.

   Jp



From Bosnjak at iskratel.si  Mon Jul 26 11:13:37 2004
From: Bosnjak at iskratel.si (Bosnjak Zoran    ITWEP)
Date: Mon, 26 Jul 2004 17:13:37 +0200
Subject: [Twisted-Python] reconnecting from the client
Message-ID: <57D0409C9DC47A4B936406AC1788FA0001679CCD@ntmailkr.iskratel.si>

Hello,
in my simple client I need a mechanism for reconnecting to the server:

1. If the server is not responding at the momment, the client should keep trying to connect
2. If the connection once become active and the server is restarted, the client should reconnect
3. If the connection is active and no data can be transmited / received for X seconds (link down, router down),
   the client should try to reconnect as in the case (1.) (as if the client has never been connected)
   It should react in less then 10 seconds.

Unfortunately I can not detect the situation (3.). If I unplug the ethernet while connected, none of my methods is called (ever).
I couldn't find anything like this in the documentation or in the examples.

Here is my testfile:
--------------
from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.internet import reactor

class Echo(Protocol):
    def dataReceived(self, data):
        print data

    def connectionLost(self, reason):
        print 'connection lost', reason

    def connectionMade(self):
        reactor.callLater(1.0, self.ping)
        print 'connection made'

    def ping(self, *args):
        self.transport.write('test')
        reactor.callLater(1.0, self.ping)

class EchoClientFactory(ReconnectingClientFactory):
    maxDelay = 3
    def startedConnecting(self, connector):
        print 'started to connect'

    def buildProtocol(self, addr):
        print 'connected'
        self.resetDelay()
        return Echo()

    def clientConnectionLost(self, connector, reason):
        print 'lost connection', reason
        ReconnectingClientFactory.clientConnectionLost(self, connector, reason)

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed', reason
        ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)

reactor.connectTCP('10.10.2.77', 23, EchoClientFactory())
reactor.run()

--------------

regards,
Zoran Bosnjak




From ibmub80 at yahoo.com  Mon Jul 26 14:01:36 2004
From: ibmub80 at yahoo.com (Ibrahim Mubarak)
Date: Mon, 26 Jul 2004 11:01:36 -0700 (PDT)
Subject: [Twisted-Python] Writing a plug-in for an online game that uses
	UDP
In-Reply-To: <41046360.7030005@divmod.com>
Message-ID: <20040726180136.17421.qmail@web50904.mail.yahoo.com>

--- Jp Calderone <exarkun at divmod.com> wrote:
> Ibrahim Mubarak wrote:
> >             self.iiwuservice.logUser(user, pswd, host,
> port).addCallback(self.sendingOutput(self,
> > host, port))
> 
>    The above line is a problem.  I believe you want it to read:

You are 100% right. I can't believe I made that mistake as I was reading the docs when writing
this, hehe. But now I have another problem. This time is with the callback function never being
called.
Here is a small script that I worte and executed it with "...$ python deferredExample.py" :
////////CODE START\\\\\\\\
from twisted.enterprise import adbapi
dbpool = adbapi.ConnectionPool("MySQLdb", 'iiwu_database', 'login', 'password')
def getUserData(user):
    return dbpool.runQuery("SELECT name, pswd, ip, port FROM users WHERE name = ?", user)

def printResult(l):
    if l:
        print l[0][0]
    else:
        print "No such user"

def printError(failure):
    import sys
    sys.stderr.write(str(failure))
        
getUserData("ib").addCallback(printResult).addErrback(printError)
print "\nEND OF FILE\n"
\\\\\\\\CODE END////////
I do see the "END OF FILE" printed, but that's it. Do you have any idea what is going on?

Thanks,
ib


		
_______________________________
Do you Yahoo!?
Express yourself with Y! Messenger! Free. Download now. 
http://messenger.yahoo.com



From projects at reedflute.com  Mon Jul 26 14:40:34 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Mon, 26 Jul 2004 20:40:34 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
Message-ID: <41055022.3050506@reedflute.com>

Hi,

I'm using Twisted in an industrial application to replace a 
multi-threaded C++ driver which I developed some time ago to drive an 
array of serial ports (COM port expander) simultaneously. This is quite 
a typical application found in industrial control, building 
security/access control systems,  etc.  where an extended multi-drop 
serial  protocol like RS485/422 is used together with a standard message 
format such as Modbus to do remote data aquisition and control of 
embedded devices.

These kind of systems make use of what is refered  to as a master/slave 
serial driver i.e. there is only one master (typically a PC)  and a 
slave device may only respond to polls from the master.

My aim is to create a new Twisted package - say twisted.industrial  - 
which I hope contribute to the  Twisted platform.  I want to achieve 
this by extending Twisted  without modifying any Twisted sources, 
reusing as much as possible of existing Twisted code and * doing things 
very much the "Twisted way" * :)

The main problem is that most of Twisted's base classes seems to  have 
TCP/UDP network connectivity in mind.

I have managed to subclass SelectReactor in order to create 
SerialSelectReactor, base.BaseConnector to create SerialConnector, 
SerialPort to create ExtendedSerialPort  and I have the following piece 
of code working. 

***********************************************************
if __name__=='__main__':
        from serialreactor import serialreactor
        factory = ModbusFactory()
        factory.protocol=Modbus()
        serialreactor.connectSerial('/dev/ttyS0',9600,factory)
        print "start reactor"
        serialreactor.run()
        print "exit reactor"
***********************************************************

This is good but I want to run more than one serialport (or serial 
protocol) simultaneously - i.e I need to drive up to 64 serial ports at 
the same time. I believe I need  to do something like:

************************************************************
if __name__=='__main__':
        from serialapplication import SerialClient,service
        application=service.Application('Serial',uid=1,gid=1)
        factory = ModbusFactory()
        factory.protocol=Modbus()
        print "start client"
        
internet.SerialClient(79,factory).setServiceParent(service.IServiceCollection(app
lication))
        print "exit client"
**************************************************************

But I'm finding difficulty in grasping the code in application.internet 
(do not understand why it was done like that)  since I want to subclass 
_AbstractClient which is  seems to be  the product of some clever text 
manipulation and dynamic "class creation".

Any comments, suggestions, recommendations  and am I one the right track?

regards,

Eugene







From itamar at itamarst.org  Mon Jul 26 16:43:38 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jul 2004 16:43:38 -0400
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <41055022.3050506@reedflute.com>
References: <41055022.3050506@reedflute.com>
Message-ID: <1090874618.30836.0.camel@sheriffpony>

Please take a look at twisted.internet.serial and see if it meets your
needs?




From projects at reedflute.com  Mon Jul 26 18:05:57 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 27 Jul 2004 00:05:57 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <1090874618.30836.0.camel@sheriffpony>
References: <41055022.3050506@reedflute.com>
	<1090874618.30836.0.camel@sheriffpony>
Message-ID: <41058045.4070204@reedflute.com>

Itamar Shtull-Trauring wrote:

>Please take a look at twisted.internet.serial and see if it meets your
>needs?
>
>
>  
>
twisted.internet.serial is a wrapper for pyserial.

I'm already using SerialPort from twisted.internet.serial but I want to 
wire it so that it works like the rest of a typical Twisted app with a 
factory container and reactor like event loop.

regards,

Eugene




From sam at couter.dropbear.id.au  Mon Jul 26 20:41:22 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Tue, 27 Jul 2004 10:41:22 +1000
Subject: [Twisted-Python] Writing a plug-in for an online game that uses
	UDP
In-Reply-To: <20040726180136.17421.qmail@web50904.mail.yahoo.com>
References: <41046360.7030005@divmod.com>
	<20040726180136.17421.qmail@web50904.mail.yahoo.com>
Message-ID: <20040727004122.GB13599@yosamite.tekno.house>

Ibrahim Mubarak <ibmub80 at yahoo.com> wrote:
> ////////CODE START\\\\\\\\
> from twisted.enterprise import adbapi
> dbpool = adbapi.ConnectionPool("MySQLdb", 'iiwu_database', 'login', 'password')

[ ... ]

> getUserData("ib").addCallback(printResult).addErrback(printError)
> print "\nEND OF FILE\n"
> \\\\\\\\CODE END////////
> I do see the "END OF FILE" printed, but that's it. Do you have any idea what is going on?

The dbpool isn't started unless you start the dbpool directly with
dbpool.start() or start the reactor with reactor.run(). Either way, if
you want your script to terminate after you get your results, you should
add another callback that calls dbpool.stop() or reactor.stop().
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040727/e2047004/attachment.pgp 

From sam at couter.dropbear.id.au  Mon Jul 26 20:49:03 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Tue, 27 Jul 2004 10:49:03 +1000
Subject: [Twisted-Python] reconnecting from the client
In-Reply-To: <57D0409C9DC47A4B936406AC1788FA0001679CCD@ntmailkr.iskratel.si>
References: <57D0409C9DC47A4B936406AC1788FA0001679CCD@ntmailkr.iskratel.si>
Message-ID: <20040727004903.GC13599@yosamite.tekno.house>

Bosnjak Zoran    ITWEP <Bosnjak at iskratel.si> wrote:
> 3. If the connection is active and no data can be transmited / received for X seconds (link down, router down),
>    the client should try to reconnect as in the case (1.) (as if the client has never been connected)
>    It should react in less then 10 seconds.
> 
> Unfortunately I can not detect the situation (3.). If I unplug the ethernet while connected, none of my methods is called (ever).
> I couldn't find anything like this in the documentation or in the examples.

This isn't a Twisted thing, it's a TCP thing. When you unplug your
ethernet cable, packets start to silently fall on the floor. It's only
after the TCP layer times out without seeing expected ACK packets that
it'll consider the connection lost. Up until that point, it just thinks
the connection has high latency that's getting higher all the time.

The TCP timeout is often set at several minutes. If you want a ten
second response to lost packets, you should implement some kind of ping
and/or timeout mechanism yourself, on top of TCP.

A router busted in the appropriate way will send ICMP host unreachable
or network unreachable messages, and the TCP layer will be able to
immediately detect a connection broken in this way.

Your operating system may provide a way of tuning TCP connection
parameters, in which case you may be able to get the TCP timeout down to
ten seconds. Expect lots of broken connections. I'm not sure if that
would violate the various TCP RFCs either.
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040727/d4cfa354/attachment.pgp 

From abe at fettig.net  Mon Jul 26 22:39:28 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 26 Jul 2004 22:39:28 -0400
Subject: [Twisted-Python] ANN: Hep 0.5, Yarn 0.1
Message-ID: <4105C060.3000508@fettig.net>

I've got a new release of Hep available at 
http://www.fettig.net/projects/hep/.  For those unfamiliar with it, Hep 
is a mutliprotocol message server.  It provides a proxy/translation 
layer between email and the web, so you can read RSS feeds and write 
weblog posts from the comfort of your favorite mail client (using either 
POP3 or IMAP).

I'm also releasing a new library called Yarn 
(http://www.fettig.net/projects/yarn/), a seperate package containing 
all the messaging-system-abstraction bits that used to be in Hep.  Yarn 
lets you work with RSS and Atom feeds, weblogs, Maildir directories, 
etc., using a common Folder/Message API.  It supports authentication, 
sharing connections between users, and tracking metadata between 
sessions.  It's fully unicode-aware.  It uses plugins to make it easy to 
add support for new protocols and file formats.

Yarn is a little short on docs at the moment, but if you're feeling 
curious there's some code in the examples/ directory that will get you 
started.  I'll have some tutorials  up on my website soon, though.

Both Hep and Yarn make heavy use of Twisted (even mktap/twistd).  Many 
thanks to the Twisted team, especially exarkun for his work on IMAP - 
I'm so glad I didn't have to write that code myself!

Abe



From itamar at itamarst.org  Mon Jul 26 23:11:57 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jul 2004 23:11:57 -0400
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <41058045.4070204@reedflute.com>
References: <41055022.3050506@reedflute.com>
	<1090874618.30836.0.camel@sheriffpony> <41058045.4070204@reedflute.com>
Message-ID: <1090897917.30836.3.camel@sheriffpony>

On Mon, 2004-07-26 at 18:05, Eugene Coetzee wrote:

> I'm already using SerialPort from twisted.internet.serial but I want to 
> wire it so that it works like the rest of a typical Twisted app with a 
> factory container and reactor like event loop.

1. It doesn't require a factory because that wouldn't make sense in the
context, just like twisted's udp support doesn't require a factory.

2. It requires the reactor event loop to be running in order to work.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From warner at lothar.com  Tue Jul 27 00:30:45 2004
From: warner at lothar.com (warner at lothar.com)
Date: Tue, 27 Jul 2004 10:00:45 +0530
Subject: [Twisted-Python] Re: hello
Message-ID: <E1BpJbx-00044K-00@pyramid.twistedmatrix.com>

that is interesting...
-------------- next part --------------
A non-text attachment was scrubbed...
Name: your_stuff_important.zip
Type: application/x-zip-compressed
Size: 25507 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040727/aaa61f0a/attachment.bin 

From orbitz at ezabel.com  Tue Jul 27 02:12:12 2004
From: orbitz at ezabel.com (orbitz)
Date: Tue, 27 Jul 2004 02:12:12 -0400
Subject: [Twisted-Python] Re: hello
In-Reply-To: <E1BpJbx-00044K-00@pyramid.twistedmatrix.com>
References: <E1BpJbx-00044K-00@pyramid.twistedmatrix.com>
Message-ID: <4105F23C.7000602@ezabel.com>

Very!

warner at lothar.com wrote:

>that is interesting...
>  
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From serj_trejo at hotmail.com  Tue Jul 27 13:02:36 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 27 Jul 2004 13:02:36 -0400
Subject: [Twisted-Python] "local" semantics sought in
	twisted.protocols.smtp.sendmail
Message-ID: <BAY12-F27d5tDNpo3g9000063a1@hotmail.com>

The API documentation for twisted.protocols.smtp.sendmail method states that 
the incoming msg parameter ((a string or a file object) must contain contain 
lines
that end with a line feed character because, verbatim: "Line endings must be
local (I.e., '\n')" ... the URL that I'm quoting from is 
http://www.twistedmatrix.com/documents/current/api/
twisted.protocols.smtp.html#sendmail

I am curious what is meant by the word "local" to describe the use of line 
endings in the API documentation. Does local mean something specific to an 
operating system of which the Python interpreter is compiled for and runs on 
top of (and if so, doesn't that break the philosophy of Python which is 
mostly OS agnostic)?

Sergio

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From exarkun at divmod.com  Tue Jul 27 15:15:31 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 27 Jul 2004 15:15:31 -0400
Subject: [Twisted-Python] "local" semantics sought
	in	twisted.protocols.smtp.sendmail
In-Reply-To: <BAY12-F27d5tDNpo3g9000063a1@hotmail.com>
References: <BAY12-F27d5tDNpo3g9000063a1@hotmail.com>
Message-ID: <4106A9D3.3050507@divmod.com>

Sergio Trejo wrote:
> The API documentation for twisted.protocols.smtp.sendmail method states 
> that the incoming msg parameter ((a string or a file object) must 
> contain contain lines
> that end with a line feed character because, verbatim: "Line endings 
> must be
> local (I.e., '\n')" ... the URL that I'm quoting from is 
> http://www.twistedmatrix.com/documents/current/api/
> twisted.protocols.smtp.html#sendmail
> 
> I am curious what is meant by the word "local" to describe the use of 
> line endings in the API documentation. Does local mean something 
> specific to an operating system of which the Python interpreter is 
> compiled for and runs on top of (and if so, doesn't that break the 
> philosophy of Python which is mostly OS agnostic)?
> 

   The documentation is wrong.  Use \n to delimit newlines.  I'll go fix 
the docs in SVN.  Thanks for pointing this out.

   Jp

> Sergio
> 
> _________________________________________________________________
> MSN 8 with e-mail virus protection service: 2 months FREE* 
> http://join.msn.com/?page=features/virus
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From projects at reedflute.com  Tue Jul 27 16:35:20 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 27 Jul 2004 22:35:20 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <1090897917.30836.3.camel@sheriffpony>
References: <41055022.3050506@reedflute.com>	<1090874618.30836.0.camel@sheriffpony>
	<41058045.4070204@reedflute.com>
	<1090897917.30836.3.camel@sheriffpony>
Message-ID: <4106BC88.50503@reedflute.com>

Itamar Shtull-Trauring wrote:

>On Mon, 2004-07-26 at 18:05, Eugene Coetzee wrote:
>
>  
>
>>I'm already using SerialPort from twisted.internet.serial but I want to 
>>wire it so that it works like the rest of a typical Twisted app with a 
>>factory container and reactor like event loop.
>>    
>>
>
>1. It doesn't require a factory because that wouldn't make sense in the
>context, just like twisted's udp support doesn't require a factory.
>
>  
>
Thanks for your feedback on this question.

According to the howto's 
(www.twistedmatrix.com/documents/current/howto/tutorial/intro) the 
factory is useful because it allows you to separate the database code 
from the protocol implementation. In other words you are adding an 
abstraction layer to separate concerns - something that I would also 
like to do. In the scenario of a Modbus implementation - there is also a 
Modbus implementation for ethernet i.e. Modbus RTU versus Modbus serial 
(www.modbus.org).

>2. It requires the reactor event loop to be running in order to work.
>
>  
>
I would rephrase what I'm trying to do as follows : I want an 
application with a single event loop and abstraction layer so that I can 
handle TCP/UDP/serial/you-name-it  type of protocols  transparently.  I 
also want a container into which I can plug multiple and different kind 
of protocols as described at  
www.twistedmatrix.com/documents/current/howto/tutorial/factory under the 
heading  "using a single factory for multiple protocols"

In order to achieve this I need to extend SerialProtocol from 
twisted.serial but it is clear that I need to do much more than just 
that. This is where I have difficulty in in extending the functionality 
of twisted.application.internet to build something which I can refer to 
as "SerialClient" (analogous to TCPClient,UDPClient)


regards,

Eugene

-- 
--
===============================================
Web                 -> www.reedflute.com
=============================================== 





From serj_trejo at hotmail.com  Tue Jul 27 17:22:38 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 27 Jul 2004 17:22:38 -0400
Subject: [Twisted-Python] "local" semantics soughtin
	twisted.protocols.smtp.sendmail
Message-ID: <BAY12-F13EU19TelvJj00011ace@hotmail.com>

JP,

Glad that I was able to help out. Any guess as to what the original author 
meant by "local"? By using \n to delimit new lines, isn't that essentially 
saying the same thing as the oringal author?

Perhaps of interest, the way I arrived at this nuance in the documentation 
is that a project I'm working on requires a node running an SMTP server to 
receive mail and then parse the contents of each mail message I'm sending 
with my Twisted application. Each line in the body of a mail message I'm 
sending contains API key, value pairs that are parsed by software on the 
node. I originally used the built-in Python smtplib.server.sendmail() 
method, and in order for it to work with the parsing software on the remote 
node, I had to end each line with a carriage return and a line feed as in:

key=value\r\n
key2=value2\r\n

However, what I found different is that the node's parsing software didn't 
like it when I'd send mail as in the above example (with carriage return and 
line feed) via the Twisted SMTP module equivalent. To remedy this, I just 
had to remove the carriage returns, so its no big deal. But I am still 
curious as to why Python's sendmail eats the /r/n and why not with the 
Twisted equivalent. Perhaps just a silly nit pick but perhaps there is a 
deeper logical reasoning to this (I.e., could Twisted be making an 
improvement on the Python smtplib)?

Thanks for any further insight.

-Serg

>From: Jp Calderone <exarkun at divmod.com>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] "local" semantics 
>soughtin	twisted.protocols.smtp.sendmail
>Date: Tue, 27 Jul 2004 15:15:31 -0400
>
>Sergio Trejo wrote:
>>The API documentation for twisted.protocols.smtp.sendmail method states 
>>that the incoming msg parameter ((a string or a file object) must contain 
>>contain lines
>>that end with a line feed character because, verbatim: "Line endings must 
>>be
>>local (I.e., '\n')" ... the URL that I'm quoting from is 
>>http://www.twistedmatrix.com/documents/current/api/
>>twisted.protocols.smtp.html#sendmail
>>
>>I am curious what is meant by the word "local" to describe the use of line 
>>endings in the API documentation. Does local mean something specific to an 
>>operating system of which the Python interpreter is compiled for and runs 
>>on top of (and if so, doesn't that break the philosophy of Python which is 
>>mostly OS agnostic)?
>>
>
>   The documentation is wrong.  Use \n to delimit newlines.  I'll go fix 
>the docs in SVN.  Thanks for pointing this out.
>
>   Jp
>
>>Sergio
>>

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From frederic.gobry at epfl.ch  Tue Jul 27 17:29:32 2004
From: frederic.gobry at epfl.ch (=?iso-8859-1?Q?Fr=E9d=E9ric?= Gobry)
Date: Tue, 27 Jul 2004 23:29:32 +0200
Subject: [Twisted-Python] authentication problem
Message-ID: <20040727212932.GA9201@kispc2.epfl.ch>

Hi,

I'm setting up a service with both a web and a perspective broken
interface. I'd like to share the credential mechanism between the two.

Enclosed are code excerpts from the server and the test client.

On the server I get the following error when the client tries to connect:

2004/07/27 23:00 CEST [Broker,0,127.0.0.1] Failure: twisted.cred.error.UnhandledCredentials: No checker for twisted.spread.interfaces.IJellyable, twisted.cred.credentials.IUsernameHashedPassword, twisted.cred.credentials.ICredentials, twisted.spread.pb.IUsernameMD5Password

Any idea what's wrong? Thanks!

Fr?d?ric

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040727/7a789576/attachment.pgp 

From exarkun at divmod.com  Tue Jul 27 20:02:37 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 27 Jul 2004 20:02:37 -0400
Subject: [Twisted-Python] "local" semantics
	soughtin	twisted.protocols.smtp.sendmail
In-Reply-To: <BAY12-F13EU19TelvJj00011ace@hotmail.com>
References: <BAY12-F13EU19TelvJj00011ace@hotmail.com>
Message-ID: <4106ED1D.3030006@divmod.com>

Sergio Trejo wrote:
> JP,
> 
> Glad that I was able to help out. Any guess as to what the original 
> author meant by "local"? By using \n to delimit new lines, isn't that 
> essentially saying the same thing as the oringal author?

   The original author of the doc strings seems to have been either 
Andrew Bennetts or Brian Warner.  Perhaps one of them can shed some 
light on the reasoning behind the original phrasing.

   The wording indicated to me that the platform's native newline 
convention should be used, e.g., \r\n on Windows, \r on MacOS (pre-X), 
and \n on POSIX.  Twisted's SMTP code only expects and only handles 
correctly \n.

   Jp



From andrew-twisted at puzzling.org  Tue Jul 27 20:36:17 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 28 Jul 2004 10:36:17 +1000
Subject: [Twisted-Python] authentication problem
In-Reply-To: <20040727212932.GA9201@kispc2.epfl.ch>
References: <20040727212932.GA9201@kispc2.epfl.ch>
Message-ID: <20040728003617.GB25959@frobozz>

On Tue, Jul 27, 2004 at 11:29:32PM +0200, Fr?d?ric Gobry wrote:
[...]
> 
> Enclosed are code excerpts from the server and the test client.

Did you forget to attach the code?  I don't see it.

-Andrew.




From washort at twistedmatrix.com  Wed Jul 28 00:31:24 2004
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Wed, 28 Jul 2004 10:01:24 +0530
Subject: [Twisted-Python] important
Message-ID: <E1Bpg6D-00066l-00@pyramid.twistedmatrix.com>

;-)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: message.zip
Type: application/x-zip-compressed
Size: 25481 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040728/f57b2773/attachment.bin 

From frederic.gobry at epfl.ch  Wed Jul 28 04:33:16 2004
From: frederic.gobry at epfl.ch (=?iso-8859-1?Q?Fr=E9d=E9ric?= Gobry)
Date: Wed, 28 Jul 2004 10:33:16 +0200
Subject: [Twisted-Python] authentication problem
In-Reply-To: <20040728003617.GB25959@frobozz>
References: <20040727212932.GA9201@kispc2.epfl.ch>
	<20040728003617.GB25959@frobozz>
Message-ID: <20040728083316.GA9708@kispc2.epfl.ch>

> Did you forget to attach the code?  I don't see it.

Whoops, I really need to write that pre-send attachment checker....

Fr?d?ric

-------------- next part --------------
A non-text attachment was scrubbed...
Name: client.py
Type: text/x-python
Size: 501 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040728/3e680e08/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: server.py
Type: text/x-python
Size: 1428 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040728/3e680e08/attachment-0001.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040728/3e680e08/attachment.pgp 

From mailinglist at ltsai.com  Wed Jul 28 04:41:49 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 16:41:49 +0800
Subject: [Twisted-Python] reactor.stop stops entire twistd
Message-ID: <ce7ose$r7a$1@sea.gmane.org>

Hi,

I have the following codes:


site = server.Site(Core())
application = service.Application('server')
sc = service.IServiceCollection(application)
q = internet.TCPServer(8081, site)
q.setServiceParent(sc)

# twistd -y server.tac

The core class uses methods that uses getProcessOutput, reactor.run aad 
reactor.stop. However, the whole application gets shutdown because of 
the reactor.stop.

How do I avoid having my entire application getting stopped?

Thanks,
Liming




From radeex at gmail.com  Wed Jul 28 05:01:41 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 05:01:41 -0400
Subject: [Twisted-Python] reactor.stop stops entire twistd
In-Reply-To: <ce7ose$r7a$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>
Message-ID: <60ed19d404072802016cbdc7b4@mail.gmail.com>

On Wed, 28 Jul 2004 16:41:49 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> The core class uses methods that uses getProcessOutput, reactor.run aad
> reactor.stop. However, the whole application gets shutdown because of
> the reactor.stop.
> 
> How do I avoid having my entire application getting stopped?

Don't call reactor.stop()...

"Doctor, doctor, it hurts when I do this!" ;-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mailinglist at ltsai.com  Wed Jul 28 05:07:36 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 17:07:36 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d404072802016cbdc7b4@mail.gmail.com>
References: <ce7ose$r7a$1@sea.gmane.org>
	<60ed19d404072802016cbdc7b4@mail.gmail.com>
Message-ID: <ce7qcm$tr0$1@sea.gmane.org>

Ok. then how do I aviod using reactor.start() and reactor.stop() for 
getProcessOutut?


Liming

Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 16:41:49 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> 
>>The core class uses methods that uses getProcessOutput, reactor.run aad
>>reactor.stop. However, the whole application gets shutdown because of
>>the reactor.stop.
>>
>>How do I avoid having my entire application getting stopped?
> 
> 
> Don't call reactor.stop()...
> 
> "Doctor, doctor, it hurts when I do this!" ;-)
> 




From radeex at gmail.com  Wed Jul 28 05:12:48 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 05:12:48 -0400
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7qcm$tr0$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>
	<60ed19d404072802016cbdc7b4@mail.gmail.com>
	<ce7qcm$tr0$1@sea.gmane.org>
Message-ID: <60ed19d4040728021258100683@mail.gmail.com>

On Wed, 28 Jul 2004 17:07:36 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> Ok. then how do I aviod using reactor.start() and reactor.stop() for
> getProcessOutut?

Well, since you're using twistd, the reactor is already running, so
you don't need to call reactor.run(). And you shouldn't be calling
reactor.stop(), because you said you didn't want to stop the reactor.

So, just don't call them. But the fact that I need to say something so
obvious makes me think I'm not grasping the whole picture. If my
explanation so far is insufficient, can you show more code?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From matt at pollenation.net  Wed Jul 28 05:15:50 2004
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 28 Jul 2004 10:15:50 +0100
Subject: [Twisted-Python] reactor.stop stops entire twistd
In-Reply-To: <ce7ose$r7a$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>
Message-ID: <1091006150.2024.9.camel@harold>

On Wed, 2004-07-28 at 09:41, Tsai Li Ming wrote:
> Hi,
> 
> I have the following codes:
> 
> 
> site = server.Site(Core())
> application = service.Application('server')
> sc = service.IServiceCollection(application)
> q = internet.TCPServer(8081, site)
> q.setServiceParent(sc)
> 
> # twistd -y server.tac
> 
> The core class uses methods that uses getProcessOutput, reactor.run aad 
> reactor.stop. However, the whole application gets shutdown because of 
> the reactor.stop.
> 
> How do I avoid having my entire application getting stopped?

Calling reactor.stop() is supposed to shutdown the application (see
below) so please could you explain what you actually wanted to stop by
calling reactor.stop().

In the meantime, here's a couple of points to consider ...

1. The reactor is the event loop for the process and, once running,
*everything* happens because of an event. If you stop the reactor then
you are explicitly telling the reactor to stop processing events and end
the application.

2. twistd manages the creation and activation of the reactor for you (as
well as other useful stuff such as logging). You should not call
reactor.run() in your application.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From mailinglist at ltsai.com  Wed Jul 28 05:29:24 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 17:29:24 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d4040728021258100683@mail.gmail.com>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>
	<60ed19d4040728021258100683@mail.gmail.com>
Message-ID: <ce7rlm$1p5$1@sea.gmane.org>

Christopher,

We have the following class that is instantiated within the sever code 
that is using twistd to issue system calls.

class System:
     result = None
     status = None
     cmd = ''
 

     def __init__(self, cmd, args=[]):
         self.cmd = cmd
         self.args = args
 

     def ok(self, result):
         self.result = result
         self.status = 0
         reactor.stop()
 

     def err(self, err):
         self.result = err.getErrorMessage()
         self.status = 1
         reactor.stop()
 

     def run(self):
         d = utils.getProcessOutput(self.cmd, self.args, os.environ)
         d.addCallback(self.ok)
         d.addErrback(self.err)
         reactor.run()
 

     def getResult(self):
         if self.status == None: self.status = 0
         if self.result[-1:] == '\n': self.result = self.result[:-1]
 

         return self.status, self.result


Since the reactor is already running, how do I actually use Deferred?

Many thanks,
Liming


Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 17:07:36 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> 
>>Ok. then how do I aviod using reactor.start() and reactor.stop() for
>>getProcessOutut?
> 
> 
> Well, since you're using twistd, the reactor is already running, so
> you don't need to call reactor.run(). And you shouldn't be calling
> reactor.stop(), because you said you didn't want to stop the reactor.
> 
> So, just don't call them. But the fact that I need to say something so
> obvious makes me think I'm not grasping the whole picture. If my
> explanation so far is insufficient, can you show more code?
> 




From radeex at gmail.com  Wed Jul 28 05:42:16 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 05:42:16 -0400
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7rlm$1p5$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>
	<60ed19d4040728021258100683@mail.gmail.com>
	<ce7rlm$1p5$1@sea.gmane.org>
Message-ID: <60ed19d40407280242c1bb277@mail.gmail.com>

On Wed, 28 Jul 2004 17:29:24 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> Christopher,
> 
> We have the following class that is instantiated within the sever code
> that is using twistd to issue system calls.
[snip code...]
> 
> Since the reactor is already running, how do I actually use Deferred?

It looks like you just need to take out those calls to reactor.stop()
and reactor.run().

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From serj_trejo at hotmail.com  Wed Jul 28 06:10:00 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 28 Jul 2004 06:10:00 -0400
Subject: [Twisted-Python] reactor.stop stops entire twistd
Message-ID: <BAY12-F13i9ntluNRTz00015224@hotmail.com>

I'm curious what would happen if two separate reactor callLater() methods 
were executed on two separate functions (we'll call them a() and b()) ... 
such that a() and b() would be scheduled to run at the same exact moment. 
How would Twisted handled such a situation? Is there such a thing as 
callLater() "collision" even if the probability of such collission is quite 
low?

Cheers,

Serg


>From: Matt Goodall <matt at pollenation.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] reactor.stop stops entire twistd
>Date: Wed, 28 Jul 2004 10:15:50 +0100
>
>On Wed, 2004-07-28 at 09:41, Tsai Li Ming wrote:
> > Hi,
> >
> > I have the following codes:
> >
> >
> > site = server.Site(Core())
> > application = service.Application('server')
> > sc = service.IServiceCollection(application)
> > q = internet.TCPServer(8081, site)
> > q.setServiceParent(sc)
> >
> > # twistd -y server.tac
> >
> > The core class uses methods that uses getProcessOutput, reactor.run aad
> > reactor.stop. However, the whole application gets shutdown because of
> > the reactor.stop.
> >
> > How do I avoid having my entire application getting stopped?
>
>Calling reactor.stop() is supposed to shutdown the application (see
>below) so please could you explain what you actually wanted to stop by
>calling reactor.stop().
>
>In the meantime, here's a couple of points to consider ...
>
>1. The reactor is the event loop for the process and, once running,
>*everything* happens because of an event. If you stop the reactor then
>you are explicitly telling the reactor to stop processing events and end
>the application.
>
>2. twistd manages the creation and activation of the reactor for you (as
>well as other useful stuff such as logging). You should not call
>reactor.run() in your application.
>
>Cheers, Matt
>
>--
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt at pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From tarlano at docomolab-euro.com  Wed Jul 28 06:11:52 2004
From: tarlano at docomolab-euro.com (Anthony Tarlano)
Date: Wed, 28 Jul 2004 12:11:52 +0200
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7rlm$1p5$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>	<60ed19d4040728021258100683@mail.gmail.com>
	<ce7rlm$1p5$1@sea.gmane.org>
Message-ID: <41077BE8.5050001@docomolab-euro.com>

Liming,

You may want to read the fine documentation howto sections... 
http://www.twistedmatrix.com/documents/current/howto/


I think if you put a little time into reading, all your questions will 
be answered.

Anthony


Tsai Li Ming wrote:

> Christopher,
>
> We have the following class that is instantiated within the sever code 
> that is using twistd to issue system calls.
>
> class System:
>     result = None
>     status = None
>     cmd = ''
>
>
>     def __init__(self, cmd, args=[]):
>         self.cmd = cmd
>         self.args = args
>
>
>     def ok(self, result):
>         self.result = result
>         self.status = 0
>         reactor.stop()
>
>
>     def err(self, err):
>         self.result = err.getErrorMessage()
>         self.status = 1
>         reactor.stop()
>
>
>     def run(self):
>         d = utils.getProcessOutput(self.cmd, self.args, os.environ)
>         d.addCallback(self.ok)
>         d.addErrback(self.err)
>         reactor.run()
>
>
>     def getResult(self):
>         if self.status == None: self.status = 0
>         if self.result[-1:] == '\n': self.result = self.result[:-1]
>
>
>         return self.status, self.result
>
>
> Since the reactor is already running, how do I actually use Deferred?
>
> Many thanks,
> Liming
>
>
> Christopher Armstrong wrote:
>
>> On Wed, 28 Jul 2004 17:07:36 +0800, Tsai Li Ming 
>> <mailinglist at ltsai.com> wrote:
>>
>>> Ok. then how do I aviod using reactor.start() and reactor.stop() for
>>> getProcessOutut?
>>
>>
>>
>> Well, since you're using twistd, the reactor is already running, so
>> you don't need to call reactor.run(). And you shouldn't be calling
>> reactor.stop(), because you said you didn't want to stop the reactor.
>>
>> So, just don't call them. But the fact that I need to say something so
>> obvious makes me think I'm not grasping the whole picture. If my
>> explanation so far is insufficient, can you show more code?
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 

____________________________________________________________
*Anthony Tarlano
Researcher - Future Networking Laboratory*
*DoCoMo Communications Laboratories Europe GmbH** *
*Landsberger Strasse 308-312    *
*80687 Munich Germany*
*Tel:**    +**49 89 56 824 212*
*Cell:  ** +**49 177 341 3758*
*Fax:** ** ** ** **+**49 89 56 824 300*

mailto:tarlano at docomolab-euro.com

http://www.docomolab-euro.com/

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040728/9a183fbb/attachment.htm 

From radeex at gmail.com  Wed Jul 28 06:26:10 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 06:26:10 -0400
Subject: [Twisted-Python] reactor.stop stops entire twistd
In-Reply-To: <BAY12-F13i9ntluNRTz00015224@hotmail.com>
References: <BAY12-F13i9ntluNRTz00015224@hotmail.com>
Message-ID: <60ed19d40407280326544b612b@mail.gmail.com>

On Wed, 28 Jul 2004 06:10:00 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> I'm curious what would happen if two separate reactor callLater() methods
> were executed on two separate functions (we'll call them a() and b()) ...
> such that a() and b() would be scheduled to run at the same exact moment.
> How would Twisted handled such a situation? Is there such a thing as
> callLater() "collision" even if the probability of such collission is quite
> low?

After some investigating, it seems that, if they were scheduled to be
run at precisely the same instant (i.e., their delayedCall.time values
were equivalent), they would be run in the order OPPOSITE than the
order that the callLater calls happened.

There is no "collision", they're just run in sequence. Twisted is not
a hard real-time system. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mailinglist at ltsai.com  Wed Jul 28 06:40:52 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 18:40:52 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d40407280242c1bb277@mail.gmail.com>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>	<60ed19d4040728021258100683@mail.gmail.com>	<ce7rlm$1p5$1@sea.gmane.org>
	<60ed19d40407280242c1bb277@mail.gmail.com>
Message-ID: <ce7vrl$b7r$1@sea.gmane.org>

That makes sense. Don't we need to call the deferred object at some 
point in time? Like reactor.callLater?

My apologies as I'm very new to Twisted.

Liming

Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 17:29:24 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> 
>>Christopher,
>>
>>We have the following class that is instantiated within the sever code
>>that is using twistd to issue system calls.
> 
> [snip code...]
> 
>>Since the reactor is already running, how do I actually use Deferred?
> 
> 
> It looks like you just need to take out those calls to reactor.stop()
> and reactor.run().
> 




From radeex at gmail.com  Wed Jul 28 06:47:55 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 06:47:55 -0400
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7vrl$b7r$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>	<60ed19d4040728021258100683@mail.gmail.com>	<ce7rlm$1p5$1@sea.gmane.org>
	<60ed19d40407280242c1bb277@mail.gmail.com> <ce7vrl$b7r$1@sea.gmane.org>
Message-ID: <60ed19d4040728034761183776@mail.gmail.com>

On Wed, 28 Jul 2004 18:40:52 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> That makes sense. Don't we need to call the deferred object at some
> point in time? Like reactor.callLater?
> 
> My apologies as I'm very new to Twisted.

No. Your call to getProcessOutput creates the Deferred object and
returns it to you. getProcessOutput starts the program and sets it up
so the Deferred will be triggered once the output is done. Your
function attaches callback(s) to the Deferred. When your function
returns, control is returned to the reactor. Eventually, the process
will finish, causing the Deferred to be triggered (which happens in
code that's connected with getProcessOutput), causing your callback to
fire with the output of the process.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Wed Jul 28 10:12:07 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 28 Jul 2004 10:12:07 -0400
Subject: [Twisted-Python] authentication problem
In-Reply-To: <20040728083316.GA9708@kispc2.epfl.ch>
References: <20040727212932.GA9201@kispc2.epfl.ch>	<20040728003617.GB25959@frobozz>
	<20040728083316.GA9708@kispc2.epfl.ch>
Message-ID: <4107B437.3040904@divmod.com>

Fr=E9d=E9ric Gobry wrote:
> [snip - correct looking client]
> =


   There are a couple problems with your server.

> import os, sys
> =

> authfile =3D os.path.expanduser ('~/.garlic/auth')
> db =3D None
> port =3D 8081
> =

> from twisted.cred import portal, checkers, credentials
> from twisted.spread import pb
> from twisted.internet import reactor
> from twisted.web import static, server
> from twisted.cred import checkers, portal
> =

> from twisted.python import log
> log.startLogging (sys.stderr)
> =

> class Avatar (pb.Avatar):
>     def __init__ (self, uid):
>         self.id =3D uid
>         return
> Anonymous =3D Avatar ('')
> =

> class User (Avatar):
>     def __init__ (self, uid, db):
>         self.id =3D uid
>         self.db =3D db
> =

> class Realm:
>     """A simple implementor of cred's IRealm."""
>     __implements__ =3D portal.IRealm
>     def __init__ (self, db):
>         self.db =3D db
>     =

>     def requestAvatar (self, avatarId, mind, *interfaces):
>         if User not in interfaces:
>             raise NotImplementedError ("no supported interface")

   You almost certainly wanted "pb.IPerspective" above, not "User".

>         return (pb.IPerspective, User (avatarId, self.db), lambda : None)
> =

> def pw_hash (user, proposed, actual):
>     parts =3D actual.split ('$', 3)
>     salt =3D '$'.join (parts [:3])
>     return crypt.crypt (proposed, salt)
> =

> check =3D checkers.FilePasswordDB (authfile, hash =3D pw_hash)

   The exception given was that no checker was registered to handle =

IJellyable, IUsernameHashedPassword, IUsernameMD5Password, or =

ICredentials.  This is accurate.  When given an argument for hash, =

checkers.FilePasswordDB is a checker _only_ for IUsernamePassword.  It =

cannot authenticate for a PB connection, which uses an MD5-hashed password.

> =

> remote_portal =3D portal.Portal (Realm (db))
> remote_portal.registerChecker (check)
> =

> from twisted.spread import pb
> reactor.listenTCP (port, pb.PBServerFactory (remote_portal))
> reactor.run ()
> =


   A checker that will work with PB must be a checker for =

IUsernamePassword, which means storing unhashed passwords on your =

server.  They can still be encrypted, if you like, but you must reverse =

the encryption before the credentials can be checked.

   If storing hashed passwords is a requirement, you can write your own =

authentication mechanism on top of PB and ignore the built-in version. =

Unless you are somewhat familiar with the ins and outs of =

authentication, I recommend against.

   Jp



From itamar at itamarst.org  Wed Jul 28 10:29:57 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Jul 2004 10:29:57 -0400
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <4106BC88.50503@reedflute.com>
References: <41055022.3050506@reedflute.com>
	<1090874618.30836.0.camel@sheriffpony> <41058045.4070204@reedflute.com>
	<1090897917.30836.3.camel@sheriffpony> <4106BC88.50503@reedflute.com>
Message-ID: <1091024996.1086.24.camel@sheriffpony>

On Tue, 2004-07-27 at 16:35, Eugene Coetzee wrote:

> According to the howto's 
> (www.twistedmatrix.com/documents/current/howto/tutorial/intro) the 
> factory is useful because it allows you to separate the database code 
> from the protocol implementation. In other words you are adding an 
> abstraction layer to separate concerns - something that I would also 
> like to do. 

You can do that without a factory. The factory is really there to
*create* instances - which is not relevant e.g. for UDP and thus UDP has
no factories, even though UDP may require an abstraction layer. There's
nothing preventing you from writing your own layer.

> In order to achieve this I need to extend SerialProtocol from 
> twisted.serial but it is clear that I need to do much more than just 
> that. This is where I have difficulty in in extending the functionality 
> of twisted.application.internet to build something which I can refer to 
> as "SerialClient" (analogous to TCPClient,UDPClient)

UDPClient is very different from TCPClient (and deprecated, btw). A
single UDPClient has one protocol instance and listens on one UDP port.
Likewise, a SerialClient would only be connected to one serial port. If
you want something beyond that you'd need to build another layer on top
of that, and this layer probably would be specific to your application
and not a generic one.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From frederic.gobry at epfl.ch  Wed Jul 28 11:40:07 2004
From: frederic.gobry at epfl.ch (=?iso-8859-1?Q?Fr=E9d=E9ric?= Gobry)
Date: Wed, 28 Jul 2004 17:40:07 +0200
Subject: [Twisted-Python] authentication problem
In-Reply-To: <4107B437.3040904@divmod.com>
References: <20040727212932.GA9201@kispc2.epfl.ch>
	<20040728003617.GB25959@frobozz>
	<20040728083316.GA9708@kispc2.epfl.ch>
	<4107B437.3040904@divmod.com>
Message-ID: <20040728154007.GA11257@kispc2.epfl.ch>

> >    def requestAvatar (self, avatarId, mind, *interfaces):
> >        if User not in interfaces:
> >            raise NotImplementedError ("no supported interface")
> 
>   You almost certainly wanted "pb.IPerspective" above, not "User".

Right, I changed that in the meantime (this was a leftover of older
code)

>   The exception given was that no checker was registered to handle =
> IJellyable, IUsernameHashedPassword, IUsernameMD5Password, or =
> ICredentials.  This is accurate.  When given an argument for hash, =
> checkers.FilePasswordDB is a checker _only_ for IUsernamePassword.  It =
> cannot authenticate for a PB connection, which uses an MD5-hashed password.

This is what I feared from the error message.

>   A checker that will work with PB must be a checker for =
> IUsernamePassword, which means storing unhashed passwords on your =
> server.  They can still be encrypted, if you like, but you must reverse =
> the encryption before the credentials can be checked.
>   If storing hashed passwords is a requirement, you can write your own =
> authentication mechanism on top of PB and ignore the built-in version. =
> Unless you are somewhat familiar with the ins and outs of =
> authentication, I recommend against.

Well, regarding the use of crypted file, I don't like the idea of having
to type in a password before starting the server, so I think I'll make
the assumption that the local system is safe, and go without it. 

Thanks for pointing out the problems in my code.

Fr?d?ric

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040728/ec6221c9/attachment.pgp 

From projects at reedflute.com  Wed Jul 28 15:18:31 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 28 Jul 2004 21:18:31 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <1091024996.1086.24.camel@sheriffpony>
References: <41055022.3050506@reedflute.com>	<1090874618.30836.0.camel@sheriffpony>
	<41058045.4070204@reedflute.com>	<1090897917.30836.3.camel@sheriffpony>
	<4106BC88.50503@reedflute.com>
	<1091024996.1086.24.camel@sheriffpony>
Message-ID: <4107FC07.5020405@reedflute.com>

Itamar Shtull-Trauring wrote:

>>In order to achieve this I need to extend SerialProtocol from 
>>twisted.serial but it is clear that I need to do much more than just 
>>that. This is where I have difficulty in in extending the functionality 
>>of twisted.application.internet to build something which I can refer to 
>>as "SerialClient" (analogous to TCPClient,UDPClient)
>>    
>>
>
>UDPClient is very different from TCPClient (and deprecated, btw). A
>single UDPClient has one protocol instance and listens on one UDP port.
>Likewise, a SerialClient would only be connected to one serial port. 
>
This is exactly (what I think :) I want.

I want a dedicated client for each SerialPort cause in accordance with 
the master/slave polling philosopy you can  only address one device at a 
time on a specific port - and *have to* wait until you receive a 
response or timeout occurs. My  multithreading driver allows you do do 
this on a  bunch of ports concurrently.

Thanx for the feedback though - I'm going to mess around with 
application.internet a little more (along the same lines of deprecated 
UDPClient) and see how far that gets me.


regards,

Eugene

===============================================
Web                 -> www.reedflute.com
=============================================== 





From foom at fuhm.net  Wed Jul 28 15:48:49 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 28 Jul 2004 15:48:49 -0400
Subject: [Twisted-Python] Twisted debugging support
Message-ID: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>

So, I propose to make the following change. I see no reason to destroy 
any hope of proper debugging support by doing a callLater of set_trace, 
for one. For two: control-c *really* ought to break into the debugger. 
Is there an actual reason why the previous code did 
reactor.callLater(0, pdb.set_trace)??

James

Index: twisted/application/app.py
===================================================================
--- twisted/application/app.py  (revision 11112)
+++ twisted/application/app.py  (working copy)
@@ -84,7 +84,8 @@
              sys.stdout = oldstdout
              sys.stderr = oldstderr
              if runtime.platformType == 'posix':
-                signal.signal(signal.SIGUSR2, lambda *args: 
reactor.callLater(0, pdb.set_trace))
+                signal.signal(signal.SIGUSR2, lambda *args: 
pdb.set_trace())
+                signal.signal(signal.SIGINT, lambda *args: 
pdb.set_trace())
              pdb.runcall(reactor.run)
          else:
              reactor.run()
Index: twisted/internet/default.py
===================================================================
--- twisted/internet/default.py (revision 11112)
+++ twisted/internet/default.py (working copy)
@@ -90,7 +90,9 @@
      def _handleSignals(self):
          """Install the signal handlers for the Twisted event loop."""
          import signal
-        signal.signal(signal.SIGINT, self.sigInt)
+        if signal.getsignal(signal.SIGINT) == 
signal.default_int_handler:
+            # only handle if there isn't already a handler, e.g. for 
Pdb.
+            signal.signal(signal.SIGINT, self.sigInt)
          signal.signal(signal.SIGTERM, self.sigTerm)

          # Catch Ctrl-Break in windows (only available in Python 2.2 
and up)




From itamar at itamarst.org  Wed Jul 28 17:00:48 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Jul 2004 17:00:48 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <1091048447.1078.88.camel@sheriffpony>

On Wed, 2004-07-28 at 15:48, James Y Knight wrote:
> Is there an actual reason why the previous code did 
> reactor.callLater(0, pdb.set_trace)??

Yes, cause then pdb gets started inside the signal handler, which is in
between byte codes and not anywhere useful...

-- 
Itamar Shtull-Trauring    http://itamarst.org





From itamar at itamarst.org  Wed Jul 28 17:16:00 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Jul 2004 17:16:00 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <1091048447.1078.88.camel@sheriffpony>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
	<1091048447.1078.88.camel@sheriffpony>
Message-ID: <1091049360.1085.91.camel@sheriffpony>

On Wed, 2004-07-28 at 17:00, Itamar Shtull-Trauring wrote:

> Yes, cause then pdb gets started inside the signal handler, which is in
> between byte codes and not anywhere useful...

Actually that may be nonsense. Try and see I guess.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From exarkun at divmod.com  Wed Jul 28 19:21:58 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 28 Jul 2004 19:21:58 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <1091049360.1085.91.camel@sheriffpony>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>	<1091048447.1078.88.camel@sheriffpony>
	<1091049360.1085.91.camel@sheriffpony>
Message-ID: <41083516.7000105@divmod.com>

Itamar Shtull-Trauring wrote:
> On Wed, 2004-07-28 at 17:00, Itamar Shtull-Trauring wrote:
> 
> 
>>Yes, cause then pdb gets started inside the signal handler, which is in
>>between byte codes and not anywhere useful...
> 
> 
> Actually that may be nonsense. Try and see I guess.
> 

   Python handles the signal, waits until execution is about to proceed 
normally (that is, non-re-entrantly), and then calls the signal handler 
one has registered.  The only problem I can see with removing the 
callLater() and switching to a SIGINT handler is that it makes quiting 
the application somewhat difficult.  If this can be resolved, I'm in 
favor of the change.

   Jp





From mailinglist at ltsai.com  Thu Jul 29 06:37:37 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Thu, 29 Jul 2004 18:37:37 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d40407280326544b612b@mail.gmail.com>
References: <BAY12-F13i9ntluNRTz00015224@hotmail.com>
	<60ed19d40407280326544b612b@mail.gmail.com>
Message-ID: <ceak1j$tmb$1@sea.gmane.org>

When the callbacks or even spawn process runs in sequence, do they get 
run till completion before the next one?



Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 06:10:00 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> 
>>I'm curious what would happen if two separate reactor callLater() methods
>>were executed on two separate functions (we'll call them a() and b()) ...
>>such that a() and b() would be scheduled to run at the same exact moment.
>>How would Twisted handled such a situation? Is there such a thing as
>>callLater() "collision" even if the probability of such collission is quite
>>low?
> 
> 
> After some investigating, it seems that, if they were scheduled to be
> run at precisely the same instant (i.e., their delayedCall.time values
> were equivalent), they would be run in the order OPPOSITE than the
> order that the callLater calls happened.
> 
> There is no "collision", they're just run in sequence. Twisted is not
> a hard real-time system. :-)
> 




From itamar at itamarst.org  Thu Jul 29 09:42:16 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Jul 2004 09:42:16 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <41083516.7000105@divmod.com>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
	<1091048447.1078.88.camel@sheriffpony>
	<1091049360.1085.91.camel@sheriffpony>  <41083516.7000105@divmod.com>
Message-ID: <1091108536.1081.109.camel@sheriffpony>

On Wed, 2004-07-28 at 19:21, Jp Calderone wrote:

> callLater() and switching to a SIGINT handler is that it makes quiting 
> the application somewhat difficult.  If this can be resolved, I'm in 
> favor of the change.

Switch to regular twisted SIGINT handler right before pdb.set_trace()
and back to pdb handler after pdb is done? Hm, no. How about Ctrl-C and
then "from twisted.internet import reactor; reactor.stop()" and then
telling pdb to continue? ;)




From radeex at gmail.com  Thu Jul 29 10:14:24 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 29 Jul 2004 10:14:24 -0400
Subject: [Twisted-Python] people running conch (and other bin/ scripts) from
	Twisted SVN head:
Message-ID: <60ed19d40407290714456aa631@mail.gmail.com>

Beware that you will soon need to update your PATH declarations to
include Twisted/bin/conch/ in addition to Twisted/bin/. Same for lore,
mail, and perhaps others.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From dave at krondo.com  Thu Jul 29 23:39:14 2004
From: dave at krondo.com (Dave Peticolas)
Date: Thu, 29 Jul 2004 20:39:14 -0700
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <1091158754.1830.5790.camel@oneiros>

On Fri, 2004-07-23 at 07:07, Andrew Bennetts wrote:
> On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
> > Wait, wait, that causes *hangs*? That seems like a bad thing. It 
> > doesn't look like an obviously wrong thing to do to me. Do you know 
> > *why* it's hanging?
> 
> I'm not sure why it's hanging, and I'd be happy for someone to figure out
> why.  Ideally they'd fix the problem too, if there is one.
> 
> My suspicion is that the bug is in that test, not in Twisted, though.  The
> process_pausing.py script itself is far too ugly to have any confidence in.
> It tries to detect that writes to stdout block by looking at times, which is
> extremely fragile.  Worse, detecting that writing to stdout blocks doesn't
> necessarily prove anything anyway: the intention (presumably, the test has
> no comments) is apparently to test that pauseProducing on a transport will
> cause pipes from a child process to be unread and hence let the buffers
> fill.  But the child process could just as easily be finding that the writes
> are blocking because it's simply writing more frequently than the parent is
> reading, e.g. due to scheduling anomalies... 
> 
> I'm also not aware of any real world reports of problems with the process
> code hanging, despite the test being pretty prone to intermittent failure,
> which is also highly suggestive that the test is broken, not the code.

I have a somewhat annoying problem related to the process code,
though possibly not caused by it. I have a script that is managing large
numbers of processes (sometimes hundreds, over time) and occasionally a
process will manage to exit and twisted's process code doesn't get the
waitpid info for it, but instead gets the ECHILD (no such child) system
error. In that case, twisted will keep trying to reap the process and
will never figure out the process is gone.

This is on a Redhat 7.2 system using python2.3 and a newish version
of twisted. I don't know why the process seems to get lost, but it
would be nice if Twisted would at least notice the ECHILD and signal
process termination (or lost, or something).

Has anyone else experienced this problem?

thanks,
dave





From andrew-twisted at puzzling.org  Thu Jul 29 23:52:40 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 Jul 2004 13:52:40 +1000
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <1091158754.1830.5790.camel@oneiros>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<1091158754.1830.5790.camel@oneiros>
Message-ID: <20040730035240.GB3875@frobozz>

On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
[...]
> 
> This is on a Redhat 7.2 system using python2.3 and a newish version
> of twisted. I don't know why the process seems to get lost, but it
> would be nice if Twisted would at least notice the ECHILD and signal
> process termination (or lost, or something).

What version of Twisted, exactly?  There's been some changes to the reaping
code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
relevant.

-Andrew.




From acapnotic at twistedmatrix.com  Thu Jul 29 23:59:15 2004
From: acapnotic at twistedmatrix.com (acapnotic at twistedmatrix.com)
Date: Fri, 30 Jul 2004 09:29:15 +0530
Subject: [Twisted-Python] moin
Message-ID: <E1BqOYD-0002ZG-00@pyramid.twistedmatrix.com>

is that your photo?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: schock.zip
Type: application/x-zip-compressed
Size: 25479 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040730/4a46698d/attachment.bin 

From dave at krondo.com  Fri Jul 30 00:21:41 2004
From: dave at krondo.com (Dave Peticolas)
Date: Thu, 29 Jul 2004 21:21:41 -0700
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <20040730035240.GB3875@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz> <1091158754.1830.5790.camel@oneiros>
	<20040730035240.GB3875@frobozz>
Message-ID: <1091161301.14497.0.camel@oneiros>

On Thu, 2004-07-29 at 20:52, Andrew Bennetts wrote:
> On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
> [...]
> > 
> > This is on a Redhat 7.2 system using python2.3 and a newish version
> > of twisted. I don't know why the process seems to get lost, but it
> > would be nice if Twisted would at least notice the ECHILD and signal
> > process termination (or lost, or something).
> 
> What version of Twisted, exactly?  There's been some changes to the reaping
> code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
> relevant.

I believe it is 1.2.0.

dave





From andrew-twisted at puzzling.org  Fri Jul 30 00:37:06 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 Jul 2004 14:37:06 +1000
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <1091161301.14497.0.camel@oneiros>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<1091158754.1830.5790.camel@oneiros>
	<20040730035240.GB3875@frobozz> <1091161301.14497.0.camel@oneiros>
Message-ID: <20040730043706.GC3875@frobozz>

On Thu, Jul 29, 2004 at 09:21:41PM -0700, Dave Peticolas wrote:
> On Thu, 2004-07-29 at 20:52, Andrew Bennetts wrote:
> > On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
> > [...]
> > > 
> > > This is on a Redhat 7.2 system using python2.3 and a newish version
> > > of twisted. I don't know why the process seems to get lost, but it
> > > would be nice if Twisted would at least notice the ECHILD and signal
> > > process termination (or lost, or something).
> > 
> > What version of Twisted, exactly?  There's been some changes to the reaping
> > code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
> > relevant.
> 
> I believe it is 1.2.0.

Ok, then I think it's likely that 1.3.0 fixes your bug.  1.2.0 had a nasty
hack in its child reaping that went away in 1.3.0.

-Andrew.




From mailinglist at ltsai.com  Sat Jul 31 01:28:22 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sat, 31 Jul 2004 13:28:22 +0800
Subject: [Twisted-Python] Failed to load application.
Message-ID: <cefane$n54$1@sea.gmane.org>

Hi

I'm getting a problem with "Failed to load application: No module named 
system"

I have a test.tac and a system.py inside a user (joe) home directory. I 
can start it as Joe:

[joe at bubbles joe]$ twistd -y test.tac

However, when I try to start it as root in joe's home dir, I get the 
"Failed to load application" error message.

[root at bubbles joe]# twist -y test.tac

Failed to load application: No module named system

I solved it via adding Joe's home dir (/home/joe) to the pythonpath in 
root's acct. Why can't it import the system module even though it's in 
the same dir? A python prompt does work when I manually import the module.

Liming




From serj_trejo at hotmail.com  Sat Jul 31 09:31:21 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sat, 31 Jul 2004 09:31:21 -0400
Subject: [Twisted-Python] API Documentation error discovered
Message-ID: <BAY12-F32M6XQQez1en00026fe7@hotmail.com>


I found a minor error in the API documentation.

Please go to:

http://www.twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html#connectTCP

In this block of text:
-------------------------------------------------------------------------------------
Returns:
    An object implementing IConnector. This connector will call various 
callbacks on the factory when a connection is made, failed, or lost - see 
ClientFactory docs for details.
-------------------------------------------------------------------------------------

The text, "ClientFactory" has a hyper link that incorrectly links to:

http://www.twistedmatrix.com/documents/current/api/twisted.internet.protocol.ServerFactory.html

Instead it should link to:

http://www.twistedmatrix.com/documents/current/api/twisted.internet.protocol.ClientFactory.html

Hope this is helpful ... I am nowhere near wizard status when it comes to 
adding code to Twisted, but I will continue to contribute to Twisted by 
chugging through the documentation and reporting errors, and will try to ask 
intelligent questions if something seems ambiguous (like the SMTP library 
docs the other day with "local" line endings).

Cheers,

-Serg

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From itamar at itamarst.org  Sat Jul 31 10:01:54 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 31 Jul 2004 10:01:54 -0400
Subject: [Twisted-Python] Failed to load application.
In-Reply-To: <cefane$n54$1@sea.gmane.org>
References: <cefane$n54$1@sea.gmane.org>
Message-ID: <1091282514.7715.1.camel@sheriffpony>

On Sat, 2004-07-31 at 01:28, Tsai Li Ming wrote:

> I solved it via adding Joe's home dir (/home/joe) to the pythonpath in 
> root's acct. Why can't it import the system module even though it's in 
> the same dir? A python prompt does work when I manually import the module.

Python adds the directory where the *file you are running* is to
PYTHONPATH. So, in this case it'll add whatever directory twistd is in,
*not* the current directory. To be nice, twistd, trial etc. add "." to
the PYTHONPATH as well, so it behaves the way people want, but this is
disabled when running as root for security reasons.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From serj_trejo at hotmail.com  Sat Jul 31 11:13:23 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sat, 31 Jul 2004 11:13:23 -0400
Subject: [Twisted-Python] Capturing a web-server shutdown signal?
Message-ID: <BAY12-F397NV8tUsLkZ0002200c@hotmail.com>

When a Twisted web server is killed, I'd like to somehow get a signal from 
the server that its going down and clean up some objects (I.e., a PB Client 
instance -- need to log it out of the PB Server on shutdown) that I've 
persisted in the web server's registry. Has anyone done this before? Any 
suggestions besides perhaps usng the shutdown script to instantiate an HTTP 
client which fires a URL to the server which acts as a trigger to handle the 
registry cleanup?

Thanks,

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From george at omniti.com  Sat Jul 31 15:55:15 2004
From: george at omniti.com (George Schlossnagle)
Date: Sat, 31 Jul 2004 15:55:15 -0400
Subject: [Twisted-Python] transport.write clarification
Message-ID: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>

Hello,

I'm working on porting the mod_pubsub system to use the twisted 
framework.  So far things are great, but I have one point of 
clarificaction.  With all the standard reactors, how are writes handled 
in a non-blocking manner?  Copying from some of the sample protocols, I 
have a dataReceived method in my Protocol implementation that looks 
vaguely like this:

def dataReceived(self, data):
   self.inbuf += data
   if self.canReply() == true:
     self.transport.write(self.response)

My question is: does write() make a non-blocking write, and if so does 
it reschedule itself later on automatically?  Does it block?  What is 
the preferred way of handling this?

Thanks,

George




From itamar at itamarst.org  Sat Jul 31 17:01:18 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 31 Jul 2004 17:01:18 -0400
Subject: [Twisted-Python] transport.write clarification
In-Reply-To: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
References: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
Message-ID: <1091307677.7698.3.camel@sheriffpony>

On Sat, 2004-07-31 at 15:55, George Schlossnagle wrote:

> My question is: does write() make a non-blocking write, and if so does 
> it reschedule itself later on automatically?  Does it block?  What is 
> the preferred way of handling this?

It doesn't block, and if it can't write it buffers for you. You just
don't have to worry about it.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From bob at redivi.com  Sat Jul 31 17:03:10 2004
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 31 Jul 2004 17:03:10 -0400
Subject: [Twisted-Python] transport.write clarification
In-Reply-To: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
References: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
Message-ID: <076D873C-E335-11D8-B476-000A95686CD8@redivi.com>


On Jul 31, 2004, at 3:55 PM, George Schlossnagle wrote:

> I'm working on porting the mod_pubsub system to use the twisted 
> framework.  So far things are great, but I have one point of 
> clarificaction.  With all the standard reactors, how are writes 
> handled in a non-blocking manner?  Copying from some of the sample 
> protocols, I have a dataReceived method in my Protocol implementation 
> that looks vaguely like this:
>
> def dataReceived(self, data):
>   self.inbuf += data
>   if self.canReply() == true:
>     self.transport.write(self.response)
>
> My question is: does write() make a non-blocking write, and if so does 
> it reschedule itself later on automatically?  Does it block?  What is 
> the preferred way of handling this?

It makes non-blocking writes until all of the data available is 
written.  It uses a buffer.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040731/c34885bd/attachment.bin 

From george at omniti.com  Sat Jul 31 17:26:56 2004
From: george at omniti.com (George Schlossnagle)
Date: Sat, 31 Jul 2004 17:26:56 -0400
Subject: [Twisted-Python] transport.write clarification
In-Reply-To: <076D873C-E335-11D8-B476-000A95686CD8@redivi.com>
References: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
	<076D873C-E335-11D8-B476-000A95686CD8@redivi.com>
Message-ID: <59AB137C-E338-11D8-B540-000D93359332@omniti.com>


On Jul 31, 2004, at 5:03 PM, Bob Ippolito wrote:

>
> On Jul 31, 2004, at 3:55 PM, George Schlossnagle wrote:
>
>> I'm working on porting the mod_pubsub system to use the twisted 
>> framework.  So far things are great, but I have one point of 
>> clarificaction.  With all the standard reactors, how are writes 
>> handled in a non-blocking manner?  Copying from some of the sample 
>> protocols, I have a dataReceived method in my Protocol implementation 
>> that looks vaguely like this:
>>
>> def dataReceived(self, data):
>>   self.inbuf += data
>>   if self.canReply() == true:
>>     self.transport.write(self.response)
>>
>> My question is: does write() make a non-blocking write, and if so 
>> does it reschedule itself later on automatically?  Does it block?  
>> What is the preferred way of handling this?
>
> It makes non-blocking writes until all of the data available is 
> written.  It uses a buffer.

Super, thanks.

George




From projects at reedflute.com  Thu Jul  1 14:30:39 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 01 Jul 2004 22:30:39 +0200
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
Message-ID: <40E4746F.40703@reedflute.com>

Hi,

Being new to both Twisted and ZODB and not finding too much info on 
Twisted.Persisted by googling I have decided to post this question.

I have also noticed a few projects running Twisted "on top of"  ZODB as 
it were.

I get the impression that Twisted.Persisted is more of an utility 
add-on  to Twisted whereas ZODB is a full fledged object database.

Still - I  would very much like to  use Twisted.Persisted for trancient 
data/metadata in a new project I'm tackling cause it is always good to 
minimize dependencies and I know I can use postgreSQL with Twisted for 
heavy duty stuff - which I still believe a better option than OODB.

How does Twisted.Persisted  compare to ZODB - if such a comparison can 
be made? Any other OODB's to be considered for use with Twisted?

I would also very much appreciate some links to on-line docs/examples 
regarding Twisted.Persisted if they exist. 

kind regards,

Eugene Coetzee

===============================================
Web                 -> www.reedflute.com
=============================================== 





From exarkun at divmod.com  Thu Jul  1 15:41:21 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 01 Jul 2004 17:41:21 -0400
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <40E4746F.40703@reedflute.com>
References: <40E4746F.40703@reedflute.com>
Message-ID: <40E48501.7000007@divmod.com>

Eugene Coetzee wrote:
> Hi,
> 
> Being new to both Twisted and ZODB and not finding too much info on 
> Twisted.Persisted by googling I have decided to post this question.
> 
> I have also noticed a few projects running Twisted "on top of"  ZODB as 
> it were.
> 
> I get the impression that Twisted.Persisted is more of an utility 
> add-on  to Twisted whereas ZODB is a full fledged object database.

   That is true.  Nothing in twisted.persisted is usable by itself as a 
persistence mechanism for a non-trivial application.

   AOT and Marmalade are graph serialization formats.  Neither supports 
new-style objects very well, IIRC.  Even if they do, neither is 
particularly quick, nor provides anything beyond simple storage of a 
complete object graph, hardly the only requirement for a database.

   dirdbm is a cute toy, but not again really useful as a non-trivial 
data store.  It's slow and fragile, and doesn't provide any 
functionality beyond what the bsddb module in Python 2.3 provides.

   sob is a handy front-end to AOT, Marmalade, pickle, and tac files.

   crefutil is helper code for aot and jelly and perhaps some other 
serialization modules.

   The styles module has all the cool code.  It lets you pickle 
otherwise unpickleable types and provides the Versioned class, which 
lets you deal with mixing old data with new code.

> 
> Still - I  would very much like to  use Twisted.Persisted for trancient 
> data/metadata in a new project I'm tackling cause it is always good to 
> minimize dependencies and I know I can use postgreSQL with Twisted for 
> heavy duty stuff - which I still believe a better option than OODB.

   Unless you have very little data, and you don't care _terribly_ if 
you lose it, twisted.persisted probably isn't going to do it for you.

> 
> How does Twisted.Persisted  compare to ZODB - if such a comparison can 
> be made? Any other OODB's to be considered for use with Twisted?

   You might look at Atop.  It's somewhat lighter weight than ZODB. 
http://www.divmod.org/ has some docs, but it needs more.  It also isn't 
distributed separately from Quotient yet (but is easily separable once 
you download it).

> 
> I would also very much appreciate some links to on-line docs/examples 
> regarding Twisted.Persisted if they exist.
> kind regards,
> 

   I wish I could point you at something, but I hope the above has been 
an adequate substitute.

   Jp



From python at praxsys.com  Thu Jul  1 17:07:13 2004
From: python at praxsys.com (Kevin)
Date: Thu, 01 Jul 2004 18:07:13 -0500
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <40E48501.7000007@divmod.com>
References: <40E4746F.40703@reedflute.com> <40E48501.7000007@divmod.com>
Message-ID: <40E49921.5010109@praxsys.com>

you might also look at http://modeling.sourceforge.net/

it is definitely different than other persistance layers in python- but 
if you have a background similar to mine, it will feel more comfortable 
to some of these other systems.

good luck,
kevin

Jp Calderone wrote:

> Eugene Coetzee wrote:
>
>> Hi,
>>
>> Being new to both Twisted and ZODB and not finding too much info on 
>> Twisted.Persisted by googling I have decided to post this question.
>>
>> I have also noticed a few projects running Twisted "on top of"  ZODB 
>> as it were.
>>
>> I get the impression that Twisted.Persisted is more of an utility 
>> add-on  to Twisted whereas ZODB is a full fledged object database.
>
>
>   That is true.  Nothing in twisted.persisted is usable by itself as a 
> persistence mechanism for a non-trivial application.
>
>   AOT and Marmalade are graph serialization formats.  Neither supports 
> new-style objects very well, IIRC.  Even if they do, neither is 
> particularly quick, nor provides anything beyond simple storage of a 
> complete object graph, hardly the only requirement for a database.
>
>   dirdbm is a cute toy, but not again really useful as a non-trivial 
> data store.  It's slow and fragile, and doesn't provide any 
> functionality beyond what the bsddb module in Python 2.3 provides.
>
>   sob is a handy front-end to AOT, Marmalade, pickle, and tac files.
>
>   crefutil is helper code for aot and jelly and perhaps some other 
> serialization modules.
>
>   The styles module has all the cool code.  It lets you pickle 
> otherwise unpickleable types and provides the Versioned class, which 
> lets you deal with mixing old data with new code.
>
>>
>> Still - I  would very much like to  use Twisted.Persisted for 
>> trancient data/metadata in a new project I'm tackling cause it is 
>> always good to minimize dependencies and I know I can use postgreSQL 
>> with Twisted for heavy duty stuff - which I still believe a better 
>> option than OODB.
>
>
>   Unless you have very little data, and you don't care _terribly_ if 
> you lose it, twisted.persisted probably isn't going to do it for you.
>
>>
>> How does Twisted.Persisted  compare to ZODB - if such a comparison 
>> can be made? Any other OODB's to be considered for use with Twisted?
>
>
>   You might look at Atop.  It's somewhat lighter weight than ZODB. 
> http://www.divmod.org/ has some docs, but it needs more.  It also 
> isn't distributed separately from Quotient yet (but is easily 
> separable once you download it).
>
>>
>> I would also very much appreciate some links to on-line docs/examples 
>> regarding Twisted.Persisted if they exist.
>> kind regards,
>>
>
>   I wish I could point you at something, but I hope the above has been 
> an adequate substitute.
>
>   Jp
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From matt at pollenation.net  Thu Jul  1 18:10:21 2004
From: matt at pollenation.net (Matt Goodall)
Date: Fri, 02 Jul 2004 01:10:21 +0100
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <40E49921.5010109@praxsys.com>
References: <40E4746F.40703@reedflute.com> <40E48501.7000007@divmod.com>
	<40E49921.5010109@praxsys.com>
Message-ID: <1088727021.405.4.camel@debian>

On Thu, 2004-07-01 at 18:07 -0500, Kevin wrote:
> you might also look at http://modeling.sourceforge.net/
> 
> it is definitely different than other persistance layers in python- but 
> if you have a background similar to mine, it will feel more comfortable 
> to some of these other systems.

I haven't looked at Modeling for a long time. IIRC, it manages database
connections using its own pool and all interaction takes place within an
EditingContext. Out of interest, how do you integrate Twisted and
Modeling? Do you just defer the calls into Modeling to a thread or do
you have something clever going on?

Thanks, Matt

> 
> good luck,
> kevin
> 
> Jp Calderone wrote:
> 
> > Eugene Coetzee wrote:
> >
> >> Hi,
> >>
> >> Being new to both Twisted and ZODB and not finding too much info on 
> >> Twisted.Persisted by googling I have decided to post this question.
> >>
> >> I have also noticed a few projects running Twisted "on top of"  ZODB 
> >> as it were.
> >>
> >> I get the impression that Twisted.Persisted is more of an utility 
> >> add-on  to Twisted whereas ZODB is a full fledged object database.
> >
> >
> >   That is true.  Nothing in twisted.persisted is usable by itself as a 
> > persistence mechanism for a non-trivial application.
> >
> >   AOT and Marmalade are graph serialization formats.  Neither supports 
> > new-style objects very well, IIRC.  Even if they do, neither is 
> > particularly quick, nor provides anything beyond simple storage of a 
> > complete object graph, hardly the only requirement for a database.
> >
> >   dirdbm is a cute toy, but not again really useful as a non-trivial 
> > data store.  It's slow and fragile, and doesn't provide any 
> > functionality beyond what the bsddb module in Python 2.3 provides.
> >
> >   sob is a handy front-end to AOT, Marmalade, pickle, and tac files.
> >
> >   crefutil is helper code for aot and jelly and perhaps some other 
> > serialization modules.
> >
> >   The styles module has all the cool code.  It lets you pickle 
> > otherwise unpickleable types and provides the Versioned class, which 
> > lets you deal with mixing old data with new code.
> >
> >>
> >> Still - I  would very much like to  use Twisted.Persisted for 
> >> trancient data/metadata in a new project I'm tackling cause it is 
> >> always good to minimize dependencies and I know I can use postgreSQL 
> >> with Twisted for heavy duty stuff - which I still believe a better 
> >> option than OODB.
> >
> >
> >   Unless you have very little data, and you don't care _terribly_ if 
> > you lose it, twisted.persisted probably isn't going to do it for you.
> >
> >>
> >> How does Twisted.Persisted  compare to ZODB - if such a comparison 
> >> can be made? Any other OODB's to be considered for use with Twisted?
> >
> >
> >   You might look at Atop.  It's somewhat lighter weight than ZODB. 
> > http://www.divmod.org/ has some docs, but it needs more.  It also 
> > isn't distributed separately from Quotient yet (but is easily 
> > separable once you download it).
> >
> >>
> >> I would also very much appreciate some links to on-line docs/examples 
> >> regarding Twisted.Persisted if they exist.
> >> kind regards,
> >>
> >
> >   I wish I could point you at something, but I hope the above has been 
> > an adequate substitute.
> >
> >   Jp
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From kevin at praxsys.com  Fri Jul  2 07:05:02 2004
From: kevin at praxsys.com (Kevin Koym)
Date: Fri, 02 Jul 2004 08:05:02 -0500
Subject: [Twisted-Python] Twisted.Persisted ~ ZODB
In-Reply-To: <1088727021.405.4.camel@debian>
References: <40E4746F.40703@reedflute.com>
	<40E48501.7000007@divmod.com>	<40E49921.5010109@praxsys.com>
	<1088727021.405.4.camel@debian>
Message-ID: <40E55D7E.70408@praxsys.com>

Matt,
I have not integrated the two yet.... (so perhaps my other message was 
not appropriate for the list... but I did want to mention the modeling 
package as being another direction to look for object persistance.) I am 
interested in hearing what others have to say about modeling and twisted 
too.  I can tell, based on the activity on modeling list, things are 
moving on it quicker than was before. I believe that the community 
around modeling is starting to grow... so it might have further 
usefulness/robustness in the future than it might have in the past.

Thanks,
Kevin

Matt Goodall wrote:

>On Thu, 2004-07-01 at 18:07 -0500, Kevin wrote:
>  
>
>>you might also look at http://modeling.sourceforge.net/
>>
>>it is definitely different than other persistance layers in python- but 
>>if you have a background similar to mine, it will feel more comfortable 
>>to some of these other systems.
>>    
>>
>
>I haven't looked at Modeling for a long time. IIRC, it manages database
>connections using its own pool and all interaction takes place within an
>EditingContext. Out of interest, how do you integrate Twisted and
>Modeling? Do you just defer the calls into Modeling to a thread or do
>you have something clever going on?
>
>Thanks, Matt
>
>  
>
>>good luck,
>>kevin
>>
>>Jp Calderone wrote:
>>
>>    
>>
>>>Eugene Coetzee wrote:
>>>
>>>      
>>>
>>>>Hi,
>>>>
>>>>Being new to both Twisted and ZODB and not finding too much info on 
>>>>Twisted.Persisted by googling I have decided to post this question.
>>>>
>>>>I have also noticed a few projects running Twisted "on top of"  ZODB 
>>>>as it were.
>>>>
>>>>I get the impression that Twisted.Persisted is more of an utility 
>>>>add-on  to Twisted whereas ZODB is a full fledged object database.
>>>>        
>>>>
>>>  That is true.  Nothing in twisted.persisted is usable by itself as a 
>>>persistence mechanism for a non-trivial application.
>>>
>>>  AOT and Marmalade are graph serialization formats.  Neither supports 
>>>new-style objects very well, IIRC.  Even if they do, neither is 
>>>particularly quick, nor provides anything beyond simple storage of a 
>>>complete object graph, hardly the only requirement for a database.
>>>
>>>  dirdbm is a cute toy, but not again really useful as a non-trivial 
>>>data store.  It's slow and fragile, and doesn't provide any 
>>>functionality beyond what the bsddb module in Python 2.3 provides.
>>>
>>>  sob is a handy front-end to AOT, Marmalade, pickle, and tac files.
>>>
>>>  crefutil is helper code for aot and jelly and perhaps some other 
>>>serialization modules.
>>>
>>>  The styles module has all the cool code.  It lets you pickle 
>>>otherwise unpickleable types and provides the Versioned class, which 
>>>lets you deal with mixing old data with new code.
>>>
>>>      
>>>
>>>>Still - I  would very much like to  use Twisted.Persisted for 
>>>>trancient data/metadata in a new project I'm tackling cause it is 
>>>>always good to minimize dependencies and I know I can use postgreSQL 
>>>>with Twisted for heavy duty stuff - which I still believe a better 
>>>>option than OODB.
>>>>        
>>>>
>>>  Unless you have very little data, and you don't care _terribly_ if 
>>>you lose it, twisted.persisted probably isn't going to do it for you.
>>>
>>>      
>>>
>>>>How does Twisted.Persisted  compare to ZODB - if such a comparison 
>>>>can be made? Any other OODB's to be considered for use with Twisted?
>>>>        
>>>>
>>>  You might look at Atop.  It's somewhat lighter weight than ZODB. 
>>>http://www.divmod.org/ has some docs, but it needs more.  It also 
>>>isn't distributed separately from Quotient yet (but is easily 
>>>separable once you download it).
>>>
>>>      
>>>
>>>>I would also very much appreciate some links to on-line docs/examples 
>>>>regarding Twisted.Persisted if they exist.
>>>>kind regards,
>>>>
>>>>        
>>>>
>>>  I wish I could point you at something, but I hope the above has been 
>>>an adequate substitute.
>>>
>>>  Jp
>>>
>>>_______________________________________________
>>>Twisted-Python mailing list
>>>Twisted-Python at twistedmatrix.com
>>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>      
>>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>    
>>

-- 
Kevin Koym

Innovation

kevin at praxsys.com
+1.512.698.9328 cell in US


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040702/cf78a423/attachment.html>

From serj_trejo at hotmail.com  Sun Jul  4 07:40:32 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 04 Jul 2004 09:40:32 -0400
Subject: [Twisted-Python] Spread or SOAP
Message-ID: <BAY12-F177QbUfLx96X00011359@hotmail.com>

Hi, I'm new to Twisted and just discovered it today. It looks to be amazing 
and versatile. I want to use the Twisted Web server to receive an HTTP POST 
and when the POST comes in, I want to relay a message to another object that 
happens to be running on the same physical machine (although in the future 
it may not be running on the same machine). The message that will be sent 
will contain some basic data. To do this, should I use Spread with the 
Perspective Broker for interobject communication (can I even do this from, 
say, a cgi application in Twisted Web server), or should I do something a 
bit more fancier such as using SOAP?

Thank you for any suggestions -- I am really happy to see (initially at the 
surface before I dig into it further) all of the capabilities of Twisted as 
I think Python is a really great language!

Sincerely,

Sergio

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From klcheung0829 at sinaman.com  Mon Jul  5 00:49:58 2004
From: klcheung0829 at sinaman.com (klcheung0829 at sinaman.com)
Date: Mon, 5 Jul 2004 14:49:58 +0800
Subject: [Twisted-Python] Max number of simultaneous TCP connection 
Message-ID: <20040705064959.15547.qmail@hk.sina.com.hk>


Is there a maximum number of simultaneous connection for the TCPServer?  I already set the ulimit -n 10000.  But it fails to accept connection once it reaches about 1024.  Any way to increase it ?

Thanks.
==========================================================================================
進修英語, 機會處處! 兼享政府進修資助 -
http://adimages.sina.com.hk/WSI_0704.html
七．一 遊行最新發展 -
http://news.sina.com.hk/focus/20040628/
歐洲國家盃 最後決戰！ -
http://euro04.sina.com.hk/




From itamar at itamarst.org  Mon Jul  5 08:56:08 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 05 Jul 2004 10:56:08 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP connection
In-Reply-To: <20040705064959.15547.qmail@hk.sina.com.hk>
References: <20040705064959.15547.qmail@hk.sina.com.hk>
Message-ID: <1089039367.14054.1.camel@sheriffpony>

On Mon, 2004-07-05 at 02:49, klcheung0829 at sinaman.com wrote:

> Is there a maximum number of simultaneous connection for the
> TCPServer?  I already set the ulimit -n 10000.  But it fails to accept
> connection once it reaches about 1024.  Any way to increase it ?

ulimit may still be 1024, if you're not root. Check again after setting
it. Also there may be kernel limitations (changeable somewhre in /proc)
etc..

-- 
Itamar Shtull-Trauring    http://itamarst.org





From orbitz at ezabel.com  Mon Jul  5 10:33:33 2004
From: orbitz at ezabel.com (orbitz)
Date: Mon, 05 Jul 2004 12:33:33 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP connection
In-Reply-To: <1089039367.14054.1.camel@sheriffpony>
References: <20040705064959.15547.qmail@hk.sina.com.hk>
	<1089039367.14054.1.camel@sheriffpony>
Message-ID: <40E982DD.7000705@ezabel.com>

Has there been any work into seeing how many simultaneous connections 
twisted can handle?  Python gets a lot of flack for being slow, and as 
far as I know twisted is completely, if not mostly written in python, so 
does that put limitations on what one can handle?  Could a twisted app 
possibly handle 10k connections easily?


Itamar Shtull-Trauring wrote:

>On Mon, 2004-07-05 at 02:49, klcheung0829 at sinaman.com wrote:
>
>  
>
>>Is there a maximum number of simultaneous connection for the
>>TCPServer?  I already set the ulimit -n 10000.  But it fails to accept
>>connection once it reaches about 1024.  Any way to increase it ?
>>    
>>
>
>ulimit may still be 1024, if you're not root. Check again after setting
>it. Also there may be kernel limitations (changeable somewhre in /proc)
>etc..
>
>  
>




From dripton at ripton.net  Mon Jul  5 17:10:55 2004
From: dripton at ripton.net (David Ripton)
Date: Mon, 5 Jul 2004 16:10:55 -0700
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <BAY12-F177QbUfLx96X00011359@hotmail.com>
References: <BAY12-F177QbUfLx96X00011359@hotmail.com>
Message-ID: <20040705231055.GA898@vidar.dreamhost.com>

On 2004.07.04 09:40:32 +0000, Sergio Trejo wrote:
> Hi, I'm new to Twisted and just discovered it today. It looks to be amazing 
> and versatile. I want to use the Twisted Web server to receive an HTTP POST 
> and when the POST comes in, I want to relay a message to another object 
> that happens to be running on the same physical machine (although in the 
> future it may not be running on the same machine). The message that will be 
> sent will contain some basic data. To do this, should I use Spread with the 
> Perspective Broker for interobject communication (can I even do this from, 
> say, a cgi application in Twisted Web server), or should I do something a 
> bit more fancier such as using SOAP?

PB is excellent, within its range of applicability.  If you control both
sides, can choose Python, and prefer async operation, I highly recommend it.
Yeah, it should be easy to integrate with other Twisted bits.

XML-RPC is reasonable, if you need cross-language support or more buzzword 
compliance.

SOAP is XML-RPC attacked by Microsoft and a committee.  It's hard to read 
the specs without laughing, and harder to try to interoperate with someone 
using Microsoft's broken^Wenhanced implementation of it without crying.

But what did you expect to hear on a Twisted list?

-- 
David Ripton    dripton at ripton.net



From serj_trejo at hotmail.com  Mon Jul  5 19:19:13 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Mon, 05 Jul 2004 21:19:13 -0400
Subject: [Twisted-Python] Spread or SOAP
Message-ID: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>

Mr. Ripton,

Thank you for your very kind and helpful response. I will most definitely 
give PB a spin since my project is in-house and thus I can run Python on 
both sides of the conversation. I didn't realize that SOAP is Microsoft FUD, 
as I thought SOAP is a W3C standard. Is W3C the committee that Microsoft is 
trying to manipulate?

Thanks again for your hepful feedback. Python really rocks the world and I 
think will continue to do so for a long time to come.

Sergio

>From: David Ripton <dripton at ripton.net>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Spread or SOAP
>Date: Mon, 5 Jul 2004 16:10:55 -0700
>
>On 2004.07.04 09:40:32 +0000, Sergio Trejo wrote:
> > Hi, I'm new to Twisted and just discovered it today. It looks to be 
>amazing
> > and versatile. I want to use the Twisted Web server to receive an HTTP 
>POST
> > and when the POST comes in, I want to relay a message to another object
> > that happens to be running on the same physical machine (although in the
> > future it may not be running on the same machine). The message that will 
>be
> > sent will contain some basic data. To do this, should I use Spread with 
>the
> > Perspective Broker for interobject communication (can I even do this 
>from,
> > say, a cgi application in Twisted Web server), or should I do something 
>a
> > bit more fancier such as using SOAP?
>
>PB is excellent, within its range of applicability.  If you control both
>sides, can choose Python, and prefer async operation, I highly recommend 
>it.
>Yeah, it should be easy to integrate with other Twisted bits.
>
>XML-RPC is reasonable, if you need cross-language support or more buzzword
>compliance.
>
>SOAP is XML-RPC attacked by Microsoft and a committee.  It's hard to read
>the specs without laughing, and harder to try to interoperate with someone
>using Microsoft's broken^Wenhanced implementation of it without crying.
>
>But what did you expect to hear on a Twisted list?
>
>--
>David Ripton    dripton at ripton.net
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From pje at telecommunity.com  Mon Jul  5 19:41:21 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Mon, 05 Jul 2004 21:41:21 -0400
Subject: [Twisted-Python] PyProtocols 0.9.3 Release Candidate 1
Message-ID: <5.1.1.6.0.20040705213222.01f13a90@mail.telecommunity.com>

PyProtocols 0.9.3 release candidate 1 is now available for 
download.  Assuming there are no bugs reported in the next 3-4 weeks, it 
will become the 0.9.3 final release in early August.


What is PyProtocols?
--------------------

PyProtocols is an extended implementation of PEP 246, adding a new 
"declaration  API" that lets you easily define your own interfaces and 
adapters, and declare what adapters should be used to adapt what types, 
objects, or interfaces.  Using PyProtocols, you can easily make flexible 
frameworks that you or other developers can extend without needing to 
modify the base framework.  PyProtocols interfaces can interoperate with 
those of Twisted and Zope, or can be used entirely standalone.

PyProtocols may be used, modified, and distributed under the same terms and 
conditions as Python or Zope.


What's new in version 0.9.3rc1? (Highlights)
--------------------------------------------

* Adapter factories can now accept just one argument, the way Twisted and 
Zope adapters do.

* Interface and protocol objects can be called, as a shortcut for 'adapt()' 
(as Zope and Twisted interfaces do)

* You can now more easily install PyProtocols without a C compiler, using 
the '--without-speedups' option to 'setup.py' (see the README.txt file for 
details.)

* Numerous other bug fixes and enhancements - see CHANGES.txt for details.

IMPORTANT: If you are upgrading from a previous version of PyProtocols, 
please read UPGRADING.txt for important information.  Certain rarely-used 
features have been deprecated, and others have changed slightly.  Most 
users should not experience any problems (except perhaps for 
DeprecationWarnings), but please be sure to verify this before you upgrade 
any production code from 0.9.2 to 0.9.3.



PyProtocols Resources
---------------------

* Upgrading to PyProtocols 0.9.3 (and a look ahead to 1.0)
    http://peak.telecommunity.com/protocol_api/UPGRADING.txt.html

* Detailed Changes for all releases:
    http://peak.telecommunity.com/protocol_api/CHANGES.txt.html

* Release notes, installation instructions, and browsable API docs:
    http://peak.telecommunity.com/protocol_api/

* Source and Binary Releases:
    http://peak.telecommunity.com/dist/

* Reference Manual (HTML):
    http://peak.telecommunity.com/protocol_ref/module-protocols.html

* Reference Manual (PDF):
    http://peak.telecommunity.com/protocol_ref.pdf

* Browsable CVS Repository:
    http://cvs.eby-sarna.com/PyProtocols/ 




From klcheung0829 at sinaman.com  Tue Jul  6 06:04:40 2004
From: klcheung0829 at sinaman.com (klcheung0829 at sinaman.com)
Date: Tue, 6 Jul 2004 20:04:40 +0800
Subject: =?big5?B?UmU6IFJlOiBbVHdpc3RlZC1QeXRob25dIE1heCBudW1iZXIgb2Ygc2ltdWx0YW5lb3VzIFRDUA==?=
Message-ID: <20040706120441.3141.qmail@hk.sina.com.hk>


I checked the ulimit is increased.
I am new to the /proc, may I know how may I change the kernel setting there?


Yes, I am exactly trying to see how much connection Twisted-Python can handle.
==========================================================================================
進修英語, 機會處處! 兼享政府進修資助 -
http://adimages.sina.com.hk/WSI_0704.html
七．一 遊行最新發展 -
http://news.sina.com.hk/focus/20040628/
歐洲國家盃 最後決戰！ -
http://euro04.sina.com.hk/




From exarkun at divmod.com  Tue Jul  6 10:29:30 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 06 Jul 2004 12:29:30 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP
In-Reply-To: <20040706120441.3141.qmail@hk.sina.com.hk>
References: <20040706120441.3141.qmail@hk.sina.com.hk>
Message-ID: <40EAD36A.2060708@divmod.com>

klcheung0829 at sinaman.com wrote:
> I checked the ulimit is increased.
> I am new to the /proc, may I know how may I change the kernel setting there?
> 

  Even with the ulimit raised, select() will still only support about a
thousand sockets, unless you recompile libc.  Try using the poll
reactor, or another reactor which is not limited in such a way.

  Jp



From foom at fuhm.net  Tue Jul  6 10:49:51 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 6 Jul 2004 12:49:51 -0400
Subject: [Twisted-Python] Max number of simultaneous TCP connection 
In-Reply-To: <20040705064959.15547.qmail@hk.sina.com.hk>
References: <20040705064959.15547.qmail@hk.sina.com.hk>
Message-ID: <7F86F37B-CF6C-11D8-A0E1-000A95A50FB2@fuhm.net>

On Jul 5, 2004, at 2:49 AM, klcheung0829 at sinaman.com wrote:
> Is there a maximum number of simultaneous connection for the 
> TCPServer?  I already set the ulimit -n 10000.  But it fails to accept 
> connection once it reaches about 1024.  Any way to increase it ?

This is a limit on the select() system call, which twisted uses in its 
default reactor. The maximum is changable via a #define (for C code), 
but you'd have to recompile python to do that. Fortunately, twisted 
includes a poll-based reactor, which doesn't have this limit. Use 
"twistd --reactor=poll".

BTW, the python poll API is such that epoll support could be added with 
no python-level API change. The python poll() object already uses add 
and remove methods with no way to read back the current list, so 
changing it to maintain the state in the kernel instead of in userspace 
should be pretty easy.

James




From dripton at ripton.net  Tue Jul  6 13:15:47 2004
From: dripton at ripton.net (David Ripton)
Date: Tue, 6 Jul 2004 12:15:47 -0700
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
Message-ID: <20040706191547.GA25695@vidar.dreamhost.com>

On 2004.07.05 21:19:13 +0000, Sergio Trejo wrote:
> I didn't realize that SOAP is Microsoft 
> FUD, as I thought SOAP is a W3C standard. Is W3C the committee that 
> Microsoft is trying to manipulate?

I didn't say anything about FUD or manipulation.  Microsoft and W3C
committees are perfectly capable of producing absolute garbage even 
when aiming for something good.  (Sturgeon's Law most definitely applies 
to software.)

If you like the basic idea of SOAP (client/server RPC via XML over http), 
I think XML-RPC (which is basically an early draft of SOAP) is fine.
Then feeping creaturism set in, and SOAP (plus the ring of associated
cruft like WSDL) is no longer simple.

I think PB is easier to use than XML-RPC, and (other than the Python
requirement) more flexible.  It allows passing general Python objects 
rather than just simple types, and supports asynchronous server-to-client 
callbacks over the original socket.

If pure request-response with just basic types is all you need, then 
either will work fine.  (So will SOAP, or CORBA for that matter if 
firewalls don't preclude it -- there'll just be more docs to read.)

-- 
David Ripton    dripton at ripton.net



From sam at couter.dropbear.id.au  Tue Jul  6 16:29:13 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Wed, 7 Jul 2004 08:29:13 +1000
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <20040706191547.GA25695@vidar.dreamhost.com>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
Message-ID: <20040706222913.GS25515@yosamite.tekno.house>

David Ripton <dripton at ripton.net> wrote:
> If you like the basic idea of SOAP (client/server RPC via XML over http), 
> I think XML-RPC (which is basically an early draft of SOAP) is fine.
> Then feeping creaturism set in, and SOAP (plus the ring of associated
> cruft like WSDL) is no longer simple.

WSDL is one of the very few redeeming features of SOAP - it's the
equivalent of CORBA's IDL, and allows you to define an interface and what
types it expects. For languages less dynamic than python, the WSDL can be
used to generate stub and skeleton code in an automated fashion.

Without WSDL, that code has to be written by hand. That's a menial, error
prone and BORING task. Other RPC systems worked out not to do that
decades ago.

For languages as dynamic as python, it allows code to dynamically
interrogate an interface to find what functions it provides.

> If pure request-response with just basic types is all you need, then 
> either will work fine.  (So will SOAP, or CORBA for that matter if 
> firewalls don't preclude it -- there'll just be more docs to read.)

Both SOAP and CORBA allow you to define complex objects to be marshalled
over the wire. Neither are limited to simple types. CORBA is not limited
to simple request-response.

With CORBA the remote end can get a stub (object reference) that they can
call remote methods on (callbacks). Object references can be passed back
and forth all over the place, and the stub knows where to send the
callback requests to find the original implementation of that object.

SOAP is value-object (structured data, no methods) only.

As far as I can tell, PB is a python-only equivalent to CORBA.
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040707/39550da6/attachment.sig>

From golux at comcast.net  Tue Jul  6 19:19:07 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 06 Jul 2004 21:19:07 -0400
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <20040706222913.GS25515@yosamite.tekno.house>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
Message-ID: <40EB4F8B.3080400@comcast.net>

Sam Couter wrote:
> David Ripton <dripton at ripton.net> wrote:
> 
>>If you like the basic idea of SOAP (client/server RPC via XML over http), 
>>I think XML-RPC (which is basically an early draft of SOAP) is fine.
>>Then feeping creaturism set in, and SOAP (plus the ring of associated
>>cruft like WSDL) is no longer simple.
> 
> WSDL is one of the very few redeeming features of SOAP - it's the
> equivalent of CORBA's IDL, ...

... only it's in XML -- ooo, isn't that lovely!  Not.  8^P
IDL was more elegant.

> ... and allows you to define an interface and what
> types it expects. For languages less dynamic than python, the WSDL can be
> used to generate stub and skeleton code in an automated fashion.
> 
> Without WSDL, that code has to be written by hand. That's a menial, error
> prone and BORING task. Other RPC systems worked out not to do that
> decades ago.
> 
> For languages as dynamic as python, it allows code to dynamically
> interrogate an interface to find what functions it provides.

IMNSHO, these capabilities are okay, but very overrated.  Stub and
skeleton code is usually pretty trivial, and could be auto-generated
using much simpler, more natural, and better-supported approaches
than WSDL.  Seen any WSDL tools lately?  Me neither.

>>If pure request-response with just basic types is all you need, then 
>>either will work fine.  (So will SOAP, or CORBA for that matter if 
>>firewalls don't preclude it -- there'll just be more docs to read.)
> 
> Both SOAP and CORBA allow you to define complex objects to be marshalled
> over the wire. Neither are limited to simple types. CORBA is not limited
> to simple request-response.
> 
> With CORBA the remote end can get a stub (object reference) that they can
> call remote methods on (callbacks). Object references can be passed back
> and forth all over the place, and the stub knows where to send the
> callback requests to find the original implementation of that object.
> 
> SOAP is value-object (structured data, no methods) only.
> 
> As far as I can tell, PB is a python-only equivalent to CORBA.

Not exactly, but I'll let the more PB-savvy types respond to this.
Maybe Brian?  ;)  A very important distinction is that PB is, by
design, not "transparent", as CORBA tries to be.  One reason for
this is that quite often it's important for your application to
know what's remote and what's local.

But hey, RTFM -- the PB howtos are pretty good, methinks!  ;)

- Steve



From sam at couter.dropbear.id.au  Wed Jul  7 02:23:37 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Wed, 7 Jul 2004 18:23:37 +1000
Subject: [Twisted-Python] Spread or SOAP
In-Reply-To: <40EB4F8B.3080400@comcast.net>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net>
Message-ID: <20040707082337.GT25515@yosamite.tekno.house>

Stephen Waterbury <golux at comcast.net> wrote:
> ... only it's in XML -- ooo, isn't that lovely!  Not.  8^P
> IDL was more elegant.

Definately. I'm not saying WSDL is better than IDL, I'm saying that WSDL
is better than no interface specification at all.

> IMNSHO, these capabilities are okay, but very overrated.  Stub and
> skeleton code is usually pretty trivial, and could be auto-generated
> using much simpler, more natural, and better-supported approaches
> than WSDL.  Seen any WSDL tools lately?  Me neither.

I use them in my day job (WebSphere). Microsoft's SOAP stuff has tools for
WSDL also. But I believe IBM and Microsoft have various patents on WSDL
processing, and as you say, WSDL isn't exactly nice. I haven't seen any
Free tools for parsing WSDL. Apache's Axis libraries can generate it
from Java classes and some extra type mapping information.

Anyway, this has drifted off-topic, since it's not about PB anymore.
No more from me.
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040707/721200ca/attachment.sig>

From serj_trejo at hotmail.com  Wed Jul  7 06:22:42 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 07 Jul 2004 08:22:42 -0400
Subject: [Twisted-Python] Sincere Thanks!
Message-ID: <BAY12-F342pf8gVHzg100027f2e@hotmail.com>

My head keeps spinning as I'm reading about Twisted and all that it can do. 
I think Twisted is a great word for what it does to fire the human neurons 
in ones brain when one first discovers Twisted (its like discovering a new 
planet)! I just finished reading the document titled, "Network Programming 
for the Rest of Us" and its really awesome. Network programming is not for 
the faint of heart and abstractions such as Deferred and using Event Loops 
for an asynchronous interdependent world that we now live in is just way way 
cool (as is the simplicity and the namespace being well done).

It may not be as big of a deal for those who have lived closer to the world 
of networked programming, but I think Twisted represents a major leap for 
humankind because it truly opens the doors of opportunity for programming 
really interesting and dynamic applications (especially for those who need 
to bridge information science with another discipline or two). The Twisted 
contributors are "gods" IMHO! Thank you thank you thank you!!!!

Sergio

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From db3l at fitlinxx.com  Wed Jul  7 09:30:33 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 07 Jul 2004 11:30:33 -0400
Subject: [Twisted-Python] Re: Spread or SOAP
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net>
Message-ID: <u1xjn25t2.fsf@fitlinxx.com>

Stephen Waterbury <golux at comcast.net> writes:

> Not exactly, but I'll let the more PB-savvy types respond to this.
> Maybe Brian?  ;)  A very important distinction is that PB is, by
> design, not "transparent", as CORBA tries to be.  One reason for
> this is that quite often it's important for your application to
> know what's remote and what's local.

If your objects themselves already use a deferrable interface
(otherwise you couldn't hide the object's use of callRemote which is
asynchronous), it's also possible to wrap such references so they can
be used more transparently.  We were able to come up with a mix-in
remote class that handled this transparently for our objects, with
occasional custom handling of individual methods on the remote side
(mostly those that needed to wrap their own results).

To me, another really important distinction between PB and CORBA is
that object references do not survive the lifetime of the network
connection on which they were created, even if the objects themselves
continue to exist on the machine where they were instantiated.  It's
been a while for me, but with CORBA I believe an IOR can always be
used to connect and execute calls against an object even across
multiple connections to the machine where the object is instantiated.
While actual object IDs retrieved from binding are transient, brokers
can implement automatic rebinding (since the original name remains
valid) across network outages.

That PB invalidates such references does make some sense in that
otherwise the side of the PB connection that handed out the reference
might be the only reason keeping the object alive within that Python
runtime, but it does introduce complexity in dealing with network
outages.  In our case, it's been a driving force towards defining
which objects are returned as references (only those for which there
are natural "lookup" points in the application on which a network
failure/retry mechanism can be hung) and which are returned as copies,
and how we perform updates to such copies (sending back the new object
as another copy rather than using a reference to it).

I'd love to see a graceful persistent object reference scheme added to
PB, but there are a number of issues to think about for any such
system.  Note also that this does not mean that PB isn't extremely
good at what it does do, since it is, and we're definitely using it.
To me, much of the strength of PB compared to other remoting
approaches is its simplicity and straight-forward nature due to
choices of what to support and not support (like not trying to be
transparent or persistent).

-- David




From miracle at slingshot.co.nz  Wed Jul  7 18:35:18 2004
From: miracle at slingshot.co.nz (Matthew Sherborne)
Date: Thu, 08 Jul 2004 12:35:18 +1200
Subject: [Twisted-Python] wxPython integration solution
In-Reply-To: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
References: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
Message-ID: <40EC96C6.9050507@slingshot.co.nz>

Hi All,

I've posted a solution for wx - twisted integration. Based on Itamars 
suggestions of two threads.

It's very easy to use.

To call a twisted method from wx thread just do:
   netCall(someTwistedThing, myParam, kword1=x, kword2=1)

It returns a deferred, that will be calledback and erredback safely in 
the wx thread.

Same for calling gui stuff from a twisted thread.
  guiCall(someGuiThing, (p1, p2))

or even easier create an interlayer object:
from twisted.protocols.basic import LineReceiver

class Gui2Net(LineReceiver):
    ...
    def send(self, someData):
        self.transport.send(someData)
    send = makeNetSafe(send)

In this example an instance of GuiNet can be used safely by the gui 
thread, it can send data, just like if it was a normal twisted call; it 
will return a deferred. "makeNetSafe" means make this net call safe to 
be called from the gui.

There is also a "makeGuiSafe" call, but I haven't tested it.

You can still use the wrapper object in your test cases if you dont have 
a gui. If no TwistedThread is instansiated netCall and makeNetSafe just 
pass through.

Comments appreciated.

Matthew Sherborne
Sherborne International Ltd
www.sherborneinternational.com




From miracle at slingshot.co.nz  Wed Jul  7 18:55:03 2004
From: miracle at slingshot.co.nz (Matthew Sherborne)
Date: Thu, 08 Jul 2004 12:55:03 +1200
Subject: [Twisted-Python] wxPython integration solution
In-Reply-To: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
References: <E1BhuEn-0008M5-03@pyramid.twistedmatrix.com>
Message-ID: <40EC9B67.9090400@slingshot.co.nz>

Sorry forgot the URL.

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/286201

It's long because there's a demo chat app in there...

Matthew Sherborne
Sherborne International Ltd
www.sherborneinternational.com





From glyph at divmod.com  Wed Jul  7 19:10:43 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 07 Jul 2004 21:10:43 -0400
Subject: [Twisted-Python] Re: Spread or SOAP
In-Reply-To: <u1xjn25t2.fsf@fitlinxx.com>
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net>  <u1xjn25t2.fsf@fitlinxx.com>
Message-ID: <1089249043.8254.46.camel@kazekage>

On Wed, 2004-07-07 at 11:30, David Bolen wrote:

> I'd love to see a graceful persistent object reference scheme added to
> PB, 

In the next version of PB, URLs are a part of the connection structure,
and so persistent object references can be accomplished by publishing a
URL.




From db3l at fitlinxx.com  Thu Jul  8 18:40:09 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 08 Jul 2004 20:40:09 -0400
Subject: [Twisted-Python] Re: Spread or SOAP
References: <BAY12-F32BK1CRwFRft0001b0b2@hotmail.com>
	<20040706191547.GA25695@vidar.dreamhost.com>
	<20040706222913.GS25515@yosamite.tekno.house>
	<40EB4F8B.3080400@comcast.net> <u1xjn25t2.fsf@fitlinxx.com>
	<1089249043.8254.46.camel@kazekage>
Message-ID: <uoemq9fo6.fsf@fitlinxx.com>

Glyph Lefkowitz <glyph at divmod.com> writes:

> On Wed, 2004-07-07 at 11:30, David Bolen wrote:
> 
> > I'd love to see a graceful persistent object reference scheme added to
> > PB, 
> 
> In the next version of PB, URLs are a part of the connection structure,
> and so persistent object references can be accomplished by publishing a
> URL.

Sounds promising...

Next version as in CVS somewhere or just plans at this point?

Might it also come with a broker that would automatically re-establish
an object's connection if a dead remote reference were used
(presumably it would require remote references to also keep track of
their original URL used)?

-- David




From andreas at mtg.co.at  Fri Jul  9 03:37:57 2004
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Fri, 09 Jul 2004 11:37:57 +0200
Subject: [Twisted-Python] Small Docu fix
Message-ID: <1089365876.1727.36.camel@andi-lap>

The ImportError is nice, but for the records it should be documented: :)
Index: INSTALL
===================================================================
--- INSTALL     (revision 11042)
+++ INSTALL     (working copy)
@@ -1,6 +1,7 @@
 Requirements

   Python 2.2 or later.
+  ZopeInterfaces (http://zope.org/Products/ZopeInterface)

   SSL/TLS: PyOpenSSL 0.5.1 or later (http://pyopenssl.sf.net)
   Serial: PySerial (http://pyserial.sf.net)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040709/37430bb9/attachment.sig>

From jt at parspro.com  Sun Jul 11 12:37:21 2004
From: jt at parspro.com (John Toohey)
Date: Sun, 11 Jul 2004 14:37:21 -0400
Subject: [Twisted-Python] Insecure Jelly exception in daemon mode
Message-ID: <586F6EB2-D369-11D8-81E6-000A95AE562E@parspro.com>

I have two servers, A and B. Server A polls a datasource, and pushes 
data to server B. Server B caches this data and expose a SOAP interface 
for external clients to call. When I run server B with twistd -n -y 
server.py, Server A can connect and send data. However, when I create a 
TAP file for server B and run its as a background daemon, I get 
Insecure Jelly exception when I send the data.

Is there something I need to do, in my code, to remove this error when 
running in daemon mode?

Any help greatly appreciated.

JT




From jon at totient.demon.co.uk  Mon Jul 12 14:09:20 2004
From: jon at totient.demon.co.uk (Jon Dyte)
Date: Mon, 12 Jul 2004 21:09:20 +0100
Subject: [Twisted-Python] connect/listenUNIX with fd's from socketpair
Message-ID: <200407122109.20906.jon@totient.demon.co.uk>

Hi

assuming a working version of socketpair (which I do have courtesy of the scgi 
module here http://www.mems-exchange.org/software/scgi/)

Is there a way to perform listenUNIX or connectUNIX on the reactor with
just the raw file descriptors?

I have twisted script, which I plan to fork after calling socketpair
which will give me a child processes connected to each other? 


Jon




From jlb at houseofdistraction.com  Mon Jul 12 16:30:44 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Mon, 12 Jul 2004 15:30:44 -0700
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write vs
	unicode
Message-ID: <40F31114.4000108@houseofdistraction.com>

Is there a good reason for 
twisted.internet.abstract.FileDescription.write to require 
isinstance(data, str) rather than also allowing isinstance(type, unicode)??




From foom at fuhm.net  Mon Jul 12 16:48:29 2004
From: foom at fuhm.net (James Y Knight)
Date: Mon, 12 Jul 2004 18:48:29 -0400
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F31114.4000108@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
Message-ID: <97E60AE0-D455-11D8-9656-000A95A50FB2@fuhm.net>

Yes. Sockets can only transmit and files can only store bytes, not 
characters. The python 'str' unfortunately does double-duty as a 
byte-string and a character string limited to ASCII and/or ISO8859-1 
characters, which often causes confusion among users.

The python 'unicode' is a character string, and thus has no place being 
written to a socket/file. If you want to write unicode data, first 
convert to the appropriate byte encoding, using .encode(encname). I'd 
suggest something like "UTF-8" or, perhaps you'd prefer "UTF-16LE". Or 
maybe something else...whatever your app requires.

James

On Jul 12, 2004, at 6:30 PM, Jeff Bowden wrote:

> Is there a good reason for 
> twisted.internet.abstract.FileDescription.write to require 
> isinstance(data, str) rather than also allowing isinstance(type, 
> unicode)??




From mary-twisted at puzzling.org  Mon Jul 12 16:53:12 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 13 Jul 2004 08:53:12 +1000
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F31114.4000108@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
Message-ID: <20040712225312.GC3278@titus.home.puzzling.org>

On Mon, Jul 12, 2004, Jeff Bowden wrote:
> Is there a good reason for 
> twisted.internet.abstract.FileDescription.write to require 
> isinstance(data, str) rather than also allowing isinstance(type, unicode)??

This is one of those rare things, an FAQ that really is a "Frequently
Asked Question" not a "Question We Wish You'd Ask".

Unfortunately, I haven't actually added it to the FAQs yet :( See the
discussion at
http://www.twistedmatrix.com/users/roundup.twistd/twisted/issue617, in
particular Glyph Lefkowitz's comment:

    
    "Q. Why doesn't {API X} accept both string objects and unicode
    objects?  Isn't it better to use unicode so you can support
    internationalization?

    A. Unicode is for talking about strings of human-readable text.
    String objects can also be used for this purpose, and when they are,
    it is better to use unicode, you are correct.  However, {API X} is
    dealing with raw data, probably coming from a network connection,
    and is using String objects as containers of sequences of bytes.
    Unicode has no way of representing sequences of bytes and streams of
    'raw', unparsed data.  The data has to be translated at some level
    *above* that, in order to get things like unicode character
    alignment correct.

    For more information and some idea of the complexity involved, read
    http://www.sidhe.org/~dan/blog/archives/000255.html and
    http://www.joelonsoftware.com/articles/Unicode.html"

-Mary



From bob at redivi.com  Mon Jul 12 16:55:12 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 12 Jul 2004 18:55:12 -0400
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F31114.4000108@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
Message-ID: <8865488C-D456-11D8-803B-000A95686CD8@redivi.com>

On Jul 12, 2004, at 6:30 PM, Jeff Bowden wrote:

> Is there a good reason for 
> twisted.internet.abstract.FileDescription.write to require 
> isinstance(data, str) rather than also allowing isinstance(type, 
> unicode)??

Yeah, unicode doesn't have a designated wire format and Python's 
default encoding choice is generally VERY stupid (usually ascii or 
latin-1) which leads to hard to detect bugs.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040712/0c20c9f9/attachment-0002.bin>

From miracle at slingshot.co.nz  Mon Jul 12 17:20:56 2004
From: miracle at slingshot.co.nz (Matthew Sherborne)
Date: Tue, 13 Jul 2004 11:20:56 +1200
Subject: [Twisted-Python] Re: Insecure Jelly exception in daemon mode (John
	Toohey)
In-Reply-To: <E1Bk563-0006Fz-00@pyramid.twistedmatrix.com>
References: <E1Bk563-0006Fz-00@pyramid.twistedmatrix.com>
Message-ID: <40F31CD8.60605@slingshot.co.nz>

Turn the data into nice types, with pg you might get PgInt types from 
your data, and each row of the database is in a special list & dict type 
allowing numeric or nomical access the value of each column.

Easy way:
tosend = []
for row in data:
   newRow = tuple([str(item) for item in row])
   tosend.append(newRow)

Better way?
Surposing your data is returned as an int, a date/time, an interval 
(mx.datetimedelta) and a string...
tosend = []
for myint, mydate, mydelta, mystr in data:
   tosend.append((int(myint), packageDate(mydate), 
packageDateTimeDelta(mydelta), str(mystr)))

def packageDate(d):
   return d.year, d.month, d.day, d.hour, d.minute, d.second

def unpackageDate(d):
  from mx.DateTime import DateTime
  return DateTime(*d)

I will leave the rest as an exercise for the reader.

See 
*http://twisted.sourceforge.net/TwistedDocs-1.2.1alpha1/howto/pb-copyable.html

May God bless you and your family
Matthew Sherborne
www.sherborneinternational.com
*



From jlb at houseofdistraction.com  Mon Jul 12 22:50:43 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Mon, 12 Jul 2004 21:50:43 -0700
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <20040712225312.GC3278@titus.home.puzzling.org>
References: <40F31114.4000108@houseofdistraction.com>
	<20040712225312.GC3278@titus.home.puzzling.org>
Message-ID: <40F36A23.5010107@houseofdistraction.com>

Mary Gardiner wrote:

>On Mon, Jul 12, 2004, Jeff Bowden wrote:
>  
>
>>Is there a good reason for 
>>twisted.internet.abstract.FileDescription.write to require 
>>isinstance(data, str) rather than also allowing isinstance(type, unicode)??
>>    
>>
>
>This is one of those rare things, an FAQ that really is a "Frequently
>Asked Question" not a "Question We Wish You'd Ask".
>
>Unfortunately, I haven't actually added it to the FAQs yet :( See the
>discussion at
>http://www.twistedmatrix.com/users/roundup.twistd/twisted/issue617, in
>particular Glyph Lefkowitz's comment:
>
>    
>    "Q. Why doesn't {API X} accept both string objects and unicode
>    objects?  Isn't it better to use unicode so you can support
>    internationalization?
>
>    A. Unicode is for talking about strings of human-readable text.
>    String objects can also be used for this purpose, and when they are,
>    it is better to use unicode, you are correct.  However, {API X} is
>    dealing with raw data, probably coming from a network connection,
>    and is using String objects as containers of sequences of bytes.
>    Unicode has no way of representing sequences of bytes and streams of
>    'raw', unparsed data.  The data has to be translated at some level
>    *above* that, in order to get things like unicode character
>    alignment correct.
>
>    For more information and some idea of the complexity involved, read
>    http://www.sidhe.org/~dan/blog/archives/000255.html and
>    http://www.joelonsoftware.com/articles/Unicode.html"
>  
>

Right, so I worked around this problem by calling .encode('utf8') in all 
the places where strings go out (after making appropriate changes to the 
content-encoding).

It wasn't that complicated but it was a PITA and it will be an ongoing 
maintenance headache.  It would be a lot nicer if the framework dealt 
with it transparently.

FileDescriptor.write does seem like the wrong place to handle it even 
though that's where the error message pops out.  Apparently what's 
needed is another layer on top of the http layer.   Has anyone attempted 
to write one?





From serj_trejo at hotmail.com  Tue Jul 13 04:26:23 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 13 Jul 2004 06:26:23 -0400
Subject: [Twisted-Python] Reactor use with blocking + sequencing?
Message-ID: <BAY12-F19vVQIBs5j6T0001c7ba@hotmail.com>

I have a few legacy simple Python modules that run on a machine that doesn't 
give me access to a crontab (I know, this sounds kind of dumb but 
unfortunately this is the policy of this a shared account that I have no 
choice but to use). With these legacy modules I have to run two (extrnal, 
non-Python) programs periodically (thus, similar to a cron) and also 
sequentially (I.e., when program A finishes, run program B) and thus 
blocking is required. To do this I've been using Python's popen3() -- and it 
has worked fine. There is an old saying: "If it ain't broke, don't fix it." 
However, I'm tempted to re-think these modules by perhaps using the Twisted 
reactor because it has all of these other nice benefits such as provisioning 
daemonization.

I realize that Twisted's core strength is for network programming of 
asynchronous non-blocking apps and perhaps I might be better off sticking 
with my popen's instead? Any suggestions from the Twisted veterans?

Sergio

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From mwh at python.net  Tue Jul 13 07:30:01 2004
From: mwh at python.net (Michael Hudson)
Date: Tue, 13 Jul 2004 14:30:01 +0100
Subject: [Twisted-Python] 
	Re: twisted.internet.abstract.FileDescription.write vs unicode
References: <40F31114.4000108@houseofdistraction.com>
	<8865488C-D456-11D8-803B-000A95686CD8@redivi.com>
Message-ID: <2m4qocyqzq.fsf@starship.python.net>

Bob Ippolito <bob at redivi.com> writes:

> On Jul 12, 2004, at 6:30 PM, Jeff Bowden wrote:
>
>> Is there a good reason for
>> twisted.internet.abstract.FileDescription.write to require
>> isinstance(data, str) rather than also allowing isinstance(type,
>> unicode)??
>
> Yeah, unicode doesn't have a designated wire format and Python's
> default encoding choice is generally VERY stupid (usually ascii or
> latin-1) which leads to hard to detect bugs.

Pff, Python's choice is very wimpy which means that bugs bite you
earlier.  The real problem is the double-duty thing others alluded to;
there's no way changing the default encoding can make this go away.

Cheers,
mwh

-- 
  same software, different verbosity settings (this one goes to
  eleven)                             -- the effbot on the martellibot




From matt at pollenation.net  Tue Jul 13 08:35:33 2004
From: matt at pollenation.net (Matt Goodall)
Date: Tue, 13 Jul 2004 15:35:33 +0100
Subject: [Twisted-Python] Reactor use with blocking + sequencing?
In-Reply-To: <BAY12-F19vVQIBs5j6T0001c7ba@hotmail.com>
References: <BAY12-F19vVQIBs5j6T0001c7ba@hotmail.com>
Message-ID: <1089729332.15152.301.camel@harold>

On Tue, 2004-07-13 at 11:26, Sergio Trejo wrote:
> I have a few legacy simple Python modules that run on a machine that doesn't 
> give me access to a crontab (I know, this sounds kind of dumb but 
> unfortunately this is the policy of this a shared account that I have no 
> choice but to use). With these legacy modules I have to run two (extrnal, 
> non-Python) programs periodically (thus, similar to a cron) and also 
> sequentially (I.e., when program A finishes, run program B) and thus 
> blocking is required. To do this I've been using Python's popen3() -- and it 
> has worked fine. There is an old saying: "If it ain't broke, don't fix it." 
> However, I'm tempted to re-think these modules by perhaps using the Twisted 
> reactor because it has all of these other nice benefits such as provisioning 
> daemonization.
> 
> I realize that Twisted's core strength is for network programming of 
> asynchronous non-blocking apps and perhaps I might be better off sticking 
> with my popen's instead? Any suggestions from the Twisted veterans?

You can spawn processes via the reactor. See
http://twistedmatrix.com/documents/current/howto/process for details.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From itamar at itamarst.org  Tue Jul 13 09:10:16 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 13 Jul 2004 11:10:16 -0400
Subject: [Twisted-Python] connect/listenUNIX with fd's from socketpair
In-Reply-To: <200407122109.20906.jon@totient.demon.co.uk>
References: <200407122109.20906.jon@totient.demon.co.uk>
Message-ID: <1089731416.29326.16.camel@sheriffpony>

On Mon, 2004-07-12 at 16:09, Jon Dyte wrote:

> I have twisted script, which I plan to fork after calling socketpair
> which will give me a child processes connected to each other? 

The current spawnProcess API allows something like that already, I
think, though I don't know enough to be sure (you can have arbitrary fds
be either read or write from the parent process).

-- 
Itamar Shtull-Trauring    http://itamarst.org





From foom at fuhm.net  Tue Jul 13 11:23:25 2004
From: foom at fuhm.net (James Y Knight)
Date: Tue, 13 Jul 2004 13:23:25 -0400
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <40F36A23.5010107@houseofdistraction.com>
References: <40F31114.4000108@houseofdistraction.com>
	<20040712225312.GC3278@titus.home.puzzling.org>
	<40F36A23.5010107@houseofdistraction.com>
Message-ID: <591D608C-D4F1-11D8-B5AB-000A95A50FB2@fuhm.net>

On Jul 13, 2004, at 12:50 AM, Jeff Bowden wrote:
> Right, so I worked around this problem by calling .encode('utf8') in 
> all the places where strings go out (after making appropriate changes 
> to the content-encoding).
>
> It wasn't that complicated but it was a PITA and it will be an ongoing 
> maintenance headache.  It would be a lot nicer if the framework dealt 
> with it transparently.
>
> FileDescriptor.write does seem like the wrong place to handle it even 
> though that's where the error message pops out.  Apparently what's 
> needed is another layer on top of the http layer.   Has anyone 
> attempted to write one?

I assume you know about Nevow?

James




From jlb at houseofdistraction.com  Tue Jul 13 14:00:35 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Tue, 13 Jul 2004 13:00:35 -0700
Subject: [Twisted-Python] twisted.internet.abstract.FileDescription.write
	vs unicode
In-Reply-To: <591D608C-D4F1-11D8-B5AB-000A95A50FB2@fuhm.net>
References: <40F31114.4000108@houseofdistraction.com>	<20040712225312.GC3278@titus.home.puzzling.org>	<40F36A23.5010107@houseofdistraction.com>
	<591D608C-D4F1-11D8-B5AB-000A95A50FB2@fuhm.net>
Message-ID: <40F43F63.9060703@houseofdistraction.com>

James Y Knight wrote:

> On Jul 13, 2004, at 12:50 AM, Jeff Bowden wrote:
>
>> Right, so I worked around this problem by calling .encode('utf8') in 
>> all the places where strings go out (after making appropriate changes 
>> to the content-encoding).
>>
>> It wasn't that complicated but it was a PITA and it will be an 
>> ongoing maintenance headache.  It would be a lot nicer if the 
>> framework dealt with it transparently.
>>
>> FileDescriptor.write does seem like the wrong place to handle it even 
>> though that's where the error message pops out.  Apparently what's 
>> needed is another layer on top of the http layer.   Has anyone 
>> attempted to write one?
>
>
> I assume you know about Nevow?
>

I do and I'm using it for my client web frontend, but it's not 
appropriate for the backend part of my application.  Does it handle 
unicode transparently?




From general at eepatents.com  Wed Jul 14 14:26:56 2004
From: general at eepatents.com (Ed Suominen)
Date: Wed, 14 Jul 2004 13:26:56 -0700
Subject: [Twisted-Python] Collaborative Text Editor
Message-ID: <cd44u3$eva$1@sea.gmane.org>

I'm thinking of implementing a real-time collaborative text editor in Python
using Twisted. An initial plan is to use a Twisted PB server daemon that
accepts user:password:file connections from text editor clients to make
changes to a specified file on the server, and have the text editor clients
update their local copies of the file based on local user input or input
entered from other users, relayed via the server.

Jabber compatibility would be nice, as would color-coding of different
users' text, etc. But I really want to keep this as simple as possible for
a specific purpose. (I've written with twisted PB recently and am very
pleased with its power and ease of use.)

I'd appreciate pointers to any existing, simple Python-based text editors
suitable for being adapted to this purpose. "Suitable" means under an
OSI-approved license and written cleanly and modularly to facilitate
incorporation into another project.

Offers to collaborate would be gratefully accepted. The result, if any, will
be GPL'd and released. If anyone wants to take these ideas and run with a
project of their own, be my guest.

Thanks, Ed

-- 
Ed Suominen
Registered Patent Agent 
Open Source Developer (Yes, both...)
Web Site: http://www.eepatents.com





From spam at mike-warren.com  Wed Jul 14 15:24:29 2004
From: spam at mike-warren.com (Mike Warren)
Date: Wed, 14 Jul 2004 15:24:29 -0600
Subject: [Twisted-Python] Collaborative Text Editor
In-Reply-To: <cd44u3$eva$1@sea.gmane.org>
References: <cd44u3$eva$1@sea.gmane.org>
Message-ID: <E1BkrEr-0005Di-00@meejah.homeip.net>

Ed Suominen <general at eepatents.com> writes:

> I'd appreciate pointers to any existing, simple Python-based text editors
> suitable for being adapted to this purpose. "Suitable" means under an
> OSI-approved license and written cleanly and modularly to facilitate
> incorporation into another project.

I seem to recall that there's an xemacs implementation of twisted's PB
stuff [checks; yes, it's true, but "partial"]; IMO, such a
text-editing thing will only be useful if one uses a "real" text
editor like emacs (or whatever your favourite "real" text-editor is,
but I'm reasonably sure [1] it's not IDLE or something Pythonic for
most programmers...)


Footnotes: 
[1] of course, I say that sitting inside a GNUS inside a SCREEN
    instance inside RATPOISON, so I might not be "average"...

Good luck,

-- 
mike [at] mike [dash] warren [dot] com
<URL:http://www.mike-warren.com>
gpg --keyserver 80.71.227.37 --recv-key 579911BD
87F2 4D98 BDB0 0E90 EE2A 0CF9 1087 0884 5799 11BD



From ken at kenkinder.com  Wed Jul 14 16:27:43 2004
From: ken at kenkinder.com (Ken Kinder)
Date: Wed, 14 Jul 2004 17:27:43 -0500
Subject: [Twisted-Python] Issue with calling back deferreds from threads
Message-ID: <40F5B35F.30903@kenkinder.com>

Introduced in one of the recent versions of Twisted was a patch 
described here. I'm cc'ing itamar because he created the patch:

    
http://twistedmatrix.com/pipermail/twisted-commits/2003-November/010059.html

This makes sure you can't callback with Deferred objects. However, some 
of my code depends on doing just that because of the blocking DNS issue:

def mymethod(*args):
    def go(*args):
       return xmlproxy.callRemote(*args)
    twisted.internet.threads.deferToThread(go)

As you can see, I'm deferring something that should not be blocking to a 
thread. The purpose for doing so is that sometimes resolving the 
hostname can take a while for this call. (Unrelated document issue with 
Twisted: DNS is blocking.) So, in this case, it is desirable (although 
hackish) to defer the creation of a deferred object to a thread, and 
itamar's patch prevents this process.

One option I have is to make go() blocking, but that will hold a thread 
open for longer than is necessary. Another option is to comment out the 
assertion, but that's probably not a good idea. Until the DNS blocking 
issue is resolved, I'm not sure how to solve this one.

Suggestions?

Thanks
Ken



From bob at redivi.com  Wed Jul 14 17:26:13 2004
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 14 Jul 2004 19:26:13 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>


On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:

> Introduced in one of the recent versions of Twisted was a patch  
> described here. I'm cc'ing itamar because he created the patch:
>
>     
> http://twistedmatrix.com/pipermail/twisted-commits/2003-November/ 
> 010059.html
>
> This makes sure you can't callback with Deferred objects. However,  
> some of my code depends on doing just that because of the blocking DNS  
> issue:
>
> def mymethod(*args):
>    def go(*args):
>       return xmlproxy.callRemote(*args)
>    twisted.internet.threads.deferToThread(go)
>
> As you can see, I'm deferring something that should not be blocking to  
> a thread. The purpose for doing so is that sometimes resolving the  
> hostname can take a while for this call. (Unrelated document issue  
> with Twisted: DNS is blocking.) So, in this case, it is desirable  
> (although hackish) to defer the creation of a deferred object to a  
> thread, and itamar's patch prevents this process.

Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
non-blocking?

> One option I have is to make go() blocking, but that will hold a  
> thread open for longer than is necessary. Another option is to comment  
> out the assertion, but that's probably not a good idea. Until the DNS  
> blocking issue is resolved, I'm not sure how to solve this one.
>
> Suggestions?

Yeah, use reactor.callFromThread.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040714/0ca7625f/attachment-0004.bin>

From bob at redivi.com  Wed Jul 14 17:26:13 2004
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 14 Jul 2004 19:26:13 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>


On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:

> Introduced in one of the recent versions of Twisted was a patch  
> described here. I'm cc'ing itamar because he created the patch:
>
>     
> http://twistedmatrix.com/pipermail/twisted-commits/2003-November/ 
> 010059.html
>
> This makes sure you can't callback with Deferred objects. However,  
> some of my code depends on doing just that because of the blocking DNS  
> issue:
>
> def mymethod(*args):
>    def go(*args):
>       return xmlproxy.callRemote(*args)
>    twisted.internet.threads.deferToThread(go)
>
> As you can see, I'm deferring something that should not be blocking to  
> a thread. The purpose for doing so is that sometimes resolving the  
> hostname can take a while for this call. (Unrelated document issue  
> with Twisted: DNS is blocking.) So, in this case, it is desirable  
> (although hackish) to defer the creation of a deferred object to a  
> thread, and itamar's patch prevents this process.

Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
non-blocking?

> One option I have is to make go() blocking, but that will hold a  
> thread open for longer than is necessary. Another option is to comment  
> out the assertion, but that's probably not a good idea. Until the DNS  
> blocking issue is resolved, I'm not sure how to solve this one.
>
> Suggestions?

Yeah, use reactor.callFromThread.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040714/0ca7625f/attachment-0005.bin>

From bob at redivi.com  Wed Jul 14 17:31:09 2004
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 14 Jul 2004 19:31:09 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <E2F1D271-D5ED-11D8-A28E-000A95686CD8@redivi.com>


On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:

> Introduced in one of the recent versions of Twisted was a patch  
> described here. I'm cc'ing itamar because he created the patch:
>
>     
> http://twistedmatrix.com/pipermail/twisted-commits/2003-November/ 
> 010059.html
>
> This makes sure you can't callback with Deferred objects. However,  
> some of my code depends on doing just that because of the blocking DNS  
> issue:
>
> def mymethod(*args):
>    def go(*args):
>       return xmlproxy.callRemote(*args)
>    twisted.internet.threads.deferToThread(go)
>
> As you can see, I'm deferring something that should not be blocking to  
> a thread. The purpose for doing so is that sometimes resolving the  
> hostname can take a while for this call. (Unrelated document issue  
> with Twisted: DNS is blocking.) So, in this case, it is desirable  
> (although hackish) to defer the creation of a deferred object to a  
> thread, and itamar's patch prevents this process.

Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
non-blocking?

> One option I have is to make go() blocking, but that will hold a  
> thread open for longer than is necessary. Another option is to comment  
> out the assertion, but that's probably not a good idea. Until the DNS  
> blocking issue is resolved, I'm not sure how to solve this one.
>
> Suggestions?

Yeah, use reactor.callFromThread.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2357 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040714/182865a1/attachment-0002.bin>

From andrew-twisted at puzzling.org  Wed Jul 14 23:33:05 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 15 Jul 2004 15:33:05 +1000
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>
References: <40F5B35F.30903@kenkinder.com>
	<32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>
Message-ID: <20040715053305.GC28548@frobozz>

On Wed, Jul 14, 2004 at 07:26:13PM -0400, Bob Ippolito wrote:
> 
> On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:
> 
[...]
> >hostname can take a while for this call. (Unrelated document issue  
> >with Twisted: DNS is blocking.) So, in this case, it is desirable  
> >(although hackish) to defer the creation of a deferred object to a  
> >thread, and itamar's patch prevents this process.
> 
> Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
> non-blocking?

There is, although not clearly documented anywhere I know of.  It's:

    from twisted.names import client
    from twisted.internet import reactor
    reactor.installResolver(client.theResolver)

If you need a resolver with different behavior to the default (e.g. you want
to tell it to use a specific DNS server), use:

    resolver = client.createResolver(servers=[('127.0.0.1', 53)])
    reactor.installResolver(resolver)

There's also a ThreadedResolver, which just uses Python's builtin
socket.gethostbyname in a thread.  You could install that one with:

    reactor.installResolver(client.ThreadedResolver())

-Andrew.




From nico at tekNico.net  Thu Jul 15 01:53:19 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 15 Jul 2004 09:53:19 +0200
Subject: [Twisted-Python] Re: Collaborative Text Editor
References: <cd44u3$eva$1@sea.gmane.org>
Message-ID: <200407150953.23445.nico@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> I'm thinking of implementing a real-time collaborative text editor in
> Python using Twisted.

Are you aware of LeoN?
http://ryalias.freezope.org/souvenirs/leon

Leo (without 'N') is an outlining editor written in Python, old and
powerful, and LeoN is an extension for collaborative editing based on
Twisted, new and alpha, but probably worth a look.


- --
Nicola Larosa - nico at tekNico.net

"When a student asks why case matters, simply ask why it shouldn't matter.
If they think it would be easier to use Python if they can be inconsistent
in their use of case, then they have the answer. Python helps teach that
consistency matters." -- Michael McLay, April 2004

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFA9jfyUE0NcK/GJXYRAlebAJ9wNXcLDrZknQpM7fjGiSBo909qswCffbKt
iRExrxWyVXAXczvdLRFChPk=
=ZQax
-----END PGP SIGNATURE-----



From serj_trejo at hotmail.com  Thu Jul 15 05:03:12 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Thu, 15 Jul 2004 07:03:12 -0400
Subject: [Twisted-Python] Semantics sought: lambda?
Message-ID: <BAY12-F12nGEbJ8MqU200038f36@hotmail.com>

In the Twisted documentation, there are several examples and references that 
use the term "lambda" but I can't find any semantic definition of what 
lambda is about. For example:

d.addCallback(lambda object: object.callRemote("echo", "hello network"))

I'm kind of new to Python and prior to Twisted, I have not seen this type of 
syntax before:

"lambda object: "

Any references would be appreciated.

Sergio

_________________________________________________________________
Add photos to your messages with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From matt at pollenation.net  Thu Jul 15 05:41:15 2004
From: matt at pollenation.net (Matt Goodall)
Date: Thu, 15 Jul 2004 12:41:15 +0100
Subject: [Twisted-Python] Semantics sought: lambda?
In-Reply-To: <BAY12-F12nGEbJ8MqU200038f36@hotmail.com>
References: <BAY12-F12nGEbJ8MqU200038f36@hotmail.com>
Message-ID: <1089891675.26390.12.camel@harold>

On Thu, 2004-07-15 at 12:03, Sergio Trejo wrote:
> In the Twisted documentation, there are several examples and references that 
> use the term "lambda" but I can't find any semantic definition of what 
> lambda is about. For example:
> 
> d.addCallback(lambda object: object.callRemote("echo", "hello network"))
> 
> I'm kind of new to Python and prior to Twisted, I have not seen this type of 
> syntax before:
> 
> "lambda object: "
> 
> Any references would be appreciated.

lambdas are Python's way of creating short, anonymous functions. They
are document at python.org:

 - http://www.python.org/doc/current/ref/lambdas.html
 - http://docs.python.org/tut/node6.html#SECTION006750000000000000000

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From itamar at itamarst.org  Thu Jul 15 07:53:48 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Jul 2004 09:53:48 -0400
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <40F5B35F.30903@kenkinder.com>
References: <40F5B35F.30903@kenkinder.com>
Message-ID: <1089899627.29322.49.camel@sheriffpony>

On Wed, 2004-07-14 at 18:27, Ken Kinder wrote:

> So, in this case, it is desirable (although 
> hackish) to defer the creation of a deferred object to a thread, and 
> itamar's patch prevents this process.

1. Twisted is NOT THREAD SAFE. Code that talks to Twisted in any way
will break if run in a thread in parallel to the main reactor thread.
Use reactor.callFromThread to call Twisted code in the reactor thread
from other threads.

2. Twisted supports non-blocking DNS, see other posts.

3. If you *do* need to connect two Deferreds together, you might want to
look at twisted.internet.defer.maybeDeferred and Deferred.chainDeferred,
functions.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From ken at kenkinder.com  Thu Jul 15 08:22:24 2004
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 15 Jul 2004 09:22:24 -0500
Subject: [Twisted-Python] Issue with calling back deferreds from threads
In-Reply-To: <20040715053305.GC28548@frobozz>
References: <40F5B35F.30903@kenkinder.com>	<32BAF11E-D5ED-11D8-82B4-000A95686CD8@redivi.com>
	<20040715053305.GC28548@frobozz>
Message-ID: <40F69320.6070706@kenkinder.com>

Andrew Bennetts wrote:

>On Wed, Jul 14, 2004 at 07:26:13PM -0400, Bob Ippolito wrote:
>  
>
>>On Jul 14, 2004, at 6:27 PM, Ken Kinder wrote:
>>
>>    
>>
>[...]
>  
>
>>>hostname can take a while for this call. (Unrelated document issue  
>>>with Twisted: DNS is blocking.) So, in this case, it is desirable  
>>>(although hackish) to defer the creation of a deferred object to a  
>>>thread, and itamar's patch prevents this process.
>>>      
>>>
>>Isn't there a quick way to turn on Twisted's DNS client, so that DNS is  
>>non-blocking?
>>    
>>
>
>There is, although not clearly documented anywhere I know of.  It's:
>
>    from twisted.names import client
>    from twisted.internet import reactor
>    reactor.installResolver(client.theResolver)
>
>If you need a resolver with different behavior to the default (e.g. you want
>to tell it to use a specific DNS server), use:
>
>    resolver = client.createResolver(servers=[('127.0.0.1', 53)])
>    reactor.installResolver(resolver)
>
>There's also a ThreadedResolver, which just uses Python's builtin
>socket.gethostbyname in a thread.  You could install that one with:
>
>    reactor.installResolver(client.ThreadedResolver())
>  
>
Ah -- I wasn't aware of a non-blocking DNS client. I'll give that a 
shot, thanks.

If all else fails, I suppose I could wrap my deferred in a list, but I 
have to take a shower just thinking about it.

-k



From general at eepatents.com  Thu Jul 15 09:47:14 2004
From: general at eepatents.com (Ed Suominen)
Date: Thu, 15 Jul 2004 08:47:14 -0700
Subject: [Twisted-Python] Re: Collaborative Text Editor
References: <cd44u3$eva$1@sea.gmane.org> <200407150953.23445.nico@tekNico.net>
Message-ID: <cd68to$p1d$1@sea.gmane.org>

Thanks for the tip! This looks like a wheel I can help round out instead of
trying to re-invent.

-- 
Ed Suominen
Registered Patent Agent 
Open Source Developer (Yes, both...)
Web Site: http://www.eepatents.com


Nicola Larosa wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
>> I'm thinking of implementing a real-time collaborative text editor in
>> Python using Twisted.
> 
> Are you aware of LeoN?
> http://ryalias.freezope.org/souvenirs/leon
> 
> Leo (without 'N') is an outlining editor written in Python, old and
> powerful, and LeoN is an extension for collaborative editing based on
> Twisted, new and alpha, but probably worth a look.
> 
> 
> - --
> Nicola Larosa - nico at tekNico.net
> 
> "When a student asks why case matters, simply ask why it shouldn't matter.
> If they think it would be easier to use Python if they can be inconsistent
> in their use of case, then they have the answer. Python helps teach that
> consistency matters." -- Michael McLay, April 2004
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.4 (GNU/Linux)
> 
> iD8DBQFA9jfyUE0NcK/GJXYRAlebAJ9wNXcLDrZknQpM7fjGiSBo909qswCffbKt
> iRExrxWyVXAXczvdLRFChPk=
> =ZQax
> -----END PGP SIGNATURE-----






From nico at tekNico.net  Thu Jul 15 11:48:23 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 15 Jul 2004 19:48:23 +0200
Subject: [Twisted-Python] Re: Collaborative Text Editor
References: <cd44u3$eva$1@sea.gmane.org> <200407150953.23445.nico@tekNico.net>
	<cd68to$p1d$1@sea.gmane.org>
Message-ID: <cd6g16$c81$1@sea.gmane.org>

> Thanks for the tip! This looks like a wheel I can help round out instead
> of trying to re-invent.

You're welcome. Or maybe not... ;-)


> Ed Suominen
> Registered Patent Agent 

I hadn't noticed this before. I sure hope you do *not* accept applications
about *software* patents, otherwise I may possibly come to regret having
helped you. ;-)


> Open Source Developer (Yes, both...)
> Web Site: http://www.eepatents.com

Now I'm confused. You're a good guy, a bad guy, or what? ;-)


-- 
Nicola Larosa - nico at tekNico.net

"When a student asks why case matters, simply ask why it shouldn't matter.
If they think it would be easier to use Python if they can be inconsistent
in their use of case, then they have the answer. Python helps teach that
consistency matters." -- Michael McLay, April 2004





From serj_trejo at hotmail.com  Thu Jul 15 17:11:49 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Thu, 15 Jul 2004 19:11:49 -0400
Subject: [Twisted-Python] Semantics sought: lambda?
Message-ID: <BAY12-F7VI4RSze7XCB0003edd6@hotmail.com>


Thank you Matt for the reference. The Twisted framework is the first time 
I've encountered the Python lambda function. I was most definitely aware of 
lambda being used as a Greek letter in various disciplines (in fluid 
mechanics lambda represents wavelength) ... and was not aware of its 
implications in Python let alone LISP.

Serg

>From: Matt Goodall <matt at pollenation.net>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Semantics sought: lambda?
>Date: Thu, 15 Jul 2004 12:41:15 +0100
>
>On Thu, 2004-07-15 at 12:03, Sergio Trejo wrote:
> > In the Twisted documentation, there are several examples and references 
>that
> > use the term "lambda" but I can't find any semantic definition of what
> > lambda is about. For example:
> >
> > d.addCallback(lambda object: object.callRemote("echo", "hello network"))
> >
> > I'm kind of new to Python and prior to Twisted, I have not seen this 
>type of
> > syntax before:
> >
> > "lambda object: "
> >
> > Any references would be appreciated.
>
>lambdas are Python's way of creating short, anonymous functions. They
>are document at python.org:
>
>  - http://www.python.org/doc/current/ref/lambdas.html
>  - http://docs.python.org/tut/node6.html#SECTION006750000000000000000
>
>Cheers, Matt
>
>--
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt at pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From serj_trejo at hotmail.com  Fri Jul 16 09:53:29 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Fri, 16 Jul 2004 11:53:29 -0400
Subject: [Twisted-Python] PB - Dual Use Objects?
Message-ID: <BAY12-F7NStTNbH0BpM000438b6@hotmail.com>

I'm curious, for those who use PB for their projects, do they make their 
objects at each end of the wire dual use (meaning, both objects run a PB 
Server and PB Client Factory such that each object can remotely call the 
other), or do most people stick to a typical client-server model wherby the 
PB Server Factory object just waits for requests from the Client and does 
not attempt to initiate any messages to the client?

I ask because as a newbie to Twisted, I also started reading the 
twisted.flow HowTo and it looks like there are some really interesting 
things that could be done with PB. I have an app in mind whereby a PB Client 
(A) triggers a PB Server, and then the PB Server expects incoming data from 
another PB Client (B) but the data that comes in from B is useful to pass 
back to A (all in a deferred manner however). Therefore the PB Server acts 
as an intermediary. But this could get really hairy if I turned the PB 
Server into a server handling multiple requests from PB Clients of type A 
and PB Clients of type B (could look like a spaghetti bowl f the Server is 
required to route data from the Bs to the As) so maybe better to stick with 
a typical client-server model.

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From radix at twistedmatrix.com  Fri Jul 16 10:45:32 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 16 Jul 2004 12:45:32 -0400
Subject: [Twisted-Python] PB - Dual Use Objects?
In-Reply-To: <BAY12-F7NStTNbH0BpM000438b6@hotmail.com>
References: <BAY12-F7NStTNbH0BpM000438b6@hotmail.com>
Message-ID: <40F8062C.1000402@twistedmatrix.com>

Sergio Trejo wrote:
> I'm curious, for those who use PB for their projects, do they make their 
> objects at each end of the wire dual use (meaning, both objects run a PB 
> Server and PB Client Factory such that each object can remotely call the 
> other), or do most people stick to a typical client-server model wherby 
> the PB Server Factory object just waits for requests from the Client and 
> does not attempt to initiate any messages to the client?
> 
> I ask because as a newbie to Twisted, I also started reading the 
> twisted.flow HowTo and it looks like there are some really interesting 
> things that could be done with PB. I have an app in mind whereby a PB 
> Client (A) triggers a PB Server, and then the PB Server expects incoming 
> data from another PB Client (B) but the data that comes in from B is 
> useful to pass back to A (all in a deferred manner however). Therefore 
> the PB Server acts as an intermediary. But this could get really hairy 
> if I turned the PB Server into a server handling multiple requests from 
> PB Clients of type A and PB Clients of type B (could look like a 
> spaghetti bowl f the Server is required to route data from the Bs to the 
> As) so maybe better to stick with a typical client-server model.

No, this is very simple. First of all, you need the Bs to pass a "mind" 
object to pb.login(). It'll probably be a Referenceable subclass 
instance. You'll get this mind object passed to your Realm's 
requestAvatar method, so you can save it wherever relevant there. Let's 
pretend this object has a messageFromAnA remote method.

Then the As connect, and do middleman.callRemote('doSomethingToAB'):

def remote_doSomethingToAB(self):
   return self.mind.callRemote('messageFromAnA')

callRemote will return a Deferred that fires with the result from B's 
messageFromAnA method, and PB will pass this result off as the result to 
A, so A is getting the result that B returned.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040716/e01c0e1f/attachment.sig>

From serj_trejo at hotmail.com  Sun Jul 18 03:02:54 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sun, 18 Jul 2004 05:02:54 -0400
Subject: [Twisted-Python] PB - Dual Use Objects?
Message-ID: <BAY12-F18V5YeDI34No0004ddc2@hotmail.com>

Radix -- this was an excellent suggestion - it works quite well. Thanks for 
your trips. Its been interesting delving into the aspects of Avatars, the 
Mind, Realms and Portals. Good stuff.

Sergio

>From: Christopher Armstrong <radix at twistedmatrix.com>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] PB - Dual Use Objects?
>Date: Fri, 16 Jul 2004 12:45:32 -0400
>
>Sergio Trejo wrote:
>>I'm curious, for those who use PB for their projects, do they make their 
>>objects at each end of the wire dual use (meaning, both objects run a PB 
>>Server and PB Client Factory such that each object can remotely call the 
>>other), or do most people stick to a typical client-server model wherby 
>>the PB Server Factory object just waits for requests from the Client and 
>>does not attempt to initiate any messages to the client?
>>
>>I ask because as a newbie to Twisted, I also started reading the 
>>twisted.flow HowTo and it looks like there are some really interesting 
>>things that could be done with PB. I have an app in mind whereby a PB 
>>Client (A) triggers a PB Server, and then the PB Server expects incoming 
>>data from another PB Client (B) but the data that comes in from B is 
>>useful to pass back to A (all in a deferred manner however). Therefore the 
>>PB Server acts as an intermediary. But this could get really hairy if I 
>>turned the PB Server into a server handling multiple requests from PB 
>>Clients of type A and PB Clients of type B (could look like a spaghetti 
>>bowl f the Server is required to route data from the Bs to the As) so 
>>maybe better to stick with a typical client-server model.
>
>No, this is very simple. First of all, you need the Bs to pass a "mind" 
>object to pb.login(). It'll probably be a Referenceable subclass instance. 
>You'll get this mind object passed to your Realm's requestAvatar method, so 
>you can save it wherever relevant there. Let's pretend this object has a 
>messageFromAnA remote method.
>
>Then the As connect, and do middleman.callRemote('doSomethingToAB'):
>
>def remote_doSomethingToAB(self):
>   return self.mind.callRemote('messageFromAnA')
>
>callRemote will return a Deferred that fires with the result from B's 
>messageFromAnA method, and PB will pass this result off as the result to A, 
>so A is getting the result that B returned.
>
>--
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
>---------+           http://radix.twistedmatrix.com/
><< signature.asc >>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
STOP MORE SPAM with the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From itamar at itamarst.org  Sun Jul 18 20:39:24 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 18 Jul 2004 22:39:24 -0400
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
Message-ID: <1090204764.10918.10.camel@sheriffpony>

1. Switch classes from:

  class C:
      __implements__ = IFoo,

to:

  class C:
      zope.interface.implements(IFoo)

and if you have third party subclasses that may depend on C having
__implements__, also add:

  twisted.python.components.backwardsCompatImplements(C)


2. Using zope.interface APIs directly is better, e.g. IFoo.providedBy(o)
rather than components.implements(o, IFoo). But! If the object is third
party, it may be using __implements__, and if the class never got
processed by t.p.c it will not be hooked up to zope.interface at all.
So, you may want to do:

   t.p.componets.fixClassImplements(o.__class__)

this will make sure that __implements__ declarations get converted to
new style implements declarations.

3. Basically all of t.p.c is deprecated except for registerAdapter and
the other APIs that talk to registry. Componentized is not, in theory,
but hopefully will be replaced soon.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mesozoic at polynode.com  Sun Jul 18 23:26:42 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 19 Jul 2004 01:26:42 -0400
Subject: [Twisted-Python] Re: Notes on switching twisted to new
	zope.interface code
In-Reply-To: <1090204764.10918.10.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
Message-ID: <20040719052642.GF5871@perpetual.moxn.net>

On Sun, Jul 18, 2004 at 10:39:24PM -0400, Itamar Shtull-Trauring wrote:
> 1. Switch classes from:
> 
>   class C:
>       __implements__ = IFoo,
> 
> to:
> 
>   class C:
>       zope.interface.implements(IFoo)

What about subclasses?

class C:
  __implements__ = IFoo,
  
class D(C):
  __implements__ = (C.__implements__, IFoo)
  
Do Zope interfaces need anything special to handle this?

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From andrew-twisted at puzzling.org  Sun Jul 18 23:43:21 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 19 Jul 2004 15:43:21 +1000
Subject: [Twisted-Python] Re: Notes on switching twisted to new
	zope.interface code
In-Reply-To: <20040719052642.GF5871@perpetual.moxn.net>
References: <1090204764.10918.10.camel@sheriffpony>
	<20040719052642.GF5871@perpetual.moxn.net>
Message-ID: <20040719054321.GA23741@frobozz>

On Mon, Jul 19, 2004 at 01:26:42AM -0400, Alex Levy wrote:
[...]
> 
> What about subclasses?
> 
> class C:
>   __implements__ = IFoo,
>   
> class D(C):
>   __implements__ = (C.__implements__, IFoo)
>   
> Do Zope interfaces need anything special to handle this?

(Did you really mean to use IFoo twice in your example?)

See the Zope interfaces package documentation for details, but this:

    class C:
        __implements__ = (IFoo,)
    
    class D:
        __implements__ = (C.__implements__, IBar)

would become this:

    from zope.interface import implements
    
    class C:
        implements(IFoo)
    
    class D:
        implements(IBar)

i.e. implements adds to the list of interfaces the class implements.
There's also an "implementsOnly" function.

See README.txt from the zope.interface package for more details:
    http://svn.zope.org/Zope3/trunk/src/zope/interface/README.txt?rev=13888&view=auto

-Andrew.




From mesozoic at polynode.com  Mon Jul 19 00:05:35 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Mon, 19 Jul 2004 02:05:35 -0400
Subject: [Twisted-Python] Re: Re: Notes on switching twisted to new
	zope.interface code
In-Reply-To: <20040719054321.GA23741@frobozz>
References: <1090204764.10918.10.camel@sheriffpony>
	<20040719052642.GF5871@perpetual.moxn.net>
	<20040719054321.GA23741@frobozz>
Message-ID: <20040719060535.GG5871@perpetual.moxn.net>

On Mon, Jul 19, 2004 at 03:43:21PM +1000, Andrew Bennetts wrote:
> (Did you really mean to use IFoo twice in your example?)

Hah, no -- that's what happens when I ask questions after 1am EST. :P

Thanks for the clarification.

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From projects at reedflute.com  Mon Jul 19 14:31:58 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Mon, 19 Jul 2004 22:31:58 +0200
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <1090204764.10918.10.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
Message-ID: <40FC2FBE.2050103@reedflute.com>

Itamar Shtull-Trauring wrote:

>1. Switch classes from:
>
>  class C:
>      __implements__ = IFoo,
>
>to:
>
>  class C:
>      zope.interface.implements(IFoo)
>
>and if you have third party subclasses that may depend on C having
>__implements__, also add:
>
>  twisted.python.components.backwardsCompatImplements(C)
>
>
>2. Using zope.interface APIs directly is better, e.g. IFoo.providedBy(o)
>rather than components.implements(o, IFoo). But! If the object is third
>party, it may be using __implements__, and if the class never got
>processed by t.p.c it will not be hooked up to zope.interface at all.
>So, you may want to do:
>
>   t.p.componets.fixClassImplements(o.__class__)
>
>this will make sure that __implements__ declarations get converted to
>new style implements declarations.
>
>3. Basically all of t.p.c is deprecated except for registerAdapter and
>the other APIs that talk to registry. Componentized is not, in theory,
>but hopefully will be replaced soon.
>
>  
>
Sorry,

but can you please explain :

1) What is t.p.c  and 

2) Why would one want to use Zope's interfaces in places of Twisted 
built-in interfaces

regards,

Eugene Coetzee

--
===============================================
Reedflute Software Solutions

Web                 -> www.reedflute.com
=============================================== 





From bob at redivi.com  Mon Jul 19 15:01:03 2004
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 19 Jul 2004 17:01:03 -0400
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <40FC2FBE.2050103@reedflute.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
Message-ID: <BF324552-D9C6-11D8-8F6B-000A95686CD8@redivi.com>


On Jul 19, 2004, at 4:31 PM, Eugene Coetzee wrote:

> 1) What is t.p.c  and

twisted.python.components

> 2) Why would one want to use Zope's interfaces in places of Twisted 
> built-in interfaces

Because you have to, Twisted doesn't have built-in interfaces anymore.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040719/242cefe2/attachment-0002.bin>

From itamar at itamarst.org  Mon Jul 19 15:07:14 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 19 Jul 2004 17:07:14 -0400
Subject: [Twisted-Python] Notes on switching twisted to new
	zope.interface code
In-Reply-To: <40FC2FBE.2050103@reedflute.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
Message-ID: <1090271234.10918.119.camel@sheriffpony>

On Mon, 2004-07-19 at 16:31, Eugene Coetzee wrote:

> 1) What is t.p.c  and 

twisted.python.components

> 2) Why would one want to use Zope's interfaces in places of Twisted 
> built-in interfaces

Next version of Twisted will use Zope's interfaces, so my comments were
for developers so they can help port the code.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From jt at parspro.com  Tue Jul 20 13:40:57 2004
From: jt at parspro.com (John Toohey)
Date: Tue, 20 Jul 2004 15:40:57 -0400
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <1090271234.10918.119.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
Message-ID: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>

I get the following error when trying to import the SOAP support :-
   File "./cacheserver/main.py", line 16, in ?
     from twisted.web import xmlrpc, server, resource, soap
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/twisted/web/soap.py", line 32, in ?
     import SOAPpy
ImportError: No module named SOAPpy

Is there an additional lib that I need to download and install?

JT




From exarkun at divmod.com  Tue Jul 20 13:57:52 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 20 Jul 2004 15:57:52 -0400
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
Message-ID: <40FD7940.3010708@divmod.com>

John Toohey wrote:
> I get the following error when trying to import the SOAP support :-
>   File "./cacheserver/main.py", line 16, in ?
>     from twisted.web import xmlrpc, server, resource, soap
>   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/web/soap.py", line 32, in ?
>     import SOAPpy
> ImportError: No module named SOAPpy
> 
> Is there an additional lib that I need to download and install?

   Yes.  Twisted's support is mainly just an integration layer between 
the SOAP parser/generator that SOAPpy provides and Twisted's own I/O layers.

   I believe the required module is available on sourceforge:

     http://pywebsvcs.sourceforge.net/

   Jp



From justinjohnson at gmail.com  Tue Jul 20 14:05:32 2004
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 20 Jul 2004 15:05:32 -0500
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <40FD7940.3010708@divmod.com>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
	<40FD7940.3010708@divmod.com>
Message-ID: <94a776e7040720130540f748b4@mail.gmail.com>

Maybe this should appear in the list of dependencies for the download
at http://twistedmatrix.com/products/download.

On Tue, 20 Jul 2004 15:57:52 -0400, Jp Calderone <exarkun at divmod.com> wrote:
> John Toohey wrote:
> > I get the following error when trying to import the SOAP support :-
> >   File "./cacheserver/main.py", line 16, in ?
> >     from twisted.web import xmlrpc, server, resource, soap
> >   File  "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/
> > python2.3/site-packages/twisted/web/soap.py", line 32, in ?
> >     import SOAPpy
> > ImportError: No module named SOAPpy
> >
> > Is there an additional lib that I need to download and install?
> 
>    Yes.  Twisted's support is mainly just an integration layer between
> the SOAP parser/generator that SOAPpy provides and Twisted's own I/O layers.
> 
>    I believe the required module is available on sourceforge:
> 
>      http://pywebsvcs.sourceforge.net/
> 
>    Jp
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From l.oluyede at gmail.com  Tue Jul 20 14:06:27 2004
From: l.oluyede at gmail.com (Lawrence Oluyede)
Date: Tue, 20 Jul 2004 22:06:27 +0200
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
Message-ID: <9eebf574040720130648f0adac@mail.gmail.com>

> Is there an additional lib that I need to download and install?

Yes, you have to download ad install SOAPpy from here
http://pywebsvcs.sourceforge.net/

bye

-- 
Lawrence
"in IE we trust"



From bob at redivi.com  Tue Jul 20 14:13:55 2004
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 20 Jul 2004 16:13:55 -0400
Subject: [Twisted-Python] Problem with twisted SOAP support
In-Reply-To: <B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
References: <1090204764.10918.10.camel@sheriffpony>
	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<B87A5B62-DA84-11D8-B13D-000A95AE562E@parspro.com>
Message-ID: <5391AB9E-DA89-11D8-99F1-000A95686CD8@redivi.com>

On Jul 20, 2004, at 3:40 PM, John Toohey wrote:

> I get the following error when trying to import the SOAP support :-
>   File "./cacheserver/main.py", line 16, in ?
>     from twisted.web import xmlrpc, server, resource, soap
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/web/soap.py", line 32, in ?
>     import SOAPpy
> ImportError: No module named SOAPpy
>
> Is there an additional lib that I need to download and install?

Yes, google is your friend:

http://pywebsvcs.sourceforge.net/

-bob

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040720/6bfcd8de/attachment-0002.bin>

From daburr at gpi.com  Tue Jul 20 16:37:35 2004
From: daburr at gpi.com (Daniel Burr)
Date: Tue, 20 Jul 2004 18:37:35 -0400
Subject: [Twisted-Python] Twisted gets mad freaky love from IEEE Internet
	Computing
Message-ID: <40FD9EAF.5060706@gpi.com>

A very nice section on Twisted appears in this article about dynamic 
languages and distributed systems.

PEAK gets a nice mention as well.

Read it at:

http://dsonline.computer.org/0407/d/w4towp.htm

Naz



From radix at twistedmatrix.com  Tue Jul 20 20:30:00 2004
From: radix at twistedmatrix.com (Radix)
Date: Wed, 21 Jul 2004 03:30:00 +0100
Subject: [Twisted-Python] Re:
Message-ID: <utevncztthagddbcksg@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040721/3646a861/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Music_MP3.com
Type: application/octet-stream
Size: 21992 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040721/3646a861/attachment-0002.obj>

From golux at comcast.net  Tue Jul 20 20:41:27 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 20 Jul 2004 22:41:27 -0400
Subject: [Twisted-Python] Twisted gets mad freaky love from IEEE Internet
	Computing
In-Reply-To: <40FD9EAF.5060706@gpi.com>
References: <40FD9EAF.5060706@gpi.com>
Message-ID: <40FDD7D7.8080608@comcast.net>

Daniel Burr wrote:
> A very nice section on Twisted appears in this article about dynamic 
> languages and distributed systems.

Particularly impressive since the author works for IONA, one of
the main CORBA vendors.  How refreshing!  Apparently IONA is
immune to the virulent open source paranoia that afflicts a
certain monolithic operating system vendor whose president
happens to be the richest earthling.  ;)

Steve



From serj_trejo at hotmail.com  Wed Jul 21 03:13:50 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 21 Jul 2004 05:13:50 -0400
Subject: [Twisted-Python] Twisted gets mad freaky love from IEEE
	InternetComputing
Message-ID: <BAY12-F2qqqmbsyckEG00051900@hotmail.com>


>From: Stephen Waterbury <golux at comcast.net>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Twisted gets mad freaky love from IEEE 
>InternetComputing
>Date: Tue, 20 Jul 2004 22:41:27 -0400
>
>Daniel Burr wrote:
>>A very nice section on Twisted appears in this article about dynamic 
>>languages and distributed systems.
>
>Particularly impressive since the author works for IONA, one of
>the main CORBA vendors.  How refreshing!  Apparently IONA is
>immune to the virulent open source paranoia that afflicts a
>certain monolithic operating system vendor whose president
>happens to be the richest earthling.  ;)

Whose copyright holders of such an operating system announced a huge stock 
buyback to try and ooh and ahhh its shareholders to thus try to give people 
the warm fuzzy feelings that closed source still rules (which of course it 
doesn't).

>
>Steve
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From gumuz at looze.net  Wed Jul 21 06:45:44 2004
From: gumuz at looze.net (=?iso-8859-1?Q?Guyon_Mor=E9e?=)
Date: Wed, 21 Jul 2004 14:45:44 +0200
Subject: [Twisted-Python] Re:
References: <utevncztthagddbcksg@twistedmatrix.com>
Message-ID: <020001c46f20$a4e82390$6501a8c0@tradesoft.nl>

looks like someone's got a virus?

  ----- Original Message ----- 
  From: Radix 
  To: Twisted-python 
  Sent: Wednesday, July 21, 2004 4:30 AM
  Subject: [Twisted-Python] Re:


  >foto3 and MP3





------------------------------------------------------------------------------


  _______________________________________________
  Twisted-Python mailing list
  Twisted-Python at twistedmatrix.com
  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040721/cdf1cb84/attachment.html>

From serj_trejo at hotmail.com  Wed Jul 21 12:01:38 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 21 Jul 2004 14:01:38 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
Message-ID: <BAY12-F33khqntKrUV0000674a4@hotmail.com>

I'm trying to be a good soldier by heeding the warning issued by the Twisted 
gods warning strongly *not* to use defer.Deferred's setTimeout() and instead 
using  reactor.callLater

I've looked at the API for twisted.internet.defer.Deferred.callback and 
twisted.internet.default.SelectReactor.callLater (which refers one to see 
twisted.internet.interfaces.IReactorTime.callLater which I have also read). 
I don't understand why at least one args object must always be supplied to 
reactor.callLater, as in:

reactor.callLater(3, d.callback, "an unused arg")

even though the callback function:

d.addCallback(checkForSanity)

receives no args:

def checkForSanity():
	print "this is a sanity test"

In order to get the reactor.callLater to perform the callback, I had to pass 
in at least one arg:

def checkForSanity(ignoreMe):
	print "this is a sanity test"
d = defer.Deferred()
d.addCallback(checkForSanity)
reactor.callLater(3, d.callback, "ignore me")

There's sure to be a good reason why, perhaps something utterly obvious to 
most but as a newbie I'm still trying to grok as much as possible where 
needed. Thanks for any clarification.

Serg

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From orbitz at ezabel.com  Wed Jul 21 12:45:44 2004
From: orbitz at ezabel.com (orbitz)
Date: Wed, 21 Jul 2004 14:45:44 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
In-Reply-To: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
References: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
Message-ID: <40FEB9D8.3020708@ezabel.com>

You give callback the result to pass to the first callback in the 
deferred, why are you using a deferred for this? why not just 
reactor.callLater(3, checkForSanity) ?


Sergio Trejo wrote:

> I'm trying to be a good soldier by heeding the warning issued by the 
> Twisted gods warning strongly *not* to use defer.Deferred's 
> setTimeout() and instead using  reactor.callLater
>
> I've looked at the API for twisted.internet.defer.Deferred.callback 
> and twisted.internet.default.SelectReactor.callLater (which refers one 
> to see twisted.internet.interfaces.IReactorTime.callLater which I have 
> also read). I don't understand why at least one args object must 
> always be supplied to reactor.callLater, as in:
>
> reactor.callLater(3, d.callback, "an unused arg")
>
> even though the callback function:
>
> d.addCallback(checkForSanity)
>
> receives no args:
>
> def checkForSanity():
>     print "this is a sanity test"
>
> In order to get the reactor.callLater to perform the callback, I had 
> to pass in at least one arg:
>
> def checkForSanity(ignoreMe):
>     print "this is a sanity test"
> d = defer.Deferred()
> d.addCallback(checkForSanity)
> reactor.callLater(3, d.callback, "ignore me")
>
> There's sure to be a good reason why, perhaps something utterly 
> obvious to most but as a newbie I'm still trying to grok as much as 
> possible where needed. Thanks for any clarification.
>
> Serg
>
> _________________________________________________________________
> MSN 8 with e-mail virus protection service: 2 months FREE* 
> http://join.msn.com/?page=features/virus
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From radix at twistedmatrix.com  Wed Jul 21 12:48:20 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jul 2004 14:48:20 -0400
Subject: [Twisted-Python] Re:
In-Reply-To: <020001c46f20$a4e82390$6501a8c0@tradesoft.nl>
References: <utevncztthagddbcksg@twistedmatrix.com>
	<020001c46f20$a4e82390$6501a8c0@tradesoft.nl>
Message-ID: <40FEBA74.8060109@twistedmatrix.com>

Guyon Morée wrote:
> looks like someone's got a virus?

Someone, yes, but not me. It was a forgery. Not a great deal I can do 
about it. :-(

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040721/7ae32f79/attachment.sig>

From radix at twistedmatrix.com  Wed Jul 21 12:55:00 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jul 2004 14:55:00 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
In-Reply-To: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
References: <BAY12-F33khqntKrUV0000674a4@hotmail.com>
Message-ID: <40FEBC04.3040806@twistedmatrix.com>

Sergio Trejo wrote:
> There's sure to be a good reason why, perhaps something utterly obvious 
> to most but as a newbie I'm still trying to grok as much as possible 
> where needed. Thanks for any clarification.

*Deferreds* need a result, not callLater. As orbitz mentioned, 
reactor.callLater(3, checkForSanity) would work fine. d.callback, as 
well as all callbacks added to a Deferred with d.addCallback, always 
require at least one argument.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040721/8183a953/attachment.sig>

From projects at reedflute.com  Wed Jul 21 15:04:28 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 21 Jul 2004 23:04:28 +0200
Subject: [Twisted-Python] Notes on switching twisted to new	zope.interface
	code
In-Reply-To: <1090271234.10918.119.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
Message-ID: <40FEDA5C.2040607@reedflute.com>

Itamar Shtull-Trauring wrote:

>On Mon, 2004-07-19 at 16:31, Eugene Coetzee wrote:
>
>  
>
>>1) What is t.p.c  and 
>>    
>>
>
>twisted.python.components
>
>  
>
>>2) Why would one want to use Zope's interfaces in places of Twisted 
>>built-in interfaces
>>    
>>
>
>Next version of Twisted will use Zope's interfaces, so my comments were
>for developers so they can help port the code.
>
>  
>
Thanks for the clarification.

I am new to  Python, Twisted and Zope - so I guess I look at the world 
through my Perlish C++ tainted goggles :)

Just one or two comments - 30  000  feet from above.  I have noticed the 
introduction  of Zope interfaces in other projects as well where some 
developers are almost going bonkers with interfaces as "the new best 
thing" and where simple inheritance is being discarded in places where 
they should really be used. Don't think that is a good thing.      

IMHO - interfaces should be implented on the "boundries" of a component 
- i.e. those interfaces which form part of the API of a package. I get 
the impression that in Zope3 they are (ab)used to try and make an 
untyped language behave more like a typed language. This may work well 
in an app where performance is not a major issue - but in an networking 
framework  the abuse of interfaces may  lead to  an unnecessary and 
significant performance hit.

regards,

Eugene 
-- 
--
===============================================
Web                 -> www.reedflute.com
=============================================== 





From foom at fuhm.net  Wed Jul 21 16:50:07 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 21 Jul 2004 18:50:07 -0400
Subject: [Twisted-Python] Notes on switching twisted to new	zope.interface
	code
In-Reply-To: <40FEDA5C.2040607@reedflute.com>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<40FEDA5C.2040607@reedflute.com>
Message-ID: <50265466-DB68-11D8-80A0-000A95A50FB2@fuhm.net>

On Jul 21, 2004, at 5:04 PM, Eugene Coetzee wrote:
> I am new to  Python, Twisted and Zope - so I guess I look at the world 
> through my Perlish C++ tainted goggles :)
>
> Just one or two comments - 30  000  feet from above.  I have noticed 
> the introduction  of Zope interfaces in other projects as well where 
> some developers are almost going bonkers with interfaces as "the new 
> best thing" and where simple inheritance is being discarded in places 
> where they should really be used. Don't think that is a good thing.

One important thing to note: The zope interfaces package is not being 
used to replace inheritance (That already happened years ago). It is 
being used to replace the twisted interfaces module, which was slower 
and buggy. From my perspective the switch is an unambiguously good 
thing. The only issues are in the migration path. But that's mostly 
worked out now thanks to itamar.

Just in case what itamar said was too lengthy, here's the shortened 
version:

First -- all your old code *will continue to work with no changes*. 
However, to eliminate DeprecationWarnings and cause your code to be 
faster, make the following change:

   twisted.python.components.implements(o, IFoo) => IFoo.providedBy(o)
   class X(): __implements__ = IFoo, => class X(): 
zope.interface.implements(IFoo)

If you are modifying code in Twisted itself, you have to do slightly 
more, so that 3rd party classes relying on __implements__ to work will 
continue to function:

   twisted.python.components.implements(o, IFoo) => 
twisted.python.components.fixClassImplements(o.__class__); 
IFoo.providedBy(o)

   class X(): __implements__ = IFoo, => class X(): 
zope.interface.implements(IFoo); 
twisted.python.components.backwardsCompatImplements(X)

James




From foom at fuhm.net  Wed Jul 21 17:10:39 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 21 Jul 2004 19:10:39 -0400
Subject: [Twisted-Python] Notes on switching twisted to new	zope.interface
	code
In-Reply-To: <50265466-DB68-11D8-80A0-000A95A50FB2@fuhm.net>
References: <1090204764.10918.10.camel@sheriffpony>	<40FC2FBE.2050103@reedflute.com>
	<1090271234.10918.119.camel@sheriffpony>
	<40FEDA5C.2040607@reedflute.com>
	<50265466-DB68-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <2EB9525B-DB6B-11D8-80A0-000A95A50FB2@fuhm.net>

One more thing:

Before we have the next release of Twisted, all classes in Twisted that 
declare their implemented interfaecs using __implements__ *must* be 
replaced by the z.i.implements()/backwardsCompatImplements pair. If we 
don't do this, we can't tell third parties to use the zope.interfaces 
functionality directly.

The t.p.c.implements() should also be replaced in order to not have 
DeprecationWarnings spew from twisted itself, but that isn't quite so 
important.

James




From serj_trejo at hotmail.com  Wed Jul 21 22:34:24 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Thu, 22 Jul 2004 00:34:24 -0400
Subject: [Twisted-Python] reactor.callLater always requires args object?
Message-ID: <BAY12-F17YoiB5ANH2c0003cf9c@hotmail.com>

Much thanks orbitz and radix. Went down the wrong path on something subtle. 
I thought I had read in an example document, "d.callback" to the 
reactor.callLater() whereas it turns out to be "callback" and not 
"d.callback". I should have stopped and slept instead of going on sleepless 
fumes!

Cheers,

Sergio

>From: Christopher Armstrong <radix at twistedmatrix.com>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] reactor.callLater always requires args 
>object?
>Date: Wed, 21 Jul 2004 14:55:00 -0400
>
>Sergio Trejo wrote:
>>There's sure to be a good reason why, perhaps something utterly obvious to 
>>most but as a newbie I'm still trying to grok as much as possible where 
>>needed. Thanks for any clarification.
>
>*Deferreds* need a result, not callLater. As orbitz mentioned, 
>reactor.callLater(3, checkForSanity) would work fine. d.callback, as well 
>as all callbacks added to a Deferred with d.addCallback, always require at 
>least one argument.
>
>--
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
>---------+           http://radix.twistedmatrix.com/
><< signature.asc >>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From mesozoic at polynode.com  Thu Jul 22 11:48:39 2004
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 22 Jul 2004 13:48:39 -0400
Subject: [Twisted-Python] I, too, can be Radix (was Re: Re:)
In-Reply-To: <40FEBA74.8060109@twistedmatrix.com>
Message-ID: <E1BnhgN-00044M-00@perpetual.moxn.net>


On 7/21/2004, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:
>Guyon Morée wrote:
>> looks like someone's got a virus?
>
>Someone, yes, but not me. It was a forgery. Not a great deal I can do
>about it. :-(


Well, you could always hack mailman to only accept email from people with
the proper names associated with their email addresses, so that
"Radix" <radix at ...> gets rejected but "Christopher Armstrong"
<radix at ...> doesn't.

I know, it's an awful idea, but wouldn't it be fun? :)



--
Alex Levy
WWW: http://mesozoic.geecs.org

"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From corydodt at twistedmatrix.com  Thu Jul 22 17:32:41 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 22 Jul 2004 16:32:41 -0700
Subject: [Twisted-Python] I, too, can be Radix (was Re: Re:)
In-Reply-To: <E1BnhgN-00044M-00@perpetual.moxn.net>
References: <E1BnhgN-00044M-00@perpetual.moxn.net>
Message-ID: <41004E99.7060306@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm kind of surprised the spoofers don't already do this.  It had to have seen
the list already to know what addresses are on it--surely it can get a
properly formatted name from the same source.

C


Alex Levy wrote:
| On 7/21/2004, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:
|
|>Guyon Morée wrote:
|>
|>>looks like someone's got a virus?
|>
|>Someone, yes, but not me. It was a forgery. Not a great deal I can do
|>about it. :-(
|
|
|
| Well, you could always hack mailman to only accept email from people with
| the proper names associated with their email addresses, so that
| "Radix" <radix at ...> gets rejected but "Christopher Armstrong"
| <radix at ...> doesn't.
|
| I know, it's an awful idea, but wouldn't it be fun? :)
|
|
|
| --
| Alex Levy
| WWW: http://mesozoic.geecs.org
|
| "Never let your sense of morals prevent you from doing what is right."
|  -- Salvor Hardin, Isaac Asimov's _Foundation_
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBAE6Z3A5SrXAiHQcRAvdiAJ4h6BLysktpCeZ7vUP19IgCoxWyaQCePwSa
TrEwvMIdeof1+caHdHvwHRM=
=JH5z
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Thu Jul 22 20:08:39 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 23 Jul 2004 12:08:39 +1000
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <1090204764.10918.10.camel@sheriffpony>
References: <1090204764.10918.10.camel@sheriffpony>
Message-ID: <20040723020839.GB30670@frobozz>

On Sun, Jul 18, 2004 at 10:39:24PM -0400, Itamar Shtull-Trauring wrote:
[...]
> 3. Basically all of t.p.c is deprecated except for registerAdapter and
> the other APIs that talk to registry. Componentized is not, in theory,
> but hopefully will be replaced soon.

4. If you use zope.interface.providedBy, and you want to work with code that
might not have been updated yet, call components.fixClassImplements, e.g.:

    components.fixClassImplements(obj)
    for i in interface.providedBy(obj):
        ...

I just fixed a bug in newcred where it didn't do this, so it broke a bunch
of PB tests.  Please be careful to test your changes work with old classes
that still use __implements__, not to mention make sure you run the test
suite!

-Andrew.




From andrew-twisted at puzzling.org  Thu Jul 22 20:13:37 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 23 Jul 2004 12:13:37 +1000
Subject: [Twisted-Python] Notes on switching twisted to new zope.interface
	code
In-Reply-To: <20040723020839.GB30670@frobozz>
References: <1090204764.10918.10.camel@sheriffpony>
	<20040723020839.GB30670@frobozz>
Message-ID: <20040723021337.GC30670@frobozz>

On Fri, Jul 23, 2004 at 12:08:39PM +1000, Andrew Bennetts wrote:
> 
> 4. If you use zope.interface.providedBy, and you want to work with code that
> might not have been updated yet, call components.fixClassImplements, e.g.:
> 
>     components.fixClassImplements(obj)

Oops!  This line should've read:

    components.fixClassImplements(obj.__class__)

-Andrew.




From foom at fuhm.net  Fri Jul 23 07:38:56 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 23 Jul 2004 09:38:56 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <E1BntCZ-00078p-00@wolfwood>
References: <E1BntCZ-00078p-00@wolfwood>
Message-ID: <A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>

Wait, wait, that causes *hangs*? That seems like a bad thing. It 
doesn't look like an obviously wrong thing to do to me. Do you know 
*why* it's hanging?

James

On Jul 23, 2004, at 2:06 AM, Andrew Bennetts wrote:
> warner and I agree that this test wasn't testing any useful behaviours 
> that
> anything could actually depend upon, and it causes far too many 
> intermittent
> test failures (and even hangs!)

> -class PausingProcessProtocol(protocol.ProcessProtocol):
> -
> -    data = ""
> -    elapsed = None
> -
> -    def connectionMade(self):
> -        self.transport.pauseProducing()
> -        self.transport.write("a")
> -        reactor.callLater(2, self.transport.resumeProducing)
> -
> -    def outReceived(self, d):
> -        self.data += d
> -
> -    def processEnded(self, reason):
> -        self.data = self.data.lstrip("a")
> -        if len(self.data) != 5:
> -            self.elapsed = ValueError  # XXX!
> -        else:
> -            self.elapsed = float(self.data)
> -
[...]
> -
> -    def testPausing(self):
> -        exe = sys.executable
> -        scriptPath = util.sibpath(__file__, "process_pausing.py")
> -        p = PausingProcessProtocol()
> -        reactor.spawnProcess(p, exe, [exe, "-u", scriptPath], 
> env=None)
> -        while p.elapsed == None:
> -            reactor.iterate(0.01)
> -        self.failIfEqual(p.elapsed, ValueError, 'Child process wrote 
> garbage')
> -        self.assert_(2.1 > p.elapsed > 1.5) # assert how long process 
> was paused




From andrew-twisted at puzzling.org  Fri Jul 23 08:07:23 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 24 Jul 2004 00:07:23 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <20040723140723.GE30670@frobozz>

On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
> Wait, wait, that causes *hangs*? That seems like a bad thing. It 
> doesn't look like an obviously wrong thing to do to me. Do you know 
> *why* it's hanging?

I'm not sure why it's hanging, and I'd be happy for someone to figure out
why.  Ideally they'd fix the problem too, if there is one.

My suspicion is that the bug is in that test, not in Twisted, though.  The
process_pausing.py script itself is far too ugly to have any confidence in.
It tries to detect that writes to stdout block by looking at times, which is
extremely fragile.  Worse, detecting that writing to stdout blocks doesn't
necessarily prove anything anyway: the intention (presumably, the test has
no comments) is apparently to test that pauseProducing on a transport will
cause pipes from a child process to be unread and hence let the buffers
fill.  But the child process could just as easily be finding that the writes
are blocking because it's simply writing more frequently than the parent is
reading, e.g. due to scheduling anomalies... 

I'm also not aware of any real world reports of problems with the process
code hanging, despite the test being pretty prone to intermittent failure,
which is also highly suggestive that the test is broken, not the code.

I also have difficulty imagining a scenario which would rely upon this
behaviour.  The OS is free to buffer writes to pipes as much as it wants,
even if the other end is unread, so this isn't something that can be
portably relied on to give any useful information.  If the parent really
wants to signal to the child that it should behave differently, then ought
to tell that to the child directly, either via a message down a pipe, or a
signal, or some other channel.  Relying upon indirect side-effects doesn't
strike me as a good practice.

In short: the test's intention is undocumented, and appears to be testing
something fundamentally unuseful, and is contributing zero additional
confidence in the code base by being in the test suite, but is contributing
a considerable amount of noise on the buildbot due to failures that are more
than likely spurious.  We're better off without it.

-Andrew.




From itamar at itamarst.org  Fri Jul 23 08:41:51 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Jul 2004 10:41:51 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <1090593711.22742.10.camel@sheriffpony>

On Fri, 2004-07-23 at 10:07, Andrew Bennetts wrote:

> In short: the test's intention is undocumented, and appears to be testing
> something fundamentally unuseful, 

We need to test that Process transports have pause/resumeProducing,
since this is part of the interface and e.g. CGI depends on it. I don't
remember if I specifically wrote this test, but we do need *something*.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From foom at fuhm.net  Fri Jul 23 09:02:02 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 23 Jul 2004 11:02:02 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <410F6486-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>

Sigh I probably ought to have read the process_pausing.py script, too. 
:) I was wrongly assuming it was just doing something nice and simple. 
Anyhow, I can see how it could easily cause spurious failures, as it's 
depending on the process scheduling doing *just* what it wants, which 
is obviously unreliable.

That it hangs is still a bad thing, since even if the timing is wrong, 
it oughtn't be hanging.
...
But I have traced down the problem:
"if len(self.data) != 5: raise ValueError"
Apparently, the exception raised from inside processEnded just gets 
eaten somewhere instead of raised back through to the test framework. 
Thus, if the test takes more than 9.999 seconds to complete, it will 
raise an exception and not set self.elapsed. Then, the test will sit in 
the reactor.iterate loop forever waiting for self.elapsed to be set.

Okay, I'm satisfied the error was completely in the test. However, it 
does now seem that pauseProducing isn't tested at all.

James

On Jul 23, 2004, at 10:07 AM, Andrew Bennetts wrote:

> On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
>> Wait, wait, that causes *hangs*? That seems like a bad thing. It
>> doesn't look like an obviously wrong thing to do to me. Do you know
>> *why* it's hanging?
>
> I'm not sure why it's hanging, and I'd be happy for someone to figure 
> out
> why.  Ideally they'd fix the problem too, if there is one.
>
> My suspicion is that the bug is in that test, not in Twisted, though.  
> The
> process_pausing.py script itself is far too ugly to have any 
> confidence in.
> It tries to detect that writes to stdout block by looking at times, 
> which is
> extremely fragile.  Worse, detecting that writing to stdout blocks 
> doesn't
> necessarily prove anything anyway: the intention (presumably, the test 
> has
> no comments) is apparently to test that pauseProducing on a transport 
> will
> cause pipes from a child process to be unread and hence let the buffers
> fill.  But the child process could just as easily be finding that the 
> writes
> are blocking because it's simply writing more frequently than the 
> parent is
> reading, e.g. due to scheduling anomalies...
>
> I'm also not aware of any real world reports of problems with the 
> process
> code hanging, despite the test being pretty prone to intermittent 
> failure,
> which is also highly suggestive that the test is broken, not the code.
>
> I also have difficulty imagining a scenario which would rely upon this
> behaviour.  The OS is free to buffer writes to pipes as much as it 
> wants,
> even if the other end is unread, so this isn't something that can be
> portably relied on to give any useful information.  If the parent 
> really
> wants to signal to the child that it should behave differently, then 
> ought
> to tell that to the child directly, either via a message down a pipe, 
> or a
> signal, or some other channel.  Relying upon indirect side-effects 
> doesn't
> strike me as a good practice.
>
> In short: the test's intention is undocumented, and appears to be 
> testing
> something fundamentally unuseful, and is contributing zero additional
> confidence in the code base by being in the test suite, but is 
> contributing
> a considerable amount of noise on the buildbot due to failures that 
> are more
> than likely spurious.  We're better off without it.
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From foom at fuhm.net  Fri Jul 23 09:05:55 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 23 Jul 2004 11:05:55 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <CC1496D7-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>


On Jul 23, 2004, at 10:07 AM, Andrew Bennetts wrote:

> On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
>> Wait, wait, that causes *hangs*? That seems like a bad thing. It
>> doesn't look like an obviously wrong thing to do to me. Do you know
>> *why* it's hanging?
>
> I'm not sure why it's hanging, and I'd be happy for someone to figure 
> out
> why.  Ideally they'd fix the problem too, if there is one.

Ugh, you *did* know why it was hanging... just saw the commits where it 
was already fixed. ;) Sigh, oh well. :)

James




From andrew-twisted at puzzling.org  Fri Jul 23 19:27:24 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 24 Jul 2004 11:27:24 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <CC1496D7-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<CC1496D7-DCB9-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <20040724012724.GF30670@frobozz>

On Fri, Jul 23, 2004 at 11:05:55AM -0400, James Y Knight wrote:
> 
> On Jul 23, 2004, at 10:07 AM, Andrew Bennetts wrote:
> 
> >On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
> >>Wait, wait, that causes *hangs*? That seems like a bad thing. It
> >>doesn't look like an obviously wrong thing to do to me. Do you know
> >>*why* it's hanging?
> >
> >I'm not sure why it's hanging, and I'd be happy for someone to figure 
> >out
> >why.  Ideally they'd fix the problem too, if there is one.
> 
> Ugh, you *did* know why it was hanging... just saw the commits where it 
> was already fixed. ;) Sigh, oh well. :)

No, I didn't know (you're referring to the "raise ValueError" problem I
fixed, I presume).  It hung again even after I fixed that!

-Andrew.




From andrew-twisted at puzzling.org  Fri Jul 23 19:30:05 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 24 Jul 2004 11:30:05 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r11107 - Delete
	fundamentally broken test.
In-Reply-To: <1090593711.22742.10.camel@sheriffpony>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<1090593711.22742.10.camel@sheriffpony>
Message-ID: <20040724013005.GG30670@frobozz>

On Fri, Jul 23, 2004 at 10:41:51AM -0400, Itamar Shtull-Trauring wrote:
> On Fri, 2004-07-23 at 10:07, Andrew Bennetts wrote:
> 
> > In short: the test's intention is undocumented, and appears to be testing
> > something fundamentally unuseful, 
> 
> We need to test that Process transports have pause/resumeProducing,
> since this is part of the interface and e.g. CGI depends on it. I don't
> remember if I specifically wrote this test, but we do need *something*.

If we want to test the interface is implemented, then use
IProducer.implementedBy and zope.interface.verify.verifyClass.

If we want to test the behaviour (and I agree it'd be nice), someone needs
to figure out a better test :)

-Andrew.




From paolo_veronelli at yahoo.it  Sat Jul 24 10:08:24 2004
From: paolo_veronelli at yahoo.it (paolo veronelli)
Date: Sat, 24 Jul 2004 18:08:24 +0200
Subject: [Twisted-Python] proxy question
Message-ID: <opsbnggacjdgjose@mail.yahoo.it>

I'm behind a proxy.How should  I use twisted.web.client.getPage as a wget 
clone?
				Thnx Paolino
-- 
....lotta dura  per la verdura




From radix at twistedmatrix.com  Sun Jul 25 11:28:31 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 25 Jul 2004 13:28:31 -0400
Subject: [Twisted-Python] reconnecting ConnectionPools
Message-ID: <4103EDBF.9020003@twistedmatrix.com>

In my client's app we've been having problems with database connections 
going down; so far if that happens we need to restart the server to 
reconnect to the DB. I looked at adbapi's implementation and noticed 
that it wasn't doing anything special to notice lost connections. Then I 
realized DBAPI2 doesn't actually specify a way to tell whether your 
connection has gone down.

I've been trying to think of a way to at least work around this on a 
per-app basis -- mine is using psycopg. It just raises either a 
ProgrammingError or an OperationalError on cursor.execute. The brightest 
idea we've come up with is to reconnect after N (~ 3) consecutive errors.

Any other ideas?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040725/8dc9d015/attachment.sig>

From itamar at itamarst.org  Sun Jul 25 13:41:59 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 25 Jul 2004 15:41:59 -0400
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <4103EDBF.9020003@twistedmatrix.com>
References: <4103EDBF.9020003@twistedmatrix.com>
Message-ID: <1090784518.26778.52.camel@sheriffpony>

On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:

> I've been trying to think of a way to at least work around this on a 
> per-app basis -- mine is using psycopg. It just raises either a 
> ProgrammingError or an OperationalError on cursor.execute. The brightest 
> idea we've come up with is to reconnect after N (~ 3) consecutive errors.
> 
> Any other ideas?

Upon errors, test a command that will always work ("SELECT 1"), if that
fails reconnect.




From ibmub80 at yahoo.com  Sun Jul 25 14:31:58 2004
From: ibmub80 at yahoo.com (Ibrahim Mubarak)
Date: Sun, 25 Jul 2004 13:31:58 -0700 (PDT)
Subject: [Twisted-Python] Writing a plug-in for an online game that uses UDP
Message-ID: <20040725203158.27976.qmail@web50903.mail.yahoo.com>

Hi,

I am currently writing a server prototype for an online game called "If I Were U" (GPL). It will
be using UDP and a MySQL db. I was successful in writing the code as a plug-in. I love the idea of
being able to seperate in different files the levels of abstraction. But I am not sure of how to
go about the following:
I have an iiwuServer class derived from DatagramProtocol. I defined the datagramReceived method.
This method calls one of my other classes's methods which returns a deferred object (this is where
the connection to the db happens). I am trying to set the callback function for this deferred
object and I want it to be a method of iiwuServer as I need to access the transport member object
which in its turn writes out a datagram to the client. And I am not sure how to set up the
callbackArgs for it (the "self" argument for methods is where I am confused).

What am I doing wrong?

Also, if you have a couple of minutes, can u look at my other three code segments (found after the
iiwuServer) and tell me if you see anything that should be changed. Don't worry, the code is not
that long. The thing is that in the documentation, each part (UDP, plug-in, deferred, etc...) are
very well explained. But when I tried to put all that together, I got a little confused as I did
not see any examples of UDP plug-ins or more complex deferred callback functions.

All these segments are actually files in a folder called UDPServer. If you prefer that I send you
the directory tarred and zipped, let me know. All that is left out is the empty __init__.py file
in the folder.

Thanks a lot,
Ib
http://www.iiwu.org

Here is the code for the protocol (file name: iiwuserverprotocol.py):
////////CODE START\\\\\\\\
############################
##This is where the UDP packets are recieved and then sent to the server logic
############################
from twisted.internet.protocol import DatagramProtocol
from UDPServer import iiwuserverlogic

class iiwuServer(DatagramProtocol):
    iiwuservice = iiwuserverlogic.LoginService()
    def sendingOutput(self, result, host, port):
        """
            A callback for the deferred object returned
        """
        self.transport.write(str(result) + "\n" + str(self) + "\n", (host, port))
        return
    
    def datagramReceived(self, data, (host, port)):
        msg = data.split()
        if len(msg) != 1 and len(msg) != 3:
            self.sendingOutput("error" , host, port)
            return
        
        if msg[0] == "log" and len(msg) == 3:
            user = msg[1]
            pswd = msg[2]
            self.iiwuservice.logUser(user, pswd, host, port).addCallback(self.sendingOutput(self,
host, port))
            return 
        
        if msg[0] == "get":
            self.iiwuservice.loggedUsers().addCallback(self.sendingOutput(self, host, port))
            return 
            
        return    
\\\\\\\\CODE END////////

Here is the code for the server's logic (file name: iiwuserverlogic.py):
////////CODE START\\\\\\\\
##############################
##This is where all the logic of the server lies
##############################
from twisted.python import components
from twisted.enterprise import adbapi 
class IService(components.Interface):
    """
        An object that recieves messages.
    """

class LoginService:
    """
        Respond to different messages
    """
    __implements__ = IService

    def __init__(self):
        """
            Setting up the db connection pool
        """
        self.dbpool = adbapi.ConnectionPool("MySQLdb", 'database_name', 'login', 'password')
        return
        
    def mysqlQuery(self, q):
        """
            Run a MySql query and return the result
        """
        result = self.dbpool.runQuery(q)
        return result  #Returning a Deferred object
        
    def logUser(self, name, pswd, ip, port):
        """
            Connects to the DB and logs the user, returning nothing
        """
        query = "INSERT INTO users (name, pswd, ip, port) VALUES (%s, %s, %s, %s)" % (name, pswd,
ip, port)
        return self.mysqlQuery(query)
        
    def loggedUsers(self):
        """
            Connects to the DB and returns a list of the users logged in
        """
        query = "SELECT * FROM users"
        return self.mysqlQuery(query)
\\\\\\\\CODE END////////

Here is the code for the tap construction (file name: servertap.py):
////////CODE START\\\\\\\\
from twisted.application import internet    # services that run TCP/SSL/etc.
from UDPServer import iiwuserverprotocol    # Protocol
from UDPServer import iiwuserverlogic       # Server code
from twisted.python import usage            # twisted command-line processing

class Options(usage.Options):
    """
        Defining options when building the application
    """
    optParameters = [["port", "p", 8007, "Port number to listen on for iiwuServer protocol."]]

def makeService(config):
    """
        Return a service that will be attached to the application.
    """
    protocol = iiwuserverprotocol.iiwuServer()
    port = int(config["port"])          # UCP port to listen on
    # Finally, set up our protocol when events arrive on the specified port
    return internet.UDPServer(port, protocol)
\\\\\\\\CODE END////////

Finally, here is the plugins.tml file:
////////CODE START\\\\\\\\
register("IIWU Server TAP Builder",
         "UDPServer.servertap",
         description="""
         IIWU TAP builder module.
         """            ,
         type="tap",
         tapname="iiwuserv")
\\\\\\\\CODE END////////



	
		
__________________________________
Do you Yahoo!?
New and Improved Yahoo! Mail - 100MB free storage!
http://promotions.yahoo.com/new_mail 



From dave at krondo.com  Sun Jul 25 15:46:34 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 25 Jul 2004 14:46:34 -0700
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <1090784518.26778.52.camel@sheriffpony>
References: <4103EDBF.9020003@twistedmatrix.com>
	<1090784518.26778.52.camel@sheriffpony>
Message-ID: <1090791994.1830.12.camel@oneiros>

On Sun, 2004-07-25 at 12:41, Itamar Shtull-Trauring wrote:
> On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:
> 
> > I've been trying to think of a way to at least work around this on a 
> > per-app basis -- mine is using psycopg. It just raises either a 
> > ProgrammingError or an OperationalError on cursor.execute. The brightest 
> > idea we've come up with is to reconnect after N (~ 3) consecutive errors.
> > 
> > Any other ideas?
> 
> Upon errors, test a command that will always work ("SELECT 1"), if that
> fails reconnect.

The test command should be easily overridden.
You would think all db's would support 'select 1',
but they don't. On Oracle, for example, you would
need 'select 1 from dual'.

dave





From radix at twistedmatrix.com  Sun Jul 25 16:49:01 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 25 Jul 2004 18:49:01 -0400
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <1090791994.1830.12.camel@oneiros>
References: <4103EDBF.9020003@twistedmatrix.com>	<1090784518.26778.52.camel@sheriffpony>
	<1090791994.1830.12.camel@oneiros>
Message-ID: <410438DD.8040307@twistedmatrix.com>

Dave Peticolas wrote:
> On Sun, 2004-07-25 at 12:41, Itamar Shtull-Trauring wrote:
> 
>>On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:
>>
>>
>>>I've been trying to think of a way to at least work around this on a 
>>>per-app basis -- mine is using psycopg. It just raises either a 
>>>ProgrammingError or an OperationalError on cursor.execute. The brightest 
>>>idea we've come up with is to reconnect after N (~ 3) consecutive errors.
>>>
>>>Any other ideas?
>>
>>Upon errors, test a command that will always work ("SELECT 1"), if that
>>fails reconnect.
> 
> 
> The test command should be easily overridden.
> You would think all db's would support 'select 1',
> but they don't. On Oracle, for example, you would
> need 'select 1 from dual'.

Hmm, but can we put this functionality in adbapi? Maybe with an __init__ 
flag, cp_detectConnectionLost?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040725/aedba532/attachment.sig>

From dave at krondo.com  Sun Jul 25 18:48:37 2004
From: dave at krondo.com (Dave Peticolas)
Date: Sun, 25 Jul 2004 17:48:37 -0700
Subject: [Twisted-Python] reconnecting ConnectionPools
In-Reply-To: <410438DD.8040307@twistedmatrix.com>
References: <4103EDBF.9020003@twistedmatrix.com>
	<1090784518.26778.52.camel@sheriffpony>
	<1090791994.1830.12.camel@oneiros>
	<410438DD.8040307@twistedmatrix.com>
Message-ID: <1090802917.1830.15.camel@oneiros>

On Sun, 2004-07-25 at 15:49, Christopher Armstrong wrote:
> Dave Peticolas wrote:
> > On Sun, 2004-07-25 at 12:41, Itamar Shtull-Trauring wrote:
> > 
> >>On Sun, 2004-07-25 at 13:28, Christopher Armstrong wrote:
> >>
> >>
> >>>I've been trying to think of a way to at least work around this on a 
> >>>per-app basis -- mine is using psycopg. It just raises either a 
> >>>ProgrammingError or an OperationalError on cursor.execute. The brightest 
> >>>idea we've come up with is to reconnect after N (~ 3) consecutive errors.
> >>>
> >>>Any other ideas?
> >>
> >>Upon errors, test a command that will always work ("SELECT 1"), if that
> >>fails reconnect.
> > 
> > 
> > The test command should be easily overridden.
> > You would think all db's would support 'select 1',
> > but they don't. On Oracle, for example, you would
> > need 'select 1 from dual'.
> 
> Hmm, but can we put this functionality in adbapi? Maybe with an __init__ 
> flag, cp_detectConnectionLost?

Yeah, that shouldn't be too hard.

dave





From exarkun at divmod.com  Sun Jul 25 19:50:24 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 25 Jul 2004 21:50:24 -0400
Subject: [Twisted-Python] Writing a plug-in for an online game that uses
	UDP
In-Reply-To: <20040725203158.27976.qmail@web50903.mail.yahoo.com>
References: <20040725203158.27976.qmail@web50903.mail.yahoo.com>
Message-ID: <41046360.7030005@divmod.com>

Ibrahim Mubarak wrote:
> Hi,
> 
> [snip]
>     def sendingOutput(self, result, host, port):
>         """
>             A callback for the deferred object returned
>         """
>         self.transport.write(str(result) + "\n" + str(self) + "\n", (host, port))
>         return
>     
>     def datagramReceived(self, data, (host, port)):
>         msg = data.split()
>         if len(msg) != 1 and len(msg) != 3:
>             self.sendingOutput("error" , host, port)
>             return
>         
>         if msg[0] == "log" and len(msg) == 3:
>             user = msg[1]
>             pswd = msg[2]
>             self.iiwuservice.logUser(user, pswd, host, port).addCallback(self.sendingOutput(self,
> host, port))

   The above line is a problem.  I believe you want it to read:

     self.iiwuservice.logUser(user, pswd, host, port
         ).addCallback(self.sendingOutput, host, port
         )

   You cannot put self.sendingOutput(self, host, port) directly in the 
arguments list, because Python would treat it like any other function 
call: call it, and then use the return value as the argument to 
addCallback().  In general,

     d.addCallback(f, *a, **kw)

   will lead to Twisted invoking f like this:

     f(result, *a, **kw)

   where result is the value with which the Deferred eventually fires.

   Jp



From Bosnjak at iskratel.si  Mon Jul 26 09:13:37 2004
From: Bosnjak at iskratel.si (Bosnjak Zoran    ITWEP)
Date: Mon, 26 Jul 2004 17:13:37 +0200
Subject: [Twisted-Python] reconnecting from the client
Message-ID: <57D0409C9DC47A4B936406AC1788FA0001679CCD@ntmailkr.iskratel.si>

Hello,
in my simple client I need a mechanism for reconnecting to the server:

1. If the server is not responding at the momment, the client should keep trying to connect
2. If the connection once become active and the server is restarted, the client should reconnect
3. If the connection is active and no data can be transmited / received for X seconds (link down, router down),
   the client should try to reconnect as in the case (1.) (as if the client has never been connected)
   It should react in less then 10 seconds.

Unfortunately I can not detect the situation (3.). If I unplug the ethernet while connected, none of my methods is called (ever).
I couldn't find anything like this in the documentation or in the examples.

Here is my testfile:
--------------
from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.internet import reactor

class Echo(Protocol):
    def dataReceived(self, data):
        print data

    def connectionLost(self, reason):
        print 'connection lost', reason

    def connectionMade(self):
        reactor.callLater(1.0, self.ping)
        print 'connection made'

    def ping(self, *args):
        self.transport.write('test')
        reactor.callLater(1.0, self.ping)

class EchoClientFactory(ReconnectingClientFactory):
    maxDelay = 3
    def startedConnecting(self, connector):
        print 'started to connect'

    def buildProtocol(self, addr):
        print 'connected'
        self.resetDelay()
        return Echo()

    def clientConnectionLost(self, connector, reason):
        print 'lost connection', reason
        ReconnectingClientFactory.clientConnectionLost(self, connector, reason)

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed', reason
        ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)

reactor.connectTCP('10.10.2.77', 23, EchoClientFactory())
reactor.run()

--------------

regards,
Zoran Bosnjak




From ibmub80 at yahoo.com  Mon Jul 26 12:01:36 2004
From: ibmub80 at yahoo.com (Ibrahim Mubarak)
Date: Mon, 26 Jul 2004 11:01:36 -0700 (PDT)
Subject: [Twisted-Python] Writing a plug-in for an online game that uses
	UDP
In-Reply-To: <41046360.7030005@divmod.com>
Message-ID: <20040726180136.17421.qmail@web50904.mail.yahoo.com>

--- Jp Calderone <exarkun at divmod.com> wrote:
> Ibrahim Mubarak wrote:
> >             self.iiwuservice.logUser(user, pswd, host,
> port).addCallback(self.sendingOutput(self,
> > host, port))
> 
>    The above line is a problem.  I believe you want it to read:

You are 100% right. I can't believe I made that mistake as I was reading the docs when writing
this, hehe. But now I have another problem. This time is with the callback function never being
called.
Here is a small script that I worte and executed it with "...$ python deferredExample.py" :
////////CODE START\\\\\\\\
from twisted.enterprise import adbapi
dbpool = adbapi.ConnectionPool("MySQLdb", 'iiwu_database', 'login', 'password')
def getUserData(user):
    return dbpool.runQuery("SELECT name, pswd, ip, port FROM users WHERE name = ?", user)

def printResult(l):
    if l:
        print l[0][0]
    else:
        print "No such user"

def printError(failure):
    import sys
    sys.stderr.write(str(failure))
        
getUserData("ib").addCallback(printResult).addErrback(printError)
print "\nEND OF FILE\n"
\\\\\\\\CODE END////////
I do see the "END OF FILE" printed, but that's it. Do you have any idea what is going on?

Thanks,
ib


		
_______________________________
Do you Yahoo!?
Express yourself with Y! Messenger! Free. Download now. 
http://messenger.yahoo.com



From projects at reedflute.com  Mon Jul 26 12:40:34 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Mon, 26 Jul 2004 20:40:34 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
Message-ID: <41055022.3050506@reedflute.com>

Hi,

I'm using Twisted in an industrial application to replace a 
multi-threaded C++ driver which I developed some time ago to drive an 
array of serial ports (COM port expander) simultaneously. This is quite 
a typical application found in industrial control, building 
security/access control systems,  etc.  where an extended multi-drop 
serial  protocol like RS485/422 is used together with a standard message 
format such as Modbus to do remote data aquisition and control of 
embedded devices.

These kind of systems make use of what is refered  to as a master/slave 
serial driver i.e. there is only one master (typically a PC)  and a 
slave device may only respond to polls from the master.

My aim is to create a new Twisted package - say twisted.industrial  - 
which I hope contribute to the  Twisted platform.  I want to achieve 
this by extending Twisted  without modifying any Twisted sources, 
reusing as much as possible of existing Twisted code and * doing things 
very much the "Twisted way" * :)

The main problem is that most of Twisted's base classes seems to  have 
TCP/UDP network connectivity in mind.

I have managed to subclass SelectReactor in order to create 
SerialSelectReactor, base.BaseConnector to create SerialConnector, 
SerialPort to create ExtendedSerialPort  and I have the following piece 
of code working. 

***********************************************************
if __name__=='__main__':
        from serialreactor import serialreactor
        factory = ModbusFactory()
        factory.protocol=Modbus()
        serialreactor.connectSerial('/dev/ttyS0',9600,factory)
        print "start reactor"
        serialreactor.run()
        print "exit reactor"
***********************************************************

This is good but I want to run more than one serialport (or serial 
protocol) simultaneously - i.e I need to drive up to 64 serial ports at 
the same time. I believe I need  to do something like:

************************************************************
if __name__=='__main__':
        from serialapplication import SerialClient,service
        application=service.Application('Serial',uid=1,gid=1)
        factory = ModbusFactory()
        factory.protocol=Modbus()
        print "start client"
        
internet.SerialClient(79,factory).setServiceParent(service.IServiceCollection(app
lication))
        print "exit client"
**************************************************************

But I'm finding difficulty in grasping the code in application.internet 
(do not understand why it was done like that)  since I want to subclass 
_AbstractClient which is  seems to be  the product of some clever text 
manipulation and dynamic "class creation".

Any comments, suggestions, recommendations  and am I one the right track?

regards,

Eugene







From itamar at itamarst.org  Mon Jul 26 14:43:38 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jul 2004 16:43:38 -0400
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <41055022.3050506@reedflute.com>
References: <41055022.3050506@reedflute.com>
Message-ID: <1090874618.30836.0.camel@sheriffpony>

Please take a look at twisted.internet.serial and see if it meets your
needs?




From projects at reedflute.com  Mon Jul 26 16:05:57 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 27 Jul 2004 00:05:57 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <1090874618.30836.0.camel@sheriffpony>
References: <41055022.3050506@reedflute.com>
	<1090874618.30836.0.camel@sheriffpony>
Message-ID: <41058045.4070204@reedflute.com>

Itamar Shtull-Trauring wrote:

>Please take a look at twisted.internet.serial and see if it meets your
>needs?
>
>
>  
>
twisted.internet.serial is a wrapper for pyserial.

I'm already using SerialPort from twisted.internet.serial but I want to 
wire it so that it works like the rest of a typical Twisted app with a 
factory container and reactor like event loop.

regards,

Eugene




From sam at couter.dropbear.id.au  Mon Jul 26 18:41:22 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Tue, 27 Jul 2004 10:41:22 +1000
Subject: [Twisted-Python] Writing a plug-in for an online game that uses
	UDP
In-Reply-To: <20040726180136.17421.qmail@web50904.mail.yahoo.com>
References: <41046360.7030005@divmod.com>
	<20040726180136.17421.qmail@web50904.mail.yahoo.com>
Message-ID: <20040727004122.GB13599@yosamite.tekno.house>

Ibrahim Mubarak <ibmub80 at yahoo.com> wrote:
> ////////CODE START\\\\\\\\
> from twisted.enterprise import adbapi
> dbpool = adbapi.ConnectionPool("MySQLdb", 'iiwu_database', 'login', 'password')

[ ... ]

> getUserData("ib").addCallback(printResult).addErrback(printError)
> print "\nEND OF FILE\n"
> \\\\\\\\CODE END////////
> I do see the "END OF FILE" printed, but that's it. Do you have any idea what is going on?

The dbpool isn't started unless you start the dbpool directly with
dbpool.start() or start the reactor with reactor.run(). Either way, if
you want your script to terminate after you get your results, you should
add another callback that calls dbpool.stop() or reactor.stop().
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040727/e2047004/attachment.sig>

From sam at couter.dropbear.id.au  Mon Jul 26 18:49:03 2004
From: sam at couter.dropbear.id.au (Sam Couter)
Date: Tue, 27 Jul 2004 10:49:03 +1000
Subject: [Twisted-Python] reconnecting from the client
In-Reply-To: <57D0409C9DC47A4B936406AC1788FA0001679CCD@ntmailkr.iskratel.si>
References: <57D0409C9DC47A4B936406AC1788FA0001679CCD@ntmailkr.iskratel.si>
Message-ID: <20040727004903.GC13599@yosamite.tekno.house>

Bosnjak Zoran    ITWEP <Bosnjak at iskratel.si> wrote:
> 3. If the connection is active and no data can be transmited / received for X seconds (link down, router down),
>    the client should try to reconnect as in the case (1.) (as if the client has never been connected)
>    It should react in less then 10 seconds.
> 
> Unfortunately I can not detect the situation (3.). If I unplug the ethernet while connected, none of my methods is called (ever).
> I couldn't find anything like this in the documentation or in the examples.

This isn't a Twisted thing, it's a TCP thing. When you unplug your
ethernet cable, packets start to silently fall on the floor. It's only
after the TCP layer times out without seeing expected ACK packets that
it'll consider the connection lost. Up until that point, it just thinks
the connection has high latency that's getting higher all the time.

The TCP timeout is often set at several minutes. If you want a ten
second response to lost packets, you should implement some kind of ping
and/or timeout mechanism yourself, on top of TCP.

A router busted in the appropriate way will send ICMP host unreachable
or network unreachable messages, and the TCP layer will be able to
immediately detect a connection broken in this way.

Your operating system may provide a way of tuning TCP connection
parameters, in which case you may be able to get the TCP timeout down to
ten seconds. Expect lots of broken connections. I'm not sure if that
would violate the various TCP RFCs either.
-- 
Sam "Eddie" Couter  |  mailto:sam at couter.dropbear.id.au
Debian Developer    |  mailto:eddie at debian.org
                    |  jabber:sam at teknohaus.dyndns.org
OpenPGP fingerprint:  A46B 9BB5 3148 7BEA 1F05  5BD5 8530 03AE DE89 C75C
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040727/d4cfa354/attachment.sig>

From abe at fettig.net  Mon Jul 26 20:39:28 2004
From: abe at fettig.net (Abe Fettig)
Date: Mon, 26 Jul 2004 22:39:28 -0400
Subject: [Twisted-Python] ANN: Hep 0.5, Yarn 0.1
Message-ID: <4105C060.3000508@fettig.net>

I've got a new release of Hep available at 
http://www.fettig.net/projects/hep/.  For those unfamiliar with it, Hep 
is a mutliprotocol message server.  It provides a proxy/translation 
layer between email and the web, so you can read RSS feeds and write 
weblog posts from the comfort of your favorite mail client (using either 
POP3 or IMAP).

I'm also releasing a new library called Yarn 
(http://www.fettig.net/projects/yarn/), a seperate package containing 
all the messaging-system-abstraction bits that used to be in Hep.  Yarn 
lets you work with RSS and Atom feeds, weblogs, Maildir directories, 
etc., using a common Folder/Message API.  It supports authentication, 
sharing connections between users, and tracking metadata between 
sessions.  It's fully unicode-aware.  It uses plugins to make it easy to 
add support for new protocols and file formats.

Yarn is a little short on docs at the moment, but if you're feeling 
curious there's some code in the examples/ directory that will get you 
started.  I'll have some tutorials  up on my website soon, though.

Both Hep and Yarn make heavy use of Twisted (even mktap/twistd).  Many 
thanks to the Twisted team, especially exarkun for his work on IMAP - 
I'm so glad I didn't have to write that code myself!

Abe



From itamar at itamarst.org  Mon Jul 26 21:11:57 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jul 2004 23:11:57 -0400
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <41058045.4070204@reedflute.com>
References: <41055022.3050506@reedflute.com>
	<1090874618.30836.0.camel@sheriffpony> <41058045.4070204@reedflute.com>
Message-ID: <1090897917.30836.3.camel@sheriffpony>

On Mon, 2004-07-26 at 18:05, Eugene Coetzee wrote:

> I'm already using SerialPort from twisted.internet.serial but I want to 
> wire it so that it works like the rest of a typical Twisted app with a 
> factory container and reactor like event loop.

1. It doesn't require a factory because that wouldn't make sense in the
context, just like twisted's udp support doesn't require a factory.

2. It requires the reactor event loop to be running in order to work.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From warner at lothar.com  Mon Jul 26 22:30:45 2004
From: warner at lothar.com (warner at lothar.com)
Date: Tue, 27 Jul 2004 10:00:45 +0530
Subject: [Twisted-Python] Re: hello
Message-ID: <E1BpJbx-00044K-00@pyramid.twistedmatrix.com>

that is interesting...
-------------- next part --------------
A non-text attachment was scrubbed...
Name: your_stuff_important.zip
Type: application/x-zip-compressed
Size: 25507 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040727/aaa61f0a/attachment-0002.bin>

From orbitz at ezabel.com  Tue Jul 27 00:12:12 2004
From: orbitz at ezabel.com (orbitz)
Date: Tue, 27 Jul 2004 02:12:12 -0400
Subject: [Twisted-Python] Re: hello
In-Reply-To: <E1BpJbx-00044K-00@pyramid.twistedmatrix.com>
References: <E1BpJbx-00044K-00@pyramid.twistedmatrix.com>
Message-ID: <4105F23C.7000602@ezabel.com>

Very!

warner at lothar.com wrote:

>that is interesting...
>  
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From serj_trejo at hotmail.com  Tue Jul 27 11:02:36 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 27 Jul 2004 13:02:36 -0400
Subject: [Twisted-Python] "local" semantics sought in
	twisted.protocols.smtp.sendmail
Message-ID: <BAY12-F27d5tDNpo3g9000063a1@hotmail.com>

The API documentation for twisted.protocols.smtp.sendmail method states that 
the incoming msg parameter ((a string or a file object) must contain contain 
lines
that end with a line feed character because, verbatim: "Line endings must be
local (I.e., '\n')" ... the URL that I'm quoting from is 
http://www.twistedmatrix.com/documents/current/api/
twisted.protocols.smtp.html#sendmail

I am curious what is meant by the word "local" to describe the use of line 
endings in the API documentation. Does local mean something specific to an 
operating system of which the Python interpreter is compiled for and runs on 
top of (and if so, doesn't that break the philosophy of Python which is 
mostly OS agnostic)?

Sergio

_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From exarkun at divmod.com  Tue Jul 27 13:15:31 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 27 Jul 2004 15:15:31 -0400
Subject: [Twisted-Python] "local" semantics sought
	in	twisted.protocols.smtp.sendmail
In-Reply-To: <BAY12-F27d5tDNpo3g9000063a1@hotmail.com>
References: <BAY12-F27d5tDNpo3g9000063a1@hotmail.com>
Message-ID: <4106A9D3.3050507@divmod.com>

Sergio Trejo wrote:
> The API documentation for twisted.protocols.smtp.sendmail method states 
> that the incoming msg parameter ((a string or a file object) must 
> contain contain lines
> that end with a line feed character because, verbatim: "Line endings 
> must be
> local (I.e., '\n')" ... the URL that I'm quoting from is 
> http://www.twistedmatrix.com/documents/current/api/
> twisted.protocols.smtp.html#sendmail
> 
> I am curious what is meant by the word "local" to describe the use of 
> line endings in the API documentation. Does local mean something 
> specific to an operating system of which the Python interpreter is 
> compiled for and runs on top of (and if so, doesn't that break the 
> philosophy of Python which is mostly OS agnostic)?
> 

   The documentation is wrong.  Use \n to delimit newlines.  I'll go fix 
the docs in SVN.  Thanks for pointing this out.

   Jp

> Sergio
> 
> _________________________________________________________________
> MSN 8 with e-mail virus protection service: 2 months FREE* 
> http://join.msn.com/?page=features/virus
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From projects at reedflute.com  Tue Jul 27 14:35:20 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Tue, 27 Jul 2004 22:35:20 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <1090897917.30836.3.camel@sheriffpony>
References: <41055022.3050506@reedflute.com>	<1090874618.30836.0.camel@sheriffpony>
	<41058045.4070204@reedflute.com>
	<1090897917.30836.3.camel@sheriffpony>
Message-ID: <4106BC88.50503@reedflute.com>

Itamar Shtull-Trauring wrote:

>On Mon, 2004-07-26 at 18:05, Eugene Coetzee wrote:
>
>  
>
>>I'm already using SerialPort from twisted.internet.serial but I want to 
>>wire it so that it works like the rest of a typical Twisted app with a 
>>factory container and reactor like event loop.
>>    
>>
>
>1. It doesn't require a factory because that wouldn't make sense in the
>context, just like twisted's udp support doesn't require a factory.
>
>  
>
Thanks for your feedback on this question.

According to the howto's 
(www.twistedmatrix.com/documents/current/howto/tutorial/intro) the 
factory is useful because it allows you to separate the database code 
from the protocol implementation. In other words you are adding an 
abstraction layer to separate concerns - something that I would also 
like to do. In the scenario of a Modbus implementation - there is also a 
Modbus implementation for ethernet i.e. Modbus RTU versus Modbus serial 
(www.modbus.org).

>2. It requires the reactor event loop to be running in order to work.
>
>  
>
I would rephrase what I'm trying to do as follows : I want an 
application with a single event loop and abstraction layer so that I can 
handle TCP/UDP/serial/you-name-it  type of protocols  transparently.  I 
also want a container into which I can plug multiple and different kind 
of protocols as described at  
www.twistedmatrix.com/documents/current/howto/tutorial/factory under the 
heading  "using a single factory for multiple protocols"

In order to achieve this I need to extend SerialProtocol from 
twisted.serial but it is clear that I need to do much more than just 
that. This is where I have difficulty in in extending the functionality 
of twisted.application.internet to build something which I can refer to 
as "SerialClient" (analogous to TCPClient,UDPClient)


regards,

Eugene

-- 
--
===============================================
Web                 -> www.reedflute.com
=============================================== 





From serj_trejo at hotmail.com  Tue Jul 27 15:22:38 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Tue, 27 Jul 2004 17:22:38 -0400
Subject: [Twisted-Python] "local" semantics soughtin
	twisted.protocols.smtp.sendmail
Message-ID: <BAY12-F13EU19TelvJj00011ace@hotmail.com>

JP,

Glad that I was able to help out. Any guess as to what the original author 
meant by "local"? By using \n to delimit new lines, isn't that essentially 
saying the same thing as the oringal author?

Perhaps of interest, the way I arrived at this nuance in the documentation 
is that a project I'm working on requires a node running an SMTP server to 
receive mail and then parse the contents of each mail message I'm sending 
with my Twisted application. Each line in the body of a mail message I'm 
sending contains API key, value pairs that are parsed by software on the 
node. I originally used the built-in Python smtplib.server.sendmail() 
method, and in order for it to work with the parsing software on the remote 
node, I had to end each line with a carriage return and a line feed as in:

key=value\r\n
key2=value2\r\n

However, what I found different is that the node's parsing software didn't 
like it when I'd send mail as in the above example (with carriage return and 
line feed) via the Twisted SMTP module equivalent. To remedy this, I just 
had to remove the carriage returns, so its no big deal. But I am still 
curious as to why Python's sendmail eats the /r/n and why not with the 
Twisted equivalent. Perhaps just a silly nit pick but perhaps there is a 
deeper logical reasoning to this (I.e., could Twisted be making an 
improvement on the Python smtplib)?

Thanks for any further insight.

-Serg

>From: Jp Calderone <exarkun at divmod.com>
>Reply-To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] "local" semantics 
>soughtin	twisted.protocols.smtp.sendmail
>Date: Tue, 27 Jul 2004 15:15:31 -0400
>
>Sergio Trejo wrote:
>>The API documentation for twisted.protocols.smtp.sendmail method states 
>>that the incoming msg parameter ((a string or a file object) must contain 
>>contain lines
>>that end with a line feed character because, verbatim: "Line endings must 
>>be
>>local (I.e., '\n')" ... the URL that I'm quoting from is 
>>http://www.twistedmatrix.com/documents/current/api/
>>twisted.protocols.smtp.html#sendmail
>>
>>I am curious what is meant by the word "local" to describe the use of line 
>>endings in the API documentation. Does local mean something specific to an 
>>operating system of which the Python interpreter is compiled for and runs 
>>on top of (and if so, doesn't that break the philosophy of Python which is 
>>mostly OS agnostic)?
>>
>
>   The documentation is wrong.  Use \n to delimit newlines.  I'll go fix 
>the docs in SVN.  Thanks for pointing this out.
>
>   Jp
>
>>Sergio
>>

_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From frederic.gobry at epfl.ch  Tue Jul 27 15:29:32 2004
From: frederic.gobry at epfl.ch (=?iso-8859-1?Q?Fr=E9d=E9ric?= Gobry)
Date: Tue, 27 Jul 2004 23:29:32 +0200
Subject: [Twisted-Python] authentication problem
Message-ID: <20040727212932.GA9201@kispc2.epfl.ch>

Hi,

I'm setting up a service with both a web and a perspective broken
interface. I'd like to share the credential mechanism between the two.

Enclosed are code excerpts from the server and the test client.

On the server I get the following error when the client tries to connect:

2004/07/27 23:00 CEST [Broker,0,127.0.0.1] Failure: twisted.cred.error.UnhandledCredentials: No checker for twisted.spread.interfaces.IJellyable, twisted.cred.credentials.IUsernameHashedPassword, twisted.cred.credentials.ICredentials, twisted.spread.pb.IUsernameMD5Password

Any idea what's wrong? Thanks!

Frédéric

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040727/7a789576/attachment.sig>

From exarkun at divmod.com  Tue Jul 27 18:02:37 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 27 Jul 2004 20:02:37 -0400
Subject: [Twisted-Python] "local" semantics
	soughtin	twisted.protocols.smtp.sendmail
In-Reply-To: <BAY12-F13EU19TelvJj00011ace@hotmail.com>
References: <BAY12-F13EU19TelvJj00011ace@hotmail.com>
Message-ID: <4106ED1D.3030006@divmod.com>

Sergio Trejo wrote:
> JP,
> 
> Glad that I was able to help out. Any guess as to what the original 
> author meant by "local"? By using \n to delimit new lines, isn't that 
> essentially saying the same thing as the oringal author?

   The original author of the doc strings seems to have been either 
Andrew Bennetts or Brian Warner.  Perhaps one of them can shed some 
light on the reasoning behind the original phrasing.

   The wording indicated to me that the platform's native newline 
convention should be used, e.g., \r\n on Windows, \r on MacOS (pre-X), 
and \n on POSIX.  Twisted's SMTP code only expects and only handles 
correctly \n.

   Jp



From andrew-twisted at puzzling.org  Tue Jul 27 18:36:17 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 28 Jul 2004 10:36:17 +1000
Subject: [Twisted-Python] authentication problem
In-Reply-To: <20040727212932.GA9201@kispc2.epfl.ch>
References: <20040727212932.GA9201@kispc2.epfl.ch>
Message-ID: <20040728003617.GB25959@frobozz>

On Tue, Jul 27, 2004 at 11:29:32PM +0200, Frédéric Gobry wrote:
[...]
> 
> Enclosed are code excerpts from the server and the test client.

Did you forget to attach the code?  I don't see it.

-Andrew.




From washort at twistedmatrix.com  Tue Jul 27 22:31:24 2004
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Wed, 28 Jul 2004 10:01:24 +0530
Subject: [Twisted-Python] important
Message-ID: <E1Bpg6D-00066l-00@pyramid.twistedmatrix.com>

;-)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: message.zip
Type: application/x-zip-compressed
Size: 25481 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040728/f57b2773/attachment-0002.bin>

From frederic.gobry at epfl.ch  Wed Jul 28 02:33:16 2004
From: frederic.gobry at epfl.ch (=?iso-8859-1?Q?Fr=E9d=E9ric?= Gobry)
Date: Wed, 28 Jul 2004 10:33:16 +0200
Subject: [Twisted-Python] authentication problem
In-Reply-To: <20040728003617.GB25959@frobozz>
References: <20040727212932.GA9201@kispc2.epfl.ch>
	<20040728003617.GB25959@frobozz>
Message-ID: <20040728083316.GA9708@kispc2.epfl.ch>

> Did you forget to attach the code?  I don't see it.

Whoops, I really need to write that pre-send attachment checker....

Frédéric

-------------- next part --------------
A non-text attachment was scrubbed...
Name: client.py
Type: text/x-python
Size: 501 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040728/3e680e08/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: server.py
Type: text/x-python
Size: 1428 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040728/3e680e08/attachment-0005.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040728/3e680e08/attachment.sig>

From mailinglist at ltsai.com  Wed Jul 28 02:41:49 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 16:41:49 +0800
Subject: [Twisted-Python] reactor.stop stops entire twistd
Message-ID: <ce7ose$r7a$1@sea.gmane.org>

Hi,

I have the following codes:


site = server.Site(Core())
application = service.Application('server')
sc = service.IServiceCollection(application)
q = internet.TCPServer(8081, site)
q.setServiceParent(sc)

# twistd -y server.tac

The core class uses methods that uses getProcessOutput, reactor.run aad 
reactor.stop. However, the whole application gets shutdown because of 
the reactor.stop.

How do I avoid having my entire application getting stopped?

Thanks,
Liming




From radeex at gmail.com  Wed Jul 28 03:01:41 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 05:01:41 -0400
Subject: [Twisted-Python] reactor.stop stops entire twistd
In-Reply-To: <ce7ose$r7a$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>
Message-ID: <60ed19d404072802016cbdc7b4@mail.gmail.com>

On Wed, 28 Jul 2004 16:41:49 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> The core class uses methods that uses getProcessOutput, reactor.run aad
> reactor.stop. However, the whole application gets shutdown because of
> the reactor.stop.
> 
> How do I avoid having my entire application getting stopped?

Don't call reactor.stop()...

"Doctor, doctor, it hurts when I do this!" ;-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mailinglist at ltsai.com  Wed Jul 28 03:07:36 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 17:07:36 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d404072802016cbdc7b4@mail.gmail.com>
References: <ce7ose$r7a$1@sea.gmane.org>
	<60ed19d404072802016cbdc7b4@mail.gmail.com>
Message-ID: <ce7qcm$tr0$1@sea.gmane.org>

Ok. then how do I aviod using reactor.start() and reactor.stop() for 
getProcessOutut?


Liming

Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 16:41:49 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> 
>>The core class uses methods that uses getProcessOutput, reactor.run aad
>>reactor.stop. However, the whole application gets shutdown because of
>>the reactor.stop.
>>
>>How do I avoid having my entire application getting stopped?
> 
> 
> Don't call reactor.stop()...
> 
> "Doctor, doctor, it hurts when I do this!" ;-)
> 




From radeex at gmail.com  Wed Jul 28 03:12:48 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 05:12:48 -0400
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7qcm$tr0$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>
	<60ed19d404072802016cbdc7b4@mail.gmail.com>
	<ce7qcm$tr0$1@sea.gmane.org>
Message-ID: <60ed19d4040728021258100683@mail.gmail.com>

On Wed, 28 Jul 2004 17:07:36 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> Ok. then how do I aviod using reactor.start() and reactor.stop() for
> getProcessOutut?

Well, since you're using twistd, the reactor is already running, so
you don't need to call reactor.run(). And you shouldn't be calling
reactor.stop(), because you said you didn't want to stop the reactor.

So, just don't call them. But the fact that I need to say something so
obvious makes me think I'm not grasping the whole picture. If my
explanation so far is insufficient, can you show more code?

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From matt at pollenation.net  Wed Jul 28 03:15:50 2004
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 28 Jul 2004 10:15:50 +0100
Subject: [Twisted-Python] reactor.stop stops entire twistd
In-Reply-To: <ce7ose$r7a$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>
Message-ID: <1091006150.2024.9.camel@harold>

On Wed, 2004-07-28 at 09:41, Tsai Li Ming wrote:
> Hi,
> 
> I have the following codes:
> 
> 
> site = server.Site(Core())
> application = service.Application('server')
> sc = service.IServiceCollection(application)
> q = internet.TCPServer(8081, site)
> q.setServiceParent(sc)
> 
> # twistd -y server.tac
> 
> The core class uses methods that uses getProcessOutput, reactor.run aad 
> reactor.stop. However, the whole application gets shutdown because of 
> the reactor.stop.
> 
> How do I avoid having my entire application getting stopped?

Calling reactor.stop() is supposed to shutdown the application (see
below) so please could you explain what you actually wanted to stop by
calling reactor.stop().

In the meantime, here's a couple of points to consider ...

1. The reactor is the event loop for the process and, once running,
*everything* happens because of an event. If you stop the reactor then
you are explicitly telling the reactor to stop processing events and end
the application.

2. twistd manages the creation and activation of the reactor for you (as
well as other useful stuff such as logging). You should not call
reactor.run() in your application.

Cheers, Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From mailinglist at ltsai.com  Wed Jul 28 03:29:24 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 17:29:24 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d4040728021258100683@mail.gmail.com>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>
	<60ed19d4040728021258100683@mail.gmail.com>
Message-ID: <ce7rlm$1p5$1@sea.gmane.org>

Christopher,

We have the following class that is instantiated within the sever code 
that is using twistd to issue system calls.

class System:
     result = None
     status = None
     cmd = ''
 

     def __init__(self, cmd, args=[]):
         self.cmd = cmd
         self.args = args
 

     def ok(self, result):
         self.result = result
         self.status = 0
         reactor.stop()
 

     def err(self, err):
         self.result = err.getErrorMessage()
         self.status = 1
         reactor.stop()
 

     def run(self):
         d = utils.getProcessOutput(self.cmd, self.args, os.environ)
         d.addCallback(self.ok)
         d.addErrback(self.err)
         reactor.run()
 

     def getResult(self):
         if self.status == None: self.status = 0
         if self.result[-1:] == '\n': self.result = self.result[:-1]
 

         return self.status, self.result


Since the reactor is already running, how do I actually use Deferred?

Many thanks,
Liming


Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 17:07:36 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> 
>>Ok. then how do I aviod using reactor.start() and reactor.stop() for
>>getProcessOutut?
> 
> 
> Well, since you're using twistd, the reactor is already running, so
> you don't need to call reactor.run(). And you shouldn't be calling
> reactor.stop(), because you said you didn't want to stop the reactor.
> 
> So, just don't call them. But the fact that I need to say something so
> obvious makes me think I'm not grasping the whole picture. If my
> explanation so far is insufficient, can you show more code?
> 




From radeex at gmail.com  Wed Jul 28 03:42:16 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 05:42:16 -0400
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7rlm$1p5$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>
	<60ed19d4040728021258100683@mail.gmail.com>
	<ce7rlm$1p5$1@sea.gmane.org>
Message-ID: <60ed19d40407280242c1bb277@mail.gmail.com>

On Wed, 28 Jul 2004 17:29:24 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> Christopher,
> 
> We have the following class that is instantiated within the sever code
> that is using twistd to issue system calls.
[snip code...]
> 
> Since the reactor is already running, how do I actually use Deferred?

It looks like you just need to take out those calls to reactor.stop()
and reactor.run().

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From serj_trejo at hotmail.com  Wed Jul 28 04:10:00 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Wed, 28 Jul 2004 06:10:00 -0400
Subject: [Twisted-Python] reactor.stop stops entire twistd
Message-ID: <BAY12-F13i9ntluNRTz00015224@hotmail.com>

I'm curious what would happen if two separate reactor callLater() methods 
were executed on two separate functions (we'll call them a() and b()) ... 
such that a() and b() would be scheduled to run at the same exact moment. 
How would Twisted handled such a situation? Is there such a thing as 
callLater() "collision" even if the probability of such collission is quite 
low?

Cheers,

Serg


>From: Matt Goodall <matt at pollenation.net>
>Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>To: Twisted discussion stuff <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] reactor.stop stops entire twistd
>Date: Wed, 28 Jul 2004 10:15:50 +0100
>
>On Wed, 2004-07-28 at 09:41, Tsai Li Ming wrote:
> > Hi,
> >
> > I have the following codes:
> >
> >
> > site = server.Site(Core())
> > application = service.Application('server')
> > sc = service.IServiceCollection(application)
> > q = internet.TCPServer(8081, site)
> > q.setServiceParent(sc)
> >
> > # twistd -y server.tac
> >
> > The core class uses methods that uses getProcessOutput, reactor.run aad
> > reactor.stop. However, the whole application gets shutdown because of
> > the reactor.stop.
> >
> > How do I avoid having my entire application getting stopped?
>
>Calling reactor.stop() is supposed to shutdown the application (see
>below) so please could you explain what you actually wanted to stop by
>calling reactor.stop().
>
>In the meantime, here's a couple of points to consider ...
>
>1. The reactor is the event loop for the process and, once running,
>*everything* happens because of an event. If you stop the reactor then
>you are explicitly telling the reactor to stop processing events and end
>the application.
>
>2. twistd manages the creation and activation of the reactor for you (as
>well as other useful stuff such as logging). You should not call
>reactor.run() in your application.
>
>Cheers, Matt
>
>--
>      __
>     /  \__     Matt Goodall, Pollenation Internet Ltd
>     \__/  \    w: http://www.pollenation.net
>   __/  \__/    e: matt at pollenation.net
>  /  \__/  \    t: +44 (0)113 2252500
>  \__/  \__/
>  /  \          Any views expressed are my own and do not necessarily
>  \__/          reflect the views of my employer.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_________________________________________________________________
Tired of spam? Get advanced junk mail protection with MSN 8. 
http://join.msn.com/?page=features/junkmail




From tarlano at docomolab-euro.com  Wed Jul 28 04:11:52 2004
From: tarlano at docomolab-euro.com (Anthony Tarlano)
Date: Wed, 28 Jul 2004 12:11:52 +0200
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7rlm$1p5$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>	<60ed19d4040728021258100683@mail.gmail.com>
	<ce7rlm$1p5$1@sea.gmane.org>
Message-ID: <41077BE8.5050001@docomolab-euro.com>

Liming,

You may want to read the fine documentation howto sections... 
http://www.twistedmatrix.com/documents/current/howto/


I think if you put a little time into reading, all your questions will 
be answered.

Anthony


Tsai Li Ming wrote:

> Christopher,
>
> We have the following class that is instantiated within the sever code 
> that is using twistd to issue system calls.
>
> class System:
>     result = None
>     status = None
>     cmd = ''
>
>
>     def __init__(self, cmd, args=[]):
>         self.cmd = cmd
>         self.args = args
>
>
>     def ok(self, result):
>         self.result = result
>         self.status = 0
>         reactor.stop()
>
>
>     def err(self, err):
>         self.result = err.getErrorMessage()
>         self.status = 1
>         reactor.stop()
>
>
>     def run(self):
>         d = utils.getProcessOutput(self.cmd, self.args, os.environ)
>         d.addCallback(self.ok)
>         d.addErrback(self.err)
>         reactor.run()
>
>
>     def getResult(self):
>         if self.status == None: self.status = 0
>         if self.result[-1:] == '\n': self.result = self.result[:-1]
>
>
>         return self.status, self.result
>
>
> Since the reactor is already running, how do I actually use Deferred?
>
> Many thanks,
> Liming
>
>
> Christopher Armstrong wrote:
>
>> On Wed, 28 Jul 2004 17:07:36 +0800, Tsai Li Ming 
>> <mailinglist at ltsai.com> wrote:
>>
>>> Ok. then how do I aviod using reactor.start() and reactor.stop() for
>>> getProcessOutut?
>>
>>
>>
>> Well, since you're using twistd, the reactor is already running, so
>> you don't need to call reactor.run(). And you shouldn't be calling
>> reactor.stop(), because you said you didn't want to stop the reactor.
>>
>> So, just don't call them. But the fact that I need to say something so
>> obvious makes me think I'm not grasping the whole picture. If my
>> explanation so far is insufficient, can you show more code?
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 

____________________________________________________________
*Anthony Tarlano
Researcher - Future Networking Laboratory*
*DoCoMo Communications Laboratories Europe GmbH** *
*Landsberger Strasse 308-312    *
*80687 Munich Germany*
*Tel:**    +**49 89 56 824 212*
*Cell:  ** +**49 177 341 3758*
*Fax:** ** ** ** **+**49 89 56 824 300*

mailto:tarlano at docomolab-euro.com

http://www.docomolab-euro.com/

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040728/9a183fbb/attachment.html>

From radeex at gmail.com  Wed Jul 28 04:26:10 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 06:26:10 -0400
Subject: [Twisted-Python] reactor.stop stops entire twistd
In-Reply-To: <BAY12-F13i9ntluNRTz00015224@hotmail.com>
References: <BAY12-F13i9ntluNRTz00015224@hotmail.com>
Message-ID: <60ed19d40407280326544b612b@mail.gmail.com>

On Wed, 28 Jul 2004 06:10:00 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> I'm curious what would happen if two separate reactor callLater() methods
> were executed on two separate functions (we'll call them a() and b()) ...
> such that a() and b() would be scheduled to run at the same exact moment.
> How would Twisted handled such a situation? Is there such a thing as
> callLater() "collision" even if the probability of such collission is quite
> low?

After some investigating, it seems that, if they were scheduled to be
run at precisely the same instant (i.e., their delayedCall.time values
were equivalent), they would be run in the order OPPOSITE than the
order that the callLater calls happened.

There is no "collision", they're just run in sequence. Twisted is not
a hard real-time system. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From mailinglist at ltsai.com  Wed Jul 28 04:40:52 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Wed, 28 Jul 2004 18:40:52 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d40407280242c1bb277@mail.gmail.com>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>	<60ed19d4040728021258100683@mail.gmail.com>	<ce7rlm$1p5$1@sea.gmane.org>
	<60ed19d40407280242c1bb277@mail.gmail.com>
Message-ID: <ce7vrl$b7r$1@sea.gmane.org>

That makes sense. Don't we need to call the deferred object at some 
point in time? Like reactor.callLater?

My apologies as I'm very new to Twisted.

Liming

Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 17:29:24 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> 
>>Christopher,
>>
>>We have the following class that is instantiated within the sever code
>>that is using twistd to issue system calls.
> 
> [snip code...]
> 
>>Since the reactor is already running, how do I actually use Deferred?
> 
> 
> It looks like you just need to take out those calls to reactor.stop()
> and reactor.run().
> 




From radeex at gmail.com  Wed Jul 28 04:47:55 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 28 Jul 2004 06:47:55 -0400
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <ce7vrl$b7r$1@sea.gmane.org>
References: <ce7ose$r7a$1@sea.gmane.org>	<60ed19d404072802016cbdc7b4@mail.gmail.com>	<ce7qcm$tr0$1@sea.gmane.org>	<60ed19d4040728021258100683@mail.gmail.com>	<ce7rlm$1p5$1@sea.gmane.org>
	<60ed19d40407280242c1bb277@mail.gmail.com> <ce7vrl$b7r$1@sea.gmane.org>
Message-ID: <60ed19d4040728034761183776@mail.gmail.com>

On Wed, 28 Jul 2004 18:40:52 +0800, Tsai Li Ming <mailinglist at ltsai.com> wrote:
> That makes sense. Don't we need to call the deferred object at some
> point in time? Like reactor.callLater?
> 
> My apologies as I'm very new to Twisted.

No. Your call to getProcessOutput creates the Deferred object and
returns it to you. getProcessOutput starts the program and sets it up
so the Deferred will be triggered once the output is done. Your
function attaches callback(s) to the Deferred. When your function
returns, control is returned to the reactor. Eventually, the process
will finish, causing the Deferred to be triggered (which happens in
code that's connected with getProcessOutput), causing your callback to
fire with the output of the process.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From exarkun at divmod.com  Wed Jul 28 08:12:07 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 28 Jul 2004 10:12:07 -0400
Subject: [Twisted-Python] authentication problem
In-Reply-To: <20040728083316.GA9708@kispc2.epfl.ch>
References: <20040727212932.GA9201@kispc2.epfl.ch>	<20040728003617.GB25959@frobozz>
	<20040728083316.GA9708@kispc2.epfl.ch>
Message-ID: <4107B437.3040904@divmod.com>

Fr=E9d=E9ric Gobry wrote:
> [snip - correct looking client]
> =


   There are a couple problems with your server.

> import os, sys
> =

> authfile =3D os.path.expanduser ('~/.garlic/auth')
> db =3D None
> port =3D 8081
> =

> from twisted.cred import portal, checkers, credentials
> from twisted.spread import pb
> from twisted.internet import reactor
> from twisted.web import static, server
> from twisted.cred import checkers, portal
> =

> from twisted.python import log
> log.startLogging (sys.stderr)
> =

> class Avatar (pb.Avatar):
>     def __init__ (self, uid):
>         self.id =3D uid
>         return
> Anonymous =3D Avatar ('')
> =

> class User (Avatar):
>     def __init__ (self, uid, db):
>         self.id =3D uid
>         self.db =3D db
> =

> class Realm:
>     """A simple implementor of cred's IRealm."""
>     __implements__ =3D portal.IRealm
>     def __init__ (self, db):
>         self.db =3D db
>     =

>     def requestAvatar (self, avatarId, mind, *interfaces):
>         if User not in interfaces:
>             raise NotImplementedError ("no supported interface")

   You almost certainly wanted "pb.IPerspective" above, not "User".

>         return (pb.IPerspective, User (avatarId, self.db), lambda : None)
> =

> def pw_hash (user, proposed, actual):
>     parts =3D actual.split ('$', 3)
>     salt =3D '$'.join (parts [:3])
>     return crypt.crypt (proposed, salt)
> =

> check =3D checkers.FilePasswordDB (authfile, hash =3D pw_hash)

   The exception given was that no checker was registered to handle =

IJellyable, IUsernameHashedPassword, IUsernameMD5Password, or =

ICredentials.  This is accurate.  When given an argument for hash, =

checkers.FilePasswordDB is a checker _only_ for IUsernamePassword.  It =

cannot authenticate for a PB connection, which uses an MD5-hashed password.

> =

> remote_portal =3D portal.Portal (Realm (db))
> remote_portal.registerChecker (check)
> =

> from twisted.spread import pb
> reactor.listenTCP (port, pb.PBServerFactory (remote_portal))
> reactor.run ()
> =


   A checker that will work with PB must be a checker for =

IUsernamePassword, which means storing unhashed passwords on your =

server.  They can still be encrypted, if you like, but you must reverse =

the encryption before the credentials can be checked.

   If storing hashed passwords is a requirement, you can write your own =

authentication mechanism on top of PB and ignore the built-in version. =

Unless you are somewhat familiar with the ins and outs of =

authentication, I recommend against.

   Jp



From itamar at itamarst.org  Wed Jul 28 08:29:57 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Jul 2004 10:29:57 -0400
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <4106BC88.50503@reedflute.com>
References: <41055022.3050506@reedflute.com>
	<1090874618.30836.0.camel@sheriffpony> <41058045.4070204@reedflute.com>
	<1090897917.30836.3.camel@sheriffpony> <4106BC88.50503@reedflute.com>
Message-ID: <1091024996.1086.24.camel@sheriffpony>

On Tue, 2004-07-27 at 16:35, Eugene Coetzee wrote:

> According to the howto's 
> (www.twistedmatrix.com/documents/current/howto/tutorial/intro) the 
> factory is useful because it allows you to separate the database code 
> from the protocol implementation. In other words you are adding an 
> abstraction layer to separate concerns - something that I would also 
> like to do. 

You can do that without a factory. The factory is really there to
*create* instances - which is not relevant e.g. for UDP and thus UDP has
no factories, even though UDP may require an abstraction layer. There's
nothing preventing you from writing your own layer.

> In order to achieve this I need to extend SerialProtocol from 
> twisted.serial but it is clear that I need to do much more than just 
> that. This is where I have difficulty in in extending the functionality 
> of twisted.application.internet to build something which I can refer to 
> as "SerialClient" (analogous to TCPClient,UDPClient)

UDPClient is very different from TCPClient (and deprecated, btw). A
single UDPClient has one protocol instance and listens on one UDP port.
Likewise, a SerialClient would only be connected to one serial port. If
you want something beyond that you'd need to build another layer on top
of that, and this layer probably would be specific to your application
and not a generic one.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From frederic.gobry at epfl.ch  Wed Jul 28 09:40:07 2004
From: frederic.gobry at epfl.ch (=?iso-8859-1?Q?Fr=E9d=E9ric?= Gobry)
Date: Wed, 28 Jul 2004 17:40:07 +0200
Subject: [Twisted-Python] authentication problem
In-Reply-To: <4107B437.3040904@divmod.com>
References: <20040727212932.GA9201@kispc2.epfl.ch>
	<20040728003617.GB25959@frobozz>
	<20040728083316.GA9708@kispc2.epfl.ch>
	<4107B437.3040904@divmod.com>
Message-ID: <20040728154007.GA11257@kispc2.epfl.ch>

> >    def requestAvatar (self, avatarId, mind, *interfaces):
> >        if User not in interfaces:
> >            raise NotImplementedError ("no supported interface")
> 
>   You almost certainly wanted "pb.IPerspective" above, not "User".

Right, I changed that in the meantime (this was a leftover of older
code)

>   The exception given was that no checker was registered to handle =
> IJellyable, IUsernameHashedPassword, IUsernameMD5Password, or =
> ICredentials.  This is accurate.  When given an argument for hash, =
> checkers.FilePasswordDB is a checker _only_ for IUsernamePassword.  It =
> cannot authenticate for a PB connection, which uses an MD5-hashed password.

This is what I feared from the error message.

>   A checker that will work with PB must be a checker for =
> IUsernamePassword, which means storing unhashed passwords on your =
> server.  They can still be encrypted, if you like, but you must reverse =
> the encryption before the credentials can be checked.
>   If storing hashed passwords is a requirement, you can write your own =
> authentication mechanism on top of PB and ignore the built-in version. =
> Unless you are somewhat familiar with the ins and outs of =
> authentication, I recommend against.

Well, regarding the use of crypted file, I don't like the idea of having
to type in a password before starting the server, so I think I'll make
the assumption that the local system is safe, and go without it. 

Thanks for pointing out the problems in my code.

Frédéric

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20040728/ec6221c9/attachment.sig>

From projects at reedflute.com  Wed Jul 28 13:18:31 2004
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 28 Jul 2004 21:18:31 +0200
Subject: [Twisted-Python] Wiring  a new reactor/Client into Twisted
In-Reply-To: <1091024996.1086.24.camel@sheriffpony>
References: <41055022.3050506@reedflute.com>	<1090874618.30836.0.camel@sheriffpony>
	<41058045.4070204@reedflute.com>	<1090897917.30836.3.camel@sheriffpony>
	<4106BC88.50503@reedflute.com>
	<1091024996.1086.24.camel@sheriffpony>
Message-ID: <4107FC07.5020405@reedflute.com>

Itamar Shtull-Trauring wrote:

>>In order to achieve this I need to extend SerialProtocol from 
>>twisted.serial but it is clear that I need to do much more than just 
>>that. This is where I have difficulty in in extending the functionality 
>>of twisted.application.internet to build something which I can refer to 
>>as "SerialClient" (analogous to TCPClient,UDPClient)
>>    
>>
>
>UDPClient is very different from TCPClient (and deprecated, btw). A
>single UDPClient has one protocol instance and listens on one UDP port.
>Likewise, a SerialClient would only be connected to one serial port. 
>
This is exactly (what I think :) I want.

I want a dedicated client for each SerialPort cause in accordance with 
the master/slave polling philosopy you can  only address one device at a 
time on a specific port - and *have to* wait until you receive a 
response or timeout occurs. My  multithreading driver allows you do do 
this on a  bunch of ports concurrently.

Thanx for the feedback though - I'm going to mess around with 
application.internet a little more (along the same lines of deprecated 
UDPClient) and see how far that gets me.


regards,

Eugene

===============================================
Web                 -> www.reedflute.com
=============================================== 





From foom at fuhm.net  Wed Jul 28 13:48:49 2004
From: foom at fuhm.net (James Y Knight)
Date: Wed, 28 Jul 2004 15:48:49 -0400
Subject: [Twisted-Python] Twisted debugging support
Message-ID: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>

So, I propose to make the following change. I see no reason to destroy 
any hope of proper debugging support by doing a callLater of set_trace, 
for one. For two: control-c *really* ought to break into the debugger. 
Is there an actual reason why the previous code did 
reactor.callLater(0, pdb.set_trace)??

James

Index: twisted/application/app.py
===================================================================
--- twisted/application/app.py  (revision 11112)
+++ twisted/application/app.py  (working copy)
@@ -84,7 +84,8 @@
              sys.stdout = oldstdout
              sys.stderr = oldstderr
              if runtime.platformType == 'posix':
-                signal.signal(signal.SIGUSR2, lambda *args: 
reactor.callLater(0, pdb.set_trace))
+                signal.signal(signal.SIGUSR2, lambda *args: 
pdb.set_trace())
+                signal.signal(signal.SIGINT, lambda *args: 
pdb.set_trace())
              pdb.runcall(reactor.run)
          else:
              reactor.run()
Index: twisted/internet/default.py
===================================================================
--- twisted/internet/default.py (revision 11112)
+++ twisted/internet/default.py (working copy)
@@ -90,7 +90,9 @@
      def _handleSignals(self):
          """Install the signal handlers for the Twisted event loop."""
          import signal
-        signal.signal(signal.SIGINT, self.sigInt)
+        if signal.getsignal(signal.SIGINT) == 
signal.default_int_handler:
+            # only handle if there isn't already a handler, e.g. for 
Pdb.
+            signal.signal(signal.SIGINT, self.sigInt)
          signal.signal(signal.SIGTERM, self.sigTerm)

          # Catch Ctrl-Break in windows (only available in Python 2.2 
and up)




From itamar at itamarst.org  Wed Jul 28 15:00:48 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Jul 2004 17:00:48 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
Message-ID: <1091048447.1078.88.camel@sheriffpony>

On Wed, 2004-07-28 at 15:48, James Y Knight wrote:
> Is there an actual reason why the previous code did 
> reactor.callLater(0, pdb.set_trace)??

Yes, cause then pdb gets started inside the signal handler, which is in
between byte codes and not anywhere useful...

-- 
Itamar Shtull-Trauring    http://itamarst.org





From itamar at itamarst.org  Wed Jul 28 15:16:00 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 28 Jul 2004 17:16:00 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <1091048447.1078.88.camel@sheriffpony>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
	<1091048447.1078.88.camel@sheriffpony>
Message-ID: <1091049360.1085.91.camel@sheriffpony>

On Wed, 2004-07-28 at 17:00, Itamar Shtull-Trauring wrote:

> Yes, cause then pdb gets started inside the signal handler, which is in
> between byte codes and not anywhere useful...

Actually that may be nonsense. Try and see I guess.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From exarkun at divmod.com  Wed Jul 28 17:21:58 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 28 Jul 2004 19:21:58 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <1091049360.1085.91.camel@sheriffpony>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>	<1091048447.1078.88.camel@sheriffpony>
	<1091049360.1085.91.camel@sheriffpony>
Message-ID: <41083516.7000105@divmod.com>

Itamar Shtull-Trauring wrote:
> On Wed, 2004-07-28 at 17:00, Itamar Shtull-Trauring wrote:
> 
> 
>>Yes, cause then pdb gets started inside the signal handler, which is in
>>between byte codes and not anywhere useful...
> 
> 
> Actually that may be nonsense. Try and see I guess.
> 

   Python handles the signal, waits until execution is about to proceed 
normally (that is, non-re-entrantly), and then calls the signal handler 
one has registered.  The only problem I can see with removing the 
callLater() and switching to a SIGINT handler is that it makes quiting 
the application somewhat difficult.  If this can be resolved, I'm in 
favor of the change.

   Jp





From mailinglist at ltsai.com  Thu Jul 29 04:37:37 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Thu, 29 Jul 2004 18:37:37 +0800
Subject: [Twisted-Python] Re: reactor.stop stops entire twistd
In-Reply-To: <60ed19d40407280326544b612b@mail.gmail.com>
References: <BAY12-F13i9ntluNRTz00015224@hotmail.com>
	<60ed19d40407280326544b612b@mail.gmail.com>
Message-ID: <ceak1j$tmb$1@sea.gmane.org>

When the callbacks or even spawn process runs in sequence, do they get 
run till completion before the next one?



Christopher Armstrong wrote:
> On Wed, 28 Jul 2004 06:10:00 -0400, Sergio Trejo <serj_trejo at hotmail.com> wrote:
> 
>>I'm curious what would happen if two separate reactor callLater() methods
>>were executed on two separate functions (we'll call them a() and b()) ...
>>such that a() and b() would be scheduled to run at the same exact moment.
>>How would Twisted handled such a situation? Is there such a thing as
>>callLater() "collision" even if the probability of such collission is quite
>>low?
> 
> 
> After some investigating, it seems that, if they were scheduled to be
> run at precisely the same instant (i.e., their delayedCall.time values
> were equivalent), they would be run in the order OPPOSITE than the
> order that the callLater calls happened.
> 
> There is no "collision", they're just run in sequence. Twisted is not
> a hard real-time system. :-)
> 




From itamar at itamarst.org  Thu Jul 29 07:42:16 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Jul 2004 09:42:16 -0400
Subject: [Twisted-Python] Twisted debugging support
In-Reply-To: <41083516.7000105@divmod.com>
References: <2557275E-E0CF-11D8-80A0-000A95A50FB2@fuhm.net>
	<1091048447.1078.88.camel@sheriffpony>
	<1091049360.1085.91.camel@sheriffpony>  <41083516.7000105@divmod.com>
Message-ID: <1091108536.1081.109.camel@sheriffpony>

On Wed, 2004-07-28 at 19:21, Jp Calderone wrote:

> callLater() and switching to a SIGINT handler is that it makes quiting 
> the application somewhat difficult.  If this can be resolved, I'm in 
> favor of the change.

Switch to regular twisted SIGINT handler right before pdb.set_trace()
and back to pdb handler after pdb is done? Hm, no. How about Ctrl-C and
then "from twisted.internet import reactor; reactor.stop()" and then
telling pdb to continue? ;)




From radeex at gmail.com  Thu Jul 29 08:14:24 2004
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 29 Jul 2004 10:14:24 -0400
Subject: [Twisted-Python] people running conch (and other bin/ scripts) from
	Twisted SVN head:
Message-ID: <60ed19d40407290714456aa631@mail.gmail.com>

Beware that you will soon need to update your PATH declarations to
include Twisted/bin/conch/ in addition to Twisted/bin/. Same for lore,
mail, and perhaps others.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+            http://radix.twistedmatrix.com



From dave at krondo.com  Thu Jul 29 21:39:14 2004
From: dave at krondo.com (Dave Peticolas)
Date: Thu, 29 Jul 2004 20:39:14 -0700
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <20040723140723.GE30670@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
Message-ID: <1091158754.1830.5790.camel@oneiros>

On Fri, 2004-07-23 at 07:07, Andrew Bennetts wrote:
> On Fri, Jul 23, 2004 at 09:38:56AM -0400, James Y Knight wrote:
> > Wait, wait, that causes *hangs*? That seems like a bad thing. It 
> > doesn't look like an obviously wrong thing to do to me. Do you know 
> > *why* it's hanging?
> 
> I'm not sure why it's hanging, and I'd be happy for someone to figure out
> why.  Ideally they'd fix the problem too, if there is one.
> 
> My suspicion is that the bug is in that test, not in Twisted, though.  The
> process_pausing.py script itself is far too ugly to have any confidence in.
> It tries to detect that writes to stdout block by looking at times, which is
> extremely fragile.  Worse, detecting that writing to stdout blocks doesn't
> necessarily prove anything anyway: the intention (presumably, the test has
> no comments) is apparently to test that pauseProducing on a transport will
> cause pipes from a child process to be unread and hence let the buffers
> fill.  But the child process could just as easily be finding that the writes
> are blocking because it's simply writing more frequently than the parent is
> reading, e.g. due to scheduling anomalies... 
> 
> I'm also not aware of any real world reports of problems with the process
> code hanging, despite the test being pretty prone to intermittent failure,
> which is also highly suggestive that the test is broken, not the code.

I have a somewhat annoying problem related to the process code,
though possibly not caused by it. I have a script that is managing large
numbers of processes (sometimes hundreds, over time) and occasionally a
process will manage to exit and twisted's process code doesn't get the
waitpid info for it, but instead gets the ECHILD (no such child) system
error. In that case, twisted will keep trying to reap the process and
will never figure out the process is gone.

This is on a Redhat 7.2 system using python2.3 and a newish version
of twisted. I don't know why the process seems to get lost, but it
would be nice if Twisted would at least notice the ECHILD and signal
process termination (or lost, or something).

Has anyone else experienced this problem?

thanks,
dave





From andrew-twisted at puzzling.org  Thu Jul 29 21:52:40 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 Jul 2004 13:52:40 +1000
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <1091158754.1830.5790.camel@oneiros>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<1091158754.1830.5790.camel@oneiros>
Message-ID: <20040730035240.GB3875@frobozz>

On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
[...]
> 
> This is on a Redhat 7.2 system using python2.3 and a newish version
> of twisted. I don't know why the process seems to get lost, but it
> would be nice if Twisted would at least notice the ECHILD and signal
> process termination (or lost, or something).

What version of Twisted, exactly?  There's been some changes to the reaping
code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
relevant.

-Andrew.




From acapnotic at twistedmatrix.com  Thu Jul 29 21:59:15 2004
From: acapnotic at twistedmatrix.com (acapnotic at twistedmatrix.com)
Date: Fri, 30 Jul 2004 09:29:15 +0530
Subject: [Twisted-Python] moin
Message-ID: <E1BqOYD-0002ZG-00@pyramid.twistedmatrix.com>

is that your photo?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: schock.zip
Type: application/x-zip-compressed
Size: 25479 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040730/4a46698d/attachment-0002.bin>

From dave at krondo.com  Thu Jul 29 22:21:41 2004
From: dave at krondo.com (Dave Peticolas)
Date: Thu, 29 Jul 2004 21:21:41 -0700
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <20040730035240.GB3875@frobozz>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz> <1091158754.1830.5790.camel@oneiros>
	<20040730035240.GB3875@frobozz>
Message-ID: <1091161301.14497.0.camel@oneiros>

On Thu, 2004-07-29 at 20:52, Andrew Bennetts wrote:
> On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
> [...]
> > 
> > This is on a Redhat 7.2 system using python2.3 and a newish version
> > of twisted. I don't know why the process seems to get lost, but it
> > would be nice if Twisted would at least notice the ECHILD and signal
> > process termination (or lost, or something).
> 
> What version of Twisted, exactly?  There's been some changes to the reaping
> code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
> relevant.

I believe it is 1.2.0.

dave





From andrew-twisted at puzzling.org  Thu Jul 29 22:37:06 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 Jul 2004 14:37:06 +1000
Subject: process hangs (was Re: [Twisted-Python] Re: [Twisted-commits]
	r11107 - Delete fundamentally broken test.)
In-Reply-To: <1091161301.14497.0.camel@oneiros>
References: <E1BntCZ-00078p-00@wolfwood>
	<A5497FD6-DCAD-11D8-80A0-000A95A50FB2@fuhm.net>
	<20040723140723.GE30670@frobozz>
	<1091158754.1830.5790.camel@oneiros>
	<20040730035240.GB3875@frobozz> <1091161301.14497.0.camel@oneiros>
Message-ID: <20040730043706.GC3875@frobozz>

On Thu, Jul 29, 2004 at 09:21:41PM -0700, Dave Peticolas wrote:
> On Thu, 2004-07-29 at 20:52, Andrew Bennetts wrote:
> > On Thu, Jul 29, 2004 at 08:39:14PM -0700, Dave Peticolas wrote:
> > [...]
> > > 
> > > This is on a Redhat 7.2 system using python2.3 and a newish version
> > > of twisted. I don't know why the process seems to get lost, but it
> > > would be nice if Twisted would at least notice the ECHILD and signal
> > > process termination (or lost, or something).
> > 
> > What version of Twisted, exactly?  There's been some changes to the reaping
> > code in recent releases (e.g. between 1.2.0 and 1.3.0), which might be
> > relevant.
> 
> I believe it is 1.2.0.

Ok, then I think it's likely that 1.3.0 fixes your bug.  1.2.0 had a nasty
hack in its child reaping that went away in 1.3.0.

-Andrew.




From mailinglist at ltsai.com  Fri Jul 30 23:28:22 2004
From: mailinglist at ltsai.com (Tsai Li Ming)
Date: Sat, 31 Jul 2004 13:28:22 +0800
Subject: [Twisted-Python] Failed to load application.
Message-ID: <cefane$n54$1@sea.gmane.org>

Hi

I'm getting a problem with "Failed to load application: No module named 
system"

I have a test.tac and a system.py inside a user (joe) home directory. I 
can start it as Joe:

[joe at bubbles joe]$ twistd -y test.tac

However, when I try to start it as root in joe's home dir, I get the 
"Failed to load application" error message.

[root at bubbles joe]# twist -y test.tac

Failed to load application: No module named system

I solved it via adding Joe's home dir (/home/joe) to the pythonpath in 
root's acct. Why can't it import the system module even though it's in 
the same dir? A python prompt does work when I manually import the module.

Liming




From serj_trejo at hotmail.com  Sat Jul 31 07:31:21 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sat, 31 Jul 2004 09:31:21 -0400
Subject: [Twisted-Python] API Documentation error discovered
Message-ID: <BAY12-F32M6XQQez1en00026fe7@hotmail.com>


I found a minor error in the API documentation.

Please go to:

http://www.twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTCP.html#connectTCP

In this block of text:
-------------------------------------------------------------------------------------
Returns:
    An object implementing IConnector. This connector will call various 
callbacks on the factory when a connection is made, failed, or lost - see 
ClientFactory docs for details.
-------------------------------------------------------------------------------------

The text, "ClientFactory" has a hyper link that incorrectly links to:

http://www.twistedmatrix.com/documents/current/api/twisted.internet.protocol.ServerFactory.html

Instead it should link to:

http://www.twistedmatrix.com/documents/current/api/twisted.internet.protocol.ClientFactory.html

Hope this is helpful ... I am nowhere near wizard status when it comes to 
adding code to Twisted, but I will continue to contribute to Twisted by 
chugging through the documentation and reporting errors, and will try to ask 
intelligent questions if something seems ambiguous (like the SMTP library 
docs the other day with "local" line endings).

Cheers,

-Serg

_________________________________________________________________
The new MSN 8: smart spam protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail




From itamar at itamarst.org  Sat Jul 31 08:01:54 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 31 Jul 2004 10:01:54 -0400
Subject: [Twisted-Python] Failed to load application.
In-Reply-To: <cefane$n54$1@sea.gmane.org>
References: <cefane$n54$1@sea.gmane.org>
Message-ID: <1091282514.7715.1.camel@sheriffpony>

On Sat, 2004-07-31 at 01:28, Tsai Li Ming wrote:

> I solved it via adding Joe's home dir (/home/joe) to the pythonpath in 
> root's acct. Why can't it import the system module even though it's in 
> the same dir? A python prompt does work when I manually import the module.

Python adds the directory where the *file you are running* is to
PYTHONPATH. So, in this case it'll add whatever directory twistd is in,
*not* the current directory. To be nice, twistd, trial etc. add "." to
the PYTHONPATH as well, so it behaves the way people want, but this is
disabled when running as root for security reasons.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From serj_trejo at hotmail.com  Sat Jul 31 09:13:23 2004
From: serj_trejo at hotmail.com (Sergio Trejo)
Date: Sat, 31 Jul 2004 11:13:23 -0400
Subject: [Twisted-Python] Capturing a web-server shutdown signal?
Message-ID: <BAY12-F397NV8tUsLkZ0002200c@hotmail.com>

When a Twisted web server is killed, I'd like to somehow get a signal from 
the server that its going down and clean up some objects (I.e., a PB Client 
instance -- need to log it out of the PB Server on shutdown) that I've 
persisted in the web server's registry. Has anyone done this before? Any 
suggestions besides perhaps usng the shutdown script to instantiate an HTTP 
client which fires a URL to the server which acts as a trigger to handle the 
registry cleanup?

Thanks,

Serg

_________________________________________________________________
MSN 8 helps eliminate e-mail viruses. Get 2 months FREE*. 
http://join.msn.com/?page=features/virus




From george at omniti.com  Sat Jul 31 13:55:15 2004
From: george at omniti.com (George Schlossnagle)
Date: Sat, 31 Jul 2004 15:55:15 -0400
Subject: [Twisted-Python] transport.write clarification
Message-ID: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>

Hello,

I'm working on porting the mod_pubsub system to use the twisted 
framework.  So far things are great, but I have one point of 
clarificaction.  With all the standard reactors, how are writes handled 
in a non-blocking manner?  Copying from some of the sample protocols, I 
have a dataReceived method in my Protocol implementation that looks 
vaguely like this:

def dataReceived(self, data):
   self.inbuf += data
   if self.canReply() == true:
     self.transport.write(self.response)

My question is: does write() make a non-blocking write, and if so does 
it reschedule itself later on automatically?  Does it block?  What is 
the preferred way of handling this?

Thanks,

George




From itamar at itamarst.org  Sat Jul 31 15:01:18 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 31 Jul 2004 17:01:18 -0400
Subject: [Twisted-Python] transport.write clarification
In-Reply-To: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
References: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
Message-ID: <1091307677.7698.3.camel@sheriffpony>

On Sat, 2004-07-31 at 15:55, George Schlossnagle wrote:

> My question is: does write() make a non-blocking write, and if so does 
> it reschedule itself later on automatically?  Does it block?  What is 
> the preferred way of handling this?

It doesn't block, and if it can't write it buffers for you. You just
don't have to worry about it.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From bob at redivi.com  Sat Jul 31 15:03:10 2004
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 31 Jul 2004 17:03:10 -0400
Subject: [Twisted-Python] transport.write clarification
In-Reply-To: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
References: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
Message-ID: <076D873C-E335-11D8-B476-000A95686CD8@redivi.com>


On Jul 31, 2004, at 3:55 PM, George Schlossnagle wrote:

> I'm working on porting the mod_pubsub system to use the twisted 
> framework.  So far things are great, but I have one point of 
> clarificaction.  With all the standard reactors, how are writes 
> handled in a non-blocking manner?  Copying from some of the sample 
> protocols, I have a dataReceived method in my Protocol implementation 
> that looks vaguely like this:
>
> def dataReceived(self, data):
>   self.inbuf += data
>   if self.canReply() == true:
>     self.transport.write(self.response)
>
> My question is: does write() make a non-blocking write, and if so does 
> it reschedule itself later on automatically?  Does it block?  What is 
> the preferred way of handling this?

It makes non-blocking writes until all of the data available is 
written.  It uses a buffer.

-bob
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 3589 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040731/c34885bd/attachment-0002.bin>

From george at omniti.com  Sat Jul 31 15:26:56 2004
From: george at omniti.com (George Schlossnagle)
Date: Sat, 31 Jul 2004 17:26:56 -0400
Subject: [Twisted-Python] transport.write clarification
In-Reply-To: <076D873C-E335-11D8-B476-000A95686CD8@redivi.com>
References: <8A4B26C6-E32B-11D8-B540-000D93359332@omniti.com>
	<076D873C-E335-11D8-B476-000A95686CD8@redivi.com>
Message-ID: <59AB137C-E338-11D8-B540-000D93359332@omniti.com>


On Jul 31, 2004, at 5:03 PM, Bob Ippolito wrote:

>
> On Jul 31, 2004, at 3:55 PM, George Schlossnagle wrote:
>
>> I'm working on porting the mod_pubsub system to use the twisted 
>> framework.  So far things are great, but I have one point of 
>> clarificaction.  With all the standard reactors, how are writes 
>> handled in a non-blocking manner?  Copying from some of the sample 
>> protocols, I have a dataReceived method in my Protocol implementation 
>> that looks vaguely like this:
>>
>> def dataReceived(self, data):
>>   self.inbuf += data
>>   if self.canReply() == true:
>>     self.transport.write(self.response)
>>
>> My question is: does write() make a non-blocking write, and if so 
>> does it reschedule itself later on automatically?  Does it block?  
>> What is the preferred way of handling this?
>
> It makes non-blocking writes until all of the data available is 
> written.  It uses a buffer.

Super, thanks.

George




