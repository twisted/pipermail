From dp at twistedmatrix.com  Thu Aug  1 01:34:57 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Wed, 31 Jul 2002 22:34:57 -0700
Subject: [Twisted-Python] WebConduit
Message-ID: <B96E16A0.1783%dp@twistedmatrix.com>

I developed this as a proof of concept and several people have expressed
interest in seeing the implementation, so I thought I'd clean it up a little
and send it to the list.

The WebConduit is a project that I have been thinking about doing for
several years now. Basically, it allows users to interact with a MUD server
from a web page without any silly Java applets or frames that reload every 5
seconds.

It does rely heavily on JavaScript to work, specifically it relies on the
later browser's ability to have JavaScript affect the contents of the page
after it has loaded. It also uses a trick pioneered by KnowNow,
www.knownow.com, of opening a frame to a page on the server which the server
never finishes sending to the browser. Using this technique, the Twisted
server can push new JavaScript commands to this iframe in response to events
on the remote server, and these JavaScript commands can in turn affect the
DOM of the main page.

It also uses another iframe to send commands to the twisted server.
JavaScript can set the src attribute of the iframe and use GET parameters to
send arbitrary variables to Twisted. Since all three iframes are coming from
the same browser, the browser sends the same cookie with all three requests.
Each request on the server then has access to the same Session object, and
the three frames can communicate using this session object.

That's about it, I'm pretty proud of the result. Enhoy.

Donovan

P.s. Put the rpy, js, and html files in a directory served by twisted.web,
and put the py file on your PYTHONPATH somewhere.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/applefile
Size: 490 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment.bin 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/applefile
Size: 488 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0001.bin 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0001.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/applefile
Size: 486 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0002.bin 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0002.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/applefile
Size: 486 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0003.bin 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0003.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/applefile
Size: 489 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0004.bin 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: not available
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020731/172c3f6a/attachment-0004.txt 

From info at cleosan.com  Thu Aug  1 06:21:59 2002
From: info at cleosan.com (Fredrik)
Date: Thu, 1 Aug 2002 12:21:59 +0200
Subject: [Twisted-Python] dbapi and pb question
In-Reply-To: <E17aCuA-0000YG-00@zaibach.twistedmatrix.com>
References: <E17aCuA-0000YG-00@zaibach.twistedmatrix.com>
Message-ID: <20020801102159.GA6211@laptop.cleosan.com>

I am a newbie to this  and i try to connect a database to pb,
when trying this code i dont get any response from the server (running pbgtk.py)but the server outputs the print statement, how do I send bacdk a callback to the client ??



from twisted.enterprise import adbapi 
from twisted.spread import pb
from twisted.internet import app


class AgeDatabase(adbapi.Augmentation): 
    """A simple example that can retrieve an age from the database""" 

    def getAAge(self): 
        sql = """SELECT age FROM person """ 
        return self.runQuery(sql) 
 
    def getAge(self, name): 
        sql = """SELECT age FROM person where name = %s """ 
        return self.runQuery(sql, name) 
 
class DefinedError(pb.Error):
    pass

class SimplePerspective(pb.Perspective):
    db = AgeDatabase(adbapi.ConnectionPool("MySQLdb", db='test')) 

    def perspective_echo(self, text):
        print 'echoing',text
        self.db.getAge(text).addCallback(self.gotAge,text)  

    def perspective_error(self):
        raise DefinedError("exception!")

    #########################################
    # the next function wont return to client 
    
    def gotAge(self,resultlist, name): 
        age = resultlist[0][0]          # First field of first record 
        print "%s is %d years old" % (name, age) 
        return str(age) 


class SimpleService(pb.Service):
    def getPerspectiveNamed(self, name):
        p = SimplePerspective(name)
        p.setService(self)
        return p

if __name__ == '__main__':
    import pbecho
    appl = app.Application("pbecho")
    pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentity("guest")
    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
    appl.run()
    #appl.save("start")



Fredrik Bjornsson
info at cleosan.com




From mattcampbell at pobox.com  Thu Aug  1 13:19:31 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Thu, 1 Aug 2002 12:19:31 -0500
Subject: [Twisted-Python] The stopConsuming method
Message-ID: <20020801121930.A42733@mattc.cm.nu>

I noticed a method in twisted.internet.abstract.FileDescriptor
called stopConsuming, which can be called by the producer to indicate
that there is nothing more to produce.  The method calls
self.unregisterProducer, then self.loseConnection.  I also noticed
that this method isn't part of the IConsumer interface and isn't
implemented by twisted.protocols.http.Request.  I think this method
should be added to IConsumer and implemented by all classes that
implement that interface, because it enables the producer to indicate
that there's nothing more to produce, whether the consumer be a
Transport on which loseConnection is called to terminate the
connection, or a Request on which finish is called to end that
request/response process.
-- 
Matt Campbell
Email and MSN Messenger:  mattcampbell at pobox.com
Phone:  (316) 652-8727
Web site:  http://www.pobox.com/~mattcampbell/



From typo at soniq.net  Thu Aug  1 14:42:10 2002
From: typo at soniq.net (Paul Boehm)
Date: Thu, 1 Aug 2002 20:42:10 +0200
Subject: [Twisted-Python] FilePager
Message-ID: <20020801184210.GA50@soniq.net>

intended for twisted.spread.util:

class FilePager(Pager):
    """A pager for files.
    """
    def __init__(self, collector, file, chunkSize=8192):
        self.file = file
        self.chunkSize = chunkSize
        Pager.__init__(self, collector)
    def nextPage(self):
        data = self.file.read(self.chunkSize)
        if len(data) < self.chunkSize:
            self.stopPaging()
        return data




From arashi1 at pd.jaring.my  Fri Aug  2 05:42:22 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Fri, 2 Aug 2002 17:42:22 +0800
Subject: [Twisted-Python] Dynamic web application using twisted.web.resource
In-Reply-To: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com>
References: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com>
Message-ID: <200208021742.22381.arashi1@pd.jaring.my>

>
> If this is *really* the functionality that you want, again, this is far
> more similar to the traversal semantics of Zope or Quixote. Twisted has
> taken a far more explicit tack, where there is a specific api that your
> objects must implement to provide object-publishing functionality.
>

Well, to tell the truth, I've decided that I don't really want this Zope-like 
functionality after all. What I do want to understand, though is how stuff 
works. The docs are too sparse and I cannot understand how things all work 
together. Specifically, I'm interested to know how to build a custom 
webserver using twisted that does not serve any files at all. And does not 
publish objects like zope. The build your own server with twisted doc is not 
enough somehow. It'd be nice if a tutorial used http as an example.

How do you use all those classes and modules? (twisted.web.server, 
twisted.internet.reactor)? The example Donovan gave (for my earlier post) did 
not give me much insight into how to use these modules and classes. I just 
know it's some really easy answer but...I'm still lost.

How does twisted implement http? wrt the Basic/Simple/CGIHTTPServer modules in 
the python disrto. I remember there was some docs about this but I cannot 
remember where! It's not in the Twisted distro (that I could find anyway).

-- 
Regards,
Mukhsein Johari



From andrew-twisted at puzzling.org  Fri Aug  2 06:36:52 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 2 Aug 2002 20:36:52 +1000
Subject: [Twisted-Python] Dynamic web application using twisted.web.resource
In-Reply-To: <200208021742.22381.arashi1@pd.jaring.my>
References: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com> <200208021742.22381.arashi1@pd.jaring.my>
Message-ID: <20020802103652.GB716@frobozz.local>

On Fri, Aug 02, 2002 at 05:42:22PM +0800, Mukhsein Johari wrote:

[..snip..]
> How does twisted implement http? wrt the Basic/Simple/CGIHTTPServer
> modules in the python disrto. I remember there was some docs about this
> but I cannot remember where! It's not in the Twisted distro (that I could
> find anyway).

Well, it implements HTTP in twisted.protocols.http, rather than using the
synchronous implementations in the python standard library.  But, for
Twisted at least, the protocol is still a considerable step short of being a
server that knows how to do more than just parse requests.  So while the
protocol is implemented in twisted.protocols.http, the actual logic that
knows how to read files, run CGIs, and whatnot, resides in twisted.web.
Hopefully that gives you some idea of where to look to find what you need.

Unfortunately, I don't understand the Twisted Web stuff in any further
detail, and I also would quite like some nice lengthy docs to explain it to
me in small digestible pieces :)

-Andrew.




From steve.waterbury at gsfc.nasa.gov  Thu Aug  1 16:43:50 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 01 Aug 2002 16:43:50 -0400
Subject: [Twisted-Python] [patch] mktap web --resource
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk>
Message-ID: <3D499D86.EF982BC7@gsfc.nasa.gov>

Sune Kirkeby wrote:
> 
> [ Itamar Shtull-Trauring ]
> > Any chance for async large object support as well?
> 
> Yup, as time permits I hope to implement it.  For now I guess I will
> spend more time experimenting with async DB-access in generel,
> though.

Any more news on this front?  (Not that I need large objects ... just 
interested in async db-access in general.  ;^)  BTW, I kind of like some 
things about psycopg (which is not async, of course), but I couldn't get 
t.e.adbapi.py to work with it.  

Cheers,
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From steve.waterbury at gsfc.nasa.gov  Thu Aug  1 16:52:40 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 01 Aug 2002 16:52:40 -0400
Subject: [Twisted-Python] Patch for dbgadgets.py
References: <3D46ACF1.75845321@gsfc.nasa.gov>
Message-ID: <3D499F98.F56C5A0B@gsfc.nasa.gov>

Steve Waterbury wrote:

> ... there
> seems to be a problem with gotPerspectives' call to dbgadgets.py, but
> I haven't messed with gadgets (don't need them yet), so I won't be
> looking at that.  (A gadgets cognoscente could fix it in seconds,
> anyway, I'm sure!  ;^)

OK, I got obsessed and took longer messing with this than I 
should have, but I learned some more stuff about twisted -- none
of which helped me fix the bug because it was just a "%" that 
occurred in a formatted string.  Anyway, this time I did a proper 
(I think) cvs diff.  

I kind of like the little dbauth app ... does anyone use it?  
(I suspect not, since this appears to have been broken for a while ...)  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
-------------- next part --------------
Index: Twisted/twisted/enterprise/dbgadgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/dbgadgets.py,v
retrieving revision 1.4
diff -c -r1.4 dbgadgets.py
*** Twisted/twisted/enterprise/dbgadgets.py	13 Mar 2002 22:38:06 -0000	1.4
--- Twisted/twisted/enterprise/dbgadgets.py	1 Aug 2002 20:41:07 -0000
***************
*** 79,86 ****
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
-         widgets.Gadget.__init__(self)
          self.authorizer = authorizer
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
--- 79,86 ----
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
          self.authorizer = authorizer
+         widgets.Gadget.__init__(self)
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
***************
*** 92,103 ****
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 width="95%">
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % self.identityName)
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )
--- 92,103 ----
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 %s>
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % (self.identityName, 'width="95%"'))
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )

From typo at soniq.net  Fri Aug  2 20:55:33 2002
From: typo at soniq.net (Paul Boehm)
Date: Sat, 3 Aug 2002 02:55:33 +0200
Subject: [Twisted-Python] spread.sturdy reconnect delay
Message-ID: <20020803005533.GA32084@soniq.net>

currently, when spread.sturdy is unable to (re)connect (e.g. because the
connection was refused/server not running), it retries at full
speed.. without any delay.. 

implementing some kind of rate limiting is trivial, but i'm not sure about
the right approach. the issue is current for me, as i'm using sturdy in
my application and wouldn't want it to flood the network too much.

i've come up with the following approaches:
  *) try n times, then wait i seconds, rinse, repeat
  *) try, sleep i, try, sleep i, ...
  *) try, sleep i++, try, sleep i++, ..

suggestions?



From carmstro at twistedmatrix.com  Fri Aug  2 21:17:35 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 02 Aug 2002 21:17:35 -0400
Subject: [Twisted-Python] spread.sturdy reconnect delay
In-Reply-To: <20020803005533.GA32084@soniq.net>
References: <20020803005533.GA32084@soniq.net>
Message-ID: <1028337457.10479.0.camel@radii>

On Fri, 2002-08-02 at 20:55, Paul Boehm wrote:
> i've come up with the following approaches:
>   *) try n times, then wait i seconds, rinse, repeat
>   *) try, sleep i, try, sleep i, ...
>   *) try, sleep i++, try, sleep i++, ..

I'd go with either the first or second, and since the second is simpler,
probably the second.
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From sean at twistedmatrix.com  Sat Aug  3 00:31:23 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Fri, 2 Aug 2002 23:31:23 -0500
Subject: [Twisted-Python] dbapi and pb question
In-Reply-To: <20020801102159.GA6211@laptop.cleosan.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGOEFHCGAA.sean@twistedmatrix.com>

looks to me like the method "perspective_echo" should return the defered
that the method "getAge" gets from  the dbapi.

Try changing:

   def perspective_echo(self, text):
        print 'echoing',text
        self.db.getAge(text).addCallback(self.gotAge,text)

to

   def perspective_echo(self, text):
        print 'echoing',text
        return self.db.getAge(text).addCallback(self.gotAge,text)


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Fredrik
Sent: Thursday, August 01, 2002 5:22 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] dbapi and pb question


I am a newbie to this  and i try to connect a database to pb,
when trying this code i dont get any response from the server (running
pbgtk.py)but the server outputs the print statement, how do I send bacdk a
callback to the client ??



from twisted.enterprise import adbapi
from twisted.spread import pb
from twisted.internet import app


class AgeDatabase(adbapi.Augmentation):
    """A simple example that can retrieve an age from the database"""

    def getAAge(self):
        sql = """SELECT age FROM person """
        return self.runQuery(sql)

    def getAge(self, name):
        sql = """SELECT age FROM person where name = %s """
        return self.runQuery(sql, name)

class DefinedError(pb.Error):
    pass

class SimplePerspective(pb.Perspective):
    db = AgeDatabase(adbapi.ConnectionPool("MySQLdb", db='test'))

    def perspective_echo(self, text):
        print 'echoing',text
        self.db.getAge(text).addCallback(self.gotAge,text)

    def perspective_error(self):
        raise DefinedError("exception!")

    #########################################
    # the next function wont return to client

    def gotAge(self,resultlist, name):
        age = resultlist[0][0]          # First field of first record
        print "%s is %d years old" % (name, age)
        return str(age)


class SimpleService(pb.Service):
    def getPerspectiveNamed(self, name):
        p = SimplePerspective(name)
        p.setService(self)
        return p

if __name__ == '__main__':
    import pbecho
    appl = app.Application("pbecho")

pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentit
y("guest")
    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
    appl.run()
    #appl.save("start")



Fredrik Bjornsson
info at cleosan.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From info at cleosan.com  Sat Aug  3 14:39:11 2002
From: info at cleosan.com (Fredrik)
Date: Sat, 3 Aug 2002 20:39:11 +0200
Subject: [Twisted-Python] dbapi and pb question
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEFHCGAA.sean@twistedmatrix.com>
References: <20020801102159.GA6211@laptop.cleosan.com> <HOEEKPCOKELHCNIJNMAGOEFHCGAA.sean@twistedmatrix.com>
Message-ID: <20020803183911.GA5178@laptop.cleosan.com>

Thank you it works
and now i will try to make many sqls in one transaction, 
if I have any  problem I will return ...

Regards 
Fredrik

On Fri, Aug 02, 2002 at 11:31:23PM -0500, Sean Riley wrote:
> looks to me like the method "perspective_echo" should return the defered
> that the method "getAge" gets from  the dbapi.
> 
> Try changing:
> 
>    def perspective_echo(self, text):
>         print 'echoing',text
>         self.db.getAge(text).addCallback(self.gotAge,text)
> 
> to
> 
>    def perspective_echo(self, text):
>         print 'echoing',text
>         return self.db.getAge(text).addCallback(self.gotAge,text)
> 
> 
> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Fredrik
> Sent: Thursday, August 01, 2002 5:22 AM
> To: twisted-python at twistedmatrix.com
> Subject: [Twisted-Python] dbapi and pb question
> 
> 
> I am a newbie to this  and i try to connect a database to pb,
> when trying this code i dont get any response from the server (running
> pbgtk.py)but the server outputs the print statement, how do I send bacdk a
> callback to the client ??
> 
> 
> 
> from twisted.enterprise import adbapi
> from twisted.spread import pb
> from twisted.internet import app
> 
> 
> class AgeDatabase(adbapi.Augmentation):
>     """A simple example that can retrieve an age from the database"""
> 
>     def getAAge(self):
>         sql = """SELECT age FROM person """
>         return self.runQuery(sql)
> 
>     def getAge(self, name):
>         sql = """SELECT age FROM person where name = %s """
>         return self.runQuery(sql, name)
> 
> class DefinedError(pb.Error):
>     pass
> 
> class SimplePerspective(pb.Perspective):
>     db = AgeDatabase(adbapi.ConnectionPool("MySQLdb", db='test'))
> 
>     def perspective_echo(self, text):
>         print 'echoing',text
>         self.db.getAge(text).addCallback(self.gotAge,text)
> 
>     def perspective_error(self):
>         raise DefinedError("exception!")
> 
>     #########################################
>     # the next function wont return to client
> 
>     def gotAge(self,resultlist, name):
>         age = resultlist[0][0]          # First field of first record
>         print "%s is %d years old" % (name, age)
>         return str(age)
> 
> 
> class SimpleService(pb.Service):
>     def getPerspectiveNamed(self, name):
>         p = SimplePerspective(name)
>         p.setService(self)
>         return p
> 
> if __name__ == '__main__':
>     import pbecho
>     appl = app.Application("pbecho")
> 
> pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentit
> y("guest")
>     appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
>     appl.run()
>     #appl.save("start")
> 
> 
> 
> Fredrik Bjornsson
> info at cleosan.com
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From andrew-twisted at puzzling.org  Sun Aug  4 02:46:27 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 4 Aug 2002 16:46:27 +1000
Subject: [Twisted-Python] [patch] mktap web --resource
In-Reply-To: <3D499D86.EF982BC7@gsfc.nasa.gov>
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov>
Message-ID: <20020804064627.GC549@frobozz.local>

On Thu, Aug 01, 2002 at 04:43:50PM -0400, Steve Waterbury wrote:
> Sune Kirkeby wrote:
> > 
> > [ Itamar Shtull-Trauring ]
> > > Any chance for async large object support as well?
> > 
> > Yup, as time permits I hope to implement it.  For now I guess I will
> > spend more time experimenting with async DB-access in generel,
> > though.
> 
> Any more news on this front?  (Not that I need large objects ... just 
> interested in async db-access in general.  ;^)  BTW, I kind of like some 
> things about psycopg (which is not async, of course), but I couldn't get 
> t.e.adbapi.py to work with it.  

What errors did psycopg with adbapi give?

I know that for the mxODBC Windows stuff, it doesn't *quite* conform to
DB-API 2.0, you need to manually do
    import mx.ODBC.Windows
    mx.ODBC.Windows.threadsafety = 1

to make Twisted like it.

-Andrew.




From steve.waterbury at gsfc.nasa.gov  Fri Aug  2 10:09:31 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 02 Aug 2002 10:09:31 -0400
Subject: [Twisted-Python] Patch for dbgadgets.py
References: <3D46ACF1.75845321@gsfc.nasa.gov>
Message-ID: <3D4A929B.C165D921@gsfc.nasa.gov>

Steve Waterbury wrote:

> ... there
> seems to be a problem with ... dbgadgets.py, but
> I haven't messed with gadgets (don't need them yet), so I won't be
> looking at that.  ...

OK, I got obsessed and fixed it (just a "%" that occurred in a 
formatted string).  

I kind of like the little dbauth app ... does anyone use it?  
(I suspect not, since this appears to have been broken for a 
while ...)  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
-------------- next part --------------
Index: Twisted/twisted/enterprise/dbgadgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/dbgadgets.py,v
retrieving revision 1.4
diff -c -r1.4 dbgadgets.py
*** Twisted/twisted/enterprise/dbgadgets.py	13 Mar 2002 22:38:06 -0000	1.4
--- Twisted/twisted/enterprise/dbgadgets.py	1 Aug 2002 20:41:07 -0000
***************
*** 79,86 ****
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
-         widgets.Gadget.__init__(self)
          self.authorizer = authorizer
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
--- 79,86 ----
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
          self.authorizer = authorizer
+         widgets.Gadget.__init__(self)
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
***************
*** 92,103 ****
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 width="95%">
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % self.identityName)
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )
--- 92,103 ----
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 %s>
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % (self.identityName, 'width="95%"'))
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )


From tv at twistedmatrix.com  Sat Aug  3 04:58:40 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 3 Aug 2002 11:58:40 +0300
Subject: [Twisted-Python] ClientFactory.connectionLost(connector, reason)
Message-ID: <20020803085840.GA8370@ki.yok.utu.fi>

	Hi. I've been groaning about how Twisted loses
	the actual errors, and does not allow programs
	to accurately report them to the user. Here is
	some progress on fixing that..

	ClientFactory's connectionLost() method will get
	a new parameter "reason", which will be a 
	failure.Failure(SomeException()). There will be
	no backwards compatibility; I will fix atleast
	the code in the main tree that has tests (that
	succeeded before the patch!). If you want to ensure
	compatibility, start using "def connectionLost(connector,
	reason=None)" right now.

	At a later stage, Protocol's connectionLost will get
	an extra argument also, a reason as above. There
	will be backwards compatibility, but having a
	non-reason-taking Protocol will be deprecated from
	that moment on, with a warning message.


	Now, what I need from you guys is

	1) review the patch

	2) write TCP/Connector/ClientFactory/Protocol tests
	   about connectionLost (and ClientFactory.connectionFailed)

	3) fix cReactor

	4) fix win32eventreactor

	5) fix kqreactor

	6) test qtreactor

	7) test gtkreactor


	My current working patch is attached.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}
-------------- next part --------------
Index: doc/examples/echoclient_ssl.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/echoclient_ssl.py,v
retrieving revision 1.1
diff -u -u -r1.1 echoclient_ssl.py
--- doc/examples/echoclient_ssl.py	31 Jul 2002 22:01:02 -0000	1.1
+++ doc/examples/echoclient_ssl.py	3 Aug 2002 08:40:44 -0000
@@ -68,8 +68,8 @@
         print 'connection failed:', reason.getErrorMessage()
         reactor.stop()
 
-    def connectionLost(self, connector):
-        print 'connection lost'
+    def connectionLost(self, connector, reason):
+        print 'connection lost:', reason.getErrorMessage()
         reactor.stop()
 
 factory = EchoClientFactory()
Index: doc/examples/ircLogBot.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/ircLogBot.py,v
retrieving revision 1.7
diff -u -u -r1.7 ircLogBot.py
--- doc/examples/ircLogBot.py	24 Jul 2002 02:25:41 -0000	1.7
+++ doc/examples/ircLogBot.py	3 Aug 2002 08:40:44 -0000
@@ -91,7 +91,7 @@
         self.channel = channel
         self.filename = filename
 
-    def connectionLost(self, connector):
+    def connectionLost(self, connector, reason):
         connector.connect()
 
     def connectionFailed(self, connector, reason):
Index: twisted/internet/abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.25
diff -u -u -r1.25 abstract.py
--- twisted/internet/abstract.py	14 Jul 2002 03:19:49 -0000	1.25
+++ twisted/internet/abstract.py	3 Aug 2002 08:40:44 -0000
@@ -49,7 +49,7 @@
             from twisted.internet import reactor
         self.reactor = reactor
     
-    def connectionLost(self):
+    def connectionLost(self, reason):
         """The connection was lost.
 
         This is called when the connection on a selectable object has been
Index: twisted/internet/base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.13
diff -u -u -r1.13 base.py
--- twisted/internet/base.py	24 Jul 2002 05:22:58 -0000	1.13
+++ twisted/internet/base.py	3 Aug 2002 08:40:45 -0000
@@ -158,7 +158,7 @@
         for reader in selectables:
             try:
                 log.logOwner.own(reader)
-                reader.connectionLost()
+                reader.connectionLost(main.CONNECTION_LOST)
                 log.logOwner.disown(reader)
             except:
                 log.deferr()
Index: twisted/internet/default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.25
diff -u -u -r1.25 default.py
--- twisted/internet/default.py	29 Jul 2002 23:33:55 -0000	1.25
+++ twisted/internet/default.py	3 Aug 2002 08:40:45 -0000
@@ -25,6 +25,7 @@
 import os
 import socket
 import signal
+import sys
 
 from twisted.internet.interfaces import IReactorCore, IReactorTime, IReactorUNIX
 from twisted.internet.interfaces import IReactorTCP, IReactorUDP, IReactorSSL
@@ -32,7 +33,7 @@
 from twisted.internet import main, error, protocol, interfaces
 
 from twisted.internet import main, tcp, udp, task
-from twisted.python import log, threadable
+from twisted.python import log, threadable, failure
 from twisted.persisted import styles
 from twisted.python.runtime import platform
 
@@ -44,7 +45,7 @@
 except:
     sslEnabled = 0
 
-from main import CONNECTION_LOST, CONNECTION_DONE
+from main import CONNECTION_LOST
 
 if platform.getType() != 'java':
     import select
@@ -112,9 +113,9 @@
             # factory hasn't called our connect() method
             self.factory.doStop()
 
-    def connectionLost(self):
+    def connectionLost(self, reason):
         self.state = "disconnected"
-        self.factory.connectionLost(self)
+        self.factory.connectionLost(self, reason)
         if self.state == "disconnected":
             # factory hasn't called our connect() method
             self.factory.doStop()
@@ -527,16 +528,18 @@
                 try:
                     why = getattr(selectable, method)()
                     handfn = getattr(selectable, 'fileno', None)
-                    if not handfn or handfn() == -1:
-                        why = CONNECTION_LOST
+                    if not handfn:
+                        why = main.ConnectionFdescWentAway('Handler has no fileno method')
+                    elif handfn() == -1:
+                        why = main.ConnectionFdescWentAway('Filedescriptor went away')
                 except:
                     log.deferr()
-                    why = CONNECTION_LOST
+                    why = sys.exc_value
                 if why:
                     self.removeReader(selectable)
                     self.removeWriter(selectable)
                     try:
-                        selectable.connectionLost()
+                        selectable.connectionLost(failure.Failure(why))
                     except:
                         log.deferr()
                 log.logOwner.disown(selectable)
Index: twisted/internet/fdesc.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/fdesc.py,v
retrieving revision 1.1
diff -u -u -r1.1 fdesc.py
--- twisted/internet/fdesc.py	6 Jul 2002 15:17:30 -0000	1.1
+++ twisted/internet/fdesc.py	3 Aug 2002 08:40:45 -0000
@@ -26,7 +26,7 @@
     import FCNTL
 
 # twisted imports
-from main import CONNECTION_LOST, CONNECTION_DONE
+from main import CONNECTION_LOST
 
 
 def setNonBlocking(fd):
Index: twisted/internet/gtkreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/gtkreactor.py,v
retrieving revision 1.4
diff -u -u -r1.4 gtkreactor.py
--- twisted/internet/gtkreactor.py	7 Jul 2002 05:34:34 -0000	1.4
+++ twisted/internet/gtkreactor.py	3 Aug 2002 08:40:45 -0000
@@ -114,12 +114,12 @@
                 method = getattr(source, cbName)
                 why = method()
             except:
-                why = main.CONNECTION_LOST
+                why = sys.exc_value
                 log.msg('Error In %s.%s' %(source,cbName))
                 log.deferr()
             if why:
                 try:
-                    source.connectionLost()
+                    source.connectionLost(why)
                 except:
                     log.deferr()
                 self.removeReader(source)
Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.78
diff -u -u -r1.78 main.py
--- twisted/internet/main.py	7 Jul 2002 03:58:07 -0000	1.78
+++ twisted/internet/main.py	3 Aug 2002 08:40:46 -0000
@@ -18,8 +18,14 @@
 
 # System Imports
 import socket
-CONNECTION_LOST = -1
-CONNECTION_DONE = -2
+class ConnectionLost(Exception):
+    pass
+CONNECTION_LOST = ConnectionLost('Connection lost')
+class ConnectionDone(Exception):
+    pass
+CONNECTION_DONE = ConnectionDone('Connection done')
+class ConnectionFdescWentAway(Exception):
+    pass
 
 # Twisted Imports
 
Index: twisted/internet/pollreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/pollreactor.py,v
retrieving revision 1.4
diff -u -u -r1.4 pollreactor.py
--- twisted/internet/pollreactor.py	7 Jul 2002 02:02:57 -0000	1.4
+++ twisted/internet/pollreactor.py	3 Aug 2002 08:40:46 -0000
@@ -25,10 +25,10 @@
 """
 
 # System imports
-import select, errno
+import select, errno, sys
 
 # Twisted imports
-from twisted.python import log, threadable
+from twisted.python import log, threadable, failure
 from twisted.internet import main, default
 
 # globals
@@ -139,16 +139,16 @@
                     if not why and event & POLLOUT:
                         why = selectable.doWrite()
                     if not selectable.fileno() == fd:
-                        why = main.CONNECTION_LOST
+                        why = main.ConnectionFdescWentAway('Filedescriptor went away')
                 except:
                     log.deferr()
-                    why = main.CONNECTION_LOST
+                    why = sys.exc_value
 
             if why:
                 self.removeReader(selectable)
                 self.removeWriter(selectable)
                 try:
-                    selectable.connectionLost()
+                    selectable.connectionLost(failure.Failure(why))
                 except:
                     log.deferr()
 
Index: twisted/internet/protocol.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/protocol.py,v
retrieving revision 1.11
diff -u -u -r1.11 protocol.py
--- twisted/internet/protocol.py	28 Jul 2002 18:43:54 -0000	1.11
+++ twisted/internet/protocol.py	3 Aug 2002 08:40:46 -0000
@@ -108,7 +108,7 @@
     def connectionFailed(self, connector, reason):
         """Called when a connection has failed."""
 
-    def connectionLost(self, connector):
+    def connectionLost(self, connector, reason):
         """Called when a connection is lost.
 
         It may be useful to call connector.connect() - this will reconnect.
Index: twisted/internet/ptypro.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/ptypro.py,v
retrieving revision 1.2
diff -u -u -r1.2 ptypro.py
--- twisted/internet/ptypro.py	15 Jul 2002 22:10:59 -0000	1.2
+++ twisted/internet/ptypro.py	3 Aug 2002 08:40:46 -0000
@@ -25,7 +25,7 @@
 
 # Sibling Imports
 import abstract, main, fdesc, process
-from main import CONNECTION_LOST, CONNECTION_DONE
+from main import CONNECTION_LOST
 
 
 class Process(abstract.FileDescriptor, styles.Ephemeral):
Index: twisted/internet/qtreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/qtreactor.py,v
retrieving revision 1.4
diff -u -u -r1.4 qtreactor.py
--- twisted/internet/qtreactor.py	29 Jul 2002 19:54:19 -0000	1.4
+++ twisted/internet/qtreactor.py	3 Aug 2002 08:40:46 -0000
@@ -30,6 +30,7 @@
 
 # System Imports
 from qt import QSocketNotifier, QObject, SIGNAL, QTimer, QApplication
+import sys
 
 # Twisted Imports
 from twisted.python import log, threadable
@@ -68,12 +69,12 @@
         try:
             why = w.doRead()
         except:
-            why = main.CONNECTION_LOST
+            why = sys.exc_value
             log.msg('Error in %s.doRead()' % w)
             log.deferr()
         if why:
             try:
-                w.connectionLost()
+                w.connectionLost(why)
             except:
                 log.deferr()
             self.reactor.removeReader(w)
@@ -87,12 +88,12 @@
         try:
             why = w.doWrite()
         except:
-            why = main.CONNECTION_LOST
+            why = sys.exc_value
             log.msg('Error in %s.doWrite()' % w)
             log.deferr()
         if why:
             try:
-                w.connectionLost()
+                w.connectionLost(why)
             except:
                 log.deferr()
             self.reactor.removeReader(w)
Index: twisted/internet/tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.84
diff -u -u -r1.84 tcp.py
--- twisted/internet/tcp.py	30 Jul 2002 21:16:01 -0000	1.84
+++ twisted/internet/tcp.py	3 Aug 2002 08:40:47 -0000
@@ -127,10 +127,10 @@
         except socket.error:
             pass
     
-    def connectionLost(self):
+    def connectionLost(self, reason):
         """See abstract.FileDescriptor.connectionLost().
         """
-        abstract.FileDescriptor.connectionLost(self)
+        abstract.FileDescriptor.connectionLost(self, reason)
         self._closeSocket()
         protocol = self.protocol
         del self.protocol
@@ -241,12 +241,12 @@
         self.protocol.makeConnection(self)
         self.logstr = self.protocol.__class__.__name__+",client"
     
-    def connectionLost(self):
+    def connectionLost(self, reason):
         if not self.connected:
             self.failIfNotConnected(error.ConnectError())
         else:
-            Connection.connectionLost(self)
-            self.connector.connectionLost()
+            Connection.connectionLost(self, reason)
+            self.connector.connectionLost(reason)
 
     def getHost(self):
         """Returns a tuple of ('INET', hostname, port).
@@ -498,15 +498,16 @@
         self.disconnecting = 1
         self.stopReading()
         if self.connected:
-            self.reactor.callLater(0, self.connectionLost)
+            self.reactor.callLater(0, self.connectionLost,
+                                   main.CONNECTION_DONE)
 
     stopListening = loseConnection
 
-    def connectionLost(self):
+    def connectionLost(self, reason):
         """Cleans up my socket.
         """
         log.msg('(Port %s Closed)' % self.port)
-        abstract.FileDescriptor.connectionLost(self)
+        abstract.FileDescriptor.connectionLost(self, reason)
         self.connected = 0
         self.socket.close()
         if self.unixsocket:
Index: twisted/protocols/loopback.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/loopback.py,v
retrieving revision 1.11
diff -u -u -r1.11 loopback.py
--- twisted/protocols/loopback.py	29 Jul 2002 17:42:36 -0000	1.11
+++ twisted/protocols/loopback.py	3 Aug 2002 08:40:47 -0000
@@ -89,7 +89,7 @@
     def buildProtocol(self, addr):
         return self.protocol
 
-    def connectionLost(self, connector):
+    def connectionLost(self, connector, reason):
         self.disconnected = 1
 
 

From tv at twistedmatrix.com  Sat Aug  3 05:05:26 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 3 Aug 2002 12:05:26 +0300
Subject: [Twisted-Python] Dynamic web application using twisted.web.resource
In-Reply-To: <200208021742.22381.arashi1@pd.jaring.my>
References: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com> <200208021742.22381.arashi1@pd.jaring.my>
Message-ID: <20020803090526.GB8370@ki.yok.utu.fi>

On Fri, Aug 02, 2002 at 05:42:22PM +0800, Mukhsein Johari wrote:

> understand how things all work together. Specifically, I'm
> interested to know how to build a custom webserver using twisted
> that does not serve any files at all. And does not publish objects
> like zope. The build your own server with twisted doc is not enough
> somehow. It'd be nice if a tutorial used http as an example.  How do
> you use all those classes and modules? (twisted.web.server,
> twisted.internet.reactor)? The example Donovan gave (for my earlier

	Well, one real-world example, totaling ~1600 lines
	of webby stuff, is ldaptor. There's an app in there
	called ldaptor-webui, that acts as an adaptor between
	WWW and LDAP. It uses twisted.web.widgets. You'll need
	an LDAP server to play -- apt-get install slapd.

	The latest release is at 
	http://twistedmatrix.com/users/tv/ldaptor/

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From tv at twistedmatrix.com  Sun Aug  4 12:23:15 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 4 Aug 2002 19:23:15 +0300
Subject: [Twisted-Python] debian/control bug: only python-twisted depends on python-gtk
Message-ID: <20020804162315.GA5093@ki.yok.utu.fi>

	I think there's a bug in debian/control:
	currently, only python-twisted depends on python-gtk.
	But python-twisted is only a dummy package, and it's
	presence is not guaranteed in anyway (e.g. an app
	that needs python2.2 will depend on python2.2-twisted).

	Shouldn't python-gtk be split into python2.1-gtk,
	python2.2-gtk, and pythonX.Y-twisted depend on
	pythonX.Y-gtk?

	And while python-gtk is not split, python2.1-twisted
	should depend on python-gtk (>= 2.1), python-gtk (<< 2.2),
	and python2.2-twisted effectively has no gtk stuff.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From abo at minkirri.apana.org.au  Sun Aug  4 18:18:12 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Mon, 5 Aug 2002 08:18:12 +1000
Subject: [Twisted-Python] spread.sturdy reconnect delay
In-Reply-To: <20020803005533.GA32084@soniq.net>
References: <20020803005533.GA32084@soniq.net>
Message-ID: <20020804221811.GB31059@minkirri.apana.org.au>

On Sat, Aug 03, 2002 at 02:55:33AM +0200, Paul Boehm wrote:
> currently, when spread.sturdy is unable to (re)connect (e.g. because the
> connection was refused/server not running), it retries at full
> speed.. without any delay.. 
> 
> implementing some kind of rate limiting is trivial, but i'm not sure about
> the right approach. the issue is current for me, as i'm using sturdy in
> my application and wouldn't want it to flood the network too much.
> 
> i've come up with the following approaches:
>   *) try n times, then wait i seconds, rinse, repeat
>   *) try, sleep i, try, sleep i, ...
>   *) try, sleep i++, try, sleep i++, ..

What about exponential backoff...

    *) try, sleep i, i=i*2, repeat

the i can grow very large very quickly. This approaches the heuristic of "it
has been down for total of x seconds and it's still not up, so I'll wait x
seconds more before trying again". ie assume the last failed attempt was in
the middle of the total down time.  

A more explicit version of this with a tuneable factor would be;
   total=1
   try, i=f*total, sleep i, total+=i, repeat
   
or, taking into account the time taken trying;
   start=time()
   try, i=f*(time()-start), sleep i, repeat

where 0<f (usually f<1), and indicates you should wait f fraction of the
total time already waited. ie setting f=0.1 indicates you should wait 10% of
the total time already waited.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From exarkun at meson.dyndns.org  Sun Aug  4 19:49:05 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 4 Aug 2002 19:49:05 -0400
Subject: [Twisted-Python] spread.sturdy reconnect delay
In-Reply-To: <20020804221811.GB31059@minkirri.apana.org.au>
References: <20020803005533.GA32084@soniq.net> <20020804221811.GB31059@minkirri.apana.org.au>
Message-ID: <20020804234905.GA12016@meson.dyndns.org>

On Mon, Aug 05, 2002 at 08:18:12AM +1000, Donovan Baarda wrote:
> On Sat, Aug 03, 2002 at 02:55:33AM +0200, Paul Boehm wrote:
> > [snip]
> [snip]
> 
> What about exponential backoff...
> 
>     *) try, sleep i, i=i*2, repeat
> 

  FWIW, this is essentially the approach I used in my mud client ;P  It
works fairly well.  The one important difference is there's a cap on the
wait time (I use 2^17 seconds, or ~36 minutes).  I think this gives a good
balance between getting reconnected quickly and not flooding the destination
with connection attempts.  Of course this pattern is pretty easily
generalizable -- a factory with two parameters, the growth factor and the
cap.  Might it be a good idea to include a few of the simpler approaches
somewhere?  The code for most of these probably wouldn't be more than 5
lines, but having them all collected, pre-written, and of course bug-free
would be pretty handy IMHO.  Actually, now I'm thinking of some kind of
policy objects instead of Factory subclasses - something that can be shared
between factories or swapped around as desired without rebuilding your
factories.

 Jp

-- 
"Pascal is Pascal is Pascal is dog meat."
                -- M. Devine and P. Larson, Computer Science 340
--
 7:38pm up 75 days, 20:26, 6 users, load average: 0.14, 0.09, 0.03
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020804/8a0044ba/attachment.pgp 

From info at cleosan.com  Mon Aug  5 05:29:00 2002
From: info at cleosan.com (Fredrik)
Date: Mon, 5 Aug 2002 11:29:00 +0200
Subject: [Twisted-Python] pb and adabpi witn interaction...
In-Reply-To: <3D4A929B.C165D921@gsfc.nasa.gov>
References: <3D46ACF1.75845321@gsfc.nasa.gov> <3D4A929B.C165D921@gsfc.nasa.gov>
Message-ID: <20020805092900.GA5239@laptop.cleosan.com>

Problem with returning the value to the pb-client using interaction...
the code will print out the "Nextid is (number)" on the server but it
wont return the value to the client.

/Fredrik

from twisted.enterprise import adbapi 
from twisted.spread import pb
from twisted.internet import app

def getNextId(conn, tableName): 
    sql = """SELECT NextId FROM DbSequence where SeqName = '%s' """%(tableName)
    print sql
    conn.execute(sql)
    return conn.fetchall()
 
class DefinedError(pb.Error):
    pass

class SimplePerspective(pb.Perspective):
    db = adbapi.ConnectionPool("MySQLdb", db='dbname', user="root") 

    def perspective_echo(self, tableName):
        print 'echoing',tableName
        return self.db.interaction(getNextId,self.gotNextId,None,tableName)  
        
        # _^_
        # this dont return any value to the client 
    

    def perspective_error(self):
        raise DefinedError("exception!")

    def gotNextId(self,resultlist): 
        nextid = resultlist[0][0]
        print "next id is %d ." % (nextid) 
        return nextid 
    
class SimpleService(pb.Service):
    def getPerspectiveNamed(self, name):
        p = SimplePerspective(name)
        p.setService(self)
        return p

if __name__ == '__main__':
    import pbecho
    appl = app.Application("pbecho")
    pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentity("guest")
    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
    appl.run()
    #appl.save("start")





From steve.waterbury at gsfc.nasa.gov  Sun Aug  4 16:07:55 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Sun, 04 Aug 2002 16:07:55 -0400
Subject: [Twisted-Python] Patch for dbgadgets.py
References: <3D46ACF1.75845321@gsfc.nasa.gov> <3D4A929B.C165D921@gsfc.nasa.gov>
Message-ID: <3D4D899B.CD0C42AF@gsfc.nasa.gov>

Sorry about the duplicate post!  (I thought the first one got lost, 
since I received a couple of posts that had been sent later.)  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From steve.waterbury at gsfc.nasa.gov  Sun Aug  4 22:18:18 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Sun, 04 Aug 2002 22:18:18 -0400
Subject: [Twisted-Python] [patch] mktap web --resource
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov> <20020804064627.GC549@frobozz.local>
Message-ID: <3D4DE06A.B0EA5ACE@gsfc.nasa.gov>

Andrew Bennetts wrote:
> 
> On Thu, Aug 01, 2002 at 04:43:50PM -0400, Steve Waterbury wrote:
> > Sune Kirkeby wrote:
> > >
> > > [ Itamar Shtull-Trauring ]
> > > > Any chance for async large object support as well?
> > >
> > > Yup, as time permits I hope to implement it.  For now I guess I will
> > > spend more time experimenting with async DB-access in generel,
> > > though.
> >
> > Any more news on this front?  (Not that I need large objects ... just
> > interested in async db-access in general.  ;^)  BTW, I kind of like some
> > things about psycopg (which is not async, of course), but I couldn't get
> > t.e.adbapi.py to work with it.
> 
> What errors did psycopg with adbapi give?

Er, none actually!  Oops ... *blush* ... sorry for the FUD.  I had originally 
tried it back in May, when I was still in a Twisted larval phase ... so 
now I went back and fixed my little test script and ... it works!  

Gee, that's cool!  I'll try it out along with pypgsql as I'm developing my app 
and report back if I see any interesting differences.  

Thanks for asking what errors it gave ... trying to duplicate my 
experiment was enlightening.  (Well, yes, you might think I would have 
tried that before asking ... *sigh* ... :P

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From twisted at itamarst.org  Tue Aug  6 16:31:46 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 06 Aug 2002 16:31:46 -0400
Subject: [Twisted-Python] ClientFactory.connectionLost(connector, reason)
References: <20020803085840.GA8370@ki.yok.utu.fi>
Message-ID: <3D503232.9010606@itamarst.org>

Tommi Virtanen wrote:

> 	Hi. I've been groaning about how Twisted loses
> 	the actual errors, and does not allow programs
> 	to accurately report them to the user. Here is
> 	some progress on fixing that..

I've checked in an updated version of this patch. Please take a look in CVS!




From glyph at twistedmatrix.com  Tue Aug  6 16:47:10 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 06 Aug 2002 15:47:10 -0500 (CDT)
Subject: [Twisted-Python] Patch for dbgadgets.py
In-Reply-To: <3D4D899B.CD0C42AF@gsfc.nasa.gov>
References: <3D46ACF1.75845321@gsfc.nasa.gov>
	<3D4A929B.C165D921@gsfc.nasa.gov>
	<3D4D899B.CD0C42AF@gsfc.nasa.gov>
Message-ID: <20020806.154710.74750764.glyph@twistedmatrix.com>


On Sun, 04 Aug 2002 16:07:55 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> Sorry about the duplicate post!  (I thought the first one got lost, 
> since I received a couple of posts that had been sent later.)  

This will sometimes happen because I can't check my email for a while.  Anyone
who doesn't have a subscription to the list needs to be manually OK'd for
posting every time they do it.

This technique blocks a LOT of spam to this list :).

If you (the plural "you", not just Steve...) post from a different email
address than you read from, or the Sender: header from your mail is messed up
for firewall reasons, then you can subscribe the address you send and set the
"nomail" mailman option to have it never actually deliver any mail.

If you don't do this, then I'm going to have to keep manually verifying every
post you write, and sometimes duplicates will go through.  Lately the number of
people I've had to do this for has decreased, but I still OK about 6 or 7 valid
messages per week.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020806/89c0fc63/attachment.pgp 

From typo at soniq.net  Wed Aug  7 10:28:31 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 7 Aug 2002 16:28:31 +0200
Subject: [Twisted-Python] sturdy
Message-ID: <20020807142831.GA23448@soniq.net>

compare Twisted-0.19 behaviour to current cvs behaviour for this:

---
from twisted.spread import sturdy
from twisted.internet import reactor

sturdy.PerspectiveConnector("localhost", 8787, "update", \
"secret", "sam", "update", 1).callRemote("moo")

reactor.run()
---

current cvs doesn't do reconnect attempts... this has to have
broken in the last few days, but i don't know exactly where
or when.

  paul



From waterbug at beeblebrox.gsfc.nasa.gov  Fri Aug  9 01:38:52 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 09 Aug 2002 01:38:52 -0400
Subject: [Twisted-Python] usage appears to be broke in cvs ...
Message-ID: <3D53556C.9E272A16@beeblebrox.gsfc.nasa.gov>

usage fails test_checkFlags and test_checkParameters

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From exarkun at meson.dyndns.org  Fri Aug  9 12:18:26 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 9 Aug 2002 12:18:26 -0400
Subject: [Twisted-Python] usage appears to be broke in cvs ...
In-Reply-To: <3D53556C.9E272A16@beeblebrox.gsfc.nasa.gov>
References: <3D53556C.9E272A16@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020809161826.GA3212@meson.dyndns.org>

On Fri, Aug 09, 2002 at 01:38:52AM -0400, Steve Waterbury wrote:
> usage fails test_checkFlags and test_checkParameters
> 
> -- Steve.
> 
> Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
> 

  Thanks.  Fix committed.

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
--
 12:17pm up 80 days, 13:05, 6 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020809/b4f94feb/attachment.pgp 

From waterbug at beeblebrox.gsfc.nasa.gov  Sat Aug 10 02:23:01 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 10 Aug 2002 02:23:01 -0400
Subject: [Twisted-Python] PB over unix socket ... how?
Message-ID: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov>

twisted gurus ... help!

I want to use PB down in the guts of my application, but only later on 
will I actually be using the pb protocol over the network, so in the 
meantime I'd like to play it safe and have PB talk to other components 
over unix domain sockets.  

I know from wandering around in the internet module that there's lots 
of support for unix sockets and even an IReactorUNIX, but it's late and 
I'm a little dizzy and I figured someone could probably point me in the 
right direction with about 5 lines anyway ... if there's an example, I 
musta missed it ... 8^P  

TIA!
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From sjthorne at ozemail.com.au  Sat Aug 10 08:54:26 2002
From: sjthorne at ozemail.com.au (Stephen Thorne)
Date: Sat, 10 Aug 2002 22:54:26 +1000
Subject: [Twisted-Python] Twisted.web/DOMTemplate
Message-ID: <200208102254.32727.sjthorne@ozemail.com.au>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Okay, I've been doing some hacking trying to make a small application using 
twisted.web and the .rpy stuff, using DOMTemplate.

Ordinarily I'd chat about something like this on the irc channel, but it was 
dead quiet. Apart from me talking to myself of course.

in the template:
<P view='getBody'>

in the response object
    def factory_getBody(self, request, node):
        print 1
        return node

This (when twistd --nodaemon is used) prints 1 twice (instead of the once 
expected).

This is because of the following section of code:
    def getNodeView(self, request, node):
<snip>
                    maybeWidget = viewMethod(request, node)
                    if isinstance(maybeWidget, domwidgets.Widget):
                        view = maybeWidget
                        viewMethod = view.generateDOM

This is *bad*. viewMethod in this instance is response.factory_getBody, and in 
order to figure out if factory_getBody returns a widget as opposed to an 
instance of xml.dom.minidom.Element it actually calls the function to have a 
look. If it doesn't return a widget it *throws the result away*. viewMethod 
is then returned and used elsewhere, where its actually intended to be used.

Considering that rendering a template node could have program logic in it that 
only should be evaluated once per pageview. It could also carry some 
expensive database transactions.

Anyhow. I can't figure out how to refactor without breaking Widget 
functionality, and the way 'controller' works.

Anyhow. I think I'd call the above a bug report. Maybe with elements of rant 
thrown in.

Stephen Thorne.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9VQ0HRqaMcfqEy/YRAoOPAJ0WJiLcPvftgjna6tgiD1ifAbQkGACdEDWN
7psWJh0/77eiCaEai/xVnaU=
=BNcB
-----END PGP SIGNATURE-----




From exarkun at meson.dyndns.org  Sun Aug 11 12:31:26 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 11 Aug 2002 12:31:26 -0400
Subject: [Twisted-Python] PB over unix socket ... how?
In-Reply-To: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov>
References: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020811163126.GA27673@meson.dyndns.org>

On Sat, Aug 10, 2002 at 02:23:01AM -0400, Steve Waterbury wrote:
> twisted gurus ... help!
> 
> I want to use PB down in the guts of my application, but only later on 
> will I actually be using the pb protocol over the network, so in the 
> meantime I'd like to play it safe and have PB talk to other components 
> over unix domain sockets.  
> 
> I know from wandering around in the internet module that there's lots 
> of support for unix sockets and even an IReactorUNIX, but it's late and 
> I'm a little dizzy and I figured someone could probably point me in the 
> right direction with about 5 lines anyway ... if there's an example, I 
> musta missed it ... 8^P  

Just take the pb examples and change the "listenTCP" call and change the
port argument to a string.  The string will be the name of unix socket in
the filesystem.  Change your connectTCP calls similarly and you should be in
business.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
--
 12:28pm up 82 days, 13:16, 6 users, load average: 0.01, 0.02, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020811/0a528f2c/attachment.pgp 

From dp at twistedmatrix.com  Sun Aug 11 05:39:30 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sun, 11 Aug 2002 02:39:30 -0700
Subject: [Twisted-Python] Twisted.web/DOMTemplate
Message-ID: <58BFC470-AD49-11D6-9F3A-00039376B1AE@twistedmatrix.com>

On Saturday, August 10, 2002, at 05:54 AM, Stephen Thorne wrote:

> Okay, I've been doing some hacking trying to make a small application 
> using
> twisted.web and the .rpy stuff, using DOMTemplate.

Awesome. I really appreciate people using it and providing feedback; 
designing in a vacuum is tough.

[ snip ]

> This (when twistd --nodaemon is used) prints 1 twice (instead of the 
> once
> expected).

[ snip ]

> This is *bad*. viewMethod in this instance is 
> response.factory_getBody, and in
> order to figure out if factory_getBody returns a widget as opposed to 
> an
> instance of xml.dom.minidom.Element it actually calls the function to 
> have a
> look. If it doesn't return a widget it *throws the result away*. 
> viewMethod
> is then returned and used elsewhere, where its actually intended to be 
> used.

Indeed it is bad. The fix was to return the result up if the result was 
*not* a widget, and not bother calling viewMethod again. Since I always 
program DOMTemplate using domwidgets nowadays, I never encountered this.

Patch committed, which you already know since you committed the patch 
;-)

> Considering that rendering a template node could have program logic in 
> it that
> only should be evaluated once per pageview. It could also carry some
> expensive database transactions.

Just fyi,it is possible to do this sort of setup by overriding the 
setUp method. However, there are often cases where doing a monolithic 
"setUp" doesn't make sense, and leaving each node to gather it's own 
data is lazier and therefore more efficient.

Thanks for the bug report.
Donovan




From twisted at itamarst.org  Sun Aug 11 12:55:06 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Aug 2002 12:55:06 -0400
Subject: [Twisted-Python] PB over unix socket ... how?
References: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov> <20020811163126.GA27673@meson.dyndns.org>
Message-ID: <3D5696EA.6010104@itamarst.org>

Jp Calderone wrote:

>>I know from wandering around in the internet module that there's lots 
>>of support for unix sockets and even an IReactorUNIX, but it's late and 
>>I'm a little dizzy and I figured someone could probably point me in the 
>>right direction with about 5 lines anyway ... if there's an example, I 
>>musta missed it ... 8^P  

> Just take the pb examples and change the "listenTCP" call and change the
> port argument to a string.  The string will be the name of unix socket in
> the filesystem.  Change your connectTCP calls similarly and you should be in
> business.

Uh, no.

This only worked because of a bad design decision in tcp.py - it will not 
work in CVS or in any future release. The real solution then is to fix the 
pb connection APIs so they use pluggable transports. Glyph tends to do this 
using URLs, e.g. "pb-tcp://localhost:7777/bar" or "pb-unix://tmp/.socket" or 
"pb-tls://localhost:8888/baz".

There should hopefully be some solution in CVS soon, given that we need this 
functionality to run twistedmatrix.com.




From exarkun at meson.dyndns.org  Sun Aug 11 21:38:43 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 11 Aug 2002 21:38:43 -0400
Subject: [Twisted-Python] twisted.enterprise
Message-ID: <20020812013843.GA31762@meson.dyndns.org>

  Quick query.  I'm using twisted.enterprise.adbapi.Augmentation in my
latest project and I've just moved the createSchema() call into the mktap
phase.  This seems like a decent place to put it, as the schema need only be
created once for each server application.  However, 'mktap' no longer exits
now.  The .tap is created, but then it looks like a thread is left running
somewhere.  What's the right way to release connections acquired indirectly
from the ConnectionPool?  With the .close() method, or ... ?

 Jp


-- 
        "I quite agree with you," said the Duchess; "and the moral of
that is -- Be what you would seem to be' -- or, if you'd like it put
more simply -- Never imagine yourself not to be otherwise than what it
might appear to others that what you were or might have been was not 
otherwise than what you had been would have appeared to them to be
otherwise.'"       -- Lewis Carrol, "Alice in Wonderland"
--
 9:35pm up 82 days, 22:23, 5 users, load average: 0.03, 0.07, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020811/1fa8b964/attachment.pgp 

From sune at mel.interspace.dk  Mon Aug 12 11:47:59 2002
From: sune at mel.interspace.dk (Sune Kirkeby)
Date: Mon, 12 Aug 2002 17:47:59 +0200
Subject: [Twisted-Python] [patch] mktap web --resource
In-Reply-To: <3D499D86.EF982BC7@gsfc.nasa.gov>
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov>
Message-ID: <20020812154759.GA12725@mel.interspace.dk>

[ Steve Waterbury ]
> Sune Kirkeby wrote:
> > 
> > [ Itamar Shtull-Trauring ]
> > > Any chance for async large object support as well?
> > 
> > Yup, as time permits I hope to implement it.  For now I guess I will
> > spend more time experimenting with async DB-access in generel,
> > though.
> 
> Any more news on this front?

None at all.  I've been busy with other things, but if anyone feels
like picking up where I left off (working, incomplete PostgreSQL
protocol implementation;  asyncdb-api that I am not really happy
with), I can post my work.

-- 
Sune Kirkeby | MESKIMEN'S LAW -- There's never time to do it right,
             |                   but always time to do it over.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 975 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020812/9af86590/attachment.pgp 

From waterbug at beeblebrox.gsfc.nasa.gov  Mon Aug 12 12:28:05 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 12 Aug 2002 12:28:05 -0400
Subject: [Twisted-Python] [patch] mktap web --resource
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov> <20020812154759.GA12725@mel.interspace.dk>
Message-ID: <3D57E215.C4C3F6D1@beeblebrox.gsfc.nasa.gov>

Sune Kirkeby wrote:
> 
> [ Steve Waterbury ]
> > Sune Kirkeby wrote:
> > >
> > > [ Itamar Shtull-Trauring ]
> > > > Any chance for async large object support as well?
> > >
> > > Yup, as time permits I hope to implement it.  For now I guess I will
> > > spend more time experimenting with async DB-access in generel,
> > > though.
> >
> > Any more news on this front?
> 
> None at all.  I've been busy with other things, but if anyone feels
> like picking up where I left off (working, incomplete PostgreSQL
> protocol implementation;  asyncdb-api that I am not really happy
> with), I can post my work.

Thanks, but I'm still a larva.  I still need to learn how to use what's 
already there in twisted before I try to extend or contribute anything.  

Cheers,
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From waterbug at beeblebrox.gsfc.nasa.gov  Mon Aug 12 17:10:29 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 12 Aug 2002 17:10:29 -0400
Subject: [Twisted-Python] Resource perplexity
Message-ID: <3D582445.9F75EBC3@beeblebrox.gsfc.nasa.gov>

Yet another newbie question:
Firewall realities being what they are, I'd like to "multiplex" several 
things over a single web server/port (80 for production, but for now 
anything), so I've been hacking at the xmlrpc example, but no luck so 
far (see attached attempt -- it runs, but gives a "404" for 
/RPC2 or /RPC2/ ...).  

Two questions:
(1) Is this an architecturally sound use of twisted?  (Optimal?)
    (And if not, suggestions?  :^)
(2) If so, what am I doing blockheaded?  

Thanks again for your help and patience!
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
-------------- next part --------------
"""
Derived from twisted xmlrpc example ... 
Adds a resource_mux resource to dispatch requests based on URL.
-----------------------------------------------------------------
Hook up an object to XML-RPC. An example session:
    
    >>> s = xmlrpclib.Server('http://localhost:7080/RPC2/')
    >>> s.echo("lala")
    ['lala']
    >>> s.echo("lala", 1)
    ['lala', 1]
    >>> s.echo("lala", 4)
    ['lala', 4]
    >>> s.echo("lala", 4, 3.4)
    ['lala', 4, 3.3999999999999999]
    >>> s.echo("lala", 4, [1, 2])
    ['lala', 4, [1, 2]]
"""

from twisted.web import xmlrpc, resource
from twisted.internet import defer
import xmlrpclib


class Echoer(xmlrpc.XMLRPC):
    """An example object to be published.
    
    Has five methods accessable by XML-RPC, 'echo', 'hello', 'defer's.echo('spam'),
    'defer_fail' and 'fail.
    """
    
    def xmlrpc_echo(self, *args):
        """Return all passed args."""
        return args
    
    def xmlrpc_hello(self):
        """Return 'hello, world'."""
        return 'hello, world!'
    
    def xmlrpc_defer(self):
        """Show how xmlrpc methods can return Deferred."""
        return defer.succeed("hello")
    
    def xmlrpc_defer_fail(self):
        """Show how xmlrpc methods can return failed Deferred."""
        return defer.fail(12)

    def xmlrpc_fail(self):
        """Show how we can return a failure code."""
        return xmlrpclib.Fault(7, "Out of cheese.")


def main():
    from twisted.internet.app import Application
    from twisted.web import server
    # Resource multiplexer 'mux'; dispatches requests to Web,
    # XML-RPC, or SOAP handler, depending on base URL.  Standard
    # base URLs: 'WWW', 'RPC2', 'SOAP' (probably should be
    # case-insensitive).
    mux = resource.Resource()
    mux.putChild('/RPC2/', Echoer())
    # similarly for other handlers ...
    app = Application("thingy")
    app.listenTCP(7080, server.Site(mux))
    app.run(0)


if __name__ == '__main__':
    main()

From radix at twistedmatrix.com  Mon Aug 12 17:15:07 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 12 Aug 2002 17:15:07 -0400
Subject: [Twisted-Python] Resource perplexity
In-Reply-To: <3D582445.9F75EBC3@beeblebrox.gsfc.nasa.gov>
References: <3D582445.9F75EBC3@beeblebrox.gsfc.nasa.gov>
Message-ID: <1029186908.8541.1.camel@radii>

On Mon, 2002-08-12 at 17:10, Steve Waterbury wrote:

> def main():
>     from twisted.internet.app import Application
>     from twisted.web import server
>     # Resource multiplexer 'mux'; dispatches requests to Web,
>     # XML-RPC, or SOAP handler, depending on base URL.  Standard
>     # base URLs: 'WWW', 'RPC2', 'SOAP' (probably should be
>     # case-insensitive).
>     mux = resource.Resource()
>     mux.putChild('/RPC2/', Echoer())

Your putChild usage is wrong. `mux.putChild("RPC2", Echoer())' should do
the trick. putChild adds a child relative to the resource you're calling
it on.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From martin at strakt.com  Tue Aug 13 04:35:59 2002
From: martin at strakt.com (Martin =?ISO-8859-1?Q?Sj=F6gren?=)
Date: 13 Aug 2002 10:35:59 +0200
Subject: [Twisted-Python] Patch for tcp.py
Message-ID: <1029227759.29917.21.camel@ratthing-b3cf>

Non-blocking connects seems to be handled wrong. In particular, EALREADY
is handled like EISCONN, when it should be handled like e.g.
EINPROGRESS. This is consistent for both unix and windows.

Here's a patch:


diff -u -r1.86 tcp.py
--- tcp.py      6 Aug 2002 17:12:40 -0000       1.86
+++ tcp.py      13 Aug 2002 08:17:31 -0000
@@ -230,9 +230,9 @@
         try:
             self.socket.connect(self.realAddress)
         except socket.error, se:
-            if se.args[0] in (EISCONN, EALREADY):
+            if se.args[0] == EISCONN:
                 pass
-            elif se.args[0] in (EWOULDBLOCK, EINVAL, EINPROGRESS):
+            elif se.args[0] in (EWOULDBLOCK, EINVAL, EINPROGRESS,
EALREADY):
                 self.startReading()
                 self.startWriting()
                 return



Regards,
Martin

-- 
Martin Sj?gren
  martin at strakt.com              ICQ : 41245059
  Phone: +46 (0)31 7710870       Cell: +46 (0)739 169191
  GPG key: http://www.strakt.com/~martin/gpg.html



From arashi1 at pd.jaring.my  Tue Aug 13 14:09:19 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Wed, 14 Aug 2002 02:09:19 +0800
Subject: [Twisted-Python] Concurrent data access with select() safe?
Message-ID: <200208140209.19933.arashi1@pd.jaring.my>

Hello all,

I've managed to get a working custom webserver thanks to Donovan. My next 
question is (perhaps more due to my ignorance of how select works) how do you 
control concurrent access to data?

In a multi-thread system you'd normally use devices like locks on the data / 
resource but what about an event based one like twisted?

Say my server does reads and writes on some file/files. How do I ensure data 
integrity? Do I need some kind of locking mechanism or does using 
SelectReactor make this point moot?

-- 
Regards,
Mukhsein Johari



From mattcampbell at pobox.com  Tue Aug 13 14:28:42 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Tue, 13 Aug 2002 13:28:42 -0500
Subject: [Twisted-Python] Concurrent data access with select() safe?
In-Reply-To: <200208140209.19933.arashi1@pd.jaring.my>; from arashi1@pd.jaring.my on Wed, Aug 14, 2002 at 02:09:19AM +0800
References: <200208140209.19933.arashi1@pd.jaring.my>
Message-ID: <20020813132842.A658@mattc.cm.nu>

On Wed, Aug 14, 2002 at 02:09:19AM +0800, Mukhsein Johari wrote:
> I've managed to get a working custom webserver thanks to Donovan. My next 
> question is (perhaps more due to my ignorance of how select works) how do you
> control concurrent access to data?

There is no concurrent access to data in a single-threaded,
event-based system, because the event handlers which are run by
the main loop are never interrupted.  A function always runs to
completion, as if it's always running in a critical section. (This
is also why no blocking system calls should be performed except in
the main loop itself.)
-- 
Matt Campbell
Email and MSN Messenger:  mattcampbell at pobox.com
Web site:  http://www.pobox.com/~mattcampbell/



From arashi1 at pd.jaring.my  Tue Aug 13 15:37:09 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Wed, 14 Aug 2002 03:37:09 +0800
Subject: [Twisted-Python] Concurrent data access with select() safe?
In-Reply-To: <20020813132842.A658@mattc.cm.nu>
References: <200208140209.19933.arashi1@pd.jaring.my> <20020813132842.A658@mattc.cm.nu>
Message-ID: <200208140337.09204.arashi1@pd.jaring.my>

On Wednesday 14 August 2002 02:28, Matt Campbell wrote:
> On Wed, Aug 14, 2002 at 02:09:19AM +0800, Mukhsein Johari wrote:
> > I've managed to get a working custom webserver thanks to Donovan. My next
> > question is (perhaps more due to my ignorance of how select works) how do
> > you control concurrent access to data?
>
> There is no concurrent access to data in a single-threaded,
> event-based system, because the event handlers which are run by
> the main loop are never interrupted.  A function always runs to
> completion, as if it's always running in a critical section. (This
> is also why no blocking system calls should be performed except in
> the main loop itself.)

Sorry for being so dense but, what do you mean by this? Does file access count 
as blocking (my gut says "yes")? How would you handle that? In the twisted 
system in general, from what I understand of it, classes are instantiated to 
handle client requests. If those instances access files or in-memory data 
objects it is conceivable that two instances might be accessing the same data 
/ file, right? But from you you say, this is fine since there is only one 
thread. But what do you mean by blocking calls should only be run in the main 
loop? Is the above (file access) blocking? And is it, as the case stated 
above "within the main loop"?


-- 
Regards,
Mukhsein Johari



From waterbug at beeblebrox.gsfc.nasa.gov  Tue Aug 13 16:45:37 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Tue, 13 Aug 2002 16:45:37 -0400
Subject: [Twisted-Python] Question about pbquote example
Message-ID: <3D596FF1.18A752B8@beeblebrox.gsfc.nasa.gov>

Glyph,

First, thanks for extending the TwistedQuotes example with pbquote.py 
and quotetap2.py -- very helpful!  

Question:  in pbquote.py, the QuoteReader's method is named 
perspective_nextQuote(), which returns the result of the quoter's 
getQuote() ... so I'm guessing you named the perspective method that way 
(instead of perspective_getQuote(), e.g.) to emphasize that the result one 
perspective gets from a service is not necessarily the same as the 
result another perspective would get, since it could be affected by 
the perspective's identity, states, etc. -- independently of the 
fact that, in this particular case, the results are random 
anyway (a somewhat impertinent artifact of the quoter example ;^)?  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Wed Aug 14 02:30:02 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 14 Aug 2002 01:30:02 -0500 (CDT)
Subject: [Twisted-Python] Question about pbquote example
In-Reply-To: <3D596FF1.18A752B8@beeblebrox.gsfc.nasa.gov>
References: <3D596FF1.18A752B8@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020814.013002.112620741.glyph@twistedmatrix.com>


Hi, Steve!

On Tue, 13 Aug 2002 16:45:37 -0400, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> First, thanks for extending the TwistedQuotes example with pbquote.py 
> and quotetap2.py -- very helpful!  

I'm glad you thought so.  I found the pb doc I wrote to be very raw -- don't
hesitate to suggest improvements :).

> Question: in pbquote.py, the QuoteReader's method is named
> perspective_nextQuote(), which returns the result of the quoter's getQuote()
> ... so I'm guessing you named the perspective method that way (instead of
> perspective_getQuote(), e.g.) to emphasize that the result one perspective
> gets from a service is not necessarily the same as the result another
> perspective would get, since it could be affected by the perspective's
> identity, states, etc. -- independently of the fact that, in this particular
> case, the results are random anyway (a somewhat impertinent artifact of the
> quoter example ;^)?

I'm not sure what the question is here...?  I think you're asking "did you name
the perspective method that way to emphasize...", so: Yes and no :-).  I named
it that way for two reasons; one, to emphasize the fact you noticed, but more
importantly to show the difference between the remote method and the local
method: it may have created confusion to do 'foo.callRemote("getQuote")'
because then the name of the method could either be referring to
perspective_getQuote or getQuote itself.  Maybe I should have called it
"remoteQuote".

Thanks for your feedback.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020814/f686d5ad/attachment.pgp 

From tv at twistedmatrix.com  Wed Aug 14 00:43:59 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 14 Aug 2002 07:43:59 +0300
Subject: [Twisted-Python] Concurrent data access with select() safe?
In-Reply-To: <200208140337.09204.arashi1@pd.jaring.my>
References: <200208140209.19933.arashi1@pd.jaring.my> <20020813132842.A658@mattc.cm.nu> <200208140337.09204.arashi1@pd.jaring.my>
Message-ID: <20020814044359.GA23978@ki.yok.utu.fi>

On Wed, Aug 14, 2002 at 03:37:09AM +0800, Mukhsein Johari wrote:
> On Wednesday 14 August 2002 02:28, Matt Campbell wrote:
> > completion, as if it's always running in a critical section. (This
> > is also why no blocking system calls should be performed except in
> > the main loop itself.)
> 
> Sorry for being so dense but, what do you mean by this? Does file access count 
> as blocking (my gut says "yes")? How would you handle that? In the twisted 
> system in general, from what I understand of it, classes are instantiated to 
> handle client requests. If those instances access files or in-memory data 
> objects it is conceivable that two instances might be accessing the same data 
> / file, right? But from you you say, this is fine since there is only one 
> thread. But what do you mean by blocking calls should only be run in the main 
> loop? Is the above (file access) blocking? And is it, as the case stated 
> above "within the main loop"?

	You shouldn't do anything that takes a long time;
	events won't be processed while the single thread
	runs your long operation.

	Matt said "(This is also why no blocking system calls should
	be performed except in the main loop itself.)"; well, most
	system calls "block", but the idea is to not run ones that
	can block indefinitely -- e.g. send(). Those are run
	by the mainloop in a non-blocking mode.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From waterbug at beeblebrox.gsfc.nasa.gov  Fri Aug 16 14:45:34 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 16 Aug 2002 14:45:34 -0400
Subject: [Twisted-Python] Deprecation consternation
Message-ID: <3D5D484E.C9176501@beeblebrox.gsfc.nasa.gov>

I understand that the way the authorizer machinery is assembled into 
twisted seems to be morphing (and not completely propagated into other 
twisted components yet, hence all the deprecation messages when 
running the unit tests), and I was trying to see if I could do things 
properly (the new way) in my code -- but not successfully yet, I guess, 
because when running this (shamelessly purloined and modified from the 
pgquoter.py example):

from twisted.spread import pb
from pdmengine import BasePdmEngine

class PdmClient(pb.Perspective):
    def perspective_getProductsByProject(self):
        return self.service.BasePdmEngine.getProductsByProject(project)

class PdmPBService(pb.Service):
    def __init__(self, engine, serviceName, authorizer, application=None):
        pb.Service.__init__(self, serviceName, authorizer, application)
    perspectiveClass = PdmClient
---

... with mktap I still get:

/home/waterbug/sandbox/TwistedPlugins/TwistedPdm/pdmpb.py:10: DeprecationWarning: You have to pass an authorizer separately from an application now.
  pb.Service.__init__(self, serviceName, authorizer, application)
/usr/local/lib/python2.2/site-packages/twisted/cred/service.py:72: DeprecationWarning: Application.authorizer attribute is deprecated, use Service.authorizer instead
  authorizer = sp.authorizer
/usr/local/lib/python2.2/site-packages/twisted/spread/pb.py:972: DeprecationWarning: Application.authorizer attribute is deprecated, use Service.authorizer instead
  auth = auth.authorizer
Saving pgpdm application to pgpdm.tap...
Saved.
---

I understand the second 2 warnings, which are internal to twisted, but 
I'm puzzled by the first one, which refers to this line:

        pb.Service.__init__(self, serviceName, authorizer, application)
                                               ^^^^^^^^^^
I thought I _was_ passing an authorizer separately!  

Suggestions?  What should the syntax be under the new authorizer regime?

tnx!
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Fri Aug 16 22:05:35 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 16 Aug 2002 21:05:35 -0500 (CDT)
Subject: [Twisted-Python] Deprecation consternation
In-Reply-To: <3D5D484E.C9176501@beeblebrox.gsfc.nasa.gov>
References: <3D5D484E.C9176501@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020816.210535.91440271.glyph@twistedmatrix.com>


On Fri, 16 Aug 2002 14:45:34 -0400, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> I understand that the way the authorizer machinery is assembled into 
> twisted seems to be morphing (and not completely propagated into other 
> twisted components yet, hence all the deprecation messages when 
> running the unit tests), and I was trying to see if I could do things 
> properly (the new way) in my code -- but not successfully yet, I guess, 
> because when running this (shamelessly purloined and modified from the 
> pgquoter.py example):

Morph*ed*, thankfully -- I don't forsee any future changes at this point,
besides eventually cleaning up these internal deprecation warnings and
eventually removing the backwards compatibility code.  Unless I made a mistake,
of course, which is impossible.

> I understand the second 2 warnings, which are internal to twisted, but 
> I'm puzzled by the first one, which refers to this line:

>         pb.Service.__init__(self, serviceName, authorizer, application)

> I thought I _was_ passing an authorizer separately!

Heh.  Perhaps the warning should be a bit clearer:

    def __init__(self, serviceName, serviceParent=None, authorizer=None, application=None):

> Suggestions?  What should the syntax be under the new authorizer regime?

You're just passing the authorizer and application in the reverse order :-).
Other than that you're OK with the "new regime".  You should also see one of
the other warnings go away.

It looks like your "application" is None in this example, though, just at a
glance through the twisted.cred.service code that's spitting out this warning.


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020816/28787fea/attachment.pgp 

From missive at hotmail.com  Sat Aug 17 14:39:32 2002
From: missive at hotmail.com (Lee Harr)
Date: Sat, 17 Aug 2002 18:39:32 +0000
Subject: [Twisted-Python] twisted/protocols/http.py  stringToDatetime
Message-ID: <F258nW0kKIBXEHt3V5g000009a2@hotmail.com>

Hi;

I am new to the list, and to Twisted.

I was playing with the twisted webserver and found a bug that
seems to come up when accessing web pages using an old version
of netscape.

I am using:

Netscape Navigator 4.08
FreeBSD 4.5-RELEASE
Twisted 0.19 (from FreeBSD ports)

The error would occur when trying to reload a page which had
been changed, and seems to be caused by the way the date is
being sent from the browser to the server.

I am able to work around the problem, by just using a pre-set
date if there is a problem parsing that date,
as this patch shows:


*** http.py.1   Sat Aug 17 12:44:45 2002
--- http.py     Sat Aug 17 12:45:39 2002
***************
*** 204,214 ****

  def stringToDatetime(dateString):
      """Convert an HTTP date string to seconds since epoch."""
!     parts = string.split(dateString, ' ')
!     day = int(parts[1])
!     month = int(monthname.index(parts[2]))
!     year = int(parts[3])
!     hour, min, sec = map(int, string.split(parts[4], ':'))
      return int(timegm(year, month, day, hour, min, sec))

  def toChunk(data):
--- 204,217 ----

  def stringToDatetime(dateString):
      """Convert an HTTP date string to seconds since epoch."""
!     try:
!         parts = string.split(dateString, ' ')
!         day = int(parts[1])
!         month = int(monthname.index(parts[2]))
!         year = int(parts[3])
!         hour, min, sec = map(int, string.split(parts[4], ':'))
!     except:
!         day, month, year, hour, min, sec = 1, 1, 1970, 1, 1, 1
      return int(timegm(year, month, day, hour, min, sec))

  def toChunk(data):




Lee Harr
missive at hotmail.com





_________________________________________________________________
Send and receive Hotmail on your mobile device: http://mobile.msn.com




From radix at twistedmatrix.com  Sun Aug 18 21:32:33 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 18 Aug 2002 21:32:33 -0400
Subject: [Twisted-Python] ANN: Twisted 0.99.0
Message-ID: <1029720755.1151.20.camel@radii>

Twisted is an event-based framework for internet applications, written
in Python and licensed under the LGPL. For more information, visit:

       http://www.twistedmatrix.com

Join the mailing list at:

       http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Our IRC channel is #twisted on irc.openprojects.net.


What's New in 0.99.0
====================

- Paul Shwartz contributed Twisted Conch, an SSHv2 implementation.

- Twisted Zoot, an implementation of Gnutella for Twisted, was written
  by Bryce "zooko" Wilcox-O'Hearn.

- Rewritten connection APIs to make writing clients with Twisted easier.

- A "Pager" for Twisted Spread allowing one to easily stream large 
  amounts of data with Perspective Broker.

- A new FreeBSD Kqueue reactor (mainloop implementation) contributed by
  Matt Campbell.

- Refactored Authorizers and Application so twisted.internet has no
  dependance on twisted.cred.

- Many API cleanups, tons of bugfixes, and more documentation as usual.

What is Twisted?
================

Twisted is an event-based framework for internet applications.  It
includes a web server, a telnet server, a chat server, a news server, a
generic client and server for remote object access, and APIs for
creating new protocols and services. Twisted supports integration of the
Tk, GTK+, Qt or wxPython event loop with its main event loop. The Win32
event loop is also supported, as is basic support for running servers on
top of Jython. Twisted supports TCP, SSL, UDP, Unix sockets and 
subprocesses out of the box.

Twisted currently supports the following protocols, all implemented in
pure python, most of them as both servers and clients:


    - FTP
    - HTTP
    - NNTP
    - SOCKSv4 (server only)
    - SMTP
    - IRC
    - telnet
    - POP3
    - AOL's instant messaging TOC
    - OSCAR, used by AOL-IM as well as ICQ (client only)
    - DNS
    - MouseMan
    - finger
    - Echo, discard, chargen and friends
    - Twisted Perspective Broker

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/




From zooko at zooko.com  Mon Aug 19 18:31:50 2002
From: zooko at zooko.com (Zooko)
Date: Mon, 19 Aug 2002 19:31:50 -0300
Subject: [Twisted-Python] Event I/O for Java
Message-ID: <E17gv3u-00011y-00@localhost>

Itamar suggested that I mail this list announcing EIO -- an Event-based 
Input/Output package for Java.

http://zooko.com/eio

The design of the EIO package should look familiar to Twisted hackers -- it 
uses the handy concepts of callbacks, non-blocking IO, and a task scheduler.

If someone wanted to write a reactor for the Twisted Java code, EIO might be a 
good place to start.  One limitation is that it currently requires Java >= 1.4.

Regards,

Zooko




From moshez at twistedmatrix.com  Tue Aug 20 02:23:55 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Tue, 20 Aug 2002 01:23:55 -0500
Subject: [Twisted-Python] fdport
Message-ID: <E17h2Ql-0008QH-00@pyramid.twistedmatrix.com>

import socket
from twisted.internet import tcp, abstract
from twisted.python import log

class FDPort(tcp.Port):

    port = "dummy"

    def __init__(self, fd, factory, backlog=None, reactor=None):
        """Initialize with a numeric port to listen on.
        """
        abstract.FileDescriptor.__init__(self, reactor=reactor)
        self.fd = fd
        self.factory = factory
        if backlog:
	    self.backlog = backlog

    def __getstate__(self):
        """(internal) get my state for persistence
        """
        dct = copy.copy(self.__dict__)
        try: del dct['socket']
        except: pass
        return dct

    def startListening(self):
        """Create and bind my socket, and begin listening on it.

        This is called on unserialization, and must be called after creating a
        server to begin listening on the specified port.
        """
        log.msg("%s startings"% self.factory.__class__)
        self.factory.doStart()
        skt = socket.fromfd(self.fd, socket.AF_INET,socket.SOCK_STREAM)
        skt.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
        skt.setblocking(0)
        skt.listen(self.backlog)
        self.connected = 1
        self.socket = skt
        self.numberAccepts = 100
        self.fileno = skt.fileno
        self.startReading()



From twisted at itamarst.org  Tue Aug 20 16:40:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 20 Aug 2002 16:40:15 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
Message-ID: <3D62A92F.2070007@itamarst.org>

Hi all,

We're trying to get 1.0 out the door. How can you help?

1. Write docs, tests, examples. Help get rid of remaining deprecation 
warnings in tests.

2. Have you submitted a patch for twisted.internet that hasn't made it in? 
Email it to me directly. And pester Glyph and Allen about finishing up the 
bug tracking system.

3. Help with the public relations - have you used Twisted in your company? 
If so we'd love to get quotes from you about what you did and how great it 
is. You know who you are :)

Thanks!




From bob at redivi.com  Tue Aug 20 17:36:51 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 20 Aug 2002 17:36:51 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D62A92F.2070007@itamarst.org>
Message-ID: <F0635986-B484-11D6-9128-0003938210D6@redivi.com>

At Masters of Branding we use Twisted as the networking core for all of 
our client and server RFID software.  It was by far the easiest 
framework to develop with, debug under, and extend for our purposes to 
support protocols such as SOAP, HTTP, and Macromedia Flash-compatible 
XML Sockets.  The API and event model are both very well thought out and 
has accommodated all of our networking needs from database-heavy server 
software on Linux to (py)OpenGL visualization applications on win32.  
The ease and power of Python and Twisted really showed through when we 
took one of our applications developed in and for Linux and ported it to 
run as a Windows NT service in less than day.  New users to the 
framework will not only be impressed by the power of the software, but 
also that the developer/user community responsible for it are incredibly 
helpful and often provide much better support in minutes or hours than 
you'll see from commercial shops given days or weeks.

Bob Ippolito, CTO, Masters of Branding Inc.

On Tuesday, August 20, 2002, at 04:40 PM, Itamar Shtull-Trauring wrote:

> Hi all,
>
> We're trying to get 1.0 out the door. How can you help?
>
> 1. Write docs, tests, examples. Help get rid of remaining deprecation 
> warnings in tests.
>
> 2. Have you submitted a patch for twisted.internet that hasn't made it 
> in? Email it to me directly. And pester Glyph and Allen about finishing 
> up the bug tracking system.
>
> 3. Help with the public relations - have you used Twisted in your 
> company? If so we'd love to get quotes from you about what you did and 
> how great it is. You know who you are :)
>
> Thanks!
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Tue Aug 20 23:24:15 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Aug 2002 22:24:15 -0500 (CDT)
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <F0635986-B484-11D6-9128-0003938210D6@redivi.com>
References: <3D62A92F.2070007@itamarst.org>
	<F0635986-B484-11D6-9128-0003938210D6@redivi.com>
Message-ID: <20020820.222415.78703693.glyph@twistedmatrix.com>

On Tue, 20 Aug 2002 17:36:51 -0400, Bob Ippolito <bob at redivi.com> wrote:
> At Masters of Branding we use Twisted as the networking core for all of 
> our client and server RFID software.

Thanks a lot, Bob!

It's great to hear that you're enjoying Twisted.  Keep these quotes coming,
everybody -- world domination is only a release (and some bugtracking code from
me and allen...) away! :-)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020820/e1b7f015/attachment.pgp 

From phed at twistedmatrix.com  Tue Aug 20 05:30:24 2002
From: phed at twistedmatrix.com (Benjamin Bruheim)
Date: Tue, 20 Aug 2002 11:30:24 +0200
Subject: [Twisted-Python] t.e.rows and serial
Message-ID: <3D620C30.5080604@twistedmatrix.com>

Hello,

I've started to examine t.e.rows to see if it fits me. But at the 
moments it's just an ugly collection of tests. But still I think my 
problems are actual:
Its currently based on the rows-examples that come with twisted. There 
is a single problem I have. If I try to use the type serial, so that the 
id for the stuff I put into the db is autoincremented, I get the 
DBError, "Type serial no known". All examples I've encountered elsewhere 
increments the id manually, but I do not gain anything on doing that.
Are there any generic methods for solving this, or are there any helpers 
out there?
Second, what's this "catch all exceptions"-thing I've encountered? I 
must print out the exceptions manually, even though I thought these were 
thrown into the deferredexceptionchain/as a Failure. Any ideas?

Thanks,
Benjamin Bruheim




From md9ms at mdstud.chalmers.se  Wed Aug 21 06:16:53 2002
From: md9ms at mdstud.chalmers.se (Martin =?ISO-8859-1?Q?Sj=F6gren?=)
Date: 21 Aug 2002 12:16:53 +0200
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D62A92F.2070007@itamarst.org>
References: <3D62A92F.2070007@itamarst.org>
Message-ID: <1029925013.582.24.camel@winterfell>

tis 2002-08-20 klockan 22.40 skrev Itamar Shtull-Trauring:
> 3. Help with the public relations - have you used Twisted in your company? 
> If so we'd love to get quotes from you about what you did and how great it 
> is. You know who you are :)

"Having worked with Twisted for a while, I have come to appreciate the
clean API and the distinction between transport layer and application
protocol. Being able to switch between SSL and plain TCP by changing a
single line is very useful. The huge protocol library in Twisted means I
can integrate pretty much anything in my applications in a
platform-independent way."


Martin Sj?gren
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Detta =?ISO-8859-1?Q?=E4r?= en digitalt signerad
	meddelandedel
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020821/686720db/attachment.pgp 

From steve.waterbury at gsfc.nasa.gov  Wed Aug 21 11:23:28 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 21 Aug 2002 11:23:28 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
References: <3D62A92F.2070007@itamarst.org>
Message-ID: <3D63B070.6336BE62@gsfc.nasa.gov>

Itamar Shtull-Trauring wrote:
> 
> Hi all,
> 
> We're trying to get 1.0 out the door. How can you help?
> (...)
> 3. Help with the public relations - have you used Twisted in your company?
> If so we'd love to get quotes from you about what you did and how great it
> is. You know who you are :)

"My team is developing a modular application to integrate CAD/CAE/CAM 
tools and data and to enable collaboration among distributed teams of 
engineers working on NASA projects.  We have selected Twisted as our 
framework because of its pluggable, asynchronous protocols, support 
for multiple interfaces and protocols per service, integration with 
PostgreSQL, and just generally excellent layered architecture."  

Cheers,
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Wed Aug 21 12:25:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 21 Aug 2002 11:25:06 -0500 (CDT)
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D63B070.6336BE62@gsfc.nasa.gov>
References: <3D62A92F.2070007@itamarst.org>
	<3D63B070.6336BE62@gsfc.nasa.gov>
Message-ID: <20020821.112506.93018226.glyph@twistedmatrix.com>

On Wed, 21 Aug 2002 11:23:28 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> My team is developing a modular application to integrate CAD/CAE/CAM 
> tools and data and to enable collaboration among distributed teams of 
> engineers working on NASA projects.

Thanks for the endorsement, Steve :-).

By the way, it would be lots better if those of you sending endorsements could
actually have a URL on an externally viewable site so that tm.com could point
to some external points of reference for why using Twisted is good.  (If not,
just having these sorts of mailing list posts is still really cool.  Keep 'em
coming ^_^)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020821/765ee11f/attachment.pgp 

From bob at redivi.com  Wed Aug 21 13:16:05 2002
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 21 Aug 2002 13:16:05 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <20020821.112506.93018226.glyph@twistedmatrix.com>
References: <3D62A92F.2070007@itamarst.org> <3D63B070.6336BE62@gsfc.nasa.gov> <20020821.112506.93018226.glyph@twistedmatrix.com>
Message-ID: <20020821131604.A14150@redivi.com>

On Wed, Aug 21, 2002 at 11:25:06AM -0500, Glyph Lefkowitz wrote:
> On Wed, 21 Aug 2002 11:23:28 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> > My team is developing a modular application to integrate CAD/CAE/CAM 
> > tools and data and to enable collaboration among distributed teams of 
> > engineers working on NASA projects.
> 
> Thanks for the endorsement, Steve :-).
> 
> By the way, it would be lots better if those of you sending endorsements could
> actually have a URL on an externally viewable site so that tm.com could point
> to some external points of reference for why using Twisted is good.  (If not,
> just having these sorts of mailing list posts is still really cool.  Keep 'em
> coming ^_^)

www.mastersofbranding.com for us, but the site won't be of a whole lot of interest to someone who would actually be using twisted.

-bob



From steve.waterbury at gsfc.nasa.gov  Wed Aug 21 13:34:57 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 21 Aug 2002 13:34:57 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
References: <3D62A92F.2070007@itamarst.org>
		<3D63B070.6336BE62@gsfc.nasa.gov> <20020821.112506.93018226.glyph@twistedmatrix.com>
Message-ID: <3D63CF41.FDC2C436@gsfc.nasa.gov>

Glyph Lefkowitz wrote:
> 
> On Wed, 21 Aug 2002 11:23:28 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> > My team is developing a modular application to integrate CAD/CAE/CAM
> > tools and data and to enable collaboration among distributed teams of
> > engineers working on NASA projects.
> 
> Thanks for the endorsement, Steve :-).
> 
> By the way, it would be lots better if those of you sending endorsements could
> actually have a URL on an externally viewable site so that tm.com could point
> to some external points of reference for why using Twisted is good.  (If not,
> just having these sorts of mailing list posts is still really cool.  Keep 'em
> coming ^_^)

As soon as we have an actual release of our stuff that uses Twisted, 
I'll send you the URL ... with luck, that should be within a month or 
so. 

BTW, it would be very cool to have a "Twisted Inside" (or something like 
that! ;^) logo like Python and wxPython, etc., have.  The mini version of 
the Twisted snake logo would be the perfect graphic for that, methinks ... 
we would be proud to display it (as we do the Python and wxPython logos) ... 
it would give us a certain air of l33tness ... :^) 

-- Steve.



From zbir at urbanape.com  Thu Aug 22 07:00:45 2002
From: zbir at urbanape.com (Zachery Bir)
Date: Thu, 22 Aug 2002 07:00:45 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D63CF41.FDC2C436@gsfc.nasa.gov>
Message-ID: <68AD9DB6-B5BE-11D6-BEC5-000393178DEC@urbanape.com>

On Wednesday, August 21, 2002, at 01:34 PM, Steve Waterbury wrote:

> BTW, it would be very cool to have a "Twisted Inside" (or 
> something like
> that! ;^) logo like Python and wxPython, etc., have.  The mini 
> version of
> the Twisted snake logo would be the perfect graphic for that, 
> methinks ...
> we would be proud to display it (as we do the Python and wxPython 
> logos) ...
> it would give us a certain air of l33tness ... :^)

<URL:http://www.urbanape.com/twistedButton.png>

I only spent 5 minutes on it. Just to sort of kickstart someone 
with far more talent. :)

Zac




From prabhakar at chaganti.net  Thu Aug 22 09:57:49 2002
From: prabhakar at chaganti.net (Prabhakar Chaganti)
Date: Thu, 22 Aug 2002 09:57:49 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
Message-ID: <3D64B59D.19626.91C4DE8@localhost>

All:

I have just started playing with twisted and have a few q:

1. What is the difference between web widgets and the DOM templates?
2. The 0.99 release notes indicates that ssh protocol is supported. 
Where can I find it?
3. The documentation says that the twisted.web can serve up rpy, 
html, cgi and php. Is there a PHP interpreter in twisted.


thanks 
prabhakar




From spam at polynode.com  Thu Aug 22 10:30:07 2002
From: spam at polynode.com (Alex Levy)
Date: Thu, 22 Aug 2002 10:30:07 -0400
Subject: [Twisted-Python] Bug adding SSL web server through coil
Message-ID: <1030026607.1725.10.camel@treefrog>

Hi, all --

I've hit a bug while playing around with coil.  I made an out-of-the-box
web.tap ('mktap web --path static') and ran coil ('coil web.tap'), went
to http://localhost:9080/config/ports/ssl and tried to add an 'HTML Web
Server' on port 8888.

I got the following error:
exceptions.TypeError: listenSSL() takes at least 4 arguments (3 given)

The traceback is attached.

-- 
Alex Levy
Tel: 617.835.0778
WWW: http://mesozoic.geecs.org

"Power corrupts.  Absolute power is kind of neat."
- John Lehman, Secretary of the Navy, 1981-1987

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020822/06147402/attachment.html 

From twisted at itamarst.org  Thu Aug 22 11:02:10 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Aug 2002 11:02:10 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
References: <3D64B59D.19626.91C4DE8@localhost>
Message-ID: <3D64FCF2.1020809@itamarst.org>

Prabhakar Chaganti wrote:

> 1. What is the difference between web widgets and the DOM templates?

DOMTemplate lets you do templating on a HTML file. Widgets generate HTML. 
Something like that :)

> 2. The 0.99 release notes indicates that ssh protocol is supported. 
> Where can I find it?

twisted.conch.

> 3. The documentation says that the twisted.web can serve up rpy, 
> html, cgi and php. Is there a PHP interpreter in twisted.

No, you need to have a PHP command-line interpreter installed (e.g. 
/usr/bin/php). In debian apt-get install php4-cgi.




From twisted at itamarst.org  Thu Aug 22 11:05:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Aug 2002 11:05:05 -0400
Subject: [Twisted-Python] Bug adding SSL web server through coil
References: <1030026607.1725.10.camel@treefrog>
Message-ID: <3D64FDA1.2000009@itamarst.org>

Alex Levy wrote:

> I've hit a bug while playing around with coil.  I made an out-of-the-box
> web.tap ('mktap web --path static') and ran coil ('coil web.tap'), went
> to http://localhost:9080/config/ports/ssl and tried to add an 'HTML Web
> Server' on port 8888.
> 
> I got the following error:
> exceptions.TypeError: listenSSL() takes at least 4 arguments (3 given)

Coil is experimental - more a proof of concept than an actual working system 
(though it works pretty decently for adding TCP servers.) The problem with 
it is that adding new things to Coil is too time consuming and tedious, and 
it's not flexible enough. At some point we may have a go at rewriting it 
from scratch based on the lessons we learned.

Meanwhile, you could add support for SSL if you wanted too - it's not too hard.




From twisted at itamarst.org  Thu Aug 22 11:14:54 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Aug 2002 11:14:54 -0400
Subject: [Twisted-Python] [Fwd: Adelux quote]
Message-ID: <3D64FFEE.4030004@itamarst.org>

Date: Thu, 22 Aug 2002 13:37:00 +0200
Reply-To: lstep (a) adequat.net
Organization: Adelux


==========================================
Adelux develops custom internet applications such as portals,
network security tools, communication-related programs,
and software that leverages other systems.

We discovered Twisted 10 months ago, and now it is a key
element of our development strategy.

We have successfully used Twisted on several
projects, of very different problem domains.

We developped a highly scalable realtime application for
customer support, which serves web-based clients as well as clients
implemented in any of the many protocols supported by
Twisted.

Twisted was also used to develop targeted proxies for various
applications supporting more than 15.000 users. Twisted handles
the charge with no problem.

We intend to continue using Twisted on upcoming projects, especially
since integrated support for databases and new services are being
added very quickly.

We  found Twisted to be powerful, comprehensible,
well documented, and backed by a good helpful community.

We'll use it on our next products for sure!

Luc Stepniewski, Head Engineer <lstep at adequat.net>
Adelux, France
===============================








From bruce at cubik.org  Thu Aug 22 11:59:39 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 22 Aug 2002 09:59:39 -0600
Subject: [Twisted-Python] epydoc and Twisted
Message-ID: <3D650A6B.6060606@cubik.org>

I've done a first pass at building Twisted docs with epydoc.  It can be 
seen here:

     http://day.cubik.org/~bruce/twisted/epydoc/twisted.html

The command line that I'm using to do that is:

python2.1 /usr/lib/python2.1/site-packages/epydoc/cli.py -o doc/epydoc 
-n Twisted -vvvv `find twisted -name \*.py | grep -v test | grep -v gtk 
| grep -v jyac | grep -v java | grep -v qt | grep -v ssl | grep -v win32 
| grep -v wxsup | grep -v kqre | grep -v pywid | grep -v gnome | grep -v 
native | grep -v mktap | grep -v manhole | grep -v tktree | grep -v 
tkutil | grep -v ssh | grep -v xmlrpc | grep -v /reactor.py | grep -v 
/mail/`

which is quite a mess.

The problem is that since it imports the files, any missing dependencies 
and so on will cause it to bomb. (/mail/ is excluded because it 
triggered an epydoc bug and I couldn't care enough yet to look and fix it.)

There were tons of warnings/errors from epydoc which I've logged and 
I'll start looking at that soon (over the next day or so).

Thoughts on how we should deal with the import problem are welcome.  Is 
that a roadblock in the way of switching from happydoc to epydoc?

  - Bruce




From prabhakar at chaganti.net  Thu Aug 22 12:38:11 2002
From: prabhakar at chaganti.net (Prabhakar Chaganti)
Date: Thu, 22 Aug 2002 12:38:11 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
In-Reply-To: <3D64FCF2.1020809@itamarst.org>
Message-ID: <3D64DB33.21057.9AF2269@localhost>

Are there any examples/code samples for the web widgets?

thanks
prabhakar

> DOMTemplate lets you do templating on a HTML file. Widgets generate HTML. 
> Something like that :)





From waterbug at beeblebrox.gsfc.nasa.gov  Thu Aug 22 12:58:07 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 22 Aug 2002 12:58:07 -0400
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org>
Message-ID: <3D65181F.307E50A3@beeblebrox.gsfc.nasa.gov>

Bruce Mitchener wrote:
> 
> I've done a first pass at building Twisted docs with epydoc.  It can be
> seen here:
> 
>      http://day.cubik.org/~bruce/twisted/epydoc/twisted.html

This is *great*!  Much better than the happydoc, and better than pydoc, 
which I've been using locally.  Any chance you could put a tar or zip of 
this on your website so I don't beat it to death?  :^)

(Glyph:  sorry about the duped messages again -- I forgot to change my 
identity from sending to another list ... I need to change my other 
subscriptions!)

Thanks!
-- Steve.



From bruce at cubik.org  Thu Aug 22 13:32:39 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 22 Aug 2002 11:32:39 -0600
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org> <3D65181F.307E50A3@beeblebrox.gsfc.nasa.gov>
Message-ID: <3D652037.9050707@cubik.org>

Steve Waterbury wrote:
> Bruce Mitchener wrote:
> 
>>I've done a first pass at building Twisted docs with epydoc.  It can be
>>seen here:
>>
>>     http://day.cubik.org/~bruce/twisted/epydoc/twisted.html
> 
> This is *great*!  Much better than the happydoc, and better than pydoc, 
> which I've been using locally.  Any chance you could put a tar or zip of 
> this on your website so I don't beat it to death?  :^)

Well, I'm hoping to do a bunch of fixes tonight and make it even better. 
  For now, feel free to beat on it. It is just a DSL line to my 
apartment and I'm at work. :)

I'll post a tarball tomorrow after I make updates and make it suck less.

  - Bruce




From radix at twistedmatrix.com  Thu Aug 22 14:03:35 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 22 Aug 2002 14:03:35 -0400
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <3D650A6B.6060606@cubik.org>
References: <3D650A6B.6060606@cubik.org>
Message-ID: <1030039417.7568.2.camel@radii>

On Thu, 2002-08-22 at 11:59, Bruce Mitchener wrote:

> Thoughts on how we should deal with the import problem are welcome.  Is 
> that a roadblock in the way of switching from happydoc to epydoc?

I have no response to your question, but I have some comments to make.

1. converting generate-domdocs to use epydoc seems it'll be really easy
-- it'll just require a slightly modified regexp-builder, afaics. I'll
get to that soon.

2. I hope we're going to start using the @foo mechanisms that epydoc
uses in Twisted -- it'll make our API references much more
information-rich. Does anyone have any problems with that?

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/




From bruce at cubik.org  Thu Aug 22 14:12:49 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 22 Aug 2002 12:12:49 -0600
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org> <1030039417.7568.2.camel@radii>
Message-ID: <3D6529A1.6060007@cubik.org>

Christopher Armstrong wrote:
> On Thu, 2002-08-22 at 11:59, Bruce Mitchener wrote:
>>Thoughts on how we should deal with the import problem are welcome.  Is 
>>that a roadblock in the way of switching from happydoc to epydoc?
> 
> I have no response to your question, but I have some comments to make.
> 
> 1. converting generate-domdocs to use epydoc seems it'll be really easy
> -- it'll just require a slightly modified regexp-builder, afaics. I'll
> get to that soon.

Cool, I didn't really want to do that.

> 2. I hope we're going to start using the @foo mechanisms that epydoc
> uses in Twisted -- it'll make our API references much more
> information-rich. Does anyone have any problems with that?

I hope not.  I'd be very disappointed.  The informatation that they've 
been providing in work docs has been a big help.

I do wish that epydoc generated more internal links .. might be a good 
thing for someone to add.  I've got some other epydoc patches that I'll 
end up contributing I guess.

  - Bruce




From washort at twistedmatrix.com  Thu Aug 22 18:32:39 2002
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 22 Aug 2002 17:32:39 -0500 (CDT)
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <1030039417.7568.2.camel@radii>
References: <3D650A6B.6060606@cubik.org>
	<1030039417.7568.2.camel@radii>
Message-ID: <20020822.173239.783391215.washort@twistedmatrix.com>

>>>>> "Christopher" == Christopher Armstrong <radix at twistedmatrix.com> writes:

    > 2. I hope we're going to start using the @foo mechanisms that
    > epydoc uses in Twisted -- it'll make our API references much
    > more information-rich. Does anyone have any problems with that?

Some of us already have. Look at twisted.issues. :)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020822/5fbba8fd/attachment.pgp 

From abo at minkirri.apana.org.au  Fri Aug 23 01:18:53 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Fri, 23 Aug 2002 15:18:53 +1000
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <68AD9DB6-B5BE-11D6-BEC5-000393178DEC@urbanape.com>
References: <3D63CF41.FDC2C436@gsfc.nasa.gov> <68AD9DB6-B5BE-11D6-BEC5-000393178DEC@urbanape.com>
Message-ID: <20020823051853.GA444@minkirri.apana.org.au>

On Thu, Aug 22, 2002 at 07:00:45AM -0400, Zachery Bir wrote:
> On Wednesday, August 21, 2002, at 01:34 PM, Steve Waterbury wrote:
> 
> >BTW, it would be very cool to have a "Twisted Inside" (or 
> >something like
> >that! ;^) logo like Python and wxPython, etc., have.  The mini 
> >version of
> >the Twisted snake logo would be the perfect graphic for that, 
> >methinks ...
> >we would be proud to display it (as we do the Python and wxPython 
> >logos) ...
> >it would give us a certain air of l33tness ... :^)
> 
> <URL:http://www.urbanape.com/twistedButton.png>
> 
> I only spent 5 minutes on it. Just to sort of kickstart someone 
> with far more talent. :)

The first image that came to my mind was a cartoon snake having its neck
wrung, tounge hanging out etc... sorta like the snake in the snake comic in
various Australian Papers.


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From glyph at twistedmatrix.com  Fri Aug 23 01:35:47 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 23 Aug 2002 00:35:47 -0500 (CDT)
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <3D6529A1.6060007@cubik.org>
References: <3D650A6B.6060606@cubik.org>
	<1030039417.7568.2.camel@radii>
	<3D6529A1.6060007@cubik.org>
Message-ID: <20020823.003547.126575962.glyph@twistedmatrix.com>

On Thu, 22 Aug 2002 12:12:49 -0600, Bruce Mitchener <bruce at cubik.org> wrote:
> Christopher Armstrong wrote:
>
> > 2. I hope we're going to start using the @foo mechanisms that epydoc
> > uses in Twisted -- it'll make our API references much more
> > information-rich. Does anyone have any problems with that?
> 
> I hope not.  I'd be very disappointed.  The informatation that they've 
> been providing in work docs has been a big help.

"It's not just a good idea, it's the law."

This should be in the coding standard.  While I wouldn't take a lot of
developer time that might be better spent elsewhere to go through and insert
this meta-information, we really ought to be getting the most out of the
documentation system we use.

We should also write a silly hack to allow any module to import without
ImportErrors.  I think this would fix most of the doc generation issues?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020823/acf02876/attachment.pgp 

From rc at ghostbitch.org  Thu Aug 22 14:13:23 2002
From: rc at ghostbitch.org (R. Church)
Date: Thu, 22 Aug 2002 11:13:23 -0700
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <3D6529A1.6060007@cubik.org>
References: <3D650A6B.6060606@cubik.org> <1030039417.7568.2.camel@radii> <3D6529A1.6060007@cubik.org>
Message-ID: <20020822181323.GV18186@ghostbitch.org>

Wouldn't epydoc be 60% to 70% better if it actually linked to
(chromakeyed) source code?

On Thu, Aug 22, 2002 at 12:12:49PM -0600, Bruce Mitchener quipped:
> Christopher Armstrong wrote:
> >On Thu, 2002-08-22 at 11:59, Bruce Mitchener wrote:
> >>Thoughts on how we should deal with the import problem are welcome.  Is 
> >>that a roadblock in the way of switching from happydoc to epydoc?
> >
> >I have no response to your question, but I have some comments to make.
> >
> >1. converting generate-domdocs to use epydoc seems it'll be really easy
> >-- it'll just require a slightly modified regexp-builder, afaics. I'll
> >get to that soon.
> 
> Cool, I didn't really want to do that.
> 
> >2. I hope we're going to start using the @foo mechanisms that epydoc
> >uses in Twisted -- it'll make our API references much more
> >information-rich. Does anyone have any problems with that?
> 
> I hope not.  I'd be very disappointed.  The informatation that they've 
> been providing in work docs has been a big help.
> 
> I do wish that epydoc generated more internal links .. might be a good 
> thing for someone to add.  I've got some other epydoc patches that I'll 
> end up contributing I guess.
> 
>  - Bruce
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dp at twistedmatrix.com  Fri Aug 23 02:26:29 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 22 Aug 2002 23:26:29 -0700
Subject: [Twisted-Python] Newbie Q on 0.99 release
In-Reply-To: <3D64B59D.19626.91C4DE8@localhost>
Message-ID: <423964D0-B661-11D6-941A-00039376B1AE@twistedmatrix.com>

On Thursday, August 22, 2002, at 06:57 AM, Prabhakar Chaganti wrote:

> All:
>
> I have just started playing with twisted and have a few q:
>
> 1. What is the difference between web widgets and the DOM templates?

I'll spend a bit of time answering this since I wrote them :-)

DOMTemplate is a class that parses an XHTML document looking for nodes 
with "view", "controller", "class", or "id" attributes. When it finds 
one, it looks for a "factory_foo" method to handle that node. (e.g. 
when it encounters the node <div id="coolStuff" />, the method 
factory_coolStuff would be called.) This method gets passed the request 
object and the current node object (as a DOM Node object). The return 
value of this method is then used to replace the node that was there 
before.

Here is an example:

from twisted.web.domtemplate import DOMTemplate
from twisted.web import domwidgets

class Foo(DOMTemplate):
	template = '<html><div id="foo" /> <div id="bar" /> <div id="baz" 
/></html>'

	def factory_foo(self, request, node):
		# I have been passed a DOM Node instance, I can mutate it and return 
it.
		# The main DOM Document instance (where the DOM factories are)
		# has been set to self.d
		node.appendChild(self.d.createTextNode("Hello world!"))
		return node

	def factory_bar(self, request, node):
		# Or, if I wish, I may simply return a string. It will be parsed into 
XML and
		# will replace the incoming node.
		return "<b>Hey, how are you doing?</b>"

	def factory_baz(self, request, node):
		# However, I may wish to use a higher level API that involves 
manipulating
		# Python objects instead of HTML. By using widgets, I can construct 
objects
		# to represent common HTML fragments, and never have to write any HTML
		# again! (Ok, so you'll have to write some eventually... but less)
		return domwidgets.Text("Hey, this is a very simple widget that knows 
how to turn itself into DOM text nodes using createTextNode")

So you can see that DOMWidgets builds upon DOMTemplate by allowing you 
to use higher-level APIs in your DOMTemplate.

Donovan




From bruce at cubik.org  Fri Aug 23 07:53:00 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Fri, 23 Aug 2002 05:53:00 -0600
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org>	<1030039417.7568.2.camel@radii>	<3D6529A1.6060007@cubik.org> <20020823.003547.126575962.glyph@twistedmatrix.com>
Message-ID: <3D66221C.90802@cubik.org>

Glyph Lefkowitz wrote:
> "It's not just a good idea, it's the law."
> 
> This should be in the coding standard.  While I wouldn't take a lot of
> developer time that might be better spent elsewhere to go through and insert
> this meta-information, we really ought to be getting the most out of the
> documentation system we use.

Good good.  I'll make those changes to the standards.

> We should also write a silly hack to allow any module to import without
> ImportErrors.  I think this would fix most of the doc generation issues?

This takes more Python clue than I'v currently been gifted with. :) I'll 
see about scaring up some work out of dash, radix, itamar, or some other 
local smartie.

  - Bruce




From radix at twistedmatrix.com  Fri Aug 23 08:41:36 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Fri, 23 Aug 2002 07:41:36 -0500
Subject: [Twisted-Python] nested_scopes
Message-ID: <20020823124136.GA5176@pyramid.twistedmatrix.com>

There has been some concern about the use of __future__ imports in Twisted.
After a lengthy discussion with moshez, marvin--, and phed, we came to the
conclusion that it'd be best to put an explicit list of allowable
__future__s into the coding standard, nested_scopes being the only one for
now (since that's what we use).

yay/nay, etc.



From radix at twistedmatrix.com  Fri Aug 23 08:44:28 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Fri, 23 Aug 2002 07:44:28 -0500
Subject: [Twisted-Python] 0.99.1 soon
Message-ID: <20020823124427.GB5176@pyramid.twistedmatrix.com>

I'll be releasing 0.99.1 this weekend, so get in your patches people.
Perhaps we can do epydoc for this release.



From prabhakar at chaganti.net  Fri Aug 23 11:39:59 2002
From: prabhakar at chaganti.net (Prabhakar Chaganti)
Date: Fri, 23 Aug 2002 11:39:59 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
In-Reply-To: <423964D0-B661-11D6-941A-00039376B1AE@twistedmatrix.com>
References: <3D64B59D.19626.91C4DE8@localhost>
Message-ID: <3D661F0F.2441.824C02@localhost>

Thanks Donovan. Your explanation makes it much clearer !!

prabhakar

> I'll spend a bit of time answering this since I wrote them :-)





From bruce at cubik.org  Fri Aug 23 11:52:44 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Fri, 23 Aug 2002 09:52:44 -0600
Subject: [Twisted-Python] 0.99.1 soon
References: <20020823124427.GB5176@pyramid.twistedmatrix.com>
Message-ID: <3D665A4C.1030803@cubik.org>

Chris Armstrong wrote:
> I'll be releasing 0.99.1 this weekend, so get in your patches people.
> Perhaps we can do epydoc for this release.

Okay, I'm about half way through the cleanup of the epydoc docstring 
warnings.  I'll finish tonight and commit in one massive single shot.

  - Bruce






From ldanielburr at earthlink.net  Sat Aug 24 12:28:12 2002
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Sat, 24 Aug 2002 09:28:12 -0700
Subject: [Twisted-Python] [No Subject]
Message-ID: <Springmail.0994.1030206492.0.27518300@webmail.pas.earthlink.net>

I've noticed that the current 0.99 release candidate for Windows has no twistd
or twistd.py included.  A brief check of CVS shows that twistd is still there,
although it is going through some alterations.  Anyway, is there any chance
that the next release will contain this?  Kinda hard to follow the docs and
tutorials when twistd isn't there for use.

Otherwise, I really like the revised webmvc docs, and the refactored client
code.  Great work!



From mark at markrichman.com  Sat Aug 24 12:29:17 2002
From: mark at markrichman.com (Mark A. Richman)
Date: Sat, 24 Aug 2002 12:29:17 -0400
Subject: [Twisted-Python] Proposed Website Comp
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>

I whipped up a new look for the site this morning:
 
http://www.markrichman.com/twisted/
 
I did this in about 30 minutes using Macromedia Fireworks MX.
 
Please let me know what you think.
 
Best Regards,
Mark A. Richman
Empire Software, Inc.
http://www.empsoft.com/
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020824/ccb03e98/attachment.htm 

From missive at hotmail.com  Sat Aug 24 12:39:09 2002
From: missive at hotmail.com (Lee Harr)
Date: Sat, 24 Aug 2002 16:39:09 +0000
Subject: [Twisted-Python] gtkLineClient.py
Message-ID: <F270OjvQcOV8AaBv7dg00003a78@hotmail.com>

# gtkLineClient.py
# Free. Please share

from twisted.protocols.basic import LineReceiver

from twisted.internet import gtkreactor
gtkreactor.install()

import gtk

from twisted.internet import reactor

class LoginInfo:
    def __init__(self):
        self.username = 'guest'
        self.host = 'localhost'
        self.port = 8888

        self.quit = 0

class LoginWindow(gtk.GtkWindow):
    def __init__(self, info):
        self.info = info

        w = gtk.GtkWindow(gtk.WINDOW_TOPLEVEL)
        w.connect('destroy', self.quit)

        vb = gtk.GtkVBox()
        w.add(vb)

        b = gtk.GtkButton('QUIT')
        b.signal_connect('clicked', self.quit)
        vb.add(b)

        self.usernameEntry = gtk.GtkEntry()
        self.usernameEntry.set_text(self.info.username)
        self.usernameEntry.signal_connect('activate', self.login)
        vb.add(self.usernameEntry)

        b = gtk.GtkButton('LOGIN')
        b.signal_connect('clicked', self.login)
        vb.add(b)

        w.show_all()

        self.w = w

    def login(self, b):
        print 'LOGGING IN'
        self.info.username = self.usernameEntry.get_text()
        self.w.hide()
        gtk.mainquit()

    def quit(self, b):
        print 'QUITTING'
        self.info.quit = 1
        gtk.mainquit()

class Client(LineReceiver):
    def __init__(self, info):
        self.info = info

        w = gtk.GtkWindow(gtk.WINDOW_TOPLEVEL)
        w.connect('destroy', self.quit)

        vb = gtk.GtkVBox()
        w.add(vb)

        q = gtk.GtkButton('QUIT')
        q.connect('clicked', self.quit)
        vb.add(q)

        c = gtk.GtkButton('CLOSE')
        c.connect('clicked', self.close)
        vb.add(c)

        s = gtk.GtkButton('SEND')
        s.connect('clicked', self.send)
        vb.add(s)

        self.w = w

    def connectionMade(self):
        self.w.show_all()
        print 'CONNECTED'
        self.sendLine('USERNAME_%s' % self.info.username)

    def send(self, b):
        self.sendLine('message')

    def lineReceived(self, line):
        print 'Server said:', line

    def closeConnection(self):
        self.transport.loseConnection()

    def close(self, b):
        print "CLOSING"
        self.sendLine('CLOSE')
        self.w.hide()
        self.closeConnection()
        reactor.stop()

    def quit(self, b):
        self.info.quit = 1
        self.close(b)

    def connectionLost(self):
        print 'Connection lost'
        self.w.hide()
        reactor.stop()

    def connectionFailed(self):
        print 'Connection failed'
        reactor.stop()

def main():
    info = LoginInfo()

    while 1:
        l = LoginWindow(info)
        gtk.mainloop()
        if l.info.quit:
            break

        e = Client(info)
        reactor.clientTCP(info.host, info.port, e)
        reactor.run()
        if info.quit:
            break

if __name__ == '__main__':
    main()


_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com




From bob at redivi.com  Sat Aug 24 12:49:21 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 24 Aug 2002 12:49:21 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
Message-ID: <7055D4E1-B781-11D6-9192-0003938210D6@redivi.com>

I usually think that software projects should give a brief overview of 
what they are on the front page, and sometimes even some news..  the 
content-area of the mockup is pretty worthless given that all the links 
are available in the navigation bar, and there's no real need to explain 
what the words in the navigation mean.

On Saturday, August 24, 2002, at 12:29 PM, Mark A. Richman wrote:

> I whipped up a new look for the site this morning:
>
> ?
>
> http://www.markrichman.com/twisted/
>
> ?
>
> I did this in about 30 minutes using Macromedia Fireworks MX.
>
> ?
>
> Please let me know what you think.
>
> ?
>
> Best Regards,
>
> Mark A. Richman
>
> Empire Software, Inc.
>
> http://www.empsoft.com/
>
> ?
>
> ?
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1477 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020824/b69e381b/attachment.bin 

From tv at twistedmatrix.com  Sat Aug 24 15:05:30 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 24 Aug 2002 22:05:30 +0300
Subject: [Twisted-Python] Please help with Deferreds
Message-ID: <20020824190530.GA17359@ki.yok.utu.fi>

	Can anyone explain the behaviour of the
	following?

#!/usr/bin/python
import sys
from twisted.internet import defer, reactor
d=defer.Deferred()
d.callback(0)
d2=defer.Deferred()
d.addCallback(lambda x,d2=d2: d2)

# switch the comment sign on the next two and it'll
# print not 1 but a Deferred. Why?
#reactor.callLater(0, lambda d2=d2: d2.callback(1))
d2.callback(1)

d.addCallback(lambda x:sys.stdout.write(repr(x)+'\n'))
d.addBoth(lambda x:reactor.stop())
reactor.run()


-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From m at moshez.org  Fri Aug 23 08:35:50 2002
From: m at moshez.org (Moshe Zadka)
Date: 23 Aug 2002 12:35:50 -0000
Subject: [Twisted-Python] Python 2.1
Message-ID: <20020823123550.25216.qmail@green.zadka.com>

2.1 has no nested scopes.
Please don't do that:
    def listGroupRequest(self, group):
        sql = """
            SELECT postings.article_index FROM postings,groups
            WHERE postings.group_id = groups.group_id
            AND groups.name = '%s'
        """ % (adbapi.safe(group),)

        return self.runQuery(sql).addCallback(
            lambda results: (group, [res[0] for res in results])
        )



From glyph at twistedmatrix.com  Sat Aug 24 18:13:02 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 24 Aug 2002 17:13:02 -0500 (CDT)
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
Message-ID: <20020824.171302.74758334.glyph@twistedmatrix.com>


On Sat, 24 Aug 2002 12:29:17 -0400, "Mark A. Richman" <mark at markrichman.com> wrote:
> http://www.markrichman.com/twisted/

> Please let me know what you think.

Mark,

Thanks for your contribution.  Before I get into any critique I really want to
stress that we need the aid of Real Designers (using Real Designer tools like
Fireworks and Dreamweaver)... AND our website is in need of some design help in
order to get a flashier, more marketing-licious appearance for the stuff that
executives are going to read.  Also that I'm glad you contributed something and
I hope you're going to keep working on it :).

However, the site you submitted represents almost everything I hate about
"modern" web design.  Aesthetically, it's not too unappealing (I like bright
primary colors, I like grid backgrounds, and I like the sorts of sans-serif
fonts you've chosen for screen reading.)  Technically, the design has all kinds
of problems, though.

* You're using antialiased text images rather than fonts.  If I really want my
  fonts antialiased that badly, I'd use MacOS X, or Windows XP, or configure
  xft to do it in my browser.  You make the site immediately unusable to
  text-mode and sight-impaired browsers by doing this.  Keep in mind that
  Twisted's first major application was for a radio station for the
  sight-impaired.

* You're using a javascript menu to save space in the masthead, but the
  masthead is just as large (or larger, depending on font sizes) than the
  original navigation control.  The javascript menu likely won't work in any
  browser without a bug-for-bug compatibility with IE or Mozilla, rendering the
  menu text unusable in a wide variety of browsers.  Twisted is popular with
  open-source developers who will quite often use alternative browsers in order
  to either test their apps or because they're simply rebellious :)

* You're using tables for all formatting, rather than CSS.  This is a notorious
  error that most experienced web designers seem to shudder at.  I guess this
  is the way that Macromedia's product will do the site by default -- CSS will
  be ignored by older and alternative browsers, but tables will often simply be
  rendered incorrectly by them.

* Your images (thanks to table-based formatting) are split up into ridiculously
  small chunks.  This will make the site unpleasant to version-control because
  every design change will come with 12 new images and 8 old ones deleted.

* There appears to be Javascript in here to popup an ad window.  WTF!?!!?!!?!

* The page is highly unfriendly to indexing.  With no text, lots of
  autogenerated filenames, split images, and no keywords, there's no way Google
  is going to find anything of value here.

I could go on, but I think you're getting the gist here.

In other words, Twisted's whole raison d'etre is *integration*, which relies
upon adherence not only to the letter but the spirit of protocol definitions
and file formats.  Yes, it's possible to get browsers to do some neat tricks
with Javascript (I am actually considering the purchase of a Javascript book
right now) -- but javascript is for *applications*, not menu formatting.  Yes,
it's possible to get human-readble text formatted by constructing giant tables
with one pixel per row.  Nevertheless, this greatly reduces the utility of the
website to anyone who is not using *exactly* the platform that you are using to
view it, and that "platform" is up to and including "the human eye".  Many
non-humans (googlebot, dmoz, various link checkers) will want to read the site,
as well as some people who cannot see, or cannot see well.

So use technologies like CSS and XML and Python and even XSLT or whatever to
make the site as appealing as possible, but keep the presentation separate from
the content of the site.  That content includes navigational elements as well
as text -- that's the whole point of "hypertext", after all.  PageRank would
not work with gopher or ftp :)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020824/1e42ab84/attachment.pgp 

From radix at twistedmatrix.com  Sat Aug 24 18:46:41 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 24 Aug 2002 18:46:41 -0400
Subject: [Twisted-Python] Python 2.1
In-Reply-To: <20020823123550.25216.qmail@green.zadka.com>
References: <20020823123550.25216.qmail@green.zadka.com>
Message-ID: <1030229203.2590.7.camel@radii>

On Fri, 2002-08-23 at 08:35, Moshe Zadka wrote:
> 2.1 has no nested scopes.

As we discussed on IRC, Twisted uses nested_scopes from __future__, so
this isn't an issue (well, there should probably be a nested_scopes
import at the top of that module, since the only other place it's
imported is twisted/scripts/twistd.py). The issue is whether or not we
should use nested_scopes, which I'm awaiting a reply to in the other
thread :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020824/82dea7d8/attachment.pgp 

From radix at twistedmatrix.com  Sat Aug 24 19:59:58 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 24 Aug 2002 19:59:58 -0400
Subject: [Twisted-Python] client API issue for Application
Message-ID: <1030233600.2589.16.camel@radii>

I've been talking with nobomb on #twisted about his IRC bot, which he
wants to be able to connect to a list of servers for fail-over (i.e.,
when one server connection fails, try to connect to the nest). We worked
it out so that he'd call app.connectTCP again in his
clientConnectionFailed method of his ClientFactory, but I realized that
the tcpConnectors list in Application *never* gets cleaned out. Should
we have an explicit method to do this, or some kind of automatic
cleaning, or something...?

While browsing through the Application source, I see that the same is
true for the listeners, except for TCP (there's an unlistenTCP, but no
unlistenSSL, frex). There's *also* a dontListenTCP which just raises a
not implemented error. *boggle*
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020824/ba4b4e68/attachment.pgp 

From mark at markrichman.com  Sat Aug 24 22:12:27 2002
From: mark at markrichman.com (Mark A. Richman)
Date: Sat, 24 Aug 2002 22:12:27 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <20020824.171302.74758334.glyph@twistedmatrix.com>
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>

This is why I called it a "comp" - I'm not going to waste my time with
"real" HTML, CSS, etc. if you aren't going to like it...which you have
made abundantly clear.

I simply created it as a springboard for discussion, and not as a beta
of any kind.

That was 30 minutes work, not 30 hours.

- Mark

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] On Behalf Of Glyph
Lefkowitz
Sent: Saturday, August 24, 2002 6:13 PM
To: twisted-python at twistedmatrix.com; mark at markrichman.com
Subject: Re: [Twisted-Python] Proposed Website Comp

----Security_Multipart(Sat_Aug_24_17:13:02_2002_364)--
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


On Sat, 24 Aug 2002 12:29:17 -0400, "Mark A. Richman"
<mark at markrichman.com> wrote:
> http://www.markrichman.com/twisted/

> Please let me know what you think.

Mark,

Thanks for your contribution.  Before I get into any critique I really
want to
stress that we need the aid of Real Designers (using Real Designer tools
like
Fireworks and Dreamweaver)... AND our website is in need of some design
help in
order to get a flashier, more marketing-licious appearance for the stuff
that
executives are going to read.  Also that I'm glad you contributed
something and
I hope you're going to keep working on it :).

However, the site you submitted represents almost everything I hate
about
"modern" web design.  Aesthetically, it's not too unappealing (I like
bright
primary colors, I like grid backgrounds, and I like the sorts of
sans-serif
fonts you've chosen for screen reading.)  Technically, the design has
all kinds
of problems, though.

* You're using antialiased text images rather than fonts.  If I really
want my
  fonts antialiased that badly, I'd use MacOS X, or Windows XP, or
configure
  xft to do it in my browser.  You make the site immediately unusable to
  text-mode and sight-impaired browsers by doing this.  Keep in mind
that
  Twisted's first major application was for a radio station for the
  sight-impaired.

* You're using a javascript menu to save space in the masthead, but the
  masthead is just as large (or larger, depending on font sizes) than
the
  original navigation control.  The javascript menu likely won't work in
any
  browser without a bug-for-bug compatibility with IE or Mozilla,
rendering the
  menu text unusable in a wide variety of browsers.  Twisted is popular
with
  open-source developers who will quite often use alternative browsers
in order
  to either test their apps or because they're simply rebellious :)

* You're using tables for all formatting, rather than CSS.  This is a
notorious
  error that most experienced web designers seem to shudder at.  I guess
this
  is the way that Macromedia's product will do the site by default --
CSS will
  be ignored by older and alternative browsers, but tables will often
simply be
  rendered incorrectly by them.

* Your images (thanks to table-based formatting) are split up into
ridiculously
  small chunks.  This will make the site unpleasant to version-control
because
  every design change will come with 12 new images and 8 old ones
deleted.

* There appears to be Javascript in here to popup an ad window.
WTF!?!!?!!?!

* The page is highly unfriendly to indexing.  With no text, lots of
  autogenerated filenames, split images, and no keywords, there's no way
Google
  is going to find anything of value here.

I could go on, but I think you're getting the gist here.

In other words, Twisted's whole raison d'etre is *integration*, which
relies
upon adherence not only to the letter but the spirit of protocol
definitions
and file formats.  Yes, it's possible to get browsers to do some neat
tricks
with Javascript (I am actually considering the purchase of a Javascript
book
right now) -- but javascript is for *applications*, not menu formatting.
Yes,
it's possible to get human-readble text formatted by constructing giant
tables
with one pixel per row.  Nevertheless, this greatly reduces the utility
of the
website to anyone who is not using *exactly* the platform that you are
using to
view it, and that "platform" is up to and including "the human eye".
Many
non-humans (googlebot, dmoz, various link checkers) will want to read
the site,
as well as some people who cannot see, or cannot see well.

So use technologies like CSS and XML and Python and even XSLT or
whatever to
make the site as appealing as possible, but keep the presentation
separate from
the content of the site.  That content includes navigational elements as
well
as text -- that's the whole point of "hypertext", after all.  PageRank
would
not work with gopher or ftp :)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |

----Security_Multipart(Sat_Aug_24_17:13:02_2002_364)--
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQA9aATwvVGR4uSOE2wRAjylAJ92T+rTCBQnQYEPFdynPl3pDc7WXACdFUL7
oArKWaWmFVBCLzMcMmMzQ20=
=I135
-----END PGP SIGNATURE-----

----Security_Multipart(Sat_Aug_24_17:13:02_2002_364)----





From radix at twistedmatrix.com  Sat Aug 24 22:35:17 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 24 Aug 2002 22:35:17 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: 
	<!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQ
	AAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
References: 
	<!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQ
	AAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
Message-ID: <1030242925.2584.34.camel@radii>

On Sat, 2002-08-24 at 22:12, Mark A. Richman wrote:
> This is why I called it a "comp" - I'm not going to waste my time with
> "real" HTML, CSS, etc. if you aren't going to like it...which you have
> made abundantly clear.

I think you got the wrong idea -- glyph did say that it was visually
pleasing (or something similar). It was only technical things that he
had criticisms for, and I agree with him full-heartedly. I think it's
sexy as well, it just needs to be hacked on to be not so blatantly
platform-dependant.

> I simply created it as a springboard for discussion, and not as a beta
> of any kind.

I think it looks awesome, but I agree with glyph's points. Is there any
chance you'll address some of the points he made? I can't say I'll be
able to help much, but I'd like to (and surely others would be able to
lend a hand here and there).

[snip to glyph...]
> > * You're using tables for all formatting, rather than CSS.  This is a
> > notorious
> > error that most experienced web designers seem to shudder at.  I guess
> > this

I thought this point was funny, considering the existing site uses
tables for formatting as well ;-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020824/6adefd60/attachment.pgp 

From mark at markrichman.com  Sat Aug 24 22:40:13 2002
From: mark at markrichman.com (Mark A. Richman)
Date: Sat, 24 Aug 2002 22:40:13 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <1030242925.2584.34.camel@radii>
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAA7d/4GWEVGESpx5PJh0fpvwEAAAAA@markrichman.com>

I never claimed to be a graphic artist - I'm a developer, not a
designer. But I don't have time to contribute code, so I contributed an
idea.

Glad to hear *someone* liked it. I pulled the page off my site for now.

When I have time, I'll consult with my usability and human factors
colleagues to see if they have any commentary.

I'm curious to know of any popular sites that conform to Glyph's "wish
list" of acceptable web standards.

Regards,
Mark

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] On Behalf Of Christopher
Armstrong
Sent: Saturday, August 24, 2002 10:35 PM
To: Twisted ML
Subject: RE: [Twisted-Python] Proposed Website Comp

On Sat, 2002-08-24 at 22:12, Mark A. Richman wrote:
> This is why I called it a "comp" - I'm not going to waste my time with
> "real" HTML, CSS, etc. if you aren't going to like it...which you have
> made abundantly clear.

I think you got the wrong idea -- glyph did say that it was visually
pleasing (or something similar). It was only technical things that he
had criticisms for, and I agree with him full-heartedly. I think it's
sexy as well, it just needs to be hacked on to be not so blatantly
platform-dependant.

> I simply created it as a springboard for discussion, and not as a beta
> of any kind.

I think it looks awesome, but I agree with glyph's points. Is there any
chance you'll address some of the points he made? I can't say I'll be
able to help much, but I'd like to (and surely others would be able to
lend a hand here and there).

[snip to glyph...]
> > * You're using tables for all formatting, rather than CSS.  This is
a
> > notorious
> > error that most experienced web designers seem to shudder at.  I
guess
> > this

I thought this point was funny, considering the existing site uses
tables for formatting as well ;-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/





From glyph at twistedmatrix.com  Sat Aug 24 23:23:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 24 Aug 2002 22:23:30 -0500 (CDT)
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAA7d/4GWEVGESpx5PJh0fpvwEAAAAA@markrichman.com>
References: <1030242925.2584.34.camel@radii>
	<!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAA7d/4GWEVGESpx5PJh0fpvwEAAAAA@markrichman.com>
Message-ID: <20020824.222330.78702721.glyph@twistedmatrix.com>


Hi Mark,

On Sat, 24 Aug 2002 22:40:13 -0400, "Mark A. Richman" <mark at markrichman.com> wrote:
> I never claimed to be a graphic artist - I'm a developer, not a
> designer. But I don't have time to contribute code, so I contributed an
> idea.

I started off with a few qualifications because I wanted to make it clear that
while I had issues with the way the initial foray looked, I didn't think that
the idea of redoing the website was a bad one, and certainly your idea was not
an aesthetic disaster.  I think it needs some cleanup and tweaking, and I'd
like to see alternate ideas, but I would really like to see you keep throwing a
few spare minutes at it.  Nonetheless, the last time I redesigned the website,
there were *still* some Twisted developers who consider the current layout to
be "too cluttered" :-).

> When I have time, I'll consult with my usability and human factors
> colleagues to see if they have any commentary.

That would be very cool :).  Actual domain knowledge is certainly better than
my opinions.  (Keep in mind that only half of my concerns are about human
factors: the other half are about automated agents.  Very few people seem to be
thinking seriously about how those work with web designs these days.)

> I'm curious to know of any popular sites that conform to Glyph's "wish
> list" of acceptable web standards.

Almost zero.  Of course, most of the web (especially the "popular web") is pure
tripe, so I don't think this says anything in particular.  Google does,
CritLink does, dmoz does, and Citeseer does.  Those are all sites I use
joyfully.  Travelocity doesn't, and I grit my teeth every time I have to wade
through it.  Web comics are particularly bad, and more than a few times I've
written a grabber script so I didn't have to wait for the extra 300k of HTML to
download with each 2k image.

If "most popular websites" look a certain way, then it seems that looking that
way would imply that we aspire only to mediocrity.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020824/5c11abdc/attachment.pgp 

From twisted at itamarst.org  Sun Aug 25 01:47:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 25 Aug 2002 01:47:52 -0400
Subject: [Twisted-Python] Proposed Website Comp
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
Message-ID: <3D686F88.3070104@itamarst.org>

Mark A. Richman wrote:

> I whipped up a new look for the site this morning:

> http://www.markrichman.com/twisted/

Coooooool.

But I'm getting a 404. Could you please put it back up? I really want to see it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting





From tv at twistedmatrix.com  Sun Aug 25 07:54:40 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 25 Aug 2002 14:54:40 +0300
Subject: [Twisted-Python] web.guard application.authorizer obsolete message
Message-ID: <20020825115440.GA26840@ki.yok.utu.fi>

	Hi. I'm not sure whether it is safe to commit this,
	so sending this patch here. Please apply if suitable.

Index: twisted/web/guard.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/guard.py,v
retrieving revision 1.16
diff -u -u -r1.16 guard.py
--- twisted/web/guard.py        21 Aug 2002 13:21:30 -0000      1.16
+++ twisted/web/guard.py        25 Aug 2002 11:35:13 -0000
@@ -128,7 +128,7 @@
         # must be done before page is displayed so cookie can get set!
         request.getSession()
         # this site must be tagged with an application.
-        idrq = self.reqauth.service.application.authorizer.getIdentityRequest(username)
+        idrq = self.reqauth.service.authorizer.getIdentityRequest(username)
         idrq.needsHeader = 1
         idrq.addCallbacks(self.gotIdentity, self.didntGetIdentity,
                           callbackArgs=(password,request,perspective or username),

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From abo at minkirri.apana.org.au  Sun Aug 25 20:00:21 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Mon, 26 Aug 2002 10:00:21 +1000
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
References: <20020824.171302.74758334.glyph@twistedmatrix.com> <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
Message-ID: <20020826000021.GC16260@minkirri.apana.org.au>

On Sat, Aug 24, 2002 at 10:12:27PM -0400, Mark A. Richman wrote:
> This is why I called it a "comp" - I'm not going to waste my time with
> "real" HTML, CSS, etc. if you aren't going to like it...which you have
> made abundantly clear.

Hey, he liked how it looked, he just didn't like how it was implemented!

> I simply created it as a springboard for discussion, and not as a beta
> of any kind.
>
> That was 30 minutes work, not 30 hours.

Then you succeeded, and please don't get put off. There has been discussion
:-)

BTW, the best thing to keep in mind when doing any volentary type work is
"he who does it, gets to decide how it gets done", because if you don't do
it your way, it might never get done :-)

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From andrew-twisted at puzzling.org  Sun Aug 25 21:43:46 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 26 Aug 2002 11:43:46 +1000
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020824190530.GA17359@ki.yok.utu.fi>
References: <20020824190530.GA17359@ki.yok.utu.fi>
Message-ID: <20020826014346.GB12158@ritsuko.xware.cx>

On Sat, Aug 24, 2002 at 10:05:30PM +0300, Tommi Virtanen wrote:
> 	Can anyone explain the behaviour of the
> 	following?
> 
> #!/usr/bin/python
> import sys
> from twisted.internet import defer, reactor
> d=defer.Deferred()
> d.callback(0)
> d2=defer.Deferred()
> d.addCallback(lambda x,d2=d2: d2)

So you've effectively done:

d = defer.Deferred()
d2 = defer.Deferred()
d.callback(d2)

> # switch the comment sign on the next two and it'll
> # print not 1 but a Deferred. Why?
> #reactor.callLater(0, lambda d2=d2: d2.callback(1))

Which is effectively:
# reactor.callLater(0, d2.callback, 1)

> d2.callback(1)
> 
> d.addCallback(lambda x:sys.stdout.write(repr(x)+'\n'))
> d.addBoth(lambda x:reactor.stop())

Note that these callbacks will fire immediately upon adding them.

> reactor.run()

And of course, you don't need to do reactor.run() unless you're using
the reactor.callLater version of this code.

So, this is easy...

Consider what happens to your first Deferred, d, with that line
uncommented:
  d = defer.Deferred()      # 1. Create it
  d.callback(d2)            # 2. call it with some value (d2)
  reactor.callLater(....)   # 3. this doesn't happen yet
  d.addCallback(....)       # 4. this fires *immediately*, and writes
                                 the value from 2., which is d2

So that's why it prints the Deferred in that case.  Now back the way the
code is originally:
  d = defer.Deferred()      # 1. Create it
  d.callback(d2)            # 2. call it with some value (d2)
  d2.callback(1)            # 3. call d2 with another value (1)
  d.addCallback(....)       # 4. this fires *immediately*, and writes 
                                 the value from 2. -- which is 1???

That does confuse me.  Somehow, if a callback has a result which is
another Deferred, it does something special to automatically call that
Deferred, which I didn't realise and seems nasty to me.  I thought that
was only meant to happen if you explicitly called chainDeferred?

I've just re-read doc/howto/defer and I see that this is in fact
explained under the heading "Chain Deferreds", but I'm still curious as
to why this behaviour is necessary... "explicit is better than
implicit", etc :)

Anyway, I hope you now understand why that code behaves the way it
does...

-Andrew.




From radix at twistedmatrix.com  Sun Aug 25 23:19:01 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 25 Aug 2002 23:19:01 -0400
Subject: [Twisted-Python] gtkLineClient.py
In-Reply-To: <F270OjvQcOV8AaBv7dg00003a78@hotmail.com>
References: <F270OjvQcOV8AaBv7dg00003a78@hotmail.com>
Message-ID: <1030331943.2590.42.camel@radii>

On Sat, 2002-08-24 at 12:39, Lee Harr wrote:
> # gtkLineClient.py
> # Free. Please share

Hi Lee! What exactly is this client for? At first I figured it was just
something to test one's line-based server protocols with, but the
"USERNAME_foo" line implies some sort of protocol (I think?).

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020825/58c1aafb/attachment.pgp 

From tv at debian.org  Sun Aug 25 11:54:06 2002
From: tv at debian.org (Tommi Virtanen)
Date: Sun, 25 Aug 2002 18:54:06 +0300
Subject: [Twisted-Python] Ldaptor BoF at Linux-Kongress
Message-ID: <20020825155406.GA30553@ki.yok.utu.fi>

	Hi. I'm thinking of organizing a BoF at Linux-Kongress,
	about Ldaptor and Scalemail etc. My email/LDAP-related
	Twisted thingies, that is.

	Please give feedback on the email I am about to send.
	What would you like to hear? What would motivate you to
	joining the brainw^H^H^H^H^H^HBoF?

	Latest version of the mail will be at
	http://www.twistedmatrix.com/users/tv/bof.txt

	Current edition follows.

--8<--
From: Tommi Virtanen <tv at debian.org>
To: jochen.topf at guug.de
Cc: 
Bcc: 
Subject: Linux-Kongress BoF: Scalemail & Ldaptor
Reply-To: 

	Hi. I'd like to organize a BoF at the Linux-Kongress, 2002.
	Trying to use the ones at
	http://www.linux-kongress.org/2002/bofs/index.html
	as a template for the rest of this mail..

Scalemail & Ldaptor: integrating Postfix, Courier-IMAP and LDAP with
Python and Twisted

by Tommi Virtanen <tv at debian.org>

Introduction

Managing large amounts of user accounts can be tedious. Scalemail is
an attempt at solving the email part of that equation, and Ldaptor
 is a pure-Python LDAP library and a set of utilities and
applications, including a web-based search/edit interface. Together,
this mighty duo aims to allow an admin to manage thousands of user
accounts across multiple domains and servers, delegating
responsibility for account management to non-techical people where
possible.

This BoF will introduce the tools used, give an overview of the
architectures of Scalemail and Ldaptor, and solicit feedback from
email system admins and programmers for future enhancements.

Software to integrate:
	- Postfix (http://www.postfix.org/)
	- Courier-IMAP (http://www.inter7.com/courierimap/)
	- OpenLDAP (http://www.openldap.org/)

Tools used:
	- Python (http://www.python.org/)
	- Twisted (http://www.twistedmatrix.com/)

New software created:
	- Scalemail (http://scalemail.sourceforge.net/)
	- Ldaptor (http://ldaptor.bkbits.net/ for now)


Who should attend?
	- Email administrators of sites with over 100 users.
	- Hackers interested in email and/or LDAP.
	- Python programmers who want to see Twisted stuff.
--8<--

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From radix at twistedmatrix.com  Mon Aug 26 07:47:01 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Mon, 26 Aug 2002 06:47:01 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] Change LogFile to support disabling log rotation if rotateLength is None.
In-Reply-To: <E17jEgk-000598-00@pyramid.twistedmatrix.com>
References: <E17jEgk-000598-00@pyramid.twistedmatrix.com>
Message-ID: <20020826114701.GA24487@pyramid.twistedmatrix.com>

On Mon, Aug 26, 2002 at 02:53:30AM -0500, spiv CVS wrote:
> Modified files:
> Twisted/twisted/python/logfile.py 1.1 1.2
> 
> Log message:
> Change LogFile to support disabling log rotation if rotateLength is None.

Why not 0 instead of None?



From radix at twistedmatrix.com  Mon Aug 26 09:18:23 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Mon, 26 Aug 2002 08:18:23 -0500
Subject: [Twisted-Python] Bug tracker
Message-ID: <20020826131823.GB24487@pyramid.twistedmatrix.com>

I've temporarily set up the SourceForge bug tracker for Twisted, which is
browsable at
https://sourceforge.net/tracker/?atid=456015&group_id=49387&func=browse. (I
think you need to be logged in to submit bugs). As soon as the Twisted
Issues tracker is done, we can switch to it, but we were in desperate need
for a real bug tracker in the meantime.




From twisted at itamarst.org  Mon Aug 26 11:32:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Aug 2002 11:32:05 -0400
Subject: [Twisted-Python] client API issue for Application
References: <1030233600.2589.16.camel@radii>
Message-ID: <3D6A49F5.6010208@itamarst.org>

Christopher Armstrong wrote:

> I've been talking with nobomb on #twisted about his IRC bot, which he
> wants to be able to connect to a list of servers for fail-over (i.e.,
> when one server connection fails, try to connect to the nest). We worked
> it out so that he'd call app.connectTCP again in his
> clientConnectionFailed method of his ClientFactory, but I realized that
> the tcpConnectors list in Application *never* gets cleaned out. Should
> we have an explicit method to do this, or some kind of automatic
> cleaning, or something...?

If you don't want a connection to persist, don't add it to Application. 
Since a connection to an IRC server shouldn't persist (you may be connecting 
to other servers), it should be added to reactor directly. Since you 
apparently want *something* to persist, you probably want to add a 
twisted.internet.app.ApplicationService that will manage the connections.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From tv at twistedmatrix.com  Mon Aug 26 13:50:34 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 26 Aug 2002 20:50:34 +0300
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020826014346.GB12158@ritsuko.xware.cx>
References: <20020824190530.GA17359@ki.yok.utu.fi> <20020826014346.GB12158@ritsuko.xware.cx>
Message-ID: <20020826175034.GA10012@ki.yok.utu.fi>

On Mon, Aug 26, 2002 at 11:43:46AM +1000, Andrew Bennetts wrote:
> > #!/usr/bin/python
> > import sys
> > from twisted.internet import defer, reactor
> > d=defer.Deferred()
> > d.callback(0)
> > d2=defer.Deferred()
> > d.addCallback(lambda x,d2=d2: d2)
> 
> So you've effectively done:
> 
> d = defer.Deferred()
> d2 = defer.Deferred()
> d.callback(d2)

	Not really. You'll notice that Deferred addCallbacks
	handlers returning Deferreds is handled differently
	from d.callback(Deferred()); the former gets special
	treatment, the latter doesn't.

	Your version never outputs "1", it outputs repr(d2)
	for the callLater version and repr(d) for the immediate
	one.

	My version outputs "1" for the immediate case and
	repr(d2) for the callLater version.

> Consider what happens to your first Deferred, d, with that line
> uncommented:
>   d = defer.Deferred()      # 1. Create it
>   d.callback(d2)            # 2. call it with some value (d2)
>   reactor.callLater(....)   # 3. this doesn't happen yet
>   d.addCallback(....)       # 4. this fires *immediately*, and writes
>                                  the value from 2., which is d2

	Yes, but only because you modified it to be such.

> So that's why it prints the Deferred in that case.  Now back the way the
> code is originally:
>   d = defer.Deferred()      # 1. Create it
>   d.callback(d2)            # 2. call it with some value (d2)
>   d2.callback(1)            # 3. call d2 with another value (1)
>   d.addCallback(....)       # 4. this fires *immediately*, and writes 
>                                  the value from 2. -- which is 1???
> 
> That does confuse me.  Somehow, if a callback has a result which is
> another Deferred, it does something special to automatically call that
> Deferred, which I didn't realise and seems nasty to me.  I thought that
> was only meant to happen if you explicitly called chainDeferred?

	Yes, exactly. And I'm asking why this mechanism doesn't
	work with callLater.

> I've just re-read doc/howto/defer and I see that this is in fact
> explained under the heading "Chain Deferreds", but I'm still curious as
> to why this behaviour is necessary... "explicit is better than
> implicit", etc :)

	And it can't be emulated with chainDeferred, for the simple
	reason of needing to hold both Deferreds at once. The thing
	registered with addCallback doesn't have a reference to the
	Deferred it is added to, and it could be added to many
	Deferreds.


	Handy:

def foo(dummy):
	d2=Deferred()
	do_something(d2)
	return d2

d=Deferred()
d.addCallback(foo)


	Cumbersome:

def foo(dummy, d):
	d2=Deferred()
	do_something(d2)
	d2.chainDeferred(d)
	return dummy

d=Deferred()
d.addCallback(foo, d)


	Plus, it allows you to use more things as callbacks; many
	information retrieval funcs return either the wanted result
	or a Deferred. They are very nice to use as callbacks,
	chaining them to retrieve values for each other.

> Anyway, I hope you now understand why that code behaves the way it
> does...

	No, I don't. You only managed to miss the point :)

-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Mon Aug 26 16:55:12 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Aug 2002 15:55:12 -0500 (CDT)
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020826175034.GA10012@ki.yok.utu.fi>
References: <20020824190530.GA17359@ki.yok.utu.fi>
	<20020826014346.GB12158@ritsuko.xware.cx>
	<20020826175034.GA10012@ki.yok.utu.fi>
Message-ID: <20020826.155512.59465269.glyph@twistedmatrix.com>

On Mon, 26 Aug 2002 20:50:34 +0300, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> On Mon, Aug 26, 2002 at 11:43:46AM +1000, Andrew Bennetts wrote:
> > That does confuse me.  Somehow, if a callback has a result which is
> > another Deferred, it does something special to automatically call that
> > Deferred, which I didn't realise and seems nasty to me.  I thought that
> > was only meant to happen if you explicitly called chainDeferred?
> 
> 	Yes, exactly. And I'm asking why this mechanism doesn't
> 	work with callLater.

I'm in the process of checking in the fix for this bug.  Thanks for finding it!

> > I've just re-read doc/howto/defer and I see that this is in fact
> > explained under the heading "Chain Deferreds", but I'm still curious as
> > to why this behaviour is necessary... "explicit is better than
> > implicit", etc :)
> 
> 	And it can't be emulated with chainDeferred, for the simple
> 	reason of needing to hold both Deferreds at once. The thing
> 	registered with addCallback doesn't have a reference to the
> 	Deferred it is added to, and it could be added to many
> 	Deferreds.

> 	Plus, it allows you to use more things as callbacks; many
> 	information retrieval funcs return either the wanted result
> 	or a Deferred. They are very nice to use as callbacks,
> 	chaining them to retrieve values for each other.

Yes.  There are actually many cases where it's not possible to use deferreds in
the way described in the "cumbersome" example you provided without changing
framework code, and that's bad.  This requirement evolved from repeat
experience with those cases breaking very basic database functionality using
twisted.enterprise.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020826/67bcb210/attachment.pgp 

From missive at hotmail.com  Mon Aug 26 20:07:27 2002
From: missive at hotmail.com (Lee Harr)
Date: Tue, 27 Aug 2002 00:07:27 +0000
Subject: [Twisted-Python] gtkLineClient.py
Message-ID: <F7kjs6XsjaIOFRR4H1x0000d3b1@hotmail.com>

> > # gtkLineClient.py
> > # Free. Please share
>
>Hi Lee! What exactly is this client for? At first I figured it was just
>something to test one's line-based server protocols with, but the
>"USERNAME_foo" line implies some sort of protocol (I think?).
>

For? Heh heh.

It is really just my attempt to make a gtk application talk
over the internet.

I had looked at the only other gtk app that came with the
0.19 distribution, but it used twisted.spread which frankly I
did not understand. I just wanted something which could send
lines in response to gtk events and listen for lines and
call back in to the app.

I tried to make it a simple basic gtk client. I thought it
might be useful to other people trying to get this thing going.

I continued on from there and I am mostly finished with
Twisted Tic Tac Toe, which lets people play (you guess it)
naughts and crosses over the network.

On that USERNAME_ thing... yes, I implemented a tic-tac-toe
protocol, but how would one go about authenticating securely
(assuming one's tic-tac-toe game was deemed important enough
to not send passwords in the clear) I guess I should look at
the twisted ssl stuff.

Thanks for the twisted. It's fun.

Lee Harr
missive at hotmail.com



_________________________________________________________________
MSN Photos is the easiest way to share and print your photos: 
http://photos.msn.com/support/worldwide.aspx




From andrew-twisted at puzzling.org  Mon Aug 26 20:24:29 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 27 Aug 2002 10:24:29 +1000
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020826175034.GA10012@ki.yok.utu.fi>
References: <20020824190530.GA17359@ki.yok.utu.fi> <20020826014346.GB12158@ritsuko.xware.cx> <20020826175034.GA10012@ki.yok.utu.fi>
Message-ID: <20020827002429.GA4653@ritsuko.xware.cx>

On Mon, Aug 26, 2002 at 08:50:34PM +0300, Tommi Virtanen wrote:
> On Mon, Aug 26, 2002 at 11:43:46AM +1000, Andrew Bennetts wrote:
> > > #!/usr/bin/python
> > > import sys
> > > from twisted.internet import defer, reactor
> > > d=defer.Deferred()
> > > d.callback(0)
> > > d2=defer.Deferred()
> > > d.addCallback(lambda x,d2=d2: d2)
> > 
> > So you've effectively done:
> > 
> > d = defer.Deferred()
> > d2 = defer.Deferred()
> > d.callback(d2)
> 
> 	Not really. You'll notice that Deferred addCallbacks
> 	handlers returning Deferreds is handled differently
> 	from d.callback(Deferred()); the former gets special
> 	treatment, the latter doesn't.
> 
> 	Your version never outputs "1", it outputs repr(d2)
> 	for the callLater version and repr(d) for the immediate
> 	one.
> 
> 	My version outputs "1" for the immediate case and
> 	repr(d2) for the callLater version.

Hmm.  Good point.

Deferreds are more complicated that I thought :(

I think this implicit chaining behaviour needs to become more
prominently discussed in the documentation, because that's what confused
me...  Probably what needs updating in doc/howto/defer is the diagram
explaining the chain of callback processing (or the text next to it),
which never at any point hints at this behaviour (that's described
later).  I'll probably checkin a doc fix along the lines of "Note that
this behaves differently if a callback returns a Deferred; see 'Chaining
Deferreds' for more details".

-Andrew.




From andrew-twisted at puzzling.org  Mon Aug 26 20:33:29 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 27 Aug 2002 10:33:29 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Change LogFile to support disabling log rotation if rotateLength is None.
In-Reply-To: <20020826114701.GA24487@pyramid.twistedmatrix.com>
References: <E17jEgk-000598-00@pyramid.twistedmatrix.com> <20020826114701.GA24487@pyramid.twistedmatrix.com>
Message-ID: <20020827003329.GB4653@ritsuko.xware.cx>

On Mon, Aug 26, 2002 at 06:47:01AM -0500, Chris Armstrong wrote:
> On Mon, Aug 26, 2002 at 02:53:30AM -0500, spiv CVS wrote:
> > Modified files:
> > Twisted/twisted/python/logfile.py 1.1 1.2
> > 
> > Log message:
> > Change LogFile to support disabling log rotation if rotateLength is None.
> 
> Why not 0 instead of None?

It just seemed to make more sense... probably both should work.  Feel
free to fix it :)

The main purpose of this checkin was trick someone more qualified (i.e.
yourself, or glyph or itamar or whoever) to fix it properly ;)

As I said in the checkin comment, it'd be nice to have a --logsize
option for twistd, but the reason that I didn't add it is that perhaps
I'm being thick and there's a better way to do this...

-Andrew.




From andrew-twisted at puzzling.org  Mon Aug 26 20:43:17 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 27 Aug 2002 10:43:17 +1000
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020827002429.GA4653@ritsuko.xware.cx>
References: <20020824190530.GA17359@ki.yok.utu.fi> <20020826014346.GB12158@ritsuko.xware.cx> <20020826175034.GA10012@ki.yok.utu.fi> <20020827002429.GA4653@ritsuko.xware.cx>
Message-ID: <20020827004317.GC4653@ritsuko.xware.cx>

On Tue, Aug 27, 2002 at 10:24:29AM +1000, Andrew Bennetts wrote:
> Hmm.  Good point.
> 
> Deferreds are more complicated that I thought :(

To clarify, I did realise Glyph checked in a fix -- my point was I think
the docs need to make this magic behaviour a touch clearer :)

-Andrew.




From m at moshez.org  Tue Aug 27 01:32:21 2002
From: m at moshez.org (Moshe Zadka)
Date: 27 Aug 2002 05:32:21 -0000
Subject: [Twisted-Python] fwd: Accepted twisted 0.99.0-1 (i386 source all)
Message-ID: <20020827053221.11365.qmail@green.zadka.com>

To: debian-devel-changes at lists.debian.org
From: Moshe Zadka <moshez at debian.org>
Subject: Accepted twisted 0.99.0-1 (i386 source all)

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Format: 1.7
Date: Sun, 18 Aug 2002 23:01:14 -0500
Source: twisted
Binary: python2.2-twisted-bin python2.1-twisted python2.1-twisted-bin python-twisted twisted-quotes twisted-doc python2.2-twisted twisted
Architecture: source i386 all
Version: 0.99.0-1
Distribution: unstable
Urgency: low
Maintainer: Moshe Zadka <moshez at debian.org>
Changed-By: Moshe Zadka <moshez at debian.org>
Description: 
 python-twisted - Event-based framework for internet applications. (dummy package)
 python2.1-twisted - Event-based framework for internet applications. (Python 2.1)
 python2.1-twisted-bin - Event-based framework for internet applications
 python2.2-twisted - Event-based framework for internet applications.
 python2.2-twisted-bin - Event-based framework for internet applications
 twisted    - Event-based framework for internet applications. (transitional)
 twisted-doc - The official documentation of Twisted.
 twisted-quotes - Quotes from the Twisted development team
Changes: 
 twisted (0.99.0-1) unstable; urgency=low
 .
   * New upstream version.
   * Packaging changes:
     * "Twisted" is now a package, to facilitate upgrades from woody
       (there are verioned depends:)
     * New package: twisted-quotes -- quotes collected by the Twisted release
       team
Files: 
 65a4dc33c47065faadcf28c713ab0c1a 732 net extra twisted_0.99.0-1.dsc
 a5e976a2953dbf0efcd02bd738c58f59 1415173 net extra twisted_0.99.0.orig.tar.gz
 eb75fd1d67da3d04c7d5e39c4ac7ba08 416 net extra twisted_0.99.0-1.diff.gz
 3437fc40327dfa1ea733c93ac06df3e9 641672 net extra twisted-doc_0.99.0-1_all.deb
 11af21709304e558ddfff117f17fbcf9 49272 net extra twisted-quotes_0.99.0-1_all.deb
 9b1c4010b807a0931075fef8f32d3d2f 4210 net extra twisted_0.99.0-1_all.deb
 7797acc22d06034250722b15cf659ceb 4330 net extra python-twisted_0.99.0-1_all.deb
 3a9995459a9d871b5cdaf2b396bed84c 466824 net extra python2.1-twisted_0.99.0-1_all.deb
 3455c5d34d8ba74d139881c5e6781156 466538 net extra python2.2-twisted_0.99.0-1_all.deb
 eefb571dadbcf35889917d945b88d38a 23382 net extra python2.1-twisted-bin_0.99.0-1_i386.deb
 efe110781cce1c392f2263a68eb83e68 24134 net extra python2.2-twisted-bin_0.99.0-1_i386.deb

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9YOUCx/ymNkbQG9YRAlMbAKCvGTOEOS6ldP16chwnH4ec9GC/2wCgiwli
ljzmGQmEvM0CMiSpLAdnLTs=
=APdj
-----END PGP SIGNATURE-----


Accepted:
python-twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/python-twisted_0.99.0-1_all.deb
python2.1-twisted-bin_0.99.0-1_i386.deb
  to pool/main/t/twisted/python2.1-twisted-bin_0.99.0-1_i386.deb
python2.1-twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/python2.1-twisted_0.99.0-1_all.deb
python2.2-twisted-bin_0.99.0-1_i386.deb
  to pool/main/t/twisted/python2.2-twisted-bin_0.99.0-1_i386.deb
python2.2-twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/python2.2-twisted_0.99.0-1_all.deb
twisted-doc_0.99.0-1_all.deb
  to pool/main/t/twisted/twisted-doc_0.99.0-1_all.deb
twisted-quotes_0.99.0-1_all.deb
  to pool/main/t/twisted/twisted-quotes_0.99.0-1_all.deb
twisted_0.99.0-1.diff.gz
  to pool/main/t/twisted/twisted_0.99.0-1.diff.gz
twisted_0.99.0-1.dsc
  to pool/main/t/twisted/twisted_0.99.0-1.dsc
twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/twisted_0.99.0-1_all.deb
twisted_0.99.0.orig.tar.gz
  to pool/main/t/twisted/twisted_0.99.0.orig.tar.gz


-- 
To UNSUBSCRIBE, email to debian-devel-changes-request at lists.debian.org
with a subject of "unsubscribe". Trouble? Contact listmaster at lists.debian.org




From radix at twistedmatrix.com  Tue Aug 27 14:42:21 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 27 Aug 2002 13:42:21 -0500
Subject: [Twisted-Python] twisted-bugs mailing list
Message-ID: <20020827184221.GA3914@pyramid.twistedmatrix.com>

I configured the SF bug-tracker to send mails to
twisted-bugs at twistedmatrix.com. If you want to sign up, go to
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-bugs

Squash 'dem bugs!


-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Wed Aug 28 00:08:14 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 28 Aug 2002 14:08:14 +1000
Subject: [Twisted-Python] fork
Message-ID: <20020828040814.GG24818@ritsuko.xware.cx>

An interesting little use-case for us, from a snippet of a conversation
on #slug:

13:45 < DanielS-work> w00t!
13:45  * DanielS-work is 90% of the way to releasing 0.0.1 of MoulDAVia :)
13:48 < nevyn> yay
13:50 < DanielS-work> nevyn: it's how i taught myself python heh. so far every
                      method i have (and I have most of them, and the hardest
                      ones are all done) is rfc-compliant
13:51 < nevyn> so do you like python?
13:51 < DanielS-work> *mumble*pythonrocks*mumble*
13:51 < DanielS-work> *cough cough splutter*
13:52 < nevyn> hehehehe
13:53 -!- wildfire [~wildfire at flu11888-1.gw.connect.com.au] has joined #slug
13:53 < spiv> What's MoulDAVia?  Something to do with WEBDAV?
13:54 < DanielS-work> spiv: nod
13:54 < spiv> DanielS-work: I have ask... have you heard of Twisted?
13:55 < DanielS-work> spiv: bugs.debian.org/158579
13:55 < DanielS-work> spiv: Indeed, I started off using Twisted, but later
                      abandoned it because it didn't do fork()s :)
13:55 < DanielS-work> I'm going to have to write a superserver of my own at
                      some point, inetd is icky.
13:56 < spiv> Why was forking necessary?
13:56 < spiv> For the chroot?
13:57 < DanielS-work> spiv: chroot(), setgid(), setuid()
13:57 < DanielS-work> spiv: you can't do that without a fork for obvious
                      reasons :)

-Andrew.




From acapnotic at twistedmatrix.com  Wed Aug 28 01:28:24 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 27 Aug 2002 22:28:24 -0700
Subject: [Twisted-Python] M-x customize-group whitespace
In-Reply-To: <E17juiS-0004ZC-00@pyramid.twistedmatrix.com>
References: <E17juiS-0004ZC-00@pyramid.twistedmatrix.com>
Message-ID: <1030512508.13689.22.camel@troglodyte.funhouse>

Silly point that only a bunch of emacs-thumping Python wonks would
make.  Should/may I put a bit in the Whitespace section of the
CodingStandard about emacs' whitespace-cleanup mode?  Point being that
it doesn't let you leave trailing whitespace on the end of (possibly
empty) lines or trailing lines at the end of file.  Being consistent
about this would cut down on spurious file-modified flags from CVS.

See C-h f whitespace-describe if unfamiliar.

The only evil thing about it is that if you don't disable
whitespace-check-indent-whitespace, it'll, um, use tabs.

-Yours, 
- 
+Yours,
+
  acap
-





From andrew-twisted at puzzling.org  Wed Aug 28 02:16:25 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 28 Aug 2002 16:16:25 +1000
Subject: [Twisted-Python] Documentation: man pages online?
Message-ID: <20020828061625.GA30305@ritsuko.xware.cx>

Just a quick thought... we could put the twistd(1), etc man pages on
tm.com as part of documentation online.  It probably belongs under
"Adminstrator" docs.

-Andrew.




From glyph at twistedmatrix.com  Wed Aug 28 03:49:38 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 28 Aug 2002 02:49:38 -0500 (CDT)
Subject: [Twisted-Python] M-x customize-group whitespace
In-Reply-To: <1030512508.13689.22.camel@troglodyte.funhouse>
References: <E17juiS-0004ZC-00@pyramid.twistedmatrix.com>
	<1030512508.13689.22.camel@troglodyte.funhouse>
Message-ID: <20020828.024938.93022265.glyph@twistedmatrix.com>

On 27 Aug 2002 22:28:24 -0700, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> Silly point that only a bunch of emacs-thumping Python wonks would make.
> Should/may I put a bit in the Whitespace section of the CodingStandard about
> emacs' whitespace-cleanup mode?  Point being that it doesn't let you leave
> trailing whitespace on the end of (possibly empty) lines or trailing lines at
> the end of file.

I wasn't aware that whitespace-cleanup was a mode, but certainly people
submitting files should be doing M-x whitespace-cleanup before saving.  Putting
something in twisted-dev.el would probably be a good idea too.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020828/90e73b0c/attachment.pgp 

From exarkun at meson.dyndns.org  Wed Aug 28 16:45:33 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Wed, 28 Aug 2002 16:45:33 -0400
Subject: [Twisted-Python] Generalised data/metadata storage/retrieval
Message-ID: <20020828204533.GA26704@meson.dyndns.org>

Interface description attached.  Written in response to glyph's comments
that Twisted.news was waaay too NNTPy.  Suggestions and other comments
appreciated.

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
--
 4:00pm up 99 days, 16:51, 5 users, load average: 0.11, 0.13, 0.09
-------------- next part --------------


class NewsStorage:
    """
    A generic interface to metadata/data pairs
    """


    def lookupByHeader(self, predicate, max = 1):
        """
        Search for a message by examining its headers.  'predicate' 
        is called with a mapping of header name/values.  If it returns
        a true value, the Message-ID of the message is added to the
        result list.  When the result list is 'max' items long, or
        there are no more articles, it is returned.  If 'max' is None,
        it is disregarded.
        """


    def searchHeaders(self, predicate, max = None):
        """
        Collect a list of headers.  'predicate' is called with a mapping
        of header name/values.  If it returns something other than None,
        that object is added to the result list.  When the result list is
        'max' items long, or there are no more articles, it is returned.
        If 'max' is None, it is disregarded.
        """


    def lookupByBody(self, predicate, max = 1):
        """
        Search by a message by examining its body.  'predicate'
        is passed the body of each message in the database.  If
        it returns a true value, the Message-ID of  the message
        is added to the result list.  When the result list is
        'max' items long, or there are no more articles, it is
        returned.  If 'max' is None, it is disregarded.
        """


    def lookupByID(self, id):
        """
        Return the headers and body for the article with the specified
        Message-ID.
        """


    def insertMessage(self, headers, body):
        """
        Insert a new message.  'header' is a mapping of header name/values.
        If it does not contain a 'Message-ID' header one will be added.  If
        the Message-ID is already assigned 
        """


    def removeMessage(self, id):
        """
        Remove the message with the specified Message-ID
        """
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020828/1b56f943/attachment.pgp 

From exarkun at meson.dyndns.org  Wed Aug 28 19:36:42 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Wed, 28 Aug 2002 19:36:42 -0400
Subject: [Twisted-Python] Submitted for your approval
Message-ID: <20020828233642.GA27096@meson.dyndns.org>

Because I use rebuild a _lot_ in one of my applications, I finally broke
down and write this addition to scripts/twistd.py.  I'm not sure if its
appropriate for inclusion in the repository (and if it is, it certainly
needs some cleanup first).


diff -a -c -t -r1.1 twistd.py
*** twisted/scripts/twistd.py   20 Aug 2002 02:31:59 -0000      1.1
--- twisted/scripts/twistd.py   28 Aug 2002 23:32:23 -0000
***************
*** 309,311 ****
--- 309,342 ----
      if usepid:
          os.unlink(config.opts['pidfile'])
      log.msg("Server Shut Down.")
+ 
+ 
+ def daemonize(logf = 'twistd.log'):
+     from twisted.python import log
+     if logf == '-':
+         print 'daemons cannot log to stdout'
+     else:
+         logPath = os.path.abspath(logf or 'twistd.log')
+         logFile = logfile.LogFile(os.path.basename(logPath), os.path.dirname(logPath))
+ 
+         # rotate logs on SIGUSR1
+         if os.name == "posix":
+             import signal
+             def rotateLog(signal, frame, logFile=logFile):
+                 logFile.rotate()
+             signal.signal(signal.SIGUSR1, rotateLog)
+ 
+         oldstdin = sys.stdin
+         oldstdout = sys.stdout
+         oldstderr = sys.stderr
+         log.startLogging(logFile)
+         sys.stdout.flush()
+ 
+         # Turn into a daemon.
+         if os.fork():   # launch child and...
+             os._exit(0) # kill off parent
+         os.setsid()
+         os.umask(077)
+         oldstdin.close()
+         oldstdout.close()
+         oldstderr.close()


An undaemonize() would be _really_ handy, too... Hmmm :)

 Jp

-- 
There are 10 kinds of people: those who understand binary and those who do
not.
--
 7:00pm up 99 days, 19:51, 5 users, load average: 0.03, 0.07, 0.02
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020828/9a664427/attachment.pgp 

From boyd at strakt.com  Thu Aug 29 08:39:53 2002
From: boyd at strakt.com (Boyd Roberts)
Date: Thu, 29 Aug 2002 14:39:53 +0200
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
Message-ID: <3D6E1619.4040306@strakt.com>

Have you thought of getting the callLater() method to return an
object with a cancel() method?

Eg:

    from twisted.internet import reactor

    def f():
        print "I'll never run."

    call = reactor.callLater(5, f)
    call.cancel()

Other methods could be added and both would reduce
reactor's namespace.

Modification of the arguments or re-scheduling the
time could be such methods to add.






From twisted at itamarst.org  Thu Aug 29 08:59:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Aug 2002 08:59:14 -0400
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
References: <3D6E1619.4040306@strakt.com>
Message-ID: <3D6E1AA2.9030806@itamarst.org>

Boyd Roberts wrote:

> Have you thought of getting the callLater() method to return an
> object with a cancel() method?

That is more consistent with the way other reactor APIs work, and would be 
another step towards supporting multiple reactors - we should probably do 
this at some point (patches welcome).

Could you add a wishlist item at our bugtracker so this doesn't get lost?
http://sourceforge.net/tracker/?group_id=49387&atid=456015

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From boyd at strakt.com  Thu Aug 29 09:08:16 2002
From: boyd at strakt.com (Boyd Roberts)
Date: Thu, 29 Aug 2002 15:08:16 +0200
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
References: <3D6E1619.4040306@strakt.com> <3D6E1AA2.9030806@itamarst.org>
Message-ID: <3D6E1CC0.5020201@strakt.com>

Itamar Shtull-Trauring wrote:

> Could you add a wishlist item at our bugtracker so this doesn't get lost?
> http://sourceforge.net/tracker/?group_id=49387&atid=456015

Done, but it got submitted by 'nobody' as I had yet to create yet 
another profile ...

I hate that.





From twisted at itamarst.org  Thu Aug 29 09:12:34 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Aug 2002 09:12:34 -0400
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
References: <3D6E1619.4040306@strakt.com> <3D6E1AA2.9030806@itamarst.org> <3D6E1CC0.5020201@strakt.com>
Message-ID: <3D6E1DC2.7070801@itamarst.org>

Boyd Roberts wrote:

> Done, but it got submitted by 'nobody' as I had yet to create yet 
> another profile ...
> 
> I hate that.

Thanks.

Glyph and Allen are hard at work at creating a decent issue tracker so we 
don't have to use sourceforge. But a bad tracker is better than no tracker.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From exarkun at meson.dyndns.org  Thu Aug 29 11:34:58 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Thu, 29 Aug 2002 11:34:58 -0400
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
In-Reply-To: <3D6E1CC0.5020201@strakt.com>
References: <3D6E1619.4040306@strakt.com> <3D6E1AA2.9030806@itamarst.org> <3D6E1CC0.5020201@strakt.com>
Message-ID: <20020829153458.GA29056@meson.dyndns.org>

On Thu, Aug 29, 2002 at 03:08:16PM +0200, Boyd Roberts wrote:
> Itamar Shtull-Trauring wrote:
> 
> >Could you add a wishlist item at our bugtracker so this doesn't get lost?
> >http://sourceforge.net/tracker/?group_id=49387&atid=456015
> 
> Done, but it got submitted by 'nobody' as I had yet to create yet 
> another profile ...
> 
> I hate that.
> 

  Posted a followup, which mainly consists of this url:
    http://meson.dyndns.org:8080/cancelCallLater.diff

  I'll take a look at cReactor a little later and see if the second part of
the change is within my skills.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
--
 11:00am up 100 days, 11:51, 4 users, load average: 0.37, 0.27, 0.34
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020829/3402b99e/attachment.pgp 

From typo at soniq.net  Thu Aug 29 13:34:56 2002
From: typo at soniq.net (Paul Boehm)
Date: Thu, 29 Aug 2002 19:34:56 +0200
Subject: [Twisted-Python] rfc: pb filetransfers
Message-ID: <20020829173456.GA18175@soniq.net>

My approach to doing pb filetransfers is attached,
Suggestions welcome!

this code should illustrate the basic idea:

# A Session is a chain of Jobs that are carried out in order,
# one after another.

# The server builds a custom Session from Mixins, to provide
# only the jobs he wants to accept. ServerSession is the base
# class (pb.Viewable).
# FileSSM is the ServerSessionMixin for Filetransfers.
class FileSession(session.ServerSession, session.FileSSM):
    pass

# Then that class is offered to clients via callRemote.
class FilePerspective(pb.Perspective):
    def perspective_getsession(self):
        return FileSession()

# That's all, the server now provides file transfer functionality
# to clients.
----

# Client builds a Custom Session too.
# FileCSM is the ClientSessionMixin for Filetransfers,
# CallableCSM provides session.call(func, args)
#   which is used to call a function after some other
#   job has completed (e.g. a file download)
class MySession(session.ClientSession, session.FileCSM, session.CallableCSM):
    pass

# Then a session is requested from the server, and the received
# deferred is wrapped by MySession. After that we can queue jobs
# on the session.
session = MySession(perspective.callRemote("getsession"))
session.sendfile("/etc/hosts", "remotecopy")
session.getfile("/etc/passwd", "localcopy")
session.getfile("/etc/hosts", "localcopy")
session.call(woot, "Done with Session.")

# Go!
reactor.run()
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SAM3.tgz
Type: application/x-gzip
Size: 2421 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020829/5b40312e/attachment.bin 

From radix at twistedmatrix.com  Thu Aug 29 14:35:51 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Thu, 29 Aug 2002 13:35:51 -0500
Subject: [Twisted-Python] Twisted 0.99.1rc3
Message-ID: <20020829183551.GB22006@pyramid.twistedmatrix.com>

Hey all, I made 99.1rc3 available on the website (thanks to moshez and
exarkun for doing deb/win32 packages). Please download and test. As always,
this will become 0.99.1 once it's deemed to be Bug Free[TM].

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Thu Aug 29 20:44:01 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 Aug 2002 10:44:01 +1000
Subject: [Twisted-Python] Dud bug tracker link on tm.com
Message-ID: <20020830004401.GB3694@ritsuko.xware.cx>

>From anywhere other than the front page (e.g. the uber-nifty success
stories page, http://twistedmatrix.com/services/success), the "Bug
Tracker" link points to:
    http://twistedmatrix.com/http://sourceforge.net/tracker/?func=browse&group_id=49387&atid=456015

-Andrew.




From bobp at worlds-apart.com  Fri Aug 30 11:54:11 2002
From: bobp at worlds-apart.com (Bob Piper)
Date: Fri, 30 Aug 2002 09:54:11 -0600
Subject: [Twisted-Python] Mac and Twisted
In-Reply-To: <20020830004401.GB3694@ritsuko.xware.cx>
Message-ID: <JEECLEAKOMONFDBNDOGECEACCBAA.bobp@worlds-apart.com>

 I tried to do an install of Twisted on OS X (10.1.5 and 10.2), and ran into
compile failures for cReactor (missing sys/poll.h).  Is there a work around
for this?

 bob.
 Worlds Apart Productions




From twisted at itamarst.org  Fri Aug 30 12:14:06 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Aug 2002 12:14:06 -0400
Subject: [Twisted-Python] Mac and Twisted
References: <JEECLEAKOMONFDBNDOGECEACCBAA.bobp@worlds-apart.com>
Message-ID: <3D6F99CE.4060807@itamarst.org>

Bob Piper wrote:

>  I tried to do an install of Twisted on OS X (10.1.5 and 10.2), and ran into
> compile failures for cReactor (missing sys/poll.h).  Is there a work around
> for this?

Just don't compile cReactor I guess - comment out the applicable bits in 
setup.py so it doesn't try to compile it. None of the C code in Twisted is 
necessary in order to use it, they're just there for speed.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From krz at confusatron.org  Fri Aug 30 12:33:21 2002
From: krz at confusatron.org (Keith Zaback)
Date: Fri, 30 Aug 2002 11:33:21 -0500
Subject: [Twisted-Python] Mac and Twisted
In-Reply-To: <3D6F99CE.4060807@itamarst.org>; from twisted@itamarst.org on Fri, Aug 30, 2002 at 12:14:06PM -0400
References: <JEECLEAKOMONFDBNDOGECEACCBAA.bobp@worlds-apart.com> <3D6F99CE.4060807@itamarst.org>
Message-ID: <20020830113321.C4536@confusatron.org>

On Fri, Aug 30, 2002 at 12:14:06PM -0400, Itamar Shtull-Trauring wrote:
> Bob Piper wrote:
> 
> >  I tried to do an install of Twisted on OS X (10.1.5 and 10.2), and ran into
> > compile failures for cReactor (missing sys/poll.h).  Is there a work around
> > for this?
> 
> Just don't compile cReactor I guess - comment out the applicable bits in 
> setup.py so it doesn't try to compile it. None of the C code in Twisted is 
> necessary in order to use it, they're just there for speed.

Is it actually trying to compile the entire extension module, or are you
just seeing the output from the attempt to compile the test program
used to detect sys/poll.h?  Last time I tested it, if sys/poll.h did
not exist it would not build the extension module, but you would see an
compiler error during the sys/poll.h detection.  I couldn't find
anything in distutils to "check for C headers" so if anyone knows of a
better way (than what is currently in setup.py) feel free to change it.
You shouldn't need to comment out certain bits in setup.py.

--
Keith



From bobp at worlds-apart.com  Fri Aug 30 12:57:24 2002
From: bobp at worlds-apart.com (Bob Piper)
Date: Fri, 30 Aug 2002 10:57:24 -0600
Subject: [Twisted-Python] Mac and Twisted
In-Reply-To: <20020830113321.C4536@confusatron.org>
Message-ID: <JEECLEAKOMONFDBNDOGEMEACCBAA.bobp@worlds-apart.com>

> Is it actually trying to compile the entire extension module, or are you
> just seeing the output from the attempt to compile the test program
> used to detect sys/poll.h?  Last time I tested it, if sys/poll.h did
> not exist it would not build the extension module, but you would see an
> compiler error during the sys/poll.h detection.  I couldn't find
> anything in distutils to "check for C headers" so if anyone knows of a
> better way (than what is currently in setup.py) feel free to change it.
> You shouldn't need to comment out certain bits in setup.py.
 The conftest looks for sys/poll.h, and I even get a message from setup.py
about no cReactor available for the system.  It then attempts to build
cReactor and fails.

 Should have thought of just commenting out cReactor, need more caffeine
this morning.

 thanks,
 bob.

>
> --
> Keith
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From radix at twistedmatrix.com  Sat Aug 31 01:10:35 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 31 Aug 2002 01:10:35 -0400
Subject: [Twisted-Python] Twisted 0.99.1rc4
Message-ID: <20020831051035.GA407@radii>

Another release candidate out; this one will probably turn into 0.99.1
this weekend. Grab it at http://twistedmatrix.com/products/download

Moshez finally got me around to doing signed md5sums:

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

6c0934460fe24ffa75247cb6a324f2ee  Twisted-0.99.1rc4.tar.bz2
e063effe8789bc3d5741c75a229d7a4a  Twisted-0.99.1rc4.tar.gz
5d9b44a2509b0eee3e9299527f4995f6  Twisted-0.99.1rc4.zip
0f6f036318844098e5bff153094737e8  TwistedDocs-0.99.1rc4.tar.bz2
3107769bbac3de34ad66ad611738e902  TwistedDocs-0.99.1rc4.tar.gz
2e66ad4f3dbbc8b19316c5187bba028c  TwistedDocs-0.99.1rc4.zip
f0a4fe811c738b51f6ec1fff0408f0a7  Twisted_NoDocs-0.99.1rc4.tar.bz2
41d84e73fc1890eb010d087bd12e0764  Twisted_NoDocs-0.99.1rc4.tar.gz
a90b68e1755b92089dce6941fb3facea  Twisted_NoDocs-0.99.1rc4.zip
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9cEmjNp279O1/OG4RAklwAJ4tXUR0a9N6BnMPz7gsSuMFldQmLwCghFpW
+/BjfnMRsICK/Vq0MllWMJw=
=qsAe
-----END PGP SIGNATURE-----

I've also updated the downloads page to have a link to these signed md5sums.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020831/97fb190e/attachment.pgp 

From m at moshez.org  Sat Aug 31 01:37:46 2002
From: m at moshez.org (Moshe Zadka)
Date: 31 Aug 2002 05:37:46 -0000
Subject: [Twisted-Python] Twisted 0.99.1rc4
In-Reply-To: <20020831051035.GA407@radii>
References: <20020831051035.GA407@radii>
Message-ID: <20020831053746.5719.qmail@green.zadka.com>

On Sat, 31 Aug 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> --cWoXeonUoKmBZSoM
> Content-Type: text/plain; charset=us-ascii
> Content-Disposition: inline
> Content-Transfer-Encoding: quoted-printable
                             ^^^^^^^^^^^^^^^^ <-- it is not a good
idea to q-p encode signed messages.



From andrew-twisted at puzzling.org  Sat Aug 31 06:02:46 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 31 Aug 2002 20:02:46 +1000
Subject: [Twisted-Python] Twisted superservers and setuid/setgid subservers
Message-ID: <20020831100246.GA4697@frobozz.local>

Here's some ideas I've been thinking about with aid of my housemate (who is
CC'd).

A feature of some servers is the ability to run chroot'd, so say you want to
be a WebDAV server for a site, when a user logs in, it forks, chroots to the
users home directory, and sets its uid/gid to that of the user, thereby
restricting the potential for security holes to damage the system.  (The
chroot is an optional paranoid extra if you are dropping uid/gid)

Consider twisted.web.distrib (I might have bits of this slightly wrong;
please correct me if so).  It currently does something like this, although
manually: each user has to start their own twistd, which only runs
twisted.web, and talks to the superserver with PB via a pipe.  This is good,
but not as general as it could be.  It's limited to twisted.web, and users
have to manually ensure that twistd is running.

I think it'd be nice to generalise this to *any* service that can run within
the context of different users, e.g. for FTP, WebDAV, whatever.  So there'd
be some automated way to tell a Twisted application "Ok, now serve this as a
particular user by passing it to a user-owned twistd".

What I'm envisaging is something like this:
  * The superserver receives a WidgetService request from user Bob
  * The superserver connects to the user's WidgetService twistd, starting it
    if necessary (more on this in a moment)
  * The user's WidgetService then does all the hard work :)

If the user doesn't have a currently running twistd, then you could do, say:
  * The superserver creates a pipe
  * The superserver (which is running as root (or something effectively
    root)) forks a child
  * The child does a reactor.crash() to stop it interfering with the
    parent's normal handling of events
  * The child closes all file descriptors in the reactor, except for the
    pipe.  It should probably start logging to a different log file as well.
    Also, things like DB-backed twisted.cred authenticators probably should
    be shutdown... hmm, this part is messy :(
  * The child then starts a fresh Application, which runs the user's
    WidgetService and starts processing for the superserver

Now that I think about it, it is probably cleaner to simply spawn a fresh
process rather than futzing around with fork, so just:
  * The superserver spawns a user twistd as a particular uid/gid, and talks
    to it over a PB pipe.

Anyway...

The nice thing about this model is that there is only 1 twistd running per
user (and you could get the user twistds to automatically shutdown if
inactive for, say, 10 minutes to free resources), which means your process
load is still mostly independent of the number of connections.  It'd be
*really* cool if a superserver listening on multiple protocols, e.g.
"WidgetService" and HTTP, could have only a *single* twistd per user,
regardless of number of protocols the superserver is dealing with.

It'd be really nice to be able to chroot as well, but I suspect python
doesn't work cleanly with chroot, due to file descriptors being left open to
modules...

So yeah, this is a long-winded way of saying "twisted.web.distrib is cool,
but should be general and more automatic", because I think this would
probably be useful.

In vaguely related news, I've nearly got a simple Twisted inetd replacement
written...  expect a checkin sometime this weekend.

-Andrew.




From glyph at twistedmatrix.com  Sat Aug 31 22:42:40 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 31 Aug 2002 21:42:40 -0500 (CDT)
Subject: [Twisted-Python] Re: [Twisted-commits] fixed connectionLost calls to accept
 Failures. Read on, I've got gripes.
In-Reply-To: <E17lBVg-0001Ht-00@pyramid.twistedmatrix.com>
References: <E17lBVg-0001Ht-00@pyramid.twistedmatrix.com>
Message-ID: <20020831.214240.59462687.glyph@twistedmatrix.com>


On Sat, 31 Aug 2002 11:54:08 -0500, radix CVS <radix at twistedmatrix.com> wrote:

> I think all the methods that are returning CONNECTION_* should be _raising_
> them. "Return victorious or not at all". This has the benefit of useful
> tracebacks in the Failure objects.

Well, it was originally that way.

However, it turns out that creating exception objects in Python, generating
tracebacks et. al. is rather expensive.  Losing connections happens a LOT.
Since connectionLost is in the "positive path" of most applications, like, for
example, HTTP, raising them creates an even higher overhead for
creating/destroying connections.  At the time I made this change, I benchmarked
twisted.web with a small static page.  IIRC there was a 2-3x speedup with doing
these as "return" rather than "raise".  Perhaps newer releases of Python don't
have such a wide disparity, and the HTTP parser is a lot more robust (and
attendantly complex) now, so it's possible that this slowdown is now marginal.
Still, let's try to avoid using exceptions as a general-purpose control
structure.  They're for handling errors, not just unusual conditions.  (The
connection closing is only an error if you don't expect it to close.)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020831/6679c38d/attachment.pgp 

From info at cleosan.com  Thu Aug  1 04:21:59 2002
From: info at cleosan.com (Fredrik)
Date: Thu, 1 Aug 2002 12:21:59 +0200
Subject: [Twisted-Python] dbapi and pb question
In-Reply-To: <E17aCuA-0000YG-00@zaibach.twistedmatrix.com>
References: <E17aCuA-0000YG-00@zaibach.twistedmatrix.com>
Message-ID: <20020801102159.GA6211@laptop.cleosan.com>

I am a newbie to this  and i try to connect a database to pb,
when trying this code i dont get any response from the server (running pbgtk.py)but the server outputs the print statement, how do I send bacdk a callback to the client ??



from twisted.enterprise import adbapi 
from twisted.spread import pb
from twisted.internet import app


class AgeDatabase(adbapi.Augmentation): 
    """A simple example that can retrieve an age from the database""" 

    def getAAge(self): 
        sql = """SELECT age FROM person """ 
        return self.runQuery(sql) 
 
    def getAge(self, name): 
        sql = """SELECT age FROM person where name = %s """ 
        return self.runQuery(sql, name) 
 
class DefinedError(pb.Error):
    pass

class SimplePerspective(pb.Perspective):
    db = AgeDatabase(adbapi.ConnectionPool("MySQLdb", db='test')) 

    def perspective_echo(self, text):
        print 'echoing',text
        self.db.getAge(text).addCallback(self.gotAge,text)  

    def perspective_error(self):
        raise DefinedError("exception!")

    #########################################
    # the next function wont return to client 
    
    def gotAge(self,resultlist, name): 
        age = resultlist[0][0]          # First field of first record 
        print "%s is %d years old" % (name, age) 
        return str(age) 


class SimpleService(pb.Service):
    def getPerspectiveNamed(self, name):
        p = SimplePerspective(name)
        p.setService(self)
        return p

if __name__ == '__main__':
    import pbecho
    appl = app.Application("pbecho")
    pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentity("guest")
    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
    appl.run()
    #appl.save("start")



Fredrik Bjornsson
info at cleosan.com




From mattcampbell at pobox.com  Thu Aug  1 11:19:31 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Thu, 1 Aug 2002 12:19:31 -0500
Subject: [Twisted-Python] The stopConsuming method
Message-ID: <20020801121930.A42733@mattc.cm.nu>

I noticed a method in twisted.internet.abstract.FileDescriptor
called stopConsuming, which can be called by the producer to indicate
that there is nothing more to produce.  The method calls
self.unregisterProducer, then self.loseConnection.  I also noticed
that this method isn't part of the IConsumer interface and isn't
implemented by twisted.protocols.http.Request.  I think this method
should be added to IConsumer and implemented by all classes that
implement that interface, because it enables the producer to indicate
that there's nothing more to produce, whether the consumer be a
Transport on which loseConnection is called to terminate the
connection, or a Request on which finish is called to end that
request/response process.
-- 
Matt Campbell
Email and MSN Messenger:  mattcampbell at pobox.com
Phone:  (316) 652-8727
Web site:  http://www.pobox.com/~mattcampbell/



From typo at soniq.net  Thu Aug  1 12:42:10 2002
From: typo at soniq.net (Paul Boehm)
Date: Thu, 1 Aug 2002 20:42:10 +0200
Subject: [Twisted-Python] FilePager
Message-ID: <20020801184210.GA50@soniq.net>

intended for twisted.spread.util:

class FilePager(Pager):
    """A pager for files.
    """
    def __init__(self, collector, file, chunkSize=8192):
        self.file = file
        self.chunkSize = chunkSize
        Pager.__init__(self, collector)
    def nextPage(self):
        data = self.file.read(self.chunkSize)
        if len(data) < self.chunkSize:
            self.stopPaging()
        return data




From arashi1 at pd.jaring.my  Fri Aug  2 03:42:22 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Fri, 2 Aug 2002 17:42:22 +0800
Subject: [Twisted-Python] Dynamic web application using twisted.web.resource
In-Reply-To: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com>
References: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com>
Message-ID: <200208021742.22381.arashi1@pd.jaring.my>

>
> If this is *really* the functionality that you want, again, this is far
> more similar to the traversal semantics of Zope or Quixote. Twisted has
> taken a far more explicit tack, where there is a specific api that your
> objects must implement to provide object-publishing functionality.
>

Well, to tell the truth, I've decided that I don't really want this Zope-like 
functionality after all. What I do want to understand, though is how stuff 
works. The docs are too sparse and I cannot understand how things all work 
together. Specifically, I'm interested to know how to build a custom 
webserver using twisted that does not serve any files at all. And does not 
publish objects like zope. The build your own server with twisted doc is not 
enough somehow. It'd be nice if a tutorial used http as an example.

How do you use all those classes and modules? (twisted.web.server, 
twisted.internet.reactor)? The example Donovan gave (for my earlier post) did 
not give me much insight into how to use these modules and classes. I just 
know it's some really easy answer but...I'm still lost.

How does twisted implement http? wrt the Basic/Simple/CGIHTTPServer modules in 
the python disrto. I remember there was some docs about this but I cannot 
remember where! It's not in the Twisted distro (that I could find anyway).

-- 
Regards,
Mukhsein Johari



From andrew-twisted at puzzling.org  Fri Aug  2 04:36:52 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 2 Aug 2002 20:36:52 +1000
Subject: [Twisted-Python] Dynamic web application using twisted.web.resource
In-Reply-To: <200208021742.22381.arashi1@pd.jaring.my>
References: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com> <200208021742.22381.arashi1@pd.jaring.my>
Message-ID: <20020802103652.GB716@frobozz.local>

On Fri, Aug 02, 2002 at 05:42:22PM +0800, Mukhsein Johari wrote:

[..snip..]
> How does twisted implement http? wrt the Basic/Simple/CGIHTTPServer
> modules in the python disrto. I remember there was some docs about this
> but I cannot remember where! It's not in the Twisted distro (that I could
> find anyway).

Well, it implements HTTP in twisted.protocols.http, rather than using the
synchronous implementations in the python standard library.  But, for
Twisted at least, the protocol is still a considerable step short of being a
server that knows how to do more than just parse requests.  So while the
protocol is implemented in twisted.protocols.http, the actual logic that
knows how to read files, run CGIs, and whatnot, resides in twisted.web.
Hopefully that gives you some idea of where to look to find what you need.

Unfortunately, I don't understand the Twisted Web stuff in any further
detail, and I also would quite like some nice lengthy docs to explain it to
me in small digestible pieces :)

-Andrew.




From steve.waterbury at gsfc.nasa.gov  Thu Aug  1 14:43:50 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 01 Aug 2002 16:43:50 -0400
Subject: [Twisted-Python] [patch] mktap web --resource
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk>
Message-ID: <3D499D86.EF982BC7@gsfc.nasa.gov>

Sune Kirkeby wrote:
> 
> [ Itamar Shtull-Trauring ]
> > Any chance for async large object support as well?
> 
> Yup, as time permits I hope to implement it.  For now I guess I will
> spend more time experimenting with async DB-access in generel,
> though.

Any more news on this front?  (Not that I need large objects ... just 
interested in async db-access in general.  ;^)  BTW, I kind of like some 
things about psycopg (which is not async, of course), but I couldn't get 
t.e.adbapi.py to work with it.  

Cheers,
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From steve.waterbury at gsfc.nasa.gov  Thu Aug  1 14:52:40 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 01 Aug 2002 16:52:40 -0400
Subject: [Twisted-Python] Patch for dbgadgets.py
References: <3D46ACF1.75845321@gsfc.nasa.gov>
Message-ID: <3D499F98.F56C5A0B@gsfc.nasa.gov>

Steve Waterbury wrote:

> ... there
> seems to be a problem with gotPerspectives' call to dbgadgets.py, but
> I haven't messed with gadgets (don't need them yet), so I won't be
> looking at that.  (A gadgets cognoscente could fix it in seconds,
> anyway, I'm sure!  ;^)

OK, I got obsessed and took longer messing with this than I 
should have, but I learned some more stuff about twisted -- none
of which helped me fix the bug because it was just a "%" that 
occurred in a formatted string.  Anyway, this time I did a proper 
(I think) cvs diff.  

I kind of like the little dbauth app ... does anyone use it?  
(I suspect not, since this appears to have been broken for a while ...)  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
-------------- next part --------------
Index: Twisted/twisted/enterprise/dbgadgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/dbgadgets.py,v
retrieving revision 1.4
diff -c -r1.4 dbgadgets.py
*** Twisted/twisted/enterprise/dbgadgets.py	13 Mar 2002 22:38:06 -0000	1.4
--- Twisted/twisted/enterprise/dbgadgets.py	1 Aug 2002 20:41:07 -0000
***************
*** 79,86 ****
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
-         widgets.Gadget.__init__(self)
          self.authorizer = authorizer
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
--- 79,86 ----
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
          self.authorizer = authorizer
+         widgets.Gadget.__init__(self)
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
***************
*** 92,103 ****
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 width="95%">
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % self.identityName)
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )
--- 92,103 ----
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 %s>
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % (self.identityName, 'width="95%"'))
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )

From typo at soniq.net  Fri Aug  2 18:55:33 2002
From: typo at soniq.net (Paul Boehm)
Date: Sat, 3 Aug 2002 02:55:33 +0200
Subject: [Twisted-Python] spread.sturdy reconnect delay
Message-ID: <20020803005533.GA32084@soniq.net>

currently, when spread.sturdy is unable to (re)connect (e.g. because the
connection was refused/server not running), it retries at full
speed.. without any delay.. 

implementing some kind of rate limiting is trivial, but i'm not sure about
the right approach. the issue is current for me, as i'm using sturdy in
my application and wouldn't want it to flood the network too much.

i've come up with the following approaches:
  *) try n times, then wait i seconds, rinse, repeat
  *) try, sleep i, try, sleep i, ...
  *) try, sleep i++, try, sleep i++, ..

suggestions?



From carmstro at twistedmatrix.com  Fri Aug  2 19:17:35 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 02 Aug 2002 21:17:35 -0400
Subject: [Twisted-Python] spread.sturdy reconnect delay
In-Reply-To: <20020803005533.GA32084@soniq.net>
References: <20020803005533.GA32084@soniq.net>
Message-ID: <1028337457.10479.0.camel@radii>

On Fri, 2002-08-02 at 20:55, Paul Boehm wrote:
> i've come up with the following approaches:
>   *) try n times, then wait i seconds, rinse, repeat
>   *) try, sleep i, try, sleep i, ...
>   *) try, sleep i++, try, sleep i++, ..

I'd go with either the first or second, and since the second is simpler,
probably the second.
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From sean at twistedmatrix.com  Fri Aug  2 22:31:23 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Fri, 2 Aug 2002 23:31:23 -0500
Subject: [Twisted-Python] dbapi and pb question
In-Reply-To: <20020801102159.GA6211@laptop.cleosan.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGOEFHCGAA.sean@twistedmatrix.com>

looks to me like the method "perspective_echo" should return the defered
that the method "getAge" gets from  the dbapi.

Try changing:

   def perspective_echo(self, text):
        print 'echoing',text
        self.db.getAge(text).addCallback(self.gotAge,text)

to

   def perspective_echo(self, text):
        print 'echoing',text
        return self.db.getAge(text).addCallback(self.gotAge,text)


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Fredrik
Sent: Thursday, August 01, 2002 5:22 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] dbapi and pb question


I am a newbie to this  and i try to connect a database to pb,
when trying this code i dont get any response from the server (running
pbgtk.py)but the server outputs the print statement, how do I send bacdk a
callback to the client ??



from twisted.enterprise import adbapi
from twisted.spread import pb
from twisted.internet import app


class AgeDatabase(adbapi.Augmentation):
    """A simple example that can retrieve an age from the database"""

    def getAAge(self):
        sql = """SELECT age FROM person """
        return self.runQuery(sql)

    def getAge(self, name):
        sql = """SELECT age FROM person where name = %s """
        return self.runQuery(sql, name)

class DefinedError(pb.Error):
    pass

class SimplePerspective(pb.Perspective):
    db = AgeDatabase(adbapi.ConnectionPool("MySQLdb", db='test'))

    def perspective_echo(self, text):
        print 'echoing',text
        self.db.getAge(text).addCallback(self.gotAge,text)

    def perspective_error(self):
        raise DefinedError("exception!")

    #########################################
    # the next function wont return to client

    def gotAge(self,resultlist, name):
        age = resultlist[0][0]          # First field of first record
        print "%s is %d years old" % (name, age)
        return str(age)


class SimpleService(pb.Service):
    def getPerspectiveNamed(self, name):
        p = SimplePerspective(name)
        p.setService(self)
        return p

if __name__ == '__main__':
    import pbecho
    appl = app.Application("pbecho")

pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentit
y("guest")
    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
    appl.run()
    #appl.save("start")



Fredrik Bjornsson
info at cleosan.com


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From info at cleosan.com  Sat Aug  3 12:39:11 2002
From: info at cleosan.com (Fredrik)
Date: Sat, 3 Aug 2002 20:39:11 +0200
Subject: [Twisted-Python] dbapi and pb question
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEFHCGAA.sean@twistedmatrix.com>
References: <20020801102159.GA6211@laptop.cleosan.com> <HOEEKPCOKELHCNIJNMAGOEFHCGAA.sean@twistedmatrix.com>
Message-ID: <20020803183911.GA5178@laptop.cleosan.com>

Thank you it works
and now i will try to make many sqls in one transaction, 
if I have any  problem I will return ...

Regards 
Fredrik

On Fri, Aug 02, 2002 at 11:31:23PM -0500, Sean Riley wrote:
> looks to me like the method "perspective_echo" should return the defered
> that the method "getAge" gets from  the dbapi.
> 
> Try changing:
> 
>    def perspective_echo(self, text):
>         print 'echoing',text
>         self.db.getAge(text).addCallback(self.gotAge,text)
> 
> to
> 
>    def perspective_echo(self, text):
>         print 'echoing',text
>         return self.db.getAge(text).addCallback(self.gotAge,text)
> 
> 
> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Fredrik
> Sent: Thursday, August 01, 2002 5:22 AM
> To: twisted-python at twistedmatrix.com
> Subject: [Twisted-Python] dbapi and pb question
> 
> 
> I am a newbie to this  and i try to connect a database to pb,
> when trying this code i dont get any response from the server (running
> pbgtk.py)but the server outputs the print statement, how do I send bacdk a
> callback to the client ??
> 
> 
> 
> from twisted.enterprise import adbapi
> from twisted.spread import pb
> from twisted.internet import app
> 
> 
> class AgeDatabase(adbapi.Augmentation):
>     """A simple example that can retrieve an age from the database"""
> 
>     def getAAge(self):
>         sql = """SELECT age FROM person """
>         return self.runQuery(sql)
> 
>     def getAge(self, name):
>         sql = """SELECT age FROM person where name = %s """
>         return self.runQuery(sql, name)
> 
> class DefinedError(pb.Error):
>     pass
> 
> class SimplePerspective(pb.Perspective):
>     db = AgeDatabase(adbapi.ConnectionPool("MySQLdb", db='test'))
> 
>     def perspective_echo(self, text):
>         print 'echoing',text
>         self.db.getAge(text).addCallback(self.gotAge,text)
> 
>     def perspective_error(self):
>         raise DefinedError("exception!")
> 
>     #########################################
>     # the next function wont return to client
> 
>     def gotAge(self,resultlist, name):
>         age = resultlist[0][0]          # First field of first record
>         print "%s is %d years old" % (name, age)
>         return str(age)
> 
> 
> class SimpleService(pb.Service):
>     def getPerspectiveNamed(self, name):
>         p = SimplePerspective(name)
>         p.setService(self)
>         return p
> 
> if __name__ == '__main__':
>     import pbecho
>     appl = app.Application("pbecho")
> 
> pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentit
> y("guest")
>     appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
>     appl.run()
>     #appl.save("start")
> 
> 
> 
> Fredrik Bjornsson
> info at cleosan.com
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From andrew-twisted at puzzling.org  Sun Aug  4 00:46:27 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 4 Aug 2002 16:46:27 +1000
Subject: [Twisted-Python] [patch] mktap web --resource
In-Reply-To: <3D499D86.EF982BC7@gsfc.nasa.gov>
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov>
Message-ID: <20020804064627.GC549@frobozz.local>

On Thu, Aug 01, 2002 at 04:43:50PM -0400, Steve Waterbury wrote:
> Sune Kirkeby wrote:
> > 
> > [ Itamar Shtull-Trauring ]
> > > Any chance for async large object support as well?
> > 
> > Yup, as time permits I hope to implement it.  For now I guess I will
> > spend more time experimenting with async DB-access in generel,
> > though.
> 
> Any more news on this front?  (Not that I need large objects ... just 
> interested in async db-access in general.  ;^)  BTW, I kind of like some 
> things about psycopg (which is not async, of course), but I couldn't get 
> t.e.adbapi.py to work with it.  

What errors did psycopg with adbapi give?

I know that for the mxODBC Windows stuff, it doesn't *quite* conform to
DB-API 2.0, you need to manually do
    import mx.ODBC.Windows
    mx.ODBC.Windows.threadsafety = 1

to make Twisted like it.

-Andrew.




From steve.waterbury at gsfc.nasa.gov  Fri Aug  2 08:09:31 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 02 Aug 2002 10:09:31 -0400
Subject: [Twisted-Python] Patch for dbgadgets.py
References: <3D46ACF1.75845321@gsfc.nasa.gov>
Message-ID: <3D4A929B.C165D921@gsfc.nasa.gov>

Steve Waterbury wrote:

> ... there
> seems to be a problem with ... dbgadgets.py, but
> I haven't messed with gadgets (don't need them yet), so I won't be
> looking at that.  ...

OK, I got obsessed and fixed it (just a "%" that occurred in a 
formatted string).  

I kind of like the little dbauth app ... does anyone use it?  
(I suspect not, since this appears to have been broken for a 
while ...)  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
-------------- next part --------------
Index: Twisted/twisted/enterprise/dbgadgets.py
===================================================================
RCS file: /cvs/Twisted/twisted/enterprise/dbgadgets.py,v
retrieving revision 1.4
diff -c -r1.4 dbgadgets.py
*** Twisted/twisted/enterprise/dbgadgets.py	13 Mar 2002 22:38:06 -0000	1.4
--- Twisted/twisted/enterprise/dbgadgets.py	1 Aug 2002 20:41:07 -0000
***************
*** 79,86 ****
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
-         widgets.Gadget.__init__(self)
          self.authorizer = authorizer
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
--- 79,86 ----
  class PerspectivesGadget(widgets.Gadget, widgets.Widget):
      title = " "
      def __init__(self, authorizer):
          self.authorizer = authorizer
+         widgets.Gadget.__init__(self)
  
      def display(self, request):
          """Display the intro list of forums. This is only called if there is no URI.
***************
*** 92,103 ****
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 width="95%">
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % self.identityName)
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )
--- 92,103 ----
          l = []
          l.append('''
          <h3> Perspectives for Identity: %s </h3>
!         <table cellpadding=4 cellspacing=1 border=0 %s>
          <tr bgcolor="#ff9900">
          <td COLOR="#000000"><b> Perspective Name </b> </td>
          <td COLOR="#000000"><b> Service </b> </td>
          <td COLOR="#000000"><b> Actions </b> </td>
!         </tr>\n''' % (self.identityName, 'width="95%"'))
  
          for (iname, pname, sname) in data:
              l.append( "<tr> <td>%s</td> <td> %s </td>" % (pname, sname) )


From tv at twistedmatrix.com  Sat Aug  3 02:58:40 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 3 Aug 2002 11:58:40 +0300
Subject: [Twisted-Python] ClientFactory.connectionLost(connector, reason)
Message-ID: <20020803085840.GA8370@ki.yok.utu.fi>

	Hi. I've been groaning about how Twisted loses
	the actual errors, and does not allow programs
	to accurately report them to the user. Here is
	some progress on fixing that..

	ClientFactory's connectionLost() method will get
	a new parameter "reason", which will be a 
	failure.Failure(SomeException()). There will be
	no backwards compatibility; I will fix atleast
	the code in the main tree that has tests (that
	succeeded before the patch!). If you want to ensure
	compatibility, start using "def connectionLost(connector,
	reason=None)" right now.

	At a later stage, Protocol's connectionLost will get
	an extra argument also, a reason as above. There
	will be backwards compatibility, but having a
	non-reason-taking Protocol will be deprecated from
	that moment on, with a warning message.


	Now, what I need from you guys is

	1) review the patch

	2) write TCP/Connector/ClientFactory/Protocol tests
	   about connectionLost (and ClientFactory.connectionFailed)

	3) fix cReactor

	4) fix win32eventreactor

	5) fix kqreactor

	6) test qtreactor

	7) test gtkreactor


	My current working patch is attached.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}
-------------- next part --------------
Index: doc/examples/echoclient_ssl.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/echoclient_ssl.py,v
retrieving revision 1.1
diff -u -u -r1.1 echoclient_ssl.py
--- doc/examples/echoclient_ssl.py	31 Jul 2002 22:01:02 -0000	1.1
+++ doc/examples/echoclient_ssl.py	3 Aug 2002 08:40:44 -0000
@@ -68,8 +68,8 @@
         print 'connection failed:', reason.getErrorMessage()
         reactor.stop()
 
-    def connectionLost(self, connector):
-        print 'connection lost'
+    def connectionLost(self, connector, reason):
+        print 'connection lost:', reason.getErrorMessage()
         reactor.stop()
 
 factory = EchoClientFactory()
Index: doc/examples/ircLogBot.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/ircLogBot.py,v
retrieving revision 1.7
diff -u -u -r1.7 ircLogBot.py
--- doc/examples/ircLogBot.py	24 Jul 2002 02:25:41 -0000	1.7
+++ doc/examples/ircLogBot.py	3 Aug 2002 08:40:44 -0000
@@ -91,7 +91,7 @@
         self.channel = channel
         self.filename = filename
 
-    def connectionLost(self, connector):
+    def connectionLost(self, connector, reason):
         connector.connect()
 
     def connectionFailed(self, connector, reason):
Index: twisted/internet/abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.25
diff -u -u -r1.25 abstract.py
--- twisted/internet/abstract.py	14 Jul 2002 03:19:49 -0000	1.25
+++ twisted/internet/abstract.py	3 Aug 2002 08:40:44 -0000
@@ -49,7 +49,7 @@
             from twisted.internet import reactor
         self.reactor = reactor
     
-    def connectionLost(self):
+    def connectionLost(self, reason):
         """The connection was lost.
 
         This is called when the connection on a selectable object has been
Index: twisted/internet/base.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/base.py,v
retrieving revision 1.13
diff -u -u -r1.13 base.py
--- twisted/internet/base.py	24 Jul 2002 05:22:58 -0000	1.13
+++ twisted/internet/base.py	3 Aug 2002 08:40:45 -0000
@@ -158,7 +158,7 @@
         for reader in selectables:
             try:
                 log.logOwner.own(reader)
-                reader.connectionLost()
+                reader.connectionLost(main.CONNECTION_LOST)
                 log.logOwner.disown(reader)
             except:
                 log.deferr()
Index: twisted/internet/default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.25
diff -u -u -r1.25 default.py
--- twisted/internet/default.py	29 Jul 2002 23:33:55 -0000	1.25
+++ twisted/internet/default.py	3 Aug 2002 08:40:45 -0000
@@ -25,6 +25,7 @@
 import os
 import socket
 import signal
+import sys
 
 from twisted.internet.interfaces import IReactorCore, IReactorTime, IReactorUNIX
 from twisted.internet.interfaces import IReactorTCP, IReactorUDP, IReactorSSL
@@ -32,7 +33,7 @@
 from twisted.internet import main, error, protocol, interfaces
 
 from twisted.internet import main, tcp, udp, task
-from twisted.python import log, threadable
+from twisted.python import log, threadable, failure
 from twisted.persisted import styles
 from twisted.python.runtime import platform
 
@@ -44,7 +45,7 @@
 except:
     sslEnabled = 0
 
-from main import CONNECTION_LOST, CONNECTION_DONE
+from main import CONNECTION_LOST
 
 if platform.getType() != 'java':
     import select
@@ -112,9 +113,9 @@
             # factory hasn't called our connect() method
             self.factory.doStop()
 
-    def connectionLost(self):
+    def connectionLost(self, reason):
         self.state = "disconnected"
-        self.factory.connectionLost(self)
+        self.factory.connectionLost(self, reason)
         if self.state == "disconnected":
             # factory hasn't called our connect() method
             self.factory.doStop()
@@ -527,16 +528,18 @@
                 try:
                     why = getattr(selectable, method)()
                     handfn = getattr(selectable, 'fileno', None)
-                    if not handfn or handfn() == -1:
-                        why = CONNECTION_LOST
+                    if not handfn:
+                        why = main.ConnectionFdescWentAway('Handler has no fileno method')
+                    elif handfn() == -1:
+                        why = main.ConnectionFdescWentAway('Filedescriptor went away')
                 except:
                     log.deferr()
-                    why = CONNECTION_LOST
+                    why = sys.exc_value
                 if why:
                     self.removeReader(selectable)
                     self.removeWriter(selectable)
                     try:
-                        selectable.connectionLost()
+                        selectable.connectionLost(failure.Failure(why))
                     except:
                         log.deferr()
                 log.logOwner.disown(selectable)
Index: twisted/internet/fdesc.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/fdesc.py,v
retrieving revision 1.1
diff -u -u -r1.1 fdesc.py
--- twisted/internet/fdesc.py	6 Jul 2002 15:17:30 -0000	1.1
+++ twisted/internet/fdesc.py	3 Aug 2002 08:40:45 -0000
@@ -26,7 +26,7 @@
     import FCNTL
 
 # twisted imports
-from main import CONNECTION_LOST, CONNECTION_DONE
+from main import CONNECTION_LOST
 
 
 def setNonBlocking(fd):
Index: twisted/internet/gtkreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/gtkreactor.py,v
retrieving revision 1.4
diff -u -u -r1.4 gtkreactor.py
--- twisted/internet/gtkreactor.py	7 Jul 2002 05:34:34 -0000	1.4
+++ twisted/internet/gtkreactor.py	3 Aug 2002 08:40:45 -0000
@@ -114,12 +114,12 @@
                 method = getattr(source, cbName)
                 why = method()
             except:
-                why = main.CONNECTION_LOST
+                why = sys.exc_value
                 log.msg('Error In %s.%s' %(source,cbName))
                 log.deferr()
             if why:
                 try:
-                    source.connectionLost()
+                    source.connectionLost(why)
                 except:
                     log.deferr()
                 self.removeReader(source)
Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.78
diff -u -u -r1.78 main.py
--- twisted/internet/main.py	7 Jul 2002 03:58:07 -0000	1.78
+++ twisted/internet/main.py	3 Aug 2002 08:40:46 -0000
@@ -18,8 +18,14 @@
 
 # System Imports
 import socket
-CONNECTION_LOST = -1
-CONNECTION_DONE = -2
+class ConnectionLost(Exception):
+    pass
+CONNECTION_LOST = ConnectionLost('Connection lost')
+class ConnectionDone(Exception):
+    pass
+CONNECTION_DONE = ConnectionDone('Connection done')
+class ConnectionFdescWentAway(Exception):
+    pass
 
 # Twisted Imports
 
Index: twisted/internet/pollreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/pollreactor.py,v
retrieving revision 1.4
diff -u -u -r1.4 pollreactor.py
--- twisted/internet/pollreactor.py	7 Jul 2002 02:02:57 -0000	1.4
+++ twisted/internet/pollreactor.py	3 Aug 2002 08:40:46 -0000
@@ -25,10 +25,10 @@
 """
 
 # System imports
-import select, errno
+import select, errno, sys
 
 # Twisted imports
-from twisted.python import log, threadable
+from twisted.python import log, threadable, failure
 from twisted.internet import main, default
 
 # globals
@@ -139,16 +139,16 @@
                     if not why and event & POLLOUT:
                         why = selectable.doWrite()
                     if not selectable.fileno() == fd:
-                        why = main.CONNECTION_LOST
+                        why = main.ConnectionFdescWentAway('Filedescriptor went away')
                 except:
                     log.deferr()
-                    why = main.CONNECTION_LOST
+                    why = sys.exc_value
 
             if why:
                 self.removeReader(selectable)
                 self.removeWriter(selectable)
                 try:
-                    selectable.connectionLost()
+                    selectable.connectionLost(failure.Failure(why))
                 except:
                     log.deferr()
 
Index: twisted/internet/protocol.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/protocol.py,v
retrieving revision 1.11
diff -u -u -r1.11 protocol.py
--- twisted/internet/protocol.py	28 Jul 2002 18:43:54 -0000	1.11
+++ twisted/internet/protocol.py	3 Aug 2002 08:40:46 -0000
@@ -108,7 +108,7 @@
     def connectionFailed(self, connector, reason):
         """Called when a connection has failed."""
 
-    def connectionLost(self, connector):
+    def connectionLost(self, connector, reason):
         """Called when a connection is lost.
 
         It may be useful to call connector.connect() - this will reconnect.
Index: twisted/internet/ptypro.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/ptypro.py,v
retrieving revision 1.2
diff -u -u -r1.2 ptypro.py
--- twisted/internet/ptypro.py	15 Jul 2002 22:10:59 -0000	1.2
+++ twisted/internet/ptypro.py	3 Aug 2002 08:40:46 -0000
@@ -25,7 +25,7 @@
 
 # Sibling Imports
 import abstract, main, fdesc, process
-from main import CONNECTION_LOST, CONNECTION_DONE
+from main import CONNECTION_LOST
 
 
 class Process(abstract.FileDescriptor, styles.Ephemeral):
Index: twisted/internet/qtreactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/qtreactor.py,v
retrieving revision 1.4
diff -u -u -r1.4 qtreactor.py
--- twisted/internet/qtreactor.py	29 Jul 2002 19:54:19 -0000	1.4
+++ twisted/internet/qtreactor.py	3 Aug 2002 08:40:46 -0000
@@ -30,6 +30,7 @@
 
 # System Imports
 from qt import QSocketNotifier, QObject, SIGNAL, QTimer, QApplication
+import sys
 
 # Twisted Imports
 from twisted.python import log, threadable
@@ -68,12 +69,12 @@
         try:
             why = w.doRead()
         except:
-            why = main.CONNECTION_LOST
+            why = sys.exc_value
             log.msg('Error in %s.doRead()' % w)
             log.deferr()
         if why:
             try:
-                w.connectionLost()
+                w.connectionLost(why)
             except:
                 log.deferr()
             self.reactor.removeReader(w)
@@ -87,12 +88,12 @@
         try:
             why = w.doWrite()
         except:
-            why = main.CONNECTION_LOST
+            why = sys.exc_value
             log.msg('Error in %s.doWrite()' % w)
             log.deferr()
         if why:
             try:
-                w.connectionLost()
+                w.connectionLost(why)
             except:
                 log.deferr()
             self.reactor.removeReader(w)
Index: twisted/internet/tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.84
diff -u -u -r1.84 tcp.py
--- twisted/internet/tcp.py	30 Jul 2002 21:16:01 -0000	1.84
+++ twisted/internet/tcp.py	3 Aug 2002 08:40:47 -0000
@@ -127,10 +127,10 @@
         except socket.error:
             pass
     
-    def connectionLost(self):
+    def connectionLost(self, reason):
         """See abstract.FileDescriptor.connectionLost().
         """
-        abstract.FileDescriptor.connectionLost(self)
+        abstract.FileDescriptor.connectionLost(self, reason)
         self._closeSocket()
         protocol = self.protocol
         del self.protocol
@@ -241,12 +241,12 @@
         self.protocol.makeConnection(self)
         self.logstr = self.protocol.__class__.__name__+",client"
     
-    def connectionLost(self):
+    def connectionLost(self, reason):
         if not self.connected:
             self.failIfNotConnected(error.ConnectError())
         else:
-            Connection.connectionLost(self)
-            self.connector.connectionLost()
+            Connection.connectionLost(self, reason)
+            self.connector.connectionLost(reason)
 
     def getHost(self):
         """Returns a tuple of ('INET', hostname, port).
@@ -498,15 +498,16 @@
         self.disconnecting = 1
         self.stopReading()
         if self.connected:
-            self.reactor.callLater(0, self.connectionLost)
+            self.reactor.callLater(0, self.connectionLost,
+                                   main.CONNECTION_DONE)
 
     stopListening = loseConnection
 
-    def connectionLost(self):
+    def connectionLost(self, reason):
         """Cleans up my socket.
         """
         log.msg('(Port %s Closed)' % self.port)
-        abstract.FileDescriptor.connectionLost(self)
+        abstract.FileDescriptor.connectionLost(self, reason)
         self.connected = 0
         self.socket.close()
         if self.unixsocket:
Index: twisted/protocols/loopback.py
===================================================================
RCS file: /cvs/Twisted/twisted/protocols/loopback.py,v
retrieving revision 1.11
diff -u -u -r1.11 loopback.py
--- twisted/protocols/loopback.py	29 Jul 2002 17:42:36 -0000	1.11
+++ twisted/protocols/loopback.py	3 Aug 2002 08:40:47 -0000
@@ -89,7 +89,7 @@
     def buildProtocol(self, addr):
         return self.protocol
 
-    def connectionLost(self, connector):
+    def connectionLost(self, connector, reason):
         self.disconnected = 1
 
 

From tv at twistedmatrix.com  Sat Aug  3 03:05:26 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 3 Aug 2002 12:05:26 +0300
Subject: [Twisted-Python] Dynamic web application using twisted.web.resource
In-Reply-To: <200208021742.22381.arashi1@pd.jaring.my>
References: <ACFC8A92-A3F0-11D6-8A4F-003065B25CAA@twistedmatrix.com> <200208021742.22381.arashi1@pd.jaring.my>
Message-ID: <20020803090526.GB8370@ki.yok.utu.fi>

On Fri, Aug 02, 2002 at 05:42:22PM +0800, Mukhsein Johari wrote:

> understand how things all work together. Specifically, I'm
> interested to know how to build a custom webserver using twisted
> that does not serve any files at all. And does not publish objects
> like zope. The build your own server with twisted doc is not enough
> somehow. It'd be nice if a tutorial used http as an example.  How do
> you use all those classes and modules? (twisted.web.server,
> twisted.internet.reactor)? The example Donovan gave (for my earlier

	Well, one real-world example, totaling ~1600 lines
	of webby stuff, is ldaptor. There's an app in there
	called ldaptor-webui, that acts as an adaptor between
	WWW and LDAP. It uses twisted.web.widgets. You'll need
	an LDAP server to play -- apt-get install slapd.

	The latest release is at 
	http://twistedmatrix.com/users/tv/ldaptor/

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From tv at twistedmatrix.com  Sun Aug  4 10:23:15 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 4 Aug 2002 19:23:15 +0300
Subject: [Twisted-Python] debian/control bug: only python-twisted depends on python-gtk
Message-ID: <20020804162315.GA5093@ki.yok.utu.fi>

	I think there's a bug in debian/control:
	currently, only python-twisted depends on python-gtk.
	But python-twisted is only a dummy package, and it's
	presence is not guaranteed in anyway (e.g. an app
	that needs python2.2 will depend on python2.2-twisted).

	Shouldn't python-gtk be split into python2.1-gtk,
	python2.2-gtk, and pythonX.Y-twisted depend on
	pythonX.Y-gtk?

	And while python-gtk is not split, python2.1-twisted
	should depend on python-gtk (>= 2.1), python-gtk (<< 2.2),
	and python2.2-twisted effectively has no gtk stuff.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From abo at minkirri.apana.org.au  Sun Aug  4 16:18:12 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Mon, 5 Aug 2002 08:18:12 +1000
Subject: [Twisted-Python] spread.sturdy reconnect delay
In-Reply-To: <20020803005533.GA32084@soniq.net>
References: <20020803005533.GA32084@soniq.net>
Message-ID: <20020804221811.GB31059@minkirri.apana.org.au>

On Sat, Aug 03, 2002 at 02:55:33AM +0200, Paul Boehm wrote:
> currently, when spread.sturdy is unable to (re)connect (e.g. because the
> connection was refused/server not running), it retries at full
> speed.. without any delay.. 
> 
> implementing some kind of rate limiting is trivial, but i'm not sure about
> the right approach. the issue is current for me, as i'm using sturdy in
> my application and wouldn't want it to flood the network too much.
> 
> i've come up with the following approaches:
>   *) try n times, then wait i seconds, rinse, repeat
>   *) try, sleep i, try, sleep i, ...
>   *) try, sleep i++, try, sleep i++, ..

What about exponential backoff...

    *) try, sleep i, i=i*2, repeat

the i can grow very large very quickly. This approaches the heuristic of "it
has been down for total of x seconds and it's still not up, so I'll wait x
seconds more before trying again". ie assume the last failed attempt was in
the middle of the total down time.  

A more explicit version of this with a tuneable factor would be;
   total=1
   try, i=f*total, sleep i, total+=i, repeat
   
or, taking into account the time taken trying;
   start=time()
   try, i=f*(time()-start), sleep i, repeat

where 0<f (usually f<1), and indicates you should wait f fraction of the
total time already waited. ie setting f=0.1 indicates you should wait 10% of
the total time already waited.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From exarkun at meson.dyndns.org  Sun Aug  4 17:49:05 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 4 Aug 2002 19:49:05 -0400
Subject: [Twisted-Python] spread.sturdy reconnect delay
In-Reply-To: <20020804221811.GB31059@minkirri.apana.org.au>
References: <20020803005533.GA32084@soniq.net> <20020804221811.GB31059@minkirri.apana.org.au>
Message-ID: <20020804234905.GA12016@meson.dyndns.org>

On Mon, Aug 05, 2002 at 08:18:12AM +1000, Donovan Baarda wrote:
> On Sat, Aug 03, 2002 at 02:55:33AM +0200, Paul Boehm wrote:
> > [snip]
> [snip]
> 
> What about exponential backoff...
> 
>     *) try, sleep i, i=i*2, repeat
> 

  FWIW, this is essentially the approach I used in my mud client ;P  It
works fairly well.  The one important difference is there's a cap on the
wait time (I use 2^17 seconds, or ~36 minutes).  I think this gives a good
balance between getting reconnected quickly and not flooding the destination
with connection attempts.  Of course this pattern is pretty easily
generalizable -- a factory with two parameters, the growth factor and the
cap.  Might it be a good idea to include a few of the simpler approaches
somewhere?  The code for most of these probably wouldn't be more than 5
lines, but having them all collected, pre-written, and of course bug-free
would be pretty handy IMHO.  Actually, now I'm thinking of some kind of
policy objects instead of Factory subclasses - something that can be shared
between factories or swapped around as desired without rebuilding your
factories.

 Jp

-- 
"Pascal is Pascal is Pascal is dog meat."
                -- M. Devine and P. Larson, Computer Science 340
--
 7:38pm up 75 days, 20:26, 6 users, load average: 0.14, 0.09, 0.03
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020804/8a0044ba/attachment.sig>

From info at cleosan.com  Mon Aug  5 03:29:00 2002
From: info at cleosan.com (Fredrik)
Date: Mon, 5 Aug 2002 11:29:00 +0200
Subject: [Twisted-Python] pb and adabpi witn interaction...
In-Reply-To: <3D4A929B.C165D921@gsfc.nasa.gov>
References: <3D46ACF1.75845321@gsfc.nasa.gov> <3D4A929B.C165D921@gsfc.nasa.gov>
Message-ID: <20020805092900.GA5239@laptop.cleosan.com>

Problem with returning the value to the pb-client using interaction...
the code will print out the "Nextid is (number)" on the server but it
wont return the value to the client.

/Fredrik

from twisted.enterprise import adbapi 
from twisted.spread import pb
from twisted.internet import app

def getNextId(conn, tableName): 
    sql = """SELECT NextId FROM DbSequence where SeqName = '%s' """%(tableName)
    print sql
    conn.execute(sql)
    return conn.fetchall()
 
class DefinedError(pb.Error):
    pass

class SimplePerspective(pb.Perspective):
    db = adbapi.ConnectionPool("MySQLdb", db='dbname', user="root") 

    def perspective_echo(self, tableName):
        print 'echoing',tableName
        return self.db.interaction(getNextId,self.gotNextId,None,tableName)  
        
        # _^_
        # this dont return any value to the client 
    

    def perspective_error(self):
        raise DefinedError("exception!")

    def gotNextId(self,resultlist): 
        nextid = resultlist[0][0]
        print "next id is %d ." % (nextid) 
        return nextid 
    
class SimpleService(pb.Service):
    def getPerspectiveNamed(self, name):
        p = SimplePerspective(name)
        p.setService(self)
        return p

if __name__ == '__main__':
    import pbecho
    appl = app.Application("pbecho")
    pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentity("guest")
    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
    appl.run()
    #appl.save("start")





From steve.waterbury at gsfc.nasa.gov  Sun Aug  4 14:07:55 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Sun, 04 Aug 2002 16:07:55 -0400
Subject: [Twisted-Python] Patch for dbgadgets.py
References: <3D46ACF1.75845321@gsfc.nasa.gov> <3D4A929B.C165D921@gsfc.nasa.gov>
Message-ID: <3D4D899B.CD0C42AF@gsfc.nasa.gov>

Sorry about the duplicate post!  (I thought the first one got lost, 
since I received a couple of posts that had been sent later.)  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From steve.waterbury at gsfc.nasa.gov  Sun Aug  4 20:18:18 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Sun, 04 Aug 2002 22:18:18 -0400
Subject: [Twisted-Python] [patch] mktap web --resource
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov> <20020804064627.GC549@frobozz.local>
Message-ID: <3D4DE06A.B0EA5ACE@gsfc.nasa.gov>

Andrew Bennetts wrote:
> 
> On Thu, Aug 01, 2002 at 04:43:50PM -0400, Steve Waterbury wrote:
> > Sune Kirkeby wrote:
> > >
> > > [ Itamar Shtull-Trauring ]
> > > > Any chance for async large object support as well?
> > >
> > > Yup, as time permits I hope to implement it.  For now I guess I will
> > > spend more time experimenting with async DB-access in generel,
> > > though.
> >
> > Any more news on this front?  (Not that I need large objects ... just
> > interested in async db-access in general.  ;^)  BTW, I kind of like some
> > things about psycopg (which is not async, of course), but I couldn't get
> > t.e.adbapi.py to work with it.
> 
> What errors did psycopg with adbapi give?

Er, none actually!  Oops ... *blush* ... sorry for the FUD.  I had originally 
tried it back in May, when I was still in a Twisted larval phase ... so 
now I went back and fixed my little test script and ... it works!  

Gee, that's cool!  I'll try it out along with pypgsql as I'm developing my app 
and report back if I see any interesting differences.  

Thanks for asking what errors it gave ... trying to duplicate my 
experiment was enlightening.  (Well, yes, you might think I would have 
tried that before asking ... *sigh* ... :P

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From twisted at itamarst.org  Tue Aug  6 14:31:46 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 06 Aug 2002 16:31:46 -0400
Subject: [Twisted-Python] ClientFactory.connectionLost(connector, reason)
References: <20020803085840.GA8370@ki.yok.utu.fi>
Message-ID: <3D503232.9010606@itamarst.org>

Tommi Virtanen wrote:

> 	Hi. I've been groaning about how Twisted loses
> 	the actual errors, and does not allow programs
> 	to accurately report them to the user. Here is
> 	some progress on fixing that..

I've checked in an updated version of this patch. Please take a look in CVS!




From glyph at twistedmatrix.com  Tue Aug  6 14:47:10 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 06 Aug 2002 15:47:10 -0500 (CDT)
Subject: [Twisted-Python] Patch for dbgadgets.py
In-Reply-To: <3D4D899B.CD0C42AF@gsfc.nasa.gov>
References: <3D46ACF1.75845321@gsfc.nasa.gov>
	<3D4A929B.C165D921@gsfc.nasa.gov>
	<3D4D899B.CD0C42AF@gsfc.nasa.gov>
Message-ID: <20020806.154710.74750764.glyph@twistedmatrix.com>


On Sun, 04 Aug 2002 16:07:55 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> Sorry about the duplicate post!  (I thought the first one got lost, 
> since I received a couple of posts that had been sent later.)  

This will sometimes happen because I can't check my email for a while.  Anyone
who doesn't have a subscription to the list needs to be manually OK'd for
posting every time they do it.

This technique blocks a LOT of spam to this list :).

If you (the plural "you", not just Steve...) post from a different email
address than you read from, or the Sender: header from your mail is messed up
for firewall reasons, then you can subscribe the address you send and set the
"nomail" mailman option to have it never actually deliver any mail.

If you don't do this, then I'm going to have to keep manually verifying every
post you write, and sometimes duplicates will go through.  Lately the number of
people I've had to do this for has decreased, but I still OK about 6 or 7 valid
messages per week.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020806/89c0fc63/attachment.sig>

From typo at soniq.net  Wed Aug  7 08:28:31 2002
From: typo at soniq.net (Paul Boehm)
Date: Wed, 7 Aug 2002 16:28:31 +0200
Subject: [Twisted-Python] sturdy
Message-ID: <20020807142831.GA23448@soniq.net>

compare Twisted-0.19 behaviour to current cvs behaviour for this:

---
from twisted.spread import sturdy
from twisted.internet import reactor

sturdy.PerspectiveConnector("localhost", 8787, "update", \
"secret", "sam", "update", 1).callRemote("moo")

reactor.run()
---

current cvs doesn't do reconnect attempts... this has to have
broken in the last few days, but i don't know exactly where
or when.

  paul



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Aug  8 23:38:52 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 09 Aug 2002 01:38:52 -0400
Subject: [Twisted-Python] usage appears to be broke in cvs ...
Message-ID: <3D53556C.9E272A16@beeblebrox.gsfc.nasa.gov>

usage fails test_checkFlags and test_checkParameters

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From exarkun at meson.dyndns.org  Fri Aug  9 10:18:26 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Fri, 9 Aug 2002 12:18:26 -0400
Subject: [Twisted-Python] usage appears to be broke in cvs ...
In-Reply-To: <3D53556C.9E272A16@beeblebrox.gsfc.nasa.gov>
References: <3D53556C.9E272A16@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020809161826.GA3212@meson.dyndns.org>

On Fri, Aug 09, 2002 at 01:38:52AM -0400, Steve Waterbury wrote:
> usage fails test_checkFlags and test_checkParameters
> 
> -- Steve.
> 
> Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
> 

  Thanks.  Fix committed.

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
--
 12:17pm up 80 days, 13:05, 6 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020809/b4f94feb/attachment.sig>

From waterbug at beeblebrox.gsfc.nasa.gov  Sat Aug 10 00:23:01 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 10 Aug 2002 02:23:01 -0400
Subject: [Twisted-Python] PB over unix socket ... how?
Message-ID: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov>

twisted gurus ... help!

I want to use PB down in the guts of my application, but only later on 
will I actually be using the pb protocol over the network, so in the 
meantime I'd like to play it safe and have PB talk to other components 
over unix domain sockets.  

I know from wandering around in the internet module that there's lots 
of support for unix sockets and even an IReactorUNIX, but it's late and 
I'm a little dizzy and I figured someone could probably point me in the 
right direction with about 5 lines anyway ... if there's an example, I 
musta missed it ... 8^P  

TIA!
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From sjthorne at ozemail.com.au  Sat Aug 10 06:54:26 2002
From: sjthorne at ozemail.com.au (Stephen Thorne)
Date: Sat, 10 Aug 2002 22:54:26 +1000
Subject: [Twisted-Python] Twisted.web/DOMTemplate
Message-ID: <200208102254.32727.sjthorne@ozemail.com.au>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


Okay, I've been doing some hacking trying to make a small application using 
twisted.web and the .rpy stuff, using DOMTemplate.

Ordinarily I'd chat about something like this on the irc channel, but it was 
dead quiet. Apart from me talking to myself of course.

in the template:
<P view='getBody'>

in the response object
    def factory_getBody(self, request, node):
        print 1
        return node

This (when twistd --nodaemon is used) prints 1 twice (instead of the once 
expected).

This is because of the following section of code:
    def getNodeView(self, request, node):
<snip>
                    maybeWidget = viewMethod(request, node)
                    if isinstance(maybeWidget, domwidgets.Widget):
                        view = maybeWidget
                        viewMethod = view.generateDOM

This is *bad*. viewMethod in this instance is response.factory_getBody, and in 
order to figure out if factory_getBody returns a widget as opposed to an 
instance of xml.dom.minidom.Element it actually calls the function to have a 
look. If it doesn't return a widget it *throws the result away*. viewMethod 
is then returned and used elsewhere, where its actually intended to be used.

Considering that rendering a template node could have program logic in it that 
only should be evaluated once per pageview. It could also carry some 
expensive database transactions.

Anyhow. I can't figure out how to refactor without breaking Widget 
functionality, and the way 'controller' works.

Anyhow. I think I'd call the above a bug report. Maybe with elements of rant 
thrown in.

Stephen Thorne.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9VQ0HRqaMcfqEy/YRAoOPAJ0WJiLcPvftgjna6tgiD1ifAbQkGACdEDWN
7psWJh0/77eiCaEai/xVnaU=
=BNcB
-----END PGP SIGNATURE-----




From exarkun at meson.dyndns.org  Sun Aug 11 10:31:26 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 11 Aug 2002 12:31:26 -0400
Subject: [Twisted-Python] PB over unix socket ... how?
In-Reply-To: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov>
References: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020811163126.GA27673@meson.dyndns.org>

On Sat, Aug 10, 2002 at 02:23:01AM -0400, Steve Waterbury wrote:
> twisted gurus ... help!
> 
> I want to use PB down in the guts of my application, but only later on 
> will I actually be using the pb protocol over the network, so in the 
> meantime I'd like to play it safe and have PB talk to other components 
> over unix domain sockets.  
> 
> I know from wandering around in the internet module that there's lots 
> of support for unix sockets and even an IReactorUNIX, but it's late and 
> I'm a little dizzy and I figured someone could probably point me in the 
> right direction with about 5 lines anyway ... if there's an example, I 
> musta missed it ... 8^P  

Just take the pb examples and change the "listenTCP" call and change the
port argument to a string.  The string will be the name of unix socket in
the filesystem.  Change your connectTCP calls similarly and you should be in
business.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
--
 12:28pm up 82 days, 13:16, 6 users, load average: 0.01, 0.02, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020811/0a528f2c/attachment.sig>

From dp at twistedmatrix.com  Sun Aug 11 03:39:30 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Sun, 11 Aug 2002 02:39:30 -0700
Subject: [Twisted-Python] Twisted.web/DOMTemplate
Message-ID: <58BFC470-AD49-11D6-9F3A-00039376B1AE@twistedmatrix.com>

On Saturday, August 10, 2002, at 05:54 AM, Stephen Thorne wrote:

> Okay, I've been doing some hacking trying to make a small application 
> using
> twisted.web and the .rpy stuff, using DOMTemplate.

Awesome. I really appreciate people using it and providing feedback; 
designing in a vacuum is tough.

[ snip ]

> This (when twistd --nodaemon is used) prints 1 twice (instead of the 
> once
> expected).

[ snip ]

> This is *bad*. viewMethod in this instance is 
> response.factory_getBody, and in
> order to figure out if factory_getBody returns a widget as opposed to 
> an
> instance of xml.dom.minidom.Element it actually calls the function to 
> have a
> look. If it doesn't return a widget it *throws the result away*. 
> viewMethod
> is then returned and used elsewhere, where its actually intended to be 
> used.

Indeed it is bad. The fix was to return the result up if the result was 
*not* a widget, and not bother calling viewMethod again. Since I always 
program DOMTemplate using domwidgets nowadays, I never encountered this.

Patch committed, which you already know since you committed the patch 
;-)

> Considering that rendering a template node could have program logic in 
> it that
> only should be evaluated once per pageview. It could also carry some
> expensive database transactions.

Just fyi,it is possible to do this sort of setup by overriding the 
setUp method. However, there are often cases where doing a monolithic 
"setUp" doesn't make sense, and leaving each node to gather it's own 
data is lazier and therefore more efficient.

Thanks for the bug report.
Donovan




From twisted at itamarst.org  Sun Aug 11 10:55:06 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Aug 2002 12:55:06 -0400
Subject: [Twisted-Python] PB over unix socket ... how?
References: <3D54B145.F3121DA3@beeblebrox.gsfc.nasa.gov> <20020811163126.GA27673@meson.dyndns.org>
Message-ID: <3D5696EA.6010104@itamarst.org>

Jp Calderone wrote:

>>I know from wandering around in the internet module that there's lots 
>>of support for unix sockets and even an IReactorUNIX, but it's late and 
>>I'm a little dizzy and I figured someone could probably point me in the 
>>right direction with about 5 lines anyway ... if there's an example, I 
>>musta missed it ... 8^P  

> Just take the pb examples and change the "listenTCP" call and change the
> port argument to a string.  The string will be the name of unix socket in
> the filesystem.  Change your connectTCP calls similarly and you should be in
> business.

Uh, no.

This only worked because of a bad design decision in tcp.py - it will not 
work in CVS or in any future release. The real solution then is to fix the 
pb connection APIs so they use pluggable transports. Glyph tends to do this 
using URLs, e.g. "pb-tcp://localhost:7777/bar" or "pb-unix://tmp/.socket" or 
"pb-tls://localhost:8888/baz".

There should hopefully be some solution in CVS soon, given that we need this 
functionality to run twistedmatrix.com.




From exarkun at meson.dyndns.org  Sun Aug 11 19:38:43 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Sun, 11 Aug 2002 21:38:43 -0400
Subject: [Twisted-Python] twisted.enterprise
Message-ID: <20020812013843.GA31762@meson.dyndns.org>

  Quick query.  I'm using twisted.enterprise.adbapi.Augmentation in my
latest project and I've just moved the createSchema() call into the mktap
phase.  This seems like a decent place to put it, as the schema need only be
created once for each server application.  However, 'mktap' no longer exits
now.  The .tap is created, but then it looks like a thread is left running
somewhere.  What's the right way to release connections acquired indirectly
from the ConnectionPool?  With the .close() method, or ... ?

 Jp


-- 
        "I quite agree with you," said the Duchess; "and the moral of
that is -- Be what you would seem to be' -- or, if you'd like it put
more simply -- Never imagine yourself not to be otherwise than what it
might appear to others that what you were or might have been was not 
otherwise than what you had been would have appeared to them to be
otherwise.'"       -- Lewis Carrol, "Alice in Wonderland"
--
 9:35pm up 82 days, 22:23, 5 users, load average: 0.03, 0.07, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020811/1fa8b964/attachment.sig>

From sune at mel.interspace.dk  Mon Aug 12 09:47:59 2002
From: sune at mel.interspace.dk (Sune Kirkeby)
Date: Mon, 12 Aug 2002 17:47:59 +0200
Subject: [Twisted-Python] [patch] mktap web --resource
In-Reply-To: <3D499D86.EF982BC7@gsfc.nasa.gov>
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov>
Message-ID: <20020812154759.GA12725@mel.interspace.dk>

[ Steve Waterbury ]
> Sune Kirkeby wrote:
> > 
> > [ Itamar Shtull-Trauring ]
> > > Any chance for async large object support as well?
> > 
> > Yup, as time permits I hope to implement it.  For now I guess I will
> > spend more time experimenting with async DB-access in generel,
> > though.
> 
> Any more news on this front?

None at all.  I've been busy with other things, but if anyone feels
like picking up where I left off (working, incomplete PostgreSQL
protocol implementation;  asyncdb-api that I am not really happy
with), I can post my work.

-- 
Sune Kirkeby | MESKIMEN'S LAW -- There's never time to do it right,
             |                   but always time to do it over.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 975 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020812/9af86590/attachment.sig>

From waterbug at beeblebrox.gsfc.nasa.gov  Mon Aug 12 10:28:05 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 12 Aug 2002 12:28:05 -0400
Subject: [Twisted-Python] [patch] mktap web --resource
References: <20020102174909.A26812@mel.interspace.dk> <3C33414F.6020409@itamarst.org> <20020104200619.A9428@mel.interspace.dk> <3D499D86.EF982BC7@gsfc.nasa.gov> <20020812154759.GA12725@mel.interspace.dk>
Message-ID: <3D57E215.C4C3F6D1@beeblebrox.gsfc.nasa.gov>

Sune Kirkeby wrote:
> 
> [ Steve Waterbury ]
> > Sune Kirkeby wrote:
> > >
> > > [ Itamar Shtull-Trauring ]
> > > > Any chance for async large object support as well?
> > >
> > > Yup, as time permits I hope to implement it.  For now I guess I will
> > > spend more time experimenting with async DB-access in generel,
> > > though.
> >
> > Any more news on this front?
> 
> None at all.  I've been busy with other things, but if anyone feels
> like picking up where I left off (working, incomplete PostgreSQL
> protocol implementation;  asyncdb-api that I am not really happy
> with), I can post my work.

Thanks, but I'm still a larva.  I still need to learn how to use what's 
already there in twisted before I try to extend or contribute anything.  

Cheers,
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From waterbug at beeblebrox.gsfc.nasa.gov  Mon Aug 12 15:10:29 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Mon, 12 Aug 2002 17:10:29 -0400
Subject: [Twisted-Python] Resource perplexity
Message-ID: <3D582445.9F75EBC3@beeblebrox.gsfc.nasa.gov>

Yet another newbie question:
Firewall realities being what they are, I'd like to "multiplex" several 
things over a single web server/port (80 for production, but for now 
anything), so I've been hacking at the xmlrpc example, but no luck so 
far (see attached attempt -- it runs, but gives a "404" for 
/RPC2 or /RPC2/ ...).  

Two questions:
(1) Is this an architecturally sound use of twisted?  (Optimal?)
    (And if not, suggestions?  :^)
(2) If so, what am I doing blockheaded?  

Thanks again for your help and patience!
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html
-------------- next part --------------
"""
Derived from twisted xmlrpc example ... 
Adds a resource_mux resource to dispatch requests based on URL.
-----------------------------------------------------------------
Hook up an object to XML-RPC. An example session:
    
    >>> s = xmlrpclib.Server('http://localhost:7080/RPC2/')
    >>> s.echo("lala")
    ['lala']
    >>> s.echo("lala", 1)
    ['lala', 1]
    >>> s.echo("lala", 4)
    ['lala', 4]
    >>> s.echo("lala", 4, 3.4)
    ['lala', 4, 3.3999999999999999]
    >>> s.echo("lala", 4, [1, 2])
    ['lala', 4, [1, 2]]
"""

from twisted.web import xmlrpc, resource
from twisted.internet import defer
import xmlrpclib


class Echoer(xmlrpc.XMLRPC):
    """An example object to be published.
    
    Has five methods accessable by XML-RPC, 'echo', 'hello', 'defer's.echo('spam'),
    'defer_fail' and 'fail.
    """
    
    def xmlrpc_echo(self, *args):
        """Return all passed args."""
        return args
    
    def xmlrpc_hello(self):
        """Return 'hello, world'."""
        return 'hello, world!'
    
    def xmlrpc_defer(self):
        """Show how xmlrpc methods can return Deferred."""
        return defer.succeed("hello")
    
    def xmlrpc_defer_fail(self):
        """Show how xmlrpc methods can return failed Deferred."""
        return defer.fail(12)

    def xmlrpc_fail(self):
        """Show how we can return a failure code."""
        return xmlrpclib.Fault(7, "Out of cheese.")


def main():
    from twisted.internet.app import Application
    from twisted.web import server
    # Resource multiplexer 'mux'; dispatches requests to Web,
    # XML-RPC, or SOAP handler, depending on base URL.  Standard
    # base URLs: 'WWW', 'RPC2', 'SOAP' (probably should be
    # case-insensitive).
    mux = resource.Resource()
    mux.putChild('/RPC2/', Echoer())
    # similarly for other handlers ...
    app = Application("thingy")
    app.listenTCP(7080, server.Site(mux))
    app.run(0)


if __name__ == '__main__':
    main()

From radix at twistedmatrix.com  Mon Aug 12 15:15:07 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 12 Aug 2002 17:15:07 -0400
Subject: [Twisted-Python] Resource perplexity
In-Reply-To: <3D582445.9F75EBC3@beeblebrox.gsfc.nasa.gov>
References: <3D582445.9F75EBC3@beeblebrox.gsfc.nasa.gov>
Message-ID: <1029186908.8541.1.camel@radii>

On Mon, 2002-08-12 at 17:10, Steve Waterbury wrote:

> def main():
>     from twisted.internet.app import Application
>     from twisted.web import server
>     # Resource multiplexer 'mux'; dispatches requests to Web,
>     # XML-RPC, or SOAP handler, depending on base URL.  Standard
>     # base URLs: 'WWW', 'RPC2', 'SOAP' (probably should be
>     # case-insensitive).
>     mux = resource.Resource()
>     mux.putChild('/RPC2/', Echoer())

Your putChild usage is wrong. `mux.putChild("RPC2", Echoer())' should do
the trick. putChild adds a child relative to the resource you're calling
it on.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From martin at strakt.com  Tue Aug 13 02:35:59 2002
From: martin at strakt.com (Martin =?ISO-8859-1?Q?Sj=F6gren?=)
Date: 13 Aug 2002 10:35:59 +0200
Subject: [Twisted-Python] Patch for tcp.py
Message-ID: <1029227759.29917.21.camel@ratthing-b3cf>

Non-blocking connects seems to be handled wrong. In particular, EALREADY
is handled like EISCONN, when it should be handled like e.g.
EINPROGRESS. This is consistent for both unix and windows.

Here's a patch:


diff -u -r1.86 tcp.py
--- tcp.py      6 Aug 2002 17:12:40 -0000       1.86
+++ tcp.py      13 Aug 2002 08:17:31 -0000
@@ -230,9 +230,9 @@
         try:
             self.socket.connect(self.realAddress)
         except socket.error, se:
-            if se.args[0] in (EISCONN, EALREADY):
+            if se.args[0] == EISCONN:
                 pass
-            elif se.args[0] in (EWOULDBLOCK, EINVAL, EINPROGRESS):
+            elif se.args[0] in (EWOULDBLOCK, EINVAL, EINPROGRESS,
EALREADY):
                 self.startReading()
                 self.startWriting()
                 return



Regards,
Martin

-- 
Martin Sjögren
  martin at strakt.com              ICQ : 41245059
  Phone: +46 (0)31 7710870       Cell: +46 (0)739 169191
  GPG key: http://www.strakt.com/~martin/gpg.html



From arashi1 at pd.jaring.my  Tue Aug 13 12:09:19 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Wed, 14 Aug 2002 02:09:19 +0800
Subject: [Twisted-Python] Concurrent data access with select() safe?
Message-ID: <200208140209.19933.arashi1@pd.jaring.my>

Hello all,

I've managed to get a working custom webserver thanks to Donovan. My next 
question is (perhaps more due to my ignorance of how select works) how do you 
control concurrent access to data?

In a multi-thread system you'd normally use devices like locks on the data / 
resource but what about an event based one like twisted?

Say my server does reads and writes on some file/files. How do I ensure data 
integrity? Do I need some kind of locking mechanism or does using 
SelectReactor make this point moot?

-- 
Regards,
Mukhsein Johari



From mattcampbell at pobox.com  Tue Aug 13 12:28:42 2002
From: mattcampbell at pobox.com (Matt Campbell)
Date: Tue, 13 Aug 2002 13:28:42 -0500
Subject: [Twisted-Python] Concurrent data access with select() safe?
In-Reply-To: <200208140209.19933.arashi1@pd.jaring.my>; from arashi1@pd.jaring.my on Wed, Aug 14, 2002 at 02:09:19AM +0800
References: <200208140209.19933.arashi1@pd.jaring.my>
Message-ID: <20020813132842.A658@mattc.cm.nu>

On Wed, Aug 14, 2002 at 02:09:19AM +0800, Mukhsein Johari wrote:
> I've managed to get a working custom webserver thanks to Donovan. My next 
> question is (perhaps more due to my ignorance of how select works) how do you
> control concurrent access to data?

There is no concurrent access to data in a single-threaded,
event-based system, because the event handlers which are run by
the main loop are never interrupted.  A function always runs to
completion, as if it's always running in a critical section. (This
is also why no blocking system calls should be performed except in
the main loop itself.)
-- 
Matt Campbell
Email and MSN Messenger:  mattcampbell at pobox.com
Web site:  http://www.pobox.com/~mattcampbell/



From arashi1 at pd.jaring.my  Tue Aug 13 13:37:09 2002
From: arashi1 at pd.jaring.my (Mukhsein Johari)
Date: Wed, 14 Aug 2002 03:37:09 +0800
Subject: [Twisted-Python] Concurrent data access with select() safe?
In-Reply-To: <20020813132842.A658@mattc.cm.nu>
References: <200208140209.19933.arashi1@pd.jaring.my> <20020813132842.A658@mattc.cm.nu>
Message-ID: <200208140337.09204.arashi1@pd.jaring.my>

On Wednesday 14 August 2002 02:28, Matt Campbell wrote:
> On Wed, Aug 14, 2002 at 02:09:19AM +0800, Mukhsein Johari wrote:
> > I've managed to get a working custom webserver thanks to Donovan. My next
> > question is (perhaps more due to my ignorance of how select works) how do
> > you control concurrent access to data?
>
> There is no concurrent access to data in a single-threaded,
> event-based system, because the event handlers which are run by
> the main loop are never interrupted.  A function always runs to
> completion, as if it's always running in a critical section. (This
> is also why no blocking system calls should be performed except in
> the main loop itself.)

Sorry for being so dense but, what do you mean by this? Does file access count 
as blocking (my gut says "yes")? How would you handle that? In the twisted 
system in general, from what I understand of it, classes are instantiated to 
handle client requests. If those instances access files or in-memory data 
objects it is conceivable that two instances might be accessing the same data 
/ file, right? But from you you say, this is fine since there is only one 
thread. But what do you mean by blocking calls should only be run in the main 
loop? Is the above (file access) blocking? And is it, as the case stated 
above "within the main loop"?


-- 
Regards,
Mukhsein Johari



From waterbug at beeblebrox.gsfc.nasa.gov  Tue Aug 13 14:45:37 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Tue, 13 Aug 2002 16:45:37 -0400
Subject: [Twisted-Python] Question about pbquote example
Message-ID: <3D596FF1.18A752B8@beeblebrox.gsfc.nasa.gov>

Glyph,

First, thanks for extending the TwistedQuotes example with pbquote.py 
and quotetap2.py -- very helpful!  

Question:  in pbquote.py, the QuoteReader's method is named 
perspective_nextQuote(), which returns the result of the quoter's 
getQuote() ... so I'm guessing you named the perspective method that way 
(instead of perspective_getQuote(), e.g.) to emphasize that the result one 
perspective gets from a service is not necessarily the same as the 
result another perspective would get, since it could be affected by 
the perspective's identity, states, etc. -- independently of the 
fact that, in this particular case, the results are random 
anyway (a somewhat impertinent artifact of the quoter example ;^)?  

-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Wed Aug 14 00:30:02 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 14 Aug 2002 01:30:02 -0500 (CDT)
Subject: [Twisted-Python] Question about pbquote example
In-Reply-To: <3D596FF1.18A752B8@beeblebrox.gsfc.nasa.gov>
References: <3D596FF1.18A752B8@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020814.013002.112620741.glyph@twistedmatrix.com>


Hi, Steve!

On Tue, 13 Aug 2002 16:45:37 -0400, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> First, thanks for extending the TwistedQuotes example with pbquote.py 
> and quotetap2.py -- very helpful!  

I'm glad you thought so.  I found the pb doc I wrote to be very raw -- don't
hesitate to suggest improvements :).

> Question: in pbquote.py, the QuoteReader's method is named
> perspective_nextQuote(), which returns the result of the quoter's getQuote()
> ... so I'm guessing you named the perspective method that way (instead of
> perspective_getQuote(), e.g.) to emphasize that the result one perspective
> gets from a service is not necessarily the same as the result another
> perspective would get, since it could be affected by the perspective's
> identity, states, etc. -- independently of the fact that, in this particular
> case, the results are random anyway (a somewhat impertinent artifact of the
> quoter example ;^)?

I'm not sure what the question is here...?  I think you're asking "did you name
the perspective method that way to emphasize...", so: Yes and no :-).  I named
it that way for two reasons; one, to emphasize the fact you noticed, but more
importantly to show the difference between the remote method and the local
method: it may have created confusion to do 'foo.callRemote("getQuote")'
because then the name of the method could either be referring to
perspective_getQuote or getQuote itself.  Maybe I should have called it
"remoteQuote".

Thanks for your feedback.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020814/f686d5ad/attachment.sig>

From tv at twistedmatrix.com  Tue Aug 13 22:43:59 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 14 Aug 2002 07:43:59 +0300
Subject: [Twisted-Python] Concurrent data access with select() safe?
In-Reply-To: <200208140337.09204.arashi1@pd.jaring.my>
References: <200208140209.19933.arashi1@pd.jaring.my> <20020813132842.A658@mattc.cm.nu> <200208140337.09204.arashi1@pd.jaring.my>
Message-ID: <20020814044359.GA23978@ki.yok.utu.fi>

On Wed, Aug 14, 2002 at 03:37:09AM +0800, Mukhsein Johari wrote:
> On Wednesday 14 August 2002 02:28, Matt Campbell wrote:
> > completion, as if it's always running in a critical section. (This
> > is also why no blocking system calls should be performed except in
> > the main loop itself.)
> 
> Sorry for being so dense but, what do you mean by this? Does file access count 
> as blocking (my gut says "yes")? How would you handle that? In the twisted 
> system in general, from what I understand of it, classes are instantiated to 
> handle client requests. If those instances access files or in-memory data 
> objects it is conceivable that two instances might be accessing the same data 
> / file, right? But from you you say, this is fine since there is only one 
> thread. But what do you mean by blocking calls should only be run in the main 
> loop? Is the above (file access) blocking? And is it, as the case stated 
> above "within the main loop"?

	You shouldn't do anything that takes a long time;
	events won't be processed while the single thread
	runs your long operation.

	Matt said "(This is also why no blocking system calls should
	be performed except in the main loop itself.)"; well, most
	system calls "block", but the idea is to not run ones that
	can block indefinitely -- e.g. send(). Those are run
	by the mainloop in a non-blocking mode.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From waterbug at beeblebrox.gsfc.nasa.gov  Fri Aug 16 12:45:34 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 16 Aug 2002 14:45:34 -0400
Subject: [Twisted-Python] Deprecation consternation
Message-ID: <3D5D484E.C9176501@beeblebrox.gsfc.nasa.gov>

I understand that the way the authorizer machinery is assembled into 
twisted seems to be morphing (and not completely propagated into other 
twisted components yet, hence all the deprecation messages when 
running the unit tests), and I was trying to see if I could do things 
properly (the new way) in my code -- but not successfully yet, I guess, 
because when running this (shamelessly purloined and modified from the 
pgquoter.py example):

from twisted.spread import pb
from pdmengine import BasePdmEngine

class PdmClient(pb.Perspective):
    def perspective_getProductsByProject(self):
        return self.service.BasePdmEngine.getProductsByProject(project)

class PdmPBService(pb.Service):
    def __init__(self, engine, serviceName, authorizer, application=None):
        pb.Service.__init__(self, serviceName, authorizer, application)
    perspectiveClass = PdmClient
---

... with mktap I still get:

/home/waterbug/sandbox/TwistedPlugins/TwistedPdm/pdmpb.py:10: DeprecationWarning: You have to pass an authorizer separately from an application now.
  pb.Service.__init__(self, serviceName, authorizer, application)
/usr/local/lib/python2.2/site-packages/twisted/cred/service.py:72: DeprecationWarning: Application.authorizer attribute is deprecated, use Service.authorizer instead
  authorizer = sp.authorizer
/usr/local/lib/python2.2/site-packages/twisted/spread/pb.py:972: DeprecationWarning: Application.authorizer attribute is deprecated, use Service.authorizer instead
  auth = auth.authorizer
Saving pgpdm application to pgpdm.tap...
Saved.
---

I understand the second 2 warnings, which are internal to twisted, but 
I'm puzzled by the first one, which refers to this line:

        pb.Service.__init__(self, serviceName, authorizer, application)
                                               ^^^^^^^^^^
I thought I _was_ passing an authorizer separately!  

Suggestions?  What should the syntax be under the new authorizer regime?

tnx!
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Fri Aug 16 20:05:35 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 16 Aug 2002 21:05:35 -0500 (CDT)
Subject: [Twisted-Python] Deprecation consternation
In-Reply-To: <3D5D484E.C9176501@beeblebrox.gsfc.nasa.gov>
References: <3D5D484E.C9176501@beeblebrox.gsfc.nasa.gov>
Message-ID: <20020816.210535.91440271.glyph@twistedmatrix.com>


On Fri, 16 Aug 2002 14:45:34 -0400, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> I understand that the way the authorizer machinery is assembled into 
> twisted seems to be morphing (and not completely propagated into other 
> twisted components yet, hence all the deprecation messages when 
> running the unit tests), and I was trying to see if I could do things 
> properly (the new way) in my code -- but not successfully yet, I guess, 
> because when running this (shamelessly purloined and modified from the 
> pgquoter.py example):

Morph*ed*, thankfully -- I don't forsee any future changes at this point,
besides eventually cleaning up these internal deprecation warnings and
eventually removing the backwards compatibility code.  Unless I made a mistake,
of course, which is impossible.

> I understand the second 2 warnings, which are internal to twisted, but 
> I'm puzzled by the first one, which refers to this line:

>         pb.Service.__init__(self, serviceName, authorizer, application)

> I thought I _was_ passing an authorizer separately!

Heh.  Perhaps the warning should be a bit clearer:

    def __init__(self, serviceName, serviceParent=None, authorizer=None, application=None):

> Suggestions?  What should the syntax be under the new authorizer regime?

You're just passing the authorizer and application in the reverse order :-).
Other than that you're OK with the "new regime".  You should also see one of
the other warnings go away.

It looks like your "application" is None in this example, though, just at a
glance through the twisted.cred.service code that's spitting out this warning.


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020816/28787fea/attachment.sig>

From missive at hotmail.com  Sat Aug 17 12:39:32 2002
From: missive at hotmail.com (Lee Harr)
Date: Sat, 17 Aug 2002 18:39:32 +0000
Subject: [Twisted-Python] twisted/protocols/http.py  stringToDatetime
Message-ID: <F258nW0kKIBXEHt3V5g000009a2@hotmail.com>

Hi;

I am new to the list, and to Twisted.

I was playing with the twisted webserver and found a bug that
seems to come up when accessing web pages using an old version
of netscape.

I am using:

Netscape Navigator 4.08
FreeBSD 4.5-RELEASE
Twisted 0.19 (from FreeBSD ports)

The error would occur when trying to reload a page which had
been changed, and seems to be caused by the way the date is
being sent from the browser to the server.

I am able to work around the problem, by just using a pre-set
date if there is a problem parsing that date,
as this patch shows:


*** http.py.1   Sat Aug 17 12:44:45 2002
--- http.py     Sat Aug 17 12:45:39 2002
***************
*** 204,214 ****

  def stringToDatetime(dateString):
      """Convert an HTTP date string to seconds since epoch."""
!     parts = string.split(dateString, ' ')
!     day = int(parts[1])
!     month = int(monthname.index(parts[2]))
!     year = int(parts[3])
!     hour, min, sec = map(int, string.split(parts[4], ':'))
      return int(timegm(year, month, day, hour, min, sec))

  def toChunk(data):
--- 204,217 ----

  def stringToDatetime(dateString):
      """Convert an HTTP date string to seconds since epoch."""
!     try:
!         parts = string.split(dateString, ' ')
!         day = int(parts[1])
!         month = int(monthname.index(parts[2]))
!         year = int(parts[3])
!         hour, min, sec = map(int, string.split(parts[4], ':'))
!     except:
!         day, month, year, hour, min, sec = 1, 1, 1970, 1, 1, 1
      return int(timegm(year, month, day, hour, min, sec))

  def toChunk(data):




Lee Harr
missive at hotmail.com





_________________________________________________________________
Send and receive Hotmail on your mobile device: http://mobile.msn.com




From radix at twistedmatrix.com  Sun Aug 18 19:32:33 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 18 Aug 2002 21:32:33 -0400
Subject: [Twisted-Python] ANN: Twisted 0.99.0
Message-ID: <1029720755.1151.20.camel@radii>

Twisted is an event-based framework for internet applications, written
in Python and licensed under the LGPL. For more information, visit:

       http://www.twistedmatrix.com

Join the mailing list at:

       http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

Our IRC channel is #twisted on irc.openprojects.net.


What's New in 0.99.0
====================

- Paul Shwartz contributed Twisted Conch, an SSHv2 implementation.

- Twisted Zoot, an implementation of Gnutella for Twisted, was written
  by Bryce "zooko" Wilcox-O'Hearn.

- Rewritten connection APIs to make writing clients with Twisted easier.

- A "Pager" for Twisted Spread allowing one to easily stream large 
  amounts of data with Perspective Broker.

- A new FreeBSD Kqueue reactor (mainloop implementation) contributed by
  Matt Campbell.

- Refactored Authorizers and Application so twisted.internet has no
  dependance on twisted.cred.

- Many API cleanups, tons of bugfixes, and more documentation as usual.

What is Twisted?
================

Twisted is an event-based framework for internet applications.  It
includes a web server, a telnet server, a chat server, a news server, a
generic client and server for remote object access, and APIs for
creating new protocols and services. Twisted supports integration of the
Tk, GTK+, Qt or wxPython event loop with its main event loop. The Win32
event loop is also supported, as is basic support for running servers on
top of Jython. Twisted supports TCP, SSL, UDP, Unix sockets and 
subprocesses out of the box.

Twisted currently supports the following protocols, all implemented in
pure python, most of them as both servers and clients:


    - FTP
    - HTTP
    - NNTP
    - SOCKSv4 (server only)
    - SMTP
    - IRC
    - telnet
    - POP3
    - AOL's instant messaging TOC
    - OSCAR, used by AOL-IM as well as ICQ (client only)
    - DNS
    - MouseMan
    - finger
    - Echo, discard, chargen and friends
    - Twisted Perspective Broker

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/




From zooko at zooko.com  Mon Aug 19 16:31:50 2002
From: zooko at zooko.com (Zooko)
Date: Mon, 19 Aug 2002 19:31:50 -0300
Subject: [Twisted-Python] Event I/O for Java
Message-ID: <E17gv3u-00011y-00@localhost>

Itamar suggested that I mail this list announcing EIO -- an Event-based 
Input/Output package for Java.

http://zooko.com/eio

The design of the EIO package should look familiar to Twisted hackers -- it 
uses the handy concepts of callbacks, non-blocking IO, and a task scheduler.

If someone wanted to write a reactor for the Twisted Java code, EIO might be a 
good place to start.  One limitation is that it currently requires Java >= 1.4.

Regards,

Zooko




From moshez at twistedmatrix.com  Tue Aug 20 00:23:55 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Tue, 20 Aug 2002 01:23:55 -0500
Subject: [Twisted-Python] fdport
Message-ID: <E17h2Ql-0008QH-00@pyramid.twistedmatrix.com>

import socket
from twisted.internet import tcp, abstract
from twisted.python import log

class FDPort(tcp.Port):

    port = "dummy"

    def __init__(self, fd, factory, backlog=None, reactor=None):
        """Initialize with a numeric port to listen on.
        """
        abstract.FileDescriptor.__init__(self, reactor=reactor)
        self.fd = fd
        self.factory = factory
        if backlog:
	    self.backlog = backlog

    def __getstate__(self):
        """(internal) get my state for persistence
        """
        dct = copy.copy(self.__dict__)
        try: del dct['socket']
        except: pass
        return dct

    def startListening(self):
        """Create and bind my socket, and begin listening on it.

        This is called on unserialization, and must be called after creating a
        server to begin listening on the specified port.
        """
        log.msg("%s startings"% self.factory.__class__)
        self.factory.doStart()
        skt = socket.fromfd(self.fd, socket.AF_INET,socket.SOCK_STREAM)
        skt.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
        skt.setblocking(0)
        skt.listen(self.backlog)
        self.connected = 1
        self.socket = skt
        self.numberAccepts = 100
        self.fileno = skt.fileno
        self.startReading()



From twisted at itamarst.org  Tue Aug 20 14:40:15 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 20 Aug 2002 16:40:15 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
Message-ID: <3D62A92F.2070007@itamarst.org>

Hi all,

We're trying to get 1.0 out the door. How can you help?

1. Write docs, tests, examples. Help get rid of remaining deprecation 
warnings in tests.

2. Have you submitted a patch for twisted.internet that hasn't made it in? 
Email it to me directly. And pester Glyph and Allen about finishing up the 
bug tracking system.

3. Help with the public relations - have you used Twisted in your company? 
If so we'd love to get quotes from you about what you did and how great it 
is. You know who you are :)

Thanks!




From bob at redivi.com  Tue Aug 20 15:36:51 2002
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 20 Aug 2002 17:36:51 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D62A92F.2070007@itamarst.org>
Message-ID: <F0635986-B484-11D6-9128-0003938210D6@redivi.com>

At Masters of Branding we use Twisted as the networking core for all of 
our client and server RFID software.  It was by far the easiest 
framework to develop with, debug under, and extend for our purposes to 
support protocols such as SOAP, HTTP, and Macromedia Flash-compatible 
XML Sockets.  The API and event model are both very well thought out and 
has accommodated all of our networking needs from database-heavy server 
software on Linux to (py)OpenGL visualization applications on win32.  
The ease and power of Python and Twisted really showed through when we 
took one of our applications developed in and for Linux and ported it to 
run as a Windows NT service in less than day.  New users to the 
framework will not only be impressed by the power of the software, but 
also that the developer/user community responsible for it are incredibly 
helpful and often provide much better support in minutes or hours than 
you'll see from commercial shops given days or weeks.

Bob Ippolito, CTO, Masters of Branding Inc.

On Tuesday, August 20, 2002, at 04:40 PM, Itamar Shtull-Trauring wrote:

> Hi all,
>
> We're trying to get 1.0 out the door. How can you help?
>
> 1. Write docs, tests, examples. Help get rid of remaining deprecation 
> warnings in tests.
>
> 2. Have you submitted a patch for twisted.internet that hasn't made it 
> in? Email it to me directly. And pester Glyph and Allen about finishing 
> up the bug tracking system.
>
> 3. Help with the public relations - have you used Twisted in your 
> company? If so we'd love to get quotes from you about what you did and 
> how great it is. You know who you are :)
>
> Thanks!
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Tue Aug 20 21:24:15 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Aug 2002 22:24:15 -0500 (CDT)
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <F0635986-B484-11D6-9128-0003938210D6@redivi.com>
References: <3D62A92F.2070007@itamarst.org>
	<F0635986-B484-11D6-9128-0003938210D6@redivi.com>
Message-ID: <20020820.222415.78703693.glyph@twistedmatrix.com>

On Tue, 20 Aug 2002 17:36:51 -0400, Bob Ippolito <bob at redivi.com> wrote:
> At Masters of Branding we use Twisted as the networking core for all of 
> our client and server RFID software.

Thanks a lot, Bob!

It's great to hear that you're enjoying Twisted.  Keep these quotes coming,
everybody -- world domination is only a release (and some bugtracking code from
me and allen...) away! :-)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020820/e1b7f015/attachment.sig>

From phed at twistedmatrix.com  Tue Aug 20 03:30:24 2002
From: phed at twistedmatrix.com (Benjamin Bruheim)
Date: Tue, 20 Aug 2002 11:30:24 +0200
Subject: [Twisted-Python] t.e.rows and serial
Message-ID: <3D620C30.5080604@twistedmatrix.com>

Hello,

I've started to examine t.e.rows to see if it fits me. But at the 
moments it's just an ugly collection of tests. But still I think my 
problems are actual:
Its currently based on the rows-examples that come with twisted. There 
is a single problem I have. If I try to use the type serial, so that the 
id for the stuff I put into the db is autoincremented, I get the 
DBError, "Type serial no known". All examples I've encountered elsewhere 
increments the id manually, but I do not gain anything on doing that.
Are there any generic methods for solving this, or are there any helpers 
out there?
Second, what's this "catch all exceptions"-thing I've encountered? I 
must print out the exceptions manually, even though I thought these were 
thrown into the deferredexceptionchain/as a Failure. Any ideas?

Thanks,
Benjamin Bruheim




From md9ms at mdstud.chalmers.se  Wed Aug 21 04:16:53 2002
From: md9ms at mdstud.chalmers.se (Martin =?ISO-8859-1?Q?Sj=F6gren?=)
Date: 21 Aug 2002 12:16:53 +0200
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D62A92F.2070007@itamarst.org>
References: <3D62A92F.2070007@itamarst.org>
Message-ID: <1029925013.582.24.camel@winterfell>

tis 2002-08-20 klockan 22.40 skrev Itamar Shtull-Trauring:
> 3. Help with the public relations - have you used Twisted in your company? 
> If so we'd love to get quotes from you about what you did and how great it 
> is. You know who you are :)

"Having worked with Twisted for a while, I have come to appreciate the
clean API and the distinction between transport layer and application
protocol. Being able to switch between SSL and plain TCP by changing a
single line is very useful. The huge protocol library in Twisted means I
can integrate pretty much anything in my applications in a
platform-independent way."


Martin Sjögren
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Detta är en digitalt signerad	meddelandedel
URL: </pipermail/twisted-python/attachments/20020821/686720db/attachment.sig>

From steve.waterbury at gsfc.nasa.gov  Wed Aug 21 09:23:28 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 21 Aug 2002 11:23:28 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
References: <3D62A92F.2070007@itamarst.org>
Message-ID: <3D63B070.6336BE62@gsfc.nasa.gov>

Itamar Shtull-Trauring wrote:
> 
> Hi all,
> 
> We're trying to get 1.0 out the door. How can you help?
> (...)
> 3. Help with the public relations - have you used Twisted in your company?
> If so we'd love to get quotes from you about what you did and how great it
> is. You know who you are :)

"My team is developing a modular application to integrate CAD/CAE/CAM 
tools and data and to enable collaboration among distributed teams of 
engineers working on NASA projects.  We have selected Twisted as our 
framework because of its pluggable, asynchronous protocols, support 
for multiple interfaces and protocols per service, integration with 
PostgreSQL, and just generally excellent layered architecture."  

Cheers,
-- Steve.

Stephen C. Waterbury  http://misspiggy.gsfc.nasa.gov/people/waterbug.html



From glyph at twistedmatrix.com  Wed Aug 21 10:25:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 21 Aug 2002 11:25:06 -0500 (CDT)
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D63B070.6336BE62@gsfc.nasa.gov>
References: <3D62A92F.2070007@itamarst.org>
	<3D63B070.6336BE62@gsfc.nasa.gov>
Message-ID: <20020821.112506.93018226.glyph@twistedmatrix.com>

On Wed, 21 Aug 2002 11:23:28 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> My team is developing a modular application to integrate CAD/CAE/CAM 
> tools and data and to enable collaboration among distributed teams of 
> engineers working on NASA projects.

Thanks for the endorsement, Steve :-).

By the way, it would be lots better if those of you sending endorsements could
actually have a URL on an externally viewable site so that tm.com could point
to some external points of reference for why using Twisted is good.  (If not,
just having these sorts of mailing list posts is still really cool.  Keep 'em
coming ^_^)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020821/765ee11f/attachment.sig>

From bob at redivi.com  Wed Aug 21 11:16:05 2002
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 21 Aug 2002 13:16:05 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <20020821.112506.93018226.glyph@twistedmatrix.com>
References: <3D62A92F.2070007@itamarst.org> <3D63B070.6336BE62@gsfc.nasa.gov> <20020821.112506.93018226.glyph@twistedmatrix.com>
Message-ID: <20020821131604.A14150@redivi.com>

On Wed, Aug 21, 2002 at 11:25:06AM -0500, Glyph Lefkowitz wrote:
> On Wed, 21 Aug 2002 11:23:28 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> > My team is developing a modular application to integrate CAD/CAE/CAM 
> > tools and data and to enable collaboration among distributed teams of 
> > engineers working on NASA projects.
> 
> Thanks for the endorsement, Steve :-).
> 
> By the way, it would be lots better if those of you sending endorsements could
> actually have a URL on an externally viewable site so that tm.com could point
> to some external points of reference for why using Twisted is good.  (If not,
> just having these sorts of mailing list posts is still really cool.  Keep 'em
> coming ^_^)

www.mastersofbranding.com for us, but the site won't be of a whole lot of interest to someone who would actually be using twisted.

-bob



From steve.waterbury at gsfc.nasa.gov  Wed Aug 21 11:34:57 2002
From: steve.waterbury at gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 21 Aug 2002 13:34:57 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
References: <3D62A92F.2070007@itamarst.org>
		<3D63B070.6336BE62@gsfc.nasa.gov> <20020821.112506.93018226.glyph@twistedmatrix.com>
Message-ID: <3D63CF41.FDC2C436@gsfc.nasa.gov>

Glyph Lefkowitz wrote:
> 
> On Wed, 21 Aug 2002 11:23:28 -0400, Steve Waterbury <steve.waterbury at gsfc.nasa.gov> wrote:
> > My team is developing a modular application to integrate CAD/CAE/CAM
> > tools and data and to enable collaboration among distributed teams of
> > engineers working on NASA projects.
> 
> Thanks for the endorsement, Steve :-).
> 
> By the way, it would be lots better if those of you sending endorsements could
> actually have a URL on an externally viewable site so that tm.com could point
> to some external points of reference for why using Twisted is good.  (If not,
> just having these sorts of mailing list posts is still really cool.  Keep 'em
> coming ^_^)

As soon as we have an actual release of our stuff that uses Twisted, 
I'll send you the URL ... with luck, that should be within a month or 
so. 

BTW, it would be very cool to have a "Twisted Inside" (or something like 
that! ;^) logo like Python and wxPython, etc., have.  The mini version of 
the Twisted snake logo would be the perfect graphic for that, methinks ... 
we would be proud to display it (as we do the Python and wxPython logos) ... 
it would give us a certain air of l33tness ... :^) 

-- Steve.



From zbir at urbanape.com  Thu Aug 22 05:00:45 2002
From: zbir at urbanape.com (Zachery Bir)
Date: Thu, 22 Aug 2002 07:00:45 -0400
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <3D63CF41.FDC2C436@gsfc.nasa.gov>
Message-ID: <68AD9DB6-B5BE-11D6-BEC5-000393178DEC@urbanape.com>

On Wednesday, August 21, 2002, at 01:34 PM, Steve Waterbury wrote:

> BTW, it would be very cool to have a "Twisted Inside" (or 
> something like
> that! ;^) logo like Python and wxPython, etc., have.  The mini 
> version of
> the Twisted snake logo would be the perfect graphic for that, 
> methinks ...
> we would be proud to display it (as we do the Python and wxPython 
> logos) ...
> it would give us a certain air of l33tness ... :^)

<URL:http://www.urbanape.com/twistedButton.png>

I only spent 5 minutes on it. Just to sort of kickstart someone 
with far more talent. :)

Zac




From prabhakar at chaganti.net  Thu Aug 22 07:57:49 2002
From: prabhakar at chaganti.net (Prabhakar Chaganti)
Date: Thu, 22 Aug 2002 09:57:49 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
Message-ID: <3D64B59D.19626.91C4DE8@localhost>

All:

I have just started playing with twisted and have a few q:

1. What is the difference between web widgets and the DOM templates?
2. The 0.99 release notes indicates that ssh protocol is supported. 
Where can I find it?
3. The documentation says that the twisted.web can serve up rpy, 
html, cgi and php. Is there a PHP interpreter in twisted.


thanks 
prabhakar




From spam at polynode.com  Thu Aug 22 08:30:07 2002
From: spam at polynode.com (Alex Levy)
Date: Thu, 22 Aug 2002 10:30:07 -0400
Subject: [Twisted-Python] Bug adding SSL web server through coil
Message-ID: <1030026607.1725.10.camel@treefrog>

Hi, all --

I've hit a bug while playing around with coil.  I made an out-of-the-box
web.tap ('mktap web --path static') and ran coil ('coil web.tap'), went
to http://localhost:9080/config/ports/ssl and tried to add an 'HTML Web
Server' on port 8888.

I got the following error:
exceptions.TypeError: listenSSL() takes at least 4 arguments (3 given)

The traceback is attached.

-- 
Alex Levy
Tel: 617.835.0778
WWW: http://mesozoic.geecs.org

"Power corrupts.  Absolute power is kind of neat."
- John Lehman, Secretary of the Navy, 1981-1987

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20020822/06147402/attachment-0002.html>

From twisted at itamarst.org  Thu Aug 22 09:02:10 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Aug 2002 11:02:10 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
References: <3D64B59D.19626.91C4DE8@localhost>
Message-ID: <3D64FCF2.1020809@itamarst.org>

Prabhakar Chaganti wrote:

> 1. What is the difference between web widgets and the DOM templates?

DOMTemplate lets you do templating on a HTML file. Widgets generate HTML. 
Something like that :)

> 2. The 0.99 release notes indicates that ssh protocol is supported. 
> Where can I find it?

twisted.conch.

> 3. The documentation says that the twisted.web can serve up rpy, 
> html, cgi and php. Is there a PHP interpreter in twisted.

No, you need to have a PHP command-line interpreter installed (e.g. 
/usr/bin/php). In debian apt-get install php4-cgi.




From twisted at itamarst.org  Thu Aug 22 09:05:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Aug 2002 11:05:05 -0400
Subject: [Twisted-Python] Bug adding SSL web server through coil
References: <1030026607.1725.10.camel@treefrog>
Message-ID: <3D64FDA1.2000009@itamarst.org>

Alex Levy wrote:

> I've hit a bug while playing around with coil.  I made an out-of-the-box
> web.tap ('mktap web --path static') and ran coil ('coil web.tap'), went
> to http://localhost:9080/config/ports/ssl and tried to add an 'HTML Web
> Server' on port 8888.
> 
> I got the following error:
> exceptions.TypeError: listenSSL() takes at least 4 arguments (3 given)

Coil is experimental - more a proof of concept than an actual working system 
(though it works pretty decently for adding TCP servers.) The problem with 
it is that adding new things to Coil is too time consuming and tedious, and 
it's not flexible enough. At some point we may have a go at rewriting it 
from scratch based on the lessons we learned.

Meanwhile, you could add support for SSL if you wanted too - it's not too hard.




From twisted at itamarst.org  Thu Aug 22 09:14:54 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 22 Aug 2002 11:14:54 -0400
Subject: [Twisted-Python] [Fwd: Adelux quote]
Message-ID: <3D64FFEE.4030004@itamarst.org>

Date: Thu, 22 Aug 2002 13:37:00 +0200
Reply-To: lstep (a) adequat.net
Organization: Adelux


==========================================
Adelux develops custom internet applications such as portals,
network security tools, communication-related programs,
and software that leverages other systems.

We discovered Twisted 10 months ago, and now it is a key
element of our development strategy.

We have successfully used Twisted on several
projects, of very different problem domains.

We developped a highly scalable realtime application for
customer support, which serves web-based clients as well as clients
implemented in any of the many protocols supported by
Twisted.

Twisted was also used to develop targeted proxies for various
applications supporting more than 15.000 users. Twisted handles
the charge with no problem.

We intend to continue using Twisted on upcoming projects, especially
since integrated support for databases and new services are being
added very quickly.

We  found Twisted to be powerful, comprehensible,
well documented, and backed by a good helpful community.

We'll use it on our next products for sure!

Luc Stepniewski, Head Engineer <lstep at adequat.net>
Adelux, France
===============================








From bruce at cubik.org  Thu Aug 22 09:59:39 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 22 Aug 2002 09:59:39 -0600
Subject: [Twisted-Python] epydoc and Twisted
Message-ID: <3D650A6B.6060606@cubik.org>

I've done a first pass at building Twisted docs with epydoc.  It can be 
seen here:

     http://day.cubik.org/~bruce/twisted/epydoc/twisted.html

The command line that I'm using to do that is:

python2.1 /usr/lib/python2.1/site-packages/epydoc/cli.py -o doc/epydoc 
-n Twisted -vvvv `find twisted -name \*.py | grep -v test | grep -v gtk 
| grep -v jyac | grep -v java | grep -v qt | grep -v ssl | grep -v win32 
| grep -v wxsup | grep -v kqre | grep -v pywid | grep -v gnome | grep -v 
native | grep -v mktap | grep -v manhole | grep -v tktree | grep -v 
tkutil | grep -v ssh | grep -v xmlrpc | grep -v /reactor.py | grep -v 
/mail/`

which is quite a mess.

The problem is that since it imports the files, any missing dependencies 
and so on will cause it to bomb. (/mail/ is excluded because it 
triggered an epydoc bug and I couldn't care enough yet to look and fix it.)

There were tons of warnings/errors from epydoc which I've logged and 
I'll start looking at that soon (over the next day or so).

Thoughts on how we should deal with the import problem are welcome.  Is 
that a roadblock in the way of switching from happydoc to epydoc?

  - Bruce




From prabhakar at chaganti.net  Thu Aug 22 10:38:11 2002
From: prabhakar at chaganti.net (Prabhakar Chaganti)
Date: Thu, 22 Aug 2002 12:38:11 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
In-Reply-To: <3D64FCF2.1020809@itamarst.org>
Message-ID: <3D64DB33.21057.9AF2269@localhost>

Are there any examples/code samples for the web widgets?

thanks
prabhakar

> DOMTemplate lets you do templating on a HTML file. Widgets generate HTML. 
> Something like that :)





From waterbug at beeblebrox.gsfc.nasa.gov  Thu Aug 22 10:58:07 2002
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 22 Aug 2002 12:58:07 -0400
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org>
Message-ID: <3D65181F.307E50A3@beeblebrox.gsfc.nasa.gov>

Bruce Mitchener wrote:
> 
> I've done a first pass at building Twisted docs with epydoc.  It can be
> seen here:
> 
>      http://day.cubik.org/~bruce/twisted/epydoc/twisted.html

This is *great*!  Much better than the happydoc, and better than pydoc, 
which I've been using locally.  Any chance you could put a tar or zip of 
this on your website so I don't beat it to death?  :^)

(Glyph:  sorry about the duped messages again -- I forgot to change my 
identity from sending to another list ... I need to change my other 
subscriptions!)

Thanks!
-- Steve.



From bruce at cubik.org  Thu Aug 22 11:32:39 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 22 Aug 2002 11:32:39 -0600
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org> <3D65181F.307E50A3@beeblebrox.gsfc.nasa.gov>
Message-ID: <3D652037.9050707@cubik.org>

Steve Waterbury wrote:
> Bruce Mitchener wrote:
> 
>>I've done a first pass at building Twisted docs with epydoc.  It can be
>>seen here:
>>
>>     http://day.cubik.org/~bruce/twisted/epydoc/twisted.html
> 
> This is *great*!  Much better than the happydoc, and better than pydoc, 
> which I've been using locally.  Any chance you could put a tar or zip of 
> this on your website so I don't beat it to death?  :^)

Well, I'm hoping to do a bunch of fixes tonight and make it even better. 
  For now, feel free to beat on it. It is just a DSL line to my 
apartment and I'm at work. :)

I'll post a tarball tomorrow after I make updates and make it suck less.

  - Bruce




From radix at twistedmatrix.com  Thu Aug 22 12:03:35 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 22 Aug 2002 14:03:35 -0400
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <3D650A6B.6060606@cubik.org>
References: <3D650A6B.6060606@cubik.org>
Message-ID: <1030039417.7568.2.camel@radii>

On Thu, 2002-08-22 at 11:59, Bruce Mitchener wrote:

> Thoughts on how we should deal with the import problem are welcome.  Is 
> that a roadblock in the way of switching from happydoc to epydoc?

I have no response to your question, but I have some comments to make.

1. converting generate-domdocs to use epydoc seems it'll be really easy
-- it'll just require a slightly modified regexp-builder, afaics. I'll
get to that soon.

2. I hope we're going to start using the @foo mechanisms that epydoc
uses in Twisted -- it'll make our API references much more
information-rich. Does anyone have any problems with that?

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/




From bruce at cubik.org  Thu Aug 22 12:12:49 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 22 Aug 2002 12:12:49 -0600
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org> <1030039417.7568.2.camel@radii>
Message-ID: <3D6529A1.6060007@cubik.org>

Christopher Armstrong wrote:
> On Thu, 2002-08-22 at 11:59, Bruce Mitchener wrote:
>>Thoughts on how we should deal with the import problem are welcome.  Is 
>>that a roadblock in the way of switching from happydoc to epydoc?
> 
> I have no response to your question, but I have some comments to make.
> 
> 1. converting generate-domdocs to use epydoc seems it'll be really easy
> -- it'll just require a slightly modified regexp-builder, afaics. I'll
> get to that soon.

Cool, I didn't really want to do that.

> 2. I hope we're going to start using the @foo mechanisms that epydoc
> uses in Twisted -- it'll make our API references much more
> information-rich. Does anyone have any problems with that?

I hope not.  I'd be very disappointed.  The informatation that they've 
been providing in work docs has been a big help.

I do wish that epydoc generated more internal links .. might be a good 
thing for someone to add.  I've got some other epydoc patches that I'll 
end up contributing I guess.

  - Bruce




From washort at twistedmatrix.com  Thu Aug 22 16:32:39 2002
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 22 Aug 2002 17:32:39 -0500 (CDT)
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <1030039417.7568.2.camel@radii>
References: <3D650A6B.6060606@cubik.org>
	<1030039417.7568.2.camel@radii>
Message-ID: <20020822.173239.783391215.washort@twistedmatrix.com>

>>>>> "Christopher" == Christopher Armstrong <radix at twistedmatrix.com> writes:

    > 2. I hope we're going to start using the @foo mechanisms that
    > epydoc uses in Twisted -- it'll make our API references much
    > more information-rich. Does anyone have any problems with that?

Some of us already have. Look at twisted.issues. :)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020822/5fbba8fd/attachment.sig>

From abo at minkirri.apana.org.au  Thu Aug 22 23:18:53 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Fri, 23 Aug 2002 15:18:53 +1000
Subject: [Twisted-Python] Help us release Twisted 1.0
In-Reply-To: <68AD9DB6-B5BE-11D6-BEC5-000393178DEC@urbanape.com>
References: <3D63CF41.FDC2C436@gsfc.nasa.gov> <68AD9DB6-B5BE-11D6-BEC5-000393178DEC@urbanape.com>
Message-ID: <20020823051853.GA444@minkirri.apana.org.au>

On Thu, Aug 22, 2002 at 07:00:45AM -0400, Zachery Bir wrote:
> On Wednesday, August 21, 2002, at 01:34 PM, Steve Waterbury wrote:
> 
> >BTW, it would be very cool to have a "Twisted Inside" (or 
> >something like
> >that! ;^) logo like Python and wxPython, etc., have.  The mini 
> >version of
> >the Twisted snake logo would be the perfect graphic for that, 
> >methinks ...
> >we would be proud to display it (as we do the Python and wxPython 
> >logos) ...
> >it would give us a certain air of l33tness ... :^)
> 
> <URL:http://www.urbanape.com/twistedButton.png>
> 
> I only spent 5 minutes on it. Just to sort of kickstart someone 
> with far more talent. :)

The first image that came to my mind was a cartoon snake having its neck
wrung, tounge hanging out etc... sorta like the snake in the snake comic in
various Australian Papers.


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From glyph at twistedmatrix.com  Thu Aug 22 23:35:47 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 23 Aug 2002 00:35:47 -0500 (CDT)
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <3D6529A1.6060007@cubik.org>
References: <3D650A6B.6060606@cubik.org>
	<1030039417.7568.2.camel@radii>
	<3D6529A1.6060007@cubik.org>
Message-ID: <20020823.003547.126575962.glyph@twistedmatrix.com>

On Thu, 22 Aug 2002 12:12:49 -0600, Bruce Mitchener <bruce at cubik.org> wrote:
> Christopher Armstrong wrote:
>
> > 2. I hope we're going to start using the @foo mechanisms that epydoc
> > uses in Twisted -- it'll make our API references much more
> > information-rich. Does anyone have any problems with that?
> 
> I hope not.  I'd be very disappointed.  The informatation that they've 
> been providing in work docs has been a big help.

"It's not just a good idea, it's the law."

This should be in the coding standard.  While I wouldn't take a lot of
developer time that might be better spent elsewhere to go through and insert
this meta-information, we really ought to be getting the most out of the
documentation system we use.

We should also write a silly hack to allow any module to import without
ImportErrors.  I think this would fix most of the doc generation issues?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020823/acf02876/attachment.sig>

From rc at ghostbitch.org  Thu Aug 22 12:13:23 2002
From: rc at ghostbitch.org (R. Church)
Date: Thu, 22 Aug 2002 11:13:23 -0700
Subject: [Twisted-Python] epydoc and Twisted
In-Reply-To: <3D6529A1.6060007@cubik.org>
References: <3D650A6B.6060606@cubik.org> <1030039417.7568.2.camel@radii> <3D6529A1.6060007@cubik.org>
Message-ID: <20020822181323.GV18186@ghostbitch.org>

Wouldn't epydoc be 60% to 70% better if it actually linked to
(chromakeyed) source code?

On Thu, Aug 22, 2002 at 12:12:49PM -0600, Bruce Mitchener quipped:
> Christopher Armstrong wrote:
> >On Thu, 2002-08-22 at 11:59, Bruce Mitchener wrote:
> >>Thoughts on how we should deal with the import problem are welcome.  Is 
> >>that a roadblock in the way of switching from happydoc to epydoc?
> >
> >I have no response to your question, but I have some comments to make.
> >
> >1. converting generate-domdocs to use epydoc seems it'll be really easy
> >-- it'll just require a slightly modified regexp-builder, afaics. I'll
> >get to that soon.
> 
> Cool, I didn't really want to do that.
> 
> >2. I hope we're going to start using the @foo mechanisms that epydoc
> >uses in Twisted -- it'll make our API references much more
> >information-rich. Does anyone have any problems with that?
> 
> I hope not.  I'd be very disappointed.  The informatation that they've 
> been providing in work docs has been a big help.
> 
> I do wish that epydoc generated more internal links .. might be a good 
> thing for someone to add.  I've got some other epydoc patches that I'll 
> end up contributing I guess.
> 
>  - Bruce
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dp at twistedmatrix.com  Fri Aug 23 00:26:29 2002
From: dp at twistedmatrix.com (Donovan Preston)
Date: Thu, 22 Aug 2002 23:26:29 -0700
Subject: [Twisted-Python] Newbie Q on 0.99 release
In-Reply-To: <3D64B59D.19626.91C4DE8@localhost>
Message-ID: <423964D0-B661-11D6-941A-00039376B1AE@twistedmatrix.com>

On Thursday, August 22, 2002, at 06:57 AM, Prabhakar Chaganti wrote:

> All:
>
> I have just started playing with twisted and have a few q:
>
> 1. What is the difference between web widgets and the DOM templates?

I'll spend a bit of time answering this since I wrote them :-)

DOMTemplate is a class that parses an XHTML document looking for nodes 
with "view", "controller", "class", or "id" attributes. When it finds 
one, it looks for a "factory_foo" method to handle that node. (e.g. 
when it encounters the node <div id="coolStuff" />, the method 
factory_coolStuff would be called.) This method gets passed the request 
object and the current node object (as a DOM Node object). The return 
value of this method is then used to replace the node that was there 
before.

Here is an example:

from twisted.web.domtemplate import DOMTemplate
from twisted.web import domwidgets

class Foo(DOMTemplate):
	template = '<html><div id="foo" /> <div id="bar" /> <div id="baz" 
/></html>'

	def factory_foo(self, request, node):
		# I have been passed a DOM Node instance, I can mutate it and return 
it.
		# The main DOM Document instance (where the DOM factories are)
		# has been set to self.d
		node.appendChild(self.d.createTextNode("Hello world!"))
		return node

	def factory_bar(self, request, node):
		# Or, if I wish, I may simply return a string. It will be parsed into 
XML and
		# will replace the incoming node.
		return "<b>Hey, how are you doing?</b>"

	def factory_baz(self, request, node):
		# However, I may wish to use a higher level API that involves 
manipulating
		# Python objects instead of HTML. By using widgets, I can construct 
objects
		# to represent common HTML fragments, and never have to write any HTML
		# again! (Ok, so you'll have to write some eventually... but less)
		return domwidgets.Text("Hey, this is a very simple widget that knows 
how to turn itself into DOM text nodes using createTextNode")

So you can see that DOMWidgets builds upon DOMTemplate by allowing you 
to use higher-level APIs in your DOMTemplate.

Donovan




From bruce at cubik.org  Fri Aug 23 05:53:00 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Fri, 23 Aug 2002 05:53:00 -0600
Subject: [Twisted-Python] epydoc and Twisted
References: <3D650A6B.6060606@cubik.org>	<1030039417.7568.2.camel@radii>	<3D6529A1.6060007@cubik.org> <20020823.003547.126575962.glyph@twistedmatrix.com>
Message-ID: <3D66221C.90802@cubik.org>

Glyph Lefkowitz wrote:
> "It's not just a good idea, it's the law."
> 
> This should be in the coding standard.  While I wouldn't take a lot of
> developer time that might be better spent elsewhere to go through and insert
> this meta-information, we really ought to be getting the most out of the
> documentation system we use.

Good good.  I'll make those changes to the standards.

> We should also write a silly hack to allow any module to import without
> ImportErrors.  I think this would fix most of the doc generation issues?

This takes more Python clue than I'v currently been gifted with. :) I'll 
see about scaring up some work out of dash, radix, itamar, or some other 
local smartie.

  - Bruce




From radix at twistedmatrix.com  Fri Aug 23 06:41:36 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Fri, 23 Aug 2002 07:41:36 -0500
Subject: [Twisted-Python] nested_scopes
Message-ID: <20020823124136.GA5176@pyramid.twistedmatrix.com>

There has been some concern about the use of __future__ imports in Twisted.
After a lengthy discussion with moshez, marvin--, and phed, we came to the
conclusion that it'd be best to put an explicit list of allowable
__future__s into the coding standard, nested_scopes being the only one for
now (since that's what we use).

yay/nay, etc.



From radix at twistedmatrix.com  Fri Aug 23 06:44:28 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Fri, 23 Aug 2002 07:44:28 -0500
Subject: [Twisted-Python] 0.99.1 soon
Message-ID: <20020823124427.GB5176@pyramid.twistedmatrix.com>

I'll be releasing 0.99.1 this weekend, so get in your patches people.
Perhaps we can do epydoc for this release.



From prabhakar at chaganti.net  Fri Aug 23 09:39:59 2002
From: prabhakar at chaganti.net (Prabhakar Chaganti)
Date: Fri, 23 Aug 2002 11:39:59 -0400
Subject: [Twisted-Python] Newbie Q on 0.99 release
In-Reply-To: <423964D0-B661-11D6-941A-00039376B1AE@twistedmatrix.com>
References: <3D64B59D.19626.91C4DE8@localhost>
Message-ID: <3D661F0F.2441.824C02@localhost>

Thanks Donovan. Your explanation makes it much clearer !!

prabhakar

> I'll spend a bit of time answering this since I wrote them :-)





From bruce at cubik.org  Fri Aug 23 09:52:44 2002
From: bruce at cubik.org (Bruce Mitchener)
Date: Fri, 23 Aug 2002 09:52:44 -0600
Subject: [Twisted-Python] 0.99.1 soon
References: <20020823124427.GB5176@pyramid.twistedmatrix.com>
Message-ID: <3D665A4C.1030803@cubik.org>

Chris Armstrong wrote:
> I'll be releasing 0.99.1 this weekend, so get in your patches people.
> Perhaps we can do epydoc for this release.

Okay, I'm about half way through the cleanup of the epydoc docstring 
warnings.  I'll finish tonight and commit in one massive single shot.

  - Bruce






From ldanielburr at earthlink.net  Sat Aug 24 10:28:12 2002
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Sat, 24 Aug 2002 09:28:12 -0700
Subject: [Twisted-Python] [No Subject]
Message-ID: <Springmail.0994.1030206492.0.27518300@webmail.pas.earthlink.net>

I've noticed that the current 0.99 release candidate for Windows has no twistd
or twistd.py included.  A brief check of CVS shows that twistd is still there,
although it is going through some alterations.  Anyway, is there any chance
that the next release will contain this?  Kinda hard to follow the docs and
tutorials when twistd isn't there for use.

Otherwise, I really like the revised webmvc docs, and the refactored client
code.  Great work!



From mark at markrichman.com  Sat Aug 24 10:29:17 2002
From: mark at markrichman.com (Mark A. Richman)
Date: Sat, 24 Aug 2002 12:29:17 -0400
Subject: [Twisted-Python] Proposed Website Comp
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>

I whipped up a new look for the site this morning:
 
http://www.markrichman.com/twisted/
 
I did this in about 30 minutes using Macromedia Fireworks MX.
 
Please let me know what you think.
 
Best Regards,
Mark A. Richman
Empire Software, Inc.
http://www.empsoft.com/
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20020824/ccb03e98/attachment.html>

From missive at hotmail.com  Sat Aug 24 10:39:09 2002
From: missive at hotmail.com (Lee Harr)
Date: Sat, 24 Aug 2002 16:39:09 +0000
Subject: [Twisted-Python] gtkLineClient.py
Message-ID: <F270OjvQcOV8AaBv7dg00003a78@hotmail.com>

# gtkLineClient.py
# Free. Please share

from twisted.protocols.basic import LineReceiver

from twisted.internet import gtkreactor
gtkreactor.install()

import gtk

from twisted.internet import reactor

class LoginInfo:
    def __init__(self):
        self.username = 'guest'
        self.host = 'localhost'
        self.port = 8888

        self.quit = 0

class LoginWindow(gtk.GtkWindow):
    def __init__(self, info):
        self.info = info

        w = gtk.GtkWindow(gtk.WINDOW_TOPLEVEL)
        w.connect('destroy', self.quit)

        vb = gtk.GtkVBox()
        w.add(vb)

        b = gtk.GtkButton('QUIT')
        b.signal_connect('clicked', self.quit)
        vb.add(b)

        self.usernameEntry = gtk.GtkEntry()
        self.usernameEntry.set_text(self.info.username)
        self.usernameEntry.signal_connect('activate', self.login)
        vb.add(self.usernameEntry)

        b = gtk.GtkButton('LOGIN')
        b.signal_connect('clicked', self.login)
        vb.add(b)

        w.show_all()

        self.w = w

    def login(self, b):
        print 'LOGGING IN'
        self.info.username = self.usernameEntry.get_text()
        self.w.hide()
        gtk.mainquit()

    def quit(self, b):
        print 'QUITTING'
        self.info.quit = 1
        gtk.mainquit()

class Client(LineReceiver):
    def __init__(self, info):
        self.info = info

        w = gtk.GtkWindow(gtk.WINDOW_TOPLEVEL)
        w.connect('destroy', self.quit)

        vb = gtk.GtkVBox()
        w.add(vb)

        q = gtk.GtkButton('QUIT')
        q.connect('clicked', self.quit)
        vb.add(q)

        c = gtk.GtkButton('CLOSE')
        c.connect('clicked', self.close)
        vb.add(c)

        s = gtk.GtkButton('SEND')
        s.connect('clicked', self.send)
        vb.add(s)

        self.w = w

    def connectionMade(self):
        self.w.show_all()
        print 'CONNECTED'
        self.sendLine('USERNAME_%s' % self.info.username)

    def send(self, b):
        self.sendLine('message')

    def lineReceived(self, line):
        print 'Server said:', line

    def closeConnection(self):
        self.transport.loseConnection()

    def close(self, b):
        print "CLOSING"
        self.sendLine('CLOSE')
        self.w.hide()
        self.closeConnection()
        reactor.stop()

    def quit(self, b):
        self.info.quit = 1
        self.close(b)

    def connectionLost(self):
        print 'Connection lost'
        self.w.hide()
        reactor.stop()

    def connectionFailed(self):
        print 'Connection failed'
        reactor.stop()

def main():
    info = LoginInfo()

    while 1:
        l = LoginWindow(info)
        gtk.mainloop()
        if l.info.quit:
            break

        e = Client(info)
        reactor.clientTCP(info.host, info.port, e)
        reactor.run()
        if info.quit:
            break

if __name__ == '__main__':
    main()


_________________________________________________________________
Chat with friends online, try MSN Messenger: http://messenger.msn.com




From bob at redivi.com  Sat Aug 24 10:49:21 2002
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 24 Aug 2002 12:49:21 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
Message-ID: <7055D4E1-B781-11D6-9192-0003938210D6@redivi.com>

I usually think that software projects should give a brief overview of 
what they are on the front page, and sometimes even some news..  the 
content-area of the mockup is pretty worthless given that all the links 
are available in the navigation bar, and there's no real need to explain 
what the words in the navigation mean.

On Saturday, August 24, 2002, at 12:29 PM, Mark A. Richman wrote:

> I whipped up a new look for the site this morning:
>
>  
>
> http://www.markrichman.com/twisted/
>
>  
>
> I did this in about 30 minutes using Macromedia Fireworks MX.
>
>  
>
> Please let me know what you think.
>
>  
>
> Best Regards,
>
> Mark A. Richman
>
> Empire Software, Inc.
>
> http://www.empsoft.com/
>
>  
>
>  
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1477 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020824/b69e381b/attachment-0002.bin>

From tv at twistedmatrix.com  Sat Aug 24 13:05:30 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 24 Aug 2002 22:05:30 +0300
Subject: [Twisted-Python] Please help with Deferreds
Message-ID: <20020824190530.GA17359@ki.yok.utu.fi>

	Can anyone explain the behaviour of the
	following?

#!/usr/bin/python
import sys
from twisted.internet import defer, reactor
d=defer.Deferred()
d.callback(0)
d2=defer.Deferred()
d.addCallback(lambda x,d2=d2: d2)

# switch the comment sign on the next two and it'll
# print not 1 but a Deferred. Why?
#reactor.callLater(0, lambda d2=d2: d2.callback(1))
d2.callback(1)

d.addCallback(lambda x:sys.stdout.write(repr(x)+'\n'))
d.addBoth(lambda x:reactor.stop())
reactor.run()


-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From m at moshez.org  Fri Aug 23 06:35:50 2002
From: m at moshez.org (Moshe Zadka)
Date: 23 Aug 2002 12:35:50 -0000
Subject: [Twisted-Python] Python 2.1
Message-ID: <20020823123550.25216.qmail@green.zadka.com>

2.1 has no nested scopes.
Please don't do that:
    def listGroupRequest(self, group):
        sql = """
            SELECT postings.article_index FROM postings,groups
            WHERE postings.group_id = groups.group_id
            AND groups.name = '%s'
        """ % (adbapi.safe(group),)

        return self.runQuery(sql).addCallback(
            lambda results: (group, [res[0] for res in results])
        )



From glyph at twistedmatrix.com  Sat Aug 24 16:13:02 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 24 Aug 2002 17:13:02 -0500 (CDT)
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
Message-ID: <20020824.171302.74758334.glyph@twistedmatrix.com>


On Sat, 24 Aug 2002 12:29:17 -0400, "Mark A. Richman" <mark at markrichman.com> wrote:
> http://www.markrichman.com/twisted/

> Please let me know what you think.

Mark,

Thanks for your contribution.  Before I get into any critique I really want to
stress that we need the aid of Real Designers (using Real Designer tools like
Fireworks and Dreamweaver)... AND our website is in need of some design help in
order to get a flashier, more marketing-licious appearance for the stuff that
executives are going to read.  Also that I'm glad you contributed something and
I hope you're going to keep working on it :).

However, the site you submitted represents almost everything I hate about
"modern" web design.  Aesthetically, it's not too unappealing (I like bright
primary colors, I like grid backgrounds, and I like the sorts of sans-serif
fonts you've chosen for screen reading.)  Technically, the design has all kinds
of problems, though.

* You're using antialiased text images rather than fonts.  If I really want my
  fonts antialiased that badly, I'd use MacOS X, or Windows XP, or configure
  xft to do it in my browser.  You make the site immediately unusable to
  text-mode and sight-impaired browsers by doing this.  Keep in mind that
  Twisted's first major application was for a radio station for the
  sight-impaired.

* You're using a javascript menu to save space in the masthead, but the
  masthead is just as large (or larger, depending on font sizes) than the
  original navigation control.  The javascript menu likely won't work in any
  browser without a bug-for-bug compatibility with IE or Mozilla, rendering the
  menu text unusable in a wide variety of browsers.  Twisted is popular with
  open-source developers who will quite often use alternative browsers in order
  to either test their apps or because they're simply rebellious :)

* You're using tables for all formatting, rather than CSS.  This is a notorious
  error that most experienced web designers seem to shudder at.  I guess this
  is the way that Macromedia's product will do the site by default -- CSS will
  be ignored by older and alternative browsers, but tables will often simply be
  rendered incorrectly by them.

* Your images (thanks to table-based formatting) are split up into ridiculously
  small chunks.  This will make the site unpleasant to version-control because
  every design change will come with 12 new images and 8 old ones deleted.

* There appears to be Javascript in here to popup an ad window.  WTF!?!!?!!?!

* The page is highly unfriendly to indexing.  With no text, lots of
  autogenerated filenames, split images, and no keywords, there's no way Google
  is going to find anything of value here.

I could go on, but I think you're getting the gist here.

In other words, Twisted's whole raison d'etre is *integration*, which relies
upon adherence not only to the letter but the spirit of protocol definitions
and file formats.  Yes, it's possible to get browsers to do some neat tricks
with Javascript (I am actually considering the purchase of a Javascript book
right now) -- but javascript is for *applications*, not menu formatting.  Yes,
it's possible to get human-readble text formatted by constructing giant tables
with one pixel per row.  Nevertheless, this greatly reduces the utility of the
website to anyone who is not using *exactly* the platform that you are using to
view it, and that "platform" is up to and including "the human eye".  Many
non-humans (googlebot, dmoz, various link checkers) will want to read the site,
as well as some people who cannot see, or cannot see well.

So use technologies like CSS and XML and Python and even XSLT or whatever to
make the site as appealing as possible, but keep the presentation separate from
the content of the site.  That content includes navigational elements as well
as text -- that's the whole point of "hypertext", after all.  PageRank would
not work with gopher or ftp :)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020824/1e42ab84/attachment.sig>

From radix at twistedmatrix.com  Sat Aug 24 16:46:41 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 24 Aug 2002 18:46:41 -0400
Subject: [Twisted-Python] Python 2.1
In-Reply-To: <20020823123550.25216.qmail@green.zadka.com>
References: <20020823123550.25216.qmail@green.zadka.com>
Message-ID: <1030229203.2590.7.camel@radii>

On Fri, 2002-08-23 at 08:35, Moshe Zadka wrote:
> 2.1 has no nested scopes.

As we discussed on IRC, Twisted uses nested_scopes from __future__, so
this isn't an issue (well, there should probably be a nested_scopes
import at the top of that module, since the only other place it's
imported is twisted/scripts/twistd.py). The issue is whether or not we
should use nested_scopes, which I'm awaiting a reply to in the other
thread :-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020824/82dea7d8/attachment.sig>

From radix at twistedmatrix.com  Sat Aug 24 17:59:58 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 24 Aug 2002 19:59:58 -0400
Subject: [Twisted-Python] client API issue for Application
Message-ID: <1030233600.2589.16.camel@radii>

I've been talking with nobomb on #twisted about his IRC bot, which he
wants to be able to connect to a list of servers for fail-over (i.e.,
when one server connection fails, try to connect to the nest). We worked
it out so that he'd call app.connectTCP again in his
clientConnectionFailed method of his ClientFactory, but I realized that
the tcpConnectors list in Application *never* gets cleaned out. Should
we have an explicit method to do this, or some kind of automatic
cleaning, or something...?

While browsing through the Application source, I see that the same is
true for the listeners, except for TCP (there's an unlistenTCP, but no
unlistenSSL, frex). There's *also* a dontListenTCP which just raises a
not implemented error. *boggle*
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020824/ba4b4e68/attachment.sig>

From mark at markrichman.com  Sat Aug 24 20:12:27 2002
From: mark at markrichman.com (Mark A. Richman)
Date: Sat, 24 Aug 2002 22:12:27 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <20020824.171302.74758334.glyph@twistedmatrix.com>
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>

This is why I called it a "comp" - I'm not going to waste my time with
"real" HTML, CSS, etc. if you aren't going to like it...which you have
made abundantly clear.

I simply created it as a springboard for discussion, and not as a beta
of any kind.

That was 30 minutes work, not 30 hours.

- Mark

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] On Behalf Of Glyph
Lefkowitz
Sent: Saturday, August 24, 2002 6:13 PM
To: twisted-python at twistedmatrix.com; mark at markrichman.com
Subject: Re: [Twisted-Python] Proposed Website Comp

----Security_Multipart(Sat_Aug_24_17:13:02_2002_364)--
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


On Sat, 24 Aug 2002 12:29:17 -0400, "Mark A. Richman"
<mark at markrichman.com> wrote:
> http://www.markrichman.com/twisted/

> Please let me know what you think.

Mark,

Thanks for your contribution.  Before I get into any critique I really
want to
stress that we need the aid of Real Designers (using Real Designer tools
like
Fireworks and Dreamweaver)... AND our website is in need of some design
help in
order to get a flashier, more marketing-licious appearance for the stuff
that
executives are going to read.  Also that I'm glad you contributed
something and
I hope you're going to keep working on it :).

However, the site you submitted represents almost everything I hate
about
"modern" web design.  Aesthetically, it's not too unappealing (I like
bright
primary colors, I like grid backgrounds, and I like the sorts of
sans-serif
fonts you've chosen for screen reading.)  Technically, the design has
all kinds
of problems, though.

* You're using antialiased text images rather than fonts.  If I really
want my
  fonts antialiased that badly, I'd use MacOS X, or Windows XP, or
configure
  xft to do it in my browser.  You make the site immediately unusable to
  text-mode and sight-impaired browsers by doing this.  Keep in mind
that
  Twisted's first major application was for a radio station for the
  sight-impaired.

* You're using a javascript menu to save space in the masthead, but the
  masthead is just as large (or larger, depending on font sizes) than
the
  original navigation control.  The javascript menu likely won't work in
any
  browser without a bug-for-bug compatibility with IE or Mozilla,
rendering the
  menu text unusable in a wide variety of browsers.  Twisted is popular
with
  open-source developers who will quite often use alternative browsers
in order
  to either test their apps or because they're simply rebellious :)

* You're using tables for all formatting, rather than CSS.  This is a
notorious
  error that most experienced web designers seem to shudder at.  I guess
this
  is the way that Macromedia's product will do the site by default --
CSS will
  be ignored by older and alternative browsers, but tables will often
simply be
  rendered incorrectly by them.

* Your images (thanks to table-based formatting) are split up into
ridiculously
  small chunks.  This will make the site unpleasant to version-control
because
  every design change will come with 12 new images and 8 old ones
deleted.

* There appears to be Javascript in here to popup an ad window.
WTF!?!!?!!?!

* The page is highly unfriendly to indexing.  With no text, lots of
  autogenerated filenames, split images, and no keywords, there's no way
Google
  is going to find anything of value here.

I could go on, but I think you're getting the gist here.

In other words, Twisted's whole raison d'etre is *integration*, which
relies
upon adherence not only to the letter but the spirit of protocol
definitions
and file formats.  Yes, it's possible to get browsers to do some neat
tricks
with Javascript (I am actually considering the purchase of a Javascript
book
right now) -- but javascript is for *applications*, not menu formatting.
Yes,
it's possible to get human-readble text formatted by constructing giant
tables
with one pixel per row.  Nevertheless, this greatly reduces the utility
of the
website to anyone who is not using *exactly* the platform that you are
using to
view it, and that "platform" is up to and including "the human eye".
Many
non-humans (googlebot, dmoz, various link checkers) will want to read
the site,
as well as some people who cannot see, or cannot see well.

So use technologies like CSS and XML and Python and even XSLT or
whatever to
make the site as appealing as possible, but keep the presentation
separate from
the content of the site.  That content includes navigational elements as
well
as text -- that's the whole point of "hypertext", after all.  PageRank
would
not work with gopher or ftp :)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |

----Security_Multipart(Sat_Aug_24_17:13:02_2002_364)--
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQA9aATwvVGR4uSOE2wRAjylAJ92T+rTCBQnQYEPFdynPl3pDc7WXACdFUL7
oArKWaWmFVBCLzMcMmMzQ20=
=I135
-----END PGP SIGNATURE-----

----Security_Multipart(Sat_Aug_24_17:13:02_2002_364)----





From radix at twistedmatrix.com  Sat Aug 24 20:35:17 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 24 Aug 2002 22:35:17 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: 	<!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQ
	AAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
References: 	<!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQ
	AAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
Message-ID: <1030242925.2584.34.camel@radii>

On Sat, 2002-08-24 at 22:12, Mark A. Richman wrote:
> This is why I called it a "comp" - I'm not going to waste my time with
> "real" HTML, CSS, etc. if you aren't going to like it...which you have
> made abundantly clear.

I think you got the wrong idea -- glyph did say that it was visually
pleasing (or something similar). It was only technical things that he
had criticisms for, and I agree with him full-heartedly. I think it's
sexy as well, it just needs to be hacked on to be not so blatantly
platform-dependant.

> I simply created it as a springboard for discussion, and not as a beta
> of any kind.

I think it looks awesome, but I agree with glyph's points. Is there any
chance you'll address some of the points he made? I can't say I'll be
able to help much, but I'd like to (and surely others would be able to
lend a hand here and there).

[snip to glyph...]
> > * You're using tables for all formatting, rather than CSS.  This is a
> > notorious
> > error that most experienced web designers seem to shudder at.  I guess
> > this

I thought this point was funny, considering the existing site uses
tables for formatting as well ;-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020824/6adefd60/attachment.sig>

From mark at markrichman.com  Sat Aug 24 20:40:13 2002
From: mark at markrichman.com (Mark A. Richman)
Date: Sat, 24 Aug 2002 22:40:13 -0400
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <1030242925.2584.34.camel@radii>
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAA7d/4GWEVGESpx5PJh0fpvwEAAAAA@markrichman.com>

I never claimed to be a graphic artist - I'm a developer, not a
designer. But I don't have time to contribute code, so I contributed an
idea.

Glad to hear *someone* liked it. I pulled the page off my site for now.

When I have time, I'll consult with my usability and human factors
colleagues to see if they have any commentary.

I'm curious to know of any popular sites that conform to Glyph's "wish
list" of acceptable web standards.

Regards,
Mark

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com] On Behalf Of Christopher
Armstrong
Sent: Saturday, August 24, 2002 10:35 PM
To: Twisted ML
Subject: RE: [Twisted-Python] Proposed Website Comp

On Sat, 2002-08-24 at 22:12, Mark A. Richman wrote:
> This is why I called it a "comp" - I'm not going to waste my time with
> "real" HTML, CSS, etc. if you aren't going to like it...which you have
> made abundantly clear.

I think you got the wrong idea -- glyph did say that it was visually
pleasing (or something similar). It was only technical things that he
had criticisms for, and I agree with him full-heartedly. I think it's
sexy as well, it just needs to be hacked on to be not so blatantly
platform-dependant.

> I simply created it as a springboard for discussion, and not as a beta
> of any kind.

I think it looks awesome, but I agree with glyph's points. Is there any
chance you'll address some of the points he made? I can't say I'll be
able to help much, but I'd like to (and surely others would be able to
lend a hand here and there).

[snip to glyph...]
> > * You're using tables for all formatting, rather than CSS.  This is
a
> > notorious
> > error that most experienced web designers seem to shudder at.  I
guess
> > this

I thought this point was funny, considering the existing site uses
tables for formatting as well ;-)

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/





From glyph at twistedmatrix.com  Sat Aug 24 21:23:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 24 Aug 2002 22:23:30 -0500 (CDT)
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAA7d/4GWEVGESpx5PJh0fpvwEAAAAA@markrichman.com>
References: <1030242925.2584.34.camel@radii>
	<!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAA7d/4GWEVGESpx5PJh0fpvwEAAAAA@markrichman.com>
Message-ID: <20020824.222330.78702721.glyph@twistedmatrix.com>


Hi Mark,

On Sat, 24 Aug 2002 22:40:13 -0400, "Mark A. Richman" <mark at markrichman.com> wrote:
> I never claimed to be a graphic artist - I'm a developer, not a
> designer. But I don't have time to contribute code, so I contributed an
> idea.

I started off with a few qualifications because I wanted to make it clear that
while I had issues with the way the initial foray looked, I didn't think that
the idea of redoing the website was a bad one, and certainly your idea was not
an aesthetic disaster.  I think it needs some cleanup and tweaking, and I'd
like to see alternate ideas, but I would really like to see you keep throwing a
few spare minutes at it.  Nonetheless, the last time I redesigned the website,
there were *still* some Twisted developers who consider the current layout to
be "too cluttered" :-).

> When I have time, I'll consult with my usability and human factors
> colleagues to see if they have any commentary.

That would be very cool :).  Actual domain knowledge is certainly better than
my opinions.  (Keep in mind that only half of my concerns are about human
factors: the other half are about automated agents.  Very few people seem to be
thinking seriously about how those work with web designs these days.)

> I'm curious to know of any popular sites that conform to Glyph's "wish
> list" of acceptable web standards.

Almost zero.  Of course, most of the web (especially the "popular web") is pure
tripe, so I don't think this says anything in particular.  Google does,
CritLink does, dmoz does, and Citeseer does.  Those are all sites I use
joyfully.  Travelocity doesn't, and I grit my teeth every time I have to wade
through it.  Web comics are particularly bad, and more than a few times I've
written a grabber script so I didn't have to wait for the extra 300k of HTML to
download with each 2k image.

If "most popular websites" look a certain way, then it seems that looking that
way would imply that we aspire only to mediocrity.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020824/5c11abdc/attachment.sig>

From twisted at itamarst.org  Sat Aug 24 23:47:52 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 25 Aug 2002 01:47:52 -0400
Subject: [Twisted-Python] Proposed Website Comp
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAAg+3xlaIL3UeoHPiXMv1T6wEAAAAA@markrichman.com>
Message-ID: <3D686F88.3070104@itamarst.org>

Mark A. Richman wrote:

> I whipped up a new look for the site this morning:

> http://www.markrichman.com/twisted/

Coooooool.

But I'm getting a 404. Could you please put it back up? I really want to see it.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting





From tv at twistedmatrix.com  Sun Aug 25 05:54:40 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 25 Aug 2002 14:54:40 +0300
Subject: [Twisted-Python] web.guard application.authorizer obsolete message
Message-ID: <20020825115440.GA26840@ki.yok.utu.fi>

	Hi. I'm not sure whether it is safe to commit this,
	so sending this patch here. Please apply if suitable.

Index: twisted/web/guard.py
===================================================================
RCS file: /cvs/Twisted/twisted/web/guard.py,v
retrieving revision 1.16
diff -u -u -r1.16 guard.py
--- twisted/web/guard.py        21 Aug 2002 13:21:30 -0000      1.16
+++ twisted/web/guard.py        25 Aug 2002 11:35:13 -0000
@@ -128,7 +128,7 @@
         # must be done before page is displayed so cookie can get set!
         request.getSession()
         # this site must be tagged with an application.
-        idrq = self.reqauth.service.application.authorizer.getIdentityRequest(username)
+        idrq = self.reqauth.service.authorizer.getIdentityRequest(username)
         idrq.needsHeader = 1
         idrq.addCallbacks(self.gotIdentity, self.didntGetIdentity,
                           callbackArgs=(password,request,perspective or username),

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From abo at minkirri.apana.org.au  Sun Aug 25 18:00:21 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Mon, 26 Aug 2002 10:00:21 +1000
Subject: [Twisted-Python] Proposed Website Comp
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
References: <20020824.171302.74758334.glyph@twistedmatrix.com> <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAA/oXuKv271EyqITBPzRe8l8KAAAAQAAAASj9Jwy6e0UiuLYNHY9WcJwEAAAAA@markrichman.com>
Message-ID: <20020826000021.GC16260@minkirri.apana.org.au>

On Sat, Aug 24, 2002 at 10:12:27PM -0400, Mark A. Richman wrote:
> This is why I called it a "comp" - I'm not going to waste my time with
> "real" HTML, CSS, etc. if you aren't going to like it...which you have
> made abundantly clear.

Hey, he liked how it looked, he just didn't like how it was implemented!

> I simply created it as a springboard for discussion, and not as a beta
> of any kind.
>
> That was 30 minutes work, not 30 hours.

Then you succeeded, and please don't get put off. There has been discussion
:-)

BTW, the best thing to keep in mind when doing any volentary type work is
"he who does it, gets to decide how it gets done", because if you don't do
it your way, it might never get done :-)

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From andrew-twisted at puzzling.org  Sun Aug 25 19:43:46 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 26 Aug 2002 11:43:46 +1000
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020824190530.GA17359@ki.yok.utu.fi>
References: <20020824190530.GA17359@ki.yok.utu.fi>
Message-ID: <20020826014346.GB12158@ritsuko.xware.cx>

On Sat, Aug 24, 2002 at 10:05:30PM +0300, Tommi Virtanen wrote:
> 	Can anyone explain the behaviour of the
> 	following?
> 
> #!/usr/bin/python
> import sys
> from twisted.internet import defer, reactor
> d=defer.Deferred()
> d.callback(0)
> d2=defer.Deferred()
> d.addCallback(lambda x,d2=d2: d2)

So you've effectively done:

d = defer.Deferred()
d2 = defer.Deferred()
d.callback(d2)

> # switch the comment sign on the next two and it'll
> # print not 1 but a Deferred. Why?
> #reactor.callLater(0, lambda d2=d2: d2.callback(1))

Which is effectively:
# reactor.callLater(0, d2.callback, 1)

> d2.callback(1)
> 
> d.addCallback(lambda x:sys.stdout.write(repr(x)+'\n'))
> d.addBoth(lambda x:reactor.stop())

Note that these callbacks will fire immediately upon adding them.

> reactor.run()

And of course, you don't need to do reactor.run() unless you're using
the reactor.callLater version of this code.

So, this is easy...

Consider what happens to your first Deferred, d, with that line
uncommented:
  d = defer.Deferred()      # 1. Create it
  d.callback(d2)            # 2. call it with some value (d2)
  reactor.callLater(....)   # 3. this doesn't happen yet
  d.addCallback(....)       # 4. this fires *immediately*, and writes
                                 the value from 2., which is d2

So that's why it prints the Deferred in that case.  Now back the way the
code is originally:
  d = defer.Deferred()      # 1. Create it
  d.callback(d2)            # 2. call it with some value (d2)
  d2.callback(1)            # 3. call d2 with another value (1)
  d.addCallback(....)       # 4. this fires *immediately*, and writes 
                                 the value from 2. -- which is 1???

That does confuse me.  Somehow, if a callback has a result which is
another Deferred, it does something special to automatically call that
Deferred, which I didn't realise and seems nasty to me.  I thought that
was only meant to happen if you explicitly called chainDeferred?

I've just re-read doc/howto/defer and I see that this is in fact
explained under the heading "Chain Deferreds", but I'm still curious as
to why this behaviour is necessary... "explicit is better than
implicit", etc :)

Anyway, I hope you now understand why that code behaves the way it
does...

-Andrew.




From radix at twistedmatrix.com  Sun Aug 25 21:19:01 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: 25 Aug 2002 23:19:01 -0400
Subject: [Twisted-Python] gtkLineClient.py
In-Reply-To: <F270OjvQcOV8AaBv7dg00003a78@hotmail.com>
References: <F270OjvQcOV8AaBv7dg00003a78@hotmail.com>
Message-ID: <1030331943.2590.42.camel@radii>

On Sat, 2002-08-24 at 12:39, Lee Harr wrote:
> # gtkLineClient.py
> # Free. Please share

Hi Lee! What exactly is this client for? At first I figured it was just
something to test one's line-based server protocols with, but the
"USERNAME_foo" line implies some sort of protocol (I think?).

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020825/58c1aafb/attachment.sig>

From tv at debian.org  Sun Aug 25 09:54:06 2002
From: tv at debian.org (Tommi Virtanen)
Date: Sun, 25 Aug 2002 18:54:06 +0300
Subject: [Twisted-Python] Ldaptor BoF at Linux-Kongress
Message-ID: <20020825155406.GA30553@ki.yok.utu.fi>

	Hi. I'm thinking of organizing a BoF at Linux-Kongress,
	about Ldaptor and Scalemail etc. My email/LDAP-related
	Twisted thingies, that is.

	Please give feedback on the email I am about to send.
	What would you like to hear? What would motivate you to
	joining the brainw^H^H^H^H^H^HBoF?

	Latest version of the mail will be at
	http://www.twistedmatrix.com/users/tv/bof.txt

	Current edition follows.

--8<--
From: Tommi Virtanen <tv at debian.org>
To: jochen.topf at guug.de
Cc: 
Bcc: 
Subject: Linux-Kongress BoF: Scalemail & Ldaptor
Reply-To: 

	Hi. I'd like to organize a BoF at the Linux-Kongress, 2002.
	Trying to use the ones at
	http://www.linux-kongress.org/2002/bofs/index.html
	as a template for the rest of this mail..

Scalemail & Ldaptor: integrating Postfix, Courier-IMAP and LDAP with
Python and Twisted

by Tommi Virtanen <tv at debian.org>

Introduction

Managing large amounts of user accounts can be tedious. Scalemail is
an attempt at solving the email part of that equation, and Ldaptor
 is a pure-Python LDAP library and a set of utilities and
applications, including a web-based search/edit interface. Together,
this mighty duo aims to allow an admin to manage thousands of user
accounts across multiple domains and servers, delegating
responsibility for account management to non-techical people where
possible.

This BoF will introduce the tools used, give an overview of the
architectures of Scalemail and Ldaptor, and solicit feedback from
email system admins and programmers for future enhancements.

Software to integrate:
	- Postfix (http://www.postfix.org/)
	- Courier-IMAP (http://www.inter7.com/courierimap/)
	- OpenLDAP (http://www.openldap.org/)

Tools used:
	- Python (http://www.python.org/)
	- Twisted (http://www.twistedmatrix.com/)

New software created:
	- Scalemail (http://scalemail.sourceforge.net/)
	- Ldaptor (http://ldaptor.bkbits.net/ for now)


Who should attend?
	- Email administrators of sites with over 100 users.
	- Hackers interested in email and/or LDAP.
	- Python programmers who want to see Twisted stuff.
--8<--

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From radix at twistedmatrix.com  Mon Aug 26 05:47:01 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Mon, 26 Aug 2002 06:47:01 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] Change LogFile to support disabling log rotation if rotateLength is None.
In-Reply-To: <E17jEgk-000598-00@pyramid.twistedmatrix.com>
References: <E17jEgk-000598-00@pyramid.twistedmatrix.com>
Message-ID: <20020826114701.GA24487@pyramid.twistedmatrix.com>

On Mon, Aug 26, 2002 at 02:53:30AM -0500, spiv CVS wrote:
> Modified files:
> Twisted/twisted/python/logfile.py 1.1 1.2
> 
> Log message:
> Change LogFile to support disabling log rotation if rotateLength is None.

Why not 0 instead of None?



From radix at twistedmatrix.com  Mon Aug 26 07:18:23 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Mon, 26 Aug 2002 08:18:23 -0500
Subject: [Twisted-Python] Bug tracker
Message-ID: <20020826131823.GB24487@pyramid.twistedmatrix.com>

I've temporarily set up the SourceForge bug tracker for Twisted, which is
browsable at
https://sourceforge.net/tracker/?atid=456015&group_id=49387&func=browse. (I
think you need to be logged in to submit bugs). As soon as the Twisted
Issues tracker is done, we can switch to it, but we were in desperate need
for a real bug tracker in the meantime.




From twisted at itamarst.org  Mon Aug 26 09:32:05 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Aug 2002 11:32:05 -0400
Subject: [Twisted-Python] client API issue for Application
References: <1030233600.2589.16.camel@radii>
Message-ID: <3D6A49F5.6010208@itamarst.org>

Christopher Armstrong wrote:

> I've been talking with nobomb on #twisted about his IRC bot, which he
> wants to be able to connect to a list of servers for fail-over (i.e.,
> when one server connection fails, try to connect to the nest). We worked
> it out so that he'd call app.connectTCP again in his
> clientConnectionFailed method of his ClientFactory, but I realized that
> the tcpConnectors list in Application *never* gets cleaned out. Should
> we have an explicit method to do this, or some kind of automatic
> cleaning, or something...?

If you don't want a connection to persist, don't add it to Application. 
Since a connection to an IRC server shouldn't persist (you may be connecting 
to other servers), it should be added to reactor directly. Since you 
apparently want *something* to persist, you probably want to add a 
twisted.internet.app.ApplicationService that will manage the connections.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From tv at twistedmatrix.com  Mon Aug 26 11:50:34 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 26 Aug 2002 20:50:34 +0300
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020826014346.GB12158@ritsuko.xware.cx>
References: <20020824190530.GA17359@ki.yok.utu.fi> <20020826014346.GB12158@ritsuko.xware.cx>
Message-ID: <20020826175034.GA10012@ki.yok.utu.fi>

On Mon, Aug 26, 2002 at 11:43:46AM +1000, Andrew Bennetts wrote:
> > #!/usr/bin/python
> > import sys
> > from twisted.internet import defer, reactor
> > d=defer.Deferred()
> > d.callback(0)
> > d2=defer.Deferred()
> > d.addCallback(lambda x,d2=d2: d2)
> 
> So you've effectively done:
> 
> d = defer.Deferred()
> d2 = defer.Deferred()
> d.callback(d2)

	Not really. You'll notice that Deferred addCallbacks
	handlers returning Deferreds is handled differently
	from d.callback(Deferred()); the former gets special
	treatment, the latter doesn't.

	Your version never outputs "1", it outputs repr(d2)
	for the callLater version and repr(d) for the immediate
	one.

	My version outputs "1" for the immediate case and
	repr(d2) for the callLater version.

> Consider what happens to your first Deferred, d, with that line
> uncommented:
>   d = defer.Deferred()      # 1. Create it
>   d.callback(d2)            # 2. call it with some value (d2)
>   reactor.callLater(....)   # 3. this doesn't happen yet
>   d.addCallback(....)       # 4. this fires *immediately*, and writes
>                                  the value from 2., which is d2

	Yes, but only because you modified it to be such.

> So that's why it prints the Deferred in that case.  Now back the way the
> code is originally:
>   d = defer.Deferred()      # 1. Create it
>   d.callback(d2)            # 2. call it with some value (d2)
>   d2.callback(1)            # 3. call d2 with another value (1)
>   d.addCallback(....)       # 4. this fires *immediately*, and writes 
>                                  the value from 2. -- which is 1???
> 
> That does confuse me.  Somehow, if a callback has a result which is
> another Deferred, it does something special to automatically call that
> Deferred, which I didn't realise and seems nasty to me.  I thought that
> was only meant to happen if you explicitly called chainDeferred?

	Yes, exactly. And I'm asking why this mechanism doesn't
	work with callLater.

> I've just re-read doc/howto/defer and I see that this is in fact
> explained under the heading "Chain Deferreds", but I'm still curious as
> to why this behaviour is necessary... "explicit is better than
> implicit", etc :)

	And it can't be emulated with chainDeferred, for the simple
	reason of needing to hold both Deferreds at once. The thing
	registered with addCallback doesn't have a reference to the
	Deferred it is added to, and it could be added to many
	Deferreds.


	Handy:

def foo(dummy):
	d2=Deferred()
	do_something(d2)
	return d2

d=Deferred()
d.addCallback(foo)


	Cumbersome:

def foo(dummy, d):
	d2=Deferred()
	do_something(d2)
	d2.chainDeferred(d)
	return dummy

d=Deferred()
d.addCallback(foo, d)


	Plus, it allows you to use more things as callbacks; many
	information retrieval funcs return either the wanted result
	or a Deferred. They are very nice to use as callbacks,
	chaining them to retrieve values for each other.

> Anyway, I hope you now understand why that code behaves the way it
> does...

	No, I don't. You only managed to miss the point :)

-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Mon Aug 26 14:55:12 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Aug 2002 15:55:12 -0500 (CDT)
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020826175034.GA10012@ki.yok.utu.fi>
References: <20020824190530.GA17359@ki.yok.utu.fi>
	<20020826014346.GB12158@ritsuko.xware.cx>
	<20020826175034.GA10012@ki.yok.utu.fi>
Message-ID: <20020826.155512.59465269.glyph@twistedmatrix.com>

On Mon, 26 Aug 2002 20:50:34 +0300, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> On Mon, Aug 26, 2002 at 11:43:46AM +1000, Andrew Bennetts wrote:
> > That does confuse me.  Somehow, if a callback has a result which is
> > another Deferred, it does something special to automatically call that
> > Deferred, which I didn't realise and seems nasty to me.  I thought that
> > was only meant to happen if you explicitly called chainDeferred?
> 
> 	Yes, exactly. And I'm asking why this mechanism doesn't
> 	work with callLater.

I'm in the process of checking in the fix for this bug.  Thanks for finding it!

> > I've just re-read doc/howto/defer and I see that this is in fact
> > explained under the heading "Chain Deferreds", but I'm still curious as
> > to why this behaviour is necessary... "explicit is better than
> > implicit", etc :)
> 
> 	And it can't be emulated with chainDeferred, for the simple
> 	reason of needing to hold both Deferreds at once. The thing
> 	registered with addCallback doesn't have a reference to the
> 	Deferred it is added to, and it could be added to many
> 	Deferreds.

> 	Plus, it allows you to use more things as callbacks; many
> 	information retrieval funcs return either the wanted result
> 	or a Deferred. They are very nice to use as callbacks,
> 	chaining them to retrieve values for each other.

Yes.  There are actually many cases where it's not possible to use deferreds in
the way described in the "cumbersome" example you provided without changing
framework code, and that's bad.  This requirement evolved from repeat
experience with those cases breaking very basic database functionality using
twisted.enterprise.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020826/67bcb210/attachment.sig>

From missive at hotmail.com  Mon Aug 26 18:07:27 2002
From: missive at hotmail.com (Lee Harr)
Date: Tue, 27 Aug 2002 00:07:27 +0000
Subject: [Twisted-Python] gtkLineClient.py
Message-ID: <F7kjs6XsjaIOFRR4H1x0000d3b1@hotmail.com>

> > # gtkLineClient.py
> > # Free. Please share
>
>Hi Lee! What exactly is this client for? At first I figured it was just
>something to test one's line-based server protocols with, but the
>"USERNAME_foo" line implies some sort of protocol (I think?).
>

For? Heh heh.

It is really just my attempt to make a gtk application talk
over the internet.

I had looked at the only other gtk app that came with the
0.19 distribution, but it used twisted.spread which frankly I
did not understand. I just wanted something which could send
lines in response to gtk events and listen for lines and
call back in to the app.

I tried to make it a simple basic gtk client. I thought it
might be useful to other people trying to get this thing going.

I continued on from there and I am mostly finished with
Twisted Tic Tac Toe, which lets people play (you guess it)
naughts and crosses over the network.

On that USERNAME_ thing... yes, I implemented a tic-tac-toe
protocol, but how would one go about authenticating securely
(assuming one's tic-tac-toe game was deemed important enough
to not send passwords in the clear) I guess I should look at
the twisted ssl stuff.

Thanks for the twisted. It's fun.

Lee Harr
missive at hotmail.com



_________________________________________________________________
MSN Photos is the easiest way to share and print your photos: 
http://photos.msn.com/support/worldwide.aspx




From andrew-twisted at puzzling.org  Mon Aug 26 18:24:29 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 27 Aug 2002 10:24:29 +1000
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020826175034.GA10012@ki.yok.utu.fi>
References: <20020824190530.GA17359@ki.yok.utu.fi> <20020826014346.GB12158@ritsuko.xware.cx> <20020826175034.GA10012@ki.yok.utu.fi>
Message-ID: <20020827002429.GA4653@ritsuko.xware.cx>

On Mon, Aug 26, 2002 at 08:50:34PM +0300, Tommi Virtanen wrote:
> On Mon, Aug 26, 2002 at 11:43:46AM +1000, Andrew Bennetts wrote:
> > > #!/usr/bin/python
> > > import sys
> > > from twisted.internet import defer, reactor
> > > d=defer.Deferred()
> > > d.callback(0)
> > > d2=defer.Deferred()
> > > d.addCallback(lambda x,d2=d2: d2)
> > 
> > So you've effectively done:
> > 
> > d = defer.Deferred()
> > d2 = defer.Deferred()
> > d.callback(d2)
> 
> 	Not really. You'll notice that Deferred addCallbacks
> 	handlers returning Deferreds is handled differently
> 	from d.callback(Deferred()); the former gets special
> 	treatment, the latter doesn't.
> 
> 	Your version never outputs "1", it outputs repr(d2)
> 	for the callLater version and repr(d) for the immediate
> 	one.
> 
> 	My version outputs "1" for the immediate case and
> 	repr(d2) for the callLater version.

Hmm.  Good point.

Deferreds are more complicated that I thought :(

I think this implicit chaining behaviour needs to become more
prominently discussed in the documentation, because that's what confused
me...  Probably what needs updating in doc/howto/defer is the diagram
explaining the chain of callback processing (or the text next to it),
which never at any point hints at this behaviour (that's described
later).  I'll probably checkin a doc fix along the lines of "Note that
this behaves differently if a callback returns a Deferred; see 'Chaining
Deferreds' for more details".

-Andrew.




From andrew-twisted at puzzling.org  Mon Aug 26 18:33:29 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 27 Aug 2002 10:33:29 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] Change LogFile to support disabling log rotation if rotateLength is None.
In-Reply-To: <20020826114701.GA24487@pyramid.twistedmatrix.com>
References: <E17jEgk-000598-00@pyramid.twistedmatrix.com> <20020826114701.GA24487@pyramid.twistedmatrix.com>
Message-ID: <20020827003329.GB4653@ritsuko.xware.cx>

On Mon, Aug 26, 2002 at 06:47:01AM -0500, Chris Armstrong wrote:
> On Mon, Aug 26, 2002 at 02:53:30AM -0500, spiv CVS wrote:
> > Modified files:
> > Twisted/twisted/python/logfile.py 1.1 1.2
> > 
> > Log message:
> > Change LogFile to support disabling log rotation if rotateLength is None.
> 
> Why not 0 instead of None?

It just seemed to make more sense... probably both should work.  Feel
free to fix it :)

The main purpose of this checkin was trick someone more qualified (i.e.
yourself, or glyph or itamar or whoever) to fix it properly ;)

As I said in the checkin comment, it'd be nice to have a --logsize
option for twistd, but the reason that I didn't add it is that perhaps
I'm being thick and there's a better way to do this...

-Andrew.




From andrew-twisted at puzzling.org  Mon Aug 26 18:43:17 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 27 Aug 2002 10:43:17 +1000
Subject: [Twisted-Python] Please help with Deferreds
In-Reply-To: <20020827002429.GA4653@ritsuko.xware.cx>
References: <20020824190530.GA17359@ki.yok.utu.fi> <20020826014346.GB12158@ritsuko.xware.cx> <20020826175034.GA10012@ki.yok.utu.fi> <20020827002429.GA4653@ritsuko.xware.cx>
Message-ID: <20020827004317.GC4653@ritsuko.xware.cx>

On Tue, Aug 27, 2002 at 10:24:29AM +1000, Andrew Bennetts wrote:
> Hmm.  Good point.
> 
> Deferreds are more complicated that I thought :(

To clarify, I did realise Glyph checked in a fix -- my point was I think
the docs need to make this magic behaviour a touch clearer :)

-Andrew.




From m at moshez.org  Mon Aug 26 23:32:21 2002
From: m at moshez.org (Moshe Zadka)
Date: 27 Aug 2002 05:32:21 -0000
Subject: [Twisted-Python] fwd: Accepted twisted 0.99.0-1 (i386 source all)
Message-ID: <20020827053221.11365.qmail@green.zadka.com>

To: debian-devel-changes at lists.debian.org
From: Moshe Zadka <moshez at debian.org>
Subject: Accepted twisted 0.99.0-1 (i386 source all)

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Format: 1.7
Date: Sun, 18 Aug 2002 23:01:14 -0500
Source: twisted
Binary: python2.2-twisted-bin python2.1-twisted python2.1-twisted-bin python-twisted twisted-quotes twisted-doc python2.2-twisted twisted
Architecture: source i386 all
Version: 0.99.0-1
Distribution: unstable
Urgency: low
Maintainer: Moshe Zadka <moshez at debian.org>
Changed-By: Moshe Zadka <moshez at debian.org>
Description: 
 python-twisted - Event-based framework for internet applications. (dummy package)
 python2.1-twisted - Event-based framework for internet applications. (Python 2.1)
 python2.1-twisted-bin - Event-based framework for internet applications
 python2.2-twisted - Event-based framework for internet applications.
 python2.2-twisted-bin - Event-based framework for internet applications
 twisted    - Event-based framework for internet applications. (transitional)
 twisted-doc - The official documentation of Twisted.
 twisted-quotes - Quotes from the Twisted development team
Changes: 
 twisted (0.99.0-1) unstable; urgency=low
 .
   * New upstream version.
   * Packaging changes:
     * "Twisted" is now a package, to facilitate upgrades from woody
       (there are verioned depends:)
     * New package: twisted-quotes -- quotes collected by the Twisted release
       team
Files: 
 65a4dc33c47065faadcf28c713ab0c1a 732 net extra twisted_0.99.0-1.dsc
 a5e976a2953dbf0efcd02bd738c58f59 1415173 net extra twisted_0.99.0.orig.tar.gz
 eb75fd1d67da3d04c7d5e39c4ac7ba08 416 net extra twisted_0.99.0-1.diff.gz
 3437fc40327dfa1ea733c93ac06df3e9 641672 net extra twisted-doc_0.99.0-1_all.deb
 11af21709304e558ddfff117f17fbcf9 49272 net extra twisted-quotes_0.99.0-1_all.deb
 9b1c4010b807a0931075fef8f32d3d2f 4210 net extra twisted_0.99.0-1_all.deb
 7797acc22d06034250722b15cf659ceb 4330 net extra python-twisted_0.99.0-1_all.deb
 3a9995459a9d871b5cdaf2b396bed84c 466824 net extra python2.1-twisted_0.99.0-1_all.deb
 3455c5d34d8ba74d139881c5e6781156 466538 net extra python2.2-twisted_0.99.0-1_all.deb
 eefb571dadbcf35889917d945b88d38a 23382 net extra python2.1-twisted-bin_0.99.0-1_i386.deb
 efe110781cce1c392f2263a68eb83e68 24134 net extra python2.2-twisted-bin_0.99.0-1_i386.deb

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9YOUCx/ymNkbQG9YRAlMbAKCvGTOEOS6ldP16chwnH4ec9GC/2wCgiwli
ljzmGQmEvM0CMiSpLAdnLTs=
=APdj
-----END PGP SIGNATURE-----


Accepted:
python-twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/python-twisted_0.99.0-1_all.deb
python2.1-twisted-bin_0.99.0-1_i386.deb
  to pool/main/t/twisted/python2.1-twisted-bin_0.99.0-1_i386.deb
python2.1-twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/python2.1-twisted_0.99.0-1_all.deb
python2.2-twisted-bin_0.99.0-1_i386.deb
  to pool/main/t/twisted/python2.2-twisted-bin_0.99.0-1_i386.deb
python2.2-twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/python2.2-twisted_0.99.0-1_all.deb
twisted-doc_0.99.0-1_all.deb
  to pool/main/t/twisted/twisted-doc_0.99.0-1_all.deb
twisted-quotes_0.99.0-1_all.deb
  to pool/main/t/twisted/twisted-quotes_0.99.0-1_all.deb
twisted_0.99.0-1.diff.gz
  to pool/main/t/twisted/twisted_0.99.0-1.diff.gz
twisted_0.99.0-1.dsc
  to pool/main/t/twisted/twisted_0.99.0-1.dsc
twisted_0.99.0-1_all.deb
  to pool/main/t/twisted/twisted_0.99.0-1_all.deb
twisted_0.99.0.orig.tar.gz
  to pool/main/t/twisted/twisted_0.99.0.orig.tar.gz


-- 
To UNSUBSCRIBE, email to debian-devel-changes-request at lists.debian.org
with a subject of "unsubscribe". Trouble? Contact listmaster at lists.debian.org




From radix at twistedmatrix.com  Tue Aug 27 12:42:21 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 27 Aug 2002 13:42:21 -0500
Subject: [Twisted-Python] twisted-bugs mailing list
Message-ID: <20020827184221.GA3914@pyramid.twistedmatrix.com>

I configured the SF bug-tracker to send mails to
twisted-bugs at twistedmatrix.com. If you want to sign up, go to
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-bugs

Squash 'dem bugs!


-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Tue Aug 27 22:08:14 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 28 Aug 2002 14:08:14 +1000
Subject: [Twisted-Python] fork
Message-ID: <20020828040814.GG24818@ritsuko.xware.cx>

An interesting little use-case for us, from a snippet of a conversation
on #slug:

13:45 < DanielS-work> w00t!
13:45  * DanielS-work is 90% of the way to releasing 0.0.1 of MoulDAVia :)
13:48 < nevyn> yay
13:50 < DanielS-work> nevyn: it's how i taught myself python heh. so far every
                      method i have (and I have most of them, and the hardest
                      ones are all done) is rfc-compliant
13:51 < nevyn> so do you like python?
13:51 < DanielS-work> *mumble*pythonrocks*mumble*
13:51 < DanielS-work> *cough cough splutter*
13:52 < nevyn> hehehehe
13:53 -!- wildfire [~wildfire at flu11888-1.gw.connect.com.au] has joined #slug
13:53 < spiv> What's MoulDAVia?  Something to do with WEBDAV?
13:54 < DanielS-work> spiv: nod
13:54 < spiv> DanielS-work: I have ask... have you heard of Twisted?
13:55 < DanielS-work> spiv: bugs.debian.org/158579
13:55 < DanielS-work> spiv: Indeed, I started off using Twisted, but later
                      abandoned it because it didn't do fork()s :)
13:55 < DanielS-work> I'm going to have to write a superserver of my own at
                      some point, inetd is icky.
13:56 < spiv> Why was forking necessary?
13:56 < spiv> For the chroot?
13:57 < DanielS-work> spiv: chroot(), setgid(), setuid()
13:57 < DanielS-work> spiv: you can't do that without a fork for obvious
                      reasons :)

-Andrew.




From acapnotic at twistedmatrix.com  Tue Aug 27 23:28:24 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 27 Aug 2002 22:28:24 -0700
Subject: [Twisted-Python] M-x customize-group whitespace
In-Reply-To: <E17juiS-0004ZC-00@pyramid.twistedmatrix.com>
References: <E17juiS-0004ZC-00@pyramid.twistedmatrix.com>
Message-ID: <1030512508.13689.22.camel@troglodyte.funhouse>

Silly point that only a bunch of emacs-thumping Python wonks would
make.  Should/may I put a bit in the Whitespace section of the
CodingStandard about emacs' whitespace-cleanup mode?  Point being that
it doesn't let you leave trailing whitespace on the end of (possibly
empty) lines or trailing lines at the end of file.  Being consistent
about this would cut down on spurious file-modified flags from CVS.

See C-h f whitespace-describe if unfamiliar.

The only evil thing about it is that if you don't disable
whitespace-check-indent-whitespace, it'll, um, use tabs.

-Yours, 
- 
+Yours,
+
  acap
-





From andrew-twisted at puzzling.org  Wed Aug 28 00:16:25 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 28 Aug 2002 16:16:25 +1000
Subject: [Twisted-Python] Documentation: man pages online?
Message-ID: <20020828061625.GA30305@ritsuko.xware.cx>

Just a quick thought... we could put the twistd(1), etc man pages on
tm.com as part of documentation online.  It probably belongs under
"Adminstrator" docs.

-Andrew.




From glyph at twistedmatrix.com  Wed Aug 28 01:49:38 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 28 Aug 2002 02:49:38 -0500 (CDT)
Subject: [Twisted-Python] M-x customize-group whitespace
In-Reply-To: <1030512508.13689.22.camel@troglodyte.funhouse>
References: <E17juiS-0004ZC-00@pyramid.twistedmatrix.com>
	<1030512508.13689.22.camel@troglodyte.funhouse>
Message-ID: <20020828.024938.93022265.glyph@twistedmatrix.com>

On 27 Aug 2002 22:28:24 -0700, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> Silly point that only a bunch of emacs-thumping Python wonks would make.
> Should/may I put a bit in the Whitespace section of the CodingStandard about
> emacs' whitespace-cleanup mode?  Point being that it doesn't let you leave
> trailing whitespace on the end of (possibly empty) lines or trailing lines at
> the end of file.

I wasn't aware that whitespace-cleanup was a mode, but certainly people
submitting files should be doing M-x whitespace-cleanup before saving.  Putting
something in twisted-dev.el would probably be a good idea too.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020828/90e73b0c/attachment.sig>

From exarkun at meson.dyndns.org  Wed Aug 28 14:45:33 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Wed, 28 Aug 2002 16:45:33 -0400
Subject: [Twisted-Python] Generalised data/metadata storage/retrieval
Message-ID: <20020828204533.GA26704@meson.dyndns.org>

Interface description attached.  Written in response to glyph's comments
that Twisted.news was waaay too NNTPy.  Suggestions and other comments
appreciated.

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
--
 4:00pm up 99 days, 16:51, 5 users, load average: 0.11, 0.13, 0.09
-------------- next part --------------


class NewsStorage:
    """
    A generic interface to metadata/data pairs
    """


    def lookupByHeader(self, predicate, max = 1):
        """
        Search for a message by examining its headers.  'predicate' 
        is called with a mapping of header name/values.  If it returns
        a true value, the Message-ID of the message is added to the
        result list.  When the result list is 'max' items long, or
        there are no more articles, it is returned.  If 'max' is None,
        it is disregarded.
        """


    def searchHeaders(self, predicate, max = None):
        """
        Collect a list of headers.  'predicate' is called with a mapping
        of header name/values.  If it returns something other than None,
        that object is added to the result list.  When the result list is
        'max' items long, or there are no more articles, it is returned.
        If 'max' is None, it is disregarded.
        """


    def lookupByBody(self, predicate, max = 1):
        """
        Search by a message by examining its body.  'predicate'
        is passed the body of each message in the database.  If
        it returns a true value, the Message-ID of  the message
        is added to the result list.  When the result list is
        'max' items long, or there are no more articles, it is
        returned.  If 'max' is None, it is disregarded.
        """


    def lookupByID(self, id):
        """
        Return the headers and body for the article with the specified
        Message-ID.
        """


    def insertMessage(self, headers, body):
        """
        Insert a new message.  'header' is a mapping of header name/values.
        If it does not contain a 'Message-ID' header one will be added.  If
        the Message-ID is already assigned 
        """


    def removeMessage(self, id):
        """
        Remove the message with the specified Message-ID
        """
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020828/1b56f943/attachment.sig>

From exarkun at meson.dyndns.org  Wed Aug 28 17:36:42 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Wed, 28 Aug 2002 19:36:42 -0400
Subject: [Twisted-Python] Submitted for your approval
Message-ID: <20020828233642.GA27096@meson.dyndns.org>

Because I use rebuild a _lot_ in one of my applications, I finally broke
down and write this addition to scripts/twistd.py.  I'm not sure if its
appropriate for inclusion in the repository (and if it is, it certainly
needs some cleanup first).


diff -a -c -t -r1.1 twistd.py
*** twisted/scripts/twistd.py   20 Aug 2002 02:31:59 -0000      1.1
--- twisted/scripts/twistd.py   28 Aug 2002 23:32:23 -0000
***************
*** 309,311 ****
--- 309,342 ----
      if usepid:
          os.unlink(config.opts['pidfile'])
      log.msg("Server Shut Down.")
+ 
+ 
+ def daemonize(logf = 'twistd.log'):
+     from twisted.python import log
+     if logf == '-':
+         print 'daemons cannot log to stdout'
+     else:
+         logPath = os.path.abspath(logf or 'twistd.log')
+         logFile = logfile.LogFile(os.path.basename(logPath), os.path.dirname(logPath))
+ 
+         # rotate logs on SIGUSR1
+         if os.name == "posix":
+             import signal
+             def rotateLog(signal, frame, logFile=logFile):
+                 logFile.rotate()
+             signal.signal(signal.SIGUSR1, rotateLog)
+ 
+         oldstdin = sys.stdin
+         oldstdout = sys.stdout
+         oldstderr = sys.stderr
+         log.startLogging(logFile)
+         sys.stdout.flush()
+ 
+         # Turn into a daemon.
+         if os.fork():   # launch child and...
+             os._exit(0) # kill off parent
+         os.setsid()
+         os.umask(077)
+         oldstdin.close()
+         oldstdout.close()
+         oldstderr.close()


An undaemonize() would be _really_ handy, too... Hmmm :)

 Jp

-- 
There are 10 kinds of people: those who understand binary and those who do
not.
--
 7:00pm up 99 days, 19:51, 5 users, load average: 0.03, 0.07, 0.02
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020828/9a664427/attachment.sig>

From boyd at strakt.com  Thu Aug 29 06:39:53 2002
From: boyd at strakt.com (Boyd Roberts)
Date: Thu, 29 Aug 2002 14:39:53 +0200
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
Message-ID: <3D6E1619.4040306@strakt.com>

Have you thought of getting the callLater() method to return an
object with a cancel() method?

Eg:

    from twisted.internet import reactor

    def f():
        print "I'll never run."

    call = reactor.callLater(5, f)
    call.cancel()

Other methods could be added and both would reduce
reactor's namespace.

Modification of the arguments or re-scheduling the
time could be such methods to add.






From twisted at itamarst.org  Thu Aug 29 06:59:14 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Aug 2002 08:59:14 -0400
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
References: <3D6E1619.4040306@strakt.com>
Message-ID: <3D6E1AA2.9030806@itamarst.org>

Boyd Roberts wrote:

> Have you thought of getting the callLater() method to return an
> object with a cancel() method?

That is more consistent with the way other reactor APIs work, and would be 
another step towards supporting multiple reactors - we should probably do 
this at some point (patches welcome).

Could you add a wishlist item at our bugtracker so this doesn't get lost?
http://sourceforge.net/tracker/?group_id=49387&atid=456015

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From boyd at strakt.com  Thu Aug 29 07:08:16 2002
From: boyd at strakt.com (Boyd Roberts)
Date: Thu, 29 Aug 2002 15:08:16 +0200
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
References: <3D6E1619.4040306@strakt.com> <3D6E1AA2.9030806@itamarst.org>
Message-ID: <3D6E1CC0.5020201@strakt.com>

Itamar Shtull-Trauring wrote:

> Could you add a wishlist item at our bugtracker so this doesn't get lost?
> http://sourceforge.net/tracker/?group_id=49387&atid=456015

Done, but it got submitted by 'nobody' as I had yet to create yet 
another profile ...

I hate that.





From twisted at itamarst.org  Thu Aug 29 07:12:34 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Aug 2002 09:12:34 -0400
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
References: <3D6E1619.4040306@strakt.com> <3D6E1AA2.9030806@itamarst.org> <3D6E1CC0.5020201@strakt.com>
Message-ID: <3D6E1DC2.7070801@itamarst.org>

Boyd Roberts wrote:

> Done, but it got submitted by 'nobody' as I had yet to create yet 
> another profile ...
> 
> I hate that.

Thanks.

Glyph and Allen are hard at work at creating a decent issue tracker so we 
don't have to use sourceforge. But a bad tracker is better than no tracker.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From exarkun at meson.dyndns.org  Thu Aug 29 09:34:58 2002
From: exarkun at meson.dyndns.org (Jp Calderone)
Date: Thu, 29 Aug 2002 11:34:58 -0400
Subject: [Twisted-Python] http://www.twistedmatrix.com/documents/howto/time
In-Reply-To: <3D6E1CC0.5020201@strakt.com>
References: <3D6E1619.4040306@strakt.com> <3D6E1AA2.9030806@itamarst.org> <3D6E1CC0.5020201@strakt.com>
Message-ID: <20020829153458.GA29056@meson.dyndns.org>

On Thu, Aug 29, 2002 at 03:08:16PM +0200, Boyd Roberts wrote:
> Itamar Shtull-Trauring wrote:
> 
> >Could you add a wishlist item at our bugtracker so this doesn't get lost?
> >http://sourceforge.net/tracker/?group_id=49387&atid=456015
> 
> Done, but it got submitted by 'nobody' as I had yet to create yet 
> another profile ...
> 
> I hate that.
> 

  Posted a followup, which mainly consists of this url:
    http://meson.dyndns.org:8080/cancelCallLater.diff

  I'll take a look at cReactor a little later and see if the second part of
the change is within my skills.

  Jp

-- 
"One World, one Web, one Program." - Microsoft(R) promotional ad
"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler
--
 11:00am up 100 days, 11:51, 4 users, load average: 0.37, 0.27, 0.34
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 237 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020829/3402b99e/attachment.sig>

From typo at soniq.net  Thu Aug 29 11:34:56 2002
From: typo at soniq.net (Paul Boehm)
Date: Thu, 29 Aug 2002 19:34:56 +0200
Subject: [Twisted-Python] rfc: pb filetransfers
Message-ID: <20020829173456.GA18175@soniq.net>

My approach to doing pb filetransfers is attached,
Suggestions welcome!

this code should illustrate the basic idea:

# A Session is a chain of Jobs that are carried out in order,
# one after another.

# The server builds a custom Session from Mixins, to provide
# only the jobs he wants to accept. ServerSession is the base
# class (pb.Viewable).
# FileSSM is the ServerSessionMixin for Filetransfers.
class FileSession(session.ServerSession, session.FileSSM):
    pass

# Then that class is offered to clients via callRemote.
class FilePerspective(pb.Perspective):
    def perspective_getsession(self):
        return FileSession()

# That's all, the server now provides file transfer functionality
# to clients.
----

# Client builds a Custom Session too.
# FileCSM is the ClientSessionMixin for Filetransfers,
# CallableCSM provides session.call(func, args)
#   which is used to call a function after some other
#   job has completed (e.g. a file download)
class MySession(session.ClientSession, session.FileCSM, session.CallableCSM):
    pass

# Then a session is requested from the server, and the received
# deferred is wrapped by MySession. After that we can queue jobs
# on the session.
session = MySession(perspective.callRemote("getsession"))
session.sendfile("/etc/hosts", "remotecopy")
session.getfile("/etc/passwd", "localcopy")
session.getfile("/etc/hosts", "localcopy")
session.call(woot, "Done with Session.")

# Go!
reactor.run()
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SAM3.tgz
Type: application/x-gzip
Size: 2421 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020829/5b40312e/attachment-0002.bin>

From radix at twistedmatrix.com  Thu Aug 29 12:35:51 2002
From: radix at twistedmatrix.com (Chris Armstrong)
Date: Thu, 29 Aug 2002 13:35:51 -0500
Subject: [Twisted-Python] Twisted 0.99.1rc3
Message-ID: <20020829183551.GB22006@pyramid.twistedmatrix.com>

Hey all, I made 99.1rc3 available on the website (thanks to moshez and
exarkun for doing deb/win32 packages). Please download and test. As always,
this will become 0.99.1 once it's deemed to be Bug Free[TM].

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Thu Aug 29 18:44:01 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 30 Aug 2002 10:44:01 +1000
Subject: [Twisted-Python] Dud bug tracker link on tm.com
Message-ID: <20020830004401.GB3694@ritsuko.xware.cx>

>From anywhere other than the front page (e.g. the uber-nifty success
stories page, http://twistedmatrix.com/services/success), the "Bug
Tracker" link points to:
    http://twistedmatrix.com/http://sourceforge.net/tracker/?func=browse&group_id=49387&atid=456015

-Andrew.




From bobp at worlds-apart.com  Fri Aug 30 09:54:11 2002
From: bobp at worlds-apart.com (Bob Piper)
Date: Fri, 30 Aug 2002 09:54:11 -0600
Subject: [Twisted-Python] Mac and Twisted
In-Reply-To: <20020830004401.GB3694@ritsuko.xware.cx>
Message-ID: <JEECLEAKOMONFDBNDOGECEACCBAA.bobp@worlds-apart.com>

 I tried to do an install of Twisted on OS X (10.1.5 and 10.2), and ran into
compile failures for cReactor (missing sys/poll.h).  Is there a work around
for this?

 bob.
 Worlds Apart Productions




From twisted at itamarst.org  Fri Aug 30 10:14:06 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Aug 2002 12:14:06 -0400
Subject: [Twisted-Python] Mac and Twisted
References: <JEECLEAKOMONFDBNDOGECEACCBAA.bobp@worlds-apart.com>
Message-ID: <3D6F99CE.4060807@itamarst.org>

Bob Piper wrote:

>  I tried to do an install of Twisted on OS X (10.1.5 and 10.2), and ran into
> compile failures for cReactor (missing sys/poll.h).  Is there a work around
> for this?

Just don't compile cReactor I guess - comment out the applicable bits in 
setup.py so it doesn't try to compile it. None of the C code in Twisted is 
necessary in order to use it, they're just there for speed.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting




From krz at confusatron.org  Fri Aug 30 10:33:21 2002
From: krz at confusatron.org (Keith Zaback)
Date: Fri, 30 Aug 2002 11:33:21 -0500
Subject: [Twisted-Python] Mac and Twisted
In-Reply-To: <3D6F99CE.4060807@itamarst.org>; from twisted@itamarst.org on Fri, Aug 30, 2002 at 12:14:06PM -0400
References: <JEECLEAKOMONFDBNDOGECEACCBAA.bobp@worlds-apart.com> <3D6F99CE.4060807@itamarst.org>
Message-ID: <20020830113321.C4536@confusatron.org>

On Fri, Aug 30, 2002 at 12:14:06PM -0400, Itamar Shtull-Trauring wrote:
> Bob Piper wrote:
> 
> >  I tried to do an install of Twisted on OS X (10.1.5 and 10.2), and ran into
> > compile failures for cReactor (missing sys/poll.h).  Is there a work around
> > for this?
> 
> Just don't compile cReactor I guess - comment out the applicable bits in 
> setup.py so it doesn't try to compile it. None of the C code in Twisted is 
> necessary in order to use it, they're just there for speed.

Is it actually trying to compile the entire extension module, or are you
just seeing the output from the attempt to compile the test program
used to detect sys/poll.h?  Last time I tested it, if sys/poll.h did
not exist it would not build the extension module, but you would see an
compiler error during the sys/poll.h detection.  I couldn't find
anything in distutils to "check for C headers" so if anyone knows of a
better way (than what is currently in setup.py) feel free to change it.
You shouldn't need to comment out certain bits in setup.py.

--
Keith



From bobp at worlds-apart.com  Fri Aug 30 10:57:24 2002
From: bobp at worlds-apart.com (Bob Piper)
Date: Fri, 30 Aug 2002 10:57:24 -0600
Subject: [Twisted-Python] Mac and Twisted
In-Reply-To: <20020830113321.C4536@confusatron.org>
Message-ID: <JEECLEAKOMONFDBNDOGEMEACCBAA.bobp@worlds-apart.com>

> Is it actually trying to compile the entire extension module, or are you
> just seeing the output from the attempt to compile the test program
> used to detect sys/poll.h?  Last time I tested it, if sys/poll.h did
> not exist it would not build the extension module, but you would see an
> compiler error during the sys/poll.h detection.  I couldn't find
> anything in distutils to "check for C headers" so if anyone knows of a
> better way (than what is currently in setup.py) feel free to change it.
> You shouldn't need to comment out certain bits in setup.py.
 The conftest looks for sys/poll.h, and I even get a message from setup.py
about no cReactor available for the system.  It then attempts to build
cReactor and fails.

 Should have thought of just commenting out cReactor, need more caffeine
this morning.

 thanks,
 bob.

>
> --
> Keith
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From radix at twistedmatrix.com  Fri Aug 30 23:10:35 2002
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 31 Aug 2002 01:10:35 -0400
Subject: [Twisted-Python] Twisted 0.99.1rc4
Message-ID: <20020831051035.GA407@radii>

Another release candidate out; this one will probably turn into 0.99.1
this weekend. Grab it at http://twistedmatrix.com/products/download

Moshez finally got me around to doing signed md5sums:

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

6c0934460fe24ffa75247cb6a324f2ee  Twisted-0.99.1rc4.tar.bz2
e063effe8789bc3d5741c75a229d7a4a  Twisted-0.99.1rc4.tar.gz
5d9b44a2509b0eee3e9299527f4995f6  Twisted-0.99.1rc4.zip
0f6f036318844098e5bff153094737e8  TwistedDocs-0.99.1rc4.tar.bz2
3107769bbac3de34ad66ad611738e902  TwistedDocs-0.99.1rc4.tar.gz
2e66ad4f3dbbc8b19316c5187bba028c  TwistedDocs-0.99.1rc4.zip
f0a4fe811c738b51f6ec1fff0408f0a7  Twisted_NoDocs-0.99.1rc4.tar.bz2
41d84e73fc1890eb010d087bd12e0764  Twisted_NoDocs-0.99.1rc4.tar.gz
a90b68e1755b92089dce6941fb3facea  Twisted_NoDocs-0.99.1rc4.zip
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9cEmjNp279O1/OG4RAklwAJ4tXUR0a9N6BnMPz7gsSuMFldQmLwCghFpW
+/BjfnMRsICK/Vq0MllWMJw=
=qsAe
-----END PGP SIGNATURE-----

I've also updated the downloads page to have a link to these signed md5sums.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/radix.twistd/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020831/97fb190e/attachment.sig>

From m at moshez.org  Fri Aug 30 23:37:46 2002
From: m at moshez.org (Moshe Zadka)
Date: 31 Aug 2002 05:37:46 -0000
Subject: [Twisted-Python] Twisted 0.99.1rc4
In-Reply-To: <20020831051035.GA407@radii>
References: <20020831051035.GA407@radii>
Message-ID: <20020831053746.5719.qmail@green.zadka.com>

On Sat, 31 Aug 2002, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> --cWoXeonUoKmBZSoM
> Content-Type: text/plain; charset=us-ascii
> Content-Disposition: inline
> Content-Transfer-Encoding: quoted-printable
                             ^^^^^^^^^^^^^^^^ <-- it is not a good
idea to q-p encode signed messages.



From andrew-twisted at puzzling.org  Sat Aug 31 04:02:46 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 31 Aug 2002 20:02:46 +1000
Subject: [Twisted-Python] Twisted superservers and setuid/setgid subservers
Message-ID: <20020831100246.GA4697@frobozz.local>

Here's some ideas I've been thinking about with aid of my housemate (who is
CC'd).

A feature of some servers is the ability to run chroot'd, so say you want to
be a WebDAV server for a site, when a user logs in, it forks, chroots to the
users home directory, and sets its uid/gid to that of the user, thereby
restricting the potential for security holes to damage the system.  (The
chroot is an optional paranoid extra if you are dropping uid/gid)

Consider twisted.web.distrib (I might have bits of this slightly wrong;
please correct me if so).  It currently does something like this, although
manually: each user has to start their own twistd, which only runs
twisted.web, and talks to the superserver with PB via a pipe.  This is good,
but not as general as it could be.  It's limited to twisted.web, and users
have to manually ensure that twistd is running.

I think it'd be nice to generalise this to *any* service that can run within
the context of different users, e.g. for FTP, WebDAV, whatever.  So there'd
be some automated way to tell a Twisted application "Ok, now serve this as a
particular user by passing it to a user-owned twistd".

What I'm envisaging is something like this:
  * The superserver receives a WidgetService request from user Bob
  * The superserver connects to the user's WidgetService twistd, starting it
    if necessary (more on this in a moment)
  * The user's WidgetService then does all the hard work :)

If the user doesn't have a currently running twistd, then you could do, say:
  * The superserver creates a pipe
  * The superserver (which is running as root (or something effectively
    root)) forks a child
  * The child does a reactor.crash() to stop it interfering with the
    parent's normal handling of events
  * The child closes all file descriptors in the reactor, except for the
    pipe.  It should probably start logging to a different log file as well.
    Also, things like DB-backed twisted.cred authenticators probably should
    be shutdown... hmm, this part is messy :(
  * The child then starts a fresh Application, which runs the user's
    WidgetService and starts processing for the superserver

Now that I think about it, it is probably cleaner to simply spawn a fresh
process rather than futzing around with fork, so just:
  * The superserver spawns a user twistd as a particular uid/gid, and talks
    to it over a PB pipe.

Anyway...

The nice thing about this model is that there is only 1 twistd running per
user (and you could get the user twistds to automatically shutdown if
inactive for, say, 10 minutes to free resources), which means your process
load is still mostly independent of the number of connections.  It'd be
*really* cool if a superserver listening on multiple protocols, e.g.
"WidgetService" and HTTP, could have only a *single* twistd per user,
regardless of number of protocols the superserver is dealing with.

It'd be really nice to be able to chroot as well, but I suspect python
doesn't work cleanly with chroot, due to file descriptors being left open to
modules...

So yeah, this is a long-winded way of saying "twisted.web.distrib is cool,
but should be general and more automatic", because I think this would
probably be useful.

In vaguely related news, I've nearly got a simple Twisted inetd replacement
written...  expect a checkin sometime this weekend.

-Andrew.




From glyph at twistedmatrix.com  Sat Aug 31 20:42:40 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 31 Aug 2002 21:42:40 -0500 (CDT)
Subject: [Twisted-Python] Re: [Twisted-commits] fixed connectionLost calls to accept
 Failures. Read on, I've got gripes.
In-Reply-To: <E17lBVg-0001Ht-00@pyramid.twistedmatrix.com>
References: <E17lBVg-0001Ht-00@pyramid.twistedmatrix.com>
Message-ID: <20020831.214240.59462687.glyph@twistedmatrix.com>


On Sat, 31 Aug 2002 11:54:08 -0500, radix CVS <radix at twistedmatrix.com> wrote:

> I think all the methods that are returning CONNECTION_* should be _raising_
> them. "Return victorious or not at all". This has the benefit of useful
> tracebacks in the Failure objects.

Well, it was originally that way.

However, it turns out that creating exception objects in Python, generating
tracebacks et. al. is rather expensive.  Losing connections happens a LOT.
Since connectionLost is in the "positive path" of most applications, like, for
example, HTTP, raising them creates an even higher overhead for
creating/destroying connections.  At the time I made this change, I benchmarked
twisted.web with a small static page.  IIRC there was a 2-3x speedup with doing
these as "return" rather than "raise".  Perhaps newer releases of Python don't
have such a wide disparity, and the HTTP parser is a lot more robust (and
attendantly complex) now, so it's possible that this slowdown is now marginal.
Still, let's try to avoid using exceptions as a general-purpose control
structure.  They're for handling errors, not just unusual conditions.  (The
connection closing is only an error if you don't expect it to close.)

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20020831/6679c38d/attachment.sig>

