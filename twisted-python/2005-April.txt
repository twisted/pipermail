From therve at free.fr  Fri Apr  1 04:35:10 2005
From: therve at free.fr (Thomas HERVE)
Date: Fri, 01 Apr 2005 11:35:10 +0200
Subject: [Twisted-Python] Docs for twisted
Message-ID: <20050401113510.rrol6q9pa5pwcos8@itchy.wasabout.net>

>> You mentioned you're teaching someone Twisted Web -- is that just the
>> twisted.web/old-woven stuff or are you taking on nevow?

> I am using Nevow and trying to build some projects under it. My goal is
> to create a complete webmail, based on Cyrus IMAP and its features
> (Sieve, Shared Folders, etc). The frontend must be easy to customize for
> each customer and I think nevow is the right templating system for
> that. I tried Quotient, it is excellent, but it is not the right system
> for my needs.

I've just started a project that share similar goals with yours. It's called
Ni!Mail (http://www.nimail.org), and it's based on Twisted/Nevow.

It's really at is early stage (I've just released a version 0.1 which is very
basic), and I didn't intend to advertize on it so soon, but I've got a strong
motivation to improve it.

If you want to see what it looks like for now, you can go here:
http://www.nimail.org/demo/ (login : demo at nimail.org, pass : demo).

I would enjoy to see what you think of it.

--
Thomas Herve

[sorry for my basic english]



From exarkun at divmod.com  Fri Apr  1 09:05:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 01 Apr 2005 14:05:47 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13382 - Add a new howto
	with deferred 'recipes': at the moment just timeouts (fixes #952)
In-Reply-To: <E1DHHxZ-0004Bv-00@wolfwood>
Message-ID: <20050401140547.13806.1334805458.divmod.quotient.37840@ohm>

On Fri, 01 Apr 2005 01:56:57 -0700, Mary Gardiner <mary at wolfwood.twistedmatrix.com> wrote:
>Author: mary
> Date: Fri Apr  1 01:56:57 2005
> New Revision: 13382
> 
> Added:
>    trunk/doc/core/howto/deferrecipes.xhtml
> Modified:
>    trunk/doc/core/howto/async.xhtml
>    trunk/doc/core/howto/defer.xhtml
>    trunk/doc/core/howto/gendefer.xhtml
> Log:
> Add a new howto with deferred 'recipes': at the moment just timeouts (fixes #952)
> 
> 

> def getTimeoutCancelFunction(delayedCall):
>     """
>     Return a function which will cancel the delayedCall
>     """
> [snip ...]
> 
> def timeoutSetter():
> [snip ...]
>     d.addBoth(getTimeoutCancelFunction)
> [snip ...]

  This usage doesn't seem to match up with the definition.  Maybe getTimeoutCancelFunction()?

  Jp



From mary-twisted at puzzling.org  Fri Apr  1 09:14:52 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 2 Apr 2005 00:14:52 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13382 - Add a new howto
	with deferred 'recipes': at the moment just timeouts (fixes #952)
In-Reply-To: <20050401140547.13806.1334805458.divmod.quotient.37840@ohm>
References: <E1DHHxZ-0004Bv-00@wolfwood>
	<20050401140547.13806.1334805458.divmod.quotient.37840@ohm>
Message-ID: <20050401141452.GC26563@sourdust.home.puzzling.org>

On Fri, Apr 01, 2005, Jp Calderone wrote:
>   This usage doesn't seem to match up with the definition.  Maybe getTimeoutCancelFunction()?

Yeah, thanks.

-Mary



From sergtrejo at gmail.com  Fri Apr  1 10:49:07 2005
From: sergtrejo at gmail.com (Sergio Trejo)
Date: Fri, 1 Apr 2005 05:49:07 -1000
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
	<27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
Message-ID: <7c3d693605040107495d4e0957@mail.gmail.com>

FWIW, IMHO the entire Twisted development team and community
contributors all rock!

Cheers,

Serg

On Mar 31, 2005 6:26 PM, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> 
> On Mar 31, 2005, at 11:09 PM, Christopher Armstrong wrote:
> 
> > Hi Twisted,
> >
> > One of the key problems that trial solves is the traversal of Python
> > modules and files,
> 
> wow...i did that? :-)
> 
> > Creating a unified resource hierarchy in Twisted has long been a goal
> > of the Twisted team, and every attempt has been mostly a failure. At
> > the Australian Twisted Sprint, we've recently come to the realization
> > that trial effectively already does this!
> 
> yay! i am genus!
> 
> >  So today we're starting to
> > implement a new VFS system that unifies all of these systems into a
> > single twisted.vfs module. This will enable things such as more secure
> > remote file system access, a better internal design of Trial, and
> > remote access to your unit tests.
> >
> 
> I have to say that when i first read the subject of this message i
> thought, "WTF? I just got done writing 2.0! They want to replace it
> *already*?!"
> 
> It's a nice feeling to know you did something right. :-)
> 
> If you guys need help, or need me to translate something fairly stinky
> in there, please CC me on any t-ml message, as I don't read the list as
> much as I used to.
> 
> Best of luck!
> - -Jonathan
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.4 (Darwin)
> 
> iD8DBQFCTM1uFARZQEMGIlgRAhaWAJ4lrZuLOeHJn0pyBGp1RtKEjSxvHgCfbpvH
> VISq4pbmbcl7ClCtqOAb90c=
> =y2Wp
> -----END PGP SIGNATURE-----
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Fri Apr  1 11:54:27 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Apr 2005 11:54:27 -0500
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <60ed19d405033120093e2f8a39@mail.gmail.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
Message-ID: <1112374467.8541.30.camel@localhost.localdomain>

On Fri, 2005-04-01 at 14:09 +1000, Christopher Armstrong wrote:


> Creating a unified resource hierarchy in Twisted has long been a goal
> of the Twisted team, and every attempt has been mostly a failure. At
> the Australian Twisted Sprint, we've recently come to the realization
> that trial effectively already does this! So today we're starting to
> implement a new VFS system that unifies all of these systems into a
> single twisted.vfs module.

I highly recommend using twisted.web2.stream as the way you get access
to the contents of a "file". It's a *very* nice abstraction, and we will
probably be moving it, or something pretty similar, into
twisted.internet at some point.




From jarrod.roberson at gmail.com  Fri Apr  1 13:28:44 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 1 Apr 2005 13:28:44 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
Message-ID: <2389d473050401102867475fa6@mail.gmail.com>

I am refactoring and repacking all the ZeroConf / MulticastDNS stuff I
have seen and been re-writing to be a "Service" I want to be able to
start it from a .tac file.

I can't find any documenation of explict example of how to start it
using internet.MulticastServer()

here is what I am trying

<snip imports and other housekeeping code>

zc = zeroconf.DebugZeroConfService()
serviceCollection = service.IServiceCollection(application)
internet.MulticastServer(5353,
zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)

when I do this I get the

2005/04/01 13:25 EST [-] twisted.internet.error.CannotListenError:
Couldn't listen on any:5353: (48, 'Address already in use').

I tried

internet.MulticastServer(5353, zeroconf.IZeroConfFactory(zc),
listenMultiple=True).setServiceParent(serviceCollection)

but that throws this error

2005/04/01 13:26 EST [-] AttributeError: ZeroConfFactoryFromService
instance has no attribute 'makeConnection'

I have 4 TCP services running this way and I copied the Echo stuff
pretty directly ( see the naming convention even )

can someone tell me what the correct syntax / idiom should be?

-- If you don't know what you want, you probably need a nap.



From itamar at itamarst.org  Fri Apr  1 13:41:56 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Apr 2005 13:41:56 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
In-Reply-To: <2389d473050401102867475fa6@mail.gmail.com>
References: <2389d473050401102867475fa6@mail.gmail.com>
Message-ID: <1112380916.8541.35.camel@localhost.localdomain>

On Fri, 2005-04-01 at 13:28 -0500, jarrod roberson wrote:

> zc = zeroconf.DebugZeroConfService()
> serviceCollection = service.IServiceCollection(application)
> internet.MulticastServer(5353,
> zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)

Why are you passing a factory in? UDP and Multicast don't use factories.




From jarrod.roberson at gmail.com  Fri Apr  1 13:58:08 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 1 Apr 2005 13:58:08 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
In-Reply-To: <1112380916.8541.35.camel@localhost.localdomain>
References: <2389d473050401102867475fa6@mail.gmail.com>
	<1112380916.8541.35.camel@localhost.localdomain>
Message-ID: <2389d473050401105838e97760@mail.gmail.com>

On Apr 1, 2005 1:41 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Fri, 2005-04-01 at 13:28 -0500, jarrod roberson wrote:
> 
> > zc = zeroconf.DebugZeroConfService()
> > serviceCollection = service.IServiceCollection(application)
> > internet.MulticastServer(5353,
> > zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)
> 
> Why are you passing a factory in? UDP and Multicast don't use factories.
> 

because I am a UDP, Multicast newbie :-)

What would be the correct way to set this up, I want this to be a
"twisted" as as possible


-- 
-- If you don't know what you want, you probably need a na



From jarrod.roberson at gmail.com  Fri Apr  1 14:05:53 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 1 Apr 2005 14:05:53 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
In-Reply-To: <1112380916.8541.35.camel@localhost.localdomain>
References: <2389d473050401102867475fa6@mail.gmail.com>
	<1112380916.8541.35.camel@localhost.localdomain>
Message-ID: <2389d47305040111052906a101@mail.gmail.com>

On Apr 1, 2005 1:41 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Fri, 2005-04-01 at 13:28 -0500, jarrod roberson wrote:
> 
> > zc = zeroconf.DebugZeroConfService()
> > serviceCollection = service.IServiceCollection(application)
> > internet.MulticastServer(5353,
> > zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)
> 
> Why are you passing a factory in? UDP and Multicast don't use factories.

Ok what I am trying to do is make a ZeroConfService

I took Tim Allens code and added the ability to Respond to queries and
changed the Observers to Subscribers and some other things to make it
more of a Service than a stand alone server.

I have a TCP service with a factory and I want to derive the SRV
record priority from stats about the TCP Service based on its load, so
I want to dynamically build the responses, that is what the Responder
interface I have created is for.

I guess I just need some guidance on the correct "twisted" way to do
this, I want the implementation of the ZeroConf service to be
pluggable, that is the part that responds to the udp messageReceived()
method and I figured making that a Service I could put in the .tac was
the right way to do it.

Where am I going wrong?



From andrea at cpushare.com  Sun Apr  3 09:38:54 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sun, 3 Apr 2005 15:38:54 +0200
Subject: [Twisted-Python] pending fixes
Message-ID: <20050403133854.GF18213@g5.random>

Just as reminder, this is my pending patch against SVN. .disconnecting
can be added to all protocols or it can be renamed... (or we could use
hasattr in the meantime)

Index: Twisted/twisted/protocols/basic.py
===================================================================
--- Twisted/twisted/protocols/basic.py	(revision 13459)
+++ Twisted/twisted/protocols/basic.py	(working copy)
@@ -166,9 +166,23 @@
         """
         return error.ConnectionLost('Line length exceeded')
     
+class PauseProducer(object):
+    paused = False
 
+    def pauseProducing(self):
+        self.paused = True
+        self.transport.pauseProducing()
 
-class LineReceiver(protocol.Protocol):
+    def resumeProducing(self):
+        self.paused = False
+        self.transport.resumeProducing()
+        self.dataReceived('')
+
+    def stopProducing(self):
+        self.paused = True
+        self.transport.stopProducing()
+
+class LineReceiver(protocol.Protocol, PauseProducer):
     """A protocol that receives lines and/or raw data, depending on mode.
     
     In line mode, each line that's received becomes a callback to
@@ -188,7 +202,6 @@
     __buffer = ''
     delimiter = '\r\n'
     MAX_LENGTH = 16384
-    paused = False
     
     def clearLineBuffer(self):
         """Clear buffered data."""
@@ -279,21 +292,8 @@
         """
         return self.transport.loseConnection()
 
-    def pauseProducing(self):
-        self.paused = True
-        self.transport.pauseProducing()
 
-    def resumeProducing(self):
-        self.paused = False
-        self.dataReceived('')
-        self.transport.resumeProducing()
-
-    def stopProducing(self):
-        self.paused = True
-        self.transport.stopProducing()
-
-
-class Int32StringReceiver(protocol.Protocol):
+class Int32StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int32-prefixed strings.
 
     An int32 string is a string prefixed by 4 bytes, the 32-bit length of
@@ -314,7 +314,7 @@
         """Convert int32 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 3:
+        while len(self.recvd) > 3 and not self.paused and not self.transport.disconnecting:
             length ,= struct.unpack("!i",self.recvd[:4])
             if length > self.MAX_LENGTH:
                 self.transport.loseConnection()
@@ -331,7 +331,7 @@
         self.transport.write(struct.pack("!i",len(data))+data)
 
 
-class Int16StringReceiver(protocol.Protocol):
+class Int16StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int16-prefixed strings.
 
     An int16 string is a string prefixed by 2 bytes, the 16-bit length of
@@ -351,7 +351,7 @@
         """Convert int16 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 1:
+        while len(self.recvd) > 1 and not self.paused and not self.transport.disconnecting:
             length = (ord(self.recvd[0]) * 256) + ord(self.recvd[1])
             if len(self.recvd) < length+2:
                 break
Index: Twisted/twisted/lore/latex.py
===================================================================
--- Twisted/twisted/lore/latex.py	(revision 13459)
+++ Twisted/twisted/lore/latex.py	(working copy)
@@ -104,7 +104,7 @@
 
     baseLevel = 0
     try:
-        diaHack = not not os.popen('which dia').read()
+        diaHack = not not os.popen('which dia 2>/dev/null').read()
     except:
         # That's a no, then.
         diaHack = 0



From itamar at itamarst.org  Sun Apr  3 13:23:40 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Apr 2005 13:23:40 -0400
Subject: [Twisted-Python] pending fixes
In-Reply-To: <20050403133854.GF18213@g5.random>
References: <20050403133854.GF18213@g5.random>
Message-ID: <1112549020.7604.16.camel@localhost.localdomain>

On Sun, 2005-04-03 at 15:38 +0200, Andrea Arcangeli wrote:
> Just as reminder, this is my pending patch against SVN. .disconnecting
> can be added to all protocols or it can be renamed... (or we could use
> hasattr in the meantime)

Please add it to the issue tracker, that way you don't have to repost to
the list.




From foom at fuhm.net  Sun Apr  3 13:31:08 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 3 Apr 2005 13:31:08 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <E1DHz3j-0005im-00@wolfwood>
References: <E1DHz3j-0005im-00@wolfwood>
Message-ID: <66bc10801b1c0e7a006e41c53bf05376@fuhm.net>

On Apr 3, 2005, at 1:58 AM, Jp Calderone wrote:
> After a lengthy discussion, revert to previous threaded behavior wrt  
> registering as the IO thread

> Modified: trunk/twisted/internet/posixbase.py
> ======================================================================= 
> =======
> --- trunk/twisted/internet/posixbase.py	(original)
> +++ trunk/twisted/internet/posixbase.py	Sat Apr  2 23:58:11 2005
> @@ -155,7 +155,6 @@
>          ReactorBase.__init__(self)
>          if self.usingThreads or platformType == "posix":
>              self.installWaker()
> -        threadable.whenThreaded(threadable.registerAsIOThread)
>
>      def _handleSignals(self):
>          """Install the signal handlers for the Twisted event loop."""

You **do** realize this means isInIOThread always returns false after  
threading is enabled, if the reactor was started before threading was  
enabled, right?

Something like the following should be run in the test suite. It has to  
be in a separate process, though, to ensure it's in the incorrect  
state, so something needs to be done about passing in the reactor to  
run, also.

from twisted.python import threadable
from twisted.internet import reactor

def testIsInIOThread():
     print "1)", threadable.isInIOThread()
     threadable.init(1)
     print "2)", threadable.isInIOThread()
     reactor.crash()

reactor.callWhenRunning(testIsInIOThread)
reactor.run()

> @@ -202,10 +201,6 @@
>          self.startRunning(installSignalHandlers=installSignalHandlers)
>          self.mainLoop()
>
> -    def iterate(self, delay=0):
> -        threadable.registerAsIOThread()
> -        ReactorBase.iterate(self, delay)
> -
>      def mainLoop(self):
>          while self.running:
>              try:

iterate() is the external API, I think it, like startRunning, should  
also ensure the thread it's being called on is marked as the IO thread.

James




From exarkun at divmod.com  Sun Apr  3 14:50:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 03 Apr 2005 18:50:39 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <66bc10801b1c0e7a006e41c53bf05376@fuhm.net>
Message-ID: <20050403185039.13806.721459381.divmod.quotient.42496@ohm>

On Sun, 3 Apr 2005 13:31:08 -0400, James Y Knight <foom at fuhm.net> wrote:
>On Apr 3, 2005, at 1:58 AM, Jp Calderone wrote:
> > After a lengthy discussion, revert to previous threaded behavior wrt  
> > registering as the IO thread
> 
> > Modified: trunk/twisted/internet/posixbase.py
> > ======================================================================= 
> > =======
> > --- trunk/twisted/internet/posixbase.py	(original)
> > +++ trunk/twisted/internet/posixbase.py	Sat Apr  2 23:58:11 2005
> > @@ -155,7 +155,6 @@
> >          ReactorBase.__init__(self)
> >          if self.usingThreads or platformType == "posix":
> >              self.installWaker()
> > -        threadable.whenThreaded(threadable.registerAsIOThread)
> >
> >      def _handleSignals(self):
> >          """Install the signal handlers for the Twisted event loop."""
> 
> You **do** realize this means isInIOThread always returns false after  
> threading is enabled, if the reactor was started before threading was  
> enabled, right?

  Yes.  Fortunately this never actually happens.  When it becomes possible, we can think about fixing this behavior.

> 
> Something like the following should be run in the test suite. It has to  
> be in a separate process, though, to ensure it's in the incorrect  
> state, so something needs to be done about passing in the reactor to  
> run, also.
> 
> from twisted.python import threadable
> from twisted.internet import reactor
> 
> def testIsInIOThread():
>      print "1)", threadable.isInIOThread()
>      threadable.init(1)
>      print "2)", threadable.isInIOThread()
>      reactor.crash()
> 
> reactor.callWhenRunning(testIsInIOThread)
> reactor.run()

  Yes.  A unit test like that _would_ be nice...

> 
> > @@ -202,10 +201,6 @@
> >          self.startRunning(installSignalHandlers=installSignalHandlers)
> >          self.mainLoop()
> >
> > -    def iterate(self, delay=0):
> > -        threadable.registerAsIOThread()
> > -        ReactorBase.iterate(self, delay)
> > -
> >      def mainLoop(self):
> >          while self.running:
> >              try:
> 
> iterate() is the external API, I think it, like startRunning, should  
> also ensure the thread it's being called on is marked as the IO thread.

  Yes, however simply calling registerAsIOThread inside it is not a complete fix.  The understanding to which I came is that the previous incorrectness was preferable to the new incorrectness.

  Jp



From foom at fuhm.net  Sun Apr  3 19:40:32 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 3 Apr 2005 19:40:32 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <20050403185039.13806.721459381.divmod.quotient.42496@ohm>
References: <20050403185039.13806.721459381.divmod.quotient.42496@ohm>
Message-ID: <bc1988aed7952255de54e7993c24e2fd@fuhm.net>

On Apr 3, 2005, at 2:50 PM, Jp Calderone wrote:
>> isInIOThread
>   Yes.  Fortunately this never actually happens.  When it becomes 
> possible, we can think about fixing this behavior.

Funny, because that test program shows that it does happen. And, for me 
at least, it pretty much always happens. The reactor starts up in 
non-threaded mode and then becomes threaded later.

>> iterate
>   Yes, however simply calling registerAsIOThread inside it is not a 
> complete fix.  The understanding to which I came is that the previous 
> incorrectness was preferable to the new incorrectness.

Elaboration necessary.

James




From warner at lothar.com  Sun Apr  3 19:54:56 2005
From: warner at lothar.com (Brian Warner)
Date: Sun, 03 Apr 2005 16:54:56 -0700 (PDT)
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
Message-ID: <20050403.165456.53859753.warner@lothar.com>

>> Why are you passing a factory in? UDP and Multicast don't use factories.
>
> Ok what I am trying to do is make a ZeroConfService

It is worth pointing out that IP Multicast works in terms of _groups_. When
you are listening on a socket, you must specify both UDP port number and the
group id. (IPv4 groups are specified with an IP address in the "class D"
range, 224.foo.foo.foo). If you just listen on port 5353, you're listening
for packets directed at one of your node's unicast ip addresses. If you bind
it to a specified group (224.0.0.251 is probably the one you want), then you
get packets sent to that multicast group, and multiple programs on a single
host can listen on the same multicast group.

Itamar's mdns.py code in the sandbox[1] uses the following routine (in a
DatagramProtocol subclass) to set up the receiver:

    def startListening(self):
        reactor.listenMulticast(5353, self, maxPacketSize=1024,
                                listenMultiple=True)
        self.transport.joinGroup(MDNS_ADDRESS)
        self.transport.setTTL(255)
        self.transport.setLoopbackMode(False)

You'll probably need to do something similar.

cheers,
 -Brian


[1]: svn://svn.twistedmatrix.com/svn/Twisted/sandbox/itamar/mdns



From exarkun at divmod.com  Sun Apr  3 20:15:37 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 04 Apr 2005 00:15:37 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <bc1988aed7952255de54e7993c24e2fd@fuhm.net>
Message-ID: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>

On Sun, 3 Apr 2005 19:40:32 -0400, James Y Knight <foom at fuhm.net> wrote:
> [snip]
> 
> Elaboration necessary.
> 

  Attached.

  Jp
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: thread-disc.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050404/8bf9c708/attachment.txt 

From foom at fuhm.net  Sun Apr  3 23:52:34 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 3 Apr 2005 23:52:34 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
References: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
Message-ID: <742c34a430ed1a78daebcb852c37cad7@fuhm.net>

> [23:46] <exarkun> So, um, to back up and perhaps narrow scope slightly
> [23:46] <exarkun> The current code does the right thing, I think, 
> except when the platform lacks threads
> [23:46] <exarkun> it does more than it needs to, probably, but it 
> doesn't look like it ever does anything that's plain wrong
> [23:47] <exarkun> platforms that lack thread support need to just not 
> have registerAsIOThread called, or registerAsIOThread needs to be a 
> no-op on those platforms

It already is, and always has been. From The Source:

def registerAsIOThread():
     """Mark the current thread as responsable for I/O requests.
     """
     global threaded
     global ioThread
     if threaded:
         import thread
         ioThread = thread.get_ident()


> [23:48] <exarkun> Correction: registerAsIOThread in __init__ on a 
> thread-supporting platform is also sub-optimal now, as it forces the 
> import of the thread module when we may not actually need it.

But it doesn't. See above. It is *because* of the behavior of doing 
nothing when threadable.init(1) has not yet been called that 
whenThreaded(registerAsIOThread) is necessary.

> [23:54] <glyph> Yes, but having iterate() behave in random, 
> non-deterministic, broken ways in edge cases is preserving its current 
> behavior :)

So, the reasoning for re-breaking iterate() is that iterate is also 
broken in some other way, and thus it should remain broken in this 
regard too? How does that even make a bit of sense?

Of course, right now, the only place isInIOThread is ever used in 
twisted is in reactor's wakeUp function, and there, it does not matter 
(except for efficiency) that it will always return False. So, we could 
simplify isInIOThread to "return False" and call it a feature.

A better solution may be to get rid of all this mess, and just make it 
so that if the thread module is available, it is used. Forget the 
"threaded mode" nonsense, and just make threaded-or-not something that 
has to be determined once, and finally, at startup.

James




From gmcdonald at infocomp.com  Mon Apr  4 01:02:24 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Mon, 4 Apr 2005 15:02:24 +1000 
Subject: [Twisted-Python] Creating an NT Service for a twistd script
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4D04@XCHANGE>

Cory,

I did read your readme thoroughly and it only specifies the application of
the patch for py2exe version 0.5.4. As I am currently using 0.5.0 (i thought
that this fell within the py2exe 0.5+ category but perhaps i am mistaken) i
did not apply the patch. Is this what is causing the issue?

Thanks in advance,

Grant

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Cory Dodt
Sent: 01 April 2005 03:38
To: Twisted general discussion
Subject: Re: [Twisted-Python] Creating an NT Service for a twistd script


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Grant,

Been on vacation so I'm still catching up, sorry for the slow reply.  This
sounds like an unpatched py2exe.  Did you look at the README.txt in my
sandbox? There's a patch in there you need.  TH has already applied it to
py2exe's development codeline but there hasn't been a release yet.

C


Grant McDonald wrote:
| Hi All,
|
| I am receiving the following error when i run the <filename>ctl.exe
| generated with moonfallen's ntsvc module and py2exe:
|
| Traceback (most recent call last):
|   File "boot_service.py", line 21, in ?
| RuntimeError: No service classes found
|
| Can someone please point me in the right direction??
|
| Grant
|
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050404/047507b9/attachment.htm 

From foom at fuhm.net  Mon Apr  4 01:12:54 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 4 Apr 2005 01:12:54 -0400
Subject: [Twisted-Python] Stable release branch
Message-ID: <0335feace50ee1e9809e12884a439871@fuhm.net>

So I've volunteed to do backports from trunk to the stable (currently 
2.0.x) branch for important fixes. "Important" is up for discussion, 
but here's what I'm thinking:

Important means one of:
1) installer brokenness
2) fixes a regression
3) fixes nonfunctional new API

Also (and this is not really up for discussion):
1) patch must be small (and correct). Even if it meets one of the above 
criteria, if it is a large or non-obviously-correct change, I don't 
want to see it.
2) must not add APIs.
3) if it's been broken for a long time (e.g. in the 1.3 release), it 
can stand to be broken a little while longer.

I'll watch for things I think are appropriate, but, if anyone else 
wants to point out some svn revisions of changes they think would be 
appropriate, that's fine too.

Now, before people start suggesting that every change be backported 
(which obviously isn't going to happen), we probably ought to set a 
goal for the next "real" release (2-3 months?).

I expect the 2.0.1 release should go out this week sometime. I think 
win32 build fixes ought to land first, but that's about all I know of.

I'd also love to include the changes to the release scripts which will 
allow the version to exist in the __version__s in the SVN repository 
instead of being specified on the command-line by the person releasing. 
Having consistent versions is important. Someone just needs to write 
those changes first. However, that doesn't affect the released tarballs 
at all, so it's not really necessary for before-2.0.1.

Here's what I did so far:
> Log:
> Backports from trunk:
> 13307 (twisted/topfiles/README) - we support 2.4 too
> 13324 (twisted/internet/defer.py) - [947] Fix DeferredQueue 
> backlog/size limit.
> 13354 (twisted/plugins/__init__.py) - Correct maintainer address.
> 13355 (twisted/test/test_defer.py) - improvements to DeferredQueue 
> test case
> 13387 (setup.py) - add news to list of subprojects

James




From Henning.Ramm at mediapro-gmbh.de  Mon Apr  4 04:32:22 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 4 Apr 2005 10:32:22 +0200
Subject: [Twisted-Python] Looking for a simple file event driven loop
	usingTwisted
Message-ID: <F92274058556DE42B94B148EEFB9183949E697@exchange-03.suedkurier.de>

>I'm looking for some example code I can use to build an app from. I
>need to 'wait' or sleep for new data in a file. Then wake and process
>the data.

Find attached a Windows specific directory watcher;
it's not really what you asked for, but perhaps it's of use.
I can't guarantee it really does what it should - it looks
like, but the code isn't mature.

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dirwatcher.py
Type: application/octet-stream
Size: 3199 bytes
Desc: dirwatcher.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050404/7bfd7aeb/attachment.obj 

From daverz at gmail.com  Mon Apr  4 04:58:00 2005
From: daverz at gmail.com (Dave Cook)
Date: Mon, 4 Apr 2005 01:58:00 -0700
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using Twisted
In-Reply-To: <90151e5050331162679d3c7b@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
	<7a59f0250503252357594dd5de@mail.gmail.com>
	<90151e5050331162679d3c7b@mail.gmail.com>
Message-ID: <7a59f025050404015854d08f10@mail.gmail.com>

This version allows you to stop the event loop, to register a
callback, and to specify which stat items you want to watch.

Dave Cook
-------------- next part --------------
A non-text attachment was scrubbed...
Name: filewatcher.py
Type: application/octet-stream
Size: 1613 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050404/c86ee90e/attachment.obj 

From mvanaswegen at deloitte.co.za  Mon Apr  4 07:17:05 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Mon, 4 Apr 2005 13:17:05 +0200
Subject: [Twisted-Python] UDP File Copy
Message-ID: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>

Hi 
 
I'm busy writing a small P2P client with Twisted. The primary use will
be on a reliable local LAN segment.
I would like to use UDP to copy files and the client must be able to
accept multiple connections. I have 
not been able to find any example code via google, any suggestions ?
 
Regs
 

Marinus

 

Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050404/14d0e238/attachment.htm 

From exarkun at divmod.com  Mon Apr  4 08:53:12 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 04 Apr 2005 12:53:12 GMT
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
Message-ID: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>

On Mon, 4 Apr 2005 13:17:05 +0200, "van Aswegen, Marinus \(ZA - Johannesburg\)" <mvanaswegen at deloitte.co.za> wrote:
>Hi 
>  
> I'm busy writing a small P2P client with Twisted. The primary use will
> be on a reliable local LAN segment.
> I would like to use UDP to copy files and the client must be able to
> accept multiple connections. I have 
> not been able to find any example code via google, any suggestions ?
>  
> Regs
>  

  Use TCP instead.  UDP might be an optimization to make later (but probably not: I can push 11MB/sec over my LAN with TCP, UDP is not going to do much better).

  Jp



From Henning.Ramm at mediapro-gmbh.de  Mon Apr  4 09:38:04 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 4 Apr 2005 15:38:04 +0200
Subject: [Twisted-Python] cleanup at reactor.stop
Message-ID: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>

This is probably a stupid question, but I'm stuck...

I need to clean up some objects if (that is, before) reactor.stop is called.
Is there something like reactor.runAtShutdown() or how should I do this?


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From matt at pollenation.net  Mon Apr  4 10:00:52 2005
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 04 Apr 2005 15:00:52 +0100
Subject: [Twisted-Python] cleanup at reactor.stop
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>
Message-ID: <42514894.1030107@pollenation.net>

Henning.Ramm at mediapro-gmbh.de wrote:

>This is probably a stupid question, but I'm stuck...
>
>I need to clean up some objects if (that is, before) reactor.stop is called.
>Is there something like reactor.runAtShutdown() or how should I do this?
>
You can hook into the reactor by registering a system event callback. 
See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger, 
removeSystemEventTrigger and fireSystemEvent.

You may need to grep the Twisted code to find out all the events that 
are actually fired but the one you want is "shutdown".

- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From Henning.Ramm at mediapro-gmbh.de  Mon Apr  4 10:16:07 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 4 Apr 2005 16:16:07 +0200
Subject: [Twisted-Python] cleanup at reactor.stop
Message-ID: <F92274058556DE42B94B148EEFB9183949E69A@exchange-03.suedkurier.de>

>>Is there something like reactor.runAtShutdown() or how should 
>I do this?
>You can hook into the reactor by registering a system event callback. 
>See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger, 
>removeSystemEventTrigger and fireSystemEvent.
>
>You may need to grep the Twisted code to find out all the events that 
>are actually fired but the one you want is "shutdown".

Thank you. It works.
I just found these methods myself, but was not sure if they are the
right way. (I always get lost in the API docs - I find it strange to
look after internet.reactor at internet.interfaces.IReactorCore).

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From exarkun at divmod.com  Mon Apr  4 10:18:40 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 04 Apr 2005 14:18:40 GMT
Subject: [Twisted-Python] cleanup at reactor.stop
In-Reply-To: <42514894.1030107@pollenation.net>
Message-ID: <20050404141840.13806.508791127.divmod.quotient.44238@ohm>

On Mon, 04 Apr 2005 15:00:52 +0100, Matt Goodall <matt at pollenation.net> wrote:
>Henning.Ramm at mediapro-gmbh.de wrote:
> 
> >This is probably a stupid question, but I'm stuck...
> >
> >I need to clean up some objects if (that is, before) reactor.stop is called.
> >Is there something like reactor.runAtShutdown() or how should I do this?
> >
> You can hook into the reactor by registering a system event callback. 
> See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger, 
> removeSystemEventTrigger and fireSystemEvent.
> 
> You may need to grep the Twisted code to find out all the events that 
> are actually fired but the one you want is "shutdown".

  You can also use application services, which are implemented in terms of the system event trigger API.  A very incomplete look at services is present at:

  <http://twistedmatrix.com/documents/current/howto/application>

  To create your own kind of service, simply subclass twisted.application.service.Service.  To get shutdown notification, override stopService.  It may return a Deferred to delay shutdown if necessary.

  Jp



From umit.oztosun at gmail.com  Mon Apr  4 10:20:43 2005
From: umit.oztosun at gmail.com (=?ISO-8859-1?Q?=DCmit_=D6ztosun?=)
Date: Mon, 4 Apr 2005 17:20:43 +0300
Subject: [Twisted-Python] cleanup at reactor.stop
In-Reply-To: <42514894.1030107@pollenation.net>
References: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>
	<42514894.1030107@pollenation.net>
Message-ID: <d95439ec05040407205469604d@mail.gmail.com>

Adding something like:

reactor.addSystemEventTrigger('before', 'shutdown', methodToRunBeforeShutdown)

before running reactor.run() should do the work.

Regards,
Umit

> >This is probably a stupid question, but I'm stuck...
> >
> >I need to clean up some objects if (that is, before) reactor.stop is called.
> >Is there something like reactor.runAtShutdown() or how should I do this?
> >
> You can hook into the reactor by registering a system event callback.
> See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger,
> removeSystemEventTrigger and fireSystemEvent.
> 
> You may need to grep the Twisted code to find out all the events that
> are actually fired but the one you want is "shutdown".



From corydodt at twistedmatrix.com  Mon Apr  4 11:19:15 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Mon, 04 Apr 2005 08:19:15 -0700
Subject: [Twisted-Python] Creating an NT Service for a twistd script
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4D04@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4D04@XCHANGE>
Message-ID: <42515AF3.7000009@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sorry, I guess the README is unclear.  You will need to apply the patch to any
0.5.x version, 0.5.4 being the latest release.  (I've also only the tested the
patch on 0.5.4 so ymmv.)

C


Grant McDonald wrote:
| Cory,
|
| I did read your readme thoroughly and it only specifies the application
| of the patch for py2exe version 0.5.4. As I am currently using 0.5.0 (i
| thought that this fell within the py2exe 0.5+ category but perhaps i am
| mistaken) i did not apply the patch. Is this what is causing the issue?
|
| Thanks in advance,
|
| Grant
|
| -----Original Message-----
| From: twisted-python-bounces at twistedmatrix.com
| [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Cory Dodt
| Sent: 01 April 2005 03:38
| To: Twisted general discussion
| Subject: Re: [Twisted-Python] Creating an NT Service for a twistd script
|
|
| -----BEGIN PGP SIGNED MESSAGE-----
| Hash: SHA1
|
| Hi Grant,
|
| Been on vacation so I'm still catching up, sorry for the slow reply.  This
| sounds like an unpatched py2exe.  Did you look at the README.txt in my
| sandbox? There's a patch in there you need.  TH has already applied it to
| py2exe's development codeline but there hasn't been a release yet.
|
| C
|
|
| Grant McDonald wrote:
| | Hi All,
| |
| | I am receiving the following error when i run the <filename>ctl.exe
| | generated with moonfallen's ntsvc module and py2exe:
| |
| | Traceback (most recent call last):
| |   File "boot_service.py", line 21, in ?
| | RuntimeError: No service classes found
| |
| | Can someone please point me in the right direction??
| |
| | Grant
| |
| |
|
|
|
| Important notice: This message is intended for the individual(s) and
| entity(s) addressed. The information contained in this transmission and
| any attached, may be confidential and may also be the subject of legal
| privilege, public interest immunity or legal professional privilege. Any
| review, retransmission, dissemination or other use of, taking of any
| action in reliance upon this information by person or entities other
| than the recipient is prohibited and requires authorization from the
| sender. If you are not the addressee indicated in this message (or
| responsible for delivery of the message to such person) you may not copy
| or deliver this message to anyone. In such cases you should destroy this
| message and kindly notify the sender by reply email.
|
| WARNING: Although Infocomp has taken reasonable precautions so that no
| viruses are present in this e-mail, the company cannot accept
| responsibility for any loss or damage arising from the use of e-mail
| attachments.
|
|
| ------------------------------------------------------------------------
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCUVry3A5SrXAiHQcRAqFAAKCX4VN40XEN86YuZRz2YvwrIKIVWACdG+h3
9ZPCZays2xMxD/SXwNpnzc8=
=xaBR
-----END PGP SIGNATURE-----



From glyph at divmod.com  Mon Apr  4 19:03:36 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 04 Apr 2005 19:03:36 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <742c34a430ed1a78daebcb852c37cad7@fuhm.net>
References: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
	<742c34a430ed1a78daebcb852c37cad7@fuhm.net>
Message-ID: <4251C7C8.8050904@divmod.com>

James Y Knight wrote:

> So, the reasoning for re-breaking iterate() is that iterate is also
> broken in some other way, and thus it should remain broken in this
> regard too? How does that even make a bit of sense?

iterate() is broken as an API.  Without even going into the problems 
with implementing it on a proactor, how does one determine when to start 
and stop services in a reactor that we one is calling .iterate() on? 
What happens when you call .stop()?  .crash()?  Do we need to invent an 
external status API so that the .iterate()-caller is "on their honor" to 
stop running at the appropriate time?  Without sensible semantics for 
starting and stopping services, you can't start and stop the thread pool 
reliably, and, poof, you can't do anything useful with threads.  These 
are the least of our problems.

This is iterate() as an _external_ API.  Internally, .doIteration() 
makes perfect sense for most reactors.  The original use-case for 
.iterate() was to support screen-painting APIs, such as in a 3D game - 
perhaps reactors should instead have a 'callAsOftenAsPossible(callable)' 
method to support that instead.  (callLater is a bit too expensive, I 
think, and besides it doesn't work when the FPU is in single-precision 
mode, as it is when running within a process like DirectX or certain 
proprietary openGL drivers on Windows).  Another option is for such a 
graphically intensive application subclass one of the reactors and add a 
  frame-drawing hook in doIteration.

Does someone with a real use-case want to come forward? :)

> A better solution may be to get rid of all this mess, and just make
> it so that if the thread module is available, it is used. Forget the
>  "threaded mode" nonsense, and just make threaded-or-not something
> that has to be determined once, and finally, at startup.

The rationale for having this mess in the first place is that importing
the 'thread' module slows Python down by about 30%, even if you don't
actually run any threads.  Originally Twisted could run without
importing 'thread' at all even on a threaded platform - if we are going
to make the default resolver be threaded, then it's not clear how we
would restore that feature without leaving this mess intact and making
sure that installing the chosen resolver is done very early in the 
process's lifetime.

I'm open to other suggestions though.  I definitely don't like what 
we've got, and I don't think it works properly.



From foom at fuhm.net  Mon Apr  4 20:28:55 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 4 Apr 2005 20:28:55 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <4251C7C8.8050904@divmod.com>
References: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
	<742c34a430ed1a78daebcb852c37cad7@fuhm.net>
	<4251C7C8.8050904@divmod.com>
Message-ID: <37a477ea611993a9fadea43ebe718b40@fuhm.net>

On Apr 4, 2005, at 7:03 PM, Glyph Lefkowitz wrote:
> The rationale for having this mess in the first place is that importing
> the 'thread' module slows Python down by about 30%, even if you don't
> actually run any threads.  Originally Twisted could run without
> importing 'thread' at all even on a threaded platform - if we are going
> to make the default resolver be threaded, then it's not clear how we
> would restore that feature without leaving this mess intact and making
> sure that installing the chosen resolver is done very early in the 
> process's lifetime.

(summarized conversation, many lines cut):
[19:56] <foom> exarkun: how do you demonstrate that python slows down 
if you import thread?
[19:56] <foom> python -c 'import thread; import test.pystone; 
test.pystone.main()'
[19:56] <foom> doesn't show any slowdown vs not import thread'ing
[19:57] * exarkun tries some stuff
[20:13] <foom> it *does* slow down if you actually call 
thread.start_new_thread(lambda:0, ())
[20:14] <foom> on a new system, ever so slightly
[20:14] <foom> on an old system, a lot
[20:15] <foom> 31250 vs 17668 pystones on my RH73 system running py2.2
[20:15] <foom> 52631 vs 49504 pystones on my FC3 system py2.3
[20:16] <foom> 57471 vs 56179 pystones (on FC3 py2.4)
[20:18] <exarkun> a previous point release of 2.2 or 2.3 might have 
moved the PyEval_InitThreads() from threadmodule's init to 
start_new_thread
[20:21] <exarkun> hmm, no
[20:21] <exarkun> PyEval_InitThreads has been in start_new_thread for 8 
years :)
[20:22] <exarkun> hrm
[20:22] <exarkun> I suppose that doesn't tell us anything about whether 
another call to it was recently remove from the init function though
[20:27] <foom> exarkun: Instead, I'll run pystone on python1.5.2 and 
have the same behavior
[20:27] <foom> exarkun: and conclude that it's always been like that


Conclusions:
1) We do not need to worry about importing the thread module slowing 
anything down.
2) We do not need to worry about using the thread module slowing 
anything down, on modern systems.

Therefore, the rationale for the mess is invalid, and the mess can go 
away.

James




From anthony at interlink.com.au  Tue Apr  5 03:35:17 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 5 Apr 2005 17:35:17 +1000
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
Message-ID: <200504051735.17511.anthony@interlink.com.au>

On Monday 04 April 2005 22:53, Jp Calderone wrote:
>   Use TCP instead.  UDP might be an optimization to make later (but
> probably not: I can push 11MB/sec over my LAN with TCP, UDP is not going to
> do much better).

In the context of the old 'fsp' transfer program, I think it was Robert Elz 
who made the comment: "Those who do not understand TCP are doomed
to repeat it".

There are times when a UDP-based protocol makes sense. File transfer
almost certainly isn't one of them.

-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From melirizarry at adelphia.net  Tue Apr  5 10:25:43 2005
From: melirizarry at adelphia.net (Mel Irizarry)
Date: Tue, 05 Apr 2005 07:25:43 -0700
Subject: [Twisted-Python] simpleclient.py exception
Message-ID: <42529FE7.4090604@adelphia.net>

Do I have something missing or misconfigured?  When I run 
simpleclient.py I get this:

Server said: hello, world!
connection lost
Connection lost - goodbye!
Traceback (most recent call last):
  File "simpleclient.py", line 52, in ?
    main()
  File "simpleclient.py", line 48, in main
    reactor.run()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 200, in run
    self.mainLoop()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 208, in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 533, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 389, in _continueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: unsubscriptable object



-- 
Best Regards,

Mel Irizarry

-----------------------------
I can't go to school 'cause I ain't got a gun
I ain't got a gun 'cause I ain't got a job
I can't get a job 'cause I can't go to school

Lost in America - Alice Cooper




From jarrod.roberson at gmail.com  Tue Apr  5 11:14:55 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Tue, 5 Apr 2005 11:14:55 -0400
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <200504051735.17511.anthony@interlink.com.au>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
Message-ID: <2389d47305040508142bf4baf9@mail.gmail.com>

On Apr 5, 2005 3:35 AM, Anthony Baxter <anthony at interlink.com.au> wrote:
> On Monday 04 April 2005 22:53, Jp Calderone wrote:
> >   Use TCP instead.  UDP might be an optimization to make later (but
> > probably not: I can push 11MB/sec over my LAN with TCP, UDP is not going to
> > do much better).
> 
> In the context of the old 'fsp' transfer program, I think it was Robert Elz
> who made the comment: "Those who do not understand TCP are doomed
> to repeat it".
> 
> There are times when a UDP-based protocol makes sense. File transfer
> almost certainly isn't one of them.
> 

the only time that UDP is really appliciable for file transfer is when
you are doing Multicast AND Reliable Multicast with Foward Error
Correction and other techniques. This is a rare case on the INTERNET
since very few routers still support Multicast.

Intra-net where you are broadcasting updates or patches to a cluster
of machines it makes since, but for peer-to-peer it just doesn't reap
any benefits on the internet proper.

-- 
If you don't know what you want, you probably need a nap.



From solipsis at pitrou.net  Tue Apr  5 11:26:44 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 05 Apr 2005 17:26:44 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <2389d47305040508142bf4baf9@mail.gmail.com>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
Message-ID: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>


> Intra-net where you are broadcasting updates or patches to a cluster
> of machines it makes since, but for peer-to-peer it just doesn't reap
> any benefits on the internet proper.

You are wrong, UDP is more and more adopted by end-user P2P software
because of its ability to transparently go through - in and out - many
types of NAT devices (which are themselves more and more popular among
home users). Incoming TCP traffic, on the other hand, often needs to be
specifically enabled on the NAT box.

For juicy details, you can read the RFC for the STUN protocol (Simple
Traversal of User Datagram Protocol - UDP - Through Network Address
Translators - NATs):
http://www.faqs.org/rfcs/rfc3489.html

Regards

Antoine.





From foom at fuhm.net  Tue Apr  5 11:34:17 2005
From: foom at fuhm.net (James Y Knight)
Date: Tue, 5 Apr 2005 11:34:17 -0400
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <2125f401b892a1f1f349cc45da563c53@fuhm.net>

Bug summary
______________________
Since 2005-03-28 20:45:26.730000:
  Bugs opened: 17   Bugs closed: 18   Total open bugs: 332 (-1)
   Urgent: 3 (+0)
   Bug: 134 (+2)
   Feature: 126 (-4)
   Wish: 69 (+1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[CORE, TRIAL] BUG: Raising FailTest doesn't always fail a test  (6 days 
ago)
        http://twistedmatrix.com/bugs/issue955 opened by exarkun

                     ==== Bug ====
twistd running as daemon sets umask to 0077  (11 minutes ago)
        http://twistedmatrix.com/bugs/issue966 opened by thomasvs

[WEBSITE] No link to Twisted 2 installer for win32 on website  (3 hours 
ago)
        http://twistedmatrix.com/bugs/issue964 opened by ash

[WEBSITE] No download link on website and usability issue with old 
download link  (3 hours ago)
        http://twistedmatrix.com/bugs/issue965 opened by ash

[DOCUMENTATION, LORE] some PB howtos have empty examples  (7 hours ago)
        http://twistedmatrix.com/bugs/issue963 opened by warner

[CORE, TRIAL] trial does not treat pending calls in the thread queue as 
a test-failing condition  (yesterday)
        http://twistedmatrix.com/bugs/issue962 opened by exarkun

[CORE] BUG: twisted.plugin.getCache() incorrectly tries to rewrite 
cache file too frequently  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue958 opened by exarkun

[CORE] BUG: exceptions in setUpClass cause trial to exit prematurely  
(3 days ago)
        http://twistedmatrix.com/bugs/issue960 opened by exarkun

Importing twisted.protocols.dns blocks for /dev/random  (2 months ago)
CLOSED http://twistedmatrix.com/bugs/issue856 opened by ben

[CORE] BUG: Qt Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testCallInNextIteration  
(5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue957 opened by exarkun

[CORE] BUG: QT Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testWakeUp  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue954 opened by exarkun

[DOCUMENTATION, LORE, WEB] Lore emits warnings when processing new web 
howto doc  (5 days ago)
        http://twistedmatrix.com/bugs/issue956 opened by exarkun

[RELEASE MANAGEMENT] Better error message when missing twisted package  
(6 days ago)
        http://twistedmatrix.com/bugs/issue953 opened by ianb

                     ==== Feature ====
[CORE, DOCUMENTATION] Document twisted.python.log  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue961 opened by exarkun

[DEFERRED, DOCUMENTATION] Document correct style for setting timeouts  
(7 days ago)
CLOSED http://twistedmatrix.com/bugs/issue952 opened by hypatia

[DOCUMENTATION, WEBSITE] No PDF or PS versions of new docs on the 
website  (1 week ago)
        http://twistedmatrix.com/bugs/issue948 opened by ash

                     ==== Wish ====
[DOCUMENTATION, WEBSITE] Generate documentation from lore automatically 
after checkins  (4 days ago)
        http://twistedmatrix.com/bugs/issue959 opened by hypatia


Bugs Closed
______________________
                     ==== Bug ====
[PATCH] callRemote raises AttributeError when remote method does not 
exist, conflicts with possible AttributeError inside method  (3 months 
ago)
        http://twistedmatrix.com/bugs/issue843 opened by thomasvs, 
closed by jml

[CORE] BUG: twisted.plugin.getCache() incorrectly tries to rewrite 
cache file too frequently  (4 days ago)
        http://twistedmatrix.com/bugs/issue958 opened by exarkun, closed 
by exarkun

[CORE] [PATCH] for exception in TCP.__repr__  (2 months ago)
        http://twistedmatrix.com/bugs/issue869 opened by zooko, closed 
by exarkun

[DEFERRED, DOCUMENTATION] Explain chaining callbaclks and errbacks 
better  (11 months ago)
        http://twistedmatrix.com/bugs/issue596 opened by hypatia, closed 
by hypatia

twisted.python.rebuild fails if python 2.4's decimal module is imported 
  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue921 opened by marienz, closed 
by hypatia

[FTP] twisted.protocols.ftp list() and nlst() functions broken  (7 
months ago)
        http://twistedmatrix.com/bugs/issue690 opened by doko, closed by 
spiv

Importing twisted.protocols.dns blocks for /dev/random  (2 months ago)
        http://twistedmatrix.com/bugs/issue856 opened by ben, closed by 
tekNico

[CORE] BUG: Qt Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testCallInNextIteration  
(5 days ago)
        http://twistedmatrix.com/bugs/issue957 opened by exarkun, closed 
by exarkun

[CORE] BUG: QT Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testWakeUp  (6 days ago)
        http://twistedmatrix.com/bugs/issue954 opened by exarkun, closed 
by exarkun

TypeError in serialize methods of twisted.xish.domish (patch included)  
(1 week ago)
        http://twistedmatrix.com/bugs/issue946 opened by syt, closed by 
ralphm

                     ==== Feature ====
[TRIAL] twisted.enterprise.adbapi.ConnectionPool() shouldn't require 
.start()  (3 months ago)
        http://twistedmatrix.com/bugs/issue840 opened by edsuom, closed 
by exarkun

[CORE] Allow passing --uid and --gid to twistd  (6 months ago)
        http://twistedmatrix.com/bugs/issue726 opened by itamarst, 
closed by exarkun

[PATCH] Interface support for adbapi.ConnectionPool  (3 months ago)
        http://twistedmatrix.com/bugs/issue839 opened by ww, closed by 
exarkun

.buildProtocol((host, port)) is unsuitable for e.g. UNIX domain 
sockets; use t.i.address  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue915 opened by Tv, closed by 
exarkun

[CORE, DOCUMENTATION] Document twisted.python.log  (2 days ago)
        http://twistedmatrix.com/bugs/issue961 opened by exarkun, closed 
by exarkun

[DOCUMENTATION] There should be a doc on how to write tests of Twisted 
code  (1 month ago)
        http://twistedmatrix.com/bugs/issue896 opened by spiv, closed by 
hypatia

[DEFERRED, DOCUMENTATION] Document correct style for setting timeouts  
(7 days ago)
        http://twistedmatrix.com/bugs/issue952 opened by hypatia, closed 
by hypatia

                     ==== Wish ====
ident protocol implementation  (19 months ago)
        http://twistedmatrix.com/bugs/issue233 opened by itamarst, 
closed by exarkun




From jarrod.roberson at gmail.com  Tue Apr  5 11:59:26 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Tue, 5 Apr 2005 11:59:26 -0400
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <2389d473050405085954c71c39@mail.gmail.com>

I was not arguing its popularity, I was arguing its added complexity,
which is negligable.
None of my equipment that is doing NAT requires any special
configuration to enable TCP.
Maybe old equipement but I don't have anything less than a year old.

I don't see the benefit outside of extremely low-latency game
requirements of data that is constantly changing anyway. For REILABLE
file transfer it gets complicated quickly which is like the othe
person implied that if you are re-implementing all the TCP features in
software over UDP why do it. I don't buy the NAT arguement as enough
of a reason to justify the complexity.


-- 
If you don't know what you want, you probably need a nap.



From tomc74 at gmail.com  Tue Apr  5 15:31:23 2005
From: tomc74 at gmail.com (Tom Carmichael)
Date: Tue, 5 Apr 2005 15:31:23 -0400
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <332b7c5f05040512317e05717c@mail.gmail.com>

UDP has it's place, but typically vanilla file transfer isn't it. 

UDP traffic typically is harder to NAT rather than easier.  Since it
is a stateless protocol, what is meant by a 'reply'?  How do you keep
a forward and reverse translation table for the communications?  The
answers to these questions are to wrap these 'stateful' UDP sessions
inside a psuedo-connection.  In otherwords, simulate TCP behavior.

The reality of today's internet is that NAT is prevalent, especially
in home use.  There simply isn't enough IP space in IPv4 to accomodate
everybody, so we are left with dealing with the mess that RFC 1918
addressing, NAT and all the other work arounds have given us.  STUN
came out of trying to get VoIP working in a NATed environment.  Since
the latency demands of any VoIP application is fairly extreme and a
single lost packet isn't detrimental to the data, UDP makes sense for
that application.  To get it to function in a NAT world however
requires some intellegence in software to determine that NAT exists,
how it functions and what to do about it.  Enter STUN.

While you might be able to squeeze some extra speed out of UDP for P2P
apps, it isn't without complexity costs somewhere.  You basically have
the options of ignoring packet loss (VoIP/Skype) or implementing your
own packet reliability mechanism (TFTP) within
the application.  Something like BitTorrent could use UDP, since it is
sending bits of data
from many sources to many sources.  (It doesn't use UDP, it uses TCP.)
 UDP makes a lot of sense for one-to-many or many-to-many
relationships for networking traffic.  That's what multicast is all
about, which uses UDP.  Unfortunately, it's not internet routable so
isn't a good general solution to P2P traffic.

Tom

On Apr 5, 2005 11:26 AM, Antoine Pitrou <solipsis at pitrou.net> wrote:
> 
> > Intra-net where you are broadcasting updates or patches to a cluster
> > of machines it makes since, but for peer-to-peer it just doesn't reap
> > any benefits on the internet proper.
> 
> You are wrong, UDP is more and more adopted by end-user P2P software
> because of its ability to transparently go through - in and out - many
> types of NAT devices (which are themselves more and more popular among
> home users). Incoming TCP traffic, on the other hand, often needs to be
> specifically enabled on the NAT box.
> 
> For juicy details, you can read the RFC for the STUN protocol (Simple
> Traversal of User Datagram Protocol - UDP - Through Network Address
> Translators - NATs):
> http://www.faqs.org/rfcs/rfc3489.html
> 
> Regards
> 
> Antoine.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From alengarbage at yahoo.com  Tue Apr  5 19:13:36 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Tue, 5 Apr 2005 16:13:36 -0700 (PDT)
Subject: [Twisted-Python] DeferredList and errbacks
Message-ID: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>


  I just noticed [what appears to me to be] a
contradiction in the twisted documentation.  The
"Using Deferreds" howto [1] says, "A standard
DeferredList will never call errback," while the
"Twisted FAQ" [2] states, "Always add errbacks!" in
response to the question, "My Deferred or DeferredList
never fires, so my program just mysteriously hangs!
What's wrong?"

  So, which is it?

  I suppose what this is getting at is that each
deferred in a DeferredList should have an errback
attached separately, but this isn't super-clear to me.
Is this the right way to interpret the above
statements?

  thanks,
  Lenny G.


[1]
http://twistedmatrix.com/documents/current/howto/defer
[2] http://twistedmatrix.com/documents/current/howto/faq#auto19

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From andrew-twisted at puzzling.org  Tue Apr  5 20:02:12 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 10:02:12 +1000
Subject: [Twisted-Python] DeferredList and errbacks
In-Reply-To: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>
References: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>
Message-ID: <20050406000212.GE7030@frobozz>

On Tue, Apr 05, 2005 at 04:13:36PM -0700, Lenny G Arbage wrote:
> 
>   I just noticed [what appears to me to be] a
> contradiction in the twisted documentation.  The
> "Using Deferreds" howto [1] says, "A standard
> DeferredList will never call errback," while the
> "Twisted FAQ" [2] states, "Always add errbacks!" in
> response to the question, "My Deferred or DeferredList
> never fires, so my program just mysteriously hangs!
> What's wrong?"
> 
>   So, which is it?
> 
>   I suppose what this is getting at is that each
> deferred in a DeferredList should have an errback
> attached separately, but this isn't super-clear to me.
> Is this the right way to interpret the above
> statements?

By default, DeferredList waits for all its Deferreds to fire (with a result
or an error), and returns a big list of results of the form: 
   [(success_bool, value), (success_bool, value), ...]

Where 'success_bool' is True if the corresponding Deferred succeeded (i.e.
fired a callback), and False if it failed (i.e. fired an errback).  'value'
will be a result or a Failure instance accordingly.  So a standard
DeferredList will never call errback, because it includes errors in the
result passed to its callback.

Error handling in this case could be handled by the user of the
DeferredList, because it would have access to any underlying failures via
the callback.  But you're correct, the original deferreds would still need
errbacks attached -- or pass consumeErrors=True to DeferredList, and it will
do this for you.

And of course, the situation is a bit different again if you pass
fireOnOneErrback=True...

You're right that the docs are a bit confusing here.  Please file a bug
about it at http://twistedmatrix.com/bugs.  The "Other Behaviours" section
of http://twistedmatrix.com/documents/current/howto/defer tries to address
this, but perhaps we could do better.

-Andrew.




From matt.feifarek at gmail.com  Tue Apr  5 20:24:06 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Tue, 5 Apr 2005 20:24:06 -0400
Subject: [Twisted-Python] FAMd and Reactor integration
Message-ID: <6fb6dbfe050405172440dd107e@mail.gmail.com>

Hello.

I'm interested in using FAM/FAMd on Linux and to have its events
noticed by a twisted reactor.

I did some googling, but didn't find much.


Has anyone done this, or does anyone have any pointers on where to
begin my research?

Thanks.



From matt.feifarek at gmail.com  Tue Apr  5 20:43:16 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Tue, 5 Apr 2005 20:43:16 -0400
Subject: [Twisted-Python] shedding root
Message-ID: <6fb6dbfe050405174333b032d5@mail.gmail.com>

I've seen how the plugins created by mktap can shed root and after
binding to a port, and run as an unprivileged user...

I'd like to do this in my twisted code, but my app isn't structured as
a twisted "plugin". How can I manipulate the reactor (or whatever I
need to tweak) to drop root after binding to say, port 80?

I tried using standard python os.setuid() etc. but it just locked up
the reactor.

I looked in the API for useful material, but I was unsuccessful.

Thanks!



From andrew-twisted at puzzling.org  Tue Apr  5 21:17:09 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 11:17:09 +1000
Subject: [Twisted-Python] shedding root
In-Reply-To: <6fb6dbfe050405174333b032d5@mail.gmail.com>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
Message-ID: <20050406011709.GF7030@frobozz>

On Tue, Apr 05, 2005 at 08:43:16PM -0400, Matt Feifarek wrote:
> I've seen how the plugins created by mktap can shed root and after
> binding to a port, and run as an unprivileged user...
> 
> I'd like to do this in my twisted code, but my app isn't structured as
> a twisted "plugin". How can I manipulate the reactor (or whatever I
> need to tweak) to drop root after binding to say, port 80?

You can use twistd without using plugins.  See
http://twistedmatrix.com/projects/core/documentation/howto/application.html.
In fact, mktap and plugins are almost never useful any more.

> I tried using standard python os.setuid() etc. but it just locked up
> the reactor.
> 
> I looked in the API for useful material, but I was unsuccessful.

The place to look would be in twisted.application, but it's probably best to
use twistd -y, as described in the doc I linked.

-Andrew.




From golux at comcast.net  Tue Apr  5 21:33:28 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 05 Apr 2005 21:33:28 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <20050406011709.GF7030@frobozz>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<20050406011709.GF7030@frobozz>
Message-ID: <42533C68.4000402@comcast.net>

Andrew Bennetts wrote:
> You can use twistd without using plugins.  See
> http://twistedmatrix.com/projects/core/documentation/howto/application.html.
> In fact, mktap and plugins are almost never useful any more.
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Whoa.  If true, that sure doesn't come out in the docs.
The link that you reference here says:

"There are many ways in which your code will be called by
various parts of the Twisted framework by the time you're
done. The initial one we're going to focus on here is a
plug-in for the mktap utility."

So although it's almost never useful, let's focus on a
plug-in for the mktap utility.  That's cute.

- Steve



From foom at fuhm.net  Tue Apr  5 22:23:55 2005
From: foom at fuhm.net (James Y Knight)
Date: Tue, 5 Apr 2005 22:23:55 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <42533C68.4000402@comcast.net>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<20050406011709.GF7030@frobozz> <42533C68.4000402@comcast.net>
Message-ID: <04613f98cea3464224e1d2fa6a64ea4a@fuhm.net>


On Apr 5, 2005, at 9:33 PM, Stephen Waterbury wrote:

> Whoa.  If true, that sure doesn't come out in the docs.
> The link that you reference here says:
>
> "There are many ways in which your code will be called by
> various parts of the Twisted framework by the time you're
> done. The initial one we're going to focus on here is a
> plug-in for the mktap utility."
>
> So although it's almost never useful, let's focus on a
> plug-in for the mktap utility.  That's cute.

That intro sure is misleading! The rest of the document doesn't mention 
mktap or plug-ins at all and in fact does document the currently 
recommended best practices. Pretend that first paragraph didn't exist.

James




From matt.feifarek at gmail.com  Tue Apr  5 23:45:10 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Tue, 5 Apr 2005 23:45:10 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <20050406021640.GG7030@frobozz>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<20050406011709.GF7030@frobozz>
	<6fb6dbfe050405182553bc3782@mail.gmail.com>
	<20050406021640.GG7030@frobozz>
Message-ID: <6fb6dbfe05040520457edc6d9c@mail.gmail.com>

Thank you for both suggestions! Very useful!



From mvanaswegen at deloitte.co.za  Wed Apr  6 02:47:28 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Wed, 6 Apr 2005 08:47:28 +0200
Subject: [Twisted-Python] UDP File Copy
Message-ID: <B2ED2925358BE644B40D37F9E01ECE147B47BF@zajnb0406.za.deloitte.com>

My original motivation was to do "fast" file copies on the local LAN via
UDP.
Sure I would have to build some additional checking but I anticipate
that I would
still get better tx rates than TCP. However from a design perspective, I
would
also like to provide the ability to send files via the Internet.
Therefore
I agree TCP would be the better option. Does anyone have a good TCP file
copy class ?
I'd like to be able to handle multiple file tx's ... 

Marinus


Date: Tue, 05 Apr 2005 17:26:44 +0200
From: Antoine Pitrou <solipsis at pitrou.net>
Subject: Re: [Twisted-Python] UDP File Copy
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<1112714804.13160.8.camel at p-dhcp-333-72.rd.francetelecom.fr>
Content-Type: text/plain


> Intra-net where you are broadcasting updates or patches to a cluster
> of machines it makes since, but for peer-to-peer it just doesn't reap
> any benefits on the internet proper.

You are wrong, UDP is more and more adopted by end-user P2P software
because of its ability to transparently go through - in and out - many
types of NAT devices (which are themselves more and more popular among
home users). Incoming TCP traffic, on the other hand, often needs to be
specifically enabled on the NAT box.

For juicy details, you can read the RFC for the STUN protocol (Simple
Traversal of User Datagram Protocol - UDP - Through Network Address
Translators - NATs):
http://www.faqs.org/rfcs/rfc3489.html

Regards

Antoine.
Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.



From andrew-twisted at puzzling.org  Wed Apr  6 02:58:33 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 16:58:33 +1000
Subject: [andrew-twisted@puzzling.org: Re: [Twisted-Python] shedding root]
Message-ID: <20050406065833.GK7030@frobozz>

Matt forgot to CC the list (then so did I).

----- Forwarded message from Andrew Bennetts <andrew-twisted at puzzling.org> -----

Date: Wed, 6 Apr 2005 12:16:40 +1000
From: Andrew Bennetts <andrew-twisted at puzzling.org>
To: Matt Feifarek <matt.feifarek at gmail.com>
Subject: Re: [Twisted-Python] shedding root
User-Agent: Mutt/1.5.6+20040907i

On Tue, Apr 05, 2005 at 09:25:17PM -0400, Matt Feifarek wrote:
> Thanks.
> 
> For some boring reasons, I can't really structure my whole app as a
> twisted app; I just need some little  twisted bits.
> 
> It seems that it's hard to do that; you really have to drink the whole
> kool-aid to use twisted.

It's not too hard, it's just not particularly visibly documented, because
it's not the usual case.

twistd uses twisted.application.  You'll want to do something like:

    from twisted.application import service
    from twisted.scripts.twistd import shedPrivileges
    from twisted.internet import reactor
    import mymodule

    app = service.Application('foo')
    myservice = mymodule.MyService(...)
    myservice.setServiceParent(app)

    service.IService(app).privilegedStartService()
    shedPrivileges(euid, uid, gid)
    service.IService(app).startService()
    reactor.addSystemEventTrigger('before', 'shutdown',
                                  service.IService(app).stopService)
    reactor.run()

Where MyService is a subclass of service.Service that overrides startService
and privilegedStartService.  You can attach any number of these to the
service.Applicaiton with setServiceParent.  Basically, this is the same as
you'd do in a .tac file, followed by direct calls to privilegedStartService,
shedPrivileges, startService, etc, rather than relying on twistd to do them.

Services in twisted.application.internet, such as TCPService, already define
appropriate privilegedStartService methods.

If all you need is allowing non-root users to bind to privileged ports, you
might find the authbind utility from debian to be a useful way to leave your
code ignorant of these matters.

-Andrew.


----- End forwarded message -----



From solipsis at pitrou.net  Wed Apr  6 04:37:54 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 06 Apr 2005 10:37:54 +0200
Subject: [Twisted-Python] TCP File Copy
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE147B47BF@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B47BF@zajnb0406.za.deloitte.com>
Message-ID: <1112776674.7342.1.camel@p-dhcp-333-72.rd.francetelecom.fr>


> Does anyone have a good TCP file
> copy class ?

The easiest would be to look at Twisted's Web server capabilities. You
can in a few lines of code set up a simple HTTP daemon that will
automatically handle your file transfers. No need to bother with your
own file transfer protocol.






From solipsis at pitrou.net  Wed Apr  6 05:18:53 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 06 Apr 2005 11:18:53 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <332b7c5f05040512317e05717c@mail.gmail.com>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<332b7c5f05040512317e05717c@mail.gmail.com>
Message-ID: <1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>


Le mardi 05 avril 2005 ? 15:31 -0400, Tom Carmichael a ?crit :
> UDP has it's place, but typically vanilla file transfer isn't it. 
> 
> UDP traffic typically is harder to NAT rather than easier.  Since it
> is a stateless protocol, what is meant by a 'reply'?  How do you keep
> a forward and reverse translation table for the communications?

It is only harder for people who design NAT devices. ;)

But the real difference here between UDP and TCP, is that when you open
an outbound TCP connection, incoming TCP traffic will only be allowed
*for that connection*. Whereas if you send an outbound UDP message, *all
incoming UDP traffic* towards the originating address/port will be
enabled (at least on some NAT boxes).

This makes it easy for P2P systems to exchange messages between two
NATted clients without any proxying/tunnelling mechanism: you just have
to "punch a hole" by sending sporadic outgoing UDP traffic from your UDP
socket and then you can receive all UDP traffic coming to that socket.
You can't do that with TCP.

Regards

Antoine.





From mikah at ceruleansoftware.com  Wed Apr  6 09:09:26 2005
From: mikah at ceruleansoftware.com (mikah at ceruleansoftware.com)
Date: Wed, 6 Apr 2005 21:09:26 +0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 13, Issue 9
In-Reply-To: <E1DJ4Kb-0003mg-02@pyramid.twistedmatrix.com>
References: <E1DJ4Kb-0003mg-02@pyramid.twistedmatrix.com>
Message-ID: <20050406130926.GA31417@ceruleansoftware.com>

> From: James Y Knight <foom at fuhm.net>
> On Apr 5, 2005, at 9:33 PM, Stephen Waterbury wrote:
> > Whoa.  If true, that sure doesn't come out in the docs.
> > The link that you reference here says:
> >
> > "There are many ways in which your code will be called by
> > various parts of the Twisted framework by the time you're
> > done. The initial one we're going to focus on here is a
> > plug-in for the mktap utility."
> >
> > So although it's almost never useful, let's focus on a
> > plug-in for the mktap utility.  That's cute.
> 
> That intro sure is misleading! The rest of the document doesn't mention 
> mktap or plug-ins at all and in fact does document the currently 
> recommended best practices. Pretend that first paragraph didn't exist.


  This discussion caused me a lot of confusion. I dug around in
the archives and found a very _long_ thread ("In Defense of
TAPs") making some points to the opposite. When did tap files
go out of style? And what if I want to daemonize my application
anyway? How would I do so without mktap?

  Thanks!

mikah





From andrew-twisted at puzzling.org  Wed Apr  6 09:13:10 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 23:13:10 +1000
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 13, Issue 9
In-Reply-To: <20050406130926.GA31417@ceruleansoftware.com>
References: <E1DJ4Kb-0003mg-02@pyramid.twistedmatrix.com>
	<20050406130926.GA31417@ceruleansoftware.com>
Message-ID: <20050406131310.GA31065@frobozz>

On Wed, Apr 06, 2005 at 09:09:26PM +0800, mikah at ceruleansoftware.com wrote:
[...]
> 
>   This discussion caused me a lot of confusion. I dug around in
> the archives and found a very _long_ thread ("In Defense of
> TAPs") making some points to the opposite. When did tap files
> go out of style? And what if I want to daemonize my application
> anyway? How would I do so without mktap?

TAP file don't do daemonisation, twistd does.  twistd works with both TAP
files and TAC files.  See the --python/-y option to twistd, and also
http://twistedmatrix.com/projects/core/documentation/howto/application.html.

-Andrew.




From symbiont at berlios.de  Wed Apr  6 10:34:02 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Wed, 6 Apr 2005 22:34:02 +0800
Subject: [Twisted-Python] shedding root
In-Reply-To: <04613f98cea3464224e1d2fa6a64ea4a@fuhm.net>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<42533C68.4000402@comcast.net>
	<04613f98cea3464224e1d2fa6a64ea4a@fuhm.net>
Message-ID: <200504062234.02251.symbiont@berlios.de>

On Wednesday 06 April 2005 10:23, James Y Knight wrote:
> > So although it's almost never useful, let's focus on a
> > plug-in for the mktap utility. ?That's cute.
>
> That intro sure is misleading! The rest of the document doesn't
> mention mktap or plug-ins at all and in fact does document the
> currently recommended best practices. Pretend that first paragraph
> didn't exist.

So, should there be a deprecation warning when running mktap too?  I see 
it plenty with *.tml plugin stuff... why not in plain mktap without 
stuff like buildbot, pynfo, et al.  Plus a pointer like "see 
http://twistedmatrix.com/whynottap.html" would be nice.

thanks,
-- 
-jeff



From exarkun at divmod.com  Wed Apr  6 12:33:49 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 06 Apr 2005 16:33:49 GMT
Subject: [Twisted-Python] shedding root
In-Reply-To: <200504062234.02251.symbiont@berlios.de>
Message-ID: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>



On Wed, 6 Apr 2005 22:34:02 +0800, Jeff Pitman <symbiont at berlios.de> wrote:
>On Wednesday 06 April 2005 10:23, James Y Knight wrote:
> > > So although it's almost never useful, let's focus on a
> > > plug-in for the mktap utility.  That's cute.
> >
> > That intro sure is misleading! The rest of the document doesn't
> > mention mktap or plug-ins at all and in fact does document the
> > currently recommended best practices. Pretend that first paragraph
> > didn't exist.
> 
> So, should there be a deprecation warning when running mktap too?  I see 
> it plenty with *.tml plugin stuff... why not in plain mktap without 
> stuff like buildbot, pynfo, et al.  Plus a pointer like "see 
> http://twistedmatrix.com/whynottap.html" would be nice.
> 
> thanks,

  There's no reason to break existing deployments, or even encourage authors to switch away from their current tap plugins, if tap plugins are satisfying their requirements.  Deprecating mktap would just create a lot of unnecessary work.

  A document explaining the capabilities and shortcomings of tap plugins and comparing these to the other options for deploying a Twisted application is a great idea.

  Jp



From m at maluke.com  Wed Apr  6 17:07:53 2005
From: m at maluke.com (maluke)
Date: Thu, 07 Apr 2005 00:07:53 +0300
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
Message-ID: <42544FA9.1000205@maluke.com>

See also http://airhook.org/ and http://sourceforge.net/projects/khashmir

-- 
????? [ m at maluke.com // ICQ: 39027534 ]




From mesozoic at polynode.com  Wed Apr  6 18:31:04 2005
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 6 Apr 2005 18:31:04 -0400
Subject: [Twisted-Python] Re: UDP File Copy
In-Reply-To: <42544FA9.1000205@maluke.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
	<42544FA9.1000205@maluke.com>
Message-ID: <20050406223104.GP12619@perpetual.moxn.net>

It also bears mentioning that Glyph's nascent Q2Q library does precisely
what has been described in this thread: implement TCP-like transmission
controls on top of UDP to allow you to punch a hole through NAT. Except Q2Q
also does SSL, and is tied to JUICE (by far the easiest protocol API I've
ever seen in my life), so it's much cooler than just spewing UDP packets :)

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From ken at kenkinder.com  Thu Apr  7 00:48:02 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Wed, 06 Apr 2005 23:48:02 -0500
Subject: [Twisted-Python] shedding root
In-Reply-To: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>
References: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>
Message-ID: <4254BB82.7060707@kenkinder.com>

Jp Calderone wrote:

>  There's no reason to break existing deployments, or even encourage authors to switch away from their current tap plugins, if tap plugins are satisfying their requirements.  Deprecating mktap would just create a lot of unnecessary work.
>
>  A document explaining the capabilities and shortcomings of tap plugins and comparing these to the other options for deploying a Twisted application is a great idea.
>
>  Jp
>  
>
The same could be said of most of the components of Twisted. Should one 
use twisted.web, or nevow? Manhole telnet or Manhole PB? Etc. I realize 
there might be some debate on use recommendations, but certainly 
consensuses could be gathered.

Some place to start would be a big graph of the Twisted project, with 
flags for each component indicating stability, documentation status, 
future deprecation, and a short sentence about pro's and con's. Most of 
this information exists for these components, but it's dispersed among 
mailing list archives, docstrings, and once in a while, actual 
documentation.

Something like this would be quite valuable:

- twisted.project
  - ModuleA (Unstable) - Undocumented - Use ModuleB for future projects
  - ModuleB (Stable) - Documented
(etc...)

-k




From tv at tv.debian.net  Thu Apr  7 04:14:08 2005
From: tv at tv.debian.net (Tommi Virtanen)
Date: Thu, 07 Apr 2005 11:14:08 +0300
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<332b7c5f05040512317e05717c@mail.gmail.com>
	<1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <1112861648.21627.22.camel@pooch>

On Wed, 2005-04-06 at 11:18 +0200, Antoine Pitrou wrote:
> But the real difference here between UDP and TCP, is that when you open
> an outbound TCP connection, incoming TCP traffic will only be allowed
> *for that connection*. Whereas if you send an outbound UDP message, *all
> incoming UDP traffic* towards the originating address/port will be
> enabled (at least on some NAT boxes).
> 
> This makes it easy for P2P systems to exchange messages between two
> NATted clients without any proxying/tunnelling mechanism: you just have
> to "punch a hole" by sending sporadic outgoing UDP traffic from your UDP
> socket and then you can receive all UDP traffic coming to that socket.
> You can't do that with TCP.

You can't do that with NATted UDP, either. Quite many firewalls
want to match all of the (srcIP, srcPort, dstIP, dstPort) to match.





From solipsis at pitrou.net  Thu Apr  7 04:30:19 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 07 Apr 2005 10:30:19 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112861648.21627.22.camel@pooch>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<332b7c5f05040512317e05717c@mail.gmail.com>
	<1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<1112861648.21627.22.camel@pooch>
Message-ID: <1112862619.5094.2.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi again,

> You can't do that with NATted UDP, either. Quite many firewalls
> want to match all of the (srcIP, srcPort, dstIP, dstPort) to match.

Well, instead of claiming I'm an expert (!), I will hereby copy an
e-mail that's been posted a few months ago on the p2p-hackers
mailing-list by one of the Limewire developers. It talks about the
proportion of NAT devices which are compatible with the aforementioned
hack ;)

Regards

Antoine.



From:p2p-hackers-bounces at zgp.org [mailto:p2p-hackers-bounces at zgp.org] On
Behalf Of Greg Bildsonent: Wednesday, December 01, 2004 10:51 AM
To: Peer-to-peer development.
Subject: RE: [p2p-hackers] Why UDP and not TCP?
 

David,

Our operating environment has not yet stabilized - early beta testers
didn't get the proper port stability tests and our entire user base has
not been upgraded.  However, early indications are that 50 to 60 percent
of firewalled users will benefit.  Again though, the harshest firewalled
users probably have not had a good experience with P2P software so we
are working with a self selected crew.   This method does work with the
Windows XP firewall so we expect it to be widely successful as XP
becomes further adopted.  

One improvement that we can make is to our existing scheme is to handle
firewalls/NATs that use a sequential port assignment algorithm for each
attempt.  Rather than just trying a fixed port, we could try to
negotiate a connection with that port +1, +2 and +3.  I'm not sure what
percentage of users would really benefit from this though.

As has been mentioned here recently, we certainly have noticed that
incoming TCP connections are often possible after the same type of UDP
pinging.  We have no numbers on that though.

Thanks


-greg





From digi at treepy.com  Thu Apr  7 04:52:42 2005
From: digi at treepy.com (Patrick Lauber)
Date: Thu, 07 Apr 2005 10:52:42 +0200
Subject: [Twisted-Python] Re: UDP File Copy
In-Reply-To: <20050406223104.GP12619@perpetual.moxn.net>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>	<42544FA9.1000205@maluke.com>
	<20050406223104.GP12619@perpetual.moxn.net>
Message-ID: <4254F4DA.90408@treepy.com>

Alex Levy wrote:

>It also bears mentioning that Glyph's nascent Q2Q library does precisely
>what has been described in this thread: implement TCP-like transmission
>controls on top of UDP to allow you to punch a hole through NAT. Except Q2Q
>also does SSL, and is tied to JUICE (by far the easiest protocol API I've
>ever seen in my life), so it's much cooler than just spewing UDP packets :)
>
>  
>
Where can we find this Q2Q library and JUICE? google does not has an aswer.




From projects at reedflute.com  Thu Apr  7 08:19:26 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 07 Apr 2005 14:19:26 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112861648.21627.22.camel@pooch>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>	<200504051735.17511.anthony@interlink.com.au>	<2389d47305040508142bf4baf9@mail.gmail.com>	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>	<332b7c5f05040512317e05717c@mail.gmail.com>	<1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<1112861648.21627.22.camel@pooch>
Message-ID: <4255254E.5080509@reedflute.com>

Tommi Virtanen wrote:

>On Wed, 2005-04-06 at 11:18 +0200, Antoine Pitrou wrote:
>  
>
>>But the real difference here between UDP and TCP, is that when you open
>>an outbound TCP connection, incoming TCP traffic will only be allowed
>>*for that connection*. Whereas if you send an outbound UDP message, *all
>>incoming UDP traffic* towards the originating address/port will be
>>enabled (at least on some NAT boxes).
>>
>>This makes it easy for P2P systems to exchange messages between two
>>NATted clients without any proxying/tunnelling mechanism: you just have
>>to "punch a hole" by sending sporadic outgoing UDP traffic from your UDP
>>socket and then you can receive all UDP traffic coming to that socket.
>>You can't do that with TCP.
>>    
>>
>
>You can't do that with NATted UDP, either. Quite many firewalls
>want to match all of the (srcIP, srcPort, dstIP, dstPort) to match.
>
>
>  
>
Exactly. It  depends entirely on what you do with NAT. 

Some NAT boxes are stricter than others - but in principle I block 
anything weird or undesirable - most notably protocol hacks of this 
nature designed to circumvent firewalling.

Eugene

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From Henning.Ramm at mediapro-gmbh.de  Thu Apr  7 10:25:10 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 7 Apr 2005 16:25:10 +0200
Subject: [Twisted-Python] PB connection
Message-ID: <F92274058556DE42B94B148EEFB9183949E6AA@exchange-03.suedkurier.de>

I'm trying it again...

I got a working PB server (database proxy something).

A one-time client (like Howto-simpleclient) can connect and call remote functions.

My "real" client creates a PBClientFactory at startup and connects (reactor.connectTCP).
It has its own reactor and waits for files to write them to the database.
For each query it tries to get a RootObject, but that fails with 
"Connection was refused by other side: 10061: Unknown error."

Must I create a new factory or connect again for every call?

In the docs (http://twistedmatrix.com/documents/current/howto/pb-usage) 
it's rather confusing that the "complete example" uses TAP instead of "clean" code.

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From matt.feifarek at gmail.com  Thu Apr  7 10:58:19 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 10:58:19 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <4254BB82.7060707@kenkinder.com>
References: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>
	<4254BB82.7060707@kenkinder.com>
Message-ID: <6fb6dbfe05040707583c1078ee@mail.gmail.com>

Ooh. The graph idea is excellent; just to get a sense of what's IN
Twisted. And perhaps as a navigation device for the docs.

I'm not a Twisted expert, but I have some skill with graphical
software; I could help make something like this happen, given interest
and technical guidance.



From matt.feifarek at gmail.com  Thu Apr  7 11:00:13 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 11:00:13 -0400
Subject: [Twisted-Python] reactor and FAMd
Message-ID: <6fb6dbfe050407080014ab65d9@mail.gmail.com>

I sent this a few days ago, but it never showed up; my apologies if it
eventually does show up, and we get a dupe.

I'm interested in using FAM/FAMd on Linux and to have its events
noticed by a twisted reactor.

I did some googling, but didn't find much.

Has anyone done this, or does anyone have any pointers on where to
begin my research? I know that the various linux desktops use FAM, and
there are some reactors keyed to the graphical toolkits that they
use... is that the way to do this?

Thanks.



From symbiont at berlios.de  Thu Apr  7 11:31:25 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Thu, 7 Apr 2005 23:31:25 +0800
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <6fb6dbfe050407080014ab65d9@mail.gmail.com>
References: <6fb6dbfe050407080014ab65d9@mail.gmail.com>
Message-ID: <200504072331.25527.symbiont@berlios.de>

On Thursday 07 April 2005 23:00, Matt Feifarek wrote:
> Has anyone done this, or does anyone have any pointers on where to
> begin my research? I know that the various linux desktops use FAM,
> and there are some reactors keyed to the graphical toolkits that they
> use... is that the way to do this?

Cut out the middle man (FAM) and go straight to the source (kernel):

http://cvs.sourceforge.net/viewcvs.py/buildbot/buildbot/buildbot/dnotify.py?view=markup

have fun,
-- 
-jeff



From exarkun at divmod.com  Thu Apr  7 14:19:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 07 Apr 2005 18:19:09 GMT
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <200504072331.25527.symbiont@berlios.de>
Message-ID: <20050407181909.13806.2061207495.divmod.quotient.51160@ohm>

On Thu, 7 Apr 2005 23:31:25 +0800, Jeff Pitman <symbiont at berlios.de> wrote:
>On Thursday 07 April 2005 23:00, Matt Feifarek wrote:
> > Has anyone done this, or does anyone have any pointers on where to
> > begin my research? I know that the various linux desktops use FAM,
> > and there are some reactors keyed to the graphical toolkits that they
> > use... is that the way to do this?
> 
> Cut out the middle man (FAM) and go straight to the source (kernel):
> 
> http://cvs.sourceforge.net/viewcvs.py/buildbot/buildbot/buildbot/dnotify.py?view=markup
> 
> have fun,
> -- 
> -jeff
> 

  Except dnotify is terrible.  There should be some inotify in Twisted shortly.

  Jp



From mesozoic at polynode.com  Thu Apr  7 15:21:15 2005
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 7 Apr 2005 15:21:15 -0400
Subject: [Twisted-Python] Re: Re: UDP File Copy
In-Reply-To: <4254F4DA.90408@treepy.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
	<42544FA9.1000205@maluke.com>
	<20050406223104.GP12619@perpetual.moxn.net>
	<4254F4DA.90408@treepy.com>
Message-ID: <20050407192115.GQ12619@perpetual.moxn.net>

For now, it's at svn://divmod.org/svn/Quotient/branches/glyph/pycon-q2q/

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From ken at kenkinder.com  Thu Apr  7 16:25:26 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 07 Apr 2005 15:25:26 -0500
Subject: [Twisted-Python] shedding root
In-Reply-To: <6fb6dbfe05040707583c1078ee@mail.gmail.com>
References: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>	<4254BB82.7060707@kenkinder.com>
	<6fb6dbfe05040707583c1078ee@mail.gmail.com>
Message-ID: <42559736.4010405@kenkinder.com>

Matt Feifarek wrote:

>Ooh. The graph idea is excellent; just to get a sense of what's IN
>Twisted. And perhaps as a navigation device for the docs.
>
>I'm not a Twisted expert, but I have some skill with graphical
>software; I could help make something like this happen, given interest
>and technical guidance.
>  
>
So, most of the docs are API docs, which are generated by EpyDoc, so 
that might be tricky. Personally I'd be happy with a simple html table 
somewhere.




From michaelschneider at fuse.net  Thu Apr  7 17:33:52 2005
From: michaelschneider at fuse.net (Michael Schneider)
Date: Thu, 07 Apr 2005 17:33:52 -0400
Subject: [Twisted-Python] 2.0 windows installers
Message-ID: <4255A740.80400@fuse.net>

Sorry for the supid question,  I have looked around the twisted site and 
I can't find the windows installer for twisted 2.0.

Could some kind person point me to it?

Thanks
Mike



From matt.feifarek at gmail.com  Thu Apr  7 17:45:10 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 17:45:10 -0400
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <20050407181909.13806.2061207495.divmod.quotient.51160@ohm>
References: <200504072331.25527.symbiont@berlios.de>
	<20050407181909.13806.2061207495.divmod.quotient.51160@ohm>
Message-ID: <6fb6dbfe0504071445117938e3@mail.gmail.com>

Err.

Why is it terrible? And, any idea what "shortly" will be? Give or
take, of course.

On Apr 7, 2005 2:19 PM, Jp Calderone <exarkun at divmod.com> wrote:
> 
>   Except dnotify is terrible.  There should be some inotify in Twisted shortly.
> 
>   Jp



From exarkun at divmod.com  Thu Apr  7 18:03:48 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 07 Apr 2005 22:03:48 GMT
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <6fb6dbfe0504071445117938e3@mail.gmail.com>
Message-ID: <20050407220348.13806.439815873.divmod.quotient.51500@ohm>

On Thu, 7 Apr 2005 17:45:10 -0400, Matt Feifarek <matt.feifarek at gmail.com> wrote:
>Err.
> 
> Why is it terrible? And, any idea what "shortly" will be? Give or
> take, of course.
> 
> On Apr 7, 2005 2:19 PM, Jp Calderone <exarkun at divmod.com> wrote:
> > 
> >   Except dnotify is terrible.  There should be some inotify in Twisted shortly.
> > 
> >   Jp
> 

  A brief summary is at the top of <http://lwn.net/Articles/113416/>.  "Shortly" is probably on the order of a week.

  Jp



From matt.feifarek at gmail.com  Thu Apr  7 18:54:39 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 18:54:39 -0400
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <20050407220348.13806.439815873.divmod.quotient.51500@ohm>
References: <6fb6dbfe0504071445117938e3@mail.gmail.com>
	<20050407220348.13806.439815873.divmod.quotient.51500@ohm>
Message-ID: <6fb6dbfe050407155476f372f3@mail.gmail.com>

Excellent! Thanks. This looks very promising.

On Apr 7, 2005 6:03 PM, Jp Calderone <exarkun at divmod.com> wrote:

>   A brief summary is at the top of <http://lwn.net/Articles/113416/>.  "Shortly" is probably on the order of a week.
> 
>   Jp



From Henning.Ramm at mediapro-gmbh.de  Fri Apr  8 03:27:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 8 Apr 2005 09:27:16 +0200
Subject: [Twisted-Python] PB connection
Message-ID: <F92274058556DE42B94B148EEFB9183949E6AB@exchange-03.suedkurier.de>

>"Connection was refused by other side: 10061: Unknown error."

Stupid error - I had a typo in my connection config.
Sorry for bothering you.

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From Henning.Ramm at mediapro-gmbh.de  Fri Apr  8 09:29:06 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 8 Apr 2005 15:29:06 +0200
Subject: [Twisted-Python] generic enterprise.row.RowObject?
Message-ID: <F92274058556DE42B94B148EEFB9183949E6AD@exchange-03.suedkurier.de>

Ahoi!

For a simple database abstraction module I once wrote some table class.
Now I'm trying to port it to twisted and thought it should inherit from
enterprise.row.RowObject. (I hope that isn't deprecated?)

RowObject urges me to declare all the table properties as class variables.
My old class reads this information directly from the database (show fields)
to adapt itself to a set of similar tables, and I'd like to keep this feature.

Seems like I would need some RowObjectFactory that takes a connection pool
and a table name and returns a RowObject - or how would you do this?

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From foom at fuhm.net  Fri Apr  8 11:17:24 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 8 Apr 2005 11:17:24 -0400
Subject: [Twisted-Python] generic enterprise.row.RowObject?
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E6AD@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E6AD@exchange-03.suedkurier.de>
Message-ID: <658cf90dfa403338e6c822ee62071f15@fuhm.net>

On Apr 8, 2005, at 9:29 AM, <Henning.Ramm at mediapro-gmbh.de> wrote:
> Ahoi!
>
> For a simple database abstraction module I once wrote some table class.
> Now I'm trying to port it to twisted and thought it should inherit from
> enterprise.row.RowObject. (I hope that isn't deprecated?)
>
> RowObject urges me to declare all the table properties as class 
> variables.
> My old class reads this information directly from the database (show 
> fields)
> to adapt itself to a set of similar tables, and I'd like to keep this 
> feature.
>
> Seems like I would need some RowObjectFactory that takes a connection 
> pool
> and a table name and returns a RowObject - or how would you do this?

RowObject isn't deprecated, but is woefully unmaintained. It is missing 
a bunch of functionality that is probably necessary for many 
applications. It would be nice if someone took it over and added the 
necessary functionality. As such, the recommendation for it has 
generally been "if you like it, go ahead and use it, but you'll 
probably find it's missing something you need." If you're comfortable 
with that, and are willing to extend it as necessary, that's great. 
Even better if you submit the changes back. I haven't looked at row in 
a long time, but I thought it did have some functionality in there 
meant for autogenerating the class from the database schema. Maybe I 
was just wishing it did, though.

James




From adrian.libotean at asylum-studios.ro  Sun Apr 10 09:13:40 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 16:13:40 +0300
Subject: [Twisted-Python] UDP asynchronous communication
Message-ID: <42592684.2000802@asylum-studios.ro>

Hello,

First of all I must let you know that I am new to Twisted.

I need to implement a server discovery mechanism for my application. The 
way I chose to implement it is this:

	1. The client, when started, sends a broadcast message requesting 
servers to make their presence known (UDP broadcast)
	2. The server responds to this request using the same port on the 
sender's IP to reply (UDP normal message)
	3. ...

Now the problem I faced is that from the examples I found on the web 
(http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
multicast UDP messages, are done using listenUDP on both sides (server 
and client) and this approach is not good for me because I need a 
non-blocking communication mechanism on the client-side.



From tv at twistedmatrix.com  Sun Apr 10 11:08:39 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 10 Apr 2005 18:08:39 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42592684.2000802@asylum-studios.ro>
References: <42592684.2000802@asylum-studios.ro>
Message-ID: <42594177.7050809@twistedmatrix.com>

Adrian Libotean wrote:
> Now the problem I faced is that from the examples I found on the web 
> (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
> multicast UDP messages, are done using listenUDP on both sides (server 
> and client) and this approach is not good for me because I need a 
> non-blocking communication mechanism on the client-side.

Sounds _very_ much like you have misunderstood something.
Twisted functionality is almost without exception non-blocking.
Please re-read and try to ask a more specific question.



From adrian.libotean at asylum-studios.ro  Sun Apr 10 11:38:42 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 18:38:42 +0300
Subject: [Twisted-Python] UDP asynchronous communication
Message-ID: <42594882.5080109@asylum-studios.ro>

Trust me I've read the document and after:

reactor.listenUDP(...)
reactor.run()

the *client* just waits for incoming traffic.
I know that Twisted is not supposed to be like that. But please take a
moment and read this:
http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html#auto3
before you give me a *prebuilt* answer. Thank you.

Tommi Virtanen wrote:
> Adrian Libotean wrote:
> 
>> Now the problem I faced is that from the examples I found on the web 
>> (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
>> multicast UDP messages, are done using listenUDP on both sides (server 
>> and client) and this approach is not good for me because I need a 
>> non-blocking communication mechanism on the client-side.
> 
> 
> Sounds _very_ much like you have misunderstood something.
> Twisted functionality is almost without exception non-blocking.
> Please re-read and try to ask a more specific question.




From jarrod.roberson at gmail.com  Sun Apr 10 11:54:49 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sun, 10 Apr 2005 11:54:49 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42592684.2000802@asylum-studios.ro>
References: <42592684.2000802@asylum-studios.ro>
Message-ID: <2389d47305041008545807e5d@mail.gmail.com>

On Apr 10, 2005 9:13 AM, Adrian Libotean
<adrian.libotean at asylum-studios.ro> wrote:
> Hello,
> 
> First of all I must let you know that I am new to Twisted.
> 
> I need to implement a server discovery mechanism for my application. The
> way I chose to implement it is this:
> 
>         1. The client, when started, sends a broadcast message requesting
> servers to make their presence known (UDP broadcast)
>         2. The server responds to this request using the same port on the
> sender's IP to reply (UDP normal message)
>         3. ...
> 
> Now the problem I faced is that from the examples I found on the web
> (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for
> multicast UDP messages, are done using listenUDP on both sides (server
> and client) and this approach is not good for me because I need a
> non-blocking communication mechanism on the client-side.
> 
> _______________________________________________

Why are you re-inventing the wheel, Dynamic Server discovery is
already implemented with
ZeroConf ( also known as Rendezvous on OSX ) thru mDNS.

I have working example code for twisted that I got form people on this
list if you want to see it.

-- 
If you don't know what you want, you probably need a nap.



From tv at twistedmatrix.com  Sun Apr 10 12:09:48 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 10 Apr 2005 19:09:48 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42594882.5080109@asylum-studios.ro>
References: <42594882.5080109@asylum-studios.ro>
Message-ID: <42594FCC.9080903@twistedmatrix.com>

Adrian Libotean wrote:
> Trust me I've read the document and after:
> 
> reactor.listenUDP(...)
> reactor.run()
> 
> the *client* just waits for incoming traffic.

That just tells me you have not understood twisted yet.

Set up things to happen, then call reactor.run() at the end
of your main function.

If you only set up one thing to happen, only one thing will
happen. That may be alright for the example, which only wanted
to do one things; real applications tend to be a bit more
complex.

Also, please do not top-post.



From adrian.libotean at asylum-studios.ro  Sun Apr 10 12:13:18 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 19:13:18 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <2389d47305041008545807e5d@mail.gmail.com>
References: <42592684.2000802@asylum-studios.ro>
	<2389d47305041008545807e5d@mail.gmail.com>
Message-ID: <4259509E.4000402@asylum-studios.ro>

A few reasons for this are:

1. I can have multiple servers running on the same machine (single Ip 
address) on different ports
2. The server must reply with more than just an IP: it sends to the 
client specific data: amonst wich is the TCP port that the server is 
listening for connections from the client which can vary according to 
settings

jarrod roberson wrote:
> On Apr 10, 2005 9:13 AM, Adrian Libotean
> <adrian.libotean at asylum-studios.ro> wrote:
> 
>>Hello,
>>
>>First of all I must let you know that I am new to Twisted.
>>
>>I need to implement a server discovery mechanism for my application. The
>>way I chose to implement it is this:
>>
>>        1. The client, when started, sends a broadcast message requesting
>>servers to make their presence known (UDP broadcast)
>>        2. The server responds to this request using the same port on the
>>sender's IP to reply (UDP normal message)
>>        3. ...
>>
>>Now the problem I faced is that from the examples I found on the web
>>(http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for
>>multicast UDP messages, are done using listenUDP on both sides (server
>>and client) and this approach is not good for me because I need a
>>non-blocking communication mechanism on the client-side.
>>
>>_______________________________________________
> 
> 
> Why are you re-inventing the wheel, Dynamic Server discovery is
> already implemented with
> ZeroConf ( also known as Rendezvous on OSX ) thru mDNS.
> 
> I have working example code for twisted that I got form people on this
> list if you want to see it.
> 



From adrian.libotean at asylum-studios.ro  Sun Apr 10 12:18:38 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 19:18:38 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42594FCC.9080903@twistedmatrix.com>
References: <42594882.5080109@asylum-studios.ro>
	<42594FCC.9080903@twistedmatrix.com>
Message-ID: <425951DE.3090607@asylum-studios.ro>

Tommi Virtanen wrote:
 > Adrian Libotean wrote:
 >
 >> Trust me I've read the document and after:
 >>
 >> reactor.listenUDP(...)
 >> reactor.run()
 >>
 >> the *client* just waits for incoming traffic.
 >
 >
 > Set up things to happen, then call reactor.run() at the end
 > of your main function.

That's the problem: I just want to start the client and then, when the 
user selects "Scan" from the interface, I must send the broadcast and 
then act on replies from servers completely independent of the main 
thread of the application.

So I have two choices: I run the reactor in a separate thread, or I find 
a way to do a non-blocking communication using onReceive/onSend events.

 > Also, please do not top-post.

Sorry for that.



From jarrod.roberson at gmail.com  Sun Apr 10 12:29:59 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sun, 10 Apr 2005 12:29:59 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <425951DE.3090607@asylum-studios.ro>
References: <42594882.5080109@asylum-studios.ro>
	<42594FCC.9080903@twistedmatrix.com>
	<425951DE.3090607@asylum-studios.ro>
Message-ID: <2389d4730504100929a75abe1@mail.gmail.com>

> > So I have two choices: I run the reactor in a separate thread, or I find
> a way to do a non-blocking communication using onReceive/onSend events.
> 

no you don't understand the bigger picture with Twisted, it is a
hollywood system, "Don't call us, we'll call you".

If you would stop for a minute, take a step back and go READ about
ZeroConf/Apple Rendezvous and then look at the mDNS implementations in
Python you might understand you are doing things backwards.

You register callbacks with Twisted, it calls them when it needs to you.

Read about the Application and Service objects, what you want to do is
more than is in the tutorial and examples.

My suggestion is to DO the entire Echo how-to over and over until you
"get it" about the Application and Service interfaces and objects and
the .tac file concept.



From jarrod.roberson at gmail.com  Sun Apr 10 12:30:21 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sun, 10 Apr 2005 12:30:21 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <425951DE.3090607@asylum-studios.ro>
References: <42594882.5080109@asylum-studios.ro>
	<42594FCC.9080903@twistedmatrix.com>
	<425951DE.3090607@asylum-studios.ro>
Message-ID: <2389d47305041009301b336cc7@mail.gmail.com>

> > So I have two choices: I run the reactor in a separate thread, or I find
> a way to do a non-blocking communication using onReceive/onSend events.
> 

no you don't understand the bigger picture with Twisted, it is a
hollywood system, "Don't call us, we'll call you".

If you would stop for a minute, take a step back and go READ about
ZeroConf/Apple Rendezvous and then look at the mDNS implementations in
Python you might understand you are doing things backwards.

You register callbacks with Twisted, it calls them when it needs to you.

Read about the Application and Service objects, what you want to do is
more than is in the tutorial and examples.

My suggestion is to DO the entire Echo how-to over and over until you
"get it" about the Application and Service interfaces and objects and
the .tac file concept.



From exarkun at divmod.com  Sun Apr 10 12:48:40 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 10 Apr 2005 16:48:40 GMT
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <425951DE.3090607@asylum-studios.ro>
Message-ID: <20050410164840.13806.1301146272.divmod.quotient.57437@ohm>

On Sun, 10 Apr 2005 19:18:38 +0300, Adrian Libotean <adrian.libotean at asylum-studios.ro> wrote:
>Tommi Virtanen wrote:
>  > Adrian Libotean wrote:
>  >
>  >> Trust me I've read the document and after:
>  >>
>  >> reactor.listenUDP(...)
>  >> reactor.run()
>  >>
>  >> the *client* just waits for incoming traffic.
>  >
>  >
>  > Set up things to happen, then call reactor.run() at the end
>  > of your main function.
> 
> That's the problem: I just want to start the client and then, when the 
> user selects "Scan" from the interface, I must send the broadcast and 
> then act on replies from servers completely independent of the main 
> thread of the application.
> 
> So I have two choices: I run the reactor in a separate thread, or I find 
> a way to do a non-blocking communication using onReceive/onSend events.
> 

  The latter sounds like a great option to me.  Using a fictional widget library and a mega trivial protocol that just sends around "int:string" packets, here's how you do it:

    from twisted.internet import protocol, defer

    class ServiceDiscoveryDatagramProtocol(protocol.DatagramProtocol):
        def __init__(self):
            self.packets = {}
            self.counter = 0

        def _makeAPacket(self, hint):
            self.counter += 1
            d = self.packets[self.counter] = defer.Deferred()
            return d, '%d:%s' % (self.counter, hint)

        def _parseAPacket(self, bytes):
            counter, payload = bytes.split(':')
            return self.packets.pop(int(counter)), payload

        def discoverSomething(self, hint):
            d, pkt = self._makeAPacket(hint)
            self.transport.write(pkt)
            return d

        def datagramReceived(self, dgram, addr):
            d, stuff = self._parseAPacket(dgram)
            d.callback(stuff)

    from fiction import widgetlib

    class MainWidget(widgetlib.Frame):
        def __init__(self, proto):
            self.proto = proto
            self.discoverButton = widgetlib.Button(self, 
                                                   onClick=self._clicked)
            self.textArea = widgetlib.Text(self, 'Nothing to see')
            self.textArea.show()
            self.discoverButton.show()

        def _clicked(self):
            d = self.proto.discoverSomething('puppies')
            d.addCallback(self._discovered)

        def _discovered(self, what):
            self.textArea.setText(str(what))

    proto = ServiceDiscoveryDatagramProtocol()
    reactor.listenUDP(0, proto)
    main = MainWidget(proto)
    main.show()
    reactor.run()

  As you can see, all that is involved is hooking up sources of events to code which is interested in events.  Your widget library should generate events for user input.  Twisted will generate events for network traffic.  Each lets you define a function which is invoked when events occur.  All you need to do is define the functions in such a way as to make your program do what you want it to do :)

  Hope this helps,

  Jp



From itamar at itamarst.org  Sun Apr 10 11:17:23 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 10 Apr 2005 11:17:23 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42594177.7050809@twistedmatrix.com>
References: <42592684.2000802@asylum-studios.ro>
	<42594177.7050809@twistedmatrix.com>
Message-ID: <1113146243.16466.20.camel@localhost.localdomain>

On Sun, 2005-04-10 at 18:08 +0300, Tommi Virtanen wrote:
> Adrian Libotean wrote:
> > Now the problem I faced is that from the examples I found on the web 
> > (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
> > multicast UDP messages, are done using listenUDP on both sides (server 
> > and client) and this approach is not good for me because I need a 
> > non-blocking communication mechanism on the client-side.
> 
> Sounds _very_ much like you have misunderstood something.
> Twisted functionality is almost without exception non-blocking.
> Please re-read and try to ask a more specific question.
 
Also note those docs are *very* out of date - multicast uses
listenMulticast these days. Other than that it's mostly identical
though.




From melirizarry at adelphia.net  Sun Apr 10 19:52:57 2005
From: melirizarry at adelphia.net (Mel Irizarry)
Date: Sun, 10 Apr 2005 16:52:57 -0700
Subject: [Twisted-Python] Any good examples?
Message-ID: <4259BC59.7060106@adelphia.net>

I am in need of a server that will allow multiple clients to connect, 
take a MySQL Statement from the client, execute it and return the 
results to the client.  Is there a good example that I could download 
and perhaps modify?

I've been reading the Twisted docs since yesterday but I am a bit 
overwhelmed by the design of the framework.  Mktap looks to be the way 
to go but I need more info especially on the factory and protocol classes. 

-- 
Best Regards,

Mel Irizarry

-----------------------------
I can't go to school 'cause I ain't got a gun
I ain't got a gun 'cause I ain't got a job
I can't get a job 'cause I can't go to school

Lost in America - Alice Cooper




From exarkun at divmod.com  Sun Apr 10 20:15:32 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 11 Apr 2005 00:15:32 GMT
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net>
Message-ID: <20050411001532.13806.1063224397.divmod.quotient.58059@ohm>

On Sun, 10 Apr 2005 16:52:57 -0700, Mel Irizarry <melirizarry at adelphia.net> wrote:
>I am in need of a server that will allow multiple clients to connect, 
> take a MySQL Statement from the client, execute it and return the 
> results to the client.  Is there a good example that I could download 
> and perhaps modify?
> 
> I've been reading the Twisted docs since yesterday but I am a bit 
> overwhelmed by the design of the framework.  Mktap looks to be the way 
> to go but I need more info especially on the factory and protocol classes. 
> 

  These links might get you started:

    <http://twistedmatrix.com/documents/current/howto/servers>

    <http://twistedmatrix.com/documents/current/howto/enterprise>

  Jp



From orbitz at ezabel.com  Sun Apr 10 20:20:53 2005
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Sun, 10 Apr 2005 20:20:53 -0400
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net>
References: <4259BC59.7060106@adelphia.net>
Message-ID: <0c4cffaab66f22110c37ea564437c6cd@ezabel.com>

There are plenty of examples on how to use adbapi and how to write 
servers. 1 + 1 = 2.


On Apr 10, 2005, at 7:52 PM, Mel Irizarry wrote:

> I am in need of a server that will allow multiple clients to connect, 
> take a MySQL Statement from the client, execute it and return the 
> results to the client.  Is there a good example that I could download 
> and perhaps modify?
>
> I've been reading the Twisted docs since yesterday but I am a bit 
> overwhelmed by the design of the framework.  Mktap looks to be the way 
> to go but I need more info especially on the factory and protocol 
> classes.
> -- 
> Best Regards,
>
> Mel Irizarry
>
> -----------------------------
> I can't go to school 'cause I ain't got a gun
> I ain't got a gun 'cause I ain't got a job
> I can't get a job 'cause I can't go to school
>
> Lost in America - Alice Cooper
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From mikah at ceruleansoftware.com  Mon Apr 11 06:48:30 2005
From: mikah at ceruleansoftware.com (mikah at ceruleansoftware.com)
Date: Mon, 11 Apr 2005 18:48:30 +0800
Subject: [Twisted-Python] re: shedding root
Message-ID: <20050411104830.GA15025@ceruleansoftware.com>

Andrew Bennetts wrote:
> TAP file don't do daemonisation, twistd does.  twistd works
> with both TAP files and TAC files.  See the --python/-y option
> to twistd, and also
> http://twistedmatrix.com/projects/core/documentation/howto/application.html.
>
> -Andrew.


  Thanks Andrew. I got it figured out. I've converted my TAP
into a TAC. No problems encountered, and I appreciate the fact
that I don't need to run mktap in the development cycle.

  Thanks!

mikah





From foom at fuhm.net  Mon Apr 11 10:32:08 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 11 Apr 2005 10:32:08 -0400
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <d5d825ea614d199cd4f38804adf4a48b@fuhm.net>

Bug summary
______________________
Since 2005-04-05 15:31:47.510000:
  Bugs opened: 7   Bugs closed: 2   Total open bugs: 337 (+5)
   Urgent: 4 (+1)
   Bug: 135 (+1)
   Feature: 129 (+3)
   Wish: 69 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[DOCUMENTATION] Twisted dependancy list  (5 days ago)
        http://twistedmatrix.com/bugs/issue967 opened by jknight

                     ==== Bug ====
[DOCUMENTATION] epyrun dies with an internal error  (9 hours ago)
        http://twistedmatrix.com/bugs/issue973 opened by Ycros

No .spec file in tarball as indicated by INSTALL file  (3 days ago)
        http://twistedmatrix.com/bugs/issue969 opened by bjorn

[NAMES, WIN32] [PATCH] Problems with Twisted Names on Windows  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue970 opened by jojo

                     ==== Feature ====
Linux inotify support in twisted core  (yesterday)
        http://twistedmatrix.com/bugs/issue972 opened by exarkun

cddb client protocol  (2 days ago)
        http://twistedmatrix.com/bugs/issue971 opened by rhymes

[DOCUMENTATION] "Deploying  Twisted Applications" howto  (4 days ago)
        http://twistedmatrix.com/bugs/issue968 opened by itamarst

Bugs Closed
______________________
                     ==== Bug ====
[CORE] [PATCH] make LoopingCall.stop() stop the loop immediately  (1 
month ago)
        http://twistedmatrix.com/bugs/issue911 opened by zooko, closed 
by exarkun

[DOCUMENTATION, LORE] some PB howtos have empty examples  (6 days ago)
        http://twistedmatrix.com/bugs/issue963 opened by warner, closed 
by warner




From bv at bnl.gov  Mon Apr 11 10:42:57 2005
From: bv at bnl.gov (Brett Viren)
Date: Mon, 11 Apr 2005 10:42:57 -0400
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net> (Mel Irizarry's message of
	"Sun, 10 Apr 2005 16:52:57 -0700")
References: <4259BC59.7060106@adelphia.net>
Message-ID: <ir4u0mdbci6.fsf@minos.phy.bnl.gov>

Mel Irizarry <melirizarry at adelphia.net> writes:

> I am in need of a server that will allow multiple clients to connect,
> take a MySQL Statement from the client, execute it and return the
> results to the client.  Is there a good example that I could download
> and perhaps modify?

I must not understand because this is exactly what "mysqld" does.

-Brett.



From anthony at interlink.com.au  Mon Apr 11 11:33:05 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 12 Apr 2005 01:33:05 +1000
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <200504120133.06848.anthony@interlink.com.au>

On Wednesday 06 April 2005 01:26, Antoine Pitrou wrote:
> You are wrong, UDP is more and more adopted by end-user P2P software
> because of its ability to transparently go through - in and out - many
> types of NAT devices (which are themselves more and more popular among
> home users). Incoming TCP traffic, on the other hand, often needs to be
> specifically enabled on the NAT box.

Bwahahahahahahaha. No, really - thanks for this. I haven't laughed so hard
all day.

> For juicy details, you can read the RFC for the STUN protocol (Simple
> Traversal of User Datagram Protocol - UDP - Through Network Address
> Translators - NATs):
> http://www.faqs.org/rfcs/rfc3489.html

STUN helps, but doesn't alter the fact that UDP + NAT is an absolute A-grade
disaster.  If you think that UDP will somehow make your software more 
reliable in the face of NATs, you're in for a rude rude surprise.

In case you're wondering, I know what I'm talking about here - I've 
implemented STUN as part of shtoom, and it really only helps a small 
amount. NAT + UDP == a world of hurt.

The only robust way to traverse a NAT with UDP is to use UPnP. And 
yes, I still regard UPnP as one of the worst protocols ever invented. 


-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From melirizarry at adelphia.net  Mon Apr 11 15:28:18 2005
From: melirizarry at adelphia.net (Mel Irizarry)
Date: Mon, 11 Apr 2005 12:28:18 -0700
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <ir4u0mdbci6.fsf@minos.phy.bnl.gov>
References: <4259BC59.7060106@adelphia.net> <ir4u0mdbci6.fsf@minos.phy.bnl.gov>
Message-ID: <425ACFD2.90405@adelphia.net>

Brett Viren wrote:

>Mel Irizarry <melirizarry at adelphia.net> writes:
>
>  
>
>>I am in need of a server that will allow multiple clients to connect,
>>take a MySQL Statement from the client, execute it and return the
>>results to the client.  Is there a good example that I could download
>>and perhaps modify?
>>    
>>
>
>I must not understand because this is exactly what "mysqld" does.
>
>-Brett.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>
I do not want the clients to connect directly to MySQL.  It's a security 
issue.

-- 
Best Regards,

Mel Irizarry

-----------------------------
I can't go to school 'cause I ain't got a gun
I ain't got a gun 'cause I ain't got a job
I can't get a job 'cause I can't go to school

Lost in America - Alice Cooper

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050411/1268b400/attachment.htm 

From darran.edmundson at anu.edu.au  Mon Apr 11 23:29:11 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Tue, 12 Apr 2005 13:29:11 +1000
Subject: [Twisted-Python] simple multicast beacon problem ...
Message-ID: <425B4087.4000701@anu.edu.au>


I'm relatively new to Twisted and am struggling to create a multicast
beacon with the application framework.   This beacon simply sends out
a datagram every second, no listening at all. I've appended a short sample
program and traceback to this email in the hope that someone can
point out the presumably simple usage error.  For the life of me I can't
spot it.  Here's the last bit of the traceback:

2005/04/12 13:15 EST [-]     p = udp.MulticastPort(port, protocol, 
interface, maxPacketSize, self)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/udp.py", 
line 66, in __init__
2005/04/12 13:15 EST [-]     assert isinstance(proto, 
protocol.DatagramProtocol)
2005/04/12 13:15 EST [-] AssertionError

A quick debug shows that proto is HeartBeatFactory rather than its class 
attribute protocol.
Any help is much appreciated.

Cheers,
Darran

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088

------------------------------------- application.py 
---------------------------------------------------

from twisted.internet import protocol, reactor
from twisted.internet import threads
from twisted.application import internet, service

class HeartBeat(protocol.DatagramProtocol):

     def start_protocol(self):
         self.send_datagram()

     def send_datagram(self):
 
self.transport.write("message",(self.factory.group,self.factory.port))
         self.reactor.callLater(1,self.send_datagram)


class HeartBeatFactory(protocol.ServerFactory):
     protocol = HeartBeat

     def __init__(self,group,port):
         self.group = group
         self.port = port

factory = HeartBeatFactory("234.32.23.1", 9999)
application = service.Application('HeartBeat')
service = internet.MulticastServer(9999, factory, interface='0.0.0.0')
service.setServiceParent(application)


------------------------------------- traceback 
---------------------------------------------------

$ python twistd.py -noy application.py
2005/04/12 13:15 EST [-] Log opened.
2005/04/12 13:15 EST [-] twistd 1.1.1 (/usr/bin/python 2.3.0) starting up
2005/04/12 13:15 EST [-] reactor class: 
twisted.internet.default.SelectReactor
2005/04/12 13:15 EST [-] Loading application.py...
2005/04/12 13:15 EST [-] Loaded.
2005/04/12 13:15 EST [-] Traceback (most recent call last):
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 192, in ?
2005/04/12 13:15 EST [-]     run()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 188, in run
2005/04/12 13:15 EST [-]     app.run(runApp, ServerOptions)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/app.py", 
line 200, in run
2005/04/12 13:15 EST [-]     runApp(config)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 179, in runApp
2005/04/12 13:15 EST [-]     startApplication(config, application)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 163, in startApplication
2005/04/12 13:15 EST [-] 
service.IService(application).privilegedStartService()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/service.py", 
line 188, in privilegedStartService
2005/04/12 13:15 EST [-]     service.privilegedStartService()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/internet.py", 
line 53, in privilegedStartService
2005/04/12 13:15 EST [-]     self._port = self._getPort()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/internet.py", 
line 68, in _getPort
2005/04/12 13:15 EST [-]     return getattr(reactor, 
'listen'+self.method)(*self.args, **self.kwargs)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/default.py", 
line 210, in listenMulticast
2005/04/12 13:15 EST [-]     p = udp.MulticastPort(port, protocol, 
interface, maxPacketSize, self)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/udp.py", 
line 66, in __init__
2005/04/12 13:15 EST [-]     assert isinstance(proto, 
protocol.DatagramProtocol)
2005/04/12 13:15 EST [-] AssertionError



From exarkun at divmod.com  Mon Apr 11 23:50:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 12 Apr 2005 03:50:39 GMT
Subject: [Twisted-Python] simple multicast beacon problem ...
In-Reply-To: <425B4087.4000701@anu.edu.au>
Message-ID: <20050412035039.13806.1288994948.divmod.quotient.60503@ohm>

On Tue, 12 Apr 2005 13:29:11 +1000, Darran Edmundson <darran.edmundson at anu.edu.au> wrote:
>
> I'm relatively new to Twisted and am struggling to create a multicast
> beacon with the application framework.   This beacon simply sends out
> a datagram every second, no listening at all. I've appended a short sample
> program and traceback to this email in the hope that someone can
> point out the presumably simple usage error.  For the life of me I can't
> spot it.  Here's the last bit of the traceback:
> 
> [snip]

  UDP and multicast don't use factories.  Instantiate your DatagramProtocol directly and pass it to listenMulticast().

  Jp



From orbitz at ezabel.com  Tue Apr 12 07:55:53 2005
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Tue, 12 Apr 2005 07:55:53 -0400
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <425ACFD2.90405@adelphia.net>
References: <4259BC59.7060106@adelphia.net> <ir4u0mdbci6.fsf@minos.phy.bnl.gov>
	<425ACFD2.90405@adelphia.net>
Message-ID: <b8ca9051c02aa54addafed7b800432d0@ezabel.com>

So you're going to parse their SQL statements for bad statements?

On Apr 11, 2005, at 3:28 PM, Mel Irizarry wrote:

>  Brett Viren wrote:
> Mel Irizarry <melirizarry at adelphia.net>  writes:
>
>
> I am in need of a server that will allow multiple clients to connect,
> take a MySQL Statement from the client, execute it and return the
> results to the client.  Is there a good example that I could download
> and perhaps modify?
>
> I must not understand because this is exactly what "mysqld" does.
>
> -Brett.
>
> _______________________________________________
> Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  I do not want the clients to connect directly to MySQL.? It's a 
> security issue.
>
>
> -- 
> Best Regards,
>
> Mel Irizarry
>
> -----------------------------
> I can't go to school 'cause I ain't got a gun
> I ain't got a gun 'cause I ain't got a job
> I can't get a job 'cause I can't go to school
>
> Lost in America - Alice Cooper
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From ssmith at vislab.usyd.edu.au  Tue Apr 12 22:37:34 2005
From: ssmith at vislab.usyd.edu.au (Steve Smith)
Date: Wed, 13 Apr 2005 12:37:34 +1000
Subject: [Twisted-Python] Getting SSL context of protocol session
Message-ID: <1113359854.25184.24.camel@hail.vislab.usyd.edu.au>

Hi,

How do I retrieve the SSL context for a given protocol session object?
For example, with the echo-server:

# -------- 
class ServerContextFactory:    
    def getContext(self):
        return SSL.Context(SSL.SSLv23_METHOD)

class Echo(Protocol):
    def dataReceived(self, data):
        # I want to check the identity in the client certificate at 
        # this point.  Therefore I need the current SSL context.
        self.transport.write(data)

factory = Factory()
factory.protocol = Echo
reactor.listenSSL(8000, factory, ServerContextFactory())
reactor.run()
# -------- 

Currently there appears to be no way of linking the context and the
protocol handler for the connection.  Is there a way around this?

Cheers,
Steve




From vladdrac at gmail.com  Wed Apr 13 06:29:27 2005
From: vladdrac at gmail.com (Ivo van der Wijk)
Date: Wed, 13 Apr 2005 12:29:27 +0200
Subject: [Twisted-Python] wxpython issues
Message-ID: <ddd594ba050413032943df7b4e@mail.gmail.com>

Hi,

I know there are issues with wxPython (not exactly sure which though -
is there anything documented about this?)

Anyway, wxPython is, at this moment, still my prefered GUI Toolkit
(and Wax even makes it rather pythonic) and Twisted is my prefered
choice for networking, so I really need the support :)

I'm currently having issues with wx 2.5.3 - the GUI is not drawn.

I've found out that this issue is caused in wxreactor.py - the timer
is scheduled every 1msec (which the new wx perhaps actually can
handle!), simultate is being run for 10msec. and won't finish in time
for the new event.

Changing the interval in wxreactor.py to 50msec solves my problem. All
of this is with twisted 1.3.0rc1

Cheers

  Ivo

-- 
Drs. I.R. van der Wijk                                      -=-
Korte Leidsedwarsstraat 12                                 Amaze
1017 RC Amsterdam, NL                                       -=-
T +31-20-4688336         F +31-20-4688337       Zope/Plone/Content Management
W http://www.amaze.nl    E info at amaze.nl           Open Source Solutions
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy
PGP http://vanderwijk.info/pgp



From itamar at itamarst.org  Wed Apr 13 11:20:43 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Apr 2005 11:20:43 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <ddd594ba050413032943df7b4e@mail.gmail.com>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
Message-ID: <1113405643.8373.11.camel@localhost.localdomain>

On Wed, 2005-04-13 at 12:29 +0200, Ivo van der Wijk wrote:

> Changing the interval in wxreactor.py to 50msec solves my problem. All
> of this is with twisted 1.3.0rc1

We could make the interval settable at runtime, I suppose, but I've had
other issues reported with wxreactor. If you don't care about
responsiveness of network or GUI too much it's probably fine, though.




From gmcdonald at infocomp.com  Wed Apr 13 19:27:12 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Thu, 14 Apr 2005 09:27:12 +1000
Subject: [Twisted-Python] 2.0 windows installers
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4D2A@XCHANGE>

Michael,

The win installers are available from sourceforge:

http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc2)-py2
.3.exe

and

http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc2)-py2
.4.exe

(the docs come with the source distro).

Grant

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Michael
Schneider
Sent: 08 April 2005 07:34
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] 2.0 windows installers


Sorry for the supid question,  I have looked around the twisted site and 
I can't find the windows installer for twisted 2.0.

Could some kind person point me to it?

Thanks
Mike

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050414/e636ca7e/attachment.htm 

From anthony at interlink.com.au  Wed Apr 13 22:58:11 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Thu, 14 Apr 2005 12:58:11 +1000
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <ddd594ba050413032943df7b4e@mail.gmail.com>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
Message-ID: <200504141258.12995.anthony@interlink.com.au>


The problem has been that wx's timer promises "no worse
than 1s" resolution. In practice, it's been utterly unable to 
hit less than 100ms on Windows, and 20ms on Linux is a
sometimes-thing. The only real solution that works robustly
is to run wx and twisted in separate threads. If there's a new
version of wx, you should probably try running wxreactor with
a LoopingCall set to 1ms, and see what timer it can hit 
reliably.

Anthony
-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From darran.edmundson at anu.edu.au  Wed Apr 13 23:08:03 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Thu, 14 Apr 2005 13:08:03 +1000
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504141258.12995.anthony@interlink.com.au>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
	<200504141258.12995.anthony@interlink.com.au>
Message-ID: <425DDE93.6080005@anu.edu.au>

Anthony Baxter wrote:
> The problem has been that wx's timer promises "no worse
> than 1s" resolution. In practice, it's been utterly unable to 
> hit less than 100ms on Windows, and 20ms on Linux is a
> sometimes-thing. The only real solution that works robustly
> is to run wx and twisted in separate threads. If there's a new
> version of wx, you should probably try running wxreactor with
> a LoopingCall set to 1ms, and see what timer it can hit 
> reliably.

I wonder if anyone has a minimalist demo of wx and twisted
running in different threads?  (I ask only because I'm
under the proverbial gun to GUIify my twisted app.)

Cheers,
Darran.

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088



From uwe at oss4u.com  Wed Apr 13 23:26:46 2005
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Wed, 13 Apr 2005 20:26:46 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504141258.12995.anthony@interlink.com.au>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
	<200504141258.12995.anthony@interlink.com.au>
Message-ID: <200504132026.46417.uwe@oss4u.com>

You probably better switch to using separate threads.
Although I basically invented the timer driven "eventloop starving" quite a 
while ago, published it in the python cookbook (which eventually was turned 
into wxreactor by Itamar), I meanwhile switched my application to multiple 
threads. Works way better, particularly on windows.
The timer-eventloop works fine for smaller applications with little to 
moderate network usage, the moment you start transferring more data over the 
network you basically starve both eventloops to death, because neither of the 
loops gets enough CPU attention to do the job properly.

You might want to check out this example:

 http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample

It's a basic example of multiple threads, but it will give you the idea. 
I've written a network wrapper layer to make this whole thing more easy to 
handle, but I can't put this online just yet (contract reasons) - and it's 
very specialized for my application anyways.  Just to give you a hint: once 
you understood how the above example works, you can write wrapper classes for 
the remote referenceable interfaces of twisted. This allows you to use the 
twisted interface the way it's documented without having to fiddle around 
with the threads.

Hope that gives you some clues

UC



On Wednesday 13 April 2005 19:58, Anthony Baxter wrote:
> The problem has been that wx's timer promises "no worse
> than 1s" resolution. In practice, it's been utterly unable to
> hit less than 100ms on Windows, and 20ms on Linux is a
> sometimes-thing. The only real solution that works robustly
> is to run wx and twisted in separate threads. If there's a new
> version of wx, you should probably try running wxreactor with
> a LoopingCall set to 1ms, and see what timer it can hit
> reliably.
>
> Anthony

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417



From ken at kenkinder.com  Thu Apr 14 13:55:27 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 14 Apr 2005 12:55:27 -0500
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net>
References: <4259BC59.7060106@adelphia.net>
Message-ID: <425EAE8F.9030201@kenkinder.com>

Mel Irizarry wrote:

> I am in need of a server that will allow multiple clients to connect, 
> take a MySQL Statement from the client, execute it and return the 
> results to the client.  Is there a good example that I could download 
> and perhaps modify?

I'm not sure how clients would be connecting, but it sounds like you 
want Twisted to actually behave as a MySQL server. This is probably 
going to be tricky because you're going to have to re-implement the 
MySQL server-side protocol.

If having clients connect through another protocol like Perspective 
Broker is an option, you could get by pretty easily. I attached a couple 
of files that basically combine the twisted perspective broker and rdbms 
examples.

-Ken

-------------- next part --------------
A non-text attachment was scrubbed...
Name: QueryProxy.py
Type: application/x-python
Size: 559 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050414/f3b53f93/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: QueryProxyClient.py
Type: application/x-python
Size: 575 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050414/f3b53f93/attachment-0001.bin 

From mailinglist.account at gmail.com  Thu Apr 14 15:34:52 2005
From: mailinglist.account at gmail.com (Anthony Tarlano)
Date: Thu, 14 Apr 2005 21:34:52 +0200
Subject: [Twisted-Python] Fwd: [XML-SIG] Query re: Xml and Flash
In-Reply-To: <BAY2-F315CDEF56B5E74E8D05019F1330@phx.gbl>
References: <BAY2-F315CDEF56B5E74E8D05019F1330@phx.gbl>
Message-ID: <f2b5731905041412346a1faef@mail.gmail.com>

---------- Forwarded message ----------
From: Claire Mc Entee <claire_mcentee at hotmail.com>
Date: Apr 12, 2005 7:12 PM
Subject: [XML-SIG] Query re: Xml and Flash
To: xml-sig at python.org


Hello there,
I am developing a site using XML and Flash and I was wondering if you had
any ideas as to which book would be the best to buy?

Kind regards,
Claire Mc Entee

_________________________________________________________________
Don't know what Meegos are? Click to find out. http://meegos.msn.ie

_______________________________________________
XML-SIG maillist  -  XML-SIG at python.org
http://mail.python.org/mailman/listinfo/xml-sig



From ryanthiessen at gmail.com  Thu Apr 14 22:19:38 2005
From: ryanthiessen at gmail.com (Ryan Thiessen)
Date: Thu, 14 Apr 2005 19:19:38 -0700
Subject: [Twisted-Python] Question about deferreds and ClientCreator
Message-ID: <26f22bfe0504141919573b434a@mail.gmail.com>

Hello,

I'm just starting out with twisted, and it's a very impressive
framework.  I'm still learning the concepts though, and feel like I'm
missing something important.  I get the idea of deferred callbacks,
but there are cases where I'd like to implement something directly and
I cannot figure out how to accomplish this.

I'm attempting to write an application based on the example found here:
http://twistedmatrix.com/projects/words/documentation/examples/oscardemo.py

The example I can understand perfectly, I can see how it creates the
deferred callback and runs through the reactor, and I can tweak it to
my heart's content.  But that is targeted as a client but in a
server-side operation like a bit.  Instead, what happens if you are
writing a program that requires user input?  In the example, the
program is run by the reactor and it depends on external input to
cause the callbacks and generate activity.

Grr.. it seems like I'm talking in circles, and I'm probably using the
wrong terminology.  What I'm trying to do is access the "sendMessage"
function of the oscardemo.py from outside that class.  I have
functionality in a GTK2 window that is intended to send a message
using oscar, but I cannot figure out how to take advantage of the
protocol.ClientCreator to do that.  If I assign a variable to
protocol.ClientCreator it tells me it is a Deferred
OscarAuthenticator, but I cannot make the mental leap to figure out
how to manipulate that in order to send messages.  It seems that I
should be using callbacks since it is deferred, but I can't see how
I'd do that to accomplish my goals.

Is using ClientCreator the wrong step for me here, or does that
provide the sort of functionality I am looking for?  If I need to
RTFM, can someone point me at the correct manual to read?  I've read
the HOWTOs on deferred and can only seem to get information about
callbacks and I can't figure out how to use callbacks to provide
user-supplied messages.

Sorry for my lack of clarity, as I said I'm still quite new at this.
-- 
Cheers,
-Ryan Thiessen-



From twisted-python at twistedmatrix.com  Fri Apr 15 01:13:34 2005
From: twisted-python at twistedmatrix.com (Shawn Church)
Date: Thu, 14 Apr 2005 22:13:34 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504132026.46417.uwe@oss4u.com>
Message-ID: <20050414.yIu.09204200@dev-server>

I am new to twisted and also experienced problems using wxreactor.  After
reading some earlier posts to this message list I wrote a wx.App sub-class
that polls the reactor ONLY when the GUI requires data from twisted:

# This is a method of derived wx.App class I'm leaving out init/clean up
methods:
def twistedCall(self,deferredFunction,timeOut=3.0):
""" Call a remote method and return when it is done (or times out) """
   class WaitForDeferred(object):
      def __call__(self,deferredFunction,timeOut=3.0):
         self.loop=True; self.returnValue=None
         deferredFunction().addBoth(self.__callback)
         if timeOut>0:
            self.timeOut=reactor.callLater(
               timeOut,self.__callback,
               Failure("Timeout while connecting to host",TimeoutError)
            )
         else: self.timeOut=None

         while self.loop:
            reactor.runUntilCurrent();
            reactor.iterate(0)

         if isinstance(self.returnValue,Failure):
            self.returnValue.trap()
	 return self.returnValue

      def __callback(self,arg):
         if self.timeOut is not None: self.timeOut.cancel()
         self.timeOut=None; self.returnValue=arg; self.loop=False

   try:
      return WaitForDeferred()(deferredFunction,timeOut)
   # This is to reconnect to server after the connection is broken (client
factory               is overridden to
        # reconnect as well)  Is there a better way of doing this???:
   except pb.DeadReferenceError:
      self.twistedPerspective=self.twistedCall(lambda:
         self.twistedFactory.login(self.twistedCredentials)
      )
      return WaitForDeferred()(deferredFunction,timeOut)

So when the application needs to login,  request data,  etc.,  it calls
wx.GetApp().twistedCall(...) and the wx app is "blocked" until  the deferred
completes.  In addition I have a wx.Timer poll set at one second to do one
reactor iteration "just in case" although things seem to run fine without this
extra poll.

In preliminary tests I was able to run 10+ client instances each requesting
551k blocks of data at 1 second intervals and everything seemed to run fine
(some of the wx polls were missed but twisted never dropped anything).  Note
that this is a PB based client/server application running (both clients and
sever) on a 1.7 Ghz P4 w/1 GB under Linux.

I was pretty impressed with this performance esp. since the server was reading
the 551k from disk each time it was requested with a simple "return
file(read(...))" statement and I did not even wrap the server code in a
deferred like I should of.  I did this test to see if the the reactor loop,
as implemented,  would "starve" and drop data producing timeout errors.

This testing was done before I read this latest post and before any actual
production application code has been developed.  So am I better off just
scrapping this approach and adopting a threaded method?  The reason I adopted
the above approach was that, in general,  the applications I write NEED to
wait for data before they can continue.  For example,  the user enter a userid
and password and hits the "login" button. No further (interactive) processing
can be performed until the server validates the input and authorizes/rejects
the login.

I have over 20 years applications exp but minimal networking/systems type exp
so forgive me if my questions (and testing approach) are naive.  Also,  I
apologize for the length of this post. I tried to avoid posting so much code
but could not find a better way to explain what I was doing (I will be happy
to provide complete examples if anyone is interested).



Shawn Church
Information Systems Consultant
sl_church at sbcglobal.net
http://SChurchComputers.com


Uwe C. Schroeder (uwe at oss4u.com) wrote:
>
> You probably better switch to using separate threads.
> Although I basically invented the timer driven "eventloop starving" quite a
> while ago, published it in the python cookbook (which eventually was turned
> into wxreactor by Itamar), I meanwhile switched my application to multiple
> threads. Works way better, particularly on windows.
> The timer-eventloop works fine for smaller applications with little to
> moderate network usage, the moment you start transferring more data over the
> network you basically starve both eventloops to death, because neither of the
> loops gets enough CPU attention to do the job properly.
>
> You might want to check out this example:
>
>  http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample
>
> It's a basic example of multiple threads, but it will give you the idea.
> I've written a network wrapper layer to make this whole thing more easy to
> handle, but I can't put this online just yet (contract reasons) - and it's
> very specialized for my application anyways.  Just to give you a hint: once
> you understood how the above example works, you can write wrapper classes for
> the remote referenceable interfaces of twisted. This allows you to use the
> twisted interface the way it's documented without having to fiddle around
> with the threads.
>
> Hope that gives you some clues
>
> UC
>
>
>
> On Wednesday 13 April 2005 19:58, Anthony Baxter wrote:
> > The problem has been that wx's timer promises "no worse
> > than 1s" resolution. In practice, it's been utterly unable to
> > hit less than 100ms on Windows, and 20ms on Linux is a
> > sometimes-thing. The only real solution that works robustly
> > is to run wx and twisted in separate threads. If there's a new
> > version of wx, you should probably try running wxreactor with
> > a LoopingCall set to 1ms, and see what timer it can hit
> > reliably.
> >
> > Anthony
>
> --
> Open Source Solutions 4U, LLC	2570 Fleetwood Drive
> Phone:  +1 650 872 2425		San Bruno, CA 94066
> Cell:   +1 650 302 2405		United States
> Fax:    +1 650 872 2417
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ssmith at vislab.usyd.edu.au  Fri Apr 15 01:29:26 2005
From: ssmith at vislab.usyd.edu.au (Steve Smith)
Date: Fri, 15 Apr 2005 15:29:26 +1000
Subject: [Twisted-Python] Getting SSL context of protocol session
In-Reply-To: <1113359854.25184.24.camel@hail.vislab.usyd.edu.au>
References: <1113359854.25184.24.camel@hail.vislab.usyd.edu.au>
Message-ID: <1113542966.18571.11.camel@moth.vislab.usyd.edu.au>

On Wed, 2005-04-13 at 12:37 +1000, Steve Smith wrote:
> Hi,
> 
> How do I retrieve the SSL context for a given protocol session object?

For the public record I haven't been able to find a straightforward way
to do this, as the connection discards the SSL context it creates after
passing it to OpenSSL.  However the alternative is to use a TLS
negotiation within the protocol (aka 'STARTTLS') which gives you more
control over the handshaking phase.  I've placed some notes and example
code here:

    http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes

Cheers,
Steve





From glyph at divmod.com  Fri Apr 15 10:27:33 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 10:27:33 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <20050414.yIu.09204200@dev-server>
References: <20050414.yIu.09204200@dev-server>
Message-ID: <425FCF55.6050505@divmod.com>

Shawn Church wrote:
> I am new to twisted and also experienced problems using wxreactor.  After
> reading some earlier posts to this message list I wrote a wx.App sub-class
> that polls the reactor ONLY when the GUI requires data from twisted:

Eep!  This is definitely broken.

The simplest way to explain why is: what if you are writing a chat 
program, and your GUI might need to be notified about network events at 
any time?  Deferreds are just one way that Twisted can trigger events. 
There are lots of other callbacks which your program might be interested in.



From foom at fuhm.net  Fri Apr 15 10:36:30 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 15 Apr 2005 10:36:30 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <425FCF55.6050505@divmod.com>
References: <20050414.yIu.09204200@dev-server> <425FCF55.6050505@divmod.com>
Message-ID: <df0dbf3c19bcb8981d38c57df083a17f@fuhm.net>


On Apr 15, 2005, at 10:27 AM, Glyph Lefkowitz wrote:

> Shawn Church wrote:
>> I am new to twisted and also experienced problems using wxreactor.  
>> After
>> reading some earlier posts to this message list I wrote a wx.App 
>> sub-class
>> that polls the reactor ONLY when the GUI requires data from twisted:
>
> Eep!  This is definitely broken.
>
> The simplest way to explain why is: what if you are writing a chat 
> program, and your GUI might need to be notified about network events 
> at any time?  Deferreds are just one way that Twisted can trigger 
> events. There are lots of other callbacks which your program might be 
> interested in.

Well, if you know that can't happen, (or that you aren't interested if 
it does happen) then you're all set. :)

James




From glyph at divmod.com  Fri Apr 15 10:59:46 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 10:59:46 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <df0dbf3c19bcb8981d38c57df083a17f@fuhm.net>
References: <20050414.yIu.09204200@dev-server> <425FCF55.6050505@divmod.com>
	<df0dbf3c19bcb8981d38c57df083a17f@fuhm.net>
Message-ID: <425FD6E2.2040900@divmod.com>

James Y Knight wrote:

> Well, if you know that can't happen, (or that you aren't interested if 
> it does happen) then you're all set. :)

True enough, but in that case, don't use Twisted - it's just extra 
complexity.  urllib will do just fine.



From cmoad at indiana.edu  Fri Apr 15 12:39:03 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Fri, 15 Apr 2005 11:39:03 -0500
Subject: [Twisted-Python] Raise soap faults
Message-ID: <425FEE27.8080502@indiana.edu>

	I have a soap server that I am trying to make handle errors correctly.
 When there is an error I just return a SOAPpy.faultType instance.  The
client should correspondlingly raise a python exception when it gets
this.  Unfortunately it looks like twisted is returning the faultType
instance as a valid response.  Here is the returned SOAP:

*** Incoming SOAP ******************************************************
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope
SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
<SOAP-ENV:Body>
<pdbChainFileCompressedResponse SOAP-ENC:root="1">
<SOAP-ENV:Fault SOAP-ENC:root="1">
<faultcode>ArgumentError</faultcode>
<faultstring>Invalid PDB Code</faultstring>
</SOAP-ENV:Fault>
</pdbChainFileCompressedResponse>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
************************************************************************

and the python result literally is:

<SOAPpy.Types.structType Fault at -1213565780>: {'faultcode':
'ArgumentError', 'faultstring': 'Invalid PDB Code'}

So the soappy client is treating this as a valid return value, and not
raising an exception like it should.

Any ideas?

Thanks,
	Charlie



From cmoad at indiana.edu  Fri Apr 15 13:28:08 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Fri, 15 Apr 2005 12:28:08 -0500
Subject: [Twisted-Python] Re: Raise soap faults
In-Reply-To: <425FEE27.8080502@indiana.edu>
References: <425FEE27.8080502@indiana.edu>
Message-ID: <425FF9A8.8050908@indiana.edu>

Why is it you always find the answer to a problem after you ping the
mailing list?  For future reference, the deferred returned from the
soap_method should "raise" the faultType in its callbacks, not "return"
it as I was doing.

Thanks,

Charles Moad wrote:
> 	I have a soap server that I am trying to make handle errors correctly.
>  When there is an error I just return a SOAPpy.faultType instance.  The
> client should correspondlingly raise a python exception when it gets
> this.  Unfortunately it looks like twisted is returning the faultType
> instance as a valid response.  Here is the returned SOAP:
> 
> *** Incoming SOAP ******************************************************
> <?xml version="1.0" encoding="UTF-8"?>
> <SOAP-ENV:Envelope
> SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
> <SOAP-ENV:Body>
> <pdbChainFileCompressedResponse SOAP-ENC:root="1">
> <SOAP-ENV:Fault SOAP-ENC:root="1">
> <faultcode>ArgumentError</faultcode>
> <faultstring>Invalid PDB Code</faultstring>
> </SOAP-ENV:Fault>
> </pdbChainFileCompressedResponse>
> </SOAP-ENV:Body>
> </SOAP-ENV:Envelope>
> ************************************************************************
> 
> and the python result literally is:
> 
> <SOAPpy.Types.structType Fault at -1213565780>: {'faultcode':
> 'ArgumentError', 'faultstring': 'Invalid PDB Code'}
> 
> So the soappy client is treating this as a valid return value, and not
> raising an exception like it should.
> 
> Any ideas?
> 
> Thanks,
> 	Charlie
> 



From teratorn at twistedmatrix.com  Fri Apr 15 13:39:48 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 16 Apr 2005 03:39:48 +1000
Subject: [Twisted-Python] Raise soap faults
In-Reply-To: <425FEE27.8080502@indiana.edu>
References: <425FEE27.8080502@indiana.edu>
Message-ID: <opspabcmiby3d107@aspen>

On Fri, 15 Apr 2005 11:39:03 -0500, Charles Moad <cmoad at indiana.edu> wrote:

> 	I have a soap server that I am trying to make handle errors correctly.
>  When there is an error I just return a SOAPpy.faultType instance.  The
> client should correspondlingly raise a python exception when it gets
> this.  Unfortunately it looks like twisted is returning the faultType
> instance as a valid response.  Here is the returned SOAP:

Yeah, I think that is right.

I believe you are supposed to raise an exception from your soap_* methods  
if you want a real SOAP fault to be returned. You may simply raise your  
faultType instance, or a faultType instance will be created automatically.

Though on the client side it still won't raise an exception, but you will  
hopefully get your faultType instance. You may check for it explicitly and  
raise it, if you like.

This behavior is probably wrong, and should be modified to be more in line  
with our other RPC implementations and SOAPpy itself. It would also be  
nice for Twisted to assert that the user isn't returning faultType  
instances from their soap_* methods, and if they are to advise them of the  
correct procedure.

Would you please open a bug on the tracker and assign it to me?  
http://twistedmatrix.com/bugs/

Itamar, you're listed as the soap.py maintainer.. does this sound about  
right to you?

-Eric

>
> *** Incoming SOAP ******************************************************
> <?xml version="1.0" encoding="UTF-8"?>
> <SOAP-ENV:Envelope
> SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
> <SOAP-ENV:Body>
> <pdbChainFileCompressedResponse SOAP-ENC:root="1">
> <SOAP-ENV:Fault SOAP-ENC:root="1">
> <faultcode>ArgumentError</faultcode>
> <faultstring>Invalid PDB Code</faultstring>
> </SOAP-ENV:Fault>
> </pdbChainFileCompressedResponse>
> </SOAP-ENV:Body>
> </SOAP-ENV:Envelope>
> ************************************************************************
>
> and the python result literally is:
>
> <SOAPpy.Types.structType Fault at -1213565780>: {'faultcode':
> 'ArgumentError', 'faultstring': 'Invalid PDB Code'}
>
> So the soappy client is treating this as a valid return value, and not
> raising an exception like it should.
>
> Any ideas?
>
> Thanks,
> 	Charlie
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From cmoad at indiana.edu  Fri Apr 15 14:26:39 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Fri, 15 Apr 2005 13:26:39 -0500
Subject: [Twisted-Python] Re: Raise soap faults
In-Reply-To: <E1DMV6q-0007sI-00@pyramid.twistedmatrix.com>
References: <E1DMV6q-0007sI-00@pyramid.twistedmatrix.com>
Message-ID: <4260075F.2060609@indiana.edu>

> Though on the client side it still won't raise an exception, but you will  
> hopefully get your faultType instance. You may check for it explicitly and  
> raise it, if you like.

When a soap fault is returned the http return code is 500, so the client
does actually see this and raise an exception.  You do not have to
explicitly check if it was a fault after ever call to the service.



From twisted-python at twistedmatrix.com  Fri Apr 15 14:30:22 2005
From: twisted-python at twistedmatrix.com (Shawn Church)
Date: Fri, 15 Apr 2005 11:30:22 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <425FD6E2.2040900@divmod.com>
Message-ID: <20050415.RZz.76762100@dev-server>

It is entirely possible that twisted is NOT what I should be using.  What I
want to do basically is: 1) Provide a consistant login for users independent
of any DB; 2) Provide a security framework based upon number 1 (i.e. user sam
can do a,b, and c but user john can only do a);  and 3) Provide the abililty
for the server to query a DB backend in response to requests from the client,
and return the data.  In addition,  it would be very nice to wrap all of this
up in SSL to protect casual "snooping" of data.

I have looked at implementations of Soap,  CORBA,  and Pyro,  none of which
have really statisfied me.  I thought that by using the PB interface of
twisted,  along with a SSL connection,  I could achieve all of my objectives
fairly simply -- once I worked out the details I was able connect,  login,
and transfer data with very little code.

I fully realize that if I want to write a GUI application that depends upon
arbitrary responses from the server (i.e. a chat client to use your example)
then my approach will not work.  What I want to do is have my clients request
data from the server and wait till the data is ready (seems prettty simple
:-))   Twisted seems to do what I want (assuming I can interface with wx),
but if you can point to another package please let me know.

Glyph Lefkowitz (glyph at divmod.com) wrote:
>
> James Y Knight wrote:
>
> > Well, if you know that can't happen, (or that you aren't interested if
> > it does happen) then you're all set. :)
>
> True enough, but in that case, don't use Twisted - it's just extra
> complexity.  urllib will do just fine.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From bkirsch at osafoundation.org  Fri Apr 15 15:36:29 2005
From: bkirsch at osafoundation.org (Brian Kirsch)
Date: Fri, 15 Apr 2005 12:36:29 -0700
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>
References: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>
Message-ID: <426017BD.1060800@osafoundation.org>

Hey guys,
Question for you. In the 2.0 Twisted release the 
policies.ProtocolWrapper changed on line 31 to now set the 
wrappedProtocol.factory to point to the wrappingFactory.


  def __init__(self, factory, wrappedProtocol):
        self.wrappedProtocol = wrappedProtocol
<      self.factory = factory
 >      self.factory = wrappedProtocol.factory = factory



 I was wondering what the reason for the change was? The change caused 
our current code to break (an easy fix). It seems to me that the wrapper 
should be transparent to the wrappedProtocol. Changing the protocol's 
factory leads to unexpected behavior if that protocol is depending on 
specific methods or data in the  factory. In fact this change actually 
breaks the Twisted smtp.py code.

   def getMailFrom(self):
        if not self.done:
            self.done = 1
          /  return str(self.factory.fromEmail) #this will now break if 
wrapped/
        else:
            return None


Brian Kirsch - Email Framework Engineer
Open Source Applications Foundation
543 Howard St. 5th Floor
San Francisco, CA 94105
(415) 946-3056
http://www.osafoundation.org




From glyph at divmod.com  Fri Apr 15 15:53:16 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 15:53:16 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <20050415.RZz.76762100@dev-server>
References: <20050415.RZz.76762100@dev-server>
Message-ID: <42601BAC.7090306@divmod.com>

Shawn Church wrote:

> I have looked at implementations of Soap,  CORBA,  and Pyro,  none of which
> have really statisfied me.  I thought that by using the PB interface of
> twisted,  along with a SSL connection,  I could achieve all of my objectives
> fairly simply -- once I worked out the details I was able connect,  login,
> and transfer data with very little code.

All of this, and more, is possible with Twisted.

> I fully realize that if I want to write a GUI application that depends upon
> arbitrary responses from the server (i.e. a chat client to use your example)
> then my approach will not work.

That was an example of where the brokenness would be instantly visible 
to any user of your program.  Internally Twisted makes many assumptions 
about the reactor generally being running which may cause you lots of 
little surprises if you use the technique you've proposed.

> What I want to do is have my clients request
> data from the server and wait till the data is ready (seems prettty simple
> :-))

the Twisted way is to invert it so that rather than saying "Wait until Y 
is done, then do X", you say "Do X when Y is done."  Among other things, 
this approach lets you do more than one thing at a time.  For example, 
you might want to put a "cancel" button in your UI if your application 
has to run over the internet.  Responding to the cancel button at the 
same time as waiting for a request's response is a second thing, so you 
need to be worried about concurrency even in simple applications.

 > Twisted seems to do what I want (assuming I can interface with wx),
> but if you can point to another package please let me know.

I would point you at gtk, Tkinter, or win32api, not an alternative to 
Twisted :).  wx is the problem here: its mainloop is badly broken, on 
all platforms.  Twisted works fine.  The easiest fix, if wx is a genuine 
requirement, is to run the wx main loop in a Twisted thread, using 
callInThread, so that the Twisted event loop (i.e. the one that isn't 
horribly broken) is "in charge".

I believe that future releases of wx are fixing this issue, as well, 
since you're far from the first person to have complained about it.  I 
hope that this happens soon, since despite its many flaws wx is very 
popular in the Python community.

P.S.: If I seem negative towards WX, it is only because my _only_ use of 
it is answering this same question over and over again.  I'm sure it has 
some positive points too, but I never discover them, because for my own 
development projects "non-broken mainloop" is criterion #1 for the GUI 
framework ;-)



From glyph at divmod.com  Fri Apr 15 15:55:23 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 15:55:23 -0400
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <426017BD.1060800@osafoundation.org>
References: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>
	<426017BD.1060800@osafoundation.org>
Message-ID: <42601C2B.9090107@divmod.com>

Brian Kirsch wrote:
> Hey guys,

> In fact this change actually 
> breaks the Twisted smtp.py code.

Wow.  That does look broken.  I suggest that if nobody explains this by 
the end of the day that the change be reverted right away...



From teratorn at twistedmatrix.com  Fri Apr 15 16:07:46 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 16 Apr 2005 06:07:46 +1000
Subject: [Twisted-Python] Re: Raise soap faults
In-Reply-To: <4260075F.2060609@indiana.edu>
References: <E1DMV6q-0007sI-00@pyramid.twistedmatrix.com>
	<4260075F.2060609@indiana.edu>
Message-ID: <opspah68uey3d107@aspen>

On Fri, 15 Apr 2005 13:26:39 -0500, Charles Moad <cmoad at indiana.edu> wrote:

>> Though on the client side it still won't raise an exception, but you  
>> will
>> hopefully get your faultType instance. You may check for it explicitly  
>> and
>> raise it, if you like.
>
> When a soap fault is returned the http return code is 500, so the client
> does actually see this and raise an exception.  You do not have to
> explicitly check if it was a fault after ever call to the service.

Ah, yes. I was only looking at the soap code and it didn't occur to me  
that it would be a 500 status.



From Sl_Church at sbcglobal.net  Fri Apr 15 16:28:35 2005
From: Sl_Church at sbcglobal.net (Shawn Church)
Date: Fri, 15 Apr 2005 13:28:35 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <42601BAC.7090306@divmod.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
Message-ID: <426023F3.6030009@sbcglobal.net>

OK,  I will adopt the threaded approach.  Despite it's mainloop problems
(they can surface even without twisted) I still like wx.  I develop on a
linux system but support mostly windows clients and wx makes this easy. 
Thanks to everyone for their valuable responses to my questions.

Glyph Lefkowitz wrote:

> Shawn Church wrote:
>
>> I have looked at implementations of Soap,  CORBA,  and Pyro,  none of
>> which
>> have really statisfied me.  I thought that by using the PB interface of
>> twisted,  along with a SSL connection,  I could achieve all of my
>> objectives
>> fairly simply -- once I worked out the details I was able connect, 
>> login,
>> and transfer data with very little code.
>
>
> All of this, and more, is possible with Twisted.
>
>> I fully realize that if I want to write a GUI application that
>> depends upon
>> arbitrary responses from the server (i.e. a chat client to use your
>> example)
>> then my approach will not work.
>
>
> That was an example of where the brokenness would be instantly visible
> to any user of your program.  Internally Twisted makes many
> assumptions about the reactor generally being running which may cause
> you lots of little surprises if you use the technique you've proposed.
>
>> What I want to do is have my clients request
>> data from the server and wait till the data is ready (seems prettty
>> simple
>> :-))
>
>
> the Twisted way is to invert it so that rather than saying "Wait until
> Y is done, then do X", you say "Do X when Y is done."  Among other
> things, this approach lets you do more than one thing at a time.  For
> example, you might want to put a "cancel" button in your UI if your
> application has to run over the internet.  Responding to the cancel
> button at the same time as waiting for a request's response is a
> second thing, so you need to be worried about concurrency even in
> simple applications.
>
> > Twisted seems to do what I want (assuming I can interface with wx),
>
>> but if you can point to another package please let me know.
>
>
> I would point you at gtk, Tkinter, or win32api, not an alternative to
> Twisted :).  wx is the problem here: its mainloop is badly broken, on
> all platforms.  Twisted works fine.  The easiest fix, if wx is a
> genuine requirement, is to run the wx main loop in a Twisted thread,
> using callInThread, so that the Twisted event loop (i.e. the one that
> isn't horribly broken) is "in charge".
>
> I believe that future releases of wx are fixing this issue, as well,
> since you're far from the first person to have complained about it.  I
> hope that this happens soon, since despite its many flaws wx is very
> popular in the Python community.
>
> P.S.: If I seem negative towards WX, it is only because my _only_ use
> of it is answering this same question over and over again.  I'm sure
> it has some positive points too, but I never discover them, because
> for my own development projects "non-broken mainloop" is criterion #1
> for the GUI framework ;-)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From uwe at oss4u.com  Fri Apr 15 16:29:10 2005
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 15 Apr 2005 13:29:10 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <42601BAC.7090306@divmod.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
Message-ID: <200504151329.10096.uwe@oss4u.com>

On Friday 15 April 2005 12:53, Glyph Lefkowitz wrote:
> Shawn Church wrote:
> > I have looked at implementations of Soap,  CORBA,  and Pyro,  none of
> > which have really statisfied me.  I thought that by using the PB
> > interface of twisted,  along with a SSL connection,  I could achieve all
> > of my objectives fairly simply -- once I worked out the details I was
> > able connect,  login, and transfer data with very little code.
>
> All of this, and more, is possible with Twisted.
>
> > I fully realize that if I want to write a GUI application that depends
> > upon arbitrary responses from the server (i.e. a chat client to use your
> > example) then my approach will not work.
>
> That was an example of where the brokenness would be instantly visible
> to any user of your program.  Internally Twisted makes many assumptions
> about the reactor generally being running which may cause you lots of
> little surprises if you use the technique you've proposed.
>
> > What I want to do is have my clients request
> > data from the server and wait till the data is ready (seems prettty
> > simple
> >
> > :-))
>
> the Twisted way is to invert it so that rather than saying "Wait until Y
> is done, then do X", you say "Do X when Y is done."  Among other things,
> this approach lets you do more than one thing at a time.  For example,
> you might want to put a "cancel" button in your UI if your application
> has to run over the internet.  Responding to the cancel button at the
> same time as waiting for a request's response is a second thing, so you
> need to be worried about concurrency even in simple applications.
>
>  > Twisted seems to do what I want (assuming I can interface with wx),
> >
> > but if you can point to another package please let me know.
>
> I would point you at gtk, Tkinter, or win32api, not an alternative to
> Twisted :).  wx is the problem here: its mainloop is badly broken, on
> all platforms.  Twisted works fine.  The easiest fix, if wx is a genuine
> requirement, is to run the wx main loop in a Twisted thread, using
> callInThread, so that the Twisted event loop (i.e. the one that isn't
> horribly broken) is "in charge".
>
> I believe that future releases of wx are fixing this issue, as well,
> since you're far from the first person to have complained about it.  I
> hope that this happens soon, since despite its many flaws wx is very
> popular in the Python community.
>
> P.S.: If I seem negative towards WX, it is only because my _only_ use of
> it is answering this same question over and over again.  I'm sure it has
> some positive points too, but I never discover them, because for my own
> development projects "non-broken mainloop" is criterion #1 for the GUI
> framework ;-)

There are certainly people better suited to respond to this, I'll try anyways. 
The main problem with wx's mainloop is that wx uses the eventloops of the 
platform dependant gui's. If you run wx on Linux with GTK2 it uses the GTK2 
eventloop. On win it uses the windows loop etc. etc.  I'm not sure this can 
be fixed - but as said, there are people who have more in-depth knowledge 
about the issue. Wx is so popular because it works on all platforms in a 
(mostly) consistent way. The only alternative I could think of is TK or JAVA 
SWING (and both look really ugly). If you have to write a gui application 
that has to run on multiple platforms and needs to look a bit more modern, 
you have very few choices. 
Another idea here. Why not write a "wxreactor" that handles the threading 
already and provides a "twisted consistent" API to the gui thread? That way 
one could encapsulate any broken mainloop out there.
Just a thought.


	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417



From bob at redivi.com  Fri Apr 15 16:42:00 2005
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 15 Apr 2005 16:42:00 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504151329.10096.uwe@oss4u.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
	<200504151329.10096.uwe@oss4u.com>
Message-ID: <2d3efbb3f3f16c3f25975fe3c900234a@redivi.com>


On Apr 15, 2005, at 4:29 PM, Uwe C. Schroeder wrote:

> On Friday 15 April 2005 12:53, Glyph Lefkowitz wrote:
>> Shawn Church wrote:
>>> I have looked at implementations of Soap,  CORBA,  and Pyro,  none of
>>> which have really statisfied me.  I thought that by using the PB
>>> interface of twisted,  along with a SSL connection,  I could achieve 
>>> all
>>> of my objectives fairly simply -- once I worked out the details I was
>>> able connect,  login, and transfer data with very little code.
>>
>> All of this, and more, is possible with Twisted.
>>
>>> I fully realize that if I want to write a GUI application that 
>>> depends
>>> upon arbitrary responses from the server (i.e. a chat client to use 
>>> your
>>> example) then my approach will not work.
>>
>> That was an example of where the brokenness would be instantly visible
>> to any user of your program.  Internally Twisted makes many 
>> assumptions
>> about the reactor generally being running which may cause you lots of
>> little surprises if you use the technique you've proposed.
>>
>>> What I want to do is have my clients request
>>> data from the server and wait till the data is ready (seems prettty
>>> simple
>>>
>>> :-))
>>
>> the Twisted way is to invert it so that rather than saying "Wait 
>> until Y
>> is done, then do X", you say "Do X when Y is done."  Among other 
>> things,
>> this approach lets you do more than one thing at a time.  For example,
>> you might want to put a "cancel" button in your UI if your application
>> has to run over the internet.  Responding to the cancel button at the
>> same time as waiting for a request's response is a second thing, so 
>> you
>> need to be worried about concurrency even in simple applications.
>>
>>> Twisted seems to do what I want (assuming I can interface with wx),
>>>
>>> but if you can point to another package please let me know.
>>
>> I would point you at gtk, Tkinter, or win32api, not an alternative to
>> Twisted :).  wx is the problem here: its mainloop is badly broken, on
>> all platforms.  Twisted works fine.  The easiest fix, if wx is a 
>> genuine
>> requirement, is to run the wx main loop in a Twisted thread, using
>> callInThread, so that the Twisted event loop (i.e. the one that isn't
>> horribly broken) is "in charge".
>>
>> I believe that future releases of wx are fixing this issue, as well,
>> since you're far from the first person to have complained about it.  I
>> hope that this happens soon, since despite its many flaws wx is very
>> popular in the Python community.
>>
>> P.S.: If I seem negative towards WX, it is only because my _only_ use 
>> of
>> it is answering this same question over and over again.  I'm sure it 
>> has
>> some positive points too, but I never discover them, because for my 
>> own
>> development projects "non-broken mainloop" is criterion #1 for the GUI
>> framework ;-)
>
> There are certainly people better suited to respond to this, I'll try 
> anyways.
> The main problem with wx's mainloop is that wx uses the eventloops of 
> the
> platform dependant gui's. If you run wx on Linux with GTK2 it uses the 
> GTK2
> eventloop. On win it uses the windows loop etc. etc.  I'm not sure 
> this can
> be fixed - but as said, there are people who have more in-depth 
> knowledge
> about the issue. Wx is so popular because it works on all platforms in 
> a
> (mostly) consistent way. The only alternative I could think of is TK 
> or JAVA
> SWING (and both look really ugly). If you have to write a gui 
> application
> that has to run on multiple platforms and needs to look a bit more 
> modern,
> you have very few choices.
> Another idea here. Why not write a "wxreactor" that handles the 
> threading
> already and provides a "twisted consistent" API to the gui thread? 
> That way
> one could encapsulate any broken mainloop out there.
> Just a thought.

It would make perfect sense to provide an abstract reactor 
implementation that did the select/poll/etc. in a separate thread which 
sends an event to the mainloop to wake up the reactor... it could be 
used to interoperate with just about anything, pygame, wxPython, pygtk, 
Cocoa, etc. and would require very little work to "port".

-bob




From Sl_Church at sbcglobal.net  Fri Apr 15 17:19:46 2005
From: Sl_Church at sbcglobal.net (Shawn Church)
Date: Fri, 15 Apr 2005 14:19:46 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504151329.10096.uwe@oss4u.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
	<200504151329.10096.uwe@oss4u.com>
Message-ID: <42602FF2.1060103@sbcglobal.net>


Uwe C. Schroeder wrote:

>about the issue. Wx is so popular because it works on all platforms in a 
>(mostly) consistent way. The only alternative I could think of is TK or JAVA 
>SWING (and both look really ugly). If you have to write a gui application 
>that has to run on multiple platforms and needs to look a bit more modern, 
>you have very few choices. 
>
>
>	UC
>
>--
>Open Source Solutions 4U, LLC	2570 Fleetwood Drive
>Phone:  +1 650 872 2425		San Bruno, CA 94066
>Cell:   +1 650 302 2405		United States
>Fax:    +1 650 872 2417
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>
Thanks UG,  you summed up my views of the available cross-platform GUI's
better then I could.

SC



From tv at twistedmatrix.com  Sat Apr 16 13:00:17 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 16 Apr 2005 20:00:17 +0300
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <42601C2B.9090107@divmod.com>
References: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>	<426017BD.1060800@osafoundation.org>
	<42601C2B.9090107@divmod.com>
Message-ID: <426144A1.8070902@twistedmatrix.com>

Glyph Lefkowitz wrote:
>> In fact this change actually breaks the Twisted smtp.py code.
> Wow.  That does look broken.  I suggest that if nobody explains this by 
> the end of the day that the change be reverted right away...

Blame spiv.

[0 tv at tao ~/src/twisted/trunk]$ svn log -v -r13494
------------------------------------------------------------------------
r13494 | spiv | 2005-04-07 17:33:58 +0300 (Thu, 07 Apr 2005) | 1 line
Changed paths:
    M /trunk/twisted/protocols/ftp.py
    M /trunk/twisted/protocols/policies.py
    M /trunk/twisted/test/test_ftp.py
    M /trunk/twisted/test/test_policies.py

Refactor untested connection-limiting from FTP server to 
twisted.protocols.policies.LimitTotalConnectionsFactory, with tests.
------------------------------------------------------------------------



From paolo_veronelli at yahoo.it  Sat Apr 16 14:50:02 2005
From: paolo_veronelli at yahoo.it (User Paolino)
Date: Sat, 16 Apr 2005 18:50:02 +0000
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <425FEE27.8080502@indiana.edu>
References: <425FEE27.8080502@indiana.edu>
Message-ID: <42615E5A.1020509@yahoo.it>

def deferredReady(value=False,later=0):
  deferred=Deferred()
  reactor.callLater(later,deferred.callback,value)
  return deferred

def generatorLoop(generator,listOfParams,multi=False):
  lista=[]
  for params in listOfParams:
    if multi:
      lista.append(deferredGenerator(generator)(*params))
    else:
      lista.append(deferredGenerator(generator)(params))  
  return DeferredList(lista)


Thanks Paolino





From exarkun at divmod.com  Sat Apr 16 14:49:37 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 16 Apr 2005 18:49:37 GMT
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <42615E5A.1020509@yahoo.it>
Message-ID: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>

On Sat, 16 Apr 2005 18:50:02 +0000, User Paolino <paolo_veronelli at yahoo.it> wrote:
>def deferredReady(value=False,later=0):
>  deferred=Deferred()
>  reactor.callLater(later,deferred.callback,value)
>  return deferred
>
>def generatorLoop(generator,listOfParams,multi=False):
>  lista=[]
>  for params in listOfParams:
>    if multi:
>      lista.append(deferredGenerator(generator)(*params))
>    else:
>      lista.append(deferredGenerator(generator)(params))   return 
>DeferredList(lista)
>

  What?  Also, why?

  Jp



From exarkun at divmod.com  Sat Apr 16 14:50:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 16 Apr 2005 18:50:09 GMT
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <426144A1.8070902@twistedmatrix.com>
Message-ID: <20050416185009.10340.1796578648.divmod.quotient.6027@ohm>

On Sat, 16 Apr 2005 20:00:17 +0300, Tommi Virtanen <tv at twistedmatrix.com> wrote:
>Glyph Lefkowitz wrote:
>>>In fact this change actually breaks the Twisted smtp.py code.
>>Wow.  That does look broken.  I suggest that if nobody explains this by the 
>>end of the day that the change be reverted right away...
>
>Blame spiv.
>
>[0 tv at tao ~/src/twisted/trunk]$ svn log -v -r13494
>------------------------------------------------------------------------
>r13494 | spiv | 2005-04-07 17:33:58 +0300 (Thu, 07 Apr 2005) | 1 line
>Changed paths:
>    M /trunk/twisted/protocols/ftp.py
>    M /trunk/twisted/protocols/policies.py
>    M /trunk/twisted/test/test_ftp.py
>    M /trunk/twisted/test/test_policies.py
>
>Refactor untested connection-limiting from FTP server to 
>twisted.protocols.policies.LimitTotalConnectionsFactory, with tests.
>------------------------------------------------------------------------
>

  Note that this change was post-2.0.

  Jp



From bob at redivi.com  Sun Apr 17 05:42:28 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 05:42:28 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
Message-ID: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>

In response to the "wxpython issues" thread I had suggested that we 
should have a thread-using reactor that integrates with foreign event 
loops, so I wrote one and committed it 
(twisted.internet.threadedselectreactor).  Since this approach requires 
less maintenance, and whomever maintains the select reactor can 
trivially maintain this as well, I'm "officially" deprecating cfreactor 
(although I never really cared much to maintain it anyway).

An example of using it to integrate with a foreign event loop is at: 
doc/core/examples/Cocoa/SimpleWebClient

It should be relatively trivial to show how it could be used to 
integrate with other event loops (wx, Tkinter, pygame, etc.).  
Effectively, it's compatible with anything that has a thread-safe way 
to notify the main event loop.

In the future, it might make sense to revise the reactor API to support 
"interleave" directly, and change the existing reactors accordingly so 
that more than just select can support this behavior.

-bob




From darran.edmundson at anu.edu.au  Sun Apr 17 06:11:19 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Sun, 17 Apr 2005 20:11:19 +1000
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
Message-ID: <42623647.3070605@anu.edu.au>

Bob Ippolito wrote:
> In response to the "wxpython issues" thread I had suggested that we 
> should have a thread-using reactor that integrates with foreign event 
> loops, so I wrote one and committed it 
> (twisted.internet.threadedselectreactor).  

I wonder if anyone could be tempted into whipping up a minimal wx
example with this new reactor?  We've got 5 days left to finish a mountain
of code for a conference demo in San Francisco - a robust wx/twisted
app is just part of this.  We're currently spawning a thread from within
wx.  It works ... but it sounds like we'd be better off with things reversed
as above.

Cheers,
Darran.

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088



From bob at redivi.com  Sun Apr 17 06:51:34 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 06:51:34 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <42623647.3070605@anu.edu.au>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<42623647.3070605@anu.edu.au>
Message-ID: <ce7c9d93d3812a547418be84d258e52b@redivi.com>


On Apr 17, 2005, at 6:11 AM, Darran Edmundson wrote:

> Bob Ippolito wrote:
>> In response to the "wxpython issues" thread I had suggested that we 
>> should have a thread-using reactor that integrates with foreign event 
>> loops, so I wrote one and committed it 
>> (twisted.internet.threadedselectreactor).
>
> I wonder if anyone could be tempted into whipping up a minimal wx
> example with this new reactor?  We've got 5 days left to finish a 
> mountain
> of code for a conference demo in San Francisco - a robust wx/twisted
> app is just part of this.  We're currently spawning a thread from 
> within
> wx.  It works ... but it sounds like we'd be better off with things 
> reversed
> as above.

Yeah, done.  Check doc/core/examples/threadedselect (I moved the Cocoa 
example in there as well)

-bob




From foom at fuhm.net  Sun Apr 17 12:02:27 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 17 Apr 2005 12:02:27 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
Message-ID: <a2322b96733421e8608cc3e39c046c92@fuhm.net>

On Apr 17, 2005, at 5:42 AM, Bob Ippolito wrote:
> In response to the "wxpython issues" thread I had suggested that we 
> should have a thread-using reactor that integrates with foreign event 
> loops, so I wrote one and committed it 
> (twisted.internet.threadedselectreactor).  Since this approach 
> requires less maintenance, and whomever maintains the select reactor 
> can trivially maintain this as well, I'm "officially" deprecating 
> cfreactor (although I never really cared much to maintain it anyway).

Seems like a good idea. Does it actually fix WX? That is, does 
wxCallAfter not suffer from the "oh you wanted it to happen *now*, not 
a second later" problem?

James




From corydodt at twistedmatrix.com  Sun Apr 17 13:43:00 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Sun, 17 Apr 2005 09:43:00 -0800
Subject: [Twisted-Python] Experimental win32 installers. Twisted=2.0.0,
	installer=rc3
Message-ID: <4262A024.3050001@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

New release of the experimental installers.  These have the correct
version strings for all projects, and z.i compiled.

Check em out.  Website will have updated links soonish.

http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc3%29-py2.4.exe
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc3%29-py2.3.exe

C

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCYqAk3A5SrXAiHQcRAu5PAJ4mGi6i+wIW5qCa9YhX8Ras0VktUgCfdMJC
s9YTtGIjWY1b5NXisoJ+yKY=
=q4Am
-----END PGP SIGNATURE-----



From bob at redivi.com  Sun Apr 17 16:55:20 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 16:55:20 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <a2322b96733421e8608cc3e39c046c92@fuhm.net>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<a2322b96733421e8608cc3e39c046c92@fuhm.net>
Message-ID: <ace102e1bd8ccf4eb4224fdd9300cb23@redivi.com>


On Apr 17, 2005, at 12:02 PM, James Y Knight wrote:

> On Apr 17, 2005, at 5:42 AM, Bob Ippolito wrote:
>> In response to the "wxpython issues" thread I had suggested that we 
>> should have a thread-using reactor that integrates with foreign event 
>> loops, so I wrote one and committed it 
>> (twisted.internet.threadedselectreactor).  Since this approach 
>> requires less maintenance, and whomever maintains the select reactor 
>> can trivially maintain this as well, I'm "officially" deprecating 
>> cfreactor (although I never really cared much to maintain it anyway).
>
> Seems like a good idea. Does it actually fix WX? That is, does 
> wxCallAfter not suffer from the "oh you wanted it to happen *now*, not 
> a second later" problem?

Try it.

-bob




From Sl_Church at sbcglobal.net  Sun Apr 17 18:21:36 2005
From: Sl_Church at sbcglobal.net (Shawn Church)
Date: Sun, 17 Apr 2005 15:21:36 -0700
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
Message-ID: <4262E170.5070804@sbcglobal.net>

Thanks for your work in developing this new reactor.  I just have a
couple questions:

Is it (thread) safe to call wx methods from within call/errbacks with
this reactor?  I ask because I was (based upon the example at
http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample)
translating callbacks into wx.Events executed during the next wx loop
(the PostEvent function is thread safe).  If I am understanding the
threadedselectreactor.py code correctly it is "waking" the wx loop and
therefore this should not be needed since only one mainloop will be
active at a time.

Also my understanding is that the reactor.interleave function should be
called ONCE in order to provide a function to wake the foreign event
loop.  I am doing this in MyApp.OnInit() and it seems to work fine.  The
example shows this being executed in the frame's __init__ function and I
do not think this will work for multiple frames (I'm not saying there is
anything WRONG with the example,  I'm just trying to make sure I
understand the correct use of the new reactor when dealing with multiple
wxWindow objects).

I did not have any problems converting my test application to use the
new reactor,  but I wanted to clarify these items so they don't bite me
later on.


Thanks once again,


Shawn

sl_church at sbcglobal.net
http://SChurchComputers.com


Bob Ippolito wrote:

> In response to the "wxpython issues" thread I had suggested that we
> should have a thread-using reactor that integrates with foreign event
> loops, so I wrote one and committed it
> (twisted.internet.threadedselectreactor).  Since this approach
> requires less maintenance, and whomever maintains the select reactor
> can trivially maintain this as well, I'm "officially" deprecating
> cfreactor (although I never really cared much to maintain it anyway).
>
> An example of using it to integrate with a foreign event loop is at:
> doc/core/examples/Cocoa/SimpleWebClient
>
> It should be relatively trivial to show how it could be used to
> integrate with other event loops (wx, Tkinter, pygame, etc.). 
> Effectively, it's compatible with anything that has a thread-safe way
> to notify the main event loop.
>
> In the future, it might make sense to revise the reactor API to
> support "interleave" directly, and change the existing reactors
> accordingly so that more than just select can support this behavior.
>
> -bob
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From bob at redivi.com  Sun Apr 17 18:45:47 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 18:45:47 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4262E170.5070804@sbcglobal.net>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<4262E170.5070804@sbcglobal.net>
Message-ID: <29115f61aac6c6f161cc8f37e4a92e8a@redivi.com>


On Apr 17, 2005, at 6:21 PM, Shawn Church wrote:

> Bob Ippolito wrote:
>
>> In response to the "wxpython issues" thread I had suggested that we
>> should have a thread-using reactor that integrates with foreign event
>> loops, so I wrote one and committed it
>> (twisted.internet.threadedselectreactor).  Since this approach
>> requires less maintenance, and whomever maintains the select reactor
>> can trivially maintain this as well, I'm "officially" deprecating
>> cfreactor (although I never really cared much to maintain it anyway).
>>
>> An example of using it to integrate with a foreign event loop is at:
>> doc/core/examples/Cocoa/SimpleWebClient
>>
>> It should be relatively trivial to show how it could be used to
>> integrate with other event loops (wx, Tkinter, pygame, etc.).
>> Effectively, it's compatible with anything that has a thread-safe way
>> to notify the main event loop.
>>
>> In the future, it might make sense to revise the reactor API to
>> support "interleave" directly, and change the existing reactors
>> accordingly so that more than just select can support this behavior.
>>
> Thanks for your work in developing this new reactor.  I just have a
> couple questions:
>
> Is it (thread) safe to call wx methods from within call/errbacks with
> this reactor?  I ask because I was (based upon the example at
> http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample)
> translating callbacks into wx.Events executed during the next wx loop
> (the PostEvent function is thread safe).

Forget everything you ever learned about wxPython/Twisted integration.  
It is no longer relevant.  Forget that any of the ugly wxPython+Twisted 
Python Cookbook entries, lame wiki examples, 
twisted.internet.wxreactor, etc. even exist.

> If I am understanding the
> threadedselectreactor.py code correctly it is "waking" the wx loop and
> therefore this should not be needed since only one mainloop will be
> active at a time.

threadedselectreactor lets you imagine that you're in a wonderful 
single threaded world where everything happens in a context where 
calling into Twisted and wxPython are both safe (unless you explicitly 
make life suck by creating more threads).

> Also my understanding is that the reactor.interleave function should be
> called ONCE in order to provide a function to wake the foreign event
> loop.  I am doing this in MyApp.OnInit() and it seems to work fine.  
> The
> example shows this being executed in the frame's __init__ function and 
> I
> do not think this will work for multiple frames (I'm not saying there 
> is
> anything WRONG with the example,  I'm just trying to make sure I
> understand the correct use of the new reactor when dealing with 
> multiple
> wxWindow objects).

Yes it should be called exactly once.  The example does it for the main 
frame.  It is done there because that is the same frame that quits the 
application when it's closed, so it also integrates with reactor.stop.

-bob




From itamar at itamarst.org  Sun Apr 17 22:22:32 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 17 Apr 2005 22:22:32 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <29115f61aac6c6f161cc8f37e4a92e8a@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<4262E170.5070804@sbcglobal.net>
	<29115f61aac6c6f161cc8f37e4a92e8a@redivi.com>
Message-ID: <1113790953.8910.11.camel@localhost.localdomain>

On Sun, 2005-04-17 at 18:45 -0400, Bob Ippolito wrote:

> Forget everything you ever learned about wxPython/Twisted integration.  
> It is no longer relevant.  Forget that any of the ugly wxPython+Twisted 
> Python Cookbook entries, lame wiki examples, 
> twisted.internet.wxreactor, etc. even exist.

We should update the GUI event loop integration howto to point at the
new method, and deprecate wxsupport and wxreactor too, in that case.




From glyph at divmod.com  Mon Apr 18 01:19:19 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 18 Apr 2005 05:19:19 GMT
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <1113790953.8910.11.camel@localhost.localdomain>
Message-ID: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>



On Sun, 17 Apr 2005 22:22:32 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Sun, 2005-04-17 at 18:45 -0400, Bob Ippolito wrote:
>
>> Forget everything you ever learned about wxPython/Twisted integration.
>> It is no longer relevant.  Forget that any of the ugly wxPython+Twisted
>> Python Cookbook entries, lame wiki examples,
>> twisted.internet.wxreactor, etc. even exist.
>
>We should update the GUI event loop integration howto to point at the
>new method, and deprecate wxsupport and wxreactor too, in that case.

Why not just change wxreactor.install() to use this new code, rather than deprecating it?  That would leave the door open to new strategies in case wx ever gets a non-broken eventloop.



From bob at redivi.com  Mon Apr 18 01:54:54 2005
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 18 Apr 2005 01:54:54 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>
References: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>
Message-ID: <d2da345f6c73aec30e83014ed9437709@redivi.com>

On Apr 18, 2005, at 1:19 AM, glyph at divmod.com wrote:

>
>
> On Sun, 17 Apr 2005 22:22:32 -0400, Itamar Shtull-Trauring 
> <itamar at itamarst.org> wrote:
>> On Sun, 2005-04-17 at 18:45 -0400, Bob Ippolito wrote:
>>
>>> Forget everything you ever learned about wxPython/Twisted 
>>> integration.
>>> It is no longer relevant.  Forget that any of the ugly 
>>> wxPython+Twisted
>>> Python Cookbook entries, lame wiki examples,
>>> twisted.internet.wxreactor, etc. even exist.
>>
>> We should update the GUI event loop integration howto to point at the
>> new method, and deprecate wxsupport and wxreactor too, in that case.
>
> Why not just change wxreactor.install() to use this new code, rather 
> than deprecating it?  That would leave the door open to new strategies 
> in case wx ever gets a non-broken eventloop.

I look at it this way:

- Using a thread for a socket event source isn't a bad idea (it's what 
Qt/Cocoa/etc. are doing behind your back anyway), and can give us 
options for even better performance on multi-core/multi-processor 
machines when a foreign event loop is in control (i.e. reads and writes 
could also happen in the thread).

- Writing wrappers for the socket/timer stuff in GUI frameworks sucks, 
because they're often too different, limited, or buggy

- The implementations of socket wrappers and timers in GUI frameworks 
are usually slow, incomplete, buggy, etc. (again).

- Not caring about GUI reactors lets you deprecate > 1300 lines of 
reactor code in exchange for a couple examples and a short support 
library or two that we should have anyway

- The reactor interface could be extended such that 
threadedselectreactor goes away, and the select/kqueue/poll/epoll/iocp 
reactors become compatible with interleave(), which lets all reactors 
be compatible with foreign event loops while still maintaining the 
choice to do whatever is teh smart for your platform.

-bob




From glyph at divmod.com  Mon Apr 18 02:07:05 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 18 Apr 2005 02:07:05 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <d2da345f6c73aec30e83014ed9437709@redivi.com>
References: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>
	<d2da345f6c73aec30e83014ed9437709@redivi.com>
Message-ID: <42634E89.8030306@divmod.com>

Bob Ippolito wrote:
> On Apr 18, 2005, at 1:19 AM, glyph at divmod.com wrote:

>> Why not just change wxreactor.install() to use this new code, rather 
>> than deprecating it?  That would leave the door open to new strategies 
>> in case wx ever gets a non-broken eventloop.

> I look at it this way:

I don't disagree with any of your points, I'm just saying that we don't 
need to deprecate an interface every time we change an implementation. 
*some* event loops (e.g. gtk) are actually better than the normal 
reactor one, so it still makes sense to choose on that basis in some 
cases.  In the cases where the threadedselectreactor is 
better-performing than the direct-GUI-integration approach, that should 
be a decision that the Twisted core is aware of, but not necessarily one 
that the application developer need be made aware of.



From Henning.Ramm at mediapro-gmbh.de  Mon Apr 18 03:34:22 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 18 Apr 2005 09:34:22 +0200
Subject: [Twisted-Python] Foreign event loop friendly reactor
Message-ID: <F92274058556DE42B94B148EEFB9183949E6C5@exchange-03.suedkurier.de>

I really admire how you make a better, lighter world
in a few hours from a "simple" request on the list!

That's what I really love about mailing lists where
the wizards are present - and as responsive as you guys.
(Similar to my "home" list about ConTeXt...)

Keep rockin' and blessed be!

HR



From jean-marc.pouchoulon at ac-montpellier.fr  Mon Apr 18 07:29:29 2005
From: jean-marc.pouchoulon at ac-montpellier.fr (jean-marc.pouchoulon at ac-montpellier.fr)
Date: Mon, 18 Apr 2005 13:29:29 +0200
Subject: [Twisted-Python] twisted 2 mktap  runs  but
Message-ID: <42639A19.3090701@ac-montpellier.fr>

bonjour,

portforward.tap is valid but :

/usr/local/bin/mktap -u 80030 portforward -p 10526 -h machine.domain -d 
10530
which: no dia in 
(/home/bin:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
:/usr/X11R6/bin:/root/bin)
Traceback (most recent call last):
  File 
"/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", line 
193, in run
    options.parseOptions(sys.argv[1:])
  File "/usr/local/lib/python2.4/site-packages/twisted/python/usage.py", 
line 197, in parseOptions
    self.postOptions()
  File 
"/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", line 
175, in postOptions
    self.tapLookup = loadPlugins(debug, progress)
  File 
"/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", line 
75, in loadPlugins
    for plug in plugins:
--- <exception caught here> ---
  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 
203, in getPlugIns
    adapted = interface(plugin, None)
  File 
"/usr/local/lib/python2.4/site-packages/zope/interface/interface.py", 
line 658, in __call__
    adapter = conform(self)
  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 
77, in __conform__
    return self.load()
  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 
72, in load
    return namedAny(self.dropin.moduleName + '.' + self.name)
  File 
"/usr/local/lib/python2.4/site-packages/twisted/python/reflect.py", line 
389, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'twisted_news'

miss something ?
thanks





From justinjohnson at gmail.com  Mon Apr 18 10:02:15 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 18 Apr 2005 09:02:15 -0500
Subject: [Twisted-Python] mktap.py missing from Twisted 2.0 Windows installer
Message-ID: <94a776e705041807024d3b6e38@mail.gmail.com>

I just installed Twisted 2.0 on Windows XP using the Python 2.3 installer at 
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc3)-py2.3.exe.
After installing, mktap.py can't be found anywhere in any subdirectories of 
my Python install.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050418/39f988f0/attachment.htm 

From exarkun at divmod.com  Mon Apr 18 10:17:10 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 18 Apr 2005 14:17:10 GMT
Subject: [Twisted-Python] twisted 2 mktap  runs  but
In-Reply-To: <42639A19.3090701@ac-montpellier.fr>
Message-ID: <20050418141710.10340.1649758508.divmod.quotient.9862@ohm>

On Mon, 18 Apr 2005 13:29:29 +0200, jean-marc.pouchoulon at ac-montpellier.fr wrote:
>bonjour,
>
>portforward.tap is valid but :
>
>/usr/local/bin/mktap -u 80030 portforward -p 10526 -h machine.domain -d 
>10530
>which: no dia in 
>(/home/bin:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
>:/usr/X11R6/bin:/root/bin)
>Traceback (most recent call last):
>  File "/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", 
>line 193, in run
>    options.parseOptions(sys.argv[1:])
>  File "/usr/local/lib/python2.4/site-packages/twisted/python/usage.py", line 
>197, in parseOptions
>    self.postOptions()
>  File "/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", 
>line 175, in postOptions
>    self.tapLookup = loadPlugins(debug, progress)
>  File "/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", 
>line 75, in loadPlugins
>    for plug in plugins:
>--- <exception caught here> ---
>  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 203, 
>in getPlugIns
>    adapted = interface(plugin, None)
>  File "/usr/local/lib/python2.4/site-packages/zope/interface/interface.py", 
>line 658, in __call__
>    adapter = conform(self)
>  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 77, 
>in __conform__
>    return self.load()
>  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 72, 
>in load
>    return namedAny(self.dropin.moduleName + '.' + self.name)
>  File "/usr/local/lib/python2.4/site-packages/twisted/python/reflect.py", 
>line 389, in namedAny
>    obj = getattr(obj, n)
>exceptions.AttributeError: 'module' object has no attribute 'twisted_news'
>
>miss something ?
>thanks
>

  Thanks for the report.  This is a known bug with the 2.0 installer.  The news package was accidentally omitted (although it is present in the tarball - it just doesn't get installed).  An upcoming 2.0.1 release will fix the problem.  In the mean time, if you're not using news, there's nothing to worry about.  The report is only to warn you that the install isn't quite right.

  Jp



From exarkun at divmod.com  Mon Apr 18 10:20:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 18 Apr 2005 14:20:39 GMT
Subject: [Twisted-Python] mktap.py missing from Twisted 2.0 Windows
	installer
In-Reply-To: 0
Message-ID: <20050418142039.10340.349522351.divmod.quotient.9870@ohm>

On Mon, 18 Apr 2005 09:02:15 -0500, Justin Johnson <justinjohnson at gmail.com> wrote:
>I just installed Twisted 2.0 on Windows XP using the Python 2.3 installer at
>http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc3)-py2.3.exe.
>After installing, mktap.py can't be found anywhere in any subdirectories of
>my Python install.
>

  Thanks for the report.  I've created an issue in the bug tracker and assigned it to Cory.

  Just a reminder, Twisted's bug tracker is at <http://twistedmatrix.com/bugs/> and bugs reported there, rather than on the mailing list, are more likely to get developer attention.

  Jp



From justinjohnson at gmail.com  Mon Apr 18 10:26:10 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 18 Apr 2005 09:26:10 -0500
Subject: [Twisted-Python] mktap.py missing from Twisted 2.0 Windows
	installer
In-Reply-To: <20050418142039.10340.349522351.divmod.quotient.9870@ohm>
References: <20050418142039.10340.349522351.divmod.quotient.9870@ohm>
Message-ID: <94a776e7050418072677bbc7d4@mail.gmail.com>

I thought about that after I sent the email. Thanks.

 On 4/18/05, Jp Calderone <exarkun at divmod.com> wrote: 
> 
> On Mon, 18 Apr 2005 09:02:15 -0500, Justin Johnson <
> justinjohnson at gmail.com> wrote:
> >I just installed Twisted 2.0 on Windows XP using the Python 2.3 installer 
> at
> >
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc3)-py2.3.exe
> .
> >After installing, mktap.py can't be found anywhere in any subdirectories 
> of
> >my Python install.
> >
> 
> Thanks for the report. I've created an issue in the bug tracker and 
> assigned it to Cory.
> 
> Just a reminder, Twisted's bug tracker is at <
> http://twistedmatrix.com/bugs/> and bugs reported there, rather than on 
> the mailing list, are more likely to get developer attention.
> 
> Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050418/d65b6a11/attachment.htm 

From cmoad at indiana.edu  Mon Apr 18 11:21:22 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Mon, 18 Apr 2005 10:21:22 -0500
Subject: [Twisted-Python] Domain Filter Suggestions
Message-ID: <4263D072.50804@indiana.edu>

Hi,
	I am working on a soap service that I am wanting to implement a domain
filter on.  Basically, if I get an IP I do not know, I defer a reverse
dns lookup and accept their request.  The defer does the reverse dns
lookup and records whether they were a .edu or not.  If I get another
request from the same IP I reject or accept their request based on the
previous lookup.
	I have an implementation that is pretty much working, but for some
lookups I get an error since the machine does not have ipv6 enabled.
(Why is this a dependency?)  Here is a little code based on previous
postings on rdns.

from twisted.names import client

addr = '127.0.0.1' # any ip goes here
ptr = '.'.join(addr.split('.')[::-1]) + '.in-addr.arpa'
d = client.lookupPointer(ptr)
d.addCallback(lambda ans, auth, add: log.write(ans[0].payload.name))

	Is this approach stupid? :) Any suggestions as to the cleanest approach
to this are greatly appreciated!

Thanks,
	Charlie



From qvx3000 at gmail.com  Mon Apr 18 18:11:59 2005
From: qvx3000 at gmail.com (Qvx 3000)
Date: Tue, 19 Apr 2005 00:11:59 +0200
Subject: [Twisted-Python] Event dispatcher example and deferreds
Message-ID: <8038a881050418151140a24554@mail.gmail.com>

Consider the following twisted example::

class Event:
    def _parse ...
    def __str__ ...

class EventChannel(basic.Int32StringReceiver):
    def connectionMade(self):
        self.factory.eventConnectionMade(self)
    def connectionLost(self, reason):
        self.factory.eventConnectionLost(self, reason)
    def stringReceived(self, recd):
        event = Event._parse(recd)
        self.factory.eventReceived(self, event)
    def sendEvent(self, devent):
        devent.addCallback(lambda e: self.sendString(str(e)))

class EventService(service.Service):

    def __init__ (self):
        self.registry = {}
        self.clients = {}
        self.funcs = dict(bind=self._bind, unbind=self._unbind)

    def getEventFactory(self):
        f = protocol.ServerFactory()
        f.protocol = EventChannel
        f.eventConnectionMade = self.eventConnectionMade
        f.eventReceived       = self.eventReceived
        f.eventConnectionLost = self.eventConnectionLost
        return f

    def eventConnectionMade(self, proto):
        self.clients[id(proto)] = proto

    def eventReceived(self, proto, event):
        func = self.funcs.get(event.name, self._notify)
        func(event)

    def eventConnectionLost(self, proto, reason):
        # remove from list of clients
        if self.clients[id(proto)] == proto:
            del self.clients[id(proto)]
        # remove from registry
        for event_name, protos in self.registry.items():
            if proto in protos:
                protos.remove(proto)

    def _bind (self, event, proto):
        current = self.registry.setdefault(event.event_name, [])
        if proto not in current:
            current.append(proto)

    def _unbind (self, event, proto):
        protos = self.registry.get(event.event_name, [])
        if proto in protos:
            protos.remove(proto)

    def _notify (self, event):
        current = self.registry.get(event.name, [])
        for proto in current:
            #if proto connected:
            proto.sendEvent(defer.succeed(event))


This is a simple event dispatching service. 

It receives connections from clients (channels). Upon receiving new connection
service remembers the connection. Each connection can bind to specific event(s).
This is achieved by sending <bind> event. After the client binds to event, it
will receive event notifications whenever a dispatcher receives such events 
from any client.
It is similar to GUI messaging systems.


I have a few questions:

1. Do I have to use deferreds? And more importantly - HOW? 
I am worried that one slow connection could have impact on other connections.
I definitely want to avoid this.
(service is only dispatching events - there are no DB or filesystem operations)

2. What if I try to send event to recently closed channel of which I am 
not aware yet (connectionLost could be inside a long queue perhaps 
- am I talking any sense?).

3. How can I assign some kind of ID to automagically created EventChannel? 
I guess id(obj) is not good enough.

4. I'm curious: is there any limit to the number of open connections? 
Could twisted on Windows handle 10,000 or even 100,000 concurrent connections?
(I will test this, but maybe somebody has some kind of real life example)

Thanks,
Qvx



From sir.shz at gmail.com  Mon Apr 18 18:35:57 2005
From: sir.shz at gmail.com (sir shz)
Date: Mon, 18 Apr 2005 15:35:57 -0700
Subject: [Twisted-Python] Twisted network games
References: <8038a881050418151140a24554@mail.gmail.com>
Message-ID: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>

Hi, I'm just starting to poke into Twisted, actually python itself. I'm
thinking of writing a network based game, e.g., card games like poker.
Twisted seems to be the right tool for it. Are there any existing projects
in that direction? Have there been this type of multiple player games
written in Twisted? or in Python (which must surely exist)?

Thanks.

Z.




From itamar at itamarst.org  Mon Apr 18 19:27:54 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 18 Apr 2005 19:27:54 -0400
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <1113866874.8910.26.camel@localhost.localdomain>

On Mon, 2005-04-18 at 15:35 -0700, sir shz wrote:
> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
> thinking of writing a network based game, e.g., card games like poker.
> Twisted seems to be the right tool for it. Are there any existing projects
> in that direction? Have there been this type of multiple player games
> written in Twisted? or in Python (which must surely exist)?

Supposedly this uses Twisted: http://mekensleep.org/. Also there's Go
Siege, a multiplayer go variant.




From xhantt at gmail.com  Mon Apr 18 19:29:08 2005
From: xhantt at gmail.com (xhantt)
Date: Mon, 18 Apr 2005 20:29:08 -0300
Subject: [Twisted-Python] Help parsing with microdom
Message-ID: <fc2ff80e05041816295006d231@mail.gmail.com>

Hi, I'm using microdom to parse some xml input.

>From the following example I wan to get 'hello' string

import sys

from twisted.web import microdom



d = microdom.parseString('<html><body>hello</body></html>')

print d.childNodes[0].childNodes[0].childNodes[0]


But i get Text('hello'), please help any suggestion will be appreciated.



From ken at kenkinder.com  Mon Apr 18 19:46:37 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 18 Apr 2005 18:46:37 -0500
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <426446DD.2070508@kenkinder.com>

Well, I hate to be discouraging, but you would probably do well to learn 
Python more thoroughly before diving into Twisted. I got into Twisted a 
year and a half ago having programmed in Python already for 4 years, and 
it was still somewhat intimidating.

Aside from that, I'm not sure you would really be sharing much code with 
other developers unless someone out there wants to do exactly what 
you're doing. A simple Google search reveals a number of mailing list 
discussions about game-related topics like UDP, but they are probably 
not relevant to your project. Because the whole thing sounds like it 
wouldn't require a lot of real-time communication, I would just use 
Perspective Broker. If you've ever used something like COM or other 
object brokering systems, PB should be relatively simple aside from its 
asynchronous nature.

I assume you're aware of the PyGame project which provides API's for 
things like sprites and sounds: http://www.pygame.org/ -- I'm not sure 
how many people have tried integrating PyGame with Twisted, but I did 
find this post from 2003: 
http://twistedmatrix.com/pipermail/twisted-python/2003-December/006829.html

Hope this helps.

-Ken

sir shz wrote:

>Hi, I'm just starting to poke into Twisted, actually python itself. I'm
>thinking of writing a network based game, e.g., card games like poker.
>Twisted seems to be the right tool for it. Are there any existing projects
>in that direction? Have there been this type of multiple player games
>written in Twisted? or in Python (which must surely exist)?
>
>Thanks.
>
>Z.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From jritter at bektel.com  Mon Apr 18 22:20:00 2005
From: jritter at bektel.com (Josh Ritter)
Date: Mon, 18 Apr 2005 21:20:00 -0500
Subject: [Twisted-Python] Twisted network games
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <177901c54486$49d61340$0400000a@spooge>

Hi,

We use Twisted in our single/multiplayer RPG called Minions of Mirth.  The 
multiplayer game is very much like a 3d MUD.  We use Twisted's perspective 
broker for the Master Server, Simulation Server, World Server, Client... 
well, just about everything :)

The outdated webpage for the game is: http://www.prairiegames.com/games.html 
(there's a pretty cool quicktime video linked there, the video is OLD)

Some more current information and screenshots can be found here: 
http://www.prairiegames.com/phpBB2/viewtopic.php?t=2 and 
http://www.prairiegames.com/phpBB2/viewforum.php?f=4

We are currently in alpha and the reponse has been GREAT!

Twisted rocks!!!!

-Josh Ritter
Prairie Games



----- Original Message ----- 
From: "sir shz" <sir.shz at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, April 18, 2005 5:35 PM
Subject: [Twisted-Python] Twisted network games


> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
> thinking of writing a network based game, e.g., card games like poker.
> Twisted seems to be the right tool for it. Are there any existing projects
> in that direction? Have there been this type of multiple player games
> written in Twisted? or in Python (which must surely exist)?
>
> Thanks.
>
> Z.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From dripton at ripton.net  Tue Apr 19 09:05:59 2005
From: dripton at ripton.net (David Ripton)
Date: Tue, 19 Apr 2005 06:05:59 -0700
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <20050419130558.GB416@vidar.dreamhost.com>

On 2005.04.18 15:35:57 +0000, sir shz wrote:
> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
> thinking of writing a network based game, e.g., card games like poker.
> Twisted seems to be the right tool for it. Are there any existing projects
> in that direction? Have there been this type of multiple player games
> written in Twisted? or in Python (which must surely exist)?

Mine is at http://slugathon.sf.net

Not actually playable yet, but there's enough code to serve as a decent
example of pb, cred, integration with PyGTK, and passing event objects
instead of sharing live game objects to avoid leaking hidden information
to the client.

I second the recommendation for GoSiege, except that it's more realtime
than turn-based.  (Players move whenever they want to, within some move
rate limit, rather than strictly taking turns.)  This is necessary if
you want your game to scale to large numbers of players without becoming
a wait-fest, but the logic is very different than turn-based games like
poker.

-- 
David Ripton    dripton at ripton.net



From bolsen at verio.net  Tue Apr 19 11:29:19 2005
From: bolsen at verio.net (Ben Olsen)
Date: Tue, 19 Apr 2005 09:29:19 -0600
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <426446DD.2070508@kenkinder.com>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
	<426446DD.2070508@kenkinder.com>
Message-ID: <426523CF.4010703@verio.net>

I've had great success integrating Twisted and Pygame for some learning 
projects I've been doing (started with a netPong, moving on to 
netPente). Personally I use the Pygame loop and call reactor.iterate(), 
but I'd be curious to hear what other people have done.

Ben

Ken Kinder wrote:

> Well, I hate to be discouraging, but you would probably do well to 
> learn Python more thoroughly before diving into Twisted. I got into 
> Twisted a year and a half ago having programmed in Python already for 
> 4 years, and it was still somewhat intimidating.
>
> Aside from that, I'm not sure you would really be sharing much code 
> with other developers unless someone out there wants to do exactly 
> what you're doing. A simple Google search reveals a number of mailing 
> list discussions about game-related topics like UDP, but they are 
> probably not relevant to your project. Because the whole thing sounds 
> like it wouldn't require a lot of real-time communication, I would 
> just use Perspective Broker. If you've ever used something like COM or 
> other object brokering systems, PB should be relatively simple aside 
> from its asynchronous nature.
>
> I assume you're aware of the PyGame project which provides API's for 
> things like sprites and sounds: http://www.pygame.org/ -- I'm not sure 
> how many people have tried integrating PyGame with Twisted, but I did 
> find this post from 2003: 
> http://twistedmatrix.com/pipermail/twisted-python/2003-December/006829.html 
>
>
> Hope this helps.
>
> -Ken
>
> sir shz wrote:
>
>> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
>> thinking of writing a network based game, e.g., card games like poker.
>> Twisted seems to be the right tool for it. Are there any existing 
>> projects
>> in that direction? Have there been this type of multiple player games
>> written in Twisted? or in Python (which must surely exist)?
>>
>> Thanks.
>>
>> Z.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>  
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dialtone at divmod.com  Tue Apr 19 11:54:36 2005
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Tue, 19 Apr 2005 17:54:36 +0200
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <426523CF.4010703@verio.net>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>	<426446DD.2070508@kenkinder.com>
	<426523CF.4010703@verio.net>
Message-ID: <426529BC.90201@divmod.com>

Ben Olsen wrote:

> I've had great success integrating Twisted and Pygame for some 
> learning projects I've been doing (started with a netPong, moving on 
> to netPente). Personally I use the Pygame loop and call 
> reactor.iterate(), but I'd be curious to hear what other people have 
> done.

Check the new example in Twisted-svn that uses the new selectthreaded 
reactor to integrate pygame and twisted.
Also use the mailing list archives, I think Bob Ippolito wrote a mail 
about it during this week.

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.3.8
Blog: http://vvolonghi.blogspot.com
http://weever.berlios.de




From justinjohnson at gmail.com  Tue Apr 19 15:37:50 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 19 Apr 2005 14:37:50 -0500
Subject: [Twisted-Python] Patch for Issue844: Return PB Exceptions that have
	registered unjellyable
Message-ID: <94a776e705041912374adb5d1e@mail.gmail.com>

Will someone pretty please apply the patch I submitted for Issue844? The 
patch now includes tests. :-)
 http://twistedmatrix.com/bugs/issue844
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050419/97a8bd50/attachment.htm 

From abe at fettig.net  Tue Apr 19 17:14:09 2005
From: abe at fettig.net (Abe Fettig)
Date: Tue, 19 Apr 2005 17:14:09 -0400
Subject: [Twisted-Python] Help parsing with microdom
In-Reply-To: <fc2ff80e05041816295006d231@mail.gmail.com>
References: <fc2ff80e05041816295006d231@mail.gmail.com>
Message-ID: <426574A1.7030001@fettig.net>

xhantt wrote:
> Hi, I'm using microdom to parse some xml input.
> 
>>From the following example I wan to get 'hello' string
> 
> import sys
> 
> from twisted.web import microdom
> d = microdom.parseString('<html><body>hello</body></html>')
> print d.childNodes[0].childNodes[0].childNodes[0]
> 
> 
> But i get Text('hello'), please help any suggestion will be appreciated.

To get the string value of the Text node object, use:

print d.childNodes[0].childNodes[0].childNodes[0].nodeValue

Abe




From bolsen at verio.net  Tue Apr 19 18:19:48 2005
From: bolsen at verio.net (Ben Olsen)
Date: Tue, 19 Apr 2005 16:19:48 -0600
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <426529BC.90201@divmod.com>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>	<426446DD.2070508@kenkinder.com>	<426523CF.4010703@verio.net>
	<426529BC.90201@divmod.com>
Message-ID: <42658404.2030703@verio.net>

This might be one for Bob Ippolito, but when I grabbed 
threadedselectreactor.py from SVN and ran the pygamedemo.py without 
modification, I got:

Traceback (most recent call last):
  File "pygamedemo.py", line 35, in ?
    reactor.callLater(1, helloWorld,1)
  File 
"C:\Python24\lib\site-packages\twisted\internet\threadedselectreactor.py", 
line 71, in callLater
    self.wakeUp()
  File 
"C:\Python24\lib\site-packages\twisted\internet\threadedselectreactor.py", 
line 67, in wakeUp
    self.waker.wakeUp()
AttributeError: 'NoneType' object has no attribute 'wakeUp'

So I added to line 67 of threadedselectreactor.py:
if self.waker:
and it seemed to run fine after that. I'm going to see if I can use this 
new reactor in my current pygame+twisted project.

Ben

Valentino Volonghi aka Dialtone wrote:

> Ben Olsen wrote:
>
>> I've had great success integrating Twisted and Pygame for some 
>> learning projects I've been doing (started with a netPong, moving on 
>> to netPente). Personally I use the Pygame loop and call 
>> reactor.iterate(), but I'd be curious to hear what other people have 
>> done.
>
>
> Check the new example in Twisted-svn that uses the new selectthreaded 
> reactor to integrate pygame and twisted.
> Also use the mailing list archives, I think Bob Ippolito wrote a mail 
> about it during this week.
>



From bob at redivi.com  Tue Apr 19 18:56:58 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 19 Apr 2005 18:56:58 -0400
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <42658404.2030703@verio.net>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>	<426446DD.2070508@kenkinder.com>	<426523CF.4010703@verio.net>
	<426529BC.90201@divmod.com> <42658404.2030703@verio.net>
Message-ID: <0a5359b1224a37c68be1804ba389955b@redivi.com>


On Apr 19, 2005, at 6:19 PM, Ben Olsen wrote:

> This might be one for Bob Ippolito, but when I grabbed  
> threadedselectreactor.py from SVN and ran the pygamedemo.py without  
> modification, I got:
>
> Traceback (most recent call last):
>  File "pygamedemo.py", line 35, in ?
>    reactor.callLater(1, helloWorld,1)
>  File  
> "C:\Python24\lib\site- 
> packages\twisted\internet\threadedselectreactor.py", line 71, in  
> callLater
>    self.wakeUp()
>  File  
> "C:\Python24\lib\site- 
> packages\twisted\internet\threadedselectreactor.py", line 67, in  
> wakeUp
>    self.waker.wakeUp()
> AttributeError: 'NoneType' object has no attribute 'wakeUp'
>
> So I added to line 67 of threadedselectreactor.py:
> if self.waker:
> and it seemed to run fine after that. I'm going to see if I can use  
> this new reactor in my current pygame+twisted project.

Actually, it's not for me.  I don't use Win32.  Someone who uses Win32,  
and cares, needs to debug this.  It's not a problem for anything else.

-bob




From andrew-twisted at puzzling.org  Tue Apr 19 19:05:47 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 20 Apr 2005 09:05:47 +1000
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <42658404.2030703@verio.net>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
	<426446DD.2070508@kenkinder.com> <426523CF.4010703@verio.net>
	<426529BC.90201@divmod.com> <42658404.2030703@verio.net>
Message-ID: <20050419230547.GB31374@frobozz>

On Tue, Apr 19, 2005 at 04:19:48PM -0600, Ben Olsen wrote:
> This might be one for Bob Ippolito, but when I grabbed 
> threadedselectreactor.py from SVN and ran the pygamedemo.py without 
> modification, I got:
[...]

As always, bug reports are better off posted to
http://twistedmatrix.com/bugs, rather than buried in mailing list threads
that the relevant developers may or may not read :)

-Andrew.




From boomberschloss at yahoo.com  Wed Apr 20 07:38:10 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Wed, 20 Apr 2005 04:38:10 -0700 (PDT)
Subject: [Twisted-Python] cleanup
Message-ID: <20050420113811.68862.qmail@web53101.mail.yahoo.com>

Hi,

There was a discussion here recently about registering
a callback to be called prior to shutdown (using
addSystemEventTrigger), and I just wanted to ask, what
does Twisted allow before shutdown, and what gets
stopped in the middle; ex. if I want to do something
prior to shutdown that involves communication with
some server, and hence a deffered chain, how do I make
sure that it gets a chance to happen?

Thanks,

Joe.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From itamar at itamarst.org  Wed Apr 20 09:59:37 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Apr 2005 09:59:37 -0400
Subject: [Twisted-Python] cleanup
In-Reply-To: <20050420113811.68862.qmail@web53101.mail.yahoo.com>
References: <20050420113811.68862.qmail@web53101.mail.yahoo.com>
Message-ID: <1114005577.9134.11.camel@localhost.localdomain>

On Wed, 2005-04-20 at 04:38 -0700, Joachim Boomberschloss wrote:
> Hi,
> 
> There was a discussion here recently about registering
> a callback to be called prior to shutdown (using
> addSystemEventTrigger), and I just wanted to ask, what
> does Twisted allow before shutdown, and what gets
> stopped in the middle; ex. if I want to do something
> prior to shutdown that involves communication with
> some server, and hence a deffered chain, how do I make
> sure that it gets a chance to happen?

You can return a Deferred from your shutdown function and Twisted will
wait until it's got a result before shutting down.




From paolo_veronelli at yahoo.it  Wed Apr 20 13:06:05 2005
From: paolo_veronelli at yahoo.it (User Paolino)
Date: Wed, 20 Apr 2005 17:06:05 +0000
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>
References: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>
Message-ID: <42668BFD.6050103@yahoo.it>

Jp Calderone wrote:

> On Sat, 16 Apr 2005 18:50:02 +0000, User Paolino 
> <paolo_veronelli at yahoo.it> wrote:
>
>> def deferredReady(value=False,later=0):
>>  deferred=Deferred()
>>  reactor.callLater(later,deferred.callback,value)
>>  return deferred
>>
>> def generatorLoop(generator,listOfParams,multi=False):
>>  lista=[]
>>  for params in listOfParams:
>>    if multi:
>>      lista.append(deferredGenerator(generator)(*params))
>>    else:
>>      lista.append(deferredGenerator(generator)(params))   return 
>> DeferredList(lista)
>>
>
>  What?  Also, why?

deferredReady is just missing in the library ,it's useful to let other 
code execute in situations  where calling functions are gready, like 
resolving recursive query.

the second I use it everywhere where the cycles of a loop can be 
executed in parallel as they are independent.

But I see, small things are not interesting ...

np




From ngower at dkp.com  Wed Apr 20 12:32:40 2005
From: ngower at dkp.com (Neil Gower)
Date: Wed, 20 Apr 2005 12:32:40 -0400
Subject: [Twisted-Python] API docs?
Message-ID: <42668428.9080406@dkp.com>

Hi folks,

I'm looking forward to getting started on some development with Twisted, 
but ran into a little snag.  I downloaded 
TwistedSumo-2005-03-22.tar.bz2, and was browsing through the "doc" 
directory and found that the "API reference" link was broken.  Turns out 
there is no "doc/api" directory in that tarball.  I also tried grabbing 
the source from SVN, and running "admin/epyrun", but it bailed out with:

INTERNAL ERROR: Cannot create a UID for a str without a base UID.

So I'm just wondering, is there a way to get the API docs for Twisted 
2.0, or were they omitted from the tarball because they're broken right now?

Thanks,


Neil.



From itamar at itamarst.org  Wed Apr 20 12:42:29 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Apr 2005 12:42:29 -0400
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <42668BFD.6050103@yahoo.it>
References: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>
	<42668BFD.6050103@yahoo.it>
Message-ID: <1114015350.9134.23.camel@localhost.localdomain>

On Wed, 2005-04-20 at 17:06 +0000, User Paolino wrote:

> But I see, small things are not interesting ...

It's not that they're not interesting, it's just that patches should
probably come with an explanation of what they're for so we can review
them better. Also, if you add them to http://twistedmatrix.com/bugs/
they won't get lost in the list archives.




From michael.kerrin at openapp.biz  Thu Apr 21 12:44:32 2005
From: michael.kerrin at openapp.biz (Michael Kerrin)
Date: Thu, 21 Apr 2005 16:44:32 +0000
Subject: [Twisted-Python] FTP / Common VFS Layer
Message-ID: <200504211644.32429.michael.kerrin@openapp.biz>

Hi,

  I am interested in integrating Twisted's FTP server and Zope 3.

  I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
mentions work that was done on a common VFS layer for Twisted. I am wondering 
if this is available anywhere has I would be very interested in seeing it.

  Thanks
-- 
Michael Kerrin

55 Fitzwilliam Square,
Dublin 2
Ireland

Tel: 353 (0) 87 688 3894



From db3l at fitlinxx.com  Thu Apr 21 14:39:38 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 21 Apr 2005 14:39:38 -0400
Subject: [Twisted-Python] Re: DeferredList and errbacks
References: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>
	<20050406000212.GE7030@frobozz>
Message-ID: <u1x949dp1.fsf@fitlinxx.com>

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> By default, DeferredList waits for all its Deferreds to fire (with a result
> or an error), and returns a big list of results of the form: 
>    [(success_bool, value), (success_bool, value), ...]
> 
> Where 'success_bool' is True if the corresponding Deferred succeeded (i.e.
> fired a callback), and False if it failed (i.e. fired an errback).  'value'
> will be a result or a Failure instance accordingly.  So a standard
> DeferredList will never call errback, because it includes errors in the
> result passed to its callback.

Note however, that while the DeferredList will never errback, it
doesn't stop the errback chains of the individual deferreds.  It
inserts itself into those chains to gather the information, but
continues to let the failure propagate.

So if you expect the DeferredList to be the final aggregation of
information for all of the individual deferreds, but don't want
unterminated errbacks (which often, but not always, result in default
logging), you still need to install additional errbacks on each of the
deferreds you hand to the DeferredList.  And you need to add them
after the deferreds are installed in the DeferredList or its the
result of your individual errbacks that will flow to the DeferredList
result.

-- David




From itamar at itamarst.org  Thu Apr 21 14:41:01 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 21 Apr 2005 14:41:01 -0400
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <200504211644.32429.michael.kerrin@openapp.biz>
References: <200504211644.32429.michael.kerrin@openapp.biz>
Message-ID: <1114108861.8666.57.camel@localhost.localdomain>

On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:

>   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
> mentions work that was done on a common VFS layer for Twisted. I am wondering 
> if this is available anywhere has I would be very interested in seeing it.

Probably best to ignore the VFS bit for now and just concentrate on
fixing FTP. When and if the VFS layer is ever finished, hooking it up
should be easy.




From exarkun at divmod.com  Thu Apr 21 15:02:56 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 21 Apr 2005 19:02:56 GMT
Subject: [Twisted-Python] Re: DeferredList and errbacks
In-Reply-To: <u1x949dp1.fsf@fitlinxx.com>
Message-ID: <20050421190256.10340.1056723030.divmod.quotient.16690@ohm>

On 21 Apr 2005 14:39:38 -0400, David Bolen <db3l at fitlinxx.com> wrote:
>Andrew Bennetts <andrew-twisted at puzzling.org> writes:
>
>> By default, DeferredList waits for all its Deferreds to fire (with a result
>> or an error), and returns a big list of results of the form:
>>    [(success_bool, value), (success_bool, value), ...]
>>
>> Where 'success_bool' is True if the corresponding Deferred succeeded (i.e.
>> fired a callback), and False if it failed (i.e. fired an errback).  'value'
>> will be a result or a Failure instance accordingly.  So a standard
>> DeferredList will never call errback, because it includes errors in the
>> result passed to its callback.
>
>Note however, that while the DeferredList will never errback, it
>doesn't stop the errback chains of the individual deferreds.  It
>inserts itself into those chains to gather the information, but
>continues to let the failure propagate.
>
>So if you expect the DeferredList to be the final aggregation of
>information for all of the individual deferreds, but don't want
>unterminated errbacks (which often, but not always, result in default
>logging), you still need to install additional errbacks on each of the
>deferreds you hand to the DeferredList.  And you need to add them
>after the deferreds are installed in the DeferredList or its the
>result of your individual errbacks that will flow to the DeferredList
>result.
>

  Alternatively, pass consumeErrors=True to DeferredList() and it will do something equivalent for all Deferreds you put into it.

  Jp



From radeex at gmail.com  Thu Apr 21 19:24:31 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 22 Apr 2005 09:24:31 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <1114108861.8666.57.camel@localhost.localdomain>
References: <200504211644.32429.michael.kerrin@openapp.biz>
	<1114108861.8666.57.camel@localhost.localdomain>
Message-ID: <60ed19d405042116244f2a767@mail.gmail.com>

On 4/22/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:
> 
> >   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it
> > mentions work that was done on a common VFS layer for Twisted. I am wondering
> > if this is available anywhere has I would be very interested in seeing it.
> 
> Probably best to ignore the VFS bit for now and just concentrate on
> fixing FTP. When and if the VFS layer is ever finished, hooking it up
> should be easy.

Itamar is right about that. However, just for future reference, the
VFS code is available at svn://svn.twistedmatrix.com/svn/VFS/trunk


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From andrew-twisted at puzzling.org  Thu Apr 21 21:23:44 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Apr 2005 11:23:44 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <1114108861.8666.57.camel@localhost.localdomain>
References: <200504211644.32429.michael.kerrin@openapp.biz>
	<1114108861.8666.57.camel@localhost.localdomain>
Message-ID: <20050422012344.GA31958@frobozz>

On Thu, Apr 21, 2005 at 02:41:01PM -0400, Itamar Shtull-Trauring wrote:
> On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:
> 
> >   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
> > mentions work that was done on a common VFS layer for Twisted. I am wondering 
> > if this is available anywhere has I would be very interested in seeing it.
> 
> Probably best to ignore the VFS bit for now and just concentrate on
> fixing FTP. When and if the VFS layer is ever finished, hooking it up
> should be easy.

FTP in SVN isn't too bad... it's not completely broken, at least ;)

And it now has a halfway-decent test suite, although more would really be a
good idea (as using the --coverage option of trial will show).  The code
isn't particularly elegant, but it's readable enough.

So, I don't think it's too early to start improving the IFTPShell stuff
(which I had been consciously ignoring until now).  The other work that
needs doing shouldn't tend to get in the way very much, because the basics
have been fixed.

-Andrew.




From exarkun at divmod.com  Thu Apr 21 21:47:33 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 22 Apr 2005 01:47:33 GMT
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422012344.GA31958@frobozz>
Message-ID: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>

On Fri, 22 Apr 2005 11:23:44 +1000, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Thu, Apr 21, 2005 at 02:41:01PM -0400, Itamar Shtull-Trauring wrote:
>> On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:
>>
>> >   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it
>> > mentions work that was done on a common VFS layer for Twisted. I am wondering
>> > if this is available anywhere has I would be very interested in seeing it.
>>
>> Probably best to ignore the VFS bit for now and just concentrate on
>> fixing FTP. When and if the VFS layer is ever finished, hooking it up
>> should be easy.
>
>FTP in SVN isn't too bad... it's not completely broken, at least ;)
>
>And it now has a halfway-decent test suite, although more would really be a
>good idea (as using the --coverage option of trial will show).  The code
>isn't particularly elegant, but it's readable enough.
>
>So, I don't think it's too early to start improving the IFTPShell stuff
>(which I had been consciously ignoring until now).  The other work that
>needs doing shouldn't tend to get in the way very much, because the basics
>have been fixed.

  I think a good direction to take with IFTPShell is to drop it entirely and use an entirely new and different interface.  If anyone complains about compatibility later (which no one will because ftp was too broken to use until the work you did on it, and the interface is too specific to have been usefully implemented differently anyway), we can always write an adapter from the new to the old.


  Using something like, say, IResource would be interesting, but I guess IResource isn't quite expressive enough to satisfy all the requirements.

  Jp



From andy at thecablelounge.com  Thu Apr 21 22:05:15 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 22 Apr 2005 12:05:15 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <200504211644.32429.michael.kerrin@openapp.biz>
References: <200504211644.32429.michael.kerrin@openapp.biz>
Message-ID: <42685BDB.4080307@thecablelounge.com>

Michael Kerrin wrote:
> Hi,
> 
>   I am interested in integrating Twisted's FTP server and Zope 3.
> 
>   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
> mentions work that was done on a common VFS layer for Twisted. I am wondering 
> if this is available anywhere has I would be very interested in seeing it.

I've had a very quick glance at Stephan Richter's Zope3 book - if I 
glanced right, it looks like Zope3 has it's own ftp server? - which 
accesses the file system through an interface(s).  Just mentioning as 
while someone is looking at both frameworks in this area, it might be 
worth stealing from Zope3 for the Twisted VFS interface.

Though, the biggest hole with the sprint VFS interface is asynchronous 
data transfers - which wouldn't be an issue for Zope.

Andy.



From andrew-twisted at puzzling.org  Thu Apr 21 22:37:34 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Apr 2005 12:37:34 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
References: <20050422012344.GA31958@frobozz>
	<20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
Message-ID: <20050422023734.GB31958@frobozz>

On Fri, Apr 22, 2005 at 01:47:33AM +0000, Jp Calderone wrote:
> On Fri, 22 Apr 2005 11:23:44 +1000, Andrew Bennetts wrote:
[...]
> >
> >So, I don't think it's too early to start improving the IFTPShell stuff
> >(which I had been consciously ignoring until now).  The other work that
> >needs doing shouldn't tend to get in the way very much, because the basics
> >have been fixed.
> 
>  I think a good direction to take with IFTPShell is to drop it entirely and 
>  use an entirely new and different interface.  If anyone complains about 
>  compatibility later (which no one will because ftp was too broken to use 
>  until the work you did on it, and the interface is too specific to have 
>  been usefully implemented differently anyway), we can always write an 
>  adapter from the new to the old.

Yeah.  I'm not at all concerned about backwards-compatibility for code that
never worked.

>  Using something like, say, IResource would be interesting, but I guess 
>  IResource isn't quite expressive enough to satisfy all the requirements.

IResource lacks quite a lot in terms of a read/write filesystem with
metadata like modification times and permission bits.  In the Twisted tree,
something like twisted.conch.interfaces.ISFTPServer (as implemented by e.g.
twisted.conch.unix.SFTPServerForUnixConchUser) is much closer to what FTP
needs.  I think the VFS stuff is closer again.

I think there may be some point in having an IFTPShell-like interface that
maps closely to what the FTP protocol needs, and adapters to map VFS stuff
(and even IResource for simple read-only trees) to that, but I haven't
thought deeply about it.

-Andrew.




From andy at thecablelounge.com  Thu Apr 21 23:03:23 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 22 Apr 2005 13:03:23 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422023734.GB31958@frobozz>
References: <20050422012344.GA31958@frobozz>	<20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
	<20050422023734.GB31958@frobozz>
Message-ID: <4268697B.40200@thecablelounge.com>

Andrew Bennetts wrote:

> I think there may be some point in having an IFTPShell-like interface that
> maps closely to what the FTP protocol needs, and adapters to map VFS stuff
> (and even IResource for simple read-only trees) to that, but I haven't
> thought deeply about it.

For what it's worth, there's an adaptor from the sprint VFS interface 
for IFTPShell, and it works ok for the bits of IFTPShell ftp is using 
and not broken.  It's probably easier to adapt against IFTPShell than 
ISFTPServer.

I guess the most important thing is working FTP. So long as it uses an 
interface for filesystem access, whatever that is, the VFS stuff should 
be able to work in with it.

Andy.



From darran.edmundson at anu.edu.au  Thu Apr 21 23:22:50 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Fri, 22 Apr 2005 13:22:50 +1000
Subject: [Twisted-Python] twisted robot ...
Message-ID: <42686E0A.6020905@anu.edu.au>


Hi All,

Thanks to everyone for the recent help on integration of
twisted with wxPython.  We are going to hold off on using
Bob's new code at the moment in favour of using the release
version of Twisted (easier for the users to install).

At the moment we've got Twisted in the main thread, spawning
a thread to run wx.  It works nicely except we can't figure
out how to communicate with wx (ie., generate wxevents)
from twisted.  (We don't need the converse - it's notification
only.)  I fly out to San Francisco tommorrow morning so
any help would be most appreciated.

So about the robot subject line ... we bought a 50cm RC tank on
Ebay, ripped it down to the chassis and added a platform
for carrying around a 12" Powerbook.  The laptop runs
our twisted server which drives a USB controllable Phidget
(www.phidget.com) to control the tank treads and a servo motor
for camera (iSight) tilt.  We talk to the server via wifi.

The client app (wx GUI is done and working) is what we
are working on at the moment...

Cheers,
Darran.

P.S.  I'll put some photos and video up on my web site
for anyone interested.

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088



From bob at redivi.com  Thu Apr 21 23:30:22 2005
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 21 Apr 2005 23:30:22 -0400
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <42686E0A.6020905@anu.edu.au>
References: <42686E0A.6020905@anu.edu.au>
Message-ID: <c75f666f55aa8fdb0b87050518062192@redivi.com>


On Apr 21, 2005, at 11:22 PM, Darran Edmundson wrote:

> Thanks to everyone for the recent help on integration of
> twisted with wxPython.  We are going to hold off on using
> Bob's new code at the moment in favour of using the release
> version of Twisted (easier for the users to install).

You could copy the new reactor code (plus the patched wakers).. it 
would work with release twisted.

-bob




From andy at thecablelounge.com  Thu Apr 21 23:31:07 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 22 Apr 2005 13:31:07 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <4268697B.40200@thecablelounge.com>
References: <20050422012344.GA31958@frobozz>	<20050422014733.10340.1863492126.divmod.quotient.17262@ohm>	<20050422023734.GB31958@frobozz>
	<4268697B.40200@thecablelounge.com>
Message-ID: <42686FFB.1090002@thecablelounge.com>

> Itamar Shtull-Trauring wrote:
>> Probably best to ignore the VFS bit for now and just concentrate on
>> fixing FTP. When and if the VFS layer is ever finished, hooking it up
>> should be easy.

Andy Gayton wrote:
> I guess the most important thing is working FTP. So long as it uses an 
> interface for filesystem access, whatever that is, the VFS stuff should 
> be able to work in with it.

so, er yeah, what Itamar said :)




From mvanaswegen at deloitte.co.za  Fri Apr 22 04:46:05 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Fri, 22 Apr 2005 10:46:05 +0200
Subject: [Twisted-Python] Twisted P2P
Message-ID: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>

Hi Guys
 
I need some advice before I start hacking about with socket,
SocketServer and twisted.
I'm planning to write a LAN P2P program to make it easy to share files
on the LAN.
I'm planning to make it cross platform win / unix. Each P2P client will
advertise using
UDP multicast that they are out there. If a client wants to send a file
or files it will
connect TCP to the client and request auth. Upon auth it will tx the
files using TCP.
I would like the each P2P client to be able to handle multiple
connections (send + rec).
 
Suggestions, pointers, help appreciated.
 
Regs
 
Marinus

Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050422/071edfa8/attachment.htm 

From andrew-twisted at puzzling.org  Fri Apr 22 05:06:39 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Apr 2005 19:06:39 +1000
Subject: [Twisted-Python] Twisted P2P
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
Message-ID: <20050422090639.GC31958@frobozz>

On Fri, Apr 22, 2005 at 10:46:05AM +0200, van Aswegen, Marinus (ZA - Johannesburg) wrote:
>    Hi Guys
>    
>    I need some advice before I start hacking about with socket,
>    SocketServer and twisted.  I'm planning to write a LAN P2P program to
>    make it easy to share files on the LAN.  I'm planning to make it cross
>    platform win / unix. Each P2P client will advertise using UDP multicast
>    that they are out there. If a client wants to send a file or files it
>    will connect TCP to the client and request auth. Upon auth it will tx
>    the files using TCP.  I would like the each P2P client to be able to
>    handle multiple connections (send + rec).
>    
>    Suggestions, pointers, help appreciated.

Sounds well suited to Twisted.

Feel free to ask specific questions if you get stuck on something.  The
tutorial and the writing servers and writing clients howtos should answer
most of your questions, though:

    http://twistedmatrix.com/projects/core/documentation/howto/tutorial/
    http://twistedmatrix.com/projects/core/documentation/howto/servers.html
    http://twistedmatrix.com/projects/core/documentation/howto/clients.html

You might also find some of the examples to be interesting:

    http://twistedmatrix.com/projects/core/documentation/examples/index.xhtml

-Andrew.




From itamar at itamarst.org  Fri Apr 22 10:11:33 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 22 Apr 2005 10:11:33 -0400
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
References: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
Message-ID: <1114179093.8727.15.camel@localhost.localdomain>

On Fri, 2005-04-22 at 01:47 +0000, Jp Calderone wrote:

>  I think a good direction to take with IFTPShell is to drop it
> entirely and use an entirely new and different interface.  If anyone
> complains about compatibility later (which no one will because ftp was
> too broken to use until the work you did on it, and the interface is
> too specific to have been usefully implemented differently anyway), we
> can always write an adapter from the new to the old.

The bug Stephan Richter and I opened this weekend while looking at FTP
does indeed specifically request the interface be changed, since it is
broken now. No point in any backwards compat at all in this case.

It explains most of the basic changes that need to be made:
http://twistedmatrix.com/bugs/issue983






From bob at redivi.com  Fri Apr 22 13:36:19 2005
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 22 Apr 2005 13:36:19 -0400
Subject: [Twisted-Python] Twisted P2P
In-Reply-To: <20050422090639.GC31958@frobozz>
References: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
	<20050422090639.GC31958@frobozz>
Message-ID: <50a9f923ececb9320cb29efaf36ec28d@redivi.com>


On Apr 22, 2005, at 5:06 AM, Andrew Bennetts wrote:

> On Fri, Apr 22, 2005 at 10:46:05AM +0200, van Aswegen, Marinus (ZA -  
> Johannesburg) wrote:
>>
>>    I need some advice before I start hacking about with socket,
>>    SocketServer and twisted.  I'm planning to write a LAN P2P program  
>> to
>>    make it easy to share files on the LAN.  I'm planning to make it  
>> cross
>>    platform win / unix. Each P2P client will advertise using UDP  
>> multicast
>>    that they are out there. If a client wants to send a file or files  
>> it
>>    will connect TCP to the client and request auth. Upon auth it will  
>> tx
>>    the files using TCP.  I would like the each P2P client to be able  
>> to
>>    handle multiple connections (send + rec).
>>
>>    Suggestions, pointers, help appreciated.
>
> Sounds well suited to Twisted.
>
> Feel free to ask specific questions if you get stuck on something.  The
> tutorial and the writing servers and writing clients howtos should  
> answer
> most of your questions, though:
>
>      
> http://twistedmatrix.com/projects/core/documentation/howto/tutorial/
>      
> http://twistedmatrix.com/projects/core/documentation/howto/ 
> servers.html
>      
> http://twistedmatrix.com/projects/core/documentation/howto/ 
> clients.html
>
> You might also find some of the examples to be interesting:
>
>      
> http://twistedmatrix.com/projects/core/documentation/examples/ 
> index.xhtml

I don't think there are any examples, anywhere, of the multicast  
support.  I think there is some (unfinished?) mDNS code in Itamar's  
sandbox, but that's complicated enough that it really doesn't serve as  
a good example.

Other than that, I think the rest should be pretty straightforward.

-bob




From jarrod.roberson at gmail.com  Fri Apr 22 14:05:32 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 22 Apr 2005 14:05:32 -0400
Subject: [Twisted-Python] Twisted P2P
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
Message-ID: <2389d4730504221105399e951c@mail.gmail.com>

attached is my updates to Tim Allens mDNS code that works with Twisted 2.0
I have also added some facilities to add responders and observers of
specific messages, it is not complete but a good start

also attached is an mdnslistener that I wrote based on what I say in
itamar's sandbox
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mDNS.py
Type: application/octet-stream
Size: 28505 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050422/fb8fbb73/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mDNSListener.py
Type: application/octet-stream
Size: 4158 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050422/fb8fbb73/attachment-0001.obj 

From db3l at fitlinxx.com  Fri Apr 22 17:11:00 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 22 Apr 2005 17:11:00 -0400
Subject: [Twisted-Python] Re: DeferredList and errbacks
References: <u1x949dp1.fsf@fitlinxx.com>
	<20050421190256.10340.1056723030.divmod.quotient.16690@ohm>
Message-ID: <uoec6a55n.fsf@fitlinxx.com>

Jp Calderone <exarkun at divmod.com> writes:

> Alternatively, pass consumeErrors=True to DeferredList() and it will
> do something equivalent for all Deferreds you put into it.

Hrmm, and of course that was also mentioned in the post I was replying
to (which you were kind enough not to highlight)... duh!

Looks like that got added after my initial work with DeferredList and
I didn't catch it becoming available.  It's particularly ironic,
because I think I participated in the discussion at the time with
respect to deprecating the addDeferred method that led to the patch.

Ah well, learn something new every day ... definitely going to start
using it.

-- David




From wyvern at crm3.com  Fri Apr 22 20:19:03 2005
From: wyvern at crm3.com (Jan Van Uytven)
Date: Fri, 22 Apr 2005 17:19:03 -0700
Subject: [Twisted-Python] Help with SMTP Proxy
Message-ID: <42699477.1010101@crm3.com>

Hi,

I'm a new user of Twisted, I came to it because I need to write an SMTP 
proxy and want to use Python to do it. The proxy would copy the incoming 
e-mail (including the envelope headers) and then forward it to Postfix.

Googling around I came across an example of an SMTP server (written by 
the author of twisted.mail I think)  and after playing around with it a 
bit I can get it to receive and copy the e-mail, but I'm not quite sure 
how to forward it on after that. Right now I have the proxy sitting on 
port 2025 and the final smtp server on port 2030. Here's the code I have 
so far:

import os, StringIO
from zope.interface import implements
from twisted.application import service

application = service.Application("Postfix SMTP Proxy for CopyUser")

from twisted.application import internet
from twisted.internet import protocol, defer

smtpServerFactory = protocol.ServerFactory()

from twisted.mail import smtp

class FileMessage(object):
    implements(smtp.IMessage)

    def __init__(self, fileObj):
        self.fileObj = fileObj
        self.msg = []

    def lineReceived(self, line):
        self.fileObj.write(line + '\n')
        self.msg.append(line)
       
    def eomReceived(self):
        self.fileObj.close()
        print "\n".join(self.msg)
        return defer.succeed(None)
       
    def connectionLost(self):
        self.fileObj.close()
        os.remove(self.fileObj.name)

class Delivery(object):
    implements(smtp.IMessageDelivery)
    counter = 0

    def validateTo(self, user):
        fileName = 'smtplog.' + str(self.counter)
        self.counter += 1
        return lambda: FileMessage(file(fileName, 'w'))
   
    def validateFrom(self, helo, origin):
        return origin

    def receivedHeader(self, helo, origin, recipients):
        recpts = []
        for i in recipients:
            recpts.append(str(i))
        recptstr = "Recipients: " + ",".join(recpts)
        origin = "Origin: " + str(origin)
        return recptstr+"\r\n"+origin+"\r\n\r\n"

class ESMTPFactory(protocol.ServerFactory):
    protocol = smtp.ESMTP

    def buildProtocol(self, addr):
        p = self.protocol()
        p.delivery = Delivery()
        p.factory = self
        return p

class ForwardSMTPClient(smtp.ESMTPClient):

    def getMailFrom(self):
        return ["smtp_proxy at localhost"]

    def getMailTo(self):
        return "tester at localhost"

    def getMailData(self):
        data = """
        Subject: Test!

        Test!
        """
        return StringIO.StringIO(data)
   
    def sentMail(self, code, resp, numOk, addresses, log):
        print 'Sent', numOk, 'messages'


class SMTPClientFactory(protocol.ClientFactory):
    protocol = ForwardSMTPClient

    def buildProtocol(self, addr):
        return self.protocol(secret=None, identity='localhost')
       

smtpServerFactory = ESMTPFactory()
smtpClientFactory = SMTPClientFactory()
smtpServerService = internet.TCPServer(2025, smtpServerFactory)
smtpServerService.setServiceParent(application)

I've left out actually forwarding the message for now, I just want to 
forward a test e-mail upon receipt of the message. The whole structure 
of this program doesn't seem right to me. I thought initially of trying 
something like adding this to the eomReceived method:

smtpForwardService = internet.TCPClient('localhost', 2030, 
smtpClientFactory)
smtpForwardService.setServiceParent(application)

but it started an endless loop of sending the test e-mail. Most clients 
use reactor.stop() to finish after processing, but I need the reactor to 
keep on going.

Documentation on twisted.mail is almost non-existent. Is there a better 
way of doing this?

Thanks,

Still Struggling



From troll at pld-linux.org  Sat Apr 23 01:34:42 2005
From: troll at pld-linux.org (Michal Chruszcz)
Date: Sat, 23 Apr 2005 07:34:42 +0200
Subject: [Twisted-Python] Sending unicode strings
Message-ID: <200504230734.42190@tintia.doriath>

Hello,

I was undoubtedly surprised when I found out that I cannot pass unicode 
strings to Twisted.
In 1.3 twisted.internet.abstract looks like this:
    def write(self, data):
        assert isinstance(data, str), "Data must be a string."
        if not self.connected:
            return

and in 2.0:
    def write(self, data):
        if isinstance(data, unicode): # no, really, I mean it
            raise TypeError("Data must be not be unicode")

Why do you mean it? Why I can't send unicode through twisted? It's 
ridiculous that I have to convert UTF8 strings to ISO on the client side 
and then once again from ISO to UTF8 on the server side, so I suppose 
you've got really good excuse.

-- 
Michal Chruszcz -=- Never seen



From mary-twisted at puzzling.org  Sat Apr 23 01:58:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 23 Apr 2005 15:58:13 +1000
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <200504230734.42190@tintia.doriath>
References: <200504230734.42190@tintia.doriath>
Message-ID: <20050423055813.GC8402@sourdust.home.puzzling.org>

On Sat, Apr 23, 2005, Michal Chruszcz wrote:
> Why do you mean it? Why I can't send unicode through twisted? It's 
> ridiculous that I have to convert UTF8 strings to ISO on the client side 
> and then once again from ISO to UTF8 on the server side, so I suppose 
> you've got really good excuse.

In so far as you'd call "design decisions" "excuses".

Why is it ridiculous that you need to do this? It's not always going to
be Twisted on the other end after all (at least, Twisted can't assume
that at the level we're talking about), and there's umpteen million
encodings that can be used for Unicode, so encoding all Unicode objects
into bytes using the UTF8 encoding seems to be making a hell of an
assumption. Your protocol is the right place to make that
decision/assumption/assertation, write(...) is not.

http://twistedmatrix.com/projects/core/documentation/howto/faq.html#auto25

-Mary



From bob at redivi.com  Sat Apr 23 02:03:09 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 23 Apr 2005 02:03:09 -0400
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <200504230734.42190@tintia.doriath>
References: <200504230734.42190@tintia.doriath>
Message-ID: <ab30c72585603201b635fc4ad4afec01@redivi.com>


On Apr 23, 2005, at 1:34 AM, Michal Chruszcz wrote:

> I was undoubtedly surprised when I found out that I cannot pass unicode
> strings to Twisted.
> In 1.3 twisted.internet.abstract looks like this:
>     def write(self, data):
>         assert isinstance(data, str), "Data must be a string."
>         if not self.connected:
>             return
>
> and in 2.0:
>     def write(self, data):
>         if isinstance(data, unicode): # no, really, I mean it
>             raise TypeError("Data must be not be unicode")
>
> Why do you mean it? Why I can't send unicode through twisted? It's
> ridiculous that I have to convert UTF8 strings to ISO on the client 
> side
> and then once again from ISO to UTF8 on the server side, so I suppose
> you've got really good excuse.

You must ALWAYS encode or decode unicode at I/O boundaries in any 
programming language/framework.  Unicode has no encoding.  You must 
choose one at the I/O boundary, but that choice is up to you.  I 
suggest you read up on the hows and whys of Unicode, because apparently 
you missed something.

Specifically, Twisted's transports are for writing BYTES (not text).  
Unicode is strictly a bunch of characters that have no inherent byte 
representation.  The unicode type has nothing at all to do with UTF-8, 
I'm not sure why you decided they were related.  Technically the 
unicode type is represented internally with either UCS-2 or UCS-4 
depending on Python's configuration options.

The same is true for file objects in Python.  Though writing to them 
will automatically coerce to/from some default encoding 
(sys.getdefaultencoding()), usually ASCII, which hurts more than helps. 
  Twisted takes the high road and explicitly provides no automagic 
conversion for unicode objects.  If it did, your program would probably 
crash at random places if users of your application typed in non-ascii 
characters, because you didn't think enough about unicode before 
deciding to use it.  Now you are required to have a modicum of 
understanding about what you're doing when you use unicode, so it is 
far less likely that you will write code that has such silly bugs.

In more sane environments than Python, you will NOT have a single type 
that can represent both data and text at the same time (Python's str is 
evil).  Additionally, it is often the case that text types in more sane 
environments don't have a single internal representation (so you don't 
have to pay the N-byte penalty, or encoding/decoding costs at I/O 
boundaries for text you never really manipulate, etc.).

-bob




From tv at twistedmatrix.com  Sat Apr 23 02:17:44 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 23 Apr 2005 09:17:44 +0300
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <200504230734.42190@tintia.doriath>
References: <200504230734.42190@tintia.doriath>
Message-ID: <4269E888.1080400@twistedmatrix.com>

Michal Chruszcz wrote:
> Why do you mean it? Why I can't send unicode through twisted? It's 
> ridiculous that I have to convert UTF8 strings to ISO on the client side 

... to convert Unicode strings to UTF-8 on the client side ...

> and then once again from ISO to UTF8 on the server side, so I suppose 

...from UTF-8 to Unicode on the server side...

Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
been sane, but I can understand that not everyone agrees; e.g. Java
wants UCS-16 if I remember correctly. And not serializing to UTF-8
by default catches errors that would otherwise cause mysterious things
to happen.

Maybe add a transport wrapper class that has

    def write(self, data):
        if isinstance(data, unicode):
            data = self.serializeUnicode(data)
        self.wrapped.write(data)

of course, that means the Protocol receiving this needs to convert from
the used serialization format to Unicode.



From bob at redivi.com  Sat Apr 23 02:50:43 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 23 Apr 2005 02:50:43 -0400
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <4269E888.1080400@twistedmatrix.com>
References: <200504230734.42190@tintia.doriath>
	<4269E888.1080400@twistedmatrix.com>
Message-ID: <14b317c04d6b5abe0cd6473ac43bc70f@redivi.com>


On Apr 23, 2005, at 2:17 AM, Tommi Virtanen wrote:

> Michal Chruszcz wrote:
>> Why do you mean it? Why I can't send unicode through twisted? It's
>> ridiculous that I have to convert UTF8 strings to ISO on the client 
>> side
>
> ... to convert Unicode strings to UTF-8 on the client side ...
>
>> and then once again from ISO to UTF8 on the server side, so I suppose
>
> ...from UTF-8 to Unicode on the server side...
>
> Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
> been sane, but I can understand that not everyone agrees; e.g. Java
> wants UCS-16 if I remember correctly. And not serializing to UTF-8
> by default catches errors that would otherwise cause mysterious things
> to happen.

The most mysterious of things is that with such ass-umptions you put 
unicode in and you get str out.  This is especially bad because your 
default encoding is not utf-8.  So, your program explodes, people die, 
and you have to clean up the mess later.

-bob




From projects at reedflute.com  Sat Apr 23 03:46:11 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Sat, 23 Apr 2005 09:46:11 +0200
Subject: [Twisted-Python] Help with SMTP Proxy
In-Reply-To: <42699477.1010101@crm3.com>
References: <42699477.1010101@crm3.com>
Message-ID: <4269FD43.8060607@reedflute.com>

Jan Van Uytven wrote:

> Hi,
>
> I'm a new user of Twisted, I came to it because I need to write an 
> SMTP proxy and want to use Python to do it. The proxy would copy the 
> incoming e-mail (including the envelope headers) and then forward it 
> to Postfix.
>
> Googling around I came across an example of an SMTP server (written by 
> the author of twisted.mail I think)  and after playing around with it 
> a bit I can get it to receive and copy the e-mail, but I'm not quite 
> sure how to forward it on after that. Right now I have the proxy 
> sitting on port 2025 and the final smtp server on port 2030. Here's 
> the code I have so far:
>
> import os, StringIO
> from zope.interface import implements
> from twisted.application import service
>
> application = service.Application("Postfix SMTP Proxy for CopyUser")
>
> from twisted.application import internet
> from twisted.internet import protocol, defer
>
> smtpServerFactory = protocol.ServerFactory()
>
> from twisted.mail import smtp
>
> class FileMessage(object):
>    implements(smtp.IMessage)
>
>    def __init__(self, fileObj):
>        self.fileObj = fileObj
>        self.msg = []
>
>    def lineReceived(self, line):
>        self.fileObj.write(line + '\n')
>        self.msg.append(line)
>          def eomReceived(self):
>        self.fileObj.close()
>        print "\n".join(self.msg)
>        return defer.succeed(None)
>          def connectionLost(self):
>        self.fileObj.close()
>        os.remove(self.fileObj.name)
>
> class Delivery(object):
>    implements(smtp.IMessageDelivery)
>    counter = 0
>
>    def validateTo(self, user):
>        fileName = 'smtplog.' + str(self.counter)
>        self.counter += 1
>        return lambda: FileMessage(file(fileName, 'w'))
>      def validateFrom(self, helo, origin):
>        return origin
>
>    def receivedHeader(self, helo, origin, recipients):
>        recpts = []
>        for i in recipients:
>            recpts.append(str(i))
>        recptstr = "Recipients: " + ",".join(recpts)
>        origin = "Origin: " + str(origin)
>        return recptstr+"\r\n"+origin+"\r\n\r\n"
>
> class ESMTPFactory(protocol.ServerFactory):
>    protocol = smtp.ESMTP
>
>    def buildProtocol(self, addr):
>        p = self.protocol()
>        p.delivery = Delivery()
>        p.factory = self
>        return p
>
> class ForwardSMTPClient(smtp.ESMTPClient):
>
>    def getMailFrom(self):
>        return ["smtp_proxy at localhost"]
>
>    def getMailTo(self):
>        return "tester at localhost"
>
>    def getMailData(self):
>        data = """
>        Subject: Test!
>
>        Test!
>        """
>        return StringIO.StringIO(data)
>      def sentMail(self, code, resp, numOk, addresses, log):
>        print 'Sent', numOk, 'messages'
>
>
> class SMTPClientFactory(protocol.ClientFactory):
>    protocol = ForwardSMTPClient
>
>    def buildProtocol(self, addr):
>        return self.protocol(secret=None, identity='localhost')
>      
> smtpServerFactory = ESMTPFactory()
> smtpClientFactory = SMTPClientFactory()
> smtpServerService = internet.TCPServer(2025, smtpServerFactory)
> smtpServerService.setServiceParent(application)
>
> I've left out actually forwarding the message for now, I just want to 
> forward a test e-mail upon receipt of the message. The whole structure 
> of this program doesn't seem right to me. I thought initially of 
> trying something like adding this to the eomReceived method:
>
> smtpForwardService = internet.TCPClient('localhost', 2030, 
> smtpClientFactory)
> smtpForwardService.setServiceParent(application)
>
This is how I'm doing it.

http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html

Conductor instance registers a reference to both smtpServerService  
instance and smtpForwardService instance.

I would call something like conductor.write(destination) from within the 
smtpServerService instance which would in turn  call  a method on the 
reference to smtpForwardService from within conductor.

regards,

Eugene Coetzee

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From projects at reedflute.com  Sat Apr 23 06:38:18 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Sat, 23 Apr 2005 12:38:18 +0200
Subject: [Twisted-Python] Help with SMTP Proxy - correction
In-Reply-To: <4269FD43.8060607@reedflute.com>
References: <42699477.1010101@crm3.com> <4269FD43.8060607@reedflute.com>
Message-ID: <426A259A.7070507@reedflute.com>

Eugene Coetzee wrote:

>>
>>      smtpServerFactory = ESMTPFactory()
>> smtpClientFactory = SMTPClientFactory()
>> smtpServerService = internet.TCPServer(2025, smtpServerFactory)
>> smtpServerService.setServiceParent(application)
>>
>> I've left out actually forwarding the message for now, I just want to 
>> forward a test e-mail upon receipt of the message. The whole 
>> structure of this program doesn't seem right to me. I thought 
>> initially of trying something like adding this to the eomReceived 
>> method:
>>
>> smtpForwardService = internet.TCPClient('localhost', 2030, 
>> smtpClientFactory)
>> smtpForwardService.setServiceParent(application)
>>
> This is how I'm doing it.
>
> http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html
>
> Conductor instance registers a reference to both smtpServerService  
> instance and smtpForwardService instance.
>
> I would call something like conductor.write(destination) from within 
> the smtpServerService instance which would in turn  call  a method on 
> the reference to smtpForwardService from within conductor.
>
<snip>
Conductor instance registers a reference to both smtpServerService  
instance and smtpForwardService instance.

I would call something like conductor.write(destination) from within the 
smtpServerService instance which would in turn  call  a method on the 
reference to smtpForwardService from within conductor.

</snip>

should in fact read ...

Conductor instance registers a reference to both smtpServerFactory  
instance and smtpClientFactory instance.

I would call something like conductor.write(destination) from within the 
smtpServer instance which would in turn  call  a method on the reference 
to smtpClientFactory from within conductor.

Sorry about that.

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From solipsis at pitrou.net  Mon Apr 25 10:15:00 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Mon, 25 Apr 2005 16:15:00 +0200
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <42686E0A.6020905@anu.edu.au>
References: <42686E0A.6020905@anu.edu.au>
Message-ID: <1114438500.11099.6.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi,

> At the moment we've got Twisted in the main thread, spawning
> a thread to run wx.  It works nicely except we can't figure
> out how to communicate with wx (ie., generate wxevents)
> from twisted.  (We don't need the converse - it's notification
> only.)

You just have to call wx.CallAfter, it will let you call any function
inside the wx thread. I've put an example of this use online:
http://solipsis.netofpeers.net/wiki/WxTwistedExample

It may be better, by the way, to run wx in the main thread and Twisted
in the secondary thread. Some toolkits supported by wx may not like the
fact that they aren't called from the main thread - I'm not sure such a
limitation exists but I'm not sure of the contrary either. Twisted,
OTOH, does not seem to care at all.

Regards

Antoine.





From foom at fuhm.net  Mon Apr 25 10:27:56 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 25 Apr 2005 10:27:56 -0400
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <e2b09905e42cc61911b46dba964f14ee@fuhm.net>

(Or, er, semi-weekly)

Bug summary
______________________
Since 2005-04-11 14:20:07.600000:
  Bugs opened: 29   Bugs closed: 20   Total open bugs: 346 (+9)
   Urgent: 6 (+2)
   Bug: 135 (+0)
   Feature: 135 (+6)
   Wish: 70 (+1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[XISH] Erroneous .encode('utf-8') in twisted.xish.domish  (yesterday)
        http://twistedmatrix.com/bugs/issue1002 opened by ralphm

[CORE] gtk2 reactor broken for actual GUI apps  (4 days ago)
        http://twistedmatrix.com/bugs/issue994 opened by warner

                     ==== Bug ====
Python 2.4 - exceptions.AttributeError: 'module' object has no 
attribute 'kwdict'  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1001 opened by cphsu

[ENTERPRISE] ConnectionPool allows the pool size to be grown  (3 days 
ago)
CLOSED http://twistedmatrix.com/bugs/issue997 opened by mg

[CORE, WIN32] Win32 installer rc3 does not install mktap.py  (7 days 
ago)
        http://twistedmatrix.com/bugs/issue991 opened by exarkun

[WEB] request.setHeader should fail if data has already been sent 
written to the client  (3 days ago)
        http://twistedmatrix.com/bugs/issue998 opened by mg

[WEB] [PATCH] web2 CGI syntax error  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue977 opened by warner

[WEB] cgi fails to close stdin of the child process  (1 week ago)
        http://twistedmatrix.com/bugs/issue981 opened by warner

Excessive deprecation warnings from MetaInterface.__getattr__  (5 days 
ago)
        http://twistedmatrix.com/bugs/issue993 opened by jknight

session.getComponent doesn't work with 'default' keyword arg  (6 days 
ago)
        http://twistedmatrix.com/bugs/issue992 opened by justinj

AttributeError: 'WSGIHandler' object has no attribute 'stopProducing'  
(1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue987 opened by srichter

[WEB] Assertion Error in twisted.internet.abstract  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue986 opened by srichter

[WEB] AttributeError: HTTPChannelRequest instance has no attribute 
'transport'  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue985 opened by srichter

[WEB] twisted.web2.wsgi environment variables  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue984 opened by srichter

[CORE] Default log observer chokes on unicode messages  (7 days ago)
        http://twistedmatrix.com/bugs/issue989 opened by exarkun

[CORE, DOCUMENTATION] 
twisted.internet.abstract.FileDescriptor.loseConnection.__doc__ is a 
stupid lie  (1 week ago)
        http://twistedmatrix.com/bugs/issue988 opened by exarkun

[FTP] IFTPShell needs to be completely restructured  (1 week ago)
        http://twistedmatrix.com/bugs/issue983 opened by srichter

[patch] Naming consistency in new plugin module  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue980 opened by mg

[MAIL, NAMES] fix deprecation warnings in test_mail  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue982 opened by warner

backport if-modified-since bugfix from web2 to web  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue976 opened by demaledetti

twisted.web.client.getPage never completes files &gt;3.1MB (Windows)  
(1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue974 opened by moonfallen

                     ==== Feature ====
[ENTERPRISE] Add runWithConnection to adbapi.ConnectionPool  (1 week 
ago)
CLOSED http://twistedmatrix.com/bugs/issue975 opened by mg

Common Access Logging Observer for twisted.web2  (yesterday)
        http://twistedmatrix.com/bugs/issue1000 opened by srichter

twisted.web2 HTTP Server Enhancements  (yesterday)
        http://twistedmatrix.com/bugs/issue999 opened by srichter

[CORE] t.plugin caching and read-only package directories  (3 days ago)
        http://twistedmatrix.com/bugs/issue996 opened by mg

contribpackages are not updated for Python 2.4  (4 days ago)
        http://twistedmatrix.com/bugs/issue995 opened by manlio

[CORE] Deferred cancellation  (7 days ago)
        http://twistedmatrix.com/bugs/issue990 opened by exarkun

[DOCUMENTATION] Rename enterprise howto to rdbms (filename)  (1 week 
ago)
        http://twistedmatrix.com/bugs/issue979 opened by itamarst

[DOCUMENTATION] Document wxPython mess appropriately  (1 week ago)
        http://twistedmatrix.com/bugs/issue978 opened by itamarst

Bugs Closed
______________________
                     ==== Bug ====
Python 2.4 - exceptions.AttributeError: 'module' object has no 
attribute 'kwdict'  (yesterday)
        http://twistedmatrix.com/bugs/issue1001 opened by cphsu, closed 
by exarkun

[ENTERPRISE] ConnectionPool allows the pool size to be grown  (3 days 
ago)
        http://twistedmatrix.com/bugs/issue997 opened by mg, closed by 
davep

[WEB] [PATCH] web2 CGI syntax error  (1 week ago)
        http://twistedmatrix.com/bugs/issue977 opened by warner, closed 
by warner

[WEB] [PATCH] http.py stringToDatetime handling RFC850 format  (8 
months ago)
        http://twistedmatrix.com/bugs/issue669 opened by db3l, closed by 
jknight

AttributeError: 'WSGIHandler' object has no attribute 'stopProducing'  
(1 week ago)
        http://twistedmatrix.com/bugs/issue987 opened by srichter, 
closed by jknight

[WEB] Assertion Error in twisted.internet.abstract  (1 week ago)
        http://twistedmatrix.com/bugs/issue986 opened by srichter, 
closed by jknight

[WEB] AttributeError: HTTPChannelRequest instance has no attribute 
'transport'  (1 week ago)
        http://twistedmatrix.com/bugs/issue985 opened by srichter, 
closed by jknight

qtreactor dont works with threads!!  (4 months ago)
        http://twistedmatrix.com/bugs/issue793 opened by nahu, closed by 
exarkun

[WEB] twisted.web2.wsgi environment variables  (1 week ago)
        http://twistedmatrix.com/bugs/issue984 opened by srichter, 
closed by jknight

SSL problems with win32eventreactor  (12 months ago)
        http://twistedmatrix.com/bugs/issue592 opened by justinj, closed 
by jknight

[patch] Naming consistency in new plugin module  (1 week ago)
        http://twistedmatrix.com/bugs/issue980 opened by mg, closed by 
exarkun

[MAIL, NAMES] fix deprecation warnings in test_mail  (1 week ago)
        http://twistedmatrix.com/bugs/issue982 opened by warner, closed 
by exarkun

[WEBSITE] No link to Twisted 2 installer for win32 on website  (2 weeks 
ago)
        http://twistedmatrix.com/bugs/issue964 opened by ash, closed by 
exarkun

[CORE] gtk reactor not delivering callbacks timely  (13 months ago)
        http://twistedmatrix.com/bugs/issue552 opened by dektwisted, 
closed by exarkun

Weirdness in weakref.WeakValueDictionary casues problems in 
enterprise/reflector.py (with fix)  (8 months ago)
        http://twistedmatrix.com/bugs/issue682 opened by icepick, closed 
by exarkun

[PB, WEB] twisted.web.distrib uses deprecated pb classes  (13 months 
ago)
        http://twistedmatrix.com/bugs/issue543 opened by hypatia, closed 
by warner

backport if-modified-since bugfix from web2 to web  (1 week ago)
        http://twistedmatrix.com/bugs/issue976 opened by demaledetti, 
closed by jknight

twisted.web.client.getPage never completes files &gt;3.1MB (Windows)  
(1 week ago)
        http://twistedmatrix.com/bugs/issue974 opened by moonfallen, 
closed by exarkun

                     ==== Feature ====
[ENTERPRISE] Add runWithConnection to adbapi.ConnectionPool  (1 week 
ago)
        http://twistedmatrix.com/bugs/issue975 opened by mg, closed by 
davep

[DEFERRED] Deferred setTimeout sucks  (20 months ago)
        http://twistedmatrix.com/bugs/issue178 opened by radix, closed 
by exarkun




From itamar at itamarst.org  Mon Apr 25 11:03:12 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Apr 2005 11:03:12 -0400
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <1114438500.11099.6.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <42686E0A.6020905@anu.edu.au>
	<1114438500.11099.6.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <1114441392.8213.11.camel@localhost.localdomain>

On Mon, 2005-04-25 at 16:15 +0200, Antoine Pitrou wrote:

> It may be better, by the way, to run wx in the main thread and Twisted
> in the secondary thread. Some toolkits supported by wx may not like the
> fact that they aren't called from the main thread - I'm not sure such a
> limitation exists but I'm not sure of the contrary either. Twisted,
> OTOH, does not seem to care at all.

Twisted does care about this for signal handling. If Twisted is run in a
thread it will not be able to do shutdown based on signals or run
processes correctly (though if you install your own signal handlers that
forward info to twisted it can be made to work).




From ken at kenkinder.com  Mon Apr 25 12:01:32 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 25 Apr 2005 11:01:32 -0500
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <4269E888.1080400@twistedmatrix.com>
References: <200504230734.42190@tintia.doriath>
	<4269E888.1080400@twistedmatrix.com>
Message-ID: <426D145C.8050006@kenkinder.com>

Tommi Virtanen wrote:

>Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
>been sane, but I can understand that not everyone agrees; e.g. Java
>wants UCS-16 if I remember correctly. And not serializing to UTF-8
>by default catches errors that would otherwise cause mysterious things
>to happen.
>  
>
Most of the time, you should know the encoding. Instead of forcing the 
protocol to do the work, why not just have a way of setting the expected 
encoding for write() and similar methods? If the encoding is not set 
(ie, None), then raise the exception. Otherwise, use the specified 
encoding. This would have the added readability advantage in that 
unicode encoding -- uhh code -- wouldn't have to be sprinkled throughout 
the protocol classes -- only in places where the encoding is actually 
set -- in HTTP's headers for example.

-Ken




From bob at redivi.com  Mon Apr 25 12:58:17 2005
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 25 Apr 2005 12:58:17 -0400
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <426D145C.8050006@kenkinder.com>
References: <200504230734.42190@tintia.doriath>
	<4269E888.1080400@twistedmatrix.com>
	<426D145C.8050006@kenkinder.com>
Message-ID: <7e13a4e742c5004c8ce7d6533c6a35e5@redivi.com>


On Apr 25, 2005, at 12:01 PM, Ken Kinder wrote:

> Tommi Virtanen wrote:
>
>> Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
>> been sane, but I can understand that not everyone agrees; e.g. Java
>> wants UCS-16 if I remember correctly. And not serializing to UTF-8
>> by default catches errors that would otherwise cause mysterious things
>> to happen.
>>
> Most of the time, you should know the encoding. Instead of forcing the 
> protocol to do the work, why not just have a way of setting the 
> expected encoding for write() and similar methods? If the encoding is 
> not set (ie, None), then raise the exception. Otherwise, use the 
> specified encoding. This would have the added readability advantage in 
> that unicode encoding -- uhh code -- wouldn't have to be sprinkled 
> throughout the protocol classes -- only in places where the encoding 
> is actually set -- in HTTP's headers for example.

import codecs
class MyProtocol(....):
     def __init__(self, encoding='ascii'):
         self.textwriter = codecs.getwriter(encoding)(self.transport)

     def write_text(self, s):
         self.textwriter.write(s)

     def write(self, s):
         self.transport.write(s)

This way write_text will verify that you are only sending valid strings 
in the chosen encoding.  If you call write_text() with a str then it 
will be decoded using sys.getdefaultencoding() and then encoded using 
the chosen encoding, so it really does guarantee that all strings sent 
with write_text are valid (at this level).

You should really keep separate what you're doing with raw bytes 
(write) and what you're doing with text (write_text) as they are 
different beasts.

There is no need to sprinkle this everywhere, just make it a mix-in or 
whatever and use as appropriate.

-bob




From wyvern at crm3.com  Mon Apr 25 14:35:04 2005
From: wyvern at crm3.com (Jan Van Uytven)
Date: Mon, 25 Apr 2005 11:35:04 -0700
Subject: [Twisted-Python] Help with SMTP Proxy - correction
In-Reply-To: <426A259A.7070507@reedflute.com>
References: <42699477.1010101@crm3.com> <4269FD43.8060607@reedflute.com>
	<426A259A.7070507@reedflute.com>
Message-ID: <426D3858.5000606@crm3.com>

Thanks Eugene! I'll see if I can rewrite my code to use this concept :)

Cheers,

Jan

Eugene Coetzee wrote:

> Eugene Coetzee wrote:
>
>>>
>>>      smtpServerFactory = ESMTPFactory()
>>> smtpClientFactory = SMTPClientFactory()
>>> smtpServerService = internet.TCPServer(2025, smtpServerFactory)
>>> smtpServerService.setServiceParent(application)
>>>
>>> I've left out actually forwarding the message for now, I just want 
>>> to forward a test e-mail upon receipt of the message. The whole 
>>> structure of this program doesn't seem right to me. I thought 
>>> initially of trying something like adding this to the eomReceived 
>>> method:
>>>
>>> smtpForwardService = internet.TCPClient('localhost', 2030, 
>>> smtpClientFactory)
>>> smtpForwardService.setServiceParent(application)
>>>
>> This is how I'm doing it.
>>
>> http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html
>>
>> Conductor instance registers a reference to both smtpServerService  
>> instance and smtpForwardService instance.
>>
>> I would call something like conductor.write(destination) from within 
>> the smtpServerService instance which would in turn  call  a method on 
>> the reference to smtpForwardService from within conductor.
>>
> <snip>
> Conductor instance registers a reference to both smtpServerService  
> instance and smtpForwardService instance.
>
> I would call something like conductor.write(destination) from within 
> the smtpServerService instance which would in turn  call  a method on 
> the reference to smtpForwardService from within conductor.
>
> </snip>
>
> should in fact read ...
>
> Conductor instance registers a reference to both smtpServerFactory  
> instance and smtpClientFactory instance.
>
> I would call something like conductor.write(destination) from within 
> the smtpServer instance which would in turn  call  a method on the 
> reference to smtpClientFactory from within conductor.
>
> Sorry about that.
>




From dgray at omniti.com  Mon Apr 25 17:21:54 2005
From: dgray at omniti.com (Dave Gray)
Date: Mon, 25 Apr 2005 17:21:54 -0400
Subject: [Twisted-Python] Non-blocking webserver - what am I doing wrong?
Message-ID: <426D5F72.3000203@omniti.com>

I'm trying to get a simple webserver working using twisted. It works, to 
some extent, serves pages and all, but it blocks until the 
reactor.callLater(...) is done... what am I doing wrong?

Dave

# CODE
from twisted.web import server
from twisted.web.resource import Resource
from twisted.internet import reactor, defer

import pprint
dump = pprint.PrettyPrinter(indent=4).pformat
def requestDebug(r):
     r.write('<pre>'+ dump(r.headers) +'</pre>')
     reactor.callLater(5, r.finish)

class NonBlock(Resource):
     """
     I should be a non-blocking resource that
     takes 5s to load. Instead, each request
     waits for any others to finish.
     """
     def getChild(self, path, request):
         return self
     isLeaf=False
     def render_GET(self, request):
         d = defer.Deferred()
         d.addCallback(requestDebug)
         d.callback(request)
         return server.NOT_DONE_YET

from twisted.application import service, internet
application = service.Application("nonblock")
internet.TCPServer(8080, server.Site(NonBlock())
     ).setServiceParent(application)



From exarkun at divmod.com  Mon Apr 25 17:42:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 25 Apr 2005 21:42:09 GMT
Subject: [Twisted-Python] Non-blocking webserver - what am I doing wrong?
In-Reply-To: <426D5F72.3000203@omniti.com>
Message-ID: <20050425214209.15422.830510557.divmod.quotient.57@ohm>

On Mon, 25 Apr 2005 17:21:54 -0400, Dave Gray <dgray at omniti.com> wrote:
>I'm trying to get a simple webserver working using twisted. It works, to 
>some extent, serves pages and all, but it blocks until the 
>reactor.callLater(...) is done... what am I doing wrong?
>

  You might have more success asking on the twisted-web mailing list:

    http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

  Jp



From gmcdonald at infocomp.com  Tue Apr 26 00:21:42 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Tue, 26 Apr 2005 14:21:42 +1000
Subject: [Twisted-Python] twisted robot ...
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4D4F@XCHANGE>


> Twisted does care about this for signal handling. If Twisted is run in a
> thread it will not be able to do shutdown based on signals or run
> processes correctly (though if you install your own signal handlers that
> forward info to twisted it can be made to work).

Are there examples of installing signal handlers and forwarding signal
information to a twisted thread?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050426/a67b0a02/attachment.htm 

From exarkun at divmod.com  Tue Apr 26 00:39:59 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 04:39:59 GMT
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4D4F@XCHANGE>
Message-ID: <20050426043959.15422.61344000.divmod.quotient.661@ohm>

On Tue, 26 Apr 2005 14:21:42 +1000, Grant McDonald <gmcdonald at infocomp.com> wrote:
>
>> Twisted does care about this for signal handling. If Twisted is run in a
>> thread it will not be able to do shutdown based on signals or run
>> processes correctly (though if you install your own signal handlers that
>> forward info to twisted it can be made to work).
>
>Are there examples of installing signal handlers and forwarding signal
>information to a twisted thread?
>

  There isn't actually a public API for this.

  With almost all of the reactors included in Twisted, though:

    import signal
    from twisted.internet import reactor

    def sigInt(*a):
        # Do your own SIGINT processing, or whatever.
        reactor.sigInt(*a)

    def sigChild(*a):
        # Do your own SIGCHLD processing, or whatever.
        reactor._handleSigchld)

    signal.signal(signal.SIGINT, sigInt)
    signal.signal(signal.SIGCHLD, sigChild)

  (etc) will work.  However, those two methods really are not public (one of them even looks the part), and could change at any time.  If you are really interested in doing this, give a shout, and perhaps the interface can be extended so that it's possible to do in a supported way.  Otherwise, don't be surprised if it breaks :)

  Jp



From bear at code-bear.com  Tue Apr 26 01:32:15 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 26 Apr 2005 01:32:15 -0400
Subject: [Twisted-Python] creating source tarball from svn tree
Message-ID: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>

I'm trying to build a source distribution of the svn tree using the  
following command:

python setup.py all sdist

but I get the error below - any thoughts?

running sdist
warning: sdist: manifest template 'MANIFEST.in' does not exist (using  
default file list)
Traceback (most recent call last):
   File "twisted/topfiles/setup.py", line 113, in ?
     dist.setup(**setup_args)
   File "./twisted/python/dist.py", line 69, in setup
     return core.setup(**kw)
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/core.py", line 149, in setup
     dist.run_commands()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/dist.py", line 907, in run_commands
     self.run_command(cmd)
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/dist.py", line 927, in run_command
     cmd_obj.run()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/sdist.py", line 143, in run
     self.get_file_list()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/sdist.py", line 240, in get_file_list
     self.add_defaults()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/sdist.py", line 301, in add_defaults
     self.filelist.extend(build_ext.get_source_files())
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/build_ext.py", line 361, in  
get_source_files
     self.check_extensions_list(self.extensions)
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/build_ext.py", line 294, in  
check_extensions_list
     (ext_name, build_info) = ext
TypeError: unpack non-sequence
Error: Subprocess exited with result 1 for project core

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050426/989d7f9f/attachment.pgp 

From bob at redivi.com  Tue Apr 26 05:04:40 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 26 Apr 2005 05:04:40 -0400
Subject: [Twisted-Python] creating source tarball from svn tree
In-Reply-To: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>
References: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>
Message-ID: <79bf536a8f55075f7b6cac3bcd22db20@redivi.com>


On Apr 26, 2005, at 1:32 AM, Mike Taylor wrote:

> I'm trying to build a source distribution of the svn tree using the 
> following command:
>
> python setup.py all sdist

You probably just want to do something like this (from the parent 
directory of your Twisted checkout):

svn export Twisted Twisted-20050426
tar zcvf Twisted-20050426.tar.gz Twisted-20050426

The release script looks like it does something much, much worse :)

-bob




From bear at code-bear.com  Tue Apr 26 12:23:49 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 26 Apr 2005 12:23:49 -0400
Subject: [Twisted-Python] creating source tarball from svn tree
In-Reply-To: <79bf536a8f55075f7b6cac3bcd22db20@redivi.com>
References: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>
	<79bf536a8f55075f7b6cac3bcd22db20@redivi.com>
Message-ID: <76a0278659fd436596b9eb10f259c3a1@code-bear.com>

ahh, the "out of the box" solution - thanks!

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


On Apr 26, 2005, at 5:04 AM, Bob Ippolito wrote:

>
> On Apr 26, 2005, at 1:32 AM, Mike Taylor wrote:
>
>> I'm trying to build a source distribution of the svn tree using the 
>> following command:
>>
>> python setup.py all sdist
>
> You probably just want to do something like this (from the parent 
> directory of your Twisted checkout):
>
> svn export Twisted Twisted-20050426
> tar zcvf Twisted-20050426.tar.gz Twisted-20050426
>
> The release script looks like it does something much, much worse :)
>
> -bob
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050426/3600c61b/attachment.pgp 

From torbjorn at einarssons.se  Tue Apr 26 12:27:05 2005
From: torbjorn at einarssons.se (=?iso-8859-1?Q?Torbj=F6rn_Einarsson?=)
Date: Tue, 26 Apr 2005 18:27:05 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
Message-ID: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>

Hi,

 

I?m trying to make a server that listens to one TCP socket for commands and
then starts listening to more or less UDP sockets for data depending on the
commands. The UDP data shall then be forwarded to one or more outgoing UDP
ports.

 

For example, here are some commands with explanations:

 

addChannel 10000                             should make the server
listening to UDP port 10000

addChannel 10002                             should make the server
listening to UDP port 10002

addConnection 10000 10.0.0.2:5000    start forwarding the packet from UDP
port 10000 to port 5000 on another machine

addConnection 10000 10.0.0.3:5002    start forwarding the packet from UDP
port 10000 to port 5002 on yet another machine

delConnection  10000 10.0.0.2:5000    stop forwarding packets to the first
guy

delConnection  10000 10.0.0.3:5002    stop forwarding packets to the second
guy

delChannel      10000                         stop listening to port 10000

 

I?ve been making some rather advanced servers in twisted, but with fixed
ports. How can I deal with this type of dynamic port bindings?

 

For adding a port to listen to: reactor.listenUDP(10000,prot) is working,
but how do I stop listening to a port an unbind it? I?ve found something
called unlistenUDP but it seems to be deprecated?

 

Alternatively, I could start up a service , like

u = internet.services.UDPServer(10000,UdpProtocol())

but how do I stop this particular service without stopping all others?

 

Any suggestions are welcome.

 

Regards,

Torbj?rn Einarsson1

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050426/20b98c97/attachment.htm 

From exarkun at divmod.com  Tue Apr 26 13:26:38 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 17:26:38 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>
Message-ID: <20050426172638.15422.990814225.divmod.quotient.1781@ohm>

On Tue, 26 Apr 2005 18:27:05 +0200, Torbj??rn Einarsson <torbjorn at einarssons.se> wrote:
>Hi,
>
>
>
>I??m trying to make a server that listens to one TCP socket for commands and
>then starts listening to more or less UDP sockets for data depending on the
>commands. The UDP data shall then be forwarded to one or more outgoing UDP
>ports.
>
>For example, here are some commands with explanations:
>
>addChannel 10000                             should make the server
>listening to UDP port 10000
>
>addChannel 10002                             should make the server
>listening to UDP port 10002
>
>addConnection 10000 10.0.0.2:5000    start forwarding the packet from UDP
>port 10000 to port 5000 on another machine
>
>addConnection 10000 10.0.0.3:5002    start forwarding the packet from UDP
>port 10000 to port 5002 on yet another machine
>
>delConnection  10000 10.0.0.2:5000    stop forwarding packets to the first
>guy
>
>delConnection  10000 10.0.0.3:5002    stop forwarding packets to the second
>guy
>
>delChannel      10000                         stop listening to port 10000
>
>
>
>I??ve been making some rather advanced servers in twisted, but with fixed
>ports. How can I deal with this type of dynamic port bindings?
>
>For adding a port to listen to: reactor.listenUDP(10000,prot) is working,
>but how do I stop listening to a port an unbind it? I??ve found something
>called unlistenUDP but it seems to be deprecated?

  listenUDP returns a udp.Port.  Call stopListening() on that Port and it will shut down.

>
>Alternatively, I could start up a service , like
>
>u = internet.services.UDPServer(10000,UdpProtocol())
>
>but how do I stop this particular service without stopping all others?
>

  Just call stopService() on it.  How you arrange to know which services should have this called on them and how you track your services depends on your specific application.

  Jp



From itamar at itamarst.org  Tue Apr 26 12:51:30 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Apr 2005 12:51:30 -0400
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>
References: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>
Message-ID: <1114534290.8738.54.camel@localhost.localdomain>

To stop listening on UDP port:

port = reactor.listenUDP(1243, p)
port.stopListening()




From torbjorn at einarssons.se  Tue Apr 26 16:52:45 2005
From: torbjorn at einarssons.se (=?iso-8859-1?Q?Torbj=F6rn_Einarsson?=)
Date: Tue, 26 Apr 2005 22:52:45 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <1114534290.8738.54.camel@localhost.localdomain>
Message-ID: <000201c54aa1$e5deef70$0200a8c0@hemnet>

Thanks a lot!

A related question:
how do I in the simplest way send UDP data to 10 different ports.

In standard Python I would do
sock = socket.socket(AF_INET, socket.SOCK_DGRAM)
for port in portList:
    sock.sendto(data,(host,port))
sock.close()

What is the corresponding thing in Twisted?  (I've only found listenUDP and
connected UDP).

BR,
Torbj?rn

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Itamar
Shtull-Trauring
Sent: den 26 april 2005 18:52
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dynamic listening to UDP ports?

To stop listening on UDP port:

port = reactor.listenUDP(1243, p)
port.stopListening()


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From exarkun at divmod.com  Tue Apr 26 18:12:55 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 22:12:55 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000201c54aa1$e5deef70$0200a8c0@hemnet>
Message-ID: <20050426221255.15422.651718936.divmod.quotient.2185@ohm>

On Tue, 26 Apr 2005 22:52:45 +0200, Torbj??rn Einarsson <torbjorn at einarssons.se> wrote:
>Thanks a lot!
>
>A related question:
>how do I in the simplest way send UDP data to 10 different ports.
>
> [snip]
>

  Use the write() method.  See the UDP howto:

    http://twistedmatrix.com/documents/current/howto/udp

  Jp



From pp64 at codelock.com  Tue Apr 26 18:36:12 2005
From: pp64 at codelock.com (Pavel Pergamenshchik)
Date: Tue, 26 Apr 2005 15:36:12 -0700
Subject: [Twisted-Python] Non-blocking webserver - what am I doing wrong?
In-Reply-To: <426D5F72.3000203@omniti.com>
References: <426D5F72.3000203@omniti.com>
Message-ID: <20050426153612.3940f9f0@dunce>

On Mon, 25 Apr 2005 17:21:54 -0400
Dave Gray <dgray at omniti.com> wrote:

> I'm trying to get a simple webserver working using twisted. It works, to 
> some extent, serves pages and all, but it blocks until the 
> reactor.callLater(...) is done... what am I doing wrong?
> 
> Dave
> 
> # CODE

...snip...

>          d = defer.Deferred()
>          d.addCallback(requestDebug)
>          d.callback(request)

...snip...

Note that this code is more or less equivalent to
           requestDebug(request)



From torbjorn at einarssons.se  Tue Apr 26 19:01:29 2005
From: torbjorn at einarssons.se (=?iso-8859-1?Q?Torbj=F6rn_Einarsson?=)
Date: Wed, 27 Apr 2005 01:01:29 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <20050426221255.15422.651718936.divmod.quotient.2185@ohm>
Message-ID: <000001c54ab3$e1a670b0$0200a8c0@hemnet>

Well, the examples always use reactor.listenUDP(port,proto). Can I get rid
of the listenUDP, since I don't want to listen to a port?

I tried with just creating a protocol instance and using
self.transport.write() inside it but then the transport was None.

Sorry for being slow in grasping this, but the manual is very terse...

/Torbj?rn




-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jp Calderone
Sent: den 27 april 2005 00:13
To: Twisted general discussion
Subject: RE: [Twisted-Python] Dynamic listening to UDP ports?

On Tue, 26 Apr 2005 22:52:45 +0200, Torbj??rn Einarsson
<torbjorn at einarssons.se> wrote:
>Thanks a lot!
>
>A related question:
>how do I in the simplest way send UDP data to 10 different ports.
>
> [snip]
>

  Use the write() method.  See the UDP howto:

    http://twistedmatrix.com/documents/current/howto/udp

  Jp

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From sir.shz at gmail.com  Tue Apr 26 19:30:36 2005
From: sir.shz at gmail.com (sir shz)
Date: Tue, 26 Apr 2005 16:30:36 -0700
Subject: [Twisted-Python] flushing the transport
References: <000001c54ab3$e1a670b0$0200a8c0@hemnet>
Message-ID: <000b01c54ab7$f77e3040$800101df@sv.us.sonicwall.com>

Hi, I'm just starting to write a simple client, whose protocol inherits from
basic.LineReceiver:

class MyClientProtocol(basic.LineReceiver):
     def connectionMade(self):
          stdout.write("\nconnectionMade\n")
          self.transport.write("test\r\n")
          # time.sleep(10)

now if I un-comment the "time.sleep(10)", the server doesn't receive the
"test\r\n" message until
10 seconds later, basically after the connectionMade() returns. Is there
anyway to "flush" the buffer so
the transport will send the "test\r\n" right away?

Thanks.

Z.





From exarkun at divmod.com  Tue Apr 26 19:50:15 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 23:50:15 GMT
Subject: [Twisted-Python] flushing the transport
In-Reply-To: <000b01c54ab7$f77e3040$800101df@sv.us.sonicwall.com>
Message-ID: <20050426235015.15422.1253386490.divmod.quotient.2331@ohm>

On Tue, 26 Apr 2005 16:30:36 -0700, sir shz <sir.shz at gmail.com> wrote:
>Hi, I'm just starting to write a simple client, whose protocol inherits from
>basic.LineReceiver:
>
>class MyClientProtocol(basic.LineReceiver):
>     def connectionMade(self):
>          stdout.write("\nconnectionMade\n")
>          self.transport.write("test\r\n")
>          # time.sleep(10)
>
>now if I un-comment the "time.sleep(10)", the server doesn't receive the
>"test\r\n" message until
>10 seconds later, basically after the connectionMade() returns. Is there
>anyway to "flush" the buffer so
>the transport will send the "test\r\n" right away?
>
>Thanks.
>
>Z.
>

  Flushing a buffer is a potentially long-running operation.  What if the buffer was full?  What if the network is congested?  What if the peer has gone away and will never, ever ACK another packet ever again?

  You should rely on protocol-level messages if you need to synchronize things.  You should rely on protocol-level acknowledgements if you need to be certain of delivery.

  All you can rely on transport.write() to do is eventually send the bytes, if it is possible to do so.

  Jp



From exarkun at divmod.com  Tue Apr 26 19:59:01 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 23:59:01 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000001c54ab3$e1a670b0$0200a8c0@hemnet>
Message-ID: <20050426235901.15422.781768115.divmod.quotient.2342@ohm>

On Wed, 27 Apr 2005 01:01:29 +0200, Torbj??rn Einarsson <torbjorn at einarssons.se> wrote:
>Well, the examples always use reactor.listenUDP(port,proto). Can I get rid
>of the listenUDP, since I don't want to listen to a port?
>
>I tried with just creating a protocol instance and using
>self.transport.write() inside it but then the transport was None.
>
>Sorry for being slow in grasping this, but the manual is very terse...
>

  You cannot get rid of the listenUDP().  All UDP traffic has two endpoint addresses associated with it.  One on the receiving end, one on the sending end.  The socket module example you provided earlier binds a local port, too, it just does so implicitly instead of explicitly.

  If you don't care what port you're bound to, use 0.  Your socket library will pick an available one at random for you.

  Jp



From remy.cool at smartology.nl  Wed Apr 27 02:08:21 2005
From: remy.cool at smartology.nl (Remy C Cool)
Date: Wed, 27 Apr 2005 08:08:21 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
Message-ID: <426F2C55.9040703@smartology.nl>

Hello,

I've searched on the (Twisted) website and mailinglists, but failed to 
find the answer to my question.

Is is possible to pass the original exception code/message to the XMLRPC 
client? When an exception occurs, the client get's a general 'error 
occured' message and I would like to be able to let the client know what 
went wrong. How can I accomplish this with Twisted?

BTW I'm working with the latest Twisted 1.x release (Debian)

Regards,
Remy Cool



From projects at reedflute.com  Wed Apr 27 04:14:10 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 27 Apr 2005 10:14:10 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000201c54aa1$e5deef70$0200a8c0@hemnet>
References: <000201c54aa1$e5deef70$0200a8c0@hemnet>
Message-ID: <426F49D2.2030601@reedflute.com>

Torbj?rn Einarsson wrote:

>Thanks a lot!
>
>A related question:
>how do I in the simplest way send UDP data to 10 different ports.
>
>In standard Python I would do
>sock = socket.socket(AF_INET, socket.SOCK_DGRAM)
>for port in portList:
>    sock.sendto(data,(host,port))
>sock.close()
>
>What is the corresponding thing in Twisted?  (I've only found listenUDP and
>connected UDP).
>
>  
>
As I understand it you want to tie different servers together. The 
"Server Factory" base class  for TCP connections is an abstraction layer 
which makes it possible to spawn different server protocols , see:

http://twistedmatrix.com/documents/current/howto/tutorial/factory

There is no UDP Factory base class that can be used to wrap different 
UDP protocol instances.

I achieve this by writing my own application layer which ties everything 
together- see:

http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html

Alternatively - I suspect one could also simply inherit from 
service.Application  and code your "application layer" stuff in there.

regards,

Eugene Coetzee

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From exarkun at divmod.com  Wed Apr 27 08:13:33 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 12:13:33 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <426F49D2.2030601@reedflute.com>
Message-ID: <20050427121333.15422.1765175511.divmod.quotient.3389@ohm>

On Wed, 27 Apr 2005 10:14:10 +0200, Eugene Coetzee <projects at reedflute.com> wrote:
>
> [snip]
>
>Alternatively - I suspect one could also simply inherit from 
>service.Application  and code your "application layer" stuff in there.
>

  You can't subclass t.a.service.Application (since it's a function :).  Subclassing t.a.service.Service is often a good idea, though.

  Jp



From boomberschloss at yahoo.com  Wed Apr 27 08:49:01 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Wed, 27 Apr 2005 05:49:01 -0700 (PDT)
Subject: [Twisted-Python] blocking and threads
Message-ID: <20050427124901.9885.qmail@web53110.mail.yahoo.com>

Hi all,

I am just wondering: from the Twisted how-tos, it
appears that doing anything that could possibly take
arbitrarily long to execute should not be done in the
reactor's main thread; i.e. it should be done using an
asynchronous library (such as Twisted's network
communication facilities), or in a different thread,
using the reactor's thread pool.

So it would seem that many things that may be
considered "primitive" in Python, such as file IO,
require some kind of patching if they are to be
immediately usable by a Twisted application. I came up
with the following solution, which enables calling any
function in a different thread with a deferred
interface; I just wanted to make sure that I'm not
completely missing some point:

def deferToThread(func, *args, **kargs):
	"""executes the given function in a thread, and
passes the return value to the deferred we return"""
	d = defer.Deferred()
	reactor.callInThread(_calledInThread, d, func, *args,
**kargs)
	return d

def _calledInThread(d, func, *args, **kargs):
	try:
		retval = func(*args, **kargs)
	except Exception, x:
		reactor.callFromThread(d.errback, x)
	else:
		reactor.callFromThread(d.callback, retval)


Thanks,

Joe

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From projects at reedflute.com  Wed Apr 27 08:58:48 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 27 Apr 2005 14:58:48 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <20050427121333.15422.1765175511.divmod.quotient.3389@ohm>
References: <20050427121333.15422.1765175511.divmod.quotient.3389@ohm>
Message-ID: <426F8C88.3010406@reedflute.com>

Jp Calderone wrote:

>
>  You can't subclass t.a.service.Application (since it's a function 
> :).  Subclassing t.a.service.Service is often a good idea, though.
>
>  Jp
>
I stand corrected, although from an OO puritanical :) point of view 
"Application" should be the name of a class - not a method.



From exarkun at divmod.com  Wed Apr 27 09:20:53 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 13:20:53 GMT
Subject: [Twisted-Python] blocking and threads
In-Reply-To: <20050427124901.9885.qmail@web53110.mail.yahoo.com>
Message-ID: <20050427132053.15422.1888991954.divmod.quotient.3485@ohm>

On Wed, 27 Apr 2005 05:49:01 -0700 (PDT), Joachim Boomberschloss <boomberschloss at yahoo.com> wrote:
>Hi all,
>
>I am just wondering: from the Twisted how-tos, it
>appears that doing anything that could possibly take
>arbitrarily long to execute should not be done in the
>reactor's main thread; i.e. it should be done using an
>asynchronous library (such as Twisted's network
>communication facilities), or in a different thread,
>using the reactor's thread pool.
>
>So it would seem that many things that may be
>considered "primitive" in Python, such as file IO,
>require some kind of patching if they are to be
>immediately usable by a Twisted application. I came up
>with the following solution, which enables calling any
>function in a different thread with a deferred
>interface; I just wanted to make sure that I'm not
>completely missing some point:
>
>def deferToThread(func, *args, **kargs):
>	"""executes the given function in a thread, and
>passes the return value to the deferred we return"""
>	d = defer.Deferred()
>	reactor.callInThread(_calledInThread, d, func, *args,
>**kargs)
>	return d
>
>def _calledInThread(d, func, *args, **kargs):
>	try:
>		retval = func(*args, **kargs)
>	except Exception, x:
>		reactor.callFromThread(d.errback, x)
>	else:
>		reactor.callFromThread(d.callback, retval)
>

  Looks like you've got a pretty firm understanding.  The one thing you did miss is the twisted.internet.threads module, which provides the deferToThread function.

  Jp



From roland.hedberg at adm.umu.se  Wed Apr 27 09:23:00 2005
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Wed, 27 Apr 2005 15:23:00 +0200
Subject: [Twisted-Python] XMLRPC server help neede
Message-ID: <8a18b942611d65e9b75baec6e7e6f3ae@adm.umu.se>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !

I have a application, a sort of routing system, where nodes communicate 
using XML-RPC.

It works but to my mind it's too slow. Now, changing to some other 
protocol then XML-RPC is not an option presently, so I don't want to 
know what other protocol that would do it much better.
I might eventually get there but not at this point in time.

One reason for the slowness is that I'm not able to get the server to 
reply to the client when I would like it to. This is how it should 
work:

1) server gets a message from the client, checks that it is well formed
2) server determins if it knows what to do with the message
3) server  performs the appropriate action on the message

Now, if the the message is not well formed or if the server does not 
know what to do with the
packet it should reject it. So far everything works as planned.

If the packet is well formed and the server knows what to do with it, 
it should reply to the client and then perform the action.

My problem is how I would go about doing this. Conceptually I could 
imaging having a workqueue where I would place the message and then 
from the point of view of the client-sever communication just forget 
about it.

Anyone who has done anything similar or has an idea on how to do this ?

- -- Roland
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFCb5I6Vxk7TEwZBFwRAmPLAJ0YcIRPRsqSbb7f5cxNBp4y+aXdwQCgmad7
ZFagUsqKhSRgrWr2LDt+iw4=
=/uhT
-----END PGP SIGNATURE-----




From boomberschloss at yahoo.com  Wed Apr 27 10:07:15 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Wed, 27 Apr 2005 07:07:15 -0700 (PDT)
Subject: [Twisted-Python] blocking and threads
In-Reply-To: 6667
Message-ID: <20050427140715.15292.qmail@web53101.mail.yahoo.com>

Thanks, how embarassing... I suggest adding it to the
"using threads" howto (I'd do it myself if I knew
how). Another idea: make an asynchronous file-handling
module that wraps Python's file IO with something that
has a deferred-oriented interface. Is there already
something like that too?

Joe

--- Jp Calderone <exarkun at divmod.com> wrote:
> On Wed, 27 Apr 2005 05:49:01 -0700 (PDT), Joachim
> Boomberschloss <boomberschloss at yahoo.com> wrote:
> >Hi all,
> >
> >I am just wondering: from the Twisted how-tos, it
> >appears that doing anything that could possibly
> take
> >arbitrarily long to execute should not be done in
> the
> >reactor's main thread; i.e. it should be done using
> an
> >asynchronous library (such as Twisted's network
> >communication facilities), or in a different
> thread,
> >using the reactor's thread pool.
> >
> >So it would seem that many things that may be
> >considered "primitive" in Python, such as file IO,
> >require some kind of patching if they are to be
> >immediately usable by a Twisted application. I came
> up
> >with the following solution, which enables calling
> any
> >function in a different thread with a deferred
> >interface; I just wanted to make sure that I'm not
> >completely missing some point:
> >
> >def deferToThread(func, *args, **kargs):
> >	"""executes the given function in a thread, and
> >passes the return value to the deferred we
> return"""
> >	d = defer.Deferred()
> >	reactor.callInThread(_calledInThread, d, func,
> *args,
> >**kargs)
> >	return d
> >
> >def _calledInThread(d, func, *args, **kargs):
> >	try:
> >		retval = func(*args, **kargs)
> >	except Exception, x:
> >		reactor.callFromThread(d.errback, x)
> >	else:
> >		reactor.callFromThread(d.callback, retval)
> >
> 
>   Looks like you've got a pretty firm understanding.
>  The one thing you did miss is the
> twisted.internet.threads module, which provides the
> deferToThread function.
> 
>   Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From exarkun at divmod.com  Wed Apr 27 10:24:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 14:24:47 GMT
Subject: [Twisted-Python] blocking and threads
In-Reply-To: <20050427140715.15292.qmail@web53101.mail.yahoo.com>
Message-ID: <20050427142447.15422.447243835.divmod.quotient.3579@ohm>

On Wed, 27 Apr 2005 07:07:15 -0700 (PDT), Joachim Boomberschloss <boomberschloss at yahoo.com> wrote:
>Thanks, how embarassing... I suggest adding it to the
>"using threads" howto (I'd do it myself if I knew
>how). Another idea: make an asynchronous file-handling
>module that wraps Python's file IO with something that
>has a deferred-oriented interface. Is there already
>something like that too?
>

  There's not, yet (although likely the VFS project Chris Armstrong, Andy Gayton, Tim Stebbing, and Andrew Bennetts recently started on will probably encompass this at some point).

  For many projects, asynchronous disk file i/o isn't actually that important.  They either only do a little bit of it, or they can fragment it over multiple reactor iterations manually without too much effort.  This is probably the main reason there isn't something like adbapi for files in Twisted already.

  For projects that do a lot of disk IO (like an ftp server, say :), or have latency requirements more stringent than average, an asynchronous file API would definitely be useful.

  Jp



From dgray at omniti.com  Wed Apr 27 10:30:44 2005
From: dgray at omniti.com (Dave Gray)
Date: Wed, 27 Apr 2005 10:30:44 -0400
Subject: [Twisted-Python] Non-blocking webserver - what am I doing	wrong?
In-Reply-To: <20050426153612.3940f9f0@dunce>
References: <426D5F72.3000203@omniti.com> <20050426153612.3940f9f0@dunce>
Message-ID: <426FA214.1080802@omniti.com>

> >         d = defer.Deferred()
> >         d.addCallback(requestDebug)
> >         d.callback(request)
> 
> Note that this code is more or less equivalent to
>            requestDebug(request)

Except that my version returns before the requestDebug call is done. 
Even though I'm a Deferred n00b, I don't think I misunderstood _that_. 
By all means, correct me if I'm wrong...



From bv at bnl.gov  Wed Apr 27 10:34:48 2005
From: bv at bnl.gov (Brett Viren)
Date: Wed, 27 Apr 2005 10:34:48 -0400
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <426F2C55.9040703@smartology.nl> (Remy C. Cool's message of
	"Wed, 27 Apr 2005 08:08:21 +0200")
References: <426F2C55.9040703@smartology.nl>
Message-ID: <ir4oec0b853.fsf@minos.phy.bnl.gov>

Remy C Cool <remy.cool at smartology.nl> writes:

> Hello,
>
> I've searched on the (Twisted) website and mailinglists, but failed to
> find the answer to my question.
>
> Is is possible to pass the original exception code/message to the
> XMLRPC client? When an exception occurs, the client get's a general
> 'error occured' message and I would like to be able to let the client
> know what went wrong. How can I accomplish this with Twisted?

It isn't really an exception but I use the idiom of returning an
(int,string) tuple:

  (err,error_message)

If err != 0, it's interpreted as an error code.  A successful return
is (0,"").

I don't happen to do it, but I suppose you could then raise an
exception on the client size by hand when non-zero is returned.

-Brett.



From exarkun at divmod.com  Wed Apr 27 10:54:16 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 14:54:16 GMT
Subject: [Twisted-Python] Non-blocking webserver - what am I doing	wrong?
In-Reply-To: <426FA214.1080802@omniti.com>
Message-ID: <20050427145416.15422.1836199685.divmod.quotient.3641@ohm>

On Wed, 27 Apr 2005 10:30:44 -0400, Dave Gray <dgray at omniti.com> wrote:
>> >         d = defer.Deferred()
>> >         d.addCallback(requestDebug)
>> >         d.callback(request)
>>
>>Note that this code is more or less equivalent to
>>            requestDebug(request)
>
>Except that my version returns before the requestDebug call is done. Even 
>though I'm a Deferred n00b, I don't think I misunderstood _that_. By all 
>means, correct me if I'm wrong...
>

  Indeed, you have misunderstood:

    exarkun at boson:~$ python
    Python 2.4.1 (#2, Mar 30 2005, 21:51:10) 
    [GCC 3.3.5 (Debian 1:3.3.5-8ubuntu2)] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> from twisted.internet import defer
    >>> def requestDebug(request):
    ...     print 'Request debug called with', repr(request)
    ...     print 'Request debug returning'
    ... 
    >>> requestDebug('foo')
    Request debug called with 'foo'
    Request debug returning
    >>> d = defer.Deferred()
    >>> d.addCallback(requestDebug)
    <Deferred at -0x481fef74>
    >>> d.callback('foo')
    Request debug called with 'foo'
    Request debug returning
    >>> 

  Deferreds don't re-arrange processing, or make functions asynchronous, or anything like that.  They only hook a result up with one or more functions for handling the result.  The result is often only available after the callback functions have been defined and added to the Deferred, but if it is available beforehand, nothing significant really changes.

  Put another way: if a Deferred has a callback, when it is given a result, the callback is invoked immediately; if a Deferred has a result, when it is given a callback, the callback is invoked immediately.

  Jp



From bv at bnl.gov  Wed Apr 27 11:19:58 2005
From: bv at bnl.gov (Brett Viren)
Date: Wed, 27 Apr 2005 11:19:58 -0400
Subject: [Twisted-Python] XMLRPC server help neede
In-Reply-To: <8a18b942611d65e9b75baec6e7e6f3ae@adm.umu.se> (Roland Hedberg's
	message of "Wed, 27 Apr 2005 15:23:00 +0200")
References: <8a18b942611d65e9b75baec6e7e6f3ae@adm.umu.se>
Message-ID: <ir4is28b61t.fsf@minos.phy.bnl.gov>

Roland Hedberg <roland.hedberg at adm.umu.se> writes:
> If the packet is well formed and the server knows what to do with it,
> it should reply to the client and then perform the action.
>
> My problem is how I would go about doing this. Conceptually I could
> imaging having a workqueue where I would place the message and then
> from the point of view of the client-sever communication just forget
> about it.
>
> Anyone who has done anything similar or has an idea on how to do this ?

I do this by subclassing twisted.web.xmlrpc.XMLRPC and handling the
query in a work queue (appended below) that runs in its own thread.
In my case the client doesn't care if it sent me well formed data or
not, so immediately after putting the query in the work queue I return
from the xmlrpc method and the client is free.  In my case, I do some
sanity checking of the query inside the queue.  In your case you'd do
the checking before stuffing the queue so you could inform the client.

Here is a sketch of the server chopped out from my code:

from twisted.web import xmlrpc
class DataSource(xmlrpc.XMLRPC):
    "The XML-RPC listener"

    def __init__(self,services,sem):
        xmlrpc.XMLRPC.__init__(self)
        xmlrpc.addIntrospection(self)
        self.data_cq = CommandQueue()
        self.sem = sem
        self.services = services

    def _handle_sem_release(self,x):
        #print "DataSource._handle_sem_release(%s)"%str(x)
        self.sem.release()
        from twisted.python.failure import Failure
        if x.__class__ == Failure:
            if x.value[0] == "DEBUG": return x
            log.error(x)
        return x

    def xmlrpc_method(self,idstr,values):
        "Accept callbacks from Export API"
        d = self.sem.acquire()
        d.addCallback(lambda x: self.data_cq(self.services.method,idstr,values))
        d.AddBoth(self._handle_sem_release)
        return 0

All the real work is done in the "services.method" method.  You'll
note that I use a Semaphore class (appended below).  This is keep
other operations not shown here from being executed in the middle of
handling the query.

BTW, the Semaphore and CommandQueue classes were developed with much
help from this list.  Thanks again!

-Brett.

# ------------------------------------------------

from twisted.internet import defer
from Queue import Queue, Empty
from twisted.python import failure

class Semaphore(object):
    """Asynchronous semaphore stolen from:
    http://twistedmatrix.com/pipermail/twisted-python/2003-August/005323.html
    """
    def __init__(self, value=1, verbose=None):
        self.queue = []
        self.value = value

    def acquire(self):
        d = defer.Deferred()
        if self.value:
            self.value -= 1
            d.callback(False)
        else:
            self.queue.append(d)
        return d

    def release(self):
        if self.queue:
            self.queue.pop(0).callback(True)
        else:
            self.value += 1


class CommandQueue:

    '''Queue up commands for serial calling.  One must call the
    drain() method to start reading the internal queue.  Most likely
    one wants to call this in a thread.'''

    all_queues = []

    def __init__(self):
        "Create a CommandQueue"
        self.queue = Queue()
        self.stop = False
        CommandQueue.all_queues.append(self)
        from twisted.internet import reactor
        reactor.callInThread(self.drain)
        return

    def __call__(self,meth,*a,**k):

        '''Call meth(*a,**k) when it reaches end of queue.  Returns a
        Deferred that will pass the return of meth.'''

        deferred = defer.Deferred()
        deferred.addErrback(self._error)
        self.queue.put((deferred,meth,a,k))
        return deferred

    def _error(self,a):
        try:
            a.printTraceback(sys.stderr)
        except:
            print str(a)
        return a

    def drain(self):
        'Drain the command queue until CommandQueue.stop is True'
        while not self.stop:
            try:
                d,meth,a,k = self.queue.get(True,1)
            except Empty:
                continue
            #print "calling %s(%s,%s)"%(meth.__name__,str(a),str(k))
            try:
                res = meth(*a,**k)
            except Exception,err:
                res = failure.Failure(sys.exc_value)
            reactor.callFromThread(d.callback,res)
            #d.callback(meth(*a,**k))
            #print "callback done"
        #print "drain closing"
        return 0







From dgray at omniti.com  Wed Apr 27 11:31:29 2005
From: dgray at omniti.com (Dave Gray)
Date: Wed, 27 Apr 2005 11:31:29 -0400
Subject: [Twisted-Python] Non-blocking webserver - what am I doing	wrong?
In-Reply-To: <20050427145416.15422.1836199685.divmod.quotient.3641@ohm>
References: <20050427145416.15422.1836199685.divmod.quotient.3641@ohm>
Message-ID: <426FB051.6000400@omniti.com>

>  Deferreds don't re-arrange processing, or make functions asynchronous, 
> or anything like that.  They only hook a result up with one or more 
> functions for handling the result.  The result is often only available 
> after the callback functions have been defined and added to the 
> Deferred, but if it is available beforehand, nothing significant really 
> changes.
> 
>  Put another way: if a Deferred has a callback, when it is given a 
> result, the callback is invoked immediately; if a Deferred has a result, 
> when it is given a callback, the callback is invoked immediately.

Gotcha, thanks.



From general at eepatents.com  Wed Apr 27 11:46:24 2005
From: general at eepatents.com (Ed Suominen)
Date: Wed, 27 Apr 2005 08:46:24 -0700
Subject: [Twisted-Python] blocking and threads
In-Reply-To: <E1DQoVp-0004n4-02@pyramid.twistedmatrix.com>
References: <E1DQoVp-0004n4-02@pyramid.twistedmatrix.com>
Message-ID: <200504270846.25040.general@eepatents.com>

On Wednesday 27 April 2005 08:31 am, Jp Calderone <exarkun at divmod.com> 
wrote:
> On Wed, 27 Apr 2005 07:07:15 -0700 (PDT), Joachim Boomberschloss 
<boomberschloss at yahoo.com> wrote:
> >Thanks, how embarassing... I suggest adding it to the
> >"using threads" howto (I'd do it myself if I knew
> >how). Another idea: make an asynchronous file-handling
> >module that wraps Python's file IO with something that
> >has a deferred-oriented interface. Is there already
> >something like that too?
>
> ? There's not, yet (although likely the VFS project Chris Armstrong,
> Andy Gayton, Tim Stebbing, and Andrew Bennetts recently started on
> will probably encompass this at some point).
>
> ? For many projects, asynchronous disk file i/o isn't actually that
> important. ?They either only do a little bit of it, or they can
> fragment it over multiple reactor iterations manually without too
> much effort. ?This is probably the main reason there isn't something
> like adbapi for files in Twisted already.
>
> ? For projects that do a lot of disk IO (like an ftp server, say :),
> or have latency requirements more stringent than average, an
> asynchronous file API would definitely be useful.

Also if files are being accessed via NFS or SSH.



From carolinaardohain at gmail.com  Wed Apr 27 19:10:29 2005
From: carolinaardohain at gmail.com (Carolina Ardohain)
Date: Wed, 27 Apr 2005 20:10:29 -0300
Subject: [Twisted-Python] Clossing one TCP connection
Message-ID: <8ecf09605042716107df86390@mail.gmail.com>

I launch several connections using an object like this

class MyConnection()
  def __init__(host, port, factory):
    self.factory = factory
    self.connector = reactor.connectTCP(host, port, factory)

I create several connections

m1 = MyConnection('host1', 8000, MyFactory())
m2 = MyConnection('host2', 8000, MyFactory())

reactor.run()

Now I want to create a method onClose that close the connection,
something like reactor.stop() but that dont close the whole
application.



From exarkun at divmod.com  Wed Apr 27 19:57:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 23:57:09 GMT
Subject: [Twisted-Python] Clossing one TCP connection
In-Reply-To: <8ecf09605042716107df86390@mail.gmail.com>
Message-ID: <20050427235709.15422.625673190.divmod.quotient.4418@ohm>

On Wed, 27 Apr 2005 20:10:29 -0300, Carolina Ardohain <carolinaardohain at gmail.com> wrote:
>I launch several connections using an object like this
>
>class MyConnection()
>  def __init__(host, port, factory):
>    self.factory = factory
>    self.connector = reactor.connectTCP(host, port, factory)
>
>I create several connections
>
>m1 = MyConnection('host1', 8000, MyFactory())
>m2 = MyConnection('host2', 8000, MyFactory())
>
>reactor.run()
>
>Now I want to create a method onClose that close the connection,
>something like reactor.stop() but that dont close the whole
>application.
>

  self.connector has a method, disconnect, that you can call to sever the connection associated with just that connector.  The object reactor.connecTCP() returns conforms to the IConnector interface, which is documented further here:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IConnector.html

  Jp



From sir.shz at gmail.com  Wed Apr 27 19:59:56 2005
From: sir.shz at gmail.com (Sir.shz)
Date: Wed, 27 Apr 2005 16:59:56 -0700
Subject: [Twisted-Python] nonblocking stdio
References: <8ecf09605042716107df86390@mail.gmail.com>
Message-ID: <001101c54b85$372125e0$800101df@sv.us.sonicwall.com>

Hi, I'm trying to write a test tcp client which sends some commands to the
server, I'd like the
client to take the commands from stdin, and sends it to the server. The
following code segment
doesn't seem to send anything, is it because the while loop is actually
blocking? what's the right way to
accomplish this? Thanks.

Z.

class MyClientProtocol(basic.LineReceiver):
     def lineReceived(self,data):
          stdout.write("From Server:" + data+"\n"),

     def connectionMade(self):
           while True:
                cmd = raw_input("Enter command:")
                self.transport.write(cmd+"\r\n")






From exarkun at divmod.com  Wed Apr 27 20:33:29 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 00:33:29 GMT
Subject: [Twisted-Python] nonblocking stdio
In-Reply-To: <001101c54b85$372125e0$800101df@sv.us.sonicwall.com>
Message-ID: <20050428003329.15422.215602842.divmod.quotient.4470@ohm>

On Wed, 27 Apr 2005 16:59:56 -0700, "Sir.shz" <sir.shz at gmail.com> wrote:
>Hi, I'm trying to write a test tcp client which sends some commands to the
>server, I'd like the
>client to take the commands from stdin, and sends it to the server. The
>following code segment
>doesn't seem to send anything, is it because the while loop is actually
>blocking? what's the right way to
>accomplish this? Thanks.

  There are a few things that you may want to do differently in your MyClientProtocol class.

>
>Z.
>
>class MyClientProtocol(basic.LineReceiver):
>     def lineReceived(self,data):
>          stdout.write("From Server:" + data+"\n"),
>

  stdout.write (assuming that's sys.stdout) can block.  This doesn't happen too frequently, except under certain conditions: for example, if you have piped the output of the program to less and have been less than diligent than paging to the end of output (less will read so much beyond what it can display and then stop reading, which means your process will no longer be able to write, and so will block); another similar scenario occurs with screen(1) when switched into copy mode.

  If this is something you want to worry about, twisted.internet.stdio may be of use.  It provides a simple way to get stdout into non-blocking mode, and then does buffering for you in cases where it is required.

>     def connectionMade(self):
>           while True:
>                cmd = raw_input("Enter command:")
>                self.transport.write(cmd+"\r\n")

  There are a couple problems with this definition of connectionMade().  

  First, a "while True:" loop like this is pretty much off-limits in a Twisted application.  You're right about why - it blocks the entire reactor, preventing any work from being accomplished.  Even the calls to transport.write() inside this loop will probably result in nothing, since the reactor can't get to the socket associated with that transport and perform actual writes.  I'll come back to how you can achieve this behavior without blocking the reactor in a moment.

  The other problem is the use of raw_input().  Like the while loop that contains it, raw_input() will also block the reactor.  You need another way to get input from the user, a way which doesn't block.  There are a couple alternatives in the most recent Twisted release.  The first I mentioned above, twisted.internet.stdio.  In addition to giving you non-blocking output, it gives you a callback-oriented way to deal with input.  It won't give you readline-like line-editing abilities, though.  It just deals with straight-up byte streams.  The other possible solution is new in Twisted 2.0 and part of Conch, twisted.conch.insults.  This also provides a callback-oriented way of getting input, but also allows you to define behavior for various function keys.  It comes with a very rudimentary line editor that supports the arrow keys, typeover and insert mode, as well as input history (while this is less featureful than readline, it has the advantage of being much more easily extensible, and in Python ;).

  You can find examples of twisted.internet.stdio in the Twisted core examples directory, or online at:

    http://twistedmatrix.com/documents/current/examples/stdin.py

  For more advanced examples of Insults, check out:

    http://twistedmatrix.com/users/warner/doc-latest/conch/examples/demo_recvline.tac

  as well as twisted/conch/stdio.py in Twisted 2.0 (also viewable online at 

    http://svn.twistedmatrix.com/cvs/*checkout*/trunk/twisted/conch/stdio.py?rev=12763&content-type=text%2Fplain )

  Note that twisted/conch/stdio.py does not present a stable interface (it is likely to change incompatibly in the future), so you should consider it an example of how to use insults, rather than a library to use from your application.

  Also note that these solutions are POSIX-only.  They will not work on Windows.

  HTH,

  Jp



From mailinglists at smartology.nl  Thu Apr 28 04:59:57 2005
From: mailinglists at smartology.nl (Remy Cool)
Date: Thu, 28 Apr 2005 10:59:57 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <ir4oec0b853.fsf@minos.phy.bnl.gov>
References: <426F2C55.9040703@smartology.nl>
	<ir4oec0b853.fsf@minos.phy.bnl.gov>
Message-ID: <4270A60D.5040902@smartology.nl>

Brett Viren wrote:
> Remy C Cool <remy.cool at smartology.nl> writes:
> 
> 
>>Hello,
>>
>>I've searched on the (Twisted) website and mailinglists, but failed to
>>find the answer to my question.
>>
>>Is is possible to pass the original exception code/message to the
>>XMLRPC client? When an exception occurs, the client get's a general
>>'error occured' message and I would like to be able to let the client
>>know what went wrong. How can I accomplish this with Twisted?
> 
> 
> It isn't really an exception but I use the idiom of returning an
> (int,string) tuple:
> 
>   (err,error_message)
> 
> If err != 0, it's interpreted as an error code.  A successful return
> is (0,"").
> 
> I don't happen to do it, but I suppose you could then raise an
> exception on the client size by hand when non-zero is returned.

That's one way to process exceptions, but that's not what I want. You
will need to catch all exceptions yourself and send back a tupple as you
described above. XMLRPC support exception handling, and I would like to
  use that mechanism rather then coding my own solution.

If an exception occurs in the backend (XMLRPC server) the client
receives an XMLRPC error (created by Twisted?). My question was and is,
if it is possible to send the 'real' exception message to the client in
place of the general message it now receives.

-- Remy --





From mvanaswegen at deloitte.co.za  Thu Apr 28 06:27:59 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Thu, 28 Apr 2005 12:27:59 +0200
Subject: [Twisted-Python] P2P Discovery
Message-ID: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>

Hi Guys
 
I've got a basic UDP broadcaster working now to inform other P2P
clients. This obviously only works on the local
segment. Any suggestions how I could broadcast outside the segment.
Multicast in python seems quite clunky and unreliable ?
 
Regs
 
/marinus
 

Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050428/4af2cc14/attachment.htm 

From exarkun at divmod.com  Thu Apr 28 10:15:29 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 14:15:29 GMT
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <4270A60D.5040902@smartology.nl>
Message-ID: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>

On Thu, 28 Apr 2005 10:59:57 +0200, Remy Cool <mailinglists at smartology.nl> wrote:
>Brett Viren wrote:
>>Remy C Cool <remy.cool at smartology.nl> writes:
>>>Hello,
>>>
>>>I've searched on the (Twisted) website and mailinglists, but failed to
>>>find the answer to my question.
>>>
>>>Is is possible to pass the original exception code/message to the
>>>XMLRPC client? When an exception occurs, the client get's a general
>>>'error occured' message and I would like to be able to let the client
>>>know what went wrong. How can I accomplish this with Twisted?
>>
>>
>>It isn't really an exception but I use the idiom of returning an
>>(int,string) tuple:
>>
>>   (err,error_message)
>>
>>If err != 0, it's interpreted as an error code.  A successful return
>>is (0,"").
>>
>>I don't happen to do it, but I suppose you could then raise an
>>exception on the client size by hand when non-zero is returned.
>
>That's one way to process exceptions, but that's not what I want. You
>will need to catch all exceptions yourself and send back a tupple as you
>described above. XMLRPC support exception handling, and I would like to
>  use that mechanism rather then coding my own solution.
>
>If an exception occurs in the backend (XMLRPC server) the client
>receives an XMLRPC error (created by Twisted?). My question was and is,
>if it is possible to send the 'real' exception message to the client in
>place of the general message it now receives.
>

  The behavior of that Fault is defined the _ebRender method of  twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:

    def _ebRender(self, failure):
        if isinstance(failure.value, Fault):
            return failure.value
        log.err(failure)
        return Fault(self.FAILURE, "error")

  Which logs complete error information on the server and sends minimal information to the client.  If you override this method, you can cause more information to be sent to the client.  It probably avoids doing this currently in case the string version of the failure contains sensitive information.

  Note that _ebRender is private and so may change at any time.  You should be prepared to deal with this, or override the render() method itself and set up your own errback, or contribute a patch that adds a public API for handling all unexpected errors in code invoked from an XMLRPC resource.

  Jp



From exarkun at divmod.com  Thu Apr 28 10:20:13 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 14:20:13 GMT
Subject: [Twisted-Python] P2P Discovery
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>
Message-ID: <20050428142013.15422.1143655014.divmod.quotient.5701@ohm>

On Thu, 28 Apr 2005 12:27:59 +0200, "van Aswegen, Marinus \(ZA - Johannesburg\)" <mvanaswegen at deloitte.co.za> wrote:
>Hi Guys
>
>I've got a basic UDP broadcaster working now to inform other P2P
>clients. This obviously only works on the local
>segment. Any suggestions how I could broadcast outside the segment.
>Multicast in python seems quite clunky and unreliable ?

  If by "segment" you mean "local area network", I don't think you're going to have much luck.  Most routers do not pass broadcast traffic (and for good reason - think about what would happen any time anyone pinged the broadcast address!).  Multicast is unreliable and clunky in Python because it is unreliable and clunky period.  Network support for it is sketchy at best, so you cannot generally use it except under very special conditions.

  In short, you cannot use UDP or multicast for service discovery over the internet at large.

  Jp



From mailinglists at smartology.nl  Thu Apr 28 10:34:26 2005
From: mailinglists at smartology.nl (Remy Cool)
Date: Thu, 28 Apr 2005 16:34:26 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
References: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
Message-ID: <4270F472.2070509@smartology.nl>

Jp Calderone wrote:
> On Thu, 28 Apr 2005 10:59:57 +0200, Remy Cool 
> <mailinglists at smartology.nl> wrote:
> 
>> Brett Viren wrote:
>>
>>> Remy C Cool <remy.cool at smartology.nl> writes:
>>>
>>>> Hello,
>>>>
>>>> I've searched on the (Twisted) website and mailinglists, but failed to
>>>> find the answer to my question.
>>>>
>>>> Is is possible to pass the original exception code/message to the
>>>> XMLRPC client? When an exception occurs, the client get's a general
>>>> 'error occured' message and I would like to be able to let the client
>>>> know what went wrong. How can I accomplish this with Twisted?
>>>
>>>
>>>
>>> It isn't really an exception but I use the idiom of returning an
>>> (int,string) tuple:
>>>
>>>   (err,error_message)
>>>
>>> If err != 0, it's interpreted as an error code.  A successful return
>>> is (0,"").
>>>
>>> I don't happen to do it, but I suppose you could then raise an
>>> exception on the client size by hand when non-zero is returned.
>>
>>
>> That's one way to process exceptions, but that's not what I want. You
>> will need to catch all exceptions yourself and send back a tupple as you
>> described above. XMLRPC support exception handling, and I would like to
>>  use that mechanism rather then coding my own solution.
>>
>> If an exception occurs in the backend (XMLRPC server) the client
>> receives an XMLRPC error (created by Twisted?). My question was and is,
>> if it is possible to send the 'real' exception message to the client in
>> place of the general message it now receives.
>>
> 
>  The behavior of that Fault is defined the _ebRender method of  
> twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:
> 
>    def _ebRender(self, failure):
>        if isinstance(failure.value, Fault):
>            return failure.value
>        log.err(failure)
>        return Fault(self.FAILURE, "error")
> 
>  Which logs complete error information on the server and sends minimal 
> information to the client.  If you override this method, you can cause 
> more information to be sent to the client.  It probably avoids doing 
> this currently in case the string version of the failure contains 
> sensitive information.
> 
>  Note that _ebRender is private and so may change at any time.  You 
> should be prepared to deal with this, or override the render() method 
> itself and set up your own errback, or contribute a patch that adds a 
> public API for handling all unexpected errors in code invoked from an 
> XMLRPC resource.

Thanks for your reply, I'll look into it.

-- Remy --



From itamar at itamarst.org  Thu Apr 28 11:27:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Apr 2005 11:27:19 -0400
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <4270A60D.5040902@smartology.nl>
References: <426F2C55.9040703@smartology.nl>
	<ir4oec0b853.fsf@minos.phy.bnl.gov>  <4270A60D.5040902@smartology.nl>
Message-ID: <1114702040.8704.28.camel@localhost.localdomain>

On Thu, 2005-04-28 at 10:59 +0200, Remy Cool wrote:

> described above. XMLRPC support exception handling, and I would like to
>   use that mechanism rather then coding my own solution.

XMLRPC's definition of an exception is basically a tuple of an int and
string. You'll have to do conversion from xmlrpclib's Fault object to
Python exceptions yourself.

"The <methodResponse> could also contain a <fault> which contains a
<value> which is a <struct> containing two elements, one named
<faultCode>, an <int> and one named <faultString>, a <string>."

http://www.xmlrpc.com/spec




From itamar at itamarst.org  Thu Apr 28 11:29:14 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Apr 2005 11:29:14 -0400
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
References: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
Message-ID: <1114702154.8704.30.camel@localhost.localdomain>

On Thu, 2005-04-28 at 14:15 +0000, Jp Calderone wrote:

>   The behavior of that Fault is defined the _ebRender method of
> twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:
> 
>     def _ebRender(self, failure):
>         if isinstance(failure.value, Fault):
>             return failure.value
>         log.err(failure)
>         return Fault(self.FAILURE, "error")

Notice that this means that if you raise a xmlrpclib.Fault instance as
the exception that will be used, so you can do that instead of Python
exceptions.




From exarkun at divmod.com  Thu Apr 28 11:52:20 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 15:52:20 GMT
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <1114702154.8704.30.camel@localhost.localdomain>
Message-ID: <20050428155220.15422.443049684.divmod.quotient.5849@ohm>

On Thu, 28 Apr 2005 11:29:14 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2005-04-28 at 14:15 +0000, Jp Calderone wrote:
>
>>   The behavior of that Fault is defined the _ebRender method of
>> twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:
>>
>>     def _ebRender(self, failure):
>>         if isinstance(failure.value, Fault):
>>             return failure.value
>>         log.err(failure)
>>         return Fault(self.FAILURE, "error")
>
>Notice that this means that if you raise a xmlrpclib.Fault instance as
>the exception that will be used, so you can do that instead of Python
>exceptions.
>

  Re-reading the above, I wonder if there is a reason it doesn't use Failure.check() or Failure.trap()?

>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ken at kenkinder.com  Fri Apr 29 14:40:15 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Fri, 29 Apr 2005 13:40:15 -0500
Subject: [Twisted-Python] P2P Discovery
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>
Message-ID: <42727F8F.7040204@kenkinder.com>

van Aswegen, Marinus (ZA - Johannesburg) wrote:

> I've got a basic UDP broadcaster working now to inform other P2P 
> clients. This obviously only works on the local
> segment. Any suggestions how I could broadcast outside the segment. 
> Multicast in python seems quite clunky and unreliable ?

If you look at the P2P systems out there, none of them discover each 
other. You have to give them a starting node, which knows about other 
nodes, etc.




From mailinglists at smartology.nl  Sat Apr 30 04:41:37 2005
From: mailinglists at smartology.nl (Remy Cool)
Date: Sat, 30 Apr 2005 10:41:37 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <1114702040.8704.28.camel@localhost.localdomain>
References: <426F2C55.9040703@smartology.nl>	<ir4oec0b853.fsf@minos.phy.bnl.gov>
	<4270A60D.5040902@smartology.nl>
	<1114702040.8704.28.camel@localhost.localdomain>
Message-ID: <427344C1.1070509@smartology.nl>

Itamar Shtull-Trauring wrote:
> On Thu, 2005-04-28 at 10:59 +0200, Remy Cool wrote:
> 
> 
>>described above. XMLRPC support exception handling, and I would like to
>>  use that mechanism rather then coding my own solution.
> 
> 
> XMLRPC's definition of an exception is basically a tuple of an int and
> string. You'll have to do conversion from xmlrpclib's Fault object to
> Python exceptions yourself.
> 
> "The <methodResponse> could also contain a <fault> which contains a
> <value> which is a <struct> containing two elements, one named
> <faultCode>, an <int> and one named <faultString>, a <string>."

My choice of words was maybe a little confusing. My intention is not to 
create python Exceptions from xmlrpc fault objects, but to pass the 
exception string from python to the fault object so the client does know 
what went wrong.

-- Remy --





From thomas_barket at yahoo.com  Sat Apr 30 11:16:19 2005
From: thomas_barket at yahoo.com (T Barket)
Date: Sat, 30 Apr 2005 11:16:19 -0400
Subject: [Twisted-Python] Newbie reactor.crash()/reactor.stop() question
Message-ID: <0IFR00CGXMDRV8@mta8.srv.hcvlny.cv.net>

Hello,

I have set up a server and client with perspective broker and can
successfully move data back and forth between them.  however, i want to use
the client interactively at the python prompt.  ie, i want to create a
client object, make a request of the server and get the data returned to me.
then i want to do some work with the data interactively at the python
command prompt, until i need new data.  then i want to use the client again
to make another request of the server, etc.

i have read i cannot stop and restart a reactor (which is what i would like
to do on the client side).  then i found out about reactor.crash().  that
seems to work fine, which i think allow me to put the reactor on hold so i
can get back to the command prompt and do some work until i need to make
another request to the server.  At least I can get it to work as expected.
however, i now dont know how to call "reactor.stop()" before I exit python.
once the client finishes, it sets a "reactor.crash()".  now when I try to
call reactor.stop(), i get the following error that the reactor isnt
running:

    raise RuntimeError, "can't stop reactor that isn't running"
RuntimeError: can't stop reactor that isn't running

so now i cant stop the reactor using reactor.stop().  and furthermore, when
i try to exit the python command prompt (having run reactor.crash() but not
reactor.stop()), the python command prompt hangs instead of exiting normally
and I have to kill its process.  is there any way to exit python normally
when the reactor has been put into a reactor.crash()?

im using twisted 2.0 and python 2.4.1 on windows xp sp2.

TIA,

Tom




From glyph at divmod.com  Sat Apr 30 12:01:22 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 30 Apr 2005 16:01:22 GMT
Subject: [Twisted-Python] Newbie reactor.crash()/reactor.stop() question
In-Reply-To: <0IFR00CGXMDRV8@mta8.srv.hcvlny.cv.net>
Message-ID: <20050430160122.15422.1513488416.divmod.quotient.10014@ohm>



On Sat, 30 Apr 2005 11:16:19 -0400, T Barket <thomas_barket at yahoo.com> wrote:
>Hello,

>i have read i cannot stop and restart a reactor (which is what i would like
>to do on the client side).

It sounds like you may have found a bug (I'll look into it) but...

If you want to use the reactor interactively, look into the various incarnations of Manhole.  Stopping the reactor and starting it again has lots of ugly side-effects which are hard to explain until you've had a lot of experience working with the reactor the "right" way.

(If you absolutely need it, of course, it should work, and we'll fix it - but it's extremely rare that people actually need it, and pretty common that people *think* they need it.)



From therve at free.fr  Fri Apr  1 02:35:10 2005
From: therve at free.fr (Thomas HERVE)
Date: Fri, 01 Apr 2005 11:35:10 +0200
Subject: [Twisted-Python] Docs for twisted
Message-ID: <20050401113510.rrol6q9pa5pwcos8@itchy.wasabout.net>

>> You mentioned you're teaching someone Twisted Web -- is that just the
>> twisted.web/old-woven stuff or are you taking on nevow?

> I am using Nevow and trying to build some projects under it. My goal is
> to create a complete webmail, based on Cyrus IMAP and its features
> (Sieve, Shared Folders, etc). The frontend must be easy to customize for
> each customer and I think nevow is the right templating system for
> that. I tried Quotient, it is excellent, but it is not the right system
> for my needs.

I've just started a project that share similar goals with yours. It's called
Ni!Mail (http://www.nimail.org), and it's based on Twisted/Nevow.

It's really at is early stage (I've just released a version 0.1 which is very
basic), and I didn't intend to advertize on it so soon, but I've got a strong
motivation to improve it.

If you want to see what it looks like for now, you can go here:
http://www.nimail.org/demo/ (login : demo at nimail.org, pass : demo).

I would enjoy to see what you think of it.

--
Thomas Herve

[sorry for my basic english]



From exarkun at divmod.com  Fri Apr  1 07:05:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 01 Apr 2005 14:05:47 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13382 - Add a new howto
	with deferred 'recipes': at the moment just timeouts (fixes #952)
In-Reply-To: <E1DHHxZ-0004Bv-00@wolfwood>
Message-ID: <20050401140547.13806.1334805458.divmod.quotient.37840@ohm>

On Fri, 01 Apr 2005 01:56:57 -0700, Mary Gardiner <mary at wolfwood.twistedmatrix.com> wrote:
>Author: mary
> Date: Fri Apr  1 01:56:57 2005
> New Revision: 13382
> 
> Added:
>    trunk/doc/core/howto/deferrecipes.xhtml
> Modified:
>    trunk/doc/core/howto/async.xhtml
>    trunk/doc/core/howto/defer.xhtml
>    trunk/doc/core/howto/gendefer.xhtml
> Log:
> Add a new howto with deferred 'recipes': at the moment just timeouts (fixes #952)
> 
> 

> def getTimeoutCancelFunction(delayedCall):
>     """
>     Return a function which will cancel the delayedCall
>     """
> [snip ...]
> 
> def timeoutSetter():
> [snip ...]
>     d.addBoth(getTimeoutCancelFunction)
> [snip ...]

  This usage doesn't seem to match up with the definition.  Maybe getTimeoutCancelFunction()?

  Jp



From mary-twisted at puzzling.org  Fri Apr  1 07:14:52 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 2 Apr 2005 00:14:52 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13382 - Add a new howto
	with deferred 'recipes': at the moment just timeouts (fixes #952)
In-Reply-To: <20050401140547.13806.1334805458.divmod.quotient.37840@ohm>
References: <E1DHHxZ-0004Bv-00@wolfwood>
	<20050401140547.13806.1334805458.divmod.quotient.37840@ohm>
Message-ID: <20050401141452.GC26563@sourdust.home.puzzling.org>

On Fri, Apr 01, 2005, Jp Calderone wrote:
>   This usage doesn't seem to match up with the definition.  Maybe getTimeoutCancelFunction()?

Yeah, thanks.

-Mary



From sergtrejo at gmail.com  Fri Apr  1 08:49:07 2005
From: sergtrejo at gmail.com (Sergio Trejo)
Date: Fri, 1 Apr 2005 05:49:07 -1000
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
	<27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
Message-ID: <7c3d693605040107495d4e0957@mail.gmail.com>

FWIW, IMHO the entire Twisted development team and community
contributors all rock!

Cheers,

Serg

On Mar 31, 2005 6:26 PM, Jonathan Simms <slyphon at twistedmatrix.com> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> 
> On Mar 31, 2005, at 11:09 PM, Christopher Armstrong wrote:
> 
> > Hi Twisted,
> >
> > One of the key problems that trial solves is the traversal of Python
> > modules and files,
> 
> wow...i did that? :-)
> 
> > Creating a unified resource hierarchy in Twisted has long been a goal
> > of the Twisted team, and every attempt has been mostly a failure. At
> > the Australian Twisted Sprint, we've recently come to the realization
> > that trial effectively already does this!
> 
> yay! i am genus!
> 
> >  So today we're starting to
> > implement a new VFS system that unifies all of these systems into a
> > single twisted.vfs module. This will enable things such as more secure
> > remote file system access, a better internal design of Trial, and
> > remote access to your unit tests.
> >
> 
> I have to say that when i first read the subject of this message i
> thought, "WTF? I just got done writing 2.0! They want to replace it
> *already*?!"
> 
> It's a nice feeling to know you did something right. :-)
> 
> If you guys need help, or need me to translate something fairly stinky
> in there, please CC me on any t-ml message, as I don't read the list as
> much as I used to.
> 
> Best of luck!
> - -Jonathan
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.4 (Darwin)
> 
> iD8DBQFCTM1uFARZQEMGIlgRAhaWAJ4lrZuLOeHJn0pyBGp1RtKEjSxvHgCfbpvH
> VISq4pbmbcl7ClCtqOAb90c=
> =y2Wp
> -----END PGP SIGNATURE-----
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Fri Apr  1 09:54:27 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Apr 2005 11:54:27 -0500
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <60ed19d405033120093e2f8a39@mail.gmail.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
Message-ID: <1112374467.8541.30.camel@localhost.localdomain>

On Fri, 2005-04-01 at 14:09 +1000, Christopher Armstrong wrote:


> Creating a unified resource hierarchy in Twisted has long been a goal
> of the Twisted team, and every attempt has been mostly a failure. At
> the Australian Twisted Sprint, we've recently come to the realization
> that trial effectively already does this! So today we're starting to
> implement a new VFS system that unifies all of these systems into a
> single twisted.vfs module.

I highly recommend using twisted.web2.stream as the way you get access
to the contents of a "file". It's a *very* nice abstraction, and we will
probably be moving it, or something pretty similar, into
twisted.internet at some point.




From jarrod.roberson at gmail.com  Fri Apr  1 11:28:44 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 1 Apr 2005 13:28:44 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
Message-ID: <2389d473050401102867475fa6@mail.gmail.com>

I am refactoring and repacking all the ZeroConf / MulticastDNS stuff I
have seen and been re-writing to be a "Service" I want to be able to
start it from a .tac file.

I can't find any documenation of explict example of how to start it
using internet.MulticastServer()

here is what I am trying

<snip imports and other housekeeping code>

zc = zeroconf.DebugZeroConfService()
serviceCollection = service.IServiceCollection(application)
internet.MulticastServer(5353,
zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)

when I do this I get the

2005/04/01 13:25 EST [-] twisted.internet.error.CannotListenError:
Couldn't listen on any:5353: (48, 'Address already in use').

I tried

internet.MulticastServer(5353, zeroconf.IZeroConfFactory(zc),
listenMultiple=True).setServiceParent(serviceCollection)

but that throws this error

2005/04/01 13:26 EST [-] AttributeError: ZeroConfFactoryFromService
instance has no attribute 'makeConnection'

I have 4 TCP services running this way and I copied the Echo stuff
pretty directly ( see the naming convention even )

can someone tell me what the correct syntax / idiom should be?

-- If you don't know what you want, you probably need a nap.



From itamar at itamarst.org  Fri Apr  1 11:41:56 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Apr 2005 13:41:56 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
In-Reply-To: <2389d473050401102867475fa6@mail.gmail.com>
References: <2389d473050401102867475fa6@mail.gmail.com>
Message-ID: <1112380916.8541.35.camel@localhost.localdomain>

On Fri, 2005-04-01 at 13:28 -0500, jarrod roberson wrote:

> zc = zeroconf.DebugZeroConfService()
> serviceCollection = service.IServiceCollection(application)
> internet.MulticastServer(5353,
> zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)

Why are you passing a factory in? UDP and Multicast don't use factories.




From jarrod.roberson at gmail.com  Fri Apr  1 11:58:08 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 1 Apr 2005 13:58:08 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
In-Reply-To: <1112380916.8541.35.camel@localhost.localdomain>
References: <2389d473050401102867475fa6@mail.gmail.com>
	<1112380916.8541.35.camel@localhost.localdomain>
Message-ID: <2389d473050401105838e97760@mail.gmail.com>

On Apr 1, 2005 1:41 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Fri, 2005-04-01 at 13:28 -0500, jarrod roberson wrote:
> 
> > zc = zeroconf.DebugZeroConfService()
> > serviceCollection = service.IServiceCollection(application)
> > internet.MulticastServer(5353,
> > zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)
> 
> Why are you passing a factory in? UDP and Multicast don't use factories.
> 

because I am a UDP, Multicast newbie :-)

What would be the correct way to set this up, I want this to be a
"twisted" as as possible


-- 
-- If you don't know what you want, you probably need a na



From jarrod.roberson at gmail.com  Fri Apr  1 12:05:53 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 1 Apr 2005 14:05:53 -0500
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
In-Reply-To: <1112380916.8541.35.camel@localhost.localdomain>
References: <2389d473050401102867475fa6@mail.gmail.com>
	<1112380916.8541.35.camel@localhost.localdomain>
Message-ID: <2389d47305040111052906a101@mail.gmail.com>

On Apr 1, 2005 1:41 PM, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Fri, 2005-04-01 at 13:28 -0500, jarrod roberson wrote:
> 
> > zc = zeroconf.DebugZeroConfService()
> > serviceCollection = service.IServiceCollection(application)
> > internet.MulticastServer(5353,
> > zeroconf.IZeroConfFactory(zc)).setServiceParent(serviceCollection)
> 
> Why are you passing a factory in? UDP and Multicast don't use factories.

Ok what I am trying to do is make a ZeroConfService

I took Tim Allens code and added the ability to Respond to queries and
changed the Observers to Subscribers and some other things to make it
more of a Service than a stand alone server.

I have a TCP service with a factory and I want to derive the SRV
record priority from stats about the TCP Service based on its load, so
I want to dynamically build the responses, that is what the Responder
interface I have created is for.

I guess I just need some guidance on the correct "twisted" way to do
this, I want the implementation of the ZeroConf service to be
pluggable, that is the part that responds to the udp messageReceived()
method and I figured making that a Service I could put in the .tac was
the right way to do it.

Where am I going wrong?



From andrea at cpushare.com  Sun Apr  3 07:38:54 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sun, 3 Apr 2005 15:38:54 +0200
Subject: [Twisted-Python] pending fixes
Message-ID: <20050403133854.GF18213@g5.random>

Just as reminder, this is my pending patch against SVN. .disconnecting
can be added to all protocols or it can be renamed... (or we could use
hasattr in the meantime)

Index: Twisted/twisted/protocols/basic.py
===================================================================
--- Twisted/twisted/protocols/basic.py	(revision 13459)
+++ Twisted/twisted/protocols/basic.py	(working copy)
@@ -166,9 +166,23 @@
         """
         return error.ConnectionLost('Line length exceeded')
     
+class PauseProducer(object):
+    paused = False
 
+    def pauseProducing(self):
+        self.paused = True
+        self.transport.pauseProducing()
 
-class LineReceiver(protocol.Protocol):
+    def resumeProducing(self):
+        self.paused = False
+        self.transport.resumeProducing()
+        self.dataReceived('')
+
+    def stopProducing(self):
+        self.paused = True
+        self.transport.stopProducing()
+
+class LineReceiver(protocol.Protocol, PauseProducer):
     """A protocol that receives lines and/or raw data, depending on mode.
     
     In line mode, each line that's received becomes a callback to
@@ -188,7 +202,6 @@
     __buffer = ''
     delimiter = '\r\n'
     MAX_LENGTH = 16384
-    paused = False
     
     def clearLineBuffer(self):
         """Clear buffered data."""
@@ -279,21 +292,8 @@
         """
         return self.transport.loseConnection()
 
-    def pauseProducing(self):
-        self.paused = True
-        self.transport.pauseProducing()
 
-    def resumeProducing(self):
-        self.paused = False
-        self.dataReceived('')
-        self.transport.resumeProducing()
-
-    def stopProducing(self):
-        self.paused = True
-        self.transport.stopProducing()
-
-
-class Int32StringReceiver(protocol.Protocol):
+class Int32StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int32-prefixed strings.
 
     An int32 string is a string prefixed by 4 bytes, the 32-bit length of
@@ -314,7 +314,7 @@
         """Convert int32 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 3:
+        while len(self.recvd) > 3 and not self.paused and not self.transport.disconnecting:
             length ,= struct.unpack("!i",self.recvd[:4])
             if length > self.MAX_LENGTH:
                 self.transport.loseConnection()
@@ -331,7 +331,7 @@
         self.transport.write(struct.pack("!i",len(data))+data)
 
 
-class Int16StringReceiver(protocol.Protocol):
+class Int16StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int16-prefixed strings.
 
     An int16 string is a string prefixed by 2 bytes, the 16-bit length of
@@ -351,7 +351,7 @@
         """Convert int16 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 1:
+        while len(self.recvd) > 1 and not self.paused and not self.transport.disconnecting:
             length = (ord(self.recvd[0]) * 256) + ord(self.recvd[1])
             if len(self.recvd) < length+2:
                 break
Index: Twisted/twisted/lore/latex.py
===================================================================
--- Twisted/twisted/lore/latex.py	(revision 13459)
+++ Twisted/twisted/lore/latex.py	(working copy)
@@ -104,7 +104,7 @@
 
     baseLevel = 0
     try:
-        diaHack = not not os.popen('which dia').read()
+        diaHack = not not os.popen('which dia 2>/dev/null').read()
     except:
         # That's a no, then.
         diaHack = 0



From itamar at itamarst.org  Sun Apr  3 11:23:40 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 03 Apr 2005 13:23:40 -0400
Subject: [Twisted-Python] pending fixes
In-Reply-To: <20050403133854.GF18213@g5.random>
References: <20050403133854.GF18213@g5.random>
Message-ID: <1112549020.7604.16.camel@localhost.localdomain>

On Sun, 2005-04-03 at 15:38 +0200, Andrea Arcangeli wrote:
> Just as reminder, this is my pending patch against SVN. .disconnecting
> can be added to all protocols or it can be renamed... (or we could use
> hasattr in the meantime)

Please add it to the issue tracker, that way you don't have to repost to
the list.




From foom at fuhm.net  Sun Apr  3 11:31:08 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 3 Apr 2005 13:31:08 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <E1DHz3j-0005im-00@wolfwood>
References: <E1DHz3j-0005im-00@wolfwood>
Message-ID: <66bc10801b1c0e7a006e41c53bf05376@fuhm.net>

On Apr 3, 2005, at 1:58 AM, Jp Calderone wrote:
> After a lengthy discussion, revert to previous threaded behavior wrt  
> registering as the IO thread

> Modified: trunk/twisted/internet/posixbase.py
> ======================================================================= 
> =======
> --- trunk/twisted/internet/posixbase.py	(original)
> +++ trunk/twisted/internet/posixbase.py	Sat Apr  2 23:58:11 2005
> @@ -155,7 +155,6 @@
>          ReactorBase.__init__(self)
>          if self.usingThreads or platformType == "posix":
>              self.installWaker()
> -        threadable.whenThreaded(threadable.registerAsIOThread)
>
>      def _handleSignals(self):
>          """Install the signal handlers for the Twisted event loop."""

You **do** realize this means isInIOThread always returns false after  
threading is enabled, if the reactor was started before threading was  
enabled, right?

Something like the following should be run in the test suite. It has to  
be in a separate process, though, to ensure it's in the incorrect  
state, so something needs to be done about passing in the reactor to  
run, also.

from twisted.python import threadable
from twisted.internet import reactor

def testIsInIOThread():
     print "1)", threadable.isInIOThread()
     threadable.init(1)
     print "2)", threadable.isInIOThread()
     reactor.crash()

reactor.callWhenRunning(testIsInIOThread)
reactor.run()

> @@ -202,10 +201,6 @@
>          self.startRunning(installSignalHandlers=installSignalHandlers)
>          self.mainLoop()
>
> -    def iterate(self, delay=0):
> -        threadable.registerAsIOThread()
> -        ReactorBase.iterate(self, delay)
> -
>      def mainLoop(self):
>          while self.running:
>              try:

iterate() is the external API, I think it, like startRunning, should  
also ensure the thread it's being called on is marked as the IO thread.

James




From exarkun at divmod.com  Sun Apr  3 12:50:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 03 Apr 2005 18:50:39 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <66bc10801b1c0e7a006e41c53bf05376@fuhm.net>
Message-ID: <20050403185039.13806.721459381.divmod.quotient.42496@ohm>

On Sun, 3 Apr 2005 13:31:08 -0400, James Y Knight <foom at fuhm.net> wrote:
>On Apr 3, 2005, at 1:58 AM, Jp Calderone wrote:
> > After a lengthy discussion, revert to previous threaded behavior wrt  
> > registering as the IO thread
> 
> > Modified: trunk/twisted/internet/posixbase.py
> > ======================================================================= 
> > =======
> > --- trunk/twisted/internet/posixbase.py	(original)
> > +++ trunk/twisted/internet/posixbase.py	Sat Apr  2 23:58:11 2005
> > @@ -155,7 +155,6 @@
> >          ReactorBase.__init__(self)
> >          if self.usingThreads or platformType == "posix":
> >              self.installWaker()
> > -        threadable.whenThreaded(threadable.registerAsIOThread)
> >
> >      def _handleSignals(self):
> >          """Install the signal handlers for the Twisted event loop."""
> 
> You **do** realize this means isInIOThread always returns false after  
> threading is enabled, if the reactor was started before threading was  
> enabled, right?

  Yes.  Fortunately this never actually happens.  When it becomes possible, we can think about fixing this behavior.

> 
> Something like the following should be run in the test suite. It has to  
> be in a separate process, though, to ensure it's in the incorrect  
> state, so something needs to be done about passing in the reactor to  
> run, also.
> 
> from twisted.python import threadable
> from twisted.internet import reactor
> 
> def testIsInIOThread():
>      print "1)", threadable.isInIOThread()
>      threadable.init(1)
>      print "2)", threadable.isInIOThread()
>      reactor.crash()
> 
> reactor.callWhenRunning(testIsInIOThread)
> reactor.run()

  Yes.  A unit test like that _would_ be nice...

> 
> > @@ -202,10 +201,6 @@
> >          self.startRunning(installSignalHandlers=installSignalHandlers)
> >          self.mainLoop()
> >
> > -    def iterate(self, delay=0):
> > -        threadable.registerAsIOThread()
> > -        ReactorBase.iterate(self, delay)
> > -
> >      def mainLoop(self):
> >          while self.running:
> >              try:
> 
> iterate() is the external API, I think it, like startRunning, should  
> also ensure the thread it's being called on is marked as the IO thread.

  Yes, however simply calling registerAsIOThread inside it is not a complete fix.  The understanding to which I came is that the previous incorrectness was preferable to the new incorrectness.

  Jp



From foom at fuhm.net  Sun Apr  3 17:40:32 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 3 Apr 2005 19:40:32 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <20050403185039.13806.721459381.divmod.quotient.42496@ohm>
References: <20050403185039.13806.721459381.divmod.quotient.42496@ohm>
Message-ID: <bc1988aed7952255de54e7993c24e2fd@fuhm.net>

On Apr 3, 2005, at 2:50 PM, Jp Calderone wrote:
>> isInIOThread
>   Yes.  Fortunately this never actually happens.  When it becomes 
> possible, we can think about fixing this behavior.

Funny, because that test program shows that it does happen. And, for me 
at least, it pretty much always happens. The reactor starts up in 
non-threaded mode and then becomes threaded later.

>> iterate
>   Yes, however simply calling registerAsIOThread inside it is not a 
> complete fix.  The understanding to which I came is that the previous 
> incorrectness was preferable to the new incorrectness.

Elaboration necessary.

James




From warner at lothar.com  Sun Apr  3 17:54:56 2005
From: warner at lothar.com (Brian Warner)
Date: Sun, 03 Apr 2005 16:54:56 -0700 (PDT)
Subject: [Twisted-Python] How can I call internet.MulticastServer() to
	enable listenMultiple?
Message-ID: <20050403.165456.53859753.warner@lothar.com>

>> Why are you passing a factory in? UDP and Multicast don't use factories.
>
> Ok what I am trying to do is make a ZeroConfService

It is worth pointing out that IP Multicast works in terms of _groups_. When
you are listening on a socket, you must specify both UDP port number and the
group id. (IPv4 groups are specified with an IP address in the "class D"
range, 224.foo.foo.foo). If you just listen on port 5353, you're listening
for packets directed at one of your node's unicast ip addresses. If you bind
it to a specified group (224.0.0.251 is probably the one you want), then you
get packets sent to that multicast group, and multiple programs on a single
host can listen on the same multicast group.

Itamar's mdns.py code in the sandbox[1] uses the following routine (in a
DatagramProtocol subclass) to set up the receiver:

    def startListening(self):
        reactor.listenMulticast(5353, self, maxPacketSize=1024,
                                listenMultiple=True)
        self.transport.joinGroup(MDNS_ADDRESS)
        self.transport.setTTL(255)
        self.transport.setLoopbackMode(False)

You'll probably need to do something similar.

cheers,
 -Brian


[1]: svn://svn.twistedmatrix.com/svn/Twisted/sandbox/itamar/mdns



From exarkun at divmod.com  Sun Apr  3 18:15:37 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 04 Apr 2005 00:15:37 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <bc1988aed7952255de54e7993c24e2fd@fuhm.net>
Message-ID: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>

On Sun, 3 Apr 2005 19:40:32 -0400, James Y Knight <foom at fuhm.net> wrote:
> [snip]
> 
> Elaboration necessary.
> 

  Attached.

  Jp
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: thread-disc.txt
URL: </pipermail/twisted-python/attachments/20050404/8bf9c708/attachment-0002.txt>

From foom at fuhm.net  Sun Apr  3 21:52:34 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 3 Apr 2005 23:52:34 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
References: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
Message-ID: <742c34a430ed1a78daebcb852c37cad7@fuhm.net>

> [23:46] <exarkun> So, um, to back up and perhaps narrow scope slightly
> [23:46] <exarkun> The current code does the right thing, I think, 
> except when the platform lacks threads
> [23:46] <exarkun> it does more than it needs to, probably, but it 
> doesn't look like it ever does anything that's plain wrong
> [23:47] <exarkun> platforms that lack thread support need to just not 
> have registerAsIOThread called, or registerAsIOThread needs to be a 
> no-op on those platforms

It already is, and always has been. From The Source:

def registerAsIOThread():
     """Mark the current thread as responsable for I/O requests.
     """
     global threaded
     global ioThread
     if threaded:
         import thread
         ioThread = thread.get_ident()


> [23:48] <exarkun> Correction: registerAsIOThread in __init__ on a 
> thread-supporting platform is also sub-optimal now, as it forces the 
> import of the thread module when we may not actually need it.

But it doesn't. See above. It is *because* of the behavior of doing 
nothing when threadable.init(1) has not yet been called that 
whenThreaded(registerAsIOThread) is necessary.

> [23:54] <glyph> Yes, but having iterate() behave in random, 
> non-deterministic, broken ways in edge cases is preserving its current 
> behavior :)

So, the reasoning for re-breaking iterate() is that iterate is also 
broken in some other way, and thus it should remain broken in this 
regard too? How does that even make a bit of sense?

Of course, right now, the only place isInIOThread is ever used in 
twisted is in reactor's wakeUp function, and there, it does not matter 
(except for efficiency) that it will always return False. So, we could 
simplify isInIOThread to "return False" and call it a feature.

A better solution may be to get rid of all this mess, and just make it 
so that if the thread module is available, it is used. Forget the 
"threaded mode" nonsense, and just make threaded-or-not something that 
has to be determined once, and finally, at startup.

James




From gmcdonald at infocomp.com  Sun Apr  3 23:02:24 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Mon, 4 Apr 2005 15:02:24 +1000 
Subject: [Twisted-Python] Creating an NT Service for a twistd script
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4D04@XCHANGE>

Cory,

I did read your readme thoroughly and it only specifies the application of
the patch for py2exe version 0.5.4. As I am currently using 0.5.0 (i thought
that this fell within the py2exe 0.5+ category but perhaps i am mistaken) i
did not apply the patch. Is this what is causing the issue?

Thanks in advance,

Grant

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Cory Dodt
Sent: 01 April 2005 03:38
To: Twisted general discussion
Subject: Re: [Twisted-Python] Creating an NT Service for a twistd script


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Grant,

Been on vacation so I'm still catching up, sorry for the slow reply.  This
sounds like an unpatched py2exe.  Did you look at the README.txt in my
sandbox? There's a patch in there you need.  TH has already applied it to
py2exe's development codeline but there hasn't been a release yet.

C


Grant McDonald wrote:
| Hi All,
|
| I am receiving the following error when i run the <filename>ctl.exe
| generated with moonfallen's ntsvc module and py2exe:
|
| Traceback (most recent call last):
|   File "boot_service.py", line 21, in ?
| RuntimeError: No service classes found
|
| Can someone please point me in the right direction??
|
| Grant
|
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050404/047507b9/attachment.html>

From foom at fuhm.net  Sun Apr  3 23:12:54 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 4 Apr 2005 01:12:54 -0400
Subject: [Twisted-Python] Stable release branch
Message-ID: <0335feace50ee1e9809e12884a439871@fuhm.net>

So I've volunteed to do backports from trunk to the stable (currently 
2.0.x) branch for important fixes. "Important" is up for discussion, 
but here's what I'm thinking:

Important means one of:
1) installer brokenness
2) fixes a regression
3) fixes nonfunctional new API

Also (and this is not really up for discussion):
1) patch must be small (and correct). Even if it meets one of the above 
criteria, if it is a large or non-obviously-correct change, I don't 
want to see it.
2) must not add APIs.
3) if it's been broken for a long time (e.g. in the 1.3 release), it 
can stand to be broken a little while longer.

I'll watch for things I think are appropriate, but, if anyone else 
wants to point out some svn revisions of changes they think would be 
appropriate, that's fine too.

Now, before people start suggesting that every change be backported 
(which obviously isn't going to happen), we probably ought to set a 
goal for the next "real" release (2-3 months?).

I expect the 2.0.1 release should go out this week sometime. I think 
win32 build fixes ought to land first, but that's about all I know of.

I'd also love to include the changes to the release scripts which will 
allow the version to exist in the __version__s in the SVN repository 
instead of being specified on the command-line by the person releasing. 
Having consistent versions is important. Someone just needs to write 
those changes first. However, that doesn't affect the released tarballs 
at all, so it's not really necessary for before-2.0.1.

Here's what I did so far:
> Log:
> Backports from trunk:
> 13307 (twisted/topfiles/README) - we support 2.4 too
> 13324 (twisted/internet/defer.py) - [947] Fix DeferredQueue 
> backlog/size limit.
> 13354 (twisted/plugins/__init__.py) - Correct maintainer address.
> 13355 (twisted/test/test_defer.py) - improvements to DeferredQueue 
> test case
> 13387 (setup.py) - add news to list of subprojects

James




From Henning.Ramm at mediapro-gmbh.de  Mon Apr  4 02:32:22 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 4 Apr 2005 10:32:22 +0200
Subject: [Twisted-Python] Looking for a simple file event driven loop
	usingTwisted
Message-ID: <F92274058556DE42B94B148EEFB9183949E697@exchange-03.suedkurier.de>

>I'm looking for some example code I can use to build an app from. I
>need to 'wait' or sleep for new data in a file. Then wake and process
>the data.

Find attached a Windows specific directory watcher;
it's not really what you asked for, but perhaps it's of use.
I can't guarantee it really does what it should - it looks
like, but the code isn't mature.

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dirwatcher.py
Type: application/octet-stream
Size: 3199 bytes
Desc: dirwatcher.py
URL: </pipermail/twisted-python/attachments/20050404/7bfd7aeb/attachment-0002.obj>

From daverz at gmail.com  Mon Apr  4 02:58:00 2005
From: daverz at gmail.com (Dave Cook)
Date: Mon, 4 Apr 2005 01:58:00 -0700
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using Twisted
In-Reply-To: <90151e5050331162679d3c7b@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
	<7a59f0250503252357594dd5de@mail.gmail.com>
	<90151e5050331162679d3c7b@mail.gmail.com>
Message-ID: <7a59f025050404015854d08f10@mail.gmail.com>

This version allows you to stop the event loop, to register a
callback, and to specify which stat items you want to watch.

Dave Cook
-------------- next part --------------
A non-text attachment was scrubbed...
Name: filewatcher.py
Type: application/octet-stream
Size: 1614 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050404/c86ee90e/attachment-0002.obj>

From mvanaswegen at deloitte.co.za  Mon Apr  4 05:17:05 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Mon, 4 Apr 2005 13:17:05 +0200
Subject: [Twisted-Python] UDP File Copy
Message-ID: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>

Hi 
 
I'm busy writing a small P2P client with Twisted. The primary use will
be on a reliable local LAN segment.
I would like to use UDP to copy files and the client must be able to
accept multiple connections. I have 
not been able to find any example code via google, any suggestions ?
 
Regs
 

Marinus

 

Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050404/14d0e238/attachment.html>

From exarkun at divmod.com  Mon Apr  4 06:53:12 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 04 Apr 2005 12:53:12 GMT
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
Message-ID: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>

On Mon, 4 Apr 2005 13:17:05 +0200, "van Aswegen, Marinus \(ZA - Johannesburg\)" <mvanaswegen at deloitte.co.za> wrote:
>Hi 
>  
> I'm busy writing a small P2P client with Twisted. The primary use will
> be on a reliable local LAN segment.
> I would like to use UDP to copy files and the client must be able to
> accept multiple connections. I have 
> not been able to find any example code via google, any suggestions ?
>  
> Regs
>  

  Use TCP instead.  UDP might be an optimization to make later (but probably not: I can push 11MB/sec over my LAN with TCP, UDP is not going to do much better).

  Jp



From Henning.Ramm at mediapro-gmbh.de  Mon Apr  4 07:38:04 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 4 Apr 2005 15:38:04 +0200
Subject: [Twisted-Python] cleanup at reactor.stop
Message-ID: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>

This is probably a stupid question, but I'm stuck...

I need to clean up some objects if (that is, before) reactor.stop is called.
Is there something like reactor.runAtShutdown() or how should I do this?


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From matt at pollenation.net  Mon Apr  4 08:00:52 2005
From: matt at pollenation.net (Matt Goodall)
Date: Mon, 04 Apr 2005 15:00:52 +0100
Subject: [Twisted-Python] cleanup at reactor.stop
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>
Message-ID: <42514894.1030107@pollenation.net>

Henning.Ramm at mediapro-gmbh.de wrote:

>This is probably a stupid question, but I'm stuck...
>
>I need to clean up some objects if (that is, before) reactor.stop is called.
>Is there something like reactor.runAtShutdown() or how should I do this?
>
You can hook into the reactor by registering a system event callback. 
See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger, 
removeSystemEventTrigger and fireSystemEvent.

You may need to grep the Twisted code to find out all the events that 
are actually fired but the one you want is "shutdown".

- Matt

-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.




From Henning.Ramm at mediapro-gmbh.de  Mon Apr  4 08:16:07 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 4 Apr 2005 16:16:07 +0200
Subject: [Twisted-Python] cleanup at reactor.stop
Message-ID: <F92274058556DE42B94B148EEFB9183949E69A@exchange-03.suedkurier.de>

>>Is there something like reactor.runAtShutdown() or how should 
>I do this?
>You can hook into the reactor by registering a system event callback. 
>See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger, 
>removeSystemEventTrigger and fireSystemEvent.
>
>You may need to grep the Twisted code to find out all the events that 
>are actually fired but the one you want is "shutdown".

Thank you. It works.
I just found these methods myself, but was not sure if they are the
right way. (I always get lost in the API docs - I find it strange to
look after internet.reactor at internet.interfaces.IReactorCore).

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From exarkun at divmod.com  Mon Apr  4 08:18:40 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 04 Apr 2005 14:18:40 GMT
Subject: [Twisted-Python] cleanup at reactor.stop
In-Reply-To: <42514894.1030107@pollenation.net>
Message-ID: <20050404141840.13806.508791127.divmod.quotient.44238@ohm>

On Mon, 04 Apr 2005 15:00:52 +0100, Matt Goodall <matt at pollenation.net> wrote:
>Henning.Ramm at mediapro-gmbh.de wrote:
> 
> >This is probably a stupid question, but I'm stuck...
> >
> >I need to clean up some objects if (that is, before) reactor.stop is called.
> >Is there something like reactor.runAtShutdown() or how should I do this?
> >
> You can hook into the reactor by registering a system event callback. 
> See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger, 
> removeSystemEventTrigger and fireSystemEvent.
> 
> You may need to grep the Twisted code to find out all the events that 
> are actually fired but the one you want is "shutdown".

  You can also use application services, which are implemented in terms of the system event trigger API.  A very incomplete look at services is present at:

  <http://twistedmatrix.com/documents/current/howto/application>

  To create your own kind of service, simply subclass twisted.application.service.Service.  To get shutdown notification, override stopService.  It may return a Deferred to delay shutdown if necessary.

  Jp



From umit.oztosun at gmail.com  Mon Apr  4 08:20:43 2005
From: umit.oztosun at gmail.com (=?ISO-8859-1?Q?=DCmit_=D6ztosun?=)
Date: Mon, 4 Apr 2005 17:20:43 +0300
Subject: [Twisted-Python] cleanup at reactor.stop
In-Reply-To: <42514894.1030107@pollenation.net>
References: <F92274058556DE42B94B148EEFB9183949E699@exchange-03.suedkurier.de>
	<42514894.1030107@pollenation.net>
Message-ID: <d95439ec05040407205469604d@mail.gmail.com>

Adding something like:

reactor.addSystemEventTrigger('before', 'shutdown', methodToRunBeforeShutdown)

before running reactor.run() should do the work.

Regards,
Umit

> >This is probably a stupid question, but I'm stuck...
> >
> >I need to clean up some objects if (that is, before) reactor.stop is called.
> >Is there something like reactor.runAtShutdown() or how should I do this?
> >
> You can hook into the reactor by registering a system event callback.
> See  twisted.internet.interfaces.IReactorCore's addSystemEventTrigger,
> removeSystemEventTrigger and fireSystemEvent.
> 
> You may need to grep the Twisted code to find out all the events that
> are actually fired but the one you want is "shutdown".



From corydodt at twistedmatrix.com  Mon Apr  4 09:19:15 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Mon, 04 Apr 2005 08:19:15 -0700
Subject: [Twisted-Python] Creating an NT Service for a twistd script
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4D04@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4D04@XCHANGE>
Message-ID: <42515AF3.7000009@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sorry, I guess the README is unclear.  You will need to apply the patch to any
0.5.x version, 0.5.4 being the latest release.  (I've also only the tested the
patch on 0.5.4 so ymmv.)

C


Grant McDonald wrote:
| Cory,
|
| I did read your readme thoroughly and it only specifies the application
| of the patch for py2exe version 0.5.4. As I am currently using 0.5.0 (i
| thought that this fell within the py2exe 0.5+ category but perhaps i am
| mistaken) i did not apply the patch. Is this what is causing the issue?
|
| Thanks in advance,
|
| Grant
|
| -----Original Message-----
| From: twisted-python-bounces at twistedmatrix.com
| [mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Cory Dodt
| Sent: 01 April 2005 03:38
| To: Twisted general discussion
| Subject: Re: [Twisted-Python] Creating an NT Service for a twistd script
|
|
| -----BEGIN PGP SIGNED MESSAGE-----
| Hash: SHA1
|
| Hi Grant,
|
| Been on vacation so I'm still catching up, sorry for the slow reply.  This
| sounds like an unpatched py2exe.  Did you look at the README.txt in my
| sandbox? There's a patch in there you need.  TH has already applied it to
| py2exe's development codeline but there hasn't been a release yet.
|
| C
|
|
| Grant McDonald wrote:
| | Hi All,
| |
| | I am receiving the following error when i run the <filename>ctl.exe
| | generated with moonfallen's ntsvc module and py2exe:
| |
| | Traceback (most recent call last):
| |   File "boot_service.py", line 21, in ?
| | RuntimeError: No service classes found
| |
| | Can someone please point me in the right direction??
| |
| | Grant
| |
| |
|
|
|
| Important notice: This message is intended for the individual(s) and
| entity(s) addressed. The information contained in this transmission and
| any attached, may be confidential and may also be the subject of legal
| privilege, public interest immunity or legal professional privilege. Any
| review, retransmission, dissemination or other use of, taking of any
| action in reliance upon this information by person or entities other
| than the recipient is prohibited and requires authorization from the
| sender. If you are not the addressee indicated in this message (or
| responsible for delivery of the message to such person) you may not copy
| or deliver this message to anyone. In such cases you should destroy this
| message and kindly notify the sender by reply email.
|
| WARNING: Although Infocomp has taken reasonable precautions so that no
| viruses are present in this e-mail, the company cannot accept
| responsibility for any loss or damage arising from the use of e-mail
| attachments.
|
|
| ------------------------------------------------------------------------
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCUVry3A5SrXAiHQcRAqFAAKCX4VN40XEN86YuZRz2YvwrIKIVWACdG+h3
9ZPCZays2xMxD/SXwNpnzc8=
=xaBR
-----END PGP SIGNATURE-----



From glyph at divmod.com  Mon Apr  4 17:03:36 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 04 Apr 2005 19:03:36 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <742c34a430ed1a78daebcb852c37cad7@fuhm.net>
References: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
	<742c34a430ed1a78daebcb852c37cad7@fuhm.net>
Message-ID: <4251C7C8.8050904@divmod.com>

James Y Knight wrote:

> So, the reasoning for re-breaking iterate() is that iterate is also
> broken in some other way, and thus it should remain broken in this
> regard too? How does that even make a bit of sense?

iterate() is broken as an API.  Without even going into the problems 
with implementing it on a proactor, how does one determine when to start 
and stop services in a reactor that we one is calling .iterate() on? 
What happens when you call .stop()?  .crash()?  Do we need to invent an 
external status API so that the .iterate()-caller is "on their honor" to 
stop running at the appropriate time?  Without sensible semantics for 
starting and stopping services, you can't start and stop the thread pool 
reliably, and, poof, you can't do anything useful with threads.  These 
are the least of our problems.

This is iterate() as an _external_ API.  Internally, .doIteration() 
makes perfect sense for most reactors.  The original use-case for 
.iterate() was to support screen-painting APIs, such as in a 3D game - 
perhaps reactors should instead have a 'callAsOftenAsPossible(callable)' 
method to support that instead.  (callLater is a bit too expensive, I 
think, and besides it doesn't work when the FPU is in single-precision 
mode, as it is when running within a process like DirectX or certain 
proprietary openGL drivers on Windows).  Another option is for such a 
graphically intensive application subclass one of the reactors and add a 
  frame-drawing hook in doIteration.

Does someone with a real use-case want to come forward? :)

> A better solution may be to get rid of all this mess, and just make
> it so that if the thread module is available, it is used. Forget the
>  "threaded mode" nonsense, and just make threaded-or-not something
> that has to be determined once, and finally, at startup.

The rationale for having this mess in the first place is that importing
the 'thread' module slows Python down by about 30%, even if you don't
actually run any threads.  Originally Twisted could run without
importing 'thread' at all even on a threaded platform - if we are going
to make the default resolver be threaded, then it's not clear how we
would restore that feature without leaving this mess intact and making
sure that installing the chosen resolver is done very early in the 
process's lifetime.

I'm open to other suggestions though.  I definitely don't like what 
we've got, and I don't think it works properly.



From foom at fuhm.net  Mon Apr  4 18:28:55 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 4 Apr 2005 20:28:55 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r13446 - After a lengthy
	discussion,
	revert to previous threaded behavior wrt registering as the IO thread
In-Reply-To: <4251C7C8.8050904@divmod.com>
References: <20050404001537.13806.578289811.divmod.quotient.42951@ohm>
	<742c34a430ed1a78daebcb852c37cad7@fuhm.net>
	<4251C7C8.8050904@divmod.com>
Message-ID: <37a477ea611993a9fadea43ebe718b40@fuhm.net>

On Apr 4, 2005, at 7:03 PM, Glyph Lefkowitz wrote:
> The rationale for having this mess in the first place is that importing
> the 'thread' module slows Python down by about 30%, even if you don't
> actually run any threads.  Originally Twisted could run without
> importing 'thread' at all even on a threaded platform - if we are going
> to make the default resolver be threaded, then it's not clear how we
> would restore that feature without leaving this mess intact and making
> sure that installing the chosen resolver is done very early in the 
> process's lifetime.

(summarized conversation, many lines cut):
[19:56] <foom> exarkun: how do you demonstrate that python slows down 
if you import thread?
[19:56] <foom> python -c 'import thread; import test.pystone; 
test.pystone.main()'
[19:56] <foom> doesn't show any slowdown vs not import thread'ing
[19:57] * exarkun tries some stuff
[20:13] <foom> it *does* slow down if you actually call 
thread.start_new_thread(lambda:0, ())
[20:14] <foom> on a new system, ever so slightly
[20:14] <foom> on an old system, a lot
[20:15] <foom> 31250 vs 17668 pystones on my RH73 system running py2.2
[20:15] <foom> 52631 vs 49504 pystones on my FC3 system py2.3
[20:16] <foom> 57471 vs 56179 pystones (on FC3 py2.4)
[20:18] <exarkun> a previous point release of 2.2 or 2.3 might have 
moved the PyEval_InitThreads() from threadmodule's init to 
start_new_thread
[20:21] <exarkun> hmm, no
[20:21] <exarkun> PyEval_InitThreads has been in start_new_thread for 8 
years :)
[20:22] <exarkun> hrm
[20:22] <exarkun> I suppose that doesn't tell us anything about whether 
another call to it was recently remove from the init function though
[20:27] <foom> exarkun: Instead, I'll run pystone on python1.5.2 and 
have the same behavior
[20:27] <foom> exarkun: and conclude that it's always been like that


Conclusions:
1) We do not need to worry about importing the thread module slowing 
anything down.
2) We do not need to worry about using the thread module slowing 
anything down, on modern systems.

Therefore, the rationale for the mess is invalid, and the mess can go 
away.

James




From anthony at interlink.com.au  Tue Apr  5 01:35:17 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 5 Apr 2005 17:35:17 +1000
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
Message-ID: <200504051735.17511.anthony@interlink.com.au>

On Monday 04 April 2005 22:53, Jp Calderone wrote:
>   Use TCP instead.  UDP might be an optimization to make later (but
> probably not: I can push 11MB/sec over my LAN with TCP, UDP is not going to
> do much better).

In the context of the old 'fsp' transfer program, I think it was Robert Elz 
who made the comment: "Those who do not understand TCP are doomed
to repeat it".

There are times when a UDP-based protocol makes sense. File transfer
almost certainly isn't one of them.

-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From melirizarry at adelphia.net  Tue Apr  5 08:25:43 2005
From: melirizarry at adelphia.net (Mel Irizarry)
Date: Tue, 05 Apr 2005 07:25:43 -0700
Subject: [Twisted-Python] simpleclient.py exception
Message-ID: <42529FE7.4090604@adelphia.net>

Do I have something missing or misconfigured?  When I run 
simpleclient.py I get this:

Server said: hello, world!
connection lost
Connection lost - goodbye!
Traceback (most recent call last):
  File "simpleclient.py", line 52, in ?
    main()
  File "simpleclient.py", line 48, in main
    reactor.run()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 200, in run
    self.mainLoop()
  File "/usr/lib/python2.3/site-packages/twisted/internet/posixbase.py", line 208, in mainLoop
    self.runUntilCurrent()
--- <exception caught here> ---
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 533, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File "/usr/lib/python2.3/site-packages/twisted/internet/base.py", line 389, in _continueSystemEvent
    for callList in sysEvtTriggers[1], sysEvtTriggers[2]:
exceptions.TypeError: unsubscriptable object



-- 
Best Regards,

Mel Irizarry

-----------------------------
I can't go to school 'cause I ain't got a gun
I ain't got a gun 'cause I ain't got a job
I can't get a job 'cause I can't go to school

Lost in America - Alice Cooper




From jarrod.roberson at gmail.com  Tue Apr  5 09:14:55 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Tue, 5 Apr 2005 11:14:55 -0400
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <200504051735.17511.anthony@interlink.com.au>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
Message-ID: <2389d47305040508142bf4baf9@mail.gmail.com>

On Apr 5, 2005 3:35 AM, Anthony Baxter <anthony at interlink.com.au> wrote:
> On Monday 04 April 2005 22:53, Jp Calderone wrote:
> >   Use TCP instead.  UDP might be an optimization to make later (but
> > probably not: I can push 11MB/sec over my LAN with TCP, UDP is not going to
> > do much better).
> 
> In the context of the old 'fsp' transfer program, I think it was Robert Elz
> who made the comment: "Those who do not understand TCP are doomed
> to repeat it".
> 
> There are times when a UDP-based protocol makes sense. File transfer
> almost certainly isn't one of them.
> 

the only time that UDP is really appliciable for file transfer is when
you are doing Multicast AND Reliable Multicast with Foward Error
Correction and other techniques. This is a rare case on the INTERNET
since very few routers still support Multicast.

Intra-net where you are broadcasting updates or patches to a cluster
of machines it makes since, but for peer-to-peer it just doesn't reap
any benefits on the internet proper.

-- 
If you don't know what you want, you probably need a nap.



From solipsis at pitrou.net  Tue Apr  5 09:26:44 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 05 Apr 2005 17:26:44 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <2389d47305040508142bf4baf9@mail.gmail.com>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
Message-ID: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>


> Intra-net where you are broadcasting updates or patches to a cluster
> of machines it makes since, but for peer-to-peer it just doesn't reap
> any benefits on the internet proper.

You are wrong, UDP is more and more adopted by end-user P2P software
because of its ability to transparently go through - in and out - many
types of NAT devices (which are themselves more and more popular among
home users). Incoming TCP traffic, on the other hand, often needs to be
specifically enabled on the NAT box.

For juicy details, you can read the RFC for the STUN protocol (Simple
Traversal of User Datagram Protocol - UDP - Through Network Address
Translators - NATs):
http://www.faqs.org/rfcs/rfc3489.html

Regards

Antoine.





From foom at fuhm.net  Tue Apr  5 09:34:17 2005
From: foom at fuhm.net (James Y Knight)
Date: Tue, 5 Apr 2005 11:34:17 -0400
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <2125f401b892a1f1f349cc45da563c53@fuhm.net>

Bug summary
______________________
Since 2005-03-28 20:45:26.730000:
  Bugs opened: 17   Bugs closed: 18   Total open bugs: 332 (-1)
   Urgent: 3 (+0)
   Bug: 134 (+2)
   Feature: 126 (-4)
   Wish: 69 (+1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[CORE, TRIAL] BUG: Raising FailTest doesn't always fail a test  (6 days 
ago)
        http://twistedmatrix.com/bugs/issue955 opened by exarkun

                     ==== Bug ====
twistd running as daemon sets umask to 0077  (11 minutes ago)
        http://twistedmatrix.com/bugs/issue966 opened by thomasvs

[WEBSITE] No link to Twisted 2 installer for win32 on website  (3 hours 
ago)
        http://twistedmatrix.com/bugs/issue964 opened by ash

[WEBSITE] No download link on website and usability issue with old 
download link  (3 hours ago)
        http://twistedmatrix.com/bugs/issue965 opened by ash

[DOCUMENTATION, LORE] some PB howtos have empty examples  (7 hours ago)
        http://twistedmatrix.com/bugs/issue963 opened by warner

[CORE, TRIAL] trial does not treat pending calls in the thread queue as 
a test-failing condition  (yesterday)
        http://twistedmatrix.com/bugs/issue962 opened by exarkun

[CORE] BUG: twisted.plugin.getCache() incorrectly tries to rewrite 
cache file too frequently  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue958 opened by exarkun

[CORE] BUG: exceptions in setUpClass cause trial to exit prematurely  
(3 days ago)
        http://twistedmatrix.com/bugs/issue960 opened by exarkun

Importing twisted.protocols.dns blocks for /dev/random  (2 months ago)
CLOSED http://twistedmatrix.com/bugs/issue856 opened by ben

[CORE] BUG: Qt Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testCallInNextIteration  
(5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue957 opened by exarkun

[CORE] BUG: QT Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testWakeUp  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue954 opened by exarkun

[DOCUMENTATION, LORE, WEB] Lore emits warnings when processing new web 
howto doc  (5 days ago)
        http://twistedmatrix.com/bugs/issue956 opened by exarkun

[RELEASE MANAGEMENT] Better error message when missing twisted package  
(6 days ago)
        http://twistedmatrix.com/bugs/issue953 opened by ianb

                     ==== Feature ====
[CORE, DOCUMENTATION] Document twisted.python.log  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue961 opened by exarkun

[DEFERRED, DOCUMENTATION] Document correct style for setting timeouts  
(7 days ago)
CLOSED http://twistedmatrix.com/bugs/issue952 opened by hypatia

[DOCUMENTATION, WEBSITE] No PDF or PS versions of new docs on the 
website  (1 week ago)
        http://twistedmatrix.com/bugs/issue948 opened by ash

                     ==== Wish ====
[DOCUMENTATION, WEBSITE] Generate documentation from lore automatically 
after checkins  (4 days ago)
        http://twistedmatrix.com/bugs/issue959 opened by hypatia


Bugs Closed
______________________
                     ==== Bug ====
[PATCH] callRemote raises AttributeError when remote method does not 
exist, conflicts with possible AttributeError inside method  (3 months 
ago)
        http://twistedmatrix.com/bugs/issue843 opened by thomasvs, 
closed by jml

[CORE] BUG: twisted.plugin.getCache() incorrectly tries to rewrite 
cache file too frequently  (4 days ago)
        http://twistedmatrix.com/bugs/issue958 opened by exarkun, closed 
by exarkun

[CORE] [PATCH] for exception in TCP.__repr__  (2 months ago)
        http://twistedmatrix.com/bugs/issue869 opened by zooko, closed 
by exarkun

[DEFERRED, DOCUMENTATION] Explain chaining callbaclks and errbacks 
better  (11 months ago)
        http://twistedmatrix.com/bugs/issue596 opened by hypatia, closed 
by hypatia

twisted.python.rebuild fails if python 2.4's decimal module is imported 
  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue921 opened by marienz, closed 
by hypatia

[FTP] twisted.protocols.ftp list() and nlst() functions broken  (7 
months ago)
        http://twistedmatrix.com/bugs/issue690 opened by doko, closed by 
spiv

Importing twisted.protocols.dns blocks for /dev/random  (2 months ago)
        http://twistedmatrix.com/bugs/issue856 opened by ben, closed by 
tekNico

[CORE] BUG: Qt Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testCallInNextIteration  
(5 days ago)
        http://twistedmatrix.com/bugs/issue957 opened by exarkun, closed 
by exarkun

[CORE] BUG: QT Reactor fails 
twisted.test.test_internet.InterfaceTestCase.testWakeUp  (6 days ago)
        http://twistedmatrix.com/bugs/issue954 opened by exarkun, closed 
by exarkun

TypeError in serialize methods of twisted.xish.domish (patch included)  
(1 week ago)
        http://twistedmatrix.com/bugs/issue946 opened by syt, closed by 
ralphm

                     ==== Feature ====
[TRIAL] twisted.enterprise.adbapi.ConnectionPool() shouldn't require 
.start()  (3 months ago)
        http://twistedmatrix.com/bugs/issue840 opened by edsuom, closed 
by exarkun

[CORE] Allow passing --uid and --gid to twistd  (6 months ago)
        http://twistedmatrix.com/bugs/issue726 opened by itamarst, 
closed by exarkun

[PATCH] Interface support for adbapi.ConnectionPool  (3 months ago)
        http://twistedmatrix.com/bugs/issue839 opened by ww, closed by 
exarkun

.buildProtocol((host, port)) is unsuitable for e.g. UNIX domain 
sockets; use t.i.address  (3 weeks ago)
        http://twistedmatrix.com/bugs/issue915 opened by Tv, closed by 
exarkun

[CORE, DOCUMENTATION] Document twisted.python.log  (2 days ago)
        http://twistedmatrix.com/bugs/issue961 opened by exarkun, closed 
by exarkun

[DOCUMENTATION] There should be a doc on how to write tests of Twisted 
code  (1 month ago)
        http://twistedmatrix.com/bugs/issue896 opened by spiv, closed by 
hypatia

[DEFERRED, DOCUMENTATION] Document correct style for setting timeouts  
(7 days ago)
        http://twistedmatrix.com/bugs/issue952 opened by hypatia, closed 
by hypatia

                     ==== Wish ====
ident protocol implementation  (19 months ago)
        http://twistedmatrix.com/bugs/issue233 opened by itamarst, 
closed by exarkun




From jarrod.roberson at gmail.com  Tue Apr  5 09:59:26 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Tue, 5 Apr 2005 11:59:26 -0400
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <2389d473050405085954c71c39@mail.gmail.com>

I was not arguing its popularity, I was arguing its added complexity,
which is negligable.
None of my equipment that is doing NAT requires any special
configuration to enable TCP.
Maybe old equipement but I don't have anything less than a year old.

I don't see the benefit outside of extremely low-latency game
requirements of data that is constantly changing anyway. For REILABLE
file transfer it gets complicated quickly which is like the othe
person implied that if you are re-implementing all the TCP features in
software over UDP why do it. I don't buy the NAT arguement as enough
of a reason to justify the complexity.


-- 
If you don't know what you want, you probably need a nap.



From tomc74 at gmail.com  Tue Apr  5 13:31:23 2005
From: tomc74 at gmail.com (Tom Carmichael)
Date: Tue, 5 Apr 2005 15:31:23 -0400
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <332b7c5f05040512317e05717c@mail.gmail.com>

UDP has it's place, but typically vanilla file transfer isn't it. 

UDP traffic typically is harder to NAT rather than easier.  Since it
is a stateless protocol, what is meant by a 'reply'?  How do you keep
a forward and reverse translation table for the communications?  The
answers to these questions are to wrap these 'stateful' UDP sessions
inside a psuedo-connection.  In otherwords, simulate TCP behavior.

The reality of today's internet is that NAT is prevalent, especially
in home use.  There simply isn't enough IP space in IPv4 to accomodate
everybody, so we are left with dealing with the mess that RFC 1918
addressing, NAT and all the other work arounds have given us.  STUN
came out of trying to get VoIP working in a NATed environment.  Since
the latency demands of any VoIP application is fairly extreme and a
single lost packet isn't detrimental to the data, UDP makes sense for
that application.  To get it to function in a NAT world however
requires some intellegence in software to determine that NAT exists,
how it functions and what to do about it.  Enter STUN.

While you might be able to squeeze some extra speed out of UDP for P2P
apps, it isn't without complexity costs somewhere.  You basically have
the options of ignoring packet loss (VoIP/Skype) or implementing your
own packet reliability mechanism (TFTP) within
the application.  Something like BitTorrent could use UDP, since it is
sending bits of data
from many sources to many sources.  (It doesn't use UDP, it uses TCP.)
 UDP makes a lot of sense for one-to-many or many-to-many
relationships for networking traffic.  That's what multicast is all
about, which uses UDP.  Unfortunately, it's not internet routable so
isn't a good general solution to P2P traffic.

Tom

On Apr 5, 2005 11:26 AM, Antoine Pitrou <solipsis at pitrou.net> wrote:
> 
> > Intra-net where you are broadcasting updates or patches to a cluster
> > of machines it makes since, but for peer-to-peer it just doesn't reap
> > any benefits on the internet proper.
> 
> You are wrong, UDP is more and more adopted by end-user P2P software
> because of its ability to transparently go through - in and out - many
> types of NAT devices (which are themselves more and more popular among
> home users). Incoming TCP traffic, on the other hand, often needs to be
> specifically enabled on the NAT box.
> 
> For juicy details, you can read the RFC for the STUN protocol (Simple
> Traversal of User Datagram Protocol - UDP - Through Network Address
> Translators - NATs):
> http://www.faqs.org/rfcs/rfc3489.html
> 
> Regards
> 
> Antoine.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From alengarbage at yahoo.com  Tue Apr  5 17:13:36 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Tue, 5 Apr 2005 16:13:36 -0700 (PDT)
Subject: [Twisted-Python] DeferredList and errbacks
Message-ID: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>


  I just noticed [what appears to me to be] a
contradiction in the twisted documentation.  The
"Using Deferreds" howto [1] says, "A standard
DeferredList will never call errback," while the
"Twisted FAQ" [2] states, "Always add errbacks!" in
response to the question, "My Deferred or DeferredList
never fires, so my program just mysteriously hangs!
What's wrong?"

  So, which is it?

  I suppose what this is getting at is that each
deferred in a DeferredList should have an errback
attached separately, but this isn't super-clear to me.
Is this the right way to interpret the above
statements?

  thanks,
  Lenny G.


[1]
http://twistedmatrix.com/documents/current/howto/defer
[2] http://twistedmatrix.com/documents/current/howto/faq#auto19

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From andrew-twisted at puzzling.org  Tue Apr  5 18:02:12 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 10:02:12 +1000
Subject: [Twisted-Python] DeferredList and errbacks
In-Reply-To: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>
References: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>
Message-ID: <20050406000212.GE7030@frobozz>

On Tue, Apr 05, 2005 at 04:13:36PM -0700, Lenny G Arbage wrote:
> 
>   I just noticed [what appears to me to be] a
> contradiction in the twisted documentation.  The
> "Using Deferreds" howto [1] says, "A standard
> DeferredList will never call errback," while the
> "Twisted FAQ" [2] states, "Always add errbacks!" in
> response to the question, "My Deferred or DeferredList
> never fires, so my program just mysteriously hangs!
> What's wrong?"
> 
>   So, which is it?
> 
>   I suppose what this is getting at is that each
> deferred in a DeferredList should have an errback
> attached separately, but this isn't super-clear to me.
> Is this the right way to interpret the above
> statements?

By default, DeferredList waits for all its Deferreds to fire (with a result
or an error), and returns a big list of results of the form: 
   [(success_bool, value), (success_bool, value), ...]

Where 'success_bool' is True if the corresponding Deferred succeeded (i.e.
fired a callback), and False if it failed (i.e. fired an errback).  'value'
will be a result or a Failure instance accordingly.  So a standard
DeferredList will never call errback, because it includes errors in the
result passed to its callback.

Error handling in this case could be handled by the user of the
DeferredList, because it would have access to any underlying failures via
the callback.  But you're correct, the original deferreds would still need
errbacks attached -- or pass consumeErrors=True to DeferredList, and it will
do this for you.

And of course, the situation is a bit different again if you pass
fireOnOneErrback=True...

You're right that the docs are a bit confusing here.  Please file a bug
about it at http://twistedmatrix.com/bugs.  The "Other Behaviours" section
of http://twistedmatrix.com/documents/current/howto/defer tries to address
this, but perhaps we could do better.

-Andrew.




From matt.feifarek at gmail.com  Tue Apr  5 18:24:06 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Tue, 5 Apr 2005 20:24:06 -0400
Subject: [Twisted-Python] FAMd and Reactor integration
Message-ID: <6fb6dbfe050405172440dd107e@mail.gmail.com>

Hello.

I'm interested in using FAM/FAMd on Linux and to have its events
noticed by a twisted reactor.

I did some googling, but didn't find much.


Has anyone done this, or does anyone have any pointers on where to
begin my research?

Thanks.



From matt.feifarek at gmail.com  Tue Apr  5 18:43:16 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Tue, 5 Apr 2005 20:43:16 -0400
Subject: [Twisted-Python] shedding root
Message-ID: <6fb6dbfe050405174333b032d5@mail.gmail.com>

I've seen how the plugins created by mktap can shed root and after
binding to a port, and run as an unprivileged user...

I'd like to do this in my twisted code, but my app isn't structured as
a twisted "plugin". How can I manipulate the reactor (or whatever I
need to tweak) to drop root after binding to say, port 80?

I tried using standard python os.setuid() etc. but it just locked up
the reactor.

I looked in the API for useful material, but I was unsuccessful.

Thanks!



From andrew-twisted at puzzling.org  Tue Apr  5 19:17:09 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 11:17:09 +1000
Subject: [Twisted-Python] shedding root
In-Reply-To: <6fb6dbfe050405174333b032d5@mail.gmail.com>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
Message-ID: <20050406011709.GF7030@frobozz>

On Tue, Apr 05, 2005 at 08:43:16PM -0400, Matt Feifarek wrote:
> I've seen how the plugins created by mktap can shed root and after
> binding to a port, and run as an unprivileged user...
> 
> I'd like to do this in my twisted code, but my app isn't structured as
> a twisted "plugin". How can I manipulate the reactor (or whatever I
> need to tweak) to drop root after binding to say, port 80?

You can use twistd without using plugins.  See
http://twistedmatrix.com/projects/core/documentation/howto/application.html.
In fact, mktap and plugins are almost never useful any more.

> I tried using standard python os.setuid() etc. but it just locked up
> the reactor.
> 
> I looked in the API for useful material, but I was unsuccessful.

The place to look would be in twisted.application, but it's probably best to
use twistd -y, as described in the doc I linked.

-Andrew.




From golux at comcast.net  Tue Apr  5 19:33:28 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 05 Apr 2005 21:33:28 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <20050406011709.GF7030@frobozz>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<20050406011709.GF7030@frobozz>
Message-ID: <42533C68.4000402@comcast.net>

Andrew Bennetts wrote:
> You can use twistd without using plugins.  See
> http://twistedmatrix.com/projects/core/documentation/howto/application.html.
> In fact, mktap and plugins are almost never useful any more.
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Whoa.  If true, that sure doesn't come out in the docs.
The link that you reference here says:

"There are many ways in which your code will be called by
various parts of the Twisted framework by the time you're
done. The initial one we're going to focus on here is a
plug-in for the mktap utility."

So although it's almost never useful, let's focus on a
plug-in for the mktap utility.  That's cute.

- Steve



From foom at fuhm.net  Tue Apr  5 20:23:55 2005
From: foom at fuhm.net (James Y Knight)
Date: Tue, 5 Apr 2005 22:23:55 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <42533C68.4000402@comcast.net>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<20050406011709.GF7030@frobozz> <42533C68.4000402@comcast.net>
Message-ID: <04613f98cea3464224e1d2fa6a64ea4a@fuhm.net>


On Apr 5, 2005, at 9:33 PM, Stephen Waterbury wrote:

> Whoa.  If true, that sure doesn't come out in the docs.
> The link that you reference here says:
>
> "There are many ways in which your code will be called by
> various parts of the Twisted framework by the time you're
> done. The initial one we're going to focus on here is a
> plug-in for the mktap utility."
>
> So although it's almost never useful, let's focus on a
> plug-in for the mktap utility.  That's cute.

That intro sure is misleading! The rest of the document doesn't mention 
mktap or plug-ins at all and in fact does document the currently 
recommended best practices. Pretend that first paragraph didn't exist.

James




From matt.feifarek at gmail.com  Tue Apr  5 21:45:10 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Tue, 5 Apr 2005 23:45:10 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <20050406021640.GG7030@frobozz>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<20050406011709.GF7030@frobozz>
	<6fb6dbfe050405182553bc3782@mail.gmail.com>
	<20050406021640.GG7030@frobozz>
Message-ID: <6fb6dbfe05040520457edc6d9c@mail.gmail.com>

Thank you for both suggestions! Very useful!



From mvanaswegen at deloitte.co.za  Wed Apr  6 00:47:28 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Wed, 6 Apr 2005 08:47:28 +0200
Subject: [Twisted-Python] UDP File Copy
Message-ID: <B2ED2925358BE644B40D37F9E01ECE147B47BF@zajnb0406.za.deloitte.com>

My original motivation was to do "fast" file copies on the local LAN via
UDP.
Sure I would have to build some additional checking but I anticipate
that I would
still get better tx rates than TCP. However from a design perspective, I
would
also like to provide the ability to send files via the Internet.
Therefore
I agree TCP would be the better option. Does anyone have a good TCP file
copy class ?
I'd like to be able to handle multiple file tx's ... 

Marinus


Date: Tue, 05 Apr 2005 17:26:44 +0200
From: Antoine Pitrou <solipsis at pitrou.net>
Subject: Re: [Twisted-Python] UDP File Copy
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
	<1112714804.13160.8.camel at p-dhcp-333-72.rd.francetelecom.fr>
Content-Type: text/plain


> Intra-net where you are broadcasting updates or patches to a cluster
> of machines it makes since, but for peer-to-peer it just doesn't reap
> any benefits on the internet proper.

You are wrong, UDP is more and more adopted by end-user P2P software
because of its ability to transparently go through - in and out - many
types of NAT devices (which are themselves more and more popular among
home users). Incoming TCP traffic, on the other hand, often needs to be
specifically enabled on the NAT box.

For juicy details, you can read the RFC for the STUN protocol (Simple
Traversal of User Datagram Protocol - UDP - Through Network Address
Translators - NATs):
http://www.faqs.org/rfcs/rfc3489.html

Regards

Antoine.
Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.



From andrew-twisted at puzzling.org  Wed Apr  6 00:58:33 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 16:58:33 +1000
Subject: [andrew-twisted@puzzling.org: Re: [Twisted-Python] shedding root]
Message-ID: <20050406065833.GK7030@frobozz>

Matt forgot to CC the list (then so did I).

----- Forwarded message from Andrew Bennetts <andrew-twisted at puzzling.org> -----

Date: Wed, 6 Apr 2005 12:16:40 +1000
From: Andrew Bennetts <andrew-twisted at puzzling.org>
To: Matt Feifarek <matt.feifarek at gmail.com>
Subject: Re: [Twisted-Python] shedding root
User-Agent: Mutt/1.5.6+20040907i

On Tue, Apr 05, 2005 at 09:25:17PM -0400, Matt Feifarek wrote:
> Thanks.
> 
> For some boring reasons, I can't really structure my whole app as a
> twisted app; I just need some little  twisted bits.
> 
> It seems that it's hard to do that; you really have to drink the whole
> kool-aid to use twisted.

It's not too hard, it's just not particularly visibly documented, because
it's not the usual case.

twistd uses twisted.application.  You'll want to do something like:

    from twisted.application import service
    from twisted.scripts.twistd import shedPrivileges
    from twisted.internet import reactor
    import mymodule

    app = service.Application('foo')
    myservice = mymodule.MyService(...)
    myservice.setServiceParent(app)

    service.IService(app).privilegedStartService()
    shedPrivileges(euid, uid, gid)
    service.IService(app).startService()
    reactor.addSystemEventTrigger('before', 'shutdown',
                                  service.IService(app).stopService)
    reactor.run()

Where MyService is a subclass of service.Service that overrides startService
and privilegedStartService.  You can attach any number of these to the
service.Applicaiton with setServiceParent.  Basically, this is the same as
you'd do in a .tac file, followed by direct calls to privilegedStartService,
shedPrivileges, startService, etc, rather than relying on twistd to do them.

Services in twisted.application.internet, such as TCPService, already define
appropriate privilegedStartService methods.

If all you need is allowing non-root users to bind to privileged ports, you
might find the authbind utility from debian to be a useful way to leave your
code ignorant of these matters.

-Andrew.


----- End forwarded message -----



From solipsis at pitrou.net  Wed Apr  6 02:37:54 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 06 Apr 2005 10:37:54 +0200
Subject: [Twisted-Python] TCP File Copy
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE147B47BF@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B47BF@zajnb0406.za.deloitte.com>
Message-ID: <1112776674.7342.1.camel@p-dhcp-333-72.rd.francetelecom.fr>


> Does anyone have a good TCP file
> copy class ?

The easiest would be to look at Twisted's Web server capabilities. You
can in a few lines of code set up a simple HTTP daemon that will
automatically handle your file transfers. No need to bother with your
own file transfer protocol.






From solipsis at pitrou.net  Wed Apr  6 03:18:53 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 06 Apr 2005 11:18:53 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <332b7c5f05040512317e05717c@mail.gmail.com>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<332b7c5f05040512317e05717c@mail.gmail.com>
Message-ID: <1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>


Le mardi 05 avril 2005 à 15:31 -0400, Tom Carmichael a écrit :
> UDP has it's place, but typically vanilla file transfer isn't it. 
> 
> UDP traffic typically is harder to NAT rather than easier.  Since it
> is a stateless protocol, what is meant by a 'reply'?  How do you keep
> a forward and reverse translation table for the communications?

It is only harder for people who design NAT devices. ;)

But the real difference here between UDP and TCP, is that when you open
an outbound TCP connection, incoming TCP traffic will only be allowed
*for that connection*. Whereas if you send an outbound UDP message, *all
incoming UDP traffic* towards the originating address/port will be
enabled (at least on some NAT boxes).

This makes it easy for P2P systems to exchange messages between two
NATted clients without any proxying/tunnelling mechanism: you just have
to "punch a hole" by sending sporadic outgoing UDP traffic from your UDP
socket and then you can receive all UDP traffic coming to that socket.
You can't do that with TCP.

Regards

Antoine.





From mikah at ceruleansoftware.com  Wed Apr  6 07:09:26 2005
From: mikah at ceruleansoftware.com (mikah at ceruleansoftware.com)
Date: Wed, 6 Apr 2005 21:09:26 +0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 13, Issue 9
In-Reply-To: <E1DJ4Kb-0003mg-02@pyramid.twistedmatrix.com>
References: <E1DJ4Kb-0003mg-02@pyramid.twistedmatrix.com>
Message-ID: <20050406130926.GA31417@ceruleansoftware.com>

> From: James Y Knight <foom at fuhm.net>
> On Apr 5, 2005, at 9:33 PM, Stephen Waterbury wrote:
> > Whoa.  If true, that sure doesn't come out in the docs.
> > The link that you reference here says:
> >
> > "There are many ways in which your code will be called by
> > various parts of the Twisted framework by the time you're
> > done. The initial one we're going to focus on here is a
> > plug-in for the mktap utility."
> >
> > So although it's almost never useful, let's focus on a
> > plug-in for the mktap utility.  That's cute.
> 
> That intro sure is misleading! The rest of the document doesn't mention 
> mktap or plug-ins at all and in fact does document the currently 
> recommended best practices. Pretend that first paragraph didn't exist.


  This discussion caused me a lot of confusion. I dug around in
the archives and found a very _long_ thread ("In Defense of
TAPs") making some points to the opposite. When did tap files
go out of style? And what if I want to daemonize my application
anyway? How would I do so without mktap?

  Thanks!

mikah





From andrew-twisted at puzzling.org  Wed Apr  6 07:13:10 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 6 Apr 2005 23:13:10 +1000
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 13, Issue 9
In-Reply-To: <20050406130926.GA31417@ceruleansoftware.com>
References: <E1DJ4Kb-0003mg-02@pyramid.twistedmatrix.com>
	<20050406130926.GA31417@ceruleansoftware.com>
Message-ID: <20050406131310.GA31065@frobozz>

On Wed, Apr 06, 2005 at 09:09:26PM +0800, mikah at ceruleansoftware.com wrote:
[...]
> 
>   This discussion caused me a lot of confusion. I dug around in
> the archives and found a very _long_ thread ("In Defense of
> TAPs") making some points to the opposite. When did tap files
> go out of style? And what if I want to daemonize my application
> anyway? How would I do so without mktap?

TAP file don't do daemonisation, twistd does.  twistd works with both TAP
files and TAC files.  See the --python/-y option to twistd, and also
http://twistedmatrix.com/projects/core/documentation/howto/application.html.

-Andrew.




From symbiont at berlios.de  Wed Apr  6 08:34:02 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Wed, 6 Apr 2005 22:34:02 +0800
Subject: [Twisted-Python] shedding root
In-Reply-To: <04613f98cea3464224e1d2fa6a64ea4a@fuhm.net>
References: <6fb6dbfe050405174333b032d5@mail.gmail.com>
	<42533C68.4000402@comcast.net>
	<04613f98cea3464224e1d2fa6a64ea4a@fuhm.net>
Message-ID: <200504062234.02251.symbiont@berlios.de>

On Wednesday 06 April 2005 10:23, James Y Knight wrote:
> > So although it's almost never useful, let's focus on a
> > plug-in for the mktap utility.  That's cute.
>
> That intro sure is misleading! The rest of the document doesn't
> mention mktap or plug-ins at all and in fact does document the
> currently recommended best practices. Pretend that first paragraph
> didn't exist.

So, should there be a deprecation warning when running mktap too?  I see 
it plenty with *.tml plugin stuff... why not in plain mktap without 
stuff like buildbot, pynfo, et al.  Plus a pointer like "see 
http://twistedmatrix.com/whynottap.html" would be nice.

thanks,
-- 
-jeff



From exarkun at divmod.com  Wed Apr  6 10:33:49 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 06 Apr 2005 16:33:49 GMT
Subject: [Twisted-Python] shedding root
In-Reply-To: <200504062234.02251.symbiont@berlios.de>
Message-ID: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>



On Wed, 6 Apr 2005 22:34:02 +0800, Jeff Pitman <symbiont at berlios.de> wrote:
>On Wednesday 06 April 2005 10:23, James Y Knight wrote:
> > > So although it's almost never useful, let's focus on a
> > > plug-in for the mktap utility.  That's cute.
> >
> > That intro sure is misleading! The rest of the document doesn't
> > mention mktap or plug-ins at all and in fact does document the
> > currently recommended best practices. Pretend that first paragraph
> > didn't exist.
> 
> So, should there be a deprecation warning when running mktap too?  I see 
> it plenty with *.tml plugin stuff... why not in plain mktap without 
> stuff like buildbot, pynfo, et al.  Plus a pointer like "see 
> http://twistedmatrix.com/whynottap.html" would be nice.
> 
> thanks,

  There's no reason to break existing deployments, or even encourage authors to switch away from their current tap plugins, if tap plugins are satisfying their requirements.  Deprecating mktap would just create a lot of unnecessary work.

  A document explaining the capabilities and shortcomings of tap plugins and comparing these to the other options for deploying a Twisted application is a great idea.

  Jp



From m at maluke.com  Wed Apr  6 15:07:53 2005
From: m at maluke.com (maluke)
Date: Thu, 07 Apr 2005 00:07:53 +0300
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
Message-ID: <42544FA9.1000205@maluke.com>

See also http://airhook.org/ and http://sourceforge.net/projects/khashmir

-- 
малюк [ m at maluke.com // ICQ: 39027534 ]




From mesozoic at polynode.com  Wed Apr  6 16:31:04 2005
From: mesozoic at polynode.com (Alex Levy)
Date: Wed, 6 Apr 2005 18:31:04 -0400
Subject: [Twisted-Python] Re: UDP File Copy
In-Reply-To: <42544FA9.1000205@maluke.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
	<42544FA9.1000205@maluke.com>
Message-ID: <20050406223104.GP12619@perpetual.moxn.net>

It also bears mentioning that Glyph's nascent Q2Q library does precisely
what has been described in this thread: implement TCP-like transmission
controls on top of UDP to allow you to punch a hole through NAT. Except Q2Q
also does SSL, and is tied to JUICE (by far the easiest protocol API I've
ever seen in my life), so it's much cooler than just spewing UDP packets :)

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From ken at kenkinder.com  Wed Apr  6 22:48:02 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Wed, 06 Apr 2005 23:48:02 -0500
Subject: [Twisted-Python] shedding root
In-Reply-To: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>
References: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>
Message-ID: <4254BB82.7060707@kenkinder.com>

Jp Calderone wrote:

>  There's no reason to break existing deployments, or even encourage authors to switch away from their current tap plugins, if tap plugins are satisfying their requirements.  Deprecating mktap would just create a lot of unnecessary work.
>
>  A document explaining the capabilities and shortcomings of tap plugins and comparing these to the other options for deploying a Twisted application is a great idea.
>
>  Jp
>  
>
The same could be said of most of the components of Twisted. Should one 
use twisted.web, or nevow? Manhole telnet or Manhole PB? Etc. I realize 
there might be some debate on use recommendations, but certainly 
consensuses could be gathered.

Some place to start would be a big graph of the Twisted project, with 
flags for each component indicating stability, documentation status, 
future deprecation, and a short sentence about pro's and con's. Most of 
this information exists for these components, but it's dispersed among 
mailing list archives, docstrings, and once in a while, actual 
documentation.

Something like this would be quite valuable:

- twisted.project
  - ModuleA (Unstable) - Undocumented - Use ModuleB for future projects
  - ModuleB (Stable) - Documented
(etc...)

-k




From tv at tv.debian.net  Thu Apr  7 02:14:08 2005
From: tv at tv.debian.net (Tommi Virtanen)
Date: Thu, 07 Apr 2005 11:14:08 +0300
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<332b7c5f05040512317e05717c@mail.gmail.com>
	<1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <1112861648.21627.22.camel@pooch>

On Wed, 2005-04-06 at 11:18 +0200, Antoine Pitrou wrote:
> But the real difference here between UDP and TCP, is that when you open
> an outbound TCP connection, incoming TCP traffic will only be allowed
> *for that connection*. Whereas if you send an outbound UDP message, *all
> incoming UDP traffic* towards the originating address/port will be
> enabled (at least on some NAT boxes).
> 
> This makes it easy for P2P systems to exchange messages between two
> NATted clients without any proxying/tunnelling mechanism: you just have
> to "punch a hole" by sending sporadic outgoing UDP traffic from your UDP
> socket and then you can receive all UDP traffic coming to that socket.
> You can't do that with TCP.

You can't do that with NATted UDP, either. Quite many firewalls
want to match all of the (srcIP, srcPort, dstIP, dstPort) to match.





From solipsis at pitrou.net  Thu Apr  7 02:30:19 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Thu, 07 Apr 2005 10:30:19 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112861648.21627.22.camel@pooch>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<200504051735.17511.anthony@interlink.com.au>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<332b7c5f05040512317e05717c@mail.gmail.com>
	<1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<1112861648.21627.22.camel@pooch>
Message-ID: <1112862619.5094.2.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi again,

> You can't do that with NATted UDP, either. Quite many firewalls
> want to match all of the (srcIP, srcPort, dstIP, dstPort) to match.

Well, instead of claiming I'm an expert (!), I will hereby copy an
e-mail that's been posted a few months ago on the p2p-hackers
mailing-list by one of the Limewire developers. It talks about the
proportion of NAT devices which are compatible with the aforementioned
hack ;)

Regards

Antoine.



From:p2p-hackers-bounces at zgp.org [mailto:p2p-hackers-bounces at zgp.org] On
Behalf Of Greg Bildsonent: Wednesday, December 01, 2004 10:51 AM
To: Peer-to-peer development.
Subject: RE: [p2p-hackers] Why UDP and not TCP?
 

David,

Our operating environment has not yet stabilized - early beta testers
didn't get the proper port stability tests and our entire user base has
not been upgraded.  However, early indications are that 50 to 60 percent
of firewalled users will benefit.  Again though, the harshest firewalled
users probably have not had a good experience with P2P software so we
are working with a self selected crew.   This method does work with the
Windows XP firewall so we expect it to be widely successful as XP
becomes further adopted.  

One improvement that we can make is to our existing scheme is to handle
firewalls/NATs that use a sequential port assignment algorithm for each
attempt.  Rather than just trying a fixed port, we could try to
negotiate a connection with that port +1, +2 and +3.  I'm not sure what
percentage of users would really benefit from this though.

As has been mentioned here recently, we certainly have noticed that
incoming TCP connections are often possible after the same type of UDP
pinging.  We have no numbers on that though.

Thanks


-greg





From digi at treepy.com  Thu Apr  7 02:52:42 2005
From: digi at treepy.com (Patrick Lauber)
Date: Thu, 07 Apr 2005 10:52:42 +0200
Subject: [Twisted-Python] Re: UDP File Copy
In-Reply-To: <20050406223104.GP12619@perpetual.moxn.net>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>	<42544FA9.1000205@maluke.com>
	<20050406223104.GP12619@perpetual.moxn.net>
Message-ID: <4254F4DA.90408@treepy.com>

Alex Levy wrote:

>It also bears mentioning that Glyph's nascent Q2Q library does precisely
>what has been described in this thread: implement TCP-like transmission
>controls on top of UDP to allow you to punch a hole through NAT. Except Q2Q
>also does SSL, and is tied to JUICE (by far the easiest protocol API I've
>ever seen in my life), so it's much cooler than just spewing UDP packets :)
>
>  
>
Where can we find this Q2Q library and JUICE? google does not has an aswer.




From projects at reedflute.com  Thu Apr  7 06:19:26 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 07 Apr 2005 14:19:26 +0200
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112861648.21627.22.camel@pooch>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>	<200504051735.17511.anthony@interlink.com.au>	<2389d47305040508142bf4baf9@mail.gmail.com>	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>	<332b7c5f05040512317e05717c@mail.gmail.com>	<1112779133.7342.12.camel@p-dhcp-333-72.rd.francetelecom.fr>
	<1112861648.21627.22.camel@pooch>
Message-ID: <4255254E.5080509@reedflute.com>

Tommi Virtanen wrote:

>On Wed, 2005-04-06 at 11:18 +0200, Antoine Pitrou wrote:
>  
>
>>But the real difference here between UDP and TCP, is that when you open
>>an outbound TCP connection, incoming TCP traffic will only be allowed
>>*for that connection*. Whereas if you send an outbound UDP message, *all
>>incoming UDP traffic* towards the originating address/port will be
>>enabled (at least on some NAT boxes).
>>
>>This makes it easy for P2P systems to exchange messages between two
>>NATted clients without any proxying/tunnelling mechanism: you just have
>>to "punch a hole" by sending sporadic outgoing UDP traffic from your UDP
>>socket and then you can receive all UDP traffic coming to that socket.
>>You can't do that with TCP.
>>    
>>
>
>You can't do that with NATted UDP, either. Quite many firewalls
>want to match all of the (srcIP, srcPort, dstIP, dstPort) to match.
>
>
>  
>
Exactly. It  depends entirely on what you do with NAT. 

Some NAT boxes are stricter than others - but in principle I block 
anything weird or undesirable - most notably protocol hacks of this 
nature designed to circumvent firewalling.

Eugene

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From Henning.Ramm at mediapro-gmbh.de  Thu Apr  7 08:25:10 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 7 Apr 2005 16:25:10 +0200
Subject: [Twisted-Python] PB connection
Message-ID: <F92274058556DE42B94B148EEFB9183949E6AA@exchange-03.suedkurier.de>

I'm trying it again...

I got a working PB server (database proxy something).

A one-time client (like Howto-simpleclient) can connect and call remote functions.

My "real" client creates a PBClientFactory at startup and connects (reactor.connectTCP).
It has its own reactor and waits for files to write them to the database.
For each query it tries to get a RootObject, but that fails with 
"Connection was refused by other side: 10061: Unknown error."

Must I create a new factory or connect again for every call?

In the docs (http://twistedmatrix.com/documents/current/howto/pb-usage) 
it's rather confusing that the "complete example" uses TAP instead of "clean" code.

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From matt.feifarek at gmail.com  Thu Apr  7 08:58:19 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 10:58:19 -0400
Subject: [Twisted-Python] shedding root
In-Reply-To: <4254BB82.7060707@kenkinder.com>
References: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>
	<4254BB82.7060707@kenkinder.com>
Message-ID: <6fb6dbfe05040707583c1078ee@mail.gmail.com>

Ooh. The graph idea is excellent; just to get a sense of what's IN
Twisted. And perhaps as a navigation device for the docs.

I'm not a Twisted expert, but I have some skill with graphical
software; I could help make something like this happen, given interest
and technical guidance.



From matt.feifarek at gmail.com  Thu Apr  7 09:00:13 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 11:00:13 -0400
Subject: [Twisted-Python] reactor and FAMd
Message-ID: <6fb6dbfe050407080014ab65d9@mail.gmail.com>

I sent this a few days ago, but it never showed up; my apologies if it
eventually does show up, and we get a dupe.

I'm interested in using FAM/FAMd on Linux and to have its events
noticed by a twisted reactor.

I did some googling, but didn't find much.

Has anyone done this, or does anyone have any pointers on where to
begin my research? I know that the various linux desktops use FAM, and
there are some reactors keyed to the graphical toolkits that they
use... is that the way to do this?

Thanks.



From symbiont at berlios.de  Thu Apr  7 09:31:25 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Thu, 7 Apr 2005 23:31:25 +0800
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <6fb6dbfe050407080014ab65d9@mail.gmail.com>
References: <6fb6dbfe050407080014ab65d9@mail.gmail.com>
Message-ID: <200504072331.25527.symbiont@berlios.de>

On Thursday 07 April 2005 23:00, Matt Feifarek wrote:
> Has anyone done this, or does anyone have any pointers on where to
> begin my research? I know that the various linux desktops use FAM,
> and there are some reactors keyed to the graphical toolkits that they
> use... is that the way to do this?

Cut out the middle man (FAM) and go straight to the source (kernel):

http://cvs.sourceforge.net/viewcvs.py/buildbot/buildbot/buildbot/dnotify.py?view=markup

have fun,
-- 
-jeff



From exarkun at divmod.com  Thu Apr  7 12:19:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 07 Apr 2005 18:19:09 GMT
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <200504072331.25527.symbiont@berlios.de>
Message-ID: <20050407181909.13806.2061207495.divmod.quotient.51160@ohm>

On Thu, 7 Apr 2005 23:31:25 +0800, Jeff Pitman <symbiont at berlios.de> wrote:
>On Thursday 07 April 2005 23:00, Matt Feifarek wrote:
> > Has anyone done this, or does anyone have any pointers on where to
> > begin my research? I know that the various linux desktops use FAM,
> > and there are some reactors keyed to the graphical toolkits that they
> > use... is that the way to do this?
> 
> Cut out the middle man (FAM) and go straight to the source (kernel):
> 
> http://cvs.sourceforge.net/viewcvs.py/buildbot/buildbot/buildbot/dnotify.py?view=markup
> 
> have fun,
> -- 
> -jeff
> 

  Except dnotify is terrible.  There should be some inotify in Twisted shortly.

  Jp



From mesozoic at polynode.com  Thu Apr  7 13:21:15 2005
From: mesozoic at polynode.com (Alex Levy)
Date: Thu, 7 Apr 2005 15:21:15 -0400
Subject: [Twisted-Python] Re: Re: UDP File Copy
In-Reply-To: <4254F4DA.90408@treepy.com>
References: <B2ED2925358BE644B40D37F9E01ECE147B4462@zajnb0406.za.deloitte.com>
	<42544FA9.1000205@maluke.com>
	<20050406223104.GP12619@perpetual.moxn.net>
	<4254F4DA.90408@treepy.com>
Message-ID: <20050407192115.GQ12619@perpetual.moxn.net>

For now, it's at svn://divmod.org/svn/Quotient/branches/glyph/pycon-q2q/

-- 
Alex Levy
WWW: http://mesozoic.geecs.org/
 
"Never let your sense of morals prevent you from doing what is right."
 -- Salvor Hardin, Isaac Asimov's _Foundation_



From ken at kenkinder.com  Thu Apr  7 14:25:26 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 07 Apr 2005 15:25:26 -0500
Subject: [Twisted-Python] shedding root
In-Reply-To: <6fb6dbfe05040707583c1078ee@mail.gmail.com>
References: <20050406163349.13806.977231772.divmod.quotient.48829@ohm>	<4254BB82.7060707@kenkinder.com>
	<6fb6dbfe05040707583c1078ee@mail.gmail.com>
Message-ID: <42559736.4010405@kenkinder.com>

Matt Feifarek wrote:

>Ooh. The graph idea is excellent; just to get a sense of what's IN
>Twisted. And perhaps as a navigation device for the docs.
>
>I'm not a Twisted expert, but I have some skill with graphical
>software; I could help make something like this happen, given interest
>and technical guidance.
>  
>
So, most of the docs are API docs, which are generated by EpyDoc, so 
that might be tricky. Personally I'd be happy with a simple html table 
somewhere.




From michaelschneider at fuse.net  Thu Apr  7 15:33:52 2005
From: michaelschneider at fuse.net (Michael Schneider)
Date: Thu, 07 Apr 2005 17:33:52 -0400
Subject: [Twisted-Python] 2.0 windows installers
Message-ID: <4255A740.80400@fuse.net>

Sorry for the supid question,  I have looked around the twisted site and 
I can't find the windows installer for twisted 2.0.

Could some kind person point me to it?

Thanks
Mike



From matt.feifarek at gmail.com  Thu Apr  7 15:45:10 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 17:45:10 -0400
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <20050407181909.13806.2061207495.divmod.quotient.51160@ohm>
References: <200504072331.25527.symbiont@berlios.de>
	<20050407181909.13806.2061207495.divmod.quotient.51160@ohm>
Message-ID: <6fb6dbfe0504071445117938e3@mail.gmail.com>

Err.

Why is it terrible? And, any idea what "shortly" will be? Give or
take, of course.

On Apr 7, 2005 2:19 PM, Jp Calderone <exarkun at divmod.com> wrote:
> 
>   Except dnotify is terrible.  There should be some inotify in Twisted shortly.
> 
>   Jp



From exarkun at divmod.com  Thu Apr  7 16:03:48 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 07 Apr 2005 22:03:48 GMT
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <6fb6dbfe0504071445117938e3@mail.gmail.com>
Message-ID: <20050407220348.13806.439815873.divmod.quotient.51500@ohm>

On Thu, 7 Apr 2005 17:45:10 -0400, Matt Feifarek <matt.feifarek at gmail.com> wrote:
>Err.
> 
> Why is it terrible? And, any idea what "shortly" will be? Give or
> take, of course.
> 
> On Apr 7, 2005 2:19 PM, Jp Calderone <exarkun at divmod.com> wrote:
> > 
> >   Except dnotify is terrible.  There should be some inotify in Twisted shortly.
> > 
> >   Jp
> 

  A brief summary is at the top of <http://lwn.net/Articles/113416/>.  "Shortly" is probably on the order of a week.

  Jp



From matt.feifarek at gmail.com  Thu Apr  7 16:54:39 2005
From: matt.feifarek at gmail.com (Matt Feifarek)
Date: Thu, 7 Apr 2005 18:54:39 -0400
Subject: [Twisted-Python] reactor and FAMd
In-Reply-To: <20050407220348.13806.439815873.divmod.quotient.51500@ohm>
References: <6fb6dbfe0504071445117938e3@mail.gmail.com>
	<20050407220348.13806.439815873.divmod.quotient.51500@ohm>
Message-ID: <6fb6dbfe050407155476f372f3@mail.gmail.com>

Excellent! Thanks. This looks very promising.

On Apr 7, 2005 6:03 PM, Jp Calderone <exarkun at divmod.com> wrote:

>   A brief summary is at the top of <http://lwn.net/Articles/113416/>.  "Shortly" is probably on the order of a week.
> 
>   Jp



From Henning.Ramm at mediapro-gmbh.de  Fri Apr  8 01:27:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 8 Apr 2005 09:27:16 +0200
Subject: [Twisted-Python] PB connection
Message-ID: <F92274058556DE42B94B148EEFB9183949E6AB@exchange-03.suedkurier.de>

>"Connection was refused by other side: 10061: Unknown error."

Stupid error - I had a typo in my connection config.
Sorry for bothering you.

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From Henning.Ramm at mediapro-gmbh.de  Fri Apr  8 07:29:06 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 8 Apr 2005 15:29:06 +0200
Subject: [Twisted-Python] generic enterprise.row.RowObject?
Message-ID: <F92274058556DE42B94B148EEFB9183949E6AD@exchange-03.suedkurier.de>

Ahoi!

For a simple database abstraction module I once wrote some table class.
Now I'm trying to port it to twisted and thought it should inherit from
enterprise.row.RowObject. (I hope that isn't deprecated?)

RowObject urges me to declare all the table properties as class variables.
My old class reads this information directly from the database (show fields)
to adapt itself to a set of similar tables, and I'd like to keep this feature.

Seems like I would need some RowObjectFactory that takes a connection pool
and a table name and returns a RowObject - or how would you do this?

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From foom at fuhm.net  Fri Apr  8 09:17:24 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 8 Apr 2005 11:17:24 -0400
Subject: [Twisted-Python] generic enterprise.row.RowObject?
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E6AD@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E6AD@exchange-03.suedkurier.de>
Message-ID: <658cf90dfa403338e6c822ee62071f15@fuhm.net>

On Apr 8, 2005, at 9:29 AM, <Henning.Ramm at mediapro-gmbh.de> wrote:
> Ahoi!
>
> For a simple database abstraction module I once wrote some table class.
> Now I'm trying to port it to twisted and thought it should inherit from
> enterprise.row.RowObject. (I hope that isn't deprecated?)
>
> RowObject urges me to declare all the table properties as class 
> variables.
> My old class reads this information directly from the database (show 
> fields)
> to adapt itself to a set of similar tables, and I'd like to keep this 
> feature.
>
> Seems like I would need some RowObjectFactory that takes a connection 
> pool
> and a table name and returns a RowObject - or how would you do this?

RowObject isn't deprecated, but is woefully unmaintained. It is missing 
a bunch of functionality that is probably necessary for many 
applications. It would be nice if someone took it over and added the 
necessary functionality. As such, the recommendation for it has 
generally been "if you like it, go ahead and use it, but you'll 
probably find it's missing something you need." If you're comfortable 
with that, and are willing to extend it as necessary, that's great. 
Even better if you submit the changes back. I haven't looked at row in 
a long time, but I thought it did have some functionality in there 
meant for autogenerating the class from the database schema. Maybe I 
was just wishing it did, though.

James




From adrian.libotean at asylum-studios.ro  Sun Apr 10 07:13:40 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 16:13:40 +0300
Subject: [Twisted-Python] UDP asynchronous communication
Message-ID: <42592684.2000802@asylum-studios.ro>

Hello,

First of all I must let you know that I am new to Twisted.

I need to implement a server discovery mechanism for my application. The 
way I chose to implement it is this:

	1. The client, when started, sends a broadcast message requesting 
servers to make their presence known (UDP broadcast)
	2. The server responds to this request using the same port on the 
sender's IP to reply (UDP normal message)
	3. ...

Now the problem I faced is that from the examples I found on the web 
(http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
multicast UDP messages, are done using listenUDP on both sides (server 
and client) and this approach is not good for me because I need a 
non-blocking communication mechanism on the client-side.



From tv at twistedmatrix.com  Sun Apr 10 09:08:39 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 10 Apr 2005 18:08:39 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42592684.2000802@asylum-studios.ro>
References: <42592684.2000802@asylum-studios.ro>
Message-ID: <42594177.7050809@twistedmatrix.com>

Adrian Libotean wrote:
> Now the problem I faced is that from the examples I found on the web 
> (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
> multicast UDP messages, are done using listenUDP on both sides (server 
> and client) and this approach is not good for me because I need a 
> non-blocking communication mechanism on the client-side.

Sounds _very_ much like you have misunderstood something.
Twisted functionality is almost without exception non-blocking.
Please re-read and try to ask a more specific question.



From adrian.libotean at asylum-studios.ro  Sun Apr 10 09:38:42 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 18:38:42 +0300
Subject: [Twisted-Python] UDP asynchronous communication
Message-ID: <42594882.5080109@asylum-studios.ro>

Trust me I've read the document and after:

reactor.listenUDP(...)
reactor.run()

the *client* just waits for incoming traffic.
I know that Twisted is not supposed to be like that. But please take a
moment and read this:
http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html#auto3
before you give me a *prebuilt* answer. Thank you.

Tommi Virtanen wrote:
> Adrian Libotean wrote:
> 
>> Now the problem I faced is that from the examples I found on the web 
>> (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
>> multicast UDP messages, are done using listenUDP on both sides (server 
>> and client) and this approach is not good for me because I need a 
>> non-blocking communication mechanism on the client-side.
> 
> 
> Sounds _very_ much like you have misunderstood something.
> Twisted functionality is almost without exception non-blocking.
> Please re-read and try to ask a more specific question.




From jarrod.roberson at gmail.com  Sun Apr 10 09:54:49 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sun, 10 Apr 2005 11:54:49 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42592684.2000802@asylum-studios.ro>
References: <42592684.2000802@asylum-studios.ro>
Message-ID: <2389d47305041008545807e5d@mail.gmail.com>

On Apr 10, 2005 9:13 AM, Adrian Libotean
<adrian.libotean at asylum-studios.ro> wrote:
> Hello,
> 
> First of all I must let you know that I am new to Twisted.
> 
> I need to implement a server discovery mechanism for my application. The
> way I chose to implement it is this:
> 
>         1. The client, when started, sends a broadcast message requesting
> servers to make their presence known (UDP broadcast)
>         2. The server responds to this request using the same port on the
> sender's IP to reply (UDP normal message)
>         3. ...
> 
> Now the problem I faced is that from the examples I found on the web
> (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for
> multicast UDP messages, are done using listenUDP on both sides (server
> and client) and this approach is not good for me because I need a
> non-blocking communication mechanism on the client-side.
> 
> _______________________________________________

Why are you re-inventing the wheel, Dynamic Server discovery is
already implemented with
ZeroConf ( also known as Rendezvous on OSX ) thru mDNS.

I have working example code for twisted that I got form people on this
list if you want to see it.

-- 
If you don't know what you want, you probably need a nap.



From tv at twistedmatrix.com  Sun Apr 10 10:09:48 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 10 Apr 2005 19:09:48 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42594882.5080109@asylum-studios.ro>
References: <42594882.5080109@asylum-studios.ro>
Message-ID: <42594FCC.9080903@twistedmatrix.com>

Adrian Libotean wrote:
> Trust me I've read the document and after:
> 
> reactor.listenUDP(...)
> reactor.run()
> 
> the *client* just waits for incoming traffic.

That just tells me you have not understood twisted yet.

Set up things to happen, then call reactor.run() at the end
of your main function.

If you only set up one thing to happen, only one thing will
happen. That may be alright for the example, which only wanted
to do one things; real applications tend to be a bit more
complex.

Also, please do not top-post.



From adrian.libotean at asylum-studios.ro  Sun Apr 10 10:13:18 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 19:13:18 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <2389d47305041008545807e5d@mail.gmail.com>
References: <42592684.2000802@asylum-studios.ro>
	<2389d47305041008545807e5d@mail.gmail.com>
Message-ID: <4259509E.4000402@asylum-studios.ro>

A few reasons for this are:

1. I can have multiple servers running on the same machine (single Ip 
address) on different ports
2. The server must reply with more than just an IP: it sends to the 
client specific data: amonst wich is the TCP port that the server is 
listening for connections from the client which can vary according to 
settings

jarrod roberson wrote:
> On Apr 10, 2005 9:13 AM, Adrian Libotean
> <adrian.libotean at asylum-studios.ro> wrote:
> 
>>Hello,
>>
>>First of all I must let you know that I am new to Twisted.
>>
>>I need to implement a server discovery mechanism for my application. The
>>way I chose to implement it is this:
>>
>>        1. The client, when started, sends a broadcast message requesting
>>servers to make their presence known (UDP broadcast)
>>        2. The server responds to this request using the same port on the
>>sender's IP to reply (UDP normal message)
>>        3. ...
>>
>>Now the problem I faced is that from the examples I found on the web
>>(http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for
>>multicast UDP messages, are done using listenUDP on both sides (server
>>and client) and this approach is not good for me because I need a
>>non-blocking communication mechanism on the client-side.
>>
>>_______________________________________________
> 
> 
> Why are you re-inventing the wheel, Dynamic Server discovery is
> already implemented with
> ZeroConf ( also known as Rendezvous on OSX ) thru mDNS.
> 
> I have working example code for twisted that I got form people on this
> list if you want to see it.
> 



From adrian.libotean at asylum-studios.ro  Sun Apr 10 10:18:38 2005
From: adrian.libotean at asylum-studios.ro (Adrian Libotean)
Date: Sun, 10 Apr 2005 19:18:38 +0300
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42594FCC.9080903@twistedmatrix.com>
References: <42594882.5080109@asylum-studios.ro>
	<42594FCC.9080903@twistedmatrix.com>
Message-ID: <425951DE.3090607@asylum-studios.ro>

Tommi Virtanen wrote:
 > Adrian Libotean wrote:
 >
 >> Trust me I've read the document and after:
 >>
 >> reactor.listenUDP(...)
 >> reactor.run()
 >>
 >> the *client* just waits for incoming traffic.
 >
 >
 > Set up things to happen, then call reactor.run() at the end
 > of your main function.

That's the problem: I just want to start the client and then, when the 
user selects "Scan" from the interface, I must send the broadcast and 
then act on replies from servers completely independent of the main 
thread of the application.

So I have two choices: I run the reactor in a separate thread, or I find 
a way to do a non-blocking communication using onReceive/onSend events.

 > Also, please do not top-post.

Sorry for that.



From jarrod.roberson at gmail.com  Sun Apr 10 10:29:59 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sun, 10 Apr 2005 12:29:59 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <425951DE.3090607@asylum-studios.ro>
References: <42594882.5080109@asylum-studios.ro>
	<42594FCC.9080903@twistedmatrix.com>
	<425951DE.3090607@asylum-studios.ro>
Message-ID: <2389d4730504100929a75abe1@mail.gmail.com>

> > So I have two choices: I run the reactor in a separate thread, or I find
> a way to do a non-blocking communication using onReceive/onSend events.
> 

no you don't understand the bigger picture with Twisted, it is a
hollywood system, "Don't call us, we'll call you".

If you would stop for a minute, take a step back and go READ about
ZeroConf/Apple Rendezvous and then look at the mDNS implementations in
Python you might understand you are doing things backwards.

You register callbacks with Twisted, it calls them when it needs to you.

Read about the Application and Service objects, what you want to do is
more than is in the tutorial and examples.

My suggestion is to DO the entire Echo how-to over and over until you
"get it" about the Application and Service interfaces and objects and
the .tac file concept.



From jarrod.roberson at gmail.com  Sun Apr 10 10:30:21 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sun, 10 Apr 2005 12:30:21 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <425951DE.3090607@asylum-studios.ro>
References: <42594882.5080109@asylum-studios.ro>
	<42594FCC.9080903@twistedmatrix.com>
	<425951DE.3090607@asylum-studios.ro>
Message-ID: <2389d47305041009301b336cc7@mail.gmail.com>

> > So I have two choices: I run the reactor in a separate thread, or I find
> a way to do a non-blocking communication using onReceive/onSend events.
> 

no you don't understand the bigger picture with Twisted, it is a
hollywood system, "Don't call us, we'll call you".

If you would stop for a minute, take a step back and go READ about
ZeroConf/Apple Rendezvous and then look at the mDNS implementations in
Python you might understand you are doing things backwards.

You register callbacks with Twisted, it calls them when it needs to you.

Read about the Application and Service objects, what you want to do is
more than is in the tutorial and examples.

My suggestion is to DO the entire Echo how-to over and over until you
"get it" about the Application and Service interfaces and objects and
the .tac file concept.



From exarkun at divmod.com  Sun Apr 10 10:48:40 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sun, 10 Apr 2005 16:48:40 GMT
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <425951DE.3090607@asylum-studios.ro>
Message-ID: <20050410164840.13806.1301146272.divmod.quotient.57437@ohm>

On Sun, 10 Apr 2005 19:18:38 +0300, Adrian Libotean <adrian.libotean at asylum-studios.ro> wrote:
>Tommi Virtanen wrote:
>  > Adrian Libotean wrote:
>  >
>  >> Trust me I've read the document and after:
>  >>
>  >> reactor.listenUDP(...)
>  >> reactor.run()
>  >>
>  >> the *client* just waits for incoming traffic.
>  >
>  >
>  > Set up things to happen, then call reactor.run() at the end
>  > of your main function.
> 
> That's the problem: I just want to start the client and then, when the 
> user selects "Scan" from the interface, I must send the broadcast and 
> then act on replies from servers completely independent of the main 
> thread of the application.
> 
> So I have two choices: I run the reactor in a separate thread, or I find 
> a way to do a non-blocking communication using onReceive/onSend events.
> 

  The latter sounds like a great option to me.  Using a fictional widget library and a mega trivial protocol that just sends around "int:string" packets, here's how you do it:

    from twisted.internet import protocol, defer

    class ServiceDiscoveryDatagramProtocol(protocol.DatagramProtocol):
        def __init__(self):
            self.packets = {}
            self.counter = 0

        def _makeAPacket(self, hint):
            self.counter += 1
            d = self.packets[self.counter] = defer.Deferred()
            return d, '%d:%s' % (self.counter, hint)

        def _parseAPacket(self, bytes):
            counter, payload = bytes.split(':')
            return self.packets.pop(int(counter)), payload

        def discoverSomething(self, hint):
            d, pkt = self._makeAPacket(hint)
            self.transport.write(pkt)
            return d

        def datagramReceived(self, dgram, addr):
            d, stuff = self._parseAPacket(dgram)
            d.callback(stuff)

    from fiction import widgetlib

    class MainWidget(widgetlib.Frame):
        def __init__(self, proto):
            self.proto = proto
            self.discoverButton = widgetlib.Button(self, 
                                                   onClick=self._clicked)
            self.textArea = widgetlib.Text(self, 'Nothing to see')
            self.textArea.show()
            self.discoverButton.show()

        def _clicked(self):
            d = self.proto.discoverSomething('puppies')
            d.addCallback(self._discovered)

        def _discovered(self, what):
            self.textArea.setText(str(what))

    proto = ServiceDiscoveryDatagramProtocol()
    reactor.listenUDP(0, proto)
    main = MainWidget(proto)
    main.show()
    reactor.run()

  As you can see, all that is involved is hooking up sources of events to code which is interested in events.  Your widget library should generate events for user input.  Twisted will generate events for network traffic.  Each lets you define a function which is invoked when events occur.  All you need to do is define the functions in such a way as to make your program do what you want it to do :)

  Hope this helps,

  Jp



From itamar at itamarst.org  Sun Apr 10 09:17:23 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 10 Apr 2005 11:17:23 -0400
Subject: [Twisted-Python] UDP asynchronous communication
In-Reply-To: <42594177.7050809@twistedmatrix.com>
References: <42592684.2000802@asylum-studios.ro>
	<42594177.7050809@twistedmatrix.com>
Message-ID: <1113146243.16466.20.camel@localhost.localdomain>

On Sun, 2005-04-10 at 18:08 +0300, Tommi Virtanen wrote:
> Adrian Libotean wrote:
> > Now the problem I faced is that from the examples I found on the web 
> > (http://twisted.sourceforge.net/TwistedDocs-1.1.0/howto/udp.html), for 
> > multicast UDP messages, are done using listenUDP on both sides (server 
> > and client) and this approach is not good for me because I need a 
> > non-blocking communication mechanism on the client-side.
> 
> Sounds _very_ much like you have misunderstood something.
> Twisted functionality is almost without exception non-blocking.
> Please re-read and try to ask a more specific question.
 
Also note those docs are *very* out of date - multicast uses
listenMulticast these days. Other than that it's mostly identical
though.




From melirizarry at adelphia.net  Sun Apr 10 17:52:57 2005
From: melirizarry at adelphia.net (Mel Irizarry)
Date: Sun, 10 Apr 2005 16:52:57 -0700
Subject: [Twisted-Python] Any good examples?
Message-ID: <4259BC59.7060106@adelphia.net>

I am in need of a server that will allow multiple clients to connect, 
take a MySQL Statement from the client, execute it and return the 
results to the client.  Is there a good example that I could download 
and perhaps modify?

I've been reading the Twisted docs since yesterday but I am a bit 
overwhelmed by the design of the framework.  Mktap looks to be the way 
to go but I need more info especially on the factory and protocol classes. 

-- 
Best Regards,

Mel Irizarry

-----------------------------
I can't go to school 'cause I ain't got a gun
I ain't got a gun 'cause I ain't got a job
I can't get a job 'cause I can't go to school

Lost in America - Alice Cooper




From exarkun at divmod.com  Sun Apr 10 18:15:32 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 11 Apr 2005 00:15:32 GMT
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net>
Message-ID: <20050411001532.13806.1063224397.divmod.quotient.58059@ohm>

On Sun, 10 Apr 2005 16:52:57 -0700, Mel Irizarry <melirizarry at adelphia.net> wrote:
>I am in need of a server that will allow multiple clients to connect, 
> take a MySQL Statement from the client, execute it and return the 
> results to the client.  Is there a good example that I could download 
> and perhaps modify?
> 
> I've been reading the Twisted docs since yesterday but I am a bit 
> overwhelmed by the design of the framework.  Mktap looks to be the way 
> to go but I need more info especially on the factory and protocol classes. 
> 

  These links might get you started:

    <http://twistedmatrix.com/documents/current/howto/servers>

    <http://twistedmatrix.com/documents/current/howto/enterprise>

  Jp



From orbitz at ezabel.com  Sun Apr 10 18:20:53 2005
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Sun, 10 Apr 2005 20:20:53 -0400
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net>
References: <4259BC59.7060106@adelphia.net>
Message-ID: <0c4cffaab66f22110c37ea564437c6cd@ezabel.com>

There are plenty of examples on how to use adbapi and how to write 
servers. 1 + 1 = 2.


On Apr 10, 2005, at 7:52 PM, Mel Irizarry wrote:

> I am in need of a server that will allow multiple clients to connect, 
> take a MySQL Statement from the client, execute it and return the 
> results to the client.  Is there a good example that I could download 
> and perhaps modify?
>
> I've been reading the Twisted docs since yesterday but I am a bit 
> overwhelmed by the design of the framework.  Mktap looks to be the way 
> to go but I need more info especially on the factory and protocol 
> classes.
> -- 
> Best Regards,
>
> Mel Irizarry
>
> -----------------------------
> I can't go to school 'cause I ain't got a gun
> I ain't got a gun 'cause I ain't got a job
> I can't get a job 'cause I can't go to school
>
> Lost in America - Alice Cooper
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From mikah at ceruleansoftware.com  Mon Apr 11 04:48:30 2005
From: mikah at ceruleansoftware.com (mikah at ceruleansoftware.com)
Date: Mon, 11 Apr 2005 18:48:30 +0800
Subject: [Twisted-Python] re: shedding root
Message-ID: <20050411104830.GA15025@ceruleansoftware.com>

Andrew Bennetts wrote:
> TAP file don't do daemonisation, twistd does.  twistd works
> with both TAP files and TAC files.  See the --python/-y option
> to twistd, and also
> http://twistedmatrix.com/projects/core/documentation/howto/application.html.
>
> -Andrew.


  Thanks Andrew. I got it figured out. I've converted my TAP
into a TAC. No problems encountered, and I appreciate the fact
that I don't need to run mktap in the development cycle.

  Thanks!

mikah





From foom at fuhm.net  Mon Apr 11 08:32:08 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 11 Apr 2005 10:32:08 -0400
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <d5d825ea614d199cd4f38804adf4a48b@fuhm.net>

Bug summary
______________________
Since 2005-04-05 15:31:47.510000:
  Bugs opened: 7   Bugs closed: 2   Total open bugs: 337 (+5)
   Urgent: 4 (+1)
   Bug: 135 (+1)
   Feature: 129 (+3)
   Wish: 69 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[DOCUMENTATION] Twisted dependancy list  (5 days ago)
        http://twistedmatrix.com/bugs/issue967 opened by jknight

                     ==== Bug ====
[DOCUMENTATION] epyrun dies with an internal error  (9 hours ago)
        http://twistedmatrix.com/bugs/issue973 opened by Ycros

No .spec file in tarball as indicated by INSTALL file  (3 days ago)
        http://twistedmatrix.com/bugs/issue969 opened by bjorn

[NAMES, WIN32] [PATCH] Problems with Twisted Names on Windows  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue970 opened by jojo

                     ==== Feature ====
Linux inotify support in twisted core  (yesterday)
        http://twistedmatrix.com/bugs/issue972 opened by exarkun

cddb client protocol  (2 days ago)
        http://twistedmatrix.com/bugs/issue971 opened by rhymes

[DOCUMENTATION] "Deploying  Twisted Applications" howto  (4 days ago)
        http://twistedmatrix.com/bugs/issue968 opened by itamarst

Bugs Closed
______________________
                     ==== Bug ====
[CORE] [PATCH] make LoopingCall.stop() stop the loop immediately  (1 
month ago)
        http://twistedmatrix.com/bugs/issue911 opened by zooko, closed 
by exarkun

[DOCUMENTATION, LORE] some PB howtos have empty examples  (6 days ago)
        http://twistedmatrix.com/bugs/issue963 opened by warner, closed 
by warner




From bv at bnl.gov  Mon Apr 11 08:42:57 2005
From: bv at bnl.gov (Brett Viren)
Date: Mon, 11 Apr 2005 10:42:57 -0400
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net> (Mel Irizarry's message of
	"Sun, 10 Apr 2005 16:52:57 -0700")
References: <4259BC59.7060106@adelphia.net>
Message-ID: <ir4u0mdbci6.fsf@minos.phy.bnl.gov>

Mel Irizarry <melirizarry at adelphia.net> writes:

> I am in need of a server that will allow multiple clients to connect,
> take a MySQL Statement from the client, execute it and return the
> results to the client.  Is there a good example that I could download
> and perhaps modify?

I must not understand because this is exactly what "mysqld" does.

-Brett.



From anthony at interlink.com.au  Mon Apr 11 09:33:05 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 12 Apr 2005 01:33:05 +1000
Subject: [Twisted-Python] UDP File Copy
In-Reply-To: <1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <20050404125312.13806.1975428556.divmod.quotient.44093@ohm>
	<2389d47305040508142bf4baf9@mail.gmail.com>
	<1112714804.13160.8.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <200504120133.06848.anthony@interlink.com.au>

On Wednesday 06 April 2005 01:26, Antoine Pitrou wrote:
> You are wrong, UDP is more and more adopted by end-user P2P software
> because of its ability to transparently go through - in and out - many
> types of NAT devices (which are themselves more and more popular among
> home users). Incoming TCP traffic, on the other hand, often needs to be
> specifically enabled on the NAT box.

Bwahahahahahahaha. No, really - thanks for this. I haven't laughed so hard
all day.

> For juicy details, you can read the RFC for the STUN protocol (Simple
> Traversal of User Datagram Protocol - UDP - Through Network Address
> Translators - NATs):
> http://www.faqs.org/rfcs/rfc3489.html

STUN helps, but doesn't alter the fact that UDP + NAT is an absolute A-grade
disaster.  If you think that UDP will somehow make your software more 
reliable in the face of NATs, you're in for a rude rude surprise.

In case you're wondering, I know what I'm talking about here - I've 
implemented STUN as part of shtoom, and it really only helps a small 
amount. NAT + UDP == a world of hurt.

The only robust way to traverse a NAT with UDP is to use UPnP. And 
yes, I still regard UPnP as one of the worst protocols ever invented. 


-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From melirizarry at adelphia.net  Mon Apr 11 13:28:18 2005
From: melirizarry at adelphia.net (Mel Irizarry)
Date: Mon, 11 Apr 2005 12:28:18 -0700
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <ir4u0mdbci6.fsf@minos.phy.bnl.gov>
References: <4259BC59.7060106@adelphia.net> <ir4u0mdbci6.fsf@minos.phy.bnl.gov>
Message-ID: <425ACFD2.90405@adelphia.net>

Brett Viren wrote:

>Mel Irizarry <melirizarry at adelphia.net> writes:
>
>  
>
>>I am in need of a server that will allow multiple clients to connect,
>>take a MySQL Statement from the client, execute it and return the
>>results to the client.  Is there a good example that I could download
>>and perhaps modify?
>>    
>>
>
>I must not understand because this is exactly what "mysqld" does.
>
>-Brett.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>
I do not want the clients to connect directly to MySQL.  It's a security 
issue.

-- 
Best Regards,

Mel Irizarry

-----------------------------
I can't go to school 'cause I ain't got a gun
I ain't got a gun 'cause I ain't got a job
I can't get a job 'cause I can't go to school

Lost in America - Alice Cooper

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050411/1268b400/attachment.html>

From darran.edmundson at anu.edu.au  Mon Apr 11 21:29:11 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Tue, 12 Apr 2005 13:29:11 +1000
Subject: [Twisted-Python] simple multicast beacon problem ...
Message-ID: <425B4087.4000701@anu.edu.au>


I'm relatively new to Twisted and am struggling to create a multicast
beacon with the application framework.   This beacon simply sends out
a datagram every second, no listening at all. I've appended a short sample
program and traceback to this email in the hope that someone can
point out the presumably simple usage error.  For the life of me I can't
spot it.  Here's the last bit of the traceback:

2005/04/12 13:15 EST [-]     p = udp.MulticastPort(port, protocol, 
interface, maxPacketSize, self)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/udp.py", 
line 66, in __init__
2005/04/12 13:15 EST [-]     assert isinstance(proto, 
protocol.DatagramProtocol)
2005/04/12 13:15 EST [-] AssertionError

A quick debug shows that proto is HeartBeatFactory rather than its class 
attribute protocol.
Any help is much appreciated.

Cheers,
Darran

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088

------------------------------------- application.py 
---------------------------------------------------

from twisted.internet import protocol, reactor
from twisted.internet import threads
from twisted.application import internet, service

class HeartBeat(protocol.DatagramProtocol):

     def start_protocol(self):
         self.send_datagram()

     def send_datagram(self):
 
self.transport.write("message",(self.factory.group,self.factory.port))
         self.reactor.callLater(1,self.send_datagram)


class HeartBeatFactory(protocol.ServerFactory):
     protocol = HeartBeat

     def __init__(self,group,port):
         self.group = group
         self.port = port

factory = HeartBeatFactory("234.32.23.1", 9999)
application = service.Application('HeartBeat')
service = internet.MulticastServer(9999, factory, interface='0.0.0.0')
service.setServiceParent(application)


------------------------------------- traceback 
---------------------------------------------------

$ python twistd.py -noy application.py
2005/04/12 13:15 EST [-] Log opened.
2005/04/12 13:15 EST [-] twistd 1.1.1 (/usr/bin/python 2.3.0) starting up
2005/04/12 13:15 EST [-] reactor class: 
twisted.internet.default.SelectReactor
2005/04/12 13:15 EST [-] Loading application.py...
2005/04/12 13:15 EST [-] Loaded.
2005/04/12 13:15 EST [-] Traceback (most recent call last):
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 192, in ?
2005/04/12 13:15 EST [-]     run()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 188, in run
2005/04/12 13:15 EST [-]     app.run(runApp, ServerOptions)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/app.py", 
line 200, in run
2005/04/12 13:15 EST [-]     runApp(config)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 179, in runApp
2005/04/12 13:15 EST [-]     startApplication(config, application)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/scripts/twistd.py", 
line 163, in startApplication
2005/04/12 13:15 EST [-] 
service.IService(application).privilegedStartService()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/service.py", 
line 188, in privilegedStartService
2005/04/12 13:15 EST [-]     service.privilegedStartService()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/internet.py", 
line 53, in privilegedStartService
2005/04/12 13:15 EST [-]     self._port = self._getPort()
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/application/internet.py", 
line 68, in _getPort
2005/04/12 13:15 EST [-]     return getattr(reactor, 
'listen'+self.method)(*self.args, **self.kwargs)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/default.py", 
line 210, in listenMulticast
2005/04/12 13:15 EST [-]     p = udp.MulticastPort(port, protocol, 
interface, maxPacketSize, self)
2005/04/12 13:15 EST [-]   File 
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/udp.py", 
line 66, in __init__
2005/04/12 13:15 EST [-]     assert isinstance(proto, 
protocol.DatagramProtocol)
2005/04/12 13:15 EST [-] AssertionError



From exarkun at divmod.com  Mon Apr 11 21:50:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 12 Apr 2005 03:50:39 GMT
Subject: [Twisted-Python] simple multicast beacon problem ...
In-Reply-To: <425B4087.4000701@anu.edu.au>
Message-ID: <20050412035039.13806.1288994948.divmod.quotient.60503@ohm>

On Tue, 12 Apr 2005 13:29:11 +1000, Darran Edmundson <darran.edmundson at anu.edu.au> wrote:
>
> I'm relatively new to Twisted and am struggling to create a multicast
> beacon with the application framework.   This beacon simply sends out
> a datagram every second, no listening at all. I've appended a short sample
> program and traceback to this email in the hope that someone can
> point out the presumably simple usage error.  For the life of me I can't
> spot it.  Here's the last bit of the traceback:
> 
> [snip]

  UDP and multicast don't use factories.  Instantiate your DatagramProtocol directly and pass it to listenMulticast().

  Jp



From orbitz at ezabel.com  Tue Apr 12 05:55:53 2005
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Tue, 12 Apr 2005 07:55:53 -0400
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <425ACFD2.90405@adelphia.net>
References: <4259BC59.7060106@adelphia.net> <ir4u0mdbci6.fsf@minos.phy.bnl.gov>
	<425ACFD2.90405@adelphia.net>
Message-ID: <b8ca9051c02aa54addafed7b800432d0@ezabel.com>

So you're going to parse their SQL statements for bad statements?

On Apr 11, 2005, at 3:28 PM, Mel Irizarry wrote:

>  Brett Viren wrote:
> Mel Irizarry <melirizarry at adelphia.net>  writes:
>
>
> I am in need of a server that will allow multiple clients to connect,
> take a MySQL Statement from the client, execute it and return the
> results to the client.  Is there a good example that I could download
> and perhaps modify?
>
> I must not understand because this is exactly what "mysqld" does.
>
> -Brett.
>
> _______________________________________________
> Twisted-Python mailing list
>  Twisted-Python at twistedmatrix.com
>  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>  I do not want the clients to connect directly to MySQL.  It's a 
> security issue.
>
>
> -- 
> Best Regards,
>
> Mel Irizarry
>
> -----------------------------
> I can't go to school 'cause I ain't got a gun
> I ain't got a gun 'cause I ain't got a job
> I can't get a job 'cause I can't go to school
>
> Lost in America - Alice Cooper
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From ssmith at vislab.usyd.edu.au  Tue Apr 12 20:37:34 2005
From: ssmith at vislab.usyd.edu.au (Steve Smith)
Date: Wed, 13 Apr 2005 12:37:34 +1000
Subject: [Twisted-Python] Getting SSL context of protocol session
Message-ID: <1113359854.25184.24.camel@hail.vislab.usyd.edu.au>

Hi,

How do I retrieve the SSL context for a given protocol session object?
For example, with the echo-server:

# -------- 
class ServerContextFactory:    
    def getContext(self):
        return SSL.Context(SSL.SSLv23_METHOD)

class Echo(Protocol):
    def dataReceived(self, data):
        # I want to check the identity in the client certificate at 
        # this point.  Therefore I need the current SSL context.
        self.transport.write(data)

factory = Factory()
factory.protocol = Echo
reactor.listenSSL(8000, factory, ServerContextFactory())
reactor.run()
# -------- 

Currently there appears to be no way of linking the context and the
protocol handler for the connection.  Is there a way around this?

Cheers,
Steve




From vladdrac at gmail.com  Wed Apr 13 04:29:27 2005
From: vladdrac at gmail.com (Ivo van der Wijk)
Date: Wed, 13 Apr 2005 12:29:27 +0200
Subject: [Twisted-Python] wxpython issues
Message-ID: <ddd594ba050413032943df7b4e@mail.gmail.com>

Hi,

I know there are issues with wxPython (not exactly sure which though -
is there anything documented about this?)

Anyway, wxPython is, at this moment, still my prefered GUI Toolkit
(and Wax even makes it rather pythonic) and Twisted is my prefered
choice for networking, so I really need the support :)

I'm currently having issues with wx 2.5.3 - the GUI is not drawn.

I've found out that this issue is caused in wxreactor.py - the timer
is scheduled every 1msec (which the new wx perhaps actually can
handle!), simultate is being run for 10msec. and won't finish in time
for the new event.

Changing the interval in wxreactor.py to 50msec solves my problem. All
of this is with twisted 1.3.0rc1

Cheers

  Ivo

-- 
Drs. I.R. van der Wijk                                      -=-
Korte Leidsedwarsstraat 12                                 Amaze
1017 RC Amsterdam, NL                                       -=-
T +31-20-4688336         F +31-20-4688337       Zope/Plone/Content Management
W http://www.amaze.nl    E info at amaze.nl           Open Source Solutions
W http://vanderwijk.info E ivo at amaze.nl                 Consultancy
PGP http://vanderwijk.info/pgp



From itamar at itamarst.org  Wed Apr 13 09:20:43 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Apr 2005 11:20:43 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <ddd594ba050413032943df7b4e@mail.gmail.com>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
Message-ID: <1113405643.8373.11.camel@localhost.localdomain>

On Wed, 2005-04-13 at 12:29 +0200, Ivo van der Wijk wrote:

> Changing the interval in wxreactor.py to 50msec solves my problem. All
> of this is with twisted 1.3.0rc1

We could make the interval settable at runtime, I suppose, but I've had
other issues reported with wxreactor. If you don't care about
responsiveness of network or GUI too much it's probably fine, though.




From gmcdonald at infocomp.com  Wed Apr 13 17:27:12 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Thu, 14 Apr 2005 09:27:12 +1000
Subject: [Twisted-Python] 2.0 windows installers
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4D2A@XCHANGE>

Michael,

The win installers are available from sourceforge:

http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc2)-py2
.3.exe

and

http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc2)-py2
.4.exe

(the docs come with the source distro).

Grant

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Michael
Schneider
Sent: 08 April 2005 07:34
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] 2.0 windows installers


Sorry for the supid question,  I have looked around the twisted site and 
I can't find the windows installer for twisted 2.0.

Could some kind person point me to it?

Thanks
Mike

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050414/e636ca7e/attachment.html>

From anthony at interlink.com.au  Wed Apr 13 20:58:11 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Thu, 14 Apr 2005 12:58:11 +1000
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <ddd594ba050413032943df7b4e@mail.gmail.com>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
Message-ID: <200504141258.12995.anthony@interlink.com.au>


The problem has been that wx's timer promises "no worse
than 1s" resolution. In practice, it's been utterly unable to 
hit less than 100ms on Windows, and 20ms on Linux is a
sometimes-thing. The only real solution that works robustly
is to run wx and twisted in separate threads. If there's a new
version of wx, you should probably try running wxreactor with
a LoopingCall set to 1ms, and see what timer it can hit 
reliably.

Anthony
-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From darran.edmundson at anu.edu.au  Wed Apr 13 21:08:03 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Thu, 14 Apr 2005 13:08:03 +1000
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504141258.12995.anthony@interlink.com.au>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
	<200504141258.12995.anthony@interlink.com.au>
Message-ID: <425DDE93.6080005@anu.edu.au>

Anthony Baxter wrote:
> The problem has been that wx's timer promises "no worse
> than 1s" resolution. In practice, it's been utterly unable to 
> hit less than 100ms on Windows, and 20ms on Linux is a
> sometimes-thing. The only real solution that works robustly
> is to run wx and twisted in separate threads. If there's a new
> version of wx, you should probably try running wxreactor with
> a LoopingCall set to 1ms, and see what timer it can hit 
> reliably.

I wonder if anyone has a minimalist demo of wx and twisted
running in different threads?  (I ask only because I'm
under the proverbial gun to GUIify my twisted app.)

Cheers,
Darran.

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088



From uwe at oss4u.com  Wed Apr 13 21:26:46 2005
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Wed, 13 Apr 2005 20:26:46 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504141258.12995.anthony@interlink.com.au>
References: <ddd594ba050413032943df7b4e@mail.gmail.com>
	<200504141258.12995.anthony@interlink.com.au>
Message-ID: <200504132026.46417.uwe@oss4u.com>

You probably better switch to using separate threads.
Although I basically invented the timer driven "eventloop starving" quite a 
while ago, published it in the python cookbook (which eventually was turned 
into wxreactor by Itamar), I meanwhile switched my application to multiple 
threads. Works way better, particularly on windows.
The timer-eventloop works fine for smaller applications with little to 
moderate network usage, the moment you start transferring more data over the 
network you basically starve both eventloops to death, because neither of the 
loops gets enough CPU attention to do the job properly.

You might want to check out this example:

 http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample

It's a basic example of multiple threads, but it will give you the idea. 
I've written a network wrapper layer to make this whole thing more easy to 
handle, but I can't put this online just yet (contract reasons) - and it's 
very specialized for my application anyways.  Just to give you a hint: once 
you understood how the above example works, you can write wrapper classes for 
the remote referenceable interfaces of twisted. This allows you to use the 
twisted interface the way it's documented without having to fiddle around 
with the threads.

Hope that gives you some clues

UC



On Wednesday 13 April 2005 19:58, Anthony Baxter wrote:
> The problem has been that wx's timer promises "no worse
> than 1s" resolution. In practice, it's been utterly unable to
> hit less than 100ms on Windows, and 20ms on Linux is a
> sometimes-thing. The only real solution that works robustly
> is to run wx and twisted in separate threads. If there's a new
> version of wx, you should probably try running wxreactor with
> a LoopingCall set to 1ms, and see what timer it can hit
> reliably.
>
> Anthony

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417



From ken at kenkinder.com  Thu Apr 14 11:55:27 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 14 Apr 2005 12:55:27 -0500
Subject: [Twisted-Python] Any good examples?
In-Reply-To: <4259BC59.7060106@adelphia.net>
References: <4259BC59.7060106@adelphia.net>
Message-ID: <425EAE8F.9030201@kenkinder.com>

Mel Irizarry wrote:

> I am in need of a server that will allow multiple clients to connect, 
> take a MySQL Statement from the client, execute it and return the 
> results to the client.  Is there a good example that I could download 
> and perhaps modify?

I'm not sure how clients would be connecting, but it sounds like you 
want Twisted to actually behave as a MySQL server. This is probably 
going to be tricky because you're going to have to re-implement the 
MySQL server-side protocol.

If having clients connect through another protocol like Perspective 
Broker is an option, you could get by pretty easily. I attached a couple 
of files that basically combine the twisted perspective broker and rdbms 
examples.

-Ken

-------------- next part --------------
A non-text attachment was scrubbed...
Name: QueryProxy.py
Type: application/x-python
Size: 560 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050414/f3b53f93/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: QueryProxyClient.py
Type: application/x-python
Size: 576 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050414/f3b53f93/attachment-0005.bin>

From mailinglist.account at gmail.com  Thu Apr 14 13:34:52 2005
From: mailinglist.account at gmail.com (Anthony Tarlano)
Date: Thu, 14 Apr 2005 21:34:52 +0200
Subject: [Twisted-Python] Fwd: [XML-SIG] Query re: Xml and Flash
In-Reply-To: <BAY2-F315CDEF56B5E74E8D05019F1330@phx.gbl>
References: <BAY2-F315CDEF56B5E74E8D05019F1330@phx.gbl>
Message-ID: <f2b5731905041412346a1faef@mail.gmail.com>

---------- Forwarded message ----------
From: Claire Mc Entee <claire_mcentee at hotmail.com>
Date: Apr 12, 2005 7:12 PM
Subject: [XML-SIG] Query re: Xml and Flash
To: xml-sig at python.org


Hello there,
I am developing a site using XML and Flash and I was wondering if you had
any ideas as to which book would be the best to buy?

Kind regards,
Claire Mc Entee

_________________________________________________________________
Don't know what Meegos are? Click to find out. http://meegos.msn.ie

_______________________________________________
XML-SIG maillist  -  XML-SIG at python.org
http://mail.python.org/mailman/listinfo/xml-sig



From ryanthiessen at gmail.com  Thu Apr 14 20:19:38 2005
From: ryanthiessen at gmail.com (Ryan Thiessen)
Date: Thu, 14 Apr 2005 19:19:38 -0700
Subject: [Twisted-Python] Question about deferreds and ClientCreator
Message-ID: <26f22bfe0504141919573b434a@mail.gmail.com>

Hello,

I'm just starting out with twisted, and it's a very impressive
framework.  I'm still learning the concepts though, and feel like I'm
missing something important.  I get the idea of deferred callbacks,
but there are cases where I'd like to implement something directly and
I cannot figure out how to accomplish this.

I'm attempting to write an application based on the example found here:
http://twistedmatrix.com/projects/words/documentation/examples/oscardemo.py

The example I can understand perfectly, I can see how it creates the
deferred callback and runs through the reactor, and I can tweak it to
my heart's content.  But that is targeted as a client but in a
server-side operation like a bit.  Instead, what happens if you are
writing a program that requires user input?  In the example, the
program is run by the reactor and it depends on external input to
cause the callbacks and generate activity.

Grr.. it seems like I'm talking in circles, and I'm probably using the
wrong terminology.  What I'm trying to do is access the "sendMessage"
function of the oscardemo.py from outside that class.  I have
functionality in a GTK2 window that is intended to send a message
using oscar, but I cannot figure out how to take advantage of the
protocol.ClientCreator to do that.  If I assign a variable to
protocol.ClientCreator it tells me it is a Deferred
OscarAuthenticator, but I cannot make the mental leap to figure out
how to manipulate that in order to send messages.  It seems that I
should be using callbacks since it is deferred, but I can't see how
I'd do that to accomplish my goals.

Is using ClientCreator the wrong step for me here, or does that
provide the sort of functionality I am looking for?  If I need to
RTFM, can someone point me at the correct manual to read?  I've read
the HOWTOs on deferred and can only seem to get information about
callbacks and I can't figure out how to use callbacks to provide
user-supplied messages.

Sorry for my lack of clarity, as I said I'm still quite new at this.
-- 
Cheers,
-Ryan Thiessen-



From twisted-python at twistedmatrix.com  Thu Apr 14 23:13:34 2005
From: twisted-python at twistedmatrix.com (Shawn Church)
Date: Thu, 14 Apr 2005 22:13:34 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504132026.46417.uwe@oss4u.com>
Message-ID: <20050414.yIu.09204200@dev-server>

I am new to twisted and also experienced problems using wxreactor.  After
reading some earlier posts to this message list I wrote a wx.App sub-class
that polls the reactor ONLY when the GUI requires data from twisted:

# This is a method of derived wx.App class I'm leaving out init/clean up
methods:
def twistedCall(self,deferredFunction,timeOut=3.0):
""" Call a remote method and return when it is done (or times out) """
   class WaitForDeferred(object):
      def __call__(self,deferredFunction,timeOut=3.0):
         self.loop=True; self.returnValue=None
         deferredFunction().addBoth(self.__callback)
         if timeOut>0:
            self.timeOut=reactor.callLater(
               timeOut,self.__callback,
               Failure("Timeout while connecting to host",TimeoutError)
            )
         else: self.timeOut=None

         while self.loop:
            reactor.runUntilCurrent();
            reactor.iterate(0)

         if isinstance(self.returnValue,Failure):
            self.returnValue.trap()
	 return self.returnValue

      def __callback(self,arg):
         if self.timeOut is not None: self.timeOut.cancel()
         self.timeOut=None; self.returnValue=arg; self.loop=False

   try:
      return WaitForDeferred()(deferredFunction,timeOut)
   # This is to reconnect to server after the connection is broken (client
factory               is overridden to
        # reconnect as well)  Is there a better way of doing this???:
   except pb.DeadReferenceError:
      self.twistedPerspective=self.twistedCall(lambda:
         self.twistedFactory.login(self.twistedCredentials)
      )
      return WaitForDeferred()(deferredFunction,timeOut)

So when the application needs to login,  request data,  etc.,  it calls
wx.GetApp().twistedCall(...) and the wx app is "blocked" until  the deferred
completes.  In addition I have a wx.Timer poll set at one second to do one
reactor iteration "just in case" although things seem to run fine without this
extra poll.

In preliminary tests I was able to run 10+ client instances each requesting
551k blocks of data at 1 second intervals and everything seemed to run fine
(some of the wx polls were missed but twisted never dropped anything).  Note
that this is a PB based client/server application running (both clients and
sever) on a 1.7 Ghz P4 w/1 GB under Linux.

I was pretty impressed with this performance esp. since the server was reading
the 551k from disk each time it was requested with a simple "return
file(read(...))" statement and I did not even wrap the server code in a
deferred like I should of.  I did this test to see if the the reactor loop,
as implemented,  would "starve" and drop data producing timeout errors.

This testing was done before I read this latest post and before any actual
production application code has been developed.  So am I better off just
scrapping this approach and adopting a threaded method?  The reason I adopted
the above approach was that, in general,  the applications I write NEED to
wait for data before they can continue.  For example,  the user enter a userid
and password and hits the "login" button. No further (interactive) processing
can be performed until the server validates the input and authorizes/rejects
the login.

I have over 20 years applications exp but minimal networking/systems type exp
so forgive me if my questions (and testing approach) are naive.  Also,  I
apologize for the length of this post. I tried to avoid posting so much code
but could not find a better way to explain what I was doing (I will be happy
to provide complete examples if anyone is interested).



Shawn Church
Information Systems Consultant
sl_church at sbcglobal.net
http://SChurchComputers.com


Uwe C. Schroeder (uwe at oss4u.com) wrote:
>
> You probably better switch to using separate threads.
> Although I basically invented the timer driven "eventloop starving" quite a
> while ago, published it in the python cookbook (which eventually was turned
> into wxreactor by Itamar), I meanwhile switched my application to multiple
> threads. Works way better, particularly on windows.
> The timer-eventloop works fine for smaller applications with little to
> moderate network usage, the moment you start transferring more data over the
> network you basically starve both eventloops to death, because neither of the
> loops gets enough CPU attention to do the job properly.
>
> You might want to check out this example:
>
>  http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample
>
> It's a basic example of multiple threads, but it will give you the idea.
> I've written a network wrapper layer to make this whole thing more easy to
> handle, but I can't put this online just yet (contract reasons) - and it's
> very specialized for my application anyways.  Just to give you a hint: once
> you understood how the above example works, you can write wrapper classes for
> the remote referenceable interfaces of twisted. This allows you to use the
> twisted interface the way it's documented without having to fiddle around
> with the threads.
>
> Hope that gives you some clues
>
> UC
>
>
>
> On Wednesday 13 April 2005 19:58, Anthony Baxter wrote:
> > The problem has been that wx's timer promises "no worse
> > than 1s" resolution. In practice, it's been utterly unable to
> > hit less than 100ms on Windows, and 20ms on Linux is a
> > sometimes-thing. The only real solution that works robustly
> > is to run wx and twisted in separate threads. If there's a new
> > version of wx, you should probably try running wxreactor with
> > a LoopingCall set to 1ms, and see what timer it can hit
> > reliably.
> >
> > Anthony
>
> --
> Open Source Solutions 4U, LLC	2570 Fleetwood Drive
> Phone:  +1 650 872 2425		San Bruno, CA 94066
> Cell:   +1 650 302 2405		United States
> Fax:    +1 650 872 2417
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ssmith at vislab.usyd.edu.au  Thu Apr 14 23:29:26 2005
From: ssmith at vislab.usyd.edu.au (Steve Smith)
Date: Fri, 15 Apr 2005 15:29:26 +1000
Subject: [Twisted-Python] Getting SSL context of protocol session
In-Reply-To: <1113359854.25184.24.camel@hail.vislab.usyd.edu.au>
References: <1113359854.25184.24.camel@hail.vislab.usyd.edu.au>
Message-ID: <1113542966.18571.11.camel@moth.vislab.usyd.edu.au>

On Wed, 2005-04-13 at 12:37 +1000, Steve Smith wrote:
> Hi,
> 
> How do I retrieve the SSL context for a given protocol session object?

For the public record I haven't been able to find a straightforward way
to do this, as the connection discards the SSL context it creates after
passing it to OpenSSL.  However the alternative is to use a TLS
negotiation within the protocol (aka 'STARTTLS') which gives you more
control over the handshaking phase.  I've placed some notes and example
code here:

    http://wiki.vislab.usyd.edu.au/moin.cgi/SSLCertNotes

Cheers,
Steve





From glyph at divmod.com  Fri Apr 15 08:27:33 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 10:27:33 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <20050414.yIu.09204200@dev-server>
References: <20050414.yIu.09204200@dev-server>
Message-ID: <425FCF55.6050505@divmod.com>

Shawn Church wrote:
> I am new to twisted and also experienced problems using wxreactor.  After
> reading some earlier posts to this message list I wrote a wx.App sub-class
> that polls the reactor ONLY when the GUI requires data from twisted:

Eep!  This is definitely broken.

The simplest way to explain why is: what if you are writing a chat 
program, and your GUI might need to be notified about network events at 
any time?  Deferreds are just one way that Twisted can trigger events. 
There are lots of other callbacks which your program might be interested in.



From foom at fuhm.net  Fri Apr 15 08:36:30 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 15 Apr 2005 10:36:30 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <425FCF55.6050505@divmod.com>
References: <20050414.yIu.09204200@dev-server> <425FCF55.6050505@divmod.com>
Message-ID: <df0dbf3c19bcb8981d38c57df083a17f@fuhm.net>


On Apr 15, 2005, at 10:27 AM, Glyph Lefkowitz wrote:

> Shawn Church wrote:
>> I am new to twisted and also experienced problems using wxreactor.  
>> After
>> reading some earlier posts to this message list I wrote a wx.App 
>> sub-class
>> that polls the reactor ONLY when the GUI requires data from twisted:
>
> Eep!  This is definitely broken.
>
> The simplest way to explain why is: what if you are writing a chat 
> program, and your GUI might need to be notified about network events 
> at any time?  Deferreds are just one way that Twisted can trigger 
> events. There are lots of other callbacks which your program might be 
> interested in.

Well, if you know that can't happen, (or that you aren't interested if 
it does happen) then you're all set. :)

James




From glyph at divmod.com  Fri Apr 15 08:59:46 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 10:59:46 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <df0dbf3c19bcb8981d38c57df083a17f@fuhm.net>
References: <20050414.yIu.09204200@dev-server> <425FCF55.6050505@divmod.com>
	<df0dbf3c19bcb8981d38c57df083a17f@fuhm.net>
Message-ID: <425FD6E2.2040900@divmod.com>

James Y Knight wrote:

> Well, if you know that can't happen, (or that you aren't interested if 
> it does happen) then you're all set. :)

True enough, but in that case, don't use Twisted - it's just extra 
complexity.  urllib will do just fine.



From cmoad at indiana.edu  Fri Apr 15 10:39:03 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Fri, 15 Apr 2005 11:39:03 -0500
Subject: [Twisted-Python] Raise soap faults
Message-ID: <425FEE27.8080502@indiana.edu>

	I have a soap server that I am trying to make handle errors correctly.
 When there is an error I just return a SOAPpy.faultType instance.  The
client should correspondlingly raise a python exception when it gets
this.  Unfortunately it looks like twisted is returning the faultType
instance as a valid response.  Here is the returned SOAP:

*** Incoming SOAP ******************************************************
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope
SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
<SOAP-ENV:Body>
<pdbChainFileCompressedResponse SOAP-ENC:root="1">
<SOAP-ENV:Fault SOAP-ENC:root="1">
<faultcode>ArgumentError</faultcode>
<faultstring>Invalid PDB Code</faultstring>
</SOAP-ENV:Fault>
</pdbChainFileCompressedResponse>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
************************************************************************

and the python result literally is:

<SOAPpy.Types.structType Fault at -1213565780>: {'faultcode':
'ArgumentError', 'faultstring': 'Invalid PDB Code'}

So the soappy client is treating this as a valid return value, and not
raising an exception like it should.

Any ideas?

Thanks,
	Charlie



From cmoad at indiana.edu  Fri Apr 15 11:28:08 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Fri, 15 Apr 2005 12:28:08 -0500
Subject: [Twisted-Python] Re: Raise soap faults
In-Reply-To: <425FEE27.8080502@indiana.edu>
References: <425FEE27.8080502@indiana.edu>
Message-ID: <425FF9A8.8050908@indiana.edu>

Why is it you always find the answer to a problem after you ping the
mailing list?  For future reference, the deferred returned from the
soap_method should "raise" the faultType in its callbacks, not "return"
it as I was doing.

Thanks,

Charles Moad wrote:
> 	I have a soap server that I am trying to make handle errors correctly.
>  When there is an error I just return a SOAPpy.faultType instance.  The
> client should correspondlingly raise a python exception when it gets
> this.  Unfortunately it looks like twisted is returning the faultType
> instance as a valid response.  Here is the returned SOAP:
> 
> *** Incoming SOAP ******************************************************
> <?xml version="1.0" encoding="UTF-8"?>
> <SOAP-ENV:Envelope
> SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
> <SOAP-ENV:Body>
> <pdbChainFileCompressedResponse SOAP-ENC:root="1">
> <SOAP-ENV:Fault SOAP-ENC:root="1">
> <faultcode>ArgumentError</faultcode>
> <faultstring>Invalid PDB Code</faultstring>
> </SOAP-ENV:Fault>
> </pdbChainFileCompressedResponse>
> </SOAP-ENV:Body>
> </SOAP-ENV:Envelope>
> ************************************************************************
> 
> and the python result literally is:
> 
> <SOAPpy.Types.structType Fault at -1213565780>: {'faultcode':
> 'ArgumentError', 'faultstring': 'Invalid PDB Code'}
> 
> So the soappy client is treating this as a valid return value, and not
> raising an exception like it should.
> 
> Any ideas?
> 
> Thanks,
> 	Charlie
> 



From teratorn at twistedmatrix.com  Fri Apr 15 11:39:48 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 16 Apr 2005 03:39:48 +1000
Subject: [Twisted-Python] Raise soap faults
In-Reply-To: <425FEE27.8080502@indiana.edu>
References: <425FEE27.8080502@indiana.edu>
Message-ID: <opspabcmiby3d107@aspen>

On Fri, 15 Apr 2005 11:39:03 -0500, Charles Moad <cmoad at indiana.edu> wrote:

> 	I have a soap server that I am trying to make handle errors correctly.
>  When there is an error I just return a SOAPpy.faultType instance.  The
> client should correspondlingly raise a python exception when it gets
> this.  Unfortunately it looks like twisted is returning the faultType
> instance as a valid response.  Here is the returned SOAP:

Yeah, I think that is right.

I believe you are supposed to raise an exception from your soap_* methods  
if you want a real SOAP fault to be returned. You may simply raise your  
faultType instance, or a faultType instance will be created automatically.

Though on the client side it still won't raise an exception, but you will  
hopefully get your faultType instance. You may check for it explicitly and  
raise it, if you like.

This behavior is probably wrong, and should be modified to be more in line  
with our other RPC implementations and SOAPpy itself. It would also be  
nice for Twisted to assert that the user isn't returning faultType  
instances from their soap_* methods, and if they are to advise them of the  
correct procedure.

Would you please open a bug on the tracker and assign it to me?  
http://twistedmatrix.com/bugs/

Itamar, you're listed as the soap.py maintainer.. does this sound about  
right to you?

-Eric

>
> *** Incoming SOAP ******************************************************
> <?xml version="1.0" encoding="UTF-8"?>
> <SOAP-ENV:Envelope
> SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
> xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
> <SOAP-ENV:Body>
> <pdbChainFileCompressedResponse SOAP-ENC:root="1">
> <SOAP-ENV:Fault SOAP-ENC:root="1">
> <faultcode>ArgumentError</faultcode>
> <faultstring>Invalid PDB Code</faultstring>
> </SOAP-ENV:Fault>
> </pdbChainFileCompressedResponse>
> </SOAP-ENV:Body>
> </SOAP-ENV:Envelope>
> ************************************************************************
>
> and the python result literally is:
>
> <SOAPpy.Types.structType Fault at -1213565780>: {'faultcode':
> 'ArgumentError', 'faultstring': 'Invalid PDB Code'}
>
> So the soappy client is treating this as a valid return value, and not
> raising an exception like it should.
>
> Any ideas?
>
> Thanks,
> 	Charlie
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From cmoad at indiana.edu  Fri Apr 15 12:26:39 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Fri, 15 Apr 2005 13:26:39 -0500
Subject: [Twisted-Python] Re: Raise soap faults
In-Reply-To: <E1DMV6q-0007sI-00@pyramid.twistedmatrix.com>
References: <E1DMV6q-0007sI-00@pyramid.twistedmatrix.com>
Message-ID: <4260075F.2060609@indiana.edu>

> Though on the client side it still won't raise an exception, but you will  
> hopefully get your faultType instance. You may check for it explicitly and  
> raise it, if you like.

When a soap fault is returned the http return code is 500, so the client
does actually see this and raise an exception.  You do not have to
explicitly check if it was a fault after ever call to the service.



From twisted-python at twistedmatrix.com  Fri Apr 15 12:30:22 2005
From: twisted-python at twistedmatrix.com (Shawn Church)
Date: Fri, 15 Apr 2005 11:30:22 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <425FD6E2.2040900@divmod.com>
Message-ID: <20050415.RZz.76762100@dev-server>

It is entirely possible that twisted is NOT what I should be using.  What I
want to do basically is: 1) Provide a consistant login for users independent
of any DB; 2) Provide a security framework based upon number 1 (i.e. user sam
can do a,b, and c but user john can only do a);  and 3) Provide the abililty
for the server to query a DB backend in response to requests from the client,
and return the data.  In addition,  it would be very nice to wrap all of this
up in SSL to protect casual "snooping" of data.

I have looked at implementations of Soap,  CORBA,  and Pyro,  none of which
have really statisfied me.  I thought that by using the PB interface of
twisted,  along with a SSL connection,  I could achieve all of my objectives
fairly simply -- once I worked out the details I was able connect,  login,
and transfer data with very little code.

I fully realize that if I want to write a GUI application that depends upon
arbitrary responses from the server (i.e. a chat client to use your example)
then my approach will not work.  What I want to do is have my clients request
data from the server and wait till the data is ready (seems prettty simple
:-))   Twisted seems to do what I want (assuming I can interface with wx),
but if you can point to another package please let me know.

Glyph Lefkowitz (glyph at divmod.com) wrote:
>
> James Y Knight wrote:
>
> > Well, if you know that can't happen, (or that you aren't interested if
> > it does happen) then you're all set. :)
>
> True enough, but in that case, don't use Twisted - it's just extra
> complexity.  urllib will do just fine.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From bkirsch at osafoundation.org  Fri Apr 15 13:36:29 2005
From: bkirsch at osafoundation.org (Brian Kirsch)
Date: Fri, 15 Apr 2005 12:36:29 -0700
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>
References: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>
Message-ID: <426017BD.1060800@osafoundation.org>

Hey guys,
Question for you. In the 2.0 Twisted release the 
policies.ProtocolWrapper changed on line 31 to now set the 
wrappedProtocol.factory to point to the wrappingFactory.


  def __init__(self, factory, wrappedProtocol):
        self.wrappedProtocol = wrappedProtocol
<      self.factory = factory
 >      self.factory = wrappedProtocol.factory = factory



 I was wondering what the reason for the change was? The change caused 
our current code to break (an easy fix). It seems to me that the wrapper 
should be transparent to the wrappedProtocol. Changing the protocol's 
factory leads to unexpected behavior if that protocol is depending on 
specific methods or data in the  factory. In fact this change actually 
breaks the Twisted smtp.py code.

   def getMailFrom(self):
        if not self.done:
            self.done = 1
          /  return str(self.factory.fromEmail) #this will now break if 
wrapped/
        else:
            return None


Brian Kirsch - Email Framework Engineer
Open Source Applications Foundation
543 Howard St. 5th Floor
San Francisco, CA 94105
(415) 946-3056
http://www.osafoundation.org




From glyph at divmod.com  Fri Apr 15 13:53:16 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 15:53:16 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <20050415.RZz.76762100@dev-server>
References: <20050415.RZz.76762100@dev-server>
Message-ID: <42601BAC.7090306@divmod.com>

Shawn Church wrote:

> I have looked at implementations of Soap,  CORBA,  and Pyro,  none of which
> have really statisfied me.  I thought that by using the PB interface of
> twisted,  along with a SSL connection,  I could achieve all of my objectives
> fairly simply -- once I worked out the details I was able connect,  login,
> and transfer data with very little code.

All of this, and more, is possible with Twisted.

> I fully realize that if I want to write a GUI application that depends upon
> arbitrary responses from the server (i.e. a chat client to use your example)
> then my approach will not work.

That was an example of where the brokenness would be instantly visible 
to any user of your program.  Internally Twisted makes many assumptions 
about the reactor generally being running which may cause you lots of 
little surprises if you use the technique you've proposed.

> What I want to do is have my clients request
> data from the server and wait till the data is ready (seems prettty simple
> :-))

the Twisted way is to invert it so that rather than saying "Wait until Y 
is done, then do X", you say "Do X when Y is done."  Among other things, 
this approach lets you do more than one thing at a time.  For example, 
you might want to put a "cancel" button in your UI if your application 
has to run over the internet.  Responding to the cancel button at the 
same time as waiting for a request's response is a second thing, so you 
need to be worried about concurrency even in simple applications.

 > Twisted seems to do what I want (assuming I can interface with wx),
> but if you can point to another package please let me know.

I would point you at gtk, Tkinter, or win32api, not an alternative to 
Twisted :).  wx is the problem here: its mainloop is badly broken, on 
all platforms.  Twisted works fine.  The easiest fix, if wx is a genuine 
requirement, is to run the wx main loop in a Twisted thread, using 
callInThread, so that the Twisted event loop (i.e. the one that isn't 
horribly broken) is "in charge".

I believe that future releases of wx are fixing this issue, as well, 
since you're far from the first person to have complained about it.  I 
hope that this happens soon, since despite its many flaws wx is very 
popular in the Python community.

P.S.: If I seem negative towards WX, it is only because my _only_ use of 
it is answering this same question over and over again.  I'm sure it has 
some positive points too, but I never discover them, because for my own 
development projects "non-broken mainloop" is criterion #1 for the GUI 
framework ;-)



From glyph at divmod.com  Fri Apr 15 13:55:23 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 15 Apr 2005 15:55:23 -0400
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <426017BD.1060800@osafoundation.org>
References: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>
	<426017BD.1060800@osafoundation.org>
Message-ID: <42601C2B.9090107@divmod.com>

Brian Kirsch wrote:
> Hey guys,

> In fact this change actually 
> breaks the Twisted smtp.py code.

Wow.  That does look broken.  I suggest that if nobody explains this by 
the end of the day that the change be reverted right away...



From teratorn at twistedmatrix.com  Fri Apr 15 14:07:46 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 16 Apr 2005 06:07:46 +1000
Subject: [Twisted-Python] Re: Raise soap faults
In-Reply-To: <4260075F.2060609@indiana.edu>
References: <E1DMV6q-0007sI-00@pyramid.twistedmatrix.com>
	<4260075F.2060609@indiana.edu>
Message-ID: <opspah68uey3d107@aspen>

On Fri, 15 Apr 2005 13:26:39 -0500, Charles Moad <cmoad at indiana.edu> wrote:

>> Though on the client side it still won't raise an exception, but you  
>> will
>> hopefully get your faultType instance. You may check for it explicitly  
>> and
>> raise it, if you like.
>
> When a soap fault is returned the http return code is 500, so the client
> does actually see this and raise an exception.  You do not have to
> explicitly check if it was a fault after ever call to the service.

Ah, yes. I was only looking at the soap code and it didn't occur to me  
that it would be a 500 status.



From Sl_Church at sbcglobal.net  Fri Apr 15 14:28:35 2005
From: Sl_Church at sbcglobal.net (Shawn Church)
Date: Fri, 15 Apr 2005 13:28:35 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <42601BAC.7090306@divmod.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
Message-ID: <426023F3.6030009@sbcglobal.net>

OK,  I will adopt the threaded approach.  Despite it's mainloop problems
(they can surface even without twisted) I still like wx.  I develop on a
linux system but support mostly windows clients and wx makes this easy. 
Thanks to everyone for their valuable responses to my questions.

Glyph Lefkowitz wrote:

> Shawn Church wrote:
>
>> I have looked at implementations of Soap,  CORBA,  and Pyro,  none of
>> which
>> have really statisfied me.  I thought that by using the PB interface of
>> twisted,  along with a SSL connection,  I could achieve all of my
>> objectives
>> fairly simply -- once I worked out the details I was able connect, 
>> login,
>> and transfer data with very little code.
>
>
> All of this, and more, is possible with Twisted.
>
>> I fully realize that if I want to write a GUI application that
>> depends upon
>> arbitrary responses from the server (i.e. a chat client to use your
>> example)
>> then my approach will not work.
>
>
> That was an example of where the brokenness would be instantly visible
> to any user of your program.  Internally Twisted makes many
> assumptions about the reactor generally being running which may cause
> you lots of little surprises if you use the technique you've proposed.
>
>> What I want to do is have my clients request
>> data from the server and wait till the data is ready (seems prettty
>> simple
>> :-))
>
>
> the Twisted way is to invert it so that rather than saying "Wait until
> Y is done, then do X", you say "Do X when Y is done."  Among other
> things, this approach lets you do more than one thing at a time.  For
> example, you might want to put a "cancel" button in your UI if your
> application has to run over the internet.  Responding to the cancel
> button at the same time as waiting for a request's response is a
> second thing, so you need to be worried about concurrency even in
> simple applications.
>
> > Twisted seems to do what I want (assuming I can interface with wx),
>
>> but if you can point to another package please let me know.
>
>
> I would point you at gtk, Tkinter, or win32api, not an alternative to
> Twisted :).  wx is the problem here: its mainloop is badly broken, on
> all platforms.  Twisted works fine.  The easiest fix, if wx is a
> genuine requirement, is to run the wx main loop in a Twisted thread,
> using callInThread, so that the Twisted event loop (i.e. the one that
> isn't horribly broken) is "in charge".
>
> I believe that future releases of wx are fixing this issue, as well,
> since you're far from the first person to have complained about it.  I
> hope that this happens soon, since despite its many flaws wx is very
> popular in the Python community.
>
> P.S.: If I seem negative towards WX, it is only because my _only_ use
> of it is answering this same question over and over again.  I'm sure
> it has some positive points too, but I never discover them, because
> for my own development projects "non-broken mainloop" is criterion #1
> for the GUI framework ;-)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From uwe at oss4u.com  Fri Apr 15 14:29:10 2005
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 15 Apr 2005 13:29:10 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <42601BAC.7090306@divmod.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
Message-ID: <200504151329.10096.uwe@oss4u.com>

On Friday 15 April 2005 12:53, Glyph Lefkowitz wrote:
> Shawn Church wrote:
> > I have looked at implementations of Soap,  CORBA,  and Pyro,  none of
> > which have really statisfied me.  I thought that by using the PB
> > interface of twisted,  along with a SSL connection,  I could achieve all
> > of my objectives fairly simply -- once I worked out the details I was
> > able connect,  login, and transfer data with very little code.
>
> All of this, and more, is possible with Twisted.
>
> > I fully realize that if I want to write a GUI application that depends
> > upon arbitrary responses from the server (i.e. a chat client to use your
> > example) then my approach will not work.
>
> That was an example of where the brokenness would be instantly visible
> to any user of your program.  Internally Twisted makes many assumptions
> about the reactor generally being running which may cause you lots of
> little surprises if you use the technique you've proposed.
>
> > What I want to do is have my clients request
> > data from the server and wait till the data is ready (seems prettty
> > simple
> >
> > :-))
>
> the Twisted way is to invert it so that rather than saying "Wait until Y
> is done, then do X", you say "Do X when Y is done."  Among other things,
> this approach lets you do more than one thing at a time.  For example,
> you might want to put a "cancel" button in your UI if your application
> has to run over the internet.  Responding to the cancel button at the
> same time as waiting for a request's response is a second thing, so you
> need to be worried about concurrency even in simple applications.
>
>  > Twisted seems to do what I want (assuming I can interface with wx),
> >
> > but if you can point to another package please let me know.
>
> I would point you at gtk, Tkinter, or win32api, not an alternative to
> Twisted :).  wx is the problem here: its mainloop is badly broken, on
> all platforms.  Twisted works fine.  The easiest fix, if wx is a genuine
> requirement, is to run the wx main loop in a Twisted thread, using
> callInThread, so that the Twisted event loop (i.e. the one that isn't
> horribly broken) is "in charge".
>
> I believe that future releases of wx are fixing this issue, as well,
> since you're far from the first person to have complained about it.  I
> hope that this happens soon, since despite its many flaws wx is very
> popular in the Python community.
>
> P.S.: If I seem negative towards WX, it is only because my _only_ use of
> it is answering this same question over and over again.  I'm sure it has
> some positive points too, but I never discover them, because for my own
> development projects "non-broken mainloop" is criterion #1 for the GUI
> framework ;-)

There are certainly people better suited to respond to this, I'll try anyways. 
The main problem with wx's mainloop is that wx uses the eventloops of the 
platform dependant gui's. If you run wx on Linux with GTK2 it uses the GTK2 
eventloop. On win it uses the windows loop etc. etc.  I'm not sure this can 
be fixed - but as said, there are people who have more in-depth knowledge 
about the issue. Wx is so popular because it works on all platforms in a 
(mostly) consistent way. The only alternative I could think of is TK or JAVA 
SWING (and both look really ugly). If you have to write a gui application 
that has to run on multiple platforms and needs to look a bit more modern, 
you have very few choices. 
Another idea here. Why not write a "wxreactor" that handles the threading 
already and provides a "twisted consistent" API to the gui thread? That way 
one could encapsulate any broken mainloop out there.
Just a thought.


	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417



From bob at redivi.com  Fri Apr 15 14:42:00 2005
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 15 Apr 2005 16:42:00 -0400
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504151329.10096.uwe@oss4u.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
	<200504151329.10096.uwe@oss4u.com>
Message-ID: <2d3efbb3f3f16c3f25975fe3c900234a@redivi.com>


On Apr 15, 2005, at 4:29 PM, Uwe C. Schroeder wrote:

> On Friday 15 April 2005 12:53, Glyph Lefkowitz wrote:
>> Shawn Church wrote:
>>> I have looked at implementations of Soap,  CORBA,  and Pyro,  none of
>>> which have really statisfied me.  I thought that by using the PB
>>> interface of twisted,  along with a SSL connection,  I could achieve 
>>> all
>>> of my objectives fairly simply -- once I worked out the details I was
>>> able connect,  login, and transfer data with very little code.
>>
>> All of this, and more, is possible with Twisted.
>>
>>> I fully realize that if I want to write a GUI application that 
>>> depends
>>> upon arbitrary responses from the server (i.e. a chat client to use 
>>> your
>>> example) then my approach will not work.
>>
>> That was an example of where the brokenness would be instantly visible
>> to any user of your program.  Internally Twisted makes many 
>> assumptions
>> about the reactor generally being running which may cause you lots of
>> little surprises if you use the technique you've proposed.
>>
>>> What I want to do is have my clients request
>>> data from the server and wait till the data is ready (seems prettty
>>> simple
>>>
>>> :-))
>>
>> the Twisted way is to invert it so that rather than saying "Wait 
>> until Y
>> is done, then do X", you say "Do X when Y is done."  Among other 
>> things,
>> this approach lets you do more than one thing at a time.  For example,
>> you might want to put a "cancel" button in your UI if your application
>> has to run over the internet.  Responding to the cancel button at the
>> same time as waiting for a request's response is a second thing, so 
>> you
>> need to be worried about concurrency even in simple applications.
>>
>>> Twisted seems to do what I want (assuming I can interface with wx),
>>>
>>> but if you can point to another package please let me know.
>>
>> I would point you at gtk, Tkinter, or win32api, not an alternative to
>> Twisted :).  wx is the problem here: its mainloop is badly broken, on
>> all platforms.  Twisted works fine.  The easiest fix, if wx is a 
>> genuine
>> requirement, is to run the wx main loop in a Twisted thread, using
>> callInThread, so that the Twisted event loop (i.e. the one that isn't
>> horribly broken) is "in charge".
>>
>> I believe that future releases of wx are fixing this issue, as well,
>> since you're far from the first person to have complained about it.  I
>> hope that this happens soon, since despite its many flaws wx is very
>> popular in the Python community.
>>
>> P.S.: If I seem negative towards WX, it is only because my _only_ use 
>> of
>> it is answering this same question over and over again.  I'm sure it 
>> has
>> some positive points too, but I never discover them, because for my 
>> own
>> development projects "non-broken mainloop" is criterion #1 for the GUI
>> framework ;-)
>
> There are certainly people better suited to respond to this, I'll try 
> anyways.
> The main problem with wx's mainloop is that wx uses the eventloops of 
> the
> platform dependant gui's. If you run wx on Linux with GTK2 it uses the 
> GTK2
> eventloop. On win it uses the windows loop etc. etc.  I'm not sure 
> this can
> be fixed - but as said, there are people who have more in-depth 
> knowledge
> about the issue. Wx is so popular because it works on all platforms in 
> a
> (mostly) consistent way. The only alternative I could think of is TK 
> or JAVA
> SWING (and both look really ugly). If you have to write a gui 
> application
> that has to run on multiple platforms and needs to look a bit more 
> modern,
> you have very few choices.
> Another idea here. Why not write a "wxreactor" that handles the 
> threading
> already and provides a "twisted consistent" API to the gui thread? 
> That way
> one could encapsulate any broken mainloop out there.
> Just a thought.

It would make perfect sense to provide an abstract reactor 
implementation that did the select/poll/etc. in a separate thread which 
sends an event to the mainloop to wake up the reactor... it could be 
used to interoperate with just about anything, pygame, wxPython, pygtk, 
Cocoa, etc. and would require very little work to "port".

-bob




From Sl_Church at sbcglobal.net  Fri Apr 15 15:19:46 2005
From: Sl_Church at sbcglobal.net (Shawn Church)
Date: Fri, 15 Apr 2005 14:19:46 -0700
Subject: [Twisted-Python] wxpython issues
In-Reply-To: <200504151329.10096.uwe@oss4u.com>
References: <20050415.RZz.76762100@dev-server> <42601BAC.7090306@divmod.com>
	<200504151329.10096.uwe@oss4u.com>
Message-ID: <42602FF2.1060103@sbcglobal.net>


Uwe C. Schroeder wrote:

>about the issue. Wx is so popular because it works on all platforms in a 
>(mostly) consistent way. The only alternative I could think of is TK or JAVA 
>SWING (and both look really ugly). If you have to write a gui application 
>that has to run on multiple platforms and needs to look a bit more modern, 
>you have very few choices. 
>
>
>	UC
>
>--
>Open Source Solutions 4U, LLC	2570 Fleetwood Drive
>Phone:  +1 650 872 2425		San Bruno, CA 94066
>Cell:   +1 650 302 2405		United States
>Fax:    +1 650 872 2417
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>
Thanks UG,  you summed up my views of the available cross-platform GUI's
better then I could.

SC



From tv at twistedmatrix.com  Sat Apr 16 11:00:17 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 16 Apr 2005 20:00:17 +0300
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <42601C2B.9090107@divmod.com>
References: <E1DMV6r-0007sI-00@pyramid.twistedmatrix.com>	<426017BD.1060800@osafoundation.org>
	<42601C2B.9090107@divmod.com>
Message-ID: <426144A1.8070902@twistedmatrix.com>

Glyph Lefkowitz wrote:
>> In fact this change actually breaks the Twisted smtp.py code.
> Wow.  That does look broken.  I suggest that if nobody explains this by 
> the end of the day that the change be reverted right away...

Blame spiv.

[0 tv at tao ~/src/twisted/trunk]$ svn log -v -r13494
------------------------------------------------------------------------
r13494 | spiv | 2005-04-07 17:33:58 +0300 (Thu, 07 Apr 2005) | 1 line
Changed paths:
    M /trunk/twisted/protocols/ftp.py
    M /trunk/twisted/protocols/policies.py
    M /trunk/twisted/test/test_ftp.py
    M /trunk/twisted/test/test_policies.py

Refactor untested connection-limiting from FTP server to 
twisted.protocols.policies.LimitTotalConnectionsFactory, with tests.
------------------------------------------------------------------------



From paolo_veronelli at yahoo.it  Sat Apr 16 12:50:02 2005
From: paolo_veronelli at yahoo.it (User Paolino)
Date: Sat, 16 Apr 2005 18:50:02 +0000
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <425FEE27.8080502@indiana.edu>
References: <425FEE27.8080502@indiana.edu>
Message-ID: <42615E5A.1020509@yahoo.it>

def deferredReady(value=False,later=0):
  deferred=Deferred()
  reactor.callLater(later,deferred.callback,value)
  return deferred

def generatorLoop(generator,listOfParams,multi=False):
  lista=[]
  for params in listOfParams:
    if multi:
      lista.append(deferredGenerator(generator)(*params))
    else:
      lista.append(deferredGenerator(generator)(params))  
  return DeferredList(lista)


Thanks Paolino





From exarkun at divmod.com  Sat Apr 16 12:49:37 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 16 Apr 2005 18:49:37 GMT
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <42615E5A.1020509@yahoo.it>
Message-ID: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>

On Sat, 16 Apr 2005 18:50:02 +0000, User Paolino <paolo_veronelli at yahoo.it> wrote:
>def deferredReady(value=False,later=0):
>  deferred=Deferred()
>  reactor.callLater(later,deferred.callback,value)
>  return deferred
>
>def generatorLoop(generator,listOfParams,multi=False):
>  lista=[]
>  for params in listOfParams:
>    if multi:
>      lista.append(deferredGenerator(generator)(*params))
>    else:
>      lista.append(deferredGenerator(generator)(params))   return 
>DeferredList(lista)
>

  What?  Also, why?

  Jp



From exarkun at divmod.com  Sat Apr 16 12:50:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 16 Apr 2005 18:50:09 GMT
Subject: [Twisted-Python] policies.py change in 2.0
In-Reply-To: <426144A1.8070902@twistedmatrix.com>
Message-ID: <20050416185009.10340.1796578648.divmod.quotient.6027@ohm>

On Sat, 16 Apr 2005 20:00:17 +0300, Tommi Virtanen <tv at twistedmatrix.com> wrote:
>Glyph Lefkowitz wrote:
>>>In fact this change actually breaks the Twisted smtp.py code.
>>Wow.  That does look broken.  I suggest that if nobody explains this by the 
>>end of the day that the change be reverted right away...
>
>Blame spiv.
>
>[0 tv at tao ~/src/twisted/trunk]$ svn log -v -r13494
>------------------------------------------------------------------------
>r13494 | spiv | 2005-04-07 17:33:58 +0300 (Thu, 07 Apr 2005) | 1 line
>Changed paths:
>    M /trunk/twisted/protocols/ftp.py
>    M /trunk/twisted/protocols/policies.py
>    M /trunk/twisted/test/test_ftp.py
>    M /trunk/twisted/test/test_policies.py
>
>Refactor untested connection-limiting from FTP server to 
>twisted.protocols.policies.LimitTotalConnectionsFactory, with tests.
>------------------------------------------------------------------------
>

  Note that this change was post-2.0.

  Jp



From bob at redivi.com  Sun Apr 17 03:42:28 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 05:42:28 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
Message-ID: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>

In response to the "wxpython issues" thread I had suggested that we 
should have a thread-using reactor that integrates with foreign event 
loops, so I wrote one and committed it 
(twisted.internet.threadedselectreactor).  Since this approach requires 
less maintenance, and whomever maintains the select reactor can 
trivially maintain this as well, I'm "officially" deprecating cfreactor 
(although I never really cared much to maintain it anyway).

An example of using it to integrate with a foreign event loop is at: 
doc/core/examples/Cocoa/SimpleWebClient

It should be relatively trivial to show how it could be used to 
integrate with other event loops (wx, Tkinter, pygame, etc.).  
Effectively, it's compatible with anything that has a thread-safe way 
to notify the main event loop.

In the future, it might make sense to revise the reactor API to support 
"interleave" directly, and change the existing reactors accordingly so 
that more than just select can support this behavior.

-bob




From darran.edmundson at anu.edu.au  Sun Apr 17 04:11:19 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Sun, 17 Apr 2005 20:11:19 +1000
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
Message-ID: <42623647.3070605@anu.edu.au>

Bob Ippolito wrote:
> In response to the "wxpython issues" thread I had suggested that we 
> should have a thread-using reactor that integrates with foreign event 
> loops, so I wrote one and committed it 
> (twisted.internet.threadedselectreactor).  

I wonder if anyone could be tempted into whipping up a minimal wx
example with this new reactor?  We've got 5 days left to finish a mountain
of code for a conference demo in San Francisco - a robust wx/twisted
app is just part of this.  We're currently spawning a thread from within
wx.  It works ... but it sounds like we'd be better off with things reversed
as above.

Cheers,
Darran.

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088



From bob at redivi.com  Sun Apr 17 04:51:34 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 06:51:34 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <42623647.3070605@anu.edu.au>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<42623647.3070605@anu.edu.au>
Message-ID: <ce7c9d93d3812a547418be84d258e52b@redivi.com>


On Apr 17, 2005, at 6:11 AM, Darran Edmundson wrote:

> Bob Ippolito wrote:
>> In response to the "wxpython issues" thread I had suggested that we 
>> should have a thread-using reactor that integrates with foreign event 
>> loops, so I wrote one and committed it 
>> (twisted.internet.threadedselectreactor).
>
> I wonder if anyone could be tempted into whipping up a minimal wx
> example with this new reactor?  We've got 5 days left to finish a 
> mountain
> of code for a conference demo in San Francisco - a robust wx/twisted
> app is just part of this.  We're currently spawning a thread from 
> within
> wx.  It works ... but it sounds like we'd be better off with things 
> reversed
> as above.

Yeah, done.  Check doc/core/examples/threadedselect (I moved the Cocoa 
example in there as well)

-bob




From foom at fuhm.net  Sun Apr 17 10:02:27 2005
From: foom at fuhm.net (James Y Knight)
Date: Sun, 17 Apr 2005 12:02:27 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
Message-ID: <a2322b96733421e8608cc3e39c046c92@fuhm.net>

On Apr 17, 2005, at 5:42 AM, Bob Ippolito wrote:
> In response to the "wxpython issues" thread I had suggested that we 
> should have a thread-using reactor that integrates with foreign event 
> loops, so I wrote one and committed it 
> (twisted.internet.threadedselectreactor).  Since this approach 
> requires less maintenance, and whomever maintains the select reactor 
> can trivially maintain this as well, I'm "officially" deprecating 
> cfreactor (although I never really cared much to maintain it anyway).

Seems like a good idea. Does it actually fix WX? That is, does 
wxCallAfter not suffer from the "oh you wanted it to happen *now*, not 
a second later" problem?

James




From corydodt at twistedmatrix.com  Sun Apr 17 11:43:00 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Sun, 17 Apr 2005 09:43:00 -0800
Subject: [Twisted-Python] Experimental win32 installers. Twisted=2.0.0,
	installer=rc3
Message-ID: <4262A024.3050001@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

New release of the experimental installers.  These have the correct
version strings for all projects, and z.i compiled.

Check em out.  Website will have updated links soonish.

http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc3%29-py2.4.exe
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc3%29-py2.3.exe

C

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCYqAk3A5SrXAiHQcRAu5PAJ4mGi6i+wIW5qCa9YhX8Ras0VktUgCfdMJC
s9YTtGIjWY1b5NXisoJ+yKY=
=q4Am
-----END PGP SIGNATURE-----



From bob at redivi.com  Sun Apr 17 14:55:20 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 16:55:20 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <a2322b96733421e8608cc3e39c046c92@fuhm.net>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<a2322b96733421e8608cc3e39c046c92@fuhm.net>
Message-ID: <ace102e1bd8ccf4eb4224fdd9300cb23@redivi.com>


On Apr 17, 2005, at 12:02 PM, James Y Knight wrote:

> On Apr 17, 2005, at 5:42 AM, Bob Ippolito wrote:
>> In response to the "wxpython issues" thread I had suggested that we 
>> should have a thread-using reactor that integrates with foreign event 
>> loops, so I wrote one and committed it 
>> (twisted.internet.threadedselectreactor).  Since this approach 
>> requires less maintenance, and whomever maintains the select reactor 
>> can trivially maintain this as well, I'm "officially" deprecating 
>> cfreactor (although I never really cared much to maintain it anyway).
>
> Seems like a good idea. Does it actually fix WX? That is, does 
> wxCallAfter not suffer from the "oh you wanted it to happen *now*, not 
> a second later" problem?

Try it.

-bob




From Sl_Church at sbcglobal.net  Sun Apr 17 16:21:36 2005
From: Sl_Church at sbcglobal.net (Shawn Church)
Date: Sun, 17 Apr 2005 15:21:36 -0700
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
Message-ID: <4262E170.5070804@sbcglobal.net>

Thanks for your work in developing this new reactor.  I just have a
couple questions:

Is it (thread) safe to call wx methods from within call/errbacks with
this reactor?  I ask because I was (based upon the example at
http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample)
translating callbacks into wx.Events executed during the next wx loop
(the PostEvent function is thread safe).  If I am understanding the
threadedselectreactor.py code correctly it is "waking" the wx loop and
therefore this should not be needed since only one mainloop will be
active at a time.

Also my understanding is that the reactor.interleave function should be
called ONCE in order to provide a function to wake the foreign event
loop.  I am doing this in MyApp.OnInit() and it seems to work fine.  The
example shows this being executed in the frame's __init__ function and I
do not think this will work for multiple frames (I'm not saying there is
anything WRONG with the example,  I'm just trying to make sure I
understand the correct use of the new reactor when dealing with multiple
wxWindow objects).

I did not have any problems converting my test application to use the
new reactor,  but I wanted to clarify these items so they don't bite me
later on.


Thanks once again,


Shawn

sl_church at sbcglobal.net
http://SChurchComputers.com


Bob Ippolito wrote:

> In response to the "wxpython issues" thread I had suggested that we
> should have a thread-using reactor that integrates with foreign event
> loops, so I wrote one and committed it
> (twisted.internet.threadedselectreactor).  Since this approach
> requires less maintenance, and whomever maintains the select reactor
> can trivially maintain this as well, I'm "officially" deprecating
> cfreactor (although I never really cared much to maintain it anyway).
>
> An example of using it to integrate with a foreign event loop is at:
> doc/core/examples/Cocoa/SimpleWebClient
>
> It should be relatively trivial to show how it could be used to
> integrate with other event loops (wx, Tkinter, pygame, etc.). 
> Effectively, it's compatible with anything that has a thread-safe way
> to notify the main event loop.
>
> In the future, it might make sense to revise the reactor API to
> support "interleave" directly, and change the existing reactors
> accordingly so that more than just select can support this behavior.
>
> -bob
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From bob at redivi.com  Sun Apr 17 16:45:47 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 17 Apr 2005 18:45:47 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <4262E170.5070804@sbcglobal.net>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<4262E170.5070804@sbcglobal.net>
Message-ID: <29115f61aac6c6f161cc8f37e4a92e8a@redivi.com>


On Apr 17, 2005, at 6:21 PM, Shawn Church wrote:

> Bob Ippolito wrote:
>
>> In response to the "wxpython issues" thread I had suggested that we
>> should have a thread-using reactor that integrates with foreign event
>> loops, so I wrote one and committed it
>> (twisted.internet.threadedselectreactor).  Since this approach
>> requires less maintenance, and whomever maintains the select reactor
>> can trivially maintain this as well, I'm "officially" deprecating
>> cfreactor (although I never really cared much to maintain it anyway).
>>
>> An example of using it to integrate with a foreign event loop is at:
>> doc/core/examples/Cocoa/SimpleWebClient
>>
>> It should be relatively trivial to show how it could be used to
>> integrate with other event loops (wx, Tkinter, pygame, etc.).
>> Effectively, it's compatible with anything that has a thread-safe way
>> to notify the main event loop.
>>
>> In the future, it might make sense to revise the reactor API to
>> support "interleave" directly, and change the existing reactors
>> accordingly so that more than just select can support this behavior.
>>
> Thanks for your work in developing this new reactor.  I just have a
> couple questions:
>
> Is it (thread) safe to call wx methods from within call/errbacks with
> this reactor?  I ask because I was (based upon the example at
> http://solipsis.netofpeers.net/wiki/wikka.php?wakka=WxTwistedExample)
> translating callbacks into wx.Events executed during the next wx loop
> (the PostEvent function is thread safe).

Forget everything you ever learned about wxPython/Twisted integration.  
It is no longer relevant.  Forget that any of the ugly wxPython+Twisted 
Python Cookbook entries, lame wiki examples, 
twisted.internet.wxreactor, etc. even exist.

> If I am understanding the
> threadedselectreactor.py code correctly it is "waking" the wx loop and
> therefore this should not be needed since only one mainloop will be
> active at a time.

threadedselectreactor lets you imagine that you're in a wonderful 
single threaded world where everything happens in a context where 
calling into Twisted and wxPython are both safe (unless you explicitly 
make life suck by creating more threads).

> Also my understanding is that the reactor.interleave function should be
> called ONCE in order to provide a function to wake the foreign event
> loop.  I am doing this in MyApp.OnInit() and it seems to work fine.  
> The
> example shows this being executed in the frame's __init__ function and 
> I
> do not think this will work for multiple frames (I'm not saying there 
> is
> anything WRONG with the example,  I'm just trying to make sure I
> understand the correct use of the new reactor when dealing with 
> multiple
> wxWindow objects).

Yes it should be called exactly once.  The example does it for the main 
frame.  It is done there because that is the same frame that quits the 
application when it's closed, so it also integrates with reactor.stop.

-bob




From itamar at itamarst.org  Sun Apr 17 20:22:32 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 17 Apr 2005 22:22:32 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <29115f61aac6c6f161cc8f37e4a92e8a@redivi.com>
References: <4de97742dab6f6b44503a8d9f1cc7b7b@redivi.com>
	<4262E170.5070804@sbcglobal.net>
	<29115f61aac6c6f161cc8f37e4a92e8a@redivi.com>
Message-ID: <1113790953.8910.11.camel@localhost.localdomain>

On Sun, 2005-04-17 at 18:45 -0400, Bob Ippolito wrote:

> Forget everything you ever learned about wxPython/Twisted integration.  
> It is no longer relevant.  Forget that any of the ugly wxPython+Twisted 
> Python Cookbook entries, lame wiki examples, 
> twisted.internet.wxreactor, etc. even exist.

We should update the GUI event loop integration howto to point at the
new method, and deprecate wxsupport and wxreactor too, in that case.




From glyph at divmod.com  Sun Apr 17 23:19:19 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 18 Apr 2005 05:19:19 GMT
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <1113790953.8910.11.camel@localhost.localdomain>
Message-ID: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>



On Sun, 17 Apr 2005 22:22:32 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Sun, 2005-04-17 at 18:45 -0400, Bob Ippolito wrote:
>
>> Forget everything you ever learned about wxPython/Twisted integration.
>> It is no longer relevant.  Forget that any of the ugly wxPython+Twisted
>> Python Cookbook entries, lame wiki examples,
>> twisted.internet.wxreactor, etc. even exist.
>
>We should update the GUI event loop integration howto to point at the
>new method, and deprecate wxsupport and wxreactor too, in that case.

Why not just change wxreactor.install() to use this new code, rather than deprecating it?  That would leave the door open to new strategies in case wx ever gets a non-broken eventloop.



From bob at redivi.com  Sun Apr 17 23:54:54 2005
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 18 Apr 2005 01:54:54 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>
References: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>
Message-ID: <d2da345f6c73aec30e83014ed9437709@redivi.com>

On Apr 18, 2005, at 1:19 AM, glyph at divmod.com wrote:

>
>
> On Sun, 17 Apr 2005 22:22:32 -0400, Itamar Shtull-Trauring 
> <itamar at itamarst.org> wrote:
>> On Sun, 2005-04-17 at 18:45 -0400, Bob Ippolito wrote:
>>
>>> Forget everything you ever learned about wxPython/Twisted 
>>> integration.
>>> It is no longer relevant.  Forget that any of the ugly 
>>> wxPython+Twisted
>>> Python Cookbook entries, lame wiki examples,
>>> twisted.internet.wxreactor, etc. even exist.
>>
>> We should update the GUI event loop integration howto to point at the
>> new method, and deprecate wxsupport and wxreactor too, in that case.
>
> Why not just change wxreactor.install() to use this new code, rather 
> than deprecating it?  That would leave the door open to new strategies 
> in case wx ever gets a non-broken eventloop.

I look at it this way:

- Using a thread for a socket event source isn't a bad idea (it's what 
Qt/Cocoa/etc. are doing behind your back anyway), and can give us 
options for even better performance on multi-core/multi-processor 
machines when a foreign event loop is in control (i.e. reads and writes 
could also happen in the thread).

- Writing wrappers for the socket/timer stuff in GUI frameworks sucks, 
because they're often too different, limited, or buggy

- The implementations of socket wrappers and timers in GUI frameworks 
are usually slow, incomplete, buggy, etc. (again).

- Not caring about GUI reactors lets you deprecate > 1300 lines of 
reactor code in exchange for a couple examples and a short support 
library or two that we should have anyway

- The reactor interface could be extended such that 
threadedselectreactor goes away, and the select/kqueue/poll/epoll/iocp 
reactors become compatible with interleave(), which lets all reactors 
be compatible with foreign event loops while still maintaining the 
choice to do whatever is teh smart for your platform.

-bob




From glyph at divmod.com  Mon Apr 18 00:07:05 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Mon, 18 Apr 2005 02:07:05 -0400
Subject: [Twisted-Python] Foreign event loop friendly reactor
In-Reply-To: <d2da345f6c73aec30e83014ed9437709@redivi.com>
References: <20050418051919.10340.1231278581.divmod.quotient.9053@ohm>
	<d2da345f6c73aec30e83014ed9437709@redivi.com>
Message-ID: <42634E89.8030306@divmod.com>

Bob Ippolito wrote:
> On Apr 18, 2005, at 1:19 AM, glyph at divmod.com wrote:

>> Why not just change wxreactor.install() to use this new code, rather 
>> than deprecating it?  That would leave the door open to new strategies 
>> in case wx ever gets a non-broken eventloop.

> I look at it this way:

I don't disagree with any of your points, I'm just saying that we don't 
need to deprecate an interface every time we change an implementation. 
*some* event loops (e.g. gtk) are actually better than the normal 
reactor one, so it still makes sense to choose on that basis in some 
cases.  In the cases where the threadedselectreactor is 
better-performing than the direct-GUI-integration approach, that should 
be a decision that the Twisted core is aware of, but not necessarily one 
that the application developer need be made aware of.



From Henning.Ramm at mediapro-gmbh.de  Mon Apr 18 01:34:22 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 18 Apr 2005 09:34:22 +0200
Subject: [Twisted-Python] Foreign event loop friendly reactor
Message-ID: <F92274058556DE42B94B148EEFB9183949E6C5@exchange-03.suedkurier.de>

I really admire how you make a better, lighter world
in a few hours from a "simple" request on the list!

That's what I really love about mailing lists where
the wizards are present - and as responsive as you guys.
(Similar to my "home" list about ConTeXt...)

Keep rockin' and blessed be!

HR



From jean-marc.pouchoulon at ac-montpellier.fr  Mon Apr 18 05:29:29 2005
From: jean-marc.pouchoulon at ac-montpellier.fr (jean-marc.pouchoulon at ac-montpellier.fr)
Date: Mon, 18 Apr 2005 13:29:29 +0200
Subject: [Twisted-Python] twisted 2 mktap  runs  but
Message-ID: <42639A19.3090701@ac-montpellier.fr>

bonjour,

portforward.tap is valid but :

/usr/local/bin/mktap -u 80030 portforward -p 10526 -h machine.domain -d 
10530
which: no dia in 
(/home/bin:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
:/usr/X11R6/bin:/root/bin)
Traceback (most recent call last):
  File 
"/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", line 
193, in run
    options.parseOptions(sys.argv[1:])
  File "/usr/local/lib/python2.4/site-packages/twisted/python/usage.py", 
line 197, in parseOptions
    self.postOptions()
  File 
"/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", line 
175, in postOptions
    self.tapLookup = loadPlugins(debug, progress)
  File 
"/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", line 
75, in loadPlugins
    for plug in plugins:
--- <exception caught here> ---
  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 
203, in getPlugIns
    adapted = interface(plugin, None)
  File 
"/usr/local/lib/python2.4/site-packages/zope/interface/interface.py", 
line 658, in __call__
    adapter = conform(self)
  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 
77, in __conform__
    return self.load()
  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 
72, in load
    return namedAny(self.dropin.moduleName + '.' + self.name)
  File 
"/usr/local/lib/python2.4/site-packages/twisted/python/reflect.py", line 
389, in namedAny
    obj = getattr(obj, n)
exceptions.AttributeError: 'module' object has no attribute 'twisted_news'

miss something ?
thanks





From justinjohnson at gmail.com  Mon Apr 18 08:02:15 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 18 Apr 2005 09:02:15 -0500
Subject: [Twisted-Python] mktap.py missing from Twisted 2.0 Windows installer
Message-ID: <94a776e705041807024d3b6e38@mail.gmail.com>

I just installed Twisted 2.0 on Windows XP using the Python 2.3 installer at 
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc3)-py2.3.exe.
After installing, mktap.py can't be found anywhere in any subdirectories of 
my Python install.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050418/39f988f0/attachment.html>

From exarkun at divmod.com  Mon Apr 18 08:17:10 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 18 Apr 2005 14:17:10 GMT
Subject: [Twisted-Python] twisted 2 mktap  runs  but
In-Reply-To: <42639A19.3090701@ac-montpellier.fr>
Message-ID: <20050418141710.10340.1649758508.divmod.quotient.9862@ohm>

On Mon, 18 Apr 2005 13:29:29 +0200, jean-marc.pouchoulon at ac-montpellier.fr wrote:
>bonjour,
>
>portforward.tap is valid but :
>
>/usr/local/bin/mktap -u 80030 portforward -p 10526 -h machine.domain -d 
>10530
>which: no dia in 
>(/home/bin:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
>:/usr/X11R6/bin:/root/bin)
>Traceback (most recent call last):
>  File "/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", 
>line 193, in run
>    options.parseOptions(sys.argv[1:])
>  File "/usr/local/lib/python2.4/site-packages/twisted/python/usage.py", line 
>197, in parseOptions
>    self.postOptions()
>  File "/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", 
>line 175, in postOptions
>    self.tapLookup = loadPlugins(debug, progress)
>  File "/usr/local/lib/python2.4/site-packages/twisted/scripts/mktap.py", 
>line 75, in loadPlugins
>    for plug in plugins:
>--- <exception caught here> ---
>  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 203, 
>in getPlugIns
>    adapted = interface(plugin, None)
>  File "/usr/local/lib/python2.4/site-packages/zope/interface/interface.py", 
>line 658, in __call__
>    adapter = conform(self)
>  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 77, 
>in __conform__
>    return self.load()
>  File "/usr/local/lib/python2.4/site-packages/twisted/plugin.py", line 72, 
>in load
>    return namedAny(self.dropin.moduleName + '.' + self.name)
>  File "/usr/local/lib/python2.4/site-packages/twisted/python/reflect.py", 
>line 389, in namedAny
>    obj = getattr(obj, n)
>exceptions.AttributeError: 'module' object has no attribute 'twisted_news'
>
>miss something ?
>thanks
>

  Thanks for the report.  This is a known bug with the 2.0 installer.  The news package was accidentally omitted (although it is present in the tarball - it just doesn't get installed).  An upcoming 2.0.1 release will fix the problem.  In the mean time, if you're not using news, there's nothing to worry about.  The report is only to warn you that the install isn't quite right.

  Jp



From exarkun at divmod.com  Mon Apr 18 08:20:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 18 Apr 2005 14:20:39 GMT
Subject: [Twisted-Python] mktap.py missing from Twisted 2.0 Windows
	installer
In-Reply-To: 0
Message-ID: <20050418142039.10340.349522351.divmod.quotient.9870@ohm>

On Mon, 18 Apr 2005 09:02:15 -0500, Justin Johnson <justinjohnson at gmail.com> wrote:
>I just installed Twisted 2.0 on Windows XP using the Python 2.3 installer at
>http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc3)-py2.3.exe.
>After installing, mktap.py can't be found anywhere in any subdirectories of
>my Python install.
>

  Thanks for the report.  I've created an issue in the bug tracker and assigned it to Cory.

  Just a reminder, Twisted's bug tracker is at <http://twistedmatrix.com/bugs/> and bugs reported there, rather than on the mailing list, are more likely to get developer attention.

  Jp



From justinjohnson at gmail.com  Mon Apr 18 08:26:10 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 18 Apr 2005 09:26:10 -0500
Subject: [Twisted-Python] mktap.py missing from Twisted 2.0 Windows
	installer
In-Reply-To: <20050418142039.10340.349522351.divmod.quotient.9870@ohm>
References: <20050418142039.10340.349522351.divmod.quotient.9870@ohm>
Message-ID: <94a776e7050418072677bbc7d4@mail.gmail.com>

I thought about that after I sent the email. Thanks.

 On 4/18/05, Jp Calderone <exarkun at divmod.com> wrote: 
> 
> On Mon, 18 Apr 2005 09:02:15 -0500, Justin Johnson <
> justinjohnson at gmail.com> wrote:
> >I just installed Twisted 2.0 on Windows XP using the Python 2.3 installer 
> at
> >
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc3)-py2.3.exe
> .
> >After installing, mktap.py can't be found anywhere in any subdirectories 
> of
> >my Python install.
> >
> 
> Thanks for the report. I've created an issue in the bug tracker and 
> assigned it to Cory.
> 
> Just a reminder, Twisted's bug tracker is at <
> http://twistedmatrix.com/bugs/> and bugs reported there, rather than on 
> the mailing list, are more likely to get developer attention.
> 
> Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050418/d65b6a11/attachment.html>

From cmoad at indiana.edu  Mon Apr 18 09:21:22 2005
From: cmoad at indiana.edu (Charles Moad)
Date: Mon, 18 Apr 2005 10:21:22 -0500
Subject: [Twisted-Python] Domain Filter Suggestions
Message-ID: <4263D072.50804@indiana.edu>

Hi,
	I am working on a soap service that I am wanting to implement a domain
filter on.  Basically, if I get an IP I do not know, I defer a reverse
dns lookup and accept their request.  The defer does the reverse dns
lookup and records whether they were a .edu or not.  If I get another
request from the same IP I reject or accept their request based on the
previous lookup.
	I have an implementation that is pretty much working, but for some
lookups I get an error since the machine does not have ipv6 enabled.
(Why is this a dependency?)  Here is a little code based on previous
postings on rdns.

from twisted.names import client

addr = '127.0.0.1' # any ip goes here
ptr = '.'.join(addr.split('.')[::-1]) + '.in-addr.arpa'
d = client.lookupPointer(ptr)
d.addCallback(lambda ans, auth, add: log.write(ans[0].payload.name))

	Is this approach stupid? :) Any suggestions as to the cleanest approach
to this are greatly appreciated!

Thanks,
	Charlie



From qvx3000 at gmail.com  Mon Apr 18 16:11:59 2005
From: qvx3000 at gmail.com (Qvx 3000)
Date: Tue, 19 Apr 2005 00:11:59 +0200
Subject: [Twisted-Python] Event dispatcher example and deferreds
Message-ID: <8038a881050418151140a24554@mail.gmail.com>

Consider the following twisted example::

class Event:
    def _parse ...
    def __str__ ...

class EventChannel(basic.Int32StringReceiver):
    def connectionMade(self):
        self.factory.eventConnectionMade(self)
    def connectionLost(self, reason):
        self.factory.eventConnectionLost(self, reason)
    def stringReceived(self, recd):
        event = Event._parse(recd)
        self.factory.eventReceived(self, event)
    def sendEvent(self, devent):
        devent.addCallback(lambda e: self.sendString(str(e)))

class EventService(service.Service):

    def __init__ (self):
        self.registry = {}
        self.clients = {}
        self.funcs = dict(bind=self._bind, unbind=self._unbind)

    def getEventFactory(self):
        f = protocol.ServerFactory()
        f.protocol = EventChannel
        f.eventConnectionMade = self.eventConnectionMade
        f.eventReceived       = self.eventReceived
        f.eventConnectionLost = self.eventConnectionLost
        return f

    def eventConnectionMade(self, proto):
        self.clients[id(proto)] = proto

    def eventReceived(self, proto, event):
        func = self.funcs.get(event.name, self._notify)
        func(event)

    def eventConnectionLost(self, proto, reason):
        # remove from list of clients
        if self.clients[id(proto)] == proto:
            del self.clients[id(proto)]
        # remove from registry
        for event_name, protos in self.registry.items():
            if proto in protos:
                protos.remove(proto)

    def _bind (self, event, proto):
        current = self.registry.setdefault(event.event_name, [])
        if proto not in current:
            current.append(proto)

    def _unbind (self, event, proto):
        protos = self.registry.get(event.event_name, [])
        if proto in protos:
            protos.remove(proto)

    def _notify (self, event):
        current = self.registry.get(event.name, [])
        for proto in current:
            #if proto connected:
            proto.sendEvent(defer.succeed(event))


This is a simple event dispatching service. 

It receives connections from clients (channels). Upon receiving new connection
service remembers the connection. Each connection can bind to specific event(s).
This is achieved by sending <bind> event. After the client binds to event, it
will receive event notifications whenever a dispatcher receives such events 
from any client.
It is similar to GUI messaging systems.


I have a few questions:

1. Do I have to use deferreds? And more importantly - HOW? 
I am worried that one slow connection could have impact on other connections.
I definitely want to avoid this.
(service is only dispatching events - there are no DB or filesystem operations)

2. What if I try to send event to recently closed channel of which I am 
not aware yet (connectionLost could be inside a long queue perhaps 
- am I talking any sense?).

3. How can I assign some kind of ID to automagically created EventChannel? 
I guess id(obj) is not good enough.

4. I'm curious: is there any limit to the number of open connections? 
Could twisted on Windows handle 10,000 or even 100,000 concurrent connections?
(I will test this, but maybe somebody has some kind of real life example)

Thanks,
Qvx



From sir.shz at gmail.com  Mon Apr 18 16:35:57 2005
From: sir.shz at gmail.com (sir shz)
Date: Mon, 18 Apr 2005 15:35:57 -0700
Subject: [Twisted-Python] Twisted network games
References: <8038a881050418151140a24554@mail.gmail.com>
Message-ID: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>

Hi, I'm just starting to poke into Twisted, actually python itself. I'm
thinking of writing a network based game, e.g., card games like poker.
Twisted seems to be the right tool for it. Are there any existing projects
in that direction? Have there been this type of multiple player games
written in Twisted? or in Python (which must surely exist)?

Thanks.

Z.




From itamar at itamarst.org  Mon Apr 18 17:27:54 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 18 Apr 2005 19:27:54 -0400
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <1113866874.8910.26.camel@localhost.localdomain>

On Mon, 2005-04-18 at 15:35 -0700, sir shz wrote:
> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
> thinking of writing a network based game, e.g., card games like poker.
> Twisted seems to be the right tool for it. Are there any existing projects
> in that direction? Have there been this type of multiple player games
> written in Twisted? or in Python (which must surely exist)?

Supposedly this uses Twisted: http://mekensleep.org/. Also there's Go
Siege, a multiplayer go variant.




From xhantt at gmail.com  Mon Apr 18 17:29:08 2005
From: xhantt at gmail.com (xhantt)
Date: Mon, 18 Apr 2005 20:29:08 -0300
Subject: [Twisted-Python] Help parsing with microdom
Message-ID: <fc2ff80e05041816295006d231@mail.gmail.com>

Hi, I'm using microdom to parse some xml input.

>From the following example I wan to get 'hello' string

import sys

from twisted.web import microdom



d = microdom.parseString('<html><body>hello</body></html>')

print d.childNodes[0].childNodes[0].childNodes[0]


But i get Text('hello'), please help any suggestion will be appreciated.



From ken at kenkinder.com  Mon Apr 18 17:46:37 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 18 Apr 2005 18:46:37 -0500
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <426446DD.2070508@kenkinder.com>

Well, I hate to be discouraging, but you would probably do well to learn 
Python more thoroughly before diving into Twisted. I got into Twisted a 
year and a half ago having programmed in Python already for 4 years, and 
it was still somewhat intimidating.

Aside from that, I'm not sure you would really be sharing much code with 
other developers unless someone out there wants to do exactly what 
you're doing. A simple Google search reveals a number of mailing list 
discussions about game-related topics like UDP, but they are probably 
not relevant to your project. Because the whole thing sounds like it 
wouldn't require a lot of real-time communication, I would just use 
Perspective Broker. If you've ever used something like COM or other 
object brokering systems, PB should be relatively simple aside from its 
asynchronous nature.

I assume you're aware of the PyGame project which provides API's for 
things like sprites and sounds: http://www.pygame.org/ -- I'm not sure 
how many people have tried integrating PyGame with Twisted, but I did 
find this post from 2003: 
http://twistedmatrix.com/pipermail/twisted-python/2003-December/006829.html

Hope this helps.

-Ken

sir shz wrote:

>Hi, I'm just starting to poke into Twisted, actually python itself. I'm
>thinking of writing a network based game, e.g., card games like poker.
>Twisted seems to be the right tool for it. Are there any existing projects
>in that direction? Have there been this type of multiple player games
>written in Twisted? or in Python (which must surely exist)?
>
>Thanks.
>
>Z.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From jritter at bektel.com  Mon Apr 18 20:20:00 2005
From: jritter at bektel.com (Josh Ritter)
Date: Mon, 18 Apr 2005 21:20:00 -0500
Subject: [Twisted-Python] Twisted network games
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <177901c54486$49d61340$0400000a@spooge>

Hi,

We use Twisted in our single/multiplayer RPG called Minions of Mirth.  The 
multiplayer game is very much like a 3d MUD.  We use Twisted's perspective 
broker for the Master Server, Simulation Server, World Server, Client... 
well, just about everything :)

The outdated webpage for the game is: http://www.prairiegames.com/games.html 
(there's a pretty cool quicktime video linked there, the video is OLD)

Some more current information and screenshots can be found here: 
http://www.prairiegames.com/phpBB2/viewtopic.php?t=2 and 
http://www.prairiegames.com/phpBB2/viewforum.php?f=4

We are currently in alpha and the reponse has been GREAT!

Twisted rocks!!!!

-Josh Ritter
Prairie Games



----- Original Message ----- 
From: "sir shz" <sir.shz at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, April 18, 2005 5:35 PM
Subject: [Twisted-Python] Twisted network games


> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
> thinking of writing a network based game, e.g., card games like poker.
> Twisted seems to be the right tool for it. Are there any existing projects
> in that direction? Have there been this type of multiple player games
> written in Twisted? or in Python (which must surely exist)?
>
> Thanks.
>
> Z.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From dripton at ripton.net  Tue Apr 19 07:05:59 2005
From: dripton at ripton.net (David Ripton)
Date: Tue, 19 Apr 2005 06:05:59 -0700
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
Message-ID: <20050419130558.GB416@vidar.dreamhost.com>

On 2005.04.18 15:35:57 +0000, sir shz wrote:
> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
> thinking of writing a network based game, e.g., card games like poker.
> Twisted seems to be the right tool for it. Are there any existing projects
> in that direction? Have there been this type of multiple player games
> written in Twisted? or in Python (which must surely exist)?

Mine is at http://slugathon.sf.net

Not actually playable yet, but there's enough code to serve as a decent
example of pb, cred, integration with PyGTK, and passing event objects
instead of sharing live game objects to avoid leaking hidden information
to the client.

I second the recommendation for GoSiege, except that it's more realtime
than turn-based.  (Players move whenever they want to, within some move
rate limit, rather than strictly taking turns.)  This is necessary if
you want your game to scale to large numbers of players without becoming
a wait-fest, but the logic is very different than turn-based games like
poker.

-- 
David Ripton    dripton at ripton.net



From bolsen at verio.net  Tue Apr 19 09:29:19 2005
From: bolsen at verio.net (Ben Olsen)
Date: Tue, 19 Apr 2005 09:29:19 -0600
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <426446DD.2070508@kenkinder.com>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
	<426446DD.2070508@kenkinder.com>
Message-ID: <426523CF.4010703@verio.net>

I've had great success integrating Twisted and Pygame for some learning 
projects I've been doing (started with a netPong, moving on to 
netPente). Personally I use the Pygame loop and call reactor.iterate(), 
but I'd be curious to hear what other people have done.

Ben

Ken Kinder wrote:

> Well, I hate to be discouraging, but you would probably do well to 
> learn Python more thoroughly before diving into Twisted. I got into 
> Twisted a year and a half ago having programmed in Python already for 
> 4 years, and it was still somewhat intimidating.
>
> Aside from that, I'm not sure you would really be sharing much code 
> with other developers unless someone out there wants to do exactly 
> what you're doing. A simple Google search reveals a number of mailing 
> list discussions about game-related topics like UDP, but they are 
> probably not relevant to your project. Because the whole thing sounds 
> like it wouldn't require a lot of real-time communication, I would 
> just use Perspective Broker. If you've ever used something like COM or 
> other object brokering systems, PB should be relatively simple aside 
> from its asynchronous nature.
>
> I assume you're aware of the PyGame project which provides API's for 
> things like sprites and sounds: http://www.pygame.org/ -- I'm not sure 
> how many people have tried integrating PyGame with Twisted, but I did 
> find this post from 2003: 
> http://twistedmatrix.com/pipermail/twisted-python/2003-December/006829.html 
>
>
> Hope this helps.
>
> -Ken
>
> sir shz wrote:
>
>> Hi, I'm just starting to poke into Twisted, actually python itself. I'm
>> thinking of writing a network based game, e.g., card games like poker.
>> Twisted seems to be the right tool for it. Are there any existing 
>> projects
>> in that direction? Have there been this type of multiple player games
>> written in Twisted? or in Python (which must surely exist)?
>>
>> Thanks.
>>
>> Z.
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>  
>>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dialtone at divmod.com  Tue Apr 19 09:54:36 2005
From: dialtone at divmod.com (Valentino Volonghi aka Dialtone)
Date: Tue, 19 Apr 2005 17:54:36 +0200
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <426523CF.4010703@verio.net>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>	<426446DD.2070508@kenkinder.com>
	<426523CF.4010703@verio.net>
Message-ID: <426529BC.90201@divmod.com>

Ben Olsen wrote:

> I've had great success integrating Twisted and Pygame for some 
> learning projects I've been doing (started with a netPong, moving on 
> to netPente). Personally I use the Pygame loop and call 
> reactor.iterate(), but I'd be curious to hear what other people have 
> done.

Check the new example in Twisted-svn that uses the new selectthreaded 
reactor to integrate pygame and twisted.
Also use the mailing list archives, I think Bob Ippolito wrote a mail 
about it during this week.

-- 
Valentino Volonghi aka Dialtone
Now Running MacOSX 10.3.8
Blog: http://vvolonghi.blogspot.com
http://weever.berlios.de




From justinjohnson at gmail.com  Tue Apr 19 13:37:50 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Tue, 19 Apr 2005 14:37:50 -0500
Subject: [Twisted-Python] Patch for Issue844: Return PB Exceptions that have
	registered unjellyable
Message-ID: <94a776e705041912374adb5d1e@mail.gmail.com>

Will someone pretty please apply the patch I submitted for Issue844? The 
patch now includes tests. :-)
 http://twistedmatrix.com/bugs/issue844
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050419/97a8bd50/attachment.html>

From abe at fettig.net  Tue Apr 19 15:14:09 2005
From: abe at fettig.net (Abe Fettig)
Date: Tue, 19 Apr 2005 17:14:09 -0400
Subject: [Twisted-Python] Help parsing with microdom
In-Reply-To: <fc2ff80e05041816295006d231@mail.gmail.com>
References: <fc2ff80e05041816295006d231@mail.gmail.com>
Message-ID: <426574A1.7030001@fettig.net>

xhantt wrote:
> Hi, I'm using microdom to parse some xml input.
> 
>>From the following example I wan to get 'hello' string
> 
> import sys
> 
> from twisted.web import microdom
> d = microdom.parseString('<html><body>hello</body></html>')
> print d.childNodes[0].childNodes[0].childNodes[0]
> 
> 
> But i get Text('hello'), please help any suggestion will be appreciated.

To get the string value of the Text node object, use:

print d.childNodes[0].childNodes[0].childNodes[0].nodeValue

Abe




From bolsen at verio.net  Tue Apr 19 16:19:48 2005
From: bolsen at verio.net (Ben Olsen)
Date: Tue, 19 Apr 2005 16:19:48 -0600
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <426529BC.90201@divmod.com>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>	<426446DD.2070508@kenkinder.com>	<426523CF.4010703@verio.net>
	<426529BC.90201@divmod.com>
Message-ID: <42658404.2030703@verio.net>

This might be one for Bob Ippolito, but when I grabbed 
threadedselectreactor.py from SVN and ran the pygamedemo.py without 
modification, I got:

Traceback (most recent call last):
  File "pygamedemo.py", line 35, in ?
    reactor.callLater(1, helloWorld,1)
  File 
"C:\Python24\lib\site-packages\twisted\internet\threadedselectreactor.py", 
line 71, in callLater
    self.wakeUp()
  File 
"C:\Python24\lib\site-packages\twisted\internet\threadedselectreactor.py", 
line 67, in wakeUp
    self.waker.wakeUp()
AttributeError: 'NoneType' object has no attribute 'wakeUp'

So I added to line 67 of threadedselectreactor.py:
if self.waker:
and it seemed to run fine after that. I'm going to see if I can use this 
new reactor in my current pygame+twisted project.

Ben

Valentino Volonghi aka Dialtone wrote:

> Ben Olsen wrote:
>
>> I've had great success integrating Twisted and Pygame for some 
>> learning projects I've been doing (started with a netPong, moving on 
>> to netPente). Personally I use the Pygame loop and call 
>> reactor.iterate(), but I'd be curious to hear what other people have 
>> done.
>
>
> Check the new example in Twisted-svn that uses the new selectthreaded 
> reactor to integrate pygame and twisted.
> Also use the mailing list archives, I think Bob Ippolito wrote a mail 
> about it during this week.
>



From bob at redivi.com  Tue Apr 19 16:56:58 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 19 Apr 2005 18:56:58 -0400
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <42658404.2030703@verio.net>
References: <8038a881050418151140a24554@mail.gmail.com>	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>	<426446DD.2070508@kenkinder.com>	<426523CF.4010703@verio.net>
	<426529BC.90201@divmod.com> <42658404.2030703@verio.net>
Message-ID: <0a5359b1224a37c68be1804ba389955b@redivi.com>


On Apr 19, 2005, at 6:19 PM, Ben Olsen wrote:

> This might be one for Bob Ippolito, but when I grabbed  
> threadedselectreactor.py from SVN and ran the pygamedemo.py without  
> modification, I got:
>
> Traceback (most recent call last):
>  File "pygamedemo.py", line 35, in ?
>    reactor.callLater(1, helloWorld,1)
>  File  
> "C:\Python24\lib\site- 
> packages\twisted\internet\threadedselectreactor.py", line 71, in  
> callLater
>    self.wakeUp()
>  File  
> "C:\Python24\lib\site- 
> packages\twisted\internet\threadedselectreactor.py", line 67, in  
> wakeUp
>    self.waker.wakeUp()
> AttributeError: 'NoneType' object has no attribute 'wakeUp'
>
> So I added to line 67 of threadedselectreactor.py:
> if self.waker:
> and it seemed to run fine after that. I'm going to see if I can use  
> this new reactor in my current pygame+twisted project.

Actually, it's not for me.  I don't use Win32.  Someone who uses Win32,  
and cares, needs to debug this.  It's not a problem for anything else.

-bob




From andrew-twisted at puzzling.org  Tue Apr 19 17:05:47 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 20 Apr 2005 09:05:47 +1000
Subject: [Twisted-Python] Twisted network games
In-Reply-To: <42658404.2030703@verio.net>
References: <8038a881050418151140a24554@mail.gmail.com>
	<001b01c54466$fd9fd2f0$800101df@sv.us.sonicwall.com>
	<426446DD.2070508@kenkinder.com> <426523CF.4010703@verio.net>
	<426529BC.90201@divmod.com> <42658404.2030703@verio.net>
Message-ID: <20050419230547.GB31374@frobozz>

On Tue, Apr 19, 2005 at 04:19:48PM -0600, Ben Olsen wrote:
> This might be one for Bob Ippolito, but when I grabbed 
> threadedselectreactor.py from SVN and ran the pygamedemo.py without 
> modification, I got:
[...]

As always, bug reports are better off posted to
http://twistedmatrix.com/bugs, rather than buried in mailing list threads
that the relevant developers may or may not read :)

-Andrew.




From boomberschloss at yahoo.com  Wed Apr 20 05:38:10 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Wed, 20 Apr 2005 04:38:10 -0700 (PDT)
Subject: [Twisted-Python] cleanup
Message-ID: <20050420113811.68862.qmail@web53101.mail.yahoo.com>

Hi,

There was a discussion here recently about registering
a callback to be called prior to shutdown (using
addSystemEventTrigger), and I just wanted to ask, what
does Twisted allow before shutdown, and what gets
stopped in the middle; ex. if I want to do something
prior to shutdown that involves communication with
some server, and hence a deffered chain, how do I make
sure that it gets a chance to happen?

Thanks,

Joe.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From itamar at itamarst.org  Wed Apr 20 07:59:37 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Apr 2005 09:59:37 -0400
Subject: [Twisted-Python] cleanup
In-Reply-To: <20050420113811.68862.qmail@web53101.mail.yahoo.com>
References: <20050420113811.68862.qmail@web53101.mail.yahoo.com>
Message-ID: <1114005577.9134.11.camel@localhost.localdomain>

On Wed, 2005-04-20 at 04:38 -0700, Joachim Boomberschloss wrote:
> Hi,
> 
> There was a discussion here recently about registering
> a callback to be called prior to shutdown (using
> addSystemEventTrigger), and I just wanted to ask, what
> does Twisted allow before shutdown, and what gets
> stopped in the middle; ex. if I want to do something
> prior to shutdown that involves communication with
> some server, and hence a deffered chain, how do I make
> sure that it gets a chance to happen?

You can return a Deferred from your shutdown function and Twisted will
wait until it's got a result before shutting down.




From paolo_veronelli at yahoo.it  Wed Apr 20 11:06:05 2005
From: paolo_veronelli at yahoo.it (User Paolino)
Date: Wed, 20 Apr 2005 17:06:05 +0000
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>
References: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>
Message-ID: <42668BFD.6050103@yahoo.it>

Jp Calderone wrote:

> On Sat, 16 Apr 2005 18:50:02 +0000, User Paolino 
> <paolo_veronelli at yahoo.it> wrote:
>
>> def deferredReady(value=False,later=0):
>>  deferred=Deferred()
>>  reactor.callLater(later,deferred.callback,value)
>>  return deferred
>>
>> def generatorLoop(generator,listOfParams,multi=False):
>>  lista=[]
>>  for params in listOfParams:
>>    if multi:
>>      lista.append(deferredGenerator(generator)(*params))
>>    else:
>>      lista.append(deferredGenerator(generator)(params))   return 
>> DeferredList(lista)
>>
>
>  What?  Also, why?

deferredReady is just missing in the library ,it's useful to let other 
code execute in situations  where calling functions are gready, like 
resolving recursive query.

the second I use it everywhere where the cycles of a loop can be 
executed in parallel as they are independent.

But I see, small things are not interesting ...

np




From ngower at dkp.com  Wed Apr 20 10:32:40 2005
From: ngower at dkp.com (Neil Gower)
Date: Wed, 20 Apr 2005 12:32:40 -0400
Subject: [Twisted-Python] API docs?
Message-ID: <42668428.9080406@dkp.com>

Hi folks,

I'm looking forward to getting started on some development with Twisted, 
but ran into a little snag.  I downloaded 
TwistedSumo-2005-03-22.tar.bz2, and was browsing through the "doc" 
directory and found that the "API reference" link was broken.  Turns out 
there is no "doc/api" directory in that tarball.  I also tried grabbing 
the source from SVN, and running "admin/epyrun", but it bailed out with:

INTERNAL ERROR: Cannot create a UID for a str without a base UID.

So I'm just wondering, is there a way to get the API docs for Twisted 
2.0, or were they omitted from the tarball because they're broken right now?

Thanks,


Neil.



From itamar at itamarst.org  Wed Apr 20 10:42:29 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Apr 2005 12:42:29 -0400
Subject: [Twisted-Python] A small patch for defer.py
In-Reply-To: <42668BFD.6050103@yahoo.it>
References: <20050416184937.10340.169644362.divmod.quotient.6025@ohm>
	<42668BFD.6050103@yahoo.it>
Message-ID: <1114015350.9134.23.camel@localhost.localdomain>

On Wed, 2005-04-20 at 17:06 +0000, User Paolino wrote:

> But I see, small things are not interesting ...

It's not that they're not interesting, it's just that patches should
probably come with an explanation of what they're for so we can review
them better. Also, if you add them to http://twistedmatrix.com/bugs/
they won't get lost in the list archives.




From michael.kerrin at openapp.biz  Thu Apr 21 10:44:32 2005
From: michael.kerrin at openapp.biz (Michael Kerrin)
Date: Thu, 21 Apr 2005 16:44:32 +0000
Subject: [Twisted-Python] FTP / Common VFS Layer
Message-ID: <200504211644.32429.michael.kerrin@openapp.biz>

Hi,

  I am interested in integrating Twisted's FTP server and Zope 3.

  I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
mentions work that was done on a common VFS layer for Twisted. I am wondering 
if this is available anywhere has I would be very interested in seeing it.

  Thanks
-- 
Michael Kerrin

55 Fitzwilliam Square,
Dublin 2
Ireland

Tel: 353 (0) 87 688 3894



From db3l at fitlinxx.com  Thu Apr 21 12:39:38 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 21 Apr 2005 14:39:38 -0400
Subject: [Twisted-Python] Re: DeferredList and errbacks
References: <20050405231336.54750.qmail@web31510.mail.mud.yahoo.com>
	<20050406000212.GE7030@frobozz>
Message-ID: <u1x949dp1.fsf@fitlinxx.com>

Andrew Bennetts <andrew-twisted at puzzling.org> writes:

> By default, DeferredList waits for all its Deferreds to fire (with a result
> or an error), and returns a big list of results of the form: 
>    [(success_bool, value), (success_bool, value), ...]
> 
> Where 'success_bool' is True if the corresponding Deferred succeeded (i.e.
> fired a callback), and False if it failed (i.e. fired an errback).  'value'
> will be a result or a Failure instance accordingly.  So a standard
> DeferredList will never call errback, because it includes errors in the
> result passed to its callback.

Note however, that while the DeferredList will never errback, it
doesn't stop the errback chains of the individual deferreds.  It
inserts itself into those chains to gather the information, but
continues to let the failure propagate.

So if you expect the DeferredList to be the final aggregation of
information for all of the individual deferreds, but don't want
unterminated errbacks (which often, but not always, result in default
logging), you still need to install additional errbacks on each of the
deferreds you hand to the DeferredList.  And you need to add them
after the deferreds are installed in the DeferredList or its the
result of your individual errbacks that will flow to the DeferredList
result.

-- David




From itamar at itamarst.org  Thu Apr 21 12:41:01 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 21 Apr 2005 14:41:01 -0400
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <200504211644.32429.michael.kerrin@openapp.biz>
References: <200504211644.32429.michael.kerrin@openapp.biz>
Message-ID: <1114108861.8666.57.camel@localhost.localdomain>

On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:

>   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
> mentions work that was done on a common VFS layer for Twisted. I am wondering 
> if this is available anywhere has I would be very interested in seeing it.

Probably best to ignore the VFS bit for now and just concentrate on
fixing FTP. When and if the VFS layer is ever finished, hooking it up
should be easy.




From exarkun at divmod.com  Thu Apr 21 13:02:56 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 21 Apr 2005 19:02:56 GMT
Subject: [Twisted-Python] Re: DeferredList and errbacks
In-Reply-To: <u1x949dp1.fsf@fitlinxx.com>
Message-ID: <20050421190256.10340.1056723030.divmod.quotient.16690@ohm>

On 21 Apr 2005 14:39:38 -0400, David Bolen <db3l at fitlinxx.com> wrote:
>Andrew Bennetts <andrew-twisted at puzzling.org> writes:
>
>> By default, DeferredList waits for all its Deferreds to fire (with a result
>> or an error), and returns a big list of results of the form:
>>    [(success_bool, value), (success_bool, value), ...]
>>
>> Where 'success_bool' is True if the corresponding Deferred succeeded (i.e.
>> fired a callback), and False if it failed (i.e. fired an errback).  'value'
>> will be a result or a Failure instance accordingly.  So a standard
>> DeferredList will never call errback, because it includes errors in the
>> result passed to its callback.
>
>Note however, that while the DeferredList will never errback, it
>doesn't stop the errback chains of the individual deferreds.  It
>inserts itself into those chains to gather the information, but
>continues to let the failure propagate.
>
>So if you expect the DeferredList to be the final aggregation of
>information for all of the individual deferreds, but don't want
>unterminated errbacks (which often, but not always, result in default
>logging), you still need to install additional errbacks on each of the
>deferreds you hand to the DeferredList.  And you need to add them
>after the deferreds are installed in the DeferredList or its the
>result of your individual errbacks that will flow to the DeferredList
>result.
>

  Alternatively, pass consumeErrors=True to DeferredList() and it will do something equivalent for all Deferreds you put into it.

  Jp



From radeex at gmail.com  Thu Apr 21 17:24:31 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 22 Apr 2005 09:24:31 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <1114108861.8666.57.camel@localhost.localdomain>
References: <200504211644.32429.michael.kerrin@openapp.biz>
	<1114108861.8666.57.camel@localhost.localdomain>
Message-ID: <60ed19d405042116244f2a767@mail.gmail.com>

On 4/22/05, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:
> 
> >   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it
> > mentions work that was done on a common VFS layer for Twisted. I am wondering
> > if this is available anywhere has I would be very interested in seeing it.
> 
> Probably best to ignore the VFS bit for now and just concentrate on
> fixing FTP. When and if the VFS layer is ever finished, hooking it up
> should be easy.

Itamar is right about that. However, just for future reference, the
VFS code is available at svn://svn.twistedmatrix.com/svn/VFS/trunk


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From andrew-twisted at puzzling.org  Thu Apr 21 19:23:44 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Apr 2005 11:23:44 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <1114108861.8666.57.camel@localhost.localdomain>
References: <200504211644.32429.michael.kerrin@openapp.biz>
	<1114108861.8666.57.camel@localhost.localdomain>
Message-ID: <20050422012344.GA31958@frobozz>

On Thu, Apr 21, 2005 at 02:41:01PM -0400, Itamar Shtull-Trauring wrote:
> On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:
> 
> >   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
> > mentions work that was done on a common VFS layer for Twisted. I am wondering 
> > if this is available anywhere has I would be very interested in seeing it.
> 
> Probably best to ignore the VFS bit for now and just concentrate on
> fixing FTP. When and if the VFS layer is ever finished, hooking it up
> should be easy.

FTP in SVN isn't too bad... it's not completely broken, at least ;)

And it now has a halfway-decent test suite, although more would really be a
good idea (as using the --coverage option of trial will show).  The code
isn't particularly elegant, but it's readable enough.

So, I don't think it's too early to start improving the IFTPShell stuff
(which I had been consciously ignoring until now).  The other work that
needs doing shouldn't tend to get in the way very much, because the basics
have been fixed.

-Andrew.




From exarkun at divmod.com  Thu Apr 21 19:47:33 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 22 Apr 2005 01:47:33 GMT
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422012344.GA31958@frobozz>
Message-ID: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>

On Fri, 22 Apr 2005 11:23:44 +1000, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Thu, Apr 21, 2005 at 02:41:01PM -0400, Itamar Shtull-Trauring wrote:
>> On Thu, 2005-04-21 at 16:44 +0000, Michael Kerrin wrote:
>>
>> >   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it
>> > mentions work that was done on a common VFS layer for Twisted. I am wondering
>> > if this is available anywhere has I would be very interested in seeing it.
>>
>> Probably best to ignore the VFS bit for now and just concentrate on
>> fixing FTP. When and if the VFS layer is ever finished, hooking it up
>> should be easy.
>
>FTP in SVN isn't too bad... it's not completely broken, at least ;)
>
>And it now has a halfway-decent test suite, although more would really be a
>good idea (as using the --coverage option of trial will show).  The code
>isn't particularly elegant, but it's readable enough.
>
>So, I don't think it's too early to start improving the IFTPShell stuff
>(which I had been consciously ignoring until now).  The other work that
>needs doing shouldn't tend to get in the way very much, because the basics
>have been fixed.

  I think a good direction to take with IFTPShell is to drop it entirely and use an entirely new and different interface.  If anyone complains about compatibility later (which no one will because ftp was too broken to use until the work you did on it, and the interface is too specific to have been usefully implemented differently anyway), we can always write an adapter from the new to the old.


  Using something like, say, IResource would be interesting, but I guess IResource isn't quite expressive enough to satisfy all the requirements.

  Jp



From andy at thecablelounge.com  Thu Apr 21 20:05:15 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 22 Apr 2005 12:05:15 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <200504211644.32429.michael.kerrin@openapp.biz>
References: <200504211644.32429.michael.kerrin@openapp.biz>
Message-ID: <42685BDB.4080307@thecablelounge.com>

Michael Kerrin wrote:
> Hi,
> 
>   I am interested in integrating Twisted's FTP server and Zope 3.
> 
>   I have seen the bug report http://twistedmatrix.com/bugs/issue983 and it 
> mentions work that was done on a common VFS layer for Twisted. I am wondering 
> if this is available anywhere has I would be very interested in seeing it.

I've had a very quick glance at Stephan Richter's Zope3 book - if I 
glanced right, it looks like Zope3 has it's own ftp server? - which 
accesses the file system through an interface(s).  Just mentioning as 
while someone is looking at both frameworks in this area, it might be 
worth stealing from Zope3 for the Twisted VFS interface.

Though, the biggest hole with the sprint VFS interface is asynchronous 
data transfers - which wouldn't be an issue for Zope.

Andy.



From andrew-twisted at puzzling.org  Thu Apr 21 20:37:34 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Apr 2005 12:37:34 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
References: <20050422012344.GA31958@frobozz>
	<20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
Message-ID: <20050422023734.GB31958@frobozz>

On Fri, Apr 22, 2005 at 01:47:33AM +0000, Jp Calderone wrote:
> On Fri, 22 Apr 2005 11:23:44 +1000, Andrew Bennetts wrote:
[...]
> >
> >So, I don't think it's too early to start improving the IFTPShell stuff
> >(which I had been consciously ignoring until now).  The other work that
> >needs doing shouldn't tend to get in the way very much, because the basics
> >have been fixed.
> 
>  I think a good direction to take with IFTPShell is to drop it entirely and 
>  use an entirely new and different interface.  If anyone complains about 
>  compatibility later (which no one will because ftp was too broken to use 
>  until the work you did on it, and the interface is too specific to have 
>  been usefully implemented differently anyway), we can always write an 
>  adapter from the new to the old.

Yeah.  I'm not at all concerned about backwards-compatibility for code that
never worked.

>  Using something like, say, IResource would be interesting, but I guess 
>  IResource isn't quite expressive enough to satisfy all the requirements.

IResource lacks quite a lot in terms of a read/write filesystem with
metadata like modification times and permission bits.  In the Twisted tree,
something like twisted.conch.interfaces.ISFTPServer (as implemented by e.g.
twisted.conch.unix.SFTPServerForUnixConchUser) is much closer to what FTP
needs.  I think the VFS stuff is closer again.

I think there may be some point in having an IFTPShell-like interface that
maps closely to what the FTP protocol needs, and adapters to map VFS stuff
(and even IResource for simple read-only trees) to that, but I haven't
thought deeply about it.

-Andrew.




From andy at thecablelounge.com  Thu Apr 21 21:03:23 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 22 Apr 2005 13:03:23 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422023734.GB31958@frobozz>
References: <20050422012344.GA31958@frobozz>	<20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
	<20050422023734.GB31958@frobozz>
Message-ID: <4268697B.40200@thecablelounge.com>

Andrew Bennetts wrote:

> I think there may be some point in having an IFTPShell-like interface that
> maps closely to what the FTP protocol needs, and adapters to map VFS stuff
> (and even IResource for simple read-only trees) to that, but I haven't
> thought deeply about it.

For what it's worth, there's an adaptor from the sprint VFS interface 
for IFTPShell, and it works ok for the bits of IFTPShell ftp is using 
and not broken.  It's probably easier to adapt against IFTPShell than 
ISFTPServer.

I guess the most important thing is working FTP. So long as it uses an 
interface for filesystem access, whatever that is, the VFS stuff should 
be able to work in with it.

Andy.



From darran.edmundson at anu.edu.au  Thu Apr 21 21:22:50 2005
From: darran.edmundson at anu.edu.au (Darran Edmundson)
Date: Fri, 22 Apr 2005 13:22:50 +1000
Subject: [Twisted-Python] twisted robot ...
Message-ID: <42686E0A.6020905@anu.edu.au>


Hi All,

Thanks to everyone for the recent help on integration of
twisted with wxPython.  We are going to hold off on using
Bob's new code at the moment in favour of using the release
version of Twisted (easier for the users to install).

At the moment we've got Twisted in the main thread, spawning
a thread to run wx.  It works nicely except we can't figure
out how to communicate with wx (ie., generate wxevents)
from twisted.  (We don't need the converse - it's notification
only.)  I fly out to San Francisco tommorrow morning so
any help would be most appreciated.

So about the robot subject line ... we bought a 50cm RC tank on
Ebay, ripped it down to the chassis and added a platform
for carrying around a 12" Powerbook.  The laptop runs
our twisted server which drives a USB controllable Phidget
(www.phidget.com) to control the tank treads and a servo motor
for camera (iSight) tilt.  We talk to the server via wifi.

The client app (wx GUI is done and working) is what we
are working on at the moment...

Cheers,
Darran.

P.S.  I'll put some photos and video up on my web site
for anyone interested.

-- 
Darran Edmundson (darran.edmundson at anu.edu.au)
ANU Supercomputer Facility Vizlab
Australian National University, Canberra, ACT 2600
tel: +61 2 6125-0517  fax: +61 2 6125-5088



From bob at redivi.com  Thu Apr 21 21:30:22 2005
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 21 Apr 2005 23:30:22 -0400
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <42686E0A.6020905@anu.edu.au>
References: <42686E0A.6020905@anu.edu.au>
Message-ID: <c75f666f55aa8fdb0b87050518062192@redivi.com>


On Apr 21, 2005, at 11:22 PM, Darran Edmundson wrote:

> Thanks to everyone for the recent help on integration of
> twisted with wxPython.  We are going to hold off on using
> Bob's new code at the moment in favour of using the release
> version of Twisted (easier for the users to install).

You could copy the new reactor code (plus the patched wakers).. it 
would work with release twisted.

-bob




From andy at thecablelounge.com  Thu Apr 21 21:31:07 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 22 Apr 2005 13:31:07 +1000
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <4268697B.40200@thecablelounge.com>
References: <20050422012344.GA31958@frobozz>	<20050422014733.10340.1863492126.divmod.quotient.17262@ohm>	<20050422023734.GB31958@frobozz>
	<4268697B.40200@thecablelounge.com>
Message-ID: <42686FFB.1090002@thecablelounge.com>

> Itamar Shtull-Trauring wrote:
>> Probably best to ignore the VFS bit for now and just concentrate on
>> fixing FTP. When and if the VFS layer is ever finished, hooking it up
>> should be easy.

Andy Gayton wrote:
> I guess the most important thing is working FTP. So long as it uses an 
> interface for filesystem access, whatever that is, the VFS stuff should 
> be able to work in with it.

so, er yeah, what Itamar said :)




From mvanaswegen at deloitte.co.za  Fri Apr 22 02:46:05 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Fri, 22 Apr 2005 10:46:05 +0200
Subject: [Twisted-Python] Twisted P2P
Message-ID: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>

Hi Guys
 
I need some advice before I start hacking about with socket,
SocketServer and twisted.
I'm planning to write a LAN P2P program to make it easy to share files
on the LAN.
I'm planning to make it cross platform win / unix. Each P2P client will
advertise using
UDP multicast that they are out there. If a client wants to send a file
or files it will
connect TCP to the client and request auth. Upon auth it will tx the
files using TCP.
I would like the each P2P client to be able to handle multiple
connections (send + rec).
 
Suggestions, pointers, help appreciated.
 
Regs
 
Marinus

Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050422/071edfa8/attachment.html>

From andrew-twisted at puzzling.org  Fri Apr 22 03:06:39 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 22 Apr 2005 19:06:39 +1000
Subject: [Twisted-Python] Twisted P2P
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
Message-ID: <20050422090639.GC31958@frobozz>

On Fri, Apr 22, 2005 at 10:46:05AM +0200, van Aswegen, Marinus (ZA - Johannesburg) wrote:
>    Hi Guys
>    
>    I need some advice before I start hacking about with socket,
>    SocketServer and twisted.  I'm planning to write a LAN P2P program to
>    make it easy to share files on the LAN.  I'm planning to make it cross
>    platform win / unix. Each P2P client will advertise using UDP multicast
>    that they are out there. If a client wants to send a file or files it
>    will connect TCP to the client and request auth. Upon auth it will tx
>    the files using TCP.  I would like the each P2P client to be able to
>    handle multiple connections (send + rec).
>    
>    Suggestions, pointers, help appreciated.

Sounds well suited to Twisted.

Feel free to ask specific questions if you get stuck on something.  The
tutorial and the writing servers and writing clients howtos should answer
most of your questions, though:

    http://twistedmatrix.com/projects/core/documentation/howto/tutorial/
    http://twistedmatrix.com/projects/core/documentation/howto/servers.html
    http://twistedmatrix.com/projects/core/documentation/howto/clients.html

You might also find some of the examples to be interesting:

    http://twistedmatrix.com/projects/core/documentation/examples/index.xhtml

-Andrew.




From itamar at itamarst.org  Fri Apr 22 08:11:33 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 22 Apr 2005 10:11:33 -0400
Subject: [Twisted-Python] FTP / Common VFS Layer
In-Reply-To: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
References: <20050422014733.10340.1863492126.divmod.quotient.17262@ohm>
Message-ID: <1114179093.8727.15.camel@localhost.localdomain>

On Fri, 2005-04-22 at 01:47 +0000, Jp Calderone wrote:

>  I think a good direction to take with IFTPShell is to drop it
> entirely and use an entirely new and different interface.  If anyone
> complains about compatibility later (which no one will because ftp was
> too broken to use until the work you did on it, and the interface is
> too specific to have been usefully implemented differently anyway), we
> can always write an adapter from the new to the old.

The bug Stephan Richter and I opened this weekend while looking at FTP
does indeed specifically request the interface be changed, since it is
broken now. No point in any backwards compat at all in this case.

It explains most of the basic changes that need to be made:
http://twistedmatrix.com/bugs/issue983






From bob at redivi.com  Fri Apr 22 11:36:19 2005
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 22 Apr 2005 13:36:19 -0400
Subject: [Twisted-Python] Twisted P2P
In-Reply-To: <20050422090639.GC31958@frobozz>
References: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
	<20050422090639.GC31958@frobozz>
Message-ID: <50a9f923ececb9320cb29efaf36ec28d@redivi.com>


On Apr 22, 2005, at 5:06 AM, Andrew Bennetts wrote:

> On Fri, Apr 22, 2005 at 10:46:05AM +0200, van Aswegen, Marinus (ZA -  
> Johannesburg) wrote:
>>
>>    I need some advice before I start hacking about with socket,
>>    SocketServer and twisted.  I'm planning to write a LAN P2P program  
>> to
>>    make it easy to share files on the LAN.  I'm planning to make it  
>> cross
>>    platform win / unix. Each P2P client will advertise using UDP  
>> multicast
>>    that they are out there. If a client wants to send a file or files  
>> it
>>    will connect TCP to the client and request auth. Upon auth it will  
>> tx
>>    the files using TCP.  I would like the each P2P client to be able  
>> to
>>    handle multiple connections (send + rec).
>>
>>    Suggestions, pointers, help appreciated.
>
> Sounds well suited to Twisted.
>
> Feel free to ask specific questions if you get stuck on something.  The
> tutorial and the writing servers and writing clients howtos should  
> answer
> most of your questions, though:
>
>      
> http://twistedmatrix.com/projects/core/documentation/howto/tutorial/
>      
> http://twistedmatrix.com/projects/core/documentation/howto/ 
> servers.html
>      
> http://twistedmatrix.com/projects/core/documentation/howto/ 
> clients.html
>
> You might also find some of the examples to be interesting:
>
>      
> http://twistedmatrix.com/projects/core/documentation/examples/ 
> index.xhtml

I don't think there are any examples, anywhere, of the multicast  
support.  I think there is some (unfinished?) mDNS code in Itamar's  
sandbox, but that's complicated enough that it really doesn't serve as  
a good example.

Other than that, I think the rest should be pretty straightforward.

-bob




From jarrod.roberson at gmail.com  Fri Apr 22 12:05:32 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 22 Apr 2005 14:05:32 -0400
Subject: [Twisted-Python] Twisted P2P
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE14827EA0@zajnb0406.za.deloitte.com>
Message-ID: <2389d4730504221105399e951c@mail.gmail.com>

attached is my updates to Tim Allens mDNS code that works with Twisted 2.0
I have also added some facilities to add responders and observers of
specific messages, it is not complete but a good start

also attached is an mdnslistener that I wrote based on what I say in
itamar's sandbox
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mDNS.py
Type: application/octet-stream
Size: 28506 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050422/fb8fbb73/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mDNSListener.py
Type: application/octet-stream
Size: 4158 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050422/fb8fbb73/attachment-0005.obj>

From db3l at fitlinxx.com  Fri Apr 22 15:11:00 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 22 Apr 2005 17:11:00 -0400
Subject: [Twisted-Python] Re: DeferredList and errbacks
References: <u1x949dp1.fsf@fitlinxx.com>
	<20050421190256.10340.1056723030.divmod.quotient.16690@ohm>
Message-ID: <uoec6a55n.fsf@fitlinxx.com>

Jp Calderone <exarkun at divmod.com> writes:

> Alternatively, pass consumeErrors=True to DeferredList() and it will
> do something equivalent for all Deferreds you put into it.

Hrmm, and of course that was also mentioned in the post I was replying
to (which you were kind enough not to highlight)... duh!

Looks like that got added after my initial work with DeferredList and
I didn't catch it becoming available.  It's particularly ironic,
because I think I participated in the discussion at the time with
respect to deprecating the addDeferred method that led to the patch.

Ah well, learn something new every day ... definitely going to start
using it.

-- David




From wyvern at crm3.com  Fri Apr 22 18:19:03 2005
From: wyvern at crm3.com (Jan Van Uytven)
Date: Fri, 22 Apr 2005 17:19:03 -0700
Subject: [Twisted-Python] Help with SMTP Proxy
Message-ID: <42699477.1010101@crm3.com>

Hi,

I'm a new user of Twisted, I came to it because I need to write an SMTP 
proxy and want to use Python to do it. The proxy would copy the incoming 
e-mail (including the envelope headers) and then forward it to Postfix.

Googling around I came across an example of an SMTP server (written by 
the author of twisted.mail I think)  and after playing around with it a 
bit I can get it to receive and copy the e-mail, but I'm not quite sure 
how to forward it on after that. Right now I have the proxy sitting on 
port 2025 and the final smtp server on port 2030. Here's the code I have 
so far:

import os, StringIO
from zope.interface import implements
from twisted.application import service

application = service.Application("Postfix SMTP Proxy for CopyUser")

from twisted.application import internet
from twisted.internet import protocol, defer

smtpServerFactory = protocol.ServerFactory()

from twisted.mail import smtp

class FileMessage(object):
    implements(smtp.IMessage)

    def __init__(self, fileObj):
        self.fileObj = fileObj
        self.msg = []

    def lineReceived(self, line):
        self.fileObj.write(line + '\n')
        self.msg.append(line)
       
    def eomReceived(self):
        self.fileObj.close()
        print "\n".join(self.msg)
        return defer.succeed(None)
       
    def connectionLost(self):
        self.fileObj.close()
        os.remove(self.fileObj.name)

class Delivery(object):
    implements(smtp.IMessageDelivery)
    counter = 0

    def validateTo(self, user):
        fileName = 'smtplog.' + str(self.counter)
        self.counter += 1
        return lambda: FileMessage(file(fileName, 'w'))
   
    def validateFrom(self, helo, origin):
        return origin

    def receivedHeader(self, helo, origin, recipients):
        recpts = []
        for i in recipients:
            recpts.append(str(i))
        recptstr = "Recipients: " + ",".join(recpts)
        origin = "Origin: " + str(origin)
        return recptstr+"\r\n"+origin+"\r\n\r\n"

class ESMTPFactory(protocol.ServerFactory):
    protocol = smtp.ESMTP

    def buildProtocol(self, addr):
        p = self.protocol()
        p.delivery = Delivery()
        p.factory = self
        return p

class ForwardSMTPClient(smtp.ESMTPClient):

    def getMailFrom(self):
        return ["smtp_proxy at localhost"]

    def getMailTo(self):
        return "tester at localhost"

    def getMailData(self):
        data = """
        Subject: Test!

        Test!
        """
        return StringIO.StringIO(data)
   
    def sentMail(self, code, resp, numOk, addresses, log):
        print 'Sent', numOk, 'messages'


class SMTPClientFactory(protocol.ClientFactory):
    protocol = ForwardSMTPClient

    def buildProtocol(self, addr):
        return self.protocol(secret=None, identity='localhost')
       

smtpServerFactory = ESMTPFactory()
smtpClientFactory = SMTPClientFactory()
smtpServerService = internet.TCPServer(2025, smtpServerFactory)
smtpServerService.setServiceParent(application)

I've left out actually forwarding the message for now, I just want to 
forward a test e-mail upon receipt of the message. The whole structure 
of this program doesn't seem right to me. I thought initially of trying 
something like adding this to the eomReceived method:

smtpForwardService = internet.TCPClient('localhost', 2030, 
smtpClientFactory)
smtpForwardService.setServiceParent(application)

but it started an endless loop of sending the test e-mail. Most clients 
use reactor.stop() to finish after processing, but I need the reactor to 
keep on going.

Documentation on twisted.mail is almost non-existent. Is there a better 
way of doing this?

Thanks,

Still Struggling



From troll at pld-linux.org  Fri Apr 22 23:34:42 2005
From: troll at pld-linux.org (Michal Chruszcz)
Date: Sat, 23 Apr 2005 07:34:42 +0200
Subject: [Twisted-Python] Sending unicode strings
Message-ID: <200504230734.42190@tintia.doriath>

Hello,

I was undoubtedly surprised when I found out that I cannot pass unicode 
strings to Twisted.
In 1.3 twisted.internet.abstract looks like this:
    def write(self, data):
        assert isinstance(data, str), "Data must be a string."
        if not self.connected:
            return

and in 2.0:
    def write(self, data):
        if isinstance(data, unicode): # no, really, I mean it
            raise TypeError("Data must be not be unicode")

Why do you mean it? Why I can't send unicode through twisted? It's 
ridiculous that I have to convert UTF8 strings to ISO on the client side 
and then once again from ISO to UTF8 on the server side, so I suppose 
you've got really good excuse.

-- 
Michal Chruszcz -=- Never seen



From mary-twisted at puzzling.org  Fri Apr 22 23:58:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 23 Apr 2005 15:58:13 +1000
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <200504230734.42190@tintia.doriath>
References: <200504230734.42190@tintia.doriath>
Message-ID: <20050423055813.GC8402@sourdust.home.puzzling.org>

On Sat, Apr 23, 2005, Michal Chruszcz wrote:
> Why do you mean it? Why I can't send unicode through twisted? It's 
> ridiculous that I have to convert UTF8 strings to ISO on the client side 
> and then once again from ISO to UTF8 on the server side, so I suppose 
> you've got really good excuse.

In so far as you'd call "design decisions" "excuses".

Why is it ridiculous that you need to do this? It's not always going to
be Twisted on the other end after all (at least, Twisted can't assume
that at the level we're talking about), and there's umpteen million
encodings that can be used for Unicode, so encoding all Unicode objects
into bytes using the UTF8 encoding seems to be making a hell of an
assumption. Your protocol is the right place to make that
decision/assumption/assertation, write(...) is not.

http://twistedmatrix.com/projects/core/documentation/howto/faq.html#auto25

-Mary



From bob at redivi.com  Sat Apr 23 00:03:09 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 23 Apr 2005 02:03:09 -0400
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <200504230734.42190@tintia.doriath>
References: <200504230734.42190@tintia.doriath>
Message-ID: <ab30c72585603201b635fc4ad4afec01@redivi.com>


On Apr 23, 2005, at 1:34 AM, Michal Chruszcz wrote:

> I was undoubtedly surprised when I found out that I cannot pass unicode
> strings to Twisted.
> In 1.3 twisted.internet.abstract looks like this:
>     def write(self, data):
>         assert isinstance(data, str), "Data must be a string."
>         if not self.connected:
>             return
>
> and in 2.0:
>     def write(self, data):
>         if isinstance(data, unicode): # no, really, I mean it
>             raise TypeError("Data must be not be unicode")
>
> Why do you mean it? Why I can't send unicode through twisted? It's
> ridiculous that I have to convert UTF8 strings to ISO on the client 
> side
> and then once again from ISO to UTF8 on the server side, so I suppose
> you've got really good excuse.

You must ALWAYS encode or decode unicode at I/O boundaries in any 
programming language/framework.  Unicode has no encoding.  You must 
choose one at the I/O boundary, but that choice is up to you.  I 
suggest you read up on the hows and whys of Unicode, because apparently 
you missed something.

Specifically, Twisted's transports are for writing BYTES (not text).  
Unicode is strictly a bunch of characters that have no inherent byte 
representation.  The unicode type has nothing at all to do with UTF-8, 
I'm not sure why you decided they were related.  Technically the 
unicode type is represented internally with either UCS-2 or UCS-4 
depending on Python's configuration options.

The same is true for file objects in Python.  Though writing to them 
will automatically coerce to/from some default encoding 
(sys.getdefaultencoding()), usually ASCII, which hurts more than helps. 
  Twisted takes the high road and explicitly provides no automagic 
conversion for unicode objects.  If it did, your program would probably 
crash at random places if users of your application typed in non-ascii 
characters, because you didn't think enough about unicode before 
deciding to use it.  Now you are required to have a modicum of 
understanding about what you're doing when you use unicode, so it is 
far less likely that you will write code that has such silly bugs.

In more sane environments than Python, you will NOT have a single type 
that can represent both data and text at the same time (Python's str is 
evil).  Additionally, it is often the case that text types in more sane 
environments don't have a single internal representation (so you don't 
have to pay the N-byte penalty, or encoding/decoding costs at I/O 
boundaries for text you never really manipulate, etc.).

-bob




From tv at twistedmatrix.com  Sat Apr 23 00:17:44 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 23 Apr 2005 09:17:44 +0300
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <200504230734.42190@tintia.doriath>
References: <200504230734.42190@tintia.doriath>
Message-ID: <4269E888.1080400@twistedmatrix.com>

Michal Chruszcz wrote:
> Why do you mean it? Why I can't send unicode through twisted? It's 
> ridiculous that I have to convert UTF8 strings to ISO on the client side 

... to convert Unicode strings to UTF-8 on the client side ...

> and then once again from ISO to UTF8 on the server side, so I suppose 

...from UTF-8 to Unicode on the server side...

Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
been sane, but I can understand that not everyone agrees; e.g. Java
wants UCS-16 if I remember correctly. And not serializing to UTF-8
by default catches errors that would otherwise cause mysterious things
to happen.

Maybe add a transport wrapper class that has

    def write(self, data):
        if isinstance(data, unicode):
            data = self.serializeUnicode(data)
        self.wrapped.write(data)

of course, that means the Protocol receiving this needs to convert from
the used serialization format to Unicode.



From bob at redivi.com  Sat Apr 23 00:50:43 2005
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 23 Apr 2005 02:50:43 -0400
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <4269E888.1080400@twistedmatrix.com>
References: <200504230734.42190@tintia.doriath>
	<4269E888.1080400@twistedmatrix.com>
Message-ID: <14b317c04d6b5abe0cd6473ac43bc70f@redivi.com>


On Apr 23, 2005, at 2:17 AM, Tommi Virtanen wrote:

> Michal Chruszcz wrote:
>> Why do you mean it? Why I can't send unicode through twisted? It's
>> ridiculous that I have to convert UTF8 strings to ISO on the client 
>> side
>
> ... to convert Unicode strings to UTF-8 on the client side ...
>
>> and then once again from ISO to UTF8 on the server side, so I suppose
>
> ...from UTF-8 to Unicode on the server side...
>
> Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
> been sane, but I can understand that not everyone agrees; e.g. Java
> wants UCS-16 if I remember correctly. And not serializing to UTF-8
> by default catches errors that would otherwise cause mysterious things
> to happen.

The most mysterious of things is that with such ass-umptions you put 
unicode in and you get str out.  This is especially bad because your 
default encoding is not utf-8.  So, your program explodes, people die, 
and you have to clean up the mess later.

-bob




From projects at reedflute.com  Sat Apr 23 01:46:11 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Sat, 23 Apr 2005 09:46:11 +0200
Subject: [Twisted-Python] Help with SMTP Proxy
In-Reply-To: <42699477.1010101@crm3.com>
References: <42699477.1010101@crm3.com>
Message-ID: <4269FD43.8060607@reedflute.com>

Jan Van Uytven wrote:

> Hi,
>
> I'm a new user of Twisted, I came to it because I need to write an 
> SMTP proxy and want to use Python to do it. The proxy would copy the 
> incoming e-mail (including the envelope headers) and then forward it 
> to Postfix.
>
> Googling around I came across an example of an SMTP server (written by 
> the author of twisted.mail I think)  and after playing around with it 
> a bit I can get it to receive and copy the e-mail, but I'm not quite 
> sure how to forward it on after that. Right now I have the proxy 
> sitting on port 2025 and the final smtp server on port 2030. Here's 
> the code I have so far:
>
> import os, StringIO
> from zope.interface import implements
> from twisted.application import service
>
> application = service.Application("Postfix SMTP Proxy for CopyUser")
>
> from twisted.application import internet
> from twisted.internet import protocol, defer
>
> smtpServerFactory = protocol.ServerFactory()
>
> from twisted.mail import smtp
>
> class FileMessage(object):
>    implements(smtp.IMessage)
>
>    def __init__(self, fileObj):
>        self.fileObj = fileObj
>        self.msg = []
>
>    def lineReceived(self, line):
>        self.fileObj.write(line + '\n')
>        self.msg.append(line)
>          def eomReceived(self):
>        self.fileObj.close()
>        print "\n".join(self.msg)
>        return defer.succeed(None)
>          def connectionLost(self):
>        self.fileObj.close()
>        os.remove(self.fileObj.name)
>
> class Delivery(object):
>    implements(smtp.IMessageDelivery)
>    counter = 0
>
>    def validateTo(self, user):
>        fileName = 'smtplog.' + str(self.counter)
>        self.counter += 1
>        return lambda: FileMessage(file(fileName, 'w'))
>      def validateFrom(self, helo, origin):
>        return origin
>
>    def receivedHeader(self, helo, origin, recipients):
>        recpts = []
>        for i in recipients:
>            recpts.append(str(i))
>        recptstr = "Recipients: " + ",".join(recpts)
>        origin = "Origin: " + str(origin)
>        return recptstr+"\r\n"+origin+"\r\n\r\n"
>
> class ESMTPFactory(protocol.ServerFactory):
>    protocol = smtp.ESMTP
>
>    def buildProtocol(self, addr):
>        p = self.protocol()
>        p.delivery = Delivery()
>        p.factory = self
>        return p
>
> class ForwardSMTPClient(smtp.ESMTPClient):
>
>    def getMailFrom(self):
>        return ["smtp_proxy at localhost"]
>
>    def getMailTo(self):
>        return "tester at localhost"
>
>    def getMailData(self):
>        data = """
>        Subject: Test!
>
>        Test!
>        """
>        return StringIO.StringIO(data)
>      def sentMail(self, code, resp, numOk, addresses, log):
>        print 'Sent', numOk, 'messages'
>
>
> class SMTPClientFactory(protocol.ClientFactory):
>    protocol = ForwardSMTPClient
>
>    def buildProtocol(self, addr):
>        return self.protocol(secret=None, identity='localhost')
>      
> smtpServerFactory = ESMTPFactory()
> smtpClientFactory = SMTPClientFactory()
> smtpServerService = internet.TCPServer(2025, smtpServerFactory)
> smtpServerService.setServiceParent(application)
>
> I've left out actually forwarding the message for now, I just want to 
> forward a test e-mail upon receipt of the message. The whole structure 
> of this program doesn't seem right to me. I thought initially of 
> trying something like adding this to the eomReceived method:
>
> smtpForwardService = internet.TCPClient('localhost', 2030, 
> smtpClientFactory)
> smtpForwardService.setServiceParent(application)
>
This is how I'm doing it.

http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html

Conductor instance registers a reference to both smtpServerService  
instance and smtpForwardService instance.

I would call something like conductor.write(destination) from within the 
smtpServerService instance which would in turn  call  a method on the 
reference to smtpForwardService from within conductor.

regards,

Eugene Coetzee

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From projects at reedflute.com  Sat Apr 23 04:38:18 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Sat, 23 Apr 2005 12:38:18 +0200
Subject: [Twisted-Python] Help with SMTP Proxy - correction
In-Reply-To: <4269FD43.8060607@reedflute.com>
References: <42699477.1010101@crm3.com> <4269FD43.8060607@reedflute.com>
Message-ID: <426A259A.7070507@reedflute.com>

Eugene Coetzee wrote:

>>
>>      smtpServerFactory = ESMTPFactory()
>> smtpClientFactory = SMTPClientFactory()
>> smtpServerService = internet.TCPServer(2025, smtpServerFactory)
>> smtpServerService.setServiceParent(application)
>>
>> I've left out actually forwarding the message for now, I just want to 
>> forward a test e-mail upon receipt of the message. The whole 
>> structure of this program doesn't seem right to me. I thought 
>> initially of trying something like adding this to the eomReceived 
>> method:
>>
>> smtpForwardService = internet.TCPClient('localhost', 2030, 
>> smtpClientFactory)
>> smtpForwardService.setServiceParent(application)
>>
> This is how I'm doing it.
>
> http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html
>
> Conductor instance registers a reference to both smtpServerService  
> instance and smtpForwardService instance.
>
> I would call something like conductor.write(destination) from within 
> the smtpServerService instance which would in turn  call  a method on 
> the reference to smtpForwardService from within conductor.
>
<snip>
Conductor instance registers a reference to both smtpServerService  
instance and smtpForwardService instance.

I would call something like conductor.write(destination) from within the 
smtpServerService instance which would in turn  call  a method on the 
reference to smtpForwardService from within conductor.

</snip>

should in fact read ...

Conductor instance registers a reference to both smtpServerFactory  
instance and smtpClientFactory instance.

I would call something like conductor.write(destination) from within the 
smtpServer instance which would in turn  call  a method on the reference 
to smtpClientFactory from within conductor.

Sorry about that.

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From solipsis at pitrou.net  Mon Apr 25 08:15:00 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Mon, 25 Apr 2005 16:15:00 +0200
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <42686E0A.6020905@anu.edu.au>
References: <42686E0A.6020905@anu.edu.au>
Message-ID: <1114438500.11099.6.camel@p-dhcp-333-72.rd.francetelecom.fr>


Hi,

> At the moment we've got Twisted in the main thread, spawning
> a thread to run wx.  It works nicely except we can't figure
> out how to communicate with wx (ie., generate wxevents)
> from twisted.  (We don't need the converse - it's notification
> only.)

You just have to call wx.CallAfter, it will let you call any function
inside the wx thread. I've put an example of this use online:
http://solipsis.netofpeers.net/wiki/WxTwistedExample

It may be better, by the way, to run wx in the main thread and Twisted
in the secondary thread. Some toolkits supported by wx may not like the
fact that they aren't called from the main thread - I'm not sure such a
limitation exists but I'm not sure of the contrary either. Twisted,
OTOH, does not seem to care at all.

Regards

Antoine.





From foom at fuhm.net  Mon Apr 25 08:27:56 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 25 Apr 2005 10:27:56 -0400
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <e2b09905e42cc61911b46dba964f14ee@fuhm.net>

(Or, er, semi-weekly)

Bug summary
______________________
Since 2005-04-11 14:20:07.600000:
  Bugs opened: 29   Bugs closed: 20   Total open bugs: 346 (+9)
   Urgent: 6 (+2)
   Bug: 135 (+0)
   Feature: 135 (+6)
   Wish: 70 (+1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
[XISH] Erroneous .encode('utf-8') in twisted.xish.domish  (yesterday)
        http://twistedmatrix.com/bugs/issue1002 opened by ralphm

[CORE] gtk2 reactor broken for actual GUI apps  (4 days ago)
        http://twistedmatrix.com/bugs/issue994 opened by warner

                     ==== Bug ====
Python 2.4 - exceptions.AttributeError: 'module' object has no 
attribute 'kwdict'  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1001 opened by cphsu

[ENTERPRISE] ConnectionPool allows the pool size to be grown  (3 days 
ago)
CLOSED http://twistedmatrix.com/bugs/issue997 opened by mg

[CORE, WIN32] Win32 installer rc3 does not install mktap.py  (7 days 
ago)
        http://twistedmatrix.com/bugs/issue991 opened by exarkun

[WEB] request.setHeader should fail if data has already been sent 
written to the client  (3 days ago)
        http://twistedmatrix.com/bugs/issue998 opened by mg

[WEB] [PATCH] web2 CGI syntax error  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue977 opened by warner

[WEB] cgi fails to close stdin of the child process  (1 week ago)
        http://twistedmatrix.com/bugs/issue981 opened by warner

Excessive deprecation warnings from MetaInterface.__getattr__  (5 days 
ago)
        http://twistedmatrix.com/bugs/issue993 opened by jknight

session.getComponent doesn't work with 'default' keyword arg  (6 days 
ago)
        http://twistedmatrix.com/bugs/issue992 opened by justinj

AttributeError: 'WSGIHandler' object has no attribute 'stopProducing'  
(1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue987 opened by srichter

[WEB] Assertion Error in twisted.internet.abstract  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue986 opened by srichter

[WEB] AttributeError: HTTPChannelRequest instance has no attribute 
'transport'  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue985 opened by srichter

[WEB] twisted.web2.wsgi environment variables  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue984 opened by srichter

[CORE] Default log observer chokes on unicode messages  (7 days ago)
        http://twistedmatrix.com/bugs/issue989 opened by exarkun

[CORE, DOCUMENTATION] 
twisted.internet.abstract.FileDescriptor.loseConnection.__doc__ is a 
stupid lie  (1 week ago)
        http://twistedmatrix.com/bugs/issue988 opened by exarkun

[FTP] IFTPShell needs to be completely restructured  (1 week ago)
        http://twistedmatrix.com/bugs/issue983 opened by srichter

[patch] Naming consistency in new plugin module  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue980 opened by mg

[MAIL, NAMES] fix deprecation warnings in test_mail  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue982 opened by warner

backport if-modified-since bugfix from web2 to web  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue976 opened by demaledetti

twisted.web.client.getPage never completes files &gt;3.1MB (Windows)  
(1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue974 opened by moonfallen

                     ==== Feature ====
[ENTERPRISE] Add runWithConnection to adbapi.ConnectionPool  (1 week 
ago)
CLOSED http://twistedmatrix.com/bugs/issue975 opened by mg

Common Access Logging Observer for twisted.web2  (yesterday)
        http://twistedmatrix.com/bugs/issue1000 opened by srichter

twisted.web2 HTTP Server Enhancements  (yesterday)
        http://twistedmatrix.com/bugs/issue999 opened by srichter

[CORE] t.plugin caching and read-only package directories  (3 days ago)
        http://twistedmatrix.com/bugs/issue996 opened by mg

contribpackages are not updated for Python 2.4  (4 days ago)
        http://twistedmatrix.com/bugs/issue995 opened by manlio

[CORE] Deferred cancellation  (7 days ago)
        http://twistedmatrix.com/bugs/issue990 opened by exarkun

[DOCUMENTATION] Rename enterprise howto to rdbms (filename)  (1 week 
ago)
        http://twistedmatrix.com/bugs/issue979 opened by itamarst

[DOCUMENTATION] Document wxPython mess appropriately  (1 week ago)
        http://twistedmatrix.com/bugs/issue978 opened by itamarst

Bugs Closed
______________________
                     ==== Bug ====
Python 2.4 - exceptions.AttributeError: 'module' object has no 
attribute 'kwdict'  (yesterday)
        http://twistedmatrix.com/bugs/issue1001 opened by cphsu, closed 
by exarkun

[ENTERPRISE] ConnectionPool allows the pool size to be grown  (3 days 
ago)
        http://twistedmatrix.com/bugs/issue997 opened by mg, closed by 
davep

[WEB] [PATCH] web2 CGI syntax error  (1 week ago)
        http://twistedmatrix.com/bugs/issue977 opened by warner, closed 
by warner

[WEB] [PATCH] http.py stringToDatetime handling RFC850 format  (8 
months ago)
        http://twistedmatrix.com/bugs/issue669 opened by db3l, closed by 
jknight

AttributeError: 'WSGIHandler' object has no attribute 'stopProducing'  
(1 week ago)
        http://twistedmatrix.com/bugs/issue987 opened by srichter, 
closed by jknight

[WEB] Assertion Error in twisted.internet.abstract  (1 week ago)
        http://twistedmatrix.com/bugs/issue986 opened by srichter, 
closed by jknight

[WEB] AttributeError: HTTPChannelRequest instance has no attribute 
'transport'  (1 week ago)
        http://twistedmatrix.com/bugs/issue985 opened by srichter, 
closed by jknight

qtreactor dont works with threads!!  (4 months ago)
        http://twistedmatrix.com/bugs/issue793 opened by nahu, closed by 
exarkun

[WEB] twisted.web2.wsgi environment variables  (1 week ago)
        http://twistedmatrix.com/bugs/issue984 opened by srichter, 
closed by jknight

SSL problems with win32eventreactor  (12 months ago)
        http://twistedmatrix.com/bugs/issue592 opened by justinj, closed 
by jknight

[patch] Naming consistency in new plugin module  (1 week ago)
        http://twistedmatrix.com/bugs/issue980 opened by mg, closed by 
exarkun

[MAIL, NAMES] fix deprecation warnings in test_mail  (1 week ago)
        http://twistedmatrix.com/bugs/issue982 opened by warner, closed 
by exarkun

[WEBSITE] No link to Twisted 2 installer for win32 on website  (2 weeks 
ago)
        http://twistedmatrix.com/bugs/issue964 opened by ash, closed by 
exarkun

[CORE] gtk reactor not delivering callbacks timely  (13 months ago)
        http://twistedmatrix.com/bugs/issue552 opened by dektwisted, 
closed by exarkun

Weirdness in weakref.WeakValueDictionary casues problems in 
enterprise/reflector.py (with fix)  (8 months ago)
        http://twistedmatrix.com/bugs/issue682 opened by icepick, closed 
by exarkun

[PB, WEB] twisted.web.distrib uses deprecated pb classes  (13 months 
ago)
        http://twistedmatrix.com/bugs/issue543 opened by hypatia, closed 
by warner

backport if-modified-since bugfix from web2 to web  (1 week ago)
        http://twistedmatrix.com/bugs/issue976 opened by demaledetti, 
closed by jknight

twisted.web.client.getPage never completes files &gt;3.1MB (Windows)  
(1 week ago)
        http://twistedmatrix.com/bugs/issue974 opened by moonfallen, 
closed by exarkun

                     ==== Feature ====
[ENTERPRISE] Add runWithConnection to adbapi.ConnectionPool  (1 week 
ago)
        http://twistedmatrix.com/bugs/issue975 opened by mg, closed by 
davep

[DEFERRED] Deferred setTimeout sucks  (20 months ago)
        http://twistedmatrix.com/bugs/issue178 opened by radix, closed 
by exarkun




From itamar at itamarst.org  Mon Apr 25 09:03:12 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Apr 2005 11:03:12 -0400
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <1114438500.11099.6.camel@p-dhcp-333-72.rd.francetelecom.fr>
References: <42686E0A.6020905@anu.edu.au>
	<1114438500.11099.6.camel@p-dhcp-333-72.rd.francetelecom.fr>
Message-ID: <1114441392.8213.11.camel@localhost.localdomain>

On Mon, 2005-04-25 at 16:15 +0200, Antoine Pitrou wrote:

> It may be better, by the way, to run wx in the main thread and Twisted
> in the secondary thread. Some toolkits supported by wx may not like the
> fact that they aren't called from the main thread - I'm not sure such a
> limitation exists but I'm not sure of the contrary either. Twisted,
> OTOH, does not seem to care at all.

Twisted does care about this for signal handling. If Twisted is run in a
thread it will not be able to do shutdown based on signals or run
processes correctly (though if you install your own signal handlers that
forward info to twisted it can be made to work).




From ken at kenkinder.com  Mon Apr 25 10:01:32 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 25 Apr 2005 11:01:32 -0500
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <4269E888.1080400@twistedmatrix.com>
References: <200504230734.42190@tintia.doriath>
	<4269E888.1080400@twistedmatrix.com>
Message-ID: <426D145C.8050006@kenkinder.com>

Tommi Virtanen wrote:

>Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
>been sane, but I can understand that not everyone agrees; e.g. Java
>wants UCS-16 if I remember correctly. And not serializing to UTF-8
>by default catches errors that would otherwise cause mysterious things
>to happen.
>  
>
Most of the time, you should know the encoding. Instead of forcing the 
protocol to do the work, why not just have a way of setting the expected 
encoding for write() and similar methods? If the encoding is not set 
(ie, None), then raise the exception. Otherwise, use the specified 
encoding. This would have the added readability advantage in that 
unicode encoding -- uhh code -- wouldn't have to be sprinkled throughout 
the protocol classes -- only in places where the encoding is actually 
set -- in HTTP's headers for example.

-Ken




From bob at redivi.com  Mon Apr 25 10:58:17 2005
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 25 Apr 2005 12:58:17 -0400
Subject: [Twisted-Python] Sending unicode strings
In-Reply-To: <426D145C.8050006@kenkinder.com>
References: <200504230734.42190@tintia.doriath>
	<4269E888.1080400@twistedmatrix.com>
	<426D145C.8050006@kenkinder.com>
Message-ID: <7e13a4e742c5004c8ce7d6533c6a35e5@redivi.com>


On Apr 25, 2005, at 12:01 PM, Ken Kinder wrote:

> Tommi Virtanen wrote:
>
>> Personally, I think ass-u-ming Unicode is encoded as UTF-8 would have
>> been sane, but I can understand that not everyone agrees; e.g. Java
>> wants UCS-16 if I remember correctly. And not serializing to UTF-8
>> by default catches errors that would otherwise cause mysterious things
>> to happen.
>>
> Most of the time, you should know the encoding. Instead of forcing the 
> protocol to do the work, why not just have a way of setting the 
> expected encoding for write() and similar methods? If the encoding is 
> not set (ie, None), then raise the exception. Otherwise, use the 
> specified encoding. This would have the added readability advantage in 
> that unicode encoding -- uhh code -- wouldn't have to be sprinkled 
> throughout the protocol classes -- only in places where the encoding 
> is actually set -- in HTTP's headers for example.

import codecs
class MyProtocol(....):
     def __init__(self, encoding='ascii'):
         self.textwriter = codecs.getwriter(encoding)(self.transport)

     def write_text(self, s):
         self.textwriter.write(s)

     def write(self, s):
         self.transport.write(s)

This way write_text will verify that you are only sending valid strings 
in the chosen encoding.  If you call write_text() with a str then it 
will be decoded using sys.getdefaultencoding() and then encoded using 
the chosen encoding, so it really does guarantee that all strings sent 
with write_text are valid (at this level).

You should really keep separate what you're doing with raw bytes 
(write) and what you're doing with text (write_text) as they are 
different beasts.

There is no need to sprinkle this everywhere, just make it a mix-in or 
whatever and use as appropriate.

-bob




From wyvern at crm3.com  Mon Apr 25 12:35:04 2005
From: wyvern at crm3.com (Jan Van Uytven)
Date: Mon, 25 Apr 2005 11:35:04 -0700
Subject: [Twisted-Python] Help with SMTP Proxy - correction
In-Reply-To: <426A259A.7070507@reedflute.com>
References: <42699477.1010101@crm3.com> <4269FD43.8060607@reedflute.com>
	<426A259A.7070507@reedflute.com>
Message-ID: <426D3858.5000606@crm3.com>

Thanks Eugene! I'll see if I can rewrite my code to use this concept :)

Cheers,

Jan

Eugene Coetzee wrote:

> Eugene Coetzee wrote:
>
>>>
>>>      smtpServerFactory = ESMTPFactory()
>>> smtpClientFactory = SMTPClientFactory()
>>> smtpServerService = internet.TCPServer(2025, smtpServerFactory)
>>> smtpServerService.setServiceParent(application)
>>>
>>> I've left out actually forwarding the message for now, I just want 
>>> to forward a test e-mail upon receipt of the message. The whole 
>>> structure of this program doesn't seem right to me. I thought 
>>> initially of trying something like adding this to the eomReceived 
>>> method:
>>>
>>> smtpForwardService = internet.TCPClient('localhost', 2030, 
>>> smtpClientFactory)
>>> smtpForwardService.setServiceParent(application)
>>>
>> This is how I'm doing it.
>>
>> http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html
>>
>> Conductor instance registers a reference to both smtpServerService  
>> instance and smtpForwardService instance.
>>
>> I would call something like conductor.write(destination) from within 
>> the smtpServerService instance which would in turn  call  a method on 
>> the reference to smtpForwardService from within conductor.
>>
> <snip>
> Conductor instance registers a reference to both smtpServerService  
> instance and smtpForwardService instance.
>
> I would call something like conductor.write(destination) from within 
> the smtpServerService instance which would in turn  call  a method on 
> the reference to smtpForwardService from within conductor.
>
> </snip>
>
> should in fact read ...
>
> Conductor instance registers a reference to both smtpServerFactory  
> instance and smtpClientFactory instance.
>
> I would call something like conductor.write(destination) from within 
> the smtpServer instance which would in turn  call  a method on the 
> reference to smtpClientFactory from within conductor.
>
> Sorry about that.
>




From dgray at omniti.com  Mon Apr 25 15:21:54 2005
From: dgray at omniti.com (Dave Gray)
Date: Mon, 25 Apr 2005 17:21:54 -0400
Subject: [Twisted-Python] Non-blocking webserver - what am I doing wrong?
Message-ID: <426D5F72.3000203@omniti.com>

I'm trying to get a simple webserver working using twisted. It works, to 
some extent, serves pages and all, but it blocks until the 
reactor.callLater(...) is done... what am I doing wrong?

Dave

# CODE
from twisted.web import server
from twisted.web.resource import Resource
from twisted.internet import reactor, defer

import pprint
dump = pprint.PrettyPrinter(indent=4).pformat
def requestDebug(r):
     r.write('<pre>'+ dump(r.headers) +'</pre>')
     reactor.callLater(5, r.finish)

class NonBlock(Resource):
     """
     I should be a non-blocking resource that
     takes 5s to load. Instead, each request
     waits for any others to finish.
     """
     def getChild(self, path, request):
         return self
     isLeaf=False
     def render_GET(self, request):
         d = defer.Deferred()
         d.addCallback(requestDebug)
         d.callback(request)
         return server.NOT_DONE_YET

from twisted.application import service, internet
application = service.Application("nonblock")
internet.TCPServer(8080, server.Site(NonBlock())
     ).setServiceParent(application)



From exarkun at divmod.com  Mon Apr 25 15:42:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 25 Apr 2005 21:42:09 GMT
Subject: [Twisted-Python] Non-blocking webserver - what am I doing wrong?
In-Reply-To: <426D5F72.3000203@omniti.com>
Message-ID: <20050425214209.15422.830510557.divmod.quotient.57@ohm>

On Mon, 25 Apr 2005 17:21:54 -0400, Dave Gray <dgray at omniti.com> wrote:
>I'm trying to get a simple webserver working using twisted. It works, to 
>some extent, serves pages and all, but it blocks until the 
>reactor.callLater(...) is done... what am I doing wrong?
>

  You might have more success asking on the twisted-web mailing list:

    http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web

  Jp



From gmcdonald at infocomp.com  Mon Apr 25 22:21:42 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Tue, 26 Apr 2005 14:21:42 +1000
Subject: [Twisted-Python] twisted robot ...
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4D4F@XCHANGE>


> Twisted does care about this for signal handling. If Twisted is run in a
> thread it will not be able to do shutdown based on signals or run
> processes correctly (though if you install your own signal handlers that
> forward info to twisted it can be made to work).

Are there examples of installing signal handlers and forwarding signal
information to a twisted thread?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050426/a67b0a02/attachment.html>

From exarkun at divmod.com  Mon Apr 25 22:39:59 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 04:39:59 GMT
Subject: [Twisted-Python] twisted robot ...
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4D4F@XCHANGE>
Message-ID: <20050426043959.15422.61344000.divmod.quotient.661@ohm>

On Tue, 26 Apr 2005 14:21:42 +1000, Grant McDonald <gmcdonald at infocomp.com> wrote:
>
>> Twisted does care about this for signal handling. If Twisted is run in a
>> thread it will not be able to do shutdown based on signals or run
>> processes correctly (though if you install your own signal handlers that
>> forward info to twisted it can be made to work).
>
>Are there examples of installing signal handlers and forwarding signal
>information to a twisted thread?
>

  There isn't actually a public API for this.

  With almost all of the reactors included in Twisted, though:

    import signal
    from twisted.internet import reactor

    def sigInt(*a):
        # Do your own SIGINT processing, or whatever.
        reactor.sigInt(*a)

    def sigChild(*a):
        # Do your own SIGCHLD processing, or whatever.
        reactor._handleSigchld)

    signal.signal(signal.SIGINT, sigInt)
    signal.signal(signal.SIGCHLD, sigChild)

  (etc) will work.  However, those two methods really are not public (one of them even looks the part), and could change at any time.  If you are really interested in doing this, give a shout, and perhaps the interface can be extended so that it's possible to do in a supported way.  Otherwise, don't be surprised if it breaks :)

  Jp



From bear at code-bear.com  Mon Apr 25 23:32:15 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 26 Apr 2005 01:32:15 -0400
Subject: [Twisted-Python] creating source tarball from svn tree
Message-ID: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>

I'm trying to build a source distribution of the svn tree using the  
following command:

python setup.py all sdist

but I get the error below - any thoughts?

running sdist
warning: sdist: manifest template 'MANIFEST.in' does not exist (using  
default file list)
Traceback (most recent call last):
   File "twisted/topfiles/setup.py", line 113, in ?
     dist.setup(**setup_args)
   File "./twisted/python/dist.py", line 69, in setup
     return core.setup(**kw)
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/core.py", line 149, in setup
     dist.run_commands()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/dist.py", line 907, in run_commands
     self.run_command(cmd)
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/dist.py", line 927, in run_command
     cmd_obj.run()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/sdist.py", line 143, in run
     self.get_file_list()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/sdist.py", line 240, in get_file_list
     self.add_defaults()
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/sdist.py", line 301, in add_defaults
     self.filelist.extend(build_ext.get_source_files())
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/build_ext.py", line 361, in  
get_source_files
     self.check_extensions_list(self.extensions)
   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/distutils/command/build_ext.py", line 294, in  
check_extensions_list
     (ext_name, build_info) = ext
TypeError: unpack non-sequence
Error: Subprocess exited with result 1 for project core

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050426/989d7f9f/attachment.sig>

From bob at redivi.com  Tue Apr 26 03:04:40 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 26 Apr 2005 05:04:40 -0400
Subject: [Twisted-Python] creating source tarball from svn tree
In-Reply-To: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>
References: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>
Message-ID: <79bf536a8f55075f7b6cac3bcd22db20@redivi.com>


On Apr 26, 2005, at 1:32 AM, Mike Taylor wrote:

> I'm trying to build a source distribution of the svn tree using the 
> following command:
>
> python setup.py all sdist

You probably just want to do something like this (from the parent 
directory of your Twisted checkout):

svn export Twisted Twisted-20050426
tar zcvf Twisted-20050426.tar.gz Twisted-20050426

The release script looks like it does something much, much worse :)

-bob




From bear at code-bear.com  Tue Apr 26 10:23:49 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 26 Apr 2005 12:23:49 -0400
Subject: [Twisted-Python] creating source tarball from svn tree
In-Reply-To: <79bf536a8f55075f7b6cac3bcd22db20@redivi.com>
References: <37bdf7dd717b75f064d58c1c544dd1f9@code-bear.com>
	<79bf536a8f55075f7b6cac3bcd22db20@redivi.com>
Message-ID: <76a0278659fd436596b9eb10f259c3a1@code-bear.com>

ahh, the "out of the box" solution - thanks!

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


On Apr 26, 2005, at 5:04 AM, Bob Ippolito wrote:

>
> On Apr 26, 2005, at 1:32 AM, Mike Taylor wrote:
>
>> I'm trying to build a source distribution of the svn tree using the 
>> following command:
>>
>> python setup.py all sdist
>
> You probably just want to do something like this (from the parent 
> directory of your Twisted checkout):
>
> svn export Twisted Twisted-20050426
> tar zcvf Twisted-20050426.tar.gz Twisted-20050426
>
> The release script looks like it does something much, much worse :)
>
> -bob
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050426/3600c61b/attachment.sig>

From torbjorn at einarssons.se  Tue Apr 26 10:27:05 2005
From: torbjorn at einarssons.se (=?iso-8859-1?Q?Torbj=F6rn_Einarsson?=)
Date: Tue, 26 Apr 2005 18:27:05 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
Message-ID: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>

Hi,

 

Im trying to make a server that listens to one TCP socket for commands and
then starts listening to more or less UDP sockets for data depending on the
commands. The UDP data shall then be forwarded to one or more outgoing UDP
ports.

 

For example, here are some commands with explanations:

 

addChannel 10000                             should make the server
listening to UDP port 10000

addChannel 10002                             should make the server
listening to UDP port 10002

addConnection 10000 10.0.0.2:5000    start forwarding the packet from UDP
port 10000 to port 5000 on another machine

addConnection 10000 10.0.0.3:5002    start forwarding the packet from UDP
port 10000 to port 5002 on yet another machine

delConnection  10000 10.0.0.2:5000    stop forwarding packets to the first
guy

delConnection  10000 10.0.0.3:5002    stop forwarding packets to the second
guy

delChannel      10000                         stop listening to port 10000

 

Ive been making some rather advanced servers in twisted, but with fixed
ports. How can I deal with this type of dynamic port bindings?

 

For adding a port to listen to: reactor.listenUDP(10000,prot) is working,
but how do I stop listening to a port an unbind it? Ive found something
called unlistenUDP but it seems to be deprecated?

 

Alternatively, I could start up a service , like

u = internet.services.UDPServer(10000,UdpProtocol())

but how do I stop this particular service without stopping all others?

 

Any suggestions are welcome.

 

Regards,

Torbjörn Einarsson1

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050426/20b98c97/attachment.html>

From exarkun at divmod.com  Tue Apr 26 11:26:38 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 17:26:38 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>
Message-ID: <20050426172638.15422.990814225.divmod.quotient.1781@ohm>

On Tue, 26 Apr 2005 18:27:05 +0200, Torbjörn Einarsson <torbjorn at einarssons.se> wrote:
>Hi,
>
>
>
>Im trying to make a server that listens to one TCP socket for commands and
>then starts listening to more or less UDP sockets for data depending on the
>commands. The UDP data shall then be forwarded to one or more outgoing UDP
>ports.
>
>For example, here are some commands with explanations:
>
>addChannel 10000                             should make the server
>listening to UDP port 10000
>
>addChannel 10002                             should make the server
>listening to UDP port 10002
>
>addConnection 10000 10.0.0.2:5000    start forwarding the packet from UDP
>port 10000 to port 5000 on another machine
>
>addConnection 10000 10.0.0.3:5002    start forwarding the packet from UDP
>port 10000 to port 5002 on yet another machine
>
>delConnection  10000 10.0.0.2:5000    stop forwarding packets to the first
>guy
>
>delConnection  10000 10.0.0.3:5002    stop forwarding packets to the second
>guy
>
>delChannel      10000                         stop listening to port 10000
>
>
>
>Ive been making some rather advanced servers in twisted, but with fixed
>ports. How can I deal with this type of dynamic port bindings?
>
>For adding a port to listen to: reactor.listenUDP(10000,prot) is working,
>but how do I stop listening to a port an unbind it? Ive found something
>called unlistenUDP but it seems to be deprecated?

  listenUDP returns a udp.Port.  Call stopListening() on that Port and it will shut down.

>
>Alternatively, I could start up a service , like
>
>u = internet.services.UDPServer(10000,UdpProtocol())
>
>but how do I stop this particular service without stopping all others?
>

  Just call stopService() on it.  How you arrange to know which services should have this called on them and how you track your services depends on your specific application.

  Jp



From itamar at itamarst.org  Tue Apr 26 10:51:30 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Apr 2005 12:51:30 -0400
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>
References: <000b01c54a7c$c89c8c30$0200a8c0@hemnet>
Message-ID: <1114534290.8738.54.camel@localhost.localdomain>

To stop listening on UDP port:

port = reactor.listenUDP(1243, p)
port.stopListening()




From torbjorn at einarssons.se  Tue Apr 26 14:52:45 2005
From: torbjorn at einarssons.se (=?iso-8859-1?Q?Torbj=F6rn_Einarsson?=)
Date: Tue, 26 Apr 2005 22:52:45 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <1114534290.8738.54.camel@localhost.localdomain>
Message-ID: <000201c54aa1$e5deef70$0200a8c0@hemnet>

Thanks a lot!

A related question:
how do I in the simplest way send UDP data to 10 different ports.

In standard Python I would do
sock = socket.socket(AF_INET, socket.SOCK_DGRAM)
for port in portList:
    sock.sendto(data,(host,port))
sock.close()

What is the corresponding thing in Twisted?  (I've only found listenUDP and
connected UDP).

BR,
Torbjörn

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Itamar
Shtull-Trauring
Sent: den 26 april 2005 18:52
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dynamic listening to UDP ports?

To stop listening on UDP port:

port = reactor.listenUDP(1243, p)
port.stopListening()


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From exarkun at divmod.com  Tue Apr 26 16:12:55 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 22:12:55 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000201c54aa1$e5deef70$0200a8c0@hemnet>
Message-ID: <20050426221255.15422.651718936.divmod.quotient.2185@ohm>

On Tue, 26 Apr 2005 22:52:45 +0200, Torbjörn Einarsson <torbjorn at einarssons.se> wrote:
>Thanks a lot!
>
>A related question:
>how do I in the simplest way send UDP data to 10 different ports.
>
> [snip]
>

  Use the write() method.  See the UDP howto:

    http://twistedmatrix.com/documents/current/howto/udp

  Jp



From pp64 at codelock.com  Tue Apr 26 16:36:12 2005
From: pp64 at codelock.com (Pavel Pergamenshchik)
Date: Tue, 26 Apr 2005 15:36:12 -0700
Subject: [Twisted-Python] Non-blocking webserver - what am I doing wrong?
In-Reply-To: <426D5F72.3000203@omniti.com>
References: <426D5F72.3000203@omniti.com>
Message-ID: <20050426153612.3940f9f0@dunce>

On Mon, 25 Apr 2005 17:21:54 -0400
Dave Gray <dgray at omniti.com> wrote:

> I'm trying to get a simple webserver working using twisted. It works, to 
> some extent, serves pages and all, but it blocks until the 
> reactor.callLater(...) is done... what am I doing wrong?
> 
> Dave
> 
> # CODE

...snip...

>          d = defer.Deferred()
>          d.addCallback(requestDebug)
>          d.callback(request)

...snip...

Note that this code is more or less equivalent to
           requestDebug(request)



From torbjorn at einarssons.se  Tue Apr 26 17:01:29 2005
From: torbjorn at einarssons.se (=?iso-8859-1?Q?Torbj=F6rn_Einarsson?=)
Date: Wed, 27 Apr 2005 01:01:29 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <20050426221255.15422.651718936.divmod.quotient.2185@ohm>
Message-ID: <000001c54ab3$e1a670b0$0200a8c0@hemnet>

Well, the examples always use reactor.listenUDP(port,proto). Can I get rid
of the listenUDP, since I don't want to listen to a port?

I tried with just creating a protocol instance and using
self.transport.write() inside it but then the transport was None.

Sorry for being slow in grasping this, but the manual is very terse...

/Torbjörn




-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jp Calderone
Sent: den 27 april 2005 00:13
To: Twisted general discussion
Subject: RE: [Twisted-Python] Dynamic listening to UDP ports?

On Tue, 26 Apr 2005 22:52:45 +0200, TorbjÃ¶rn Einarsson
<torbjorn at einarssons.se> wrote:
>Thanks a lot!
>
>A related question:
>how do I in the simplest way send UDP data to 10 different ports.
>
> [snip]
>

  Use the write() method.  See the UDP howto:

    http://twistedmatrix.com/documents/current/howto/udp

  Jp

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From sir.shz at gmail.com  Tue Apr 26 17:30:36 2005
From: sir.shz at gmail.com (sir shz)
Date: Tue, 26 Apr 2005 16:30:36 -0700
Subject: [Twisted-Python] flushing the transport
References: <000001c54ab3$e1a670b0$0200a8c0@hemnet>
Message-ID: <000b01c54ab7$f77e3040$800101df@sv.us.sonicwall.com>

Hi, I'm just starting to write a simple client, whose protocol inherits from
basic.LineReceiver:

class MyClientProtocol(basic.LineReceiver):
     def connectionMade(self):
          stdout.write("\nconnectionMade\n")
          self.transport.write("test\r\n")
          # time.sleep(10)

now if I un-comment the "time.sleep(10)", the server doesn't receive the
"test\r\n" message until
10 seconds later, basically after the connectionMade() returns. Is there
anyway to "flush" the buffer so
the transport will send the "test\r\n" right away?

Thanks.

Z.





From exarkun at divmod.com  Tue Apr 26 17:50:15 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 23:50:15 GMT
Subject: [Twisted-Python] flushing the transport
In-Reply-To: <000b01c54ab7$f77e3040$800101df@sv.us.sonicwall.com>
Message-ID: <20050426235015.15422.1253386490.divmod.quotient.2331@ohm>

On Tue, 26 Apr 2005 16:30:36 -0700, sir shz <sir.shz at gmail.com> wrote:
>Hi, I'm just starting to write a simple client, whose protocol inherits from
>basic.LineReceiver:
>
>class MyClientProtocol(basic.LineReceiver):
>     def connectionMade(self):
>          stdout.write("\nconnectionMade\n")
>          self.transport.write("test\r\n")
>          # time.sleep(10)
>
>now if I un-comment the "time.sleep(10)", the server doesn't receive the
>"test\r\n" message until
>10 seconds later, basically after the connectionMade() returns. Is there
>anyway to "flush" the buffer so
>the transport will send the "test\r\n" right away?
>
>Thanks.
>
>Z.
>

  Flushing a buffer is a potentially long-running operation.  What if the buffer was full?  What if the network is congested?  What if the peer has gone away and will never, ever ACK another packet ever again?

  You should rely on protocol-level messages if you need to synchronize things.  You should rely on protocol-level acknowledgements if you need to be certain of delivery.

  All you can rely on transport.write() to do is eventually send the bytes, if it is possible to do so.

  Jp



From exarkun at divmod.com  Tue Apr 26 17:59:01 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 26 Apr 2005 23:59:01 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000001c54ab3$e1a670b0$0200a8c0@hemnet>
Message-ID: <20050426235901.15422.781768115.divmod.quotient.2342@ohm>

On Wed, 27 Apr 2005 01:01:29 +0200, Torbjörn Einarsson <torbjorn at einarssons.se> wrote:
>Well, the examples always use reactor.listenUDP(port,proto). Can I get rid
>of the listenUDP, since I don't want to listen to a port?
>
>I tried with just creating a protocol instance and using
>self.transport.write() inside it but then the transport was None.
>
>Sorry for being slow in grasping this, but the manual is very terse...
>

  You cannot get rid of the listenUDP().  All UDP traffic has two endpoint addresses associated with it.  One on the receiving end, one on the sending end.  The socket module example you provided earlier binds a local port, too, it just does so implicitly instead of explicitly.

  If you don't care what port you're bound to, use 0.  Your socket library will pick an available one at random for you.

  Jp



From remy.cool at smartology.nl  Wed Apr 27 00:08:21 2005
From: remy.cool at smartology.nl (Remy C Cool)
Date: Wed, 27 Apr 2005 08:08:21 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
Message-ID: <426F2C55.9040703@smartology.nl>

Hello,

I've searched on the (Twisted) website and mailinglists, but failed to 
find the answer to my question.

Is is possible to pass the original exception code/message to the XMLRPC 
client? When an exception occurs, the client get's a general 'error 
occured' message and I would like to be able to let the client know what 
went wrong. How can I accomplish this with Twisted?

BTW I'm working with the latest Twisted 1.x release (Debian)

Regards,
Remy Cool



From projects at reedflute.com  Wed Apr 27 02:14:10 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 27 Apr 2005 10:14:10 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <000201c54aa1$e5deef70$0200a8c0@hemnet>
References: <000201c54aa1$e5deef70$0200a8c0@hemnet>
Message-ID: <426F49D2.2030601@reedflute.com>

Torbjörn Einarsson wrote:

>Thanks a lot!
>
>A related question:
>how do I in the simplest way send UDP data to 10 different ports.
>
>In standard Python I would do
>sock = socket.socket(AF_INET, socket.SOCK_DGRAM)
>for port in portList:
>    sock.sendto(data,(host,port))
>sock.close()
>
>What is the corresponding thing in Twisted?  (I've only found listenUDP and
>connected UDP).
>
>  
>
As I understand it you want to tie different servers together. The 
"Server Factory" base class  for TCP connections is an abstraction layer 
which makes it possible to spawn different server protocols , see:

http://twistedmatrix.com/documents/current/howto/tutorial/factory

There is no UDP Factory base class that can be used to wrap different 
UDP protocol instances.

I achieve this by writing my own application layer which ties everything 
together- see:

http://twistedmatrix.com/pipermail/twisted-python/2005-March/009888.html

Alternatively - I suspect one could also simply inherit from 
service.Application  and code your "application layer" stuff in there.

regards,

Eugene Coetzee

-- 
--
===============================================
Reedflute Software Solutions

Telephone           -> +27 18 293 3236
General information -> info at reedflute.com
Project information -> projects at reedflute.com
Web                 -> www.reedflute.com
=============================================== 




From exarkun at divmod.com  Wed Apr 27 06:13:33 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 12:13:33 GMT
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <426F49D2.2030601@reedflute.com>
Message-ID: <20050427121333.15422.1765175511.divmod.quotient.3389@ohm>

On Wed, 27 Apr 2005 10:14:10 +0200, Eugene Coetzee <projects at reedflute.com> wrote:
>
> [snip]
>
>Alternatively - I suspect one could also simply inherit from 
>service.Application  and code your "application layer" stuff in there.
>

  You can't subclass t.a.service.Application (since it's a function :).  Subclassing t.a.service.Service is often a good idea, though.

  Jp



From boomberschloss at yahoo.com  Wed Apr 27 06:49:01 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Wed, 27 Apr 2005 05:49:01 -0700 (PDT)
Subject: [Twisted-Python] blocking and threads
Message-ID: <20050427124901.9885.qmail@web53110.mail.yahoo.com>

Hi all,

I am just wondering: from the Twisted how-tos, it
appears that doing anything that could possibly take
arbitrarily long to execute should not be done in the
reactor's main thread; i.e. it should be done using an
asynchronous library (such as Twisted's network
communication facilities), or in a different thread,
using the reactor's thread pool.

So it would seem that many things that may be
considered "primitive" in Python, such as file IO,
require some kind of patching if they are to be
immediately usable by a Twisted application. I came up
with the following solution, which enables calling any
function in a different thread with a deferred
interface; I just wanted to make sure that I'm not
completely missing some point:

def deferToThread(func, *args, **kargs):
	"""executes the given function in a thread, and
passes the return value to the deferred we return"""
	d = defer.Deferred()
	reactor.callInThread(_calledInThread, d, func, *args,
**kargs)
	return d

def _calledInThread(d, func, *args, **kargs):
	try:
		retval = func(*args, **kargs)
	except Exception, x:
		reactor.callFromThread(d.errback, x)
	else:
		reactor.callFromThread(d.callback, retval)


Thanks,

Joe

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From projects at reedflute.com  Wed Apr 27 06:58:48 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 27 Apr 2005 14:58:48 +0200
Subject: [Twisted-Python] Dynamic listening to UDP ports?
In-Reply-To: <20050427121333.15422.1765175511.divmod.quotient.3389@ohm>
References: <20050427121333.15422.1765175511.divmod.quotient.3389@ohm>
Message-ID: <426F8C88.3010406@reedflute.com>

Jp Calderone wrote:

>
>  You can't subclass t.a.service.Application (since it's a function 
> :).  Subclassing t.a.service.Service is often a good idea, though.
>
>  Jp
>
I stand corrected, although from an OO puritanical :) point of view 
"Application" should be the name of a class - not a method.



From exarkun at divmod.com  Wed Apr 27 07:20:53 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 13:20:53 GMT
Subject: [Twisted-Python] blocking and threads
In-Reply-To: <20050427124901.9885.qmail@web53110.mail.yahoo.com>
Message-ID: <20050427132053.15422.1888991954.divmod.quotient.3485@ohm>

On Wed, 27 Apr 2005 05:49:01 -0700 (PDT), Joachim Boomberschloss <boomberschloss at yahoo.com> wrote:
>Hi all,
>
>I am just wondering: from the Twisted how-tos, it
>appears that doing anything that could possibly take
>arbitrarily long to execute should not be done in the
>reactor's main thread; i.e. it should be done using an
>asynchronous library (such as Twisted's network
>communication facilities), or in a different thread,
>using the reactor's thread pool.
>
>So it would seem that many things that may be
>considered "primitive" in Python, such as file IO,
>require some kind of patching if they are to be
>immediately usable by a Twisted application. I came up
>with the following solution, which enables calling any
>function in a different thread with a deferred
>interface; I just wanted to make sure that I'm not
>completely missing some point:
>
>def deferToThread(func, *args, **kargs):
>	"""executes the given function in a thread, and
>passes the return value to the deferred we return"""
>	d = defer.Deferred()
>	reactor.callInThread(_calledInThread, d, func, *args,
>**kargs)
>	return d
>
>def _calledInThread(d, func, *args, **kargs):
>	try:
>		retval = func(*args, **kargs)
>	except Exception, x:
>		reactor.callFromThread(d.errback, x)
>	else:
>		reactor.callFromThread(d.callback, retval)
>

  Looks like you've got a pretty firm understanding.  The one thing you did miss is the twisted.internet.threads module, which provides the deferToThread function.

  Jp



From roland.hedberg at adm.umu.se  Wed Apr 27 07:23:00 2005
From: roland.hedberg at adm.umu.se (Roland Hedberg)
Date: Wed, 27 Apr 2005 15:23:00 +0200
Subject: [Twisted-Python] XMLRPC server help neede
Message-ID: <8a18b942611d65e9b75baec6e7e6f3ae@adm.umu.se>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi !

I have a application, a sort of routing system, where nodes communicate 
using XML-RPC.

It works but to my mind it's too slow. Now, changing to some other 
protocol then XML-RPC is not an option presently, so I don't want to 
know what other protocol that would do it much better.
I might eventually get there but not at this point in time.

One reason for the slowness is that I'm not able to get the server to 
reply to the client when I would like it to. This is how it should 
work:

1) server gets a message from the client, checks that it is well formed
2) server determins if it knows what to do with the message
3) server  performs the appropriate action on the message

Now, if the the message is not well formed or if the server does not 
know what to do with the
packet it should reject it. So far everything works as planned.

If the packet is well formed and the server knows what to do with it, 
it should reply to the client and then perform the action.

My problem is how I would go about doing this. Conceptually I could 
imaging having a workqueue where I would place the message and then 
from the point of view of the client-sever communication just forget 
about it.

Anyone who has done anything similar or has an idea on how to do this ?

- -- Roland
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFCb5I6Vxk7TEwZBFwRAmPLAJ0YcIRPRsqSbb7f5cxNBp4y+aXdwQCgmad7
ZFagUsqKhSRgrWr2LDt+iw4=
=/uhT
-----END PGP SIGNATURE-----




From boomberschloss at yahoo.com  Wed Apr 27 08:07:15 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Wed, 27 Apr 2005 07:07:15 -0700 (PDT)
Subject: [Twisted-Python] blocking and threads
In-Reply-To: 6667
Message-ID: <20050427140715.15292.qmail@web53101.mail.yahoo.com>

Thanks, how embarassing... I suggest adding it to the
"using threads" howto (I'd do it myself if I knew
how). Another idea: make an asynchronous file-handling
module that wraps Python's file IO with something that
has a deferred-oriented interface. Is there already
something like that too?

Joe

--- Jp Calderone <exarkun at divmod.com> wrote:
> On Wed, 27 Apr 2005 05:49:01 -0700 (PDT), Joachim
> Boomberschloss <boomberschloss at yahoo.com> wrote:
> >Hi all,
> >
> >I am just wondering: from the Twisted how-tos, it
> >appears that doing anything that could possibly
> take
> >arbitrarily long to execute should not be done in
> the
> >reactor's main thread; i.e. it should be done using
> an
> >asynchronous library (such as Twisted's network
> >communication facilities), or in a different
> thread,
> >using the reactor's thread pool.
> >
> >So it would seem that many things that may be
> >considered "primitive" in Python, such as file IO,
> >require some kind of patching if they are to be
> >immediately usable by a Twisted application. I came
> up
> >with the following solution, which enables calling
> any
> >function in a different thread with a deferred
> >interface; I just wanted to make sure that I'm not
> >completely missing some point:
> >
> >def deferToThread(func, *args, **kargs):
> >	"""executes the given function in a thread, and
> >passes the return value to the deferred we
> return"""
> >	d = defer.Deferred()
> >	reactor.callInThread(_calledInThread, d, func,
> *args,
> >**kargs)
> >	return d
> >
> >def _calledInThread(d, func, *args, **kargs):
> >	try:
> >		retval = func(*args, **kargs)
> >	except Exception, x:
> >		reactor.callFromThread(d.errback, x)
> >	else:
> >		reactor.callFromThread(d.callback, retval)
> >
> 
>   Looks like you've got a pretty firm understanding.
>  The one thing you did miss is the
> twisted.internet.threads module, which provides the
> deferToThread function.
> 
>   Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From exarkun at divmod.com  Wed Apr 27 08:24:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 14:24:47 GMT
Subject: [Twisted-Python] blocking and threads
In-Reply-To: <20050427140715.15292.qmail@web53101.mail.yahoo.com>
Message-ID: <20050427142447.15422.447243835.divmod.quotient.3579@ohm>

On Wed, 27 Apr 2005 07:07:15 -0700 (PDT), Joachim Boomberschloss <boomberschloss at yahoo.com> wrote:
>Thanks, how embarassing... I suggest adding it to the
>"using threads" howto (I'd do it myself if I knew
>how). Another idea: make an asynchronous file-handling
>module that wraps Python's file IO with something that
>has a deferred-oriented interface. Is there already
>something like that too?
>

  There's not, yet (although likely the VFS project Chris Armstrong, Andy Gayton, Tim Stebbing, and Andrew Bennetts recently started on will probably encompass this at some point).

  For many projects, asynchronous disk file i/o isn't actually that important.  They either only do a little bit of it, or they can fragment it over multiple reactor iterations manually without too much effort.  This is probably the main reason there isn't something like adbapi for files in Twisted already.

  For projects that do a lot of disk IO (like an ftp server, say :), or have latency requirements more stringent than average, an asynchronous file API would definitely be useful.

  Jp



From dgray at omniti.com  Wed Apr 27 08:30:44 2005
From: dgray at omniti.com (Dave Gray)
Date: Wed, 27 Apr 2005 10:30:44 -0400
Subject: [Twisted-Python] Non-blocking webserver - what am I doing	wrong?
In-Reply-To: <20050426153612.3940f9f0@dunce>
References: <426D5F72.3000203@omniti.com> <20050426153612.3940f9f0@dunce>
Message-ID: <426FA214.1080802@omniti.com>

> >         d = defer.Deferred()
> >         d.addCallback(requestDebug)
> >         d.callback(request)
> 
> Note that this code is more or less equivalent to
>            requestDebug(request)

Except that my version returns before the requestDebug call is done. 
Even though I'm a Deferred n00b, I don't think I misunderstood _that_. 
By all means, correct me if I'm wrong...



From bv at bnl.gov  Wed Apr 27 08:34:48 2005
From: bv at bnl.gov (Brett Viren)
Date: Wed, 27 Apr 2005 10:34:48 -0400
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <426F2C55.9040703@smartology.nl> (Remy C. Cool's message of
	"Wed, 27 Apr 2005 08:08:21 +0200")
References: <426F2C55.9040703@smartology.nl>
Message-ID: <ir4oec0b853.fsf@minos.phy.bnl.gov>

Remy C Cool <remy.cool at smartology.nl> writes:

> Hello,
>
> I've searched on the (Twisted) website and mailinglists, but failed to
> find the answer to my question.
>
> Is is possible to pass the original exception code/message to the
> XMLRPC client? When an exception occurs, the client get's a general
> 'error occured' message and I would like to be able to let the client
> know what went wrong. How can I accomplish this with Twisted?

It isn't really an exception but I use the idiom of returning an
(int,string) tuple:

  (err,error_message)

If err != 0, it's interpreted as an error code.  A successful return
is (0,"").

I don't happen to do it, but I suppose you could then raise an
exception on the client size by hand when non-zero is returned.

-Brett.



From exarkun at divmod.com  Wed Apr 27 08:54:16 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 14:54:16 GMT
Subject: [Twisted-Python] Non-blocking webserver - what am I doing	wrong?
In-Reply-To: <426FA214.1080802@omniti.com>
Message-ID: <20050427145416.15422.1836199685.divmod.quotient.3641@ohm>

On Wed, 27 Apr 2005 10:30:44 -0400, Dave Gray <dgray at omniti.com> wrote:
>> >         d = defer.Deferred()
>> >         d.addCallback(requestDebug)
>> >         d.callback(request)
>>
>>Note that this code is more or less equivalent to
>>            requestDebug(request)
>
>Except that my version returns before the requestDebug call is done. Even 
>though I'm a Deferred n00b, I don't think I misunderstood _that_. By all 
>means, correct me if I'm wrong...
>

  Indeed, you have misunderstood:

    exarkun at boson:~$ python
    Python 2.4.1 (#2, Mar 30 2005, 21:51:10) 
    [GCC 3.3.5 (Debian 1:3.3.5-8ubuntu2)] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> from twisted.internet import defer
    >>> def requestDebug(request):
    ...     print 'Request debug called with', repr(request)
    ...     print 'Request debug returning'
    ... 
    >>> requestDebug('foo')
    Request debug called with 'foo'
    Request debug returning
    >>> d = defer.Deferred()
    >>> d.addCallback(requestDebug)
    <Deferred at -0x481fef74>
    >>> d.callback('foo')
    Request debug called with 'foo'
    Request debug returning
    >>> 

  Deferreds don't re-arrange processing, or make functions asynchronous, or anything like that.  They only hook a result up with one or more functions for handling the result.  The result is often only available after the callback functions have been defined and added to the Deferred, but if it is available beforehand, nothing significant really changes.

  Put another way: if a Deferred has a callback, when it is given a result, the callback is invoked immediately; if a Deferred has a result, when it is given a callback, the callback is invoked immediately.

  Jp



From bv at bnl.gov  Wed Apr 27 09:19:58 2005
From: bv at bnl.gov (Brett Viren)
Date: Wed, 27 Apr 2005 11:19:58 -0400
Subject: [Twisted-Python] XMLRPC server help neede
In-Reply-To: <8a18b942611d65e9b75baec6e7e6f3ae@adm.umu.se> (Roland Hedberg's
	message of "Wed, 27 Apr 2005 15:23:00 +0200")
References: <8a18b942611d65e9b75baec6e7e6f3ae@adm.umu.se>
Message-ID: <ir4is28b61t.fsf@minos.phy.bnl.gov>

Roland Hedberg <roland.hedberg at adm.umu.se> writes:
> If the packet is well formed and the server knows what to do with it,
> it should reply to the client and then perform the action.
>
> My problem is how I would go about doing this. Conceptually I could
> imaging having a workqueue where I would place the message and then
> from the point of view of the client-sever communication just forget
> about it.
>
> Anyone who has done anything similar or has an idea on how to do this ?

I do this by subclassing twisted.web.xmlrpc.XMLRPC and handling the
query in a work queue (appended below) that runs in its own thread.
In my case the client doesn't care if it sent me well formed data or
not, so immediately after putting the query in the work queue I return
from the xmlrpc method and the client is free.  In my case, I do some
sanity checking of the query inside the queue.  In your case you'd do
the checking before stuffing the queue so you could inform the client.

Here is a sketch of the server chopped out from my code:

from twisted.web import xmlrpc
class DataSource(xmlrpc.XMLRPC):
    "The XML-RPC listener"

    def __init__(self,services,sem):
        xmlrpc.XMLRPC.__init__(self)
        xmlrpc.addIntrospection(self)
        self.data_cq = CommandQueue()
        self.sem = sem
        self.services = services

    def _handle_sem_release(self,x):
        #print "DataSource._handle_sem_release(%s)"%str(x)
        self.sem.release()
        from twisted.python.failure import Failure
        if x.__class__ == Failure:
            if x.value[0] == "DEBUG": return x
            log.error(x)
        return x

    def xmlrpc_method(self,idstr,values):
        "Accept callbacks from Export API"
        d = self.sem.acquire()
        d.addCallback(lambda x: self.data_cq(self.services.method,idstr,values))
        d.AddBoth(self._handle_sem_release)
        return 0

All the real work is done in the "services.method" method.  You'll
note that I use a Semaphore class (appended below).  This is keep
other operations not shown here from being executed in the middle of
handling the query.

BTW, the Semaphore and CommandQueue classes were developed with much
help from this list.  Thanks again!

-Brett.

# ------------------------------------------------

from twisted.internet import defer
from Queue import Queue, Empty
from twisted.python import failure

class Semaphore(object):
    """Asynchronous semaphore stolen from:
    http://twistedmatrix.com/pipermail/twisted-python/2003-August/005323.html
    """
    def __init__(self, value=1, verbose=None):
        self.queue = []
        self.value = value

    def acquire(self):
        d = defer.Deferred()
        if self.value:
            self.value -= 1
            d.callback(False)
        else:
            self.queue.append(d)
        return d

    def release(self):
        if self.queue:
            self.queue.pop(0).callback(True)
        else:
            self.value += 1


class CommandQueue:

    '''Queue up commands for serial calling.  One must call the
    drain() method to start reading the internal queue.  Most likely
    one wants to call this in a thread.'''

    all_queues = []

    def __init__(self):
        "Create a CommandQueue"
        self.queue = Queue()
        self.stop = False
        CommandQueue.all_queues.append(self)
        from twisted.internet import reactor
        reactor.callInThread(self.drain)
        return

    def __call__(self,meth,*a,**k):

        '''Call meth(*a,**k) when it reaches end of queue.  Returns a
        Deferred that will pass the return of meth.'''

        deferred = defer.Deferred()
        deferred.addErrback(self._error)
        self.queue.put((deferred,meth,a,k))
        return deferred

    def _error(self,a):
        try:
            a.printTraceback(sys.stderr)
        except:
            print str(a)
        return a

    def drain(self):
        'Drain the command queue until CommandQueue.stop is True'
        while not self.stop:
            try:
                d,meth,a,k = self.queue.get(True,1)
            except Empty:
                continue
            #print "calling %s(%s,%s)"%(meth.__name__,str(a),str(k))
            try:
                res = meth(*a,**k)
            except Exception,err:
                res = failure.Failure(sys.exc_value)
            reactor.callFromThread(d.callback,res)
            #d.callback(meth(*a,**k))
            #print "callback done"
        #print "drain closing"
        return 0







From dgray at omniti.com  Wed Apr 27 09:31:29 2005
From: dgray at omniti.com (Dave Gray)
Date: Wed, 27 Apr 2005 11:31:29 -0400
Subject: [Twisted-Python] Non-blocking webserver - what am I doing	wrong?
In-Reply-To: <20050427145416.15422.1836199685.divmod.quotient.3641@ohm>
References: <20050427145416.15422.1836199685.divmod.quotient.3641@ohm>
Message-ID: <426FB051.6000400@omniti.com>

>  Deferreds don't re-arrange processing, or make functions asynchronous, 
> or anything like that.  They only hook a result up with one or more 
> functions for handling the result.  The result is often only available 
> after the callback functions have been defined and added to the 
> Deferred, but if it is available beforehand, nothing significant really 
> changes.
> 
>  Put another way: if a Deferred has a callback, when it is given a 
> result, the callback is invoked immediately; if a Deferred has a result, 
> when it is given a callback, the callback is invoked immediately.

Gotcha, thanks.



From general at eepatents.com  Wed Apr 27 09:46:24 2005
From: general at eepatents.com (Ed Suominen)
Date: Wed, 27 Apr 2005 08:46:24 -0700
Subject: [Twisted-Python] blocking and threads
In-Reply-To: <E1DQoVp-0004n4-02@pyramid.twistedmatrix.com>
References: <E1DQoVp-0004n4-02@pyramid.twistedmatrix.com>
Message-ID: <200504270846.25040.general@eepatents.com>

On Wednesday 27 April 2005 08:31 am, Jp Calderone <exarkun at divmod.com> 
wrote:
> On Wed, 27 Apr 2005 07:07:15 -0700 (PDT), Joachim Boomberschloss 
<boomberschloss at yahoo.com> wrote:
> >Thanks, how embarassing... I suggest adding it to the
> >"using threads" howto (I'd do it myself if I knew
> >how). Another idea: make an asynchronous file-handling
> >module that wraps Python's file IO with something that
> >has a deferred-oriented interface. Is there already
> >something like that too?
>
>   There's not, yet (although likely the VFS project Chris Armstrong,
> Andy Gayton, Tim Stebbing, and Andrew Bennetts recently started on
> will probably encompass this at some point).
>
>   For many projects, asynchronous disk file i/o isn't actually that
> important.  They either only do a little bit of it, or they can
> fragment it over multiple reactor iterations manually without too
> much effort.  This is probably the main reason there isn't something
> like adbapi for files in Twisted already.
>
>   For projects that do a lot of disk IO (like an ftp server, say :),
> or have latency requirements more stringent than average, an
> asynchronous file API would definitely be useful.

Also if files are being accessed via NFS or SSH.



From carolinaardohain at gmail.com  Wed Apr 27 17:10:29 2005
From: carolinaardohain at gmail.com (Carolina Ardohain)
Date: Wed, 27 Apr 2005 20:10:29 -0300
Subject: [Twisted-Python] Clossing one TCP connection
Message-ID: <8ecf09605042716107df86390@mail.gmail.com>

I launch several connections using an object like this

class MyConnection()
  def __init__(host, port, factory):
    self.factory = factory
    self.connector = reactor.connectTCP(host, port, factory)

I create several connections

m1 = MyConnection('host1', 8000, MyFactory())
m2 = MyConnection('host2', 8000, MyFactory())

reactor.run()

Now I want to create a method onClose that close the connection,
something like reactor.stop() but that dont close the whole
application.



From exarkun at divmod.com  Wed Apr 27 17:57:09 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 27 Apr 2005 23:57:09 GMT
Subject: [Twisted-Python] Clossing one TCP connection
In-Reply-To: <8ecf09605042716107df86390@mail.gmail.com>
Message-ID: <20050427235709.15422.625673190.divmod.quotient.4418@ohm>

On Wed, 27 Apr 2005 20:10:29 -0300, Carolina Ardohain <carolinaardohain at gmail.com> wrote:
>I launch several connections using an object like this
>
>class MyConnection()
>  def __init__(host, port, factory):
>    self.factory = factory
>    self.connector = reactor.connectTCP(host, port, factory)
>
>I create several connections
>
>m1 = MyConnection('host1', 8000, MyFactory())
>m2 = MyConnection('host2', 8000, MyFactory())
>
>reactor.run()
>
>Now I want to create a method onClose that close the connection,
>something like reactor.stop() but that dont close the whole
>application.
>

  self.connector has a method, disconnect, that you can call to sever the connection associated with just that connector.  The object reactor.connecTCP() returns conforms to the IConnector interface, which is documented further here:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IConnector.html

  Jp



From sir.shz at gmail.com  Wed Apr 27 17:59:56 2005
From: sir.shz at gmail.com (Sir.shz)
Date: Wed, 27 Apr 2005 16:59:56 -0700
Subject: [Twisted-Python] nonblocking stdio
References: <8ecf09605042716107df86390@mail.gmail.com>
Message-ID: <001101c54b85$372125e0$800101df@sv.us.sonicwall.com>

Hi, I'm trying to write a test tcp client which sends some commands to the
server, I'd like the
client to take the commands from stdin, and sends it to the server. The
following code segment
doesn't seem to send anything, is it because the while loop is actually
blocking? what's the right way to
accomplish this? Thanks.

Z.

class MyClientProtocol(basic.LineReceiver):
     def lineReceived(self,data):
          stdout.write("From Server:" + data+"\n"),

     def connectionMade(self):
           while True:
                cmd = raw_input("Enter command:")
                self.transport.write(cmd+"\r\n")






From exarkun at divmod.com  Wed Apr 27 18:33:29 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 00:33:29 GMT
Subject: [Twisted-Python] nonblocking stdio
In-Reply-To: <001101c54b85$372125e0$800101df@sv.us.sonicwall.com>
Message-ID: <20050428003329.15422.215602842.divmod.quotient.4470@ohm>

On Wed, 27 Apr 2005 16:59:56 -0700, "Sir.shz" <sir.shz at gmail.com> wrote:
>Hi, I'm trying to write a test tcp client which sends some commands to the
>server, I'd like the
>client to take the commands from stdin, and sends it to the server. The
>following code segment
>doesn't seem to send anything, is it because the while loop is actually
>blocking? what's the right way to
>accomplish this? Thanks.

  There are a few things that you may want to do differently in your MyClientProtocol class.

>
>Z.
>
>class MyClientProtocol(basic.LineReceiver):
>     def lineReceived(self,data):
>          stdout.write("From Server:" + data+"\n"),
>

  stdout.write (assuming that's sys.stdout) can block.  This doesn't happen too frequently, except under certain conditions: for example, if you have piped the output of the program to less and have been less than diligent than paging to the end of output (less will read so much beyond what it can display and then stop reading, which means your process will no longer be able to write, and so will block); another similar scenario occurs with screen(1) when switched into copy mode.

  If this is something you want to worry about, twisted.internet.stdio may be of use.  It provides a simple way to get stdout into non-blocking mode, and then does buffering for you in cases where it is required.

>     def connectionMade(self):
>           while True:
>                cmd = raw_input("Enter command:")
>                self.transport.write(cmd+"\r\n")

  There are a couple problems with this definition of connectionMade().  

  First, a "while True:" loop like this is pretty much off-limits in a Twisted application.  You're right about why - it blocks the entire reactor, preventing any work from being accomplished.  Even the calls to transport.write() inside this loop will probably result in nothing, since the reactor can't get to the socket associated with that transport and perform actual writes.  I'll come back to how you can achieve this behavior without blocking the reactor in a moment.

  The other problem is the use of raw_input().  Like the while loop that contains it, raw_input() will also block the reactor.  You need another way to get input from the user, a way which doesn't block.  There are a couple alternatives in the most recent Twisted release.  The first I mentioned above, twisted.internet.stdio.  In addition to giving you non-blocking output, it gives you a callback-oriented way to deal with input.  It won't give you readline-like line-editing abilities, though.  It just deals with straight-up byte streams.  The other possible solution is new in Twisted 2.0 and part of Conch, twisted.conch.insults.  This also provides a callback-oriented way of getting input, but also allows you to define behavior for various function keys.  It comes with a very rudimentary line editor that supports the arrow keys, typeover and insert mode, as well as input history (while this is less featureful than readline, it has the advantage of being much more easily extensible, and in Python ;).

  You can find examples of twisted.internet.stdio in the Twisted core examples directory, or online at:

    http://twistedmatrix.com/documents/current/examples/stdin.py

  For more advanced examples of Insults, check out:

    http://twistedmatrix.com/users/warner/doc-latest/conch/examples/demo_recvline.tac

  as well as twisted/conch/stdio.py in Twisted 2.0 (also viewable online at 

    http://svn.twistedmatrix.com/cvs/*checkout*/trunk/twisted/conch/stdio.py?rev=12763&content-type=text%2Fplain )

  Note that twisted/conch/stdio.py does not present a stable interface (it is likely to change incompatibly in the future), so you should consider it an example of how to use insults, rather than a library to use from your application.

  Also note that these solutions are POSIX-only.  They will not work on Windows.

  HTH,

  Jp



From mailinglists at smartology.nl  Thu Apr 28 02:59:57 2005
From: mailinglists at smartology.nl (Remy Cool)
Date: Thu, 28 Apr 2005 10:59:57 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <ir4oec0b853.fsf@minos.phy.bnl.gov>
References: <426F2C55.9040703@smartology.nl>
	<ir4oec0b853.fsf@minos.phy.bnl.gov>
Message-ID: <4270A60D.5040902@smartology.nl>

Brett Viren wrote:
> Remy C Cool <remy.cool at smartology.nl> writes:
> 
> 
>>Hello,
>>
>>I've searched on the (Twisted) website and mailinglists, but failed to
>>find the answer to my question.
>>
>>Is is possible to pass the original exception code/message to the
>>XMLRPC client? When an exception occurs, the client get's a general
>>'error occured' message and I would like to be able to let the client
>>know what went wrong. How can I accomplish this with Twisted?
> 
> 
> It isn't really an exception but I use the idiom of returning an
> (int,string) tuple:
> 
>   (err,error_message)
> 
> If err != 0, it's interpreted as an error code.  A successful return
> is (0,"").
> 
> I don't happen to do it, but I suppose you could then raise an
> exception on the client size by hand when non-zero is returned.

That's one way to process exceptions, but that's not what I want. You
will need to catch all exceptions yourself and send back a tupple as you
described above. XMLRPC support exception handling, and I would like to
  use that mechanism rather then coding my own solution.

If an exception occurs in the backend (XMLRPC server) the client
receives an XMLRPC error (created by Twisted?). My question was and is,
if it is possible to send the 'real' exception message to the client in
place of the general message it now receives.

-- Remy --





From mvanaswegen at deloitte.co.za  Thu Apr 28 04:27:59 2005
From: mvanaswegen at deloitte.co.za (van Aswegen, Marinus (ZA - Johannesburg))
Date: Thu, 28 Apr 2005 12:27:59 +0200
Subject: [Twisted-Python] P2P Discovery
Message-ID: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>

Hi Guys
 
I've got a basic UDP broadcaster working now to inform other P2P
clients. This obviously only works on the local
segment. Any suggestions how I could broadcast outside the segment.
Multicast in python seems quite clunky and unreliable ?
 
Regs
 
/marinus
 

Important Notice: This email is subject to important restrictions, qualifications and disclaimers ("the Disclaimer") that must be accessed and read by visiting our website and viewing the webpage at the following address: http://www.deloitte.com/za/disclaimer.  The Disclaimer is deemed to form part of the content of this email in terms of Section 11 of the Electronic Communications and Transactions Act, 25 of 2002.  If you cannot access the Disclaimer, please obtain a copy thereof from us by sending an email to ClientServiceCentre at Deloitte.co.za.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050428/4af2cc14/attachment.html>

From exarkun at divmod.com  Thu Apr 28 08:15:29 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 14:15:29 GMT
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <4270A60D.5040902@smartology.nl>
Message-ID: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>

On Thu, 28 Apr 2005 10:59:57 +0200, Remy Cool <mailinglists at smartology.nl> wrote:
>Brett Viren wrote:
>>Remy C Cool <remy.cool at smartology.nl> writes:
>>>Hello,
>>>
>>>I've searched on the (Twisted) website and mailinglists, but failed to
>>>find the answer to my question.
>>>
>>>Is is possible to pass the original exception code/message to the
>>>XMLRPC client? When an exception occurs, the client get's a general
>>>'error occured' message and I would like to be able to let the client
>>>know what went wrong. How can I accomplish this with Twisted?
>>
>>
>>It isn't really an exception but I use the idiom of returning an
>>(int,string) tuple:
>>
>>   (err,error_message)
>>
>>If err != 0, it's interpreted as an error code.  A successful return
>>is (0,"").
>>
>>I don't happen to do it, but I suppose you could then raise an
>>exception on the client size by hand when non-zero is returned.
>
>That's one way to process exceptions, but that's not what I want. You
>will need to catch all exceptions yourself and send back a tupple as you
>described above. XMLRPC support exception handling, and I would like to
>  use that mechanism rather then coding my own solution.
>
>If an exception occurs in the backend (XMLRPC server) the client
>receives an XMLRPC error (created by Twisted?). My question was and is,
>if it is possible to send the 'real' exception message to the client in
>place of the general message it now receives.
>

  The behavior of that Fault is defined the _ebRender method of  twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:

    def _ebRender(self, failure):
        if isinstance(failure.value, Fault):
            return failure.value
        log.err(failure)
        return Fault(self.FAILURE, "error")

  Which logs complete error information on the server and sends minimal information to the client.  If you override this method, you can cause more information to be sent to the client.  It probably avoids doing this currently in case the string version of the failure contains sensitive information.

  Note that _ebRender is private and so may change at any time.  You should be prepared to deal with this, or override the render() method itself and set up your own errback, or contribute a patch that adds a public API for handling all unexpected errors in code invoked from an XMLRPC resource.

  Jp



From exarkun at divmod.com  Thu Apr 28 08:20:13 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 14:20:13 GMT
Subject: [Twisted-Python] P2P Discovery
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>
Message-ID: <20050428142013.15422.1143655014.divmod.quotient.5701@ohm>

On Thu, 28 Apr 2005 12:27:59 +0200, "van Aswegen, Marinus \(ZA - Johannesburg\)" <mvanaswegen at deloitte.co.za> wrote:
>Hi Guys
>
>I've got a basic UDP broadcaster working now to inform other P2P
>clients. This obviously only works on the local
>segment. Any suggestions how I could broadcast outside the segment.
>Multicast in python seems quite clunky and unreliable ?

  If by "segment" you mean "local area network", I don't think you're going to have much luck.  Most routers do not pass broadcast traffic (and for good reason - think about what would happen any time anyone pinged the broadcast address!).  Multicast is unreliable and clunky in Python because it is unreliable and clunky period.  Network support for it is sketchy at best, so you cannot generally use it except under very special conditions.

  In short, you cannot use UDP or multicast for service discovery over the internet at large.

  Jp



From mailinglists at smartology.nl  Thu Apr 28 08:34:26 2005
From: mailinglists at smartology.nl (Remy Cool)
Date: Thu, 28 Apr 2005 16:34:26 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
References: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
Message-ID: <4270F472.2070509@smartology.nl>

Jp Calderone wrote:
> On Thu, 28 Apr 2005 10:59:57 +0200, Remy Cool 
> <mailinglists at smartology.nl> wrote:
> 
>> Brett Viren wrote:
>>
>>> Remy C Cool <remy.cool at smartology.nl> writes:
>>>
>>>> Hello,
>>>>
>>>> I've searched on the (Twisted) website and mailinglists, but failed to
>>>> find the answer to my question.
>>>>
>>>> Is is possible to pass the original exception code/message to the
>>>> XMLRPC client? When an exception occurs, the client get's a general
>>>> 'error occured' message and I would like to be able to let the client
>>>> know what went wrong. How can I accomplish this with Twisted?
>>>
>>>
>>>
>>> It isn't really an exception but I use the idiom of returning an
>>> (int,string) tuple:
>>>
>>>   (err,error_message)
>>>
>>> If err != 0, it's interpreted as an error code.  A successful return
>>> is (0,"").
>>>
>>> I don't happen to do it, but I suppose you could then raise an
>>> exception on the client size by hand when non-zero is returned.
>>
>>
>> That's one way to process exceptions, but that's not what I want. You
>> will need to catch all exceptions yourself and send back a tupple as you
>> described above. XMLRPC support exception handling, and I would like to
>>  use that mechanism rather then coding my own solution.
>>
>> If an exception occurs in the backend (XMLRPC server) the client
>> receives an XMLRPC error (created by Twisted?). My question was and is,
>> if it is possible to send the 'real' exception message to the client in
>> place of the general message it now receives.
>>
> 
>  The behavior of that Fault is defined the _ebRender method of  
> twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:
> 
>    def _ebRender(self, failure):
>        if isinstance(failure.value, Fault):
>            return failure.value
>        log.err(failure)
>        return Fault(self.FAILURE, "error")
> 
>  Which logs complete error information on the server and sends minimal 
> information to the client.  If you override this method, you can cause 
> more information to be sent to the client.  It probably avoids doing 
> this currently in case the string version of the failure contains 
> sensitive information.
> 
>  Note that _ebRender is private and so may change at any time.  You 
> should be prepared to deal with this, or override the render() method 
> itself and set up your own errback, or contribute a patch that adds a 
> public API for handling all unexpected errors in code invoked from an 
> XMLRPC resource.

Thanks for your reply, I'll look into it.

-- Remy --



From itamar at itamarst.org  Thu Apr 28 09:27:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Apr 2005 11:27:19 -0400
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <4270A60D.5040902@smartology.nl>
References: <426F2C55.9040703@smartology.nl>
	<ir4oec0b853.fsf@minos.phy.bnl.gov>  <4270A60D.5040902@smartology.nl>
Message-ID: <1114702040.8704.28.camel@localhost.localdomain>

On Thu, 2005-04-28 at 10:59 +0200, Remy Cool wrote:

> described above. XMLRPC support exception handling, and I would like to
>   use that mechanism rather then coding my own solution.

XMLRPC's definition of an exception is basically a tuple of an int and
string. You'll have to do conversion from xmlrpclib's Fault object to
Python exceptions yourself.

"The <methodResponse> could also contain a <fault> which contains a
<value> which is a <struct> containing two elements, one named
<faultCode>, an <int> and one named <faultString>, a <string>."

http://www.xmlrpc.com/spec




From itamar at itamarst.org  Thu Apr 28 09:29:14 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Apr 2005 11:29:14 -0400
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
References: <20050428141529.15422.1825933568.divmod.quotient.5693@ohm>
Message-ID: <1114702154.8704.30.camel@localhost.localdomain>

On Thu, 2005-04-28 at 14:15 +0000, Jp Calderone wrote:

>   The behavior of that Fault is defined the _ebRender method of
> twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:
> 
>     def _ebRender(self, failure):
>         if isinstance(failure.value, Fault):
>             return failure.value
>         log.err(failure)
>         return Fault(self.FAILURE, "error")

Notice that this means that if you raise a xmlrpclib.Fault instance as
the exception that will be used, so you can do that instead of Python
exceptions.




From exarkun at divmod.com  Thu Apr 28 09:52:20 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 28 Apr 2005 15:52:20 GMT
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <1114702154.8704.30.camel@localhost.localdomain>
Message-ID: <20050428155220.15422.443049684.divmod.quotient.5849@ohm>

On Thu, 28 Apr 2005 11:29:14 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2005-04-28 at 14:15 +0000, Jp Calderone wrote:
>
>>   The behavior of that Fault is defined the _ebRender method of
>> twisted.web.client.xmlrpc.XMLRPC.  Presently it is defined as:
>>
>>     def _ebRender(self, failure):
>>         if isinstance(failure.value, Fault):
>>             return failure.value
>>         log.err(failure)
>>         return Fault(self.FAILURE, "error")
>
>Notice that this means that if you raise a xmlrpclib.Fault instance as
>the exception that will be used, so you can do that instead of Python
>exceptions.
>

  Re-reading the above, I wonder if there is a reason it doesn't use Failure.check() or Failure.trap()?

>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ken at kenkinder.com  Fri Apr 29 12:40:15 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Fri, 29 Apr 2005 13:40:15 -0500
Subject: [Twisted-Python] P2P Discovery
In-Reply-To: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>
References: <B2ED2925358BE644B40D37F9E01ECE148284FB@zajnb0406.za.deloitte.com>
Message-ID: <42727F8F.7040204@kenkinder.com>

van Aswegen, Marinus (ZA - Johannesburg) wrote:

> I've got a basic UDP broadcaster working now to inform other P2P 
> clients. This obviously only works on the local
> segment. Any suggestions how I could broadcast outside the segment. 
> Multicast in python seems quite clunky and unreliable ?

If you look at the P2P systems out there, none of them discover each 
other. You have to give them a starting node, which knows about other 
nodes, etc.




From mailinglists at smartology.nl  Sat Apr 30 02:41:37 2005
From: mailinglists at smartology.nl (Remy Cool)
Date: Sat, 30 Apr 2005 10:41:37 +0200
Subject: [Twisted-Python] Pass error (exception) message to XMLRPC client
In-Reply-To: <1114702040.8704.28.camel@localhost.localdomain>
References: <426F2C55.9040703@smartology.nl>	<ir4oec0b853.fsf@minos.phy.bnl.gov>
	<4270A60D.5040902@smartology.nl>
	<1114702040.8704.28.camel@localhost.localdomain>
Message-ID: <427344C1.1070509@smartology.nl>

Itamar Shtull-Trauring wrote:
> On Thu, 2005-04-28 at 10:59 +0200, Remy Cool wrote:
> 
> 
>>described above. XMLRPC support exception handling, and I would like to
>>  use that mechanism rather then coding my own solution.
> 
> 
> XMLRPC's definition of an exception is basically a tuple of an int and
> string. You'll have to do conversion from xmlrpclib's Fault object to
> Python exceptions yourself.
> 
> "The <methodResponse> could also contain a <fault> which contains a
> <value> which is a <struct> containing two elements, one named
> <faultCode>, an <int> and one named <faultString>, a <string>."

My choice of words was maybe a little confusing. My intention is not to 
create python Exceptions from xmlrpc fault objects, but to pass the 
exception string from python to the fault object so the client does know 
what went wrong.

-- Remy --





From thomas_barket at yahoo.com  Sat Apr 30 09:16:19 2005
From: thomas_barket at yahoo.com (T Barket)
Date: Sat, 30 Apr 2005 11:16:19 -0400
Subject: [Twisted-Python] Newbie reactor.crash()/reactor.stop() question
Message-ID: <0IFR00CGXMDRV8@mta8.srv.hcvlny.cv.net>

Hello,

I have set up a server and client with perspective broker and can
successfully move data back and forth between them.  however, i want to use
the client interactively at the python prompt.  ie, i want to create a
client object, make a request of the server and get the data returned to me.
then i want to do some work with the data interactively at the python
command prompt, until i need new data.  then i want to use the client again
to make another request of the server, etc.

i have read i cannot stop and restart a reactor (which is what i would like
to do on the client side).  then i found out about reactor.crash().  that
seems to work fine, which i think allow me to put the reactor on hold so i
can get back to the command prompt and do some work until i need to make
another request to the server.  At least I can get it to work as expected.
however, i now dont know how to call "reactor.stop()" before I exit python.
once the client finishes, it sets a "reactor.crash()".  now when I try to
call reactor.stop(), i get the following error that the reactor isnt
running:

    raise RuntimeError, "can't stop reactor that isn't running"
RuntimeError: can't stop reactor that isn't running

so now i cant stop the reactor using reactor.stop().  and furthermore, when
i try to exit the python command prompt (having run reactor.crash() but not
reactor.stop()), the python command prompt hangs instead of exiting normally
and I have to kill its process.  is there any way to exit python normally
when the reactor has been put into a reactor.crash()?

im using twisted 2.0 and python 2.4.1 on windows xp sp2.

TIA,

Tom




From glyph at divmod.com  Sat Apr 30 10:01:22 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 30 Apr 2005 16:01:22 GMT
Subject: [Twisted-Python] Newbie reactor.crash()/reactor.stop() question
In-Reply-To: <0IFR00CGXMDRV8@mta8.srv.hcvlny.cv.net>
Message-ID: <20050430160122.15422.1513488416.divmod.quotient.10014@ohm>



On Sat, 30 Apr 2005 11:16:19 -0400, T Barket <thomas_barket at yahoo.com> wrote:
>Hello,

>i have read i cannot stop and restart a reactor (which is what i would like
>to do on the client side).

It sounds like you may have found a bug (I'll look into it) but...

If you want to use the reactor interactively, look into the various incarnations of Manhole.  Stopping the reactor and starting it again has lots of ugly side-effects which are hard to explain until you've had a lot of experience working with the reactor the "right" way.

(If you absolutely need it, of course, it should work, and we'll fix it - but it's extremely rare that people actually need it, and pretty common that people *think* they need it.)



