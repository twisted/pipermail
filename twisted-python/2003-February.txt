From achim at procoders.net  Sat Feb  1 10:31:32 2003
From: achim at procoders.net (Achim Domma)
Date: Sat, 1 Feb 2003 16:31:32 +0100
Subject: [Twisted-Python] Webchat
In-Reply-To: <3E3B2DBD.1060904@webaccess.mozquito.com>
Message-ID: <FCEMIEFBFOIDAOJDEPIAOEBPEJAA.achim@procoders.net>

> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Stefano
> Debenedetti
> Sent: Saturday, February 01, 2003 03:15
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Webchat
>
>
> Andrew Bennetts wrote:
> > But yes, with Twisted Web, you get alot of control over how you
> respond to
> > requests, including the ability to keep them open and feed new
> data to them
> > occasionally.
>
> interesting, it would be nice to see an example of this...

That's exactly what I'm looking for, so I'm also very interested in a short
exmple.

Achim




From toni at soth.at  Sat Feb  1 10:56:13 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Sat, 1 Feb 2003 16:56:13 +0100
Subject: [Twisted-Python] twisted.internet.udp woes
Message-ID: <20030201155613.GA33563@outpost.soth.at>

While running doc/examples/echoserv.py:

Traceback (most recent call last):
  File "echoserv.py", line 45, in ?
    app.run(save=0)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 667, in run
    self.bindPorts()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 631, in bindPorts
    reactor.listenUDP(port, factory, interface, maxPacketSize)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 172, in listenUDP
    p.startListening()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/udp.py", line 74, in startListening
    self._connectToProtocol()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/udp.py", line 88, in _connectToProtocol
    self.protocol.makeConnection(self)
AttributeError: Factory instance has no attribute 'makeConnection'

This happens with release-1_0_2 and the latest CVS code.

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From twisted at itamarst.org  Sat Feb  1 11:39:08 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 1 Feb 2003 11:39:08 -0500
Subject: [Twisted-Python] twisted.internet.udp woes
In-Reply-To: <20030201155613.GA33563@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at>
Message-ID: <20030201113908.722d215a.twisted@itamarst.org>

listenUDP does not accept factories. I'll add an assert to test for
this. until then, read the docs - twistedmatrix.com/documents/howto/udp

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From toni at soth.at  Sat Feb  1 12:36:45 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Sat, 1 Feb 2003 18:36:45 +0100
Subject: [Twisted-Python] twisted.internet.udp woes
In-Reply-To: <20030201113908.722d215a.twisted@itamarst.org>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org>
Message-ID: <20030201173645.GA68943@outpost.soth.at>

Itamar Shtull-Trauring wrote on Sat, Feb 01 2003 (11:39:08 -0500):
> listenUDP does not accept factories. I'll add an assert to test for
> this. until then, read the docs - twistedmatrix.com/documents/howto/udp

Thanks for the explanation.

However, doc/examples/echoserv_ssl.py fails with another error.
It looks like internet.tcp.Connection methods get called instead of
internet.ssl.Connection methods:

Traceback (most recent call last):
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 675, in run
    main.run(installSignalHandlers=installSignalHandlers)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/main.py", line 106, in run
    _getReactor().run()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 97, in doRead
    data = self.socket.recv(self.bufferSize)
SSL.WantReadError: 
Traceback (most recent call last):
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 675, in run
    main.run(installSignalHandlers=installSignalHandlers)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/main.py", line 106, in run
    _getReactor().run()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 463, in doSelect
    selectable.connectionLost(failure.Failure(why))
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 136, in connectionLost
    self._closeSocket()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 128, in _closeSocket
    self.socket.shutdown(2)
exceptions.TypeError: shutdown() takes exactly 0 arguments (1 given)

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From tv at twistedmatrix.com  Sun Feb  2 07:34:21 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 2 Feb 2003 14:34:21 +0200
Subject: [Twisted-Python] Webchat
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
Message-ID: <20030202123421.GB23762@lapdog>

On Fri, Jan 31, 2003 at 09:41:15PM +0100, Achim Domma wrote:
> I'm new to Twisted an want to understand a little bit more what it can do
> for me. I have implemented a webchat using the asyncore module. If a user
> logs in, he will the redirected to a frameset. The top frame contains the
> 'room view' and is in fact an endless page, so the connection has to be
> keept alive as long as the user is logged in. The bottom frame contains the
> input form. It posts a message to the server and the message is written to
> the open connections of all users in the room.
> 
> Could somebody explain me, if such an architecture is possible with Twisted,
> and what might be the benefits compared to using raw asyncore. If possible a
> very rought roadmap how to begin would also be very helpfull.

	Ldaptor includes functionality to stream LDAP search results one-by-one
	to a web page, as they are received from the LDAP server. This is pretty
	much equal to what your "room view" frame does. Twisted.web, no Woven
	used as this code predates Woven.

	See ldaptor.apps.webui.search.LDAPSearchEntry.handle_entry(), especially
	what is does to self.contentDeferred. You can browse the code
	on the web at

http://ldaptor.bkbits.net:8080/ldaptor/anno/lib/ldaptor/apps/webui/search.py at 1.20?nav=index.html|src/|src/lib|src/lib/ldaptor|src/lib/ldaptor/apps|src/lib/ldaptor/apps/webui

-- 
:(){ :|:&};:



From grimmtooth at softhome.net  Sun Feb  2 12:20:51 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sun, 2 Feb 2003 12:20:51 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
Message-ID: <00d601c2cadf$6f606020$6501a8c0@listy>

Relatively new twisted user here :-)

I'm a little confused about how to use the win32eventreactor in place of
the default. The default on W32 platforms doesn't have the
ProcessProtocol support implemented yet, but according to the docs the
win32eventreactor does.

Here's what I need to do:  I want to listen on one or more ports for
connections; when connections are made, I want to connect these
connections with programs designed to handle the connection in question,
i.e. if it's telnet I want to connect the session with a login program
and proceed from there. 

I haven't gotten that far yet but from what I've seen so far I *think* I
will need to support the ProcessProtocol and tie the telnet to it.  I
could be wrong on this but I'm trying to think ahead.

So back to win32eventreactor; imply using .install() doesn't get me the
ability to use the ProcessProtocol. So I tried replacing the default
reactor with win32eventreactor completely; I got errors regarding
connectTCP when I did this.

So I'm stumped for the moment. I'm sure I'm making some very simple
mistake somewhere. A gentle shove in the right direction would be
greatly appreciated.

Oh, and to the twisted team, compliments on the package. It's wonderful.




From twisted at itamarst.org  Sun Feb  2 13:23:19 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 2 Feb 2003 13:23:19 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <00d601c2cadf$6f606020$6501a8c0@listy>
References: <00d601c2cadf$6f606020$6501a8c0@listy>
Message-ID: <20030202132319.2e7651ea.twisted@itamarst.org>

On Sun, 2 Feb 2003 12:20:51 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> So back to win32eventreactor; imply using .install() doesn't get me
> the ability to use the ProcessProtocol. 

Yes it does. Once you've installed it you can
"reactor.spawnProcess(...)".

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From radix at twistedmatrix.com  Sun Feb  2 13:54:25 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 2 Feb 2003 13:54:25 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <00d601c2cadf$6f606020$6501a8c0@listy>
References: <00d601c2cadf$6f606020$6501a8c0@listy>
Message-ID: <20030202185425.GA5379@radii>

On Sun, Feb 02, 2003 at 12:20:51PM -0500, Jeff Grimmett wrote:
> I'm a little confused about how to use the win32eventreactor in place of
> the default. The default on W32 platforms doesn't have the
> ProcessProtocol support implemented yet, but according to the docs the
> win32eventreactor does.
> 
> Here's what I need to do:  I want to listen on one or more ports for
> connections; when connections are made, I want to connect these
> connections with programs designed to handle the connection in question,
> i.e. if it's telnet I want to connect the session with a login program
> and proceed from there. 

btw, I don't know anything about win32 stuff, but Twisted has an inetd
implementation that does exactly this. It'd be cool to have it work on
win32 :-) See twisted.runner.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From grimmtooth at softhome.net  Sun Feb  2 14:42:43 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sun, 2 Feb 2003 14:42:43 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <20030202132319.2e7651ea.twisted@itamarst.org>
Message-ID: <00ed01c2caf3$419172b0$6501a8c0@listy>

> "Jeff Grimmett" <grimmtooth at softhome.net> wrote:
> 
> > So back to win32eventreactor; imply using .install() doesn't get me 
> > the ability to use the ProcessProtocol.
> 
> Yes it does. Once you've installed it you can 
> "reactor.spawnProcess(...)".

I was getting NotImplementedError when I tried that. I'll have to give
it another try later on. Film at 11.





From grimmtooth at softhome.net  Sun Feb  2 15:33:17 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sun, 2 Feb 2003 15:33:17 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <20030202185425.GA5379@radii>
Message-ID: <00ee01c2cafa$51f80a40$6501a8c0@listy>

> btw, I don't know anything about win32 stuff, but Twisted has 
> an inetd implementation that does exactly this. It'd be cool 
> to have it work on win32 :-) See twisted.runner.

Had a looksee. Peering into the source for runner.inetd.py, looks like
it uses os.fork(), which isn't supported on W32. Would solve a lot of
problems it it were :-)




From acapnotic at twistedmatrix.com  Sun Feb  2 16:22:00 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 02 Feb 2003 13:22:00 -0800
Subject: [Twisted-Python] gtk2reactor and 1.99.14
Message-ID: <1044220918.30388.11.camel@troglodyte.funhouse>

Today I upgraded my pygtk to 1.99.14, and today my gtk2 application
stopped working.  I was trying to log in to PB, and it was going well,
but the deferred for the remote "username" call in pb.authIdentity never
gets triggered.  You can sniff the connection and see the challenge come
back over the wire, but the callback simply never goes, the client never
does pb._cbRespondToChallenge.

Some tests hang too, try the test_tcp module in particular.

-- 
The moon is new, 1.4% illuminated, 1.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030202/3548b7d6/attachment.pgp 

From garth at netapp.com  Sun Feb  2 15:58:32 2003
From: garth at netapp.com (Garth Kidd)
Date: Mon, 3 Feb 2003 07:58:32 +1100
Subject: [Twisted-Python] Doc patch
Message-ID: <000101c2cafd$d9541c60$0601010a@gkiddxp2>

Got a wee doc patch for you, based on my experimentation so far: 

Index: doc/howto/defer.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/defer.html,v
retrieving revision 1.29
diff -c -r1.29 defer.html
*** doc/howto/defer.html        12 Dec 2002 08:04:15 -0000      1.29
--- doc/howto/defer.html        1 Feb 2003 07:13:29 -0000
***************
*** 117,122 ****
--- 117,126 ----
  reactor.run()
  </pre>

+ <p>(Note that if you save this to a file and run it, <em>nothing will
+ happen</em>. There's no code to let the reactor know about the getter,
+ and no code to call <code>gotResult</code>.)</p>
+
  <h3>Visual Explanation</h3>

  <div hlint="off" align="center">
Index: doc/howto/plugin.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/plugin.html,v
retrieving revision 1.22
diff -c -r1.22 plugin.html
*** doc/howto/plugin.html       12 Nov 2002 06:06:46 -0000      1.22
--- doc/howto/plugin.html       1 Feb 2003 07:13:33 -0000
***************
*** 364,371 ****
  <a href="listings/TwistedQuotes/plugins.tml"
class="py-listing">Twisted Quotes
  Plug-in registration</a>

! <p>Now the QOTD server is ready to be instantiated!  Let's start up a
server
! and get a quote from it.</p>

  <pre class="shell">
  % mktap qotd
--- 364,386 ----
  <a href="listings/TwistedQuotes/plugins.tml"
class="py-listing">Twisted Quotes
  Plug-in registration</a>

! <p>You may be wondering <em>how</em> mktap finds it. The answer can be
found
! with a little digging in
<code>twisted.python.plugin.getPluginFileList</code>:
! by recursing through subdirectories of <code>sys.path</code> looking
for
! files named <code>plugins.tml</code>. So, if you put
<code>plugins.tml</code>
! in <code>TwistedQuotes/</code>, <code>mktap</code> will find it. Or,
if you
! put it in your current directory like I did the first time,
<code>mktap</code>
! will rightly complain:</p>
!
! <pre class="shell">
! $ mktap qotd
! Unknown command: qotd
! Usage:    mktap [options] &lt;command&gt; [command options]
! ...
! </pre>
!
! <p>Assuming <code>plugins.tml</code> is in the right place, the QOTD
server
! is ready to be instantiated!  Let's start up a server and get a quote
from it.</p>

  <pre class="shell">
  % mktap qotd




From simon at obsidian.com.au  Mon Feb  3 02:57:50 2003
From: simon at obsidian.com.au (Simon Hookway)
Date: 03 Feb 2003 18:57:50 +1100
Subject: [Twisted-Python] Re: using auth over SSL with PB.
Message-ID: <1044259066.1219.17.camel@locutus.medomain.com>

Hi all,

I couldn't find any docs on using pb connections over SSL, so i played
around with using getObjectAtSSL and then using the logIn but can't seem
to get it working. tcpdump shows the connection initiating but nothing
happens after the initial packets.

Here is the bit of code i was using:

from twisted.spread import pb
from twisted.internet import defer,ssl

def connectSSL(host, port, username, password, serviceName,
               perspectiveName=None, client=None, timeout=None):
    d = defer.Deferred()   
    pb.getObjectAtSSL(host, port, ssl.ClientContextFactory(),
                      timeout).addCallbacks(
        pb._connGotRoot, d.errback, 
        callbackArgs=[d, client, serviceName,
                      username, password, perspectiveName])
    return d

Of course, i also edited getObjectAtSSL to include the ctx and pass it 
to the reactor.connectSSL

Cheers,

-- 
Simon Hookway <simon at obsidian.com.au>
Obsidian Consulting
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030203/3725e228/attachment.pgp 

From toni at soth.at  Mon Feb  3 07:14:02 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Mon, 3 Feb 2003 13:14:02 +0100
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030201173645.GA68943@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at>
Message-ID: <20030203121402.GA74072@outpost.soth.at>

Toni An?elkovi? wrote on Sat, Feb 01 2003 (18:36:45 +0100):
> However, doc/examples/echoserv_ssl.py fails with another error.
> It looks like internet.tcp.Connection methods get called instead of
> internet.ssl.Connection methods:

Just getting my feet wet with Twisted, so i can't provide you
with a detailed analysis for now. As far as i've seen this line
is being called twice:

> --- <exception caught here> ---
>   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 450, in doSelect
>     why = getattr(selectable, method)()

which are

<bound method Port.doRead of <twisted.internet.protocol.Factory on 8000>>
<bound method Server.doRead of <Echo #0 on 8000>>

The first call does the accept() and works (server certificate is
transferred), but the second fails. 

I am unable to deduce why tcp.Connection.doRead is being called
instead of ssl.Connection.doRead; either it is acquired along some
inheritance path from protocol.Protocol (?!), or this call gets
delegated to tcp.Connection.doRead elsewhere.

>   File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 97, in doRead
>     data = self.socket.recv(self.bufferSize)
> SSL.WantReadError: 

This is clear, since tcp.Connection.doRead does not expect a
OpenSSL.SSL.Connection object. The same holds true for
tcp.Connection.shutdown.

diff -u -U1 -r1.34 ssl.py
--- internet/ssl.py     1 Feb 2003 17:46:03 -0000       1.34
+++ internet/ssl.py     3 Feb 2003 12:00:11 -0000
@@ -256,3 +256,3 @@
 
-        This accepts a connection and callse self.protocol() to handle the
+        This accepts a connection and calls self.protocol() to handle the
         wire-level protocol.

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From andrew-twisted at puzzling.org  Mon Feb  3 07:53:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 3 Feb 2003 23:53:33 +1100
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030203121402.GA74072@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at> <20030203121402.GA74072@outpost.soth.at>
Message-ID: <20030203125333.GE22164@frobozz.local>

On Mon, Feb 03, 2003 at 01:14:02PM +0100, Toni Andjelkovic wrote:
> Toni An?elkovi? wrote on Sat, Feb 01 2003 (18:36:45 +0100):

[..snip SSL woes I don't understand..]

> 
> diff -u -U1 -r1.34 ssl.py
> --- internet/ssl.py     1 Feb 2003 17:46:03 -0000       1.34
> +++ internet/ssl.py     3 Feb 2003 12:00:11 -0000
> @@ -256,3 +256,3 @@
>  
> -        This accepts a connection and callse self.protocol() to handle the
> +        This accepts a connection and calls self.protocol() to handle the
>          wire-level protocol.

Applied.  Thanks!

-Andrew.




From toni at soth.at  Mon Feb  3 09:14:55 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Mon, 3 Feb 2003 15:14:55 +0100
Subject: [Twisted-Python] twisted.internet.udp woes
In-Reply-To: <20030201113908.722d215a.twisted@itamarst.org>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org>
Message-ID: <20030203141455.GA74443@outpost.soth.at>

Itamar Shtull-Trauring wrote on Sat, Feb 01 2003 (11:39:08 -0500):
> listenUDP does not accept factories. I'll add an assert to test for
> this. until then, read the docs - twistedmatrix.com/documents/howto/udp

Here's a patch for doc/examples/echoserv.py, according to the
docs:

Index: echoserv.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/echoserv.py,v
retrieving revision 1.7
diff -u -U1 -r1.7 echoserv.py
--- echoserv.py 20 Jul 2002 13:30:44 -0000      1.7
+++ echoserv.py 3 Feb 2003 14:05:08 -0000
@@ -17,4 +17,3 @@
 
-from twisted.internet.protocol import Protocol, Factory
-from twisted.internet import udp
+from twisted.internet.protocol import Protocol, DatagramProtocol, Factory
 
@@ -24,7 +23,14 @@
 
-class Echo(Protocol):
+class EchoTCP(Protocol):
     def dataReceived(self, data):
         "As soon as any data is received, write it back."
+        print "received %r from %s" % (data, self.transport.getPeer())
         self.transport.write(data)
 
+class EchoUDP(DatagramProtocol):
+    def datagramReceived(self, data, peer):
+        "As soon as any data is received, write it back."
+        print "received %r from %s" % (data, peer)
+        self.transport.write(data, peer)
+
 ### Persistent Application Builder
@@ -40,6 +46,6 @@
     factory = Factory()
-    factory.protocol = echoserv.Echo
+    factory.protocol = echoserv.EchoTCP
     app = Application("echo")
     app.listenTCP(8000,factory)
-    app.listenUDP(8000, factory)
+    app.listenUDP(8000, echoserv.EchoUDP())
     app.save("start")

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From exarkun at intarweb.us  Mon Feb  3 10:52:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 3 Feb 2003 10:52:57 -0500
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030203121402.GA74072@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at> <20030203121402.GA74072@outpost.soth.at>
Message-ID: <20030203155257.GB12205@meson.dyndns.org>

On Mon, Feb 03, 2003 at 01:14:02PM +0100, Toni Andjelkovic wrote:
> Toni An?elkovi? wrote on Sat, Feb 01 2003 (18:36:45 +0100):
> > However, doc/examples/echoserv_ssl.py fails with another error.
> > It looks like internet.tcp.Connection methods get called instead of
> > internet.ssl.Connection methods:
> 
> Just getting my feet wet with Twisted, so i can't provide you
> with a detailed analysis for now. As far as i've seen this line
> is being called twice:
> 
> > --- <exception caught here> ---
> >   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 450, in doSelect
> >     why = getattr(selectable, method)()
> 
> which are
> 
> <bound method Port.doRead of <twisted.internet.protocol.Factory on 8000>>
> <bound method Server.doRead of <Echo #0 on 8000>>
> 
> The first call does the accept() and works (server certificate is
> transferred), but the second fails. 
> 
> I am unable to deduce why tcp.Connection.doRead is being called
> instead of ssl.Connection.doRead; either it is acquired along some
> inheritance path from protocol.Protocol (?!), or this call gets
> delegated to tcp.Connection.doRead elsewhere.
> 

   Pretty close - the inheritance structure was not-quite-correct :)  It
should be fixed now, thanks for the report and the ideas :)

   Jp

-- 
C/C++/Java/Perl/Python/Smalltalk/PHP/ASP/XML/Linux (User+Admin)
Genetic Algorithms/Genetic Programming/Neural Networks
Networking/Multithreading/Legacy Code Maintenance/OpenGL
See my complete resume at http://intarweb.us:8080/
-- 
 up 49 days, 19:50, 3 users, load average: 0.00, 0.05, 0.06
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030203/5545f8f0/attachment.pgp 

From toni at soth.at  Mon Feb  3 12:03:23 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Mon, 3 Feb 2003 18:03:23 +0100
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030203155257.GB12205@meson.dyndns.org>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at> <20030203121402.GA74072@outpost.soth.at> <20030203155257.GB12205@meson.dyndns.org>
Message-ID: <20030203170323.GA75098@outpost.soth.at>

Jp Calderone wrote on Mon, Feb 03 2003 (10:52:57 -0500):
>    Pretty close - the inheritance structure was not-quite-correct :)  It
> should be fixed now, thanks for the report and the ideas :)

It works now, thanks a lot. However, you added
ssl.Connection._closeSocket, which was already
there :-)



Index: twisted/internet/ssl.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/ssl.py,v
retrieving revision 1.36
diff -u -U1 -r1.36 ssl.py
--- twisted/internet/ssl.py     3 Feb 2003 15:39:54 -0000       1.36
+++ twisted/internet/ssl.py     3 Feb 2003 16:55:25 -0000
@@ -134,8 +134,9 @@
     def _closeSocket(self):
-        # For some reason, SSL.Connection's shutdown() method doesn't take a pa
rameter
+        """Called to close our socket."""
         try:
-            self.socket.shutdown()
+            self.socket.shutdown() # SSL_shutdown()
+            self.socket.close()
         except:
-            deferr.log()
-            
+            log.deferr()
+
     
@@ -189,9 +190,2 @@
             return main.CONNECTION_LOST
-
-    def _closeSocket(self):
-        """Called to close our socket."""
-        try:
-            self.socket.sock_shutdown(2)
-        except socket.error:
-            pass
 


Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From corydodt at yahoo.com  Mon Feb  3 18:55:49 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 3 Feb 2003 15:55:49 -0800 (PST)
Subject: [Twisted-Python] (incorrect) code duplication in microdom
Message-ID: <20030203235549.62520.qmail@web10001.mail.yahoo.com>

I just noticed that microdom.Element.getElementsByTagName doesn't behave
like domhelpers.getElementsByTagName; that is, it's not recursive.  (This
is even documented in the method's docstring.)

Also, microdom.Document.getElementsByTagName has yet another
implementation, and this one is recursive, but incorrect.

*Neither of these implementations obeys w3c*, which
domhelpers.getElementsByTagName does.  It would be trivial to change both
to use that code instead of doing it on their own, but microdom doesn't
import domhelpers, and I assume this is intentional.

Should microdom import domhelpers and use that code?  We'll gain
correctness,  and maybe maintainability, but create a circular dependency.
 Alternately, the method could be moved into microdom as a top-level
function, which the respective methods use.  Domhelpers could import this
method into its own namespace, keeping everyone happy.


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From exarkun at intarweb.us  Mon Feb  3 19:06:51 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 3 Feb 2003 19:06:51 -0500
Subject: [Twisted-Python] Things I broke
Message-ID: <20030204000651.GA15519@meson.dyndns.org>

  Currently two pieces of code (that I can find) rely on app.listenTCP() to
bind to a unix socket if the port parameter is a string instead of an
integer.  This no longer works (and rightly so).  However, there is
currently no twisted.internet.app.Application.listenUNIX method.  Adding one
(along w/ connectUNIX) would solve the problem.  As would using the
listenWith method instead.

  I don't know what the thoughts on the portability of the methods in
Application are - is adding listen/connectUNIX appropriate?

  I feel a minor twinge at the thought of using listen/connectWith for this,
as twisted.internet.unix is an internal module, and it is probably wrong to
use such an internal module in one of the places (Twisted.web's tap's
--personal flag) and definitely wrong in the other
(doc/examples/silly-web.py).  These methods were intended for
connectors/ports not included with Twisted, not as a workaround for missing
api functionality.

  So... thoughts?

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-- 
 up 50 days, 3:50, 3 users, load average: 0.09, 0.10, 0.04
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030203/de215a61/attachment.pgp 

From itamar at itamarst.org  Mon Feb  3 21:34:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 3 Feb 2003 21:34:21 -0500
Subject: [Twisted-Python] Things I broke
In-Reply-To: <20030204000651.GA15519@meson.dyndns.org>
References: <20030204000651.GA15519@meson.dyndns.org>
Message-ID: <20030203213421.0de50b45.itamar@itamarst.org>

On Mon, 3 Feb 2003 19:06:51 -0500
Jp Calderone <exarkun at intarweb.us> wrote:

>   I don't know what the thoughts on the portability of the methods in
> Application are - is adding listen/connectUNIX appropriate?

Yes.



From twisted at itamarst.org  Wed Feb  5 11:54:15 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 11:54:15 -0500
Subject: [Twisted-Python] Fw: Zope and Twisted
Message-ID: <20030205115415.76e750a3.twisted@itamarst.org>

This is the first email I got.

--------------------------------------------------------
Begin forwarded message:

Date: Tue, 4 Feb 2003 10:54:39 -0800
From: "Pierre Johnson" 
To: <itamar at zoteca.com>
Subject: Zope and Twisted


Hey Itamar,

I read your 9 Dec 2002 weblog entry. Agreed Zope 2 is kludge. However,
Twisted is kludge too. Say What?

Twisted does not conform well to the OSI model. Each layer should have
an
abstraction and implementation for whatever it is one wants to
implement.
Additionally, one need include a interfaces module that keeps interfaces
separate from implementation.

Here's some sketches about implementations, e.g.,

OSI.Network.py

    class NetworkLayer: # an abstraction

OSI.Network.IP.py

    import OSI.Network

    class IP(NetworkLayer):
         ...

OSI.Transport.py

    class TransportLayer:  #an abstraction
            ...

OSI.Transport.TCP.py

    import OSI.Transport
    import OSI.Network.IP

    class Transport.TCP(Transport, IP):
        ...
OSI.Session.py

    class SessionLayer: # an abstraction
      ...

OSI.Session.DNS.py

    import OSI.Transport.TCP
    import OSI.Network.IP
    import OSI.Session

    class DNS(Session, TCP, IP):
      ...

OSI.Application.py

   class ApplicationLayer: # an abstraction
      ...

OSI.Application.FTP.py

    import OSI.Transport.TCP
    import OSI.Network.IP
    import OSI.Session.DNS
    import OSI.Application

    class FTP(Application, DNS,TCP,IP)
       ...

This kind of abstraction schema allows for quicker programming than the
current Twisted schema as written by the so-called "abstraction
astronauts".
Bear in mind that this is a sketch and by no means the exact why I would
do
it.

Clearly, a perusal of the Twisted code demonstrates that Twisted does
not
separate transport from protocols or at least not cleanly.

Thanks for your time.

Pierre Johnson



From twisted at itamarst.org  Wed Feb  5 11:58:54 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 11:58:54 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
Message-ID: <20030205115854.20e10b39.twisted@itamarst.org>

This was my reply.

-----------------------------------------------------
Begin forwarded message:

Date: Tue, 4 Feb 2003 16:46:40 -0500
From: Itamar Shtull-Trauring <itamar at zoteca.com>
To: "Pierre Johnson" 
Subject: Re: Zope and Twisted


On Tue, 4 Feb 2003 10:54:39 -0800
"Pierre Johnson" wrote:

> Twisted does not conform well to the OSI model. Each layer should have
> an abstraction and implementation for whatever it is one wants to
> implement.

TCP/IP doesn't follow the OSI model. For example see
http://www.uwsg.iu.edu/usail/network/nfs/network_layers.html

> Additionally, one need include a interfaces module that keeps
> interfaces separate from implementation.

Have you seen twisted.internet.interfaces? Admittedly, not everything is
documented there, but we're getting there.

> OSI.Application.FTP.py
> 
>     import OSI.Transport.TCP
>     import OSI.Network.IP
>     import OSI.Session.DNS
>     import OSI.Application
> 
>     class FTP(Application, DNS,TCP,IP)
>        ...

All I can see from this is that you don't understand the meaning of the
word "transport" and "protocol", since that code combines them into one
class. Also that you don't really understand the way networking works
(DNS certainly should not be a mixin even if we do a bad design and
inherit from TCP).

Oh, and that python code is wrong (you want "from OSI.Transport import
TCP").

I would suggest that you do some real networking programming, then look
at Twisted again.



From twisted at itamarst.org  Wed Feb  5 11:59:31 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 11:59:31 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
Message-ID: <20030205115931.206ee6dc.twisted@itamarst.org>

This his reply to my answer.

-------------------------------------------------
Begin forwarded message:

Date: Tue, 4 Feb 2003 21:47:26 -0800
From: "Pierre Johnson" 
To: "Itamar Shtull-Trauring" <itamar at zoteca.com>
Subject: Re: Zope and Twisted


Itamar,

You didn't need to be a first-class, immature jackass as characterized
by
your response.

Perhaps I don't understand YOUR Twisted model of networking, which is
not
OSI compliant. The OSI model IS NETWORKING and all real Turing-based
computational systems that employ networking implement parts of the
model.
Perhaps YOU need to learn about the various layers of the model before
you
begin to bandy about the operationally defined words transport and
protocol.

Clearly, the folks at Twisted have their own meanings for transport and
protocol, which differ greatly from their KNOWN and ACCEPTED definitions
as
employed in the PROFESSIONAL programming world and the ACADEMIC
programming
world.

Incidentally, I was writing network-based applications when you were
still
in grade school.

I'll be sure to recommend to my Fortune 500 clients to not use a product
administered by essentially, immature children.




From elloyd at lancaster.lib.pa.us  Wed Feb  5 12:36:17 2003
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Wed, 5 Feb 2003 12:36:17 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205115931.206ee6dc.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <200302051236.17342.elloyd@lancaster.lib.pa.us>

Ouch, sounds like a bitch-slap to me...guess its time to make someone else our 
PR person ;-).

Eron

On Wednesday 05 February 2003 11:59 am, Itamar Shtull-Trauring wrote:
> This his reply to my answer.
>
> -------------------------------------------------
> Begin forwarded message:
>
> Date: Tue, 4 Feb 2003 21:47:26 -0800
> From: "Pierre Johnson"
> To: "Itamar Shtull-Trauring" <itamar at zoteca.com>
> Subject: Re: Zope and Twisted
>
>
> Itamar,
>
> You didn't need to be a first-class, immature jackass as characterized
> by
> your response.
>
> Perhaps I don't understand YOUR Twisted model of networking, which is
> not
> OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> computational systems that employ networking implement parts of the
> model.
> Perhaps YOU need to learn about the various layers of the model before
> you
> begin to bandy about the operationally defined words transport and
> protocol.
>
> Clearly, the folks at Twisted have their own meanings for transport and
> protocol, which differ greatly from their KNOWN and ACCEPTED definitions
> as
> employed in the PROFESSIONAL programming world and the ACADEMIC
> programming
> world.
>
> Incidentally, I was writing network-based applications when you were
> still
> in grade school.
>
> I'll be sure to recommend to my Fortune 500 clients to not use a product
> administered by essentially, immature children.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> ---
> [This E-mail scanned for viruses by Declude Virus]

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From tv at twistedmatrix.com  Wed Feb  5 12:37:28 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 5 Feb 2003 19:37:28 +0200
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205115931.206ee6dc.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <20030205173728.GA27173@lapdog>

On Wed, Feb 05, 2003 at 11:59:31AM -0500, Itamar Shtull-Trauring wrote:
> This his reply to my answer.
> 
> -------------------------------------------------
...
> Perhaps I don't understand YOUR Twisted model of networking, which is
> not
> OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> computational systems that employ networking implement parts of the
> model.
> Perhaps YOU need to learn about the various layers of the model before
> you
> begin to bandy about the operationally defined words transport and
> protocol.

	Bwahaahaa!

	Now, where is Twisted support for layers 8 and 9?

	http://www.bitwrangler.com/gvi/real-osi-model.html

-- 
:(){ :|:&};:



From andreas at mtg.co.at  Wed Feb  5 15:05:47 2003
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Wed, 5 Feb 2003 21:05:47 +0100
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205115931.206ee6dc.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <200302052105.47849.andreas@mtg.co.at>

Am Mittwoch, 5. Februar 2003 17:59 schrieb Itamar Shtull-Trauring:
> Perhaps I don't understand YOUR Twisted model of networking, which is
> not
> OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> computational systems that employ networking implement parts of the
> model.
What to hell does OSI have to do with Turing-machines?
Nothing, or less?
> Perhaps YOU need to learn about the various layers of the model before
> you
> begin to bandy about the operationally defined words transport and
> protocol.
Well, there are not to many "sucessful" applications of OSI in the real world. 
TCP/IP comes to mind as a prime example.

> Clearly, the folks at Twisted have their own meanings for transport and
> protocol, which differ greatly from their KNOWN and ACCEPTED definitions
> as
> employed in the PROFESSIONAL programming world and the ACADEMIC
> programming
> world.
Not really. My experience suggests that terms that are as heavy overloaded 
always need a definition in the context they are used.

One of the telltales of a professional is that he can adjust to very different 
kinds of environments quickly.
>
> Incidentally, I was writing network-based applications when you were
> still
> in grade school.
Who cares? Especially in the IT world being an old-hand is not necessarily a 
good thing. 
>
> I'll be sure to recommend to my Fortune 500 clients to not use a product
> administered by essentially, immature children.
Who is the immature child here?
Coming into a community, barking around acrynoms that nobody cares about, 
insulting the developers, and so on?
If you think that renaming all the stuff is a good idea, you are certainly 
invited to do it yourself.

Last time I checked you are quite allowed to fork of a OSI-Twisted project.
In effect if you care that much about OSI terminology, you are quite capable 
to patch it yourself. :)

Well, that's curious if you list Twisted on the first line of your Resume, and 
then you do not recommend it. (Well at least in situations where Twisted 
makes sense.)

Andreas





From twisted at itamarst.org  Wed Feb  5 15:27:08 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 15:27:08 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <200302052105.47849.andreas@mtg.co.at>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
	<200302052105.47849.andreas@mtg.co.at>
Message-ID: <20030205152708.6b97b658.twisted@itamarst.org>

On Wed, 5 Feb 2003 21:05:47 +0100
Andreas Kostyrka <andreas at mtg.co.at> wrote:

> Well, that's curious if you list Twisted on the first line of your
> Resume, and then you do not recommend it. (Well at least in situations
> where Twisted makes sense.)

You're confusing me with the other guy :)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bruce at cubik.org  Wed Feb  5 15:51:31 2003
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 05 Feb 2003 13:51:31 -0700
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
References: <20030205115931.206ee6dc.twisted@itamarst.org> <200302052105.47849.andreas@mtg.co.at>
Message-ID: <3E417953.5060306@cubik.org>

Andreas Kostyrka wrote:
>>I'll be sure to recommend to my Fortune 500 clients to not use a product
>>administered by essentially, immature children.
> 
> Who is the immature child here?
> Coming into a community, barking around acrynoms that nobody cares about, 
> insulting the developers, and so on?

Actually, not to be picky, but it looked like he'd exchanged private 
emails with Itamar, which Itamar then posted.

  - Bruce




From andreas at mtg.co.at  Wed Feb  5 16:41:48 2003
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Wed, 5 Feb 2003 22:41:48 +0100
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205152708.6b97b658.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org> <200302052105.47849.andreas@mtg.co.at> <20030205152708.6b97b658.twisted@itamarst.org>
Message-ID: <200302052241.48386.andreas@mtg.co.at>

Am Mittwoch, 5. Februar 2003 21:27 schrieb Itamar Shtull-Trauring:
> On Wed, 5 Feb 2003 21:05:47 +0100
>
> Andreas Kostyrka <andreas at mtg.co.at> wrote:
> > Well, that's curious if you list Twisted on the first line of your
> > Resume, and then you do not recommend it. (Well at least in situations
> > where Twisted makes sense.)
>
> You're confusing me with the other guy :)
oops, sorry. ;)
So the other guy is an immature child :), talking about the OSI model ;)

Andreas




From skin_pup-twisted at damnable.happypoo.com  Wed Feb  5 20:16:32 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Wed, 5 Feb 2003 20:16:32 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
Message-ID: <20030206011632.GP32425@shitbomb.com>

Attached is the patch for TLS support within twisted.  It is not the best
code,  but it passes all the SSL test (None working on that next) and
works.  The diff also adds an echoclient_tls.py/echoserv_tls.py, that
work along with the echoclient_ssl.py/echoserv_tls.py

Some things I did have questions about how best to handle:

- What error should starttls raise if OpenSSL is not installed?  exarkun
  suggested the following but I have no idea how to do it cleanly.  Any
  ideas?

exarkun : currently, connect/listenSSL aren't defined at all if
          the ssl support libs can't be implemented
exarkun : might it make sense to just duplicate that?


- the doRead_TLS/doRead_NOTLS and writeSomeData_TLS/writeSomeData_NOTLS
  are just damn ugly and could be combined but I felt it was best to leave
  the apart for now.  Is OK, should I merge them?

Jeremy Rossi 


-------------- next part --------------
diff -urP Twisted-1.0.2alpha4/doc/examples/echoclient_tls.py Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoclient_tls.py
--- Twisted-1.0.2alpha4/doc/examples/echoclient_tls.py	Wed Dec 31 19:00:00 1969
+++ Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoclient_tls.py	Wed Feb  5 19:21:06 2003
@@ -0,0 +1,65 @@
+#!/usr/bin/python
+# Twisted, the Framework of Your Internet
+# Copyright (C) 2001 Matthew W. Lefkowitz
+# 
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of version 2.1 of the GNU Lesser General Public
+# License as published by the Free Software Foundation.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+from twisted.internet.protocol import ClientFactory, Protocol
+from twisted.internet.app import Application
+from twisted.internet import reactor, tcp, ssl
+import sys
+
+class myContext(ssl.ClientContextFactory):
+    isClient = 1
+    def getContext(self):
+        return ssl.SSL.Context(ssl.SSL.TLSv1_METHOD)
+
+x = myContext()
+
+class EchoClient(Protocol):
+    end="Bye-bye!"
+    def connectionMade(self):
+        self.transport.write("I am sending this in the clear\n")
+        self.transport.write("And why should I not?\n")
+        self.transport.write("STARTTLS;\n")
+
+    def dataReceived(self, data):
+     	for i in data.split("\n"):
+            try:
+                command, other = i.split(";", 1)
+            except:
+                command = ""
+                other = i
+            if command==self.end:
+                self.transport.loseConnection()
+            elif command=="READY":
+                self.transport.starttls(x)
+                self.transport.write("Spooks cannot see me now.\n")
+            else:
+                print i
+
+class EchoClientFactory(ClientFactory):
+    protocol = EchoClient
+
+    def clientConnectionFailed(self, connector, reason):
+        print 'connection failed:', reason.getErrorMessage()
+        reactor.stop()
+
+    def clientConnectionLost(self, connector, reason):
+        print 'connection lost:', reason.getErrorMessage()
+        reactor.stop()
+
+factory = EchoClientFactory()
+reactor.connectTCP('localhost', 8000, factory)
+reactor.run()
diff -urP Twisted-1.0.2alpha4/doc/examples/echoserv_tls.py Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoserv_tls.py
--- Twisted-1.0.2alpha4/doc/examples/echoserv_tls.py	Wed Dec 31 19:00:00 1969
+++ Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoserv_tls.py	Wed Feb  5 19:20:55 2003
@@ -0,0 +1,71 @@
+
+# Twisted, the Framework of Your Internet
+# Copyright (C) 2001 Matthew W. Lefkowitz
+# 
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of version 2.1 of the GNU Lesser General Public
+# License as published by the Free Software Foundation.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+from twisted.internet.protocol import Protocol, Factory
+from twisted.internet import udp, ssl
+
+### Protocol Implementation
+
+# This is just about the simplest possible protocol
+
+x = ssl.DefaultOpenSSLContextFactory(privateKeyFileName="server.pem",
+                                 certificateFileName="server.pem",
+                                 sslmethod=ssl.SSL.TLSv1_METHOD)
+
+
+class Echo(Protocol):
+    def dataReceived(self, data):
+        "As soon as any data is received, write it back."
+        print data
+        try:
+            command, other = data.split(";", 1)
+        except:
+            command = data
+            other = ""
+        if command == "STARTTLS":
+            print "starting TLS"
+            self.transport.write("READY;ajshdakjsd\n")
+            self.transport.starttls(x)
+#            self.transport.socket.set_accept_state()
+        else:
+            self.transport.write(data)
+
+
+### Persistent Application Builder
+
+# This builds a .tap file
+class EchoClientFactory(Factory):
+    protocol = Echo
+    def connectionFailed(self, connector, reason):
+        print 'connection failed:', reason.getErrorMessage()
+
+    def connectionLost(self, connector, reason):
+        print 'connection lost:', reason.getErrorMessage()
+
+
+if __name__ == '__main__':
+    # Since this is persistent, it's important to get the module naming right
+    # (If we just used Echo, then it would be __main__.Echo when it attempted
+    # to unpickle)
+    import echoserv_tls
+    from twisted.internet.app import Application
+    factory = echoserv_tls.EchoClientFactory()
+    factory.protocol = echoserv_tls.Echo
+    app = Application("echo-tls")
+    app.listenTCP(8000,factory)
+#    app.listenUDP(8000, factory)
+    app.save("start")
diff -urP Twisted-1.0.2alpha4/twisted/internet/ssl.py Twisted-1.0.2alpha4-halfass-branch/twisted/internet/ssl.py
--- Twisted-1.0.2alpha4/twisted/internet/ssl.py	Wed Jan  8 09:18:53 2003
+++ Twisted-1.0.2alpha4-halfass-branch/twisted/internet/ssl.py	Wed Feb  5 19:20:06 2003
@@ -40,11 +40,11 @@
 import socket
 
 # sibling imports
-import tcp, main, interfaces
+import main, interfaces, tcp
 
 # Twisted imports
 from twisted.python import log
-
+#from twisted.internet import reactor
 
 class ContextFactory:
     """A factory for SSL context objects, for server SSL connections."""
@@ -95,101 +95,7 @@
         return SSL.Context(SSL.SSLv3_METHOD)
 
 
-class Connection(tcp.Connection):
-    """I am an SSL connection.
-    """
-
-    __implements__ = tcp.Connection.__implements__, interfaces.ISSLTransport
-    
-    writeBlockedOnRead = 0
-    readBlockedOnWrite= 0
-    sslShutdown = 0
-    
-    def getPeerCertificate(self):
-        """Return the certificate for the peer."""
-        return self.socket.get_peer_certificate()
-
-    def _postLoseConnection(self):
-        """Gets called after loseConnection(), after buffered data is sent.
-
-        We close the SSL transport layer, and if the other side hasn't
-        closed it yet we start reading, waiting for a ZeroReturnError
-        which will indicate the SSL shutdown has completed.
-        """
-        try:
-            done = self.socket.shutdown()
-            self.sslShutdown = 1
-        except SSL.Error:
-            return main.CONNECTION_LOST
-        if done:
-            return main.CONNECTION_DONE
-        else:
-            # we wait for other side to close SSL connection -
-            # this will be signaled by SSL.ZeroReturnError when reading
-            # from the socket
-            self.stopWriting()
-            self.startReading()
-            return None # don't close socket just yet
-    
-    def doRead(self):
-        """See tcp.Connection.doRead for details.
-        """
-        if self.writeBlockedOnRead:
-            self.writeBlockedOnRead = 0
-            return self.doWrite()
-        try:
-            return tcp.Connection.doRead(self)
-        except SSL.ZeroReturnError:
-            # close SSL layer, since other side has done so, if we haven't
-            if not self.sslShutdown:
-                try:
-                    self.socket.shutdown()
-                    self.sslShutdown = 1
-                except SSL.Error:
-                    pass
-            return main.CONNECTION_DONE
-        except SSL.WantReadError:
-            return
-        except SSL.WantWriteError:
-            self.readBlockedOnWrite = 1
-            self.startWriting()
-            return
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def doWrite(self):
-        if self.readBlockedOnWrite:
-            self.readBlockedOnWrite = 0
-            if not self.unsent: self.stopWriting()
-            return self.doRead()
-        return tcp.Connection.doWrite(self)
-    
-    def writeSomeData(self, data):
-        """See tcp.Connection.writeSomeData for details.
-        """
-        if not data:
-            return 0
-
-        try:
-            return tcp.Connection.writeSomeData(self, data)
-        except SSL.WantWriteError:
-            return 0
-        except SSL.WantReadError:
-            self.writeBlockedOnRead = 1
-            return 0
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def _closeSocket(self):
-        """Called to close our socket."""
-        try:
-            self.socket.sock_shutdown(2)
-        except socket.error:
-            pass
-
-
-
-class Client(Connection, tcp.TCPClient):
+class Client(tcp.TCPClient):
     """I am an SSL client.
     """
     
@@ -197,11 +103,15 @@
         self.ctxFactory = ctxFactory
         tcp.TCPClient.__init__(self, host, port, bindAddress, connector, reactor)
     
+    def _finishInit(self, whenDone, skt, error, reactor):
+        tcp.TCPClient._finishInit(self, whenDone, skt, error, reactor)
+        self.starttls(self.ctxFactory)
+
     def createInternetSocket(self):
         """(internal) create an SSL socket
         """
         sock = tcp.TCPClient.createInternetSocket(self)
-        return SSL.Connection(self.ctxFactory.getContext(), sock)
+        return sock
 
     def getHost(self):
         """Returns a tuple of ('SSL', hostname, port).
@@ -220,13 +130,14 @@
 
 
 
-class Server(Connection, tcp.Server):
+class Server(tcp.Connection, tcp.Server):
     """I am an SSL server.
     """
     
     def __init__(*args, **kwargs):
         # we need those so we don't use ssl.Connection's __init__
         apply(tcp.Server.__init__, args, kwargs)
+        
 
     def getHost(self):
         """Returns a tuple of ('SSL', hostname, port).
@@ -258,7 +169,8 @@
         """(internal) create an SSL socket
         """
         sock = tcp.Port.createInternetSocket(self)
-        return SSL.Connection(self.ctxFactory.getContext(), sock)
+        sock = SSL.Connection(self.ctxFactory.getContext(), sock)
+        return sock
     
     def doRead(self):
         """Called when my socket is ready for reading.
@@ -283,6 +195,7 @@
             s = self.sessionno
             self.sessionno = s+1
             transport = self.transport(skt, protocol, addr, self, s)
+            transport.TLS = 1
             protocol.makeConnection(transport)
         except:
             log.deferr()
diff -urP Twisted-1.0.2alpha4/twisted/internet/tcp.py Twisted-1.0.2alpha4-halfass-branch/twisted/internet/tcp.py
--- Twisted-1.0.2alpha4/twisted/internet/tcp.py	Wed Jan  1 09:32:27 2003
+++ Twisted-1.0.2alpha4-halfass-branch/twisted/internet/tcp.py	Wed Feb  5 19:20:02 2003
@@ -34,6 +34,10 @@
 import select
 import operator
 import warnings
+try:
+    from OpenSSL import SSL
+except:
+    SSL = None
 
 if os.name == 'nt':
     EINVAL      = 10022
@@ -73,6 +77,10 @@
     This is an abstract superclass of all objects which represent a TCP/IP
     connection based socket.
     """
+    writeBlockedOnRead = 0
+    readBlockedOnWrite= 0
+    sslShutdown = 0
+    TLS = 0
 
     __implements__ = abstract.FileDescriptor.__implements__, interfaces.ITCPTransport
 
@@ -83,7 +91,47 @@
         self.fileno = skt.fileno
         self.protocol = protocol
 
+    def starttls(self, ctx):
+        self._oldsocket = self.socket
+        self.socket = SSL.Connection(ctx.getContext(), self.socket)
+        self.fileno = self.socket.fileno
+        self.TLS = 1
+
+    def stoptls(self):
+        self.socket = self._oldsocket
+        self.TLS = 0
+
     def doRead(self):
+        if self.TLS:
+            return self.doRead_TLS()
+        else:
+            return self.doRead_NOTLS()
+
+    def doRead_TLS(self):
+        if self.writeBlockedOnRead:
+            self.writeBlockedOnRead = 0
+            return self.doWrite()
+        try:
+            return self.doRead_NOTLS()
+        except SSL.ZeroReturnError:
+            # close SSL layer, since other side has done so, if we haven't
+            if not self.sslShutdown:
+                try:
+                    self.socket.shutdown()
+                    self.sslShutdown = 1
+                except SSL.Error:
+                    pass
+            return main.CONNECTION_DONE
+        except SSL.WantReadError:
+            return
+        except SSL.WantWriteError:
+            self.readBlockedOnWrite = 1
+            self.startWriting()
+            return
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+    def doRead_NOTLS(self):
         """Calls self.protocol.dataReceived with all available data.
 
         This reads up to self.bufferSize bytes of data from its socket, then
@@ -102,7 +150,36 @@
             return main.CONNECTION_LOST
         return self.protocol.dataReceived(data)
 
+    
+    def doWrite(self):
+        if self.TLS:
+            if self.readBlockedOnWrite:
+                self.readBlockedOnWrite = 0
+                if not self.unsent: self.stopWriting()
+                return self.doRead()
+        return abstract.FileDescriptor.doWrite(self)
+
     def writeSomeData(self, data):
+        if self.TLS:
+            return self.writeSomeData_TLS(data)
+        else:
+            return self.writeSomeData_NOTLS(data)
+
+
+    def writeSomeData_TLS(self, data):
+        if not data:
+            return 0
+        try:
+            return self.writeSomeData_NOTLS(data)
+        except SSL.WantWriteError:
+            return 0
+        except SSL.WantReadError:
+            self.writeBlockedOnRead = 1
+            return 0
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+    def writeSomeData_NOTLS(self, data):
         """Connection.writeSomeData(data) -> #of bytes written | CONNECTION_LOST
         This writes as much data as possible to the socket and returns either
         the number of bytes read (which is positive) or a connection error code
@@ -123,7 +200,10 @@
         # was inherited by a subprocess. And we really do want to close the
         # connection. So we use shutdown() instead.
         try:
-            self.socket.shutdown(2)
+            if self.TLS:
+                self.socket.sock_shutdown(2)
+            else:
+                self.socket.shutdown(2)
         except socket.error:
             pass
 
@@ -162,11 +242,45 @@
     def setTcpNoDelay(self, enabled):
         self.socket.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, enabled)
 
+    def getPeerCertificate(self):
+        """Return the certificate for the peer."""
+        return self.socket.get_peer_certificate()
+
+    def _postLoseConnection(self):
+        """Gets called after loseConnection(), after buffered data is sent.
+
+        We close the SSL transport layer, and if the other side hasn't
+        closed it yet we start reading, waiting for a ZeroReturnError
+        which will indicate the SSL shutdown has completed.
+        """
+        if self.TLS:
+            try:
+                done = self.socket.shutdown()
+                self.sslShutdown = 1
+            except SSL.Error:
+                return main.CONNECTION_LOST
+            if done:
+                return main.CONNECTION_DONE
+            else:
+                # we wait for other side to close SSL connection -
+                # this will be signaled by SSL.ZeroReturnError when reading
+                # from the socket
+                self.stopWriting()
+                self.startReading()
+                return None # don't close socket just yet
+        else:
+            print "quiting"
+            return main.CONNECTION_DONE
 
 class BaseClient(Connection):
     """A base class for client TCP (and similiar) sockets.
     """
 
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_connect_state()
+        return holder
+
     def _finishInit(self, whenDone, skt, error, reactor):
         """Called by base classes to continue to next stage of initialization."""
         if whenDone:
@@ -360,6 +474,12 @@
         self.startReading()
         self.connected = 1
 
+
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_accept_state()
+        return holder
+
     def __repr__(self):
         """A string representation of this connection.
         """
@@ -489,6 +609,11 @@
                         self.numberAccepts = i
                         break
                     raise
+                # XXX Hummmmmmmmmmmmmm what to do about this
+                except SSL.Error:
+                    if self.TLS:
+                        log.deferr()
+                        return
                 protocol = self.factory.buildProtocol(addr)
                 if protocol is None:
                     skt.close()

From twisted at itamarst.org  Wed Feb  5 21:36:39 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 21:36:39 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
In-Reply-To: <20030206011632.GP32425@shitbomb.com>
References: <20030206011632.GP32425@shitbomb.com>
Message-ID: <20030205213639.74b3b797.twisted@itamarst.org>

On Wed, 5 Feb 2003 20:16:32 -0500
Skinny Puppy <skin_pup-twisted at damnable.happypoo.com> wrote:

> Attached is the patch for TLS support within twisted.  It is not the
> best code,  but it passes all the SSL test (None working on that next)
> and works.  The diff also adds an echoclient_tls.py/echoserv_tls.py,
> that work along with the echoclient_ssl.py/echoserv_tls.py

Neato! I don't have time to look at it right now, but it *will* be
looked at sooner or later. If I don't check this in within a week bug me
personally.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From dstone at trinity.unimelb.edu.au  Wed Feb  5 22:47:00 2003
From: dstone at trinity.unimelb.edu.au (Daniel Stone)
Date: Thu, 6 Feb 2003 14:47:00 +1100
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <3E417953.5060306@cubik.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org> <200302052105.47849.andreas@mtg.co.at> <3E417953.5060306@cubik.org>
Message-ID: <20030206034700.GA26398@trinity.unimelb.edu.au>

On Wed, Feb 05, 2003 at 01:51:31PM -0700, Bruce Mitchener scrawled:
> Andreas Kostyrka wrote:
> >>I'll be sure to recommend to my Fortune 500 clients to not use a product
> >>administered by essentially, immature children.
> >
> >Who is the immature child here?
> >Coming into a community, barking around acrynoms that nobody cares about, 
> >insulting the developers, and so on?
> 
> Actually, not to be picky, but it looked like he'd exchanged private 
> emails with Itamar, which Itamar then posted.

Which is exceptionally bad form.

-- 
Daniel Stone                                     <dstone at trinity.unimelb.edu.au>
Developer, Trinity College, University of Melbourne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030206/048a7a44/attachment.pgp 

From skin_pup-twisted at damnable.happypoo.com  Thu Feb  6 01:04:44 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Thu, 6 Feb 2003 01:04:44 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
In-Reply-To: <20030205213639.74b3b797.twisted@itamarst.org>
References: <20030206011632.GP32425@shitbomb.com> <20030205213639.74b3b797.twisted@itamarst.org>
Message-ID: <20030206060443.GQ32425@shitbomb.com>

Itamar Shtull-Trauring [twisted at itamarst.org] wrote:
> Skinny Puppy <skin_pup-twisted at damnable.happypoo.com> wrote:
> 
> > Attached is the patch for TLS support within twisted.  It is not the
> > best code,  but it passes all the SSL test (None working on that next)
> > and works.  The diff also adds an echoclient_tls.py/echoserv_tls.py,
> > that work along with the echoclient_ssl.py/echoserv_tls.py
> 
> Neato! I don't have time to look at it right now, but it *will* be
> looked at sooner or later. If I don't check this in within a week bug me
> personally.

Will be more then happy too, but in the time being I got bored and
checked out the CVS version of Twisted and worked in TLS.  Patch attached 
of course.  Boredom will be my downfall, so please don't think I am being
pushy or anything.  :)

Jeremy Rossi 
-------------- next part --------------
? TLS.diff
? TLS.patch
? doc/examples/echoclient_tls.py
? doc/examples/echoserv_tls.py
Index: twisted/internet/ssl.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/ssl.py,v
retrieving revision 1.37
diff -u -r1.37 ssl.py
--- twisted/internet/ssl.py	3 Feb 2003 18:55:59 -0000	1.37
+++ twisted/internet/ssl.py	6 Feb 2003 05:50:16 -0000
@@ -95,112 +95,18 @@
         return SSL.Context(SSL.SSLv3_METHOD)
 
 
-class Connection(tcp.Connection):
-    """I am an SSL connection.
-    """
-
-    __implements__ = tcp.Connection.__implements__, interfaces.ISSLTransport
-    
-    writeBlockedOnRead = 0
-    readBlockedOnWrite= 0
-    sslShutdown = 0
-    
-    def getPeerCertificate(self):
-        """Return the certificate for the peer."""
-        return self.socket.get_peer_certificate()
-
-    def _postLoseConnection(self):
-        """Gets called after loseConnection(), after buffered data is sent.
-
-        We close the SSL transport layer, and if the other side hasn't
-        closed it yet we start reading, waiting for a ZeroReturnError
-        which will indicate the SSL shutdown has completed.
-        """
-        try:
-            done = self.socket.shutdown()
-            self.sslShutdown = 1
-        except SSL.Error:
-            return main.CONNECTION_LOST
-        if done:
-            return main.CONNECTION_DONE
-        else:
-            # we wait for other side to close SSL connection -
-            # this will be signaled by SSL.ZeroReturnError when reading
-            # from the socket
-            self.stopWriting()
-            self.startReading()
-            return None # don't close socket just yet
-    
-    def doRead(self):
-        """See tcp.Connection.doRead for details.
-        """
-        if self.writeBlockedOnRead:
-            self.writeBlockedOnRead = 0
-            return self.doWrite()
-        try:
-            return tcp.Connection.doRead(self)
-        except SSL.ZeroReturnError:
-            # close SSL layer, since other side has done so, if we haven't
-            if not self.sslShutdown:
-                try:
-                    self.socket.shutdown()
-                    self.sslShutdown = 1
-                except SSL.Error:
-                    pass
-            return main.CONNECTION_DONE
-        except SSL.WantReadError:
-            return
-        except SSL.WantWriteError:
-            self.readBlockedOnWrite = 1
-            self.startWriting()
-            return
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def doWrite(self):
-        if self.readBlockedOnWrite:
-            self.readBlockedOnWrite = 0
-            if not self.unsent: self.stopWriting()
-            return self.doRead()
-        return tcp.Connection.doWrite(self)
-    
-    def writeSomeData(self, data):
-        """See tcp.Connection.writeSomeData for details.
-        """
-        if not data:
-            return 0
 
-        try:
-            return tcp.Connection.writeSomeData(self, data)
-        except SSL.WantWriteError:
-            return 0
-        except SSL.WantReadError:
-            self.writeBlockedOnRead = 1
-            return 0
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def _closeSocket(self):
-        """Called to close our socket."""
-        try:
-            self.socket.sock_shutdown(2)
-        except socket.error:
-            pass
 
-
-
-class Client(Connection, tcp.Client):
+class Client(tcp.Client):
     """I am an SSL client."""
     def __init__(self, host, port, bindAddress, ctxFactory, connector, reactor=None):
         # tcp.Client.__init__ depends on self.ctxFactory being set
         self.ctxFactory = ctxFactory
         tcp.Client.__init__(self, host, port, bindAddress, connector, reactor)
 
-    def createInternetSocket(self):
-        """(internal) create an SSL socket
-        """
-        sock = tcp.Client.createInternetSocket(self)
-        return SSL.Connection(self.ctxFactory.getContext(), sock)
+    def _finishInit(self, whenDone, skt, error, reactor):
+        tcp.Client._finishInit(self, whenDone, skt, error, reactor)
+        self.starttls(self.ctxFactory)
 
     def getHost(self):
         """Returns a tuple of ('SSL', hostname, port).
@@ -219,7 +125,7 @@
 
 
 
-class Server(Connection, tcp.Server):
+class Server(tcp.Server):
     """I am an SSL server.
     """
     
@@ -256,32 +162,9 @@
         sock = tcp.Port.createInternetSocket(self)
         return SSL.Connection(self.ctxFactory.getContext(), sock)
     
-    def doRead(self):
-        """Called when my socket is ready for reading.
-
-        This accepts a connection and calls self.protocol() to handle the
-        wire-level protocol.
-        """
-        try:
-            try:
-                skt, addr = self.socket.accept()
-            except socket.error, e:
-                if e.args[0] == tcp.EWOULDBLOCK:
-                    return
-                raise
-            except SSL.Error:
-                log.deferr()
-                return
-            protocol = self.factory.buildProtocol(addr)
-            if protocol is None:
-                skt.close()
-                return
-            s = self.sessionno
-            self.sessionno = s+1
-            transport = self.transport(skt, protocol, addr, self, s)
-            protocol.makeConnection(transport)
-        except:
-            log.deferr()
+    def _preMakeConnection(self, transport):
+        transport.TLS = 1
+        return tcp.Port._preMakeConnection(self, transport)
 
 
 class Connector(base.BaseConnector):
Index: twisted/internet/tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.105
diff -u -r1.105 tcp.py
--- twisted/internet/tcp.py	31 Jan 2003 23:50:20 -0000	1.105
+++ twisted/internet/tcp.py	6 Feb 2003 05:50:16 -0000
@@ -34,6 +34,10 @@
 import select
 import operator
 import warnings
+try:
+    from OpenSSL import SSL
+except ImportError:
+    SSL = None
 
 if os.name == 'nt':
     EINVAL      = 10022
@@ -78,6 +82,11 @@
 
     __implements__ = abstract.FileDescriptor.__implements__, interfaces.ITCPTransport
 
+    writeBlockedOnRead = 0
+    readBlockedOnWrite= 0
+    sslShutdown = 0
+    TLS = 0
+
     def __init__(self, skt, protocol, reactor=None):
         abstract.FileDescriptor.__init__(self, reactor=reactor)
         self.socket = skt
@@ -85,7 +94,42 @@
         self.fileno = skt.fileno
         self.protocol = protocol
 
+    def starttls(self, ctx):
+        self.socket = SSL.Connection(ctx.getContext(), self.socket)
+        self.fileno = self.socket.fileno
+        self.TLS = 1
+
     def doRead(self):
+        if self.TLS:
+            return self.doRead_TLS()
+        else:
+            return self.doRead_NOTLS()
+
+    def doRead_TLS(self):
+        if self.writeBlockedOnRead:
+            self.writeBlockedOnRead = 0
+            return self.doWrite()
+        try:
+            return self.doRead_NOTLS()
+        except SSL.ZeroReturnError:
+            # close SSL layer, since other side has done so, if we haven't
+            if not self.sslShutdown:
+                try:
+                    self.socket.shutdown()
+                    self.sslShutdown = 1
+                except SSL.Error:
+                    pass
+            return main.CONNECTION_DONE
+        except SSL.WantReadError:
+            return
+        except SSL.WantWriteError:
+            self.readBlockedOnWrite = 1
+            self.startWriting()
+            return
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+    def doRead_NOTLS(self):
         """Calls self.protocol.dataReceived with all available data.
 
         This reads up to self.bufferSize bytes of data from its socket, then
@@ -104,7 +148,22 @@
             return main.CONNECTION_LOST
         return self.protocol.dataReceived(data)
 
+    def doWrite(self):
+        if self.TLS:
+            if self.readBlockedOnWrite:
+                self.readBlockedOnWrite = 0
+                if not self.unsent: self.stopWriting()
+                return self.doRead()
+        return abstract.FileDescriptor.doWrite(self)
+
     def writeSomeData(self, data):
+        if self.TLS:
+            return self.writeSomeData_TLS(data)
+        else:
+            return self.writeSomeData_NOTLS(data)
+
+
+    def writeSomeData_NOTLS(self, data):
         """Connection.writeSomeData(data) -> #of bytes written | CONNECTION_LOST
         This writes as much data as possible to the socket and returns either
         the number of bytes read (which is positive) or a connection error code
@@ -118,6 +177,20 @@
             else:
                 return main.CONNECTION_LOST
 
+    def writeSomeData_TLS(self, data):
+        if not data:
+            return 0
+        try:
+            return self.writeSomeData_NOTLS(data)
+        except SSL.WantWriteError:
+            return 0
+        except SSL.WantReadError:
+            self.writeBlockedOnRead = 1
+            return 0
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+
     def _closeSocket(self):
         """Called to close our socket."""
         # This used to close() the socket, but that doesn't *really* close if
@@ -125,7 +198,10 @@
         # was inherited by a subprocess. And we really do want to close the
         # connection. So we use shutdown() instead.
         try:
-            self.socket.shutdown(2)
+            if self.TLS:
+                self.socket.sock_shutdown(2)
+            else:
+                self.socket.shutdown(2)
         except socket.error:
             pass
 
@@ -164,6 +240,32 @@
     def setTcpNoDelay(self, enabled):
         self.socket.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, enabled)
 
+    def _postLoseConnection(self):
+        """Gets called after loseConnection(), after buffered data is sent.
+
+        We close the SSL transport layer, and if the other side hasn't
+        closed it yet we start reading, waiting for a ZeroReturnError
+        which will indicate the SSL shutdown has completed.
+        """
+        if self.TLS:
+            try:
+                done = self.socket.shutdown()
+                self.sslShutdown = 1
+            except SSL.Error:
+                return main.CONNECTION_LOST
+            if done:
+                return main.CONNECTION_DONE
+            else:
+                # we wait for other side to close SSL connection -
+                # this will be signaled by SSL.ZeroReturnError when reading
+                # from the socket
+                self.stopWriting()
+                self.startReading()
+                return None # don't close socket just yet
+        else:
+            # XXX Should this be main.CONNECTION_DONE
+            #     or the returnwd value ever change?
+            return abstract.FileDescriptor._postLoseConnection(self)
 
 class BaseClient(Connection):
     """A base class for client TCP (and similiar) sockets.
@@ -181,6 +283,11 @@
         else:
             reactor.callLater(0, self.failIfNotConnected, error)
 
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_connect_state()
+        return holder
+
     def stopConnecting(self):
         """Stop attempt to connect."""
         self.failIfNotConnected(error.UserError())
@@ -337,6 +444,11 @@
         """
         return self.repstr
 
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_accept_state()
+        return holder
+        
     def getHost(self):
         """Returns a tuple of ('INET', hostname, port).
 
@@ -433,18 +545,27 @@
                         self.numberAccepts = i
                         break
                     raise
+                # XXX Hummmmmmmmmmmmmm what to do about this
+                except SSL.Error:
+                    if self.TLS:
+                        log.deferr()
+                        return
                 protocol = self.factory.buildProtocol(addr)
                 if protocol is None:
                     skt.close()
                     continue
                 s = self.sessionno
                 self.sessionno = s+1
-                transport = self.transport(skt, protocol, addr, self, s)
+                # XXX once again I just don't know if I should be doing this
+                transport = self._preMakeConnection(self.transport(skt, protocol, addr, self, s))
                 protocol.makeConnection(transport)
             else:
                 self.numberAccepts = self.numberAccepts+20
         except:
             log.deferr()
+
+    def _preMakeConnection(self, transport):
+        return transport
 
     def loseConnection(self):
         """Stop accepting connections on this port.
-------------- next part --------------

# Twisted, the Framework of Your Internet
# Copyright (C) 2001 Matthew W. Lefkowitz
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import udp, ssl

### Protocol Implementation

# This is just about the simplest possible protocol

x = ssl.DefaultOpenSSLContextFactory(privateKeyFileName="server.pem",
                                 certificateFileName="server.pem",
                                 sslmethod=ssl.SSL.TLSv1_METHOD)


class Echo(Protocol):
    def dataReceived(self, data):
        "As soon as any data is received, write it back."
        print data
        try:
            command, other = data.split(";", 1)
        except:
            command = data
            other = ""
        if command == "STARTTLS":
            print "starting TLS"
            self.transport.write("READY;ajshdakjsd\n")
            self.transport.starttls(x)
#            self.transport.socket.set_accept_state()
        elif command == "STOPTLS":
            print "stoping TLS"
            self.transport.write("STOPED;\n")
            self.transport.stoptls()
        else:
            self.transport.write(data)


### Persistent Application Builder

# This builds a .tap file
class EchoClientFactory(Factory):
    protocol = Echo
    def connectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()

    def connectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()


if __name__ == '__main__':
    # Since this is persistent, it's important to get the module naming right
    # (If we just used Echo, then it would be __main__.Echo when it attempted
    # to unpickle)
    import echoserv_tls
    from twisted.internet.app import Application
    factory = echoserv_tls.EchoClientFactory()
    factory.protocol = echoserv_tls.Echo
    app = Application("echo-tls")
    app.listenTCP(8000,factory)
#    app.listenUDP(8000, factory)
    app.save("start")
-------------- next part --------------
#!/usr/bin/python
# Twisted, the Framework of Your Internet
# Copyright (C) 2001 Matthew W. Lefkowitz
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

from twisted.internet.protocol import ClientFactory, Protocol
from twisted.internet.app import Application
from twisted.internet import reactor, tcp, ssl
import sys

class myContext(ssl.ClientContextFactory):
    isClient = 1
    def getContext(self):
        return ssl.SSL.Context(ssl.SSL.TLSv1_METHOD)

x = myContext()

class EchoClient(Protocol):
    end="Bye-bye!"
    def connectionMade(self):
        self.transport.write("I am sending this in the clear\n")
        self.transport.write("And why should I not?\n")
        self.transport.write("STARTTLS;\n")

    def dataReceived(self, data):
     	for i in data.split("\n"):
            try:
                command, other = i.split(";", 1)
            except:
                command = ""
                other = i
            if command==self.end:
                self.transport.loseConnection()
            elif command=="READY":
                self.transport.starttls(x)
                self.transport.write("Spooks cannot see me now.\n")
                print i
            elif command=="STOPED":
                self.transport.stoptls()
                self.transport.write("they can see again\n")
                self.transport.write("%s;ok\n"%(self.end))

class EchoClientFactory(ClientFactory):
    protocol = EchoClient

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()
        reactor.stop()

    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()
        reactor.stop()

factory = EchoClientFactory()
reactor.connectTCP('localhost', 8000, factory)
reactor.run()

From max at malva.ua  Tue Feb  4 09:02:42 2003
From: max at malva.ua (Max Ischenko)
Date: Tue, 4 Feb 2003 16:02:42 +0200
Subject: [Twisted-Python] a typo in docs (book.ps)
Message-ID: <20030204140242.GA26052@malva.ua>

Section 2.2.4
kill `twisted.pid` should read kill `cat twisted.pid`, probably.

-- 
Bst rgrds, M.A.X.: Mechanical Artificial Xenomorph.



From twisted at moshez.org  Thu Feb  6 04:51:58 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 6 Feb 2003 09:51:58 -0000
Subject: [Twisted-Python] a typo in docs (book.ps)
In-Reply-To: <20030204140242.GA26052@malva.ua>
References: <20030204140242.GA26052@malva.ua>
Message-ID: <20030206095158.14172.qmail@green.zadka.com>

On Tue, 4 Feb 2003 16:02:42 +0200, Max Ischenko <max at malva.ua> wrote:

> Section 2.2.4
> kill `twisted.pid` should read kill `cat twisted.pid`, probably.

Thanks, I fixed it in CVS.
This will show up in version 1.0.3
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From fog at initd.org  Thu Feb  6 05:55:02 2003
From: fog at initd.org (Federico Di Gregorio)
Date: 06 Feb 2003 11:55:02 +0100
Subject: [Twisted-Python] little patch to gtk2reactor
Message-ID: <1044528901.1157.30.camel@momo.initd.org>

hi *,

this is my first mailto this list so, hello and kudos to all twisted
developers: it (twisted) is great. 

as some of you (the ones in irc) already know, yesterday i fight quite a
lot with gtk2reactor not working with latest pygtk2 and i finally got it
working again. the problem is that:

[quote from pygtk ML]
James Henstridge <james at daa.com.au> wrote:
>If you want your callback to be requeued, add "return True" to the end. 
>Returning None (which happens if you have no return statement) is 
>treated the same as returning False, which tells gtk not to requeue the 
>callback.
[/quote]

so the solution is just to add a "return 1" (or the equivalent) to the
end of Gtk2Reactor.callback and a "return real_cb(...)" in input_add.  

obvious patch attached.

ciao,
federico

-------------- next part --------------
--- gtk2reactor.py.old	2003-02-06 11:53:46.000000000 +0100
+++ gtk2reactor.py	2003-02-06 11:53:10.000000000 +0100
@@ -71,7 +71,7 @@
 	if hasattr(source, 'fileno'):
             # handle python objects
             def wrapper(source, condition, real_s=source, real_cb=callback):
-                real_cb(real_s, condition)
+                return real_cb(real_s, condition)
             return gtk.input_add(source.fileno(), condition, wrapper)
         else:
             return gtk.input_add(source, condition, callback)
@@ -151,6 +151,7 @@
                 # If source disconnected, don't call the rest of the methods.
                 break
         self.simulate()
+	return 1
     
     def simulate(self):
         """Run simulation loops and reschedule callbacks.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030206/f4a47d64/attachment.pgp 

From ac at strakt.com  Thu Feb  6 06:30:02 2003
From: ac at strakt.com (Anders =?ISO-8859-1?Q?Chrigstr=F6m?=)
Date: 06 Feb 2003 12:30:02 +0100
Subject: [Twisted-Python] Patch to qtreactor
Message-ID: <1044531002.26411.4.camel@ashera>

Here is a small patch to the qtreactor.

-- 
Anders Chrigstr?m               Email: ac at strakt.com
AB Strakt                       Phone: +46 31 749 08 96
Norra ?gatan 10
416 64 G?teborg
SWEDEN
-------------- next part --------------
A non-text attachment was scrubbed...
Name: qtreactor.patch
Type: text/x-patch
Size: 1258 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030206/f0073468/attachment.bin 

From iko at strakt.com  Thu Feb  6 11:36:36 2003
From: iko at strakt.com (Anders Hammarquist)
Date: Thu, 06 Feb 2003 17:36:36 +0100
Subject: [Twisted-Python] (no subject)
Message-ID: <200302061636.h16GaaGC024185@fido.strakt.com>

Hi all,

Here's my first cut at rewriting the SMTP client code.
The new smtp.sendmail() function is intended to mimic
smtplib.sendmail() as close as reasonably possible, to
allow for easy migration. Comments appreciated, as always.

The patch also adds some minor tweaks to the SMTP server,
adds a quick hack to accepttests to let me run only one
(or a few) of the tests, and also fixes basic.LineReciever
to pass on any returned exceptions (I needed this for the
SMTP client).

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 26191 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030206/e5522e61/attachment.bin 

From twisted at itamarst.org  Thu Feb  6 13:35:58 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 6 Feb 2003 13:35:58 -0500
Subject: [Twisted-Python] little patch to gtk2reactor
In-Reply-To: <1044528901.1157.30.camel@momo.initd.org>
References: <1044528901.1157.30.camel@momo.initd.org>
Message-ID: <20030206133558.18c8482c.twisted@itamarst.org>

OK, I checked this in, can someone with gtk2 actually verify this fixes
the problems?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From acapnotic at twistedmatrix.com  Thu Feb  6 14:14:22 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 06 Feb 2003 11:14:22 -0800
Subject: [Twisted-Python] epydoc and Deferreds documentation standard
Message-ID: <1044558861.3659.30.camel@troglodyte.funhouse>

Any thoughts on what the standard should be for documenting functions
that return Deferred?  Yes, "@returntype: Deferred" is accurate in one
sense, but it's important to know that Deferred will call back with an
Identity.  Or maybe the callback value of the Deferred is irrelevant, it
just happens to let you know the operation is finished.

Should we say "@returntype: L{Deferred} L{Foo}" and "@returntype:
L{Deferred} None"?

-- 
The moon is waxing crescent, 23.2% illuminated, 4.7 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030206/0eeccb82/attachment.pgp 

From radix at twistedmatrix.com  Thu Feb  6 15:13:45 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 6 Feb 2003 15:13:45 -0500
Subject: [Twisted-Python] epydoc and Deferreds documentation standard
In-Reply-To: <1044558861.3659.30.camel@troglodyte.funhouse>
References: <1044558861.3659.30.camel@troglodyte.funhouse>
Message-ID: <20030206201345.GC1080@radii>

On Thu, Feb 06, 2003 at 11:14:22AM -0800, Kevin Turner wrote:
> Any thoughts on what the standard should be for documenting functions
> that return Deferred?  Yes, "@returntype: Deferred" is accurate in one
> sense, but it's important to know that Deferred will call back with an
> Identity.  Or maybe the callback value of the Deferred is irrelevant, it
> just happens to let you know the operation is finished.
> 
> Should we say "@returntype: L{Deferred} L{Foo}" and "@returntype:
> L{Deferred} None"?

Yeah, that's what I've been doing (sometimes "L{Deferred} resulting in
L{Foo}"). It's good that epydoc doesn't really process the @returntype
in a special way, so you can still throw L{} in whereever you want.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Thu Feb  6 15:23:06 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 6 Feb 2003 15:23:06 -0500
Subject: [Twisted-Python] Sending email asynchronously
Message-ID: <CCDAB0A8-3A10-11D7-8114-000A95686CD8@redivi.com>

On Friday, Nov 1, 2002, at 00:07 America/New_York, Jp Calderone wrote:

>   Just a heads up: I've just stuck in 
> twisted.protocols.smtp.sendEmail(); it
> is based very heavily on some code itamar sent me and can handle 
> attachments
> as well as plain ol' email.  I imagine there are some things wrong 
> with it,
> but this is something I've found lacking in Twisted for a long time, 
> so I
> had to add it, even broken :)  Suggestions on the what the One True 
> Way it
> should work are welcome (but it does what I want it to now, so don't 
> expect
> me to improve it without input ;).

I've just committed a modification of sendEmail to do what I want, it 
can now
send HTML email (with a text/plain fallback) and use 7bit encoding when 
it
makes sense.  :)

To send a basic HTML email, you would leave the content as text/plan, 
have a single
attachment that is text/html, and call sendEmail with 
multipartboundary="alternative".

-bob




From glyph at twistedmatrix.com  Thu Feb  6 21:08:07 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 06 Feb 2003 20:08:07 -0600 (CST)
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <CCDAB0A8-3A10-11D7-8114-000A95686CD8@redivi.com>
References: <CCDAB0A8-3A10-11D7-8114-000A95686CD8@redivi.com>
Message-ID: <20030206.200807.74744704.glyph@twistedmatrix.com>


On Thu, 6 Feb 2003 15:23:06 -0500, Bob Ippolito <bob at redivi.com> wrote:

> I've just committed a modification of sendEmail to do what I want, it can now
> send HTML email (with a text/plain fallback) and use 7bit encoding when it
> makes sense.  :)

Hmm.  It looks like we are starting to implement a substantial subset of the
"email" module in Python 2.2.  This is available for 2.1 at
http://mimelib.sourceforge.net/ .  I would recommend that anyone developing
Twisted applications that want email integration use that module instead of
using these features of sendEmail -- I would like to see this code go away.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030206/920c3ea2/attachment.pgp 

From bob at redivi.com  Thu Feb  6 21:40:58 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 6 Feb 2003 21:40:58 -0500
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <20030206.200807.74744704.glyph@twistedmatrix.com>
Message-ID: <968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>

On Thursday, Feb 6, 2003, at 21:08 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Thu, 6 Feb 2003 15:23:06 -0500, Bob Ippolito <bob at redivi.com> wrote:
>
>> I've just committed a modification of sendEmail to do what I want, it 
>> can now
>> send HTML email (with a text/plain fallback) and use 7bit encoding 
>> when it
>> makes sense.  :)
>
> Hmm.  It looks like we are starting to implement a substantial subset 
> of the
> "email" module in Python 2.2.  This is available for 2.1 at
> http://mimelib.sourceforge.net/ .  I would recommend that anyone 
> developing
> Twisted applications that want email integration use that module 
> instead of
> using these features of sendEmail -- I would like to see this code go 
> away.

Adding four lines of code to twisted is a lot easier than 
downloading/learning some other module, don't you think?

As-is, the email module is going to cover a good 95% of stuff you need 
to do when sending mail

-bob




From andrew-twisted at puzzling.org  Thu Feb  6 23:08:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 7 Feb 2003 15:08:33 +1100
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>
References: <20030206.200807.74744704.glyph@twistedmatrix.com> <968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>
Message-ID: <20030207040833.GC32136@frobozz.local>

On Thu, Feb 06, 2003 at 09:40:58PM -0500, Bob Ippolito wrote:
> 
> Adding four lines of code to twisted is a lot easier than 
> downloading/learning some other module, don't you think?

Not if you already know how to use that other module.  And considering that
it's in the standard library, I expect that will be fairly common.  The
learning curve for Twisted is steep enough already; I don't see the need to
add a new and different email module to make that even harder.

That said, we've reinvented wheels before, but there's always been a reason.
In my opinion, "I can't be bothered learning how to use a perfectly good
standard library module" isn't a reason.  Obviously if the standard library
module isn't "perfectly good", there's scope for reinvention, but so far
no-one has claimed that this is the case.

-Andrew.




From naesten at myrealbox.com  Wed Feb  5 23:48:49 2003
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 05 Feb 2003 23:48:49 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <3E41E931.2060401@myrealbox.com>

>
>
>Perhaps I don't understand YOUR Twisted model of networking, which is
>not
>OSI compliant. The OSI model IS NETWORKING and all real Turing-based
>computational systems that employ networking implement parts of the
>
This is where I start laughing out loud... Turing!
--Sam




From glyph at twistedmatrix.com  Fri Feb  7 06:26:34 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 07 Feb 2003 05:26:34 -0600 (CST)
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <20030207040833.GC32136@frobozz.local>
References: <20030206.200807.74744704.glyph@twistedmatrix.com>
	<968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>
	<20030207040833.GC32136@frobozz.local>
Message-ID: <20030207.052634.78711370.glyph@twistedmatrix.com>


On Fri, 7 Feb 2003 15:08:33 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> In my opinion, "I can't be bothered learning how to use a perfectly good
> standard library module" isn't a reason.  Obviously if the standard library
> module isn't "perfectly good", there's scope for reinvention, but so far
> no-one has claimed that this is the case.

Speaking as an outspoken advocate of NIH, I definitely think that in this case
the standard library module is perfectly good :-).  I've been doing a lot with
email processing lately, and hopefully some of this work will start filtering
back Twisted-wards soon.

I was going to write a bunch of other stuff about odd situations that occur in
email, but: suffice it to say that email is not as simple as it seems at first
blush.  You can make some really weird mistakes, and having a central
chokepoint for dealing with MIME implementation weirdness is nice.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030207/4c273c4f/attachment.pgp 

From twisted at moshez.org  Fri Feb  7 11:41:59 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 7 Feb 2003 16:41:59 -0000
Subject: [Twisted-Python] Lore: the New Generation
Message-ID: <20030207164159.14772.qmail@green.zadka.com>

Dear Twisted Users and Developers,

I have refactored Lore to get rid of some of the ugliness that it has
managed to accumulate. It used to be that there were three Lore scripts:
generatelore, html2latex and hlint. The second two were misnamed, and only
the first one had nice progress bars. In addition, the man2lore capability
was not available via a command line script. It was amazingly hard to
extend Lore, so much that it drove several users to maintain their own
fork.

Hopefully, all of these problems are solved after the refactoring. Documentation
is available at doc/howto/lore.html and the Lore manpage. Extending is
currently not documented, but twisted/lore/math.py is an example for how
I believe extensions should go. There are many more features planned, but
hopefully there will be no more UI breakage.

Moshe

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From skin_pup-twisted at damnable.happypoo.com  Fri Feb  7 16:01:28 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Fri, 7 Feb 2003 16:01:28 -0500
Subject: [Twisted-Python] Solaris t.i.process.py patch.
Message-ID: <20030207210128.GU32425@shitbomb.com>

On Solaris for some reason whenever I ran my app in the background it
would fail (as seen in the attached log, twisted -f poo.tap).  But the 
really weird thing was when I ran it in the foreground (twisted -n -f
poo.tap) it did not return this error.  I have created a patch that 
fixes the problem does not really solve it.  I will be checking into 
this some more,  and what is wrong with Solaris :)

Jeremy 

-------------- next part --------------
Index: twisted/internet/process.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/process.py,v
retrieving revision 1.46
diff -u -r1.46 process.py
--- twisted/internet/process.py	6 Jan 2003 05:56:46 -0000	1.46
+++ twisted/internet/process.py	7 Feb 2003 20:50:54 -0000
@@ -242,9 +242,13 @@
                              (command, str(args),
                               "id %s" % id(environment)))
                 traceback.print_exc(file=stderr)
-                stderr.flush()
-                for fd in range(3):
-                    os.close(fd)
+                # XXX This is to deal with Solaris. 
+                try:
+                    stderr.flush()
+                    for fd in range(3):
+                        os.close(fd)   
+                except IOError:
+                    pass       
             os._exit(1)
         if settingUID:
             os.setregid(currgid, curegid)
@@ -485,7 +489,11 @@
                              (command, str(args),
                               "id %s" % id(environment)))
                 traceback.print_exc(file=stderr)
-                stderr.flush()
+                # XXX More to deal with solaris
+                try:
+                    stderr.flush()
+                except IOError:
+                    pass
             os._exit(1)
         assert pid!=0
         os.close(slavefd)
-------------- next part --------------
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 213, i
n _startRunCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     self._runCallbacks()
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 227, i
n _runCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     (self.result,)+tuple(args), kw)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 162, i
n callback
06/02/2003 14:51 [MasterLDAPClient,client]     self._startRunCallbacks(result, 0)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 213, i
n _startRunCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     self._runCallbacks()
06/02/2003 14:51 [MasterLDAPClient,client] --- <exception caught here> ---
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 227, i
n _runCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     (self.result,)+tuple(args), kw)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 601, in s
torage
06/02/2003 14:51 [MasterLDAPClient,client]     sudoersWrite(d, self.client.factory.searchs[i].storage)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 526, in _
_init__
06/02/2003 14:51 [MasterLDAPClient,client]     self.write()
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 533, in w
rite
06/02/2003 14:51 [MasterLDAPClient,client]     d = ProtocolWithDeferred(checkfile, visudo, ['-c', '-f', self.obj.filename + ".tmp
"], {})
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 518, in P
rotocolWithDeferred
06/02/2003 14:51 [MasterLDAPClient,client]     reactor.spawnProcess(p, executable, (executable,)+tuple(args), env, path)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 274,
 in spawnProcess
06/02/2003 14:51 [MasterLDAPClient,client]     return process.Process(self, executable, args, env, path, processProtocol, uid, gi
d)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/process.py", line 245,
 in __init__
06/02/2003 14:51 [MasterLDAPClient,client]     stderr.flush()
06/02/2003 14:51 [MasterLDAPClient,client] exceptions.IOError: [Errno 9] Bad file number


From lac at strakt.com  Fri Feb  7 18:26:43 2003
From: lac at strakt.com (Laura Creighton)
Date: Sat, 8 Feb 2003 00:26:43 +0100
Subject: [Twisted-Python] giving talks
Message-ID: <200302072326.h17NQhIZ020248@ratthing-b246.strakt.com>

It occurs to me that some of you may not have read 
http://perl.plover.com/yak/presentation/samples/notes.html
which is 'how to give a talk' for Perl conferences, which maps
pretty nicely to Python conferences as well.  I most certainly
wouldn't do everything that this person suggests.  Bathroom humour
is not going to work for me.  But it is good to read, so that when
you _don't_ do things his way, you know why you aren't.  And most
of this paper is very good advice I wish I had before I gave my
first, or 10th speech in public.

good luck, and hope this wasn't too far off topic,
Laura



From glyph at twistedmatrix.com  Fri Feb  7 19:08:04 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 07 Feb 2003 18:08:04 -0600 (CST)
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <3E41E931.2060401@myrealbox.com>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
	<3E41E931.2060401@myrealbox.com>
Message-ID: <20030207.180804.45188127.glyph@twistedmatrix.com>

On Wed, 05 Feb 2003 23:48:49 -0500, Samuel Bronson <naesten at myrealbox.com> wrote:

> > OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> > computational systems that employ networking implement parts of the

> This is where I start laughing out loud... Turing!

We can hardly blame the fellow for not knowing that Twisted was originally
developed on babbage-derived hardware before being ported to the more archaic
van-neumann architectures.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030207/5df126d3/attachment.pgp 

From m at moshez.org  Sat Feb  8 13:53:04 2003
From: m at moshez.org (Moshe Zadka)
Date: 8 Feb 2003 18:53:04 -0000
Subject: [Twisted-Python] Lore vs. latex2html: Fight to the Finish
Message-ID: <20030208185304.9876.qmail@green.zadka.com>

Dear Twisted developers,

I have started converting Thinking Like a Computer Scientist in Python
to Lore, to try and see what Lore is missing. It has been a most education
experience. The two prime things Lore is currently missing for lossless
conversion (of the specific chapter I tested) are:

* EPS images support
* Indexing support

However, beyond that, I am interested to know which looks better:

latex2html: http://www.ibiblio.org/obp/thinkCSpy/chap01.htm
Lore: http://twistedmatrix.com/users/moshez/loreprop/
(The Lore is using the Twisted documentation stylesheet.)

Any comments would be nice. Comments which come with a patch to the
stylesheet will be doubly appreciated.

Thanks in advance,
Moshe Zadka

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From radix at twistedmatrix.com  Sat Feb  8 15:53:38 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 8 Feb 2003 15:53:38 -0500
Subject: [Twisted-Python] Lore vs. latex2html: Fight to the Finish
In-Reply-To: <20030208185304.9876.qmail@green.zadka.com>
References: <20030208185304.9876.qmail@green.zadka.com>
Message-ID: <20030208205338.GA1101@radii>

On Sat, Feb 08, 2003 at 06:53:04PM -0000, Moshe Zadka wrote:
> The two prime things Lore is currently missing for lossless
> conversion (of the specific chapter I tested) are:
> 
> * EPS images support
> * Indexing support

I assume `Indexing support' implies the navigation stuff at the
top/bottom of the latex2html version?

> Any comments would be nice. Comments which come with a patch to the
> stylesheet will be doubly appreciated.

Also, I know this is an old argument, but I do prefer bold for
emphasis rather than italics: bold stands out much more when you're
skimming through. I like it when I can find the initial
description/definition of a term within a particular area of a paper
by skimming over all of the bold terms.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From corydodt at yahoo.com  Sun Feb  9 12:13:09 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Sun, 9 Feb 2003 09:13:09 -0800 (PST)
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish (Moshe Zadka)
Message-ID: <20030209171309.58390.qmail@web10010.mail.yahoo.com>

Code blocks look much nicer in Lore (it's no contest, really), but I like
the usefulness of the original's navigation header--just the blue strip,
really.  I guess that falls under the heading "Indexes".  However, I'm
wondering about automatic numbering.

It helps to have the numbers there in the HTML, even though you aren't
flipping through physical pages to find them.  Why?  People often look at
a hardcopy of doc, and then try to find the same section in the live copy.
 This becomes much harder if the live copy doesn't advertise section
numbers that match the hard copy's.

CSS2 actually has support for automatic numbering, but no browser
currently supports it (I've tested Mozilla, IE, and Opera).  So, I'm not
submitting a CSS patch. :-(

As far as EPS conversion, I've already done the legwork on this one if
you'd like to see my pilhtml2latex.  I haven't been brave enough to try
Lore yet, so it still depends on the old html2latex code.


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From m at moshez.org  Sun Feb  9 13:30:11 2003
From: m at moshez.org (Moshe Zadka)
Date: 9 Feb 2003 18:30:11 -0000
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish (Moshe Zadka)
In-Reply-To: <20030209171309.58390.qmail@web10010.mail.yahoo.com>
References: <20030209171309.58390.qmail@web10010.mail.yahoo.com>
Message-ID: <20030209183011.1074.qmail@green.zadka.com>

On Sun, 9 Feb 2003, Cory Dodt <corydodt at yahoo.com> wrote:

> It helps to have the numbers there in the HTML, even though you aren't
> flipping through physical pages to find them.  Why?  People often look at
> a hardcopy of doc, and then try to find the same section in the live copy.
>  This becomes much harder if the live copy doesn't advertise section
> numbers that match the hard copy's.

That's an interesting point.
I don't really need CSS to do the work, I can do it right there in the
HTML...I'm just kinda wondering whether it is the right thing to do...

> As far as EPS conversion, I've already done the legwork on this one if
> you'd like to see my pilhtml2latex.  I haven't been brave enough to try
> Lore yet, so it still depends on the old html2latex code.
 
Well, I'm more wondering what interface it should present to the user --
once we decide on an interface, the implementation shouldn't be hard.
I'm currently leaning towards <a href="file.eps" class="eps">caption</a>.
The rationale is that this seems to be the best bet in case your browser
happens to have a handler for the PS format, which is a gazillion times
more likely than <img src="file.eps"/> working. Again, the overriding
concern here is "what looks good in the source format".

Overall, I think that the conclusion I've drawn from this useful discussion
is: "people would kill for navigation". I've got some thoughts on this
subject: this is certainly a thorny issue. 

Thanks for the ideas,
Moshe Zadka
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From bob at redivi.com  Sun Feb  9 13:55:44 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 9 Feb 2003 13:55:44 -0500
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish (Moshe Zadka)
In-Reply-To: <20030209183011.1074.qmail@green.zadka.com>
Message-ID: <1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>

On Sunday, Feb 9, 2003, at 13:30 America/New_York, Moshe Zadka wrote:

> On Sun, 9 Feb 2003, Cory Dodt <corydodt at yahoo.com> wrote:
>
>> As far as EPS conversion, I've already done the legwork on this one if
>> you'd like to see my pilhtml2latex.  I haven't been brave enough to 
>> try
>> Lore yet, so it still depends on the old html2latex code.
>
> Well, I'm more wondering what interface it should present to the user 
> --
> once we decide on an interface, the implementation shouldn't be hard.
> I'm currently leaning towards <a href="file.eps" 
> class="eps">caption</a>.
> The rationale is that this seems to be the best bet in case your 
> browser
> happens to have a handler for the PS format, which is a gazillion times
> more likely than <img src="file.eps"/> working. Again, the overriding
> concern here is "what looks good in the source format".

Why not PDF instead of EPS?  They're practically the same internally, 
conversion from eps -> pdf is trivial, and PDF is a lot more likely to 
be viewable.

-bob




From glyph at twistedmatrix.com  Sun Feb  9 23:26:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 09 Feb 2003 22:26:27 -0600 (CST)
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish
 (Moshe Zadka)
In-Reply-To: <1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>
References: <20030209183011.1074.qmail@green.zadka.com>
	<1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>
Message-ID: <20030209.222627.59461714.glyph@twistedmatrix.com>


On Sun, 9 Feb 2003 13:55:44 -0500, Bob Ippolito <bob at redivi.com> wrote:

> Why not PDF instead of EPS?  They're practically the same internally,
> conversion from eps -> pdf is trivial, and PDF is a lot more likely to be
> viewable.

PS is an older and more established format with better free tools for
manipulating it.  I certainly haven't had the experience of EPS=>PDF being
"trivial" (it seems to be lossy unless you're careful about it), and I know of
good-quality PS viewers everywhere and PDF viewers only in some places.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030209/1d9dd461/attachment.pgp 

From m at moshez.org  Mon Feb 10 01:03:10 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Feb 2003 06:03:10 -0000
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish
 (Moshe Zadka)
In-Reply-To: <20030209.222627.59461714.glyph@twistedmatrix.com>
References: <20030209.222627.59461714.glyph@twistedmatrix.com>, <20030209183011.1074.qmail@green.zadka.com>
	<1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>
Message-ID: <20030210060310.8200.qmail@green.zadka.com>

On Sun, 09 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> PS is an older and more established format with better free tools for
> manipulating it.  I certainly haven't had the experience of EPS=>PDF being
> "trivial" (it seems to be lossy unless you're careful about it), and I know of
> good-quality PS viewers everywhere and PDF viewers only in some places.

All this discussion is irrelevant, really: supporting EPS images is something
which *needs* to be in Lore, because people are currently expecting the ability
to embed EPS images into documents. The only question is, "what source format
would be best for EPS images?". In Lore, "best" translates to "most hope
to be readable when opening the raw source in a web browser".

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From exarkun at intarweb.us  Mon Feb 10 18:16:53 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 10 Feb 2003 18:16:53 -0500
Subject: [Twisted-Python] A useful value for argv[0]
Message-ID: <20030210231653.GA13539@meson.dyndns.org>

  I think it would be neat if twistd re-executed itself(/python), and
specified the name of the tap/tas/tax file it was currently processing as
the value for argv[0].  This would make administering a system with many
twistd processes running much easier.  Want to see your webserver?  Just
run "ps -C web.tap".  Of course there could still be name conflicts, but
this might encourage the naming of tap files to be more selective.  The
system wide twisted.web tap could be "system-web" and Bob's distributed web
could be "bob-web".

  It makes integration with init scripts easier, too (at least on the
system's I'm familiar with), for the same reason.  Instead of keeping track
of pid files, just specify the name of the tap to start/stop/whatever.

  Anyone like?  Anyone hate?

  Jp

-- 
 up 2 days, 4:28, 3 users, load average: 0.04, 0.08, 0.06
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030210/9b754fe3/attachment.pgp 

From jjn at kriln.com  Mon Feb 10 18:30:24 2003
From: jjn at kriln.com (Jeremy Noetzelman)
Date: Mon, 10 Feb 2003 23:30:24 +0000 (GMT)
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030210231653.GA13539@meson.dyndns.org>
Message-ID: <20030210232953.V22380-100000@nosferatu.kriln.com>

I like.  Alot.

It's tolerable to have it show up as twistd with only one or two taps, but
when you have more than one, ugh.

On Mon, 10 Feb 2003, Jp Calderone wrote:

>   I think it would be neat if twistd re-executed itself(/python), and
> specified the name of the tap/tas/tax file it was currently processing as
> the value for argv[0].  This would make administering a system with many
> twistd processes running much easier.  Want to see your webserver?  Just
> run "ps -C web.tap".  Of course there could still be name conflicts, but
> this might encourage the naming of tap files to be more selective.  The
> system wide twisted.web tap could be "system-web" and Bob's distributed web
> could be "bob-web".
>
>   It makes integration with init scripts easier, too (at least on the
> system's I'm familiar with), for the same reason.  Instead of keeping track
> of pid files, just specify the name of the tap to start/stop/whatever.
>
>   Anyone like?  Anyone hate?
>
>   Jp
>
> --
>  up 2 days, 4:28, 3 users, load average: 0.04, 0.08, 0.06
>




From kwaker at uch.net  Mon Feb 10 18:56:55 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 01:56:55 +0200
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
Message-ID: <963376329.20030211015655@uch.net>

$subj

i.e. will we simplify our life by using generators from Python 2.3, I
thought of that already but currently have Twisted windows binaries
only for Python 2.2.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From bob at redivi.com  Mon Feb 10 19:33:54 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 10 Feb 2003 19:33:54 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <963376329.20030211015655@uch.net>
Message-ID: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>

On Monday, Feb 10, 2003, at 18:56 America/New_York, Dmitry Litovchenko 
wrote:

> i.e. will we simplify our life by using generators from Python 2.3, I
> thought of that already but currently have Twisted windows binaries
> only for Python 2.2.

We've been over this one before.  Although generators have been in 
__future__ for all of 2.2, Twisted can't use generators so long as we 
need to support 2.1.  As far as I know, we need to have full support 
for 2.1 as long as Zope requires it.

-bob




From kwaker at uch.net  Mon Feb 10 20:04:02 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 03:04:02 +0200
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
References: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
Message-ID: <417403503.20030211030402@uch.net>

Hello Bob,

>> i.e. will we simplify our life by using generators from Python 2.3, I
>> thought of that already but currently have Twisted windows binaries
>> only for Python 2.2.

BI> We've been over this one before.  Although generators have been in 
BI> __future__ for all of 2.2, Twisted can't use generators so long as we 
BI> need to support 2.1.  As far as I know, we need to have full support 
BI> for 2.1 as long as Zope requires it.

I am using Zope for a long time too, and didn't see any tracks of
Twisted there, Medusa only. I can't see any other reason for binding
to 2.1 and not moving towards to Python's bright future.

Due to my high interest to Zope, I even downloaded Zope-3's first
release and also didn't find tracks of Twisted there. Zopistas usually
name core folders honestly, not hiding used 3rd party package names,
just like it was folder "Medusa" in Zope 2.x.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From andrew-twisted at puzzling.org  Mon Feb 10 21:06:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 13:06:02 +1100
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
References: <963376329.20030211015655@uch.net> <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
Message-ID: <20030211020602.GD16336@frobozz.local>

On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
> need to support 2.1.  As far as I know, we need to have full support 
> for 2.1 as long as Zope requires it.

And also many systems still only have 2.1, e.g. Debian stable (woody).

-Andrew.




From radix at twistedmatrix.com  Mon Feb 10 20:56:02 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 10 Feb 2003 20:56:02 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030210231653.GA13539@meson.dyndns.org>
References: <20030210231653.GA13539@meson.dyndns.org>
Message-ID: <20030211015602.GD12562@radii>

On Mon, Feb 10, 2003 at 06:16:53PM -0500, Jp Calderone wrote:
>   I think it would be neat if twistd re-executed itself(/python), and
> specified the name of the tap/tas/tax file it was currently processing as
> the value for argv[0].  This would make administering a system with many
> twistd processes running much easier.  Want to see your webserver?  Just
> run "ps -C web.tap".  Of course there could still be name conflicts, but
> this might encourage the naming of tap files to be more selective.  The
> system wide twisted.web tap could be "system-web" and Bob's distributed web
> could be "bob-web".
> 
>   It makes integration with init scripts easier, too (at least on the
> system's I'm familiar with), for the same reason.  Instead of keeping track
> of pid files, just specify the name of the tap to start/stop/whatever.
> 
>   Anyone like?  Anyone hate?

I think it would be pretty neat. But if we do it, as you mention
above, it would lead to name conflicts. I think an `--appname'
argument to `mktap' would be in order.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From rob at zoism.org  Mon Feb 10 21:01:26 2003
From: rob at zoism.org (Rob Brown-Bayliss)
Date: 11 Feb 2003 15:01:26 +1300
Subject: [Twisted-Python] where to begin
Message-ID: <1044928876.24461.10.camel@caspian.everglade>

Hi - Help!

I have begun looking at twisted and imediatly became overwelmed,
factories, reactors, taps, enterprise, web, spread...  

There is a lot, but every article I have read on the site seems to rely
on the reader understanding what several of these are and how they
relate and why they relate etc etc.

So I am guessing that twisted can be of use to me, I am embarking on a
GTK2 style app, and I see twisted can some how interact with the gtk
mainloop.

My project consists of several client apps that continual send and
recieve data from the main control app.  Some of the clients may be on
the same machine as the control app, some on other machines depending on
location.  

Some times the control app needs to send the same information to all
apps togeather and some times only to one or two clients.

I had been looking at spread (not twisted spread) for this
functionality, and it can be of use, but can twisted provide a better
solution or is spread better suited to this sort of application?

More importantly could some one provide me with a pointer to a basic
gtk2 client server setup as a starting point for my exploration?

Thanks

-- 

*  Rob Brown-Bayliss
*  =================	
*      zoism.org



From radix at twistedmatrix.com  Mon Feb 10 20:59:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 10 Feb 2003 20:59:21 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
References: <963376329.20030211015655@uch.net> <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
Message-ID: <20030211015921.GE12562@radii>

On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
> 
> On Monday, Feb 10, 2003, at 18:56 America/New_York, Dmitry Litovchenko 
> wrote:
> 
> >i.e. will we simplify our life by using generators from Python 2.3, I
> >thought of that already but currently have Twisted windows binaries
> >only for Python 2.2.
> 
> We've been over this one before.  Although generators have been in 
> __future__ for all of 2.2, Twisted can't use generators so long as we 
> need to support 2.1.  As far as I know, we need to have full support 
> for 2.1 as long as Zope requires it.

But of course this doesn't prevent your *own* code from using
generators, if you want to require Python 2.2, which Twisted works
fine with. We just can't accept any generator-using code into core
Twisted.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From grimmtooth at softhome.net  Mon Feb 10 21:01:42 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Mon, 10 Feb 2003 21:01:42 -0500
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <417403503.20030211030402@uch.net>
Message-ID: <01c201c2d171$86491000$6501a8c0@listy>

Hi,

I'm having a problem using the win32eventreactor, following the example
code. Here's the basic gist of the code in use:

from	twisted.internet.protocol	import	Factory
from	twisted.internet		import	reactor
from	twisted.internet		import	win32eventreactor
from	twisted.protocols.basic	import	LineReceiver


:: classes and stuff ::

win32eventreactor.install()

factory = myFactory()
reactor.listenTCP(1001,factory)
reactor.run()
sys.exit(0)

This generates an error message at the win32eventreactor.install() line:

    assert not sys.modules.has_key('twisted.internet.reactor'), \
AssertionError: reactor already installed

What am I missing?

Also, any ideas why SIGBREAK appears to be ignored?  I've tweaked the
source here and there to generate debugging info, and from what I can
see, the reactor isn't even hitting the SIGBREAK handler that is
installed with signal.signal()
(default.PosixReactorBase._handleSignals()).  I've worked around it
temporarilly by commenting out the SIGBREAK handler install, but I'm
sure there's a better solution :-)

Win2000sp3, Python 2.2, Twisted 1.0.2, FWIW.





From dave at krondo.com  Mon Feb 10 21:04:56 2003
From: dave at krondo.com (Dave Peticolas)
Date: 10 Feb 2003 18:04:56 -0800
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <01c201c2d171$86491000$6501a8c0@listy>
References: <01c201c2d171$86491000$6501a8c0@listy>
Message-ID: <1044929096.1165.102.camel@oneiros>

On Mon, 2003-02-10 at 18:01, Jeff Grimmett wrote:
> Hi,
> 
> I'm having a problem using the win32eventreactor, following the example
> code. Here's the basic gist of the code in use:
> 
> from	twisted.internet.protocol	import	Factory
> from	twisted.internet		import	reactor
> from	twisted.internet		import	win32eventreactor
> from	twisted.protocols.basic	import	LineReceiver
> 
> 
> :: classes and stuff ::
> 
> win32eventreactor.install()
> 
> factory = myFactory()
> reactor.listenTCP(1001,factory)
> reactor.run()
> sys.exit(0)
> 
> This generates an error message at the win32eventreactor.install() line:
> 
>     assert not sys.modules.has_key('twisted.internet.reactor'), \
> AssertionError: reactor already installed
> 
> What am I missing?

Try importing the win32 reactor first and then immediately
installing it:

from	twisted.internet		import	win32eventreactor
win32eventreactor.install()

from	twisted.internet		import	reactor


dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030210/db62c784/attachment.pgp 

From andrew-twisted at puzzling.org  Mon Feb 10 21:41:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 13:41:15 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044928876.24461.10.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade>
Message-ID: <20030211024115.GE16336@frobozz.local>

On Tue, Feb 11, 2003 at 03:01:26PM +1300, Rob Brown-Bayliss wrote:
> 
> Hi - Help!
> 
> I have begun looking at twisted and imediatly became overwelmed,
> factories, reactors, taps, enterprise, web, spread...  
> 
> There is a lot, but every article I have read on the site seems to rely
> on the reader understanding what several of these are and how they
> relate and why they relate etc etc.

Yes, this is a well-known problem.  The docs are improving, but aren't
perfect yet.  Hopefully the glossary at
    http://twistedmatrix.com/documents/howto/glossary
can help you get a one-sentence description of all the wacky terms, so you
can figure out what's relevant to you.

If you have the time, I'd strongly recommend reading all of docs in these
chapters: "The Basics", "High-Level Twisted", "Low-Level Twisted".

> So I am guessing that twisted can be of use to me, I am embarking on a
> GTK2 style app, and I see twisted can some how interact with the gtk
> mainloop.

Try looking in doc/examples/ -- there should be some simple gtk/gtk2
examples in there.

> My project consists of several client apps that continual send and
> recieve data from the main control app.  Some of the clients may be on
> the same machine as the control app, some on other machines depending on
> location.  
> 
> Some times the control app needs to send the same information to all
> apps togeather and some times only to one or two clients.
> 
> I had been looking at spread (not twisted spread) for this
> functionality, and it can be of use, but can twisted provide a better
> solution or is spread better suited to this sort of application?

This sounds like something Twisted would be good at.

> More importantly could some one provide me with a pointer to a basic
> gtk2 client server setup as a starting point for my exploration?

The GUI bits are a little under-documented.  There's not much beyond what's
in the docstrings, doc/examples, and a brief snippet in
http://twistedmatrix.com/documents/howto/choosing-reactor.

-Andrew.




From grimmtooth at softhome.net  Mon Feb 10 21:40:55 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Mon, 10 Feb 2003 21:40:55 -0500
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <1044929096.1165.102.camel@oneiros>
Message-ID: <01c801c2d177$013c7d10$6501a8c0@listy>


> Try importing the win32 reactor first and then immediately 
> installing it:
> 
> from	twisted.internet		import	win32eventreactor
> win32eventreactor.install()
> 
> from	twisted.internet		import	reactor

I was just getting ready to try that ;-)

It works!

This would be an *excellent* thing to put into the 'Choosing a reactor'
docs. Almost put me over the wall :-)

Thanks!




From eenge at prium.net  Mon Feb 10 15:37:22 2003
From: eenge at prium.net (Erik Enge)
Date: Mon, 10 Feb 2003 15:37:22 -0500
Subject: [Twisted-Python] Twisted performance.
Message-ID: <87isvrrhx9.fsf@prium.net>

Hi all.

So, I'm wondering if Twisted can handle /really/ heavy load.  I was
reading the archives and I couldn't really find many threads on it
(actually, just one, and it didn't give me what I wanted).

Does anybody out there have any stories to tell about thousands of
persistent connections or hundreds of megabytes of throughput?  I'm
particularly interested in how many connections per second your Twisted
application can handle and, obviously, what hardware you are running it
on.

Thanks,

Erik.




From rob at zoism.org  Mon Feb 10 22:59:49 2003
From: rob at zoism.org (Rob Brown-Bayliss)
Date: 11 Feb 2003 16:59:49 +1300
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211024115.GE16336@frobozz.local>
References: <1044928876.24461.10.camel@caspian.everglade>
	 <20030211024115.GE16336@frobozz.local>
Message-ID: <1044935987.24502.19.camel@caspian.everglade>

> Yes, this is a well-known problem.  The docs are improving, but aren't
> perfect yet.  Hopefully the glossary at
>     http://twistedmatrix.com/documents/howto/glossary
> can help you get a one-sentence description of all the wacky terms, so you
> can figure out what's relevant to you.

And I still dont get it, am I supposed to use twisted as a base class
for my app, derive a class for my comunication or what?

Every thing seems to link on to something else, deffereds, it's own web
servewr etc, it seems like it's a joke, or if not then certianly
overkill for sending data over sockets.

Yet at the same time it seems to say "This is what you need Rob, Twisted
it is"

So do where do I start a GUI app, with pygtk and import some object
based on a factory/reactor setup?  And what is the point of tap's?  why
not just run the python code as I would any other code?  why would I
want to change reactors at startup?

It just seems to defy logic, where as useing pythonx xml-rpc or the
spread module is simple and obvious, 


-- 

*  Rob Brown-Bayliss
*  =================	
*      zoism.org



From twisted at itamarst.org  Mon Feb 10 23:54:15 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 10 Feb 2003 23:54:15 -0500
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <01c201c2d171$86491000$6501a8c0@listy>
References: <417403503.20030211030402@uch.net>
	<01c201c2d171$86491000$6501a8c0@listy>
Message-ID: <20030210235415.474c70c1.twisted@itamarst.org>

On Mon, 10 Feb 2003 21:01:42 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> This generates an error message at the win32eventreactor.install()
> line:
> 
>     assert not sys.modules.has_key('twisted.internet.reactor'), \
> AssertionError: reactor already installed
> 
> What am I missing?

win32eventreactor.install() should be the *first* thing in your module
or app. It has to be run before any other code is, or someone might
"from twisted.internet import reactor", which installs the default
reactor.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at itamarst.org  Tue Feb 11 00:07:16 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 00:07:16 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade>
	<20030211024115.GE16336@frobozz.local>
	<1044935987.24502.19.camel@caspian.everglade>
Message-ID: <20030211000716.1426f839.twisted@itamarst.org>

On 11 Feb 2003 16:59:49 +1300
Rob Brown-Bayliss <rob at zoism.org> wrote:

> Every thing seems to link on to something else, deffereds, it's own
> web servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.

You don't need to use the web server.

> Yet at the same time it seems to say "This is what you need Rob,
> Twisted it is"

The point is Twisted does networking. From low level to high level, it
has what you need. But you can ignore most of the bits that aren't
relevant.

> And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?

TAPs are not required, they are optional. Choosing a reactor is how you
decide to use e.g. the GTK+ event loop instead of the default one.

> It just seems to defy logic, where as useing pythonx xml-rpc or the
> spread module is simple and obvious, 

Using any part of twisted is simple. Trying to understand all of it at
once is not. Which is a problem.

Maybe looking through some examples will help:
http://www.twistedmatrix.com/documents/examples/pbgtk.py is a sample app
using GTK and PB.



From simon at obsidian.com.au  Tue Feb 11 00:09:36 2003
From: simon at obsidian.com.au (Simon Hookway)
Date: 11 Feb 2003 16:09:36 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade>
	 <20030211024115.GE16336@frobozz.local>
	 <1044935987.24502.19.camel@caspian.everglade>
Message-ID: <1044940176.638.13.camel@aoba>

Well, i may be wrong, but then hopefully someone will correct me and
i'll learn too. So here's my 2 cents.

It is rather daunting, i agree. I've built a python/gtk2 app myself
(actually still in the process) using twisted pb. Why, because it
allowed me to call remote methods on the server from an authenticated
client process. Since i already had the methods and a CLI for my app
this was great. I just built a gtk2 interface and made hooks for calling
remote methods, then callbacks to handle the returned data object and
update the gtk2 interface.

The reactor, as i understand it is to hook into the mainloop, since I
needed twisted to hook into the gtk mainloop you have to import the gtk2
reator and install it, otherwise twisteds mainloop reactor takes over
and there's no interaction between twisted and gtk.

Of course, i don't install the gtk2 reactor in my server process, the
normal one is fine.

I chose the pb because it allowed me an easy way to auth clients. On
this issue, i've tried and failed to use SSL for pb auth connections,
can anyone give me quick example of doing a pb auth session using SSL?

I'd be happy to share some of my code if that'll help..

Cheers,

Simon

On Tue, 2003-02-11 at 14:59, Rob Brown-Bayliss wrote:
> > Yes, this is a well-known problem.  The docs are improving, but aren't
> > perfect yet.  Hopefully the glossary at
> >     http://twistedmatrix.com/documents/howto/glossary
> > can help you get a one-sentence description of all the wacky terms, so you
> > can figure out what's relevant to you.
> 
> And I still dont get it, am I supposed to use twisted as a base class
> for my app, derive a class for my comunication or what?
> 
> Every thing seems to link on to something else, deffereds, it's own web
> servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.
> 
> Yet at the same time it seems to say "This is what you need Rob, Twisted
> it is"
> 
> So do where do I start a GUI app, with pygtk and import some object
> based on a factory/reactor setup?  And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?
> 
> It just seems to defy logic, where as useing pythonx xml-rpc or the
> spread module is simple and obvious, 
-- 
Simon Hookway <simon at obsidian.com.au>



From kwaker at uch.net  Tue Feb 11 00:15:26 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 07:15:26 +0200
Subject: [Twisted-Python] Is there any SOCKS client example
Message-ID: <722490538.20030211071526@uch.net>

Hello Twisted-Python,

I've found only Socks4 server implementation in protocols/socks4.py
And it seems that there is no Socks4 client inside. Should I look
better?

Okay, I know where to look for Socks5 and HTTP tunneling proxy RFC and
can implement them (client parts), but how can I do that if I even
don't understand how socks client works :)

Also is there any client example that wraps any service - http, smtp,
oscar etc inside socks session? No example, no documentation. Got any
clues?

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From twisted at itamarst.org  Tue Feb 11 00:18:25 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 00:18:25 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044940176.638.13.camel@aoba>
References: <1044928876.24461.10.camel@caspian.everglade>
	<20030211024115.GE16336@frobozz.local>
	<1044935987.24502.19.camel@caspian.everglade>
	<1044940176.638.13.camel@aoba>
Message-ID: <20030211001825.0ede0f4b.twisted@itamarst.org>

On 11 Feb 2003 16:09:36 +1100
Simon Hookway <simon at obsidian.com.au> wrote:

> I chose the pb because it allowed me an easy way to auth clients. On
> this issue, i've tried and failed to use SSL for pb auth connections,
> can anyone give me quick example of doing a pb auth session using SSL?

Making this easy to do is on our TODO list for our coding sprint at
PyCon, if it's not done before that.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From kwaker at uch.net  Tue Feb 11 00:19:23 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 07:19:23 +0200
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <20030211020602.GD16336@frobozz.local>
References: <963376329.20030211015655@uch.net>
 <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
 <20030211020602.GD16336@frobozz.local>
Message-ID: <2322726827.20030211071923@uch.net>

Hello Andrew,

Tuesday, February 11, 2003, 4:06:02 AM, you wrote:

AB> On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
>> need to support 2.1.  As far as I know, we need to have full support 
>> for 2.1 as long as Zope requires it.

AB> And also many systems still only have 2.1, e.g. Debian stable (woody).

Okay, next question. I am highly interested in non-standard control
flow in Python, which was implemented in stackless python, which
(stackless python I mean) seems to be discontinued or at least very
slowly updated. Does anyone know when will these appear in standard
Python.

These control flows seem to make things much simpler.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From bob at redivi.com  Tue Feb 11 00:22:24 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 11 Feb 2003 00:22:24 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
Message-ID: <CD4EAE49-3D80-11D7-B1B3-000A95686CD8@redivi.com>

On Monday, Feb 10, 2003, at 22:59 America/New_York, Rob Brown-Bayliss 
wrote:

>
>> Yes, this is a well-known problem.  The docs are improving, but aren't
>> perfect yet.  Hopefully the glossary at
>>     http://twistedmatrix.com/documents/howto/glossary
>> can help you get a one-sentence description of all the wacky terms, 
>> so you
>> can figure out what's relevant to you.
>
> And I still dont get it, am I supposed to use twisted as a base class
> for my app, derive a class for my comunication or what?

Well instead of starting the GUI's runloop, you'd start the Twisted 
runloop (which, if a proper reactor is installed, would start and run 
both).

> Every thing seems to link on to something else, deffereds, it's own web
> servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.

The web server is just a class, you don't have to actually instantiate 
it.  Deferreds are a "promise" to return a result, when you get a 
deferred as the result of a method, it means that the operation you 
requested is going to take "a while", so you register a callback with 
the Deferred instance and you will get the result of that operation 
later on.  This prevents your application from blocking, waiting for 
that one thing to happen.  It lets you do however many (selectable) 
things you want in parallel without using threads, but it does force 
you to write code differently to accommodate this feature -- although 
you can get around some of that if you use generators, but none of that 
is in the twisted core as generators are not in python 2.1.

> Yet at the same time it seems to say "This is what you need Rob, 
> Twisted
> it is"
>
> So do where do I start a GUI app, with pygtk and import some object
> based on a factory/reactor setup?  And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?

taps are to simplify running daemons, you don't need them for anything. 
  I don't use them for anything myself.

A reactor handles the runloop, if you want to integrate two runloops 
(i.e. the GTK runloop and the twisted runloop) you'll have to install a 
reactor that knows how to do that.  The default reactor expects to run 
by itself.

(/me checks email) - Well, it seems that itamar and simon have covered 
most of this already, so I'll just cut this here.

-bob




From andrew-twisted at puzzling.org  Tue Feb 11 00:35:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 16:35:38 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade> <20030211024115.GE16336@frobozz.local> <1044935987.24502.19.camel@caspian.everglade>
Message-ID: <20030211053538.GF16336@frobozz.local>

On Tue, Feb 11, 2003 at 04:59:49PM +1300, Rob Brown-Bayliss wrote:
> 
> > Yes, this is a well-known problem.  The docs are improving, but aren't
> > perfect yet.  Hopefully the glossary at
> >     http://twistedmatrix.com/documents/howto/glossary
> > can help you get a one-sentence description of all the wacky terms, so you
> > can figure out what's relevant to you.
> 
> And I still dont get it, am I supposed to use twisted as a base class
> for my app, derive a class for my comunication or what?

Ah, right :)

Have a look at doc/examples/echoserv.py.  It's about as simple as a Twisted
server can get.

To answer a question, Twisted is a framework.  It's not so much a library
that you inherit a class or two from, but framework to build your
application upon.  Specifically, Twisted drives your application: *Twisted*
controls the event loop, *Twisted* calls your application code.  Not the
other way around.

> Every thing seems to link on to something else, deffereds, it's own web
> servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.

That's a natural by-product of Twisted being a framework, unfortunately;
it's hard to take-or-leave each individual piece, you basically have to take
the whole framework or none of it.

> Yet at the same time it seems to say "This is what you need Rob, Twisted
> it is"

Well, we hope so :)  It really is a kick-arse framework :)

> So do where do I start a GUI app, with pygtk and import some object
> based on a factory/reactor setup?  And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?

Every single one of those questions should be added to the FAQ!  Well asked
:)

Here's a brief walk-through of using the pbgtk example, which demonstrates
using both PB (Perspective Broker, our remote object protocol), and the GTK
reactor:
   $ cd ~/cvs/Twisted/doc/examples
   $ python pbecho.py
   $ twistd -n -f pbecho-start.tap

That's started the PB Echo server.  Now, to run the PB gtk client, from a
different command prompt do this:
   $ python doc/examples/pbgtk.py

The code in those example files is sadly almost uncommented, though :(

The point of taps, and thus the mktap & twistd utilities, is a convenient
way to manage servers; I personally find them a distraction when I'm
developing a new system, and ignore them until want to deploy something...
(and sometimes I just ignore then completely).  Many developers love them.
I suspect I eventually will, too ;)

Basically the only reason to change reactors is if you need GUI support.
Otherwise, the default reactor is almost certainly the best choice.

> It just seems to defy logic, where as useing pythonx xml-rpc or the
> spread module is simple and obvious, 

The reason for this is simple.  Twisted is asynchronous.

This means you can't just pop open an interactive python interpreter,
instantiate something, and away you go.  It means you can't just write some
code, subclass a bit of Twisted, and have magic happen.  It means that
Twisted is the framework, and you have to work within its facilities.

The problem is that you can't do anything that blocks, and that Twisted
controls the event loop.  You can work with that interactively, though, if
you know how:
    >>> def foo(x):
    ...     print 'Hello!', x
    ...         
    >>> from twisted.internet import reactor
    >>> reactor.callLater(0, foo, 'Spam...')
    <twisted.internet.base.DelayedCall instance at 0x824c9f4>
    >>> reactor.iterate()
    Hello! Spam...
    >>> 

But basically, you can't look at Twisted as something you can just bolt-on
to an existing code-base.  It's more fundamental than that, and it will
almost certainly mean restructuring code.  Again, this is why it's a
"framework" and not just a "library".

The good news is that the framework Twisted provides is the sort of thing
any socket server program needs to do anyway, but almost certainly better
written than just a home-brew version.  And being asynchronous is actually
an advantage once you get used to it (in my opinion).

Finally, the best source of documentation in many ways is still the irc
channel, #twisted on irc.freenode.net.  We're usually very responsive to
newbie questions.

-Andrew.




From bob at redivi.com  Tue Feb 11 00:32:25 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 11 Feb 2003 00:32:25 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <2322726827.20030211071923@uch.net>
Message-ID: <33914B9E-3D82-11D7-B1B3-000A95686CD8@redivi.com>


On Tuesday, Feb 11, 2003, at 00:19 America/New_York, Dmitry Litovchenko 
wrote:

> Hello Andrew,
>
> Tuesday, February 11, 2003, 4:06:02 AM, you wrote:
>
> AB> On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
>>> need to support 2.1.  As far as I know, we need to have full support
>>> for 2.1 as long as Zope requires it.
>
> AB> And also many systems still only have 2.1, e.g. Debian stable 
> (woody).
>
> Okay, next question. I am highly interested in non-standard control
> flow in Python, which was implemented in stackless python, which
> (stackless python I mean) seems to be discontinued or at least very
> slowly updated. Does anyone know when will these appear in standard
> Python.
>
> These control flows seem to make things much simpler.

They can make some things easier or more efficient, I tend to use them 
when they make sense.. here's some code I was toying with, it uses 
generators in twisted, doesn't let you do much that you can't do with 
callback chains, but it (possibly) makes some of it a lot more 
straightforward.

-bob

-------------- next part --------------
A non-text attachment was scrubbed...
Name: flow.py
Type: application/octet-stream
Size: 5720 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030211/cfb15cb3/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: flowexample.py
Type: application/octet-stream
Size: 5637 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030211/cfb15cb3/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_flow.py
Type: application/octet-stream
Size: 2284 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030211/cfb15cb3/attachment-0002.obj 

From twisted at itamarst.org  Tue Feb 11 00:43:44 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 00:43:44 -0500
Subject: [Twisted-Python] Is there any SOCKS client example
In-Reply-To: <722490538.20030211071526@uch.net>
References: <722490538.20030211071526@uch.net>
Message-ID: <20030211004344.15f7ff4f.twisted@itamarst.org>

On Tue, 11 Feb 2003 07:15:26 +0200
Dmitry Litovchenko <kwaker at uch.net> wrote:

> I've found only Socks4 server implementation in protocols/socks4.py
> And it seems that there is no Socks4 client inside. Should I look

There is no socks4 client. You'll have to write one, which is pretty
easy.

You can pretty easily hook it up so you can do:
SOCKSclient.connectTCP(..) and .listenTCP(..) with the new
connectWith/listenWith reactor API that's in CVS.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at moshez.org  Tue Feb 11 01:35:20 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 06:35:20 -0000
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <CD4EAE49-3D80-11D7-B1B3-000A95686CD8@redivi.com>
References: <CD4EAE49-3D80-11D7-B1B3-000A95686CD8@redivi.com>
Message-ID: <20030211063520.13647.qmail@green.zadka.com>

On Tue, 11 Feb 2003, Bob Ippolito <bob at redivi.com> wrote:

> taps are to simplify running daemons, you don't need them for anything. 
>   I don't use them for anything myself.

I want to explain why taps are useful: Twisted is a Python framework. However,
we want non-Python-literate people to be able to use parts of it (such as
the Web server or the SSH server) without having to learn Python. One way
would have been to write seperate applications: "runTwistedWeb", etc. etc.,
polluting bin. Another way is to use the plugin mechanism to completely
divorce flexible configuration via command-line arguments (mktap) from
running and choosing a reactor (twistd). While it is completely possible
to use twistd with just Python code, naive users will find it easier
to create a tap and then run it.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From bob at redivi.com  Tue Feb 11 03:09:05 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 11 Feb 2003 03:09:05 -0500
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <20030211063520.13647.qmail@green.zadka.com>
Message-ID: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>

On Tuesday, Feb 11, 2003, at 01:35 America/New_York, Moshe Zadka wrote:

> On Tue, 11 Feb 2003, Bob Ippolito <bob at redivi.com> wrote:
>
>> taps are to simplify running daemons, you don't need them for 
>> anything.
>>   I don't use them for anything myself.
>
> I want to explain why taps are useful: Twisted is a Python framework. 
> However,
> we want non-Python-literate people to be able to use parts of it (such 
> as
> the Web server or the SSH server) without having to learn Python. One 
> way
> would have been to write seperate applications: "runTwistedWeb", etc. 
> etc.,
> polluting bin. Another way is to use the plugin mechanism to completely
> divorce flexible configuration via command-line arguments (mktap) from
> running and choosing a reactor (twistd). While it is completely 
> possible
> to use twistd with just Python code, naive users will find it easier
> to create a tap and then run it.

and naive developers will be confused by the whole thing.. I know it 
took me longer to pick up twisted at first because all of the examples 
were tap based, and not just python code.  However, twisted and its 
documentation are a lot farther along these days, so it might be 
different for a new developer now.

-bob




From wilk-ml at flibuste.net  Tue Feb 11 06:02:59 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 11 Feb 2003 12:02:59 +0100
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <87d6lzrsf0.fsf@flibuste.net>

Bob Ippolito <bob at redivi.com> writes:

> On Tuesday, Feb 11, 2003, at 01:35 America/New_York, Moshe Zadka wrote:
> 
> > On Tue, 11 Feb 2003, Bob Ippolito <bob at redivi.com> wrote:
> >
> >> taps are to simplify running daemons, you don't need them for
> >> anything.
> >>   I don't use them for anything myself.
> >
> > I want to explain why taps are useful: Twisted is a Python
> > framework. However,
> > we want non-Python-literate people to be able to use parts of it
> > (such as
> > the Web server or the SSH server) without having to learn
> > Python. One way
> > would have been to write seperate applications: "runTwistedWeb",
> > etc. etc.,
> > polluting bin. Another way is to use the plugin mechanism to completely
> > divorce flexible configuration via command-line arguments (mktap) from
> > running and choosing a reactor (twistd). While it is completely
> > possible
> > to use twistd with just Python code, naive users will find it easier
> > to create a tap and then run it.
> 
> and naive developers will be confused by the whole thing.. I know it
> took me longer to pick up twisted at first because all of the examples
> were tap based, and not just python code.  However, twisted and its
> documentation are a lot farther along these days, so it might be
> different for a new developer now.

So, is there an example of a web server without using tap and twistd
command line ?
I would like to make a web server that could be embed in an .exe with
py2exe. Like i do now with a litle hack of CGIHTTPServer...

For this i would like also to don't use .rpy script of the file system,
but just do myself the link between uri and my own scripts...

thanks

-- 
William Dode - http://flibuste.net



From twisted at moshez.org  Tue Feb 11 06:16:53 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 11:16:53 -0000
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <87d6lzrsf0.fsf@flibuste.net>
References: <87d6lzrsf0.fsf@flibuste.net>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <20030211111653.18307.qmail@green.zadka.com>

On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> So, is there an example of a web server without using tap and twistd
> command line ?

'''
from twisted.web import server, static
from twisted.internet import reactor

root = static.Data("hello world", "text/plain")
root.putChild('', root)
# root.putChild('name-of-my-script', myScriptResource)
site = server.Site(root)
reactor.listenTCP(10998, root)
reactor.run()
'''

> I would like to make a web server that could be embed in an .exe with
> py2exe.

No, you wouldn't.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From andrew-twisted at puzzling.org  Tue Feb 11 06:47:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 22:47:02 +1100
Subject: [Twisted-Python] Possible non-Twisted use-cases for Trial?
Message-ID: <20030211114702.GA16924@frobozz.local>

http://advogato.org/person/follower/diary.html?start=31

Sounds like we're not the only one augmenting/supplanting pyunit...

-Andrew.




From radix at twistedmatrix.com  Tue Feb 11 07:02:39 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 11 Feb 2003 07:02:39 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211053538.GF16336@frobozz.local>
References: <1044928876.24461.10.camel@caspian.everglade> <20030211024115.GE16336@frobozz.local> <1044935987.24502.19.camel@caspian.everglade> <20030211053538.GF16336@frobozz.local>
Message-ID: <20030211120239.GA2557@radii>

On Tue, Feb 11, 2003 at 04:35:38PM +1100, Andrew Bennetts wrote:
> On Tue, Feb 11, 2003 at 04:59:49PM +1300, Rob Brown-Bayliss wrote:
> > Every thing seems to link on to something else, deffereds, it's own web
> > servewr etc, it seems like it's a joke, or if not then certianly
> > overkill for sending data over sockets.
> 
> That's a natural by-product of Twisted being a framework, unfortunately;
> it's hard to take-or-leave each individual piece, you basically have to take
> the whole framework or none of it.

I really don't like how this was answered :) You _don't_ need to take
the entire framework; e.g., you don't need to import the web server,
mail server, etc, unless you want to use them. Deferreds are an
important fundamental thing in Twisted, however; they're one of the
basic abstractions that we use a *lot* in asynchronous
programming. Also, there's nothing stopping someone from tearing apart
Twisted and distributing only the parts they need with their
applications, web server be damned. ;-)

Also, I should note the package layout: twisted.internet is the very
basic stuff that your Twisted app will never be
without. twisted.python has a lot of utilities that twisted.internet
and other packages use. twisted.protocols gives you all the basic
protocol support. These three packages are the most fundamental to
Twisted. The rest are mainly application-level packages.

In addition to these, though, it sounds like Rob will also want to use
twisted.spread (and twisted.cred) for his application. Most of the
rest is unneeded.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From wilk-ml at flibuste.net  Tue Feb 11 07:07:37 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 11 Feb 2003 13:07:37 +0100
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <20030211111653.18307.qmail@green.zadka.com>
References: <87d6lzrsf0.fsf@flibuste.net>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211111653.18307.qmail@green.zadka.com>
Message-ID: <878ywnrpfa.fsf@flibuste.net>

Moshe Zadka <twisted at moshez.org> writes:

> On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > So, is there an example of a web server without using tap and twistd
> > command line ?
> 
> '''
> from twisted.web import server, static
> from twisted.internet import reactor
> 
> root = static.Data("hello world", "text/plain")
> root.putChild('', root)
> # root.putChild('name-of-my-script', myScriptResource)
> site = server.Site(root)
> reactor.listenTCP(10998, root)
> reactor.run()
> '''

thanks, it's a good starting point for me. I can begin to work !

just that it did'nt work like that :

Traceback (most recent call last):
  File "<stdin>", line 8, in ?
  File "/usr/lib/python2.1/site-packages/twisted/internet/default.py", line 232, in listenTCP
    p.startListening()
  File "/usr/lib/python2.1/site-packages/twisted/internet/tcp.py", line 398, in startListening
    self.factory.doStart()
AttributeError: Data instance has no attribute 'doStart'

but i did (is it a good way ?) :

import twisted.web.resource
class MyGreatResource(twisted.web.resource.Resource):
    def render(self, request):
        request.write(request.uri)
	request.write("<br>")
        request.write("%s<form method=post><input type=text name=vvv><input type=submit></form>"%(str(request.args)))
    	return ""

    def isLeaf(self):
        return true

resource = MyGreatResource()

from twisted.internet import app
from twisted.web import static, server, vhost, twcgi, script, trp

site = server.Site(resource)
application = app.Application('web')
application.listenTCP(10999, site)
application.run()

> 
> > I would like to make a web server that could be embed in an .exe with
> > py2exe.
> 
> No, you wouldn't.

why ?

-- 
William Dode - http://flibuste.net



From radix at twistedmatrix.com  Tue Feb 11 07:08:02 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 11 Feb 2003 07:08:02 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <2322726827.20030211071923@uch.net>
References: <963376329.20030211015655@uch.net> <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com> <20030211020602.GD16336@frobozz.local> <2322726827.20030211071923@uch.net>
Message-ID: <20030211120802.GB2557@radii>

On Tue, Feb 11, 2003 at 07:19:23AM +0200, Dmitry Litovchenko wrote:
> Hello Andrew,
> 
> Tuesday, February 11, 2003, 4:06:02 AM, you wrote:
> 
> AB> On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
> >> need to support 2.1.  As far as I know, we need to have full support 
> >> for 2.1 as long as Zope requires it.
> 
> AB> And also many systems still only have 2.1, e.g. Debian stable (woody).
> 
> Okay, next question. I am highly interested in non-standard control
> flow in Python, which was implemented in stackless python, which
> (stackless python I mean) seems to be discontinued or at least very
> slowly updated. Does anyone know when will these appear in standard
> Python.

They're never going to, afaik. Stackless isn't discontinued, though;
in fact, the author is still being funded for development, last I
checked.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From nbm at mithrandr.moria.org  Tue Feb 11 07:28:05 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Tue, 11 Feb 2003 14:28:05 +0200
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <87d6lzrsf0.fsf@flibuste.net>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <87d6lzrsf0.fsf@flibuste.net>
Message-ID: <20030211122805.GC75769@mithrandr.moria.org>

On Tue 2003-02-11 (12:02), William Dode wrote:
> So, is there an example of a web server without using tap and twistd
> command line ?
> I would like to make a web server that could be embed in an .exe with
> py2exe. Like i do now with a litle hack of CGIHTTPServer...
> 
> For this i would like also to don't use .rpy script of the file system,
> but just do myself the link between uri and my own scripts...

I've used Installer (http://www.mcmillan-inc.com/install1.html) with
Twisted successfully.  This was on FreeBSD, but I'm sure it'd work just
fine on Windows.

pbweb.py is an web example that doesn't use tap/twistd.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From m at moshez.org  Tue Feb 11 07:28:32 2003
From: m at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 12:28:32 -0000
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <878ywnrpfa.fsf@flibuste.net>
References: <878ywnrpfa.fsf@flibuste.net>, <87d6lzrsf0.fsf@flibuste.net>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211111653.18307.qmail@green.zadka.com>
Message-ID: <20030211122832.4004.qmail@green.zadka.com>

On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> > '''
> > from twisted.web import server, static
> > from twisted.internet import reactor
> > 
> > root = static.Data("hello world", "text/plain")
> > root.putChild('', root)
> > # root.putChild('name-of-my-script', myScriptResource)
> > site = server.Site(root)
> > reactor.listenTCP(10998, root)
                             ^^^^ should have been "site", sorry"
> > reactor.run()
> > '''

> from twisted.internet import app
> from twisted.web import static, server, vhost, twcgi, script, trp
> 
> site = server.Site(resource)
> application = app.Application('web')
> application.listenTCP(10999, site)
> application.run()

why use Application if you're not interested in the benefits? Just use
plain reactor.

> > > I would like to make a web server that could be embed in an .exe with
> > > py2exe.
> > 
> > No, you wouldn't.
> 
> why ?

Because that huge .exe is unportable and would include all of Twisted
inside it. Wouldn't it be saner to just package Twisted with your application,
as well as Python, for those who want it, and let a smaller download, with
just your stuff, for those who can actually manage to do three clicks?
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From abe at fettig.net  Tue Feb 11 10:46:50 2003
From: abe at fettig.net (Abe Fettig)
Date: 11 Feb 2003 10:46:50 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211000716.1426f839.twisted@itamarst.org>
References: <1044928876.24461.10.camel@caspian.everglade>
	 <20030211024115.GE16336@frobozz.local>
	 <1044935987.24502.19.camel@caspian.everglade>
	 <20030211000716.1426f839.twisted@itamarst.org>
Message-ID: <1044978409.945.46.camel@mingus>

On Tue, 2003-02-11 at 00:07, Itamar Shtull-Trauring wrote:
> On 11 Feb 2003 16:59:49 +1300
> Rob Brown-Bayliss <rob at zoism.org> wrote:
> 
> Using any part of twisted is simple. Trying to understand all of it at
> once is not. Which is a problem.
> 
> Maybe looking through some examples will help:
> http://www.twistedmatrix.com/documents/examples/pbgtk.py is a sample app
> using GTK and PB.

If I may chime in here - In my experience it's really hard to start with
sample code that uses lots of foreign concepts.  Perspective Broker is a
lot to get your head around if you don't have any experience with
Twisted.  I think it's easier to look at sample code that does something
you already understand.  For example:

documents/examples/pytserv.py - a telnet server

documents/examples/ircLogBot.py - an IRC client that writes channel
events to a file

documents/examples/xmlrpc.py - an XML-RPC server

documents/examples/simpledns.py - a DNS lookup example (nice basic
example of deferreds)

documents/examples/simpleserv.py
documents/example/simpleclient.py - very simple client and server using
a homemade protocol

These examples show how to use Twisted to do the kinds of tasks
programmers may already be familiar with, in just a few lines of code.


Abe




From wilk-ml at flibuste.net  Tue Feb 11 11:46:31 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 11 Feb 2003 17:46:31 +0100
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <20030211122832.4004.qmail@green.zadka.com>
References: <878ywnrpfa.fsf@flibuste.net> <87d6lzrsf0.fsf@flibuste.net>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211111653.18307.qmail@green.zadka.com>
	<20030211122832.4004.qmail@green.zadka.com>
Message-ID: <87znp2rcig.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > > '''
> > > from twisted.web import server, static
> > > from twisted.internet import reactor
> > > 
> > > root = static.Data("hello world", "text/plain")
> > > root.putChild('', root)
> > > # root.putChild('name-of-my-script', myScriptResource)
> > > site = server.Site(root)
> > > reactor.listenTCP(10998, root)
>                              ^^^^ should have been "site", sorry"
> > > reactor.run()
> > > '''
> 
> > from twisted.internet import app
> > from twisted.web import static, server, vhost, twcgi, script, trp
> > 
> > site = server.Site(resource)
> > application = app.Application('web')
> > application.listenTCP(10999, site)
> > application.run()
> 
> why use Application if you're not interested in the benefits? Just use
> plain reactor.

yes, i knew that it was possible...

> 
> > > > I would like to make a web server that could be embed in an .exe with
> > > > py2exe.
> > > 
> > > No, you wouldn't.
> > 
> > why ?
> 
> Because that huge .exe is unportable and would include all of Twisted
> inside it. Wouldn't it be saner to just package Twisted with your application,
> as well as Python, for those who want it, and let a smaller download, with
> just your stuff, for those who can actually manage to do three clicks?

Finaly, i try it with your little example, and it work, i can make one
.exe with py2exe. Not so big : 800ko (maybe we can write it on the FAQ
?)

It want to include tk, i don't know why, but i can remove it
after... It's enough to me to know that it's possible.

thanks again, it's up to me now to study more twisted.

-- 
William Dode - http://flibuste.net



From glyph at twistedmatrix.com  Tue Feb 11 15:17:12 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 11 Feb 2003 14:17:12 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
References: <20030211063520.13647.qmail@green.zadka.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <20030211.141712.59648863.glyph@twistedmatrix.com>


I suppose, as the man who foisted TAPs on the world, I should answer for my
sins, or at least explain them.  I still feel bad about TAPs in general,
because they're not nearly as good as they could have been, but I still feel
strongly that they're better than nothing.

On Tue, 11 Feb 2003 03:09:05 -0500, Bob Ippolito <bob at redivi.com> wrote:

> taps are to simplify running daemons.  you don't need them for anything.

TAPs are for lots of things: simplifying running daemons is the most trivial
example.  Even when the documentation was a lot worse, there is a good reason
that a lot of the examples describe starting with a TAP or outputting an
Application object manually.

Twisted is a very large and very featureful framework that has tried to
simultaneously provide tons of functionality for developers but still remain
user-focused.  Pretty much everyone involved in the core design aspect of TAPs
feels that they're sub-optimal, so you don't see much effective advocacy of
their use.

More to the point, to paraphrase PaulT from this article:

    http://www.pault.com/pault/zope/zope.html

"Even really bad integration is better than no integration."  TAPs are really
bad integration.  The worst thing about them is that there are places, such as
GUI clients, where they really can't apply (and thus we revert to 'no
integration').

However, TAPs at least produce an artifact that a user can understand, on some
level.  A file that contains a collection of "server" objects.  Some tools
exist (such as mktap --append) to manipulate that artifact, and it may itself
respond (if manhole is installed in it) to various kinds of manipulation.

These kinds of tools are the things that you don't notice very often as a
developer, as they come "for free" for doing things a certain way.  For
example, most GTK or MacOS X developers are unaware that emacs keybindings are
set by default, but they use the toolkit and they don't re-bind all the keys
immediately.

Certain apps that have to play by their own rules break things.  For instance,
Mozilla _does_ rebind all keys immediately, and you can tell, because their
emacs keys emulation used to be far less consistent, especially across
platforms.  There are a lot of users who don't care about this, and probably
most developers don't either.  When you put all the users who use all the weird
features together, though, you end up with almost everybody.

The same is true of most Twisted users, I would imagine: most people don't
invoke Manhole, or run with a wacky reactor, view the full mktap --help listing
and read all the available plugins, or append multiple services to one .tap
file.  However, the ability to do all of these things with (relative) ease is
collectively important.  As time goes on, we have been very slowly adding new
features and options that you can apply to any properly-built .tap.

There are a lot of reasons to use TAPs.  This is similar to the
embedding-vs-extending discussion, where I have made my opinion thoroughly
clear in the past:

    http://www.twistedmatrix.com/users/glyph/rant/extendit.html

If you structure your application around an mktap plugin, twistd is your
mainpoint, and you get all the advantages I list there of an externalized
mainpoint.

However...

There is a need in Twisted for a much better customization, monitoring,
integration, and configuration tool.  Think of the Zope management interface,
but for all protocols, not just web.  I have been discussing this with a few of
the core developers, and we're not quite sure where the time to do this is
going to come from yet, but it's clear that this needs to be done.

This is the successor to the current "COIL".  If things were implemented in
terms of plugins for _that_, you could write code which would show up as a
nicely formatted icon and description in a spiffy web interface rather than in
a text-based menu listing on the command line.  This would be an obvious
improvement for new developers coming to Twisted and wondering why the heck
they should bother with obtuse plugin stuff.

If you have some ideas for how such a thing might be implemented, or you have
some free time and this sounds interesting, I would love to spew more of my
ideas at you.  Our initial working model is going to be something like the
Naked Objects framework ( http://www.nakedobjects.org/ ) but I think that more
thought is necessary, especially for metrics display.  Web frontends also
present an interesting challenge, because it would be very difficult to mimic
the full flexibility of that graphical model.  

Until this becomes available, please stick with mktap when you can, 'cause it's
all we've got.  Luckily, some interest has been expressed by various people to
work on this over a sprint on or around PyCon, so this may be resolved sooner
than later.

> naive developers will be confused by the whole thing.. I know it took me
> longer to pick up twisted at first because all of the examples were tap
> based, and not just python code.  However, twisted and its documentation are
> a lot farther along these days, so it might be different for a new developer
> now.

I think that the documentation has progressed significantly since you
originally came to Twisted.  Let us praise the heroic efforts of Brian Warner,
Andrew Bennetts, and Moshe Zadka.  Lore is one of my favorite parts of Twisted
now, and I had hardly anything to do with it :).


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030211/a5b5edeb/attachment.pgp 

From m at moshez.org  Tue Feb 11 15:43:09 2003
From: m at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 20:43:09 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030211.141712.59648863.glyph@twistedmatrix.com>
References: <20030211.141712.59648863.glyph@twistedmatrix.com>, <20030211063520.13647.qmail@green.zadka.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <20030211204309.29092.qmail@green.zadka.com>

On Tue, 11 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> However, TAPs at least produce an artifact that a user can understand, on some
> level.  A file that contains a collection of "server" objects.  Some tools
> exist (such as mktap --append) to manipulate that artifact, and it may itself
> respond (if manhole is installed in it) to various kinds of manipulation.

Two additional value from taps:
- Stuff like t.w.static.File's Registry relies on it to work properly
- tap2deb: I realize my Debian bias is showing through, but having a
  no-work way for Debian users to make their Twisted server into something
  which is integrated with the init system is really valuable. (I have found
  this to my dissatisfaction when I had to integrate Twisted with an RH
  system)

> This is the successor to the current "COIL".  If things were implemented in
> terms of plugins for _that_, you could write code which would show up as a
> nicely formatted icon and description in a spiffy web interface rather than in
> a text-based menu listing on the command line.

This is the time to thank Jp Calderon for his quite spiffy tkmktap. Now,
even users afraid of the command-line can click on pretty buttons to
configure their application (now, if tkmktap had a button for
"run tap2deb and install resulting package", then it could be honestly
said that "on a Debian system, configuring Twisted servers can done
without opening a command-line, straight from the GNOME or KDE desktops".
Yes, we don't have that functionality right now: but considering how
close we are, this is certainly an argument in favour of TAPs.

> I think that the documentation has progressed significantly since you
> originally came to Twisted.

I agree: however, for the standard stuff: that is, the stuff plugin+servers
cover, I think the documentation has been decent for a looooong while.
If anyone thinks it isn't: well, it hasn't changed a lot in a long while,
that's for sure. I still feel that these are the basic douments that
"define" a Twisted programmer: you're a Twisted programmer, when you feel
as though you could have *written* those (same as you're a Python programmer
if you feel as though you could have written the tutorial). I did get
some complaints that these are hard to read. If anyone has suggestions
on how to make these two HOWTOs more approachable, please feel free to
tell me via e-mail or IRC. 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From kwaker at uch.net  Tue Feb 11 17:03:23 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Wed, 12 Feb 2003 00:03:23 +0200
Subject: [Twisted-Python] Is there any SOCKS client example
In-Reply-To: <20030211004344.15f7ff4f.twisted@itamarst.org>
References: <722490538.20030211071526@uch.net>
 <20030211004344.15f7ff4f.twisted@itamarst.org>
Message-ID: <16514860095.20030212000323@uch.net>

Hello Itamar,

Tuesday, February 11, 2003, 7:43:44 AM, you wrote:

>> I've found only Socks4 server implementation in protocols/socks4.py
>> And it seems that there is no Socks4 client inside. Should I look

IST> There is no socks4 client. You'll have to write one, which is pretty
IST> easy.

Does Twisted project need this code done? :) Will someone pick my modules
from this mail list and review (of course once I'm done)?

IST> You can pretty easily hook it up so you can do:
IST> SOCKSclient.connectTCP(..) and .listenTCP(..) with the new
IST> connectWith/listenWith reactor API that's in CVS.

Just got Twisted 1.0.3rc1 and connectWith seems to be already there.
Huge archive with little changes :( Anyway I will use it now.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From twisted at itamarst.org  Tue Feb 11 17:21:51 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 17:21:51 -0500
Subject: [Twisted-Python] Is there any SOCKS client example
In-Reply-To: <16514860095.20030212000323@uch.net>
References: <722490538.20030211071526@uch.net>
	<20030211004344.15f7ff4f.twisted@itamarst.org>
	<16514860095.20030212000323@uch.net>
Message-ID: <20030211172151.47200dfe.twisted@itamarst.org>

On Wed, 12 Feb 2003 00:03:23 +0200
Dmitry Litovchenko <kwaker at uch.net> wrote:

> Does Twisted project need this code done? :) Will someone pick my
> modules from this mail list and review (of course once I'm done)?

Yes and yes. Be sure to include tests, and to follow the coding
standard, that will make it easier for us and more likely to be included
without a problem. Alsoyou need to agree that the code will have joint
ownership of glyph (see doc/legal/ or something for accurate details).

Thanks!



From exarkun at intarweb.us  Tue Feb 11 18:10:09 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 11 Feb 2003 18:10:09 -0500
Subject: [Twisted-Python] Broken SSL
Message-ID: <20030211231009.GA19256@meson.dyndns.org>

  A couple places in Twisted use reactor.connectSSL().  They all seem to do
it incorrectly, as far as I can tell.  The two places I've noticed are
twisted/spread/pb.py:1152 and twisted/web/xmlrpc.py:257.  I'd fix them, but
I'm currently struggling to understand SSL myself, and only found them to be
in error in search of an example to learn from ;)

  Jp


-- 
|     This 
|   signature
| intentionally
|    8 lines
|     long.
|  (So sue me)
---
-- 
 up 3 days, 4:28, 7 users, load average: 0.00, 0.02, 0.12
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030211/54e18153/attachment.pgp 

From simon at obsidian.com.au  Tue Feb 11 18:26:57 2003
From: simon at obsidian.com.au (Simon Hookway)
Date: 12 Feb 2003 10:26:57 +1100
Subject: [Twisted-Python] Broken SSL
In-Reply-To: <20030211231009.GA19256@meson.dyndns.org>
References: <20030211231009.GA19256@meson.dyndns.org>
Message-ID: <1045006016.979.129.camel@aoba>

I've had the same problem, seems there's no easy way to use pb over SSL,
i've played with it a little but failed on the auth, not that i'm very
cluey on SSL either. Even a convoluted example would be great since i'm
having to use SSH tunneling atm to ensure security over a non secure
network.

Cheers,

Simon

On Wed, 2003-02-12 at 10:10, Jp Calderone wrote:
>   A couple places in Twisted use reactor.connectSSL().  They all seem to do
> it incorrectly, as far as I can tell.  The two places I've noticed are
> twisted/spread/pb.py:1152 and twisted/web/xmlrpc.py:257.  I'd fix them, but
> I'm currently struggling to understand SSL myself, and only found them to be
> in error in search of an example to learn from ;)
> 
>   Jp
> 
> 
> -- 
> |     This 
> |   signature
> | intentionally
> |    8 lines
> |     long.
> |  (So sue me)
> ---
-- 
Simon Hookway <simon at obsidian.com.au>



From az at CANTANKER.NET  Tue Feb 11 18:54:34 2003
From: az at CANTANKER.NET (Adrian van den Dries)
Date: Wed, 12 Feb 2003 10:54:34 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030211.141712.59648863.glyph@twistedmatrix.com>
References: <20030211063520.13647.qmail@green.zadka.com> <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com>
Message-ID: <20030211235434.GE31012@cantanker.net>

quoth Glyph Lefkowitz:

> Twisted is a very large and very featureful framework that has tried
> to simultaneously provide tons of functionality for developers but
> still remain user-focused.  Pretty much everyone involved in the
> core design aspect of TAPs feels that they're sub-optimal, so you
> don't see much effective advocacy of their use.

Perhaps the TAP references in the howto should be moved later, under
"Advanced usage" or somesuch, and the early docs concentrate on
methods with which more users will be familiar (ie, standalone
scripts).

a.

-- 
Cantanker /
---------/-------------
        / cantanker.net



From andrew-twisted at puzzling.org  Tue Feb 11 19:56:46 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 12 Feb 2003 11:56:46 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211120239.GA2557@radii>
References: <1044928876.24461.10.camel@caspian.everglade> <20030211024115.GE16336@frobozz.local> <1044935987.24502.19.camel@caspian.everglade> <20030211053538.GF16336@frobozz.local> <20030211120239.GA2557@radii>
Message-ID: <20030212005646.GA18049@frobozz.local>

On Tue, Feb 11, 2003 at 07:02:39AM -0500, Christopher Armstrong wrote:
> On Tue, Feb 11, 2003 at 04:35:38PM +1100, Andrew Bennetts wrote:
> > On Tue, Feb 11, 2003 at 04:59:49PM +1300, Rob Brown-Bayliss wrote:
> > > Every thing seems to link on to something else, deffereds, it's own web
> > > servewr etc, it seems like it's a joke, or if not then certianly
> > > overkill for sending data over sockets.
> > 
> > That's a natural by-product of Twisted being a framework, unfortunately;
> > it's hard to take-or-leave each individual piece, you basically have to take
> > the whole framework or none of it.
> 
> I really don't like how this was answered :) You _don't_ need to take
> the entire framework; e.g., you don't need to import the web server,
> mail server, etc, unless you want to use them. Deferreds are an
> important fundamental thing in Twisted, however; they're one of the
> basic abstractions that we use a *lot* in asynchronous
> programming. Also, there's nothing stopping someone from tearing apart
> Twisted and distributing only the parts they need with their
> applications, web server be damned. ;-)

Yes, by the "framework", I really meant twisted.internet.  The rest of
Twisted is largely just pre-built utilities for twisted.internet, to save
you the work of e.g. writing your own web server :)

So, to be clear: when I was talking about Twisted in the previous mail, I
was really only referring to "core" Twisted, i.e. twisted.internet.

> Also, I should note the package layout: twisted.internet is the very
> basic stuff that your Twisted app will never be
> without. twisted.python has a lot of utilities that twisted.internet
> and other packages use. twisted.protocols gives you all the basic
> protocol support. These three packages are the most fundamental to
> Twisted. The rest are mainly application-level packages.

Which reminds me; we probably need to document this more up-front.  If a
newbie can realise that "only" twisted.{internet,protocols,python} is what
they need to get started, and the rest of Twisted is effectively just
libraries using that framework, then it (hopefully) makes learning it all
much easier.

> In addition to these, though, it sounds like Rob will also want to use
> twisted.spread (and twisted.cred) for his application. Most of the
> rest is unneeded.

Except that every network server evolves to the point where it is also a web
server ;)

-Andrew.




From washort at twistedmatrix.com  Tue Feb 11 20:12:34 2003
From: washort at twistedmatrix.com (Allen Short)
Date: Tue, 11 Feb 2003 19:12:34 -0600 (CST)
Subject: [Twisted-Python] PyCon Logistics
Message-ID: <20030211.191234.596544096.washort@twistedmatrix.com>


Chris and I have been looking at hotels in the D.C. area with an eye
towards affordability and proximity to GWU: the best we've found so
far is a Best Western in Arlington: assuming 3 to a room, it'll be
around $30/night/person. 

Hotel webpage:
http://www.bestwestern.com/prop_47096

the Big Win is that this hotel is half a block from the metro station:
http://www.stationmasters.com/System_Map/ROSSLYNS/rosslyns.gif

and is only one stop from the GWU metro station.

As for transportation costs: wmata.com indicates most trips on the
metro within the downtown area will be $1.10 each, whereas coming in
on Monday afternoon from BWI will be $4.10, and returning on Saturday
will be $3.25. I'm going to buy a $20 farecard and would recommend
buying at least a $15 card; we discovered the hard way last year that
you cant share them :) 

The ride on the metro between BWI and Arlington is about two hours,
so schedule accordingly.

Chris, Travis, and I have talked about doing some sightseeing on
Tuesday; times and destinations not yet decided - possibly the Library
of Congress. Anyone else interested such an excursion?

Another unresolved issue is food: I've heard rumours that food will be
provided at the conference but nothing definite. Also, I know some
people will insist on hunting for sushi. :) 

Finally, i've been told to encourage people to register soon;
apparently everybody is putting it off. :)

If anybody has a better idea or if I've forgotten something, please
speak up :)

Allen
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030211/30435d4a/attachment.pgp 

From lac at strakt.com  Tue Feb 11 20:20:12 2003
From: lac at strakt.com (Laura Creighton)
Date: Wed, 12 Feb 2003 02:20:12 +0100
Subject: [Twisted-Python] PyCon Logistics 
In-Reply-To: Message from Allen Short <washort@twistedmatrix.com> 
   of "Tue, 11 Feb 2003 19:12:34 CST." <20030211.191234.596544096.washort@twistedmatrix.com> 
References: <20030211.191234.596544096.washort@twistedmatrix.com> 
Message-ID: <200302120120.h1C1KCjL017055@ratthing-b246.strakt.com>

Thank you very much for the hotel information.
In return: sushi information!

http://www.sushitaro.com/

Sushi Taro
1503 17th St., NW (P St.)
Washington (202) 462-8999

It has been 2 years, but that was the best last time I was in D.C.
Near Metro.

Laura Creighton



From andrew-twisted at puzzling.org  Tue Feb 11 20:54:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 12 Feb 2003 12:54:02 +1100
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030211.191234.596544096.washort@twistedmatrix.com>
References: <20030211.191234.596544096.washort@twistedmatrix.com>
Message-ID: <20030212015402.GC18049@frobozz.local>

On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> 
> Chris and I have been looking at hotels in the D.C. area with an eye
> towards affordability and proximity to GWU: the best we've found so
> far is a Best Western in Arlington: assuming 3 to a room, it'll be
> around $30/night/person. 

Thank you!

So, who's going to do this?  I need someone to share a room with :)

> Chris, Travis, and I have talked about doing some sightseeing on
> Tuesday; times and destinations not yet decided - possibly the Library
> of Congress. Anyone else interested such an excursion?

Definitely!  It's the first time I'll have flown internationally, so I'm
more than happy to do random tourist things :)

-Andrew.




From radix at twistedmatrix.com  Tue Feb 11 20:49:11 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 11 Feb 2003 20:49:11 -0500
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030212015402.GC18049@frobozz.local>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030212015402.GC18049@frobozz.local>
Message-ID: <20030212014911.GD2557@radii>

On Wed, Feb 12, 2003 at 12:54:02PM +1100, Andrew Bennetts wrote:
> On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > 
> > Chris and I have been looking at hotels in the D.C. area with an eye
> > towards affordability and proximity to GWU: the best we've found so
> > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > around $30/night/person. 
> 
> Thank you!
> 
> So, who's going to do this?  I need someone to share a room with :)

How about you, me, and Nafai? Just give me confirmation and I'll
register for the three of us.

Speaking of registering -- if anybody's going to register soon, please
either 1) wait until Allen or I register first or 2) make sure you
explain that a bunch of PyCon attendees will be staying at this
hotel. The idea is that we can all get adjacent rooms; whoever is
registering to stay can just say "Please put me near other PyCon
attendees".

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Tue Feb 11 21:41:16 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 12 Feb 2003 13:41:16 +1100
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030212014911.GD2557@radii>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030212015402.GC18049@frobozz.local> <20030212014911.GD2557@radii>
Message-ID: <20030212024116.GE18049@frobozz.local>

On Tue, Feb 11, 2003 at 08:49:11PM -0500, Christopher Armstrong wrote:
> On Wed, Feb 12, 2003 at 12:54:02PM +1100, Andrew Bennetts wrote:
> > On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > > 
> > > Chris and I have been looking at hotels in the D.C. area with an eye
> > > towards affordability and proximity to GWU: the best we've found so
> > > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > > around $30/night/person. 
> > 
> > Thank you!
> > 
> > So, who's going to do this?  I need someone to share a room with :)
> 
> How about you, me, and Nafai? Just give me confirmation and I'll
> register for the three of us.

Sounds good to me!

-Andrew.




From grimmtooth at softhome.net  Tue Feb 11 21:54:13 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Tue, 11 Feb 2003 21:54:13 -0500
Subject: [Twisted-Python] win32eventreactor part II
In-Reply-To: <20030212014911.GD2557@radii>
Message-ID: <020f01c2d242$0693cfe0$6501a8c0@listy>

Out of curiousity, is it necessary to use the win32 reactor in order to
use the w32 flavor of ProcessProtocol, or is it possible to just use one
without the other?






From twisted at itamarst.org  Tue Feb 11 22:31:06 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 22:31:06 -0500
Subject: [Twisted-Python] win32eventreactor part II
In-Reply-To: <020f01c2d242$0693cfe0$6501a8c0@listy>
References: <20030212014911.GD2557@radii>
	<020f01c2d242$0693cfe0$6501a8c0@listy>
Message-ID: <20030211223106.3a5e6ad2.twisted@itamarst.org>

On Tue, 11 Feb 2003 21:54:13 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> Out of curiousity, is it necessary to use the win32 reactor in order
> to use the w32 flavor of ProcessProtocol, or is it possible to just
> use one without the other?

Yes, you need it. Long term plan is to make it possible to hook up win32
to standard reactor due to Major Issues with the win32 APIs (limited to
only 64 events, and thus sockets/processes), but I'm not all that
motivated to work on it right now. Once that is done you won't need to
use the win32 reactor.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From grimmtooth at softhome.net  Wed Feb 12 00:13:01 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Wed, 12 Feb 2003 00:13:01 -0500
Subject: [Twisted-Python] win32eventreactor part II
In-Reply-To: <20030211223106.3a5e6ad2.twisted@itamarst.org>
Message-ID: <021001c2d255$6a7daef0$6501a8c0@listy>

> > Out of curiousity, is it necessary to use the win32 reactor 
> in order 
> > to use the w32 flavor of ProcessProtocol, or is it possible to 

> Yes, you need it. Long term plan is to make it possible to 
> hook up win32 to standard reactor due to Major Issues with 
> the win32 APIs (limited to only 64 events, and thus 
> sockets/processes), 

Yeah, that's what I was looking at.

> but I'm not all that motivated to work on 
> it right now. Once that is done you won't need to use the 
> win32 reactor.

I know how demotivating w32 can be to work on :-)


While I'm somewhere close to the subject:  two questions about PB. 

1) Where the heck is pb.Root defined, anyway?

2) I can't help but notice that all the pb example servers involve an
application as the foundation, as opposed to using reactor.run() as the
event loop. Is this significant?

Reason for asking: I've tried to implement my first attempt at a
pb-enabled app (nods at etrepum on LJ) and am getting nowhere. The
server runs with no errors, but the client can't find the remote object
to talk to. I don't need anything complicated: one remote_ method is all
I need for the whole enchilada.




From tv at twistedmatrix.com  Wed Feb 12 02:26:43 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 12 Feb 2003 09:26:43 +0200
Subject: [Twisted-Python] Mozilla bondage.. err, bindings (Was: Re: In Defense of Taps)
In-Reply-To: <20030211.141712.59648863.glyph@twistedmatrix.com>
References: <20030211063520.13647.qmail@green.zadka.com> <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com>
Message-ID: <20030212072643.GA14923@lapdog>

On Tue, Feb 11, 2003 at 02:17:12PM -0600, Glyph Lefkowitz wrote:
> These kinds of tools are the things that you don't notice very often as a
> developer, as they come "for free" for doing things a certain way.  For
> example, most GTK or MacOS X developers are unaware that emacs keybindings are
> set by default, but they use the toolkit and they don't re-bind all the keys
> immediately.
> 
> Certain apps that have to play by their own rules break things.  For instance,
> Mozilla _does_ rebind all keys immediately, and you can tell, because their
> emacs keys emulation used to be far less consistent, especially across
> platforms.  There are a lot of users who don't care about this, and probably
> most developers don't either.  When you put all the users who use all the weird
> features together, though, you end up with almost everybody.

	I'm curious, how do you figure Mozilla _re_binds keys? It's
	not a GTK app or anything like that. The first binding is the
	final binding..

-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Wed Feb 12 06:34:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 05:34:46 -0600 (CST)
Subject: [Twisted-Python] Mozilla bondage.. err, bindings
In-Reply-To: <20030212072643.GA14923@lapdog>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030212072643.GA14923@lapdog>
Message-ID: <20030212.053446.78714160.glyph@twistedmatrix.com>


On Wed, 12 Feb 2003 09:26:43 +0200, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	I'm curious, how do you figure Mozilla _re_binds keys? It's not a GTK
> 	app or anything like that. The first binding is the final binding..

Depends what you mean by that.  On linux, it is in fact a gtk app:

glyph at zelda:~% ldd /usr/lib/mozilla/mozilla-bin | grep gtk
        libgtk-1.2.so.0 => /usr/lib/libgtk-1.2.so.0 (0x0fa7e000)

Perhaps instead of "re-bind" I should have said "it binds keys in a different
way than the standard widgets in the native toolkit it uses would".

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/f13e5984/attachment.pgp 

From glyph at twistedmatrix.com  Wed Feb 12 08:51:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 07:51:46 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030211235434.GE31012@cantanker.net>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
Message-ID: <20030212.075146.122586679.glyph@twistedmatrix.com>


On Wed, 12 Feb 2003 10:54:34 +1100, Adrian van den Dries <az at CANTANKER.NET> wrote:

> Perhaps the TAP references in the howto should be moved later, under
> "Advanced usage" or somesuch, and the early docs concentrate on methods with
> which more users will be familiar (ie, standalone scripts).

This is exactly what I was arguing against.

While this may present a superficially simpler start-up process for new users
creating their first application, it will create the impression that TAPs are
something esoteric that you shouldn't necessarily be using if you're just
building a canonical Twisted server.

I'm afraid that I've already created that impression, though.  In going through
various projects I'm aware of that use Twisted, very few of them use TAPs.
Sadly, a few of the projects that I tried which use Twisted don't work at all!
(I'm not listing those here.)  It seems like this framework is more popular for
internal development than open source work.

The two public projects that I know of which use TAPs well are:

* Bannerfish: http://itamarst.org/software/bannerfish/
* CVSToys: http://www.twistedmatrix.com/users/acapnotic/wares/code/CVSToys/

Both of these are written by Twisted development team members that I have
gotten to scream at personally :-).

* The Hep Message Server: http://www.fettig.net/projects/hep/

  No use of TAPs or twistd whatsoever, it uses its own start-script.
  Accordingly, the "daemon" responds badly to signals, and doesn't daemonize on
  UNIX.  On the other hand, this may not just be a case of poor advocacy.
  There is also an INI file, no use of distutils, and the package structure is
  scattered across the top level namespace with unique and distinctive names
  like "servers", "messaging", and "agents".

  Abe has produced a nice message server demo here but appears singularly
  unconcerned with integration of any kind :).

* apt-proxy v2: http://apt-proxy.sourceforge.net/

  This project uses a collection of scripts which can either be used as
  standalone daemons or arguments to the "--python" option to twistd.  It's
  understandable given the low-level platform-specific nature of this code, and
  they still get about half the benefits of twistd.

* khashmir: http://khashmir.sourceforge.net/

  I can't figure out what's going on here.  I _think_ from the README that
  you're still expected to type python expressions at a prompt and get results.
  Given that there are no releases of this yet it's probably premature to guess
  whether taps will be used or not ;-).

There are two conclusions I can draw from this brief survey:

 1. Not very many mature projects use Twisted yet.
 2. Everybody hates TAPs unless I've personally explained why they shouldn't.

I get the impression that both conclusions are valid.  Not much can be done
about #1 except to stay the course.  If you are currently writing tap-less
code, has this thread convinced you to take another look at plugins?  Or at
least wait and see what the next iteration of COIL will be like?

Another thing that I notice here is that Twisted's internal TAP plugins need to
provide slightly more expansive descriptions of what they do, for the browsing
functionality I've described to be useful.  For example:

    glyph at zelda:~% mktap --help portforward
         [ ... ]
    Port Forwarder.


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/e937eea8/attachment.pgp 

From m at moshez.org  Wed Feb 12 10:43:25 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 15:43:25 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212.075146.122586679.glyph@twistedmatrix.com>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
Message-ID: <20030212154325.17273.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>  1. Not very many mature projects use Twisted yet.
>  2. Everybody hates TAPs unless I've personally explained why they shouldn't.

We should at least take those results as far as our single best opportunity
to do advocation: PyCon in general, and Itamar's tutorial in particular.
I think we all believe that (at the very least) twisted.internet is ready
for production-code. We all believe that TAPs are useful. I think we should
take the opportunity in all talks to emphasise how useful these things are.
Again, this seems mostly relevant for the introduction talk: I understand
how tempting it is to skip writing plugins in the introduction, but this
shows that it shouldn't be (because writing plugins for tap *is* easy).

Also, I'd attempt to take another conclusion from it: people used to complain
Twisted is not documented enough, but I think now the complaint is that
people are not sure where to start from. Part of it is a real problem:
the skills a Woven developer should have are (almost) complete disjoint
than the skills a programmer imlpementing a new kind of server (say,
SFS): the first would just use a quick mktap web --path/twisted-web
package to set up the server, and start writing .rpy's, while the
later would spend most of his time minding the protocol, and only ending
with writing an mktap plugin. What is my conclusion? I consider only
the second programmer "primary Twisted audience": not specifically web
programmers, but network programmers. For network programmers, the following
HOWTOs are useful:

* servers
* plugins
* cred
* pb-cred
(I think this is a decent order of reading them).

It would be nice if we could make special indexes for special kinds
of programmers, pointing them to a specific reading of the documentation.
How to do it is left as an exercise to the reader (but I will note that
on the TeX side, we're pretty much covered so it really more of a question
of decisions than of technology).
 
I encourage the "newbies" on the list to speak up: what are *you* planning
to do with Twisted, and which documents would help you with that.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From wilk-ml at flibuste.net  Wed Feb 12 11:12:31 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 12 Feb 2003 17:12:31 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <87u1f9iikw.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

So, i'm a newbie with twisted, and let's see what i'm planning to do
with twisted. Stop me if i'm wrong.

first, use it like classic internet web server (to replace python cgi).
For this, if we use .rpy and tap, it's easy.
second, use it for web intranet : it must work on windows. The possibility to
embed it in a .exe is fine. Just that it could be good to can take out
what we don't use (tk for example).

and last, i would like to use twisted for a shared hosting with virtual
hosting without using apache and other ftpd...
In some minutes i could make a system of virtual hosting with proxy for
somes, static and cgi for others. Somes minutes more and i could make a
litle interface to dynamicaly manage the hosts ! crazy !!!

I would like to know if it exist hosting with twisted ?

The documentation is hard in the begin, after somes hours it's become
magic. But we are note sure to understand what we do (reactor,
application etc...).
Examples are very usefull because the framework is very efficient.

Like a lot of pythoners i think, i begin with hacking CGIHTTPServer. So
example of how to do with it and the same with Twisted will be great.

Why not a wiki ? I find a lot of tips in the archive of the
mailing-list.

Thanks for your work and your attention.

-- 
William Dode - http://flibuste.net



From theller at python.net  Wed Feb 12 11:21:51 2003
From: theller at python.net (Thomas Heller)
Date: 12 Feb 2003 17:21:51 +0100
Subject: [Twisted-Python] Cancel a Deferred timeout
Message-ID: <znp1ii5c.fsf@python.net>

I'm currently doing my first steps with twisted, and I have a
question.

I've started hacking the EchoClient example to connect to a small
embedded TCP server with a custom protocol I have here.

The server sends a line-feed 3 times a second, and when the client
doesn't receive them for one second or more, it must assume the
connection is broken and it should close the connection immediately
(and try to reconnect).

I thought using a deferred for this with a timeout of one second,
which will close the connection if the timeout callback is called.  If
the line-feed is received, the deferred timeout must be canceled, and
a fresh one set up. How can I do this?

Thanks,

Thomas




From m at moshez.org  Wed Feb 12 11:21:18 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 16:21:18 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <87u1f9iikw.fsf@flibuste.net>
References: <87u1f9iikw.fsf@flibuste.net>, <20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212162118.26881.qmail@green.zadka.com>

On 12 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> first, use it like classic internet web server (to replace python cgi).
> For this, if we use .rpy and tap, it's easy.

Well, most of it should be documented in using-twistedweb.html

> second, use it for web intranet : it must work on windows. The possibility to
> embed it in a .exe is fine. Just that it could be good to can take out
> what we don't use (tk for example).

I don't understand this: are you trying to get random hosts to be web
servers? Do you need every windows computer to serve HTTP? Or is it
something else?
Also, how is .exe better than a real installer?
In a former job, I wrote a Windows installer which basically took existing
installers and ran them in order. It was about a 15 minutes hack.
If you can make this work, just generate one containing a Python installation,
a Twisted installation and your own app installation.

> and last, i would like to use twisted for a shared hosting with virtual
> hosting without using apache and other ftpd...

Well, currently, I think that virtual hostings can work pretty much out
of the box, but we don't have as good a web/FTP integration as we could
have.

> Why not a wiki?

I found wikis are useless as places to get documentation about software.

> I find a lot of tips in the archive of the
> mailing-list.

Yes, mailing lists are good for that.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From glyph at twistedmatrix.com  Wed Feb 12 12:18:07 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 11:18:07 -0600 (CST)
Subject: [Twisted-Python] Cancel a Deferred timeout
In-Reply-To: <znp1ii5c.fsf@python.net>
References: <znp1ii5c.fsf@python.net>
Message-ID: <20030212.111807.07277933.glyph@twistedmatrix.com>


On 12 Feb 2003 17:21:51 +0100, Thomas Heller <theller at python.net> wrote:

> I thought using a deferred for this with a timeout of one second, which will
> close the connection if the timeout callback is called.  If the line-feed is
> received, the deferred timeout must be canceled, and a fresh one set up. How
> can I do this?

It sounds more like you might want to use reactor.callLater directly: a
Deferred is a one-shot thing, which is best used to represent a request for
data.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/8e2df235/attachment.pgp 

From wilk-ml at flibuste.net  Wed Feb 12 12:20:03 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 12 Feb 2003 18:20:03 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212162118.26881.qmail@green.zadka.com>
References: <87u1f9iikw.fsf@flibuste.net>
	<20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
	<20030212162118.26881.qmail@green.zadka.com>
Message-ID: <87lm0lifgc.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> On 12 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > first, use it like classic internet web server (to replace python cgi).
> > For this, if we use .rpy and tap, it's easy.
> 
> Well, most of it should be documented in using-twistedweb.html

yes, but like said before, it's not easy in the begin to know why woven
is in the midle. I've read peoples thinking twisted is a template engine !
A good separation between framework engine and library tools would be fine.

> 
> > second, use it for web intranet : it must work on windows. The possibility to
> > embed it in a .exe is fine. Just that it could be good to can take out
> > what we don't use (tk for example).
> 
> I don't understand this: are you trying to get random hosts to be web
> servers? Do you need every windows computer to serve HTTP? Or is it
> something else?

hmmm... my poor english !!!
No, i just develop classic application with web interface.

> Also, how is .exe better than a real installer?

Just that it's more easy for the user, he unzip the 800ko in a
directory and click on the .exe
If i could take out what i don't need of twisted, i'm sure i can cut it
be 3... 
On windows, people are often afraid of installers...
Sure i will not do like that on debian system !

> In a former job, I wrote a Windows installer which basically took existing
> installers and ran them in order. It was about a 15 minutes hack.
> If you can make this work, just generate one containing a Python installation,
> a Twisted installation and your own app installation.

Yes, but it's a lot bigger.
But it's not a big problem, just that i would like to use the same
framework for very little things and biggers...

-- 
William Dod? - http://flibuste.net



From a.d.stribblehill at durham.ac.uk  Wed Feb 12 12:53:59 2003
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Wed, 12 Feb 2003 17:53:59 +0000
Subject: [Twisted-Python] Woven howto doc bug?
Message-ID: <20030212175359.GQ9228@wompom>

>From the Woven howto, it tells me I should do:
	from twisted.web.woven import page

This doesn't exist in 1.0.3rc1, but:
	from twisted.web.woven import model
does work.

Is this a documentation bug or a user problem? ;)

-- 
FAEROES
SOUTH OR SOUTHWEST 5 TO 7. OCCASIONAL RAIN. MODERATE



From twisted at moshez.org  Wed Feb 12 13:40:57 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 18:40:57 -0000
Subject: [Twisted-Python] Woven howto doc bug?
In-Reply-To: <20030212175359.GQ9228@wompom>
References: <20030212175359.GQ9228@wompom>
Message-ID: <20030212184057.29316.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Andrew Stribblehill <a.d.stribblehill at durham.ac.uk> wrote:

> From the Woven howto, it tells me I should do:
> 	from twisted.web.woven import page
> 
> This doesn't exist in 1.0.3rc1, but:

Yes it does.
At least, it exists in both the tarball and the Python 2.2 sid Debian package.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 13:53:05 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 12 Feb 2003 13:53:05 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		<20030211.141712.59648863.glyph@twistedmatrix.com>
		<20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

You asked for it!  Okay, so I'm not exactly a "newbie" (or 
maybe a perennial newbie ;^).  Anyway, I guess I'm an anomaly 
in that I founds taps to be a nice and useful thing, as when I 
started developing our server app, it was just after Glyph wrote 
the "Writing a Twisted Plug-in" doc, so I used that as my sample 
code to start with.  I've attached my pgertap.py file so you can 
get an idea of where we are (I've already described what we're 
*trying* to do in earlier messages to the list).  It's out of 
context, and I'm not using any of the config options yet, but 
there's the idea ...

And as an *exclusive* preview for folks on the twisted list :^),
you can download the PGEF ('Pan Galactic Engineering Framework') 
source and have a closer look (this is definitely alpha!):  

http://ned.gsfc.nasa.gov/alpha/PanGalactic.tar.gz

userid:  justsomeguy
passwd:  ans=42

To install it:
1. gunzip, untar, install (python setup.py install)
2. install PostgreSQL if you don't have it yet
3. createdb pgerdb
4. run the shell scripts to load the reference data and the 
   demo database:
       cd PanGalactic/src/sql
       ./setup_pgerdb.sh
   (NOTE!  When this script runs createPgerDbTables.sql, it 
    might look like it's caught in a loop when the "ALTER TABLES"
    run, but don't give up ... 89 tables getting 6 ALTER's each 
    (or more) takes a while ... ;^)
       cd PanGalactic/demo/sql
       ./populate_demo_db.sh
5. run 'mktap pger', then 'twistd -f pger.tap'

You can fire up an interactive xmlrpc session to try 
out the server (I'll put some demo sessions on the web 
site soon).  

If you are *really* brave, you can try starting 
up the client, but you will need to have wxPython 
(2.3.4.2 or better), a recent version of ZODB (3.1 or 
better recommended), reportlab, PIL, and log4p (yuck! we 
just haven't had time to change that out yet).  To start 
it, cd into the PanGalactic/pangalactic/client 
dir and run 'python fnord.py'.  By default the client is 
setup to interact with the server on localhost at port 
8080.  Do File/Login and just click 'OK' without entering 
anything ... it's a dummy login for now, but that will 
trigger the client to get the demo data from the server and 
display it.  You can get some ideas by turning on the 
Options/Preferences/Show Tooltips (they are off by default).

The only docs so far are in the code ... best bets are:
(a) the comments in createPgerDbTables.sql 
(b) the docstrings in pangalactic.common modules 
and in pangalactic.repo.registry (which 
is the guts of the O-R mapping I'm using ... t.e.row didn't 
do quite what I wanted).  We have several demos coming up, so 
docs have temporarily fallen by the wayside.  

The tests in PanGalactic/pangalactic/repo/tests are very 
naive and (obviously) not real unit tests yet, but they 
are useful to *me*, anyway!

I'd be really grateful if a twisted guru could look at the code 
-- at least the "server" code (pangalactic.common, p.repo, p.tools),
and (after the wave of nausea has passed) comment on how it 
could be improved ... or even contribute, as this will be 
open sourced!  I know zillions of things it needs, but 
I'd especially like to hear about the twisted aspects that 
I haven't used properly or have short-circuited somehow.

The only twisted things we're using on the client side so 
far are jelly/unjelly, but we need to use twisted to make 
our client non-blocking ... we just haven't got around to 
integrating it with the twisted loop yet.  

I'd be *ecstatic* if any of the twisted folk who are 
coming to PyCon would like to do a pre-con sprint or a 
post-con sprint with PanGalactic ... we will be at PyCon 
(we're located just north of DC, anyway!).  

Cheers,
-- Steve.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pgertap.py
Type: application/x-python
Size: 3996 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/364050df/attachment.bin 

From m at moshez.org  Wed Feb 12 14:35:27 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 19:35:27 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
References: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		<20030211.141712.59648863.glyph@twistedmatrix.com>
		<20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212193527.10384.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> You asked for it!  Okay, so I'm not exactly a "newbie" (or 
> maybe a perennial newbie ;^).  Anyway, I guess I'm an anomaly 
> in that I founds taps to be a nice and useful thing, as when I 
> started developing our server app, it was just after Glyph wrote 
> the "Writing a Twisted Plug-in" doc, so I used that as my sample 
> code to start with.

Well, I meant that I want to hear from *dissatisfied* newbies...but
it is always a pleasure to hear from a satisfied user too :D

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From justin at iago.org  Wed Feb 12 14:41:00 2003
From: justin at iago.org (justin at iago.org)
Date: Wed, 12 Feb 2003 14:41:00 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <m28ywlxp6b.fsf@justin.local.>

Moshe Zadka <m at moshez.org> writes:

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted

Sure.  I'm not a programming newbie, or a Python newbie, but I am
certainly a Twisted newbie.

I wasn't going to post until I got a better handle on things via the
documentation and had more specific needs, but since you're asking...

First I should say that what drew me to the Twisted project in the
first place was not the networking framework; while it looks very
capable in that regard, I have written select- or poll-based
asynchronous apps before so I wasn't actively looking for anything to
help with that.  It was actually the conch module that drew me in at
first, as a Python library implementing the SSH protocol is very
potentially valuable to me.  Before I get to my general Twisted
thoughts, I'll ask a couple of conch questions:

 Is there any way, when using it as a client, to get it to use an
 existing ssh agent?  An ssh client is pretty much useless to me
 without this, so I may have to end up adding this functionality myself.

 Is there an example out there of a basically functioning SSH server
 using conch that will accept connections and authorize them based on
 public keys (not passwords)?  The only documentation or example usage
 I could find for conch is doc/examples/sshsimpleclient.py

 (Passwords bad; Passphrased public keys and agents good)

Setting that aside, I'll explain my first intended project with
Twisted.  It seems reasonably well suited to this use in general, but
as I've only read the intro docs I'm not yet sure of the best way to
proceed in The Twisted Way.

I need to write a fairly smart network proxy application.  Users will
connect via one protocol, be authenticated and authorized (to a
separate service, by a means I already have existent.  I don't need
Twisted's help here), then the proxy will act as a client to another
server and transparently connect the end-user to the other server as
though the middle step had never occurred.  It seems that the Factory
attached to the Protocols for which I am a server will also in itself
have to be a client of another Protocol.  I don't yet have big
questions here, as I haven't tried to make it work yet, but if someone
wants to throw me some useful advice wrt the best way to fit into the
Twisted shape of things I won't complain.

> which documents would help you with that.

As I said, I'm not yet honestly sure.  I have some feeling that the
docs are lacking in some way, but I don't have anything more specific
or any more justification until I beat against it personally some more.

I'll definitely let you all know as I find things that I think are lacking.

-Justin

 




From z3p at twistedmatrix.com  Wed Feb 12 06:48:16 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 12 Feb 2003 05:48:16 -0600
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <m28ywlxp6b.fsf@justin.local.>
References: <20030212.075146.122586679.glyph@twistedmatrix.com> <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com> <m28ywlxp6b.fsf@justin.local.>
Message-ID: <20030212114816.GA17385@pyramid.twistedmatrix.com>

On Wed, Feb 12, 2003 at 02:41:00PM -0500, justin at iago.org wrote:
>  Is there any way, when using it as a client, to get it to use an
>  existing ssh agent?  An ssh client is pretty much useless to me
>  without this, so I may have to end up adding this functionality myself.

This is on my TODO list, especially since the IETF has finally released
a specification for the agent protocol.  There weren't any for the
OpenSSH agent protocol and I didn't feel like wading through their code
to figure out how to do it.

>  Is there an example out there of a basically functioning SSH server
>  using conch that will accept connections and authorize them based on
>  public keys (not passwords)?  The only documentation or example usage
>  I could find for conch is doc/examples/sshsimpleclient.py
>
>  (Passwords bad; Passphrased public keys and agents good)
>
I thought the example did this already, but I guess not :) I'll work on
this, it's not particularly difficult.

-p
-- 
       Paul Swartz
(o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
//\    z3p at twistedmatrix.com                           /\\
V_/_   AIM: z3penguin                                 _\_V->



From glyph at twistedmatrix.com  Wed Feb 12 15:32:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 14:32:08 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212.143208.123923582.glyph@twistedmatrix.com>


On 12 Feb 2003 15:43:25 -0000, Moshe Zadka <m at moshez.org> wrote:
> >  1. Not very many mature projects use Twisted yet.
> >  2. Everybody hates TAPs unless I've personally explained why they shouldn't.

> We should at least take those results as far as our single best opportunity
> to do advocation: PyCon in general, and Itamar's tutorial in particular.  I
> think we all believe that (at the very least) twisted.internet is ready for
> production-code. We all believe that TAPs are useful. I think we should take
> the opportunity in all talks to emphasise how useful these things are.

This is a good opportunity, yes.  Thanks to Steve's post, I am less
discouraged.  For technical reasons, it is easier for us to make this pitch to
the people interested in twisted.internet than in other areas of Twisted
though: more below.

> Also, I'd attempt to take another conclusion from it: people used to complain
> Twisted is not documented enough, but I think now the complaint is that
> people are not sure where to start from.

This is a serious problem both on the website and in the documentation.  There
is also the issue of whether certain kinds of developers can even depend upon
Twisted to do what they need to do.  We have annotations in the docstrings for
various modules, but there is no at-a-glance reference card for what modules
within Twisted are really up to snuff.

The first thing is to decide what the classes of people who will be looking at
Twisted are.  Here, I think you've correctly identified two of them: web
developers and level network protocol programmers.  What are the other groups?
Simulation programmers?  Game programmers?  Corporate sysadmins?  Workflow
designers?  Interactive agent programmers?  (This is a question to the mailing
list at large: who _are_ you people, anyway?  There are almost 300 people
subscribed, and we've only got 5 users listed on the website!)

> Part of it is a real problem: the skills a Woven developer should have are
> (almost) complete disjoint than the skills a programmer imlpementing a new
> kind of server (say, SFS):
                  ^^^^^^^^

I would like to emphasize this extremely subtle hint in case you didn't get it
the first time, liiwi :-)

> the first would just use a quick mktap web --path/twisted-web package to set
> up the server, and start writing .rpy's, while the later would spend most of
> his time minding the protocol, and only ending with writing an mktap plugin.

I think that your conclusion is correct, but there is another, technical
problem here.  We have a plugin type which we suggest network programmers to
use (and the flaws of this plugin type have been previously discussed).  RPYs
are a partial solution, and Donovan and I have been back and forth over better
and worse ways to structure applications.  This still hasn't completely
settled.  It bothers me that RPYs are so different from the TAP plugin
architecture, and wedded to a filesystem hierarchy that has nothing to do with
your Python code.  It's still really challenging (though by no means
impossible) to take any 2 existing Twisted web apps and put them together in
the same server.

In the absence of the COIL uber-plugin API that we are eventually going to
need, perhaps there should be some more work in the near term going into
defining domain-specific plugin APIs for different aspects of Twisted?  I
avoided this for a long time because I didn't want to proliferate more bad
integration schemes, but by now it's probably causing more trouble than it's
worth.  At least, I think we could easily come up with a half-solution that's
better than the current half-solution.

twisted.web would be the most obvious area to do this first.  While we're at
it, we could clean up the API for bot creation in twisted.words and make it
compatible to some extent with twisted.im.  (Donovan and Kevin respectively,
I'd like your opinions here...)

> What is my conclusion? I consider only the second programmer "primary Twisted
> audience": not specifically web programmers, but network programmers. For
> network programmers, the following HOWTOs are useful: [snip]

That's a good index for network programmers, and I think it mirrors the way the
book has been structured so far.  I think there is also a need to educate web
programmers about the networking aspects of web stuff within Twisted, and how
it can be used to integrate externally.  This will become even more of an issue
as the LivePage stuff that Donovan is working on right now matures: Woven will
be able to change the way that people think about "web apps".

> It would be nice if we could make special indexes for special kinds
> of programmers, pointing them to a specific reading of the documentation.
> How to do it is left as an exercise to the reader (but I will note that
> on the TeX side, we're pretty much covered so it really more of a question
> of decisions than of technology).

As we try to construct these different paths, let's not leave out documents,
but rather re-order them so that different interest groups will be exposed to
things they might not have considered, but those different areas of interest
will be small detours that diverge from their main path, and not obstacles to
their progress.

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

Yes.  A lot of the Twisted development discussion is ephemeral and
experimental, and therefore takes place over IRC, so those of you out there in
the user community may have gotten the impression that us developers don't like
getting into extended discussions in e-mail.  I hope these last few days have
disabused you of this notion :-).

I've said this before in different ways, and I'm sure I'll say it again: If
you're writing applications for Twisted, it is in your best interest to help us
grow and enhance the platform.  One of the primary ways you can do that is
through _feedback_.  I am consistently surprised by how popular this project is
and how many people have heard of it, because there is often so little
commentary on what users want or need.

That said, if you give us feedback that takes a substantial amount of time to
implement, don't expect immediate results :-).  Designing a new system,
especially one as general as what I've been talking about the last few weeks (a
general configuration dashboard and plugin API for all of Twisted) is
challenging and takes a while.  Still, it is made all the more difficult for
having to guess what people actually want and use Twisted for: it is now a
framework with applications in domains where none of the core developers have
any experience.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/4a22f6e7/attachment.pgp 

From theller at python.net  Wed Feb 12 15:35:34 2003
From: theller at python.net (Thomas Heller)
Date: 12 Feb 2003 21:35:34 +0100
Subject: [Twisted-Python] win32eventreactor
Message-ID: <7kc5i6eh.fsf@python.net>

How can I access the reactor if I want to use the win32eventreactor?
It seems I have to win32eventreactor.install() before importing
the reactor from twisted.internet, otherwise I get a traceback
saying AssertionError: reactor already installed.

Is this the recommended way to do it:

-----
from twisted.internet import win32eventreactor
win32eventreactor.install()
from twisted.internet import reactor

... other stuff

Thanks, Thomas




From exarkun at intarweb.us  Wed Feb 12 15:43:52 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 12 Feb 2003 15:43:52 -0500
Subject: [Twisted-Python] win32eventreactor
In-Reply-To: <7kc5i6eh.fsf@python.net>
References: <7kc5i6eh.fsf@python.net>
Message-ID: <20030212204352.GA18152@meson.dyndns.org>

On Wed, Feb 12, 2003 at 09:35:34PM +0100, Thomas Heller wrote:
> How can I access the reactor if I want to use the win32eventreactor?
> It seems I have to win32eventreactor.install() before importing
> the reactor from twisted.internet, otherwise I get a traceback
> saying AssertionError: reactor already installed.
> 
> Is this the recommended way to do it:
> 
> -----
> from twisted.internet import win32eventreactor
> win32eventreactor.install()
> from twisted.internet import reactor
> 
> ... other stuff
> 
> Thanks, Thomas
> 

  Create a tap file, and when running it with twistd, specify
"--reactor win32" on the command line.  In the rest of your program, do
nothing special.  Anywhere you access twisted.internet.reactor, you'll get
the win32 reactor.

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-- 
 up 4 days, 0:28, 2 users, load average: 0.09, 0.03, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/9a2e5d4e/attachment.pgp 

From dave at krondo.com  Wed Feb 12 16:04:14 2003
From: dave at krondo.com (Dave Peticolas)
Date: 12 Feb 2003 13:04:14 -0800
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
	 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	 <20030211.141712.59648863.glyph@twistedmatrix.com>
	 <20030211235434.GE31012@cantanker.net>
	 <20030212154325.17273.qmail@green.zadka.com>
	 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
Message-ID: <1045083854.27327.33.camel@oneiros>

On Wed, 2003-02-12 at 10:53, Steve Waterbury wrote:
> Moshe Zadka wrote:
> 
> > I encourage the "newbies" on the list to speak up: what are *you* planning
> > to do with Twisted, and which documents would help you with that.
> 
> You asked for it!  Okay, so I'm not exactly a "newbie" (or 
> maybe a perennial newbie ;^).  Anyway, I guess I'm an anomaly 
> in that I founds taps to be a nice and useful thing, as when I 
> started developing our server app, it was just after Glyph wrote 
> the "Writing a Twisted Plug-in" doc, so I used that as my sample 
> code to start with.  I've attached my pgertap.py file so you can 
> get an idea of where we are (I've already described what we're 
> *trying* to do in earlier messages to the list).  It's out of 
> context, and I'm not using any of the config options yet, but 
> there's the idea ...
> 
> And as an *exclusive* preview for folks on the twisted list :^),
> you can download the PGEF ('Pan Galactic Engineering Framework') 
> source and have a closer look (this is definitely alpha!):

For those of us too lazy to download and scan the source,
what, in a nutshell, is PGEF supposed to do?

thanks,
dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/a5713fd6/attachment.pgp 

From twisted at itamarst.org  Wed Feb 12 16:33:06 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 12 Feb 2003 16:33:06 -0500
Subject: [Twisted-Python] win32eventreactor
In-Reply-To: <7kc5i6eh.fsf@python.net>
References: <7kc5i6eh.fsf@python.net>
Message-ID: <20030212163306.3a240668.twisted@itamarst.org>

On 12 Feb 2003 21:35:34 +0100
Thomas Heller <theller at python.net> wrote:

> Is this the recommended way to do it:
> 
> -----
> from twisted.internet import win32eventreactor
> win32eventreactor.install()
> from twisted.internet import reactor
> 
> ... other stuff

That will work, yes.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 17:11:15 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 12 Feb 2003 17:11:15 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
		 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		 <20030211.141712.59648863.glyph@twistedmatrix.com>
		 <20030211235434.GE31012@cantanker.net>
		 <20030212154325.17273.qmail@green.zadka.com>
		 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros>
Message-ID: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>

Dave Peticolas wrote:

> For those of us too lazy to download and scan the source,
> what, in a nutshell, is PGEF supposed to do?

A fair question.  PGEF is supposed to be a framework for developing 
applications that capture the data produced by engineering tools 
(CAD, Finite-Element Analysis, Simulation, Failure Analysis, etc.), 
component libraries, product documentation, configuration 
management, etc., etc.  Basically, to support the capture, integration, 
and management of all information produced and consumed in the 
life cycle of a manufactured product (hardware and/or software ... 
usually both!).  And, incidentally, to help engineers collaborate 
(via messaging, etc.) and to integrate their desktop tools 
(spreadsheets, etc.) with their more sophisticated tools (CAD, etc.) 
and services on the net (repositories, component libraries, 
analysis engines wrapped as Web Services, etc.).  

So what we've started out with is (1) a repository server that's 
supposed to support persistence and version/configuration management 
for the definition of a product and all its various "models" 
(CAX, FEA, etc.) and documents, and (2) a client that's intended to 
be a "product model/data browser" in the same sense that a "Web 
browser" presents various less semantically rich formats, such as 
HTML, images, other media, etc.   I.e., The PGEF Client's purpose is 
to present (a) various types of tree structures that occur in product 
data/models (e.g., assembly structures, version trees, functional trees, 
etc.), (b) tabular presentations of collections of engineering objects, 
(c) editors for product model metadata and parameters, and (d) hooks 
for communicating with product model viewers, such as CAD model viewers, 
analysis postprocessors, etc.  So far we only have a few of (a), (b), 
and (c) in it.  

Ultimately, for any enterprise that is mainly about manufacturing, 
PGEF will integrate *all* of the enterprise's technical data ... 
not *too* ambitious, eh?  ;^)  

An important piece of this puzzle is the STEP (ISO 10303) standard for 
"Product Model Data", which is a set of information models of the various 
types of data I mentioned above.  STEP itself is very complex (and not 
pretty, but it's really the only game in town for multi-disciplinary 
engineering data integration and it is taken very seriously by all large 
manufacturing organizations ... the list of organizations using/developing 
STEP is a who's who of manufacturers:  Ford, GM, Daimler-Chrysler, Boeing, 
Lockheed-Martin, Northrup Grumman, Raytheon, etc.), so one of the constraints 
on PGEF is to be able to map between STEP's information models and the PGEF 
repository schema ... if you browse the comments in createPgerDbTables.sql, 
many refer to how things map to/from STEP.  The actual engine that we'll 
use for the mapping is a Lisp application that we will interface with, 
called "Express Engine" (after the modeling language, Express, or ISO 10303-11):  

http://exp-engine.sourceforge.net

HTH,
-- Steve.



From screwtape at froup.com  Wed Feb 12 17:43:20 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Thu, 13 Feb 2003 09:43:20 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212224320.GA750@ferd2.thristian.org>

On Wed, Feb 12, 2003 at 03:43:25PM -0000, Moshe Zadka wrote:
> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

OK, despite already having submitted patches that were applied to CVS,
I think I still qualify as a Twisted newbie. :)

I use Twisted in two situations - for work and for play.

At work, we use Twisted for two things - we take streaming data from
an upstream supplier, and store it in a database. Another set of
programs takes requests from our customers, queries the database, and
returns the replies.

All of our servers are running Windows 2000, and therefore most of our
Twisted scripts run as Python services. Some of them just run as
commandline apps that are started at login (although converting them
to services is on my todo list). 

I don't use TAPs because in discussion once I heard they were really
rather Unix-centric, and also because I know that pickling the state
of a running application is difficult to do, and I don't understand
how TAPs would Get It Right. Also, I suspect that twistd doesn't play
nice in a Win32 environment (it's not an NT service, for example).

For config, scripts I write use Python's ConfigParser module to read
an INI file in a standard location. Since configuration is generally
limited to 'What host and port to I connect to? What port do I listen
on? Where's the database?', this system is quite sufficient.

At home, I use twisted.im as a framework for my own IRC bot (which
needs a redesign as I now know more about asynchronous programming
than I did when I started). Technically, it's still being developed,
so I run it in a screen-session where I can watch its output, rather
than as a demon.

For configuration, the startup script does 'import config', and the
config.py file has contains various variables with standard names. The
main reason for this is that most of the settings involved result in
structured data (account objects, a list of error messages, etc.) and
it was a lot easier to just point Python at the file and wind up with
a dictionary of objects than to write my own parser and so forth.

There's a few bits of Twisted I've run up against that I feel I should
understand but don't:
 - coil: What's it good for? It doesn't appear to be some kind of
   wrapper around the Windows Registry or GConf or XML storage or
   anything.
 - cred: Apparently this is something I need to get Right for PB to
   work, but I'm not sure what it does. I'd have expected it to be
   something like PAM for Linux - give it a name and password, and get
   back 'allow' or 'deny' - but it seems this is not the case.
 - spread: I understand banana and jelly, but PB surpasses me. I don't
   have a clear mental picture of how information flows between the
   two processes. I'm looking for an API that resembles 'connect to
   this server, tell me what objects there I can talk to', but I'm not
   finding it.

There are other bits of Twisted I'd like to know more about
(twisted.web looks superficially similar in some ways to ASP.NET, and
I'd like to be able to compare and contrast) but in general I lack the
inclination or justification to look into them.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| ULTRA Loves Those Recursive Acronyms
|



From bob at redivi.com  Wed Feb 12 18:34:58 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 12 Feb 2003 18:34:58 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212224320.GA750@ferd2.thristian.org>
Message-ID: <99073770-3EE2-11D7-8E0F-000A95686CD8@redivi.com>

On Wednesday, Feb 12, 2003, at 17:43 America/New_York, 
screwtape at froup.com wrote:

> On Wed, Feb 12, 2003 at 03:43:25PM -0000, Moshe Zadka wrote:
>
>  - coil: What's it good for? It doesn't appear to be some kind of
>    wrapper around the Windows Registry or GConf or XML storage or
>    anything.

Never used COIL, but here's a python wrapper for the windows registry 
that I wrote and have used successfully in a couple projects (2.2+ 
only).  You may find it useful since you use a lot of windows at work?

I'll transparently pickle/unpickle anything you want to put in the 
registry that doesn't make sense as a native registry datatype.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: registrydict.py
Type: application/octet-stream
Size: 6135 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/ca69539a/attachment.obj 

From fog at initd.org  Wed Feb 12 18:38:04 2003
From: fog at initd.org (Federico Di Gregorio)
Date: 13 Feb 2003 00:38:04 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212224320.GA750@ferd2.thristian.org>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	 <20030211.141712.59648863.glyph@twistedmatrix.com>
	 <20030211235434.GE31012@cantanker.net>
	 <20030212154325.17273.qmail@green.zadka.com>
	 <20030212224320.GA750@ferd2.thristian.org>
Message-ID: <1045093084.1188.45.camel@momo.initd.org>

Il mer, 2003-02-12 alle 23:43, screwtape at froup.com ha scritto:
> On Wed, Feb 12, 2003 at 03:43:25PM -0000, Moshe Zadka wrote:
> > I encourage the "newbies" on the list to speak up: what are *you* planning
> > to do with Twisted, and which documents would help you with that.
> 
> OK, despite already having submitted patches that were applied to CVS,
> I think I still qualify as a Twisted newbie. :)

eheh. same here. i started using twisted about 10 days ago when i needed
to replace my own system of RPC and object serialization and passing
with an upgraded version of it or something different. i choosed
something different (twisted).

i started by ignoring *everything* with the word 'tap' in it, mainly
because i found the terms 'tap' and 'http server' togheter two times and
was looking for something different. i also completely ignored coil.

using basic PB (no authentication, yes jellification of classes) was
easy with the tutorial (about 8h, gtk2reactor fixing included) but
switching to cred was much more difficult. the documentation was not
enough to write my first app authenticating the users vs a database and
providing different perspectives to them (about 2 days).

right now we are using twisted for two "work" projects and we plan to
integrate in it a port of our previous product (easy, transactional db
access on server side and automatic binding of objects to the gui client
side, more on that if you people are interested.)

maybe i am a little biased by the fact that our previous framework was
very similar to PB, but i don't think people approaching twisted are
interested in yet another http/irc/xxx server (w/ or w/o TAPS.)
more on the "framework" side, to develop applications or custom
protocols. 

my 0.02$
federico

-- 
Federico Di Gregorio
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Generated by Signify v1.10 [http://www.debian.org/]
                                      -- brought to you by One Line Spam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/6b6fe676/attachment.pgp 

From andrew-twisted at puzzling.org  Wed Feb 12 20:14:52 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 13 Feb 2003 12:14:52 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212.075146.122586679.glyph@twistedmatrix.com>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212.075146.122586679.glyph@twistedmatrix.com>
Message-ID: <20030213011452.GC20194@frobozz.local>

On Wed, Feb 12, 2003 at 07:51:46AM -0600, Glyph Lefkowitz wrote:
> 
> On Wed, 12 Feb 2003 10:54:34 +1100, Adrian van den Dries <az at CANTANKER.NET> wrote:
> 
> > Perhaps the TAP references in the howto should be moved later, under
> > "Advanced usage" or somesuch, and the early docs concentrate on methods with
> > which more users will be familiar (ie, standalone scripts).
> 
> This is exactly what I was arguing against.

I disagree.  TAPs have two benefits that I can see:
    - you can use twistd, which gives you solid daemonisation, signal
      handling, and logging.
    - you can get some sort of minimal integration using mktap --append.
    - a vague promise that they'll do so much more later

Most people don't care about the second point, and you can actually still use
twistd without TAPs for the daemonisation, etc, if you really want.

Regardless, if you're looking to learn how to use this cool Twisted thing
you've heard about, daemonisation and whatnot can wait.  You want to try write
code that serves some wacky protocol you have, or whatever, and find out if
Twisted is suited to what you're trying to do.  It's nice to know that you
*can* take advantage of pre-written daemonisation, but I really doubt that a
new Twisted user cares about *how*.

Frankly, I see TAPs as one more concept that a new user shouldn't be
burdened with comprehending.  Reactors, Factories, Protocols, Transports and
Deferreds are hard enough on their own.  I really think docs that start by
using reactor.listenTCP, and possibly app.listenTCP, are the way to go.

Don't try make people swallow all of Twisted at once... it's just too big.

I'll even go so far as speculating that this will cause more external
projects to use TAPs, because they won't be seen as some annoying idea in
the beginner docs that they had to skip past to get real work done.  Give
Twisted plugins its own, comprehensive doc that can assume knowledge of
basic Twisted, rather than short-changing it by making it the introductory
doc.  It could start with a section titled "Motivation", explaining the
advantages of twistd and mktap.

-Andrew.




From bob at redivi.com  Wed Feb 12 20:22:27 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 12 Feb 2003 20:22:27 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213011452.GC20194@frobozz.local>
Message-ID: <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>

On Wednesday, Feb 12, 2003, at 20:14 America/New_York, Andrew Bennetts 
wrote:

> On Wed, Feb 12, 2003 at 07:51:46AM -0600, Glyph Lefkowitz wrote:
>>
>> On Wed, 12 Feb 2003 10:54:34 +1100, Adrian van den Dries 
>> <az at CANTANKER.NET> wrote:
>>
>>> Perhaps the TAP references in the howto should be moved later, under
>>> "Advanced usage" or somesuch, and the early docs concentrate on 
>>> methods with
>>> which more users will be familiar (ie, standalone scripts).
>>
>> This is exactly what I was arguing against.
>
> I disagree.  TAPs have two benefits that I can see:
>     - you can use twistd, which gives you solid daemonisation, signal
>       handling, and logging.
>     - you can get some sort of minimal integration using mktap 
> --append.
>     - a vague promise that they'll do so much more later
>
> Most people don't care about the second point, and you can actually 
> still use
> twistd without TAPs for the daemonisation, etc, if you really want.
>
> Regardless, if you're looking to learn how to use this cool Twisted 
> thing
> you've heard about, daemonisation and whatnot can wait.  You want to 
> try write
> code that serves some wacky protocol you have, or whatever, and find 
> out if
> Twisted is suited to what you're trying to do.  It's nice to know that 
> you
> *can* take advantage of pre-written daemonisation, but I really doubt 
> that a
> new Twisted user cares about *how*.
>
> Frankly, I see TAPs as one more concept that a new user shouldn't be
> burdened with comprehending.  Reactors, Factories, Protocols, 
> Transports and
> Deferreds are hard enough on their own.  I really think docs that 
> start by
> using reactor.listenTCP, and possibly app.listenTCP, are the way to go.
>
> Don't try make people swallow all of Twisted at once... it's just too 
> big.
>
> I'll even go so far as speculating that this will cause more external
> projects to use TAPs, because they won't be seen as some annoying idea 
> in
> the beginner docs that they had to skip past to get real work done.  
> Give
> Twisted plugins its own, comprehensive doc that can assume knowledge of
> basic Twisted, rather than short-changing it by making it the 
> introductory
> doc.  It could start with a section titled "Motivation", explaining the
> advantages of twistd and mktap.

I think I agree with you.  As I see it, TAPs are not particularly 
useful for developers *until* they're ready to distribute their 
applications.  Maybe they should be relegated to a section of the HOWTO 
on "How to distribute your Twisted application" or "How to run your 
Twisted application as a daemon"?

I think something to help this along would be to port twistd/taps to 
win32, and allow it to become a Windows NT service?  It wouldn't be too 
hard.




From screwtape at froup.com  Wed Feb 12 20:07:13 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Thu, 13 Feb 2003 12:07:13 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <1045093084.1188.45.camel@momo.initd.org>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com> <20030212224320.GA750@ferd2.thristian.org> <1045093084.1188.45.camel@momo.initd.org>
Message-ID: <20030213010713.GB750@ferd2.thristian.org>

On Thu, Feb 13, 2003 at 12:38:04AM +0100, Federico Di Gregorio wrote:
> i started by ignoring *everything* with the word 'tap' in it, mainly
> because i found the terms 'tap' and 'http server' togheter two times and
> was looking for something different. i also completely ignored coil.

It occurs to me that Twisted is a little daunting because it's
presented as a single. monolithic package. I think it would be helpful
if, at least in the documentation, there was more of a
provides/requires structure, or at least a concept map.

For example: 

	The core of Twisted is t.internet and t.python.

	t.protocols requires the Twisted core, and provides simple
	accesss to a variety of Internet protocols.

	t.conch requires the core, and implements the the SSH
	standard. It provides a Python-based equivalent to the OpenSSH
	tools, and (for example) allows Python-based programs to
	create and use SSH tunnels (or whatever else it does)

	t.enterprise requires the Twisted core, and provides a way for
	Python programs to access databases in a Twisted-style way.

	t.im requires the Twisted core and t.protocols, and provides
	an a multi-protocol instant-messaging client for the end-user.

...and so on and so forth.

Basically, for each module in Twisted, the Twisted newbie can see if
that module is likely to be (a) a framework they can use to do what
they want, (b) an application that does what they want, (c) a suitable
source of sample code.

Note that a conceptual module might not be identical to the current
module organisation - t.e.dbcred requires t.enterprise and t.cred but
doesn't provide any new abilities, so I'd consider it a module of its
own.

Say I want to write an IRC bot - it needs to be able to talk to an IRC
server and store information. I notice that t.protocols has an IRC
protocol, and t.enterprise has database access, so I can probably
cobble together something using only those two modules. I see that
t.im is an application rather than a framework, so I won't try and
build on that, but I probably *will* mine it for sample code of how to
talk to the IRC module.

As a side note, I think Twisted's applications should be as thin as
possible - if the application involves any abstraction at all (hello,
twisted.im!) that abstraction should be a framework, and the
application should just use the framework.

Screwtape,
...who nevertheless is not volunteering. Yet. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "A glance, a stance, a broken romance; a disconnected telephone..." -- DEVO
|



From ste at webaccess.mozquito.com  Wed Feb 12 21:49:01 2003
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Thu, 13 Feb 2003 03:49:01 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>	<20030211.141712.59648863.glyph@twistedmatrix.com>	<20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <3E4B079D.3030105@webaccess.mozquito.com>

Moshe Zadka wrote:
> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

There we go: I am a newbie in both twisted and python, I was attracted to them together by the fact that twisted provides some support for a lot of protocols and that it is lightweight and small enough to understand immediately where to dig in if you need to be closer to the metal-over-the-wire... 

I am using twisted for building an application that allows to view and modify XML data over all possible protocols (http, mail, irc, p2p, ecc.), in other words, a multi-protocol server whose contents, logic and presentation are defined as one XML data model.
The idea is to have some kind of middleware with some basic XML functionality (XSL/XPath/XQuery), make it accessible in many different ways and to hide physical storage of data behind that.

People lately tend to argue that the everything-is-XML POV is Bad and also people already laughed at me on the irc channel about all that.. let's say that even if it sounds absurd I would really like to use twisted for such things ok? You aren't the kind of folks who blame people for thinking different, are you? ;-) 

Also: twisted+libxml2 seems to be able to handle much better heavy XML data flows than Tomcat+Xalan on the same hardware.. it would be a shame not to use it for doing some of the web services stuff that get all the hype nowadays. 
 
I am interested in understanding more of cred because it seems it would be a perfect fit for authorizing access to XML nodes that are seen as parts of the same data model but physically lie in different servers and are accessed through different protocols.

I am also interested in how to write APIs that return deferreds (this topic is listed in the howto page but there's no link yet: is "Wrapping new kinds of selectable resources" what I need?) but I still haven't come up with a better way other than to use threads i.e. of course some XML work I need to do takes an awfully long time even if it's done in C by Gnome's libxml2, how can I wrap it in an asynchronous api without using threads? I already ran into the infamous python threading IO deadlock.....

Oh and btw I had no problem starting to look at twisted from TAPs, I like the concept for being a different approach and most importantly for being The Fastest Way To Share A Folder Over The Web From The Command Line (which is a great thing), but I have to confess that reading this thread pushed me to try and do without them for the first time and I just decided I am not going back there immediately: I think having the possibility to choose is invaluable.

Thanks a lot, ciao
ste

p.s. the release motto of version 1.0 rocked! I will write it here again 'cause I like it so much:

INEFFICIENT CAPITALIST YOUR OPULENT TOILET WILL BE YOUR UNDOING

I think adding it to the release was pure genius, it cheers me much more than the sandwich ingredients analogy ;-)





From acapnotic at twistedmatrix.com  Wed Feb 12 21:58:02 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 12 Feb 2003 18:58:02 -0800
Subject: [Twisted-Python] Re: cred? spread? (was: In Defense of Taps)
In-Reply-To: <20030212224320.GA750@ferd2.thristian.org>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	 <20030211.141712.59648863.glyph@twistedmatrix.com>
	 <20030211235434.GE31012@cantanker.net>
	 <20030212154325.17273.qmail@green.zadka.com>
	 <20030212224320.GA750@ferd2.thristian.org>
Message-ID: <1045105080.3319.61.camel@troglodyte.funhouse>

I'm gonna blurt out some information, and then run off to get some
food.  But someone (possibly me) should remember to follow up on this by
figuring out if this information is already in some document somewhere,
and if not, where it should be, and how to integrate it there. 
(Candidates include package/module docstrings, documents we seem to be
calling "howtos", the "Dot Products" section of the website, or
someplace else.)

I will target the specific questions you have asked in a high-level
fashion, this information does not take the place of the excellent
detailed documents in the "howto" directory on PB by Brian Warner and
others.

On Wed, 2003-02-12 at 14:43, screwtape at froup.com wrote:
>  - cred: Apparently this is something I need to get Right for PB to
>    work, but I'm not sure what it does. I'd have expected it to be
>    something like PAM for Linux - give it a name and password, and get
>    back 'allow' or 'deny' - but it seems this is not the case.

twisted.cred is a framework for the abstract ideas of "there are some
people and some services and some of the people access some of the
services."  There's Authorizer, that's the part to which you give a name
and a password.  It gives you back an Identity (or 'deny').  An Identity
holds a keyring.  If a person wants to access a Service but they don't
have a match on their keyring, they get 'deny'.  Otherwise, they get a
Perspective on that Service.  (The Perspective is for holding data that
overlaps between the Identity and the Service; you don't want to clutter
an Identity with data from every Service.)

>  - spread: I understand banana and jelly, but PB surpasses me. I don't
>    have a clear mental picture of how information flows between the
>    two processes. I'm looking for an API that resembles 'connect to
>    this server, tell me what objects there I can talk to', but I'm not
>    finding it.

"connect to this server" is well-documented, but I'll address "tell me
what objects[...]".  Assuming you use the standard usage of PB and cred
(using pb.IdentityConnector), you get back a reference to one object
upon connecting: Your Perspective (on the Service you asked to connect
to).  You may call methods that follow a certain naming convention on
that perspective (see the pb.Perspective API docs), which may return
references to other Referenceable objects.  

To the best of my knowledge, there are currently no facilities for
introspection across PB, so there's no built-in way to say "what remote
methods can I call on this object," nor is there even a "what services
are available", one of which would be the close analog to your "what
objects can I talk to" question.

Okay, dinnertime!

 - Kevin

-- 
The moon is waxing gibbous, 80.3% illuminated, 10.4 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030212/4e2264ad/attachment.pgp 

From z3p at twistedmatrix.com  Wed Feb 12 22:54:33 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 12 Feb 2003 22:54:33 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <m28ywlxp6b.fsf@justin.local.>
Message-ID: <3E4AD0A9.565.2179B8A@localhost>

On 12 Feb 2003 at 14:41, justin at iago.org wrote:
>  Is there an example out there of a basically functioning SSH server
>  using conch that will accept connections and authorize them based on
>  public keys (not passwords)?  The only documentation or example usage
>  I could find for conch is doc/examples/sshsimpleclient.py

There is now an example of this in CVS 
doc/examples/sshsimpleserver.py

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 23:42:01 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 12 Feb 2003 23:42:01 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>
Message-ID: <3E4B2219.494B8180@beeblebrox.gsfc.nasa.gov>

Bob Ippolito wrote:
> ....  As I see it, TAPs are not particularly
> useful for developers *until* they're ready to distribute their
> applications.  ...

I may be missing your point, but I don't find TAPs "unuseful", 
even though I haven't yet begun to distribute my application.  
As I said, one of the first things I did was write a 
tap creation script, pgertap.py, for my application, and it 
helped me organize my thoughts on planning config options, 
how various modules should start up in the server, etc.  Once 
in a while I'll refactor something and have to make a little 
adjustment in pgertap.py, but that's almost a useful thing 
in itself, in that pgertap.py contains a very brief synopsis 
of the architecture.  

When I make a change to the server and want to try it out, 
all I have to do is, in my "tap building" directory:

kill `cat twistd.pid`
rm * (remove the old taps and log file)
  [in a root shell, run setup.py in PanGalactic dir to reinstall]
mktap pger
twistd -f pger.tap

Doesn't get much easier than that.  Kind of gives a warm and 
fuzzy to know the install/mktap/run process works each 
time, anyway.  

As a relatively naive user of twisted, I only have a superficial, 
mechanical understanding of taps, but that doesn't bother me ... 
the simple little tap incantations make the twisted magic seem 
friendly somehow.  

Cheers,
-- Steve.



From twisted at moshez.org  Thu Feb 13 00:12:09 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 05:12:09 -0000
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
In-Reply-To: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>
References: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
		 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		 <20030211.141712.59648863.glyph@twistedmatrix.com>
		 <20030211235434.GE31012@cantanker.net>
		 <20030212154325.17273.qmail@green.zadka.com>
		 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros>
Message-ID: <20030213051209.24387.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> An important piece of this puzzle is the STEP (ISO 10303) standard for 
> "Product Model Data", which is a set of information models of the various 
> types of data I mentioned above.  STEP itself is very complex (and not 
> pretty, but it's really the only game in town for multi-disciplinary 
> engineering data integration and it is taken very seriously by all large 
> manufacturing organizations ... the list of organizations using/developing 
> STEP is a who's who of manufacturers:  Ford, GM, Daimler-Chrysler, Boeing, 
> Lockheed-Martin, Northrup Grumman, Raytheon, etc.), so one of the constraints 
> on PGEF is to be able to map between STEP's information models and the PGEF 
> repository schema ... if you browse the comments in createPgerDbTables.sql, 
> many refer to how things map to/from STEP.

STEP pretty much sucks for data-exchange, for a number of reasons. The primary
reason is that STEP loses the "design information", so that editing it is
about as fun as debugging programs by fixing their .o representations.
I don't know of any free solution, but Proficiency
(http://www.proficiency.com/products/product_overview.html) is working
in this area -- and their very existence is a testimony to STEP suckage.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Feb 13 01:10:28 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 13 Feb 2003 01:10:28 -0500
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
References: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
			 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
			 <20030211.141712.59648863.glyph@twistedmatrix.com>
			 <20030211235434.GE31012@cantanker.net>
			 <20030212154325.17273.qmail@green.zadka.com>
			 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com>
Message-ID: <3E4B36D4.771C1AE7@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Wed, 12 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> > An important piece of this puzzle is the STEP (ISO 10303) standard for
> > "Product Model Data", which is a set of information models of the various
> > types of data I mentioned above.  STEP itself is very complex (and not
> > pretty, but it's really the only game in town for multi-disciplinary
> > engineering data integration and it is taken very seriously by all large
> > manufacturing organizations ... the list of organizations using/developing
> > STEP is a who's who of manufacturers:  Ford, GM, Daimler-Chrysler, Boeing,
> > Lockheed-Martin, Northrup Grumman, Raytheon, etc.), so one of the constraints
> > on PGEF is to be able to map between STEP's information models and the PGEF
> > repository schema ... if you browse the comments in createPgerDbTables.sql,
> > many refer to how things map to/from STEP.
> 
> STEP pretty much sucks for data-exchange, for a number of reasons. The primary
> reason is that STEP loses the "design information", so that editing it is
> about as fun as debugging programs by fixing their .o representations.

I'm not sure which "design information" you are referring to.  
There are many, many types of design information.  
If you mean "construction history", that is being added to 
AP203 Ed. 2.  If you mean "parametrics", that is also to be 
added soon.  If you mean "manufacturing features", these 
are handled by AP224.  STEP has proven itself as the absolute 
best standard format for exchanging explicit 3D geometry between 
CAD systems, period.  In fact, during the past 10 years of 
STEP translator implementation, STEP has actually advanced 
the state of the art in handling differences between internal 
representations of geometric accuracy between CAD tools, which 
was quite a serious problem even for "point-to-point" solutions.  

The fact that you even refer to "editing it" (presumably you 
mean editing a STEP Part 21 file, which no one in their right 
mind would attempt, any more than you would try to edit a 
.o representation, as you say) suggests that you have quite 
missed the point:  STEP provides a set of information models 
and various ways of implementing them, one of which is file 
exchange (Part 21, "Clear Text Encoding"), and there are lots 
of tools for parsing, browsing, validating, mapping, 
visualizing, and *intelligently* editing STEP data.  For some 
examples, see:

http://www.lksoft.com

Lothar Klein's stuff is very cool.  Not open source, but very 
powerful, and very reasonably priced (probably much more 
reasonable than the proprietary solution you cite).

> I don't know of any free solution, but Proficiency
> (http://www.proficiency.com/products/product_overview.html) is working
> in this area -- and their very existence is a testimony to STEP suckage.

Not really.  It's just another proprietary solution, of which there 
will always be lots.  That's a bit like saying the existence of 
J2E proves that Twisted sucks.  ;^)  

BTW, you don't know of any "free solution" because there isn't 
one.  CAD software is complex, difficult stuff.  There *is* a free 
library for CAD, OpenCASCADE, which also has implemented some 
STEP translators ... and the fact that a powerful open source CAD 
package thinks STEP is worth implementing says a hell of a lot 
more about it than the existence of some over-hyped proprietary 
data exchange solutions.  

Believe me, having worked on STEP and STEP applications for the past 
10 years or so, I'd be the last person to claim that it's pretty.  
It has lots of warts.  But the reality is that it's the best game 
in town right now, and nothing else on the horizon comes close.  
It's like the old Defenders opening line, "STEP is a very bad form 
of data exchange ... but all the others are so much worse!"  

Cheers,
-- Steve.



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Feb 13 01:13:37 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 13 Feb 2003 01:13:37 -0500
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
References: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
			 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
			 <20030211.141712.59648863.glyph@twistedmatrix.com>
			 <20030211235434.GE31012@cantanker.net>
			 <20030212154325.17273.qmail@green.zadka.com>
			 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com>
Message-ID: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:

> I don't know of any free solution, but Proficiency
> (http://www.proficiency.com/products/product_overview.html) is working
> in this area -- and their very existence is a testimony to STEP suckage.

I just read their FAQ ... don't believe everything you read.  ;^)

-- Steve.



From m at moshez.org  Thu Feb 13 02:06:58 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 07:06:58 -0000
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
In-Reply-To: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>
References: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>, <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
			 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
			 <20030211.141712.59648863.glyph@twistedmatrix.com>
			 <20030211235434.GE31012@cantanker.net>
			 <20030212154325.17273.qmail@green.zadka.com>
			 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com>
Message-ID: <20030213070658.20421.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> I just read their FAQ ... don't believe everything you read.  ;^)

I worked there for >1 year. :)

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From glyph at twistedmatrix.com  Thu Feb 13 03:51:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 02:51:08 -0600 (CST)
Subject: [Twisted-Python] Re: cred? spread?
In-Reply-To: <1045105080.3319.61.camel@troglodyte.funhouse>
References: <20030212154325.17273.qmail@green.zadka.com>
	<20030212224320.GA750@ferd2.thristian.org>
	<1045105080.3319.61.camel@troglodyte.funhouse>
Message-ID: <20030213.025108.74754952.glyph@twistedmatrix.com>


On 12 Feb 2003 18:58:02 -0800, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> To the best of my knowledge, there are currently no facilities for
> introspection across PB, so there's no built-in way to say "what remote
> methods can I call on this object," nor is there even a "what services
> are available", one of which would be the close analog to your "what
> objects can I talk to" question.

I don't have any time for this, but it should be a straightforward thing to do
to implement on top of existing protocol semantics.  I would appreciate it if
somebody who knows a bit about PB and Python interfaces (bonus if you can use
twisted.python.formmethod for some of it, but that's not necessary) could take
a crack at proposing a standard set of methods for PB object introspection.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/27169a97/attachment.pgp 

From dave at krondo.com  Thu Feb 13 04:18:23 2003
From: dave at krondo.com (Dave Peticolas)
Date: 13 Feb 2003 01:18:23 -0800
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <20030210235415.474c70c1.twisted@itamarst.org>
References: <417403503.20030211030402@uch.net>
	 <01c201c2d171$86491000$6501a8c0@listy>
	 <20030210235415.474c70c1.twisted@itamarst.org>
Message-ID: <1045127902.27311.51.camel@oneiros>

On Mon, 2003-02-10 at 20:54, Itamar Shtull-Trauring wrote:
> On Mon, 10 Feb 2003 21:01:42 -0500
> "Jeff Grimmett" <grimmtooth at softhome.net> wrote:
> 
> > This generates an error message at the win32eventreactor.install()
> > line:
> > 
> >     assert not sys.modules.has_key('twisted.internet.reactor'), \
> > AssertionError: reactor already installed
> > 
> > What am I missing?
> 
> win32eventreactor.install() should be the *first* thing in your module
> or app. It has to be run before any other code is, or someone might
> "from twisted.internet import reactor", which installs the default
> reactor.

This also confused me (and another developer new to Twisted) when
we first encountered it. You normally don't expect import order to
matter, especially for seemingly different namespaces (t.i.reactor
versus t.i.win32eventreactor, for example). I realize that
win32eventreactor.install() is messing with the modules namespace,
but you don't know that without delving deep into the code.

I've come up with a patch to eliminate the need to remember
a special import order. Since the reactor mechanism is so basic
to Twisted, I am attaching it for review rather than committing
it, although it does pass 'trial' for the default reactor and
several others.

The gtk2reactor trial is failing to even finish, but that
seems to be unrelated to this patch. Are others seeing this
behavior?

thanks,
dave

-------------- next part --------------
? bin/_trial_temp
Index: twisted/internet/default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.63
diff -u -r1.63 default.py
--- twisted/internet/default.py	3 Feb 2003 23:53:30 -0000	1.63
+++ twisted/internet/default.py	13 Feb 2003 01:13:25 -0000
@@ -500,11 +500,31 @@
         return readers
 
 
+class StubReactor:
+    """A placeholder reactor."""
+
+    realReactor = None
+
+    def installReactor(self, reactor):
+        self.realReactor = reactor
+
+    def reactorInstalled(self):
+        return self.realReactor is not None
+
+    def __getattr__(self, key):
+        if self.realReactor is None:
+            del sys.modules['twisted.internet.reactor']
+            reactor = install()
+            self.installReactor(reactor)
+        return getattr(self.realReactor, key)
+
+
 def install():
     """Configure the twisted mainloop to be run using the select() reactor.
     """
     reactor = SelectReactor(1)
     main.installReactor(reactor)
+    return reactor
 
 
-__all__ = ["install", "PosixReactorBase", "SelectReactor"]
+__all__ = ["install", "PosixReactorBase", "SelectReactor", "StubReactor"]
Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.86
diff -u -r1.86 main.py
--- twisted/internet/main.py	15 Oct 2002 18:32:37 -0000	1.86
+++ twisted/internet/main.py	13 Feb 2003 01:13:26 -0000
@@ -111,9 +111,14 @@
     global iterate, addTimeout, wakeUp
     # this stuff should be common to all reactors.
     import twisted.internet
+    import default
     import sys
-    assert not sys.modules.has_key('twisted.internet.reactor'), \
-           "reactor already installed"
+    if sys.modules.has_key('twisted.internet.reactor'):
+        current = sys.modules['twisted.internet.reactor']
+        assert (isinstance(current, default.StubReactor) and
+                not current.reactorInstalled()), \
+                "reactor already installed"
+        current.installReactor(reactor)
     twisted.internet.reactor = reactor
     sys.modules['twisted.internet.reactor'] = reactor
 
Index: twisted/internet/reactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/reactor.py,v
retrieving revision 1.4
diff -u -r1.4 reactor.py
--- twisted/internet/reactor.py	1 Sep 2002 10:41:06 -0000	1.4
+++ twisted/internet/reactor.py	13 Feb 2003 01:13:26 -0000
@@ -13,17 +13,23 @@
 # You should have received a copy of the GNU Lesser General Public
 # License along with this library; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
 """
 See twisted.internet.interfaces.IReactor*.
 """
+
 import sys
 del sys.modules['twisted.internet.reactor']
+
 from twisted.python import runtime
+
 if runtime.platform.getType() == 'java':
     from twisted.internet import javareactor
     javareactor.install()
 else:
-    #from twisted.python import log
-    #log.msg("Installing SelectReactor, since unspecified.")
+    import sys
+    import twisted.internet
     from twisted.internet import default
-    default.install()
+    reactor = default.StubReactor()
+    twisted.internet.reactor = reactor
+    sys.modules['twisted.internet.reactor'] = reactor
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/a6fd1e4f/attachment.pgp 

From a.d.stribblehill at durham.ac.uk  Thu Feb 13 04:38:27 2003
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Thu, 13 Feb 2003 09:38:27 +0000
Subject: [Twisted-Python] Woven howto doc bug?
In-Reply-To: <20030212184057.29316.qmail@green.zadka.com>
References: <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com>
Message-ID: <20030213093827.GR9228@wompom>

Quoting Moshe Zadka <twisted at moshez.org> (2003-02-12 06:40:57 GMT):
> On Wed, 12 Feb 2003, Andrew Stribblehill <a.d.stribblehill at durham.ac.uk> wrote:
> 
> > From the Woven howto, it tells me I should do:
> > 	from twisted.web.woven import page
> > 
> > This doesn't exist in 1.0.3rc1, but:
> 
> Yes it does.
> At least, it exists in both the tarball and the Python 2.2 sid Debian package.

Okay. In that case, I assert that there's a bugette in your
dependencies for python-twisted. It should IMO depend on the exact
version of python2.2-twisted that it has. I installed the
python-twisted package from sourceforge but it didn't upgrade my
python2.2-twisted. Hence my confusion.

Hrm, that doesn't sound quite so apologetic as it might. I was wrong,
but at least you can see why now!

-- 
EAST SOLE LUNDY FASTNET IRISH SEA
MAINLY EAST OR SOUTHEAST 3 OR 4, OCCASIONALLY 5. OCCASIONAL DRIZZLE
LATER. MODERATE OCCASIONALLY POOR, WITH FOG PATCHES IN LUNDY AND
IRISH SEA AT FIRST



From twisted at moshez.org  Thu Feb 13 04:48:00 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 09:48:00 -0000
Subject: [Twisted-Python] Woven howto doc bug?
In-Reply-To: <20030213093827.GR9228@wompom>
References: <20030213093827.GR9228@wompom>, <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com>
Message-ID: <20030213094800.27908.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Andrew Stribblehill <a.d.stribblehill at durham.ac.uk> wrote:

> Okay. In that case, I assert that there's a bugette in your
> dependencies for python-twisted. It should IMO depend on the exact
> version of python2.2-twisted that it has.

No it shouldn't.
Dependencies should not be artifically hardened. If you upgrade
"python-twisted", there's no reason why I should assume you also wanna
upgrade python2.2-twisted.
If you want to upgrade everything, use apt.
That's what apt is there for.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From glyph at twistedmatrix.com  Thu Feb 13 05:26:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 04:26:27 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213011452.GC20194@frobozz.local>
References: <20030211235434.GE31012@cantanker.net>
	<20030212.075146.122586679.glyph@twistedmatrix.com>
	<20030213011452.GC20194@frobozz.local>
Message-ID: <20030213.042627.122625493.glyph@twistedmatrix.com>


On Thu, 13 Feb 2003 12:14:52 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Frankly, I see TAPs as one more concept that a new user shouldn't be burdened
> with comprehending.  Reactors, Factories, Protocols, Transports and Deferreds
> are hard enough on their own.  I really think docs that start by using
> reactor.listenTCP, and possibly app.listenTCP, are the way to go.

The metaphor that springs most readily to mind is that of GUI application
toolkits.  Despite the fact that drawing a single pixel is more easily
comprehensible to someone who knows a bit about graphics, and many GTK
programmers are probably graphics people, the tutorial begins with drawing a
whole button.  Buttons may not be of interest to people writing stock-tickers,
and in fact simple drawing primitives and timed callbacks are more useful to
them.  Nevertheless, the "hello world" of GTK is a button you can click on and
a window you can close and stop the main-loop.  The GTK developers want to
encourage you to program in such a way that your code can interoperate with
more of the GTK codebase, and the mechanism that they try to use for that is
widgets.

As I've said before, Twisted's "widget" analogy is strained, since GTK widgets
are a really *good* abstraction and Twisted mktap plugins are a really *bad*
abstraction, but the general category of thing is the same.

A new Twisted user in any domain except low-level networking should
require only cursory knowledge of Reactors, Factories, Protocols, and
Transports.  Assuming we have 3 classes of user:

    * network protocol developer
    * RPC developer (using PB)
    * web developer

_All_ of these developers should be aware of TAPs and Deferreds, and only the
network protocol developer needs to have a really thorough understanding of
Reactors/Factories/Protocols.  The web developer can get away with only a
rudimentary understanding of Deferreds, too.

I'm talking here about what we need to communicate with these developers, and
not the state the docs are already in: as much as they've improved there's much
more they need.  In particular, we currently imply one path through the
documentation, which I think we've previously agreed is just wrong.  We need
more types of plugins for different interest groups!

> Don't try make people swallow all of Twisted at once... it's just too big.

I don't think the core is too big, and making this argument sounds like we're
really making users swallow ALL of twisted.  We're clearly not.  I really doubt
that anyone who can't fit the basic concepts of Reactor, Factory, Protocol and
Transport into their head within a day or two is competent to do network
programming in any environment: Twisted is one of the easiest.  Users
unfamiliar with networking concepts may take longer to get adjusted, but such
is life and learning.

Outside of the set of things you've talked about here, Twisted also contains
servers for HTTP, NNTP, FTP, IRC, [...], and a plethora of application-domain
abstractions to support those protocols.  Putting more than one of _those_ into
a general introductory document because you think it's cool is probably
overkill, although it's hard to avoid completely.

However, TAPs are one of the few base mechanisms for services to communicate
with each other within the Twistedverse.  Much like Deferreds, they don't imply
any particular functionality of your application beyond "asynchronous
execution".  They do have the additional overhead of "persistence", but you
don't need to worry much about that.  If you're not instantiating any
particularly weird objects of your own, the framework won't burden you with
unpersistable stuff at least for the initial TAP construction.

> I'll even go so far as speculating that this will cause more external
> projects to use TAPs, because they won't be seen as some annoying idea in the
> beginner docs that they had to skip past to get real work done.

Based on my experience thus far, I doubt this very much.  I'd be interested in
a simple show of hands that indicates whether this is an accurate perception.

The feedback I got on the Plugins document at the time I wrote it was that it
was a good grounding in the way that I think about Twisted tying together.  The
people who don't want such an understanding have ignored it to this day :-).
Placing it as an introductory document at least makes this a conscious
decision: they will skip it and ignore it, looking for the document that
explains their particular problem.

Most people, including software developers, will skip anything they don't
already believe they need to read.  Server software developers don't think very
much about integration: though someone using Twisted has eschewed custom and
decided not to rewrite everything from scratch, there is still a persistent
belief in the application developers have an unrealistic degree of control over
the deployment environment, which turns software immediately into
consultingware and ruins its general applicability.  TAPs are one tiny, tiny
microcosm of this problem, so I don't expect that they will solve all the
world's ills in this regard, either :).

Featuring the TAP plugin howto prominently at least stimulates debate about
TAPs.  This conversation is not the first such one (though it is by far the
lengthiest and most public). Conversations stimulate development in turn.

Despite occasional fits of philosophical obscurantism, I am also more a
programmer than an ideologue.  While this conversation has been going on, I've
been kicking around more and more ideas for COIL and how to make this whole
plugin thing a really slick whiz-bang experience.  I'm sure that will be more
convincing than an email thread.

Those of you who are disagreeing, consider that even your disagreement is a
contribution :-).

> Give Twisted plugins its own, comprehensive doc that can assume knowledge of
> basic Twisted, rather than short-changing it by making it the introductory
> doc.  It could start with a section titled "Motivation", explaining the
> advantages of twistd and mktap.

While I think of this as an important introductory doc, it's already the 18th
document in the book.  In fact, it comes after "Using Dirdbm", which I think
may be shortchanging it a *bit* more than treating it as introductory :-).

As to comprehensiveness: I'd love to have a whole chapter on plugins, but
frankly there isn't that much to cover.  Do you feel that the current doc is
not thorough enough?

And finally, motivation: the section "Twisted and You: Where Does Your Code Fit
In?" may not be optimal, but I think it explains in overview terms why one
would want to use a TAP.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/9dc9d43e/attachment.pgp 

From glyph at twistedmatrix.com  Thu Feb 13 05:39:52 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 04:39:52 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <1045093084.1188.45.camel@momo.initd.org>
References: <20030212154325.17273.qmail@green.zadka.com>
	<20030212224320.GA750@ferd2.thristian.org>
	<1045093084.1188.45.camel@momo.initd.org>
Message-ID: <20030213.043952.74569826.glyph@twistedmatrix.com>


On 13 Feb 2003 00:38:04 +0100, Federico Di Gregorio <fog at initd.org> wrote:
> i started by ignoring *everything* with the word 'tap' in it, mainly
> because i found the terms 'tap' and 'http server' togheter two times and
> was looking for something different. i also completely ignored coil.

> using basic PB (no authentication, yes jellification of classes) was
> easy with the tutorial (about 8h, gtk2reactor fixing included) but
> switching to cred was much more difficult. the documentation was not
> enough to write my first app authenticating the users vs a database and
> providing different perspectives to them (about 2 days).

I'm glad that you found some of these things easy to do.  I also wouldn't argue
that the existing documentation _is_ necessarily sufficient for those use-cases
that you've provided.  However, have you actually looked at all of it yet?  It
does sort of make your feedback less useful to begin with "I began by ignoring
[large portions of documentation] ..." and end with "the documentation was not
sufficient ...".

In particular, have you checked out
http://www.twistedmatrix.com/documents/howto/pb-cred ? The title does not have
the word "cred" in the HTML index, so perhaps you overlooked it?  If so, what's
missing?

> right now we are using twisted for two "work" projects and we plan to
> integrate in it a port of our previous product (easy, transactional db
> access on server side and automatic binding of objects to the gui client
> side, more on that if you people are interested.)

When can you be more specific? :)

> maybe i am a little biased by the fact that our previous framework was
> very similar to PB, but i don't think people approaching twisted are
> interested in yet another http/irc/xxx server (w/ or w/o TAPS.)
> more on the "framework" side, to develop applications or custom
> protocols. 

I wish you were right!  This was not a technology space I really wanted to
address, originally.  Unfortunately, "web" is still hot these days, and Twisted
adds some substantial frosting to the web that just isn't possible with most
other servers.  Most (I would go so far as to say "almost all") of the initial
burst of interest in Twisted happened when I added a web-server, even when the
webserver was crap.  The enigmatic "tenth" put it best in the quotefile:

    <tenth> I get the feeling that I could rack up some ad impressions by
    posting an announcement to [freshmeat] about a webserver "powered entirely
    by love, that I made out of this bong I had".
    <tenth> Well, as long as it did something really l88t that other
    bong-servers didn't do, anyway.

Twisted is not powered entirely by love, so to set the record straight: it is
powered by a glowing green substance that fell to earth, presumably from space.
Do not apply Twisted to your skin or eyes.  Do not taunt "happy fun internet".
For use only as directed.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/635a421a/attachment.pgp 

From glyph at twistedmatrix.com  Thu Feb 13 06:17:02 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 05:17:02 -0600 (CST)
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven
 howto doc bug?)
In-Reply-To: <20030213094800.27908.qmail@green.zadka.com>
References: <20030212175359.GQ9228@wompom>
	<20030212184057.29316.qmail@green.zadka.com>
	<20030213094800.27908.qmail@green.zadka.com>
Message-ID: <20030213.051702.89042779.glyph@twistedmatrix.com>


On 13 Feb 2003 09:48:00 -0000, Moshe Zadka <twisted at moshez.org> wrote:
> Dependencies should not be artifically hardened. If you upgrade
> "python-twisted", there's no reason why I should assume you also wanna
> upgrade python2.2-twisted.

Is there any situation where it is sane to have a later version of a dummy
package than of the package that it depends on?

I notice that python-crypto does it your way, python-numeric depends on
absolute version, python-tk depends on greater-than-or-equal version,
python-gtk2 does it your way...

Apparently this is up to the individual packager, but as a user I would expect
the latest version of the dummy package to upgrade the real package.  Why this
inconsistency between different packages?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/d775a6df/attachment.pgp 

From m at moshez.org  Thu Feb 13 06:24:55 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 11:24:55 -0000
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven
 howto doc bug?)
In-Reply-To: <20030213.051702.89042779.glyph@twistedmatrix.com>
References: <20030213.051702.89042779.glyph@twistedmatrix.com>, <20030212175359.GQ9228@wompom>
	<20030212184057.29316.qmail@green.zadka.com>
	<20030213094800.27908.qmail@green.zadka.com>
Message-ID: <20030213112455.19926.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Apparently this is up to the individual packager, but as a user I would expect
> the latest version of the dummy package to upgrade the real package.  Why this
> inconsistency between different packages?

a) No policy
b) No difference in behaviour if used through the recommended channels of
   upgrading (apt or dselect)
c) More work (and thus, more potential bugs) to do it with absolute
   dependencies.
d) If you're using plain dpkg, why do you assume these dependencies should
   be enough? A user could upgrade twisted-doc but not python-twisted, thus
   again getting an unsynced version.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From andrew-twisted at puzzling.org  Thu Feb 13 07:45:50 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 13 Feb 2003 23:45:50 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213.042627.122625493.glyph@twistedmatrix.com>
References: <20030211235434.GE31012@cantanker.net> <20030212.075146.122586679.glyph@twistedmatrix.com> <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com>
Message-ID: <20030213124550.GB21068@frobozz.local>

On Thu, Feb 13, 2003 at 04:26:27AM -0600, Glyph Lefkowitz wrote:
> 
> > Don't try make people swallow all of Twisted at once... it's just too big.
> 
> I don't think the core is too big, and making this argument sounds like we're
> really making users swallow ALL of twisted.  We're clearly not.  I really doubt
> that anyone who can't fit the basic concepts of Reactor, Factory, Protocol and
> Transport into their head within a day or two is competent to do network
> programming in any environment: Twisted is one of the easiest.  Users
> unfamiliar with networking concepts may take longer to get adjusted, but such
> is life and learning.

I agree that comprehending the "basic concepts of Reactor, Factory, Protocol
and Transport" is not too much to ask of a Twisted newbie, so long as you
don't unnecessarily distract them :)

Anyway, I've taken a look at the current shape of the docs, and I've got
a couple of ideas:

  - The "The Basics" chapter covers too little too thinly to be of any use.
    Its pages should be moved accordingly:
      - Installation -> Introduction
      - Bringing up a web server -> Web Applications
      - Using the utilities, Using manhole to configure twisted, Using
        telnet to configure twisted -> a new chapter "Administering Twisted
        Applications", or something like that.  The new chapter would be
        placed somewhere after Low-Level Twisted.
  - Removing the "The Basics" chapter would move the High-Level Twisted to
    the second chapter, right after Introduction.  This feels right to me :)

Currently, "The Basics" chapter offers *nothing* relevant to a newbie
Twisted developer.
  
> Outside of the set of things you've talked about here, Twisted also contains
> servers for HTTP, NNTP, FTP, IRC, [...], and a plethora of application-domain
> abstractions to support those protocols.  Putting more than one of _those_ into
> a general introductory document because you think it's cool is probably
> overkill, although it's hard to avoid completely.

Definitely.  Ideally, there would be a "Twisted Protocols" chapter in the
docs, with a section for each module in twisted.protocols.* -- but most of
those modules are moving targets, and the API docs aren't too bad, so it's
not a big priority.  Perhaps a limited "Brief Guide to Twisted Protocols"
which just covers a couple of the major modules would be beneficial, though?

> However, TAPs are one of the few base mechanisms for services to communicate
> with each other within the Twistedverse.  Much like Deferreds, they don't imply
> any particular functionality of your application beyond "asynchronous
> execution".  They do have the additional overhead of "persistence", but you
> don't need to worry much about that.  If you're not instantiating any
> particularly weird objects of your own, the framework won't burden you with
> unpersistable stuff at least for the initial TAP construction.

They're orthongal to the task of writing a server/client using Twisted, thus
they shouldn't be up there with Factories, Protocols and Deferreds in the
set of Stuff A New Twisted Developer Needs To Know.

I do agree that TAPs are something a medium-level Twisted programmer should
know, I just disagree with making them a focus of the introductory docs.

> > I'll even go so far as speculating that this will cause more external
> > projects to use TAPs, because they won't be seen as some annoying idea in the
> > beginner docs that they had to skip past to get real work done.
> 
> Based on my experience thus far, I doubt this very much.  I'd be interested in
> a simple show of hands that indicates whether this is an accurate perception.

Me too; after all, it's mere speculation on my part :)

> Most people, including software developers, will skip anything they don't
> already believe they need to read.  Server software developers don't think very
> much about integration: though someone using Twisted has eschewed custom and
> decided not to rewrite everything from scratch, there is still a persistent
> belief in the application developers have an unrealistic degree of control over
> the deployment environment, which turns software immediately into
> consultingware and ruins its general applicability.  TAPs are one tiny, tiny
> microcosm of this problem, so I don't expect that they will solve all the
> world's ills in this regard, either :).

Especially considering they don't yet do WinNT services, for instance :)

I also think that TAPs aren't particularly good for, say, a GTK IRC client.
It makes much more sense for a user to run "/usr/bin/twisted-chat", than
"mktap twisted-chat; twistd -f twisted-chat.tap".  So I'm not convinced that
they're as universally applicable as Factories, etc, which is why I think
they should be less prominent.

I also think that this sentence from plugin.html is worded too strongly
(especially given that it's in <strong> tags):
    "Although there are other ways for Twisted to call your code, all
    Twisted projects should start as a plug-in of some kind."

Twisted is quite capable of being useful standalone apps like GUI IRC
clients, but nothing in that doc suggests to me that writing one as a
Twisted plugin would be a good idea.  Perhaps what I'm really trying to say
is that not all the world is a long-running unix daemon with interesting
persistable state, but currently the docs assume that.

> Featuring the TAP plugin howto prominently at least stimulates debate about
> TAPs.  

Couldn't you just post to the mailing list like a normal person? ;)

>        This conversation is not the first such one (though it is by far the
> lengthiest and most public). Conversations stimulate development in turn.

Indeed! :)

> Despite occasional fits of philosophical obscurantism, I am also more a
> programmer than an ideologue.  While this conversation has been going on, I've
> been kicking around more and more ideas for COIL and how to make this whole
> plugin thing a really slick whiz-bang experience.  I'm sure that will be more
> convincing than an email thread.

Yes!

> Those of you who are disagreeing, consider that even your disagreement is a
> contribution :-).
> 
> > Give Twisted plugins its own, comprehensive doc that can assume knowledge of
> > basic Twisted, rather than short-changing it by making it the introductory
> > doc.  It could start with a section titled "Motivation", explaining the
> > advantages of twistd and mktap.
> 
> While I think of this as an important introductory doc, it's already the 18th
> document in the book.  In fact, it comes after "Using Dirdbm", which I think
> may be shortchanging it a *bit* more than treating it as introductory :-).

I must admit, I recalled it being more prominent than that... being dumped
after Using Dirdbm is a bit harsh :)

> As to comprehensiveness: I'd love to have a whole chapter on plugins, but
> frankly there isn't that much to cover.  Do you feel that the current doc is
> not thorough enough?
> 
> And finally, motivation: the section "Twisted and You: Where Does Your Code Fit
> In?" may not be optimal, but I think it explains in overview terms why one
> would want to use a TAP.

You're probably right... the existing docs for plugins are fairly good.  The
main part lacking is something that points out "Hey, if you do this, you can
use twistd(1), and take advantage of its daemonisation and logging and
etc...".  It's hard to see the immediate benefit of mktap and twistd, when
you could ignore them and just run "./foo ...", rather than "mktap foo ... ;
twistd -f foo".

So, I'm asking for a more pragmatic motivation, rather than the existing
(but still valuable) philosophical one, which doesn't point this out.
"Framework" vs. "library"?  Who cares.  "Yet another abstraction I have to
cope with"?  Bleagh.  "It will give me proper daemonisation and logging and
..."?  Hey, tell me more!

-Andrew.




From justin at iago.org  Thu Feb 13 08:56:28 2003
From: justin at iago.org (Justin Sheehy)
Date: Thu, 13 Feb 2003 08:56:28 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4AD0A9.565.2179B8A@localhost> ("Paul Swartz"'s message of
 "Wed, 12 Feb 2003 22:54:33 -0500")
References: <3E4AD0A9.565.2179B8A@localhost>
Message-ID: <m24r78gu7n.fsf@justin.local.>

"Paul Swartz" <z3p at twistedmatrix.com> writes:

> doc/examples/sshsimpleserver.py

Excellent!

Thank you, Paul.  I'll check this out later today.

-Justin

 




From theller at python.net  Thu Feb 13 09:08:44 2003
From: theller at python.net (Thomas Heller)
Date: 13 Feb 2003 15:08:44 +0100
Subject: [Twisted-Python] From factory to protocol
Message-ID: <65ro5l3n.fsf@python.net>

Is it somehow possible to get to the protocol from the factory?

My code is structured this way:

I create instances of a Factory (sub)class, these (in their __init__
method), call reactor.connectTCP(address, port, self).

The protocol (LineReceiver) subclass hands data it receives to the
factory instance via self.factory.handle_data(), which parses the data
and calls methods in the 'models' they control.

Now, the models I have sometimes create events which must be sent to the
protocol again, but how can I access the actual protocol instance
from the Factory?

Thanks,

Thomas




From lac at strakt.com  Thu Feb 13 09:18:17 2003
From: lac at strakt.com (Laura Creighton)
Date: Thu, 13 Feb 2003 15:18:17 +0100
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?) 
In-Reply-To: Message from Glyph Lefkowitz <glyph@twistedmatrix.com> 
   of "Thu, 13 Feb 2003 05:17:02 CST." <20030213.051702.89042779.glyph@twistedmatrix.com> 
References: <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213.051702.89042779.glyph@twistedmatrix.com> 
Message-ID: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>

Some packages are found to have such horrible bugs in them that they
should never be used by anybody for any purpose whatsoever, regardless
of who was unfortunate enough to depend on them.  I don't know if this
is the case for those debian packages, however.

Laura



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Feb 13 09:34:19 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 13 Feb 2003 09:34:19 -0500
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
References: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>, <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
				 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
				 <20030211.141712.59648863.glyph@twistedmatrix.com>
				 <20030211235434.GE31012@cantanker.net>
				 <20030212154325.17273.qmail@green.zadka.com>
				 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com> <20030213070658.20421.qmail@green.zadka.com>
Message-ID: <3E4BACEB.6C21E5C1@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Thu, 13 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> > I just read their FAQ ... don't believe everything you read.  ;^)
> 
> I worked there for >1 year. :)

Ah ... I guess we each have our biases, then.  ;^)



From acapnotic at twistedmatrix.com  Thu Feb 13 12:04:37 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 13 Feb 2003 09:04:37 -0800
Subject: [Twisted-Python] From factory to protocol
In-Reply-To: <65ro5l3n.fsf@python.net>
References: <65ro5l3n.fsf@python.net>
Message-ID: <1045155821.3318.71.camel@troglodyte.funhouse>

On Thu, 2003-02-13 at 06:08, Thomas Heller wrote:
> Now, the models I have sometimes create events which must be sent to the
> protocol again, but how can I access the actual protocol instance
> from the Factory?

You'll have to override the factory's buildProtocol() to have it store
the protocol instance someplace.  For an example, see
twisted.words.tendril.TendrilFactory, which I think has similar needs to
yours.  I don't think that code has been peer-reviewed much, so I won't
promise it exemplifies Best Practices, but the answer should be in that
direction someplace.
 
Cheers,

 - Kevin

-- 
The moon is waxing gibbous, 84.9% illuminated, 11.0 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/24770621/attachment.pgp 

From acapnotic at twistedmatrix.com  Thu Feb 13 13:23:39 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 13 Feb 2003 10:23:39 -0800
Subject: [Twisted-Python] Lore vs. latex2html: Fight to the Finish
In-Reply-To: <20030208205338.GA1101@radii>
References: <20030208185304.9876.qmail@green.zadka.com>
	 <20030208205338.GA1101@radii>
Message-ID: <1045160617.3319.83.camel@troglodyte.funhouse>

On Sat, 2003-02-08 at 12:53, Christopher Armstrong wrote:
> bold stands out much more when you're
> skimming through. I like it when I can find the initial
> description/definition of a term within a particular area of a paper
> by skimming over all of the bold terms.

such terms should probably be marked <dfn>, not <em>.
dfn "indicates that this is the defining instance of the enclosed
term."  And yes, it makes sense to me to make dfn bold in the
stylesheet.

-- 
The moon is waxing gibbous, 85.3% illuminated, 11.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/bfdc7f34/attachment.pgp 

From abe at fettig.net  Thu Feb 13 13:24:04 2003
From: abe at fettig.net (Abe Fettig)
Date: 13 Feb 2003 13:24:04 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213.042627.122625493.glyph@twistedmatrix.com>
References: <20030211235434.GE31012@cantanker.net>
	 <20030212.075146.122586679.glyph@twistedmatrix.com>
	 <20030213011452.GC20194@frobozz.local>
	 <20030213.042627.122625493.glyph@twistedmatrix.com>
Message-ID: <1045160643.808.61.camel@mingus>

On Thu, 2003-02-13 at 05:26, Glyph Lefkowitz wrote:

> A new Twisted user in any domain except low-level networking should
> require only cursory knowledge of Reactors, Factories, Protocols, and
> Transports.  Assuming we have 3 classes of user:
> 
>     * network protocol developer
>     * RPC developer (using PB)
>     * web developer

I'd be in the "Network protocl developer" category, I guess, although my
on of my reasons for using Twisted is to *not* have to implement
protocols.

Background: I came to Twisted looking to improve my Hep Message Server
project.  Hep is a message server than can send and recieve messages
(e-mails, web pages, RSS feeds, etc) via SMTP, POP3, and HTTP currently,
and NNTP, IMAP, and IM in the future.  I had written my own support for
POP3, SMTP, and HTTP servers using python's asyncore, which worked OK,
but I wanted to switch to a more featureful framework that would save me
the effort of writing and debugging asyncore servers.

> _All_ of these developers should be aware of TAPs and Deferreds, and only the
> network protocol developer needs to have a really thorough understanding of
> Reactors/Factories/Protocols.  The web developer can get away with only a
> rudimentary understanding of Deferreds, too.

90% of what I'm using in Twisted so far is protocols + reactor. TAPs to
me are a nice bonus, something that comes with the framework for free.  
Maybe if I was a web developer, doing less low-level stuff, TAPs would
have seemed more important.  But when I'm writing thousands of lines of
code already, having to write another little script to start my
application and run it as a daemon seems a lot easier than writing a TAP
plugin and having to "compile" a new TAP every time I make a change to
the code.  Once I get to the point where end users are installing my
software, TAPs will probably become more important.  But when I'm just
running the software myself, to debug it, I don't care about the
features TAPs might provide.  Thus in my mind it seemed makes sense to
use the other parts of Twisted before I got into TAPs.

> However, TAPs are one of the few base mechanisms for services to communicate
> with each other within the Twistedverse.  

Could you explain (or point to some info on) how TAPs can provide
"mechanisms for services to communicate with each other"?  I'd be
interested in that.

> > I'll even go so far as speculating that this will cause more external
> > projects to use TAPs, because they won't be seen as some annoying idea in the
> > beginner docs that they had to skip past to get real work done.
> 
> Based on my experience thus far, I doubt this very much.  I'd be interested in
> a simple show of hands that indicates whether this is an accurate perception.

"Had to skip past to get real work done" - yes.  But that doesn't mean
I've abandoned the idea of ever using TAPs.

> While I think of this as an important introductory doc, it's already the 18th
> document in the book.  In fact, it comes after "Using Dirdbm", which I think
> may be shortchanging it a *bit* more than treating it as introductory :-).

Didn't it used to be right at the front?  I remember it as being one of
the first things I read.  Actually, the current HOWTO layout looks like
it's gotten a lot better since I was last there...


I really like Twisted, thanks for all the work you guys have done!

Abe




From corydodt at yahoo.com  Thu Feb 13 14:13:08 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 13 Feb 2003 11:13:08 -0800 (PST)
Subject: [Twisted-Python] Criticism requested: <q>Extending Lore</q>
Message-ID: <20030213191308.11513.qmail@web10010.mail.yahoo.com>

I just added a new howto titled "Extending the Lore Documentation System"
(extend-lore.html).  It is currently incomplete, but it walks you through
a complete simple example for adding new LaTeX spitters.

Let me know if there are any more topics that deserve coverage (other than
the unfinished headings already there).  Also point out typos, grammatical
errors, broken example code, and tell me if you're having a bad day.

Thanks!

C

__________________________________________________
Do you Yahoo!?
Yahoo! Shopping - Send Flowers for Valentine's Day
http://shopping.yahoo.com



From twisted at moshez.org  Thu Feb 13 15:27:02 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 20:27:02 -0000
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?)
In-Reply-To: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>
References: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>, <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213.051702.89042779.glyph@twistedmatrix.com>
Message-ID: <20030213202702.24381.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Laura Creighton <lac at strakt.com> wrote:

> Some packages are found to have such horrible bugs in them that they
> should never be used by anybody for any purpose whatsoever, regardless
> of who was unfortunate enough to depend on them.  I don't know if this
> is the case for those debian packages, however.

I'm making the debian packages.
All bugs in the packages uploaded to Debian are available on
http://bugs.debian.org/src:twisted
All bugs in the packages the Twisted team makes should be reported here.
Most are promptly dealth with.
The Debian packages are used in production on the twistedmatrix.com
site (if you're reading this via the web archive: you've just successfully
used the Debian package).
I'm not aware of any show stopping bugs in the Debian packages.
Please avoid spreading FUD.

Thanks.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From m at moshez.org  Thu Feb 13 15:30:10 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 20:30:10 -0000
Subject: [Twisted-Python] Criticism requested: <q>Extending Lore</q>
In-Reply-To: <20030213191308.11513.qmail@web10010.mail.yahoo.com>
References: <20030213191308.11513.qmail@web10010.mail.yahoo.com>
Message-ID: <20030213203010.25157.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Cory Dodt <corydodt at yahoo.com> wrote:

> I just added a new howto titled "Extending the Lore Documentation System"
> (extend-lore.html).  It is currently incomplete, but it walks you through
> a complete simple example for adding new LaTeX spitters.

I haven't yet looked through it, but one remark: please just put this stuff
in the Lore howto if it's not insanely long. I don't want to have a million
of small HOWTOs.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From exarkun at intarweb.us  Thu Feb 13 16:09:39 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 13 Feb 2003 16:09:39 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030211015602.GD12562@radii>
Message-ID: <20030213210939.GA23400@meson.dyndns.org>

  Patch attached.

  Pluses:  It works.

  Minuses: It causes some startup work to be done twice.

  Jp

-- 
 up 5 days, 2:28, 4 users, load average: 0.05, 0.03, 0.05
-------------- next part --------------
Index: internet/app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.76
diff -u -r1.76 app.py
--- internet/app.py	5 Feb 2003 00:53:19 -0000	1.76
+++ internet/app.py	13 Feb 2003 13:08:43 -0000
@@ -241,6 +241,8 @@
     """
 
     running = 0
+    processName = None
+
     def __init__(self, name, uid=None, gid=None, authorizer=None, authorizer_=None):
         """Initialize me.
 
@@ -282,7 +284,7 @@
             self.uid = uid or os.getuid()
             self.gid = gid or os.getgid()
 
-    persistenceVersion = 11
+    persistenceVersion = 12
 
     _authorizer = None
 
@@ -293,6 +295,9 @@
             self._authorizer = DefaultAuthorizer()
             self._authorizer.setApplication(self)
         return self._authorizer
+
+    def upgradeToVersion12(self):
+        self.processName = None
 
     def upgradeToVersion11(self):
         self._extraListeners = {}
Index: scripts/mktap.py
===================================================================
RCS file: /cvs/Twisted/twisted/scripts/mktap.py,v
retrieving revision 1.24
diff -u -r1.24 mktap.py
--- scripts/mktap.py	3 Feb 2003 12:09:07 -0000	1.24
+++ scripts/mktap.py	13 Feb 2003 13:08:43 -0000
@@ -70,7 +70,8 @@
     optParameters = [['uid', 'u', '0'],
                   ['gid', 'g', '0'],
                   ['append', 'a', None,   "An existing .tap file to append the plugin to, rather than creating a new one."],
-                  ['type', 't', 'pickle', "The output format to use; this can be 'pickle', 'xml', or 'source'."]]
+                  ['type', 't', 'pickle', "The output format to use; this can be 'pickle', 'xml', or 'source'."],
+                  ['appname', 'n', None, "The process name to use for this application."]]
 
     optFlags = [['xml', 'x',       "DEPRECATED: same as --type=xml"],
                 ['source', 's',    "DEPRECATED: same as --type=source"],
@@ -155,6 +156,9 @@
         print "Usage Error: %s" % ue
         options.subOptions.opt_help()
         sys.exit(1)
+
+    if options['appname']:
+        app.processName = options['appname']
 
     # backwards compatible interface
     if hasattr(mod, "getPorts"):
Index: scripts/twistd.py
===================================================================
RCS file: /cvs/Twisted/twisted/scripts/twistd.py,v
retrieving revision 1.36
diff -u -r1.36 twistd.py
--- scripts/twistd.py	19 Jan 2003 10:03:33 -0000	1.36
+++ scripts/twistd.py	13 Feb 2003 13:08:43 -0000
@@ -50,6 +50,7 @@
                 ['debug', 'b',    "run the application in the Python Debugger (implies nodaemon), sending SIGINT will drop into debugger"],
                 ['quiet','q',     "be a little more quiet"],
                 ['no_save','o',   "do not save state on shutdown"],
+                ['originalname', None, "Don't try to change the process name"],
                 ['syslog', None,   "Log to syslog, not to file"],
                 ['euid', '',     "Set only effective user-id rather than real user-id. "
                                   "(This option has no effect unless the server is running as root, "
@@ -318,6 +319,13 @@
         log.msg(s)
         log.deferr()
         sys.exit('\n' + s + '\n')
+    
+    if not config['originalname']:
+        if application.processName and application.processName != sys.argv[0]:
+            exe = os.path.realpath(sys.executable)
+            args = (application.processName, sys.argv[0], '--originalname') + tuple(sys.argv[1:])
+            log.msg('Changing process name to ' + application.processName)
+            os.execl(exe, *args)
 
     # If we're asked to chroot and os.chroot does not exist,
     # just fail.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/df869e2e/attachment.pgp 

From lac at strakt.com  Thu Feb 13 16:23:29 2003
From: lac at strakt.com (Laura Creighton)
Date: Thu, 13 Feb 2003 22:23:29 +0100
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?) 
In-Reply-To: Message from Moshe Zadka <twisted@moshez.org> 
   of "13 Feb 2003 20:27:02 GMT." <20030213202702.24381.qmail@green.zadka.com> 
References: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>, <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213.051702.89042779.glyph@twistedmatrix.com> <20030213202702.24381.qmail@green.zadka.com> 
Message-ID: <200302132123.h1DLNTjL028283@ratthing-b246.strakt.com>

In a message of 13 Feb 2003 20:27:02 GMT, Moshe Zadka writes:
>On Thu, 13 Feb 2003, Laura Creighton <lac at strakt.com> wrote:
>
>> Some packages are found to have such horrible bugs in them that they
>> should never be used by anybody for any purpose whatsoever, regardless
>> of who was unfortunate enough to depend on them.  I don't know if this
>> is the case for those debian packages, however.
>
>I'm making the debian packages.
>All bugs in the packages uploaded to Debian are available on
>http://bugs.debian.org/src:twisted
>All bugs in the packages the Twisted team makes should be reported here.
>Most are promptly dealth with.
>The Debian packages are used in production on the twistedmatrix.com
>site (if you're reading this via the web archive: you've just successfull
>y
>used the Debian package).
>I'm not aware of any show stopping bugs in the Debian packages.
>Please avoid spreading FUD.
>
>Thanks.
>
>-- 
>Moshe Zadka -- http://moshez.org/
>Buffy: I don't like you hanging out with someone that... short.
>Riley: Yeah, a lot of young people nowadays are experimenting with shortn
>ess.

Sorry about that, I thought it was a general question about packages
in general, not Twisted debian ones in particular.

Laura



From az at CANTANKER.NET  Thu Feb 13 17:17:50 2003
From: az at CANTANKER.NET (Adrian van den Dries)
Date: Fri, 14 Feb 2003 09:17:50 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213124550.GB21068@frobozz.local>
References: <20030211235434.GE31012@cantanker.net> <20030212.075146.122586679.glyph@twistedmatrix.com> <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <20030213124550.GB21068@frobozz.local>
Message-ID: <20030213221750.GF31012@cantanker.net>

quoth Andrew Bennetts:

> So, I'm asking for a more pragmatic motivation, rather than the existing
> (but still valuable) philosophical one

Consider this: what do you absolutely *need* to run a successful
twisted application?  Anything else is "advanced".

a.

-- 
Cantanker /
---------/-------------
        / cantanker.net



From grimmtooth at softhome.net  Thu Feb 13 17:28:04 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Thu, 13 Feb 2003 17:28:04 -0500
Subject: [Twisted-Python] From factory to protocol
In-Reply-To: <65ro5l3n.fsf@python.net>
Message-ID: <000701c2d3af$2cf69410$6501a8c0@listy>

> Is it somehow possible to get to the protocol from the factory?

In addition to what Kevin mentioned, if you don't want to override the
native methods in your factory, keep in mind that the protocol DOES have
a reference back to the factory that created it.

What I did in this instance was add two methods to the factory: one that
the protocol called when it was created, and one when it was done. The
first added the protocol to a list (actually, for me, a dict)of
protocols that the factory could use, and the second one was to remove
the protocol from the list. 

I elected to do it this way because each of my protocols is assigned a
unique name and may have a user attached on the other end (telnet). I
then control these protocols in various ways through the factory.

Well... On paper anyway. I haven't gotten much past the code to kill off
all the protocols gracefully then exit.





From grimmtooth at softhome.net  Thu Feb 13 17:37:57 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Thu, 13 Feb 2003 17:37:57 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <20030213210939.GA23400@meson.dyndns.org>
Message-ID: <000e01c2d3b0$8eea74b0$6501a8c0@listy>

I may get an answer from the docs eventually, but I've encountered a bit
of difficulty with pb.

I have two apps (and thus two event loops) that operate independently
but can talk to each other through PB. I *am* using different port
numbers for the two, just to be safe.

This initially works great, but I have encountered what seems to be a
namespace issue.  I'm using the example code given for PB in the how-to,
which employs functions at the top level of the script. I am using this
chunk of code as a library -- i.e. each app imports this bit of code and
uses it to communicate with the other.

Occasionally, one of the apps using PB in this way is forcing the other
app to shut down.  I've traced this to the reactor.stop() line in each
of the pb callbacks on the client side.

I've considered a few approaches, but if anyone has any sage advice it
would be greatly appreciated :-)

1) Limit scope of imports as much as possible to reduce conflicts a bit.

2) find a way to gracefully inject my PB client calls into the existing
event loop without having to call reactore.run() / reactor.stop() in my
library module. (favored at the moment)

3) keep reading PB docs and maybe find a wrinkle I wasn't aware of yet.

Thanks in advance...





From ldanielburr at earthlink.net  Thu Feb 13 14:38:54 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Thu, 13 Feb 2003 14:38:54 -0500 (GMT)
Subject: [Twisted-Python] RE: In Defense of Taps
Message-ID: <4442800.1045175939338.JavaMail.nobody@gonzo.psp.pas.earthlink.net>

Just to throw another newbie perspective into the Twisted mix:

I like the idea of taps.  As Glyph has mentioned numerous times,
the existing tap concept is not as good as it could/should be.
Even so, I find taps useful for one simple reason: I can sell
Twisted to my boss because of taps and plugins.  If I tell him
that I want to use this great networking framework, but I am
going to roll my own custom code to actually start/stop/execute
the application I am building, he's going to shoot me down.

On the other hand, if I tell him I am going to build my nifty
application, using a nifty framework, and the end result will be
something that can setup on our dev, test, QA, and staging
environments just by deploying the code and typing
"mktap -foo -bar -baz", "twistd --file=mytap.tap", then I am
much further along in my quest to gain approval.

Taps and plugins are a Good Thing, for reasons other than just
technical.  I can certainly see why many developers would say
that taps are something they don't care about, because they just
want to create a reactor, hook up a factory and protocol, and go.
In my case, I want to create a plugin, and have somebody *else*
be able to hook it up and go.

Bottom line for me is that taps and plugins make Twisted a more
finished architecture.  Java servlets would not be so widespread
if all developers wrote their own code to start the container,
configure the context, etc.  Quite the opposite actually: They
drop their code in a webapp directory, edit their web.xml and
go.  Taps and plugins sort of do that for Twisted, which is all
to the good.

L. Daniel Burr



From acapnotic at twistedmatrix.com  Thu Feb 13 18:15:13 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 13 Feb 2003 15:15:13 -0800
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
References: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
Message-ID: <1045178112.3320.117.camel@troglodyte.funhouse>

On Thu, 2003-02-13 at 14:37, Jeff Grimmett wrote:
[...stuff about using example code as a library and reactor.stop called
at the wrong time?...]

> [...] if anyone has any sage advice it would be greatly appreciated :-)

It's not at all clear to me what you're doing.  Can you post some code?

-- 
The moon is waxing gibbous, 86.7% illuminated, 11.3 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030213/481e46a5/attachment.pgp 

From lstep at adequat.net  Thu Feb 13 19:11:20 2003
From: lstep at adequat.net (Luc Stepniewski)
Date: Fri, 14 Feb 2003 01:11:20 +0100
Subject: [Twisted-Python] Patch to allow page.Page to work correctly (well from my point of view :-)
Message-ID: <200302140111.20720.lstep@adequat.net>

Hey it's my first patch on twisted !!! I have to celebrate this day!

When you instanciate a page.Page instance, if you specify a templateFile as 
parameter, twisted will try to find it in the twisted modules directory, 
which is not so cool. There's a templateDirectory parameter somewhere in 
woven, but it is not passed to the view. So here is the patch:

--- page.py.old     Sun Jan  5 06:16:04 2003
+++ page.py        Fri Feb 14 01:05:15 2003
@@ -10,7 +10,7 @@
     __implements__ = (model.Model.__implements__, view.View.__implements__,
                       controller.Controller.__implements__)
     def __init__(self, m=None, templateFile=None, inputhandlers=None,
-                controllers=None,
+                controllers=None, templateDirectory=None,
                  *args, **kwargs):
         model.Model.__init__(self, *args, **kwargs)
         if m is None:
@@ -22,7 +22,7 @@
                                        controllers=controllers)
         self.view = self
         view.View.__init__(self, self.model, controller=self,
-                           templateFile=templateFile)
+                           templateFile=templateFile, 
templateDirectory=templateDirectory)
         self.controller = self
         self.controllerRendered = 0




From grimmtooth at softhome.net  Thu Feb 13 19:20:30 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Thu, 13 Feb 2003 19:20:30 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <1045178112.3320.117.camel@troglodyte.funhouse>
Message-ID: <001b01c2d3be$e2806ef0$6501a8c0@listy>

> It's not at all clear to me what you're doing.  Can you post 
> some code?

I'll try to explain in more detail since the source is a mess right now
with all the commented code etc. With snippets.

App 1: it's a debugging window that I can run or not as needed. When it
is up it receives messages from the other app and feeds them to my
wxApp.

 import sys

 from myLib import *
 from twisted.internet import app
 from twisted.internet import wxsupport
 from twisted.spread import pb

# wx app stuff trimmed for brevity.

# The handler for incoming remote calls.
# I pass it a reference to my wxApp's top frame.
class DBHandler(pb.Root):
  def __init__	(self, win):
    self.Commands = {'Msg'  : self.doMsg,
                     'Ping' : self.doPing
                    }

    self.win = win

    # This is the function registered with Debug.Debug() (below)
    def remote_DoCommand(self, msg):
      if msg['Command'] in self.Commands:
        return(apply(self.Commands[msg['Command']], [msg]))
      else:
        return(-1)

    # Log a message
    def doMsg(self, msg):
      self.win.LogIt(msg['Msg'])
      return(0)

    # Return a ping. 
    def doPing(self, msg):
      return(1)

# Here's where I set up the app and run it
def RunServer(args):
  # Set up the wxApp
  myWXApp = MyApp(0)

  # Replace the wx event loop with the twisted
  # event loop and adds wx event handling.
  wxsupport.install(myWXApp)

  # Our PB factory
  ctl = pb.BrokerFactory(DBHandler(myWXApp.frame))
  # And set up the app
  myApp = app.Application("Debug")

  myApp.listenTCP(Debug.DBPort, ctl)
  myApp.run(save=0)

  sys.exit(0)

if __name__ == "__main__":
  RunServer(sys.argv)

## Following is the library code that is used by the other app
## to send debugging info to the debugger.

 From twisted.internet import reactor
 from twisted.spread import pb

 import time
 
DBPort = 7747

Me = Entities['Debugger'] # def for Entities not included for brevity

# This is a very lame bucket to hold data in a dynamic way
# so that the data can be passed back and forth between functions.
# Needs to be replaced with something a bit slicker.
 
class Bucket:
 def __init__(self, msg):
   self.SetMsg(msg)
   self.SetRC(-1)
  def SetMsg(self, msg):
   self.msg = msg
  def GetMsg(self):
    return(self.msg)
  def SetRC(self, rc):
    self.rc = rc
  def GetRC(self):
    return(self.rc)

bucky = Bucket('')

# Following three functions are PB functions. Based on twisted example
# code.

def gotObject(object):
  object.callRemote ( "DoCommand", {'Command': 'Msg',
'Msg':bucky.GetMsg()}).addCallback(gotCommand)
	  
def gotCommand(rc):
  bucky.SetRC(rc)
  reactor.stop()
	  
# This fires if we don't manage to connect.
def gotNoObject(reason):
  bucky.SetRC(-1)
  reactor.stop()

# Sets up the debugging session and returns response
def Debug(ID, msg):
  if ID == 0:
    return(-1)

  txt = '%s :: [%s] %s' %	( time.strftime('%Y.%m.%d %H:%M:%S'), 
                             ID, msg
                           ) 

  bucky.SetMsg(txt)
  pb.getObjectAt("localhost", DBPort, 30).addCallbacks(gotObject,
gotNoObject)
  reactor.run()
  return(bucky.GetRC())


The other app is very similar to the above, with a similar library that
passes slightly different data around.  The key difference is that the
other app has calls to Debug.Debug() within the handler itself.  Here is
the handler:

class CtlHandler(pb.Root):
  def __init__ (self):
    self.Commands = { 'Shutdown' : self.doShutdown
                    }

  def remote_DoCommand(self, msg):
    print msg

    # THIS IS WHERE IT DIES
    Debug.Debug (Me, "Received Control message [%s] from [%s]" % (
msg['Command'],  msg['From'] ) )
    # If I remove the above, all works well. If I don't, this app
    # closes.


    if	msg['Command'] in self.Commands:
      return(apply(self.Commands[msg['Command']], [msg]))
    else:
      Debug.Debug(Me, "**** Unknown Control message [%s]!" %
msg['Command'])
      return({'Status':'Unknown Command', 'RC':-1})

  def doShutdown(self, msg):
    Debug.Debug(Me, "***** CONTROL SHUTTING DOWN IN 3 SECONDS")
    reactor.callLater(20, self.endShutdown)
    return({'Status':'OK', 'RC':0})

  def endShutdown(self):
    sys.exit(0)


The factory, setup, and library code is nothing unusual but I can post
it if you need to see it.




From carball at hush.com  Thu Feb 13 22:31:44 2003
From: carball at hush.com (carball at hush.com)
Date: Thu, 13 Feb 2003 19:31:44 -0800
Subject: [Twisted-Python] Re: In Defense of Taps
Message-ID: <200302140331.h1E3VjEl054089@mailserver2.hushmail.com>

>glyph wrote:
>Based on my experience thus far, I doubt this very much.  I'd be 
>interested in
>a simple show of hands that indicates whether this is an accurate 
>perception.

i'll preface this reply by stating that i am not a pro-programmer. .
but i've learned alot from reading twisted and following the t.tao. .

i think taps very useful, and that the docs cover their use well. .

mktap and twistd provide nice frontends to working with plugins. .
and i use them when developing servers. .

i usually tell coworkers ( sysadmins ) who are interested in twisted
but havent programmed in python ( or havent programmed at all ), to experiment with mktap and twistd. . and they think it's cool;
and by cool, i mean totally sweet :D

thank you twisted developers!
carball




Concerned about your privacy? Follow this link to get
FREE encrypted email: https://www.hushmail.com/?l=2 

Big $$$ to be made with the HushMail Affiliate Program: 
https://www.hushmail.com/about.php?subloc=affiliate&l=427



From radix at twistedmatrix.com  Thu Feb 13 23:00:41 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 13 Feb 2003 23:00:41 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030213210939.GA23400@meson.dyndns.org>
References: <20030211015602.GD12562@radii> <20030213210939.GA23400@meson.dyndns.org>
Message-ID: <20030214040041.GI2557@radii>

On Thu, Feb 13, 2003 at 04:09:39PM -0500, Jp Calderone wrote:
>   Patch attached.

[snip]

> +    processName = None
> +

[snip]

> -    persistenceVersion = 11
> +    persistenceVersion = 12

[snip]

> +
> +    def upgradeToVersion12(self):
> +        self.processName = None


IIUC, this is unneeded if you're adding a class attribute.



-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From Alexandre.Fayolle at logilab.fr  Thu Feb 13 07:36:42 2003
From: Alexandre.Fayolle at logilab.fr (Alexandre)
Date: Thu, 13 Feb 2003 13:36:42 +0100
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?)
In-Reply-To: <20030213112455.19926.qmail@green.zadka.com>
References: <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213112455.19926.qmail@green.zadka.com>
Message-ID: <20030213123642.GD3078@calvin.fayauffre.org>

On Thu, Feb 13, 2003 at 11:24:55AM -0000, Moshe Zadka wrote:
> c) More work (and thus, more potential bugs) to do it with absolute
>    dependencies.

I'm not so sure there's more work with absolute dependencies. 
Here's what I have in the python-xml control file:

Package: python-xml
Architecture: all
Depends: python (>= 2.2), python (<< 2.3), python2.2-xml (>=${Source-Version})

The Source-Version variable will ensure the proper upgrade path
painlessly. 

-- 
Alexandre Fayolle
LOGILAB, Paris (France).
http://www.logilab.com   http://www.logilab.fr  http://www.logilab.org
D?veloppement logiciel avanc? - Intelligence Artificielle - Formations



From trace at reinventnow.com  Thu Feb 13 14:45:03 2003
From: trace at reinventnow.com (Tracy S. Ruggles)
Date: Thu, 13 Feb 2003 13:45:03 -0600
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <A515962C-3F8B-11D7-B2DD-000393CE1304@reinventnow.com>

On Wednesday, February 12, 2003, at 09:43 AM, Moshe Zadka wrote:

> I encourage the "newbies" on the list to speak up: what are *you* 
> planning
> to do with Twisted, and which documents would help you with that.

Well, I'm not a newbie to Python, but am to Twisted.  I have been a 
long-time user of Webware & Cheetah to serve a web-based dialogue 
marketing system (right now, they're basically souped-up, rule-based 
quizzes and surveys, see http://www.axiomfire.com).

Webware has been great to use so far but I was curious about Twisted.  
Almost all of the framework I built to build and render these dialogues 
has no tie-ins to Webware specifically.

Eventually we plan to build a much more dynamic dialogue engine that 
has the possibility of carrying on dialogues in different ways and I 
don't want to be tied to just http.  Also, enabling a real-time window 
into the dialogue activity so as to make adjustments to rule and 
contents in response to traffic changes and campaign response rates.

So, as far as Twisted documentation goes, I need to find a very simple 
way to serve up these dialogues with an already built system of 
"business objects".

My guess is (and I haven't had a whole lot of time to play around with 
twisted yet): a simple way would be to write small .rpy scripts/pages 
that just wrap the same functionality I wrapped with the Webware 
servlets.  Though, I already have a middle layer between the dialogue 
engine and the database (a variation of SQLORB.py) and I'm worried 
about synchronous/asynchronous problems.   I assume that some of that 
code would have to be altered to fit into the Twisted way.

I should get some time next week to dive into some real examples and 
will let you know how it goes...

--Tracy


--
Tracy S. Ruggles
Chief Technology Officer, Axiomfire
tracer at axiomfire.com -- 512/461.6199




From jml at mumak.net  Fri Feb 14 04:42:11 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Fri, 14 Feb 2003 20:42:11 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>
References: <20030213011452.GC20194@frobozz.local> <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>
Message-ID: <20030214094211.GC29955@mumak.net>

On Wed, Feb 12, 2003 at 08:22:27PM -0500, Bob Ippolito wrote:
> 
> I think I agree with you.  As I see it, TAPs are not particularly 
> useful for developers *until* they're ready to distribute their 
> applications.  Maybe they should be relegated to a section of the HOWTO 
> on "How to distribute your Twisted application" or "How to run your 
> Twisted application as a daemon"?
> 

I can't say I've thought about the TAP thing a great deal, but I'd agree that a
howto on "Distributing your twisted app" would be a good thing. 

However, the problem is probably deeper than this, as such a howto would have
to deal with almost all of the categories mentioned in this thread (Woven vs
low-level network, windows vs unix, etc). Hmm :\

jml



From theller at python.net  Fri Feb 14 04:26:18 2003
From: theller at python.net (Thomas Heller)
Date: 14 Feb 2003 10:26:18 +0100
Subject: [Twisted-Python] Testing a reactor
Message-ID: <smurusat.fsf@python.net>

I'm currently writing (try to, at least) a better reactor
for Windows. Is there a test-suite for reactors somewhere?

Thanks,

Thomas




From andrew-twisted at puzzling.org  Fri Feb 14 07:21:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 14 Feb 2003 23:21:41 +1100
Subject: [Twisted-Python] Testing a reactor
In-Reply-To: <smurusat.fsf@python.net>
References: <smurusat.fsf@python.net>
Message-ID: <20030214122141.GA22815@frobozz.local>

On Fri, Feb 14, 2003 at 10:26:18AM +0100, Thomas Heller wrote:
> I'm currently writing (try to, at least) a better reactor
> for Windows. Is there a test-suite for reactors somewhere?

bin/trial -p twisted/test       :)

Specifically, twisted.test.test_internet, but really, you should run all the
tests, as things like FTP have a tendency to break easily if the reactor
isn't quite right.

-Andrew.




From glyph at twistedmatrix.com  Fri Feb 14 07:42:41 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 14 Feb 2003 06:42:41 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <1045160643.808.61.camel@mingus>
References: <20030213011452.GC20194@frobozz.local>
	<20030213.042627.122625493.glyph@twistedmatrix.com>
	<1045160643.808.61.camel@mingus>
Message-ID: <20030214.064241.96226700.glyph@twistedmatrix.com>


On 13 Feb 2003 13:24:04 -0500, Abe Fettig <abe at fettig.net> wrote:

> I'd be in the "Network protocl developer" category, I guess, although my
> on of my reasons for using Twisted is to *not* have to implement
> protocols.

Thanks for that bit of information: after thinking about those categories some
more, I've realized that an upcoming rewrite of the website needs to address 4
audiences:

    * Low-level network programmers: systems people who want to write their own
      protocols.

    * High-level network programmers: people who want to use existing
      implementations of a variety of protocols.  These folks are the target
      audience for PB, when other protocols fall short.

    * "Web Application" programmers: these people want to use fully-finished
      protocol support, largely HTTP, though some SMTP and similar.  Sysadmins
      also fall into this category, to some extent.

    * Crazy hackers or game developers who are interested in bleeding-edge
      things like Twisted Reality, Issues, and Secret Project X.  (As these
      things mature it will probably split into more categories.)

Obviously there's some overlap, but if you don't feel like you fit into any of
those categories I'd like to know.

> having to write another little script to start my application and run it as a
> daemon seems a lot easier than writing a TAP plugin and having to "compile" a
> new TAP every time I make a change to the code.

Yes.  It'd be nice to have more integration between mktap and twistd so that
you don't actually need to output the file in development.  We've been lazy
about that because it'd be tough to separate the config options.  

How about extending usage.Options to recognize the '--' option the same way
xinit does, and consider the mktap script the "pass-through" for twistd, e.g.:

    twistd -l nohttp.log -n -f -- web -l http.log --https 443 --path ~/my-path

Hmm.  That actually looks ugly to me, but something like that.

> Once I get to the point where end users are installing my software, TAPs will
> probably become more important.

Well, it's up for download ;-), and you have had to address certain
configuration issues (hence the .ini file).  I think you're reaching that point
about now.

> But when I'm just running the software myself, to debug it, I don't care
> about the features TAPs might provide.  Thus in my mind it seemed makes sense
> to use the other parts of Twisted before I got into TAPs.

It sounds like we're in agreement, given your previous statement.  I will also
do certain kinds of development without creating a tap plugin first, when i'm
just working with a few objects and trying to figure out how they fit together.

However, "what is appropriate for the master is not appropriate for the
apprentice" -- we're mostly talking about whether it's an applicable
introduction, not about whether it's the only way to start a Twisted app.

> Could you explain (or point to some info on) how TAPs can provide "mechanisms
> for services to communicate with each other"?  I'd be interested in that.

Well, the Application object is the source of communication most of the time.
You have to know a fair amount about Twisted objects' internal structure to
take advantage of that.  However, if you've got a lot of structured objects
floating around, the ability to do 'mktap manhole --append myapp-shutdown.tap'
is very helpful.

In some ways this is a more theoretical advantage than a practical one.  It's a
way for multiple parties to write tools to manipulate .tap files, and a
standard way for a user to invoke them.  Not many of these tools have been
written so far.

> > While I think of this as an important introductory doc, it's already the
> > 18th document in the book.  In fact, it comes after "Using Dirdbm", which I
> > think may be shortchanging it a *bit* more than treating it as introductory
> > :-).

> Didn't it used to be right at the front?  I remember it as being one of the
> first things I read.  Actually, the current HOWTO layout looks like it's
> gotten a lot better since I was last there...

It used to have a little emphasized "<--- Start Here!" next to it, which has
since been removed.  I still think it's a good starting point most of the time,
even if you often forego taps. More important, though, is the consensus that we
need to build multiple indexes for different interest groups.

> I really like Twisted, thanks for all the work you guys have done!

You're welcome!  It's always nice to see someone appreciating it.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030214/a5328dc5/attachment.pgp 

From radix at twistedmatrix.com  Fri Feb 14 07:55:41 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Feb 2003 07:55:41 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214.064241.96226700.glyph@twistedmatrix.com>
Message-ID: <20030214125541.GJ2557@radii>

On Fri, Feb 14, 2003 at 06:42:41AM -0600, Glyph Lefkowitz wrote:

> How about extending usage.Options to recognize the '--' option the
> same way xinit does, and consider the mktap script the
> "pass-through" for twistd, e.g.:
> 
>   twistd -l nohttp.log -n -f -- web -l http.log --https 443 --path ~/my-path
> 
> Hmm.  That actually looks ugly to me, but something like that.

No need! We have sub-commands in usage.Options. We can do it exactly
like mktap does it. Well, there are two possibilities:

  twistd <twistd-args> <tap-type-subcommand> ...

or

  twistd <twistd-args> tap <tap-type-subcommand> ...

Either of these would be pretty simple to implement, IIUC.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Fri Feb 14 08:35:35 2003
From: m at moshez.org (Moshe Zadka)
Date: 14 Feb 2003 13:35:35 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030214.064241.96226700.glyph@twistedmatrix.com>, <20030213011452.GC20194@frobozz.local>
	<20030213.042627.122625493.glyph@twistedmatrix.com>
	<1045160643.808.61.camel@mingus>
Message-ID: <20030214133535.19502.qmail@green.zadka.com>

On Fri, 14 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Thanks for that bit of information: after thinking about those categories some
> more, I've realized that an upcoming rewrite of the website needs to address 4
> audiences:

We can start by having a restructuring of the indices to fit them :)
(Maybe they won't know we have it, but it'll at least be a place to
point them at)
 
> Yes.  It'd be nice to have more integration between mktap and twistd so that
> you don't actually need to output the file in development.  We've been lazy
> about that because it'd be tough to separate the config options.  
> 
> How about extending usage.Options to recognize the '--' option the same way
> xinit does, and consider the mktap script the "pass-through" for twistd, e.g.:
> 
>     twistd -l nohttp.log -n -f -- web -l http.log --https 443 --path ~/my-path

Well, -- is already implemented and will pass the arguments to 
.processOptions(). Currently, it errors out if there are any arguments,
but it's easy to do "from scripts.mktap import ...".

> Hmm.  That actually looks ugly to me, but something like that.

Yes, this is the overriding problem. Is it really a problem in development?
When I develop, I just do "!mktap\n!twistd" in bash...

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From theller at python.net  Fri Feb 14 10:10:24 2003
From: theller at python.net (Thomas Heller)
Date: 14 Feb 2003 16:10:24 +0100
Subject: [Twisted-Python] win32guireactor
Message-ID: <vfzmlwyn.fsf@python.net>

An embedded and charset-unspecified text was scrubbed...
Name: win32guireactor.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030214/0b1567c2/attachment.txt 

From corydodt at yahoo.com  Fri Feb 14 11:31:32 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 14 Feb 2003 08:31:32 -0800 (PST)
Subject: [Twisted-Python] buildbot?
Message-ID: <20030214163132.41233.qmail@web10008.mail.yahoo.com>

The buildbot at http://twistedmatrix.com/~warner.twistd/ was pointed out
to me.  I noticed that my new document, extend-lore.html is causing hlint
errors in buildbot.  hlint runs clean on my local machine, and I think it
fails because it can't find the doc/howto/listings/lore directory, which
is new.  

Does buildbot use cvs up -d to check out the code?  If not, it should,
because that would fix the problem I'm seeing above.

Thanks!

C

__________________________________________________
Do you Yahoo!?
Yahoo! Shopping - Send Flowers for Valentine's Day
http://shopping.yahoo.com



From abe at fettig.net  Fri Feb 14 11:56:51 2003
From: abe at fettig.net (Abe Fettig)
Date: 14 Feb 2003 11:56:51 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030213011452.GC20194@frobozz.local>
	 <20030213.042627.122625493.glyph@twistedmatrix.com>
	 <1045160643.808.61.camel@mingus>
	 <20030214.064241.96226700.glyph@twistedmatrix.com>
Message-ID: <1045241811.1258.6.camel@mingus>

On Fri, 2003-02-14 at 07:42, Glyph Lefkowitz wrote:
> On 13 Feb 2003 13:24:04 -0500, Abe Fettig <abe at fettig.net> wrote:
> 
> > I'd be in the "Network protocl developer" category, I guess, although my
> > on of my reasons for using Twisted is to *not* have to implement
> > protocols.
> 
> Thanks for that bit of information: after thinking about those categories some
> more, I've realized that an upcoming rewrite of the website needs to address 4
> audiences:
> 
>     * Low-level network programmers: systems people who want to write their own
>       protocols.
> 
>     * High-level network programmers: people who want to use existing
>       implementations of a variety of protocols.  These folks are the target
>       audience for PB, when other protocols fall short.
> 
>     * "Web Application" programmers: these people want to use fully-finished
>       protocol support, largely HTTP, though some SMTP and similar.  Sysadmins
>       also fall into this category, to some extent.
> 
>     * Crazy hackers or game developers who are interested in bleeding-edge
>       things like Twisted Reality, Issues, and Secret Project X.  (As these
>       things mature it will probably split into more categories.)

> 
> Obviously there's some overlap, but if you don't feel like you fit into any of
> those categories I'd like to know.

I'd be in the High-level network programmer category, although I'm
prepared to put on my (recently aquired) Low-level network programmer
hat in order to get support for IMAP into Twisted, improve the POP3
protocol, etc... :-)

> > Once I get to the point where end users are installing my software, TAPs will
> > probably become more important.
> 
> Well, it's up for download ;-), and you have had to address certain
> configuration issues (hence the .ini file).  I think you're reaching that point
> about now.

Point taken.  I'll start looking at TAPs.

Abe




From acapnotic at twistedmatrix.com  Fri Feb 14 15:15:59 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 14 Feb 2003 12:15:59 -0800
Subject: [Twisted-Python] Documentation Guides (was: In Defense of Taps)
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030213011452.GC20194@frobozz.local>
	 <20030213.042627.122625493.glyph@twistedmatrix.com>
	 <1045160643.808.61.camel@mingus>
	 <20030214.064241.96226700.glyph@twistedmatrix.com>
Message-ID: <1045253249.12896.52.camel@troglodyte.funhouse>

On Fri, 2003-02-14 at 04:42, Glyph Lefkowitz wrote:
> Thanks for that bit of information: after thinking about those categories some
> more, I've realized that an upcoming rewrite of the website needs to address 4
> audiences[...]

I was at what one might consider a brainstorming session for presenting
on-line documentation[1] the other day, and people came up with this
idea:  When you're about to embark on a trip through foreign territory
(i.e. Framework X documentation), you may want to hire a guide who knows
the area to lead you through it.

...I think I need to stop and provide a bit of context here.  The topic
was documentation with in-line comment systems, like you see in the Zope
Book now.  Someone postulated that they might like it better if instead
of being constantly bombarded by comments from all sorts of people, they
could filter it down to just one guy who commented frequently, to get a
single consistent voice.  The concept was also likened to the
"commentary track" that comes with the DVD version.  Okay, now back to
wild analogies...

Which guide you select depends on your experience level and what you
want to see.  In any case, you and your guide cover pretty much the same
ground as everyone else, but where you go into detail and from what
direction things approached will vary from guide to guide.  

or, in Twisted speak, 
self.howto = components.getAdapter(howto, IHighLevelNetworkDeveloper)
although at the aforementioned discussion, people were talking more
about another dimension, the one ranging from Newcomer ("put *lots* of
comments in those examples, please") to Old Hand ("just tell me what
module to look at").

I'm not convinced these ideas have any practical value.  It seems
incredibly expensive to me to develop useful commentary tracks[2] for
every class of reader, effort that could be directed to fortifying the
core documents.  But it's what I thought of when reading this "we need
to make documentation approachable for X, Y, and Z, and does this go
before or after dirdbm."



1: http://groups.yahoo.com/group/porpig/message/274

2: unless, the theory goes, you have such an active community that these
things just write themselves, and then some collaborative filtering
system picks out what's good for you.  Hah!

-- 
The moon is waxing gibbous, 92.1% illuminated, 12.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030214/649fc366/attachment.pgp 

From exarkun at intarweb.us  Fri Feb 14 15:29:45 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 14 Feb 2003 15:29:45 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214133535.19502.qmail@green.zadka.com>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com>
Message-ID: <20030214202945.GA26834@meson.dyndns.org>

On Fri, Feb 14, 2003 at 01:35:35PM -0000, Moshe Zadka wrote:
> On Fri, 14 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> [snip]
> 
> > Hmm.  That actually looks ugly to me, but something like that.
> 
> Yes, this is the overriding problem. Is it really a problem in development?
> When I develop, I just do "!mktap\n!twistd" in bash...

  I'll go you one better, "!mktap && !twistd" the first time, and "!mktap"
every subsequent time.  Either way, this has always seemed sufficient to me.

The biggest problem I have is the amount of time it takes to backtrack from
the end of a long command to somewhere in the middle to change an option,
and this strikes me as a bash problem, not a Twisted one (one that
lengthening the "twistd" invocation command would only exacerbate.

  Jp

-- 
 up 6 days, 0:29, 5 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030214/f058e003/attachment.pgp 

From waterbug at beeblebrox.gsfc.nasa.gov  Fri Feb 14 15:40:21 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 14 Feb 2003 15:40:21 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com> <20030214202945.GA26834@meson.dyndns.org>
Message-ID: <3E4D5435.C6C88FC7@beeblebrox.gsfc.nasa.gov>

Jp Calderone wrote:

> The biggest problem I have is the amount of time it takes to backtrack from
> the end of a long command to somewhere in the middle to change an option,
> and this strikes me as a bash problem, not a Twisted one ...

I like vi mode... bbbb ... :^)

-- Steve.



From m at moshez.org  Fri Feb 14 15:57:49 2003
From: m at moshez.org (Moshe Zadka)
Date: 14 Feb 2003 20:57:49 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214202945.GA26834@meson.dyndns.org>
References: <20030214202945.GA26834@meson.dyndns.org>, <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com>
Message-ID: <20030214205749.31716.qmail@green.zadka.com>

On Fri, 14 Feb 2003, Jp Calderone <exarkun at intarweb.us> wrote:

> The biggest problem I have is the amount of time it takes to backtrack from
> the end of a long command to somewhere in the middle to change an option,
> and this strikes me as a bash problem, not a Twisted one (one that
> lengthening the "twistd" invocation command would only exacerbate.

I'll go even further: frequently, the tap code is fairly "shallow": it
either works or doesn't, but has no subtle bugs. Thus, once you've
gotten the tap to work, the cycle is

mktap
twistd
debug, vi, blah
kill, run twistd (with same tap!)
debug, vi, blah
kill, run twistd (with same tap!)
rinse lather repeat

Oh, also, a comment about bash: if you're insane like me, you may want
to consider running bash in vi-mode. Then editing something in the middle
of a command can be easily done by word-jumping with b, w and e.
It is rumoured the common (EMACS mode) also has something like
that.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From a.d.stribblehill at durham.ac.uk  Fri Feb 14 16:07:42 2003
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Fri, 14 Feb 2003 21:07:42 +0000
Subject: [Twisted-Python] History editing in bash/csh
In-Reply-To: <20030214202945.GA26834@meson.dyndns.org>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com> <20030214202945.GA26834@meson.dyndns.org>
Message-ID: <20030214210742.GL9228@wompom>

Quoting Jp Calderone <exarkun at intarweb.us> (2003-02-14 08:29:45 GMT):
> On Fri, Feb 14, 2003 at 01:35:35PM -0000, Moshe Zadka wrote:
> > On Fri, 14 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> > [snip]
> > 
> > > Hmm.  That actually looks ugly to me, but something like that.
> > 
> > Yes, this is the overriding problem. Is it really a problem in development?
> > When I develop, I just do "!mktap\n!twistd" in bash...
> 
>   I'll go you one better, "!mktap && !twistd" the first time, and "!mktap"
> every subsequent time.  Either way, this has always seemed sufficient to me.
> 
> The biggest problem I have is the amount of time it takes to backtrack from
> the end of a long command to somewhere in the middle to change an option,
> and this strikes me as a bash problem, not a Twisted one (one that
> lengthening the "twistd" invocation command would only exacerbate.

Um, this has gone way off-topic and for this, I apologise. Still,
bash and csh-like shells have "history editing":

$ long-command-name --opt1 -o -f filenume --debug=73 --wipe-my-nose-for-me
long-command-name: File "filenume" not found
$ ^nume^name^

HTH.

-- 
VIKING
SOUTH OR SOUTHWEST 3 OR 4, OCCASIONALLY 5. FAIR. MODERATE OR GOOD



From radix at twistedmatrix.com  Fri Feb 14 17:05:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Feb 2003 17:05:37 -0500
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030211.191234.596544096.washort@twistedmatrix.com>
References: <20030211.191234.596544096.washort@twistedmatrix.com>
Message-ID: <20030214220537.GM2557@radii>

On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> 
> Chris and I have been looking at hotels in the D.C. area with an eye
> towards affordability and proximity to GWU: the best we've found so
> far is a Best Western in Arlington: assuming 3 to a room, it'll be
> around $30/night/person. 


Ok, I just called and they only have rooms available starting at
$119/night + tax. :-( There's some damned flowery crap going on in
D.C. around then, which is apparently booking up the hotels.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Fri Feb 14 17:51:44 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Feb 2003 17:51:44 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com> <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
Message-ID: <20030214225144.GO2557@radii>

On Wed, Feb 12, 2003 at 01:53:05PM -0500, Steve Waterbury wrote:
> I'd be *ecstatic* if any of the twisted folk who are 
> coming to PyCon would like to do a pre-con sprint or a 
> post-con sprint with PanGalactic ... we will be at PyCon 
> (we're located just north of DC, anyway!).  

Do you want to take part in the Twisted sprint? I'm organizing the
Twisted-specific one (and your software is Twisted-related enough to
be under the "Twisted sprint", I suppose, unless you feel like
organizing your own sprint :)). It'll be $50 / person (unless things
change. Maybe if enough people to sprint (Twisted-sprint alone has
16!), they'll lower the price...). You may be able to coerce nearby
hackers to work with your code, but no promises ;-)

Or wait, I just realized I may have misinterpreted what you were
proposing. Do you mean sprint at your office? Hmm, I'm already going
to be spending a week there... I wonder if I can afford a day more ;-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From acapnotic at twistedmatrix.com  Fri Feb 14 18:11:52 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 14 Feb 2003 15:11:52 -0800
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
References: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
Message-ID: <1045264310.12903.58.camel@troglodyte.funhouse>

On Thu, 2003-02-13 at 14:37, Jeff Grimmett wrote:
> app to shut down.  I've traced this to the reactor.stop()

umm.  yes.  reactor.stop makes things shut down.  That's what its job
is.  The examples use reactor.stop so that they will quit when the
example is over.  It's not anything to do with how PB works.

-- 
The moon is waxing gibbous, 93.1% illuminated, 12.3 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030214/8255f168/attachment.pgp 

From 2002 at weholt.org  Fri Feb 14 18:22:55 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 15 Feb 2003 00:22:55 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
Message-ID: <005501c2d480$01f374f0$0401a8c0@razor>

Hi,

I'm new to the Twisted-framework, but it looks cool and has a lot of modules I'd like to use in a project. The only problem is that the current docs are a bit thin when it comes to web-development, when developing servlet-like dynamic-content. 

Does anybody have a tutorial or a reference project I could use to get the hang of it?

What I need is this:
- Cookie-handling ( not mention at all in the docs )
- Forms-processing ( this can be done manually when parsing the posted data, I'd like to get this done automatically )
- a persistent Datastore/BusinessLogic-object available for every method and/or object that will produce content or process posted data, the D/B-object must be loaded at start-up and but should also have an option to be reloaded while the server is running

Any clues or hints? I'd be gratefull for any information that can clear up how Twisted best can be used to produce dynamic HTML-based content for a portal-like site. I'm most interested in methods similar to ZPT/SimpleTAL/ES and tech. like XMLC in the Enhydra project, but anything goes and I'm grateful for all you have to offer :-)

Thanks in advance,
Thomas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030215/fcdeecff/attachment.htm 

From kwaker at uch.net  Fri Feb 14 19:33:28 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Sat, 15 Feb 2003 02:33:28 +0200
Subject: [Twisted-Python] Writing unit test for SOCKS5 client
Message-ID: <11353250.20030215023328@uch.net>

I am currently writing SOCKS5 client, which in case of success will
grow into set of [SOCKS4, SOCKS5, HTTP Proxy Tunnel] clients, but to
have my code added to Twisted codebase I was requested to create unit
tests for it.

The question is what points should I test and how in my units. Is
sending RFC1928 (SOCKS5 protocol RFC) compliant messages to Protocol
class and checking replies enough?

If test case tries to connect to SOCKS server how can I fool it and
simulate RFC-compliant socks server? The smallest test case module
easy to understand was for POP3 (5 kbytes) and it tested server but
not client.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From andrew-twisted at puzzling.org  Fri Feb 14 20:21:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 12:21:12 +1100
Subject: [Twisted-Python] win32guireactor
In-Reply-To: <vfzmlwyn.fsf@python.net>
References: <vfzmlwyn.fsf@python.net>
Message-ID: <20030215012112.GB22815@frobozz.local>

On Fri, Feb 14, 2003 at 04:10:24PM +0100, Thomas Heller wrote:

[..snip cool stuff about a win32 reactor that doesn't suck as much..]

As the person who wrote the original prototype of the win32 reactor, I'd
just like to say: You rock!

> 
> PS: I tried to run unittests with this and other reactors with
> the command line 
>   py22 bin\trial -p twisted.test.test_internet -r <reactor> -v

You probably should try 
    py22 bin\trial -p twisted.test -r <reactor> -v
as well, i.e. *all* of the tests.

> 
> win32guireactor
>   twisted.test.test_ftp:FTPClientAndServerTests.testLongFileListings
>   crashes with this traceback, and then also hangs forever.
> twisted.test.test_ftp
>   FTPClientAndServerTests
>     testBadLogin ...
>     testLongFileListings ... Traceback (most recent call last):
>   File "C:\sf\Twisted\twisted\internet\win32guireactor.py", line 85, in __wm_timerevent
>     tple.func(*tple.args, **tple.kw)
>   File "C:\sf\Twisted\twisted\test\test_ftp.py", line 124, in errback
>     except self.failureException, e:
> AttributeError: FTPClientAndServerTests instance has no attribute 'failureException'

Ooh!  That's a trial bug -- pyunit TestCases have a "failureException"
attribute... by default I think it's set to AssertionError.

> """A win32 implementation of the Twisted main loop.

[snip]

Interesting.  I don't have a win32 system I can play with this stuff on
anymore, but you obviously have more of an idea about win32 programming than
I did :)

-Andrew.




From andrew-twisted at puzzling.org  Fri Feb 14 20:32:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 12:32:40 +1100
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030214220537.GM2557@radii>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030214220537.GM2557@radii>
Message-ID: <20030215013240.GC22815@frobozz.local>

On Fri, Feb 14, 2003 at 05:05:37PM -0500, Christopher Armstrong wrote:
> On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > 
> > Chris and I have been looking at hotels in the D.C. area with an eye
> > towards affordability and proximity to GWU: the best we've found so
> > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > around $30/night/person. 
> 
> 
> Ok, I just called and they only have rooms available starting at
> $119/night + tax. :-( There's some damned flowery crap going on in
> D.C. around then, which is apparently booking up the hotels.

I.e. ~$40/night/person?  I'm still happy to pay that, assuming the other 2
people will be there to pay their share :)

-Andrew.




From grimmtooth at softhome.net  Fri Feb 14 20:27:56 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Fri, 14 Feb 2003 20:27:56 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <1045264310.12903.58.camel@troglodyte.funhouse>
Message-ID: <006101c2d491$7858b0e0$6501a8c0@listy>


> umm.  yes.  reactor.stop makes things shut down.  That's what 
> its job is.  The examples use reactor.stop so that they will 
> quit when the example is over.  It's not anything to do with 
> how PB works.

Yes, exactly, my point exactly. After much digging and head-scratching I
might be on the right track now that I've grokked a little about
doIteration() ...





From andrew-twisted at puzzling.org  Fri Feb 14 21:07:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 13:07:22 +1100
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <006101c2d491$7858b0e0$6501a8c0@listy>
References: <1045264310.12903.58.camel@troglodyte.funhouse> <006101c2d491$7858b0e0$6501a8c0@listy>
Message-ID: <20030215020722.GF22815@frobozz.local>

On Fri, Feb 14, 2003 at 08:27:56PM -0500, Jeff Grimmett wrote:
> 
> > umm.  yes.  reactor.stop makes things shut down.  That's what 
> > its job is.  The examples use reactor.stop so that they will 
> > quit when the example is over.  It's not anything to do with 
> > how PB works.
> 
> Yes, exactly, my point exactly. After much digging and head-scratching I
> might be on the right track now that I've grokked a little about
> doIteration() ...

You shouldn't need to be looking at the reactor's implementation to use PB.

The reactor is Twisted's event loop.  Thus, reactor.stop() will shutdown
your Twisted app.  If you don't want your app to stop in your callback,
don't call reactor.stop() in your callback.

I feel that either you're missing the obvious or I'm misunderstanding what
you're asking.

-Andrew.




From corydodt at yahoo.com  Fri Feb 14 21:09:34 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 14 Feb 2003 18:09:34 -0800 (PST)
Subject: [Twisted-Python] BookLatexSpitter
Message-ID: <20030215020934.64732.qmail@web10005.mail.yahoo.com>

The following patch is my first step toward engineering out book.tex.  It
will work with howto/index.html with minor modifications to that file,
which I have made.  Check out my sample book and the modified index.html
at:

http://twistedmatrix.com/users/moonfallen/sample-book.zip





Index: default.py
===================================================================
RCS file: /cvs/Twisted/twisted/lore/default.py,v
retrieving revision 1.6
diff -u -r1.6 default.py
--- default.py	10 Feb 2003 00:39:07 -0000	1.6
+++ default.py	14 Feb 2003 17:51:05 -0000
@@ -43,7 +43,9 @@
 
     latexSpitters = {None: latex.LatexSpitter,
                      'section': latex.SectionLatexSpitter,
-                     'chapter': latex.ChapterLatexSpitter}
+                     'chapter': latex.ChapterLatexSpitter,
+                     'book': latex.BookLatexSpitter,
+                     }
 
     def generate_latex(self, d):
         spitter = self.latexSpitters[None]
Index: latex.py
===================================================================
RCS file: /cvs/Twisted/twisted/lore/latex.py,v
retrieving revision 1.85
diff -u -r1.85 latex.py
--- latex.py	12 Feb 2003 11:18:51 -0000	1.85
+++ latex.py	14 Feb 2003 17:51:05 -0000
@@ -309,6 +309,62 @@
         self.visitNodeDefault(node)
         self.start_p = LatexSpitter.start_p
 
+class BookLatexSpitter(LatexSpitter):
+    def visitNode_link(self, node):
+        if not node.hasAttribute('rel'):
+            return self.visitNodeDefault(node)
+        node.tagName += '_'+node.getAttribute('rel')
+        self.visitNode(node)
+       
+    def visitNode_link_author(self, node):
+        self.writer('\\author{%s}\n' % node.getAttribute('text'))
+
+    def visitNode_link_stylesheet(self, node):
+        if node.hasAttribute('type') and node.hasAttribute('href'):
+            if node.getAttribute('type')=='application/x-latex':
+                packagename=node.getAttribute('href')
+                packagebase,ext=os.path.splitext(packagename)
+                self.writer('\\usepackage{%s}\n' % packagebase)
+
+    start_html = r'''\documentclass[oneside]{book}
+\usepackage{graphicx}
+\usepackage{times,mathptmx}
+'''
+    
+    start_body = r'''\begin{document}
+\maketitle
+\tableofcontents
+'''
+
+    start_li=''
+    end_li=''
+    start_ul=''
+    end_ul=''
+
+
+    def visitNode_a(self, node):
+        if node.hasAttribute('class'):
+            a_class=node.getAttribute('class')
+            if a_class.endswith('listing'):
+                return self.visitNode_a_listing(node)
+            else:
+                return getattr(self, 'visitNode_a_%s' % a_class)(node)
+        if node.hasAttribute('href'):
+            return self.visitNode_a_href(node)
+        if node.hasAttribute('name'):
+            return self.visitNode_a_name(node)
+        self.visitNodeDefault(node)
+
+    def visitNode_a_chapter(self, node):
+        self.writer('\\chapter{')
+        self.visitNodeDefault(node)
+        self.writer('}\n')
+        
+    def visitNode_a_sect(self, node):
+        base,ext=os.path.splitext(node.getAttribute('href'))
+        self.writer('\\input{%s}\n' % base)
+        
+        
 
 def processFile(spitter, fin):
     dom = microdom.parse(fin).documentElement


__________________________________________________
Do you Yahoo!?
Yahoo! Shopping - Send Flowers for Valentine's Day
http://shopping.yahoo.com



From grimmtooth at softhome.net  Fri Feb 14 21:55:07 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Fri, 14 Feb 2003 21:55:07 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <20030215020722.GF22815@frobozz.local>
Message-ID: <006801c2d49d$a600f5f0$6501a8c0@listy>


> You shouldn't need to be looking at the reactor's 
> implementation to use PB.
> 
> The reactor is Twisted's event loop.  Thus, reactor.stop() 
> will shutdown your Twisted app.  If you don't want your app 
> to stop in your callback, don't call reactor.stop() in your callback.
> 
> I feel that either you're missing the obvious or I'm 
> misunderstanding what you're asking.

You're probably right on both points :-)

Let me boil this down to essentials. I need a way of creating and
invoking a one-shot pb client to communicate with a remote object in a
manner that can be re-used by modules either in an app/rector or modules
that are functioning outside of an app/reactor.  

I'm sure I'll figure it out eventually, it's just rough going at the
moment...




From andrew-twisted at puzzling.org  Fri Feb 14 23:46:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 15:46:41 +1100
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <006801c2d49d$a600f5f0$6501a8c0@listy>
References: <20030215020722.GF22815@frobozz.local> <006801c2d49d$a600f5f0$6501a8c0@listy>
Message-ID: <20030215044641.GG22815@frobozz.local>

On Fri, Feb 14, 2003 at 09:55:07PM -0500, Jeff Grimmett wrote:
> 
> 
> > You shouldn't need to be looking at the reactor's 
> > implementation to use PB.
> > 
> > The reactor is Twisted's event loop.  Thus, reactor.stop() 
> > will shutdown your Twisted app.  If you don't want your app 
> > to stop in your callback, don't call reactor.stop() in your callback.
> > 
> > I feel that either you're missing the obvious or I'm 
> > misunderstanding what you're asking.
> 
> You're probably right on both points :-)
> 
> Let me boil this down to essentials. I need a way of creating and
> invoking a one-shot pb client to communicate with a remote object in a
> manner that can be re-used by modules either in an app/rector or modules
> that are functioning outside of an app/reactor.  
> 
> I'm sure I'll figure it out eventually, it's just rough going at the
> moment...

Have you seen doc/examples/pbecho.py and doc/examples/pbechoclient.py?  They
do pretty much exactly this, i.e. a long-running server, and a one-shot
client:

    bash-2.05b$ python pbecho.py
    Saving pbecho application to pbecho-start.tap...
    Saved.
    bash-2.05b$ twistd -f pbecho-start.tap 
    bash-2.05b$ python pbechoclient.py 
    connected.
    Message received: hello world
    error received: pbecho.DefinedError
    Main loop terminated.
    bash-2.05b$ python pbechoclient.py 
    connected.
    Message received: hello world
    error received: pbecho.DefinedError
    Main loop terminated.

(The errors are intentional; see the source)

-Andrew.




From acapnotic at twistedmatrix.com  Fri Feb 14 23:42:57 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 14 Feb 2003 20:42:57 -0800
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <006801c2d49d$a600f5f0$6501a8c0@listy>
References: <006801c2d49d$a600f5f0$6501a8c0@listy>
Message-ID: <1045284175.12901.86.camel@troglodyte.funhouse>

On Fri, 2003-02-14 at 18:55, Jeff Grimmett wrote:
> Let me boil this down to essentials. I need a way of creating and
> invoking a one-shot pb client to communicate with a remote object in a
> manner that can be re-used by modules either in an app/rector or modules
> that are functioning outside of an app/reactor.  

Nothing functions outside of a reactor.

That is to say, if you're using Twisted, embrace the framework.  Don't
attempt to use it just part of the time, running some pieces inside it
and leaving the rest of your program out.  Unless, for some reason I
have missed, you are working in an environment that cannot integrate
with Twisted?  What is your application here?

-- 
The moon is waxing gibbous, 94.2% illuminated, 12.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030214/6144a411/attachment.pgp 

From grimmtooth at softhome.net  Sat Feb 15 01:05:51 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sat, 15 Feb 2003 01:05:51 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <20030215044641.GG22815@frobozz.local>
Message-ID: <007401c2d4b8$4b29b250$6501a8c0@listy>

> Have you seen doc/examples/pbecho.py and 
> doc/examples/pbechoclient.py?  They do pretty much exactly 
> this, i.e. a long-running server, and a one-shot
> client:

Yep, but there's that dreaded reactor.stop() in the client.

Good news: I figured out how to make it work. I've created a class that
I use as a mix-in for my protocol classes to utilize. The down side is
that I have to maintain two versions of the debugger OR put in some
conditional code, but the upshot is that I can now do exactly what I
needed to do with it.

class Debugger:
  def Debug (self, txt):
    self.dbtxt = txt
    pb.getObjectAt("localhost", DBPort, 30).addCallbacks(self.gotObject,
self.gotNoObject)
		
    def gotObject(self, object): 
      print 'client got object'
      object.callRemote ("DoCommand", {'Command': 'Msg',
'Msg':self.dbtxt} ).addCallback(self.gotCommand)
		
    def gotCommand(self, rc):
      print 'gotcommand',rc
      self.dbrc = rc

    def gotNoObject(reason):
      print 'gotnoobject', reason
      self.dbrc = -1

When creating the protocol, it looks like this:

 from Debug import Debugger

 class myProtocol(Protocol, Debugger):
    <stuff>

Then to send the debugging text to the other app loop:
  self.Debug(text)

Oh, there's a bit of cleanup to do but the upshot is that it does NOT
kill off the reactor running the protocol that calls it.

Off to bed...





From grimmtooth at softhome.net  Sat Feb 15 01:11:17 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sat, 15 Feb 2003 01:11:17 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <1045284175.12901.86.camel@troglodyte.funhouse>
Message-ID: <007701c2d4b9$0d7d9f10$6501a8c0@listy>

> That is to say, if you're using Twisted, embrace the 
> framework.  Don't attempt to use it just part of the time, 
> running some pieces inside it and leaving the rest of your 
> program out.  Unless, for some reason I have missed, you are 
> working in an environment that cannot integrate with Twisted? 
>  What is your application here?

To be honest, I know I could merge the debugger and main app together
into one event loop, but part of my concern is that the debugger employs
a GUI; if the server gets busy, the GUI is going to suffer since its
event loop is merged with the reactor event loop. 

Moot point, now that I have found a compromise solution. I can have my
cake and eat it too, I guess :-)





From wilk-ml at flibuste.net  Sat Feb 15 03:56:32 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 09:56:32 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <005501c2d480$01f374f0$0401a8c0@razor>
References: <005501c2d480$01f374f0$0401a8c0@razor>
Message-ID: <87wuk12a7z.fsf@flibuste.net>

Hi,

I'm new also, but i'll try to help you with what i find recently (and 
it works !)

When you don't find documentation, goto api-doc

"Thomas Weholt" <2002 at weholt.org> writes:

> Hi,
> 
> I'm new to the Twisted-framework, but it looks cool and has a lot of modules I'd like to use in a project. The only problem is that the current docs are a bit thin when it comes to web-development, when developing servlet-like dynamic-content. 
> 
> Does anybody have a tutorial or a reference project I could use to get the hang of it?
> 
> What I need is this:
> - Cookie-handling ( not mention at all in the docs )
there are in Request :

getCookie(self, key)
Get a cookie that was sent from the network. (inherited from Request)

addCookie(self, k, v, expires, domain, path, max_age, comment, secure)
Set an outgoing HTTP cookie. (inherited from Request)



> - Forms-processing ( this can be done manually when parsing the posted data, I'd like to get this done automatically )
also in Request (i find it in the source code, maybe it's a method for
them ?)

request.args

but why everythings is in list ?
?a=5&b=3
{"a":["5"], "b":["3"]} 

why not a compatible FieldStorage ?

> - a persistent Datastore/BusinessLogic-object available for every method and/or object that will produce content or process posted data, the D/B-object must be loaded at start-up and but should also have an option to be reloaded while the server is running
> 
> Any clues or hints? I'd be gratefull for any information that can clear up how Twisted best can be used to produce dynamic HTML-based content for a portal-like site. I'm most interested in methods similar to ZPT/SimpleTAL/ES and tech. like XMLC in the Enhydra project, but anything goes and I'm grateful for all you have to offer :-)
> 
> Thanks in advance,
> Thomas
> 

-- 
William Dod? - http://flibuste.net



From m at moshez.org  Sat Feb 15 04:28:37 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Feb 2003 09:28:37 -0000
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <87wuk12a7z.fsf@flibuste.net>
References: <87wuk12a7z.fsf@flibuste.net>, <005501c2d480$01f374f0$0401a8c0@razor>
Message-ID: <20030215092837.22474.qmail@green.zadka.com>

On 15 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> but why everythings is in list ?
> ?a=5&b=3
> {"a":["5"], "b":["3"]}

What would happen if it was ?a=1&a=2&a=3

> why not a compatible FieldStorage ?

Because FS is a horrible mess of semi-DWIMy stuff. 

Also, note that documentation patches (in this case, to using-twistedweb)
are happily accepted.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From andrew-twisted at puzzling.org  Sat Feb 15 04:43:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 20:43:17 +1100
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <007401c2d4b8$4b29b250$6501a8c0@listy>
References: <20030215044641.GG22815@frobozz.local> <007401c2d4b8$4b29b250$6501a8c0@listy>
Message-ID: <20030215094317.GK22815@frobozz.local>

On Sat, Feb 15, 2003 at 01:05:51AM -0500, Jeff Grimmett wrote:
> 
> > Have you seen doc/examples/pbecho.py and 
> > doc/examples/pbechoclient.py?  They do pretty much exactly 
> > this, i.e. a long-running server, and a one-shot
> > client:
> 
> Yep, but there's that dreaded reactor.stop() in the client.

Well, if you don't want the client to stop, don't call reactor.stop().  I'm
not sure what you mean by "one-shot"; I thought you meant a program that was
run with the sole purpose of running a PB command and exiting.

> Good news: I figured out how to make it work. I've created a class that
> I use as a mix-in for my protocol classes to utilize. The down side is
> that I have to maintain two versions of the debugger OR put in some
> conditional code, but the upshot is that I can now do exactly what I
> needed to do with it.

[code snipped]

I can't see anything special about that, except that it doesn't call
reactor.stop(), which is what we've been saying all along :)

-Andrew.




From andrew-twisted at puzzling.org  Sat Feb 15 04:46:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 20:46:41 +1100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <87wuk12a7z.fsf@flibuste.net>
References: <005501c2d480$01f374f0$0401a8c0@razor> <87wuk12a7z.fsf@flibuste.net>
Message-ID: <20030215094641.GL22815@frobozz.local>

I know next to nothing about Twisted Web, but...

On Sat, Feb 15, 2003 at 09:56:32AM +0100, William Dode wrote:
> 
> > - Forms-processing ( this can be done manually when parsing the posted data, I'd like to get this done automatically )
> also in Request (i find it in the source code, maybe it's a method for
> them ?)
> 
> request.args
> 
> but why everythings is in list ?
> ?a=5&b=3
> {"a":["5"], "b":["3"]} 
> 
> why not a compatible FieldStorage ?

I expect this is because ?a=5&a=7&b=8 is a perfectly valid URL.

-Andrew.




From wilk-ml at flibuste.net  Sat Feb 15 05:04:15 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 11:04:15 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <20030215092837.22474.qmail@green.zadka.com>
References: <87wuk12a7z.fsf@flibuste.net>
	<005501c2d480$01f374f0$0401a8c0@razor>
	<20030215092837.22474.qmail@green.zadka.com>
Message-ID: <87d6lt2734.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> On 15 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > but why everythings is in list ?
> > ?a=5&b=3
> > {"a":["5"], "b":["3"]}
> 
> What would happen if it was ?a=1&a=2&a=3

with FieldStorage ?a=1&a=2&a=3&b=5
{"a":["1","2","3"], "b":"5"}

> 
> > why not a compatible FieldStorage ?
> 
> Because FS is a horrible mess of semi-DWIMy stuff. 

we're agree, a documentation to explain the difference will be better.

> 
> Also, note that documentation patches (in this case, to using-twistedweb)
> are happily accepted.

ok, with my poor english, i'll better write an example !

-- 
William Dod? - http://flibuste.net



From tv at twistedmatrix.com  Sat Feb 15 05:38:50 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 15 Feb 2003 12:38:50 +0200
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214205749.31716.qmail@green.zadka.com>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com> <20030214205749.31716.qmail@green.zadka.com>
Message-ID: <20030215103850.GA27765@lapdog>

On Fri, Feb 14, 2003 at 08:57:49PM -0000, Moshe Zadka wrote:
> Oh, also, a comment about bash: if you're insane like me, you may want
> to consider running bash in vi-mode. Then editing something in the middle
> of a command can be easily done by word-jumping with b, w and e.
> It is rumoured the common (EMACS mode) also has something like
> that.

	You mean something like the standard emacs keybindings for
	faster cursor movement? Yes, it has those.

	M-b, M-f skip words.

	For more, type bind -p|egrep 'backward|forward'

-- 
:(){ :|:&};:



From wilk-ml at flibuste.net  Sat Feb 15 08:21:28 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 14:21:28 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <87d6lt2734.fsf@flibuste.net>
References: <87wuk12a7z.fsf@flibuste.net>
	<005501c2d480$01f374f0$0401a8c0@razor>
	<20030215092837.22474.qmail@green.zadka.com>
	<87d6lt2734.fsf@flibuste.net>
Message-ID: <871y291xyf.fsf@flibuste.net>

A non-text attachment was scrubbed...
Name: report_request.py
Type: text/python
Size: 1983 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030215/adabe428/attachment.bin 

From twisted at itamarst.org  Sat Feb 15 11:11:41 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 15 Feb 2003 11:11:41 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <007701c2d4b9$0d7d9f10$6501a8c0@listy>
References: <1045284175.12901.86.camel@troglodyte.funhouse>
	<007701c2d4b9$0d7d9f10$6501a8c0@listy>
Message-ID: <20030215111141.40187df0.twisted@itamarst.org>

On Sat, 15 Feb 2003 01:11:17 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> To be honest, I know I could merge the debugger and main app together
> into one event loop, but part of my concern is that the debugger
> employs a GUI; if the server gets busy, the GUI is going to suffer
> since its event loop is merged with the reactor event loop. 

Twisted lets you merge the GUI's event loop with its own. See
http://twistedmatrix.com/documents/howto/choosing-reactor

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From wilk-ml at flibuste.net  Sat Feb 15 13:11:40 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 19:11:40 +0100
Subject: [Twisted-Python] session
Message-ID: <87adgxza5f.fsf@flibuste.net>

Hi, 

I did an other litle example to see how can work session. A shop where
you put some articles in your bag...

I do request.getSession() and set attribute directly to the session...
Is it the good way ?
 
import twisted.web.resource
import cgi

class Shop(twisted.web.resource.Resource):
    """ ReportRequest with forms and cookies """
    articles=("chocolate","banana","apple")
    def isLeaf(self):
        return true
    def render(self, request):
        session = request.getSession()
        try:
            bag = session.bag
        except AttributeError:
            bag = session.bag={}

        try:
            article = request.args["put"][0]
            bag[article] = session.bag.get(article,0)+1
        except KeyError:
            pass # no article to put
        
        out = []
        out.append("""<html><body>What do you want to put in your bag ?<br>
        <a href='?put=chocolate'>chocolate</a><br>
        <a href='?put=banana'>banana</a><br>
        <a href='?put=apple'>apple</a><br>
        """)
        if len(bag) == 0:
            out.append("Your bag is empty")
        else:
            out.append("You have in your bag :<br>")
            for k,v in bag.items():
                out.append("%d %s<br>"%(v,k))
        return "".join(out)

from twisted.internet import reactor
from twisted.web import static, server

site = server.Site(Shop())
reactor.listenTCP(8080,site)
reactor.run()




From juliorom at ceibo.entelnet.bo  Sat Feb 15 19:17:03 2003
From: juliorom at ceibo.entelnet.bo (Julio Rommi =?iso-8859-15?q?O=F1a=20Miranda?=)
Date: Sat, 15 Feb 2003 20:17:03 -0400
Subject: [Twisted-Python] Woven examples
Message-ID: <20030216001456.ED1F685EF@pinky.miranda>

Hi,

I'm moving on Twisted, playing with woven but the twisted installed manual is 
not complete. Does anybody could tell me where I can get more information? or 
may be send my a larger example?

Regards.

-- 
Julio



From 2002 at weholt.org  Sat Feb 15 19:08:04 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 16 Feb 2003 01:08:04 +0100
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net>
Message-ID: <002901c2d54f$7b8e9630$0401a8c0@razor>

This is very interesting. I found out much of what was unclear when I posted
my earlier posting to this list by looking at this code. But I have some
more questions :

- how do I send HTTP-headers to the client?

- if I want to create some webservices, both XML-RPC and SOAP-based without
starting a different server using something like the code below, how do I do
that? I want to run one server, providing both webservices and content aimed
at browsers.

- is this the preferred way of doing things? Can I base my work on this
example? Drawbacks? I need the fastest, most scalable method available,
which can handle lots of concurrent users, several downloads and processes
at the same time, both using simple web-pages, webservices like the ones
mentioned earlier and ftp-access for administrators to maintain files served
by the server, both static files and source-code. The server should be able
to reload, using updated source without a complete restart. That would be
the ultimate platform. I'm still a bit unclear on wheter Twisted is a async.
*blocking* framework, making concurrent downloads harder, if at all
possible, or if it is similar to the threaded solution available in the
standard python distr. I've based my solutions on a threaded version of
BaseHTTPServer so far, and been told this is not very scalable. But I need a
non-blocking solution, where one process doesn't lock the entire server
until that process is over before other clients are handled.

Any clues, hints, code or flames appreciated. Thanks so far. Twisted looks
great !! :-)

Best regards,
Thomas


----- Original Message -----
From: "William Dode" <wilk-ml at flibuste.net>
To: <twisted-python at twistedmatrix.com>
Sent: Saturday, February 15, 2003 7:11 PM
Subject: [Twisted-Python] session


> Hi,
>
> I did an other litle example to see how can work session. A shop where
> you put some articles in your bag...
>
> I do request.getSession() and set attribute directly to the session...
> Is it the good way ?
>
> import twisted.web.resource
> import cgi
>
> class Shop(twisted.web.resource.Resource):
>     """ ReportRequest with forms and cookies """
>     articles=("chocolate","banana","apple")
>     def isLeaf(self):
>         return true
>     def render(self, request):
>         session = request.getSession()
>         try:
>             bag = session.bag
>         except AttributeError:
>             bag = session.bag={}
>
>         try:
>             article = request.args["put"][0]
>             bag[article] = session.bag.get(article,0)+1
>         except KeyError:
>             pass # no article to put
>
>         out = []
>         out.append("""<html><body>What do you want to put in your bag
?<br>
>         <a href='?put=chocolate'>chocolate</a><br>
>         <a href='?put=banana'>banana</a><br>
>         <a href='?put=apple'>apple</a><br>
>         """)
>         if len(bag) == 0:
>             out.append("Your bag is empty")
>         else:
>             out.append("You have in your bag :<br>")
>             for k,v in bag.items():
>                 out.append("%d %s<br>"%(v,k))
>         return "".join(out)
>
> from twisted.internet import reactor
> from twisted.web import static, server
>
> site = server.Site(Shop())
> reactor.listenTCP(8080,site)
> reactor.run()
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From andrew-twisted at puzzling.org  Sat Feb 15 20:28:14 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 16 Feb 2003 12:28:14 +1100
Subject: [Twisted-Python] session
In-Reply-To: <002901c2d54f$7b8e9630$0401a8c0@razor>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor>
Message-ID: <20030216012814.GC26957@frobozz.local>

On Sun, Feb 16, 2003 at 01:08:04AM +0100, Thomas Weholt wrote:
> by the server, both static files and source-code. The server should be able
> to reload, using updated source without a complete restart. That would be
> the ultimate platform. I'm still a bit unclear on wheter Twisted is a async.
> *blocking* framework, making concurrent downloads harder, if at all
> possible, or if it is similar to the threaded solution available in the
> standard python distr. I've based my solutions on a threaded version of

For reloading, look at twisted.python.rebuild.

And yes, Twisted is an async *non-blocking* framework, so it can merrily
handle multiple concurrent downloads.  And uploads.  For several different
protocols at the same time :)

-Andrew.




From wilk-ml at flibuste.net  Sun Feb 16 02:56:41 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 16 Feb 2003 08:56:41 +0100
Subject: [Twisted-Python] session
In-Reply-To: <002901c2d54f$7b8e9630$0401a8c0@razor>
References: <87adgxza5f.fsf@flibuste.net>
	<002901c2d54f$7b8e9630$0401a8c0@razor>
Message-ID: <87n0kwzmiu.fsf@flibuste.net>

"Thomas Weholt" <2002 at weholt.org> writes:

> This is very interesting. I found out much of what was unclear when I posted
> my earlier posting to this list by looking at this code. But I have some
> more questions :

if twisted guru could confirm that it's the right way ? i could make a
little documentation cgi<->twisted

> 
> - how do I send HTTP-headers to the client?

request.setHeader(self, k, v)
Set an outgoing HTTP header. (inherited from Request)

for example setHeader("content-type","text/csv")

> 
> - if I want to create some webservices, both XML-RPC and SOAP-based without
> starting a different server using something like the code below, how do I do
> that? I want to run one server, providing both webservices and content aimed
> at browsers.
> 
> - is this the preferred way of doing things? Can I base my work on this
> example? Drawbacks? I need the fastest, most scalable method available,
> which can handle lots of concurrent users, several downloads and processes
> at the same time, both using simple web-pages, webservices like the ones
> mentioned earlier and ftp-access for administrators to maintain files served
> by the server, both static files and source-code. The server should be able
> to reload, using updated source without a complete restart. That would be
> the ultimate platform. I'm still a bit unclear on wheter Twisted is a async.
> *blocking* framework, making concurrent downloads harder, if at all
> possible, or if it is similar to the threaded solution available in the
> standard python distr. I've based my solutions on a threaded version of
> BaseHTTPServer so far, and been told this is not very scalable. But I need a
> non-blocking solution, where one process doesn't lock the entire server
> until that process is over before other clients are handled.

The IO are not blocked, you can upload/download big files in the same
times without worry about this, even if the client are slow.
Thread are blocked, you have to "defer" when you will do long task.
In the archive of the mailing-list, there is a good example of using
defered with sql query.

-- 
William Dode - http://flibuste.net



From warner at lothar.com  Sun Feb 16 04:22:50 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 16 Feb 2003 01:22:50 -0800 (PST)
Subject: [Twisted-Python] A useful value for argv[0]
References: <20030210232953.V22380-100000@nosferatu.kriln.com>
Message-ID: <20030216.012250.126590856.warner@lothar.com>

> >   I think it would be neat if twistd re-executed itself(/python), and
> > specified the name of the tap/tas/tax file it was currently processing as
> > the value for argv[0].

I like it, but the re-exec step is a bit unfortunate. I can imagine problems
(or at least user confusion) when twistd is run under strace, or pdb.

Is there any python way to change argv[0] in place? C apps can muck with it
all they like.. is sys.argv[0] mutable in any useful way?

 -Brian



From matt at pollenation.net  Sat Feb 15 19:21:12 2003
From: matt at pollenation.net (Matt Goodall)
Date: 16 Feb 2003 00:21:12 +0000
Subject: [Twisted-Python] Woven examples
In-Reply-To: <20030216001456.ED1F685EF@pinky.miranda>
References: <20030216001456.ED1F685EF@pinky.miranda>
Message-ID: <1045354872.27492.10.camel@localhost>

Hi,

I've asked the same question on IRC and was told that the best place is
to look at Issues, a bug tracking type application.

AFAIK, the only place the Issues code is available is from the twisted
matrix CVS repostitory. 'cvs -d :pserver:anon at twistedmatrix.com:/cvs co
Issues' should retrieve the code. More information on twisted CVS access
can be found at http://twistedmatrix.com/developers/cvs.

Hope this helps.

Cheers, Matt


On Sun, 2003-02-16 at 00:17, Julio Rommi O?a Miranda wrote:
> Hi,
> 
> I'm moving on Twisted, playing with woven but the twisted installed manual is 
> not complete. Does anybody could tell me where I can get more information? or 
> may be send my a larger example?
> 
> Regards.
-- 
Matt Goodall, Technical Director
Pollenation Internet Ltd, http://www.pollenation.net
e: matt at pollenation dot net




From radix at twistedmatrix.com  Sun Feb 16 05:00:50 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 05:00:50 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030216.012250.126590856.warner@lothar.com>
References: <20030210232953.V22380-100000@nosferatu.kriln.com> <20030216.012250.126590856.warner@lothar.com>
Message-ID: <20030216100050.GD29796@radii>

On Sun, Feb 16, 2003 at 01:22:50AM -0800, Brian Warner wrote:
> > >   I think it would be neat if twistd re-executed itself(/python), and
> > > specified the name of the tap/tas/tax file it was currently processing as
> > > the value for argv[0].
> 
> I like it, but the re-exec step is a bit unfortunate. I can imagine problems
> (or at least user confusion) when twistd is run under strace, or pdb.
> 
> Is there any python way to change argv[0] in place? C apps can muck with it
> all they like.. is sys.argv[0] mutable in any useful way?

Nope. I think there was a patch for Python to allow it to be mutable,
but nobody wanted to allow a change to main(), or something.

</rumour>

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Sun Feb 16 05:09:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 05:09:10 -0500
Subject: [Twisted-Python] session
In-Reply-To: <002901c2d54f$7b8e9630$0401a8c0@razor>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor>
Message-ID: <20030216100910.GE29796@radii>

On Sun, Feb 16, 2003 at 01:08:04AM +0100, Thomas Weholt wrote:
> - how do I send HTTP-headers to the client?

That's documented in Request's API ;-)

> - if I want to create some webservices, both XML-RPC and SOAP-based without
> starting a different server using something like the code below, how do I do
> that? I want to run one server, providing both webservices and content aimed
> at browsers.
> 
> - is this the preferred way of doing things? Can I base my work on this

No -- you want to use .rpys (.rpys can be used for XML-RPC resources
too, of course). William made some nice changes to that example, but
changing it to instantiate its own server.Site was a bad one.

> I'm still a bit unclear on wheter Twisted is a async.  *blocking*
> framework, making concurrent downloads harder, if at all

No, Twisted is non-blocking. i.e., NEVER write code that blocks in
Twisted applications, unless you know what you're doing :-)


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From warner at lothar.com  Sun Feb 16 05:32:51 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 16 Feb 2003 02:32:51 -0800 (PST)
Subject: [Twisted-Python] buildbot?
References: <20030214163132.41233.qmail@web10008.mail.yahoo.com>
Message-ID: <20030216.023251.21613415.warner@lothar.com>

> Does buildbot use cvs up -d to check out the code?  If not, it should,
> because that would fix the problem I'm seeing above.

There was a problem with the way the buildbot was doing the update (it did
'cvs update -dP doc/howto/listings/lore', but I think cvs-1.11.1p1 on pyramid
didn't interpret that correctly and didn't create the named directory). I
changed the code to respond to any new directory by doing an update of the
whole tree, and then manually updated the "quick" builder tree.

Eventually I plan to change the CVS update step to notice a CVS failure (like
the one that happened when it tried to update listings/plugins.tml later on)
and fix it by just checking out a brand new tree.

Thanks for the catch.. let me know if you see any other problems.

 -Brian

PS: I announced the buildbot's presence to the IRC channel, but not to this
list. Consider it announced :). http://twistedmatrix.com/~warner.twistd/ is
an instance of my BuildBot project running against the Twisted source tree.
It does full compile/test/process-docs cycles with both python-2.1 and -2.2
whenever the tree has been stable for more than 5 minutes, and tries to build
.debs if both the -2.1 and -2.2 test suites passed. More details will be
available through links on that page (as I start adding on-line
documentation) or at the PyCon presentation.



From 2002 at weholt.org  Sun Feb 16 10:06:56 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 16 Feb 2003 16:06:56 +0100
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii>
Message-ID: <005f01c2d5cd$0c65df10$0401a8c0@razor>

> That's documented in Request's API ;-)

Yes, after some digging around I found out that the API-docs explained alot.
I'll try there first in the future.

> > - is this the preferred way of doing things? Can I base my work on this
>
> No -- you want to use .rpys (.rpys can be used for XML-RPC resources
> too, of course). William made some nice changes to that example, but
> changing it to instantiate its own server.Site was a bad one.

Ok. I liked that way, but I'm porting a project from a solution based on
BaseHTTPServer and a very customized RequestHandler to Twisted and like to
do it the Twisted-way as much as possible. But I need to have some
middle-man between the server and the .rpy that will produce the content. So
far I've decided what method to use to produce content by path:

/test/index.html would be something like :

server.webapps['test'].index(request, response, server)

in my earlier code. ( Actually the method called was found using getattr and
some ugly code, so if there's a better way I'm read to learn. ) I cannot get
the grip on how to use childs and leafs in Twisted. I think my code should
be written to use that somehow. The reason I need this is because I need to
have a perstistent object, containing compiled templates ( using
simpleTAL/ES ), users-information and a dict of what I've called webapps,
similar to the rpys I guess, in memory. I think that can work with some of
the sample code I've seen. But I want to pass more parameters to the
rpy-file that will produce the content, not just call it's render method.

In short; how can I turn Williams example into a rpy and still have the
ability to decide what render-method to call based on the requested path and
pass more parameters to the rendering method? Is that possible?

I don't want to write an rpy for each file that will produce on page. In my
previous solution I've seperated businesslogic, data and content-generation
in such a way that the content-producer method took only a few lines each.
It made it possible to have them in one class, instead of a bunch of small
files. It could look something like this ;

class MyPage:

     def index(self, request, response, server):
        # produces content for index.html

    def about(self, request, response, server):
        # produces content for about.html

    ... etc ...

It made it easier to maintain, easier to reuse code between
content-generator methods and overall easier to understand. I think. Since
design was in templates all I did was build a dict of values, find the right
template and call the proper method in simpleTAL/ES to produce the content
with the dict and name of template as parameters. It was very easy and done
in just a few lines of code.

> Twisted applications, unless you know what you're doing :-)

So far I'm without a clue, but hopefully I'm getting there ;-) Thanks. Sorry
if I'm writing a bunch of crap here, but I'm very excited about getting the
hang of Twisted.

Best regards,
Thomas




From tv at twistedmatrix.com  Sun Feb 16 10:18:25 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 16 Feb 2003 17:18:25 +0200
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030216.012250.126590856.warner@lothar.com>
References: <20030210232953.V22380-100000@nosferatu.kriln.com> <20030216.012250.126590856.warner@lothar.com>
Message-ID: <20030216151825.GA29827@lapdog>

On Sun, Feb 16, 2003 at 01:22:50AM -0800, Brian Warner wrote:
> Is there any python way to change argv[0] in place? C apps can muck with it
> all they like.. is sys.argv[0] mutable in any useful way?

	C apps can't really muck with it all they like. There's a lot
	of limitations. In general, increasing the legth is not portably
	safe (without horrible kludges), and no minimum length can be
	guaranteed.

	The only simple, portable way is opportunistically resetting
	argv[0] if and only if the len(newValue) <= len(oldValue).

-- 
:(){ :|:&};:



From justin at iago.org  Sun Feb 16 10:31:46 2003
From: justin at iago.org (justin at iago.org)
Date: Sun, 16 Feb 2003 10:31:46 -0500
Subject: [Twisted-Python] session
In-Reply-To: <20030216100910.GE29796@radii> (Christopher Armstrong's message
 of "Sun, 16 Feb 2003 05:09:10 -0500")
References: <87adgxza5f.fsf@flibuste.net>
	<002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii>
Message-ID: <m2bs1c9r8d.fsf@justin.local.>

Christopher Armstrong <radix at twistedmatrix.com> writes:

> you want to use .rpys

A quick look through the documentation index doesn't show anything
that is obviously about .rpys.  How should the uninitiated be finding
out that they want to use them, if they don't even see a mention?

-Justin

 




From glyph at twistedmatrix.com  Sun Feb 16 10:57:10 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 16 Feb 2003 09:57:10 -0600
Subject: [Twisted-Python] session
In-Reply-To: <005f01c2d5cd$0c65df10$0401a8c0@razor>
Message-ID: <4EA4AF90-41C7-11D7-BB31-000393C9700E@twistedmatrix.com>

On Sunday, February 16, 2003, at 09:06 AM, Thomas Weholt wrote:

>> No -- you want to use .rpys (.rpys can be used for XML-RPC resources
>> too, of course). William made some nice changes to that example, but
>> changing it to instantiate its own server.Site was a bad one.

> I cannot get the grip on how to use childs and leafs in Twisted. I 
> think my code should be written to use that somehow. The reason I need 
> this is because I need to have a perstistent object, containing 
> compiled templates ( using simple TAL/ES ), users-information and a 
> dict of what I've called webapps, similar to the rpys I guess, in 
> memory. I think that can work with some of the sample code I've seen. 
> But I want to pass more parameters to the rpy-file that will produce 
> the content, not just call it's render method.

You want to use twisted.web.woven.tapestry: however, it's not entirely 
ready.  At last I knew of it, this module was going to be deprecated 
and functionality was going to be rolled back into Controller.  At any 
rate, reading the code there should give you some ideas.

Nothing horribly confusing is going to happen to it though.  You will 
probably have to spend 30 minutes renaming some classes when we polish 
and finalize it.

As to the theory:

An RPY is a file that can generate a resource.  It is NOT suggested, in 
an application, to have multiple related resources in different .rpy's. 
  They are conceptually related objects, which you can aggregate by 
using request.putChild and overriding request.getChild.

What you want to do is to create a top-level "site" resource, (not a 
server.Site) and then handle getChild there, returning other Resource 
instances that you can dynamically create, cache, or load from your own 
files.

As far as "leafs" -- in Twisted Web, isLeaf is just a flag that says 
"stop calling getChild here, please".  There's nothing really special 
about it.

A simple example:

	http://asdf.com/foo/bar/baz => root.getChild("foo", 
...).getChild("bar", ...).getChild("baz", ...).render(...)

What happens at each step of that path is pretty much up to you ;).




From radix at twistedmatrix.com  Sun Feb 16 13:11:26 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 13:11:26 -0500
Subject: [Twisted-Python] session
In-Reply-To: <m2bs1c9r8d.fsf@justin.local.>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.>
Message-ID: <20030216181126.GH29796@radii>

On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
> Christopher Armstrong <radix at twistedmatrix.com> writes:
> 
> > you want to use .rpys
> 
> A quick look through the documentation index doesn't show anything
> that is obviously about .rpys.  How should the uninitiated be finding
> out that they want to use them, if they don't even see a mention?

Don't look so quickly.

http://twistedmatrix.com/documents/howto/using-twistedweb

There's an entire section about them there.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Sun Feb 16 13:18:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 16 Feb 2003 13:18:48 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030216151825.GA29827@lapdog>
Message-ID: <181B51AA-41DB-11D7-B93C-000A95686CD8@redivi.com>

On Sunday, Feb 16, 2003, at 10:18 America/New_York, Tommi Virtanen 
wrote:

> On Sun, Feb 16, 2003 at 01:22:50AM -0800, Brian Warner wrote:
>> Is there any python way to change argv[0] in place? C apps can muck 
>> with it
>> all they like.. is sys.argv[0] mutable in any useful way?
>
> 	C apps can't really muck with it all they like. There's a lot
> 	of limitations. In general, increasing the legth is not portably
> 	safe (without horrible kludges), and no minimum length can be
> 	guaranteed.
>
> 	The only simple, portable way is opportunistically resetting
> 	argv[0] if and only if the len(newValue) <= len(oldValue).

Well, can't you do it with os.execve(sys.executable, ...) ?

-bob




From grrrendel at comcast.net  Sun Feb 16 06:31:58 2003
From: grrrendel at comcast.net (cary)
Date: Sun, 16 Feb 2003 11:31:58 +0000
Subject: [Twisted-Python] a qtManhole
Message-ID: <3E4F76AE.5070602@comcast.net>

hi guys,

i needed a qtManhole so i put a simple one together. .
meaning it doesnt support snazzy manhole stuff,
just basic "remote interp/shell" functionality. .

does manhole.explorer work now?

perhaps a knowledgable twisted person could give
me some pointers. .

i thought this could be useful to twisted ppl
who are on platforms where pyqt is easier to setup than
pygtk. .

would this be something that doc/examples could use?
( after i make it right, of course )

i have run this on linux/windows/and zaurus5500 :)

thanks,
cary


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: qtManhole.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030216/6591c414/attachment.txt 

From glyph at twistedmatrix.com  Sun Feb 16 13:33:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 16 Feb 2003 12:33:49 -0600
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <181B51AA-41DB-11D7-B93C-000A95686CD8@redivi.com>
Message-ID: <30EDE5A4-41DD-11D7-B314-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sunday, February 16, 2003, at 12:18 PM, Bob Ippolito wrote:

( ... Lots of other people saying lots of other things ... )

> Well, can't you do it with os.execve(sys.executable, ...) ?

It occurs to me that we're exec'ing in any case, when we daemonize.  In 
the case where you don't daemonize, it's probably not too important to 
set argv[0] anyway.

Could we compromise on only setting it then?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+T9mRvVGR4uSOE2wRAq0sAKCTk2tGZI4mLCDhl78xdE8DwxqEngCfUdDW
1xLpgbXNqei3RGaUzvaAIZE=
=ch+L
-----END PGP SIGNATURE-----




From radix at twistedmatrix.com  Sun Feb 16 13:45:25 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 13:45:25 -0500
Subject: [Twisted-Python] a qtManhole
In-Reply-To: <3E4F76AE.5070602@comcast.net>
References: <3E4F76AE.5070602@comcast.net>
Message-ID: <20030216184525.GA19353@radii>

On Sun, Feb 16, 2003 at 11:31:58AM +0000, cary wrote:
> i needed a qtManhole so i put a simple one together. .
> meaning it doesnt support snazzy manhole stuff,
> just basic "remote interp/shell" functionality. .

[snip]
 
> would this be something that doc/examples could use?
> ( after i make it right, of course )

It'd be better for twisted/manhole/ui/, with an additional argument to
`manhole' to specify the GUI toolkit to use. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Sun Feb 16 14:13:21 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Feb 2003 19:13:21 -0000
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <30EDE5A4-41DD-11D7-B314-000393C9700E@twistedmatrix.com>
References: <30EDE5A4-41DD-11D7-B314-000393C9700E@twistedmatrix.com>
Message-ID: <20030216191321.3684.qmail@green.zadka.com>

On Sun, 16 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> It occurs to me that we're exec'ing in any case, when we daemonize.  In 
> the case where you don't daemonize, it's probably not too important to 
> set argv[0] anyway.

Um...we fork, we don't exec.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From acapnotic at twistedmatrix.com  Sun Feb 16 14:17:04 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 16 Feb 2003 11:17:04 -0800
Subject: [Twisted-Python] a qtManhole
In-Reply-To: <3E4F76AE.5070602@comcast.net>
References: <3E4F76AE.5070602@comcast.net>
Message-ID: <1045422898.12896.97.camel@troglodyte.funhouse>

On Sun, 2003-02-16 at 03:31, cary wrote:
> does manhole.explorer work now?

For basic object-browsing, yes.  It doesn't have any update notification
or anything.  It's probably due for its annual code sanity audit.

-- 
The moon is full, 99.6% illuminated, 14.2 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030216/9e1c4353/attachment.pgp 

From 2002 at weholt.org  Sun Feb 16 15:56:53 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 16 Feb 2003 21:56:53 +0100
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii>
Message-ID: <008301c2d5fd$f0f1dd20$0401a8c0@razor>

> On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
> > Christopher Armstrong <radix at twistedmatrix.com> writes:
> >
> > > you want to use .rpys
> >
> > A quick look through the documentation index doesn't show anything
> > that is obviously about .rpys.  How should the uninitiated be finding
> > out that they want to use them, if they don't even see a mention?
>
> Don't look so quickly.
>
> http://twistedmatrix.com/documents/howto/using-twistedweb
>
> There's an entire section about them there.

It's a bit unclear on where to put all the files created in the example,
where to put files to make them available in the generated *.tap-file etc.
Some lines about file organisation would be nice. More examples, more
details, step-by-step, for dummies approach, -- that's what I'm after.
Apparently I'm not the only one having trouble understanding the concepts of
rpys, resources and what not.

I'm slowly getting a grip on it, but there are still some things I must do
that I don't understand. If I get the time I'll try to document my findings
and make a more step-by-step guide for complete dummies on the matter.

Still, it seems like Twisted has enourmos potential. :-)

Thomas




From anthony at interlink.com.au  Sun Feb 16 20:12:28 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 17 Feb 2003 12:12:28 +1100
Subject: [Twisted-Python] A useful value for argv[0] 
In-Reply-To: <20030216100050.GD29796@radii> 
Message-ID: <200302170112.h1H1CSf25240@bonanza.off.ekorp.com>

>>> Christopher Armstrong wrote
> Nope. I think there was a patch for Python to allow it to be mutable,
> but nobody wanted to allow a change to main(), or something.

More accurately, no-one was willing to take on the platform-dependency
hell that it would cause. argv[0] setting works quite differently across
all sorts of different platforms.


-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From bob at redivi.com  Sun Feb 16 20:46:39 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 16 Feb 2003 20:46:39 -0500
Subject: [Twisted-Python] A useful value for argv[0] 
In-Reply-To: <200302170112.h1H1CSf25240@bonanza.off.ekorp.com>
Message-ID: <A873C7D8-4219-11D7-B93C-000A95686CD8@redivi.com>

On Sunday, Feb 16, 2003, at 20:12 America/New_York, Anthony Baxter 
wrote:

>
>>>> Christopher Armstrong wrote
>> Nope. I think there was a patch for Python to allow it to be mutable,
>> but nobody wanted to allow a change to main(), or something.
>
> More accurately, no-one was willing to take on the platform-dependency
> hell that it would cause. argv[0] setting works quite differently 
> across
> all sorts of different platforms.

Yeah, for example, on OS X the WindowServer and application frameworks 
use it to determine the location of stuff in an application bundle -- 
and if it doesn't point inside an application bundle,  you're not 
allowed to make it a GUI application (unless it's CFM, or you  do some 
nasty unsupported undocumented stuff).  I've heard at least one Apple 
employee insinuate that this is a bug, but since that's been the state 
of affairs for over a year it's got a pretty low priority.

-bob




From m at moshez.org  Sun Feb 16 21:27:00 2003
From: m at moshez.org (Moshe Zadka)
Date: 17 Feb 2003 02:27:00 -0000
Subject: [Twisted-Python] session
In-Reply-To: <008301c2d5fd$f0f1dd20$0401a8c0@razor>
References: <008301c2d5fd$f0f1dd20$0401a8c0@razor>, <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii>
Message-ID: <20030217022700.6642.qmail@green.zadka.com>

On Sun, 16 Feb 2003, "Thomas Weholt" <2002 at weholt.org> wrote:

> It's a bit unclear on where to put all the files created in the example,
> where to put files to make them available in the generated *.tap-file etc.
> Some lines about file organisation would be nice. More examples, more
> details, step-by-step, for dummies approach, -- that's what I'm after.
> Apparently I'm not the only one having trouble understanding the concepts of
> rpys, resources and what not.

One of the tutorials for the upcoming PyCon is about Deployment, Configuration
and Usage of the Twisted Web Server (by Travis B. Hartwell). Just in case
any of you going there, this should be a pretty good introduction.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From golux at comcast.net  Mon Feb 17 01:23:07 2003
From: golux at comcast.net (Steve Waterbury)
Date: Mon, 17 Feb 2003 01:23:07 -0500
Subject: [Twisted-Python] twisted rooming scholarships for PyCon
Message-ID: <1045462987.1360.28.camel@golux>

Hey gang,

If anyone out there is coming to PyCon and hasn't yet 
made a reservation, I can accomodate one (or two, if 
they tolerate each other well ;^) at the waterbug mansion.  
(Yes "mansion" *is* a joke; my house is very humble!)
Chris Armstrong and Donovan Preston will be here Sunday 
eve, but they will be going to their hotels for the rest of 
their stay, so my living room (with convertible couch, 
and a futon for one more) is available the rest of the 
week.  I'm planning on attending the Twisted sprint, 
where I am hoping to enhance the twistification of my 
pangalactic app, and the rest of PyCon, so I can provide 
transpo into DC from Greenbelt where I live (a suburb 
just north) and back.  (If there are two people, one of 
them should be either a small person or very limber, as 
they will be riding in the back seat of a Mustang ;^).  
There's also a subway stop in Greenbelt, so in case you 
want to stay later I could pick you up there.

Cheers,
-- Steve.





From mario at ruggier.org  Mon Feb 17 04:19:27 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 17 Feb 2003 10:19:27 +0100
Subject: [Twisted-Python] man page web links broken
Message-ID: <E990C0EE-4258-11D7-8690-000393756786@ruggier.org>

Hi,

just to signal that all links on 
http://twistedmatrix.com/documents/man/index are broken...

mario




From cliechti at gmx.net  Sun Feb 16 18:28:45 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Mon, 17 Feb 2003 00:28:45 +0100
Subject: [Twisted-Python] patch: win32serialport.py implementation
Message-ID: <NL31HEROJH94QL1W00893C4YOK43QM.3e501ead@rock>

here is an implementation for the serial port module for win32.

it uses a overlapped read of one character and when the event occours, it reads as much as possible from the buffer.
writes are overlapped too, meaning that if the send buffer of the os is full, that a python queue is used to save the output for later.
i hope that this gives a good performance, low latencies and short function calls.

note that i was not sucessful with the WaitCommEvent function that would allow event based programming not only for the data but 
also for the data lines. but this function is broken for overlapped IO in older win32all releases (fixed in newer ones) but i experienced 
crashes nontheless.
(setting up an overlapped wait, then using a WaitForSingleObject worked, but it did crash when using the win32 reactor of twisted. 
the crash was after the exit of the event handler, but before the control was back in the event loop of twisted. i guess there is some c-
stack corruption involved)

however, i think that the implementation below is a solid solution.

also note that i removed the timeout parameter from the twisted SerialPort class. i think it does not make sense as its event based.. 
even worse, a wrong timeout could cause malfunction. i sugest that the timeout parameter is removed in posixserial.py and 
javaserial.py too and inserting the default value in the instantiation of the internal Serial object (like i've done it below).

please cc me for comments, im not on the list, tnx.

chris

------------------ begin: Twisted/twisted/internet/serialport/win32serialport.py -----------------
# Twisted, the Framework of Your Internet
# Copyright (C) 2001-2002 Matthew W. Lefkowitz
# this module: cliechti at gmx.net
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""
Serial Port Protocol
"""

# system imports
import os, Queue

# dependent on pyserial ( http://pyserial.sf.net/ )
import serial
from serial import PARITY_NONE, PARITY_EVEN, PARITY_ODD
from serial import STOPBITS_ONE, STOPBITS_TWO
from serial import FIVEBITS, SIXBITS, SEVENBITS, EIGHTBITS
from serialport import BaseSerialPort
import win32file, win32event

# twisted imports
from twisted.protocols import basic
from twisted.internet import abstract
from twisted.python import log

class SerialPort(BaseSerialPort, abstract.FileDescriptor):
    """A select()able serial device, acting as a transport."""
    connected = 1

    def __init__(self, protocol, deviceNameOrPortNumber, reactor, 
        baudrate = 9600, bytesize = EIGHTBITS, parity = PARITY_NONE,
        stopbits = STOPBITS_ONE, xonxoff = 0, rtscts = 0):
        self._serial = serial.Serial(deviceNameOrPortNumber, baudrate = baudrate, bytesize = bytesize, parity = parity, stopbits = 
stopbits, timeout = None, xonxoff = xonxoff, rtscts = rtscts)
        self.flushInput()
        self.flushOutput()
        self.reactor = reactor
        self.protocol = protocol
        self.outQueue = Queue.Queue()
        self.closed = 0
        self.closedNotifies = 0
        self.write_in_progress = 0
        
        self.protocol = protocol
        self.protocol.makeConnection(self)
        self._overlapped_read = win32file.OVERLAPPED()
        self._overlapped_read.hEvent = win32event.CreateEvent(None, 0, 0, None)
        self._overlapped_write = win32file.OVERLAPPED()
        self._overlapped_write.hEvent = win32event.CreateEvent(None, 0, 0, None)
        
        self.reactor.addEvent(self._overlapped_read.hEvent, self, self.serialReadEvent)
        self.reactor.addEvent(self._overlapped_write.hEvent, self, self.serialWriteEvent)

        flags, comstat = win32file.ClearCommError(self._serial.hComPort)
        rc, self.read_buf = win32file.ReadFile(self._serial.hComPort, win32file.AllocateReadBuffer(1), self._overlapped_read)

    def serialReadEvent(self):
        #get that character we set up
        n = win32file.GetOverlappedResult(self._serial.hComPort, self._overlapped_read, 0)
        if n:
            first = str(self.read_buf[:n])
            #now we should get everything that is already in the buffer
            flags, comstat = win32file.ClearCommError(self._serial.hComPort)
            rc, buf = win32file.ReadFile(self._serial.hComPort, win32file.AllocateReadBuffer(comstat.cbInQue), self._overlapped_read)
            n = win32file.GetOverlappedResult(self._serial.hComPort, self._overlapped_read, 1)
            #handle all the received data:
            self.protocol.dataReceived(first + str(buf[:n]))

        #set up next one
        rc, self.read_buf = win32file.ReadFile(self._serial.hComPort, win32file.AllocateReadBuffer(1), self._overlapped_read)

    def write(self, data):
        #~ self._serial.write(data)
        if self.write_in_progress:
            #~ log.msg('adding to write queue')
            self.outQueue.put(data)
        else:
            #~ log.msg('write')
            self.write_in_progress = 1
            win32file.WriteFile(self._serial.hComPort, data, self._overlapped_write)

    def serialWriteEvent(self):
        try:
            dataToWrite = self.outQueue.get_nowait()
        except:
            self.write_in_progress = 0
            #~ log.msg('outQueue empty')
            return
        else:
            win32file.WriteFile(self._serial.hComPort, dataToWrite, self._overlapped_write)
    
    def connectionLost(self, reason):
        #~ log.msg('connectionLost')
        self.reactor.removeEvent(self._overlapped_read.hEvent)
        self.reactor.removeEvent(self._overlapped_write.hEvent)
        abstract.FileDescriptor.connectionLost(self, reason)
        self._serial.close()

------------------ end: Twisted/twisted/internet/serialport/win32serialport.py -----------------







From andrew-twisted at puzzling.org  Mon Feb 17 05:51:21 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 17 Feb 2003 21:51:21 +1100
Subject: [Twisted-Python] man page web links broken
In-Reply-To: <E990C0EE-4258-11D7-8690-000393756786@ruggier.org>
References: <E990C0EE-4258-11D7-8690-000393756786@ruggier.org>
Message-ID: <20030217105121.GD27513@frobozz.local>

On Mon, Feb 17, 2003 at 10:19:27AM +0100, Mario Ruggier wrote:
> Hi,
> 
> just to signal that all links on 
> http://twistedmatrix.com/documents/man/index are broken...

In the meantime, this page works:
    http://twistedmatrix.com/documents/man/index.xhtml

-Andrew.




From exarkun at intarweb.us  Mon Feb 17 14:13:00 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 17 Feb 2003 14:13:00 -0500
Subject: [Twisted-Python] Twisted Sister
Message-ID: <20030217191300.GA8726@meson.dyndns.org>

  Time and API changes seem to have taken their toll on twisted.sister. 
Currently, "mktap sister" fails with 

AttributeError: twisted.cred.authorizer.DefaultAuthorizer instance has no
accessor for: loadIdentity

  Obviously because DefaultAuthorizer doesn't provide loadIdentity -
TicketAuthorizer does.  I don't see any API for changing the authorizer of
an application, though.  A quick hack, setting app._authorizer =
TicketAuthorizer() at the beginning of sistap.py's updateApplication()
solves the problem, but this is probably the wrong approach.

  Does anyone know when or how the API sister relied on was changed, or have
any ideas about what should be done to fix it?

  Jp

-- 
 up 9 days, 0:28, 5 users, load average: 0.14, 0.09, 0.08
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030217/db030d64/attachment.pgp 

From jbloom at cfa.harvard.edu  Mon Feb 17 17:56:56 2003
From: jbloom at cfa.harvard.edu (Joshua Bloom)
Date: Mon, 17 Feb 2003 17:56:56 -0500 (EST)
Subject: [Twisted-Python] newbie: asynchronous client
Message-ID: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>

I'd like to set up a non-blocking TCP client that loops indefinately,
waiting for the user to input something (which gets sent to the server)
but also responds to server replies whenever it can. So after I send
"factorial 1234" to the server, I'd like to be able to say "1 + 2" before
the server returns and get a response from that.

Thanks in advance for any pointers.

Josh Bloom



From exarkun at intarweb.us  Mon Feb 17 18:44:28 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 17 Feb 2003 18:44:28 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
Message-ID: <20030217234428.GB14752@meson.dyndns.org>

On Mon, Feb 17, 2003 at 05:56:56PM -0500, Joshua Bloom wrote:
> 
> I'd like to set up a non-blocking TCP client that loops indefinately,
> waiting for the user to input something (which gets sent to the server)
> but also responds to server replies whenever it can. So after I send
> "factorial 1234" to the server, I'd like to be able to say "1 + 2" before
> the server returns and get a response from that.
> 
> Thanks in advance for any pointers.

  Non-blocking user-input is the hardest part of this program.  That said,
if you go with one of the GUI toolkits that Twisted is integrated with, it
should be no problem (Qt, Gtk, Tk, PyUI, curses, wxWindows).  Their
mainloops are mashed into Twisted's in various ways, letting network and
user events happily co-exist.  If you go with another toolkit, you'll have
to find some way to accomplish the same mainloop integration.

  Examples for GUI apps are (surprise) in doc/examples/

  Jp

-- 
"Pascal is Pascal is Pascal is dog meat."
                -- M. Devine and P. Larson, Computer Science 340
-- 
 up 9 days, 4:28, 3 users, load average: 0.02, 0.06, 0.02
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030217/2b816604/attachment.pgp 

From bob at redivi.com  Mon Feb 17 19:14:27 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 17 Feb 2003 19:14:27 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030217234428.GB14752@meson.dyndns.org>
Message-ID: <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>

On Monday, Feb 17, 2003, at 18:44 America/New_York, Jp Calderone wrote:

> On Mon, Feb 17, 2003 at 05:56:56PM -0500, Joshua Bloom wrote:
>>
>> I'd like to set up a non-blocking TCP client that loops indefinately,
>> waiting for the user to input something (which gets sent to the 
>> server)
>> but also responds to server replies whenever it can. So after I send
>> "factorial 1234" to the server, I'd like to be able to say "1 + 2" 
>> before
>> the server returns and get a response from that.
>>
>> Thanks in advance for any pointers.
>
>   Non-blocking user-input is the hardest part of this program.  That 
> said,
> if you go with one of the GUI toolkits that Twisted is integrated 
> with, it
> should be no problem (Qt, Gtk, Tk, PyUI, curses, wxWindows).  Their
> mainloops are mashed into Twisted's in various ways, letting network 
> and
> user events happily co-exist.  If you go with another toolkit, you'll 
> have
> to find some way to accomplish the same mainloop integration.
>
>   Examples for GUI apps are (surprise) in doc/examples/

Eh, if you're fine with line-based input (doesn't actually get data 
until user presses enter, and there's a way around that if necessary.. 
at least you can get around it in unix).  I've got some code below that 
you could use as a starting point.

I think that maybe there should be a tutorial on how to make 
interactive console Twisted programs using stdio and then another with 
curses/readline perhaps?

-bob

#!/usr/bin/env python
from twisted.protocols.basic import LineReceiver
from twisted.internet import reactor, stdio
class MyProtocol(LineReceiver):
	delimiter = '\n'
	def lineReceived(self, line):
		line = line.rstrip() # this sacrifices trailing white space and/or a 
possible '\r' if on windows?
		if line.lower() in ('quit', 'q'):
			reactor.stop()
		print "You just typed: %s" % (line,)

if __name__ == '__main__':
	# basically tie stdin to an instance of MyProtocol
	print 'type "q" or "quit" (sans quotes) to exit'
	stdio.StandardIO(MyProtocol())
	reactor.run()




From radix at twistedmatrix.com  Mon Feb 17 20:14:41 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 17 Feb 2003 20:14:41 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
Message-ID: <20030218011441.GA1527@radii>

On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> I think that maybe there should be a tutorial on how to make 
> interactive console Twisted programs using stdio and then another with 
> curses/readline perhaps?

FY(and the list's)I, doc/examples/cursesclient.py has an example IRC
client with a curses UI.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Mon Feb 17 20:46:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 12:46:22 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218011441.GA1527@radii>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218011441.GA1527@radii>
Message-ID: <20030218014622.GC30508@frobozz.local>

On Mon, Feb 17, 2003 at 08:14:41PM -0500, Christopher Armstrong wrote:
> On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> > I think that maybe there should be a tutorial on how to make 
> > interactive console Twisted programs using stdio and then another with 
> > curses/readline perhaps?
> 
> FY(and the list's)I, doc/examples/cursesclient.py has an example IRC
> client with a curses UI.

Perhaps this thread should be turned into a FAQ?

-Andrew.




From screwtape at froup.com  Mon Feb 17 20:28:21 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 18 Feb 2003 12:28:21 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
Message-ID: <20030218012820.GA15759@ferd2.thristian.org>

On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> I think that maybe there should be a tutorial on how to make 
> interactive console Twisted programs using stdio and then another with 
> curses/readline perhaps?

A reactor that integrated with the cmd.Cmd() event loop would be
wonderful. :)

(for those who haven't caught up with this nifty part of the Python
standard library, have a look at:

	http://www.python.org/doc/current/lib/Cmd-objects.html

for some detailed information.)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "This plane is not equipped with vertices" -- Gold Inlaid Muffet
|



From andrew-twisted at puzzling.org  Mon Feb 17 21:24:10 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 13:24:10 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218012820.GA15759@ferd2.thristian.org>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218012820.GA15759@ferd2.thristian.org>
Message-ID: <20030218022410.GE30508@frobozz.local>

On Tue, Feb 18, 2003 at 12:28:21PM +1100, screwtape at froup.com wrote:
> On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> > I think that maybe there should be a tutorial on how to make 
> > interactive console Twisted programs using stdio and then another with 
> > curses/readline perhaps?
> 
> A reactor that integrated with the cmd.Cmd() event loop would be
> wonderful. :)
> 
> (for those who haven't caught up with this nifty part of the Python
> standard library, have a look at:
> 
> 	http://www.python.org/doc/current/lib/Cmd-objects.html
> 
> for some detailed information.)

Or just add a telnet server (is "telnet manhole" a better term?)... :)

-Andrew.




From kwaker at uch.net  Mon Feb 17 21:13:37 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 18 Feb 2003 04:13:37 +0200
Subject: [Twisted-Python] Using IConnector descendant
In-Reply-To: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
Message-ID: <109942648.20030218041337@uch.net>

Currently I have working SOCKS5-client Protocol, Connector and
ClientFactory classes. Almost working.

The question is: when I certainly done and my self.state in protocol
is "done" and transport pipe is ready, how to switch from SOCKS
protocol to underlying one?

Assuming I am inside Protocol object.

    def socks_gotConnectReply (self, data):
        """ Called after server accepts or rejects CONNECT method.
        """
        if data[:2] == "\x05\x00":
            # IMHO no need to analyze other fields of reply, we are done
            #
            self.state = "done"

+++ what to put here to switch from SOCKS to another protocol? +++

            return # do something after we are connected


-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From andrew-twisted at puzzling.org  Mon Feb 17 21:42:00 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 13:42:00 +1100
Subject: [Twisted-Python] Using IConnector descendant
In-Reply-To: <109942648.20030218041337@uch.net>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu> <109942648.20030218041337@uch.net>
Message-ID: <20030218024200.GF30508@frobozz.local>

On Tue, Feb 18, 2003 at 04:13:37AM +0200, Dmitry Litovchenko wrote:
> Currently I have working SOCKS5-client Protocol, Connector and
> ClientFactory classes. Almost working.
> 
> The question is: when I certainly done and my self.state in protocol
> is "done" and transport pipe is ready, how to switch from SOCKS
> protocol to underlying one?
> 
> Assuming I am inside Protocol object.
> 
>     def socks_gotConnectReply (self, data):
>         """ Called after server accepts or rejects CONNECT method.
>         """
>         if data[:2] == "\x05\x00":
>             # IMHO no need to analyze other fields of reply, we are done
>             #
>             self.state = "done"
> 
> +++ what to put here to switch from SOCKS to another protocol? +++

Probably something like:
    self.__class__ = self.otherProtocol
    self.connectionMade()

I don't know anything about SOCKS, but I've used this trick successfully
before, where I had to handshake with one protocol, then switch another
protocol for the rest of the connection.

-Andrew.




From anthony at interlink.com.au  Mon Feb 17 21:34:23 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 18 Feb 2003 13:34:23 +1100
Subject: [Twisted-Python] integrating twisted into an existing application
Message-ID: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>

I have a large complex application that I'd like to start migrating
to twisted, and I'd appreciate feedback on how to implement this.

It's a large (around 17KLOC) voicemail server that works with a cisco
AS5x00 to provide unified messaging. It talks RADIUS, RTSP and RTP to
the cisco, IMAP and SMTP to the message stores, and has a telnet 
interface for administration and debugging. The current implementation
has a separate thread for each of the RTSP, RADIUS and telnet listeners,
and spawns a thread for each incoming request. 

Internally it has a cache of IMAP connections - when a RADIUS request
or an RTSP request comes in, it grabs the cached IMAP connection for
the user and does the request.

A typical request looks like:

cisco sends a number of RADIUS requests to the server - login, selectFolder,
nextMessage, and gets back RADIUS responses with various attribute-value
pairs indicating things like 'number of unread messages' or 'message-type'
or the like. It then sends in an RTSP request to start the message playback -
the server pulls down the data from the message store, decodes it if 
necessary, sends it to a text-to-speech server if necessary, then spawns 
a small C program to handle the actual RTP playback to the cisco.

There's a bunch of thorny issues that have to be handled - obviously 
you have a number of operations that can block when talking to the IMAP
server, there's the shared imap connection cache, it's all rather ugly.

Initially I was thinking I'd replace the telnet listener with a 
twisted reactor running in it's own thread - this can then do the
telnet server (and maybe ssh server). Moving the RADIUS or RTSP 
listeners to twisted means I'd need to find a way to do the IMAP
and SMTP (for message sending) in an async manner - I'm not sure
on the best way to do this. My initial thought would be to have a
pool of IMAP handler threads; when a RADIUS request comes in that
needs IMAP, it grabs an IMAP thread that's free (or creates a new
one) and gets it to do the operation (and signal back when it's 
done). Is this sort of thing a typical way to handle a stateful
protocol like IMAP? 


--
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.




From kwaker at uch.net  Mon Feb 17 21:36:53 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 18 Feb 2003 04:36:53 +0200
Subject: [Twisted-Python] Using IConnector descendant
In-Reply-To: <20030218024200.GF30508@frobozz.local>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
 <109942648.20030218041337@uch.net> <20030218024200.GF30508@frobozz.local>
Message-ID: <462338749.20030218043653@uch.net>

Hello Andrew,

Tuesday, February 18, 2003, 4:42:00 AM, you wrote:

>> Assuming I am inside Protocol object.
>> 
>>     def socks_gotConnectReply (self, data):
>>         """ Called after server accepts or rejects CONNECT method.
>>         """
>>         if data[:2] == "\x05\x00":
>>             # IMHO no need to analyze other fields of reply, we are done
>>             #
>>             self.state = "done"
>> 
>> +++ what to put here to switch from SOCKS to another protocol? +++

AB> Probably something like:
AB>     self.__class__ = self.otherProtocol
AB>     self.connectionMade()

AB> I don't know anything about SOCKS, but I've used this trick successfully
AB> before, where I had to handshake with one protocol, then switch another
AB> protocol for the rest of the connection.

Cool, this may work, certainly. Thanks a lot.

Is this example repeats the original way, that IConnector inventor
thought everyone will use, or there are other variants?

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From screwtape at froup.com  Mon Feb 17 22:37:40 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 18 Feb 2003 14:37:40 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218022410.GE30508@frobozz.local>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218012820.GA15759@ferd2.thristian.org> <20030218022410.GE30508@frobozz.local>
Message-ID: <20030218033740.GB15759@ferd2.thristian.org>

On Tue, Feb 18, 2003 at 01:24:10PM +1100, Andrew Bennetts wrote:
> On Tue, Feb 18, 2003 at 12:28:21PM +1100, screwtape at froup.com wrote:
> > On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> > > I think that maybe there should be a tutorial on how to make 
> > > interactive console Twisted programs using stdio and then another with 
> > > curses/readline perhaps?
> > 
> > A reactor that integrated with the cmd.Cmd() event loop would be
> > wonderful. :)
> > 
> > (for those who haven't caught up with this nifty part of the Python
> > standard library, have a look at:
> > 
> > 	http://www.python.org/doc/current/lib/Cmd-objects.html
> > 
> > for some detailed information.)
> 
> Or just add a telnet server (is "telnet manhole" a better term?)... :)

Advantages of the telnet manhole:
- A Python prompt, so you can manipulate all the objects you have
  available as much as you'd like.

Disadvantages of the telnet manhole:
- No history.
- No completion.
- No help.
- You have to telnet to a particular port to access it (you can only
  run one instance per host, and it makes it difficult to use a
  user-interactive program.

That said, there's probably something nifty that can be done with
curses. I've never done any curses programming, though, and usually
if I'm just whipping together a script, an eval-print loop is all the
interface I need.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| I've found that very little humour can be squeezed into 64 chara
|



From andrew-twisted at puzzling.org  Mon Feb 17 23:31:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 15:31:12 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218033740.GB15759@ferd2.thristian.org>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218012820.GA15759@ferd2.thristian.org> <20030218022410.GE30508@frobozz.local> <20030218033740.GB15759@ferd2.thristian.org>
Message-ID: <20030218043112.GJ30508@frobozz.local>

On Tue, Feb 18, 2003 at 02:37:40PM +1100, screwtape at froup.com wrote:
> On Tue, Feb 18, 2003 at 01:24:10PM +1100, Andrew Bennetts wrote:
> > 
> > Or just add a telnet server (is "telnet manhole" a better term?)... :)
> 
> Advantages of the telnet manhole:
> - A Python prompt, so you can manipulate all the objects you have
>   available as much as you'd like.
> 
> Disadvantages of the telnet manhole:
> - No history.
> - No completion.
> - No help.

What do you mean by help?

> - You have to telnet to a particular port to access it (you can only
>   run one instance per host, and it makes it difficult to use a
>   user-interactive program.

There will be an ssh variant soon, I'm told.

And from glancing at the code, it wouldn't be hard for it to have a seperate
namespace for each connection, if you wanted that.

> That said, there's probably something nifty that can be done with
> curses. I've never done any curses programming, though, and usually
> if I'm just whipping together a script, an eval-print loop is all the
> interface I need.

Depends on what you need, I guess.  As with everything :)

-Andrew.




From bob at redivi.com  Mon Feb 17 23:36:54 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 17 Feb 2003 23:36:54 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218043112.GJ30508@frobozz.local>
Message-ID: <9B750D94-42FA-11D7-B93C-000A95686CD8@redivi.com>

On Monday, Feb 17, 2003, at 23:31 America/New_York, Andrew Bennetts 
wrote:

> On Tue, Feb 18, 2003 at 02:37:40PM +1100, screwtape at froup.com wrote:
>> On Tue, Feb 18, 2003 at 01:24:10PM +1100, Andrew Bennetts wrote:
>>>
>>> Or just add a telnet server (is "telnet manhole" a better term?)... 
>>> :)

There shouldn't be much, if anything, stopping you from creating a 
"stdio manhole" by using the console as the transport.. with or without 
curses!

-bob




From twisted at moshez.org  Tue Feb 18 02:14:23 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 07:14:23 -0000
Subject: [Twisted-Python] integrating twisted into an existing application
In-Reply-To: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
References: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
Message-ID: <20030218071423.10574.qmail@green.zadka.com>

On Tue, 18 Feb 2003, Anthony Baxter <anthony at interlink.com.au> wrote:

> There's a bunch of thorny issues that have to be handled - obviously 
> you have a number of operations that can block when talking to the IMAP
> server, there's the shared imap connection cache, it's all rather ugly.

In general, in Twisted caches should be handled by things like Services.
The simplest Service (which doesn't do caching, but hopefully should show
the way) which does something non-trivial is in twisted/runner/procmon.py

> Initially I was thinking I'd replace the telnet listener with a 
> twisted reactor running in it's own thread - this can then do the
> telnet server (and maybe ssh server). Moving the RADIUS or RTSP 
> listeners to twisted means I'd need to find a way to do the IMAP
> and SMTP (for message sending) in an async manner - I'm not sure
> on the best way to do this.

Well, SMTP is already supported by Twisted (see twisted/protocols/smtp.py).
IMAP isn't...but my inclination would be to drink the whole kool-aid and just
go with async connections instead of threads.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From twisted at moshez.org  Tue Feb 18 08:10:43 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 13:10:43 -0000
Subject: [Twisted-Python] twisted.web.server.Request.notifyFinish
Message-ID: <20030218131043.1358.qmail@green.zadka.com>

After asked how to know when the other side has terminated a web connection,
and noticing there wasn't a way I've added the above mentioned method.
It is documented in using-twistedweb.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From twisted at itamarst.org  Tue Feb 18 10:56:14 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Feb 2003 10:56:14 -0500
Subject: [Twisted-Python] integrating twisted into an existing application
In-Reply-To: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
References: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
Message-ID: <20030218105614.12d7ae52.twisted@itamarst.org>

On Tue, 18 Feb 2003 13:34:23 +1100
Anthony Baxter <anthony at interlink.com.au> wrote:

> Initially I was thinking I'd replace the telnet listener with a 
> twisted reactor running in it's own thread - this can then do the
> telnet server (and maybe ssh server). Moving the RADIUS or RTSP 
> listeners to twisted means I'd need to find a way to do the IMAP
> and SMTP (for message sending) in an async manner - I'm not sure
> on the best way to do this. My initial thought would be to have a
> pool of IMAP handler threads; when a RADIUS request comes in that
> needs IMAP, it grabs an IMAP thread that's free (or creates a new
> one) and gets it to do the operation (and signal back when it's 
> done). Is this sort of thing a typical way to handle a stateful
> protocol like IMAP? 

No, the typical way is to use an async protocol with Deferreds instead
of threads. Basically, anytime your blocking protocol would have a
command
"do something and block until we get result", you would instead of
blocking get a Deferred of the result. An example of this is in action
is the FTPClient protocol (twisted.protocols.ftp).

See http://twistedmatrix.com/documents/howto/defer

Downside is that you need to implement an IMAP client for Twisted. You
might be interested in looking at PyRAD too, btw, since it has
some sort of basic Twisted support in the latest version.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From fog at initd.org  Tue Feb 18 11:08:23 2003
From: fog at initd.org (Federico Di Gregorio)
Date: 18 Feb 2003 17:08:23 +0100
Subject: [Twisted-Python] quoting strings in db transactions
Message-ID: <1045584503.1898.48.camel@momo.initd.org>

hi *,

i'm going through the twisted.enterprise python code and i find almost
everywhere commens as:

        safe(text) 
        Make a string safe to include in an SQL statement

or 
        escape_string(self, text) 
        Escape a string for use in an SQL statement.
        
imho, this is plain wrong. twisted uses dbapi compliant adapters and
they *should* provide safe argument quoting (as per DBAPI-2.0.) it is
almost impossible to manage the quoting the right way for every db
adapter, but it is possible to call the driver the right way and let it
do the quoting.

or did i missed something?

also, how much mature is the enterprise code? it is a stable API or
there is space for contributions?

-- 
Federico Di Gregorio
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Mi piace schioccare la lingua fortemente.
                                        -- Maria Luisa Benedetta Panzani
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030218/631f4654/attachment.pgp 

From abe at fettig.net  Tue Feb 18 12:55:10 2003
From: abe at fettig.net (Abe Fettig)
Date: 18 Feb 2003 12:55:10 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
Message-ID: <1045590910.654.46.camel@mingus>

Hi all,

This weekend I started playing around with twisted.web, and I'm really
impressed.  This is great stuff.  I'd like to port the web interface for
Hep over to twisted.web (the current version uses twisted.protocols.http
only), but I'm having trouble figuring out the best way to accomplish
what I want.

So far I've set up a server that processes .epy files using
twisted.web.script.PythonScript.  This would be fine, except that it
doesn't seem to let me do asynchronous things - I can start a deferred,
and set the callback to request.write(something), but then it never gets
called.

twisted.web.widgets looked like the logical place to go next, but then  
http://twistedmatrix.com/documents/howto/widgets says that widgets are
depriciated in favor of Woven.  But Woven is kind of a lot to get my
head around at the moment, and it looks like I'd have to rewrite all my
code to use it.  Is that really the only solution?  If so, is there an
example of a woven page that runs a deferred function and then writes
some output when it gets a callback?

Also, I'm having trouble with twisted.web.static.Registry.  All I want
to is make a set of objects available to all the pages in my site. I
don't understand how a Registry object uses interfaces, or even why its
neccessary to use interfaces at all.  Is there a way to access objects
in the registry by name?  Some sample code would helpe me here, too.

Thanks!
-- 
Abe Fettig <abe at fettig.net>




From twisted at moshez.org  Tue Feb 18 13:11:55 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 18:11:55 -0000
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <1045590910.654.46.camel@mingus>
References: <1045590910.654.46.camel@mingus>
Message-ID: <20030218181155.11286.qmail@green.zadka.com>

On 18 Feb 2003, Abe Fettig <abe at fettig.net> wrote:

> So far I've set up a server that processes .epy files using
> twisted.web.script.PythonScript.

You don't want that. Use resource scripts.

> This would be fine, except that it
> doesn't seem to let me do asynchronous things - I can start a deferred,
> and set the callback to request.write(something), but then it never gets
> called.

PythonScripts bad. ResourceScripts good. In resource scripts, you
just return server.NOT_DONE_YET and everything is fine.
(See using-twistedweb.html)

> Also, I'm having trouble with twisted.web.static.Registry.  All I want
> to is make a set of objects available to all the pages in my site. I
> don't understand how a Registry object uses interfaces, or even why its
> neccessary to use interfaces at all.  Is there a way to access objects
> in the registry by name?  Some sample code would helpe me here, too.

Read the HOWTO mentioned above. It should answer all your questions.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From abe at fettig.net  Tue Feb 18 14:28:57 2003
From: abe at fettig.net (Abe Fettig)
Date: 18 Feb 2003 14:28:57 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <20030218181155.11286.qmail@green.zadka.com>
References: <1045590910.654.46.camel@mingus>
	 <20030218181155.11286.qmail@green.zadka.com>
Message-ID: <1045596536.648.59.camel@mingus>

On Tue, 2003-02-18 at 13:11, Moshe Zadka wrote:
> On 18 Feb 2003, Abe Fettig <abe at fettig.net> wrote:
> 
> > So far I've set up a server that processes .epy files using
> > twisted.web.script.PythonScript.
> 
> You don't want that. Use resource scripts.

Thanks for pointing me in the right direction.

> > Also, I'm having trouble with twisted.web.static.Registry.  All I want
> > to is make a set of objects available to all the pages in my site. I
> > don't understand how a Registry object uses interfaces, or even why its
> > neccessary to use interfaces at all.  Is there a way to access objects
> > in the registry by name?  Some sample code would helpe me here, too.
> 
> Read the HOWTO mentioned above. It should answer all your questions.

I had read that HOWTO, but I see now that there's an improved version on
the Twisted web site.  That's what I was looking for, thanks!

Abe

p.s. Any chance of an updated twisted-doc package being released in the
near future?  I do a lot of development offline so I usually refer to my
local copy of the documentation.
-- 
Abe Fettig <abe at fettig.net>




From kwaker at uch.net  Tue Feb 18 14:45:44 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 18 Feb 2003 21:45:44 +0200
Subject: [Twisted-Python] Using IConnector
Message-ID: <5230628315.20030218214544@uch.net>

I certainly need a brief sample of how to use reactor.connectWith and
how to set up Protocol so that it correctly switches to another
Protocol and initializes it.

Example with:

    self.__class__ = anotherProto.__class__
    self.connectionMade()

is good but not enough. Constructor must be called at least and
parameters should be passed to it.

If I solve this problem in my way this may be incompatible with the
whole Twisted ideology, which I currently don't know well. But I need
to know the right way because I intend to create SOCKS 4, 5 and HTTP
tunnel modules not for my use only but to contribute to Twisted.

Please advise, I don't want to produce working code that works for me
only while violating ten tons of Twisted conventions that are
undocumented and invisible for me.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From radix at twistedmatrix.com  Tue Feb 18 15:09:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 18 Feb 2003 15:09:21 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <1045596536.648.59.camel@mingus>
References: <1045590910.654.46.camel@mingus> <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus>
Message-ID: <20030218200921.GG1527@radii>

On Tue, Feb 18, 2003 at 02:28:57PM -0500, Abe Fettig wrote:
> p.s. Any chance of an updated twisted-doc package being released in the
> near future?  I do a lot of development offline so I usually refer to my
> local copy of the documentation.

I assume you mean Debian packages, since you said `twisted-doc'. If
not, get the latest Twisted tarball, which contains the documentation
(as opposed to Twisted_NoDocs). If so, use the up-to-date
twisted-debian repository. From the web site::

Debian

Debian users can add the following to their /etc/apt/sources.list:

    Woody: deb http://twisted.sourceforge.net/debian/woody/ ./
    Sid/Sarge: deb http://twisted.sourceforge.net/debian/ ./


The latest packages in that repository are always the latest alpha,
RC, or Release. Debian proper only gets updated every official release
(well, when we feel the release is good enough to go into Debian
proper, anyway).


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From 2002 at weholt.org  Tue Feb 18 15:11:03 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 18 Feb 2003 21:11:03 +0100
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
Message-ID: <003601c2d789$dd548370$0401a8c0@razor>

I need to authenticate users using basic HTTP authentication and the code below works on Mozilla, Opera, that awful KDE browser ;-) and whatever else I throw at it, EXCEPT MSIE. Most of my potential users are MS IE addicts so this is a key point in my project. The code below are ported from a previous project based on BaseHTTPServer. It might be that I didn't send a end_headers-header before sending the plain-text content. This was done in the BaseHTTPServer-solution, but I didn't find any such code in Twisted.

   def render(self, request):
        username = request.getUser()
        password = request.getPassword()
        if not username or not password:
            request.setResponseCode(401, 'Authentication needed')
            request.setHeader('Connection', 'close')
            request.setHeader('WWW-Authenticate', 'Basic realm="%s"' % 'default')
            request.setHeader('Content-Length', str(len('401: Authorization needed.')))
            request.setHeader('Content-Type', 'text/html')
            return '<h1>401 Authentication required</h1>%s' % msg
    # else process the request in a normal way


How can I use Twisted to authenticate users using basic HTTP authentication? Are there any example on how to use the cred-module in Twisted to authenticate users? 

Any information on this issue would be highly appreciated. Ideas on how to maintain user-information and implement security policies in Twisted, especially web-based Twisted-apps are also very interesting.

Best regards,
Thomas Weholt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030218/49f005bf/attachment.htm 

From radix at twistedmatrix.com  Tue Feb 18 15:20:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 18 Feb 2003 15:20:10 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <5230628315.20030218214544@uch.net>
References: <5230628315.20030218214544@uch.net>
Message-ID: <20030218202010.GH1527@radii>

On Tue, Feb 18, 2003 at 09:45:44PM +0200, Dmitry Litovchenko wrote:
> I certainly need a brief sample of how to use reactor.connectWith and
> how to set up Protocol so that it correctly switches to another
> Protocol and initializes it.
> 
> Example with:
> 
>     self.__class__ = anotherProto.__class__
>     self.connectionMade()

You're probably better off proxying through to the other
Protocol. Changing __class__ is horrible because the two classes may
have conflicting assumptions about the self namespace. I don't know
anything about connectWith, though.

I think there's some other code somewhere in Twisted where one
Protocol wraps another.. Anyone remember where?


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Tue Feb 18 15:24:39 2003
From: m at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 20:24:39 -0000
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <20030218200921.GG1527@radii>
References: <20030218200921.GG1527@radii>, <1045590910.654.46.camel@mingus> <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus>
Message-ID: <20030218202439.12222.qmail@green.zadka.com>

On Tue, 18 Feb 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> I assume you mean Debian packages, since you said `twisted-doc'. If
> not, get the latest Twisted tarball, which contains the documentation
> (as opposed to Twisted_NoDocs). If so, use the up-to-date
> twisted-debian repository. From the web site::
> 
> Debian
> 
> Debian users can add the following to their /etc/apt/sources.list:
> 
>     Woody: deb http://twisted.sourceforge.net/debian/woody/ ./
>     Sid/Sarge: deb http://twisted.sourceforge.net/debian/ ./

And if you need the auto-generated docs, twisted-doc-api
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From twisted at itamarst.org  Tue Feb 18 15:35:16 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Feb 2003 15:35:16 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <20030218202010.GH1527@radii>
References: <5230628315.20030218214544@uch.net>
	<20030218202010.GH1527@radii>
Message-ID: <20030218153516.015fbfaf.twisted@itamarst.org>

On Tue, 18 Feb 2003 15:20:10 -0500
Christopher Armstrong <radix at twistedmatrix.com> wrote:

> I think there's some other code somewhere in Twisted where one
> Protocol wraps another.. Anyone remember where?

twisted.protocols.policies does that, IIRC.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From jepler at unpythonic.net  Tue Feb 18 17:00:18 2003
From: jepler at unpythonic.net (Jeff Epler)
Date: Tue, 18 Feb 2003 16:00:18 -0600
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
In-Reply-To: <003601c2d789$dd548370$0401a8c0@razor>
References: <003601c2d789$dd548370$0401a8c0@razor>
Message-ID: <20030218220018.GD22051@unpythonic.net>

On Tue, Feb 18, 2003 at 09:11:03PM +0100, Thomas Weholt wrote:
>             request.setHeader('Content-Length', str(len('401: Authorization needed.')))
...
>             return '<h1>401 Authentication required</h1>%s' % msg

Your Content-Length and actual body are different.  This may be the
point at which all hell breaks loose.

Jeff



From golux at comcast.net  Tue Feb 18 17:43:35 2003
From: golux at comcast.net (Steve Waterbury)
Date: Tue, 18 Feb 2003 17:43:35 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <20030218202439.12222.qmail@green.zadka.com>
References: <20030218200921.GG1527@radii> <1045590910.654.46.camel@mingus>
 <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus>
 <20030218202439.12222.qmail@green.zadka.com>
Message-ID: <1045608216.6772.25.camel@golux>

On Tue, 2003-02-18 at 15:24, Moshe Zadka wrote:
> And if you need the auto-generated docs, twisted-doc-api

... and speaking of which, admin/generate-lore works 
(again) -- thanks, Moshe!  BTW, one teensy little nit 
on the generated pdf:  the date is still set to show
October 24, 2002 ... I know it should be later than that!

Cheers,
-- Steve.





From 2002 at weholt.org  Tue Feb 18 18:07:05 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 19 Feb 2003 00:07:05 +0100
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
References: <003601c2d789$dd548370$0401a8c0@razor> <20030218220018.GD22051@unpythonic.net>
Message-ID: <005701c2d7a2$74f56bf0$0401a8c0@razor>

Thanks for the tip.

Changed the code to use the same content for both the body and the
Content-Length-header. Still no go. Isn't there a special Twisted way of
doing this? My curreny solution is as I said earlier a dirty hack based on
code from BaseHTTPServer.

Anybody else has this kind of authentication going in their application who
can spare a few lines of code as an example ???

Thomas


----- Original Message -----
From: "Jeff Epler" <jepler at unpythonic.net>
To: <twisted-python at twistedmatrix.com>
Sent: Tuesday, February 18, 2003 11:00 PM
Subject: Re: [Twisted-Python] Basic HTTP Authentication in Twisted.web


> On Tue, Feb 18, 2003 at 09:11:03PM +0100, Thomas Weholt wrote:
> >             request.setHeader('Content-Length', str(len('401:
Authorization needed.')))
> ...
> >             return '<h1>401 Authentication required</h1>%s' % msg
>
> Your Content-Length and actual body are different.  This may be the
> point at which all hell breaks loose.
>
> Jeff
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From acapnotic at twistedmatrix.com  Tue Feb 18 18:19:41 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 18 Feb 2003 15:19:41 -0800
Subject: [Twisted-Python] Re: IRCClient
In-Reply-To: <Pine.SOL.4.44.0302181526510.12877-100000@rac2.wam.umd.edu>
References: <Pine.SOL.4.44.0302181526510.12877-100000@rac2.wam.umd.edu>
Message-ID: <1045610379.2997.55.camel@troglodyte.funhouse>

(I'm sending this to the Twisted list, please feel free to follow-up
there.)

On Tue, 2003-02-18 at 12:33, Konrad Rokicki wrote:
> I just started working with the IRCClient class (twisted.protocols.irc)
> and unless I'm mistaken, it is missing some features like a userQuit event
> and handling of NAMREPLY (for getting a list of users in a channel).
> I was wondering if this module is still being actively developed and if I
> should submit patches to do those sorts of things.

What would you have them do?  The protocol does not dictate any response
to these messages, and protocols.irc.IRCClient is intended to be an
implementation of just the IRC client protocol.  The class is designed
to be extensible so its users can subclass it and define their own
irc_QUIT and irc_RPL_NAMREPLY methods.  The decision of what to do when
you receive such a message is up to the application, I think.

Really, the interface involving NAMREPLY should look more like
"group.getMembers() returns a Deferred list of Persons," which doesn't
go in the wire-level twisted.protocols package.  Development of
high-level interfaces for chat clients is happening in twisted.im;
currently with support for IRC, twisted.words, and TOC (and OSCAR and
MSN any moment now, right guys?).  

That said, twisted.im is a pretty scary place right now: there are
things not covered by the interface, the implementation is a bit of a
mess, there's no test coverage, and it's rather unstable as I have to go
in there and mess around with things whenever I discover that what I was
trying to do with it just wasn't possible.  So, I'd understand if you
decide to stick with extending IRCClient instead, but twisted.im is
where we're really looking to develop an interface for chat clients
(both user-interactive and autonomous), and it could use a few more
user-developers (not to mention a loving maintainer) to help define its
needs.

Regards,

 - Kevin Turner,
   reluctant maintainer of twisted.protocols.irc

-- 
The moon is waning gibbous, 96.5% illuminated, 16.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030218/8a64972c/attachment.pgp 

From exarkun at intarweb.us  Tue Feb 18 18:47:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 18 Feb 2003 18:47:57 -0500
Subject: [Twisted-Python] Conch traceback
Message-ID: <20030218234757.GA14522@meson.dyndns.org>

  When starting multiple conch sessions, those started after the first give:

exarkun:~$ !conch
conch twistedmatrix.com
exarkun at twistedmatrix.com's password:
Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 197, in dataReceived
    self.service.packetReceived(ord(packet[0]), packet[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/service.py", line 51, in packetReceived
    f(packet)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/userauth.py", line 231, in ssh_USERAUTH_SUCCESS
    self.transport.setService(self.instance)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 227, in setService
    self.service.serviceStarted()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 620, in serviceStarted
    onConnect()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 206, in onConnect
    reactor.listenUNIX(filename, SSHUnixServerFactory()).numberAccepts = 1
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 223, in listenUNIX
    p.startListening()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/unix.py", line 70, in startListening
    raise CannotListenError, (None, self.port, le)
twisted.internet.error.CannotListenError: Couldn't listen on any:/home/exarkun/.conch-exarkun-twistedmatrix.com-22: (98, 'Address already in use')
Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
--- <exception caught here> ---
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 457, in doSelect
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 197, in dataReceived
    self.service.packetReceived(ord(packet[0]), packet[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/service.py", line 51, in packetReceived
    f(packet)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/userauth.py", line 231, in ssh_USERAUTH_SUCCESS
    self.transport.setService(self.instance)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 227, in setService
    self.service.serviceStarted()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 620, in serviceStarted
    onConnect()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 206, in onConnect
    reactor.listenUNIX(filename, SSHUnixServerFactory()).numberAccepts = 1
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 223, in listenUNIX
    p.startListening()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/unix.py", line 70, in startListening
    raise CannotListenError, (None, self.port, le)
twisted.internet.error.CannotListenError: Couldn't listen on any:/home/exarkun/.conch-exarkun-twistedmatrix.com-22: (98, 'Address already in use')
Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 127, in mainLoop
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 457, in doSelect
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 197, in dataReceived
    self.service.packetReceived(ord(packet[0]), packet[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/service.py", line 51, in packetReceived
    f(packet)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/userauth.py", line 231, in ssh_USERAUTH_SUCCESS
    self.transport.setService(self.instance)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 227, in setService
    self.service.serviceStarted()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 620, in serviceStarted
    onConnect()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 206, in onConnect
    reactor.listenUNIX(filename, SSHUnixServerFactory()).numberAccepts = 1
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 223, in listenUNIX
    p.startListening()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/unix.py", line 70, in startListening
    raise CannotListenError, (None, self.port, le)
twisted.internet.error.CannotListenError: Couldn't listen on any:/home/exarkun/.conch-exarkun-twistedmatrix.com-22: (98, 'Address already in use')

  Jp

-- 
http://catandgirl.com/view.cgi?44
-- 
 up 10 days, 4:28, 4 users, load average: 0.08, 0.07, 0.03
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030218/f2c67eed/attachment.pgp 

From andrew-twisted at puzzling.org  Tue Feb 18 19:29:07 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Feb 2003 11:29:07 +1100
Subject: [Twisted-Python] quoting strings in db transactions
In-Reply-To: <1045584503.1898.48.camel@momo.initd.org>
References: <1045584503.1898.48.camel@momo.initd.org>
Message-ID: <20030219002907.GA32233@frobozz.local>

On Tue, Feb 18, 2003 at 05:08:23PM +0100, Federico Di Gregorio wrote:
> hi *,
> 
> i'm going through the twisted.enterprise python code and i find almost
> everywhere commens as:
> 
>         safe(text) 
>         Make a string safe to include in an SQL statement
> 
> or 
>         escape_string(self, text) 
>         Escape a string for use in an SQL statement.
>         
> imho, this is plain wrong. twisted uses dbapi compliant adapters and
> they *should* provide safe argument quoting (as per DBAPI-2.0.) it is
> almost impossible to manage the quoting the right way for every db
> adapter, but it is possible to call the driver the right way and let it
> do the quoting.

They should provide it -- but they provide it differently, which
unfortunately DBAPI-2.0 allows.  See the docs for the 'paramstyle' module
attribute at:
    http://www.python.org/topics/database/DatabaseAPI-2.0.html

I don't see any sane way to provide safe automatic quoting in adbapi, but
I'd love to be proved wrong.

> also, how much mature is the enterprise code? it is a stable API or
> there is space for contributions?

The module and package docstrings don't have a "Stability: ..." line, so
the API is officially unstable.  Patches are welcome :)

-Andrew.




From skin_pup-twisted at damnable.happypoo.com  Tue Feb 18 20:13:14 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Tue, 18 Feb 2003 20:13:14 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
In-Reply-To: <20030205213639.74b3b797.twisted@itamarst.org>
References: <20030206011632.GP32425@shitbomb.com> <20030205213639.74b3b797.twisted@itamarst.org>
Message-ID: <20030219011314.GC65611@shitbomb.com>

> > Attached is the patch for TLS support within twisted.  It is not the
> > best code,  but it passes all the SSL test (None working on that next)
> > and works.  The diff also adds an echoclient_tls.py/echoserv_tls.py,
> > that work along with the echoclient_ssl.py/echoserv_tls.py
> 
> Neato! I don't have time to look at it right now, but it *will* be
> looked at sooner or later. If I don't check this in within a week bug me
> personally.

As requested I be buggin' you.  I have been keeping the patch update with CVS
twisted.  If you need that just say so.  I am bored again so will most
like try getting mail to support TLS and maybe the web server (no client
I know of uses it but still cool factor).  It also seams a perfect match
for pb and changing your perspective right/permissions based if TLS is
started, but I think that will take some learning first.  

Jeremy




From bob at mastersofbranding.com  Tue Feb 18 15:28:02 2003
From: bob at mastersofbranding.com (Bob Ippolito)
Date: Tue, 18 Feb 2003 15:28:02 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <5230628315.20030218214544@uch.net>
Message-ID: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>

On Tuesday, Feb 18, 2003, at 14:45 America/New_York, Dmitry Litovchenko 
wrote:

> I certainly need a brief sample of how to use reactor.connectWith and
> how to set up Protocol so that it correctly switches to another
> Protocol and initializes it.
>
> Example with:
>
>     self.__class__ = anotherProto.__class__
>     self.connectionMade()
>
> is good but not enough. Constructor must be called at least and
> parameters should be passed to it.
>
> If I solve this problem in my way this may be incompatible with the
> whole Twisted ideology, which I currently don't know well. But I need
> to know the right way because I intend to create SOCKS 4, 5 and HTTP
> tunnel modules not for my use only but to contribute to Twisted.
>
> Please advise, I don't want to produce working code that works for me
> only while violating ten tons of Twisted conventions that are
> undocumented and invisible for me.

Ok, well, I can't speak for this part of twisted.. but I *think* the 
proper way would be to make it a Transport, not a Protocol.   For 
example, if you were behind a stupid firewall and you wanted to make 
connections to another host outside of the firewall, you would have to 
refactor a lot less code if it could just be a transport.

Just an idea, again, I'm not an authority on this in any way.

-bob




From kwaker at uch.net  Tue Feb 18 21:06:11 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Wed, 19 Feb 2003 04:06:11 +0200
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
References: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
Message-ID: <2453458772.20030219040611@uch.net>

Hello Bob,

Tuesday, February 18, 2003, 10:28:02 PM, you wrote:

>> Please advise, I don't want to produce working code that works for me
>> only while violating ten tons of Twisted conventions that are
>> undocumented and invisible for me.

BI> Ok, well, I can't speak for this part of twisted.. but I *think* the 
BI> proper way would be to make it a Transport, not a Protocol.   For 
BI> example, if you were behind a stupid firewall and you wanted to make 
BI> connections to another host outside of the firewall, you would have to 
BI> refactor a lot less code if it could just be a transport.

BI> Just an idea, again, I'm not an authority on this in any way.

All right. But I currently have working example of SOCKS5 which sends
email (using standard SMTPSenderFactory and whatever protocol it
spawns) to my local SMTP server. All I provide is socks host and port
and plus SMTPSenderFactory filled with mail data. May this be called
"much refactoring" ?

Transport is not involved, only set of SOCKS5Connector, SOCKS5ClientFactory
and SOCKS5ClientProtocol.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From radix at twistedmatrix.com  Tue Feb 18 21:10:47 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 18 Feb 2003 21:10:47 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
References: <5230628315.20030218214544@uch.net> <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
Message-ID: <20030219021047.GA1168@radii>

On Tue, Feb 18, 2003 at 03:28:02PM -0500, Bob Ippolito wrote:
> Ok, well, I can't speak for this part of twisted.. but I *think* the 
> proper way would be to make it a Transport, not a Protocol.   For 
> example, if you were behind a stupid firewall and you wanted to make 
> connections to another host outside of the firewall, you would have to 
> refactor a lot less code if it could just be a transport.
> 
> Just an idea, again, I'm not an authority on this in any way.

I'm not sure why I didn't think of this earlier, but yes, it does
sound like a transport is the way to go -- it's exactly the kind of
thing that the transport/protocol separation was done for.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From kwaker at uch.net  Tue Feb 18 22:09:10 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Wed, 19 Feb 2003 05:09:10 +0200
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <20030219021047.GA1168@radii>
References: <5230628315.20030218214544@uch.net>
 <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
 <20030219021047.GA1168@radii>
Message-ID: <5557238876.20030219050910@uch.net>

Hello Christopher,

Wednesday, February 19, 2003, 4:10:47 AM, you wrote:

>> Ok, well, I can't speak for this part of twisted.. but I *think* the
>> proper way would be to make it a Transport, not a Protocol.   For 
>> example, if you were behind a stupid firewall and you wanted to make 
>> connections to another host outside of the firewall, you would have to 
>> refactor a lot less code if it could just be a transport.
>> 
>> Just an idea, again, I'm not an authority on this in any way.

CA> I'm not sure why I didn't think of this earlier, but yes, it does
CA> sound like a transport is the way to go -- it's exactly the kind of
CA> thing that the transport/protocol separation was done for.

Ok, I agree that transport sounds better, will refactor later today.
When should I attach new transport (instead of standard TCP) and how
client code, that connects to some host using SOCKS, will look like?

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From sean at twistedmatrix.com  Tue Feb 18 22:52:01 2003
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 18 Feb 2003 21:52:01 -0600
Subject: [Twisted-Python] quoting strings in db transactions
In-Reply-To: <1045584503.1898.48.camel@momo.initd.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGAEJMCJAA.sean@twistedmatrix.com>

Hello,

The twisted enterprise was in use for an on-line game development project at
Ninjaneering (http://www.ninjaneering.com) and I was the primary user, but
unfortunately, I am no longer at that company and future of the project may
be going in a different direction.

I'd say the twisted.enterprise code is relatively solid at what it does, but
its functionality is only really useful in a limited set of circumstances.
There have been some discussions about extending its functionality, but I no
longer have any time to devote to it. So, there is definitely room for
contributions :)

Regarding the particular issue of quoting strings, I was not aware of a
database independant way of safely quoting strings when that code was
written - is that actually part of the DBAPI?

Sean

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Federico Di
Gregorio
Sent: Tuesday, February 18, 2003 10:08 AM
To: Twisted Mailing List
Subject: [Twisted-Python] quoting strings in db transactions


hi *,

i'm going through the twisted.enterprise python code and i find almost
everywhere commens as:

        safe(text)
        Make a string safe to include in an SQL statement

or
        escape_string(self, text)
        Escape a string for use in an SQL statement.

imho, this is plain wrong. twisted uses dbapi compliant adapters and
they *should* provide safe argument quoting (as per DBAPI-2.0.) it is
almost impossible to manage the quoting the right way for every db
adapter, but it is possible to call the driver the right way and let it
do the quoting.

or did i missed something?

also, how much mature is the enterprise code? it is a stable API or
there is space for contributions?

--
Federico Di Gregorio
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Mi piace schioccare la lingua fortemente.
                                        -- Maria Luisa Benedetta Panzani




From exarkun at intarweb.us  Wed Feb 19 02:42:56 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 19 Feb 2003 02:42:56 -0500
Subject: [Twisted-Python] Another conch traceback
In-Reply-To: <20030218234757.GA14522@meson.dyndns.org>
References: <20030218234757.GA14522@meson.dyndns.org>
Message-ID: <20030219074256.GA24916@meson.dyndns.org>

  When multiple sessions are running over the same <whatever>, exiting the
"primary" session hangs indefinitely.  Exiting any other session generates
this traceback in the "primary" session:

Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 127, in mainLoop
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 457, in doSelect
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/spread/banana.py", line 187, in dataReceived
    gotItem(item)
  File "/home/exarkun/projects/python/Twisted/twisted/spread/banana.py", line 119, in gotItem
    self.callExpressionReceived(item)
  File "/home/exarkun/projects/python/Twisted/twisted/spread/banana.py", line 86, in callExpressionReceived
    self.expressionReceived(obj)
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 370, in expressionReceived
    func(lst[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 430, in server_sendEOF
    channel = self.getChannel(cn)
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 389, in getChannel
    channel = conn.channels[channelID]
KeyError: 1


  and the unix socket is left dangling.

  Jp

-- 
 up 10 days, 12:28, 5 users, load average: 0.00, 0.02, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030219/c783f3da/attachment.pgp 

From andrew-twisted at puzzling.org  Wed Feb 19 06:43:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Feb 2003 22:43:23 +1100
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <1045608216.6772.25.camel@golux>
References: <20030218200921.GG1527@radii> <1045590910.654.46.camel@mingus> <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus> <20030218202439.12222.qmail@green.zadka.com> <1045608216.6772.25.camel@golux>
Message-ID: <20030219114323.GA541@frobozz.local>

On Tue, Feb 18, 2003 at 05:43:35PM -0500, Steve Waterbury wrote:
> On Tue, 2003-02-18 at 15:24, Moshe Zadka wrote:
> > And if you need the auto-generated docs, twisted-doc-api
> 
> ... and speaking of which, admin/generate-lore works 
> (again) -- thanks, Moshe!  BTW, one teensy little nit 
> on the generated pdf:  the date is still set to show
> October 24, 2002 ... I know it should be later than that!

There is no admin/generate-lore command.  There used to be a
bin/generatelore, though.

I presume you mean admin/process-docs.  It works fine here; I get the
current date on the PDF, which is as expected, seeing as book.tex has never
had a \date command.  I suspect something is screwy at your end.

-Andrew.




From user143 at tsolver.com  Wed Feb 19 06:39:58 2003
From: user143 at tsolver.com (Allen Chan)
Date: Wed, 19 Feb 2003 06:39:58 -0500
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
In-Reply-To: <20030218181301.27948.89173.Mailman@pyramid.twistedmatrix.com>
Message-ID: <HMEFJOHGCKGPIHHGENIIOEBDCAAA.user143@tsolver.com>

The following test.rpy works for me in MSIE:

from twisted.protocols import http
from twisted.web import resource,error

class AuthResource(resource.Resource):
    def __init__(self):
        resource.Resource.__init__(self)

    def render(self, request):
        if not request.getUser() or not request.getPassword():
            request.setHeader('WWW-authenticate', 'Basic realm="%s"' %
("default"))
            errpage = error.ErrorPage(http.UNAUTHORIZED,"Unauthorized","401
Authentication required")
            return errpage.render(request)
        else:
            return "<html><head></head><body>Hello World</body></html>\n"

resource = AuthResource()


-----Original Message-----
>From: "Thomas Weholt" <2002 at weholt.org>
>To: <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Basic HTTP Authentication in Twisted.web
>Date: Wed, 19 Feb 2003 00:07:05 +0100
>Reply-To: twisted-python at twistedmatrix.com
>
>Thanks for the tip.
>
>Changed the code to use the same content for both the body and the
>Content-Length-header. Still no go. Isn't there a special Twisted way of
>doing this? My curreny solution is as I said earlier a dirty hack based on
>code from BaseHTTPServer.
>
>Anybody else has this kind of authentication going in their application who
>can spare a few lines of code as an example ???
>
>Thomas





From twisted at itamarst.org  Wed Feb 19 09:18:19 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 19 Feb 2003 09:18:19 -0500
Subject: [Twisted-Python] quoting strings in db transactions
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAEJMCJAA.sean@twistedmatrix.com>
References: <1045584503.1898.48.camel@momo.initd.org>
	<HOEEKPCOKELHCNIJNMAGAEJMCJAA.sean@twistedmatrix.com>
Message-ID: <20030219091819.529225d0.twisted@itamarst.org>

On Tue, 18 Feb 2003 21:52:01 -0600
"Sean Riley" <sean at twistedmatrix.com> wrote:

> I'd say the twisted.enterprise code is relatively solid at what it
> does, but its functionality is only really useful in a limited set of
> circumstances. There have been some discussions about extending its
> functionality, but I no longer have any time to devote to it. So,
> there is definitely room for contributions :)

I don't think adbapi is going to go away or change in significant ways,
though.



From twisted at itamarst.org  Wed Feb 19 10:30:11 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 19 Feb 2003 10:30:11 -0500
Subject: [Twisted-Python] Someone broke my precious code!
Message-ID: <20030219103011.723ee9e9.twisted@itamarst.org>

The latest patch to process.py broke process running on Windows. This is
bad.

Twisted should not be released until the tests are run with the
win32event reactor!

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From konrad at wam.umd.edu  Wed Feb 19 13:14:02 2003
From: konrad at wam.umd.edu (Konrad Rokicki)
Date: Wed, 19 Feb 2003 13:14:02 -0500 (EST)
Subject: [Twisted-Python] Re: IRCClient
In-Reply-To: <1045610379.2997.55.camel@troglodyte.funhouse>
Message-ID: <Pine.SOL.4.44.0302191302010.12767-100000@rac2.wam.umd.edu>

On 18 Feb 2003, Kevin Turner wrote:

> On Tue, 2003-02-18 at 12:33, Konrad Rokicki wrote:
> > I just started working with the IRCClient class (twisted.protocols.irc)
> > and unless I'm mistaken, it is missing some features like a userQuit event
> > and handling of NAMREPLY (for getting a list of users in a channel).
> > I was wondering if this module is still being actively developed and if I
> > should submit patches to do those sorts of things.
>
> What would you have them do?  The protocol does not dictate any response
> to these messages, and protocols.irc.IRCClient is intended to be an
> implementation of just the IRC client protocol.  The class is designed
> to be extensible so its users can subclass it and define their own
> irc_QUIT and irc_RPL_NAMREPLY methods.  The decision of what to do when
> you receive such a message is up to the application, I think.

I don't mean the client needs to respond to the messages. But why doesn't
it process a QUIT the same way it processes a JOIN or PART? The irc_QUIT
method could be implemented to parse the message and call userQuit.
The same goes for the NAMREPLY stuff except you'd also need a method
to request the names list. Sure, I could implement all this in my
subclass but wouldn't it be cleaner to hide all this protocol stuff inside
the protocol? That way my subclass would not need to know how to parse a
QUIT message.

-Konrad







From radix at twistedmatrix.com  Wed Feb 19 19:53:58 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 19 Feb 2003 19:53:58 -0500
Subject: [Twisted-Python] Re: IRCClient
In-Reply-To: <Pine.SOL.4.44.0302191302010.12767-100000@rac2.wam.umd.edu>
References: <1045610379.2997.55.camel@troglodyte.funhouse> <Pine.SOL.4.44.0302191302010.12767-100000@rac2.wam.umd.edu>
Message-ID: <20030220005358.GC1168@radii>

On Wed, Feb 19, 2003 at 01:14:02PM -0500, Konrad Rokicki wrote:
> On 18 Feb 2003, Kevin Turner wrote:
> > What would you have them do?  The protocol does not dictate any response
> > to these messages, and protocols.irc.IRCClient is intended to be an
> > implementation of just the IRC client protocol.  The class is designed
> > to be extensible so its users can subclass it and define their own
> > irc_QUIT and irc_RPL_NAMREPLY methods.  The decision of what to do when
> > you receive such a message is up to the application, I think.
> 
> I don't mean the client needs to respond to the messages. But why doesn't
> it process a QUIT the same way it processes a JOIN or PART? The irc_QUIT
> method could be implemented to parse the message and call userQuit.
> The same goes for the NAMREPLY stuff except you'd also need a method
> to request the names list. Sure, I could implement all this in my
> subclass but wouldn't it be cleaner to hide all this protocol stuff inside
> the protocol? That way my subclass would not need to know how to parse a
> QUIT message.

Kevin, Jp and I discussed this on IRC a little bit, and came to the
conclusion (well, they stopped arguing against me, anyway ...) that
there should be more IRC-specific abstractions developed. There was
some uneasiness about putting more of them in IRCClient,
though. Perhaps we should split off another class that has
higher-level stuff like NAMES handlers.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From twisted at moshez.org  Thu Feb 20 03:56:54 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 20 Feb 2003 08:56:54 -0000
Subject: [Twisted-Python] t.i.tcp bug -- a possible fix
Message-ID: <20030220085654.3290.qmail@green.zadka.com>

Index: twisted/internet/tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.108
diff -u -r1.108 tcp.py
--- twisted/internet/tcp.py     19 Feb 2003 07:18:29 -0000      1.108
+++ twisted/internet/tcp.py     20 Feb 2003 00:55:28 -0000
@@ -283,7 +283,8 @@
             skt = self.createInternetSocket()
         except socket.error, se:
             err = error.ConnectBindError(se[0], se[1])
-            whenDone = None
+            self.connector.connectionFailed(failure.Failure(err))
+            return
         if whenDone and bindAddress is not None:
             try:
                 skt.bind(bindAddress)

Without this patch, skt is unbound if the except was triggered. A few lines
later, "skt" is used, prompting an UnboundLocalVariable exception. This
might not be the correct patch, but it does appear to solve stuff...

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From iko at cd.chalmers.se  Thu Feb 20 09:11:24 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Thu, 20 Feb 2003 15:11:24 +0100
Subject: [Twisted-Python] SMTP client patch
Message-ID: <200302201411.h1KEBP700006@haddock.cd.chalmers.se>

Hi gang!

A while ago I posted a patch for the client part of t.p.smtp, but I
haven't heard any comments. Did it get lost, or is everyone just
busy with more interesting projects?

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From twisted at itamarst.org  Thu Feb 20 10:06:38 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Feb 2003 10:06:38 -0500
Subject: [Twisted-Python] Twisted is apparently in this month's "Intelligent Enterprise" magazine
Message-ID: <20030220100638.2c373e2d.twisted@itamarst.org>

http://www.intelligententerprise.com/030301/604e_business1_2.shtml


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From dietmar.gaffling at siemens.com  Thu Feb 20 11:35:13 2003
From: dietmar.gaffling at siemens.com (Gaffling Dietmar)
Date: Thu, 20 Feb 2003 17:35:13 +0100
Subject: [Twisted-Python] Unable to run mktap script under windows
Message-ID: <5BE5F1117AEDD5118BFC0000D11EA39C7C8746@blns205e.bln.icn.siemens.de>

I try to run the very beginners example Case Study "Twisted Quotes".

1. I make Direktory TwistedQuotes with quotetap.py, __init__.py, quoteproto.py, quoters.py and plugins.tml files as described

2. On Windows (NT) running in TwistedQuotes directory 

python C:\Python22\Lib\site-packages\twisted\scripts\mktap.py qotd

fails with 

Unknown command: qotd

Are there known problems, workarounds for windows environment?

Many thanks in advance

Dietmar




From twisted at itamarst.org  Thu Feb 20 12:17:36 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Feb 2003 12:17:36 -0500
Subject: [Twisted-Python] Unable to run mktap script under windows
In-Reply-To: <5BE5F1117AEDD5118BFC0000D11EA39C7C8746@blns205e.bln.icn.siemens.de>
References: <5BE5F1117AEDD5118BFC0000D11EA39C7C8746@blns205e.bln.icn.siemens.de>
Message-ID: <20030220121736.09fc1eaf.twisted@itamarst.org>

On Thu, 20 Feb 2003 17:35:13 +0100
Gaffling Dietmar <dietmar.gaffling at siemens.com> wrote:

> 2. On Windows (NT) running in TwistedQuotes directory 

You probably want to be in the directory that contains TwistedQuotes.

> python C:\Python22\Lib\site-packages\twisted\scripts\mktap.py qotd

"C:\python22\scripts\mktap.py" is less typing.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From mwh at python.net  Thu Feb 20 11:11:30 2003
From: mwh at python.net (Michael Hudson)
Date: Thu, 20 Feb 2003 16:11:30 +0000
Subject: [Twisted-Python] Re: Twisted is apparently in this month's "Intelligent Enterprise"
 magazine
References: <20030220100638.2c373e2d.twisted@itamarst.org>
Message-ID: <2m3cmjaq4t.fsf@starship.python.net>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:

> http://www.intelligententerprise.com/030301/604e_business1_2.shtml

And the author's Michael Hudson but not me.  Spooky.

Cheers,
M.

-- 
  : Giant screaming pieces of excrement, they are.
  I have a feeling that some of the people in here have a 
  MUCH more exciting time relieving themselves than I do.
                                       -- Mike Sphar & Dave Brown, asr




From chris at websys.com  Thu Feb 20 16:12:56 2003
From: chris at websys.com (Chris Skinner)
Date: Thu, 20 Feb 2003 16:12:56 -0500
Subject: [Twisted-Python] InstallSignalHandlers question
Message-ID: <115960-220032420211256578@websys.com>

Hi,
  I couldn't find any reference to methods/overrides I would need to
implement in my Application. to actually do some processing on
specific signals... is the flag in .run() just disabling some
previous call to signal assigning a default handler?

  Primarily I'm looking to implement an in-process re-initialize,
log-rotation and to catch the shutdown so I can terminate another
process before exiting.

  Thanks in advance for any assistance!

Chris Skinner
Websys, Inc.

"By will alone I put my mind in motion..."




From glyph at twistedmatrix.com  Thu Feb 20 17:14:31 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Feb 2003 16:14:31 -0600
Subject: [Twisted-Python] SMTP client patch
In-Reply-To: <200302201411.h1KEBP700006@haddock.cd.chalmers.se>
Message-ID: <AF8FD568-4520-11D7-B2AA-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Thursday, February 20, 2003, at 08:11 AM, Anders Hammarquist wrote:

> A while ago I posted a patch for the client part of t.p.smtp, but I
> haven't heard any comments. Did it get lost, or is everyone just
> busy with more interesting projects?

A little of both, I think :)

I had a look at this patch with Itamar today.  We like where you're 
going, but here are a few issues:

1. it's not backwards compatible.  DocmaServer uses its own sendEmail, 
which depends on the sentEmail callback's signature.

I personally would like to see Twisted's sendEmail deprecated and 
replaced with an admonishment to use the 'email' module ;), so it would 
be nice if you could re-implement sendEmail in terms of your  MIME-less 
'sendmail' function.

2. Those change to LineReceiver made no sense to us.  Care to explain?

3. What's up with the SMTP logger?  and logging every line in the 
client?  This is duplicated generic code, and should probably be 
refactored into someplace more appropriate, like twisted.python.log.

This is just from a cursory look-over; the main issue is #1.  Thanks 
for the patch!
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+VVNLvVGR4uSOE2wRAoadAJsHHDRBwyIzyRGkbuGHa3dhxx/29wCgqVXK
h96fPo8sJjzcNalxGWWtmNw=
=iDh6
-----END PGP SIGNATURE-----




From bob at redivi.com  Thu Feb 20 17:27:59 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 20 Feb 2003 17:27:59 -0500
Subject: [Twisted-Python] InstallSignalHandlers question
In-Reply-To: <115960-220032420211256578@websys.com>
Message-ID: <90CCFBED-4522-11D7-9123-000A95686CD8@redivi.com>

On Thursday, Feb 20, 2003, at 16:12 America/New_York, Chris Skinner 
wrote:

> Hi,
>   I couldn't find any reference to methods/overrides I would need to
> implement in my Application. to actually do some processing on
> specific signals... is the flag in .run() just disabling some
> previous call to signal assigning a default handler?
>
>   Primarily I'm looking to implement an in-process re-initialize,
> log-rotation and to catch the shutdown so I can terminate another
> process before exiting.
>
>   Thanks in advance for any assistance!
>
You want to look at app.ApplicationService.. I think we're missing 
examples for it though.

-bob





From twisted at itamarst.org  Thu Feb 20 17:47:58 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Feb 2003 17:47:58 -0500
Subject: [Twisted-Python] InstallSignalHandlers question
In-Reply-To: <115960-220032420211256578@websys.com>
References: <115960-220032420211256578@websys.com>
Message-ID: <20030220174758.3ab610d0.twisted@itamarst.org>

On Thu, 20 Feb 2003 16:12:56 -0500
"Chris Skinner" <chris at websys.com> wrote:

>   I couldn't find any reference to methods/overrides I would need to
> implement in my Application. to actually do some processing on
> specific signals... is the flag in .run() just disabling some
> previous call to signal assigning a default handler?

Just schedule a method to run on startup, and then in that method use
the signal module as you usually would.

>   Primarily I'm looking to implement an in-process re-initialize,
> log-rotation and to catch the shutdown so I can terminate another
> process before exiting.

1. Twisted already does log rotation on signals, if you use twistd.
twistd id your friend (and no, that does not require TAPs).

2. in process re-initialize is a good use case.

3. Use the reactor's scheduling system - it lets you schedule events to
be run on shutdown.

http://twistedmatrix.com/documents/TwistedDocs/current/api/public/twisted.internet.interfaces.IReactorCore.html#addSystemEventTrigger
is the method you want.

E.g. reactor.addSystemEventTrigger('after', 'startup', myFunction) runs
myFunction after startup.

Or, as Bob Ippolito said, make an ApplicationService, and it will have
its stopService and startService methods called wwhen the application
starts and shuts down.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From glyph at twistedmatrix.com  Thu Feb 20 18:09:42 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Feb 2003 17:09:42 -0600
Subject: [Twisted-Python] InstallSignalHandlers question
In-Reply-To: <115960-220032420211256578@websys.com>
Message-ID: <650BCFE8-4528-11D7-B2AA-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Thursday, February 20, 2003, at 03:12 PM, Chris Skinner wrote:

> Hi,
>   I couldn't find any reference to methods/overrides I would need to
> implement in my Application. to actually do some processing on
> specific signals... is the flag in .run() just disabling some
> previous call to signal assigning a default handler?

Mucking with signal handlers directly is almost certainly the wrong way 
to do this :)

>   Primarily I'm looking to implement an in-process re-initialize,
> log-rotation and to catch the shutdown so I can terminate another
> process before exiting.

In the shutdown case, it sounds like you want to either override 
twisted.internet.protocol.Factory.startFactory or 
twisted.internet.app.ApplicationService.startService ... this is not 
really about signal handling, after all, because you want to shut down 
when Twisted shuts down.

In the re-init &c &c case, you can probably just catch SIGUSR1 (or 
whatever you want to re-initialize on) directly, since Twisted doesn't 
trap that itself.  However you may want to propose some defined 
semantics for future versions of Twisted, in case we ever want to 
implement this as part of the framework :-).
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+VWA6vVGR4uSOE2wRAgQFAJ9epoNdz4VWY0nl3rJPNz1I7xxx6wCfUetJ
+ssKp+8Olo3evQgySm7RdjU=
=RXdC
-----END PGP SIGNATURE-----




From iko at cd.chalmers.se  Thu Feb 20 19:29:34 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Fri, 21 Feb 2003 01:29:34 +0100
Subject: [Twisted-Python] SMTP client patch 
In-Reply-To: Message from Glyph Lefkowitz <glyph@twistedmatrix.com> 
   of "Thu, 20 Feb 2003 16:14:31 CST." <AF8FD568-4520-11D7-B2AA-000393C9700E@twistedmatrix.com> 
References: <AF8FD568-4520-11D7-B2AA-000393C9700E@twistedmatrix.com> 
Message-ID: <200302210029.h1L0TZ511318@haddock.cd.chalmers.se>

In a message of Thu, 20 Feb 2003 16:14:31 CST, Glyph Lefkowitz writes:
>I had a look at this patch with Itamar today.  We like where you're 
>going, but here are a few issues:
>
>1. it's not backwards compatible.  DocmaServer uses its own sendEmail, 
>which depends on the sentEmail callback's signature.

Yes, I know. The changes were needed to be able to get complete
status for the message delivery. With the old code there was no
way to find out what happend to failed recipient addresses. I
suppose I could add logic to try and detect an old-style sentEmail.

>I personally would like to see Twisted's sendEmail deprecated and 
>replaced with an admonishment to use the 'email' module ;), so it would 
>be nice if you could re-implement sendEmail in terms of your  MIME-less 
>'sendmail' function.

As in using sendmail plus the email module? Sure, will do.

>2. Those change to LineReceiver made no sense to us.  Care to explain?

Somewhere in the docs I read that returning (as opposed to raising)
an exception will land you in Factory.clientConnectionFailed with
that exception (wrapped in a failure). However, LineReceiver didn't
propagate the returned exceptions up to Protocol, so it didn't work
without those changes. smtpConnectionFailed and smtpTransferFailed
uses this.

>3. What's up with the SMTP logger?  and logging every line in the 
>client?  This is duplicated generic code, and should probably be 
>refactored into someplace more appropriate, like twisted.python.log.

I agree that it may be useful elsewhere (though expect it's use
will be rather limited). The purpose keeping the log is for
generating bounce messages (i.e. as sendmail says:

... while talking to foo.bar.org.:
>>> RCPT To:<spam at foo.bar.org>
<<< 550 User unknown
>>> RCPT To:<eggs at foo.bar.org>
<<< 450 Insufficient disk space

). My first look at t.p.log suggested not using it, since it dealt
mostly with syslog()-like logging. I'll have another look to see
if it fits with those logging functions, else I'll just rename it
to something more generic and let it live in t.p.log.

/Anders





From radix at twistedmatrix.com  Thu Feb 20 22:48:03 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 20 Feb 2003 22:48:03 -0500
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030214220537.GM2557@radii>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030214220537.GM2557@radii>
Message-ID: <20030221034803.GA1238@radii>

On Fri, Feb 14, 2003 at 05:05:37PM -0500, Christopher Armstrong wrote:
> On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > 
> > Chris and I have been looking at hotels in the D.C. area with an eye
> > towards affordability and proximity to GWU: the best we've found so
> > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > around $30/night/person. 
> 
> 
> Ok, I just called and they only have rooms available starting at
> $119/night + tax. :-( There's some damned flowery crap going on in
> D.C. around then, which is apparently booking up the hotels.

Ok, I lied.

If you register through the web site:

http://www.netbooker.com/booker/AppLogic+booker.hotel.info.Start?brand=BW&pid=47096&iid=BW

as opposed to calling to register, you can get the cheaper rates. From
what I can tell, the reason for this is that Best Western and Key
Bridge are two different organizations that have two different sets of
prices, regardless that it's the same hotel. :P


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Thu Feb 20 23:37:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Feb 2003 22:37:08 -0600
Subject: [Twisted-Python] SMTP client patch 
In-Reply-To: <200302210029.h1L0TZ511318@haddock.cd.chalmers.se>
Message-ID: <231CF4B2-4556-11D7-B2AA-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Thursday, February 20, 2003, at 06:29 PM, Anders Hammarquist wrote:

> In a message of Thu, 20 Feb 2003 16:14:31 CST, Glyph Lefkowitz writes:
>> I had a look at this patch with Itamar today.  We like where you're
>> going, but here are a few issues:
>>
>> 1. it's not backwards compatible.  DocmaServer uses its own sendEmail,
>> which depends on the sentEmail callback's signature.
>
> Yes, I know. The changes were needed to be able to get complete
> status for the message delivery. With the old code there was no
> way to find out what happend to failed recipient addresses. I
> suppose I could add logic to try and detect an old-style sentEmail.

Hmm... if you do that (with inspect or somesuch) please make sure to 
spit out an ugly warning so that people will know to fix their code.  
We shouldn't be supporting that long-term.

>> I personally would like to see Twisted's sendEmail deprecated and
>> replaced with an admonishment to use the 'email' module ;), so it 
>> would
>> be nice if you could re-implement sendEmail in terms of your  
>> MIME-less
>> 'sendmail' function.
>
> As in using sendmail plus the email module? Sure, will do.

Actually I'd prefer the existing code not to be changed, but to spit 
out a warning, since the interface ought to be "just pass a Message", 
not "pass a bunch of crap that gets turned into a Message".  
Considering how easy it is to turn a Message object into a long string, 
I don't think a separate method is required for this...

As long as it's still maintained, though, the existing code should 
remain in place rather than dragging a new dependency in for use with 
2.1 (since 'email' is only in the stdlib since 2.2)

>> 2. Those change to LineReceiver made no sense to us.  Care to explain?
>
> Somewhere in the docs I read that returning (as opposed to raising)
> an exception will land you in Factory.clientConnectionFailed with
> that exception (wrapped in a failure). However, LineReceiver didn't
> propagate the returned exceptions up to Protocol, so it didn't work
> without those changes. smtpConnectionFailed and smtpTransferFailed
> uses this.

Hmm.  Well, in any event I guess this is a more useful return value in 
general, and doesn't break anything.

>> 3. What's up with the SMTP logger?  and logging every line in the
>> client?  This is duplicated generic code, and should probably be
>> refactored into someplace more appropriate, like twisted.python.log.
>
> I agree that it may be useful elsewhere (though expect it's use
> will be rather limited). The purpose keeping the log is for
> generating bounce messages (i.e. as sendmail says:

aah, this makes a little more sense.

> ). My first look at t.p.log suggested not using it, since it dealt
> mostly with syslog()-like logging.

You're right.  Given this use-case though, it sounds like you need 
little more beyond cStringIO...?

> I'll have another look to see if it fits with those logging functions, 
> else I'll just rename it to something more generic and let it live in 
> t.p.log.

t.p.log might not be the best place to put it, come to think of it, 
since your impression of 'something like syslog' is correct.  But 
somewhere in t.p in general.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+Vaz4vVGR4uSOE2wRAjGmAJ9ZWl6vptshdNeVcvd5NIeeob5gtACfSALt
h+xh9bV6ERYUDfGsatBqIrE=
=jzDr
-----END PGP SIGNATURE-----




From uwe at oss4u.com  Fri Feb 21 05:48:04 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 21 Feb 2003 02:48:04 -0800
Subject: [Twisted-Python] wxPython and Twisted event loops
Message-ID: <200302210248.04290.uwe@oss4u.com>

Hi,

for those interested, I just posted a recipe on the  activestate.com python 
cookbook about how to get wxPython running with Twisted withoud having 
blocked menu's and modal dialogs.

It's a simple and dirty hack, but it's working on linux and win (basically all 
systems using the default select reactor)

enjoy

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From andrew-twisted at puzzling.org  Fri Feb 21 22:28:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 22 Feb 2003 14:28:39 +1100
Subject: [Twisted-Python] wxPython and Twisted event loops
In-Reply-To: <200302210248.04290.uwe@oss4u.com>
References: <200302210248.04290.uwe@oss4u.com>
Message-ID: <20030222032838.GB7817@frobozz.local>

On Fri, Feb 21, 2003 at 02:48:04AM -0800, Uwe C. Schroeder wrote:
> 
> Hi,
> 
> for those interested, I just posted a recipe on the  activestate.com python 
> cookbook about how to get wxPython running with Twisted withoud having 
> blocked menu's and modal dialogs.
> 
> It's a simple and dirty hack, but it's working on linux and win (basically all 
> systems using the default select reactor)

Is there any reason why you aren't using the twisted.internet.wxsupport
module?

-Andrew.




From garth at deadlybloodyserious.com  Fri Feb 21 22:31:50 2003
From: garth at deadlybloodyserious.com (Garth Kidd)
Date: Sat, 22 Feb 2003 14:31:50 +1100
Subject: [Twisted-Python] Unable to run mktap script under windows
In-Reply-To: <20030220121736.09fc1eaf.twisted@itamarst.org>
Message-ID: <000e01c2da22$f2793c50$0601010a@gkiddxp2>

> > python C:\Python22\Lib\site-packages\twisted\scripts\mktap.py qotd
> 
> "C:\python22\scripts\mktap.py" is less typing.

... and adding python22\scripts to PATH even less so. :) 

Regards,
Garth.




From uwe at oss4u.com  Sat Feb 22 02:18:17 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 21 Feb 2003 23:18:17 -0800
Subject: [Twisted-Python] wxPython and Twisted event loops
In-Reply-To: <20030222032838.GB7817@frobozz.local>
References: <200302210248.04290.uwe@oss4u.com> <20030222032838.GB7817@frobozz.local>
Message-ID: <200302212318.17632.uwe@oss4u.com>

On Friday 21 February 2003 07:28 pm, Andrew Bennetts wrote:
> On Fri, Feb 21, 2003 at 02:48:04AM -0800, Uwe C. Schroeder wrote:
> > Hi,
> >
> > for those interested, I just posted a recipe on the  activestate.com
> > python cookbook about how to get wxPython running with Twisted withoud
> > having blocked menu's and modal dialogs.
> >
> > It's a simple and dirty hack, but it's working on linux and win
> > (basically all systems using the default select reactor)
>
> Is there any reason why you aren't using the twisted.internet.wxsupport
> module?

Yes, it doesn't work. :-)
wxPython (as does wxWindows) uses private eventloops for menus and modal 
dialogs. This means whenever you open a modal dialog or a menu, the main 
eventloop will freeze and wait for the child eventloop (the one of the menu 
or modal dialog) to finish.
Since wxsupport only emulates the main eventloop it will be stuck until you 
close the dialog.

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From kwaker at uch.net  Sat Feb 22 20:37:44 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Sun, 23 Feb 2003 03:37:44 +0200
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
Message-ID: <16816305285.20030223033744@uch.net>

Hello twisted-python,

Give me any clues on how to operate Twisted's services using
TCPTransport (twisted.internet.Client) descendant? As someone
suggested I will redo my SOCKS internet.protocol.Protocol
impletentation in Transport descendant.

Please include personal copy to my email (below) it seems that I can't
receive any maillist posts during last 40 hours.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net




From cce at clarkevans.com  Sat Feb 22 22:57:15 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 03:57:15 +0000
Subject: [Twisted-Python] serving up a directory
Message-ID: <20030223035715.GA5738@doublegemini.com>

Twisted looks pretty neat... I'm exploring it
as we speak.  Is there a Resource which I can i
add to my resource tree to recursively return 
static content in a given directory?  It really
wasn't obvious how to do this... without using
the "tap" stuff.  What I'm kinda looking for...

root = Resource()
root.putChild("dynamic",MyDynamicRequest())
root.putChild("static",StaticRequest("/var/htdocs"))

Anything like this monster?  So I can do...

  webserver/static/something.gif

  and it returns /var/htdocs/something.gif

Thanks!

Clark



From cce at clarkevans.com  Sat Feb 22 23:57:38 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 04:57:38 +0000
Subject: [Twisted-Python] serving up a directory
In-Reply-To: <20030223035715.GA5738@doublegemini.com>
References: <20030223035715.GA5738@doublegemini.com>
Message-ID: <20030223045738.GA5936@doublegemini.com>

On Sun, Feb 23, 2003 at 03:57:15AM +0000, Clark C. Evans wrote:
| root = Resource()
| root.putChild("dynamic",MyDynamicRequest())
| root.putChild("static",StaticRequest("/var/htdocs"))

Err, I just needed...

   class StaticRequest(static.File): pass

Quite clean, and works exactly as I expected.  Kudos.
I wouldn't have asked the question if the comment of
this class didn't use "file" in the singular in the
docstring.  It could say:

    This request handler serves up a path, including
    the Directory and Files found recursively under it.

I'd also re-name the class "static.Path" as it really
isn't _just_ a file resource -- it serves up directories
too.

Thanks tons.

Clark

P.S.  Is there a clear example (not using taps) of having
both an SMTP and a HTTP server in one process?  Thanks!




From exarkun at intarweb.us  Sat Feb 22 23:49:42 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 22 Feb 2003 23:49:42 -0500
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <16816305285.20030223033744@uch.net>
References: <16816305285.20030223033744@uch.net>
Message-ID: <20030223044942.GA9428@meson.dyndns.org>

On Sun, Feb 23, 2003 at 03:37:44AM +0200, Dmitry Litovchenko wrote:
> Hello twisted-python,
> 
> Give me any clues on how to operate Twisted's services using
> TCPTransport (twisted.internet.Client) descendant? As someone
> suggested I will redo my SOCKS internet.protocol.Protocol
> impletentation in Transport descendant.
> 

  See sandbox/ipv6.py for an example of how to to use Twisted with
non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
the new connectWith/listenWith interface; maybe I should update it.

  Jp

-- 
   Know what I pray for? The strength to change what I can, the inability to
accept what I can't and the incapacity to tell the difference.    -- Calvin
-- 
 up 14 days, 8:29, 4 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030222/abd3e601/attachment.pgp 

From exarkun at intarweb.us  Sun Feb 23 00:08:33 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 23 Feb 2003 00:08:33 -0500
Subject: [Twisted-Python] serving up a directory
In-Reply-To: <20030223045738.GA5936@doublegemini.com>
References: <20030223035715.GA5738@doublegemini.com> <20030223045738.GA5936@doublegemini.com>
Message-ID: <20030223050833.GA9605@meson.dyndns.org>

On Sun, Feb 23, 2003 at 04:57:38AM +0000, Clark C. Evans wrote:
> On Sun, Feb 23, 2003 at 03:57:15AM +0000, Clark C. Evans wrote:
> | root = Resource()
> | root.putChild("dynamic",MyDynamicRequest())
> | root.putChild("static",StaticRequest("/var/htdocs"))
> 
> Err, I just needed...
> 
>    class StaticRequest(static.File): pass
> 
> Quite clean, and works exactly as I expected.  Kudos.
> I wouldn't have asked the question if the comment of
> this class didn't use "file" in the singular in the
> docstring.  It could say:
> 
>     This request handler serves up a path, including
>     the Directory and Files found recursively under it.
> 
> I'd also re-name the class "static.Path" as it really
> isn't _just_ a file resource -- it serves up directories
> too.
> 
> Thanks tons.
> 
> Clark
> 
> P.S.  Is there a clear example (not using taps) of having
> both an SMTP and a HTTP server in one process?  Thanks!
> 

  Taps are YAY!  But without one, it's really no more difficult than having
just an HTTP server:

    app = Application("whatever")
    ...
    app.listenTCP(port, siteInstance)
    app.listenTCP(anotherPot, smtpServerFactory)
    ...
    app.run(save=0)

  You can have practically as many listen or connect calls on the app object
as you like.  If you need more concrete examples of how to get
"smtpServerFactory", check out twisted.mail.tap.

  Jp

-- 
   Know what I pray for? The strength to change what I can, the inability to
accept what I can't and the incapacity to tell the difference.    -- Calvin
-- 
 up 14 days, 8:29, 4 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030223/a99331f9/attachment.pgp 

From cce at clarkevans.com  Sun Feb 23 00:49:00 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 05:49:00 +0000
Subject: [Twisted-Python] serving up a directory
In-Reply-To: <20030223050833.GA9605@meson.dyndns.org>
References: <20030223035715.GA5738@doublegemini.com> <20030223045738.GA5936@doublegemini.com> <20030223050833.GA9605@meson.dyndns.org>
Message-ID: <20030223054900.GA6188@doublegemini.com>

On Sun, Feb 23, 2003 at 12:08:33AM -0500, Jp Calderone wrote:
|     app = Application("whatever")
|     ...
|     app.listenTCP(port, siteInstance)
|     app.listenTCP(anotherPot, smtpServerFactory)
|     ...
|     app.run(save=0)

Thanks Jp

...

I think I found an unexpected behavior in putChild and 
the Redirect resource, here is my code snippet...


class Redirect(static.Redirect):
    def __init__(self, url):
        resource.Resource.__init__(self)
        self.url = url

def run():
    root = Resource()
    root.putChild("dynamic",MyDynamicResource())
    root.putChild("",Redirect("/static/"))
    root.putChild("static",static.File("/my/static/content"))
    site = server.Site(root)
    reactor.listenTCP(8081,site)
    reactor.run()


Anyway, first, I found the "Redirect" resource not to 
behave as expected... for some reason it wanted a request?!
for the argument of __init__ instead of a url. 

But second, and most importantly, I wanted to have my
static content served from the root (without the redirect); 
I initally tried:

    root.putChild("",static.File("/my/static/content"))

But unfortunately, this introduced two slashes after
the server, ie,  http://server//index.html which 
causes problems down the line.  Above was my current
work-aroud (using a redirect to a sub-folder).  However,
ideally, I'd like the above putChild to work as expected
and not to introduce the double slashes.   

I looked into the Rewrite resource for a while, but I 
couldn't find any examples and it wasn't obvious how
to use it (it's also getting late)

Regardless, this toolset is splendid; that I've gotten
this far (ported a rather complicated mod_python program
in less than 8 hours) is quite impressive indeed.  Now
the last bit... getting the database pooling to work!

Thank you so much,

;) Clark



From sam at twistedmatrix.com  Sun Feb 23 05:01:08 2003
From: sam at twistedmatrix.com (Sam Jordan)
Date: Sun, 23 Feb 2003 20:01:08 +1000 (EST)
Subject: [Twisted-Python] MSN Support
Message-ID: <Pine.LNX.4.44.0302231949200.9081-100000@localhost.localdomain>

Hi,

I've implemented protocol support for MSNP7 (MSN Messenger) (client only) 
using Twisted and I thought I'd post to the list to see if there was 
general interest in getting this added to Twisted.  The hope is that 
(eventually ;)) twisted.im will have msn support, this being the first 
step.

The module is at http://www.twistedmatrix.com/users/sam/msn/msn.py.txt
API docs at http://www.twistedmatrix.com/users/sam/msn/docs/
and a small number of tests at 
http://www.twistedmatrix.com/users/sam/msn/test_msn.py.txt

There's still plans for more stuff to be added, but it's in a useable 
state.  If I get the go ahead i'd be happy to commit it.

Any general feedback is appreciated.

Cheers,

Sam.




From kwaker at uch.net  Sun Feb 23 17:07:46 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 00:07:46 +0200
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <20030223044942.GA9428@meson.dyndns.org>
References: <16816305285.20030223033744@uch.net>
 <20030223044942.GA9428@meson.dyndns.org>
Message-ID: <7718712156.20030224000746@uch.net>

Hello Jp,

JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
JC> the new connectWith/listenWith interface; maybe I should update it.

Where "sandbox" is located? I didn't find any in neither in python's
site-packages/twisted, nor in examples. But please don't suggest me
using CVS :) Its a pain for someone who never used is longer that 5
minutes :)

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net




From uwe at oss4u.com  Sun Feb 23 17:28:30 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sun, 23 Feb 2003 14:28:30 -0800
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <7718712156.20030224000746@uch.net>
References: <16816305285.20030223033744@uch.net> <20030223044942.GA9428@meson.dyndns.org> <7718712156.20030224000746@uch.net>
Message-ID: <200302231428.30835.uwe@oss4u.com>

On Sunday 23 February 2003 02:07 pm, Dmitry Litovchenko wrote:
> Hello Jp,
>
> JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
> JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't
> use JC> the new connectWith/listenWith interface; maybe I should update it.
>
> Where "sandbox" is located? I didn't find any in neither in python's
> site-packages/twisted, nor in examples. But please don't suggest me
> using CVS :) Its a pain for someone who never used is longer that 5
> minutes :)

It's in the source distibution. i.e. for 1.0.3 in

Twisted-1.0.3/sandbox/



	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From cce at clarkevans.com  Sun Feb 23 18:21:28 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 23:21:28 +0000
Subject: [Twisted-Python] daemonization
Message-ID: <20030223232128.GA8340@doublegemini.com>

Hello.  I've got my application working nicely (well, the linkage
to postgresql still needs work) and it looks sort of like:

if __name__ == '__main__':
    root = Resource()
    root.putChild("dynamic",MyDynamicResource())
    root.putChild("",Redirect("/static/"))
    root.putChild("static",static.File("/path/to/me/webpages"))
    site = server.Site(root)
    appl = Application("whatever")
    appl.listenTCP(8081,site)
    appl.run()

What I'd like to do now is have this act like a deamon where
I run a command like:

  server start     # starts server, and then returns
  server stop      # stops server
  server reload    # reloads server

also including functionality of logging to a given file
and rotating the logs as necessary.  Anyway, I'm sure there 
is shell script magic to do this or I could copy the deamon 
example in the ASPN Cookbook...
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66012

But, I was wondering if there was a simple thing I could inherit
from which would do such a thing automagically.

Clark

P.S. Yes, I suppose this is what that "taps" thing is all
about... however, it doesn't seem to do the deamon 
management well (it doesn't do stop/start/reload, right?)



From andrew-twisted at puzzling.org  Sun Feb 23 19:20:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 11:20:06 +1100
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <7718712156.20030224000746@uch.net>
References: <16816305285.20030223033744@uch.net> <20030223044942.GA9428@meson.dyndns.org> <7718712156.20030224000746@uch.net>
Message-ID: <20030224002006.GB12287@frobozz.local>

On Mon, Feb 24, 2003 at 12:07:46AM +0200, Dmitry Litovchenko wrote:
> Hello Jp,
> 
> JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
> JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
> JC> the new connectWith/listenWith interface; maybe I should update it.
> 
> Where "sandbox" is located? I didn't find any in neither in python's
> site-packages/twisted, nor in examples. But please don't suggest me
> using CVS :) Its a pain for someone who never used is longer that 5
> minutes :)

If all you want to do is quickly get one file from CVS, use the website:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/?cvsroot=Twisted

-Andrew.




From kwaker at uch.net  Sun Feb 23 19:48:19 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 02:48:19 +0200
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <20030224002006.GB12287@frobozz.local>
References: <16816305285.20030223033744@uch.net>
 <20030223044942.GA9428@meson.dyndns.org> <7718712156.20030224000746@uch.net>
 <20030224002006.GB12287@frobozz.local>
Message-ID: <6628345078.20030224024819@uch.net>

Hello Andrew,

Monday, February 24, 2003, 2:20:06 AM, you wrote:

AB> On Mon, Feb 24, 2003 at 12:07:46AM +0200, Dmitry Litovchenko wrote:
>> Hello Jp,
>> 
>> JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
>> JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
>> JC> the new connectWith/listenWith interface; maybe I should update it.
>> 
>> Where "sandbox" is located? I didn't find any in neither in python's
>> site-packages/twisted, nor in examples. But please don't suggest me
>> using CVS :) Its a pain for someone who never used is longer that 5
>> minutes :)

AB> If all you want to do is quickly get one file from CVS, use the website:
AB>     http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/?cvsroot=Twisted

Ah.. Thanks...

Looked in the sandbox/ipv6... Hmmm, that's too easy :)

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net




From cce at clarkevans.com  Sun Feb 23 21:11:10 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Mon, 24 Feb 2003 02:11:10 +0000
Subject: [Twisted-Python] daemonization
In-Reply-To: <20030223232128.GA8340@doublegemini.com>
References: <20030223232128.GA8340@doublegemini.com>
Message-ID: <20030224021110.GA8692@doublegemini.com>

# daemonize.py
'''
    This module is used to fork the current process into a daemon.
    Almost none of this is necessary (or advisable) if your daemon 
    is being started by inetd. In that case, stdin, stdout and stderr are 
    all set up for you to refer to the network connection, and the fork()s 
    and session manipulation should not be done (to avoid confusing inetd). 
    Only the chdir() and umask() steps remain as useful.
    References:
        UNIX Programming FAQ
            1.7 How do I get my program to act like a daemon?
                http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16
        Advanced Programming in the Unix Environment
            W. Richard Stevens, 1992, Addison-Wesley, ISBN 0-201-56317-7.

    History:
      2001/07/10 by J?rgen Hermann
      2002/08/28 by Noah Spurrier
      2003/02/24 by Clark Evans
      
      http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66012
'''
import sys, os, time
from signal import SIGTERM

def deamonize(stdout='/dev/null', stderr=None, stdin='/dev/null',
              pidfile=None, startmsg = 'started with pid %s' ):
    '''
        This forks the current process into a daemon.
        The stdin, stdout, and stderr arguments are file names that
        will be opened and be used to replace the standard file descriptors
        in sys.stdin, sys.stdout, and sys.stderr.
        These arguments are optional and default to /dev/null.
        Note that stderr is opened unbuffered, so
        if it shares a file with stdout then interleaved output
        may not appear in the order that you expect.
    '''
    # Do first fork.
    try: 
        pid = os.fork() 
        if pid > 0: sys.exit(0) # Exit first parent.
    except OSError, e: 
        sys.stderr.write("fork #1 failed: (%d) %s\n" % (e.errno, e.strerror))
        sys.exit(1)
        
    # Decouple from parent environment.
    os.chdir("/") 
    os.umask(0) 
    os.setsid() 
    
    # Do second fork.
    try: 
        pid = os.fork() 
        if pid > 0: sys.exit(0) # Exit second parent.
    except OSError, e: 
        sys.stderr.write("fork #2 failed: (%d) %s\n" % (e.errno, e.strerror))
        sys.exit(1)
    
    # Open file descriptors and print start message
    if not stderr: stderr = stdout
    si = file(stdin, 'r')
    so = file(stdout, 'a+')
    se = file(stderr, 'a+', 0)
    pid = str(os.getpid())
    sys.stderr.write("\n%s\n" % startmsg % pid)
    sys.stderr.flush()
    if pidfile: file(pidfile,'w+').write("%s\n" % pid)
    
    # Redirect standard file descriptors.
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

def startstop(stdout='/dev/null', stderr=None, stdin='/dev/null',
              pidfile='pid.txt', startmsg = 'started with pid %s' ):
    if len(sys.argv) > 1:
        action = sys.argv[1]
        try:
            pf  = file(pidfile,'r')
            pid = int(pf.read().strip())
            pf.close()
        except IOError:
            pid = None
        if 'stop' == action or 'restart' == action:
            if not pid:
                mess = "Could not stop, pid file '%s' missing.\n"
                sys.stderr.write(mess % pidfile)
                sys.exit(1)
            try:
               while 1:
                   os.kill(pid,SIGTERM)
                   time.sleep(1)
            except OSError, err:
               err = str(err)
               if err.find("No such process") > 0:
                   os.remove(pidfile)
                   if 'stop' == action:
                       sys.exit(0)
                   action = 'start'
                   pid = None
               else:
                   print str(err)
                   sys.exit(1)
        if 'start' == action:
            if pid:
                mess = "Start aborded since pid file '%s' exists.\n"
                sys.stderr.write(mess % pidfile)
                sys.exit(1)
            deamonize(stdout,stderr,stdin,pidfile,startmsg)
            return
    print "usage: %s start|stop|restart" % sys.argv[0]
    sys.exit(2)

def test():
    '''
        This is an example main function run by the daemon.
        This prints a count and timestamp once per second.
    '''
    sys.stdout.write ('Message to stdout...')
    sys.stderr.write ('Message to stderr...')
    c = 0
    while 1:
        sys.stdout.write ('%d: %s\n' % (c, time.ctime(time.time())) )
        sys.stdout.flush()
        c = c + 1
        time.sleep(1)

if __name__ == "__main__":
    startstop(stdout='/tmp/deamonize.log',
              pidfile='/tmp/deamonize.pid')
    test()



From justin at gnubia.net  Sun Feb 23 18:52:37 2003
From: justin at gnubia.net (Justin Ryan)
Date: 23 Feb 2003 17:52:37 -0600
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
Message-ID: <1046044356.5933.16.camel@qutang.gnubian.org>

Hiya all,

I'm playing around with the basics of Twisted.Enterprise, and am having
some trouble.  I seem to have fixed it, but am unsure why the example in
the howto ( http://twistedmatrix.com/documents/howto/enterprise ) did
not work off the bat.  I'm using pyPgSQL to connect to postgres.  Here
goes:

The howto suggests:

<- snip ->

class AgeDatabase(adbapi.Augmentation):
     def getAge(self, name):
         sql = """SELECT Age FROM People WHERE name = ?"""
         return self.runQuery(sql, name)

<- snip ->

Unfortunately, I get a TypeError which is only fixed by changing this
to:

<- snip ->

class AgeDatabase(adbapi.Augmentation):
     def getAge(self, name):
         sql = """
             SELECT
                 "Age"
             FROM
                 "People"
             WHERE
                 "Name" = '%s'""" \
               % name
         return self.runQuery(sql)

<- snip ->

FWIW, postgres requires you to enclose mixed-case relations in
double-quotes (else it pretends they are all lowercase).  I did have to
make all of the modifications in this second version to the original
query (whilst still including the ?, instead of %s) in order for the
query to be valid.  I don't think that this would change anything, but I
suppose I could try it with all lowercase tables just for kicks..

Is this a problem with pyPgSQL? something else? pyPgSQL is the
_recommended_ module in the enterprise howto, so I didn't expect to run
into trouble with it..

Thanks in advance twisted.list! :)

-Justin




From nafai at twistedmatrix.com  Sun Feb 23 20:22:07 2003
From: nafai at twistedmatrix.com (Travis B. Hartwell)
Date: Sun, 23 Feb 2003 18:22:07 -0700
Subject: [Twisted-Python] ["Edmund Lian" <elian@inbrief.net>] [Webware-discuss] Comments
 about Twisted?
Message-ID: <877kbqpj5s.fsf@lutya.travishartwell.net>

An embedded message was scrubbed...
From: "Edmund Lian" <elian at inbrief.net>
Subject: [Webware-discuss] Comments about Twisted?
Date: Sun, 23 Feb 2003 20:04:05 -0500
Size: 3529
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030223/ef1ab58d/attachment.eml 

From andrew-twisted at puzzling.org  Sun Feb 23 21:44:21 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 13:44:21 +1100
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <1046044356.5933.16.camel@qutang.gnubian.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org>
Message-ID: <20030224024421.GF12287@frobozz.local>

On Sun, Feb 23, 2003 at 05:52:37PM -0600, Justin Ryan wrote:
> Hiya all,
> 
> I'm playing around with the basics of Twisted.Enterprise, and am having
> some trouble.  I seem to have fixed it, but am unsure why the example in
> the howto ( http://twistedmatrix.com/documents/howto/enterprise ) did
> not work off the bat.  I'm using pyPgSQL to connect to postgres.  Here
> goes:
> 
> The howto suggests:
> 
> <- snip ->
> 
> class AgeDatabase(adbapi.Augmentation):
>      def getAge(self, name):
>          sql = """SELECT Age FROM People WHERE name = ?"""
>          return self.runQuery(sql, name)
> 
> <- snip ->

The howto also says:
    Also worth noting is that this example assumes that dbmodule uses the
    qmarks paramstyle (see the DB-API specification).

This is the cause of the problem; pyPgSQL uses a different paramstyle.  

Maybe this should be made clearer, by inserting a 
        # Assumes dbmodule.paramstyle == 'qmarks'
into the example code, where people will read it.

> Is this a problem with pyPgSQL? something else? pyPgSQL is the
> _recommended_ module in the enterprise howto, so I didn't expect to run
> into trouble with it..

Yeah, that is a good point.  The howto should probably use examples that
work with pyPgSQL, to save confusion.

-Andrew.




From uwe at oss4u.com  Sun Feb 23 21:40:54 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sun, 23 Feb 2003 18:40:54 -0800
Subject: [Twisted-Python] ["Edmund Lian" <elian@inbrief.net>] [Webware-discuss] Comments about Twisted?
In-Reply-To: <877kbqpj5s.fsf@lutya.travishartwell.net>
References: <877kbqpj5s.fsf@lutya.travishartwell.net>
Message-ID: <200302231840.54647.uwe@oss4u.com>

On Sunday 23 February 2003 05:22 pm, Travis B. Hartwell wrote:
> I received the following mail today from the webware-discuss mailing
> list.  I can't seem to get to the online archives, so I forwarded it
> to the group.
>
> I don't feel like I yet know enough about Webware or parts of Twisted
> to answer this, but perhaps someone (glyph, fzZzy, or itamar?) could
> respond to this.

Well, the answer is relatively simple. Webware is, as the name already 
suggests - a web application server with some components. This means it is 
used in WEB applications. Twisted in contrary can be used for web 
applications, but I think a lot of people use it as the server side of a 
non-web application (like I do). Twisted incorporates way more protocols than 
webware does - actually does webware support anything else than http(s) ?
For example my app doesn't use the internet.web part of twisted at all. I just 
use the perspective broker for accessing remote objects - a capability I 
can't find in webware.
You probably might want to compare webware with Zope - I think those two are 
closer.

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From kwaker at uch.net  Sun Feb 23 21:51:48 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 04:51:48 +0200
Subject: [Twisted-Python] SOCKS via TCP Transport - Still in great doubt
Message-ID: <4635753631.20030224045148@uch.net>

Hello twisted-python,

I am still in great doubt regarding implementing SOCKS via TCP
transport. Though example in sandbox/ipv6.py is not using new
connectWith function, it declares Connector which is also used by
connectWith.

I have already this construction: Connector, Factory and proxying
Protocol which switches to another proto after SOCKS is connected and
it works but reports NOT about ALL errors, so I get more and more
hanging client satellite records with the flow of time.

These satellite records have to be deleted after connection calls back
about success or failure, but in case when error occured before
protocol is switched, I get no error/success report and lose one
satellite record every such error.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net




From justin at gnubia.net  Sun Feb 23 22:20:23 2003
From: justin at gnubia.net (Justin Ryan)
Date: 23 Feb 2003 21:20:23 -0600
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <20030224024421.GF12287@frobozz.local>
References: <1046044356.5933.16.camel@qutang.gnubian.org>
	 <20030224024421.GF12287@frobozz.local>
Message-ID: <1046056823.5928.27.camel@qutang.gnubian.org>

> The howto also says:
>     Also worth noting is that this example assumes that dbmodule uses the
>     qmarks paramstyle (see the DB-API specification).
> 
> This is the cause of the problem; pyPgSQL uses a different paramstyle.  
> 
> Maybe this should be made clearer, by inserting a 
>         # Assumes dbmodule.paramstyle == 'qmarks'
> into the example code, where people will read it.

Perhaps, However not being familiar with the qmarks paramstyle, I
noticed this bit but most likely skimmed over it because I didn't make
the connection..  Learn something new every day..

Is the qmarks paramstyle a required part of the DB API 2.0 spec?

> > Is this a problem with pyPgSQL? something else? pyPgSQL is the
> > _recommended_ module in the enterprise howto, so I didn't expect to run
> > into trouble with it..
> 
> Yeah, that is a good point.  The howto should probably use examples that
> work with pyPgSQL, to save confusion.
> 

or at least distinguish.  I assumed that the howto was using proper DB
API syntax, and that pyPgSQL is not 100% compliant, but it would be nice
to see the line drawn.  I don't know that I've worked with a fully DB
API compliant driver at this point ;p

Thanks for the clarification...

-Justin




From andrew-twisted at puzzling.org  Sun Feb 23 23:18:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 15:18:02 +1100
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <1046056823.5928.27.camel@qutang.gnubian.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org>
Message-ID: <20030224041802.GH12287@frobozz.local>

On Sun, Feb 23, 2003 at 09:20:23PM -0600, Justin Ryan wrote:
> 
> > The howto also says:
> >     Also worth noting is that this example assumes that dbmodule uses the
> >     qmarks paramstyle (see the DB-API specification).
> > 
> > This is the cause of the problem; pyPgSQL uses a different paramstyle.  
> > 
> > Maybe this should be made clearer, by inserting a 
> >         # Assumes dbmodule.paramstyle == 'qmarks'
> > into the example code, where people will read it.
> 
> Perhaps, However not being familiar with the qmarks paramstyle, I
> noticed this bit but most likely skimmed over it because I didn't make
> the connection..  Learn something new every day..
> 
> Is the qmarks paramstyle a required part of the DB API 2.0 spec?

No, it's even worse than that: DB API 2.0 doesn't specify which paramstyle
to use, it merely states that possible values are "qmark", "numeric",
"named", "format", and "pyformat".  So a DB API 2.0-compliant module is free
to implement any of these it feels like, so long as it sets the correct
paramstyle for it.  Thus they've defined a spec which allows 5 incompatible
flavours.  As far as I can see, the only portable way to write queries is to
format the queries yourself, which means handling correct quoting yourself.
Yuck.

> > > Is this a problem with pyPgSQL? something else? pyPgSQL is the
> > > _recommended_ module in the enterprise howto, so I didn't expect to run
> > > into trouble with it..
> > 
> > Yeah, that is a good point.  The howto should probably use examples that
> > work with pyPgSQL, to save confusion.
> > 
> 
> or at least distinguish.  I assumed that the howto was using proper DB
> API syntax, and that pyPgSQL is not 100% compliant, but it would be nice
> to see the line drawn.  I don't know that I've worked with a fully DB
> API compliant driver at this point ;p
> 
> Thanks for the clarification...

The howto is using proper DB API syntax.  The problem is that being DB API
2.0 compliant doesn't help here; qmarks format strings are compliant -- but
incompatible with pyformat format strings, which are also compliant.
Twisted has nothing to do with this mess, and lets you and your db module
sort it out between yourselves :)

-Andrew.




From sean at twistedmatrix.com  Mon Feb 24 00:06:18 2003
From: sean at twistedmatrix.com (Sean Riley)
Date: Sun, 23 Feb 2003 23:06:18 -0600
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <20030224041802.GH12287@frobozz.local>
Message-ID: <HOEEKPCOKELHCNIJNMAGOELLCJAA.sean@twistedmatrix.com>

yep, this really sucks. You cannot do parameterized SQL through pyPgSQL at
all. Inside the driver, pyPgSQL just does a string subsitution for the query
and submits the whole thing to the database.

When you pass parameters to a SQL operation with pyPgSQL is has absolutely
no effect on performance, so you might as well just build the entire SQL
statement youself and pass it in as a single string.

from PgSQL.py:

def execute(self, query, *parms):
	.
	_qstr = query
	.
	self.res = self.conn.conn.query(_qstr % parms)

Sean.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Andrew
Bennetts
Sent: Sunday, February 23, 2003 10:18 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] problems w/ pyPgSQL and the Enterprise
HOWTO


On Sun, Feb 23, 2003 at 09:20:23PM -0600, Justin Ryan wrote:
>
> > The howto also says:
> >     Also worth noting is that this example assumes that dbmodule uses
the
> >     qmarks paramstyle (see the DB-API specification).
> >
> > This is the cause of the problem; pyPgSQL uses a different paramstyle.
> >
> > Maybe this should be made clearer, by inserting a
> >         # Assumes dbmodule.paramstyle == 'qmarks'
> > into the example code, where people will read it.
>
> Perhaps, However not being familiar with the qmarks paramstyle, I
> noticed this bit but most likely skimmed over it because I didn't make
> the connection..  Learn something new every day..
>
> Is the qmarks paramstyle a required part of the DB API 2.0 spec?

No, it's even worse than that: DB API 2.0 doesn't specify which paramstyle
to use, it merely states that possible values are "qmark", "numeric",
"named", "format", and "pyformat".  So a DB API 2.0-compliant module is free
to implement any of these it feels like, so long as it sets the correct
paramstyle for it.  Thus they've defined a spec which allows 5 incompatible
flavours.  As far as I can see, the only portable way to write queries is to
format the queries yourself, which means handling correct quoting yourself.
Yuck.

> > > Is this a problem with pyPgSQL? something else? pyPgSQL is the
> > > _recommended_ module in the enterprise howto, so I didn't expect to
run
> > > into trouble with it..
> >
> > Yeah, that is a good point.  The howto should probably use examples that
> > work with pyPgSQL, to save confusion.
> >
>
> or at least distinguish.  I assumed that the howto was using proper DB
> API syntax, and that pyPgSQL is not 100% compliant, but it would be nice
> to see the line drawn.  I don't know that I've worked with a fully DB
> API compliant driver at this point ;p
>
> Thanks for the clarification...

The howto is using proper DB API syntax.  The problem is that being DB API
2.0 compliant doesn't help here; qmarks format strings are compliant -- but
incompatible with pyformat format strings, which are also compliant.
Twisted has nothing to do with this mess, and lets you and your db module
sort it out between yourselves :)

-Andrew.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From kwaker at uch.net  Mon Feb 24 01:46:27 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 08:46:27 +0200
Subject: [Twisted-Python] SOCKS5 Client if anyone cares
Message-ID: <12049833306.20030224084627@uch.net>

Hello twisted-python,

Sorry no unit tests at this time, I have prepared SOCKS5 unit test at
the very beginning but there were added several parameters so
Protocol constructors don't start correctly. I will fix this
eventually.

To code guardians: Please review this somehow, all notices about
violations of Twisted standards are welcome.

Unit is proven to work with anonymous connections, unit tests proven
that authenticated connections are also ok.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: socks5.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030224/0d69f1ae/attachment.txt 

From warner at lothar.com  Mon Feb 24 02:41:07 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 23 Feb 2003 23:41:07 -0800 (PST)
Subject: [Twisted-Python] serving up a directory
References: <20030223035715.GA5738@doublegemini.com>
 <20030223045738.GA5936@doublegemini.com>
Message-ID: <20030223.234107.88354541.warner@lothar.com>

"Clark C. Evans" <cce at clarkevans.com> writes:

> Quite clean, and works exactly as I expected.  Kudos.
> I wouldn't have asked the question if the comment of
> this class didn't use "file" in the singular in the
> docstring.  It could say:
> 
>     This request handler serves up a path, including
>     the Directory and Files found recursively under it.

Patched in CVS. Thanks for the tip!

 -Brian



From radix at twistedmatrix.com  Mon Feb 24 02:53:34 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 24 Feb 2003 02:53:34 -0500
Subject: [Twisted-Python] daemonization
In-Reply-To: <20030223232128.GA8340@doublegemini.com>
References: <20030223232128.GA8340@doublegemini.com>
Message-ID: <20030224075334.GA1092@radii>

On Sun, Feb 23, 2003 at 11:21:28PM +0000, Clark C. Evans wrote:
> What I'd like to do now is have this act like a deamon where
> I run a command like:

A simple wrapper around `twistd' could give you the `start', `stop',
and `reload' capabilities.

>   server start     # starts server, and then returns
>   server stop      # stops server
>   server reload    # reloads server
> 
> also including functionality of logging to a given file
> and rotating the logs as necessary.  Anyway, I'm sure there 

twistd does that.

> 
> P.S. Yes, I suppose this is what that "taps" thing is all
> about... however, it doesn't seem to do the deamon 
> management well (it doesn't do stop/start/reload, right?)

You can use twistd without taps. See `-y'.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Mon Feb 24 04:03:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 20:03:56 +1100
Subject: [Twisted-Python] daemonization
In-Reply-To: <20030224075334.GA1092@radii>
References: <20030223232128.GA8340@doublegemini.com> <20030224075334.GA1092@radii>
Message-ID: <20030224090356.GT12287@frobozz.local>

On Mon, Feb 24, 2003 at 02:53:34AM -0500, Christopher Armstrong wrote:
> On Sun, Feb 23, 2003 at 11:21:28PM +0000, Clark C. Evans wrote:
> > 
> > P.S. Yes, I suppose this is what that "taps" thing is all
> > about... however, it doesn't seem to do the deamon 
> > management well (it doesn't do stop/start/reload, right?)
> 
> You can use twistd without taps. See `-y'.

At the risk of resurrecting the TAP thread, it might be nice to document
this more clearly... I see "-y" as the path to a gentle introduction to
TAPs.

All you need to do to use twistd is define a module with a top-level
"application" variable (an instance of t.i.app.Application), and use "-y"...
from this point it's easy to see how to progress to constructing a TAP via
application.save, and then to writing an updateApplication function for use
with mktap.  I think one of my main problems with TAPs is they are explained
far too abstractly regarding exactly what they are and how they work.  A
description that works through the above phases may alleviate that.

-Andrew.




From exarkun at intarweb.us  Mon Feb 24 14:00:29 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 24 Feb 2003 14:00:29 -0500
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <20030224041802.GH12287@frobozz.local>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local>
Message-ID: <20030224190029.GA30155@meson.dyndns.org>

On Mon, Feb 24, 2003 at 03:18:02PM +1100, Andrew Bennetts wrote:
> On Sun, Feb 23, 2003 at 09:20:23PM -0600, Justin Ryan wrote:
> > 
> > > [snip]
> >
> > Is the qmarks paramstyle a required part of the DB API 2.0 spec?
> 
> No, it's even worse than that: DB API 2.0 doesn't specify which paramstyle
> to use, it merely states that possible values are "qmark", "numeric",
> "named", "format", and "pyformat".  So a DB API 2.0-compliant module is free
> to implement any of these it feels like, so long as it sets the correct
> paramstyle for it.  Thus they've defined a spec which allows 5 incompatible
> flavours.  As far as I can see, the only portable way to write queries is to
> format the queries yourself, which means handling correct quoting yourself.
> Yuck.
> 

  It occurs to me that this might be a useful place to apply localization,
gettext style. ;)  Now, if only there were an LC_SQL variable...

  Jp

-- 
"Pascal is Pascal is Pascal is dog meat."
                -- M. Devine and P. Larson, Computer Science 340
-- 
 up 15 days, 22:29, 4 users, load average: 0.03, 0.01, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030224/3ff56f05/attachment.pgp 

From justin at iago.org  Mon Feb 24 17:45:42 2003
From: justin at iago.org (justin at iago.org)
Date: Mon, 24 Feb 2003 17:45:42 -0500
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net>
	<002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii>
	<m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii>
Message-ID: <m2r89xuwkp.fsf@justin.local.>

Christopher Armstrong <radix at twistedmatrix.com> writes:

> On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
>> Christopher Armstrong <radix at twistedmatrix.com> writes:
>> 
>> > you want to use .rpys
>> 
>> A quick look through the documentation index doesn't show anything
>> that is obviously about .rpys.  How should the uninitiated be finding
>> out that they want to use them, if they don't even see a mention?
>
> Don't look so quickly.
>
> http://twistedmatrix.com/documents/howto/using-twistedweb
>
> There's an entire section about them there.

Thanks.  Now I know what they are.

However, that doesn't really answer the point I was making.

Starting from the roots of the documentation, I would not have
found that, as I am not using or intending to use the Twisted Web server.

If these are actually recommended for general use, then they should be
presented in a non-domain-specific section of the documentation.

It would also be good if they were presented in context showing their
purpose, capbilities and role, perhaps in comparison to TAPs.

-Justin

 





From radix at twistedmatrix.com  Mon Feb 24 21:32:58 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 24 Feb 2003 21:32:58 -0500
Subject: [Twisted-Python] session
In-Reply-To: <m2r89xuwkp.fsf@justin.local.>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii> <m2r89xuwkp.fsf@justin.local.>
Message-ID: <20030225022656.GB1092@radii>

On Mon, Feb 24, 2003 at 05:45:42PM -0500, justin at iago.org wrote:
> Christopher Armstrong <radix at twistedmatrix.com> writes:
> > On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
> >> A quick look through the documentation index doesn't show anything
> >> that is obviously about .rpys.  How should the uninitiated be finding
> >> out that they want to use them, if they don't even see a mention?
> >
> > Don't look so quickly.
> >
> > http://twistedmatrix.com/documents/howto/using-twistedweb
> >
> > There's an entire section about them there.
> 
> Thanks.  Now I know what they are.
> 
> However, that doesn't really answer the point I was making.
> 
> Starting from the roots of the documentation, I would not have
> found that, as I am not using or intending to use the Twisted Web server.
> 
> If these are actually recommended for general use, then they should be
> presented in a non-domain-specific section of the documentation.
> 
> It would also be good if they were presented in context showing their
> purpose, capbilities and role, perhaps in comparison to TAPs.

I'm not really sure what you mean... .rpys are specifically for
twisted.web. If you're not planning on using or developing stuff for
twisted.web, they're totally irrelevant for you. 

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From cce at clarkevans.com  Mon Feb 24 23:19:50 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 25 Feb 2003 04:19:50 +0000
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030224190029.GA30155@meson.dyndns.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local> <20030224190029.GA30155@meson.dyndns.org>
Message-ID: <20030225041950.GA13167@doublegemini.com>

I've been getting the following traceback in my log files... any ideas?
I'm using a separate thread for a long-running-query...

Traceback (most recent call last):
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py",
  line 121, in mainLoop

    File "/usr/local/lib/python2.2/site-packages/twisted/internet/base.py",
    line 343, in runUntilCurrent

      File
      "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
      line 162, in callback

        File
	"/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
	line 213, in _startRunCallbacks

	--- <exception caught here> ---
	  File
	  "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
	  line 227, in _runCallbacks

	    File "server.py", line 13, in bad
	        req.finish()
		  File
		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/http.py",
		  line 559, in finish

		  exceptions.AttributeError: Request instance has no
		  attribute 'channel'






From haering_python at gmx.de  Tue Feb 25 03:26:48 2003
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Tue, 25 Feb 2003 08:26:48 +0000 (UTC)
Subject: [Twisted-Python] Re: problems w/ pyPgSQL and the Enterprise HOWTO
References: <20030224041802.GH12287@frobozz.local> <HOEEKPCOKELHCNIJNMAGOELLCJAA.sean@twistedmatrix.com>
Message-ID: <slrnb5ma8b.138.gerhard.haering@haering.opus-gmbh.net>

Sean Riley <sean at twistedmatrix.com> wrote:
> [...] When you pass parameters to a SQL operation with pyPgSQL is has
> absolutely no effect on performance, so you might as well just build the
> entire SQL statement youself and pass it in as a single string.
> 
> from PgSQL.py:
> 
> def execute(self, query, *parms):
> 	.
> 	_qstr = query
> 	.
> 	self.res = self.conn.conn.query(_qstr % parms)

That's because PostgreSQL started supporting prepared statements only very
recently (in 7.3). I pondered adding support for them in pyPgSQL, but
unfortunately to do so, I need to know the *PostgreSQL* type of the
parameters in advance, which is not possible in the general case.

Nothing's stopping you from using PREPARE and EXECUTE directly from
pyPgSQL, though:

cursor.execute("""
    PREPARE my_query (int4, numeric) AS
        SELECT A, B, C FROM TABLENAME WHERE X=$1 AND Y=$2
        """)

then, later on call the prepared statement:

cursor.execute("EXECUTE my_query (%s, %s)", (4, 5))

-- Gerhard




From twisted at itamarst.org  Tue Feb 25 13:16:24 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 13:16:24 -0500
Subject: [Twisted-Python] SOCKS5 Client if anyone cares
In-Reply-To: <12049833306.20030224084627@uch.net>
References: <12049833306.20030224084627@uch.net>
Message-ID: <20030225131624.28f706cf.twisted@itamarst.org>

On Mon, 24 Feb 2003 08:46:27 +0200
Dmitry Litovchenko <kwaker at uch.net> wrote:

> Sorry no unit tests at this time, I have prepared SOCKS5 unit test at
> the very beginning but there were added several parameters so
> Protocol constructors don't start correctly. I will fix this
> eventually.

Basically ditch the regex, we have a command somewhere that does this,
don't remember wwhere (isIPAddress I think.) A quick visual scan of the
code seems ok - give us some tests and I'll check this in.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From twisted at itamarst.org  Tue Feb 25 13:20:06 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 13:20:06 -0500
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030225041950.GA13167@doublegemini.com>
References: <1046044356.5933.16.camel@qutang.gnubian.org>
	<20030224024421.GF12287@frobozz.local>
	<1046056823.5928.27.camel@qutang.gnubian.org>
	<20030224041802.GH12287@frobozz.local>
	<20030224190029.GA30155@meson.dyndns.org>
	<20030225041950.GA13167@doublegemini.com>
Message-ID: <20030225132006.5e218185.twisted@itamarst.org>

On Tue, 25 Feb 2003 04:19:50 +0000
"Clark C. Evans" <cce at clarkevans.com> wrote:

> I've been getting the following traceback in my log files... any
> ideas? I'm using a separate thread for a long-running-query...

> 	    File "server.py", line 13, in bad
> 	        req.finish()
> 		  File
> 		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/ht
> 		  tp.py", line 559, in finish
> 
> 		  exceptions.AttributeError: Request instance has no
> 		  attribute 'channel'

You are calling request.finish() twice. Maybe your render method didn't
return NOT_DONE_YET to indicate that it is not finishing immediately?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From cce at clarkevans.com  Tue Feb 25 13:38:26 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 25 Feb 2003 18:38:26 +0000
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030225041950.GA13167@doublegemini.com>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local> <20030224190029.GA30155@meson.dyndns.org> <20030225041950.GA13167@doublegemini.com>
Message-ID: <20030225183826.GA15598@doublegemini.com>

The following patch seems to have solved the "symptom" below, but
I wonder if I've just masked a problem.  Clark


--- http.py.orig	Tue Feb 25 13:15:01 2003
+++ http.py	Tue Feb 25 13:16:55 2003
@@ -556,8 +556,10 @@
             self.write('')
 
         # log request
-        if hasattr(self.channel, "factory"):
-            self.channel.factory.log(self)
+        chan = getattr(self,"channel")
+        if chan:
+            fact = getattr(chan,"factory")
+            if fact: fact.log(self)
 
         self.finished = 1
         if not self.queued:



On Tue, Feb 25, 2003 at 04:19:50AM +0000, Clark C. Evans wrote:
| I've been getting the following traceback in my log files... any ideas?
| I'm using a separate thread for a long-running-query...
| 
| Traceback (most recent call last):
|   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py",
|   line 121, in mainLoop
| 
|     File "/usr/local/lib/python2.2/site-packages/twisted/internet/base.py",
|     line 343, in runUntilCurrent
| 
|       File
|       "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
|       line 162, in callback
| 
|         File
| 	"/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	line 213, in _startRunCallbacks
| 
| 	--- <exception caught here> ---
| 	  File
| 	  "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	  line 227, in _runCallbacks
| 
| 	    File "server.py", line 13, in bad
| 	        req.finish()
| 		  File
| 		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/http.py",
| 		  line 559, in finish
| 
| 		  exceptions.AttributeError: Request instance has no
| 		  attribute 'channel'
| 
| 
| 
| 
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Tue Feb 25 13:22:30 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 13:22:30 -0500
Subject: [Twisted-Python] MSN Support
In-Reply-To: <Pine.LNX.4.44.0302231949200.9081-100000@localhost.localdomain>
References: <Pine.LNX.4.44.0302231949200.9081-100000@localhost.localdomain>
Message-ID: <20030225132230.2c6d068e.twisted@itamarst.org>

On Sun, 23 Feb 2003 20:01:08 +1000 (EST)
Sam Jordan <sam at twistedmatrix.com> wrote:

> I've implemented protocol support for MSNP7 (MSN Messenger) (client
> only) using Twisted and I thought I'd post to the list to see if there
> was general interest in getting this added to Twisted.  The hope is
> that (eventually ;)) twisted.im will have msn support, this being the
> first step.

> There's still plans for more stuff to be added, but it's in a useable 
> state.  If I get the go ahead i'd be happy to commit it.

Go ahead, check it in.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From cce at clarkevans.com  Tue Feb 25 14:20:31 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 25 Feb 2003 19:20:31 +0000
Subject: [Twisted-Python] problem with long-running threads]
Message-ID: <20030225192031.GA16189@doublegemini.com>

Oops... I forgot the ,None part to getattr. 

The following patch seems to have solved the "symptom" below, but
I wonder if I've just masked a problem.  Clark


--- http.py.orig	Tue Feb 25 13:15:01 2003
+++ http.py	Tue Feb 25 13:16:55 2003
@@ -556,8 +556,10 @@
             self.write('')
 
         # log request
-        if hasattr(self.channel, "factory"):
-            self.channel.factory.log(self)
+        chan = getattr(self,"channel",None)
+        if chan:
+            fact = getattr(chan,"factory",None)
+            if fact: fact.log(self)
 
         self.finished = 1
         if not self.queued:



On Tue, Feb 25, 2003 at 04:19:50AM +0000, Clark C. Evans wrote:
| I've been getting the following traceback in my log files... any ideas?
| I'm using a separate thread for a long-running-query...
| 
| Traceback (most recent call last):
|   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py",
|   line 121, in mainLoop
| 
|     File "/usr/local/lib/python2.2/site-packages/twisted/internet/base.py",
|     line 343, in runUntilCurrent
| 
|       File
|       "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
|       line 162, in callback
| 
|         File
| 	"/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	line 213, in _startRunCallbacks
| 
| 	--- <exception caught here> ---
| 	  File
| 	  "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	  line 227, in _runCallbacks
| 
| 	    File "server.py", line 13, in bad
| 	        req.finish()
| 		  File
| 		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/http.py",
| 		  line 559, in finish
| 
| 		  exceptions.AttributeError: Request instance has no
| 		  attribute 'channel'
| 
| 
| 
| 
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

----- End forwarded message -----



From twisted at itamarst.org  Tue Feb 25 14:14:53 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 14:14:53 -0500
Subject: [Twisted-Python] problem with long-running threads]
In-Reply-To: <20030225192031.GA16189@doublegemini.com>
References: <20030225192031.GA16189@doublegemini.com>
Message-ID: <20030225141453.50d4108a.twisted@itamarst.org>

On Tue, 25 Feb 2003 19:20:31 +0000
"Clark C. Evans" <cce at clarkevans.com> wrote:

> Oops... I forgot the ,None part to getattr. 
> 
> The following patch seems to have solved the "symptom" below, but
> I wonder if I've just masked a problem.  Clark

There's a lready a patch in CVS - but you have a bug in your code. See
my other comment.



From nbm at mithrandr.moria.org  Tue Feb 25 14:30:33 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Tue, 25 Feb 2003 21:30:33 +0200
Subject: [Twisted-Python] Beginning of jabber client protocol
Message-ID: <20030225193032.GB94769@mithrandr.moria.org>

Hi all,

Attached is some playing around I've done with twisted and jabber as a
client.  Not pretty, but just wanted to explore how microdom could be
used on the xml stream protocol jabber uses.

It can:
. connect
. receive messages
. send messages
. understand subscription requests
. understand rosters
. set online

That's about it, but I'm unlikely to have much time to spend on this for
some time, so I'm looking for comments on how to do it better for when I
do get time, and/or support for other functionality.

One thing I do know could be done better is callbacks for queries and
presence indicators.

Cheers,

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

#import sha
import sys
from twisted.internet import protocol, reactor
from twisted.python import log
from twisted.web import microdom

LOGIN = 1
AUTH_GET = 2
GETROSTER = 3

def jabberheader(host, namespace, id = None):
    str = "<?xml version='1.0' encoding='UTF-8' ?>   \
            <stream:stream to='%s' xmlns='%s'" % (host, namespace)

    if id: str = str + " id='%s' " % id
    str = str + " xmlns:stream='http://etherx.jabber.org/streams'>"
    return str

def jabberlogin(jid, method, password, resource, queryid):
    iq = microdom.Element("iq", { "type": "set", "id": queryid })
    query = microdom.Element("query", { "xmlns": "jabber:iq:auth" })
    username = ElementWithText("username", jid)
    password = ElementWithText(method, password)
    resource = ElementWithText("resource", resource)
    iq.appendChild(query)
    query.appendChild(username)
    query.appendChild(password)
    query.appendChild(resource)
    return iq

def jabbergetauthtypes(user, queryid):
    iq = microdom.Element("iq", { "type": "get", "id": queryid })
    query = microdom.Element("query", { "xmlns": "jabber:iq:auth" })
    username = ElementWithText("username", user)
    iq.appendChild(query)
    query.appendChild(username)
    return iq

def jabbergetroster(queryid):
    iq = microdom.Element("iq", { "type": "get", "id": queryid })
    query = microdom.Element("query", { "xmlns": "jabber:iq:roster" })
    iq.appendChild(query)
    return iq

def jabbersetonline():
    presence = microdom.Element("presence", { "type": "available" })
    show = ElementWithText("show", "online")
    status = ElementWithText("status", "online")
    priority = ElementWithText("priority", "5")
    presence.appendChild(show)
    presence.appendChild(status)
    presence.appendChild(priority)
    return presence

def jabbermessage(to, body):
    message = microdom.Element("message", { "to": to })
    body = ElementWithText("body", body)
    message.appendChild(body)
    return message

class ElementWithText(microdom.Element):
    def __init__(self, tagName, text, attributes=None, parentNode=None, filename=None, markpos=None):
        microdom.Element.__init__(self, tagName, attributes, parentNode, filename, markpos)
        self.text = microdom.Text(text)
        self.appendChild(self.text)

class Jabber(microdom.MicroDOMParser):
    def __init__(self):
        self.soonClosers = []
        self.laterClosers = {}
        microdom.MicroDOMParser.__init__(self, beExtremelyLenient = 1, caseInsensitive = 0)

    def connectionMade(self):
        self.queries = {}
        microdom.MicroDOMParser.connectionMade(self)
        self.factory.protocolobj = self
        self.transport.write(jabberheader(self.factory.host, "jabber:client"))

    def connectionLost(self, reason):
        microdom.MicroDOMParser.connectionLost(self, reason)
        self.factory.protocolobj = None

    def gotTagStart(self, name, attributes):
        microdom.MicroDOMParser.gotTagStart(self, name, attributes)
        if name == "stream:stream":
            el = self.elementstack.pop()
            self.jabberConnected(el)

    def gotTagEnd(self, name):
        microdom.MicroDOMParser.gotTagEnd(self, name)
        #print "Tag ended: %s" % (name)
        for document in self.documents:
            func = getattr(self, "jabber_%s" % document.tagName, self.jabberUnhandled)
            #print func
            func(document)
        self.documents = []

    def jabberUnhandled(self, document):
        print "Unhandled: \n  %s" % (document.toxml())

    def jabber_iq(self, document):
        queryid = document.attributes["id"]
        if document.attributes["type"] == "result":
            if not self.queries.has_key(queryid):
                # This shouldn't happen
                return
            if self.queries[queryid] == AUTH_GET:
                self.jabber_gotauthtypes(document)
                return
            if self.queries[queryid] == LOGIN:
                self.jabber_loginsuccessful(document)
                return

            if self.queries[queryid] == GETROSTER:
                self.jabber_gotroster(document)
                return

        if document.attributes["type"] == "error":
            if self.queries[queryid] == LOGIN:
                self.jabber_loginfailed(document)
                return

        self.jabberUnhandled(document)

    def jabber_gotroster(self, document):
        self.jabberGotRosterStart(document)
        for entry in document.childNodes[0].childNodes:
            jid = entry.attributes["jid"]
            ask = entry.attributes["ask"]
            subscription = entry.attributes["subscription"]
            if subscription == "none":
                subscription = None
            self.jabberGotRosterEntry(jid, ask, subscription, entry)
        self.jabberGotRosterEnd(document)


    def jabberGotRosterStart(self, document):
        print "Roster:"
        print "---------------------------"

    def jabberGotRosterEntry(self, jid, ask, subscription, document):
        print "User %s: " % (jid),
        if subscription:
            print "%s" % (subscription),
        if ask:
            print "%s-request" % (ask),
        print
        #print document.xml()

    def jabberGotRosterEnd(self, document):
        print "---------------------------"

    def jabber_message(self, document):
        # <message to="test at jabber.moria.org" from="nbm at jabber.moria.org/imcom"><body>hello</body></message>
        print "message"
        recipient = document.attributes["to"]
        sender = document.attributes["from"]
        body = document.childNodes[0].childNodes[0].nodeValue

        self.jabberGotMessage(sender, recipient, body, document)

    def jabberGotMessage(self, sender, recipient, body, document):
        print "Message from %s:" % (sender)
        print "\t%s" % (body)
        #self.jabberSendMessage(sender, "I got your message: %s" % (body))

    def jabberSendMessage(self, recipient, body):
        message = jabbermessage(recipient, body)
        self.transport.write(message.toxml())

    def jabber_presence(self, document):
        # <message to="test at jabber.moria.org" from="nbm at jabber.moria.org/imcom"><body>hello</body></message>
        if document.attributes["type"] == "subscribe":
            sender = document.attributes["from"]
            self.jabberSubscribeRequest(sender, document)
            return

        self.jabberUnhandled(document)

    def jabberSubscribeRequest(self, sender, document):
        print "Subscribe request from %s:" % (sender)

    def jabber_loginsuccessful(self, document):
        self.jabberLoggedIn(document)

        queryid = "getroster"
        roster = jabbergetroster(queryid)
        self.transport.write(roster.toxml())
        #print roster.toxml()
        self.queries[queryid] = GETROSTER
        
        presence = jabbersetonline()
        #print presence.toxml()
        self.transport.write(presence.toxml())

    def jabberLoggedIn(self, document):
        print "Logged in as %s on %s" % (self.factory.jid, self.factory.host)
        
    def jabber_loginfailed(self, document):
        error = document.childNodes[1]
        code = error.attributes["code"]
        reason = error.childNodes[0].nodeValue
        self.jabberFailedLogIn(error, code, reason, document)

    def jabberFailedLogIn(self, error, code, reason, document):
        print "Login failed (code %s), reason: %s" % (code, reason)

    def jabberConnected(self, element):
        self.logOn(element)

    def jabber_gotauthtypes(self, document):
        types = []
        for child in document.childNodes[0].childNodes:
            if child.tagName != "username":
                types.append(child.tagName)

        self.jabberGotAuthenticationTypes(types, document)

        #hd = sha.new(id+password).hexdigest()
        queryid = "auth"
        iq = jabberlogin(self.factory.jid, "password", self.factory.password, self.factory.resource, queryid)
        self.transport.write(iq.toxml())
        self.queries[queryid] = LOGIN

    def jabberGotAuthenticationTypes(self, types, document):
        print "Authentication types supported: ",
        print ", ".join(types)

    def logOn(self, element):
        queryid = "auth-get"
        iq = jabbergetauthtypes(self.factory.jid, queryid)
        self.queries[queryid] = AUTH_GET
        self.transport.write(iq.toxml())

    def everyTenSeconds(self):
        print self.documents
        for item in self.elementstack:
            print item
            #item.writexml(sys.stdout)

class JabberClientFactory(protocol.ClientFactory):
    protocol = Jabber

    def __init__(self, host, jid, password, resource = "tpjabber"):
        self.host = host
        self.jid = jid
        self.password = password
        self.resource = resource

    def everyTenSeconds(self):
        if self.protocolobj:
            self.protocolobj.everyTenSeconds()
        reactor.callLater(10, self.everyTenSeconds)

def main():
    host = "jabber.moria.org"
    log.startLogging(sys.stdout)
    factory = JabberClientFactory(host, "test", "test")
    reactor.connectTCP(host, 5222, factory)
    reactor.callLater(2, factory.everyTenSeconds)
    reactor.run()

if __name__ == "__main__":
    main()

From liiwi at lonesom.pp.fi  Tue Feb 25 06:57:35 2003
From: liiwi at lonesom.pp.fi (Jaakko Niemi)
Date: Tue, 25 Feb 2003 13:57:35 +0200
Subject: [Twisted-Python] oops
Message-ID: <87wujobmj4.fsf@jumper.lonesom.pp.fi>

Setting up python2.1-twisted (1.0.3-1) ...
/usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
'msg' as global in nested scope 'lambda'
  def _ebFailedLogin(self, reason):

/usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
'msg' as global in nested scope 'lambda'
  def _ebFailedLogin(self, reason):

               --j



From nbm at mithrandr.moria.org  Tue Feb 25 16:03:33 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Tue, 25 Feb 2003 23:03:33 +0200
Subject: [Twisted-Python] Beginning of jabber client protocol
In-Reply-To: <20030225193032.GB94769@mithrandr.moria.org>
References: <20030225193032.GB94769@mithrandr.moria.org>
Message-ID: <20030225210332.GA95436@mithrandr.moria.org>

On Tue 2003-02-25 (21:30), Neil Blakey-Milner wrote:
> That's about it, but I'm unlikely to have much time to spend on this for
> some time, so I'm looking for comments on how to do it better for when I
> do get time, and/or support for other functionality.

I've hacked together the attached Tk client to help anyone who wishes to
play with this code.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

import sys
import Tkinter

from twisted.internet import reactor, tksupport
from twisted.internet.protocol import ClientFactory
from twisted.python import log, logfile

import tpjabber

class TkJabber(tpjabber.Jabber):
    def jabberGotAuthenticationTypes(self, types, document):
        line = "Available authentication types: %s" % (", ".join(types))
        self.factory.screenObj.addLine(line)

    def jabberLoggedIn(self, document):
        line = "Successfully logged in as %s on %s" % (self.factory.jid,
            self.factory.host)
        self.factory.screenObj.addLine(line)
        self.factory.screenObj.status("Logged in as %s on %s" %
            (self.factory.jid, self.factory.host))

    def jabberGotMessage(self, sender, recipient, body, document):
        line = "Message from %s: %s" % (sender, body)
        self.factory.screenObj.addLine(line)
        #self.jabberSendMessage(sender, "I got your message: %s" % (body))

    def jabberFailedLogIn(self, error, code, reason, document):
        line = "Login failed (code %s), reason: %s" % (code, reason)
        self.factory.screenObj.addLine(line)

    def jabberGotRosterStart(self, document):
        line = "Roster:"
        self.factory.screenObj.addLine(line)
        line = "--------------------"
        self.factory.screenObj.addLine(line)

    def jabberGotRosterEntry(self, jid, ask, subscription, document):
        line = "%s: " % (jid)
        if subscription:
            line = line + "%s" % (subscription)
        if ask:
            line = line + "%s-request" % (ask)
        self.factory.screenObj.addLine(line)

    def jabberGotRosterEnd(self, document):
        line = "--------------------"
        self.factory.screenObj.addLine(line)

    def jabberSubscribeRequest(self, sender, document):
        line = "Subscribe request from  %s" % (sender)
        self.factory.screenObj.addLine(line)

    def jabberSendMessage(self, recipient, body):
        line = "-> *%s* %s" % (recipient, body)
        self.factory.screenObj.addLine(line)

class TkJabberClientFactory(tpjabber.JabberClientFactory):
    protocol = TkJabber

    def __init__(self, window, host, user, password):
        tpjabber.JabberClientFactory.__init__(self, host, user, password)
        self.screenObj = window
        window.factory = self

class win(Tkinter.Tk):
    # some constants to calculate window sizes
    CHARHEIGHT=15
    CHARWIDTH=8
    MARGIN=1

    # color codes
    color=['#000000', '#000080', '#008000', '#008080', '#800000', '#800080',
    #        black      blue       green      cyan       red        purple
            '#808000', '#CCCCCC', '#808080', '#0000FF', '#00FF00', '#00FFFF',
    #        brown      lt gray    gray       lt blue    lt green   lt cyan
            '#FF0000', '#FF00FF', '#FFFF00', '#FFFFFF']
    #        lt red     pink       yellow     white


    def __init__(self, title='', width=80, height=24):
        Tkinter.Tk.__init__(self)

        self.textarea = Tkinter.Text(self, width=width, height=height,
            state='disabled', wrap='word')

        self.sb = Tkinter.Scrollbar(self, command=self.textarea.yview)
        self.textarea.configure(yscrollcommand=self.sb.set)

        self.cmdlinevar = Tkinter.StringVar()
        self.cmdlinevar.set('')
        self.commandline = Tkinter.Entry(self, width=80, textvariable=self.cmdlinevar)
        self.commandline.bind('<Return>', self.gotLineInput)

        self.statusbar = Tkinter.Label(self, bd=1, relief='sunken')

        self.textarea.grid(row=0, column=0, sticky='nsew')
        self.sb.grid(row=0, column=1, sticky='ns')
        self.statusbar.grid(row=2, columnspan=2, sticky='ew')
        self.commandline.grid(row=1, columnspan=2, sticky='ew')

        self.columnconfigure(0, weight=1)
        self.rowconfigure(0, weight=1)

        self.status("Ready...")
        self.title(title)

    def close(self):
        self.withdraw()
        self.update_idletasks()
        self.destroy()

    def addLine(self, line):
        self.textarea.config(state='normal')
        self.textarea.insert('end', "\n%s" % (line))
        self.textarea.config(state='disabled')
        self.textarea.see('end')

    def status(self, msg):
        self.statusbar.config(text=msg)
        self.statusbar.update_idletasks()

    def gotLineInput(self, text):
        c = self.cmdlinevar.get()
        self.commandline.delete(0, 'end')
        split = c.split()
        if len(split):
            func = getattr(self, "input_%s" % (split[0]), self.input_UNHANDLED)
            func(split[0], " ".join(split[1:]))

    def input_UNHANDLED(self, command, text):
        self.addLine("Unknown command: %s" % (command))

    def input_echo(self, command, text):
        self.addLine(text)

    def input_message(self, command, text):
        split = text.split()
        self.factory.protocolobj.jabberSendMessage(split[0], " ".join(split[1:]))
        #self.addLine(str(dir(self.factory)))

    def input_exit(self, command, text):
        self.addLine("Shutting down...")
        #self.close()
        reactor.stop()

def main():
    host = "jabber.moria.org"
    user = "test"
    password = "test"
    #log.startLogging(logfile.LogFile("jabclient.log", "."))
    log.startLogging(sys.stdout)
    screen = win("tpjabber/Tk")
    screen.protocol('WM_DELETE_WINDOW', reactor.stop)
    tksupport.install(screen)
    factory = TkJabberClientFactory(screen, host, user, password)
    reactor.connectTCP(host, 5222, factory)
    reactor.run()

if __name__ == "__main__":
  main()

From twisted at itamarst.org  Tue Feb 25 16:37:30 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 16:37:30 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] cog-commits list
In-Reply-To: <E18nebJ-0004e2-00@pyramid.twistedmatrix.com>
References: <E18nebJ-0004e2-00@pyramid.twistedmatrix.com>
Message-ID: <20030225163730.2640d0f9.twisted@itamarst.org>

Anyone know why cvstoys is ignoring my changes to freshCfg? COmmits to
Cog are not getting sent to the commits list :(



From radix at twistedmatrix.com  Tue Feb 25 17:21:02 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 25 Feb 2003 17:21:02 -0500
Subject: [Twisted-Python] oops
In-Reply-To: <87wujobmj4.fsf@jumper.lonesom.pp.fi>
References: <87wujobmj4.fsf@jumper.lonesom.pp.fi>
Message-ID: <20030225222102.GC1092@radii>

On Tue, Feb 25, 2003 at 01:57:35PM +0200, Jaakko Niemi wrote:
> 
> Setting up python2.1-twisted (1.0.3-1) ...
> /usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
> SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
> 'msg' as global in nested scope 'lambda'
>   def _ebFailedLogin(self, reason):
> 
> /usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
> SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
> 'msg' as global in nested scope 'lambda'
>   def _ebFailedLogin(self, reason):


I see that exarkun fixed it, but it really doesn't matter; gtk2util.py
only works with 2.2, anyway (which has nested_scopes on by default). I
guess it's nice to get rid of the warning, though. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From mario at ruggier.org  Tue Feb 25 18:48:31 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Wed, 26 Feb 2003 00:48:31 +0100
Subject: [Twisted-Python] Serving files, again
Message-ID: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>

Hi,

i had hacked the rpy below, to serve files (those specified by the left  
over part of the url,
and rooted on a hard-wired rootdir on the system) following the  
suggestions of
this list, picking from the example bits, and salvaging whatever ideas  
I can
from the docs. However the mental model i'd like to form is still very  
murky...

After Clark's post from yesterday, I tried to redo this in the "proper"  
way,
i.e. using putChild. However, the best i could get was
"Request did not return a string", when trying putChild and getChild
as the content of the render() method below (with isLeaf=0).

Would anyone be able to clarify what the render() method should be
such that the url  http://host/docs/some/file.txt will return the file
at system location of: /Path/To/Somewhere/some/file.txt ?

Oh, and in general, how does one turn off directory browsing
for a twisted.web server?

Thanks, mario


############################
# docs.rpy

from twisted.protocols import http
from twisted.web import resource, error
import os

###

docsBase = '/Path/To/Somewhere'
serveFileTypes = ['','.txt','.pdf','.gif']

###

class RestrictedResource(resource.Resource):

     def isLeaf(self):
         return 1

     def render(self, request):

         # a few var used in blocks below
         subPath = '/'.join(request.postpath)
         fullPath = docsBase +'/'+ subPath
         rootPath = '/docs/'+subPath
         if not len(subPath):
             rootPath = '/docs'+subPath # otherwise get double slash  
(when postpath is zero length)
         dirlist = []

         # build list or return file
         try:
             if not os.path.exists(fullPath):
                 raise Exception # of type...
             elif os.path.isdir(fullPath):
                 dirlist = processDirlist(os.listdir(fullPath))
             elif os.path.isfile(fullPath):
                 import mimetypes
                 mimetype = mimetypes.guess_type(fullPath)[0]
                 if not mimetype:
                     mimetype = 'text/plain' # fallback
                 request.setHeader("content-type", mimetype)
                 try:
                     f = open(fullPath)
                     return f.read()
                 finally:
                     f.close()
             else:
                 raise Exception # of type..
         except:
             errpage = error.ErrorPage(http.NOT_FOUND,"Not  
Found",rootPath)
             return errpage.render(request)

         # response string
         s = '<ul>'
         for file in dirlist:
             s += '<li><a href="%s">%s</li>' % ( rootPath+'/'+file, file  
)
         s += '</ul>'
         title = 'Directory listing for ' + rootPath
         return  
'''<html><head><title>%s</title></head><body><h1>%s</h1>%s</body></ 
html>''' % (title,title,s)

###

resource = RestrictedResource()

###

def processDirlist(dirlist):
     dl = []
     for filename in dirlist:
         (name, suffix) = os.path.splitext(filename)
         if suffix in serveFileTypes:
             dl.append(filename)
     return dl

###




From cce at clarkevans.com  Wed Feb 26 00:19:12 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 05:19:12 +0000
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030225132006.5e218185.twisted@itamarst.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local> <20030224190029.GA30155@meson.dyndns.org> <20030225041950.GA13167@doublegemini.com> <20030225132006.5e218185.twisted@itamarst.org>
Message-ID: <20030226051912.GA17895@doublegemini.com>

On Tue, Feb 25, 2003 at 01:20:06PM -0500, Itamar Shtull-Trauring wrote:
| You are calling request.finish() twice. Maybe your render method didn't
| return NOT_DONE_YET to indicate that it is not finishing immediately?

Quite right, thanks.

I have another question, since my queries take some time the user
can get bored and go backwards, click something else, or even
close the browser altogether.

Is there a way to detect this?  It'd be nice to somehow cancel
the current query executing, etc.  I'm using PyPgSQL

Best,

Clark



From cce at clarkevans.com  Wed Feb 26 01:05:26 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 06:05:26 +0000
Subject: [Twisted-Python] how to get those pretty tracebacks
Message-ID: <20030226060526.GA18184@doublegemini.com>

I'm currently using the "delayed" processing, and I was wondering how I
could get the pretty "web.Server" traceback when an error happens... right
now I got an ugly thing I wrote... ;)



From cce at clarkevans.com  Wed Feb 26 04:38:59 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 09:38:59 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <1046200834.1542.73.camel@lothlorien>
References: <OF83C43183.3D83B6FB-ON85256CD7.0005839F@juscom.com> <1046070422.13997.23.camel@lothlorien> <20030224131919.GA10280@doublegemini.com> <200302241835.21707.ChuckEsterbrook@yahoo.com> <20030225175153.GA14701@doublegemini.com> <1046200834.1542.73.camel@lothlorien>
Message-ID: <20030226093859.GA19242@doublegemini.com>

On Tue, Feb 25, 2003 at 01:20:34PM -0600, Ian Bicking wrote:
| > flexible.  I say this beacuse I was able to do path variables 
| > out-of-the-box (2 hours) with this tool; in Webware I've been 
| > maintaining a patch for over a year, and this patch isn't ideal.
| 
| Can you give a pointer to that?  I'm interesting in changing how paths
| are parsed in Webware, but I've never felt confident 

The Twisted model has the notion of a resource.   Let's start with
a simple working example:

    from twisted.web.resource import Resource
    from twisted.internet import reactor
    from twisted.web.server import Site
    from twisted.web.static import File
    
    class DynamicRequest(Resource):
        def isLeaf(self): return true
        def render(self, req):
            req.content_type = 'text/plain'
            return "uri: %s" % req.uri
    
    def run():
        root = Resource()
        root.putChild("dynamic", DynamicRequest())
        root.putChild("static",File("."))
        site = Site(root)
        reactor.listenTCP(8081,site)
        reactor.run()

The interface of resource is a collection, and has a
   getChild( pathsegment )
method is called for every segment in the path.  So,
   /foo/bar/baz
is somewhat equivalent to the following:
  site.resource.getChild('foo').getChild('bar').getChild('baz')

Twisted accomplishes this magic in a "private" function called
getChildForRequest which iterates over each path segment.  For
the current resource it first checks a mapping to see if any
static configured children (putChild) exist, and if a static
child isn't found, it calls getChild() to find the next child
in order.   Of course, the iteration stops when isLeaf() is true.

Twisted comes with many built in Resources, including a 
really nice one for doing redirects (Redirect) and dynamically
serving up a file system (File).  It also seems to have ones
for handling virtual hosts, and sessions.   Very cool.

For more detail...

http://www.twistedmatrix.com/documents/TwistedDocs/current/api/
       public/twisted.web.resource.Resource.html

On Tue, Feb 25, 2003 at 08:18:25PM +0100, Paul Jongsma wrote:
| Last night I was playing with Twisted to get some insight into it,
| one of the things which I tried to figure out was how to do
| path variables.
|
| Would you mind sharing your solution with me? The docs on
| Twisted are sparse and I haven't been able to figure it out
| yet..

Assume that your path is something like...

      /key:val/another:val/<servlet>

At any point in the tree, you should be able to add
the following "resource" which will eat all items
in the path having a colon.

class PathArgs(Resource):
    def getChild(self,path,request):
        if not(hasattr(request,'pathargs')):
            request.pathargs = {}
        pair = path.split(':')
        if 2 == len(pair):
            request.pathargs[pair[0]] = pair[1]
            return self
        return Resource.getChild(self,path,request)

To try it out, replace "root = Resource()" with "root = PathArgs()"
in the code above.   Note, you should be able to use this resource
anywhere in the tree...

I'm completely astonished with the power/simplicity of this
mechanism.  Serious Kudos to the brain who discovered it... that
such a small amount of code can add a "pathargs" attribute to
each request in a way that is completely pluggable is just
spectacular!  Clark



From cce at clarkevans.com  Wed Feb 26 05:20:21 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 10:20:21 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <20030226093859.GA19242@doublegemini.com>
References: <OF83C43183.3D83B6FB-ON85256CD7.0005839F@juscom.com> <1046070422.13997.23.camel@lothlorien> <20030224131919.GA10280@doublegemini.com> <200302241835.21707.ChuckEsterbrook@yahoo.com> <20030225175153.GA14701@doublegemini.com> <1046200834.1542.73.camel@lothlorien> <20030226093859.GA19242@doublegemini.com>
Message-ID: <20030226102021.GA19647@doublegemini.com>

| class PathArgs(Resource):
|     """ Provides a mechanism to add 'pathargs' attribute to
|         each request, and to populate it with instances of
|         key:value pairs found in child paths. 
|     """
|     def getChild(self,path,request):
|         pair = path.split(':')
|         if 2 == len(pair):
|             request.pathargs[pair[0]] = pair[1]
|             return self
|         return Resource.getChild(self,path,request)
|     def getChildWithDefault(self,path,request):
|         if not(hasattr(request,'pathargs')):
|             request.pathargs = {}
|         return Resource.getChildWithDefault(self,path,request)

I was wondering if anyone would like to add the above code to the 
web package so that people can use /path:args/servlet right out
of the box.  I hearby put the above code snippet into the public domain.  

Best,

Clark



From ab at pobox.com  Wed Feb 26 15:08:01 2003
From: ab at pobox.com (Amir Bakhtiar)
Date: Wed, 26 Feb 2003 12:08:01 -0800
Subject: [Twisted-Python] Patch for tap.ftp to add username and password options
References: <20030225123525.17019.1822.Mailman@pyramid.twistedmatrix.com>
Message-ID: <00d401c2ddd2$c96c16d0$877ba8c0@tesla>

This patch allows username and password pairs to be defined.
e.g. mktap ftp -uamir -pfoo
       mktap ftp -uamir:glyph -pfoo:bar

-A-

--- ftp.py 2003-02-26 11:31:15.000000000 -0800
+++ ftp.new.py 2003-02-26 11:43:16.000000000 -0800
@@ -33,13 +33,33 @@
     optParameters = [
         ["port", "p", "2121",                 "set the port number"],
         ["root", "r", "/usr/local/ftp",       "define the root of the
ftp-site."],
-        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."]
+        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."],
+        ["username(s)", "u", "twisted","set the login username. colon
separate for multiple."],
+        ["password(s)", "w", "twisted","set the password. colon separate
for multiple."]
     ]
     optFlags = [["anonymous", "a","allow anonymous logins"],
                 ["thirdparty", "3", "allow third-party
connections"],diff -c
                 ["otp", "","activate One-Time Passwords"]]

     longdesc = ''
+
+
+    def opt_username(self, username):
+        """Set the login username(s).
+        This can be a single username or a ':' separated
+        list of usernames.
+        """
+        self.opts['username'] = username
+    opt_u = opt_username
+
+
+    def opt_password(self, password):
+        """Set the login username(s).
+        This can be a single password or a ':' separated
+        list of passwords.
+        """
+        self.opts['password'] = password
+    opt_w = opt_password


 def addUser(factory, username, password):
@@ -60,8 +80,15 @@
     t.otp = config.opts['otp']
     t.userdict = {}

-    # adding a default user
-    addUser(t, "twisted", "twisted")
+    if config.opts['username']:
+        # Adding specified users
+        unames = config.opts['username'].split(':')
+        pwords = config.opts['password'].split(':')
+        for u, p in zip(unames, pwords):
+            addUser(t, u, p)
+    else:
+        # Adding a default user
+        addUser(t, "twisted", "twisted")

     try:
         portno = int(config.opts['port'])





From ab at pobox.com  Wed Feb 26 15:45:26 2003
From: ab at pobox.com (Amir Bakhtiar)
Date: Wed, 26 Feb 2003 12:45:26 -0800
Subject: [Twisted-Python] correction to patch to tap.ftp
Message-ID: <00de01c2ddd7$fe0dce60$877ba8c0@tesla>

Got confused by the interplay of optParameters and opt_ methods.
Here is a simplified version of my earlier patch.

This patch allows username and password pairs to be defined.
e.g. mktap ftp -uamir -wfoo
       mktap ftp -uamir:glyph -wfoo:bar

-A-


--- ftp.py 2003-02-26 12:41:27.000000000 -0800
+++ ftp.orig.py 2003-02-26 11:31:15.000000000 -0800
@@ -33,16 +33,14 @@
     optParameters = [
         ["port", "p", "2121",                 "set the port number"],
         ["root", "r", "/usr/local/ftp",       "define the root of the
ftp-site."],
-        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."],
-        ["username", "u", "twisted","set login username. colon separate for
multiple."],
-        ["password", "w", "twisted","set password. colon separate for
multiple."]
+        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."]
     ]
     optFlags = [["anonymous", "a","allow anonymous logins"],
                 ["thirdparty", "3", "allow third-party connections"],
                 ["otp", "","activate One-Time Passwords"]]

     longdesc = ''
-
+

 def addUser(factory, username, password):
     factory.userdict[username] = {}
@@ -62,15 +60,8 @@
     t.otp = config.opts['otp']
     t.userdict = {}

-    if config.opts['username']:
-        # Adding specified users
-        unames = config.opts['username'].split(':')
-        pwords = config.opts['password'].split(':')
-        for u, p in zip(unames, pwords):
-            addUser(t, u, p)
-    else:
-        # Adding a default user
-        addUser(t, "twisted", "twisted")
+    # adding a default user
+    addUser(t, "twisted", "twisted")

     try:
         portno = int(config.opts['port'])






From cce at clarkevans.com  Wed Feb 26 14:20:02 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 19:20:02 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
Message-ID: <20030226192002.GA22857@doublegemini.com>

On Wed, Feb 26, 2003 at 12:48:31AM +0100, Mario Ruggier wrote:
| Would anyone be able to clarify what the render() method should be
| such that the url  http://host/docs/some/file.txt will return the file
| at system location of: /Path/To/Somewhere/some/file.txt ?

I don't know if this is your question; but I'd return the contents
of file.txt when the file size is less than a pre-defined size, say 32K.
Beyond that, the file should be DEFERRED into a thread which sends
the file a chunk at a time.   Further, it'd be cool if I could 
specify in the request object if the response should be compressed
via gzip.

This brings up another clarification of Resource, it'd be nice
if there was a sub-class of Resource called a "FilterResource"
which basically didn't serve content but which perhaps consumed
path segments or arguments or cookies and perhaps altered the
request object.   A FilterResource would have an additional
method called "initRequest" which could add stuff like my 
pathargs variable, and in the above request could add a flag
to the request object specifying if the file content should
be compressed.

Clark



From cce at clarkevans.com  Wed Feb 26 14:48:52 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 19:48:52 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
Message-ID: <20030226194852.GB22857@doublegemini.com>

On Wed, Feb 26, 2003 at 12:48:31AM +0100, Mario Ruggier wrote:
| 
| Oh, and in general, how does one turn off directory browsing
| for a twisted.web server?

You could do this in the constructor,

    path = RestrictedResource('/my/path',directoryBrowsing=false)

But, this really should be done on a per-request mechanism.  Perhaps
request needs a "options" collection where a top-level Resource 
can set processing options for lower-level resources in the path
chain (see the FilterResource post previously).

Anyway, I wanted to respond to your code below...

| class RestrictedResource(resource.Resource):
|     def isLeaf(self):
|         return 1
|     def render(self, request):
...
|         fullPath = docsBase +'/'+ subPath
|         try:
|             if not os.path.exists(fullPath):
|                 raise Exception # of type...
|             elif os.path.isdir(fullPath):
|                 dirlist = processDirlist(os.listdir(fullPath))
|             elif os.path.isfile(fullPath):
|                 import mimetypes

This is interesting.  I would have probably done it a less
efficient way (but perhaps more flexible)?  I would have 
used two resources, a DirectoryResource and a FileResource.  

The DirectoryResource would override getChild(path,request) and 
dynamically look for a child in the current path, leveraging the
descent operation in getChildForRequest.  This object would then
either return the subordinate NotFoundResource, DirectoryResource 
or a FileResource object depending on what the path matched. 
The constructor for these child resources would have a fullpath,
constructed by concatinating the fullpath of the current Directory
with the given path.

The FileResource would serve up the given file, by overriding
the render(request) method as you have specified above.  In this
way one could provide a replacement FileResource or override a
DirectoryResource, etc.  

If you wanted to get tricky, you could "stuff" the path state
into the request object and the DirectoryResource could 
'return self' instead of creating intermediary Directories.
This leads to the following more general questions:

  1.  There should be a general way to attach "resource specific"
      data to a given request, for DirectoryResource it'd be the
      current path, for PathArgs, it'd be the mapping of path
      arguments to variables.

  2.  This mechanism could thus be used for inter-resource 
      communication, say where a UserSession(FilterResource)
      would attach a directive to "compress_files" or not
      to subordinate FileResources.

As I said in a previous post, I'm quite impressed with the
whole "Resource" concept and the "tail recursive" descent
mechanism provided via getChildForRequest.

Hope this helps...

Clark



From cce at clarkevans.com  Wed Feb 26 14:51:35 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 19:51:35 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226192002.GA22857@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com>
Message-ID: <20030226195135.GA23100@doublegemini.com>

On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
| On Wed, Feb 26, 2003 at 12:48:31AM +0100, Mario Ruggier wrote:
| | Would anyone be able to clarify what the render() method should be
| | such that the url  http://host/docs/some/file.txt will return the file
| | at system location of: /Path/To/Somewhere/some/file.txt ?
| 
| I don't know if this is your question; but I'd return the contents
| of file.txt when the file size is less than a pre-defined size, say 32K.
| Beyond that, the file should be DEFERRED into a thread which sends
| the file a chunk at a time.   Further, it'd be cool if I could 
| specify in the request object if the response should be compressed
| via gzip.

Actually, shouldn't it always be deferred?  The file system may
be writing at the time (via another thread) so doing a file read
(even for a tiny file) at this point could cause significant lag 
or am I completely mis-understanding this whole async-stuff?

Clark



From exarkun at intarweb.us  Wed Feb 26 14:50:31 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 26 Feb 2003 14:50:31 -0500
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226195135.GA23100@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com>
Message-ID: <20030226195031.GA21673@meson.dyndns.org>

On Wed, Feb 26, 2003 at 07:51:35PM +0000, Clark C. Evans wrote:
> On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
> | 
> | I don't know if this is your question; but I'd return the contents
> | of file.txt when the file size is less than a pre-defined size, say 32K.
> | Beyond that, the file should be DEFERRED into a thread which sends
> | the file a chunk at a time.   Further, it'd be cool if I could 
> | specify in the request object if the response should be compressed
> | via gzip.
> 
> Actually, shouldn't it always be deferred?  The file system may
> be writing at the time (via another thread) so doing a file read
> (even for a tiny file) at this point could cause significant lag 
> or am I completely mis-understanding this whole async-stuff?

  We usually consider IO on local fixed disks to be fast enough.  In any
case, select() in POSIX tells you that files are always ready for reading,
so being smarter about it requires using a different mechanism (which is
entirely possible, but requires a different reactor, not to mention platform
support).

  BTW, deferring to a thread would not be the way to go.  Something similar
to twisted.spread.util.Pager would probably be appropriate, or maybe
something that implements IProducer.  Or maybe just a chain of Deferreds :)
No need to go into threads for this, though.

  Jp

-- 
        "I quite agree with you," said the Duchess; "and the moral of
that is -- Be what you would seem to be' -- or, if you'd like it put
more simply -- Never imagine yourself not to be otherwise than what it
might appear to others that what you were or might have been was not 
otherwise than what you had been would have appeared to them to be
otherwise.'"       -- Lewis Carrol, "Alice in Wonderland"
-- 
 up 18 days, 0:29, 5 users, load average: 0.47, 0.28, 0.14
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030226/424ce591/attachment.pgp 

From cce at clarkevans.com  Wed Feb 26 16:06:57 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 21:06:57 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226195031.GA21673@meson.dyndns.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com> <20030226195031.GA21673@meson.dyndns.org>
Message-ID: <20030226210657.GB23608@doublegemini.com>

Thanks Jp, this is helpful.

On Wed, Feb 26, 2003 at 02:50:31PM -0500, Jp Calderone wrote:
|   We usually consider IO on local fixed disks to be fast enough.  In any
| case, select() in POSIX tells you that files are always ready for reading,
| so being smarter about it requires using a different mechanism (which is
| entirely possible, but requires a different reactor, not to mention platform
| support).

The files that I need to serve up are quite big (some are a meg or more),
and it would be bad to block other resources while the file loads into
memory via file.read() or for the time it takes for the client to 
completely consume the file.

|   BTW, deferring to a thread would not be the way to go.  Something similar
| to twisted.spread.util.Pager would probably be appropriate, or maybe
| something that implements IProducer.  Or maybe just a chain of Deferreds :)
| No need to go into threads for this, though.

Ok.  So this would be the equivalent of a "file generator" which
returns its content in say 4K chunks?  This would work by returning
a callback which (a) wrote out 4K and then (b) deferred itself again?

class deferredreader:
    def __init__(self,filename,chunksize = 4096):
        self.filename  = filename
        self.file      = None
        self.chunksize = 4096
    def callback(self,req):
        if not self.file:
            self.file = open(filename,"r")
            return DEFERRED
        chunk = self.file.read(self.chunksize)
        if chunk: 
            req.write(chunk) 
            return DEFERRED
        else:
            return ""

(written but not tested)

Is this the Jist of it?  It still has the problem that file.read 
is a blocking call; I suppose for unix platforms you could use
"poll()" to not block.  This is probably resonable; on the server
side you don't block, while for desktop windows clients it blocks.

Is this what you were thinking with the chain of deferreds?

Best,

Clark



From radix at twistedmatrix.com  Wed Feb 26 17:23:44 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 26 Feb 2003 17:23:44 -0500
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226195031.GA21673@meson.dyndns.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com> <20030226195031.GA21673@meson.dyndns.org>
Message-ID: <20030226222344.GB8157@radii>

On Wed, Feb 26, 2003 at 02:50:31PM -0500, Jp Calderone wrote:
> On Wed, Feb 26, 2003 at 07:51:35PM +0000, Clark C. Evans wrote:
> > On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
> > | 
> > | I don't know if this is your question; but I'd return the contents
> > | of file.txt when the file size is less than a pre-defined size, say 32K.
> > | Beyond that, the file should be DEFERRED into a thread which sends
> > | the file a chunk at a time.   Further, it'd be cool if I could 
> > | specify in the request object if the response should be compressed
> > | via gzip.
> > 
> > Actually, shouldn't it always be deferred?  The file system may
> > be writing at the time (via another thread) so doing a file read
> > (even for a tiny file) at this point could cause significant lag 
> > or am I completely mis-understanding this whole async-stuff?
> 
>   We usually consider IO on local fixed disks to be fast enough.  In any
> case, select() in POSIX tells you that files are always ready for reading,
> so being smarter about it requires using a different mechanism (which is
> entirely possible, but requires a different reactor, not to mention platform
> support).
> 
>   BTW, deferring to a thread would not be the way to go.  Something similar
> to twisted.spread.util.Pager would probably be appropriate, or maybe
> something that implements IProducer.  Or maybe just a chain of Deferreds :)
> No need to go into threads for this, though.

static.File already reads/writes in chunks, and it uses Producers.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From mario at ruggier.org  Wed Feb 26 17:36:33 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Wed, 26 Feb 2003 23:36:33 +0100
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <20030226093859.GA19242@doublegemini.com>
Message-ID: <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org>

Thanks Clark, these little examples and explanations are very helpful.

I have a question on the PathArgs Resource you propose. Assuming we use
the PathArgs class as you suggest, there will be an exception thrown 
when a
requested "dynamic" URL does not include any actual path args, e.g. the 
URL
http://host/name:value/dynamic/whatever does actually work as 
suggested, with
variable "name" being added to the pathargs dict. However, if we ask 
simply for
http://host/dynamic/whatever then an exception is thrown because we try 
to access
req.pathargs, that is not set in this case (PathArgs.getChild() is not 
called)

Or, to put it differently, how can we make sure that Request acquires 
the pathargs
attribute, so that all children do not have to check for existance? (To 
me this seems
similar to having a request.args being always defined, even if no args.)

I am re-including your code below, slightly modified, to make myself 
clear...

mario

##

from twisted.web.resource import Resource
from twisted.internet import reactor
from twisted.web.server import Site
from twisted.web.static import File

class PathArgs(Resource):
     def __init__(self):
         Resource.__init__(self)
     def getChild(self,path,request):
         if not(hasattr(request,'pathargs')):
             request.pathargs = {}
         pair = path.split(':')
         if 2 == len(pair):
             request.pathargs[pair[0]] = pair[1]
             return self
         return Resource.getChild(self,path,request)

class DynamicRequest(Resource):
     def isLeaf(self):
         return true
     def render(self, req):
         req.content_type = 'text/plain'
         if not(hasattr(req,'pathargs')): # can this check be avoided?
             req.pathargs = {}
         return "uri: %s \npathargs: %s " % ( req.uri, req.pathargs )

def run():
     root = PathArgs()
     root.putChild("dynamic", DynamicRequest())
     root.putChild("static",File("."))
     site = Site(root)
     reactor.listenTCP(8081,site)
     reactor.run()

run()

##




From a00tch00 at nchc.gov.tw  Wed Feb 26 18:03:55 2003
From: a00tch00 at nchc.gov.tw (tch)
Date: Thu, 27 Feb 2003 07:03:55 +0800
Subject: [Twisted-Python] distant learning, video conference
References: <20030226123531.17434.95680.Mailman@pyramid.twistedmatrix.com>
Message-ID: <002501c2ddeb$563126b0$493c6e8c@dt.nchc.gov.tw>

Hi,All:

    Is twistedpython a framework suitable for developing distant learning
and/or video conference application?

Regards,

Tsuangchi Huang
 




From mattcampbell at pobox.com  Wed Feb 26 18:39:49 2003
From: mattcampbell at pobox.com (Matt Campbell)
Date: Wed, 26 Feb 2003 17:39:49 -0600
Subject: [Twisted-Python] distant learning, video conference
In-Reply-To: <002501c2ddeb$563126b0$493c6e8c@dt.nchc.gov.tw>
References: <20030226123531.17434.95680.Mailman@pyramid.twistedmatrix.com> <002501c2ddeb$563126b0$493c6e8c@dt.nchc.gov.tw>
Message-ID: <20030226233949.GA25778@mattc.dyndns.org>

Well, distance learning is kind of a broad term.  If it's text chat
you're looking for, Twisted.Words may be a good solution.  With it,
you can run your own server, and either use the included client
(Instance Messenger) or write your own.  For audio conferencing,
you should look at Speak Freely (http://www.speakfreely.org/) and
OpenH323 (http://www.openh323.org/).  OpenH323 may be able to do video
conferencing, but that's a subject I neither know nor care much about.

On Thu, Feb 27, 2003 at 07:03:55AM +0800, tch wrote:
>     Is twistedpython a framework suitable for developing distant learning
> and/or video conference application?
-- 
Matt Campbell
Phone:  (316) 652-8727
WWW:  http://pobox.com/~mattcampbell/



From andrew-twisted at puzzling.org  Wed Feb 26 18:57:46 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 27 Feb 2003 10:57:46 +1100
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226192002.GA22857@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com>
Message-ID: <20030226235746.GB16813@frobozz.local>

On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
> the file a chunk at a time.   Further, it'd be cool if I could 
> specify in the request object if the response should be compressed
> via gzip.

Probably what should happen is that Twisted Web should look for the
Content-Transfer-Encoding header (or whatever it's called), and
automatically gzip if appropriate.  The response should probably be able to
indicate that gzipping would a waste of time, though -- there's not much
point to gzipping jpegs, or .gz files...

-Andrew.




From juliorom at ceibo.entelnet.bo  Wed Feb 26 20:45:51 2003
From: juliorom at ceibo.entelnet.bo (Julio Rommi =?iso-8859-15?q?O=F1a=20Miranda?=)
Date: Wed, 26 Feb 2003 21:45:51 -0400
Subject: [Twisted-Python] Woven and others
Message-ID: <20030227014315.9ABD4791F@pinky.miranda>

Hi everyone,

I was reading the source of woven (with the hwlp of Issues) what a pice of 
code!!!

I like the idea, but I was asking me why woven should spend all it's power 
only with web, it would be nice if it work with some GUI interface. I mean, 
using all the VCM structure to work with them (TK, wx, etc.) as a interface 
building.

This should not be too hard because the only the View component component 
should be modified. 

Does Twisted has something like this? a generic woven?

Regards.

-- 
Julio



From cce at clarkevans.com  Wed Feb 26 22:11:15 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 27 Feb 2003 03:11:15 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org>
References: <20030226093859.GA19242@doublegemini.com> <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org>
Message-ID: <20030227031115.GB25107@doublegemini.com>

On Wed, Feb 26, 2003 at 11:36:33PM +0100, Mario Ruggier wrote:
| Thanks Clark, these little examples and explanations are very helpful.

Oh, glad it helped; I'm a newbie my self.

| Or, to put it differently, how can we make sure that Request acquires 
| the pathargs attribute, so that all children do not have to check for 
| existance?

Ok.  Here is a patched one that violates a bit of encapsulation 
by overriding getChildWithDefault() as well.  Furthermore, this
new version returns pathargs as a list to stay consistent with args.

...

from twisted.web.resource import Resource
from twisted.internet import reactor
from twisted.web.server import Site
from twisted.web.static import File

class PathArgs(Resource):
    """ Provides a mechanism to add 'pathargs' attribute to
        each request, and to populate it with instances of
        key:value pairs found in child paths.
    """
    def getChild(self,path,request):
        pair = path.split(':')
        if 2 == len(pair):
            (key,val) = pair
            lst = request.pathargs.get(key,[])
            if not lst: request.pathargs[key] = lst
            lst.append(val)
            return self
        return Resource.getChild(self,path,request)
    def getChildWithDefault(self,path,request):
        if not(hasattr(request,'pathargs')):
            request.pathargs = {}
        return Resource.getChildWithDefault(self,path,request)

class DynamicRequest(Resource):
    def isLeaf(self):
        return true
    def render(self, req):
        req.setHeader("Content-type","text/plain")
        resp = "uri: %s \nargs: %s\npathargs: %s\n"
        return resp % ( req.uri, req.args, req.pathargs )

def run():
    root = PathArgs()
    root.putChild("dynamic", DynamicRequest())
    root.putChild("static",File("."))
    site = Site(root)
    reactor.listenTCP(8080,site)
    reactor.run()

if '__main__' == __name__:
    run()
#
# And then go to...
# http://localhost:8080/key:one/key:two/another:value/dynamic?key=three
#




From cce at clarkevans.com  Wed Feb 26 22:43:18 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 27 Feb 2003 03:43:18 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <20030227031115.GB25107@doublegemini.com>
References: <20030226093859.GA19242@doublegemini.com> <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org> <20030227031115.GB25107@doublegemini.com>
Message-ID: <20030227034318.GA26518@doublegemini.com>

#
# pathargs.py
#
# Author: Clark Evans, Axista, Inc.
# Copyright: public domain
# Date: Wed, Febuary 26, 2003
#
# To test, simply run on the command line and then visit this url:
# http://localhost:8080/key:one/key:two,three/another:value/dynamic?key=four
#

from twisted.web.resource import Resource
class PathArgs(Resource):
    """ Provides a mechanism to add 'pathargs' attribute to
        each request, and to populate it with instances of
        key:value pairs found in child paths.  The value for
        each key will be an array, optionally split further
        with a comma.
    """
    def __init__(self,splitOnComma=0):
        Resource.__init__(self)
        self.splitOnComma = splitOnComma
    def getChild(self,path,request):
        pair = path.split(':')
        if 2 == len(pair):
            (key,val) = pair
            lst = request.pathargs.get(key,[])
            if not lst: request.pathargs[key] = lst
            if self.splitOnComma:
                for itm in val.split(','):
                    lst.append(itm)
            else:
                lst.append(val)
            return self
        return Resource.getChild(self,path,request)
    def getChildWithDefault(self,path,request):
        if not(hasattr(request,'pathargs')):
            request.pathargs = {}
        return Resource.getChildWithDefault(self,path,request)

def test():
    from twisted.internet import reactor
    from twisted.web.server import Site
    from twisted.web.static import File

    class DynamicRequest(Resource):
        def isLeaf(self):
            return true
        def render(self, req):
            req.setHeader('Content-type','text/plain')
            resp = 'uri: %s \nargs: %s\npathargs: %s\n'
            return resp % ( req.uri, req.args, req.pathargs )

    root = PathArgs(splitOnComma=1)
    root.putChild('dynamic', DynamicRequest())
    root.putChild('static',File('.'))
    site = Site(root)
    reactor.listenTCP(8080,site)
    reactor.run()

if '__main__' == __name__:
    test()



From cce at clarkevans.com  Wed Feb 26 23:34:06 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 27 Feb 2003 04:34:06 +0000
Subject: [Twisted-Python] minor patch to twisted.html.web
Message-ID: <20030227043406.GA26944@doublegemini.com>

When calling escape, this function seems to assume that
the object being called is a string; although a user
program could do this, an explict conversion here is
more generous with the input arguments.

--- html.py.orig        Wed Feb 26 23:17:00 2003
+++ html.py     Wed Feb 26 23:17:39 2003
@@ -36,6 +36,7 @@

 def escape(text):
     "Escape a few HTML special chars with HTML entities."
+    text = str(text)
     for s, h in [('&', '&amp;'), #order is important
                  ('<', '&lt;'),
                  ('>', '&gt;'),



From bob at redivi.com  Wed Feb 26 23:33:31 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 26 Feb 2003 23:33:31 -0500
Subject: [Twisted-Python] minor patch to twisted.html.web
In-Reply-To: <20030227043406.GA26944@doublegemini.com>
Message-ID: <9FF2809C-4A0C-11D7-B808-000A95686CD8@redivi.com>

On Wednesday, Feb 26, 2003, at 23:34 America/New_York, Clark C. Evans 
wrote:

> When calling escape, this function seems to assume that
> the object being called is a string; although a user
> program could do this, an explict conversion here is
> more generous with the input arguments.

What about unicode?  Ignoring the fact that unicode characters aren't 
escaped properly by this function (yet), if you str(text) you lose 
everything but 7bit ascii characters at best, and could very well raise 
an exception in the conversion to str.

-bob




From glyph at twistedmatrix.com  Thu Feb 27 01:13:33 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 27 Feb 2003 00:13:33 -0600
Subject: [Twisted-Python] minor patch to twisted.html.web
In-Reply-To: <9FF2809C-4A0C-11D7-B808-000A95686CD8@redivi.com>
Message-ID: <998055FC-4A1A-11D7-B820-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Wednesday, February 26, 2003, at 10:33 PM, Bob Ippolito wrote:

> What about unicode?  Ignoring the fact that unicode characters aren't 
> escaped properly by this function (yet), if you str(text) you lose 
> everything but 7bit ascii characters at best, and could very well 
> raise an exception in the conversion to str.

I agree.  Thanks for the thought, Clark, but as traditional Python 
wisdom says, "In the face of ambiguity, refuse to guess."
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+XaySvVGR4uSOE2wRAkLLAKCsOsVkEZelKizeaLMcsIBOjxCJzgCeP2Gk
ntlDPVaDocCwBC3Fd19kAR0=
=8eHG
-----END PGP SIGNATURE-----




From iko at strakt.com  Thu Feb 27 04:11:06 2003
From: iko at strakt.com (Anders Hammarquist)
Date: Thu, 27 Feb 2003 10:11:06 +0100
Subject: [Twisted-Python] SMTP client patch 
In-Reply-To: Your message of "Thu, 20 Feb 2003 22:37:08 CST."
             <231CF4B2-4556-11D7-B2AA-000393C9700E@twistedmatrix.com> 
References: <231CF4B2-4556-11D7-B2AA-000393C9700E@twistedmatrix.com> 
Message-ID: <200302270911.h1R9B6M4030464@fido.strakt.com>

In a message of Thu, 20 Feb 2003 22:37:08 CST, Glyph Lefkowitz writes:
>On Thursday, February 20, 2003, at 06:29 PM, Anders Hammarquist wrote:
>
>> In a message of Thu, 20 Feb 2003 16:14:31 CST, Glyph Lefkowitz writes:
>>> 1. it's not backwards compatible.  DocmaServer uses its own sendEmail,
>>> which depends on the sentEmail callback's signature.
>>
>> way to find out what happend to failed recipient addresses. I
>> suppose I could add logic to try and detect an old-style sentEmail.
>
>Hmm... if you do that (with inspect or somesuch) please make sure to 
>spit out an ugly warning so that people will know to fix their code.  
>We shouldn't be supporting that long-term.

Done.

>>> I personally would like to see Twisted's sendEmail deprecated and
>>
>> As in using sendmail plus the email module? Sure, will do.
>
>Actually I'd prefer the existing code not to be changed, but to spit 
>out a warning, since the interface ought to be "just pass a Message", 
>not "pass a bunch of crap that gets turned into a Message".  
>Considering how easy it is to turn a Message object into a long string, 
>I don't think a separate method is required for this...

Right, and I agree with you that the creation of the rfc-822-format
is not part of send(E)mail's job (which is why I wrote the sendmail
function in the first place). So I've added a deprecation warning
stating that you should consider changing your code to using the
email module and sendmail()

>As long as it's still maintained, though, the existing code should 
>remain in place rather than dragging a new dependency in for use with 
>2.1 (since 'email' is only in the stdlib since 2.2)

It's not much code (right now anyway, but it seems to be growing) so
it shouldn't be hard to keep it up to snuff in it's current state.

>>> 3. What's up with the SMTP logger?  and logging every line in the
>>> client?  This is duplicated generic code, and should probably be
>>> refactored into someplace more appropriate, like twisted.python.log.
>>
>> ). My first look at t.p.log suggested not using it, since it dealt
>> mostly with syslog()-like logging.
>
>You're right.  Given this use-case though, it sounds like you need 
>little more beyond cStringIO...?

Well, I wanted to be able to limit the size of it, but apart from that
cStringIO would've done the job.

>t.p.log might not be the best place to put it, come to think of it, 
>since your impression of 'something like syslog' is correct.  But 
>somewhere in t.p in general.

I made it t.py.linelog. Feel free to change the name if you come
up with something better.

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 28840 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030227/0dbfdbc7/attachment.bin 

From theller at python.net  Thu Feb 27 11:40:22 2003
From: theller at python.net (Thomas Heller)
Date: 27 Feb 2003 17:40:22 +0100
Subject: [Twisted-Python] Traceback in windows installer
Message-ID: <wujlpthl.fsf@python.net>

I get a traceback when runing the 1.0.3 windows installer.
Anyone else seeing this, or is it a problem on my side?

Thomas

Traceback (most recent call last):
  File "C:\Python22\Scripts\twisted_postinstall.py", line 25, in ?
    from twisted.python.shortcut import Shortcut
  File "C:\Python22\Lib\site-packages\twisted\python\shortcut.py", line 7, in ?
    from win32com.shell import shell
  File "C:\Python22\lib\site-packages\win32com\__init__.py", line 95, in ?
    SetupEnvironment()
  File "C:\Python22\lib\site-packages\win32com\__init__.py", line 32, in SetupEnvironment
    __path__.append( win32api.RegQueryValue(key, "Extensions" ))
TypeError: this constructor takes no arguments
*** run_installscript: internal error 0xFFFFFFFF ***






From mario at ruggier.org  Thu Feb 27 11:51:02 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 27 Feb 2003 17:51:02 +0100
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226194852.GB22857@doublegemini.com>
Message-ID: <A7A3E43A-4A73-11D7-8E7B-000393756786@ruggier.org>

Thanks, I have played with your suggestions somewhat.
But, I want to avoid doing things such as overriding File's
render() as I had initially (File.render() does too many nice things
to throw away so easily, as pointed out in the other posts).

A source of confusion for me is knowing which,
and when, specific methods are called automatically.
Particularly, it would be nice to have a clarification (in the
API docs) of when the methods getChildForRequest() and
getChildWithDefault() are called -- they seem not be called in
a non-siteroot resource. Things worked well with PathArgs, it
being set as root resource, but for an arbitrary resource,
like the example I previoulsy included, the game seems to
change .

But, indeed, as Clark, I do find this model of cascading requests
very intriguing, and tantalizingly powerful...

Cheers, mario


> Anyway, I wanted to respond to your code below...
>
> | class RestrictedResource(resource.Resource):
> |     def isLeaf(self):
> |         return 1
> |     def render(self, request):
> ...
> |         fullPath = docsBase +'/'+ subPath
> |         try:
> |             if not os.path.exists(fullPath):
> |                 raise Exception # of type...
> |             elif os.path.isdir(fullPath):
> |                 dirlist = processDirlist(os.listdir(fullPath))
> |             elif os.path.isfile(fullPath):
> |                 import mimetypes
>
> This is interesting.  I would have probably done it a less
> efficient way (but perhaps more flexible)?  I would have
> used two resources, a DirectoryResource and a FileResource.
>
> The DirectoryResource would override getChild(path,request) and
> dynamically look for a child in the current path, leveraging the
> descent operation in getChildForRequest.  This object would then
> either return the subordinate NotFoundResource, DirectoryResource
> or a FileResource object depending on what the path matched.
> The constructor for these child resources would have a fullpath,
> constructed by concatinating the fullpath of the current Directory
> with the given path.
>
> The FileResource would serve up the given file, by overriding
> the render(request) method as you have specified above.  In this
> way one could provide a replacement FileResource or override a
> DirectoryResource, etc.
>
> If you wanted to get tricky, you could "stuff" the path state
> into the request object and the DirectoryResource could
> 'return self' instead of creating intermediary Directories.
> This leads to the following more general questions:
>
>   1.  There should be a general way to attach "resource specific"
>       data to a given request, for DirectoryResource it'd be the
>       current path, for PathArgs, it'd be the mapping of path
>       arguments to variables.
>
>   2.  This mechanism could thus be used for inter-resource
>       communication, say where a UserSession(FilterResource)
>       would attach a directive to "compress_files" or not
>       to subordinate FileResources.
>
> As I said in a previous post, I'm quite impressed with the
> whole "Resource" concept and the "tail recursive" descent
> mechanism provided via getChildForRequest.
>
> Hope this helps...




From mario at ruggier.org  Thu Feb 27 12:15:08 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 27 Feb 2003 18:15:08 +0100
Subject: [Twisted-Python] reactor.run() or application.save()+run?
Message-ID: <055C3DF0-4A77-11D7-8E7B-000393756786@ruggier.org>

Hi,

trying to turn the little Resources example (below) into an application
(replacing use of reactor with application), so that I can save it as 
an application,
when i call "twistd -f pargs-webapp.tap", I get the following error :

Failed to load application: <twisted.persisted.styles.Ephemeral 
instance at 0x3ad330> is not safe for unpickling

If I do not call save() but just run(), the application runs 
correctly...

Any ideas?

mario


###

from twisted.web.resource import Resource
#from twisted.internet import reactor
from twisted.internet import app
from twisted.web.server import Site
from twisted.web.static import File
from PathArgs import PathArgs

class DynamicRequest(Resource):
     def isLeaf(self):
         return false
     def render(self, req):
         req.setHeader('Content-type','text/plain')
         resp = 'uri: %s \nargs: %s\npathargs: %s\n'
         return resp % ( req.uri, req.args, req.pathargs )

###

def run():
     root = PathArgs(splitOnComma=1)
     root.putChild("dynamic", DynamicRequest())
     root.putChild("static",MyFile("."))
     site = Site(root)
     #reactor.listenTCP(8081,site)
     #reactor.run()
     application = app.Application('webapp')
     application.listenTCP(8081,site)
     #application.run()
     application.save('pargs')

###

if __name__ == '__main__':
     run()

###




From warner at lothar.com  Thu Feb 27 14:59:55 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 27 Feb 2003 11:59:55 -0800 (PST)
Subject: [Twisted-Python] reactor.run() or application.save()+run?
References: <055C3DF0-4A77-11D7-8E7B-000393756786@ruggier.org>
Message-ID: <20030227.115955.76774077.warner@lothar.com>

Mario Ruggier <mario at ruggier.org> writes:
> when i call "twistd -f pargs-webapp.tap", I get the following error :
> 
> Failed to load application: <twisted.persisted.styles.Ephemeral instance at
> 0x3ad330> is not safe for unpickling
> 
> If I do not call save() but just run(), the application runs correctly...

It's probably related to this one:

 http://twistedmatrix.com/documents/howto/faq#auto23

In short, app.save() is storing an object of class __main__.DynamicRequest,
which cannot be loaded. You need to import that class from yourself to get a
globally-correct name.

It would be nice if we could detect this sort of thing at .save() time and
emit a warning..

 -Brian




From 2002 at weholt.org  Thu Feb 27 16:59:26 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 27 Feb 2003 22:59:26 +0100
Subject: [Twisted-Python] Serving a binary files from disk, outside folders for static content
Message-ID: <001001c2deab$7ff51fe0$0401a8c0@razor>

I need to serve a binary file from disk, not available in the normal folder for static content. In my code so far I've done something like this in the render-method :

request.setContentType( .... content-type set based on extension of file to serve )
f = open(somefile)
while 1:
    d = f.read(2048) # what's the correct size to read
    if not d:
        break
    request.write(d)
request.finish()
return

It seem to return the data OK, it's visible in the browser, but exceptions are raised in the server. How do I close this connection the right way? Should this be used with deferred or something like that? The files can be huge in size.

PS! From recent postings in this list is seems as if Twisted doesn't support compression of content, using gzip etc. Is this true? This would speed up things considerably. I implemented this in my previous webserver-project using BaseHTTPServer and on big files the increase in speed was impressive. Compressing HTML/Plain text/XML etc., just files known to be based in plain text, would be a great start.

Best regards,
Thomas Weholt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030227/8efaf712/attachment.htm 

From radix at twistedmatrix.com  Thu Feb 27 17:46:19 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 27 Feb 2003 17:46:19 -0500
Subject: [Twisted-Python] Serving a binary files from disk, outside folders for static content
In-Reply-To: <001001c2deab$7ff51fe0$0401a8c0@razor>
References: <001001c2deab$7ff51fe0$0401a8c0@razor>
Message-ID: <20030227224619.GC8157@radii>

On Thu, Feb 27, 2003 at 10:59:26PM +0100, Thomas Weholt wrote:

> I need to serve a binary file from disk, not available in the normal
> folder for static content. In my code so far I've done something
> like this in the render-method :
>
> request.setContentType( .... content-type set based on extension of
> file to serve )
>
> f = open(somefile)
> while 1:
>     d = f.read(2048) # what's the correct size to read
>     if not d:
>         break
>     request.write(d)
> request.finish()
> return

zow! You should be using static.File. Just return
static.File('/path/to/binary.file') from your getChild, or putChild it
there in the first place. It will figure out the mime type by looking
it up in your mime database (/etc/mime.types), and if it's not found
in there, there's a dict of basic mime types that's hard-coded in, so
there's a good chance you won't have to set the mime-type. If you do,
you can just pass the defaultType parameter to the constructor, i.e.,
static.File('/path/foo', defaultType='application/x-octet-stream') (or
whatever the type is).

static.File is much better suited to the purpose because it's already
written :), and it doesn't block (well, it does a better job at
not-blocking, anyway), which your snippet does.

> It seem to return the data OK, it's visible in the browser, but
> exceptions are raised in the server. How do I close this connection
> the right way? Should this be used with deferred or something like
> that? The files can be huge in size.

The exceptions were probably raised because you didn't return anything
meaningful from render -- if you're going to be dealing with the
request directly (calling .write and .finish on it), then you need to
return server.NOT_DONE_YET (assuming `server' was imported with 
`from twisted.web import server'). For future reference, please show
us your tracebacks.


> PS! From recent postings in this list is seems as if Twisted doesn't
> support compression of content, using gzip etc. Is this true? This
> would speed up things considerably. I implemented this in my
> previous webserver-project using BaseHTTPServer and on big files the
> increase in speed was impressive. Compressing HTML/Plain text/XML
> etc., just files known to be based in plain text, would be a great
> start.

Patches accepted >:)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From mario at ruggier.org  Thu Feb 27 17:11:05 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 27 Feb 2003 23:11:05 +0100
Subject: [Twisted-Python] reactor.run() or application.save()+run?
In-Reply-To: <20030227.115955.76774077.warner@lothar.com>
Message-ID: <5D41528E-4AA0-11D7-BFB2-000393756786@ruggier.org>

> Mario Ruggier <mario at ruggier.org> writes:
>> when i call "twistd -f pargs-webapp.tap", I get the following error :
>>
>> Failed to load application: <twisted.persisted.styles.Ephemeral 
>> instance at
>> 0x3ad330> is not safe for unpickling
>>
>> If I do not call save() but just run(), the application runs 
>> correctly...
>
> It's probably related to this one:
>
>  http://twistedmatrix.com/documents/howto/faq#auto23
>
> In short, app.save() is storing an object of class 
> __main__.DynamicRequest,
> which cannot be loaded. You need to import that class from yourself to 
> get a
> globally-correct name

Yes indeed, it is exactly this. Importing the same module corrects the 
problem.
Thanks for the pointer!

> It would be nice if we could detect this sort of thing at .save() time 
> and
> emit a warning..

Yes, it would be a very good thing.

>  -Brian

Cheers, mario




From exarkun at intarweb.us  Thu Feb 27 20:34:23 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 27 Feb 2003 20:34:23 -0500
Subject: [Twisted-Python] reactor.run() or application.save()+run?
In-Reply-To: <20030227.115955.76774077.warner@lothar.com>
References: <055C3DF0-4A77-11D7-8E7B-000393756786@ruggier.org> <20030227.115955.76774077.warner@lothar.com>
Message-ID: <20030228013423.GC8702@meson.dyndns.org>

On Thu, Feb 27, 2003 at 11:59:55AM -0800, Brian Warner wrote:
> 
> In short, app.save() is storing an object of class __main__.DynamicRequest,
> which cannot be loaded. You need to import that class from yourself to get a
> globally-correct name.
> 
> It would be nice if we could detect this sort of thing at .save() time and
> emit a warning..
> 

  This might be cool (as well as detecting various Ephemeral instances), but
I suspect it would be prohibitively expensive to perform all the time. 
Perhaps it could be done in debug mode, though.

  Jp

-- 
 up 19 days, 6:29, 7 users, load average: 0.45, 0.39, 0.29
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030227/f38282b0/attachment.pgp 

From theller at python.net  Fri Feb 28 05:16:11 2003
From: theller at python.net (Thomas Heller)
Date: 28 Feb 2003 11:16:11 +0100
Subject: [Twisted-Python] Fixes for windows installer
Message-ID: <of4wd82c.fsf@python.net>

A non-text attachment was scrubbed...
Name: setup.diff
Type: text/x-patch
Size: 13245 bytes
Desc: setup.diff
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030228/fffd4854/attachment.bin 

From likwoka at yahoo.com  Fri Feb 28 09:54:34 2003
From: likwoka at yahoo.com (Alex Li)
Date: Fri, 28 Feb 2003 06:54:34 -0800 (PST)
Subject: [Twisted-Python] introductory questions for twisted.web.woven
Message-ID: <20030228145434.57825.qmail@web13906.mail.yahoo.com>

Hi Twisted,

I am a newbie trying to learn the twisted.web.woven framework.
After reading the docs I am still confused.  Any answers or
pointers would be greatly appreciated.

1.  How to process a form?  I tried the wovenquotes example but
got confused (ex: the form used in the example has no method
and action attribute in the <form> tag)?  What is the class to use?
(I think it is related to the twisted.web.woven.input module, but
couldn't really see how...)

2.  How to get the querystring?  This is similar to the above question,
but it can be used without form.  Let's say I simply want to have
a dynamic link like this:
    <a href="http://destination/page.rpy?src=http://come/from/here">
How to get the arguments and values after the "?" ?

3.  In the twisted.web.resource.Resource class, what is an Entity?
what is a Name?  What is a Child (another Resource?)  It would be
nice if the answer can be provide is a simple example (not too abstract)?

4.  So for serving files in the file system, we use twisted.web.static.File.
For serving dynamically generated pages, we can use twisted.web.woven.page.Page?

5.  Any examples or docs that you think I should read (beside the one listed
in twistedmatrix.com website)?

Thanks in advance,
Alex

__________________________________________________
Do you Yahoo!?
Yahoo! Tax Center - forms, calculators, tips, more
http://taxes.yahoo.com/



From cce at clarkevans.com  Fri Feb 28 11:37:29 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Fri, 28 Feb 2003 16:37:29 +0000
Subject: [Twisted-Python] Refactoring GetChildWithDefault (removal is ideal)
In-Reply-To: <A7A3E43A-4A73-11D7-8E7B-000393756786@ruggier.org>
References: <20030226194852.GB22857@doublegemini.com> <A7A3E43A-4A73-11D7-8E7B-000393756786@ruggier.org>
Message-ID: <20030228163729.GA31978@doublegemini.com>

First, before I get started, let me just say that I think that
the resource delegation mechanism in this library is just 
brilliant in its simplicity and operation.  

However, after much musing, I've decided that getChildWithDefault
isn't very useful and kinda mucks up the waters:

    # public interface
    def getChild(self, path, request):
        return error.NoResource("No such child resource.")
    
    # private interface
    def getChildWithDefault(self, path, request):
        if self.children.has_key(path):
           return self.children[path]
        return self.getChild(path, request)
    def getChildForRequest(self, request):
        res = self
        while request.postpath and not res.isLeaf:
            pathElement = request.postpath.pop(0)
            request.acqpath.append(pathElement)
            request.prepath.append(pathElement)
            res = res.getChildWithDefault(pathElement, request)
        return res

Suggested refactor:

    # module variables
    resourceNotFound = error.NoResource('No such child resource.')

        # public interface
    def getChild(self, path, request):
        if self.children.has_key(path):
           return self.children[path]
        return None

        # private interface (called on root only)
    def getChildForRequest(self, request):
        res = self
        while request.postpath and not res.isLeaf:
            pathElement = request.postpath.pop(0)
            request.acqpath.append(pathElement)
            request.prepath.append(pathElement)
            res = res.getChild(pathElement, request)
            if res is None: return resourceNotFound
        return res

Rationale:

   1.  It is very useful to have a *public* interface function 
       which is _always_ called for every request.  In this manner,
       an application can implement request modifiers/filters.
       Currently the function that satisfies this need, 
       getChildWithDefault is private.

   2.  Unless you break the public interface, the current mechanism
       always searches children first without a hook for the 
       application.  This isn't always desireable.

       For example, a 'security' FilterResource may want to check 
       user access before descending down a given resource sub-tree.  
       Yes, you could implement this security as part of each 
       resource (by inheriting); but I feel that this is inferior
       to haveing a more "component" based solution where the
       security filter is injected into the resource tree.

   3.  From a object-oriented perspective, getChildWithDefault 
       actually does the 'default' behavior that people may want
       to inherit and discard, and thus this default searching
       code should go into getChild instead; the user can then
       decide how to best use this default behavior.

   4.  getChild's current interface, always returning a resource,
       albeit a not-very-useful resource limits possible innovative
       combinations of intra-resource delegation and cooperation.
       It should intead return a None value which can be tested for...

Impact on change:

    Anyone who wrote a previous resource who dependend on the
    set of children being searched *before* getChild is called
    would break.    I think that this is probably a pretty
    rare event; but it is a clean break, and the fix is simple...

    class MyResource(Resource):
        def getChild(self,path,request):
            res = Resource.getChild(self,path,request)
            if res is None:
                // try to create a dynamic resource
            return None

    Alternatively, if they wanted to search the dynamic 
    resources first, they could code it this way:

    class MyResource(Resource):
        def getChild(self,path,resource):
            res = None
            // try to create dynamic resource
            if res is not None: return res
            return Resource.getChild(self,path,request)

    Perhaps a few examples would have to be changed, but most
    likely the above impact is in only a few select resources.

Alternative refactor:

    The simplest alternative is to add getChildWithDefault to the 
    public interface and document the mechanism.  It think that this,
    in the long run is not as good as the proposed refactor since 
    it adds extra complexity for the "search children first or last"
    behavior choice.  It's just clunky the way it is, IMHO.

In any case, the Resource finding mechanism in Twisted is very
clever, and I'm using my PathArgs *alot* so I'd like a solution
so that my requirements don't require a breaking the public
interface.  Ohh, and to answer:

On Thu, Feb 27, 2003 at 05:51:02PM +0100, Mario Ruggier wrote:
| A source of confusion for me is knowing which,
| and when, specific methods are called automatically.
| Particularly, it would be nice to have a clarification (in the
| API docs) of when the methods getChildForRequest() and
| getChildWithDefault() are called -- they seem not be called in
| a non-siteroot resource. Things worked well with PathArgs, it
| being set as root resource, but for an arbitrary resource,
| like the example I previoulsy included, the game seems to
| change .

getChildWithDefault is infact called on non-siteroot resources,
so the current code for PathArgs will work at any level... albeit
a violation of the private/public encapsulation.  But yes, the
overall mechanism (by having a 3rd wheel) is less than ideal.

Best,

Clark



From corydodt at yahoo.com  Fri Feb 28 13:53:06 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 28 Feb 2003 10:53:06 -0800 (PST)
Subject: [Twisted-Python] Re: Fixes for windows installer
Message-ID: <20030228185306.45742.qmail@web10008.mail.yahoo.com>

I like where this is going, and I certainly have no complaints about
dumping shortcut.py, but could you please review a few things before I
commit this:

* Putting install-script into setup.cfg makes your change visible to
everyone who's building a distribution of Twisted.  As you pointed out
yourself, you can't use install-script without distutils 1.0.3, and
Twisted has to support pythons 2.1 and 2.2.  Will this config parameter be
ignored by setup.py when building a Twisted install on distutils <1.0.3 or
will it cause an error?

* You made this change to the test I use for isWinNT:
-    if platform.isWinNT():
-        return os.path.join(os.getenv("SYSTEMROOT"), 
-                            "system32", "shell32.dll")
+    # If SYSTEMROOT is not found (on Win98), guess the name
+    # of the windows directory
+    isNT = 0
+    try:
+        get_special_folder_path("CSIDL_COMMON_PROGRAMS")
+        isNT = 1
+    except OSError: # probably Win98
+        pass

Is the implementation of platform.isWinNT() broken?  If so, I'd rather you
patched it there.  If not, I'd rather keep using it.

* Most important thing: test_postinstall doesn't work with this patch,
because create_shortcut and get_special_folder_path appear to be magical
builtins installed by distutils.  I'll be happy to rewrite the test if you
can point me to the right place to import this code when it's not
available as a builtin.


__________________________________________________
Do you Yahoo!?
Yahoo! Tax Center - forms, calculators, tips, more
http://taxes.yahoo.com/



From theller at python.net  Fri Feb 28 14:40:42 2003
From: theller at python.net (Thomas Heller)
Date: 28 Feb 2003 20:40:42 +0100
Subject: [Twisted-Python] Re: Fixes for windows installer
References: <20030228185306.45742.qmail@web10008.mail.yahoo.com>
Message-ID: <7kbkb3d1.fsf@python.net>

Cory Dodt <corydodt at yahoo.com> writes:

> I like where this is going, and I certainly have no complaints about
> dumping shortcut.py, but could you please review a few things before I
> commit this:
> 
> * Putting install-script into setup.cfg makes your change visible to
> everyone who's building a distribution of Twisted.  As you pointed out
> yourself, you can't use install-script without distutils 1.0.3, and
> Twisted has to support pythons 2.1 and 2.2.  Will this config parameter be
> ignored by setup.py when building a Twisted install on distutils <1.0.3 or
> will it cause an error?

I think it will raise an error. Feel free to remove it again. 

(Another approach would be to handle it programatically in the setup.py
script, you can somehow find out whether it is supported or not, and in
the former case pass it through the options parameter).

> 
> * You made this change to the test I use for isWinNT:
> -    if platform.isWinNT():
> -        return os.path.join(os.getenv("SYSTEMROOT"), 
> -                            "system32", "shell32.dll")
> +    # If SYSTEMROOT is not found (on Win98), guess the name
> +    # of the windows directory
> +    isNT = 0
> +    try:
> +        get_special_folder_path("CSIDL_COMMON_PROGRAMS")
> +        isNT = 1
> +    except OSError: # probably Win98
> +        pass
> 
> Is the implementation of platform.isWinNT() broken?  If so, I'd rather you
> patched it there.  If not, I'd rather keep using it.

I don't think it is broken. But we're not interested if this is NT or
not, we only try to find shell32.dll.  And I wanted to remove the
requirement that win32all be installed for full functionality if the
installer only (actually that's the reason I integrated them in
bdist_wininst).

> 
> * Most important thing: test_postinstall doesn't work with this patch,
> because create_shortcut and get_special_folder_path appear to be magical
> builtins installed by distutils.  I'll be happy to rewrite the test if you
> can point me to the right place to import this code when it's not
> available as a builtin.

These are builtin commands in the bdist_wininst stub used to create the
installer. AFAIK, there's no way to access them from somewhere else ;-(
You could, of course, simulate them for the test stuff in Python with
win32all, you could even look up the C sources in
http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/python/python/dist/src/PC/bdist_wininst/install.c
look for the CreateShortcut function.

Thomas




From tjacobs at kinematic.com  Fri Feb 28 19:02:19 2003
From: tjacobs at kinematic.com (Thad Jacobs)
Date: Fri, 28 Feb 2003 16:02:19 -0800
Subject: [Twisted-Python] Automatically refresh imported module from source
Message-ID: <D1A1551B3520D51186B300508B1278FE367EC9@FS2>

Hello All,

My name is Thaddeus, and I am new to both Python and Twisted (I found out
about the language and platform yesterday).  I am doing some experimentation
to see how Twisted would benefit our organization.  So far Python blows
every other language I've seen out of the water, in terms of efficiency and
low cost of change.

What I'd like to know is if there is a way to modify the way twisted web
handles requests from within RPY scripts to external py modules.  If I
modify the py module while twisted web is running, I would like to see
subsequent Import requests to that module reference the newly saved version.
I realize that TwistedWeb must be caching the imported modules so future
requests don't require it to re-read from file, but it would seem that it
should at least check the modules modified date to make sure it still has a
current copy whenever the module is requested.

Here's the source for an example that demonstrates my point:

#Begin Test.rpy

from twisted.web import resource
import TestModule

class MyResource(resource.Resource):
	def render(self, request):
		return TestModule.SayHello()

resource = MyResource()

#End Test.rpy

#Begin TestModule.py

def SayHello():
    return "Hello World!!!"

#End Testmodule.py


If I point my browser to test.rpy, "Hello World!!!" is displayed.  This is
great so far.

But when I open up pythonwin, and modify TestModule.py to the following:

#Begin TestModule.py

def SayHello():
    return "Wazzaaap World??!!!"

#End Testmodule.py
 

And I hit refresh on my browser, "Hello World!!!" still displays.  It is not
until I stop and restart the web server that the change is reflected, and I
am greeted with the revised verbeage.

Must I bring the web server down, every time a make a simple change to an
external module?  There's gotta be a way around this.  The main reason I'm
looking into this platform is to decrease cost of change.

Please let me know,

Thaddeus Jacobs
IT Developer
Kinematic Automation, Inc.
mailto:tjacobs at kinematic.com







From radix at twistedmatrix.com  Fri Feb 28 21:32:47 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 28 Feb 2003 21:32:47 -0500
Subject: [Twisted-Python] Automatically refresh imported module from source
In-Reply-To: <D1A1551B3520D51186B300508B1278FE367EC9@FS2>
References: <D1A1551B3520D51186B300508B1278FE367EC9@FS2>
Message-ID: <20030301023247.GC10282@radii>

On Fri, Feb 28, 2003 at 04:02:19PM -0800, Thad Jacobs wrote:
> 
> I realize that TwistedWeb must be caching the imported modules so future
> requests don't require it to re-read from file, but it would seem that it
> should at least check the modules modified date to make sure it still has a
> current copy whenever the module is requested.

Nah, twisted.web doesn't do that, Python does. Python never
re-executes a module unless it's explicitly told to; the cache is in
`sys.modules'. And also, it would not be good if twisted.web checked
to reload the modules every time - that would hurt performance when
it's not really needed - you only really need it during development.

> Here's the source for an example that demonstrates my point:
> 
> #Begin Test.rpy
> 
> from twisted.web import resource
> import TestModule

Right here, just insert `reload(TestModule)' -- when you're in active
development. Just take it out after you're ready to deploy.

One caveat is if you have persistent objects that aren't re-created
from the .rpy on every request, `reload' won't update them. If that is
your case (which it isn't in your example), you should use
twisted.python.rebuild.

  from twisted.python.rebuild
  rebuild.rebuild(TestModule)

rather rather reload(TestModule).


> class MyResource(resource.Resource):
> 	def render(self, request):
> 		return TestModule.SayHello()
> 
> resource = MyResource()
> 
> #End Test.rpy
> 
> #Begin TestModule.py
> 
> def SayHello():
>     return "Hello World!!!"
> 
> #End Testmodule.py
> 


HTH.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From exarkun at intarweb.us  Fri Feb 28 23:20:00 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 28 Feb 2003 23:20:00 -0500
Subject: [Twisted-Python] [OT] Make Python Faster
Message-ID: <20030301042000.GA22038@meson.dyndns.org>

  Skip Montanaro has an xmlrpc server set up to collect information on
Python byte code occurrence frequencies.  With data from enough sources, some
useful information about optimizations that can be made to Python might be
extracted.

  Attached is a patch that causes twistd to spill its guts onto his server
when it shuts down.  It requires an interpreter with sys.getdxp, which is
only available if Python is built with DYNAMIC_EXECUTION_PROFILE, and
optionally DXPAIRS, defined (it won't break anything if getdxp isn't
available, it just won't work).  There is an "email" field required, which I
have left as a generic string - please set it to an actual email by which
you can be contacted if you intend to use it.

  I don't propose this for inclusion with Twisted, but if anyone wants to
apply it to their local copy and run real apps with it, it would be helpful
to Python, and I'm sure Skip would appreciate the extra data points.

  For the record, I'm currently running my instances of Twisted.mail and
Twisted.names with this, and I'll probably set up my Pynfo bot to use it as
well.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
-- 
 up 20 days, 8:29, 10 users, load average: 0.24, 0.33, 0.37
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030228/7730bded/attachment.pgp 

From exarkun at intarweb.us  Fri Feb 28 23:27:48 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 28 Feb 2003 23:27:48 -0500
Subject: [Twisted-Python] [OT] Make Python Faster
In-Reply-To: <20030301042000.GA22038@meson.dyndns.org>
References: <20030301042000.GA22038@meson.dyndns.org>
Message-ID: <20030301042748.GA22127@meson.dyndns.org>

On Fri, Feb 28, 2003 at 11:20:00PM -0500, Jp Calderone wrote:

  Helps to attach the file.

  Jp

-- 
 up 20 days, 8:29, 10 users, load average: 0.24, 0.33, 0.37
-------------- next part --------------
Index: twistd.py
===================================================================
RCS file: /cvs/Twisted/twisted/scripts/twistd.py,v
retrieving revision 1.38
diff -u -r1.38 twistd.py
--- twistd.py	1 Mar 2003 04:03:28 -0000	1.38
+++ twistd.py	1 Mar 2003 04:06:12 -0000
@@ -1,4 +1,4 @@
-# Twisted, the Framework of Your Internet
+
 # Copyright (C) 2001 Matthew W. Lefkowitz
 #
 # This library is free software; you can redistribute it and/or
@@ -439,6 +439,7 @@
             log.msg("Failed to unlink PID file:")
             log.deferr()
     log.msg("Server Shut Down.")
+    report(application)
 
 
 def run():
@@ -455,3 +456,32 @@
         os._exit(1)
 
     runApp(config)
+    
+
+def rle(l):
+    import types
+    newl = []
+    lastel = None
+    count = 0
+    for elt in l:
+        if elt == lastel:
+            count = count + 1
+            continue
+        elif lastel is not None:
+            if isinstance(lastel, types.ListType):
+                lastel = rle(lastel)
+            newl.append([lastel, count])
+        lastel = elt
+        count = 1
+    if isinstance(lastel, types.ListType):
+        lastel = rle(lastel)
+    newl.append([lastel, count])
+    return newl
+
+def report(app):
+    email = 'your at email.address'
+    if hasattr(sys, 'getdxp') and app.processName:
+        import xmlrpclib
+        dxp = xmlrpclib.ServerProxy("http://manatee.mojam.com:7304")
+        dxp.add_dx_info(app.processName, email, sys.version_info[:3], rle(sys.getdxp()))
+        log.msg('Reported dxp results')
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030228/c259ccb4/attachment.pgp 

From lafou at wanadoo.fr  Fri Feb 28 13:31:48 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: Fri, 28 Feb 2003 19:31:48 +0100
Subject: [Twisted-Python] GtkWindow
Message-ID: <b3o9v3$is2$1@main.gmane.org>

hello

I have a pb (the same as the thread "Gtk version" when I try to run manhole:


"
Traceback (most recent call last):
  File "/usr/bin/manhole", line 33, in ?
    from twisted.scripts import manhole
  File "/usr/lib/python2.2/site-packages/twisted/scripts/manhole.py", line 
23, in ?
    from twisted.spread.ui import gtkutil
  File "/usr/lib/python2.2/site-packages/twisted/spread/ui/gtkutil.py", line 
62, in ?
    class GetString(gtk.GtkWindow):
AttributeError: 'module' object has no attribute 'GtkWindow'
"

And if I look at the official page of PyGtk 
(http://www.daa.com.au/~james/software/pygtk/index.html)
I found this exemple :

[...]
window = gtk.Window(gtk.WINDOW_TOPLEVEL) # create a top level window
[...]

manhole pygtk seems to be outdated !

any idea ?
thx




From tv at twistedmatrix.com  Fri Feb 28 13:03:32 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 28 Feb 2003 20:03:32 +0200
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226210657.GB23608@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com> <20030226195031.GA21673@meson.dyndns.org> <20030226210657.GB23608@doublegemini.com>
Message-ID: <20030228180332.GC11190@lapdog>

On Wed, Feb 26, 2003 at 09:06:57PM +0000, Clark C. Evans wrote:
> The files that I need to serve up are quite big (some are a meg or more),
> and it would be bad to block other resources while the file loads into
> memory via file.read() or for the time it takes for the client to 
> completely consume the file.

	If file loading is too slow, buy some more memory. Keeping
	hundreds of megs of files in RAM is standard procedure for
	any sane operating system these days. Let it worry about
	keeping the file access fast.

	It should (and AIUI will) be served to the client
	chunk-by-chunk, processing other tasks between the reads.

> |   BTW, deferring to a thread would not be the way to go.  Something similar
> | to twisted.spread.util.Pager would probably be appropriate, or maybe
> | something that implements IProducer.  Or maybe just a chain of Deferreds :)
> | No need to go into threads for this, though.

	(sorry for responding to doublequoted text)

	Oh, python threads may not the low-level enough to actually
	help with disk IO (on Linux, atleast). Don't know if they are
	or are not.. Avoiding blocking on disk IO needs a separate
	process context in the kernel, userspace threading will not
	help.


> Is this the Jist of it?  It still has the problem that file.read 
> is a blocking call; I suppose for unix platforms you could use
> "poll()" to not block.  This is probably resonable; on the server
> side you don't block, while for desktop windows clients it blocks.

	poll() or select() won't work in file access, files block always
	unless you use AIO or something like that. Sorry.

	If you are that worried about performance, type "c10k" into
	google and start writing C. Nothing else will really help;
	file access only becomes a bottleneck _after_ you've done all
	the other things suggested at c10k.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Fri Feb 28 12:52:48 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 28 Feb 2003 19:52:48 +0200
Subject: [Twisted-Python] Patch for tap.ftp to add username and password options
In-Reply-To: <00d401c2ddd2$c96c16d0$877ba8c0@tesla>
References: <20030225123525.17019.1822.Mailman@pyramid.twistedmatrix.com> <00d401c2ddd2$c96c16d0$877ba8c0@tesla>
Message-ID: <20030228175248.GB11190@lapdog>

On Wed, Feb 26, 2003 at 12:08:01PM -0800, Amir Bakhtiar wrote:
> This patch allows username and password pairs to be defined.
> e.g. mktap ftp -uamir -pfoo
>        mktap ftp -uamir:glyph -pfoo:bar

	Eww.

	1) It should be a twisted.cred thing.

	2) Don't put password on the command line, ever.

	3) Ignoring the above, -u amir:foo -u glyph:bar would make
	   much more sense.

-- 
:(){ :|:&};:



From achim at procoders.net  Sat Feb  1 08:31:32 2003
From: achim at procoders.net (Achim Domma)
Date: Sat, 1 Feb 2003 16:31:32 +0100
Subject: [Twisted-Python] Webchat
In-Reply-To: <3E3B2DBD.1060904@webaccess.mozquito.com>
Message-ID: <FCEMIEFBFOIDAOJDEPIAOEBPEJAA.achim@procoders.net>

> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Stefano
> Debenedetti
> Sent: Saturday, February 01, 2003 03:15
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Webchat
>
>
> Andrew Bennetts wrote:
> > But yes, with Twisted Web, you get alot of control over how you
> respond to
> > requests, including the ability to keep them open and feed new
> data to them
> > occasionally.
>
> interesting, it would be nice to see an example of this...

That's exactly what I'm looking for, so I'm also very interested in a short
exmple.

Achim




From toni at soth.at  Sat Feb  1 08:56:13 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Sat, 1 Feb 2003 16:56:13 +0100
Subject: [Twisted-Python] twisted.internet.udp woes
Message-ID: <20030201155613.GA33563@outpost.soth.at>

While running doc/examples/echoserv.py:

Traceback (most recent call last):
  File "echoserv.py", line 45, in ?
    app.run(save=0)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 667, in run
    self.bindPorts()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 631, in bindPorts
    reactor.listenUDP(port, factory, interface, maxPacketSize)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 172, in listenUDP
    p.startListening()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/udp.py", line 74, in startListening
    self._connectToProtocol()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/udp.py", line 88, in _connectToProtocol
    self.protocol.makeConnection(self)
AttributeError: Factory instance has no attribute 'makeConnection'

This happens with release-1_0_2 and the latest CVS code.

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From twisted at itamarst.org  Sat Feb  1 09:39:08 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 1 Feb 2003 11:39:08 -0500
Subject: [Twisted-Python] twisted.internet.udp woes
In-Reply-To: <20030201155613.GA33563@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at>
Message-ID: <20030201113908.722d215a.twisted@itamarst.org>

listenUDP does not accept factories. I'll add an assert to test for
this. until then, read the docs - twistedmatrix.com/documents/howto/udp

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From toni at soth.at  Sat Feb  1 10:36:45 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Sat, 1 Feb 2003 18:36:45 +0100
Subject: [Twisted-Python] twisted.internet.udp woes
In-Reply-To: <20030201113908.722d215a.twisted@itamarst.org>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org>
Message-ID: <20030201173645.GA68943@outpost.soth.at>

Itamar Shtull-Trauring wrote on Sat, Feb 01 2003 (11:39:08 -0500):
> listenUDP does not accept factories. I'll add an assert to test for
> this. until then, read the docs - twistedmatrix.com/documents/howto/udp

Thanks for the explanation.

However, doc/examples/echoserv_ssl.py fails with another error.
It looks like internet.tcp.Connection methods get called instead of
internet.ssl.Connection methods:

Traceback (most recent call last):
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 675, in run
    main.run(installSignalHandlers=installSignalHandlers)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/main.py", line 106, in run
    _getReactor().run()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 97, in doRead
    data = self.socket.recv(self.bufferSize)
SSL.WantReadError: 
Traceback (most recent call last):
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/app.py", line 675, in run
    main.run(installSignalHandlers=installSignalHandlers)
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/main.py", line 106, in run
    _getReactor().run()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 463, in doSelect
    selectable.connectionLost(failure.Failure(why))
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 136, in connectionLost
    self._closeSocket()
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 128, in _closeSocket
    self.socket.shutdown(2)
exceptions.TypeError: shutdown() takes exactly 0 arguments (1 given)

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From tv at twistedmatrix.com  Sun Feb  2 05:34:21 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 2 Feb 2003 14:34:21 +0200
Subject: [Twisted-Python] Webchat
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
Message-ID: <20030202123421.GB23762@lapdog>

On Fri, Jan 31, 2003 at 09:41:15PM +0100, Achim Domma wrote:
> I'm new to Twisted an want to understand a little bit more what it can do
> for me. I have implemented a webchat using the asyncore module. If a user
> logs in, he will the redirected to a frameset. The top frame contains the
> 'room view' and is in fact an endless page, so the connection has to be
> keept alive as long as the user is logged in. The bottom frame contains the
> input form. It posts a message to the server and the message is written to
> the open connections of all users in the room.
> 
> Could somebody explain me, if such an architecture is possible with Twisted,
> and what might be the benefits compared to using raw asyncore. If possible a
> very rought roadmap how to begin would also be very helpfull.

	Ldaptor includes functionality to stream LDAP search results one-by-one
	to a web page, as they are received from the LDAP server. This is pretty
	much equal to what your "room view" frame does. Twisted.web, no Woven
	used as this code predates Woven.

	See ldaptor.apps.webui.search.LDAPSearchEntry.handle_entry(), especially
	what is does to self.contentDeferred. You can browse the code
	on the web at

http://ldaptor.bkbits.net:8080/ldaptor/anno/lib/ldaptor/apps/webui/search.py at 1.20?nav=index.html|src/|src/lib|src/lib/ldaptor|src/lib/ldaptor/apps|src/lib/ldaptor/apps/webui

-- 
:(){ :|:&};:



From grimmtooth at softhome.net  Sun Feb  2 10:20:51 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sun, 2 Feb 2003 12:20:51 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
Message-ID: <00d601c2cadf$6f606020$6501a8c0@listy>

Relatively new twisted user here :-)

I'm a little confused about how to use the win32eventreactor in place of
the default. The default on W32 platforms doesn't have the
ProcessProtocol support implemented yet, but according to the docs the
win32eventreactor does.

Here's what I need to do:  I want to listen on one or more ports for
connections; when connections are made, I want to connect these
connections with programs designed to handle the connection in question,
i.e. if it's telnet I want to connect the session with a login program
and proceed from there. 

I haven't gotten that far yet but from what I've seen so far I *think* I
will need to support the ProcessProtocol and tie the telnet to it.  I
could be wrong on this but I'm trying to think ahead.

So back to win32eventreactor; imply using .install() doesn't get me the
ability to use the ProcessProtocol. So I tried replacing the default
reactor with win32eventreactor completely; I got errors regarding
connectTCP when I did this.

So I'm stumped for the moment. I'm sure I'm making some very simple
mistake somewhere. A gentle shove in the right direction would be
greatly appreciated.

Oh, and to the twisted team, compliments on the package. It's wonderful.




From twisted at itamarst.org  Sun Feb  2 11:23:19 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 2 Feb 2003 13:23:19 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <00d601c2cadf$6f606020$6501a8c0@listy>
References: <00d601c2cadf$6f606020$6501a8c0@listy>
Message-ID: <20030202132319.2e7651ea.twisted@itamarst.org>

On Sun, 2 Feb 2003 12:20:51 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> So back to win32eventreactor; imply using .install() doesn't get me
> the ability to use the ProcessProtocol. 

Yes it does. Once you've installed it you can
"reactor.spawnProcess(...)".

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From radix at twistedmatrix.com  Sun Feb  2 11:54:25 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 2 Feb 2003 13:54:25 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <00d601c2cadf$6f606020$6501a8c0@listy>
References: <00d601c2cadf$6f606020$6501a8c0@listy>
Message-ID: <20030202185425.GA5379@radii>

On Sun, Feb 02, 2003 at 12:20:51PM -0500, Jeff Grimmett wrote:
> I'm a little confused about how to use the win32eventreactor in place of
> the default. The default on W32 platforms doesn't have the
> ProcessProtocol support implemented yet, but according to the docs the
> win32eventreactor does.
> 
> Here's what I need to do:  I want to listen on one or more ports for
> connections; when connections are made, I want to connect these
> connections with programs designed to handle the connection in question,
> i.e. if it's telnet I want to connect the session with a login program
> and proceed from there. 

btw, I don't know anything about win32 stuff, but Twisted has an inetd
implementation that does exactly this. It'd be cool to have it work on
win32 :-) See twisted.runner.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From grimmtooth at softhome.net  Sun Feb  2 12:42:43 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sun, 2 Feb 2003 14:42:43 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <20030202132319.2e7651ea.twisted@itamarst.org>
Message-ID: <00ed01c2caf3$419172b0$6501a8c0@listy>

> "Jeff Grimmett" <grimmtooth at softhome.net> wrote:
> 
> > So back to win32eventreactor; imply using .install() doesn't get me 
> > the ability to use the ProcessProtocol.
> 
> Yes it does. Once you've installed it you can 
> "reactor.spawnProcess(...)".

I was getting NotImplementedError when I tried that. I'll have to give
it another try later on. Film at 11.





From grimmtooth at softhome.net  Sun Feb  2 13:33:17 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sun, 2 Feb 2003 15:33:17 -0500
Subject: [Twisted-Python] Using win32eventreactor (newbie alert)
In-Reply-To: <20030202185425.GA5379@radii>
Message-ID: <00ee01c2cafa$51f80a40$6501a8c0@listy>

> btw, I don't know anything about win32 stuff, but Twisted has 
> an inetd implementation that does exactly this. It'd be cool 
> to have it work on win32 :-) See twisted.runner.

Had a looksee. Peering into the source for runner.inetd.py, looks like
it uses os.fork(), which isn't supported on W32. Would solve a lot of
problems it it were :-)




From acapnotic at twistedmatrix.com  Sun Feb  2 14:22:00 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 02 Feb 2003 13:22:00 -0800
Subject: [Twisted-Python] gtk2reactor and 1.99.14
Message-ID: <1044220918.30388.11.camel@troglodyte.funhouse>

Today I upgraded my pygtk to 1.99.14, and today my gtk2 application
stopped working.  I was trying to log in to PB, and it was going well,
but the deferred for the remote "username" call in pb.authIdentity never
gets triggered.  You can sniff the connection and see the challenge come
back over the wire, but the callback simply never goes, the client never
does pb._cbRespondToChallenge.

Some tests hang too, try the test_tcp module in particular.

-- 
The moon is new, 1.4% illuminated, 1.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030202/3548b7d6/attachment.sig>

From garth at netapp.com  Sun Feb  2 13:58:32 2003
From: garth at netapp.com (Garth Kidd)
Date: Mon, 3 Feb 2003 07:58:32 +1100
Subject: [Twisted-Python] Doc patch
Message-ID: <000101c2cafd$d9541c60$0601010a@gkiddxp2>

Got a wee doc patch for you, based on my experimentation so far: 

Index: doc/howto/defer.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/defer.html,v
retrieving revision 1.29
diff -c -r1.29 defer.html
*** doc/howto/defer.html        12 Dec 2002 08:04:15 -0000      1.29
--- doc/howto/defer.html        1 Feb 2003 07:13:29 -0000
***************
*** 117,122 ****
--- 117,126 ----
  reactor.run()
  </pre>

+ <p>(Note that if you save this to a file and run it, <em>nothing will
+ happen</em>. There's no code to let the reactor know about the getter,
+ and no code to call <code>gotResult</code>.)</p>
+
  <h3>Visual Explanation</h3>

  <div hlint="off" align="center">
Index: doc/howto/plugin.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/plugin.html,v
retrieving revision 1.22
diff -c -r1.22 plugin.html
*** doc/howto/plugin.html       12 Nov 2002 06:06:46 -0000      1.22
--- doc/howto/plugin.html       1 Feb 2003 07:13:33 -0000
***************
*** 364,371 ****
  <a href="listings/TwistedQuotes/plugins.tml"
class="py-listing">Twisted Quotes
  Plug-in registration</a>

! <p>Now the QOTD server is ready to be instantiated!  Let's start up a
server
! and get a quote from it.</p>

  <pre class="shell">
  % mktap qotd
--- 364,386 ----
  <a href="listings/TwistedQuotes/plugins.tml"
class="py-listing">Twisted Quotes
  Plug-in registration</a>

! <p>You may be wondering <em>how</em> mktap finds it. The answer can be
found
! with a little digging in
<code>twisted.python.plugin.getPluginFileList</code>:
! by recursing through subdirectories of <code>sys.path</code> looking
for
! files named <code>plugins.tml</code>. So, if you put
<code>plugins.tml</code>
! in <code>TwistedQuotes/</code>, <code>mktap</code> will find it. Or,
if you
! put it in your current directory like I did the first time,
<code>mktap</code>
! will rightly complain:</p>
!
! <pre class="shell">
! $ mktap qotd
! Unknown command: qotd
! Usage:    mktap [options] &lt;command&gt; [command options]
! ...
! </pre>
!
! <p>Assuming <code>plugins.tml</code> is in the right place, the QOTD
server
! is ready to be instantiated!  Let's start up a server and get a quote
from it.</p>

  <pre class="shell">
  % mktap qotd




From simon at obsidian.com.au  Mon Feb  3 00:57:50 2003
From: simon at obsidian.com.au (Simon Hookway)
Date: 03 Feb 2003 18:57:50 +1100
Subject: [Twisted-Python] Re: using auth over SSL with PB.
Message-ID: <1044259066.1219.17.camel@locutus.medomain.com>

Hi all,

I couldn't find any docs on using pb connections over SSL, so i played
around with using getObjectAtSSL and then using the logIn but can't seem
to get it working. tcpdump shows the connection initiating but nothing
happens after the initial packets.

Here is the bit of code i was using:

from twisted.spread import pb
from twisted.internet import defer,ssl

def connectSSL(host, port, username, password, serviceName,
               perspectiveName=None, client=None, timeout=None):
    d = defer.Deferred()   
    pb.getObjectAtSSL(host, port, ssl.ClientContextFactory(),
                      timeout).addCallbacks(
        pb._connGotRoot, d.errback, 
        callbackArgs=[d, client, serviceName,
                      username, password, perspectiveName])
    return d

Of course, i also edited getObjectAtSSL to include the ctx and pass it 
to the reactor.connectSSL

Cheers,

-- 
Simon Hookway <simon at obsidian.com.au>
Obsidian Consulting
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030203/3725e228/attachment.sig>

From toni at soth.at  Mon Feb  3 05:14:02 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Mon, 3 Feb 2003 13:14:02 +0100
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030201173645.GA68943@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at>
Message-ID: <20030203121402.GA74072@outpost.soth.at>

Toni Anđelković wrote on Sat, Feb 01 2003 (18:36:45 +0100):
> However, doc/examples/echoserv_ssl.py fails with another error.
> It looks like internet.tcp.Connection methods get called instead of
> internet.ssl.Connection methods:

Just getting my feet wet with Twisted, so i can't provide you
with a detailed analysis for now. As far as i've seen this line
is being called twice:

> --- <exception caught here> ---
>   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 450, in doSelect
>     why = getattr(selectable, method)()

which are

<bound method Port.doRead of <twisted.internet.protocol.Factory on 8000>>
<bound method Server.doRead of <Echo #0 on 8000>>

The first call does the accept() and works (server certificate is
transferred), but the second fails. 

I am unable to deduce why tcp.Connection.doRead is being called
instead of ssl.Connection.doRead; either it is acquired along some
inheritance path from protocol.Protocol (?!), or this call gets
delegated to tcp.Connection.doRead elsewhere.

>   File "/usr/local/lib/python2.2/site-packages/twisted/internet/tcp.py", line 97, in doRead
>     data = self.socket.recv(self.bufferSize)
> SSL.WantReadError: 

This is clear, since tcp.Connection.doRead does not expect a
OpenSSL.SSL.Connection object. The same holds true for
tcp.Connection.shutdown.

diff -u -U1 -r1.34 ssl.py
--- internet/ssl.py     1 Feb 2003 17:46:03 -0000       1.34
+++ internet/ssl.py     3 Feb 2003 12:00:11 -0000
@@ -256,3 +256,3 @@
 
-        This accepts a connection and callse self.protocol() to handle the
+        This accepts a connection and calls self.protocol() to handle the
         wire-level protocol.

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From andrew-twisted at puzzling.org  Mon Feb  3 05:53:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 3 Feb 2003 23:53:33 +1100
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030203121402.GA74072@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at> <20030203121402.GA74072@outpost.soth.at>
Message-ID: <20030203125333.GE22164@frobozz.local>

On Mon, Feb 03, 2003 at 01:14:02PM +0100, Toni Andjelkovic wrote:
> Toni An?elkovi? wrote on Sat, Feb 01 2003 (18:36:45 +0100):

[..snip SSL woes I don't understand..]

> 
> diff -u -U1 -r1.34 ssl.py
> --- internet/ssl.py     1 Feb 2003 17:46:03 -0000       1.34
> +++ internet/ssl.py     3 Feb 2003 12:00:11 -0000
> @@ -256,3 +256,3 @@
>  
> -        This accepts a connection and callse self.protocol() to handle the
> +        This accepts a connection and calls self.protocol() to handle the
>          wire-level protocol.

Applied.  Thanks!

-Andrew.




From toni at soth.at  Mon Feb  3 07:14:55 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Mon, 3 Feb 2003 15:14:55 +0100
Subject: [Twisted-Python] twisted.internet.udp woes
In-Reply-To: <20030201113908.722d215a.twisted@itamarst.org>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org>
Message-ID: <20030203141455.GA74443@outpost.soth.at>

Itamar Shtull-Trauring wrote on Sat, Feb 01 2003 (11:39:08 -0500):
> listenUDP does not accept factories. I'll add an assert to test for
> this. until then, read the docs - twistedmatrix.com/documents/howto/udp

Here's a patch for doc/examples/echoserv.py, according to the
docs:

Index: echoserv.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/echoserv.py,v
retrieving revision 1.7
diff -u -U1 -r1.7 echoserv.py
--- echoserv.py 20 Jul 2002 13:30:44 -0000      1.7
+++ echoserv.py 3 Feb 2003 14:05:08 -0000
@@ -17,4 +17,3 @@
 
-from twisted.internet.protocol import Protocol, Factory
-from twisted.internet import udp
+from twisted.internet.protocol import Protocol, DatagramProtocol, Factory
 
@@ -24,7 +23,14 @@
 
-class Echo(Protocol):
+class EchoTCP(Protocol):
     def dataReceived(self, data):
         "As soon as any data is received, write it back."
+        print "received %r from %s" % (data, self.transport.getPeer())
         self.transport.write(data)
 
+class EchoUDP(DatagramProtocol):
+    def datagramReceived(self, data, peer):
+        "As soon as any data is received, write it back."
+        print "received %r from %s" % (data, peer)
+        self.transport.write(data, peer)
+
 ### Persistent Application Builder
@@ -40,6 +46,6 @@
     factory = Factory()
-    factory.protocol = echoserv.Echo
+    factory.protocol = echoserv.EchoTCP
     app = Application("echo")
     app.listenTCP(8000,factory)
-    app.listenUDP(8000, factory)
+    app.listenUDP(8000, echoserv.EchoUDP())
     app.save("start")

Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From exarkun at intarweb.us  Mon Feb  3 08:52:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 3 Feb 2003 10:52:57 -0500
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030203121402.GA74072@outpost.soth.at>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at> <20030203121402.GA74072@outpost.soth.at>
Message-ID: <20030203155257.GB12205@meson.dyndns.org>

On Mon, Feb 03, 2003 at 01:14:02PM +0100, Toni Andjelkovic wrote:
> Toni An?elkovi? wrote on Sat, Feb 01 2003 (18:36:45 +0100):
> > However, doc/examples/echoserv_ssl.py fails with another error.
> > It looks like internet.tcp.Connection methods get called instead of
> > internet.ssl.Connection methods:
> 
> Just getting my feet wet with Twisted, so i can't provide you
> with a detailed analysis for now. As far as i've seen this line
> is being called twice:
> 
> > --- <exception caught here> ---
> >   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 450, in doSelect
> >     why = getattr(selectable, method)()
> 
> which are
> 
> <bound method Port.doRead of <twisted.internet.protocol.Factory on 8000>>
> <bound method Server.doRead of <Echo #0 on 8000>>
> 
> The first call does the accept() and works (server certificate is
> transferred), but the second fails. 
> 
> I am unable to deduce why tcp.Connection.doRead is being called
> instead of ssl.Connection.doRead; either it is acquired along some
> inheritance path from protocol.Protocol (?!), or this call gets
> delegated to tcp.Connection.doRead elsewhere.
> 

   Pretty close - the inheritance structure was not-quite-correct :)  It
should be fixed now, thanks for the report and the ideas :)

   Jp

-- 
C/C++/Java/Perl/Python/Smalltalk/PHP/ASP/XML/Linux (User+Admin)
Genetic Algorithms/Genetic Programming/Neural Networks
Networking/Multithreading/Legacy Code Maintenance/OpenGL
See my complete resume at http://intarweb.us:8080/
-- 
 up 49 days, 19:50, 3 users, load average: 0.00, 0.05, 0.06
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030203/5545f8f0/attachment.sig>

From toni at soth.at  Mon Feb  3 10:03:23 2003
From: toni at soth.at (Toni Andjelkovic)
Date: Mon, 3 Feb 2003 18:03:23 +0100
Subject: [Twisted-Python] twisted.internet.ssl woes
In-Reply-To: <20030203155257.GB12205@meson.dyndns.org>
References: <20030201155613.GA33563@outpost.soth.at> <20030201113908.722d215a.twisted@itamarst.org> <20030201173645.GA68943@outpost.soth.at> <20030203121402.GA74072@outpost.soth.at> <20030203155257.GB12205@meson.dyndns.org>
Message-ID: <20030203170323.GA75098@outpost.soth.at>

Jp Calderone wrote on Mon, Feb 03 2003 (10:52:57 -0500):
>    Pretty close - the inheritance structure was not-quite-correct :)  It
> should be fixed now, thanks for the report and the ideas :)

It works now, thanks a lot. However, you added
ssl.Connection._closeSocket, which was already
there :-)



Index: twisted/internet/ssl.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/ssl.py,v
retrieving revision 1.36
diff -u -U1 -r1.36 ssl.py
--- twisted/internet/ssl.py     3 Feb 2003 15:39:54 -0000       1.36
+++ twisted/internet/ssl.py     3 Feb 2003 16:55:25 -0000
@@ -134,8 +134,9 @@
     def _closeSocket(self):
-        # For some reason, SSL.Connection's shutdown() method doesn't take a pa
rameter
+        """Called to close our socket."""
         try:
-            self.socket.shutdown()
+            self.socket.shutdown() # SSL_shutdown()
+            self.socket.close()
         except:
-            deferr.log()
-            
+            log.deferr()
+
     
@@ -189,9 +190,2 @@
             return main.CONNECTION_LOST
-
-    def _closeSocket(self):
-        """Called to close our socket."""
-        try:
-            self.socket.sock_shutdown(2)
-        except socket.error:
-            pass
 


Cheers,
-- 
Toni Andjelkovic
<toni at soth.at>




From corydodt at yahoo.com  Mon Feb  3 16:55:49 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 3 Feb 2003 15:55:49 -0800 (PST)
Subject: [Twisted-Python] (incorrect) code duplication in microdom
Message-ID: <20030203235549.62520.qmail@web10001.mail.yahoo.com>

I just noticed that microdom.Element.getElementsByTagName doesn't behave
like domhelpers.getElementsByTagName; that is, it's not recursive.  (This
is even documented in the method's docstring.)

Also, microdom.Document.getElementsByTagName has yet another
implementation, and this one is recursive, but incorrect.

*Neither of these implementations obeys w3c*, which
domhelpers.getElementsByTagName does.  It would be trivial to change both
to use that code instead of doing it on their own, but microdom doesn't
import domhelpers, and I assume this is intentional.

Should microdom import domhelpers and use that code?  We'll gain
correctness,  and maybe maintainability, but create a circular dependency.
 Alternately, the method could be moved into microdom as a top-level
function, which the respective methods use.  Domhelpers could import this
method into its own namespace, keeping everyone happy.


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From exarkun at intarweb.us  Mon Feb  3 17:06:51 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 3 Feb 2003 19:06:51 -0500
Subject: [Twisted-Python] Things I broke
Message-ID: <20030204000651.GA15519@meson.dyndns.org>

  Currently two pieces of code (that I can find) rely on app.listenTCP() to
bind to a unix socket if the port parameter is a string instead of an
integer.  This no longer works (and rightly so).  However, there is
currently no twisted.internet.app.Application.listenUNIX method.  Adding one
(along w/ connectUNIX) would solve the problem.  As would using the
listenWith method instead.

  I don't know what the thoughts on the portability of the methods in
Application are - is adding listen/connectUNIX appropriate?

  I feel a minor twinge at the thought of using listen/connectWith for this,
as twisted.internet.unix is an internal module, and it is probably wrong to
use such an internal module in one of the places (Twisted.web's tap's
--personal flag) and definitely wrong in the other
(doc/examples/silly-web.py).  These methods were intended for
connectors/ports not included with Twisted, not as a workaround for missing
api functionality.

  So... thoughts?

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-- 
 up 50 days, 3:50, 3 users, load average: 0.09, 0.10, 0.04
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030203/de215a61/attachment.sig>

From itamar at itamarst.org  Mon Feb  3 19:34:21 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 3 Feb 2003 21:34:21 -0500
Subject: [Twisted-Python] Things I broke
In-Reply-To: <20030204000651.GA15519@meson.dyndns.org>
References: <20030204000651.GA15519@meson.dyndns.org>
Message-ID: <20030203213421.0de50b45.itamar@itamarst.org>

On Mon, 3 Feb 2003 19:06:51 -0500
Jp Calderone <exarkun at intarweb.us> wrote:

>   I don't know what the thoughts on the portability of the methods in
> Application are - is adding listen/connectUNIX appropriate?

Yes.



From twisted at itamarst.org  Wed Feb  5 09:54:15 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 11:54:15 -0500
Subject: [Twisted-Python] Fw: Zope and Twisted
Message-ID: <20030205115415.76e750a3.twisted@itamarst.org>

This is the first email I got.

--------------------------------------------------------
Begin forwarded message:

Date: Tue, 4 Feb 2003 10:54:39 -0800
From: "Pierre Johnson" 
To: <itamar at zoteca.com>
Subject: Zope and Twisted


Hey Itamar,

I read your 9 Dec 2002 weblog entry. Agreed Zope 2 is kludge. However,
Twisted is kludge too. Say What?

Twisted does not conform well to the OSI model. Each layer should have
an
abstraction and implementation for whatever it is one wants to
implement.
Additionally, one need include a interfaces module that keeps interfaces
separate from implementation.

Here's some sketches about implementations, e.g.,

OSI.Network.py

    class NetworkLayer: # an abstraction

OSI.Network.IP.py

    import OSI.Network

    class IP(NetworkLayer):
         ...

OSI.Transport.py

    class TransportLayer:  #an abstraction
            ...

OSI.Transport.TCP.py

    import OSI.Transport
    import OSI.Network.IP

    class Transport.TCP(Transport, IP):
        ...
OSI.Session.py

    class SessionLayer: # an abstraction
      ...

OSI.Session.DNS.py

    import OSI.Transport.TCP
    import OSI.Network.IP
    import OSI.Session

    class DNS(Session, TCP, IP):
      ...

OSI.Application.py

   class ApplicationLayer: # an abstraction
      ...

OSI.Application.FTP.py

    import OSI.Transport.TCP
    import OSI.Network.IP
    import OSI.Session.DNS
    import OSI.Application

    class FTP(Application, DNS,TCP,IP)
       ...

This kind of abstraction schema allows for quicker programming than the
current Twisted schema as written by the so-called "abstraction
astronauts".
Bear in mind that this is a sketch and by no means the exact why I would
do
it.

Clearly, a perusal of the Twisted code demonstrates that Twisted does
not
separate transport from protocols or at least not cleanly.

Thanks for your time.

Pierre Johnson



From twisted at itamarst.org  Wed Feb  5 09:58:54 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 11:58:54 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
Message-ID: <20030205115854.20e10b39.twisted@itamarst.org>

This was my reply.

-----------------------------------------------------
Begin forwarded message:

Date: Tue, 4 Feb 2003 16:46:40 -0500
From: Itamar Shtull-Trauring <itamar at zoteca.com>
To: "Pierre Johnson" 
Subject: Re: Zope and Twisted


On Tue, 4 Feb 2003 10:54:39 -0800
"Pierre Johnson" wrote:

> Twisted does not conform well to the OSI model. Each layer should have
> an abstraction and implementation for whatever it is one wants to
> implement.

TCP/IP doesn't follow the OSI model. For example see
http://www.uwsg.iu.edu/usail/network/nfs/network_layers.html

> Additionally, one need include a interfaces module that keeps
> interfaces separate from implementation.

Have you seen twisted.internet.interfaces? Admittedly, not everything is
documented there, but we're getting there.

> OSI.Application.FTP.py
> 
>     import OSI.Transport.TCP
>     import OSI.Network.IP
>     import OSI.Session.DNS
>     import OSI.Application
> 
>     class FTP(Application, DNS,TCP,IP)
>        ...

All I can see from this is that you don't understand the meaning of the
word "transport" and "protocol", since that code combines them into one
class. Also that you don't really understand the way networking works
(DNS certainly should not be a mixin even if we do a bad design and
inherit from TCP).

Oh, and that python code is wrong (you want "from OSI.Transport import
TCP").

I would suggest that you do some real networking programming, then look
at Twisted again.



From twisted at itamarst.org  Wed Feb  5 09:59:31 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 11:59:31 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
Message-ID: <20030205115931.206ee6dc.twisted@itamarst.org>

This his reply to my answer.

-------------------------------------------------
Begin forwarded message:

Date: Tue, 4 Feb 2003 21:47:26 -0800
From: "Pierre Johnson" 
To: "Itamar Shtull-Trauring" <itamar at zoteca.com>
Subject: Re: Zope and Twisted


Itamar,

You didn't need to be a first-class, immature jackass as characterized
by
your response.

Perhaps I don't understand YOUR Twisted model of networking, which is
not
OSI compliant. The OSI model IS NETWORKING and all real Turing-based
computational systems that employ networking implement parts of the
model.
Perhaps YOU need to learn about the various layers of the model before
you
begin to bandy about the operationally defined words transport and
protocol.

Clearly, the folks at Twisted have their own meanings for transport and
protocol, which differ greatly from their KNOWN and ACCEPTED definitions
as
employed in the PROFESSIONAL programming world and the ACADEMIC
programming
world.

Incidentally, I was writing network-based applications when you were
still
in grade school.

I'll be sure to recommend to my Fortune 500 clients to not use a product
administered by essentially, immature children.




From elloyd at lancaster.lib.pa.us  Wed Feb  5 10:36:17 2003
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Wed, 5 Feb 2003 12:36:17 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205115931.206ee6dc.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <200302051236.17342.elloyd@lancaster.lib.pa.us>

Ouch, sounds like a bitch-slap to me...guess its time to make someone else our 
PR person ;-).

Eron

On Wednesday 05 February 2003 11:59 am, Itamar Shtull-Trauring wrote:
> This his reply to my answer.
>
> -------------------------------------------------
> Begin forwarded message:
>
> Date: Tue, 4 Feb 2003 21:47:26 -0800
> From: "Pierre Johnson"
> To: "Itamar Shtull-Trauring" <itamar at zoteca.com>
> Subject: Re: Zope and Twisted
>
>
> Itamar,
>
> You didn't need to be a first-class, immature jackass as characterized
> by
> your response.
>
> Perhaps I don't understand YOUR Twisted model of networking, which is
> not
> OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> computational systems that employ networking implement parts of the
> model.
> Perhaps YOU need to learn about the various layers of the model before
> you
> begin to bandy about the operationally defined words transport and
> protocol.
>
> Clearly, the folks at Twisted have their own meanings for transport and
> protocol, which differ greatly from their KNOWN and ACCEPTED definitions
> as
> employed in the PROFESSIONAL programming world and the ACADEMIC
> programming
> world.
>
> Incidentally, I was writing network-based applications when you were
> still
> in grade school.
>
> I'll be sure to recommend to my Fortune 500 clients to not use a product
> administered by essentially, immature children.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> ---
> [This E-mail scanned for viruses by Declude Virus]

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From tv at twistedmatrix.com  Wed Feb  5 10:37:28 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 5 Feb 2003 19:37:28 +0200
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205115931.206ee6dc.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <20030205173728.GA27173@lapdog>

On Wed, Feb 05, 2003 at 11:59:31AM -0500, Itamar Shtull-Trauring wrote:
> This his reply to my answer.
> 
> -------------------------------------------------
...
> Perhaps I don't understand YOUR Twisted model of networking, which is
> not
> OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> computational systems that employ networking implement parts of the
> model.
> Perhaps YOU need to learn about the various layers of the model before
> you
> begin to bandy about the operationally defined words transport and
> protocol.

	Bwahaahaa!

	Now, where is Twisted support for layers 8 and 9?

	http://www.bitwrangler.com/gvi/real-osi-model.html

-- 
:(){ :|:&};:



From andreas at mtg.co.at  Wed Feb  5 13:05:47 2003
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Wed, 5 Feb 2003 21:05:47 +0100
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205115931.206ee6dc.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <200302052105.47849.andreas@mtg.co.at>

Am Mittwoch, 5. Februar 2003 17:59 schrieb Itamar Shtull-Trauring:
> Perhaps I don't understand YOUR Twisted model of networking, which is
> not
> OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> computational systems that employ networking implement parts of the
> model.
What to hell does OSI have to do with Turing-machines?
Nothing, or less?
> Perhaps YOU need to learn about the various layers of the model before
> you
> begin to bandy about the operationally defined words transport and
> protocol.
Well, there are not to many "sucessful" applications of OSI in the real world. 
TCP/IP comes to mind as a prime example.

> Clearly, the folks at Twisted have their own meanings for transport and
> protocol, which differ greatly from their KNOWN and ACCEPTED definitions
> as
> employed in the PROFESSIONAL programming world and the ACADEMIC
> programming
> world.
Not really. My experience suggests that terms that are as heavy overloaded 
always need a definition in the context they are used.

One of the telltales of a professional is that he can adjust to very different 
kinds of environments quickly.
>
> Incidentally, I was writing network-based applications when you were
> still
> in grade school.
Who cares? Especially in the IT world being an old-hand is not necessarily a 
good thing. 
>
> I'll be sure to recommend to my Fortune 500 clients to not use a product
> administered by essentially, immature children.
Who is the immature child here?
Coming into a community, barking around acrynoms that nobody cares about, 
insulting the developers, and so on?
If you think that renaming all the stuff is a good idea, you are certainly 
invited to do it yourself.

Last time I checked you are quite allowed to fork of a OSI-Twisted project.
In effect if you care that much about OSI terminology, you are quite capable 
to patch it yourself. :)

Well, that's curious if you list Twisted on the first line of your Resume, and 
then you do not recommend it. (Well at least in situations where Twisted 
makes sense.)

Andreas





From twisted at itamarst.org  Wed Feb  5 13:27:08 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 15:27:08 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <200302052105.47849.andreas@mtg.co.at>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
	<200302052105.47849.andreas@mtg.co.at>
Message-ID: <20030205152708.6b97b658.twisted@itamarst.org>

On Wed, 5 Feb 2003 21:05:47 +0100
Andreas Kostyrka <andreas at mtg.co.at> wrote:

> Well, that's curious if you list Twisted on the first line of your
> Resume, and then you do not recommend it. (Well at least in situations
> where Twisted makes sense.)

You're confusing me with the other guy :)

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bruce at cubik.org  Wed Feb  5 13:51:31 2003
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 05 Feb 2003 13:51:31 -0700
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
References: <20030205115931.206ee6dc.twisted@itamarst.org> <200302052105.47849.andreas@mtg.co.at>
Message-ID: <3E417953.5060306@cubik.org>

Andreas Kostyrka wrote:
>>I'll be sure to recommend to my Fortune 500 clients to not use a product
>>administered by essentially, immature children.
> 
> Who is the immature child here?
> Coming into a community, barking around acrynoms that nobody cares about, 
> insulting the developers, and so on?

Actually, not to be picky, but it looked like he'd exchanged private 
emails with Itamar, which Itamar then posted.

  - Bruce




From andreas at mtg.co.at  Wed Feb  5 14:41:48 2003
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Wed, 5 Feb 2003 22:41:48 +0100
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <20030205152708.6b97b658.twisted@itamarst.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org> <200302052105.47849.andreas@mtg.co.at> <20030205152708.6b97b658.twisted@itamarst.org>
Message-ID: <200302052241.48386.andreas@mtg.co.at>

Am Mittwoch, 5. Februar 2003 21:27 schrieb Itamar Shtull-Trauring:
> On Wed, 5 Feb 2003 21:05:47 +0100
>
> Andreas Kostyrka <andreas at mtg.co.at> wrote:
> > Well, that's curious if you list Twisted on the first line of your
> > Resume, and then you do not recommend it. (Well at least in situations
> > where Twisted makes sense.)
>
> You're confusing me with the other guy :)
oops, sorry. ;)
So the other guy is an immature child :), talking about the OSI model ;)

Andreas




From skin_pup-twisted at damnable.happypoo.com  Wed Feb  5 18:16:32 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Wed, 5 Feb 2003 20:16:32 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
Message-ID: <20030206011632.GP32425@shitbomb.com>

Attached is the patch for TLS support within twisted.  It is not the best
code,  but it passes all the SSL test (None working on that next) and
works.  The diff also adds an echoclient_tls.py/echoserv_tls.py, that
work along with the echoclient_ssl.py/echoserv_tls.py

Some things I did have questions about how best to handle:

- What error should starttls raise if OpenSSL is not installed?  exarkun
  suggested the following but I have no idea how to do it cleanly.  Any
  ideas?

exarkun : currently, connect/listenSSL aren't defined at all if
          the ssl support libs can't be implemented
exarkun : might it make sense to just duplicate that?


- the doRead_TLS/doRead_NOTLS and writeSomeData_TLS/writeSomeData_NOTLS
  are just damn ugly and could be combined but I felt it was best to leave
  the apart for now.  Is OK, should I merge them?

Jeremy Rossi 


-------------- next part --------------
diff -urP Twisted-1.0.2alpha4/doc/examples/echoclient_tls.py Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoclient_tls.py
--- Twisted-1.0.2alpha4/doc/examples/echoclient_tls.py	Wed Dec 31 19:00:00 1969
+++ Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoclient_tls.py	Wed Feb  5 19:21:06 2003
@@ -0,0 +1,65 @@
+#!/usr/bin/python
+# Twisted, the Framework of Your Internet
+# Copyright (C) 2001 Matthew W. Lefkowitz
+# 
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of version 2.1 of the GNU Lesser General Public
+# License as published by the Free Software Foundation.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+from twisted.internet.protocol import ClientFactory, Protocol
+from twisted.internet.app import Application
+from twisted.internet import reactor, tcp, ssl
+import sys
+
+class myContext(ssl.ClientContextFactory):
+    isClient = 1
+    def getContext(self):
+        return ssl.SSL.Context(ssl.SSL.TLSv1_METHOD)
+
+x = myContext()
+
+class EchoClient(Protocol):
+    end="Bye-bye!"
+    def connectionMade(self):
+        self.transport.write("I am sending this in the clear\n")
+        self.transport.write("And why should I not?\n")
+        self.transport.write("STARTTLS;\n")
+
+    def dataReceived(self, data):
+     	for i in data.split("\n"):
+            try:
+                command, other = i.split(";", 1)
+            except:
+                command = ""
+                other = i
+            if command==self.end:
+                self.transport.loseConnection()
+            elif command=="READY":
+                self.transport.starttls(x)
+                self.transport.write("Spooks cannot see me now.\n")
+            else:
+                print i
+
+class EchoClientFactory(ClientFactory):
+    protocol = EchoClient
+
+    def clientConnectionFailed(self, connector, reason):
+        print 'connection failed:', reason.getErrorMessage()
+        reactor.stop()
+
+    def clientConnectionLost(self, connector, reason):
+        print 'connection lost:', reason.getErrorMessage()
+        reactor.stop()
+
+factory = EchoClientFactory()
+reactor.connectTCP('localhost', 8000, factory)
+reactor.run()
diff -urP Twisted-1.0.2alpha4/doc/examples/echoserv_tls.py Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoserv_tls.py
--- Twisted-1.0.2alpha4/doc/examples/echoserv_tls.py	Wed Dec 31 19:00:00 1969
+++ Twisted-1.0.2alpha4-halfass-branch/doc/examples/echoserv_tls.py	Wed Feb  5 19:20:55 2003
@@ -0,0 +1,71 @@
+
+# Twisted, the Framework of Your Internet
+# Copyright (C) 2001 Matthew W. Lefkowitz
+# 
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of version 2.1 of the GNU Lesser General Public
+# License as published by the Free Software Foundation.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+from twisted.internet.protocol import Protocol, Factory
+from twisted.internet import udp, ssl
+
+### Protocol Implementation
+
+# This is just about the simplest possible protocol
+
+x = ssl.DefaultOpenSSLContextFactory(privateKeyFileName="server.pem",
+                                 certificateFileName="server.pem",
+                                 sslmethod=ssl.SSL.TLSv1_METHOD)
+
+
+class Echo(Protocol):
+    def dataReceived(self, data):
+        "As soon as any data is received, write it back."
+        print data
+        try:
+            command, other = data.split(";", 1)
+        except:
+            command = data
+            other = ""
+        if command == "STARTTLS":
+            print "starting TLS"
+            self.transport.write("READY;ajshdakjsd\n")
+            self.transport.starttls(x)
+#            self.transport.socket.set_accept_state()
+        else:
+            self.transport.write(data)
+
+
+### Persistent Application Builder
+
+# This builds a .tap file
+class EchoClientFactory(Factory):
+    protocol = Echo
+    def connectionFailed(self, connector, reason):
+        print 'connection failed:', reason.getErrorMessage()
+
+    def connectionLost(self, connector, reason):
+        print 'connection lost:', reason.getErrorMessage()
+
+
+if __name__ == '__main__':
+    # Since this is persistent, it's important to get the module naming right
+    # (If we just used Echo, then it would be __main__.Echo when it attempted
+    # to unpickle)
+    import echoserv_tls
+    from twisted.internet.app import Application
+    factory = echoserv_tls.EchoClientFactory()
+    factory.protocol = echoserv_tls.Echo
+    app = Application("echo-tls")
+    app.listenTCP(8000,factory)
+#    app.listenUDP(8000, factory)
+    app.save("start")
diff -urP Twisted-1.0.2alpha4/twisted/internet/ssl.py Twisted-1.0.2alpha4-halfass-branch/twisted/internet/ssl.py
--- Twisted-1.0.2alpha4/twisted/internet/ssl.py	Wed Jan  8 09:18:53 2003
+++ Twisted-1.0.2alpha4-halfass-branch/twisted/internet/ssl.py	Wed Feb  5 19:20:06 2003
@@ -40,11 +40,11 @@
 import socket
 
 # sibling imports
-import tcp, main, interfaces
+import main, interfaces, tcp
 
 # Twisted imports
 from twisted.python import log
-
+#from twisted.internet import reactor
 
 class ContextFactory:
     """A factory for SSL context objects, for server SSL connections."""
@@ -95,101 +95,7 @@
         return SSL.Context(SSL.SSLv3_METHOD)
 
 
-class Connection(tcp.Connection):
-    """I am an SSL connection.
-    """
-
-    __implements__ = tcp.Connection.__implements__, interfaces.ISSLTransport
-    
-    writeBlockedOnRead = 0
-    readBlockedOnWrite= 0
-    sslShutdown = 0
-    
-    def getPeerCertificate(self):
-        """Return the certificate for the peer."""
-        return self.socket.get_peer_certificate()
-
-    def _postLoseConnection(self):
-        """Gets called after loseConnection(), after buffered data is sent.
-
-        We close the SSL transport layer, and if the other side hasn't
-        closed it yet we start reading, waiting for a ZeroReturnError
-        which will indicate the SSL shutdown has completed.
-        """
-        try:
-            done = self.socket.shutdown()
-            self.sslShutdown = 1
-        except SSL.Error:
-            return main.CONNECTION_LOST
-        if done:
-            return main.CONNECTION_DONE
-        else:
-            # we wait for other side to close SSL connection -
-            # this will be signaled by SSL.ZeroReturnError when reading
-            # from the socket
-            self.stopWriting()
-            self.startReading()
-            return None # don't close socket just yet
-    
-    def doRead(self):
-        """See tcp.Connection.doRead for details.
-        """
-        if self.writeBlockedOnRead:
-            self.writeBlockedOnRead = 0
-            return self.doWrite()
-        try:
-            return tcp.Connection.doRead(self)
-        except SSL.ZeroReturnError:
-            # close SSL layer, since other side has done so, if we haven't
-            if not self.sslShutdown:
-                try:
-                    self.socket.shutdown()
-                    self.sslShutdown = 1
-                except SSL.Error:
-                    pass
-            return main.CONNECTION_DONE
-        except SSL.WantReadError:
-            return
-        except SSL.WantWriteError:
-            self.readBlockedOnWrite = 1
-            self.startWriting()
-            return
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def doWrite(self):
-        if self.readBlockedOnWrite:
-            self.readBlockedOnWrite = 0
-            if not self.unsent: self.stopWriting()
-            return self.doRead()
-        return tcp.Connection.doWrite(self)
-    
-    def writeSomeData(self, data):
-        """See tcp.Connection.writeSomeData for details.
-        """
-        if not data:
-            return 0
-
-        try:
-            return tcp.Connection.writeSomeData(self, data)
-        except SSL.WantWriteError:
-            return 0
-        except SSL.WantReadError:
-            self.writeBlockedOnRead = 1
-            return 0
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def _closeSocket(self):
-        """Called to close our socket."""
-        try:
-            self.socket.sock_shutdown(2)
-        except socket.error:
-            pass
-
-
-
-class Client(Connection, tcp.TCPClient):
+class Client(tcp.TCPClient):
     """I am an SSL client.
     """
     
@@ -197,11 +103,15 @@
         self.ctxFactory = ctxFactory
         tcp.TCPClient.__init__(self, host, port, bindAddress, connector, reactor)
     
+    def _finishInit(self, whenDone, skt, error, reactor):
+        tcp.TCPClient._finishInit(self, whenDone, skt, error, reactor)
+        self.starttls(self.ctxFactory)
+
     def createInternetSocket(self):
         """(internal) create an SSL socket
         """
         sock = tcp.TCPClient.createInternetSocket(self)
-        return SSL.Connection(self.ctxFactory.getContext(), sock)
+        return sock
 
     def getHost(self):
         """Returns a tuple of ('SSL', hostname, port).
@@ -220,13 +130,14 @@
 
 
 
-class Server(Connection, tcp.Server):
+class Server(tcp.Connection, tcp.Server):
     """I am an SSL server.
     """
     
     def __init__(*args, **kwargs):
         # we need those so we don't use ssl.Connection's __init__
         apply(tcp.Server.__init__, args, kwargs)
+        
 
     def getHost(self):
         """Returns a tuple of ('SSL', hostname, port).
@@ -258,7 +169,8 @@
         """(internal) create an SSL socket
         """
         sock = tcp.Port.createInternetSocket(self)
-        return SSL.Connection(self.ctxFactory.getContext(), sock)
+        sock = SSL.Connection(self.ctxFactory.getContext(), sock)
+        return sock
     
     def doRead(self):
         """Called when my socket is ready for reading.
@@ -283,6 +195,7 @@
             s = self.sessionno
             self.sessionno = s+1
             transport = self.transport(skt, protocol, addr, self, s)
+            transport.TLS = 1
             protocol.makeConnection(transport)
         except:
             log.deferr()
diff -urP Twisted-1.0.2alpha4/twisted/internet/tcp.py Twisted-1.0.2alpha4-halfass-branch/twisted/internet/tcp.py
--- Twisted-1.0.2alpha4/twisted/internet/tcp.py	Wed Jan  1 09:32:27 2003
+++ Twisted-1.0.2alpha4-halfass-branch/twisted/internet/tcp.py	Wed Feb  5 19:20:02 2003
@@ -34,6 +34,10 @@
 import select
 import operator
 import warnings
+try:
+    from OpenSSL import SSL
+except:
+    SSL = None
 
 if os.name == 'nt':
     EINVAL      = 10022
@@ -73,6 +77,10 @@
     This is an abstract superclass of all objects which represent a TCP/IP
     connection based socket.
     """
+    writeBlockedOnRead = 0
+    readBlockedOnWrite= 0
+    sslShutdown = 0
+    TLS = 0
 
     __implements__ = abstract.FileDescriptor.__implements__, interfaces.ITCPTransport
 
@@ -83,7 +91,47 @@
         self.fileno = skt.fileno
         self.protocol = protocol
 
+    def starttls(self, ctx):
+        self._oldsocket = self.socket
+        self.socket = SSL.Connection(ctx.getContext(), self.socket)
+        self.fileno = self.socket.fileno
+        self.TLS = 1
+
+    def stoptls(self):
+        self.socket = self._oldsocket
+        self.TLS = 0
+
     def doRead(self):
+        if self.TLS:
+            return self.doRead_TLS()
+        else:
+            return self.doRead_NOTLS()
+
+    def doRead_TLS(self):
+        if self.writeBlockedOnRead:
+            self.writeBlockedOnRead = 0
+            return self.doWrite()
+        try:
+            return self.doRead_NOTLS()
+        except SSL.ZeroReturnError:
+            # close SSL layer, since other side has done so, if we haven't
+            if not self.sslShutdown:
+                try:
+                    self.socket.shutdown()
+                    self.sslShutdown = 1
+                except SSL.Error:
+                    pass
+            return main.CONNECTION_DONE
+        except SSL.WantReadError:
+            return
+        except SSL.WantWriteError:
+            self.readBlockedOnWrite = 1
+            self.startWriting()
+            return
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+    def doRead_NOTLS(self):
         """Calls self.protocol.dataReceived with all available data.
 
         This reads up to self.bufferSize bytes of data from its socket, then
@@ -102,7 +150,36 @@
             return main.CONNECTION_LOST
         return self.protocol.dataReceived(data)
 
+    
+    def doWrite(self):
+        if self.TLS:
+            if self.readBlockedOnWrite:
+                self.readBlockedOnWrite = 0
+                if not self.unsent: self.stopWriting()
+                return self.doRead()
+        return abstract.FileDescriptor.doWrite(self)
+
     def writeSomeData(self, data):
+        if self.TLS:
+            return self.writeSomeData_TLS(data)
+        else:
+            return self.writeSomeData_NOTLS(data)
+
+
+    def writeSomeData_TLS(self, data):
+        if not data:
+            return 0
+        try:
+            return self.writeSomeData_NOTLS(data)
+        except SSL.WantWriteError:
+            return 0
+        except SSL.WantReadError:
+            self.writeBlockedOnRead = 1
+            return 0
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+    def writeSomeData_NOTLS(self, data):
         """Connection.writeSomeData(data) -> #of bytes written | CONNECTION_LOST
         This writes as much data as possible to the socket and returns either
         the number of bytes read (which is positive) or a connection error code
@@ -123,7 +200,10 @@
         # was inherited by a subprocess. And we really do want to close the
         # connection. So we use shutdown() instead.
         try:
-            self.socket.shutdown(2)
+            if self.TLS:
+                self.socket.sock_shutdown(2)
+            else:
+                self.socket.shutdown(2)
         except socket.error:
             pass
 
@@ -162,11 +242,45 @@
     def setTcpNoDelay(self, enabled):
         self.socket.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, enabled)
 
+    def getPeerCertificate(self):
+        """Return the certificate for the peer."""
+        return self.socket.get_peer_certificate()
+
+    def _postLoseConnection(self):
+        """Gets called after loseConnection(), after buffered data is sent.
+
+        We close the SSL transport layer, and if the other side hasn't
+        closed it yet we start reading, waiting for a ZeroReturnError
+        which will indicate the SSL shutdown has completed.
+        """
+        if self.TLS:
+            try:
+                done = self.socket.shutdown()
+                self.sslShutdown = 1
+            except SSL.Error:
+                return main.CONNECTION_LOST
+            if done:
+                return main.CONNECTION_DONE
+            else:
+                # we wait for other side to close SSL connection -
+                # this will be signaled by SSL.ZeroReturnError when reading
+                # from the socket
+                self.stopWriting()
+                self.startReading()
+                return None # don't close socket just yet
+        else:
+            print "quiting"
+            return main.CONNECTION_DONE
 
 class BaseClient(Connection):
     """A base class for client TCP (and similiar) sockets.
     """
 
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_connect_state()
+        return holder
+
     def _finishInit(self, whenDone, skt, error, reactor):
         """Called by base classes to continue to next stage of initialization."""
         if whenDone:
@@ -360,6 +474,12 @@
         self.startReading()
         self.connected = 1
 
+
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_accept_state()
+        return holder
+
     def __repr__(self):
         """A string representation of this connection.
         """
@@ -489,6 +609,11 @@
                         self.numberAccepts = i
                         break
                     raise
+                # XXX Hummmmmmmmmmmmmm what to do about this
+                except SSL.Error:
+                    if self.TLS:
+                        log.deferr()
+                        return
                 protocol = self.factory.buildProtocol(addr)
                 if protocol is None:
                     skt.close()

From twisted at itamarst.org  Wed Feb  5 19:36:39 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 5 Feb 2003 21:36:39 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
In-Reply-To: <20030206011632.GP32425@shitbomb.com>
References: <20030206011632.GP32425@shitbomb.com>
Message-ID: <20030205213639.74b3b797.twisted@itamarst.org>

On Wed, 5 Feb 2003 20:16:32 -0500
Skinny Puppy <skin_pup-twisted at damnable.happypoo.com> wrote:

> Attached is the patch for TLS support within twisted.  It is not the
> best code,  but it passes all the SSL test (None working on that next)
> and works.  The diff also adds an echoclient_tls.py/echoserv_tls.py,
> that work along with the echoclient_ssl.py/echoserv_tls.py

Neato! I don't have time to look at it right now, but it *will* be
looked at sooner or later. If I don't check this in within a week bug me
personally.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From dstone at trinity.unimelb.edu.au  Wed Feb  5 20:47:00 2003
From: dstone at trinity.unimelb.edu.au (Daniel Stone)
Date: Thu, 6 Feb 2003 14:47:00 +1100
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <3E417953.5060306@cubik.org>
References: <20030205115931.206ee6dc.twisted@itamarst.org> <200302052105.47849.andreas@mtg.co.at> <3E417953.5060306@cubik.org>
Message-ID: <20030206034700.GA26398@trinity.unimelb.edu.au>

On Wed, Feb 05, 2003 at 01:51:31PM -0700, Bruce Mitchener scrawled:
> Andreas Kostyrka wrote:
> >>I'll be sure to recommend to my Fortune 500 clients to not use a product
> >>administered by essentially, immature children.
> >
> >Who is the immature child here?
> >Coming into a community, barking around acrynoms that nobody cares about, 
> >insulting the developers, and so on?
> 
> Actually, not to be picky, but it looked like he'd exchanged private 
> emails with Itamar, which Itamar then posted.

Which is exceptionally bad form.

-- 
Daniel Stone                                     <dstone at trinity.unimelb.edu.au>
Developer, Trinity College, University of Melbourne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030206/048a7a44/attachment.sig>

From skin_pup-twisted at damnable.happypoo.com  Wed Feb  5 23:04:44 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Thu, 6 Feb 2003 01:04:44 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
In-Reply-To: <20030205213639.74b3b797.twisted@itamarst.org>
References: <20030206011632.GP32425@shitbomb.com> <20030205213639.74b3b797.twisted@itamarst.org>
Message-ID: <20030206060443.GQ32425@shitbomb.com>

Itamar Shtull-Trauring [twisted at itamarst.org] wrote:
> Skinny Puppy <skin_pup-twisted at damnable.happypoo.com> wrote:
> 
> > Attached is the patch for TLS support within twisted.  It is not the
> > best code,  but it passes all the SSL test (None working on that next)
> > and works.  The diff also adds an echoclient_tls.py/echoserv_tls.py,
> > that work along with the echoclient_ssl.py/echoserv_tls.py
> 
> Neato! I don't have time to look at it right now, but it *will* be
> looked at sooner or later. If I don't check this in within a week bug me
> personally.

Will be more then happy too, but in the time being I got bored and
checked out the CVS version of Twisted and worked in TLS.  Patch attached 
of course.  Boredom will be my downfall, so please don't think I am being
pushy or anything.  :)

Jeremy Rossi 
-------------- next part --------------
? TLS.diff
? TLS.patch
? doc/examples/echoclient_tls.py
? doc/examples/echoserv_tls.py
Index: twisted/internet/ssl.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/ssl.py,v
retrieving revision 1.37
diff -u -r1.37 ssl.py
--- twisted/internet/ssl.py	3 Feb 2003 18:55:59 -0000	1.37
+++ twisted/internet/ssl.py	6 Feb 2003 05:50:16 -0000
@@ -95,112 +95,18 @@
         return SSL.Context(SSL.SSLv3_METHOD)
 
 
-class Connection(tcp.Connection):
-    """I am an SSL connection.
-    """
-
-    __implements__ = tcp.Connection.__implements__, interfaces.ISSLTransport
-    
-    writeBlockedOnRead = 0
-    readBlockedOnWrite= 0
-    sslShutdown = 0
-    
-    def getPeerCertificate(self):
-        """Return the certificate for the peer."""
-        return self.socket.get_peer_certificate()
-
-    def _postLoseConnection(self):
-        """Gets called after loseConnection(), after buffered data is sent.
-
-        We close the SSL transport layer, and if the other side hasn't
-        closed it yet we start reading, waiting for a ZeroReturnError
-        which will indicate the SSL shutdown has completed.
-        """
-        try:
-            done = self.socket.shutdown()
-            self.sslShutdown = 1
-        except SSL.Error:
-            return main.CONNECTION_LOST
-        if done:
-            return main.CONNECTION_DONE
-        else:
-            # we wait for other side to close SSL connection -
-            # this will be signaled by SSL.ZeroReturnError when reading
-            # from the socket
-            self.stopWriting()
-            self.startReading()
-            return None # don't close socket just yet
-    
-    def doRead(self):
-        """See tcp.Connection.doRead for details.
-        """
-        if self.writeBlockedOnRead:
-            self.writeBlockedOnRead = 0
-            return self.doWrite()
-        try:
-            return tcp.Connection.doRead(self)
-        except SSL.ZeroReturnError:
-            # close SSL layer, since other side has done so, if we haven't
-            if not self.sslShutdown:
-                try:
-                    self.socket.shutdown()
-                    self.sslShutdown = 1
-                except SSL.Error:
-                    pass
-            return main.CONNECTION_DONE
-        except SSL.WantReadError:
-            return
-        except SSL.WantWriteError:
-            self.readBlockedOnWrite = 1
-            self.startWriting()
-            return
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def doWrite(self):
-        if self.readBlockedOnWrite:
-            self.readBlockedOnWrite = 0
-            if not self.unsent: self.stopWriting()
-            return self.doRead()
-        return tcp.Connection.doWrite(self)
-    
-    def writeSomeData(self, data):
-        """See tcp.Connection.writeSomeData for details.
-        """
-        if not data:
-            return 0
 
-        try:
-            return tcp.Connection.writeSomeData(self, data)
-        except SSL.WantWriteError:
-            return 0
-        except SSL.WantReadError:
-            self.writeBlockedOnRead = 1
-            return 0
-        except SSL.Error:
-            return main.CONNECTION_LOST
-
-    def _closeSocket(self):
-        """Called to close our socket."""
-        try:
-            self.socket.sock_shutdown(2)
-        except socket.error:
-            pass
 
-
-
-class Client(Connection, tcp.Client):
+class Client(tcp.Client):
     """I am an SSL client."""
     def __init__(self, host, port, bindAddress, ctxFactory, connector, reactor=None):
         # tcp.Client.__init__ depends on self.ctxFactory being set
         self.ctxFactory = ctxFactory
         tcp.Client.__init__(self, host, port, bindAddress, connector, reactor)
 
-    def createInternetSocket(self):
-        """(internal) create an SSL socket
-        """
-        sock = tcp.Client.createInternetSocket(self)
-        return SSL.Connection(self.ctxFactory.getContext(), sock)
+    def _finishInit(self, whenDone, skt, error, reactor):
+        tcp.Client._finishInit(self, whenDone, skt, error, reactor)
+        self.starttls(self.ctxFactory)
 
     def getHost(self):
         """Returns a tuple of ('SSL', hostname, port).
@@ -219,7 +125,7 @@
 
 
 
-class Server(Connection, tcp.Server):
+class Server(tcp.Server):
     """I am an SSL server.
     """
     
@@ -256,32 +162,9 @@
         sock = tcp.Port.createInternetSocket(self)
         return SSL.Connection(self.ctxFactory.getContext(), sock)
     
-    def doRead(self):
-        """Called when my socket is ready for reading.
-
-        This accepts a connection and calls self.protocol() to handle the
-        wire-level protocol.
-        """
-        try:
-            try:
-                skt, addr = self.socket.accept()
-            except socket.error, e:
-                if e.args[0] == tcp.EWOULDBLOCK:
-                    return
-                raise
-            except SSL.Error:
-                log.deferr()
-                return
-            protocol = self.factory.buildProtocol(addr)
-            if protocol is None:
-                skt.close()
-                return
-            s = self.sessionno
-            self.sessionno = s+1
-            transport = self.transport(skt, protocol, addr, self, s)
-            protocol.makeConnection(transport)
-        except:
-            log.deferr()
+    def _preMakeConnection(self, transport):
+        transport.TLS = 1
+        return tcp.Port._preMakeConnection(self, transport)
 
 
 class Connector(base.BaseConnector):
Index: twisted/internet/tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.105
diff -u -r1.105 tcp.py
--- twisted/internet/tcp.py	31 Jan 2003 23:50:20 -0000	1.105
+++ twisted/internet/tcp.py	6 Feb 2003 05:50:16 -0000
@@ -34,6 +34,10 @@
 import select
 import operator
 import warnings
+try:
+    from OpenSSL import SSL
+except ImportError:
+    SSL = None
 
 if os.name == 'nt':
     EINVAL      = 10022
@@ -78,6 +82,11 @@
 
     __implements__ = abstract.FileDescriptor.__implements__, interfaces.ITCPTransport
 
+    writeBlockedOnRead = 0
+    readBlockedOnWrite= 0
+    sslShutdown = 0
+    TLS = 0
+
     def __init__(self, skt, protocol, reactor=None):
         abstract.FileDescriptor.__init__(self, reactor=reactor)
         self.socket = skt
@@ -85,7 +94,42 @@
         self.fileno = skt.fileno
         self.protocol = protocol
 
+    def starttls(self, ctx):
+        self.socket = SSL.Connection(ctx.getContext(), self.socket)
+        self.fileno = self.socket.fileno
+        self.TLS = 1
+
     def doRead(self):
+        if self.TLS:
+            return self.doRead_TLS()
+        else:
+            return self.doRead_NOTLS()
+
+    def doRead_TLS(self):
+        if self.writeBlockedOnRead:
+            self.writeBlockedOnRead = 0
+            return self.doWrite()
+        try:
+            return self.doRead_NOTLS()
+        except SSL.ZeroReturnError:
+            # close SSL layer, since other side has done so, if we haven't
+            if not self.sslShutdown:
+                try:
+                    self.socket.shutdown()
+                    self.sslShutdown = 1
+                except SSL.Error:
+                    pass
+            return main.CONNECTION_DONE
+        except SSL.WantReadError:
+            return
+        except SSL.WantWriteError:
+            self.readBlockedOnWrite = 1
+            self.startWriting()
+            return
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+    def doRead_NOTLS(self):
         """Calls self.protocol.dataReceived with all available data.
 
         This reads up to self.bufferSize bytes of data from its socket, then
@@ -104,7 +148,22 @@
             return main.CONNECTION_LOST
         return self.protocol.dataReceived(data)
 
+    def doWrite(self):
+        if self.TLS:
+            if self.readBlockedOnWrite:
+                self.readBlockedOnWrite = 0
+                if not self.unsent: self.stopWriting()
+                return self.doRead()
+        return abstract.FileDescriptor.doWrite(self)
+
     def writeSomeData(self, data):
+        if self.TLS:
+            return self.writeSomeData_TLS(data)
+        else:
+            return self.writeSomeData_NOTLS(data)
+
+
+    def writeSomeData_NOTLS(self, data):
         """Connection.writeSomeData(data) -> #of bytes written | CONNECTION_LOST
         This writes as much data as possible to the socket and returns either
         the number of bytes read (which is positive) or a connection error code
@@ -118,6 +177,20 @@
             else:
                 return main.CONNECTION_LOST
 
+    def writeSomeData_TLS(self, data):
+        if not data:
+            return 0
+        try:
+            return self.writeSomeData_NOTLS(data)
+        except SSL.WantWriteError:
+            return 0
+        except SSL.WantReadError:
+            self.writeBlockedOnRead = 1
+            return 0
+        except SSL.Error:
+            return main.CONNECTION_LOST
+
+
     def _closeSocket(self):
         """Called to close our socket."""
         # This used to close() the socket, but that doesn't *really* close if
@@ -125,7 +198,10 @@
         # was inherited by a subprocess. And we really do want to close the
         # connection. So we use shutdown() instead.
         try:
-            self.socket.shutdown(2)
+            if self.TLS:
+                self.socket.sock_shutdown(2)
+            else:
+                self.socket.shutdown(2)
         except socket.error:
             pass
 
@@ -164,6 +240,32 @@
     def setTcpNoDelay(self, enabled):
         self.socket.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, enabled)
 
+    def _postLoseConnection(self):
+        """Gets called after loseConnection(), after buffered data is sent.
+
+        We close the SSL transport layer, and if the other side hasn't
+        closed it yet we start reading, waiting for a ZeroReturnError
+        which will indicate the SSL shutdown has completed.
+        """
+        if self.TLS:
+            try:
+                done = self.socket.shutdown()
+                self.sslShutdown = 1
+            except SSL.Error:
+                return main.CONNECTION_LOST
+            if done:
+                return main.CONNECTION_DONE
+            else:
+                # we wait for other side to close SSL connection -
+                # this will be signaled by SSL.ZeroReturnError when reading
+                # from the socket
+                self.stopWriting()
+                self.startReading()
+                return None # don't close socket just yet
+        else:
+            # XXX Should this be main.CONNECTION_DONE
+            #     or the returnwd value ever change?
+            return abstract.FileDescriptor._postLoseConnection(self)
 
 class BaseClient(Connection):
     """A base class for client TCP (and similiar) sockets.
@@ -181,6 +283,11 @@
         else:
             reactor.callLater(0, self.failIfNotConnected, error)
 
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_connect_state()
+        return holder
+
     def stopConnecting(self):
         """Stop attempt to connect."""
         self.failIfNotConnected(error.UserError())
@@ -337,6 +444,11 @@
         """
         return self.repstr
 
+    def starttls(self, ctx):
+        holder = Connection.starttls(self, ctx)
+        self.socket.set_accept_state()
+        return holder
+        
     def getHost(self):
         """Returns a tuple of ('INET', hostname, port).
 
@@ -433,18 +545,27 @@
                         self.numberAccepts = i
                         break
                     raise
+                # XXX Hummmmmmmmmmmmmm what to do about this
+                except SSL.Error:
+                    if self.TLS:
+                        log.deferr()
+                        return
                 protocol = self.factory.buildProtocol(addr)
                 if protocol is None:
                     skt.close()
                     continue
                 s = self.sessionno
                 self.sessionno = s+1
-                transport = self.transport(skt, protocol, addr, self, s)
+                # XXX once again I just don't know if I should be doing this
+                transport = self._preMakeConnection(self.transport(skt, protocol, addr, self, s))
                 protocol.makeConnection(transport)
             else:
                 self.numberAccepts = self.numberAccepts+20
         except:
             log.deferr()
+
+    def _preMakeConnection(self, transport):
+        return transport
 
     def loseConnection(self):
         """Stop accepting connections on this port.
-------------- next part --------------

# Twisted, the Framework of Your Internet
# Copyright (C) 2001 Matthew W. Lefkowitz
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

from twisted.internet.protocol import Protocol, Factory
from twisted.internet import udp, ssl

### Protocol Implementation

# This is just about the simplest possible protocol

x = ssl.DefaultOpenSSLContextFactory(privateKeyFileName="server.pem",
                                 certificateFileName="server.pem",
                                 sslmethod=ssl.SSL.TLSv1_METHOD)


class Echo(Protocol):
    def dataReceived(self, data):
        "As soon as any data is received, write it back."
        print data
        try:
            command, other = data.split(";", 1)
        except:
            command = data
            other = ""
        if command == "STARTTLS":
            print "starting TLS"
            self.transport.write("READY;ajshdakjsd\n")
            self.transport.starttls(x)
#            self.transport.socket.set_accept_state()
        elif command == "STOPTLS":
            print "stoping TLS"
            self.transport.write("STOPED;\n")
            self.transport.stoptls()
        else:
            self.transport.write(data)


### Persistent Application Builder

# This builds a .tap file
class EchoClientFactory(Factory):
    protocol = Echo
    def connectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()

    def connectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()


if __name__ == '__main__':
    # Since this is persistent, it's important to get the module naming right
    # (If we just used Echo, then it would be __main__.Echo when it attempted
    # to unpickle)
    import echoserv_tls
    from twisted.internet.app import Application
    factory = echoserv_tls.EchoClientFactory()
    factory.protocol = echoserv_tls.Echo
    app = Application("echo-tls")
    app.listenTCP(8000,factory)
#    app.listenUDP(8000, factory)
    app.save("start")
-------------- next part --------------
#!/usr/bin/python
# Twisted, the Framework of Your Internet
# Copyright (C) 2001 Matthew W. Lefkowitz
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

from twisted.internet.protocol import ClientFactory, Protocol
from twisted.internet.app import Application
from twisted.internet import reactor, tcp, ssl
import sys

class myContext(ssl.ClientContextFactory):
    isClient = 1
    def getContext(self):
        return ssl.SSL.Context(ssl.SSL.TLSv1_METHOD)

x = myContext()

class EchoClient(Protocol):
    end="Bye-bye!"
    def connectionMade(self):
        self.transport.write("I am sending this in the clear\n")
        self.transport.write("And why should I not?\n")
        self.transport.write("STARTTLS;\n")

    def dataReceived(self, data):
     	for i in data.split("\n"):
            try:
                command, other = i.split(";", 1)
            except:
                command = ""
                other = i
            if command==self.end:
                self.transport.loseConnection()
            elif command=="READY":
                self.transport.starttls(x)
                self.transport.write("Spooks cannot see me now.\n")
                print i
            elif command=="STOPED":
                self.transport.stoptls()
                self.transport.write("they can see again\n")
                self.transport.write("%s;ok\n"%(self.end))

class EchoClientFactory(ClientFactory):
    protocol = EchoClient

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()
        reactor.stop()

    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()
        reactor.stop()

factory = EchoClientFactory()
reactor.connectTCP('localhost', 8000, factory)
reactor.run()

From max at malva.ua  Tue Feb  4 07:02:42 2003
From: max at malva.ua (Max Ischenko)
Date: Tue, 4 Feb 2003 16:02:42 +0200
Subject: [Twisted-Python] a typo in docs (book.ps)
Message-ID: <20030204140242.GA26052@malva.ua>

Section 2.2.4
kill `twisted.pid` should read kill `cat twisted.pid`, probably.

-- 
Bst rgrds, M.A.X.: Mechanical Artificial Xenomorph.



From twisted at moshez.org  Thu Feb  6 02:51:58 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 6 Feb 2003 09:51:58 -0000
Subject: [Twisted-Python] a typo in docs (book.ps)
In-Reply-To: <20030204140242.GA26052@malva.ua>
References: <20030204140242.GA26052@malva.ua>
Message-ID: <20030206095158.14172.qmail@green.zadka.com>

On Tue, 4 Feb 2003 16:02:42 +0200, Max Ischenko <max at malva.ua> wrote:

> Section 2.2.4
> kill `twisted.pid` should read kill `cat twisted.pid`, probably.

Thanks, I fixed it in CVS.
This will show up in version 1.0.3
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From fog at initd.org  Thu Feb  6 03:55:02 2003
From: fog at initd.org (Federico Di Gregorio)
Date: 06 Feb 2003 11:55:02 +0100
Subject: [Twisted-Python] little patch to gtk2reactor
Message-ID: <1044528901.1157.30.camel@momo.initd.org>

hi *,

this is my first mailto this list so, hello and kudos to all twisted
developers: it (twisted) is great. 

as some of you (the ones in irc) already know, yesterday i fight quite a
lot with gtk2reactor not working with latest pygtk2 and i finally got it
working again. the problem is that:

[quote from pygtk ML]
James Henstridge <james at daa.com.au> wrote:
>If you want your callback to be requeued, add "return True" to the end. 
>Returning None (which happens if you have no return statement) is 
>treated the same as returning False, which tells gtk not to requeue the 
>callback.
[/quote]

so the solution is just to add a "return 1" (or the equivalent) to the
end of Gtk2Reactor.callback and a "return real_cb(...)" in input_add.  

obvious patch attached.

ciao,
federico

-------------- next part --------------
--- gtk2reactor.py.old	2003-02-06 11:53:46.000000000 +0100
+++ gtk2reactor.py	2003-02-06 11:53:10.000000000 +0100
@@ -71,7 +71,7 @@
 	if hasattr(source, 'fileno'):
             # handle python objects
             def wrapper(source, condition, real_s=source, real_cb=callback):
-                real_cb(real_s, condition)
+                return real_cb(real_s, condition)
             return gtk.input_add(source.fileno(), condition, wrapper)
         else:
             return gtk.input_add(source, condition, callback)
@@ -151,6 +151,7 @@
                 # If source disconnected, don't call the rest of the methods.
                 break
         self.simulate()
+	return 1
     
     def simulate(self):
         """Run simulation loops and reschedule callbacks.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030206/f4a47d64/attachment.sig>

From ac at strakt.com  Thu Feb  6 04:30:02 2003
From: ac at strakt.com (Anders =?ISO-8859-1?Q?Chrigstr=F6m?=)
Date: 06 Feb 2003 12:30:02 +0100
Subject: [Twisted-Python] Patch to qtreactor
Message-ID: <1044531002.26411.4.camel@ashera>

Here is a small patch to the qtreactor.

-- 
Anders Chrigström               Email: ac at strakt.com
AB Strakt                       Phone: +46 31 749 08 96
Norra Ågatan 10
416 64 Göteborg
SWEDEN
-------------- next part --------------
A non-text attachment was scrubbed...
Name: qtreactor.patch
Type: text/x-patch
Size: 1258 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030206/f0073468/attachment-0002.bin>

From iko at strakt.com  Thu Feb  6 09:36:36 2003
From: iko at strakt.com (Anders Hammarquist)
Date: Thu, 06 Feb 2003 17:36:36 +0100
Subject: [Twisted-Python] (no subject)
Message-ID: <200302061636.h16GaaGC024185@fido.strakt.com>

Hi all,

Here's my first cut at rewriting the SMTP client code.
The new smtp.sendmail() function is intended to mimic
smtplib.sendmail() as close as reasonably possible, to
allow for easy migration. Comments appreciated, as always.

The patch also adds some minor tweaks to the SMTP server,
adds a quick hack to accepttests to let me run only one
(or a few) of the tests, and also fixes basic.LineReciever
to pass on any returned exceptions (I needed this for the
SMTP client).

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 26191 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030206/e5522e61/attachment-0002.bin>

From twisted at itamarst.org  Thu Feb  6 11:35:58 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 6 Feb 2003 13:35:58 -0500
Subject: [Twisted-Python] little patch to gtk2reactor
In-Reply-To: <1044528901.1157.30.camel@momo.initd.org>
References: <1044528901.1157.30.camel@momo.initd.org>
Message-ID: <20030206133558.18c8482c.twisted@itamarst.org>

OK, I checked this in, can someone with gtk2 actually verify this fixes
the problems?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From acapnotic at twistedmatrix.com  Thu Feb  6 12:14:22 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 06 Feb 2003 11:14:22 -0800
Subject: [Twisted-Python] epydoc and Deferreds documentation standard
Message-ID: <1044558861.3659.30.camel@troglodyte.funhouse>

Any thoughts on what the standard should be for documenting functions
that return Deferred?  Yes, "@returntype: Deferred" is accurate in one
sense, but it's important to know that Deferred will call back with an
Identity.  Or maybe the callback value of the Deferred is irrelevant, it
just happens to let you know the operation is finished.

Should we say "@returntype: L{Deferred} L{Foo}" and "@returntype:
L{Deferred} None"?

-- 
The moon is waxing crescent, 23.2% illuminated, 4.7 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030206/0eeccb82/attachment.sig>

From radix at twistedmatrix.com  Thu Feb  6 13:13:45 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 6 Feb 2003 15:13:45 -0500
Subject: [Twisted-Python] epydoc and Deferreds documentation standard
In-Reply-To: <1044558861.3659.30.camel@troglodyte.funhouse>
References: <1044558861.3659.30.camel@troglodyte.funhouse>
Message-ID: <20030206201345.GC1080@radii>

On Thu, Feb 06, 2003 at 11:14:22AM -0800, Kevin Turner wrote:
> Any thoughts on what the standard should be for documenting functions
> that return Deferred?  Yes, "@returntype: Deferred" is accurate in one
> sense, but it's important to know that Deferred will call back with an
> Identity.  Or maybe the callback value of the Deferred is irrelevant, it
> just happens to let you know the operation is finished.
> 
> Should we say "@returntype: L{Deferred} L{Foo}" and "@returntype:
> L{Deferred} None"?

Yeah, that's what I've been doing (sometimes "L{Deferred} resulting in
L{Foo}"). It's good that epydoc doesn't really process the @returntype
in a special way, so you can still throw L{} in whereever you want.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Thu Feb  6 13:23:06 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 6 Feb 2003 15:23:06 -0500
Subject: [Twisted-Python] Sending email asynchronously
Message-ID: <CCDAB0A8-3A10-11D7-8114-000A95686CD8@redivi.com>

On Friday, Nov 1, 2002, at 00:07 America/New_York, Jp Calderone wrote:

>   Just a heads up: I've just stuck in 
> twisted.protocols.smtp.sendEmail(); it
> is based very heavily on some code itamar sent me and can handle 
> attachments
> as well as plain ol' email.  I imagine there are some things wrong 
> with it,
> but this is something I've found lacking in Twisted for a long time, 
> so I
> had to add it, even broken :)  Suggestions on the what the One True 
> Way it
> should work are welcome (but it does what I want it to now, so don't 
> expect
> me to improve it without input ;).

I've just committed a modification of sendEmail to do what I want, it 
can now
send HTML email (with a text/plain fallback) and use 7bit encoding when 
it
makes sense.  :)

To send a basic HTML email, you would leave the content as text/plan, 
have a single
attachment that is text/html, and call sendEmail with 
multipartboundary="alternative".

-bob




From glyph at twistedmatrix.com  Thu Feb  6 19:08:07 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 06 Feb 2003 20:08:07 -0600 (CST)
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <CCDAB0A8-3A10-11D7-8114-000A95686CD8@redivi.com>
References: <CCDAB0A8-3A10-11D7-8114-000A95686CD8@redivi.com>
Message-ID: <20030206.200807.74744704.glyph@twistedmatrix.com>


On Thu, 6 Feb 2003 15:23:06 -0500, Bob Ippolito <bob at redivi.com> wrote:

> I've just committed a modification of sendEmail to do what I want, it can now
> send HTML email (with a text/plain fallback) and use 7bit encoding when it
> makes sense.  :)

Hmm.  It looks like we are starting to implement a substantial subset of the
"email" module in Python 2.2.  This is available for 2.1 at
http://mimelib.sourceforge.net/ .  I would recommend that anyone developing
Twisted applications that want email integration use that module instead of
using these features of sendEmail -- I would like to see this code go away.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030206/920c3ea2/attachment.sig>

From bob at redivi.com  Thu Feb  6 19:40:58 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 6 Feb 2003 21:40:58 -0500
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <20030206.200807.74744704.glyph@twistedmatrix.com>
Message-ID: <968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>

On Thursday, Feb 6, 2003, at 21:08 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Thu, 6 Feb 2003 15:23:06 -0500, Bob Ippolito <bob at redivi.com> wrote:
>
>> I've just committed a modification of sendEmail to do what I want, it 
>> can now
>> send HTML email (with a text/plain fallback) and use 7bit encoding 
>> when it
>> makes sense.  :)
>
> Hmm.  It looks like we are starting to implement a substantial subset 
> of the
> "email" module in Python 2.2.  This is available for 2.1 at
> http://mimelib.sourceforge.net/ .  I would recommend that anyone 
> developing
> Twisted applications that want email integration use that module 
> instead of
> using these features of sendEmail -- I would like to see this code go 
> away.

Adding four lines of code to twisted is a lot easier than 
downloading/learning some other module, don't you think?

As-is, the email module is going to cover a good 95% of stuff you need 
to do when sending mail

-bob




From andrew-twisted at puzzling.org  Thu Feb  6 21:08:33 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 7 Feb 2003 15:08:33 +1100
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>
References: <20030206.200807.74744704.glyph@twistedmatrix.com> <968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>
Message-ID: <20030207040833.GC32136@frobozz.local>

On Thu, Feb 06, 2003 at 09:40:58PM -0500, Bob Ippolito wrote:
> 
> Adding four lines of code to twisted is a lot easier than 
> downloading/learning some other module, don't you think?

Not if you already know how to use that other module.  And considering that
it's in the standard library, I expect that will be fairly common.  The
learning curve for Twisted is steep enough already; I don't see the need to
add a new and different email module to make that even harder.

That said, we've reinvented wheels before, but there's always been a reason.
In my opinion, "I can't be bothered learning how to use a perfectly good
standard library module" isn't a reason.  Obviously if the standard library
module isn't "perfectly good", there's scope for reinvention, but so far
no-one has claimed that this is the case.

-Andrew.




From naesten at myrealbox.com  Wed Feb  5 21:48:49 2003
From: naesten at myrealbox.com (Samuel Bronson)
Date: Wed, 05 Feb 2003 23:48:49 -0500
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
References: <20030205115931.206ee6dc.twisted@itamarst.org>
Message-ID: <3E41E931.2060401@myrealbox.com>

>
>
>Perhaps I don't understand YOUR Twisted model of networking, which is
>not
>OSI compliant. The OSI model IS NETWORKING and all real Turing-based
>computational systems that employ networking implement parts of the
>
This is where I start laughing out loud... Turing!
--Sam




From glyph at twistedmatrix.com  Fri Feb  7 04:26:34 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 07 Feb 2003 05:26:34 -0600 (CST)
Subject: [Twisted-Python] Sending email asynchronously
In-Reply-To: <20030207040833.GC32136@frobozz.local>
References: <20030206.200807.74744704.glyph@twistedmatrix.com>
	<968A5A80-3A45-11D7-8114-000A95686CD8@redivi.com>
	<20030207040833.GC32136@frobozz.local>
Message-ID: <20030207.052634.78711370.glyph@twistedmatrix.com>


On Fri, 7 Feb 2003 15:08:33 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> In my opinion, "I can't be bothered learning how to use a perfectly good
> standard library module" isn't a reason.  Obviously if the standard library
> module isn't "perfectly good", there's scope for reinvention, but so far
> no-one has claimed that this is the case.

Speaking as an outspoken advocate of NIH, I definitely think that in this case
the standard library module is perfectly good :-).  I've been doing a lot with
email processing lately, and hopefully some of this work will start filtering
back Twisted-wards soon.

I was going to write a bunch of other stuff about odd situations that occur in
email, but: suffice it to say that email is not as simple as it seems at first
blush.  You can make some really weird mistakes, and having a central
chokepoint for dealing with MIME implementation weirdness is nice.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030207/4c273c4f/attachment.sig>

From twisted at moshez.org  Fri Feb  7 09:41:59 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 7 Feb 2003 16:41:59 -0000
Subject: [Twisted-Python] Lore: the New Generation
Message-ID: <20030207164159.14772.qmail@green.zadka.com>

Dear Twisted Users and Developers,

I have refactored Lore to get rid of some of the ugliness that it has
managed to accumulate. It used to be that there were three Lore scripts:
generatelore, html2latex and hlint. The second two were misnamed, and only
the first one had nice progress bars. In addition, the man2lore capability
was not available via a command line script. It was amazingly hard to
extend Lore, so much that it drove several users to maintain their own
fork.

Hopefully, all of these problems are solved after the refactoring. Documentation
is available at doc/howto/lore.html and the Lore manpage. Extending is
currently not documented, but twisted/lore/math.py is an example for how
I believe extensions should go. There are many more features planned, but
hopefully there will be no more UI breakage.

Moshe

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From skin_pup-twisted at damnable.happypoo.com  Fri Feb  7 14:01:28 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Fri, 7 Feb 2003 16:01:28 -0500
Subject: [Twisted-Python] Solaris t.i.process.py patch.
Message-ID: <20030207210128.GU32425@shitbomb.com>

On Solaris for some reason whenever I ran my app in the background it
would fail (as seen in the attached log, twisted -f poo.tap).  But the 
really weird thing was when I ran it in the foreground (twisted -n -f
poo.tap) it did not return this error.  I have created a patch that 
fixes the problem does not really solve it.  I will be checking into 
this some more,  and what is wrong with Solaris :)

Jeremy 

-------------- next part --------------
Index: twisted/internet/process.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/process.py,v
retrieving revision 1.46
diff -u -r1.46 process.py
--- twisted/internet/process.py	6 Jan 2003 05:56:46 -0000	1.46
+++ twisted/internet/process.py	7 Feb 2003 20:50:54 -0000
@@ -242,9 +242,13 @@
                              (command, str(args),
                               "id %s" % id(environment)))
                 traceback.print_exc(file=stderr)
-                stderr.flush()
-                for fd in range(3):
-                    os.close(fd)
+                # XXX This is to deal with Solaris. 
+                try:
+                    stderr.flush()
+                    for fd in range(3):
+                        os.close(fd)   
+                except IOError:
+                    pass       
             os._exit(1)
         if settingUID:
             os.setregid(currgid, curegid)
@@ -485,7 +489,11 @@
                              (command, str(args),
                               "id %s" % id(environment)))
                 traceback.print_exc(file=stderr)
-                stderr.flush()
+                # XXX More to deal with solaris
+                try:
+                    stderr.flush()
+                except IOError:
+                    pass
             os._exit(1)
         assert pid!=0
         os.close(slavefd)
-------------- next part --------------
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 213, i
n _startRunCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     self._runCallbacks()
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 227, i
n _runCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     (self.result,)+tuple(args), kw)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 162, i
n callback
06/02/2003 14:51 [MasterLDAPClient,client]     self._startRunCallbacks(result, 0)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 213, i
n _startRunCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     self._runCallbacks()
06/02/2003 14:51 [MasterLDAPClient,client] --- <exception caught here> ---
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py", line 227, i
n _runCallbacks
06/02/2003 14:51 [MasterLDAPClient,client]     (self.result,)+tuple(args), kw)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 601, in s
torage
06/02/2003 14:51 [MasterLDAPClient,client]     sudoersWrite(d, self.client.factory.searchs[i].storage)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 526, in _
_init__
06/02/2003 14:51 [MasterLDAPClient,client]     self.write()
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 533, in w
rite
06/02/2003 14:51 [MasterLDAPClient,client]     d = ProtocolWithDeferred(checkfile, visudo, ['-c', '-f', self.obj.filename + ".tmp
"], {})
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/ldap2system/sudoers.py", line 518, in P
rotocolWithDeferred
06/02/2003 14:51 [MasterLDAPClient,client]     reactor.spawnProcess(p, executable, (executable,)+tuple(args), env, path)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py", line 274,
 in spawnProcess
06/02/2003 14:51 [MasterLDAPClient,client]     return process.Process(self, executable, args, env, path, processProtocol, uid, gi
d)
06/02/2003 14:51 [MasterLDAPClient,client]   File "/usr/local/lib/python2.2/site-packages/twisted/internet/process.py", line 245,
 in __init__
06/02/2003 14:51 [MasterLDAPClient,client]     stderr.flush()
06/02/2003 14:51 [MasterLDAPClient,client] exceptions.IOError: [Errno 9] Bad file number


From lac at strakt.com  Fri Feb  7 16:26:43 2003
From: lac at strakt.com (Laura Creighton)
Date: Sat, 8 Feb 2003 00:26:43 +0100
Subject: [Twisted-Python] giving talks
Message-ID: <200302072326.h17NQhIZ020248@ratthing-b246.strakt.com>

It occurs to me that some of you may not have read 
http://perl.plover.com/yak/presentation/samples/notes.html
which is 'how to give a talk' for Perl conferences, which maps
pretty nicely to Python conferences as well.  I most certainly
wouldn't do everything that this person suggests.  Bathroom humour
is not going to work for me.  But it is good to read, so that when
you _don't_ do things his way, you know why you aren't.  And most
of this paper is very good advice I wish I had before I gave my
first, or 10th speech in public.

good luck, and hope this wasn't too far off topic,
Laura



From glyph at twistedmatrix.com  Fri Feb  7 17:08:04 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 07 Feb 2003 18:08:04 -0600 (CST)
Subject: [Twisted-Python] Fw: Re: Zope and Twisted
In-Reply-To: <3E41E931.2060401@myrealbox.com>
References: <20030205115931.206ee6dc.twisted@itamarst.org>
	<3E41E931.2060401@myrealbox.com>
Message-ID: <20030207.180804.45188127.glyph@twistedmatrix.com>

On Wed, 05 Feb 2003 23:48:49 -0500, Samuel Bronson <naesten at myrealbox.com> wrote:

> > OSI compliant. The OSI model IS NETWORKING and all real Turing-based
> > computational systems that employ networking implement parts of the

> This is where I start laughing out loud... Turing!

We can hardly blame the fellow for not knowing that Twisted was originally
developed on babbage-derived hardware before being ported to the more archaic
van-neumann architectures.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030207/5df126d3/attachment.sig>

From m at moshez.org  Sat Feb  8 11:53:04 2003
From: m at moshez.org (Moshe Zadka)
Date: 8 Feb 2003 18:53:04 -0000
Subject: [Twisted-Python] Lore vs. latex2html: Fight to the Finish
Message-ID: <20030208185304.9876.qmail@green.zadka.com>

Dear Twisted developers,

I have started converting Thinking Like a Computer Scientist in Python
to Lore, to try and see what Lore is missing. It has been a most education
experience. The two prime things Lore is currently missing for lossless
conversion (of the specific chapter I tested) are:

* EPS images support
* Indexing support

However, beyond that, I am interested to know which looks better:

latex2html: http://www.ibiblio.org/obp/thinkCSpy/chap01.htm
Lore: http://twistedmatrix.com/users/moshez/loreprop/
(The Lore is using the Twisted documentation stylesheet.)

Any comments would be nice. Comments which come with a patch to the
stylesheet will be doubly appreciated.

Thanks in advance,
Moshe Zadka

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From radix at twistedmatrix.com  Sat Feb  8 13:53:38 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 8 Feb 2003 15:53:38 -0500
Subject: [Twisted-Python] Lore vs. latex2html: Fight to the Finish
In-Reply-To: <20030208185304.9876.qmail@green.zadka.com>
References: <20030208185304.9876.qmail@green.zadka.com>
Message-ID: <20030208205338.GA1101@radii>

On Sat, Feb 08, 2003 at 06:53:04PM -0000, Moshe Zadka wrote:
> The two prime things Lore is currently missing for lossless
> conversion (of the specific chapter I tested) are:
> 
> * EPS images support
> * Indexing support

I assume `Indexing support' implies the navigation stuff at the
top/bottom of the latex2html version?

> Any comments would be nice. Comments which come with a patch to the
> stylesheet will be doubly appreciated.

Also, I know this is an old argument, but I do prefer bold for
emphasis rather than italics: bold stands out much more when you're
skimming through. I like it when I can find the initial
description/definition of a term within a particular area of a paper
by skimming over all of the bold terms.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From corydodt at yahoo.com  Sun Feb  9 10:13:09 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Sun, 9 Feb 2003 09:13:09 -0800 (PST)
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish (Moshe Zadka)
Message-ID: <20030209171309.58390.qmail@web10010.mail.yahoo.com>

Code blocks look much nicer in Lore (it's no contest, really), but I like
the usefulness of the original's navigation header--just the blue strip,
really.  I guess that falls under the heading "Indexes".  However, I'm
wondering about automatic numbering.

It helps to have the numbers there in the HTML, even though you aren't
flipping through physical pages to find them.  Why?  People often look at
a hardcopy of doc, and then try to find the same section in the live copy.
 This becomes much harder if the live copy doesn't advertise section
numbers that match the hard copy's.

CSS2 actually has support for automatic numbering, but no browser
currently supports it (I've tested Mozilla, IE, and Opera).  So, I'm not
submitting a CSS patch. :-(

As far as EPS conversion, I've already done the legwork on this one if
you'd like to see my pilhtml2latex.  I haven't been brave enough to try
Lore yet, so it still depends on the old html2latex code.


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From m at moshez.org  Sun Feb  9 11:30:11 2003
From: m at moshez.org (Moshe Zadka)
Date: 9 Feb 2003 18:30:11 -0000
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish (Moshe Zadka)
In-Reply-To: <20030209171309.58390.qmail@web10010.mail.yahoo.com>
References: <20030209171309.58390.qmail@web10010.mail.yahoo.com>
Message-ID: <20030209183011.1074.qmail@green.zadka.com>

On Sun, 9 Feb 2003, Cory Dodt <corydodt at yahoo.com> wrote:

> It helps to have the numbers there in the HTML, even though you aren't
> flipping through physical pages to find them.  Why?  People often look at
> a hardcopy of doc, and then try to find the same section in the live copy.
>  This becomes much harder if the live copy doesn't advertise section
> numbers that match the hard copy's.

That's an interesting point.
I don't really need CSS to do the work, I can do it right there in the
HTML...I'm just kinda wondering whether it is the right thing to do...

> As far as EPS conversion, I've already done the legwork on this one if
> you'd like to see my pilhtml2latex.  I haven't been brave enough to try
> Lore yet, so it still depends on the old html2latex code.
 
Well, I'm more wondering what interface it should present to the user --
once we decide on an interface, the implementation shouldn't be hard.
I'm currently leaning towards <a href="file.eps" class="eps">caption</a>.
The rationale is that this seems to be the best bet in case your browser
happens to have a handler for the PS format, which is a gazillion times
more likely than <img src="file.eps"/> working. Again, the overriding
concern here is "what looks good in the source format".

Overall, I think that the conclusion I've drawn from this useful discussion
is: "people would kill for navigation". I've got some thoughts on this
subject: this is certainly a thorny issue. 

Thanks for the ideas,
Moshe Zadka
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From bob at redivi.com  Sun Feb  9 11:55:44 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 9 Feb 2003 13:55:44 -0500
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish (Moshe Zadka)
In-Reply-To: <20030209183011.1074.qmail@green.zadka.com>
Message-ID: <1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>

On Sunday, Feb 9, 2003, at 13:30 America/New_York, Moshe Zadka wrote:

> On Sun, 9 Feb 2003, Cory Dodt <corydodt at yahoo.com> wrote:
>
>> As far as EPS conversion, I've already done the legwork on this one if
>> you'd like to see my pilhtml2latex.  I haven't been brave enough to 
>> try
>> Lore yet, so it still depends on the old html2latex code.
>
> Well, I'm more wondering what interface it should present to the user 
> --
> once we decide on an interface, the implementation shouldn't be hard.
> I'm currently leaning towards <a href="file.eps" 
> class="eps">caption</a>.
> The rationale is that this seems to be the best bet in case your 
> browser
> happens to have a handler for the PS format, which is a gazillion times
> more likely than <img src="file.eps"/> working. Again, the overriding
> concern here is "what looks good in the source format".

Why not PDF instead of EPS?  They're practically the same internally, 
conversion from eps -> pdf is trivial, and PDF is a lot more likely to 
be viewable.

-bob




From glyph at twistedmatrix.com  Sun Feb  9 21:26:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 09 Feb 2003 22:26:27 -0600 (CST)
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish
 (Moshe Zadka)
In-Reply-To: <1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>
References: <20030209183011.1074.qmail@green.zadka.com>
	<1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>
Message-ID: <20030209.222627.59461714.glyph@twistedmatrix.com>


On Sun, 9 Feb 2003 13:55:44 -0500, Bob Ippolito <bob at redivi.com> wrote:

> Why not PDF instead of EPS?  They're practically the same internally,
> conversion from eps -> pdf is trivial, and PDF is a lot more likely to be
> viewable.

PS is an older and more established format with better free tools for
manipulating it.  I certainly haven't had the experience of EPS=>PDF being
"trivial" (it seems to be lossy unless you're careful about it), and I know of
good-quality PS viewers everywhere and PDF viewers only in some places.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030209/1d9dd461/attachment.sig>

From m at moshez.org  Sun Feb  9 23:03:10 2003
From: m at moshez.org (Moshe Zadka)
Date: 10 Feb 2003 06:03:10 -0000
Subject: [Twisted-Python] Re: Lore vs. latex2html: Fight to the Finish
 (Moshe Zadka)
In-Reply-To: <20030209.222627.59461714.glyph@twistedmatrix.com>
References: <20030209.222627.59461714.glyph@twistedmatrix.com>, <20030209183011.1074.qmail@green.zadka.com>
	<1792AF04-3C60-11D7-9779-000A95686CD8@redivi.com>
Message-ID: <20030210060310.8200.qmail@green.zadka.com>

On Sun, 09 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> PS is an older and more established format with better free tools for
> manipulating it.  I certainly haven't had the experience of EPS=>PDF being
> "trivial" (it seems to be lossy unless you're careful about it), and I know of
> good-quality PS viewers everywhere and PDF viewers only in some places.

All this discussion is irrelevant, really: supporting EPS images is something
which *needs* to be in Lore, because people are currently expecting the ability
to embed EPS images into documents. The only question is, "what source format
would be best for EPS images?". In Lore, "best" translates to "most hope
to be readable when opening the raw source in a web browser".

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From exarkun at intarweb.us  Mon Feb 10 16:16:53 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 10 Feb 2003 18:16:53 -0500
Subject: [Twisted-Python] A useful value for argv[0]
Message-ID: <20030210231653.GA13539@meson.dyndns.org>

  I think it would be neat if twistd re-executed itself(/python), and
specified the name of the tap/tas/tax file it was currently processing as
the value for argv[0].  This would make administering a system with many
twistd processes running much easier.  Want to see your webserver?  Just
run "ps -C web.tap".  Of course there could still be name conflicts, but
this might encourage the naming of tap files to be more selective.  The
system wide twisted.web tap could be "system-web" and Bob's distributed web
could be "bob-web".

  It makes integration with init scripts easier, too (at least on the
system's I'm familiar with), for the same reason.  Instead of keeping track
of pid files, just specify the name of the tap to start/stop/whatever.

  Anyone like?  Anyone hate?

  Jp

-- 
 up 2 days, 4:28, 3 users, load average: 0.04, 0.08, 0.06
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030210/9b754fe3/attachment.sig>

From jjn at kriln.com  Mon Feb 10 16:30:24 2003
From: jjn at kriln.com (Jeremy Noetzelman)
Date: Mon, 10 Feb 2003 23:30:24 +0000 (GMT)
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030210231653.GA13539@meson.dyndns.org>
Message-ID: <20030210232953.V22380-100000@nosferatu.kriln.com>

I like.  Alot.

It's tolerable to have it show up as twistd with only one or two taps, but
when you have more than one, ugh.

On Mon, 10 Feb 2003, Jp Calderone wrote:

>   I think it would be neat if twistd re-executed itself(/python), and
> specified the name of the tap/tas/tax file it was currently processing as
> the value for argv[0].  This would make administering a system with many
> twistd processes running much easier.  Want to see your webserver?  Just
> run "ps -C web.tap".  Of course there could still be name conflicts, but
> this might encourage the naming of tap files to be more selective.  The
> system wide twisted.web tap could be "system-web" and Bob's distributed web
> could be "bob-web".
>
>   It makes integration with init scripts easier, too (at least on the
> system's I'm familiar with), for the same reason.  Instead of keeping track
> of pid files, just specify the name of the tap to start/stop/whatever.
>
>   Anyone like?  Anyone hate?
>
>   Jp
>
> --
>  up 2 days, 4:28, 3 users, load average: 0.04, 0.08, 0.06
>




From kwaker at uch.net  Mon Feb 10 16:56:55 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 01:56:55 +0200
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
Message-ID: <963376329.20030211015655@uch.net>

$subj

i.e. will we simplify our life by using generators from Python 2.3, I
thought of that already but currently have Twisted windows binaries
only for Python 2.2.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From bob at redivi.com  Mon Feb 10 17:33:54 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 10 Feb 2003 19:33:54 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <963376329.20030211015655@uch.net>
Message-ID: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>

On Monday, Feb 10, 2003, at 18:56 America/New_York, Dmitry Litovchenko 
wrote:

> i.e. will we simplify our life by using generators from Python 2.3, I
> thought of that already but currently have Twisted windows binaries
> only for Python 2.2.

We've been over this one before.  Although generators have been in 
__future__ for all of 2.2, Twisted can't use generators so long as we 
need to support 2.1.  As far as I know, we need to have full support 
for 2.1 as long as Zope requires it.

-bob




From kwaker at uch.net  Mon Feb 10 18:04:02 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 03:04:02 +0200
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
References: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
Message-ID: <417403503.20030211030402@uch.net>

Hello Bob,

>> i.e. will we simplify our life by using generators from Python 2.3, I
>> thought of that already but currently have Twisted windows binaries
>> only for Python 2.2.

BI> We've been over this one before.  Although generators have been in 
BI> __future__ for all of 2.2, Twisted can't use generators so long as we 
BI> need to support 2.1.  As far as I know, we need to have full support 
BI> for 2.1 as long as Zope requires it.

I am using Zope for a long time too, and didn't see any tracks of
Twisted there, Medusa only. I can't see any other reason for binding
to 2.1 and not moving towards to Python's bright future.

Due to my high interest to Zope, I even downloaded Zope-3's first
release and also didn't find tracks of Twisted there. Zopistas usually
name core folders honestly, not hiding used 3rd party package names,
just like it was folder "Medusa" in Zope 2.x.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From andrew-twisted at puzzling.org  Mon Feb 10 19:06:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 13:06:02 +1100
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
References: <963376329.20030211015655@uch.net> <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
Message-ID: <20030211020602.GD16336@frobozz.local>

On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
> need to support 2.1.  As far as I know, we need to have full support 
> for 2.1 as long as Zope requires it.

And also many systems still only have 2.1, e.g. Debian stable (woody).

-Andrew.




From radix at twistedmatrix.com  Mon Feb 10 18:56:02 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 10 Feb 2003 20:56:02 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030210231653.GA13539@meson.dyndns.org>
References: <20030210231653.GA13539@meson.dyndns.org>
Message-ID: <20030211015602.GD12562@radii>

On Mon, Feb 10, 2003 at 06:16:53PM -0500, Jp Calderone wrote:
>   I think it would be neat if twistd re-executed itself(/python), and
> specified the name of the tap/tas/tax file it was currently processing as
> the value for argv[0].  This would make administering a system with many
> twistd processes running much easier.  Want to see your webserver?  Just
> run "ps -C web.tap".  Of course there could still be name conflicts, but
> this might encourage the naming of tap files to be more selective.  The
> system wide twisted.web tap could be "system-web" and Bob's distributed web
> could be "bob-web".
> 
>   It makes integration with init scripts easier, too (at least on the
> system's I'm familiar with), for the same reason.  Instead of keeping track
> of pid files, just specify the name of the tap to start/stop/whatever.
> 
>   Anyone like?  Anyone hate?

I think it would be pretty neat. But if we do it, as you mention
above, it would lead to name conflicts. I think an `--appname'
argument to `mktap' would be in order.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From rob at zoism.org  Mon Feb 10 19:01:26 2003
From: rob at zoism.org (Rob Brown-Bayliss)
Date: 11 Feb 2003 15:01:26 +1300
Subject: [Twisted-Python] where to begin
Message-ID: <1044928876.24461.10.camel@caspian.everglade>

Hi - Help!

I have begun looking at twisted and imediatly became overwelmed,
factories, reactors, taps, enterprise, web, spread...  

There is a lot, but every article I have read on the site seems to rely
on the reader understanding what several of these are and how they
relate and why they relate etc etc.

So I am guessing that twisted can be of use to me, I am embarking on a
GTK2 style app, and I see twisted can some how interact with the gtk
mainloop.

My project consists of several client apps that continual send and
recieve data from the main control app.  Some of the clients may be on
the same machine as the control app, some on other machines depending on
location.  

Some times the control app needs to send the same information to all
apps togeather and some times only to one or two clients.

I had been looking at spread (not twisted spread) for this
functionality, and it can be of use, but can twisted provide a better
solution or is spread better suited to this sort of application?

More importantly could some one provide me with a pointer to a basic
gtk2 client server setup as a starting point for my exploration?

Thanks

-- 

*  Rob Brown-Bayliss
*  =================	
*      zoism.org



From radix at twistedmatrix.com  Mon Feb 10 18:59:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 10 Feb 2003 20:59:21 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
References: <963376329.20030211015655@uch.net> <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
Message-ID: <20030211015921.GE12562@radii>

On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
> 
> On Monday, Feb 10, 2003, at 18:56 America/New_York, Dmitry Litovchenko 
> wrote:
> 
> >i.e. will we simplify our life by using generators from Python 2.3, I
> >thought of that already but currently have Twisted windows binaries
> >only for Python 2.2.
> 
> We've been over this one before.  Although generators have been in 
> __future__ for all of 2.2, Twisted can't use generators so long as we 
> need to support 2.1.  As far as I know, we need to have full support 
> for 2.1 as long as Zope requires it.

But of course this doesn't prevent your *own* code from using
generators, if you want to require Python 2.2, which Twisted works
fine with. We just can't accept any generator-using code into core
Twisted.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From grimmtooth at softhome.net  Mon Feb 10 19:01:42 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Mon, 10 Feb 2003 21:01:42 -0500
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <417403503.20030211030402@uch.net>
Message-ID: <01c201c2d171$86491000$6501a8c0@listy>

Hi,

I'm having a problem using the win32eventreactor, following the example
code. Here's the basic gist of the code in use:

from	twisted.internet.protocol	import	Factory
from	twisted.internet		import	reactor
from	twisted.internet		import	win32eventreactor
from	twisted.protocols.basic	import	LineReceiver


:: classes and stuff ::

win32eventreactor.install()

factory = myFactory()
reactor.listenTCP(1001,factory)
reactor.run()
sys.exit(0)

This generates an error message at the win32eventreactor.install() line:

    assert not sys.modules.has_key('twisted.internet.reactor'), \
AssertionError: reactor already installed

What am I missing?

Also, any ideas why SIGBREAK appears to be ignored?  I've tweaked the
source here and there to generate debugging info, and from what I can
see, the reactor isn't even hitting the SIGBREAK handler that is
installed with signal.signal()
(default.PosixReactorBase._handleSignals()).  I've worked around it
temporarilly by commenting out the SIGBREAK handler install, but I'm
sure there's a better solution :-)

Win2000sp3, Python 2.2, Twisted 1.0.2, FWIW.





From dave at krondo.com  Mon Feb 10 19:04:56 2003
From: dave at krondo.com (Dave Peticolas)
Date: 10 Feb 2003 18:04:56 -0800
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <01c201c2d171$86491000$6501a8c0@listy>
References: <01c201c2d171$86491000$6501a8c0@listy>
Message-ID: <1044929096.1165.102.camel@oneiros>

On Mon, 2003-02-10 at 18:01, Jeff Grimmett wrote:
> Hi,
> 
> I'm having a problem using the win32eventreactor, following the example
> code. Here's the basic gist of the code in use:
> 
> from	twisted.internet.protocol	import	Factory
> from	twisted.internet		import	reactor
> from	twisted.internet		import	win32eventreactor
> from	twisted.protocols.basic	import	LineReceiver
> 
> 
> :: classes and stuff ::
> 
> win32eventreactor.install()
> 
> factory = myFactory()
> reactor.listenTCP(1001,factory)
> reactor.run()
> sys.exit(0)
> 
> This generates an error message at the win32eventreactor.install() line:
> 
>     assert not sys.modules.has_key('twisted.internet.reactor'), \
> AssertionError: reactor already installed
> 
> What am I missing?

Try importing the win32 reactor first and then immediately
installing it:

from	twisted.internet		import	win32eventreactor
win32eventreactor.install()

from	twisted.internet		import	reactor


dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030210/db62c784/attachment.sig>

From andrew-twisted at puzzling.org  Mon Feb 10 19:41:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 13:41:15 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044928876.24461.10.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade>
Message-ID: <20030211024115.GE16336@frobozz.local>

On Tue, Feb 11, 2003 at 03:01:26PM +1300, Rob Brown-Bayliss wrote:
> 
> Hi - Help!
> 
> I have begun looking at twisted and imediatly became overwelmed,
> factories, reactors, taps, enterprise, web, spread...  
> 
> There is a lot, but every article I have read on the site seems to rely
> on the reader understanding what several of these are and how they
> relate and why they relate etc etc.

Yes, this is a well-known problem.  The docs are improving, but aren't
perfect yet.  Hopefully the glossary at
    http://twistedmatrix.com/documents/howto/glossary
can help you get a one-sentence description of all the wacky terms, so you
can figure out what's relevant to you.

If you have the time, I'd strongly recommend reading all of docs in these
chapters: "The Basics", "High-Level Twisted", "Low-Level Twisted".

> So I am guessing that twisted can be of use to me, I am embarking on a
> GTK2 style app, and I see twisted can some how interact with the gtk
> mainloop.

Try looking in doc/examples/ -- there should be some simple gtk/gtk2
examples in there.

> My project consists of several client apps that continual send and
> recieve data from the main control app.  Some of the clients may be on
> the same machine as the control app, some on other machines depending on
> location.  
> 
> Some times the control app needs to send the same information to all
> apps togeather and some times only to one or two clients.
> 
> I had been looking at spread (not twisted spread) for this
> functionality, and it can be of use, but can twisted provide a better
> solution or is spread better suited to this sort of application?

This sounds like something Twisted would be good at.

> More importantly could some one provide me with a pointer to a basic
> gtk2 client server setup as a starting point for my exploration?

The GUI bits are a little under-documented.  There's not much beyond what's
in the docstrings, doc/examples, and a brief snippet in
http://twistedmatrix.com/documents/howto/choosing-reactor.

-Andrew.




From grimmtooth at softhome.net  Mon Feb 10 19:40:55 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Mon, 10 Feb 2003 21:40:55 -0500
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <1044929096.1165.102.camel@oneiros>
Message-ID: <01c801c2d177$013c7d10$6501a8c0@listy>


> Try importing the win32 reactor first and then immediately 
> installing it:
> 
> from	twisted.internet		import	win32eventreactor
> win32eventreactor.install()
> 
> from	twisted.internet		import	reactor

I was just getting ready to try that ;-)

It works!

This would be an *excellent* thing to put into the 'Choosing a reactor'
docs. Almost put me over the wall :-)

Thanks!




From eenge at prium.net  Mon Feb 10 13:37:22 2003
From: eenge at prium.net (Erik Enge)
Date: Mon, 10 Feb 2003 15:37:22 -0500
Subject: [Twisted-Python] Twisted performance.
Message-ID: <87isvrrhx9.fsf@prium.net>

Hi all.

So, I'm wondering if Twisted can handle /really/ heavy load.  I was
reading the archives and I couldn't really find many threads on it
(actually, just one, and it didn't give me what I wanted).

Does anybody out there have any stories to tell about thousands of
persistent connections or hundreds of megabytes of throughput?  I'm
particularly interested in how many connections per second your Twisted
application can handle and, obviously, what hardware you are running it
on.

Thanks,

Erik.




From rob at zoism.org  Mon Feb 10 20:59:49 2003
From: rob at zoism.org (Rob Brown-Bayliss)
Date: 11 Feb 2003 16:59:49 +1300
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211024115.GE16336@frobozz.local>
References: <1044928876.24461.10.camel@caspian.everglade>
	 <20030211024115.GE16336@frobozz.local>
Message-ID: <1044935987.24502.19.camel@caspian.everglade>

> Yes, this is a well-known problem.  The docs are improving, but aren't
> perfect yet.  Hopefully the glossary at
>     http://twistedmatrix.com/documents/howto/glossary
> can help you get a one-sentence description of all the wacky terms, so you
> can figure out what's relevant to you.

And I still dont get it, am I supposed to use twisted as a base class
for my app, derive a class for my comunication or what?

Every thing seems to link on to something else, deffereds, it's own web
servewr etc, it seems like it's a joke, or if not then certianly
overkill for sending data over sockets.

Yet at the same time it seems to say "This is what you need Rob, Twisted
it is"

So do where do I start a GUI app, with pygtk and import some object
based on a factory/reactor setup?  And what is the point of tap's?  why
not just run the python code as I would any other code?  why would I
want to change reactors at startup?

It just seems to defy logic, where as useing pythonx xml-rpc or the
spread module is simple and obvious, 


-- 

*  Rob Brown-Bayliss
*  =================	
*      zoism.org



From twisted at itamarst.org  Mon Feb 10 21:54:15 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 10 Feb 2003 23:54:15 -0500
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <01c201c2d171$86491000$6501a8c0@listy>
References: <417403503.20030211030402@uch.net>
	<01c201c2d171$86491000$6501a8c0@listy>
Message-ID: <20030210235415.474c70c1.twisted@itamarst.org>

On Mon, 10 Feb 2003 21:01:42 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> This generates an error message at the win32eventreactor.install()
> line:
> 
>     assert not sys.modules.has_key('twisted.internet.reactor'), \
> AssertionError: reactor already installed
> 
> What am I missing?

win32eventreactor.install() should be the *first* thing in your module
or app. It has to be run before any other code is, or someone might
"from twisted.internet import reactor", which installs the default
reactor.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at itamarst.org  Mon Feb 10 22:07:16 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 00:07:16 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade>
	<20030211024115.GE16336@frobozz.local>
	<1044935987.24502.19.camel@caspian.everglade>
Message-ID: <20030211000716.1426f839.twisted@itamarst.org>

On 11 Feb 2003 16:59:49 +1300
Rob Brown-Bayliss <rob at zoism.org> wrote:

> Every thing seems to link on to something else, deffereds, it's own
> web servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.

You don't need to use the web server.

> Yet at the same time it seems to say "This is what you need Rob,
> Twisted it is"

The point is Twisted does networking. From low level to high level, it
has what you need. But you can ignore most of the bits that aren't
relevant.

> And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?

TAPs are not required, they are optional. Choosing a reactor is how you
decide to use e.g. the GTK+ event loop instead of the default one.

> It just seems to defy logic, where as useing pythonx xml-rpc or the
> spread module is simple and obvious, 

Using any part of twisted is simple. Trying to understand all of it at
once is not. Which is a problem.

Maybe looking through some examples will help:
http://www.twistedmatrix.com/documents/examples/pbgtk.py is a sample app
using GTK and PB.



From simon at obsidian.com.au  Mon Feb 10 22:09:36 2003
From: simon at obsidian.com.au (Simon Hookway)
Date: 11 Feb 2003 16:09:36 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade>
	 <20030211024115.GE16336@frobozz.local>
	 <1044935987.24502.19.camel@caspian.everglade>
Message-ID: <1044940176.638.13.camel@aoba>

Well, i may be wrong, but then hopefully someone will correct me and
i'll learn too. So here's my 2 cents.

It is rather daunting, i agree. I've built a python/gtk2 app myself
(actually still in the process) using twisted pb. Why, because it
allowed me to call remote methods on the server from an authenticated
client process. Since i already had the methods and a CLI for my app
this was great. I just built a gtk2 interface and made hooks for calling
remote methods, then callbacks to handle the returned data object and
update the gtk2 interface.

The reactor, as i understand it is to hook into the mainloop, since I
needed twisted to hook into the gtk mainloop you have to import the gtk2
reator and install it, otherwise twisteds mainloop reactor takes over
and there's no interaction between twisted and gtk.

Of course, i don't install the gtk2 reactor in my server process, the
normal one is fine.

I chose the pb because it allowed me an easy way to auth clients. On
this issue, i've tried and failed to use SSL for pb auth connections,
can anyone give me quick example of doing a pb auth session using SSL?

I'd be happy to share some of my code if that'll help..

Cheers,

Simon

On Tue, 2003-02-11 at 14:59, Rob Brown-Bayliss wrote:
> > Yes, this is a well-known problem.  The docs are improving, but aren't
> > perfect yet.  Hopefully the glossary at
> >     http://twistedmatrix.com/documents/howto/glossary
> > can help you get a one-sentence description of all the wacky terms, so you
> > can figure out what's relevant to you.
> 
> And I still dont get it, am I supposed to use twisted as a base class
> for my app, derive a class for my comunication or what?
> 
> Every thing seems to link on to something else, deffereds, it's own web
> servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.
> 
> Yet at the same time it seems to say "This is what you need Rob, Twisted
> it is"
> 
> So do where do I start a GUI app, with pygtk and import some object
> based on a factory/reactor setup?  And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?
> 
> It just seems to defy logic, where as useing pythonx xml-rpc or the
> spread module is simple and obvious, 
-- 
Simon Hookway <simon at obsidian.com.au>



From kwaker at uch.net  Mon Feb 10 22:15:26 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 07:15:26 +0200
Subject: [Twisted-Python] Is there any SOCKS client example
Message-ID: <722490538.20030211071526@uch.net>

Hello Twisted-Python,

I've found only Socks4 server implementation in protocols/socks4.py
And it seems that there is no Socks4 client inside. Should I look
better?

Okay, I know where to look for Socks5 and HTTP tunneling proxy RFC and
can implement them (client parts), but how can I do that if I even
don't understand how socks client works :)

Also is there any client example that wraps any service - http, smtp,
oscar etc inside socks session? No example, no documentation. Got any
clues?

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From twisted at itamarst.org  Mon Feb 10 22:18:25 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 00:18:25 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044940176.638.13.camel@aoba>
References: <1044928876.24461.10.camel@caspian.everglade>
	<20030211024115.GE16336@frobozz.local>
	<1044935987.24502.19.camel@caspian.everglade>
	<1044940176.638.13.camel@aoba>
Message-ID: <20030211001825.0ede0f4b.twisted@itamarst.org>

On 11 Feb 2003 16:09:36 +1100
Simon Hookway <simon at obsidian.com.au> wrote:

> I chose the pb because it allowed me an easy way to auth clients. On
> this issue, i've tried and failed to use SSL for pb auth connections,
> can anyone give me quick example of doing a pb auth session using SSL?

Making this easy to do is on our TODO list for our coding sprint at
PyCon, if it's not done before that.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From kwaker at uch.net  Mon Feb 10 22:19:23 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 11 Feb 2003 07:19:23 +0200
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <20030211020602.GD16336@frobozz.local>
References: <963376329.20030211015655@uch.net>
 <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com>
 <20030211020602.GD16336@frobozz.local>
Message-ID: <2322726827.20030211071923@uch.net>

Hello Andrew,

Tuesday, February 11, 2003, 4:06:02 AM, you wrote:

AB> On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
>> need to support 2.1.  As far as I know, we need to have full support 
>> for 2.1 as long as Zope requires it.

AB> And also many systems still only have 2.1, e.g. Debian stable (woody).

Okay, next question. I am highly interested in non-standard control
flow in Python, which was implemented in stackless python, which
(stackless python I mean) seems to be discontinued or at least very
slowly updated. Does anyone know when will these appear in standard
Python.

These control flows seem to make things much simpler.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From bob at redivi.com  Mon Feb 10 22:22:24 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 11 Feb 2003 00:22:24 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
Message-ID: <CD4EAE49-3D80-11D7-B1B3-000A95686CD8@redivi.com>

On Monday, Feb 10, 2003, at 22:59 America/New_York, Rob Brown-Bayliss 
wrote:

>
>> Yes, this is a well-known problem.  The docs are improving, but aren't
>> perfect yet.  Hopefully the glossary at
>>     http://twistedmatrix.com/documents/howto/glossary
>> can help you get a one-sentence description of all the wacky terms, 
>> so you
>> can figure out what's relevant to you.
>
> And I still dont get it, am I supposed to use twisted as a base class
> for my app, derive a class for my comunication or what?

Well instead of starting the GUI's runloop, you'd start the Twisted 
runloop (which, if a proper reactor is installed, would start and run 
both).

> Every thing seems to link on to something else, deffereds, it's own web
> servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.

The web server is just a class, you don't have to actually instantiate 
it.  Deferreds are a "promise" to return a result, when you get a 
deferred as the result of a method, it means that the operation you 
requested is going to take "a while", so you register a callback with 
the Deferred instance and you will get the result of that operation 
later on.  This prevents your application from blocking, waiting for 
that one thing to happen.  It lets you do however many (selectable) 
things you want in parallel without using threads, but it does force 
you to write code differently to accommodate this feature -- although 
you can get around some of that if you use generators, but none of that 
is in the twisted core as generators are not in python 2.1.

> Yet at the same time it seems to say "This is what you need Rob, 
> Twisted
> it is"
>
> So do where do I start a GUI app, with pygtk and import some object
> based on a factory/reactor setup?  And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?

taps are to simplify running daemons, you don't need them for anything. 
  I don't use them for anything myself.

A reactor handles the runloop, if you want to integrate two runloops 
(i.e. the GTK runloop and the twisted runloop) you'll have to install a 
reactor that knows how to do that.  The default reactor expects to run 
by itself.

(/me checks email) - Well, it seems that itamar and simon have covered 
most of this already, so I'll just cut this here.

-bob




From andrew-twisted at puzzling.org  Mon Feb 10 22:35:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 16:35:38 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <1044935987.24502.19.camel@caspian.everglade>
References: <1044928876.24461.10.camel@caspian.everglade> <20030211024115.GE16336@frobozz.local> <1044935987.24502.19.camel@caspian.everglade>
Message-ID: <20030211053538.GF16336@frobozz.local>

On Tue, Feb 11, 2003 at 04:59:49PM +1300, Rob Brown-Bayliss wrote:
> 
> > Yes, this is a well-known problem.  The docs are improving, but aren't
> > perfect yet.  Hopefully the glossary at
> >     http://twistedmatrix.com/documents/howto/glossary
> > can help you get a one-sentence description of all the wacky terms, so you
> > can figure out what's relevant to you.
> 
> And I still dont get it, am I supposed to use twisted as a base class
> for my app, derive a class for my comunication or what?

Ah, right :)

Have a look at doc/examples/echoserv.py.  It's about as simple as a Twisted
server can get.

To answer a question, Twisted is a framework.  It's not so much a library
that you inherit a class or two from, but framework to build your
application upon.  Specifically, Twisted drives your application: *Twisted*
controls the event loop, *Twisted* calls your application code.  Not the
other way around.

> Every thing seems to link on to something else, deffereds, it's own web
> servewr etc, it seems like it's a joke, or if not then certianly
> overkill for sending data over sockets.

That's a natural by-product of Twisted being a framework, unfortunately;
it's hard to take-or-leave each individual piece, you basically have to take
the whole framework or none of it.

> Yet at the same time it seems to say "This is what you need Rob, Twisted
> it is"

Well, we hope so :)  It really is a kick-arse framework :)

> So do where do I start a GUI app, with pygtk and import some object
> based on a factory/reactor setup?  And what is the point of tap's?  why
> not just run the python code as I would any other code?  why would I
> want to change reactors at startup?

Every single one of those questions should be added to the FAQ!  Well asked
:)

Here's a brief walk-through of using the pbgtk example, which demonstrates
using both PB (Perspective Broker, our remote object protocol), and the GTK
reactor:
   $ cd ~/cvs/Twisted/doc/examples
   $ python pbecho.py
   $ twistd -n -f pbecho-start.tap

That's started the PB Echo server.  Now, to run the PB gtk client, from a
different command prompt do this:
   $ python doc/examples/pbgtk.py

The code in those example files is sadly almost uncommented, though :(

The point of taps, and thus the mktap & twistd utilities, is a convenient
way to manage servers; I personally find them a distraction when I'm
developing a new system, and ignore them until want to deploy something...
(and sometimes I just ignore then completely).  Many developers love them.
I suspect I eventually will, too ;)

Basically the only reason to change reactors is if you need GUI support.
Otherwise, the default reactor is almost certainly the best choice.

> It just seems to defy logic, where as useing pythonx xml-rpc or the
> spread module is simple and obvious, 

The reason for this is simple.  Twisted is asynchronous.

This means you can't just pop open an interactive python interpreter,
instantiate something, and away you go.  It means you can't just write some
code, subclass a bit of Twisted, and have magic happen.  It means that
Twisted is the framework, and you have to work within its facilities.

The problem is that you can't do anything that blocks, and that Twisted
controls the event loop.  You can work with that interactively, though, if
you know how:
    >>> def foo(x):
    ...     print 'Hello!', x
    ...         
    >>> from twisted.internet import reactor
    >>> reactor.callLater(0, foo, 'Spam...')
    <twisted.internet.base.DelayedCall instance at 0x824c9f4>
    >>> reactor.iterate()
    Hello! Spam...
    >>> 

But basically, you can't look at Twisted as something you can just bolt-on
to an existing code-base.  It's more fundamental than that, and it will
almost certainly mean restructuring code.  Again, this is why it's a
"framework" and not just a "library".

The good news is that the framework Twisted provides is the sort of thing
any socket server program needs to do anyway, but almost certainly better
written than just a home-brew version.  And being asynchronous is actually
an advantage once you get used to it (in my opinion).

Finally, the best source of documentation in many ways is still the irc
channel, #twisted on irc.freenode.net.  We're usually very responsive to
newbie questions.

-Andrew.




From bob at redivi.com  Mon Feb 10 22:32:25 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 11 Feb 2003 00:32:25 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <2322726827.20030211071923@uch.net>
Message-ID: <33914B9E-3D82-11D7-B1B3-000A95686CD8@redivi.com>


On Tuesday, Feb 11, 2003, at 00:19 America/New_York, Dmitry Litovchenko 
wrote:

> Hello Andrew,
>
> Tuesday, February 11, 2003, 4:06:02 AM, you wrote:
>
> AB> On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
>>> need to support 2.1.  As far as I know, we need to have full support
>>> for 2.1 as long as Zope requires it.
>
> AB> And also many systems still only have 2.1, e.g. Debian stable 
> (woody).
>
> Okay, next question. I am highly interested in non-standard control
> flow in Python, which was implemented in stackless python, which
> (stackless python I mean) seems to be discontinued or at least very
> slowly updated. Does anyone know when will these appear in standard
> Python.
>
> These control flows seem to make things much simpler.

They can make some things easier or more efficient, I tend to use them 
when they make sense.. here's some code I was toying with, it uses 
generators in twisted, doesn't let you do much that you can't do with 
callback chains, but it (possibly) makes some of it a lot more 
straightforward.

-bob

-------------- next part --------------
A non-text attachment was scrubbed...
Name: flow.py
Type: application/octet-stream
Size: 5720 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030211/cfb15cb3/attachment-0006.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: flowexample.py
Type: application/octet-stream
Size: 5637 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030211/cfb15cb3/attachment-0007.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_flow.py
Type: application/octet-stream
Size: 2284 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030211/cfb15cb3/attachment-0008.obj>

From twisted at itamarst.org  Mon Feb 10 22:43:44 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 00:43:44 -0500
Subject: [Twisted-Python] Is there any SOCKS client example
In-Reply-To: <722490538.20030211071526@uch.net>
References: <722490538.20030211071526@uch.net>
Message-ID: <20030211004344.15f7ff4f.twisted@itamarst.org>

On Tue, 11 Feb 2003 07:15:26 +0200
Dmitry Litovchenko <kwaker at uch.net> wrote:

> I've found only Socks4 server implementation in protocols/socks4.py
> And it seems that there is no Socks4 client inside. Should I look

There is no socks4 client. You'll have to write one, which is pretty
easy.

You can pretty easily hook it up so you can do:
SOCKSclient.connectTCP(..) and .listenTCP(..) with the new
connectWith/listenWith reactor API that's in CVS.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at moshez.org  Mon Feb 10 23:35:20 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 06:35:20 -0000
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <CD4EAE49-3D80-11D7-B1B3-000A95686CD8@redivi.com>
References: <CD4EAE49-3D80-11D7-B1B3-000A95686CD8@redivi.com>
Message-ID: <20030211063520.13647.qmail@green.zadka.com>

On Tue, 11 Feb 2003, Bob Ippolito <bob at redivi.com> wrote:

> taps are to simplify running daemons, you don't need them for anything. 
>   I don't use them for anything myself.

I want to explain why taps are useful: Twisted is a Python framework. However,
we want non-Python-literate people to be able to use parts of it (such as
the Web server or the SSH server) without having to learn Python. One way
would have been to write seperate applications: "runTwistedWeb", etc. etc.,
polluting bin. Another way is to use the plugin mechanism to completely
divorce flexible configuration via command-line arguments (mktap) from
running and choosing a reactor (twistd). While it is completely possible
to use twistd with just Python code, naive users will find it easier
to create a tap and then run it.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From bob at redivi.com  Tue Feb 11 01:09:05 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 11 Feb 2003 03:09:05 -0500
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <20030211063520.13647.qmail@green.zadka.com>
Message-ID: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>

On Tuesday, Feb 11, 2003, at 01:35 America/New_York, Moshe Zadka wrote:

> On Tue, 11 Feb 2003, Bob Ippolito <bob at redivi.com> wrote:
>
>> taps are to simplify running daemons, you don't need them for 
>> anything.
>>   I don't use them for anything myself.
>
> I want to explain why taps are useful: Twisted is a Python framework. 
> However,
> we want non-Python-literate people to be able to use parts of it (such 
> as
> the Web server or the SSH server) without having to learn Python. One 
> way
> would have been to write seperate applications: "runTwistedWeb", etc. 
> etc.,
> polluting bin. Another way is to use the plugin mechanism to completely
> divorce flexible configuration via command-line arguments (mktap) from
> running and choosing a reactor (twistd). While it is completely 
> possible
> to use twistd with just Python code, naive users will find it easier
> to create a tap and then run it.

and naive developers will be confused by the whole thing.. I know it 
took me longer to pick up twisted at first because all of the examples 
were tap based, and not just python code.  However, twisted and its 
documentation are a lot farther along these days, so it might be 
different for a new developer now.

-bob




From wilk-ml at flibuste.net  Tue Feb 11 04:02:59 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 11 Feb 2003 12:02:59 +0100
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <87d6lzrsf0.fsf@flibuste.net>

Bob Ippolito <bob at redivi.com> writes:

> On Tuesday, Feb 11, 2003, at 01:35 America/New_York, Moshe Zadka wrote:
> 
> > On Tue, 11 Feb 2003, Bob Ippolito <bob at redivi.com> wrote:
> >
> >> taps are to simplify running daemons, you don't need them for
> >> anything.
> >>   I don't use them for anything myself.
> >
> > I want to explain why taps are useful: Twisted is a Python
> > framework. However,
> > we want non-Python-literate people to be able to use parts of it
> > (such as
> > the Web server or the SSH server) without having to learn
> > Python. One way
> > would have been to write seperate applications: "runTwistedWeb",
> > etc. etc.,
> > polluting bin. Another way is to use the plugin mechanism to completely
> > divorce flexible configuration via command-line arguments (mktap) from
> > running and choosing a reactor (twistd). While it is completely
> > possible
> > to use twistd with just Python code, naive users will find it easier
> > to create a tap and then run it.
> 
> and naive developers will be confused by the whole thing.. I know it
> took me longer to pick up twisted at first because all of the examples
> were tap based, and not just python code.  However, twisted and its
> documentation are a lot farther along these days, so it might be
> different for a new developer now.

So, is there an example of a web server without using tap and twistd
command line ?
I would like to make a web server that could be embed in an .exe with
py2exe. Like i do now with a litle hack of CGIHTTPServer...

For this i would like also to don't use .rpy script of the file system,
but just do myself the link between uri and my own scripts...

thanks

-- 
William Dode - http://flibuste.net



From twisted at moshez.org  Tue Feb 11 04:16:53 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 11:16:53 -0000
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <87d6lzrsf0.fsf@flibuste.net>
References: <87d6lzrsf0.fsf@flibuste.net>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <20030211111653.18307.qmail@green.zadka.com>

On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> So, is there an example of a web server without using tap and twistd
> command line ?

'''
from twisted.web import server, static
from twisted.internet import reactor

root = static.Data("hello world", "text/plain")
root.putChild('', root)
# root.putChild('name-of-my-script', myScriptResource)
site = server.Site(root)
reactor.listenTCP(10998, root)
reactor.run()
'''

> I would like to make a web server that could be embed in an .exe with
> py2exe.

No, you wouldn't.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From andrew-twisted at puzzling.org  Tue Feb 11 04:47:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 11 Feb 2003 22:47:02 +1100
Subject: [Twisted-Python] Possible non-Twisted use-cases for Trial?
Message-ID: <20030211114702.GA16924@frobozz.local>

http://advogato.org/person/follower/diary.html?start=31

Sounds like we're not the only one augmenting/supplanting pyunit...

-Andrew.




From radix at twistedmatrix.com  Tue Feb 11 05:02:39 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 11 Feb 2003 07:02:39 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211053538.GF16336@frobozz.local>
References: <1044928876.24461.10.camel@caspian.everglade> <20030211024115.GE16336@frobozz.local> <1044935987.24502.19.camel@caspian.everglade> <20030211053538.GF16336@frobozz.local>
Message-ID: <20030211120239.GA2557@radii>

On Tue, Feb 11, 2003 at 04:35:38PM +1100, Andrew Bennetts wrote:
> On Tue, Feb 11, 2003 at 04:59:49PM +1300, Rob Brown-Bayliss wrote:
> > Every thing seems to link on to something else, deffereds, it's own web
> > servewr etc, it seems like it's a joke, or if not then certianly
> > overkill for sending data over sockets.
> 
> That's a natural by-product of Twisted being a framework, unfortunately;
> it's hard to take-or-leave each individual piece, you basically have to take
> the whole framework or none of it.

I really don't like how this was answered :) You _don't_ need to take
the entire framework; e.g., you don't need to import the web server,
mail server, etc, unless you want to use them. Deferreds are an
important fundamental thing in Twisted, however; they're one of the
basic abstractions that we use a *lot* in asynchronous
programming. Also, there's nothing stopping someone from tearing apart
Twisted and distributing only the parts they need with their
applications, web server be damned. ;-)

Also, I should note the package layout: twisted.internet is the very
basic stuff that your Twisted app will never be
without. twisted.python has a lot of utilities that twisted.internet
and other packages use. twisted.protocols gives you all the basic
protocol support. These three packages are the most fundamental to
Twisted. The rest are mainly application-level packages.

In addition to these, though, it sounds like Rob will also want to use
twisted.spread (and twisted.cred) for his application. Most of the
rest is unneeded.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From wilk-ml at flibuste.net  Tue Feb 11 05:07:37 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 11 Feb 2003 13:07:37 +0100
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <20030211111653.18307.qmail@green.zadka.com>
References: <87d6lzrsf0.fsf@flibuste.net>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211111653.18307.qmail@green.zadka.com>
Message-ID: <878ywnrpfa.fsf@flibuste.net>

Moshe Zadka <twisted at moshez.org> writes:

> On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > So, is there an example of a web server without using tap and twistd
> > command line ?
> 
> '''
> from twisted.web import server, static
> from twisted.internet import reactor
> 
> root = static.Data("hello world", "text/plain")
> root.putChild('', root)
> # root.putChild('name-of-my-script', myScriptResource)
> site = server.Site(root)
> reactor.listenTCP(10998, root)
> reactor.run()
> '''

thanks, it's a good starting point for me. I can begin to work !

just that it did'nt work like that :

Traceback (most recent call last):
  File "<stdin>", line 8, in ?
  File "/usr/lib/python2.1/site-packages/twisted/internet/default.py", line 232, in listenTCP
    p.startListening()
  File "/usr/lib/python2.1/site-packages/twisted/internet/tcp.py", line 398, in startListening
    self.factory.doStart()
AttributeError: Data instance has no attribute 'doStart'

but i did (is it a good way ?) :

import twisted.web.resource
class MyGreatResource(twisted.web.resource.Resource):
    def render(self, request):
        request.write(request.uri)
	request.write("<br>")
        request.write("%s<form method=post><input type=text name=vvv><input type=submit></form>"%(str(request.args)))
    	return ""

    def isLeaf(self):
        return true

resource = MyGreatResource()

from twisted.internet import app
from twisted.web import static, server, vhost, twcgi, script, trp

site = server.Site(resource)
application = app.Application('web')
application.listenTCP(10999, site)
application.run()

> 
> > I would like to make a web server that could be embed in an .exe with
> > py2exe.
> 
> No, you wouldn't.

why ?

-- 
William Dode - http://flibuste.net



From radix at twistedmatrix.com  Tue Feb 11 05:08:02 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 11 Feb 2003 07:08:02 -0500
Subject: [Twisted-Python] Will twisted be using generators new in Python 2.3?
In-Reply-To: <2322726827.20030211071923@uch.net>
References: <963376329.20030211015655@uch.net> <7FBB77F6-3D58-11D7-A326-000A95686CD8@redivi.com> <20030211020602.GD16336@frobozz.local> <2322726827.20030211071923@uch.net>
Message-ID: <20030211120802.GB2557@radii>

On Tue, Feb 11, 2003 at 07:19:23AM +0200, Dmitry Litovchenko wrote:
> Hello Andrew,
> 
> Tuesday, February 11, 2003, 4:06:02 AM, you wrote:
> 
> AB> On Mon, Feb 10, 2003 at 07:33:54PM -0500, Bob Ippolito wrote:
> >> need to support 2.1.  As far as I know, we need to have full support 
> >> for 2.1 as long as Zope requires it.
> 
> AB> And also many systems still only have 2.1, e.g. Debian stable (woody).
> 
> Okay, next question. I am highly interested in non-standard control
> flow in Python, which was implemented in stackless python, which
> (stackless python I mean) seems to be discontinued or at least very
> slowly updated. Does anyone know when will these appear in standard
> Python.

They're never going to, afaik. Stackless isn't discontinued, though;
in fact, the author is still being funded for development, last I
checked.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From nbm at mithrandr.moria.org  Tue Feb 11 05:28:05 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Tue, 11 Feb 2003 14:28:05 +0200
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <87d6lzrsf0.fsf@flibuste.net>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <87d6lzrsf0.fsf@flibuste.net>
Message-ID: <20030211122805.GC75769@mithrandr.moria.org>

On Tue 2003-02-11 (12:02), William Dode wrote:
> So, is there an example of a web server without using tap and twistd
> command line ?
> I would like to make a web server that could be embed in an .exe with
> py2exe. Like i do now with a litle hack of CGIHTTPServer...
> 
> For this i would like also to don't use .rpy script of the file system,
> but just do myself the link between uri and my own scripts...

I've used Installer (http://www.mcmillan-inc.com/install1.html) with
Twisted successfully.  This was on FreeBSD, but I'm sure it'd work just
fine on Windows.

pbweb.py is an web example that doesn't use tap/twistd.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org



From m at moshez.org  Tue Feb 11 05:28:32 2003
From: m at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 12:28:32 -0000
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <878ywnrpfa.fsf@flibuste.net>
References: <878ywnrpfa.fsf@flibuste.net>, <87d6lzrsf0.fsf@flibuste.net>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211111653.18307.qmail@green.zadka.com>
Message-ID: <20030211122832.4004.qmail@green.zadka.com>

On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> > '''
> > from twisted.web import server, static
> > from twisted.internet import reactor
> > 
> > root = static.Data("hello world", "text/plain")
> > root.putChild('', root)
> > # root.putChild('name-of-my-script', myScriptResource)
> > site = server.Site(root)
> > reactor.listenTCP(10998, root)
                             ^^^^ should have been "site", sorry"
> > reactor.run()
> > '''

> from twisted.internet import app
> from twisted.web import static, server, vhost, twcgi, script, trp
> 
> site = server.Site(resource)
> application = app.Application('web')
> application.listenTCP(10999, site)
> application.run()

why use Application if you're not interested in the benefits? Just use
plain reactor.

> > > I would like to make a web server that could be embed in an .exe with
> > > py2exe.
> > 
> > No, you wouldn't.
> 
> why ?

Because that huge .exe is unportable and would include all of Twisted
inside it. Wouldn't it be saner to just package Twisted with your application,
as well as Python, for those who want it, and let a smaller download, with
just your stuff, for those who can actually manage to do three clicks?
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From abe at fettig.net  Tue Feb 11 08:46:50 2003
From: abe at fettig.net (Abe Fettig)
Date: 11 Feb 2003 10:46:50 -0500
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211000716.1426f839.twisted@itamarst.org>
References: <1044928876.24461.10.camel@caspian.everglade>
	 <20030211024115.GE16336@frobozz.local>
	 <1044935987.24502.19.camel@caspian.everglade>
	 <20030211000716.1426f839.twisted@itamarst.org>
Message-ID: <1044978409.945.46.camel@mingus>

On Tue, 2003-02-11 at 00:07, Itamar Shtull-Trauring wrote:
> On 11 Feb 2003 16:59:49 +1300
> Rob Brown-Bayliss <rob at zoism.org> wrote:
> 
> Using any part of twisted is simple. Trying to understand all of it at
> once is not. Which is a problem.
> 
> Maybe looking through some examples will help:
> http://www.twistedmatrix.com/documents/examples/pbgtk.py is a sample app
> using GTK and PB.

If I may chime in here - In my experience it's really hard to start with
sample code that uses lots of foreign concepts.  Perspective Broker is a
lot to get your head around if you don't have any experience with
Twisted.  I think it's easier to look at sample code that does something
you already understand.  For example:

documents/examples/pytserv.py - a telnet server

documents/examples/ircLogBot.py - an IRC client that writes channel
events to a file

documents/examples/xmlrpc.py - an XML-RPC server

documents/examples/simpledns.py - a DNS lookup example (nice basic
example of deferreds)

documents/examples/simpleserv.py
documents/example/simpleclient.py - very simple client and server using
a homemade protocol

These examples show how to use Twisted to do the kinds of tasks
programmers may already be familiar with, in just a few lines of code.


Abe




From wilk-ml at flibuste.net  Tue Feb 11 09:46:31 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 11 Feb 2003 17:46:31 +0100
Subject: In Defense of Taps (was Re: [Twisted-Python] where to begin)
In-Reply-To: <20030211122832.4004.qmail@green.zadka.com>
References: <878ywnrpfa.fsf@flibuste.net> <87d6lzrsf0.fsf@flibuste.net>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211111653.18307.qmail@green.zadka.com>
	<20030211122832.4004.qmail@green.zadka.com>
Message-ID: <87znp2rcig.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> On 11 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > > '''
> > > from twisted.web import server, static
> > > from twisted.internet import reactor
> > > 
> > > root = static.Data("hello world", "text/plain")
> > > root.putChild('', root)
> > > # root.putChild('name-of-my-script', myScriptResource)
> > > site = server.Site(root)
> > > reactor.listenTCP(10998, root)
>                              ^^^^ should have been "site", sorry"
> > > reactor.run()
> > > '''
> 
> > from twisted.internet import app
> > from twisted.web import static, server, vhost, twcgi, script, trp
> > 
> > site = server.Site(resource)
> > application = app.Application('web')
> > application.listenTCP(10999, site)
> > application.run()
> 
> why use Application if you're not interested in the benefits? Just use
> plain reactor.

yes, i knew that it was possible...

> 
> > > > I would like to make a web server that could be embed in an .exe with
> > > > py2exe.
> > > 
> > > No, you wouldn't.
> > 
> > why ?
> 
> Because that huge .exe is unportable and would include all of Twisted
> inside it. Wouldn't it be saner to just package Twisted with your application,
> as well as Python, for those who want it, and let a smaller download, with
> just your stuff, for those who can actually manage to do three clicks?

Finaly, i try it with your little example, and it work, i can make one
.exe with py2exe. Not so big : 800ko (maybe we can write it on the FAQ
?)

It want to include tk, i don't know why, but i can remove it
after... It's enough to me to know that it's possible.

thanks again, it's up to me now to study more twisted.

-- 
William Dode - http://flibuste.net



From glyph at twistedmatrix.com  Tue Feb 11 13:17:12 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 11 Feb 2003 14:17:12 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
References: <20030211063520.13647.qmail@green.zadka.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <20030211.141712.59648863.glyph@twistedmatrix.com>


I suppose, as the man who foisted TAPs on the world, I should answer for my
sins, or at least explain them.  I still feel bad about TAPs in general,
because they're not nearly as good as they could have been, but I still feel
strongly that they're better than nothing.

On Tue, 11 Feb 2003 03:09:05 -0500, Bob Ippolito <bob at redivi.com> wrote:

> taps are to simplify running daemons.  you don't need them for anything.

TAPs are for lots of things: simplifying running daemons is the most trivial
example.  Even when the documentation was a lot worse, there is a good reason
that a lot of the examples describe starting with a TAP or outputting an
Application object manually.

Twisted is a very large and very featureful framework that has tried to
simultaneously provide tons of functionality for developers but still remain
user-focused.  Pretty much everyone involved in the core design aspect of TAPs
feels that they're sub-optimal, so you don't see much effective advocacy of
their use.

More to the point, to paraphrase PaulT from this article:

    http://www.pault.com/pault/zope/zope.html

"Even really bad integration is better than no integration."  TAPs are really
bad integration.  The worst thing about them is that there are places, such as
GUI clients, where they really can't apply (and thus we revert to 'no
integration').

However, TAPs at least produce an artifact that a user can understand, on some
level.  A file that contains a collection of "server" objects.  Some tools
exist (such as mktap --append) to manipulate that artifact, and it may itself
respond (if manhole is installed in it) to various kinds of manipulation.

These kinds of tools are the things that you don't notice very often as a
developer, as they come "for free" for doing things a certain way.  For
example, most GTK or MacOS X developers are unaware that emacs keybindings are
set by default, but they use the toolkit and they don't re-bind all the keys
immediately.

Certain apps that have to play by their own rules break things.  For instance,
Mozilla _does_ rebind all keys immediately, and you can tell, because their
emacs keys emulation used to be far less consistent, especially across
platforms.  There are a lot of users who don't care about this, and probably
most developers don't either.  When you put all the users who use all the weird
features together, though, you end up with almost everybody.

The same is true of most Twisted users, I would imagine: most people don't
invoke Manhole, or run with a wacky reactor, view the full mktap --help listing
and read all the available plugins, or append multiple services to one .tap
file.  However, the ability to do all of these things with (relative) ease is
collectively important.  As time goes on, we have been very slowly adding new
features and options that you can apply to any properly-built .tap.

There are a lot of reasons to use TAPs.  This is similar to the
embedding-vs-extending discussion, where I have made my opinion thoroughly
clear in the past:

    http://www.twistedmatrix.com/users/glyph/rant/extendit.html

If you structure your application around an mktap plugin, twistd is your
mainpoint, and you get all the advantages I list there of an externalized
mainpoint.

However...

There is a need in Twisted for a much better customization, monitoring,
integration, and configuration tool.  Think of the Zope management interface,
but for all protocols, not just web.  I have been discussing this with a few of
the core developers, and we're not quite sure where the time to do this is
going to come from yet, but it's clear that this needs to be done.

This is the successor to the current "COIL".  If things were implemented in
terms of plugins for _that_, you could write code which would show up as a
nicely formatted icon and description in a spiffy web interface rather than in
a text-based menu listing on the command line.  This would be an obvious
improvement for new developers coming to Twisted and wondering why the heck
they should bother with obtuse plugin stuff.

If you have some ideas for how such a thing might be implemented, or you have
some free time and this sounds interesting, I would love to spew more of my
ideas at you.  Our initial working model is going to be something like the
Naked Objects framework ( http://www.nakedobjects.org/ ) but I think that more
thought is necessary, especially for metrics display.  Web frontends also
present an interesting challenge, because it would be very difficult to mimic
the full flexibility of that graphical model.  

Until this becomes available, please stick with mktap when you can, 'cause it's
all we've got.  Luckily, some interest has been expressed by various people to
work on this over a sprint on or around PyCon, so this may be resolved sooner
than later.

> naive developers will be confused by the whole thing.. I know it took me
> longer to pick up twisted at first because all of the examples were tap
> based, and not just python code.  However, twisted and its documentation are
> a lot farther along these days, so it might be different for a new developer
> now.

I think that the documentation has progressed significantly since you
originally came to Twisted.  Let us praise the heroic efforts of Brian Warner,
Andrew Bennetts, and Moshe Zadka.  Lore is one of my favorite parts of Twisted
now, and I had hardly anything to do with it :).


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030211/a5b5edeb/attachment.sig>

From m at moshez.org  Tue Feb 11 13:43:09 2003
From: m at moshez.org (Moshe Zadka)
Date: 11 Feb 2003 20:43:09 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030211.141712.59648863.glyph@twistedmatrix.com>
References: <20030211.141712.59648863.glyph@twistedmatrix.com>, <20030211063520.13647.qmail@green.zadka.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
Message-ID: <20030211204309.29092.qmail@green.zadka.com>

On Tue, 11 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> However, TAPs at least produce an artifact that a user can understand, on some
> level.  A file that contains a collection of "server" objects.  Some tools
> exist (such as mktap --append) to manipulate that artifact, and it may itself
> respond (if manhole is installed in it) to various kinds of manipulation.

Two additional value from taps:
- Stuff like t.w.static.File's Registry relies on it to work properly
- tap2deb: I realize my Debian bias is showing through, but having a
  no-work way for Debian users to make their Twisted server into something
  which is integrated with the init system is really valuable. (I have found
  this to my dissatisfaction when I had to integrate Twisted with an RH
  system)

> This is the successor to the current "COIL".  If things were implemented in
> terms of plugins for _that_, you could write code which would show up as a
> nicely formatted icon and description in a spiffy web interface rather than in
> a text-based menu listing on the command line.

This is the time to thank Jp Calderon for his quite spiffy tkmktap. Now,
even users afraid of the command-line can click on pretty buttons to
configure their application (now, if tkmktap had a button for
"run tap2deb and install resulting package", then it could be honestly
said that "on a Debian system, configuring Twisted servers can done
without opening a command-line, straight from the GNOME or KDE desktops".
Yes, we don't have that functionality right now: but considering how
close we are, this is certainly an argument in favour of TAPs.

> I think that the documentation has progressed significantly since you
> originally came to Twisted.

I agree: however, for the standard stuff: that is, the stuff plugin+servers
cover, I think the documentation has been decent for a looooong while.
If anyone thinks it isn't: well, it hasn't changed a lot in a long while,
that's for sure. I still feel that these are the basic douments that
"define" a Twisted programmer: you're a Twisted programmer, when you feel
as though you could have *written* those (same as you're a Python programmer
if you feel as though you could have written the tutorial). I did get
some complaints that these are hard to read. If anyone has suggestions
on how to make these two HOWTOs more approachable, please feel free to
tell me via e-mail or IRC. 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From kwaker at uch.net  Tue Feb 11 15:03:23 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Wed, 12 Feb 2003 00:03:23 +0200
Subject: [Twisted-Python] Is there any SOCKS client example
In-Reply-To: <20030211004344.15f7ff4f.twisted@itamarst.org>
References: <722490538.20030211071526@uch.net>
 <20030211004344.15f7ff4f.twisted@itamarst.org>
Message-ID: <16514860095.20030212000323@uch.net>

Hello Itamar,

Tuesday, February 11, 2003, 7:43:44 AM, you wrote:

>> I've found only Socks4 server implementation in protocols/socks4.py
>> And it seems that there is no Socks4 client inside. Should I look

IST> There is no socks4 client. You'll have to write one, which is pretty
IST> easy.

Does Twisted project need this code done? :) Will someone pick my modules
from this mail list and review (of course once I'm done)?

IST> You can pretty easily hook it up so you can do:
IST> SOCKSclient.connectTCP(..) and .listenTCP(..) with the new
IST> connectWith/listenWith reactor API that's in CVS.

Just got Twisted 1.0.3rc1 and connectWith seems to be already there.
Huge archive with little changes :( Anyway I will use it now.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From twisted at itamarst.org  Tue Feb 11 15:21:51 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 17:21:51 -0500
Subject: [Twisted-Python] Is there any SOCKS client example
In-Reply-To: <16514860095.20030212000323@uch.net>
References: <722490538.20030211071526@uch.net>
	<20030211004344.15f7ff4f.twisted@itamarst.org>
	<16514860095.20030212000323@uch.net>
Message-ID: <20030211172151.47200dfe.twisted@itamarst.org>

On Wed, 12 Feb 2003 00:03:23 +0200
Dmitry Litovchenko <kwaker at uch.net> wrote:

> Does Twisted project need this code done? :) Will someone pick my
> modules from this mail list and review (of course once I'm done)?

Yes and yes. Be sure to include tests, and to follow the coding
standard, that will make it easier for us and more likely to be included
without a problem. Alsoyou need to agree that the code will have joint
ownership of glyph (see doc/legal/ or something for accurate details).

Thanks!



From exarkun at intarweb.us  Tue Feb 11 16:10:09 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 11 Feb 2003 18:10:09 -0500
Subject: [Twisted-Python] Broken SSL
Message-ID: <20030211231009.GA19256@meson.dyndns.org>

  A couple places in Twisted use reactor.connectSSL().  They all seem to do
it incorrectly, as far as I can tell.  The two places I've noticed are
twisted/spread/pb.py:1152 and twisted/web/xmlrpc.py:257.  I'd fix them, but
I'm currently struggling to understand SSL myself, and only found them to be
in error in search of an example to learn from ;)

  Jp


-- 
|     This 
|   signature
| intentionally
|    8 lines
|     long.
|  (So sue me)
---
-- 
 up 3 days, 4:28, 7 users, load average: 0.00, 0.02, 0.12
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030211/54e18153/attachment.sig>

From simon at obsidian.com.au  Tue Feb 11 16:26:57 2003
From: simon at obsidian.com.au (Simon Hookway)
Date: 12 Feb 2003 10:26:57 +1100
Subject: [Twisted-Python] Broken SSL
In-Reply-To: <20030211231009.GA19256@meson.dyndns.org>
References: <20030211231009.GA19256@meson.dyndns.org>
Message-ID: <1045006016.979.129.camel@aoba>

I've had the same problem, seems there's no easy way to use pb over SSL,
i've played with it a little but failed on the auth, not that i'm very
cluey on SSL either. Even a convoluted example would be great since i'm
having to use SSH tunneling atm to ensure security over a non secure
network.

Cheers,

Simon

On Wed, 2003-02-12 at 10:10, Jp Calderone wrote:
>   A couple places in Twisted use reactor.connectSSL().  They all seem to do
> it incorrectly, as far as I can tell.  The two places I've noticed are
> twisted/spread/pb.py:1152 and twisted/web/xmlrpc.py:257.  I'd fix them, but
> I'm currently struggling to understand SSL myself, and only found them to be
> in error in search of an example to learn from ;)
> 
>   Jp
> 
> 
> -- 
> |     This 
> |   signature
> | intentionally
> |    8 lines
> |     long.
> |  (So sue me)
> ---
-- 
Simon Hookway <simon at obsidian.com.au>



From az at CANTANKER.NET  Tue Feb 11 16:54:34 2003
From: az at CANTANKER.NET (Adrian van den Dries)
Date: Wed, 12 Feb 2003 10:54:34 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030211.141712.59648863.glyph@twistedmatrix.com>
References: <20030211063520.13647.qmail@green.zadka.com> <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com>
Message-ID: <20030211235434.GE31012@cantanker.net>

quoth Glyph Lefkowitz:

> Twisted is a very large and very featureful framework that has tried
> to simultaneously provide tons of functionality for developers but
> still remain user-focused.  Pretty much everyone involved in the
> core design aspect of TAPs feels that they're sub-optimal, so you
> don't see much effective advocacy of their use.

Perhaps the TAP references in the howto should be moved later, under
"Advanced usage" or somesuch, and the early docs concentrate on
methods with which more users will be familiar (ie, standalone
scripts).

a.

-- 
Cantanker /
---------/-------------
        / cantanker.net



From andrew-twisted at puzzling.org  Tue Feb 11 17:56:46 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 12 Feb 2003 11:56:46 +1100
Subject: [Twisted-Python] where to begin
In-Reply-To: <20030211120239.GA2557@radii>
References: <1044928876.24461.10.camel@caspian.everglade> <20030211024115.GE16336@frobozz.local> <1044935987.24502.19.camel@caspian.everglade> <20030211053538.GF16336@frobozz.local> <20030211120239.GA2557@radii>
Message-ID: <20030212005646.GA18049@frobozz.local>

On Tue, Feb 11, 2003 at 07:02:39AM -0500, Christopher Armstrong wrote:
> On Tue, Feb 11, 2003 at 04:35:38PM +1100, Andrew Bennetts wrote:
> > On Tue, Feb 11, 2003 at 04:59:49PM +1300, Rob Brown-Bayliss wrote:
> > > Every thing seems to link on to something else, deffereds, it's own web
> > > servewr etc, it seems like it's a joke, or if not then certianly
> > > overkill for sending data over sockets.
> > 
> > That's a natural by-product of Twisted being a framework, unfortunately;
> > it's hard to take-or-leave each individual piece, you basically have to take
> > the whole framework or none of it.
> 
> I really don't like how this was answered :) You _don't_ need to take
> the entire framework; e.g., you don't need to import the web server,
> mail server, etc, unless you want to use them. Deferreds are an
> important fundamental thing in Twisted, however; they're one of the
> basic abstractions that we use a *lot* in asynchronous
> programming. Also, there's nothing stopping someone from tearing apart
> Twisted and distributing only the parts they need with their
> applications, web server be damned. ;-)

Yes, by the "framework", I really meant twisted.internet.  The rest of
Twisted is largely just pre-built utilities for twisted.internet, to save
you the work of e.g. writing your own web server :)

So, to be clear: when I was talking about Twisted in the previous mail, I
was really only referring to "core" Twisted, i.e. twisted.internet.

> Also, I should note the package layout: twisted.internet is the very
> basic stuff that your Twisted app will never be
> without. twisted.python has a lot of utilities that twisted.internet
> and other packages use. twisted.protocols gives you all the basic
> protocol support. These three packages are the most fundamental to
> Twisted. The rest are mainly application-level packages.

Which reminds me; we probably need to document this more up-front.  If a
newbie can realise that "only" twisted.{internet,protocols,python} is what
they need to get started, and the rest of Twisted is effectively just
libraries using that framework, then it (hopefully) makes learning it all
much easier.

> In addition to these, though, it sounds like Rob will also want to use
> twisted.spread (and twisted.cred) for his application. Most of the
> rest is unneeded.

Except that every network server evolves to the point where it is also a web
server ;)

-Andrew.




From washort at twistedmatrix.com  Tue Feb 11 18:12:34 2003
From: washort at twistedmatrix.com (Allen Short)
Date: Tue, 11 Feb 2003 19:12:34 -0600 (CST)
Subject: [Twisted-Python] PyCon Logistics
Message-ID: <20030211.191234.596544096.washort@twistedmatrix.com>


Chris and I have been looking at hotels in the D.C. area with an eye
towards affordability and proximity to GWU: the best we've found so
far is a Best Western in Arlington: assuming 3 to a room, it'll be
around $30/night/person. 

Hotel webpage:
http://www.bestwestern.com/prop_47096

the Big Win is that this hotel is half a block from the metro station:
http://www.stationmasters.com/System_Map/ROSSLYNS/rosslyns.gif

and is only one stop from the GWU metro station.

As for transportation costs: wmata.com indicates most trips on the
metro within the downtown area will be $1.10 each, whereas coming in
on Monday afternoon from BWI will be $4.10, and returning on Saturday
will be $3.25. I'm going to buy a $20 farecard and would recommend
buying at least a $15 card; we discovered the hard way last year that
you cant share them :) 

The ride on the metro between BWI and Arlington is about two hours,
so schedule accordingly.

Chris, Travis, and I have talked about doing some sightseeing on
Tuesday; times and destinations not yet decided - possibly the Library
of Congress. Anyone else interested such an excursion?

Another unresolved issue is food: I've heard rumours that food will be
provided at the conference but nothing definite. Also, I know some
people will insist on hunting for sushi. :) 

Finally, i've been told to encourage people to register soon;
apparently everybody is putting it off. :)

If anybody has a better idea or if I've forgotten something, please
speak up :)

Allen
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030211/30435d4a/attachment.sig>

From lac at strakt.com  Tue Feb 11 18:20:12 2003
From: lac at strakt.com (Laura Creighton)
Date: Wed, 12 Feb 2003 02:20:12 +0100
Subject: [Twisted-Python] PyCon Logistics 
In-Reply-To: Message from Allen Short <washort@twistedmatrix.com> 
   of "Tue, 11 Feb 2003 19:12:34 CST." <20030211.191234.596544096.washort@twistedmatrix.com> 
References: <20030211.191234.596544096.washort@twistedmatrix.com> 
Message-ID: <200302120120.h1C1KCjL017055@ratthing-b246.strakt.com>

Thank you very much for the hotel information.
In return: sushi information!

http://www.sushitaro.com/

Sushi Taro
1503 17th St., NW (P St.)
Washington (202) 462-8999

It has been 2 years, but that was the best last time I was in D.C.
Near Metro.

Laura Creighton



From andrew-twisted at puzzling.org  Tue Feb 11 18:54:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 12 Feb 2003 12:54:02 +1100
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030211.191234.596544096.washort@twistedmatrix.com>
References: <20030211.191234.596544096.washort@twistedmatrix.com>
Message-ID: <20030212015402.GC18049@frobozz.local>

On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> 
> Chris and I have been looking at hotels in the D.C. area with an eye
> towards affordability and proximity to GWU: the best we've found so
> far is a Best Western in Arlington: assuming 3 to a room, it'll be
> around $30/night/person. 

Thank you!

So, who's going to do this?  I need someone to share a room with :)

> Chris, Travis, and I have talked about doing some sightseeing on
> Tuesday; times and destinations not yet decided - possibly the Library
> of Congress. Anyone else interested such an excursion?

Definitely!  It's the first time I'll have flown internationally, so I'm
more than happy to do random tourist things :)

-Andrew.




From radix at twistedmatrix.com  Tue Feb 11 18:49:11 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 11 Feb 2003 20:49:11 -0500
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030212015402.GC18049@frobozz.local>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030212015402.GC18049@frobozz.local>
Message-ID: <20030212014911.GD2557@radii>

On Wed, Feb 12, 2003 at 12:54:02PM +1100, Andrew Bennetts wrote:
> On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > 
> > Chris and I have been looking at hotels in the D.C. area with an eye
> > towards affordability and proximity to GWU: the best we've found so
> > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > around $30/night/person. 
> 
> Thank you!
> 
> So, who's going to do this?  I need someone to share a room with :)

How about you, me, and Nafai? Just give me confirmation and I'll
register for the three of us.

Speaking of registering -- if anybody's going to register soon, please
either 1) wait until Allen or I register first or 2) make sure you
explain that a bunch of PyCon attendees will be staying at this
hotel. The idea is that we can all get adjacent rooms; whoever is
registering to stay can just say "Please put me near other PyCon
attendees".

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Tue Feb 11 19:41:16 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 12 Feb 2003 13:41:16 +1100
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030212014911.GD2557@radii>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030212015402.GC18049@frobozz.local> <20030212014911.GD2557@radii>
Message-ID: <20030212024116.GE18049@frobozz.local>

On Tue, Feb 11, 2003 at 08:49:11PM -0500, Christopher Armstrong wrote:
> On Wed, Feb 12, 2003 at 12:54:02PM +1100, Andrew Bennetts wrote:
> > On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > > 
> > > Chris and I have been looking at hotels in the D.C. area with an eye
> > > towards affordability and proximity to GWU: the best we've found so
> > > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > > around $30/night/person. 
> > 
> > Thank you!
> > 
> > So, who's going to do this?  I need someone to share a room with :)
> 
> How about you, me, and Nafai? Just give me confirmation and I'll
> register for the three of us.

Sounds good to me!

-Andrew.




From grimmtooth at softhome.net  Tue Feb 11 19:54:13 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Tue, 11 Feb 2003 21:54:13 -0500
Subject: [Twisted-Python] win32eventreactor part II
In-Reply-To: <20030212014911.GD2557@radii>
Message-ID: <020f01c2d242$0693cfe0$6501a8c0@listy>

Out of curiousity, is it necessary to use the win32 reactor in order to
use the w32 flavor of ProcessProtocol, or is it possible to just use one
without the other?






From twisted at itamarst.org  Tue Feb 11 20:31:06 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 11 Feb 2003 22:31:06 -0500
Subject: [Twisted-Python] win32eventreactor part II
In-Reply-To: <020f01c2d242$0693cfe0$6501a8c0@listy>
References: <20030212014911.GD2557@radii>
	<020f01c2d242$0693cfe0$6501a8c0@listy>
Message-ID: <20030211223106.3a5e6ad2.twisted@itamarst.org>

On Tue, 11 Feb 2003 21:54:13 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> Out of curiousity, is it necessary to use the win32 reactor in order
> to use the w32 flavor of ProcessProtocol, or is it possible to just
> use one without the other?

Yes, you need it. Long term plan is to make it possible to hook up win32
to standard reactor due to Major Issues with the win32 APIs (limited to
only 64 events, and thus sockets/processes), but I'm not all that
motivated to work on it right now. Once that is done you won't need to
use the win32 reactor.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From grimmtooth at softhome.net  Tue Feb 11 22:13:01 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Wed, 12 Feb 2003 00:13:01 -0500
Subject: [Twisted-Python] win32eventreactor part II
In-Reply-To: <20030211223106.3a5e6ad2.twisted@itamarst.org>
Message-ID: <021001c2d255$6a7daef0$6501a8c0@listy>

> > Out of curiousity, is it necessary to use the win32 reactor 
> in order 
> > to use the w32 flavor of ProcessProtocol, or is it possible to 

> Yes, you need it. Long term plan is to make it possible to 
> hook up win32 to standard reactor due to Major Issues with 
> the win32 APIs (limited to only 64 events, and thus 
> sockets/processes), 

Yeah, that's what I was looking at.

> but I'm not all that motivated to work on 
> it right now. Once that is done you won't need to use the 
> win32 reactor.

I know how demotivating w32 can be to work on :-)


While I'm somewhere close to the subject:  two questions about PB. 

1) Where the heck is pb.Root defined, anyway?

2) I can't help but notice that all the pb example servers involve an
application as the foundation, as opposed to using reactor.run() as the
event loop. Is this significant?

Reason for asking: I've tried to implement my first attempt at a
pb-enabled app (nods at etrepum on LJ) and am getting nowhere. The
server runs with no errors, but the client can't find the remote object
to talk to. I don't need anything complicated: one remote_ method is all
I need for the whole enchilada.




From tv at twistedmatrix.com  Wed Feb 12 00:26:43 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 12 Feb 2003 09:26:43 +0200
Subject: [Twisted-Python] Mozilla bondage.. err, bindings (Was: Re: In Defense of Taps)
In-Reply-To: <20030211.141712.59648863.glyph@twistedmatrix.com>
References: <20030211063520.13647.qmail@green.zadka.com> <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com>
Message-ID: <20030212072643.GA14923@lapdog>

On Tue, Feb 11, 2003 at 02:17:12PM -0600, Glyph Lefkowitz wrote:
> These kinds of tools are the things that you don't notice very often as a
> developer, as they come "for free" for doing things a certain way.  For
> example, most GTK or MacOS X developers are unaware that emacs keybindings are
> set by default, but they use the toolkit and they don't re-bind all the keys
> immediately.
> 
> Certain apps that have to play by their own rules break things.  For instance,
> Mozilla _does_ rebind all keys immediately, and you can tell, because their
> emacs keys emulation used to be far less consistent, especially across
> platforms.  There are a lot of users who don't care about this, and probably
> most developers don't either.  When you put all the users who use all the weird
> features together, though, you end up with almost everybody.

	I'm curious, how do you figure Mozilla _re_binds keys? It's
	not a GTK app or anything like that. The first binding is the
	final binding..

-- 
:(){ :|:&};:



From glyph at twistedmatrix.com  Wed Feb 12 04:34:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 05:34:46 -0600 (CST)
Subject: [Twisted-Python] Mozilla bondage.. err, bindings
In-Reply-To: <20030212072643.GA14923@lapdog>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030212072643.GA14923@lapdog>
Message-ID: <20030212.053446.78714160.glyph@twistedmatrix.com>


On Wed, 12 Feb 2003 09:26:43 +0200, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> 	I'm curious, how do you figure Mozilla _re_binds keys? It's not a GTK
> 	app or anything like that. The first binding is the final binding..

Depends what you mean by that.  On linux, it is in fact a gtk app:

glyph at zelda:~% ldd /usr/lib/mozilla/mozilla-bin | grep gtk
        libgtk-1.2.so.0 => /usr/lib/libgtk-1.2.so.0 (0x0fa7e000)

Perhaps instead of "re-bind" I should have said "it binds keys in a different
way than the standard widgets in the native toolkit it uses would".

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030212/f13e5984/attachment.sig>

From glyph at twistedmatrix.com  Wed Feb 12 06:51:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 07:51:46 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030211235434.GE31012@cantanker.net>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
Message-ID: <20030212.075146.122586679.glyph@twistedmatrix.com>


On Wed, 12 Feb 2003 10:54:34 +1100, Adrian van den Dries <az at CANTANKER.NET> wrote:

> Perhaps the TAP references in the howto should be moved later, under
> "Advanced usage" or somesuch, and the early docs concentrate on methods with
> which more users will be familiar (ie, standalone scripts).

This is exactly what I was arguing against.

While this may present a superficially simpler start-up process for new users
creating their first application, it will create the impression that TAPs are
something esoteric that you shouldn't necessarily be using if you're just
building a canonical Twisted server.

I'm afraid that I've already created that impression, though.  In going through
various projects I'm aware of that use Twisted, very few of them use TAPs.
Sadly, a few of the projects that I tried which use Twisted don't work at all!
(I'm not listing those here.)  It seems like this framework is more popular for
internal development than open source work.

The two public projects that I know of which use TAPs well are:

* Bannerfish: http://itamarst.org/software/bannerfish/
* CVSToys: http://www.twistedmatrix.com/users/acapnotic/wares/code/CVSToys/

Both of these are written by Twisted development team members that I have
gotten to scream at personally :-).

* The Hep Message Server: http://www.fettig.net/projects/hep/

  No use of TAPs or twistd whatsoever, it uses its own start-script.
  Accordingly, the "daemon" responds badly to signals, and doesn't daemonize on
  UNIX.  On the other hand, this may not just be a case of poor advocacy.
  There is also an INI file, no use of distutils, and the package structure is
  scattered across the top level namespace with unique and distinctive names
  like "servers", "messaging", and "agents".

  Abe has produced a nice message server demo here but appears singularly
  unconcerned with integration of any kind :).

* apt-proxy v2: http://apt-proxy.sourceforge.net/

  This project uses a collection of scripts which can either be used as
  standalone daemons or arguments to the "--python" option to twistd.  It's
  understandable given the low-level platform-specific nature of this code, and
  they still get about half the benefits of twistd.

* khashmir: http://khashmir.sourceforge.net/

  I can't figure out what's going on here.  I _think_ from the README that
  you're still expected to type python expressions at a prompt and get results.
  Given that there are no releases of this yet it's probably premature to guess
  whether taps will be used or not ;-).

There are two conclusions I can draw from this brief survey:

 1. Not very many mature projects use Twisted yet.
 2. Everybody hates TAPs unless I've personally explained why they shouldn't.

I get the impression that both conclusions are valid.  Not much can be done
about #1 except to stay the course.  If you are currently writing tap-less
code, has this thread convinced you to take another look at plugins?  Or at
least wait and see what the next iteration of COIL will be like?

Another thing that I notice here is that Twisted's internal TAP plugins need to
provide slightly more expansive descriptions of what they do, for the browsing
functionality I've described to be useful.  For example:

    glyph at zelda:~% mktap --help portforward
         [ ... ]
    Port Forwarder.


-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030212/e937eea8/attachment.sig>

From m at moshez.org  Wed Feb 12 08:43:25 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 15:43:25 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212.075146.122586679.glyph@twistedmatrix.com>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
Message-ID: <20030212154325.17273.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>  1. Not very many mature projects use Twisted yet.
>  2. Everybody hates TAPs unless I've personally explained why they shouldn't.

We should at least take those results as far as our single best opportunity
to do advocation: PyCon in general, and Itamar's tutorial in particular.
I think we all believe that (at the very least) twisted.internet is ready
for production-code. We all believe that TAPs are useful. I think we should
take the opportunity in all talks to emphasise how useful these things are.
Again, this seems mostly relevant for the introduction talk: I understand
how tempting it is to skip writing plugins in the introduction, but this
shows that it shouldn't be (because writing plugins for tap *is* easy).

Also, I'd attempt to take another conclusion from it: people used to complain
Twisted is not documented enough, but I think now the complaint is that
people are not sure where to start from. Part of it is a real problem:
the skills a Woven developer should have are (almost) complete disjoint
than the skills a programmer imlpementing a new kind of server (say,
SFS): the first would just use a quick mktap web --path/twisted-web
package to set up the server, and start writing .rpy's, while the
later would spend most of his time minding the protocol, and only ending
with writing an mktap plugin. What is my conclusion? I consider only
the second programmer "primary Twisted audience": not specifically web
programmers, but network programmers. For network programmers, the following
HOWTOs are useful:

* servers
* plugins
* cred
* pb-cred
(I think this is a decent order of reading them).

It would be nice if we could make special indexes for special kinds
of programmers, pointing them to a specific reading of the documentation.
How to do it is left as an exercise to the reader (but I will note that
on the TeX side, we're pretty much covered so it really more of a question
of decisions than of technology).
 
I encourage the "newbies" on the list to speak up: what are *you* planning
to do with Twisted, and which documents would help you with that.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From wilk-ml at flibuste.net  Wed Feb 12 09:12:31 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 12 Feb 2003 17:12:31 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <87u1f9iikw.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

So, i'm a newbie with twisted, and let's see what i'm planning to do
with twisted. Stop me if i'm wrong.

first, use it like classic internet web server (to replace python cgi).
For this, if we use .rpy and tap, it's easy.
second, use it for web intranet : it must work on windows. The possibility to
embed it in a .exe is fine. Just that it could be good to can take out
what we don't use (tk for example).

and last, i would like to use twisted for a shared hosting with virtual
hosting without using apache and other ftpd...
In some minutes i could make a system of virtual hosting with proxy for
somes, static and cgi for others. Somes minutes more and i could make a
litle interface to dynamicaly manage the hosts ! crazy !!!

I would like to know if it exist hosting with twisted ?

The documentation is hard in the begin, after somes hours it's become
magic. But we are note sure to understand what we do (reactor,
application etc...).
Examples are very usefull because the framework is very efficient.

Like a lot of pythoners i think, i begin with hacking CGIHTTPServer. So
example of how to do with it and the same with Twisted will be great.

Why not a wiki ? I find a lot of tips in the archive of the
mailing-list.

Thanks for your work and your attention.

-- 
William Dode - http://flibuste.net



From theller at python.net  Wed Feb 12 09:21:51 2003
From: theller at python.net (Thomas Heller)
Date: 12 Feb 2003 17:21:51 +0100
Subject: [Twisted-Python] Cancel a Deferred timeout
Message-ID: <znp1ii5c.fsf@python.net>

I'm currently doing my first steps with twisted, and I have a
question.

I've started hacking the EchoClient example to connect to a small
embedded TCP server with a custom protocol I have here.

The server sends a line-feed 3 times a second, and when the client
doesn't receive them for one second or more, it must assume the
connection is broken and it should close the connection immediately
(and try to reconnect).

I thought using a deferred for this with a timeout of one second,
which will close the connection if the timeout callback is called.  If
the line-feed is received, the deferred timeout must be canceled, and
a fresh one set up. How can I do this?

Thanks,

Thomas




From m at moshez.org  Wed Feb 12 09:21:18 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 16:21:18 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <87u1f9iikw.fsf@flibuste.net>
References: <87u1f9iikw.fsf@flibuste.net>, <20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212162118.26881.qmail@green.zadka.com>

On 12 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> first, use it like classic internet web server (to replace python cgi).
> For this, if we use .rpy and tap, it's easy.

Well, most of it should be documented in using-twistedweb.html

> second, use it for web intranet : it must work on windows. The possibility to
> embed it in a .exe is fine. Just that it could be good to can take out
> what we don't use (tk for example).

I don't understand this: are you trying to get random hosts to be web
servers? Do you need every windows computer to serve HTTP? Or is it
something else?
Also, how is .exe better than a real installer?
In a former job, I wrote a Windows installer which basically took existing
installers and ran them in order. It was about a 15 minutes hack.
If you can make this work, just generate one containing a Python installation,
a Twisted installation and your own app installation.

> and last, i would like to use twisted for a shared hosting with virtual
> hosting without using apache and other ftpd...

Well, currently, I think that virtual hostings can work pretty much out
of the box, but we don't have as good a web/FTP integration as we could
have.

> Why not a wiki?

I found wikis are useless as places to get documentation about software.

> I find a lot of tips in the archive of the
> mailing-list.

Yes, mailing lists are good for that.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From glyph at twistedmatrix.com  Wed Feb 12 10:18:07 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 11:18:07 -0600 (CST)
Subject: [Twisted-Python] Cancel a Deferred timeout
In-Reply-To: <znp1ii5c.fsf@python.net>
References: <znp1ii5c.fsf@python.net>
Message-ID: <20030212.111807.07277933.glyph@twistedmatrix.com>


On 12 Feb 2003 17:21:51 +0100, Thomas Heller <theller at python.net> wrote:

> I thought using a deferred for this with a timeout of one second, which will
> close the connection if the timeout callback is called.  If the line-feed is
> received, the deferred timeout must be canceled, and a fresh one set up. How
> can I do this?

It sounds more like you might want to use reactor.callLater directly: a
Deferred is a one-shot thing, which is best used to represent a request for
data.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030212/8e2df235/attachment.sig>

From wilk-ml at flibuste.net  Wed Feb 12 10:20:03 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 12 Feb 2003 18:20:03 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212162118.26881.qmail@green.zadka.com>
References: <87u1f9iikw.fsf@flibuste.net>
	<20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
	<20030212162118.26881.qmail@green.zadka.com>
Message-ID: <87lm0lifgc.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> On 12 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > first, use it like classic internet web server (to replace python cgi).
> > For this, if we use .rpy and tap, it's easy.
> 
> Well, most of it should be documented in using-twistedweb.html

yes, but like said before, it's not easy in the begin to know why woven
is in the midle. I've read peoples thinking twisted is a template engine !
A good separation between framework engine and library tools would be fine.

> 
> > second, use it for web intranet : it must work on windows. The possibility to
> > embed it in a .exe is fine. Just that it could be good to can take out
> > what we don't use (tk for example).
> 
> I don't understand this: are you trying to get random hosts to be web
> servers? Do you need every windows computer to serve HTTP? Or is it
> something else?

hmmm... my poor english !!!
No, i just develop classic application with web interface.

> Also, how is .exe better than a real installer?

Just that it's more easy for the user, he unzip the 800ko in a
directory and click on the .exe
If i could take out what i don't need of twisted, i'm sure i can cut it
be 3... 
On windows, people are often afraid of installers...
Sure i will not do like that on debian system !

> In a former job, I wrote a Windows installer which basically took existing
> installers and ran them in order. It was about a 15 minutes hack.
> If you can make this work, just generate one containing a Python installation,
> a Twisted installation and your own app installation.

Yes, but it's a lot bigger.
But it's not a big problem, just that i would like to use the same
framework for very little things and biggers...

-- 
William Dodé - http://flibuste.net



From a.d.stribblehill at durham.ac.uk  Wed Feb 12 10:53:59 2003
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Wed, 12 Feb 2003 17:53:59 +0000
Subject: [Twisted-Python] Woven howto doc bug?
Message-ID: <20030212175359.GQ9228@wompom>

>From the Woven howto, it tells me I should do:
	from twisted.web.woven import page

This doesn't exist in 1.0.3rc1, but:
	from twisted.web.woven import model
does work.

Is this a documentation bug or a user problem? ;)

-- 
FAEROES
SOUTH OR SOUTHWEST 5 TO 7. OCCASIONAL RAIN. MODERATE



From twisted at moshez.org  Wed Feb 12 11:40:57 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 18:40:57 -0000
Subject: [Twisted-Python] Woven howto doc bug?
In-Reply-To: <20030212175359.GQ9228@wompom>
References: <20030212175359.GQ9228@wompom>
Message-ID: <20030212184057.29316.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Andrew Stribblehill <a.d.stribblehill at durham.ac.uk> wrote:

> From the Woven howto, it tells me I should do:
> 	from twisted.web.woven import page
> 
> This doesn't exist in 1.0.3rc1, but:

Yes it does.
At least, it exists in both the tarball and the Python 2.2 sid Debian package.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 11:53:05 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 12 Feb 2003 13:53:05 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		<20030211.141712.59648863.glyph@twistedmatrix.com>
		<20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

You asked for it!  Okay, so I'm not exactly a "newbie" (or 
maybe a perennial newbie ;^).  Anyway, I guess I'm an anomaly 
in that I founds taps to be a nice and useful thing, as when I 
started developing our server app, it was just after Glyph wrote 
the "Writing a Twisted Plug-in" doc, so I used that as my sample 
code to start with.  I've attached my pgertap.py file so you can 
get an idea of where we are (I've already described what we're 
*trying* to do in earlier messages to the list).  It's out of 
context, and I'm not using any of the config options yet, but 
there's the idea ...

And as an *exclusive* preview for folks on the twisted list :^),
you can download the PGEF ('Pan Galactic Engineering Framework') 
source and have a closer look (this is definitely alpha!):  

http://ned.gsfc.nasa.gov/alpha/PanGalactic.tar.gz

userid:  justsomeguy
passwd:  ans=42

To install it:
1. gunzip, untar, install (python setup.py install)
2. install PostgreSQL if you don't have it yet
3. createdb pgerdb
4. run the shell scripts to load the reference data and the 
   demo database:
       cd PanGalactic/src/sql
       ./setup_pgerdb.sh
   (NOTE!  When this script runs createPgerDbTables.sql, it 
    might look like it's caught in a loop when the "ALTER TABLES"
    run, but don't give up ... 89 tables getting 6 ALTER's each 
    (or more) takes a while ... ;^)
       cd PanGalactic/demo/sql
       ./populate_demo_db.sh
5. run 'mktap pger', then 'twistd -f pger.tap'

You can fire up an interactive xmlrpc session to try 
out the server (I'll put some demo sessions on the web 
site soon).  

If you are *really* brave, you can try starting 
up the client, but you will need to have wxPython 
(2.3.4.2 or better), a recent version of ZODB (3.1 or 
better recommended), reportlab, PIL, and log4p (yuck! we 
just haven't had time to change that out yet).  To start 
it, cd into the PanGalactic/pangalactic/client 
dir and run 'python fnord.py'.  By default the client is 
setup to interact with the server on localhost at port 
8080.  Do File/Login and just click 'OK' without entering 
anything ... it's a dummy login for now, but that will 
trigger the client to get the demo data from the server and 
display it.  You can get some ideas by turning on the 
Options/Preferences/Show Tooltips (they are off by default).

The only docs so far are in the code ... best bets are:
(a) the comments in createPgerDbTables.sql 
(b) the docstrings in pangalactic.common modules 
and in pangalactic.repo.registry (which 
is the guts of the O-R mapping I'm using ... t.e.row didn't 
do quite what I wanted).  We have several demos coming up, so 
docs have temporarily fallen by the wayside.  

The tests in PanGalactic/pangalactic/repo/tests are very 
naive and (obviously) not real unit tests yet, but they 
are useful to *me*, anyway!

I'd be really grateful if a twisted guru could look at the code 
-- at least the "server" code (pangalactic.common, p.repo, p.tools),
and (after the wave of nausea has passed) comment on how it 
could be improved ... or even contribute, as this will be 
open sourced!  I know zillions of things it needs, but 
I'd especially like to hear about the twisted aspects that 
I haven't used properly or have short-circuited somehow.

The only twisted things we're using on the client side so 
far are jelly/unjelly, but we need to use twisted to make 
our client non-blocking ... we just haven't got around to 
integrating it with the twisted loop yet.  

I'd be *ecstatic* if any of the twisted folk who are 
coming to PyCon would like to do a pre-con sprint or a 
post-con sprint with PanGalactic ... we will be at PyCon 
(we're located just north of DC, anyway!).  

Cheers,
-- Steve.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pgertap.py
Type: application/x-python
Size: 3996 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030212/364050df/attachment-0002.bin>

From m at moshez.org  Wed Feb 12 12:35:27 2003
From: m at moshez.org (Moshe Zadka)
Date: 12 Feb 2003 19:35:27 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
References: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		<20030211.141712.59648863.glyph@twistedmatrix.com>
		<20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212193527.10384.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> You asked for it!  Okay, so I'm not exactly a "newbie" (or 
> maybe a perennial newbie ;^).  Anyway, I guess I'm an anomaly 
> in that I founds taps to be a nice and useful thing, as when I 
> started developing our server app, it was just after Glyph wrote 
> the "Writing a Twisted Plug-in" doc, so I used that as my sample 
> code to start with.

Well, I meant that I want to hear from *dissatisfied* newbies...but
it is always a pleasure to hear from a satisfied user too :D

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From justin at iago.org  Wed Feb 12 12:41:00 2003
From: justin at iago.org (justin at iago.org)
Date: Wed, 12 Feb 2003 14:41:00 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
	<16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	<20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <m28ywlxp6b.fsf@justin.local.>

Moshe Zadka <m at moshez.org> writes:

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted

Sure.  I'm not a programming newbie, or a Python newbie, but I am
certainly a Twisted newbie.

I wasn't going to post until I got a better handle on things via the
documentation and had more specific needs, but since you're asking...

First I should say that what drew me to the Twisted project in the
first place was not the networking framework; while it looks very
capable in that regard, I have written select- or poll-based
asynchronous apps before so I wasn't actively looking for anything to
help with that.  It was actually the conch module that drew me in at
first, as a Python library implementing the SSH protocol is very
potentially valuable to me.  Before I get to my general Twisted
thoughts, I'll ask a couple of conch questions:

 Is there any way, when using it as a client, to get it to use an
 existing ssh agent?  An ssh client is pretty much useless to me
 without this, so I may have to end up adding this functionality myself.

 Is there an example out there of a basically functioning SSH server
 using conch that will accept connections and authorize them based on
 public keys (not passwords)?  The only documentation or example usage
 I could find for conch is doc/examples/sshsimpleclient.py

 (Passwords bad; Passphrased public keys and agents good)

Setting that aside, I'll explain my first intended project with
Twisted.  It seems reasonably well suited to this use in general, but
as I've only read the intro docs I'm not yet sure of the best way to
proceed in The Twisted Way.

I need to write a fairly smart network proxy application.  Users will
connect via one protocol, be authenticated and authorized (to a
separate service, by a means I already have existent.  I don't need
Twisted's help here), then the proxy will act as a client to another
server and transparently connect the end-user to the other server as
though the middle step had never occurred.  It seems that the Factory
attached to the Protocols for which I am a server will also in itself
have to be a client of another Protocol.  I don't yet have big
questions here, as I haven't tried to make it work yet, but if someone
wants to throw me some useful advice wrt the best way to fit into the
Twisted shape of things I won't complain.

> which documents would help you with that.

As I said, I'm not yet honestly sure.  I have some feeling that the
docs are lacking in some way, but I don't have anything more specific
or any more justification until I beat against it personally some more.

I'll definitely let you all know as I find things that I think are lacking.

-Justin

 




From z3p at twistedmatrix.com  Wed Feb 12 04:48:16 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 12 Feb 2003 05:48:16 -0600
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <m28ywlxp6b.fsf@justin.local.>
References: <20030212.075146.122586679.glyph@twistedmatrix.com> <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com> <m28ywlxp6b.fsf@justin.local.>
Message-ID: <20030212114816.GA17385@pyramid.twistedmatrix.com>

On Wed, Feb 12, 2003 at 02:41:00PM -0500, justin at iago.org wrote:
>  Is there any way, when using it as a client, to get it to use an
>  existing ssh agent?  An ssh client is pretty much useless to me
>  without this, so I may have to end up adding this functionality myself.

This is on my TODO list, especially since the IETF has finally released
a specification for the agent protocol.  There weren't any for the
OpenSSH agent protocol and I didn't feel like wading through their code
to figure out how to do it.

>  Is there an example out there of a basically functioning SSH server
>  using conch that will accept connections and authorize them based on
>  public keys (not passwords)?  The only documentation or example usage
>  I could find for conch is doc/examples/sshsimpleclient.py
>
>  (Passwords bad; Passphrased public keys and agents good)
>
I thought the example did this already, but I guess not :) I'll work on
this, it's not particularly difficult.

-p
-- 
       Paul Swartz
(o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
//\    z3p at twistedmatrix.com                           /\\
V_/_   AIM: z3penguin                                 _\_V->



From glyph at twistedmatrix.com  Wed Feb 12 13:32:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 12 Feb 2003 14:32:08 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <20030211.141712.59648863.glyph@twistedmatrix.com>
	<20030211235434.GE31012@cantanker.net>
	<20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212.143208.123923582.glyph@twistedmatrix.com>


On 12 Feb 2003 15:43:25 -0000, Moshe Zadka <m at moshez.org> wrote:
> >  1. Not very many mature projects use Twisted yet.
> >  2. Everybody hates TAPs unless I've personally explained why they shouldn't.

> We should at least take those results as far as our single best opportunity
> to do advocation: PyCon in general, and Itamar's tutorial in particular.  I
> think we all believe that (at the very least) twisted.internet is ready for
> production-code. We all believe that TAPs are useful. I think we should take
> the opportunity in all talks to emphasise how useful these things are.

This is a good opportunity, yes.  Thanks to Steve's post, I am less
discouraged.  For technical reasons, it is easier for us to make this pitch to
the people interested in twisted.internet than in other areas of Twisted
though: more below.

> Also, I'd attempt to take another conclusion from it: people used to complain
> Twisted is not documented enough, but I think now the complaint is that
> people are not sure where to start from.

This is a serious problem both on the website and in the documentation.  There
is also the issue of whether certain kinds of developers can even depend upon
Twisted to do what they need to do.  We have annotations in the docstrings for
various modules, but there is no at-a-glance reference card for what modules
within Twisted are really up to snuff.

The first thing is to decide what the classes of people who will be looking at
Twisted are.  Here, I think you've correctly identified two of them: web
developers and level network protocol programmers.  What are the other groups?
Simulation programmers?  Game programmers?  Corporate sysadmins?  Workflow
designers?  Interactive agent programmers?  (This is a question to the mailing
list at large: who _are_ you people, anyway?  There are almost 300 people
subscribed, and we've only got 5 users listed on the website!)

> Part of it is a real problem: the skills a Woven developer should have are
> (almost) complete disjoint than the skills a programmer imlpementing a new
> kind of server (say, SFS):
                  ^^^^^^^^

I would like to emphasize this extremely subtle hint in case you didn't get it
the first time, liiwi :-)

> the first would just use a quick mktap web --path/twisted-web package to set
> up the server, and start writing .rpy's, while the later would spend most of
> his time minding the protocol, and only ending with writing an mktap plugin.

I think that your conclusion is correct, but there is another, technical
problem here.  We have a plugin type which we suggest network programmers to
use (and the flaws of this plugin type have been previously discussed).  RPYs
are a partial solution, and Donovan and I have been back and forth over better
and worse ways to structure applications.  This still hasn't completely
settled.  It bothers me that RPYs are so different from the TAP plugin
architecture, and wedded to a filesystem hierarchy that has nothing to do with
your Python code.  It's still really challenging (though by no means
impossible) to take any 2 existing Twisted web apps and put them together in
the same server.

In the absence of the COIL uber-plugin API that we are eventually going to
need, perhaps there should be some more work in the near term going into
defining domain-specific plugin APIs for different aspects of Twisted?  I
avoided this for a long time because I didn't want to proliferate more bad
integration schemes, but by now it's probably causing more trouble than it's
worth.  At least, I think we could easily come up with a half-solution that's
better than the current half-solution.

twisted.web would be the most obvious area to do this first.  While we're at
it, we could clean up the API for bot creation in twisted.words and make it
compatible to some extent with twisted.im.  (Donovan and Kevin respectively,
I'd like your opinions here...)

> What is my conclusion? I consider only the second programmer "primary Twisted
> audience": not specifically web programmers, but network programmers. For
> network programmers, the following HOWTOs are useful: [snip]

That's a good index for network programmers, and I think it mirrors the way the
book has been structured so far.  I think there is also a need to educate web
programmers about the networking aspects of web stuff within Twisted, and how
it can be used to integrate externally.  This will become even more of an issue
as the LivePage stuff that Donovan is working on right now matures: Woven will
be able to change the way that people think about "web apps".

> It would be nice if we could make special indexes for special kinds
> of programmers, pointing them to a specific reading of the documentation.
> How to do it is left as an exercise to the reader (but I will note that
> on the TeX side, we're pretty much covered so it really more of a question
> of decisions than of technology).

As we try to construct these different paths, let's not leave out documents,
but rather re-order them so that different interest groups will be exposed to
things they might not have considered, but those different areas of interest
will be small detours that diverge from their main path, and not obstacles to
their progress.

> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

Yes.  A lot of the Twisted development discussion is ephemeral and
experimental, and therefore takes place over IRC, so those of you out there in
the user community may have gotten the impression that us developers don't like
getting into extended discussions in e-mail.  I hope these last few days have
disabused you of this notion :-).

I've said this before in different ways, and I'm sure I'll say it again: If
you're writing applications for Twisted, it is in your best interest to help us
grow and enhance the platform.  One of the primary ways you can do that is
through _feedback_.  I am consistently surprised by how popular this project is
and how many people have heard of it, because there is often so little
commentary on what users want or need.

That said, if you give us feedback that takes a substantial amount of time to
implement, don't expect immediate results :-).  Designing a new system,
especially one as general as what I've been talking about the last few weeks (a
general configuration dashboard and plugin API for all of Twisted) is
challenging and takes a while.  Still, it is made all the more difficult for
having to guess what people actually want and use Twisted for: it is now a
framework with applications in domains where none of the core developers have
any experience.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030212/4a22f6e7/attachment.sig>

From theller at python.net  Wed Feb 12 13:35:34 2003
From: theller at python.net (Thomas Heller)
Date: 12 Feb 2003 21:35:34 +0100
Subject: [Twisted-Python] win32eventreactor
Message-ID: <7kc5i6eh.fsf@python.net>

How can I access the reactor if I want to use the win32eventreactor?
It seems I have to win32eventreactor.install() before importing
the reactor from twisted.internet, otherwise I get a traceback
saying AssertionError: reactor already installed.

Is this the recommended way to do it:

-----
from twisted.internet import win32eventreactor
win32eventreactor.install()
from twisted.internet import reactor

... other stuff

Thanks, Thomas




From exarkun at intarweb.us  Wed Feb 12 13:43:52 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 12 Feb 2003 15:43:52 -0500
Subject: [Twisted-Python] win32eventreactor
In-Reply-To: <7kc5i6eh.fsf@python.net>
References: <7kc5i6eh.fsf@python.net>
Message-ID: <20030212204352.GA18152@meson.dyndns.org>

On Wed, Feb 12, 2003 at 09:35:34PM +0100, Thomas Heller wrote:
> How can I access the reactor if I want to use the win32eventreactor?
> It seems I have to win32eventreactor.install() before importing
> the reactor from twisted.internet, otherwise I get a traceback
> saying AssertionError: reactor already installed.
> 
> Is this the recommended way to do it:
> 
> -----
> from twisted.internet import win32eventreactor
> win32eventreactor.install()
> from twisted.internet import reactor
> 
> ... other stuff
> 
> Thanks, Thomas
> 

  Create a tap file, and when running it with twistd, specify
"--reactor win32" on the command line.  In the rest of your program, do
nothing special.  Anywhere you access twisted.internet.reactor, you'll get
the win32 reactor.

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
-- 
 up 4 days, 0:28, 2 users, load average: 0.09, 0.03, 0.01
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030212/9a2e5d4e/attachment.sig>

From dave at krondo.com  Wed Feb 12 14:04:14 2003
From: dave at krondo.com (Dave Peticolas)
Date: 12 Feb 2003 13:04:14 -0800
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
	 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	 <20030211.141712.59648863.glyph@twistedmatrix.com>
	 <20030211235434.GE31012@cantanker.net>
	 <20030212154325.17273.qmail@green.zadka.com>
	 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
Message-ID: <1045083854.27327.33.camel@oneiros>

On Wed, 2003-02-12 at 10:53, Steve Waterbury wrote:
> Moshe Zadka wrote:
> 
> > I encourage the "newbies" on the list to speak up: what are *you* planning
> > to do with Twisted, and which documents would help you with that.
> 
> You asked for it!  Okay, so I'm not exactly a "newbie" (or 
> maybe a perennial newbie ;^).  Anyway, I guess I'm an anomaly 
> in that I founds taps to be a nice and useful thing, as when I 
> started developing our server app, it was just after Glyph wrote 
> the "Writing a Twisted Plug-in" doc, so I used that as my sample 
> code to start with.  I've attached my pgertap.py file so you can 
> get an idea of where we are (I've already described what we're 
> *trying* to do in earlier messages to the list).  It's out of 
> context, and I'm not using any of the config options yet, but 
> there's the idea ...
> 
> And as an *exclusive* preview for folks on the twisted list :^),
> you can download the PGEF ('Pan Galactic Engineering Framework') 
> source and have a closer look (this is definitely alpha!):

For those of us too lazy to download and scan the source,
what, in a nutshell, is PGEF supposed to do?

thanks,
dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030212/a5713fd6/attachment.sig>

From twisted at itamarst.org  Wed Feb 12 14:33:06 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 12 Feb 2003 16:33:06 -0500
Subject: [Twisted-Python] win32eventreactor
In-Reply-To: <7kc5i6eh.fsf@python.net>
References: <7kc5i6eh.fsf@python.net>
Message-ID: <20030212163306.3a240668.twisted@itamarst.org>

On 12 Feb 2003 21:35:34 +0100
Thomas Heller <theller at python.net> wrote:

> Is this the recommended way to do it:
> 
> -----
> from twisted.internet import win32eventreactor
> win32eventreactor.install()
> from twisted.internet import reactor
> 
> ... other stuff

That will work, yes.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 15:11:15 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 12 Feb 2003 17:11:15 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030212.075146.122586679.glyph@twistedmatrix.com>
		 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		 <20030211.141712.59648863.glyph@twistedmatrix.com>
		 <20030211235434.GE31012@cantanker.net>
		 <20030212154325.17273.qmail@green.zadka.com>
		 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros>
Message-ID: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>

Dave Peticolas wrote:

> For those of us too lazy to download and scan the source,
> what, in a nutshell, is PGEF supposed to do?

A fair question.  PGEF is supposed to be a framework for developing 
applications that capture the data produced by engineering tools 
(CAD, Finite-Element Analysis, Simulation, Failure Analysis, etc.), 
component libraries, product documentation, configuration 
management, etc., etc.  Basically, to support the capture, integration, 
and management of all information produced and consumed in the 
life cycle of a manufactured product (hardware and/or software ... 
usually both!).  And, incidentally, to help engineers collaborate 
(via messaging, etc.) and to integrate their desktop tools 
(spreadsheets, etc.) with their more sophisticated tools (CAD, etc.) 
and services on the net (repositories, component libraries, 
analysis engines wrapped as Web Services, etc.).  

So what we've started out with is (1) a repository server that's 
supposed to support persistence and version/configuration management 
for the definition of a product and all its various "models" 
(CAX, FEA, etc.) and documents, and (2) a client that's intended to 
be a "product model/data browser" in the same sense that a "Web 
browser" presents various less semantically rich formats, such as 
HTML, images, other media, etc.   I.e., The PGEF Client's purpose is 
to present (a) various types of tree structures that occur in product 
data/models (e.g., assembly structures, version trees, functional trees, 
etc.), (b) tabular presentations of collections of engineering objects, 
(c) editors for product model metadata and parameters, and (d) hooks 
for communicating with product model viewers, such as CAD model viewers, 
analysis postprocessors, etc.  So far we only have a few of (a), (b), 
and (c) in it.  

Ultimately, for any enterprise that is mainly about manufacturing, 
PGEF will integrate *all* of the enterprise's technical data ... 
not *too* ambitious, eh?  ;^)  

An important piece of this puzzle is the STEP (ISO 10303) standard for 
"Product Model Data", which is a set of information models of the various 
types of data I mentioned above.  STEP itself is very complex (and not 
pretty, but it's really the only game in town for multi-disciplinary 
engineering data integration and it is taken very seriously by all large 
manufacturing organizations ... the list of organizations using/developing 
STEP is a who's who of manufacturers:  Ford, GM, Daimler-Chrysler, Boeing, 
Lockheed-Martin, Northrup Grumman, Raytheon, etc.), so one of the constraints 
on PGEF is to be able to map between STEP's information models and the PGEF 
repository schema ... if you browse the comments in createPgerDbTables.sql, 
many refer to how things map to/from STEP.  The actual engine that we'll 
use for the mapping is a Lisp application that we will interface with, 
called "Express Engine" (after the modeling language, Express, or ISO 10303-11):  

http://exp-engine.sourceforge.net

HTH,
-- Steve.



From screwtape at froup.com  Wed Feb 12 15:43:20 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Thu, 13 Feb 2003 09:43:20 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <20030212224320.GA750@ferd2.thristian.org>

On Wed, Feb 12, 2003 at 03:43:25PM -0000, Moshe Zadka wrote:
> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

OK, despite already having submitted patches that were applied to CVS,
I think I still qualify as a Twisted newbie. :)

I use Twisted in two situations - for work and for play.

At work, we use Twisted for two things - we take streaming data from
an upstream supplier, and store it in a database. Another set of
programs takes requests from our customers, queries the database, and
returns the replies.

All of our servers are running Windows 2000, and therefore most of our
Twisted scripts run as Python services. Some of them just run as
commandline apps that are started at login (although converting them
to services is on my todo list). 

I don't use TAPs because in discussion once I heard they were really
rather Unix-centric, and also because I know that pickling the state
of a running application is difficult to do, and I don't understand
how TAPs would Get It Right. Also, I suspect that twistd doesn't play
nice in a Win32 environment (it's not an NT service, for example).

For config, scripts I write use Python's ConfigParser module to read
an INI file in a standard location. Since configuration is generally
limited to 'What host and port to I connect to? What port do I listen
on? Where's the database?', this system is quite sufficient.

At home, I use twisted.im as a framework for my own IRC bot (which
needs a redesign as I now know more about asynchronous programming
than I did when I started). Technically, it's still being developed,
so I run it in a screen-session where I can watch its output, rather
than as a demon.

For configuration, the startup script does 'import config', and the
config.py file has contains various variables with standard names. The
main reason for this is that most of the settings involved result in
structured data (account objects, a list of error messages, etc.) and
it was a lot easier to just point Python at the file and wind up with
a dictionary of objects than to write my own parser and so forth.

There's a few bits of Twisted I've run up against that I feel I should
understand but don't:
 - coil: What's it good for? It doesn't appear to be some kind of
   wrapper around the Windows Registry or GConf or XML storage or
   anything.
 - cred: Apparently this is something I need to get Right for PB to
   work, but I'm not sure what it does. I'd have expected it to be
   something like PAM for Linux - give it a name and password, and get
   back 'allow' or 'deny' - but it seems this is not the case.
 - spread: I understand banana and jelly, but PB surpasses me. I don't
   have a clear mental picture of how information flows between the
   two processes. I'm looking for an API that resembles 'connect to
   this server, tell me what objects there I can talk to', but I'm not
   finding it.

There are other bits of Twisted I'd like to know more about
(twisted.web looks superficially similar in some ways to ASP.NET, and
I'd like to be able to compare and contrast) but in general I lack the
inclination or justification to look into them.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| ULTRA Loves Those Recursive Acronyms
|



From bob at redivi.com  Wed Feb 12 16:34:58 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 12 Feb 2003 18:34:58 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212224320.GA750@ferd2.thristian.org>
Message-ID: <99073770-3EE2-11D7-8E0F-000A95686CD8@redivi.com>

On Wednesday, Feb 12, 2003, at 17:43 America/New_York, 
screwtape at froup.com wrote:

> On Wed, Feb 12, 2003 at 03:43:25PM -0000, Moshe Zadka wrote:
>
>  - coil: What's it good for? It doesn't appear to be some kind of
>    wrapper around the Windows Registry or GConf or XML storage or
>    anything.

Never used COIL, but here's a python wrapper for the windows registry 
that I wrote and have used successfully in a couple projects (2.2+ 
only).  You may find it useful since you use a lot of windows at work?

I'll transparently pickle/unpickle anything you want to put in the 
registry that doesn't make sense as a native registry datatype.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: registrydict.py
Type: application/octet-stream
Size: 6135 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030212/ca69539a/attachment-0002.obj>

From fog at initd.org  Wed Feb 12 16:38:04 2003
From: fog at initd.org (Federico Di Gregorio)
Date: 13 Feb 2003 00:38:04 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212224320.GA750@ferd2.thristian.org>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	 <20030211.141712.59648863.glyph@twistedmatrix.com>
	 <20030211235434.GE31012@cantanker.net>
	 <20030212154325.17273.qmail@green.zadka.com>
	 <20030212224320.GA750@ferd2.thristian.org>
Message-ID: <1045093084.1188.45.camel@momo.initd.org>

Il mer, 2003-02-12 alle 23:43, screwtape at froup.com ha scritto:
> On Wed, Feb 12, 2003 at 03:43:25PM -0000, Moshe Zadka wrote:
> > I encourage the "newbies" on the list to speak up: what are *you* planning
> > to do with Twisted, and which documents would help you with that.
> 
> OK, despite already having submitted patches that were applied to CVS,
> I think I still qualify as a Twisted newbie. :)

eheh. same here. i started using twisted about 10 days ago when i needed
to replace my own system of RPC and object serialization and passing
with an upgraded version of it or something different. i choosed
something different (twisted).

i started by ignoring *everything* with the word 'tap' in it, mainly
because i found the terms 'tap' and 'http server' togheter two times and
was looking for something different. i also completely ignored coil.

using basic PB (no authentication, yes jellification of classes) was
easy with the tutorial (about 8h, gtk2reactor fixing included) but
switching to cred was much more difficult. the documentation was not
enough to write my first app authenticating the users vs a database and
providing different perspectives to them (about 2 days).

right now we are using twisted for two "work" projects and we plan to
integrate in it a port of our previous product (easy, transactional db
access on server side and automatic binding of objects to the gui client
side, more on that if you people are interested.)

maybe i am a little biased by the fact that our previous framework was
very similar to PB, but i don't think people approaching twisted are
interested in yet another http/irc/xxx server (w/ or w/o TAPS.)
more on the "framework" side, to develop applications or custom
protocols. 

my 0.02$
federico

-- 
Federico Di Gregorio
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Generated by Signify v1.10 [http://www.debian.org/]
                                      -- brought to you by One Line Spam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030213/6b6fe676/attachment.sig>

From andrew-twisted at puzzling.org  Wed Feb 12 18:14:52 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 13 Feb 2003 12:14:52 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212.075146.122586679.glyph@twistedmatrix.com>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212.075146.122586679.glyph@twistedmatrix.com>
Message-ID: <20030213011452.GC20194@frobozz.local>

On Wed, Feb 12, 2003 at 07:51:46AM -0600, Glyph Lefkowitz wrote:
> 
> On Wed, 12 Feb 2003 10:54:34 +1100, Adrian van den Dries <az at CANTANKER.NET> wrote:
> 
> > Perhaps the TAP references in the howto should be moved later, under
> > "Advanced usage" or somesuch, and the early docs concentrate on methods with
> > which more users will be familiar (ie, standalone scripts).
> 
> This is exactly what I was arguing against.

I disagree.  TAPs have two benefits that I can see:
    - you can use twistd, which gives you solid daemonisation, signal
      handling, and logging.
    - you can get some sort of minimal integration using mktap --append.
    - a vague promise that they'll do so much more later

Most people don't care about the second point, and you can actually still use
twistd without TAPs for the daemonisation, etc, if you really want.

Regardless, if you're looking to learn how to use this cool Twisted thing
you've heard about, daemonisation and whatnot can wait.  You want to try write
code that serves some wacky protocol you have, or whatever, and find out if
Twisted is suited to what you're trying to do.  It's nice to know that you
*can* take advantage of pre-written daemonisation, but I really doubt that a
new Twisted user cares about *how*.

Frankly, I see TAPs as one more concept that a new user shouldn't be
burdened with comprehending.  Reactors, Factories, Protocols, Transports and
Deferreds are hard enough on their own.  I really think docs that start by
using reactor.listenTCP, and possibly app.listenTCP, are the way to go.

Don't try make people swallow all of Twisted at once... it's just too big.

I'll even go so far as speculating that this will cause more external
projects to use TAPs, because they won't be seen as some annoying idea in
the beginner docs that they had to skip past to get real work done.  Give
Twisted plugins its own, comprehensive doc that can assume knowledge of
basic Twisted, rather than short-changing it by making it the introductory
doc.  It could start with a section titled "Motivation", explaining the
advantages of twistd and mktap.

-Andrew.




From bob at redivi.com  Wed Feb 12 18:22:27 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 12 Feb 2003 20:22:27 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213011452.GC20194@frobozz.local>
Message-ID: <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>

On Wednesday, Feb 12, 2003, at 20:14 America/New_York, Andrew Bennetts 
wrote:

> On Wed, Feb 12, 2003 at 07:51:46AM -0600, Glyph Lefkowitz wrote:
>>
>> On Wed, 12 Feb 2003 10:54:34 +1100, Adrian van den Dries 
>> <az at CANTANKER.NET> wrote:
>>
>>> Perhaps the TAP references in the howto should be moved later, under
>>> "Advanced usage" or somesuch, and the early docs concentrate on 
>>> methods with
>>> which more users will be familiar (ie, standalone scripts).
>>
>> This is exactly what I was arguing against.
>
> I disagree.  TAPs have two benefits that I can see:
>     - you can use twistd, which gives you solid daemonisation, signal
>       handling, and logging.
>     - you can get some sort of minimal integration using mktap 
> --append.
>     - a vague promise that they'll do so much more later
>
> Most people don't care about the second point, and you can actually 
> still use
> twistd without TAPs for the daemonisation, etc, if you really want.
>
> Regardless, if you're looking to learn how to use this cool Twisted 
> thing
> you've heard about, daemonisation and whatnot can wait.  You want to 
> try write
> code that serves some wacky protocol you have, or whatever, and find 
> out if
> Twisted is suited to what you're trying to do.  It's nice to know that 
> you
> *can* take advantage of pre-written daemonisation, but I really doubt 
> that a
> new Twisted user cares about *how*.
>
> Frankly, I see TAPs as one more concept that a new user shouldn't be
> burdened with comprehending.  Reactors, Factories, Protocols, 
> Transports and
> Deferreds are hard enough on their own.  I really think docs that 
> start by
> using reactor.listenTCP, and possibly app.listenTCP, are the way to go.
>
> Don't try make people swallow all of Twisted at once... it's just too 
> big.
>
> I'll even go so far as speculating that this will cause more external
> projects to use TAPs, because they won't be seen as some annoying idea 
> in
> the beginner docs that they had to skip past to get real work done.  
> Give
> Twisted plugins its own, comprehensive doc that can assume knowledge of
> basic Twisted, rather than short-changing it by making it the 
> introductory
> doc.  It could start with a section titled "Motivation", explaining the
> advantages of twistd and mktap.

I think I agree with you.  As I see it, TAPs are not particularly 
useful for developers *until* they're ready to distribute their 
applications.  Maybe they should be relegated to a section of the HOWTO 
on "How to distribute your Twisted application" or "How to run your 
Twisted application as a daemon"?

I think something to help this along would be to port twistd/taps to 
win32, and allow it to become a Windows NT service?  It wouldn't be too 
hard.




From screwtape at froup.com  Wed Feb 12 18:07:13 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Thu, 13 Feb 2003 12:07:13 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <1045093084.1188.45.camel@momo.initd.org>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com> <20030212224320.GA750@ferd2.thristian.org> <1045093084.1188.45.camel@momo.initd.org>
Message-ID: <20030213010713.GB750@ferd2.thristian.org>

On Thu, Feb 13, 2003 at 12:38:04AM +0100, Federico Di Gregorio wrote:
> i started by ignoring *everything* with the word 'tap' in it, mainly
> because i found the terms 'tap' and 'http server' togheter two times and
> was looking for something different. i also completely ignored coil.

It occurs to me that Twisted is a little daunting because it's
presented as a single. monolithic package. I think it would be helpful
if, at least in the documentation, there was more of a
provides/requires structure, or at least a concept map.

For example: 

	The core of Twisted is t.internet and t.python.

	t.protocols requires the Twisted core, and provides simple
	accesss to a variety of Internet protocols.

	t.conch requires the core, and implements the the SSH
	standard. It provides a Python-based equivalent to the OpenSSH
	tools, and (for example) allows Python-based programs to
	create and use SSH tunnels (or whatever else it does)

	t.enterprise requires the Twisted core, and provides a way for
	Python programs to access databases in a Twisted-style way.

	t.im requires the Twisted core and t.protocols, and provides
	an a multi-protocol instant-messaging client for the end-user.

...and so on and so forth.

Basically, for each module in Twisted, the Twisted newbie can see if
that module is likely to be (a) a framework they can use to do what
they want, (b) an application that does what they want, (c) a suitable
source of sample code.

Note that a conceptual module might not be identical to the current
module organisation - t.e.dbcred requires t.enterprise and t.cred but
doesn't provide any new abilities, so I'd consider it a module of its
own.

Say I want to write an IRC bot - it needs to be able to talk to an IRC
server and store information. I notice that t.protocols has an IRC
protocol, and t.enterprise has database access, so I can probably
cobble together something using only those two modules. I see that
t.im is an application rather than a framework, so I won't try and
build on that, but I probably *will* mine it for sample code of how to
talk to the IRC module.

As a side note, I think Twisted's applications should be as thin as
possible - if the application involves any abstraction at all (hello,
twisted.im!) that abstraction should be a framework, and the
application should just use the framework.

Screwtape,
...who nevertheless is not volunteering. Yet. :)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "A glance, a stance, a broken romance; a disconnected telephone..." -- DEVO
|



From ste at webaccess.mozquito.com  Wed Feb 12 19:49:01 2003
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Thu, 13 Feb 2003 03:49:01 +0100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
References: <20030212.075146.122586679.glyph@twistedmatrix.com>, <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>	<20030211.141712.59648863.glyph@twistedmatrix.com>	<20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <3E4B079D.3030105@webaccess.mozquito.com>

Moshe Zadka wrote:
> I encourage the "newbies" on the list to speak up: what are *you* planning
> to do with Twisted, and which documents would help you with that.

There we go: I am a newbie in both twisted and python, I was attracted to them together by the fact that twisted provides some support for a lot of protocols and that it is lightweight and small enough to understand immediately where to dig in if you need to be closer to the metal-over-the-wire... 

I am using twisted for building an application that allows to view and modify XML data over all possible protocols (http, mail, irc, p2p, ecc.), in other words, a multi-protocol server whose contents, logic and presentation are defined as one XML data model.
The idea is to have some kind of middleware with some basic XML functionality (XSL/XPath/XQuery), make it accessible in many different ways and to hide physical storage of data behind that.

People lately tend to argue that the everything-is-XML POV is Bad and also people already laughed at me on the irc channel about all that.. let's say that even if it sounds absurd I would really like to use twisted for such things ok? You aren't the kind of folks who blame people for thinking different, are you? ;-) 

Also: twisted+libxml2 seems to be able to handle much better heavy XML data flows than Tomcat+Xalan on the same hardware.. it would be a shame not to use it for doing some of the web services stuff that get all the hype nowadays. 
 
I am interested in understanding more of cred because it seems it would be a perfect fit for authorizing access to XML nodes that are seen as parts of the same data model but physically lie in different servers and are accessed through different protocols.

I am also interested in how to write APIs that return deferreds (this topic is listed in the howto page but there's no link yet: is "Wrapping new kinds of selectable resources" what I need?) but I still haven't come up with a better way other than to use threads i.e. of course some XML work I need to do takes an awfully long time even if it's done in C by Gnome's libxml2, how can I wrap it in an asynchronous api without using threads? I already ran into the infamous python threading IO deadlock.....

Oh and btw I had no problem starting to look at twisted from TAPs, I like the concept for being a different approach and most importantly for being The Fastest Way To Share A Folder Over The Web From The Command Line (which is a great thing), but I have to confess that reading this thread pushed me to try and do without them for the first time and I just decided I am not going back there immediately: I think having the possibility to choose is invaluable.

Thanks a lot, ciao
ste

p.s. the release motto of version 1.0 rocked! I will write it here again 'cause I like it so much:

INEFFICIENT CAPITALIST YOUR OPULENT TOILET WILL BE YOUR UNDOING

I think adding it to the release was pure genius, it cheers me much more than the sandwich ingredients analogy ;-)





From acapnotic at twistedmatrix.com  Wed Feb 12 19:58:02 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 12 Feb 2003 18:58:02 -0800
Subject: [Twisted-Python] Re: cred? spread? (was: In Defense of Taps)
In-Reply-To: <20030212224320.GA750@ferd2.thristian.org>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
	 <20030211.141712.59648863.glyph@twistedmatrix.com>
	 <20030211235434.GE31012@cantanker.net>
	 <20030212154325.17273.qmail@green.zadka.com>
	 <20030212224320.GA750@ferd2.thristian.org>
Message-ID: <1045105080.3319.61.camel@troglodyte.funhouse>

I'm gonna blurt out some information, and then run off to get some
food.  But someone (possibly me) should remember to follow up on this by
figuring out if this information is already in some document somewhere,
and if not, where it should be, and how to integrate it there. 
(Candidates include package/module docstrings, documents we seem to be
calling "howtos", the "Dot Products" section of the website, or
someplace else.)

I will target the specific questions you have asked in a high-level
fashion, this information does not take the place of the excellent
detailed documents in the "howto" directory on PB by Brian Warner and
others.

On Wed, 2003-02-12 at 14:43, screwtape at froup.com wrote:
>  - cred: Apparently this is something I need to get Right for PB to
>    work, but I'm not sure what it does. I'd have expected it to be
>    something like PAM for Linux - give it a name and password, and get
>    back 'allow' or 'deny' - but it seems this is not the case.

twisted.cred is a framework for the abstract ideas of "there are some
people and some services and some of the people access some of the
services."  There's Authorizer, that's the part to which you give a name
and a password.  It gives you back an Identity (or 'deny').  An Identity
holds a keyring.  If a person wants to access a Service but they don't
have a match on their keyring, they get 'deny'.  Otherwise, they get a
Perspective on that Service.  (The Perspective is for holding data that
overlaps between the Identity and the Service; you don't want to clutter
an Identity with data from every Service.)

>  - spread: I understand banana and jelly, but PB surpasses me. I don't
>    have a clear mental picture of how information flows between the
>    two processes. I'm looking for an API that resembles 'connect to
>    this server, tell me what objects there I can talk to', but I'm not
>    finding it.

"connect to this server" is well-documented, but I'll address "tell me
what objects[...]".  Assuming you use the standard usage of PB and cred
(using pb.IdentityConnector), you get back a reference to one object
upon connecting: Your Perspective (on the Service you asked to connect
to).  You may call methods that follow a certain naming convention on
that perspective (see the pb.Perspective API docs), which may return
references to other Referenceable objects.  

To the best of my knowledge, there are currently no facilities for
introspection across PB, so there's no built-in way to say "what remote
methods can I call on this object," nor is there even a "what services
are available", one of which would be the close analog to your "what
objects can I talk to" question.

Okay, dinnertime!

 - Kevin

-- 
The moon is waxing gibbous, 80.3% illuminated, 10.4 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030212/4e2264ad/attachment.sig>

From z3p at twistedmatrix.com  Wed Feb 12 20:54:33 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 12 Feb 2003 22:54:33 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <m28ywlxp6b.fsf@justin.local.>
Message-ID: <3E4AD0A9.565.2179B8A@localhost>

On 12 Feb 2003 at 14:41, justin at iago.org wrote:
>  Is there an example out there of a basically functioning SSH server
>  using conch that will accept connections and authorize them based on
>  public keys (not passwords)?  The only documentation or example usage
>  I could find for conch is doc/examples/sshsimpleclient.py

There is now an example of this in CVS 
doc/examples/sshsimpleserver.py

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 21:42:01 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Wed, 12 Feb 2003 23:42:01 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>
Message-ID: <3E4B2219.494B8180@beeblebrox.gsfc.nasa.gov>

Bob Ippolito wrote:
> ....  As I see it, TAPs are not particularly
> useful for developers *until* they're ready to distribute their
> applications.  ...

I may be missing your point, but I don't find TAPs "unuseful", 
even though I haven't yet begun to distribute my application.  
As I said, one of the first things I did was write a 
tap creation script, pgertap.py, for my application, and it 
helped me organize my thoughts on planning config options, 
how various modules should start up in the server, etc.  Once 
in a while I'll refactor something and have to make a little 
adjustment in pgertap.py, but that's almost a useful thing 
in itself, in that pgertap.py contains a very brief synopsis 
of the architecture.  

When I make a change to the server and want to try it out, 
all I have to do is, in my "tap building" directory:

kill `cat twistd.pid`
rm * (remove the old taps and log file)
  [in a root shell, run setup.py in PanGalactic dir to reinstall]
mktap pger
twistd -f pger.tap

Doesn't get much easier than that.  Kind of gives a warm and 
fuzzy to know the install/mktap/run process works each 
time, anyway.  

As a relatively naive user of twisted, I only have a superficial, 
mechanical understanding of taps, but that doesn't bother me ... 
the simple little tap incantations make the twisted magic seem 
friendly somehow.  

Cheers,
-- Steve.



From twisted at moshez.org  Wed Feb 12 22:12:09 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 05:12:09 -0000
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
In-Reply-To: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>
References: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
		 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
		 <20030211.141712.59648863.glyph@twistedmatrix.com>
		 <20030211235434.GE31012@cantanker.net>
		 <20030212154325.17273.qmail@green.zadka.com>
		 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros>
Message-ID: <20030213051209.24387.qmail@green.zadka.com>

On Wed, 12 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> An important piece of this puzzle is the STEP (ISO 10303) standard for 
> "Product Model Data", which is a set of information models of the various 
> types of data I mentioned above.  STEP itself is very complex (and not 
> pretty, but it's really the only game in town for multi-disciplinary 
> engineering data integration and it is taken very seriously by all large 
> manufacturing organizations ... the list of organizations using/developing 
> STEP is a who's who of manufacturers:  Ford, GM, Daimler-Chrysler, Boeing, 
> Lockheed-Martin, Northrup Grumman, Raytheon, etc.), so one of the constraints 
> on PGEF is to be able to map between STEP's information models and the PGEF 
> repository schema ... if you browse the comments in createPgerDbTables.sql, 
> many refer to how things map to/from STEP.

STEP pretty much sucks for data-exchange, for a number of reasons. The primary
reason is that STEP loses the "design information", so that editing it is
about as fun as debugging programs by fixing their .o representations.
I don't know of any free solution, but Proficiency
(http://www.proficiency.com/products/product_overview.html) is working
in this area -- and their very existence is a testimony to STEP suckage.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 23:10:28 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 13 Feb 2003 01:10:28 -0500
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
References: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
			 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
			 <20030211.141712.59648863.glyph@twistedmatrix.com>
			 <20030211235434.GE31012@cantanker.net>
			 <20030212154325.17273.qmail@green.zadka.com>
			 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com>
Message-ID: <3E4B36D4.771C1AE7@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Wed, 12 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> > An important piece of this puzzle is the STEP (ISO 10303) standard for
> > "Product Model Data", which is a set of information models of the various
> > types of data I mentioned above.  STEP itself is very complex (and not
> > pretty, but it's really the only game in town for multi-disciplinary
> > engineering data integration and it is taken very seriously by all large
> > manufacturing organizations ... the list of organizations using/developing
> > STEP is a who's who of manufacturers:  Ford, GM, Daimler-Chrysler, Boeing,
> > Lockheed-Martin, Northrup Grumman, Raytheon, etc.), so one of the constraints
> > on PGEF is to be able to map between STEP's information models and the PGEF
> > repository schema ... if you browse the comments in createPgerDbTables.sql,
> > many refer to how things map to/from STEP.
> 
> STEP pretty much sucks for data-exchange, for a number of reasons. The primary
> reason is that STEP loses the "design information", so that editing it is
> about as fun as debugging programs by fixing their .o representations.

I'm not sure which "design information" you are referring to.  
There are many, many types of design information.  
If you mean "construction history", that is being added to 
AP203 Ed. 2.  If you mean "parametrics", that is also to be 
added soon.  If you mean "manufacturing features", these 
are handled by AP224.  STEP has proven itself as the absolute 
best standard format for exchanging explicit 3D geometry between 
CAD systems, period.  In fact, during the past 10 years of 
STEP translator implementation, STEP has actually advanced 
the state of the art in handling differences between internal 
representations of geometric accuracy between CAD tools, which 
was quite a serious problem even for "point-to-point" solutions.  

The fact that you even refer to "editing it" (presumably you 
mean editing a STEP Part 21 file, which no one in their right 
mind would attempt, any more than you would try to edit a 
.o representation, as you say) suggests that you have quite 
missed the point:  STEP provides a set of information models 
and various ways of implementing them, one of which is file 
exchange (Part 21, "Clear Text Encoding"), and there are lots 
of tools for parsing, browsing, validating, mapping, 
visualizing, and *intelligently* editing STEP data.  For some 
examples, see:

http://www.lksoft.com

Lothar Klein's stuff is very cool.  Not open source, but very 
powerful, and very reasonably priced (probably much more 
reasonable than the proprietary solution you cite).

> I don't know of any free solution, but Proficiency
> (http://www.proficiency.com/products/product_overview.html) is working
> in this area -- and their very existence is a testimony to STEP suckage.

Not really.  It's just another proprietary solution, of which there 
will always be lots.  That's a bit like saying the existence of 
J2E proves that Twisted sucks.  ;^)  

BTW, you don't know of any "free solution" because there isn't 
one.  CAD software is complex, difficult stuff.  There *is* a free 
library for CAD, OpenCASCADE, which also has implemented some 
STEP translators ... and the fact that a powerful open source CAD 
package thinks STEP is worth implementing says a hell of a lot 
more about it than the existence of some over-hyped proprietary 
data exchange solutions.  

Believe me, having worked on STEP and STEP applications for the past 
10 years or so, I'd be the last person to claim that it's pretty.  
It has lots of warts.  But the reality is that it's the best game 
in town right now, and nothing else on the horizon comes close.  
It's like the old Defenders opening line, "STEP is a very bad form 
of data exchange ... but all the others are so much worse!"  

Cheers,
-- Steve.



From waterbug at beeblebrox.gsfc.nasa.gov  Wed Feb 12 23:13:37 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 13 Feb 2003 01:13:37 -0500
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
References: <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
			 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
			 <20030211.141712.59648863.glyph@twistedmatrix.com>
			 <20030211235434.GE31012@cantanker.net>
			 <20030212154325.17273.qmail@green.zadka.com>
			 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com>
Message-ID: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:

> I don't know of any free solution, but Proficiency
> (http://www.proficiency.com/products/product_overview.html) is working
> in this area -- and their very existence is a testimony to STEP suckage.

I just read their FAQ ... don't believe everything you read.  ;^)

-- Steve.



From m at moshez.org  Thu Feb 13 00:06:58 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 07:06:58 -0000
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
In-Reply-To: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>
References: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>, <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
			 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
			 <20030211.141712.59648863.glyph@twistedmatrix.com>
			 <20030211235434.GE31012@cantanker.net>
			 <20030212154325.17273.qmail@green.zadka.com>
			 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com>
Message-ID: <20030213070658.20421.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> I just read their FAQ ... don't believe everything you read.  ;^)

I worked there for >1 year. :)

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From glyph at twistedmatrix.com  Thu Feb 13 01:51:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 02:51:08 -0600 (CST)
Subject: [Twisted-Python] Re: cred? spread?
In-Reply-To: <1045105080.3319.61.camel@troglodyte.funhouse>
References: <20030212154325.17273.qmail@green.zadka.com>
	<20030212224320.GA750@ferd2.thristian.org>
	<1045105080.3319.61.camel@troglodyte.funhouse>
Message-ID: <20030213.025108.74754952.glyph@twistedmatrix.com>


On 12 Feb 2003 18:58:02 -0800, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> To the best of my knowledge, there are currently no facilities for
> introspection across PB, so there's no built-in way to say "what remote
> methods can I call on this object," nor is there even a "what services
> are available", one of which would be the close analog to your "what
> objects can I talk to" question.

I don't have any time for this, but it should be a straightforward thing to do
to implement on top of existing protocol semantics.  I would appreciate it if
somebody who knows a bit about PB and Python interfaces (bonus if you can use
twisted.python.formmethod for some of it, but that's not necessary) could take
a crack at proposing a standard set of methods for PB object introspection.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030213/27169a97/attachment.sig>

From dave at krondo.com  Thu Feb 13 02:18:23 2003
From: dave at krondo.com (Dave Peticolas)
Date: 13 Feb 2003 01:18:23 -0800
Subject: [Twisted-Python] Problems using win32eventreactor()
In-Reply-To: <20030210235415.474c70c1.twisted@itamarst.org>
References: <417403503.20030211030402@uch.net>
	 <01c201c2d171$86491000$6501a8c0@listy>
	 <20030210235415.474c70c1.twisted@itamarst.org>
Message-ID: <1045127902.27311.51.camel@oneiros>

On Mon, 2003-02-10 at 20:54, Itamar Shtull-Trauring wrote:
> On Mon, 10 Feb 2003 21:01:42 -0500
> "Jeff Grimmett" <grimmtooth at softhome.net> wrote:
> 
> > This generates an error message at the win32eventreactor.install()
> > line:
> > 
> >     assert not sys.modules.has_key('twisted.internet.reactor'), \
> > AssertionError: reactor already installed
> > 
> > What am I missing?
> 
> win32eventreactor.install() should be the *first* thing in your module
> or app. It has to be run before any other code is, or someone might
> "from twisted.internet import reactor", which installs the default
> reactor.

This also confused me (and another developer new to Twisted) when
we first encountered it. You normally don't expect import order to
matter, especially for seemingly different namespaces (t.i.reactor
versus t.i.win32eventreactor, for example). I realize that
win32eventreactor.install() is messing with the modules namespace,
but you don't know that without delving deep into the code.

I've come up with a patch to eliminate the need to remember
a special import order. Since the reactor mechanism is so basic
to Twisted, I am attaching it for review rather than committing
it, although it does pass 'trial' for the default reactor and
several others.

The gtk2reactor trial is failing to even finish, but that
seems to be unrelated to this patch. Are others seeing this
behavior?

thanks,
dave

-------------- next part --------------
? bin/_trial_temp
Index: twisted/internet/default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.63
diff -u -r1.63 default.py
--- twisted/internet/default.py	3 Feb 2003 23:53:30 -0000	1.63
+++ twisted/internet/default.py	13 Feb 2003 01:13:25 -0000
@@ -500,11 +500,31 @@
         return readers
 
 
+class StubReactor:
+    """A placeholder reactor."""
+
+    realReactor = None
+
+    def installReactor(self, reactor):
+        self.realReactor = reactor
+
+    def reactorInstalled(self):
+        return self.realReactor is not None
+
+    def __getattr__(self, key):
+        if self.realReactor is None:
+            del sys.modules['twisted.internet.reactor']
+            reactor = install()
+            self.installReactor(reactor)
+        return getattr(self.realReactor, key)
+
+
 def install():
     """Configure the twisted mainloop to be run using the select() reactor.
     """
     reactor = SelectReactor(1)
     main.installReactor(reactor)
+    return reactor
 
 
-__all__ = ["install", "PosixReactorBase", "SelectReactor"]
+__all__ = ["install", "PosixReactorBase", "SelectReactor", "StubReactor"]
Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.86
diff -u -r1.86 main.py
--- twisted/internet/main.py	15 Oct 2002 18:32:37 -0000	1.86
+++ twisted/internet/main.py	13 Feb 2003 01:13:26 -0000
@@ -111,9 +111,14 @@
     global iterate, addTimeout, wakeUp
     # this stuff should be common to all reactors.
     import twisted.internet
+    import default
     import sys
-    assert not sys.modules.has_key('twisted.internet.reactor'), \
-           "reactor already installed"
+    if sys.modules.has_key('twisted.internet.reactor'):
+        current = sys.modules['twisted.internet.reactor']
+        assert (isinstance(current, default.StubReactor) and
+                not current.reactorInstalled()), \
+                "reactor already installed"
+        current.installReactor(reactor)
     twisted.internet.reactor = reactor
     sys.modules['twisted.internet.reactor'] = reactor
 
Index: twisted/internet/reactor.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/reactor.py,v
retrieving revision 1.4
diff -u -r1.4 reactor.py
--- twisted/internet/reactor.py	1 Sep 2002 10:41:06 -0000	1.4
+++ twisted/internet/reactor.py	13 Feb 2003 01:13:26 -0000
@@ -13,17 +13,23 @@
 # You should have received a copy of the GNU Lesser General Public
 # License along with this library; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
 """
 See twisted.internet.interfaces.IReactor*.
 """
+
 import sys
 del sys.modules['twisted.internet.reactor']
+
 from twisted.python import runtime
+
 if runtime.platform.getType() == 'java':
     from twisted.internet import javareactor
     javareactor.install()
 else:
-    #from twisted.python import log
-    #log.msg("Installing SelectReactor, since unspecified.")
+    import sys
+    import twisted.internet
     from twisted.internet import default
-    default.install()
+    reactor = default.StubReactor()
+    twisted.internet.reactor = reactor
+    sys.modules['twisted.internet.reactor'] = reactor
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030213/a6fd1e4f/attachment.sig>

From a.d.stribblehill at durham.ac.uk  Thu Feb 13 02:38:27 2003
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Thu, 13 Feb 2003 09:38:27 +0000
Subject: [Twisted-Python] Woven howto doc bug?
In-Reply-To: <20030212184057.29316.qmail@green.zadka.com>
References: <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com>
Message-ID: <20030213093827.GR9228@wompom>

Quoting Moshe Zadka <twisted at moshez.org> (2003-02-12 06:40:57 GMT):
> On Wed, 12 Feb 2003, Andrew Stribblehill <a.d.stribblehill at durham.ac.uk> wrote:
> 
> > From the Woven howto, it tells me I should do:
> > 	from twisted.web.woven import page
> > 
> > This doesn't exist in 1.0.3rc1, but:
> 
> Yes it does.
> At least, it exists in both the tarball and the Python 2.2 sid Debian package.

Okay. In that case, I assert that there's a bugette in your
dependencies for python-twisted. It should IMO depend on the exact
version of python2.2-twisted that it has. I installed the
python-twisted package from sourceforge but it didn't upgrade my
python2.2-twisted. Hence my confusion.

Hrm, that doesn't sound quite so apologetic as it might. I was wrong,
but at least you can see why now!

-- 
EAST SOLE LUNDY FASTNET IRISH SEA
MAINLY EAST OR SOUTHEAST 3 OR 4, OCCASIONALLY 5. OCCASIONAL DRIZZLE
LATER. MODERATE OCCASIONALLY POOR, WITH FOG PATCHES IN LUNDY AND
IRISH SEA AT FIRST



From twisted at moshez.org  Thu Feb 13 02:48:00 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 09:48:00 -0000
Subject: [Twisted-Python] Woven howto doc bug?
In-Reply-To: <20030213093827.GR9228@wompom>
References: <20030213093827.GR9228@wompom>, <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com>
Message-ID: <20030213094800.27908.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Andrew Stribblehill <a.d.stribblehill at durham.ac.uk> wrote:

> Okay. In that case, I assert that there's a bugette in your
> dependencies for python-twisted. It should IMO depend on the exact
> version of python2.2-twisted that it has.

No it shouldn't.
Dependencies should not be artifically hardened. If you upgrade
"python-twisted", there's no reason why I should assume you also wanna
upgrade python2.2-twisted.
If you want to upgrade everything, use apt.
That's what apt is there for.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From glyph at twistedmatrix.com  Thu Feb 13 03:26:27 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 04:26:27 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213011452.GC20194@frobozz.local>
References: <20030211235434.GE31012@cantanker.net>
	<20030212.075146.122586679.glyph@twistedmatrix.com>
	<20030213011452.GC20194@frobozz.local>
Message-ID: <20030213.042627.122625493.glyph@twistedmatrix.com>


On Thu, 13 Feb 2003 12:14:52 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> Frankly, I see TAPs as one more concept that a new user shouldn't be burdened
> with comprehending.  Reactors, Factories, Protocols, Transports and Deferreds
> are hard enough on their own.  I really think docs that start by using
> reactor.listenTCP, and possibly app.listenTCP, are the way to go.

The metaphor that springs most readily to mind is that of GUI application
toolkits.  Despite the fact that drawing a single pixel is more easily
comprehensible to someone who knows a bit about graphics, and many GTK
programmers are probably graphics people, the tutorial begins with drawing a
whole button.  Buttons may not be of interest to people writing stock-tickers,
and in fact simple drawing primitives and timed callbacks are more useful to
them.  Nevertheless, the "hello world" of GTK is a button you can click on and
a window you can close and stop the main-loop.  The GTK developers want to
encourage you to program in such a way that your code can interoperate with
more of the GTK codebase, and the mechanism that they try to use for that is
widgets.

As I've said before, Twisted's "widget" analogy is strained, since GTK widgets
are a really *good* abstraction and Twisted mktap plugins are a really *bad*
abstraction, but the general category of thing is the same.

A new Twisted user in any domain except low-level networking should
require only cursory knowledge of Reactors, Factories, Protocols, and
Transports.  Assuming we have 3 classes of user:

    * network protocol developer
    * RPC developer (using PB)
    * web developer

_All_ of these developers should be aware of TAPs and Deferreds, and only the
network protocol developer needs to have a really thorough understanding of
Reactors/Factories/Protocols.  The web developer can get away with only a
rudimentary understanding of Deferreds, too.

I'm talking here about what we need to communicate with these developers, and
not the state the docs are already in: as much as they've improved there's much
more they need.  In particular, we currently imply one path through the
documentation, which I think we've previously agreed is just wrong.  We need
more types of plugins for different interest groups!

> Don't try make people swallow all of Twisted at once... it's just too big.

I don't think the core is too big, and making this argument sounds like we're
really making users swallow ALL of twisted.  We're clearly not.  I really doubt
that anyone who can't fit the basic concepts of Reactor, Factory, Protocol and
Transport into their head within a day or two is competent to do network
programming in any environment: Twisted is one of the easiest.  Users
unfamiliar with networking concepts may take longer to get adjusted, but such
is life and learning.

Outside of the set of things you've talked about here, Twisted also contains
servers for HTTP, NNTP, FTP, IRC, [...], and a plethora of application-domain
abstractions to support those protocols.  Putting more than one of _those_ into
a general introductory document because you think it's cool is probably
overkill, although it's hard to avoid completely.

However, TAPs are one of the few base mechanisms for services to communicate
with each other within the Twistedverse.  Much like Deferreds, they don't imply
any particular functionality of your application beyond "asynchronous
execution".  They do have the additional overhead of "persistence", but you
don't need to worry much about that.  If you're not instantiating any
particularly weird objects of your own, the framework won't burden you with
unpersistable stuff at least for the initial TAP construction.

> I'll even go so far as speculating that this will cause more external
> projects to use TAPs, because they won't be seen as some annoying idea in the
> beginner docs that they had to skip past to get real work done.

Based on my experience thus far, I doubt this very much.  I'd be interested in
a simple show of hands that indicates whether this is an accurate perception.

The feedback I got on the Plugins document at the time I wrote it was that it
was a good grounding in the way that I think about Twisted tying together.  The
people who don't want such an understanding have ignored it to this day :-).
Placing it as an introductory document at least makes this a conscious
decision: they will skip it and ignore it, looking for the document that
explains their particular problem.

Most people, including software developers, will skip anything they don't
already believe they need to read.  Server software developers don't think very
much about integration: though someone using Twisted has eschewed custom and
decided not to rewrite everything from scratch, there is still a persistent
belief in the application developers have an unrealistic degree of control over
the deployment environment, which turns software immediately into
consultingware and ruins its general applicability.  TAPs are one tiny, tiny
microcosm of this problem, so I don't expect that they will solve all the
world's ills in this regard, either :).

Featuring the TAP plugin howto prominently at least stimulates debate about
TAPs.  This conversation is not the first such one (though it is by far the
lengthiest and most public). Conversations stimulate development in turn.

Despite occasional fits of philosophical obscurantism, I am also more a
programmer than an ideologue.  While this conversation has been going on, I've
been kicking around more and more ideas for COIL and how to make this whole
plugin thing a really slick whiz-bang experience.  I'm sure that will be more
convincing than an email thread.

Those of you who are disagreeing, consider that even your disagreement is a
contribution :-).

> Give Twisted plugins its own, comprehensive doc that can assume knowledge of
> basic Twisted, rather than short-changing it by making it the introductory
> doc.  It could start with a section titled "Motivation", explaining the
> advantages of twistd and mktap.

While I think of this as an important introductory doc, it's already the 18th
document in the book.  In fact, it comes after "Using Dirdbm", which I think
may be shortchanging it a *bit* more than treating it as introductory :-).

As to comprehensiveness: I'd love to have a whole chapter on plugins, but
frankly there isn't that much to cover.  Do you feel that the current doc is
not thorough enough?

And finally, motivation: the section "Twisted and You: Where Does Your Code Fit
In?" may not be optimal, but I think it explains in overview terms why one
would want to use a TAP.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030213/9dc9d43e/attachment.sig>

From glyph at twistedmatrix.com  Thu Feb 13 03:39:52 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 04:39:52 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <1045093084.1188.45.camel@momo.initd.org>
References: <20030212154325.17273.qmail@green.zadka.com>
	<20030212224320.GA750@ferd2.thristian.org>
	<1045093084.1188.45.camel@momo.initd.org>
Message-ID: <20030213.043952.74569826.glyph@twistedmatrix.com>


On 13 Feb 2003 00:38:04 +0100, Federico Di Gregorio <fog at initd.org> wrote:
> i started by ignoring *everything* with the word 'tap' in it, mainly
> because i found the terms 'tap' and 'http server' togheter two times and
> was looking for something different. i also completely ignored coil.

> using basic PB (no authentication, yes jellification of classes) was
> easy with the tutorial (about 8h, gtk2reactor fixing included) but
> switching to cred was much more difficult. the documentation was not
> enough to write my first app authenticating the users vs a database and
> providing different perspectives to them (about 2 days).

I'm glad that you found some of these things easy to do.  I also wouldn't argue
that the existing documentation _is_ necessarily sufficient for those use-cases
that you've provided.  However, have you actually looked at all of it yet?  It
does sort of make your feedback less useful to begin with "I began by ignoring
[large portions of documentation] ..." and end with "the documentation was not
sufficient ...".

In particular, have you checked out
http://www.twistedmatrix.com/documents/howto/pb-cred ? The title does not have
the word "cred" in the HTML index, so perhaps you overlooked it?  If so, what's
missing?

> right now we are using twisted for two "work" projects and we plan to
> integrate in it a port of our previous product (easy, transactional db
> access on server side and automatic binding of objects to the gui client
> side, more on that if you people are interested.)

When can you be more specific? :)

> maybe i am a little biased by the fact that our previous framework was
> very similar to PB, but i don't think people approaching twisted are
> interested in yet another http/irc/xxx server (w/ or w/o TAPS.)
> more on the "framework" side, to develop applications or custom
> protocols. 

I wish you were right!  This was not a technology space I really wanted to
address, originally.  Unfortunately, "web" is still hot these days, and Twisted
adds some substantial frosting to the web that just isn't possible with most
other servers.  Most (I would go so far as to say "almost all") of the initial
burst of interest in Twisted happened when I added a web-server, even when the
webserver was crap.  The enigmatic "tenth" put it best in the quotefile:

    <tenth> I get the feeling that I could rack up some ad impressions by
    posting an announcement to [freshmeat] about a webserver "powered entirely
    by love, that I made out of this bong I had".
    <tenth> Well, as long as it did something really l88t that other
    bong-servers didn't do, anyway.

Twisted is not powered entirely by love, so to set the record straight: it is
powered by a glowing green substance that fell to earth, presumably from space.
Do not apply Twisted to your skin or eyes.  Do not taunt "happy fun internet".
For use only as directed.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030213/635a421a/attachment.sig>

From glyph at twistedmatrix.com  Thu Feb 13 04:17:02 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 13 Feb 2003 05:17:02 -0600 (CST)
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven
 howto doc bug?)
In-Reply-To: <20030213094800.27908.qmail@green.zadka.com>
References: <20030212175359.GQ9228@wompom>
	<20030212184057.29316.qmail@green.zadka.com>
	<20030213094800.27908.qmail@green.zadka.com>
Message-ID: <20030213.051702.89042779.glyph@twistedmatrix.com>


On 13 Feb 2003 09:48:00 -0000, Moshe Zadka <twisted at moshez.org> wrote:
> Dependencies should not be artifically hardened. If you upgrade
> "python-twisted", there's no reason why I should assume you also wanna
> upgrade python2.2-twisted.

Is there any situation where it is sane to have a later version of a dummy
package than of the package that it depends on?

I notice that python-crypto does it your way, python-numeric depends on
absolute version, python-tk depends on greater-than-or-equal version,
python-gtk2 does it your way...

Apparently this is up to the individual packager, but as a user I would expect
the latest version of the dummy package to upgrade the real package.  Why this
inconsistency between different packages?

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030213/d775a6df/attachment.sig>

From m at moshez.org  Thu Feb 13 04:24:55 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 11:24:55 -0000
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven
 howto doc bug?)
In-Reply-To: <20030213.051702.89042779.glyph@twistedmatrix.com>
References: <20030213.051702.89042779.glyph@twistedmatrix.com>, <20030212175359.GQ9228@wompom>
	<20030212184057.29316.qmail@green.zadka.com>
	<20030213094800.27908.qmail@green.zadka.com>
Message-ID: <20030213112455.19926.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Apparently this is up to the individual packager, but as a user I would expect
> the latest version of the dummy package to upgrade the real package.  Why this
> inconsistency between different packages?

a) No policy
b) No difference in behaviour if used through the recommended channels of
   upgrading (apt or dselect)
c) More work (and thus, more potential bugs) to do it with absolute
   dependencies.
d) If you're using plain dpkg, why do you assume these dependencies should
   be enough? A user could upgrade twisted-doc but not python-twisted, thus
   again getting an unsynced version.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From andrew-twisted at puzzling.org  Thu Feb 13 05:45:50 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 13 Feb 2003 23:45:50 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213.042627.122625493.glyph@twistedmatrix.com>
References: <20030211235434.GE31012@cantanker.net> <20030212.075146.122586679.glyph@twistedmatrix.com> <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com>
Message-ID: <20030213124550.GB21068@frobozz.local>

On Thu, Feb 13, 2003 at 04:26:27AM -0600, Glyph Lefkowitz wrote:
> 
> > Don't try make people swallow all of Twisted at once... it's just too big.
> 
> I don't think the core is too big, and making this argument sounds like we're
> really making users swallow ALL of twisted.  We're clearly not.  I really doubt
> that anyone who can't fit the basic concepts of Reactor, Factory, Protocol and
> Transport into their head within a day or two is competent to do network
> programming in any environment: Twisted is one of the easiest.  Users
> unfamiliar with networking concepts may take longer to get adjusted, but such
> is life and learning.

I agree that comprehending the "basic concepts of Reactor, Factory, Protocol
and Transport" is not too much to ask of a Twisted newbie, so long as you
don't unnecessarily distract them :)

Anyway, I've taken a look at the current shape of the docs, and I've got
a couple of ideas:

  - The "The Basics" chapter covers too little too thinly to be of any use.
    Its pages should be moved accordingly:
      - Installation -> Introduction
      - Bringing up a web server -> Web Applications
      - Using the utilities, Using manhole to configure twisted, Using
        telnet to configure twisted -> a new chapter "Administering Twisted
        Applications", or something like that.  The new chapter would be
        placed somewhere after Low-Level Twisted.
  - Removing the "The Basics" chapter would move the High-Level Twisted to
    the second chapter, right after Introduction.  This feels right to me :)

Currently, "The Basics" chapter offers *nothing* relevant to a newbie
Twisted developer.
  
> Outside of the set of things you've talked about here, Twisted also contains
> servers for HTTP, NNTP, FTP, IRC, [...], and a plethora of application-domain
> abstractions to support those protocols.  Putting more than one of _those_ into
> a general introductory document because you think it's cool is probably
> overkill, although it's hard to avoid completely.

Definitely.  Ideally, there would be a "Twisted Protocols" chapter in the
docs, with a section for each module in twisted.protocols.* -- but most of
those modules are moving targets, and the API docs aren't too bad, so it's
not a big priority.  Perhaps a limited "Brief Guide to Twisted Protocols"
which just covers a couple of the major modules would be beneficial, though?

> However, TAPs are one of the few base mechanisms for services to communicate
> with each other within the Twistedverse.  Much like Deferreds, they don't imply
> any particular functionality of your application beyond "asynchronous
> execution".  They do have the additional overhead of "persistence", but you
> don't need to worry much about that.  If you're not instantiating any
> particularly weird objects of your own, the framework won't burden you with
> unpersistable stuff at least for the initial TAP construction.

They're orthongal to the task of writing a server/client using Twisted, thus
they shouldn't be up there with Factories, Protocols and Deferreds in the
set of Stuff A New Twisted Developer Needs To Know.

I do agree that TAPs are something a medium-level Twisted programmer should
know, I just disagree with making them a focus of the introductory docs.

> > I'll even go so far as speculating that this will cause more external
> > projects to use TAPs, because they won't be seen as some annoying idea in the
> > beginner docs that they had to skip past to get real work done.
> 
> Based on my experience thus far, I doubt this very much.  I'd be interested in
> a simple show of hands that indicates whether this is an accurate perception.

Me too; after all, it's mere speculation on my part :)

> Most people, including software developers, will skip anything they don't
> already believe they need to read.  Server software developers don't think very
> much about integration: though someone using Twisted has eschewed custom and
> decided not to rewrite everything from scratch, there is still a persistent
> belief in the application developers have an unrealistic degree of control over
> the deployment environment, which turns software immediately into
> consultingware and ruins its general applicability.  TAPs are one tiny, tiny
> microcosm of this problem, so I don't expect that they will solve all the
> world's ills in this regard, either :).

Especially considering they don't yet do WinNT services, for instance :)

I also think that TAPs aren't particularly good for, say, a GTK IRC client.
It makes much more sense for a user to run "/usr/bin/twisted-chat", than
"mktap twisted-chat; twistd -f twisted-chat.tap".  So I'm not convinced that
they're as universally applicable as Factories, etc, which is why I think
they should be less prominent.

I also think that this sentence from plugin.html is worded too strongly
(especially given that it's in <strong> tags):
    "Although there are other ways for Twisted to call your code, all
    Twisted projects should start as a plug-in of some kind."

Twisted is quite capable of being useful standalone apps like GUI IRC
clients, but nothing in that doc suggests to me that writing one as a
Twisted plugin would be a good idea.  Perhaps what I'm really trying to say
is that not all the world is a long-running unix daemon with interesting
persistable state, but currently the docs assume that.

> Featuring the TAP plugin howto prominently at least stimulates debate about
> TAPs.  

Couldn't you just post to the mailing list like a normal person? ;)

>        This conversation is not the first such one (though it is by far the
> lengthiest and most public). Conversations stimulate development in turn.

Indeed! :)

> Despite occasional fits of philosophical obscurantism, I am also more a
> programmer than an ideologue.  While this conversation has been going on, I've
> been kicking around more and more ideas for COIL and how to make this whole
> plugin thing a really slick whiz-bang experience.  I'm sure that will be more
> convincing than an email thread.

Yes!

> Those of you who are disagreeing, consider that even your disagreement is a
> contribution :-).
> 
> > Give Twisted plugins its own, comprehensive doc that can assume knowledge of
> > basic Twisted, rather than short-changing it by making it the introductory
> > doc.  It could start with a section titled "Motivation", explaining the
> > advantages of twistd and mktap.
> 
> While I think of this as an important introductory doc, it's already the 18th
> document in the book.  In fact, it comes after "Using Dirdbm", which I think
> may be shortchanging it a *bit* more than treating it as introductory :-).

I must admit, I recalled it being more prominent than that... being dumped
after Using Dirdbm is a bit harsh :)

> As to comprehensiveness: I'd love to have a whole chapter on plugins, but
> frankly there isn't that much to cover.  Do you feel that the current doc is
> not thorough enough?
> 
> And finally, motivation: the section "Twisted and You: Where Does Your Code Fit
> In?" may not be optimal, but I think it explains in overview terms why one
> would want to use a TAP.

You're probably right... the existing docs for plugins are fairly good.  The
main part lacking is something that points out "Hey, if you do this, you can
use twistd(1), and take advantage of its daemonisation and logging and
etc...".  It's hard to see the immediate benefit of mktap and twistd, when
you could ignore them and just run "./foo ...", rather than "mktap foo ... ;
twistd -f foo".

So, I'm asking for a more pragmatic motivation, rather than the existing
(but still valuable) philosophical one, which doesn't point this out.
"Framework" vs. "library"?  Who cares.  "Yet another abstraction I have to
cope with"?  Bleagh.  "It will give me proper daemonisation and logging and
..."?  Hey, tell me more!

-Andrew.




From justin at iago.org  Thu Feb 13 06:56:28 2003
From: justin at iago.org (Justin Sheehy)
Date: Thu, 13 Feb 2003 08:56:28 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4AD0A9.565.2179B8A@localhost> ("Paul Swartz"'s message of
 "Wed, 12 Feb 2003 22:54:33 -0500")
References: <3E4AD0A9.565.2179B8A@localhost>
Message-ID: <m24r78gu7n.fsf@justin.local.>

"Paul Swartz" <z3p at twistedmatrix.com> writes:

> doc/examples/sshsimpleserver.py

Excellent!

Thank you, Paul.  I'll check this out later today.

-Justin

 




From theller at python.net  Thu Feb 13 07:08:44 2003
From: theller at python.net (Thomas Heller)
Date: 13 Feb 2003 15:08:44 +0100
Subject: [Twisted-Python] From factory to protocol
Message-ID: <65ro5l3n.fsf@python.net>

Is it somehow possible to get to the protocol from the factory?

My code is structured this way:

I create instances of a Factory (sub)class, these (in their __init__
method), call reactor.connectTCP(address, port, self).

The protocol (LineReceiver) subclass hands data it receives to the
factory instance via self.factory.handle_data(), which parses the data
and calls methods in the 'models' they control.

Now, the models I have sometimes create events which must be sent to the
protocol again, but how can I access the actual protocol instance
from the Factory?

Thanks,

Thomas




From lac at strakt.com  Thu Feb 13 07:18:17 2003
From: lac at strakt.com (Laura Creighton)
Date: Thu, 13 Feb 2003 15:18:17 +0100
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?) 
In-Reply-To: Message from Glyph Lefkowitz <glyph@twistedmatrix.com> 
   of "Thu, 13 Feb 2003 05:17:02 CST." <20030213.051702.89042779.glyph@twistedmatrix.com> 
References: <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213.051702.89042779.glyph@twistedmatrix.com> 
Message-ID: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>

Some packages are found to have such horrible bugs in them that they
should never be used by anybody for any purpose whatsoever, regardless
of who was unfortunate enough to depend on them.  I don't know if this
is the case for those debian packages, however.

Laura



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Feb 13 07:34:19 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 13 Feb 2003 09:34:19 -0500
Subject: OT: CAD (was Re: [Twisted-Python] Re: In Defense of Taps)
References: <3E4B3791.C4035902@beeblebrox.gsfc.nasa.gov>, <3E4AC683.E40B74B5@beeblebrox.gsfc.nasa.gov>, <20030212.075146.122586679.glyph@twistedmatrix.com>
				 , <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com>
				 <20030211.141712.59648863.glyph@twistedmatrix.com>
				 <20030211235434.GE31012@cantanker.net>
				 <20030212154325.17273.qmail@green.zadka.com>
				 <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov> <1045083854.27327.33.camel@oneiros> <20030213051209.24387.qmail@green.zadka.com> <20030213070658.20421.qmail@green.zadka.com>
Message-ID: <3E4BACEB.6C21E5C1@beeblebrox.gsfc.nasa.gov>

Moshe Zadka wrote:
> 
> On Thu, 13 Feb 2003, Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:
> 
> > I just read their FAQ ... don't believe everything you read.  ;^)
> 
> I worked there for >1 year. :)

Ah ... I guess we each have our biases, then.  ;^)



From acapnotic at twistedmatrix.com  Thu Feb 13 10:04:37 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 13 Feb 2003 09:04:37 -0800
Subject: [Twisted-Python] From factory to protocol
In-Reply-To: <65ro5l3n.fsf@python.net>
References: <65ro5l3n.fsf@python.net>
Message-ID: <1045155821.3318.71.camel@troglodyte.funhouse>

On Thu, 2003-02-13 at 06:08, Thomas Heller wrote:
> Now, the models I have sometimes create events which must be sent to the
> protocol again, but how can I access the actual protocol instance
> from the Factory?

You'll have to override the factory's buildProtocol() to have it store
the protocol instance someplace.  For an example, see
twisted.words.tendril.TendrilFactory, which I think has similar needs to
yours.  I don't think that code has been peer-reviewed much, so I won't
promise it exemplifies Best Practices, but the answer should be in that
direction someplace.
 
Cheers,

 - Kevin

-- 
The moon is waxing gibbous, 84.9% illuminated, 11.0 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030213/24770621/attachment.sig>

From acapnotic at twistedmatrix.com  Thu Feb 13 11:23:39 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 13 Feb 2003 10:23:39 -0800
Subject: [Twisted-Python] Lore vs. latex2html: Fight to the Finish
In-Reply-To: <20030208205338.GA1101@radii>
References: <20030208185304.9876.qmail@green.zadka.com>
	 <20030208205338.GA1101@radii>
Message-ID: <1045160617.3319.83.camel@troglodyte.funhouse>

On Sat, 2003-02-08 at 12:53, Christopher Armstrong wrote:
> bold stands out much more when you're
> skimming through. I like it when I can find the initial
> description/definition of a term within a particular area of a paper
> by skimming over all of the bold terms.

such terms should probably be marked <dfn>, not <em>.
dfn "indicates that this is the defining instance of the enclosed
term."  And yes, it makes sense to me to make dfn bold in the
stylesheet.

-- 
The moon is waxing gibbous, 85.3% illuminated, 11.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030213/bfdc7f34/attachment.sig>

From abe at fettig.net  Thu Feb 13 11:24:04 2003
From: abe at fettig.net (Abe Fettig)
Date: 13 Feb 2003 13:24:04 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213.042627.122625493.glyph@twistedmatrix.com>
References: <20030211235434.GE31012@cantanker.net>
	 <20030212.075146.122586679.glyph@twistedmatrix.com>
	 <20030213011452.GC20194@frobozz.local>
	 <20030213.042627.122625493.glyph@twistedmatrix.com>
Message-ID: <1045160643.808.61.camel@mingus>

On Thu, 2003-02-13 at 05:26, Glyph Lefkowitz wrote:

> A new Twisted user in any domain except low-level networking should
> require only cursory knowledge of Reactors, Factories, Protocols, and
> Transports.  Assuming we have 3 classes of user:
> 
>     * network protocol developer
>     * RPC developer (using PB)
>     * web developer

I'd be in the "Network protocl developer" category, I guess, although my
on of my reasons for using Twisted is to *not* have to implement
protocols.

Background: I came to Twisted looking to improve my Hep Message Server
project.  Hep is a message server than can send and recieve messages
(e-mails, web pages, RSS feeds, etc) via SMTP, POP3, and HTTP currently,
and NNTP, IMAP, and IM in the future.  I had written my own support for
POP3, SMTP, and HTTP servers using python's asyncore, which worked OK,
but I wanted to switch to a more featureful framework that would save me
the effort of writing and debugging asyncore servers.

> _All_ of these developers should be aware of TAPs and Deferreds, and only the
> network protocol developer needs to have a really thorough understanding of
> Reactors/Factories/Protocols.  The web developer can get away with only a
> rudimentary understanding of Deferreds, too.

90% of what I'm using in Twisted so far is protocols + reactor. TAPs to
me are a nice bonus, something that comes with the framework for free.  
Maybe if I was a web developer, doing less low-level stuff, TAPs would
have seemed more important.  But when I'm writing thousands of lines of
code already, having to write another little script to start my
application and run it as a daemon seems a lot easier than writing a TAP
plugin and having to "compile" a new TAP every time I make a change to
the code.  Once I get to the point where end users are installing my
software, TAPs will probably become more important.  But when I'm just
running the software myself, to debug it, I don't care about the
features TAPs might provide.  Thus in my mind it seemed makes sense to
use the other parts of Twisted before I got into TAPs.

> However, TAPs are one of the few base mechanisms for services to communicate
> with each other within the Twistedverse.  

Could you explain (or point to some info on) how TAPs can provide
"mechanisms for services to communicate with each other"?  I'd be
interested in that.

> > I'll even go so far as speculating that this will cause more external
> > projects to use TAPs, because they won't be seen as some annoying idea in the
> > beginner docs that they had to skip past to get real work done.
> 
> Based on my experience thus far, I doubt this very much.  I'd be interested in
> a simple show of hands that indicates whether this is an accurate perception.

"Had to skip past to get real work done" - yes.  But that doesn't mean
I've abandoned the idea of ever using TAPs.

> While I think of this as an important introductory doc, it's already the 18th
> document in the book.  In fact, it comes after "Using Dirdbm", which I think
> may be shortchanging it a *bit* more than treating it as introductory :-).

Didn't it used to be right at the front?  I remember it as being one of
the first things I read.  Actually, the current HOWTO layout looks like
it's gotten a lot better since I was last there...


I really like Twisted, thanks for all the work you guys have done!

Abe




From corydodt at yahoo.com  Thu Feb 13 12:13:08 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Thu, 13 Feb 2003 11:13:08 -0800 (PST)
Subject: [Twisted-Python] Criticism requested: <q>Extending Lore</q>
Message-ID: <20030213191308.11513.qmail@web10010.mail.yahoo.com>

I just added a new howto titled "Extending the Lore Documentation System"
(extend-lore.html).  It is currently incomplete, but it walks you through
a complete simple example for adding new LaTeX spitters.

Let me know if there are any more topics that deserve coverage (other than
the unfinished headings already there).  Also point out typos, grammatical
errors, broken example code, and tell me if you're having a bad day.

Thanks!

C

__________________________________________________
Do you Yahoo!?
Yahoo! Shopping - Send Flowers for Valentine's Day
http://shopping.yahoo.com



From twisted at moshez.org  Thu Feb 13 13:27:02 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 20:27:02 -0000
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?)
In-Reply-To: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>
References: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>, <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213.051702.89042779.glyph@twistedmatrix.com>
Message-ID: <20030213202702.24381.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Laura Creighton <lac at strakt.com> wrote:

> Some packages are found to have such horrible bugs in them that they
> should never be used by anybody for any purpose whatsoever, regardless
> of who was unfortunate enough to depend on them.  I don't know if this
> is the case for those debian packages, however.

I'm making the debian packages.
All bugs in the packages uploaded to Debian are available on
http://bugs.debian.org/src:twisted
All bugs in the packages the Twisted team makes should be reported here.
Most are promptly dealth with.
The Debian packages are used in production on the twistedmatrix.com
site (if you're reading this via the web archive: you've just successfully
used the Debian package).
I'm not aware of any show stopping bugs in the Debian packages.
Please avoid spreading FUD.

Thanks.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From m at moshez.org  Thu Feb 13 13:30:10 2003
From: m at moshez.org (Moshe Zadka)
Date: 13 Feb 2003 20:30:10 -0000
Subject: [Twisted-Python] Criticism requested: <q>Extending Lore</q>
In-Reply-To: <20030213191308.11513.qmail@web10010.mail.yahoo.com>
References: <20030213191308.11513.qmail@web10010.mail.yahoo.com>
Message-ID: <20030213203010.25157.qmail@green.zadka.com>

On Thu, 13 Feb 2003, Cory Dodt <corydodt at yahoo.com> wrote:

> I just added a new howto titled "Extending the Lore Documentation System"
> (extend-lore.html).  It is currently incomplete, but it walks you through
> a complete simple example for adding new LaTeX spitters.

I haven't yet looked through it, but one remark: please just put this stuff
in the Lore howto if it's not insanely long. I don't want to have a million
of small HOWTOs.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From exarkun at intarweb.us  Thu Feb 13 14:09:39 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 13 Feb 2003 16:09:39 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030211015602.GD12562@radii>
Message-ID: <20030213210939.GA23400@meson.dyndns.org>

  Patch attached.

  Pluses:  It works.

  Minuses: It causes some startup work to be done twice.

  Jp

-- 
 up 5 days, 2:28, 4 users, load average: 0.05, 0.03, 0.05
-------------- next part --------------
Index: internet/app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.76
diff -u -r1.76 app.py
--- internet/app.py	5 Feb 2003 00:53:19 -0000	1.76
+++ internet/app.py	13 Feb 2003 13:08:43 -0000
@@ -241,6 +241,8 @@
     """
 
     running = 0
+    processName = None
+
     def __init__(self, name, uid=None, gid=None, authorizer=None, authorizer_=None):
         """Initialize me.
 
@@ -282,7 +284,7 @@
             self.uid = uid or os.getuid()
             self.gid = gid or os.getgid()
 
-    persistenceVersion = 11
+    persistenceVersion = 12
 
     _authorizer = None
 
@@ -293,6 +295,9 @@
             self._authorizer = DefaultAuthorizer()
             self._authorizer.setApplication(self)
         return self._authorizer
+
+    def upgradeToVersion12(self):
+        self.processName = None
 
     def upgradeToVersion11(self):
         self._extraListeners = {}
Index: scripts/mktap.py
===================================================================
RCS file: /cvs/Twisted/twisted/scripts/mktap.py,v
retrieving revision 1.24
diff -u -r1.24 mktap.py
--- scripts/mktap.py	3 Feb 2003 12:09:07 -0000	1.24
+++ scripts/mktap.py	13 Feb 2003 13:08:43 -0000
@@ -70,7 +70,8 @@
     optParameters = [['uid', 'u', '0'],
                   ['gid', 'g', '0'],
                   ['append', 'a', None,   "An existing .tap file to append the plugin to, rather than creating a new one."],
-                  ['type', 't', 'pickle', "The output format to use; this can be 'pickle', 'xml', or 'source'."]]
+                  ['type', 't', 'pickle', "The output format to use; this can be 'pickle', 'xml', or 'source'."],
+                  ['appname', 'n', None, "The process name to use for this application."]]
 
     optFlags = [['xml', 'x',       "DEPRECATED: same as --type=xml"],
                 ['source', 's',    "DEPRECATED: same as --type=source"],
@@ -155,6 +156,9 @@
         print "Usage Error: %s" % ue
         options.subOptions.opt_help()
         sys.exit(1)
+
+    if options['appname']:
+        app.processName = options['appname']
 
     # backwards compatible interface
     if hasattr(mod, "getPorts"):
Index: scripts/twistd.py
===================================================================
RCS file: /cvs/Twisted/twisted/scripts/twistd.py,v
retrieving revision 1.36
diff -u -r1.36 twistd.py
--- scripts/twistd.py	19 Jan 2003 10:03:33 -0000	1.36
+++ scripts/twistd.py	13 Feb 2003 13:08:43 -0000
@@ -50,6 +50,7 @@
                 ['debug', 'b',    "run the application in the Python Debugger (implies nodaemon), sending SIGINT will drop into debugger"],
                 ['quiet','q',     "be a little more quiet"],
                 ['no_save','o',   "do not save state on shutdown"],
+                ['originalname', None, "Don't try to change the process name"],
                 ['syslog', None,   "Log to syslog, not to file"],
                 ['euid', '',     "Set only effective user-id rather than real user-id. "
                                   "(This option has no effect unless the server is running as root, "
@@ -318,6 +319,13 @@
         log.msg(s)
         log.deferr()
         sys.exit('\n' + s + '\n')
+    
+    if not config['originalname']:
+        if application.processName and application.processName != sys.argv[0]:
+            exe = os.path.realpath(sys.executable)
+            args = (application.processName, sys.argv[0], '--originalname') + tuple(sys.argv[1:])
+            log.msg('Changing process name to ' + application.processName)
+            os.execl(exe, *args)
 
     # If we're asked to chroot and os.chroot does not exist,
     # just fail.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030213/df869e2e/attachment.sig>

From lac at strakt.com  Thu Feb 13 14:23:29 2003
From: lac at strakt.com (Laura Creighton)
Date: Thu, 13 Feb 2003 22:23:29 +0100
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?) 
In-Reply-To: Message from Moshe Zadka <twisted@moshez.org> 
   of "13 Feb 2003 20:27:02 GMT." <20030213202702.24381.qmail@green.zadka.com> 
References: <200302131418.h1DEIHjL026312@ratthing-b246.strakt.com>, <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213.051702.89042779.glyph@twistedmatrix.com> <20030213202702.24381.qmail@green.zadka.com> 
Message-ID: <200302132123.h1DLNTjL028283@ratthing-b246.strakt.com>

In a message of 13 Feb 2003 20:27:02 GMT, Moshe Zadka writes:
>On Thu, 13 Feb 2003, Laura Creighton <lac at strakt.com> wrote:
>
>> Some packages are found to have such horrible bugs in them that they
>> should never be used by anybody for any purpose whatsoever, regardless
>> of who was unfortunate enough to depend on them.  I don't know if this
>> is the case for those debian packages, however.
>
>I'm making the debian packages.
>All bugs in the packages uploaded to Debian are available on
>http://bugs.debian.org/src:twisted
>All bugs in the packages the Twisted team makes should be reported here.
>Most are promptly dealth with.
>The Debian packages are used in production on the twistedmatrix.com
>site (if you're reading this via the web archive: you've just successfull
>y
>used the Debian package).
>I'm not aware of any show stopping bugs in the Debian packages.
>Please avoid spreading FUD.
>
>Thanks.
>
>-- 
>Moshe Zadka -- http://moshez.org/
>Buffy: I don't like you hanging out with someone that... short.
>Riley: Yeah, a lot of young people nowadays are experimenting with shortn
>ess.

Sorry about that, I thought it was a general question about packages
in general, not Twisted debian ones in particular.

Laura



From az at CANTANKER.NET  Thu Feb 13 15:17:50 2003
From: az at CANTANKER.NET (Adrian van den Dries)
Date: Fri, 14 Feb 2003 09:17:50 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030213124550.GB21068@frobozz.local>
References: <20030211235434.GE31012@cantanker.net> <20030212.075146.122586679.glyph@twistedmatrix.com> <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <20030213124550.GB21068@frobozz.local>
Message-ID: <20030213221750.GF31012@cantanker.net>

quoth Andrew Bennetts:

> So, I'm asking for a more pragmatic motivation, rather than the existing
> (but still valuable) philosophical one

Consider this: what do you absolutely *need* to run a successful
twisted application?  Anything else is "advanced".

a.

-- 
Cantanker /
---------/-------------
        / cantanker.net



From grimmtooth at softhome.net  Thu Feb 13 15:28:04 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Thu, 13 Feb 2003 17:28:04 -0500
Subject: [Twisted-Python] From factory to protocol
In-Reply-To: <65ro5l3n.fsf@python.net>
Message-ID: <000701c2d3af$2cf69410$6501a8c0@listy>

> Is it somehow possible to get to the protocol from the factory?

In addition to what Kevin mentioned, if you don't want to override the
native methods in your factory, keep in mind that the protocol DOES have
a reference back to the factory that created it.

What I did in this instance was add two methods to the factory: one that
the protocol called when it was created, and one when it was done. The
first added the protocol to a list (actually, for me, a dict)of
protocols that the factory could use, and the second one was to remove
the protocol from the list. 

I elected to do it this way because each of my protocols is assigned a
unique name and may have a user attached on the other end (telnet). I
then control these protocols in various ways through the factory.

Well... On paper anyway. I haven't gotten much past the code to kill off
all the protocols gracefully then exit.





From grimmtooth at softhome.net  Thu Feb 13 15:37:57 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Thu, 13 Feb 2003 17:37:57 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <20030213210939.GA23400@meson.dyndns.org>
Message-ID: <000e01c2d3b0$8eea74b0$6501a8c0@listy>

I may get an answer from the docs eventually, but I've encountered a bit
of difficulty with pb.

I have two apps (and thus two event loops) that operate independently
but can talk to each other through PB. I *am* using different port
numbers for the two, just to be safe.

This initially works great, but I have encountered what seems to be a
namespace issue.  I'm using the example code given for PB in the how-to,
which employs functions at the top level of the script. I am using this
chunk of code as a library -- i.e. each app imports this bit of code and
uses it to communicate with the other.

Occasionally, one of the apps using PB in this way is forcing the other
app to shut down.  I've traced this to the reactor.stop() line in each
of the pb callbacks on the client side.

I've considered a few approaches, but if anyone has any sage advice it
would be greatly appreciated :-)

1) Limit scope of imports as much as possible to reduce conflicts a bit.

2) find a way to gracefully inject my PB client calls into the existing
event loop without having to call reactore.run() / reactor.stop() in my
library module. (favored at the moment)

3) keep reading PB docs and maybe find a wrinkle I wasn't aware of yet.

Thanks in advance...





From ldanielburr at earthlink.net  Thu Feb 13 12:38:54 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Thu, 13 Feb 2003 14:38:54 -0500 (GMT)
Subject: [Twisted-Python] RE: In Defense of Taps
Message-ID: <4442800.1045175939338.JavaMail.nobody@gonzo.psp.pas.earthlink.net>

Just to throw another newbie perspective into the Twisted mix:

I like the idea of taps.  As Glyph has mentioned numerous times,
the existing tap concept is not as good as it could/should be.
Even so, I find taps useful for one simple reason: I can sell
Twisted to my boss because of taps and plugins.  If I tell him
that I want to use this great networking framework, but I am
going to roll my own custom code to actually start/stop/execute
the application I am building, he's going to shoot me down.

On the other hand, if I tell him I am going to build my nifty
application, using a nifty framework, and the end result will be
something that can setup on our dev, test, QA, and staging
environments just by deploying the code and typing
"mktap -foo -bar -baz", "twistd --file=mytap.tap", then I am
much further along in my quest to gain approval.

Taps and plugins are a Good Thing, for reasons other than just
technical.  I can certainly see why many developers would say
that taps are something they don't care about, because they just
want to create a reactor, hook up a factory and protocol, and go.
In my case, I want to create a plugin, and have somebody *else*
be able to hook it up and go.

Bottom line for me is that taps and plugins make Twisted a more
finished architecture.  Java servlets would not be so widespread
if all developers wrote their own code to start the container,
configure the context, etc.  Quite the opposite actually: They
drop their code in a webapp directory, edit their web.xml and
go.  Taps and plugins sort of do that for Twisted, which is all
to the good.

L. Daniel Burr



From acapnotic at twistedmatrix.com  Thu Feb 13 16:15:13 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 13 Feb 2003 15:15:13 -0800
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
References: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
Message-ID: <1045178112.3320.117.camel@troglodyte.funhouse>

On Thu, 2003-02-13 at 14:37, Jeff Grimmett wrote:
[...stuff about using example code as a library and reactor.stop called
at the wrong time?...]

> [...] if anyone has any sage advice it would be greatly appreciated :-)

It's not at all clear to me what you're doing.  Can you post some code?

-- 
The moon is waxing gibbous, 86.7% illuminated, 11.3 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030213/481e46a5/attachment.sig>

From lstep at adequat.net  Thu Feb 13 17:11:20 2003
From: lstep at adequat.net (Luc Stepniewski)
Date: Fri, 14 Feb 2003 01:11:20 +0100
Subject: [Twisted-Python] Patch to allow page.Page to work correctly (well from my point of view :-)
Message-ID: <200302140111.20720.lstep@adequat.net>

Hey it's my first patch on twisted !!! I have to celebrate this day!

When you instanciate a page.Page instance, if you specify a templateFile as 
parameter, twisted will try to find it in the twisted modules directory, 
which is not so cool. There's a templateDirectory parameter somewhere in 
woven, but it is not passed to the view. So here is the patch:

--- page.py.old     Sun Jan  5 06:16:04 2003
+++ page.py        Fri Feb 14 01:05:15 2003
@@ -10,7 +10,7 @@
     __implements__ = (model.Model.__implements__, view.View.__implements__,
                       controller.Controller.__implements__)
     def __init__(self, m=None, templateFile=None, inputhandlers=None,
-                controllers=None,
+                controllers=None, templateDirectory=None,
                  *args, **kwargs):
         model.Model.__init__(self, *args, **kwargs)
         if m is None:
@@ -22,7 +22,7 @@
                                        controllers=controllers)
         self.view = self
         view.View.__init__(self, self.model, controller=self,
-                           templateFile=templateFile)
+                           templateFile=templateFile, 
templateDirectory=templateDirectory)
         self.controller = self
         self.controllerRendered = 0




From grimmtooth at softhome.net  Thu Feb 13 17:20:30 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Thu, 13 Feb 2003 19:20:30 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <1045178112.3320.117.camel@troglodyte.funhouse>
Message-ID: <001b01c2d3be$e2806ef0$6501a8c0@listy>

> It's not at all clear to me what you're doing.  Can you post 
> some code?

I'll try to explain in more detail since the source is a mess right now
with all the commented code etc. With snippets.

App 1: it's a debugging window that I can run or not as needed. When it
is up it receives messages from the other app and feeds them to my
wxApp.

 import sys

 from myLib import *
 from twisted.internet import app
 from twisted.internet import wxsupport
 from twisted.spread import pb

# wx app stuff trimmed for brevity.

# The handler for incoming remote calls.
# I pass it a reference to my wxApp's top frame.
class DBHandler(pb.Root):
  def __init__	(self, win):
    self.Commands = {'Msg'  : self.doMsg,
                     'Ping' : self.doPing
                    }

    self.win = win

    # This is the function registered with Debug.Debug() (below)
    def remote_DoCommand(self, msg):
      if msg['Command'] in self.Commands:
        return(apply(self.Commands[msg['Command']], [msg]))
      else:
        return(-1)

    # Log a message
    def doMsg(self, msg):
      self.win.LogIt(msg['Msg'])
      return(0)

    # Return a ping. 
    def doPing(self, msg):
      return(1)

# Here's where I set up the app and run it
def RunServer(args):
  # Set up the wxApp
  myWXApp = MyApp(0)

  # Replace the wx event loop with the twisted
  # event loop and adds wx event handling.
  wxsupport.install(myWXApp)

  # Our PB factory
  ctl = pb.BrokerFactory(DBHandler(myWXApp.frame))
  # And set up the app
  myApp = app.Application("Debug")

  myApp.listenTCP(Debug.DBPort, ctl)
  myApp.run(save=0)

  sys.exit(0)

if __name__ == "__main__":
  RunServer(sys.argv)

## Following is the library code that is used by the other app
## to send debugging info to the debugger.

 From twisted.internet import reactor
 from twisted.spread import pb

 import time
 
DBPort = 7747

Me = Entities['Debugger'] # def for Entities not included for brevity

# This is a very lame bucket to hold data in a dynamic way
# so that the data can be passed back and forth between functions.
# Needs to be replaced with something a bit slicker.
 
class Bucket:
 def __init__(self, msg):
   self.SetMsg(msg)
   self.SetRC(-1)
  def SetMsg(self, msg):
   self.msg = msg
  def GetMsg(self):
    return(self.msg)
  def SetRC(self, rc):
    self.rc = rc
  def GetRC(self):
    return(self.rc)

bucky = Bucket('')

# Following three functions are PB functions. Based on twisted example
# code.

def gotObject(object):
  object.callRemote ( "DoCommand", {'Command': 'Msg',
'Msg':bucky.GetMsg()}).addCallback(gotCommand)
	  
def gotCommand(rc):
  bucky.SetRC(rc)
  reactor.stop()
	  
# This fires if we don't manage to connect.
def gotNoObject(reason):
  bucky.SetRC(-1)
  reactor.stop()

# Sets up the debugging session and returns response
def Debug(ID, msg):
  if ID == 0:
    return(-1)

  txt = '%s :: [%s] %s' %	( time.strftime('%Y.%m.%d %H:%M:%S'), 
                             ID, msg
                           ) 

  bucky.SetMsg(txt)
  pb.getObjectAt("localhost", DBPort, 30).addCallbacks(gotObject,
gotNoObject)
  reactor.run()
  return(bucky.GetRC())


The other app is very similar to the above, with a similar library that
passes slightly different data around.  The key difference is that the
other app has calls to Debug.Debug() within the handler itself.  Here is
the handler:

class CtlHandler(pb.Root):
  def __init__ (self):
    self.Commands = { 'Shutdown' : self.doShutdown
                    }

  def remote_DoCommand(self, msg):
    print msg

    # THIS IS WHERE IT DIES
    Debug.Debug (Me, "Received Control message [%s] from [%s]" % (
msg['Command'],  msg['From'] ) )
    # If I remove the above, all works well. If I don't, this app
    # closes.


    if	msg['Command'] in self.Commands:
      return(apply(self.Commands[msg['Command']], [msg]))
    else:
      Debug.Debug(Me, "**** Unknown Control message [%s]!" %
msg['Command'])
      return({'Status':'Unknown Command', 'RC':-1})

  def doShutdown(self, msg):
    Debug.Debug(Me, "***** CONTROL SHUTTING DOWN IN 3 SECONDS")
    reactor.callLater(20, self.endShutdown)
    return({'Status':'OK', 'RC':0})

  def endShutdown(self):
    sys.exit(0)


The factory, setup, and library code is nothing unusual but I can post
it if you need to see it.




From carball at hush.com  Thu Feb 13 20:31:44 2003
From: carball at hush.com (carball at hush.com)
Date: Thu, 13 Feb 2003 19:31:44 -0800
Subject: [Twisted-Python] Re: In Defense of Taps
Message-ID: <200302140331.h1E3VjEl054089@mailserver2.hushmail.com>

>glyph wrote:
>Based on my experience thus far, I doubt this very much.  I'd be 
>interested in
>a simple show of hands that indicates whether this is an accurate 
>perception.

i'll preface this reply by stating that i am not a pro-programmer. .
but i've learned alot from reading twisted and following the t.tao. .

i think taps very useful, and that the docs cover their use well. .

mktap and twistd provide nice frontends to working with plugins. .
and i use them when developing servers. .

i usually tell coworkers ( sysadmins ) who are interested in twisted
but havent programmed in python ( or havent programmed at all ), to experiment with mktap and twistd. . and they think it's cool;
and by cool, i mean totally sweet :D

thank you twisted developers!
carball




Concerned about your privacy? Follow this link to get
FREE encrypted email: https://www.hushmail.com/?l=2 

Big $$$ to be made with the HushMail Affiliate Program: 
https://www.hushmail.com/about.php?subloc=affiliate&l=427



From radix at twistedmatrix.com  Thu Feb 13 21:00:41 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 13 Feb 2003 23:00:41 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030213210939.GA23400@meson.dyndns.org>
References: <20030211015602.GD12562@radii> <20030213210939.GA23400@meson.dyndns.org>
Message-ID: <20030214040041.GI2557@radii>

On Thu, Feb 13, 2003 at 04:09:39PM -0500, Jp Calderone wrote:
>   Patch attached.

[snip]

> +    processName = None
> +

[snip]

> -    persistenceVersion = 11
> +    persistenceVersion = 12

[snip]

> +
> +    def upgradeToVersion12(self):
> +        self.processName = None


IIUC, this is unneeded if you're adding a class attribute.



-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From Alexandre.Fayolle at logilab.fr  Thu Feb 13 05:36:42 2003
From: Alexandre.Fayolle at logilab.fr (Alexandre)
Date: Thu, 13 Feb 2003 13:36:42 +0100
Subject: OT: debian packaging weirdness (was Re: [Twisted-Python] Woven howto doc bug?)
In-Reply-To: <20030213112455.19926.qmail@green.zadka.com>
References: <20030212175359.GQ9228@wompom> <20030212184057.29316.qmail@green.zadka.com> <20030213094800.27908.qmail@green.zadka.com> <20030213112455.19926.qmail@green.zadka.com>
Message-ID: <20030213123642.GD3078@calvin.fayauffre.org>

On Thu, Feb 13, 2003 at 11:24:55AM -0000, Moshe Zadka wrote:
> c) More work (and thus, more potential bugs) to do it with absolute
>    dependencies.

I'm not so sure there's more work with absolute dependencies. 
Here's what I have in the python-xml control file:

Package: python-xml
Architecture: all
Depends: python (>= 2.2), python (<< 2.3), python2.2-xml (>=${Source-Version})

The Source-Version variable will ensure the proper upgrade path
painlessly. 

-- 
Alexandre Fayolle
LOGILAB, Paris (France).
http://www.logilab.com   http://www.logilab.fr  http://www.logilab.org
Développement logiciel avancé - Intelligence Artificielle - Formations



From trace at reinventnow.com  Thu Feb 13 12:45:03 2003
From: trace at reinventnow.com (Tracy S. Ruggles)
Date: Thu, 13 Feb 2003 13:45:03 -0600
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030212154325.17273.qmail@green.zadka.com>
Message-ID: <A515962C-3F8B-11D7-B2DD-000393CE1304@reinventnow.com>

On Wednesday, February 12, 2003, at 09:43 AM, Moshe Zadka wrote:

> I encourage the "newbies" on the list to speak up: what are *you* 
> planning
> to do with Twisted, and which documents would help you with that.

Well, I'm not a newbie to Python, but am to Twisted.  I have been a 
long-time user of Webware & Cheetah to serve a web-based dialogue 
marketing system (right now, they're basically souped-up, rule-based 
quizzes and surveys, see http://www.axiomfire.com).

Webware has been great to use so far but I was curious about Twisted.  
Almost all of the framework I built to build and render these dialogues 
has no tie-ins to Webware specifically.

Eventually we plan to build a much more dynamic dialogue engine that 
has the possibility of carrying on dialogues in different ways and I 
don't want to be tied to just http.  Also, enabling a real-time window 
into the dialogue activity so as to make adjustments to rule and 
contents in response to traffic changes and campaign response rates.

So, as far as Twisted documentation goes, I need to find a very simple 
way to serve up these dialogues with an already built system of 
"business objects".

My guess is (and I haven't had a whole lot of time to play around with 
twisted yet): a simple way would be to write small .rpy scripts/pages 
that just wrap the same functionality I wrapped with the Webware 
servlets.  Though, I already have a middle layer between the dialogue 
engine and the database (a variation of SQLORB.py) and I'm worried 
about synchronous/asynchronous problems.   I assume that some of that 
code would have to be altered to fit into the Twisted way.

I should get some time next week to dive into some real examples and 
will let you know how it goes...

--Tracy


--
Tracy S. Ruggles
Chief Technology Officer, Axiomfire
tracer at axiomfire.com -- 512/461.6199




From jml at mumak.net  Fri Feb 14 02:42:11 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Fri, 14 Feb 2003 20:42:11 +1100
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>
References: <20030213011452.GC20194@frobozz.local> <9D1868C4-3EF1-11D7-8E0F-000A95686CD8@redivi.com>
Message-ID: <20030214094211.GC29955@mumak.net>

On Wed, Feb 12, 2003 at 08:22:27PM -0500, Bob Ippolito wrote:
> 
> I think I agree with you.  As I see it, TAPs are not particularly 
> useful for developers *until* they're ready to distribute their 
> applications.  Maybe they should be relegated to a section of the HOWTO 
> on "How to distribute your Twisted application" or "How to run your 
> Twisted application as a daemon"?
> 

I can't say I've thought about the TAP thing a great deal, but I'd agree that a
howto on "Distributing your twisted app" would be a good thing. 

However, the problem is probably deeper than this, as such a howto would have
to deal with almost all of the categories mentioned in this thread (Woven vs
low-level network, windows vs unix, etc). Hmm :\

jml



From theller at python.net  Fri Feb 14 02:26:18 2003
From: theller at python.net (Thomas Heller)
Date: 14 Feb 2003 10:26:18 +0100
Subject: [Twisted-Python] Testing a reactor
Message-ID: <smurusat.fsf@python.net>

I'm currently writing (try to, at least) a better reactor
for Windows. Is there a test-suite for reactors somewhere?

Thanks,

Thomas




From andrew-twisted at puzzling.org  Fri Feb 14 05:21:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 14 Feb 2003 23:21:41 +1100
Subject: [Twisted-Python] Testing a reactor
In-Reply-To: <smurusat.fsf@python.net>
References: <smurusat.fsf@python.net>
Message-ID: <20030214122141.GA22815@frobozz.local>

On Fri, Feb 14, 2003 at 10:26:18AM +0100, Thomas Heller wrote:
> I'm currently writing (try to, at least) a better reactor
> for Windows. Is there a test-suite for reactors somewhere?

bin/trial -p twisted/test       :)

Specifically, twisted.test.test_internet, but really, you should run all the
tests, as things like FTP have a tendency to break easily if the reactor
isn't quite right.

-Andrew.




From glyph at twistedmatrix.com  Fri Feb 14 05:42:41 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 14 Feb 2003 06:42:41 -0600 (CST)
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <1045160643.808.61.camel@mingus>
References: <20030213011452.GC20194@frobozz.local>
	<20030213.042627.122625493.glyph@twistedmatrix.com>
	<1045160643.808.61.camel@mingus>
Message-ID: <20030214.064241.96226700.glyph@twistedmatrix.com>


On 13 Feb 2003 13:24:04 -0500, Abe Fettig <abe at fettig.net> wrote:

> I'd be in the "Network protocl developer" category, I guess, although my
> on of my reasons for using Twisted is to *not* have to implement
> protocols.

Thanks for that bit of information: after thinking about those categories some
more, I've realized that an upcoming rewrite of the website needs to address 4
audiences:

    * Low-level network programmers: systems people who want to write their own
      protocols.

    * High-level network programmers: people who want to use existing
      implementations of a variety of protocols.  These folks are the target
      audience for PB, when other protocols fall short.

    * "Web Application" programmers: these people want to use fully-finished
      protocol support, largely HTTP, though some SMTP and similar.  Sysadmins
      also fall into this category, to some extent.

    * Crazy hackers or game developers who are interested in bleeding-edge
      things like Twisted Reality, Issues, and Secret Project X.  (As these
      things mature it will probably split into more categories.)

Obviously there's some overlap, but if you don't feel like you fit into any of
those categories I'd like to know.

> having to write another little script to start my application and run it as a
> daemon seems a lot easier than writing a TAP plugin and having to "compile" a
> new TAP every time I make a change to the code.

Yes.  It'd be nice to have more integration between mktap and twistd so that
you don't actually need to output the file in development.  We've been lazy
about that because it'd be tough to separate the config options.  

How about extending usage.Options to recognize the '--' option the same way
xinit does, and consider the mktap script the "pass-through" for twistd, e.g.:

    twistd -l nohttp.log -n -f -- web -l http.log --https 443 --path ~/my-path

Hmm.  That actually looks ugly to me, but something like that.

> Once I get to the point where end users are installing my software, TAPs will
> probably become more important.

Well, it's up for download ;-), and you have had to address certain
configuration issues (hence the .ini file).  I think you're reaching that point
about now.

> But when I'm just running the software myself, to debug it, I don't care
> about the features TAPs might provide.  Thus in my mind it seemed makes sense
> to use the other parts of Twisted before I got into TAPs.

It sounds like we're in agreement, given your previous statement.  I will also
do certain kinds of development without creating a tap plugin first, when i'm
just working with a few objects and trying to figure out how they fit together.

However, "what is appropriate for the master is not appropriate for the
apprentice" -- we're mostly talking about whether it's an applicable
introduction, not about whether it's the only way to start a Twisted app.

> Could you explain (or point to some info on) how TAPs can provide "mechanisms
> for services to communicate with each other"?  I'd be interested in that.

Well, the Application object is the source of communication most of the time.
You have to know a fair amount about Twisted objects' internal structure to
take advantage of that.  However, if you've got a lot of structured objects
floating around, the ability to do 'mktap manhole --append myapp-shutdown.tap'
is very helpful.

In some ways this is a more theoretical advantage than a practical one.  It's a
way for multiple parties to write tools to manipulate .tap files, and a
standard way for a user to invoke them.  Not many of these tools have been
written so far.

> > While I think of this as an important introductory doc, it's already the
> > 18th document in the book.  In fact, it comes after "Using Dirdbm", which I
> > think may be shortchanging it a *bit* more than treating it as introductory
> > :-).

> Didn't it used to be right at the front?  I remember it as being one of the
> first things I read.  Actually, the current HOWTO layout looks like it's
> gotten a lot better since I was last there...

It used to have a little emphasized "<--- Start Here!" next to it, which has
since been removed.  I still think it's a good starting point most of the time,
even if you often forego taps. More important, though, is the consensus that we
need to build multiple indexes for different interest groups.

> I really like Twisted, thanks for all the work you guys have done!

You're welcome!  It's always nice to see someone appreciating it.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030214/a5328dc5/attachment.sig>

From radix at twistedmatrix.com  Fri Feb 14 05:55:41 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Feb 2003 07:55:41 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214.064241.96226700.glyph@twistedmatrix.com>
Message-ID: <20030214125541.GJ2557@radii>

On Fri, Feb 14, 2003 at 06:42:41AM -0600, Glyph Lefkowitz wrote:

> How about extending usage.Options to recognize the '--' option the
> same way xinit does, and consider the mktap script the
> "pass-through" for twistd, e.g.:
> 
>   twistd -l nohttp.log -n -f -- web -l http.log --https 443 --path ~/my-path
> 
> Hmm.  That actually looks ugly to me, but something like that.

No need! We have sub-commands in usage.Options. We can do it exactly
like mktap does it. Well, there are two possibilities:

  twistd <twistd-args> <tap-type-subcommand> ...

or

  twistd <twistd-args> tap <tap-type-subcommand> ...

Either of these would be pretty simple to implement, IIUC.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Fri Feb 14 06:35:35 2003
From: m at moshez.org (Moshe Zadka)
Date: 14 Feb 2003 13:35:35 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030214.064241.96226700.glyph@twistedmatrix.com>, <20030213011452.GC20194@frobozz.local>
	<20030213.042627.122625493.glyph@twistedmatrix.com>
	<1045160643.808.61.camel@mingus>
Message-ID: <20030214133535.19502.qmail@green.zadka.com>

On Fri, 14 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Thanks for that bit of information: after thinking about those categories some
> more, I've realized that an upcoming rewrite of the website needs to address 4
> audiences:

We can start by having a restructuring of the indices to fit them :)
(Maybe they won't know we have it, but it'll at least be a place to
point them at)
 
> Yes.  It'd be nice to have more integration between mktap and twistd so that
> you don't actually need to output the file in development.  We've been lazy
> about that because it'd be tough to separate the config options.  
> 
> How about extending usage.Options to recognize the '--' option the same way
> xinit does, and consider the mktap script the "pass-through" for twistd, e.g.:
> 
>     twistd -l nohttp.log -n -f -- web -l http.log --https 443 --path ~/my-path

Well, -- is already implemented and will pass the arguments to 
.processOptions(). Currently, it errors out if there are any arguments,
but it's easy to do "from scripts.mktap import ...".

> Hmm.  That actually looks ugly to me, but something like that.

Yes, this is the overriding problem. Is it really a problem in development?
When I develop, I just do "!mktap\n!twistd" in bash...

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From theller at python.net  Fri Feb 14 08:10:24 2003
From: theller at python.net (Thomas Heller)
Date: 14 Feb 2003 16:10:24 +0100
Subject: [Twisted-Python] win32guireactor
Message-ID: <vfzmlwyn.fsf@python.net>

Here's my win32guireactor code, which at least for me, works better
than win32eventreactor in my application.

I have some problems in my app when using win32eventreactor:

If the app displays a message box, no callLater calls are done
(because a win32 messagebox has it's own event loop, and doIteration()
is not called during this time.  There are also other things that the
user can do which shows the same behaviour, dragging a scrollbar for
example.

The second problem is that win32eventreactor uses a lot a cpu time -
nearly 100% even on my brandnew 2GHz P4.  Looks much like polling behaviour
instead of event driven.

So I wrote my own reactor implementation, which passes all events
(those I've covered so far, reactor.callLater and network events)
through a win32 message loop.  Deferred's are not yet passed through
the loop, so there is still some polling to be done.

Looking at the comments at the top of the win32eventreactor code,
my win32guireactor module shouldn't have the problems mentioned there.

I post this module here asking for peer review and critical comments.

This module requires win32all and my ctypes module as well,
see the source for details.

Thanks,

Thomas

PS: I tried to run unittests with this and other reactors with
the command line 
  py22 bin\trial -p twisted.test.test_internet -r <reactor> -v
here are the results:

default reactor
  FAILED (failures=5, errors=18)

win32eventreactor
  twisted.test.test_ftp:FTPClientAndServerTests.testLongFileListings
  hangs forver.

win32guireactor
  twisted.test.test_ftp:FTPClientAndServerTests.testLongFileListings
  crashes with this traceback, and then also hangs forever.
twisted.test.test_ftp
  FTPClientAndServerTests
    testBadLogin ...
    testLongFileListings ... Traceback (most recent call last):
  File "C:\sf\Twisted\twisted\internet\win32guireactor.py", line 85, in __wm_timerevent
    tple.func(*tple.args, **tple.kw)
  File "C:\sf\Twisted\twisted\test\test_ftp.py", line 124, in errback
    except self.failureException, e:
AttributeError: FTPClientAndServerTests instance has no attribute 'failureException'

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: win32guireactor.py
URL: </pipermail/twisted-python/attachments/20030214/0b1567c2/attachment.ksh>

From corydodt at yahoo.com  Fri Feb 14 09:31:32 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 14 Feb 2003 08:31:32 -0800 (PST)
Subject: [Twisted-Python] buildbot?
Message-ID: <20030214163132.41233.qmail@web10008.mail.yahoo.com>

The buildbot at http://twistedmatrix.com/~warner.twistd/ was pointed out
to me.  I noticed that my new document, extend-lore.html is causing hlint
errors in buildbot.  hlint runs clean on my local machine, and I think it
fails because it can't find the doc/howto/listings/lore directory, which
is new.  

Does buildbot use cvs up -d to check out the code?  If not, it should,
because that would fix the problem I'm seeing above.

Thanks!

C

__________________________________________________
Do you Yahoo!?
Yahoo! Shopping - Send Flowers for Valentine's Day
http://shopping.yahoo.com



From abe at fettig.net  Fri Feb 14 09:56:51 2003
From: abe at fettig.net (Abe Fettig)
Date: 14 Feb 2003 11:56:51 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030213011452.GC20194@frobozz.local>
	 <20030213.042627.122625493.glyph@twistedmatrix.com>
	 <1045160643.808.61.camel@mingus>
	 <20030214.064241.96226700.glyph@twistedmatrix.com>
Message-ID: <1045241811.1258.6.camel@mingus>

On Fri, 2003-02-14 at 07:42, Glyph Lefkowitz wrote:
> On 13 Feb 2003 13:24:04 -0500, Abe Fettig <abe at fettig.net> wrote:
> 
> > I'd be in the "Network protocl developer" category, I guess, although my
> > on of my reasons for using Twisted is to *not* have to implement
> > protocols.
> 
> Thanks for that bit of information: after thinking about those categories some
> more, I've realized that an upcoming rewrite of the website needs to address 4
> audiences:
> 
>     * Low-level network programmers: systems people who want to write their own
>       protocols.
> 
>     * High-level network programmers: people who want to use existing
>       implementations of a variety of protocols.  These folks are the target
>       audience for PB, when other protocols fall short.
> 
>     * "Web Application" programmers: these people want to use fully-finished
>       protocol support, largely HTTP, though some SMTP and similar.  Sysadmins
>       also fall into this category, to some extent.
> 
>     * Crazy hackers or game developers who are interested in bleeding-edge
>       things like Twisted Reality, Issues, and Secret Project X.  (As these
>       things mature it will probably split into more categories.)

> 
> Obviously there's some overlap, but if you don't feel like you fit into any of
> those categories I'd like to know.

I'd be in the High-level network programmer category, although I'm
prepared to put on my (recently aquired) Low-level network programmer
hat in order to get support for IMAP into Twisted, improve the POP3
protocol, etc... :-)

> > Once I get to the point where end users are installing my software, TAPs will
> > probably become more important.
> 
> Well, it's up for download ;-), and you have had to address certain
> configuration issues (hence the .ini file).  I think you're reaching that point
> about now.

Point taken.  I'll start looking at TAPs.

Abe




From acapnotic at twistedmatrix.com  Fri Feb 14 13:15:59 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 14 Feb 2003 12:15:59 -0800
Subject: [Twisted-Python] Documentation Guides (was: In Defense of Taps)
In-Reply-To: <20030214.064241.96226700.glyph@twistedmatrix.com>
References: <20030213011452.GC20194@frobozz.local>
	 <20030213.042627.122625493.glyph@twistedmatrix.com>
	 <1045160643.808.61.camel@mingus>
	 <20030214.064241.96226700.glyph@twistedmatrix.com>
Message-ID: <1045253249.12896.52.camel@troglodyte.funhouse>

On Fri, 2003-02-14 at 04:42, Glyph Lefkowitz wrote:
> Thanks for that bit of information: after thinking about those categories some
> more, I've realized that an upcoming rewrite of the website needs to address 4
> audiences[...]

I was at what one might consider a brainstorming session for presenting
on-line documentation[1] the other day, and people came up with this
idea:  When you're about to embark on a trip through foreign territory
(i.e. Framework X documentation), you may want to hire a guide who knows
the area to lead you through it.

...I think I need to stop and provide a bit of context here.  The topic
was documentation with in-line comment systems, like you see in the Zope
Book now.  Someone postulated that they might like it better if instead
of being constantly bombarded by comments from all sorts of people, they
could filter it down to just one guy who commented frequently, to get a
single consistent voice.  The concept was also likened to the
"commentary track" that comes with the DVD version.  Okay, now back to
wild analogies...

Which guide you select depends on your experience level and what you
want to see.  In any case, you and your guide cover pretty much the same
ground as everyone else, but where you go into detail and from what
direction things approached will vary from guide to guide.  

or, in Twisted speak, 
self.howto = components.getAdapter(howto, IHighLevelNetworkDeveloper)
although at the aforementioned discussion, people were talking more
about another dimension, the one ranging from Newcomer ("put *lots* of
comments in those examples, please") to Old Hand ("just tell me what
module to look at").

I'm not convinced these ideas have any practical value.  It seems
incredibly expensive to me to develop useful commentary tracks[2] for
every class of reader, effort that could be directed to fortifying the
core documents.  But it's what I thought of when reading this "we need
to make documentation approachable for X, Y, and Z, and does this go
before or after dirdbm."



1: http://groups.yahoo.com/group/porpig/message/274

2: unless, the theory goes, you have such an active community that these
things just write themselves, and then some collaborative filtering
system picks out what's good for you.  Hah!

-- 
The moon is waxing gibbous, 92.1% illuminated, 12.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030214/649fc366/attachment.sig>

From exarkun at intarweb.us  Fri Feb 14 13:29:45 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 14 Feb 2003 15:29:45 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214133535.19502.qmail@green.zadka.com>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com>
Message-ID: <20030214202945.GA26834@meson.dyndns.org>

On Fri, Feb 14, 2003 at 01:35:35PM -0000, Moshe Zadka wrote:
> On Fri, 14 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> [snip]
> 
> > Hmm.  That actually looks ugly to me, but something like that.
> 
> Yes, this is the overriding problem. Is it really a problem in development?
> When I develop, I just do "!mktap\n!twistd" in bash...

  I'll go you one better, "!mktap && !twistd" the first time, and "!mktap"
every subsequent time.  Either way, this has always seemed sufficient to me.

The biggest problem I have is the amount of time it takes to backtrack from
the end of a long command to somewhere in the middle to change an option,
and this strikes me as a bash problem, not a Twisted one (one that
lengthening the "twistd" invocation command would only exacerbate.

  Jp

-- 
 up 6 days, 0:29, 5 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030214/f058e003/attachment.sig>

From waterbug at beeblebrox.gsfc.nasa.gov  Fri Feb 14 13:40:21 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Fri, 14 Feb 2003 15:40:21 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com> <20030214202945.GA26834@meson.dyndns.org>
Message-ID: <3E4D5435.C6C88FC7@beeblebrox.gsfc.nasa.gov>

Jp Calderone wrote:

> The biggest problem I have is the amount of time it takes to backtrack from
> the end of a long command to somewhere in the middle to change an option,
> and this strikes me as a bash problem, not a Twisted one ...

I like vi mode... bbbb ... :^)

-- Steve.



From m at moshez.org  Fri Feb 14 13:57:49 2003
From: m at moshez.org (Moshe Zadka)
Date: 14 Feb 2003 20:57:49 -0000
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214202945.GA26834@meson.dyndns.org>
References: <20030214202945.GA26834@meson.dyndns.org>, <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com>
Message-ID: <20030214205749.31716.qmail@green.zadka.com>

On Fri, 14 Feb 2003, Jp Calderone <exarkun at intarweb.us> wrote:

> The biggest problem I have is the amount of time it takes to backtrack from
> the end of a long command to somewhere in the middle to change an option,
> and this strikes me as a bash problem, not a Twisted one (one that
> lengthening the "twistd" invocation command would only exacerbate.

I'll go even further: frequently, the tap code is fairly "shallow": it
either works or doesn't, but has no subtle bugs. Thus, once you've
gotten the tap to work, the cycle is

mktap
twistd
debug, vi, blah
kill, run twistd (with same tap!)
debug, vi, blah
kill, run twistd (with same tap!)
rinse lather repeat

Oh, also, a comment about bash: if you're insane like me, you may want
to consider running bash in vi-mode. Then editing something in the middle
of a command can be easily done by word-jumping with b, w and e.
It is rumoured the common (EMACS mode) also has something like
that.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From a.d.stribblehill at durham.ac.uk  Fri Feb 14 14:07:42 2003
From: a.d.stribblehill at durham.ac.uk (Andrew Stribblehill)
Date: Fri, 14 Feb 2003 21:07:42 +0000
Subject: [Twisted-Python] History editing in bash/csh
In-Reply-To: <20030214202945.GA26834@meson.dyndns.org>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com> <20030214202945.GA26834@meson.dyndns.org>
Message-ID: <20030214210742.GL9228@wompom>

Quoting Jp Calderone <exarkun at intarweb.us> (2003-02-14 08:29:45 GMT):
> On Fri, Feb 14, 2003 at 01:35:35PM -0000, Moshe Zadka wrote:
> > On Fri, 14 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> > [snip]
> > 
> > > Hmm.  That actually looks ugly to me, but something like that.
> > 
> > Yes, this is the overriding problem. Is it really a problem in development?
> > When I develop, I just do "!mktap\n!twistd" in bash...
> 
>   I'll go you one better, "!mktap && !twistd" the first time, and "!mktap"
> every subsequent time.  Either way, this has always seemed sufficient to me.
> 
> The biggest problem I have is the amount of time it takes to backtrack from
> the end of a long command to somewhere in the middle to change an option,
> and this strikes me as a bash problem, not a Twisted one (one that
> lengthening the "twistd" invocation command would only exacerbate.

Um, this has gone way off-topic and for this, I apologise. Still,
bash and csh-like shells have "history editing":

$ long-command-name --opt1 -o -f filenume --debug=73 --wipe-my-nose-for-me
long-command-name: File "filenume" not found
$ ^nume^name^

HTH.

-- 
VIKING
SOUTH OR SOUTHWEST 3 OR 4, OCCASIONALLY 5. FAIR. MODERATE OR GOOD



From radix at twistedmatrix.com  Fri Feb 14 15:05:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Feb 2003 17:05:37 -0500
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030211.191234.596544096.washort@twistedmatrix.com>
References: <20030211.191234.596544096.washort@twistedmatrix.com>
Message-ID: <20030214220537.GM2557@radii>

On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> 
> Chris and I have been looking at hotels in the D.C. area with an eye
> towards affordability and proximity to GWU: the best we've found so
> far is a Best Western in Arlington: assuming 3 to a room, it'll be
> around $30/night/person. 


Ok, I just called and they only have rooms available starting at
$119/night + tax. :-( There's some damned flowery crap going on in
D.C. around then, which is apparently booking up the hotels.


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Fri Feb 14 15:51:44 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 14 Feb 2003 17:51:44 -0500
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
References: <16E60DA9-3D98-11D7-8273-000A95686CD8@redivi.com> <20030211.141712.59648863.glyph@twistedmatrix.com> <20030211235434.GE31012@cantanker.net> <20030212154325.17273.qmail@green.zadka.com> <3E4A9811.973DEADF@beeblebrox.gsfc.nasa.gov>
Message-ID: <20030214225144.GO2557@radii>

On Wed, Feb 12, 2003 at 01:53:05PM -0500, Steve Waterbury wrote:
> I'd be *ecstatic* if any of the twisted folk who are 
> coming to PyCon would like to do a pre-con sprint or a 
> post-con sprint with PanGalactic ... we will be at PyCon 
> (we're located just north of DC, anyway!).  

Do you want to take part in the Twisted sprint? I'm organizing the
Twisted-specific one (and your software is Twisted-related enough to
be under the "Twisted sprint", I suppose, unless you feel like
organizing your own sprint :)). It'll be $50 / person (unless things
change. Maybe if enough people to sprint (Twisted-sprint alone has
16!), they'll lower the price...). You may be able to coerce nearby
hackers to work with your code, but no promises ;-)

Or wait, I just realized I may have misinterpreted what you were
proposing. Do you mean sprint at your office? Hmm, I'm already going
to be spending a week there... I wonder if I can afford a day more ;-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From acapnotic at twistedmatrix.com  Fri Feb 14 16:11:52 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 14 Feb 2003 15:11:52 -0800
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
References: <000e01c2d3b0$8eea74b0$6501a8c0@listy>
Message-ID: <1045264310.12903.58.camel@troglodyte.funhouse>

On Thu, 2003-02-13 at 14:37, Jeff Grimmett wrote:
> app to shut down.  I've traced this to the reactor.stop()

umm.  yes.  reactor.stop makes things shut down.  That's what its job
is.  The examples use reactor.stop so that they will quit when the
example is over.  It's not anything to do with how PB works.

-- 
The moon is waxing gibbous, 93.1% illuminated, 12.3 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030214/8255f168/attachment.sig>

From 2002 at weholt.org  Fri Feb 14 16:22:55 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sat, 15 Feb 2003 00:22:55 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
Message-ID: <005501c2d480$01f374f0$0401a8c0@razor>

Hi,

I'm new to the Twisted-framework, but it looks cool and has a lot of modules I'd like to use in a project. The only problem is that the current docs are a bit thin when it comes to web-development, when developing servlet-like dynamic-content. 

Does anybody have a tutorial or a reference project I could use to get the hang of it?

What I need is this:
- Cookie-handling ( not mention at all in the docs )
- Forms-processing ( this can be done manually when parsing the posted data, I'd like to get this done automatically )
- a persistent Datastore/BusinessLogic-object available for every method and/or object that will produce content or process posted data, the D/B-object must be loaded at start-up and but should also have an option to be reloaded while the server is running

Any clues or hints? I'd be gratefull for any information that can clear up how Twisted best can be used to produce dynamic HTML-based content for a portal-like site. I'm most interested in methods similar to ZPT/SimpleTAL/ES and tech. like XMLC in the Enhydra project, but anything goes and I'm grateful for all you have to offer :-)

Thanks in advance,
Thomas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030215/fcdeecff/attachment.html>

From kwaker at uch.net  Fri Feb 14 17:33:28 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Sat, 15 Feb 2003 02:33:28 +0200
Subject: [Twisted-Python] Writing unit test for SOCKS5 client
Message-ID: <11353250.20030215023328@uch.net>

I am currently writing SOCKS5 client, which in case of success will
grow into set of [SOCKS4, SOCKS5, HTTP Proxy Tunnel] clients, but to
have my code added to Twisted codebase I was requested to create unit
tests for it.

The question is what points should I test and how in my units. Is
sending RFC1928 (SOCKS5 protocol RFC) compliant messages to Protocol
class and checking replies enough?

If test case tries to connect to SOCKS server how can I fool it and
simulate RFC-compliant socks server? The smallest test case module
easy to understand was for POP3 (5 kbytes) and it tested server but
not client.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From andrew-twisted at puzzling.org  Fri Feb 14 18:21:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 12:21:12 +1100
Subject: [Twisted-Python] win32guireactor
In-Reply-To: <vfzmlwyn.fsf@python.net>
References: <vfzmlwyn.fsf@python.net>
Message-ID: <20030215012112.GB22815@frobozz.local>

On Fri, Feb 14, 2003 at 04:10:24PM +0100, Thomas Heller wrote:

[..snip cool stuff about a win32 reactor that doesn't suck as much..]

As the person who wrote the original prototype of the win32 reactor, I'd
just like to say: You rock!

> 
> PS: I tried to run unittests with this and other reactors with
> the command line 
>   py22 bin\trial -p twisted.test.test_internet -r <reactor> -v

You probably should try 
    py22 bin\trial -p twisted.test -r <reactor> -v
as well, i.e. *all* of the tests.

> 
> win32guireactor
>   twisted.test.test_ftp:FTPClientAndServerTests.testLongFileListings
>   crashes with this traceback, and then also hangs forever.
> twisted.test.test_ftp
>   FTPClientAndServerTests
>     testBadLogin ...
>     testLongFileListings ... Traceback (most recent call last):
>   File "C:\sf\Twisted\twisted\internet\win32guireactor.py", line 85, in __wm_timerevent
>     tple.func(*tple.args, **tple.kw)
>   File "C:\sf\Twisted\twisted\test\test_ftp.py", line 124, in errback
>     except self.failureException, e:
> AttributeError: FTPClientAndServerTests instance has no attribute 'failureException'

Ooh!  That's a trial bug -- pyunit TestCases have a "failureException"
attribute... by default I think it's set to AssertionError.

> """A win32 implementation of the Twisted main loop.

[snip]

Interesting.  I don't have a win32 system I can play with this stuff on
anymore, but you obviously have more of an idea about win32 programming than
I did :)

-Andrew.




From andrew-twisted at puzzling.org  Fri Feb 14 18:32:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 12:32:40 +1100
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030214220537.GM2557@radii>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030214220537.GM2557@radii>
Message-ID: <20030215013240.GC22815@frobozz.local>

On Fri, Feb 14, 2003 at 05:05:37PM -0500, Christopher Armstrong wrote:
> On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > 
> > Chris and I have been looking at hotels in the D.C. area with an eye
> > towards affordability and proximity to GWU: the best we've found so
> > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > around $30/night/person. 
> 
> 
> Ok, I just called and they only have rooms available starting at
> $119/night + tax. :-( There's some damned flowery crap going on in
> D.C. around then, which is apparently booking up the hotels.

I.e. ~$40/night/person?  I'm still happy to pay that, assuming the other 2
people will be there to pay their share :)

-Andrew.




From grimmtooth at softhome.net  Fri Feb 14 18:27:56 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Fri, 14 Feb 2003 20:27:56 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <1045264310.12903.58.camel@troglodyte.funhouse>
Message-ID: <006101c2d491$7858b0e0$6501a8c0@listy>


> umm.  yes.  reactor.stop makes things shut down.  That's what 
> its job is.  The examples use reactor.stop so that they will 
> quit when the example is over.  It's not anything to do with 
> how PB works.

Yes, exactly, my point exactly. After much digging and head-scratching I
might be on the right track now that I've grokked a little about
doIteration() ...





From andrew-twisted at puzzling.org  Fri Feb 14 19:07:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 13:07:22 +1100
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <006101c2d491$7858b0e0$6501a8c0@listy>
References: <1045264310.12903.58.camel@troglodyte.funhouse> <006101c2d491$7858b0e0$6501a8c0@listy>
Message-ID: <20030215020722.GF22815@frobozz.local>

On Fri, Feb 14, 2003 at 08:27:56PM -0500, Jeff Grimmett wrote:
> 
> > umm.  yes.  reactor.stop makes things shut down.  That's what 
> > its job is.  The examples use reactor.stop so that they will 
> > quit when the example is over.  It's not anything to do with 
> > how PB works.
> 
> Yes, exactly, my point exactly. After much digging and head-scratching I
> might be on the right track now that I've grokked a little about
> doIteration() ...

You shouldn't need to be looking at the reactor's implementation to use PB.

The reactor is Twisted's event loop.  Thus, reactor.stop() will shutdown
your Twisted app.  If you don't want your app to stop in your callback,
don't call reactor.stop() in your callback.

I feel that either you're missing the obvious or I'm misunderstanding what
you're asking.

-Andrew.




From corydodt at yahoo.com  Fri Feb 14 19:09:34 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 14 Feb 2003 18:09:34 -0800 (PST)
Subject: [Twisted-Python] BookLatexSpitter
Message-ID: <20030215020934.64732.qmail@web10005.mail.yahoo.com>

The following patch is my first step toward engineering out book.tex.  It
will work with howto/index.html with minor modifications to that file,
which I have made.  Check out my sample book and the modified index.html
at:

http://twistedmatrix.com/users/moonfallen/sample-book.zip





Index: default.py
===================================================================
RCS file: /cvs/Twisted/twisted/lore/default.py,v
retrieving revision 1.6
diff -u -r1.6 default.py
--- default.py	10 Feb 2003 00:39:07 -0000	1.6
+++ default.py	14 Feb 2003 17:51:05 -0000
@@ -43,7 +43,9 @@
 
     latexSpitters = {None: latex.LatexSpitter,
                      'section': latex.SectionLatexSpitter,
-                     'chapter': latex.ChapterLatexSpitter}
+                     'chapter': latex.ChapterLatexSpitter,
+                     'book': latex.BookLatexSpitter,
+                     }
 
     def generate_latex(self, d):
         spitter = self.latexSpitters[None]
Index: latex.py
===================================================================
RCS file: /cvs/Twisted/twisted/lore/latex.py,v
retrieving revision 1.85
diff -u -r1.85 latex.py
--- latex.py	12 Feb 2003 11:18:51 -0000	1.85
+++ latex.py	14 Feb 2003 17:51:05 -0000
@@ -309,6 +309,62 @@
         self.visitNodeDefault(node)
         self.start_p = LatexSpitter.start_p
 
+class BookLatexSpitter(LatexSpitter):
+    def visitNode_link(self, node):
+        if not node.hasAttribute('rel'):
+            return self.visitNodeDefault(node)
+        node.tagName += '_'+node.getAttribute('rel')
+        self.visitNode(node)
+       
+    def visitNode_link_author(self, node):
+        self.writer('\\author{%s}\n' % node.getAttribute('text'))
+
+    def visitNode_link_stylesheet(self, node):
+        if node.hasAttribute('type') and node.hasAttribute('href'):
+            if node.getAttribute('type')=='application/x-latex':
+                packagename=node.getAttribute('href')
+                packagebase,ext=os.path.splitext(packagename)
+                self.writer('\\usepackage{%s}\n' % packagebase)
+
+    start_html = r'''\documentclass[oneside]{book}
+\usepackage{graphicx}
+\usepackage{times,mathptmx}
+'''
+    
+    start_body = r'''\begin{document}
+\maketitle
+\tableofcontents
+'''
+
+    start_li=''
+    end_li=''
+    start_ul=''
+    end_ul=''
+
+
+    def visitNode_a(self, node):
+        if node.hasAttribute('class'):
+            a_class=node.getAttribute('class')
+            if a_class.endswith('listing'):
+                return self.visitNode_a_listing(node)
+            else:
+                return getattr(self, 'visitNode_a_%s' % a_class)(node)
+        if node.hasAttribute('href'):
+            return self.visitNode_a_href(node)
+        if node.hasAttribute('name'):
+            return self.visitNode_a_name(node)
+        self.visitNodeDefault(node)
+
+    def visitNode_a_chapter(self, node):
+        self.writer('\\chapter{')
+        self.visitNodeDefault(node)
+        self.writer('}\n')
+        
+    def visitNode_a_sect(self, node):
+        base,ext=os.path.splitext(node.getAttribute('href'))
+        self.writer('\\input{%s}\n' % base)
+        
+        
 
 def processFile(spitter, fin):
     dom = microdom.parse(fin).documentElement


__________________________________________________
Do you Yahoo!?
Yahoo! Shopping - Send Flowers for Valentine's Day
http://shopping.yahoo.com



From grimmtooth at softhome.net  Fri Feb 14 19:55:07 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Fri, 14 Feb 2003 21:55:07 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <20030215020722.GF22815@frobozz.local>
Message-ID: <006801c2d49d$a600f5f0$6501a8c0@listy>


> You shouldn't need to be looking at the reactor's 
> implementation to use PB.
> 
> The reactor is Twisted's event loop.  Thus, reactor.stop() 
> will shutdown your Twisted app.  If you don't want your app 
> to stop in your callback, don't call reactor.stop() in your callback.
> 
> I feel that either you're missing the obvious or I'm 
> misunderstanding what you're asking.

You're probably right on both points :-)

Let me boil this down to essentials. I need a way of creating and
invoking a one-shot pb client to communicate with a remote object in a
manner that can be re-used by modules either in an app/rector or modules
that are functioning outside of an app/reactor.  

I'm sure I'll figure it out eventually, it's just rough going at the
moment...




From andrew-twisted at puzzling.org  Fri Feb 14 21:46:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 15:46:41 +1100
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <006801c2d49d$a600f5f0$6501a8c0@listy>
References: <20030215020722.GF22815@frobozz.local> <006801c2d49d$a600f5f0$6501a8c0@listy>
Message-ID: <20030215044641.GG22815@frobozz.local>

On Fri, Feb 14, 2003 at 09:55:07PM -0500, Jeff Grimmett wrote:
> 
> 
> > You shouldn't need to be looking at the reactor's 
> > implementation to use PB.
> > 
> > The reactor is Twisted's event loop.  Thus, reactor.stop() 
> > will shutdown your Twisted app.  If you don't want your app 
> > to stop in your callback, don't call reactor.stop() in your callback.
> > 
> > I feel that either you're missing the obvious or I'm 
> > misunderstanding what you're asking.
> 
> You're probably right on both points :-)
> 
> Let me boil this down to essentials. I need a way of creating and
> invoking a one-shot pb client to communicate with a remote object in a
> manner that can be re-used by modules either in an app/rector or modules
> that are functioning outside of an app/reactor.  
> 
> I'm sure I'll figure it out eventually, it's just rough going at the
> moment...

Have you seen doc/examples/pbecho.py and doc/examples/pbechoclient.py?  They
do pretty much exactly this, i.e. a long-running server, and a one-shot
client:

    bash-2.05b$ python pbecho.py
    Saving pbecho application to pbecho-start.tap...
    Saved.
    bash-2.05b$ twistd -f pbecho-start.tap 
    bash-2.05b$ python pbechoclient.py 
    connected.
    Message received: hello world
    error received: pbecho.DefinedError
    Main loop terminated.
    bash-2.05b$ python pbechoclient.py 
    connected.
    Message received: hello world
    error received: pbecho.DefinedError
    Main loop terminated.

(The errors are intentional; see the source)

-Andrew.




From acapnotic at twistedmatrix.com  Fri Feb 14 21:42:57 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 14 Feb 2003 20:42:57 -0800
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <006801c2d49d$a600f5f0$6501a8c0@listy>
References: <006801c2d49d$a600f5f0$6501a8c0@listy>
Message-ID: <1045284175.12901.86.camel@troglodyte.funhouse>

On Fri, 2003-02-14 at 18:55, Jeff Grimmett wrote:
> Let me boil this down to essentials. I need a way of creating and
> invoking a one-shot pb client to communicate with a remote object in a
> manner that can be re-used by modules either in an app/rector or modules
> that are functioning outside of an app/reactor.  

Nothing functions outside of a reactor.

That is to say, if you're using Twisted, embrace the framework.  Don't
attempt to use it just part of the time, running some pieces inside it
and leaving the rest of your program out.  Unless, for some reason I
have missed, you are working in an environment that cannot integrate
with Twisted?  What is your application here?

-- 
The moon is waxing gibbous, 94.2% illuminated, 12.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030214/6144a411/attachment.sig>

From grimmtooth at softhome.net  Fri Feb 14 23:05:51 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sat, 15 Feb 2003 01:05:51 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <20030215044641.GG22815@frobozz.local>
Message-ID: <007401c2d4b8$4b29b250$6501a8c0@listy>

> Have you seen doc/examples/pbecho.py and 
> doc/examples/pbechoclient.py?  They do pretty much exactly 
> this, i.e. a long-running server, and a one-shot
> client:

Yep, but there's that dreaded reactor.stop() in the client.

Good news: I figured out how to make it work. I've created a class that
I use as a mix-in for my protocol classes to utilize. The down side is
that I have to maintain two versions of the debugger OR put in some
conditional code, but the upshot is that I can now do exactly what I
needed to do with it.

class Debugger:
  def Debug (self, txt):
    self.dbtxt = txt
    pb.getObjectAt("localhost", DBPort, 30).addCallbacks(self.gotObject,
self.gotNoObject)
		
    def gotObject(self, object): 
      print 'client got object'
      object.callRemote ("DoCommand", {'Command': 'Msg',
'Msg':self.dbtxt} ).addCallback(self.gotCommand)
		
    def gotCommand(self, rc):
      print 'gotcommand',rc
      self.dbrc = rc

    def gotNoObject(reason):
      print 'gotnoobject', reason
      self.dbrc = -1

When creating the protocol, it looks like this:

 from Debug import Debugger

 class myProtocol(Protocol, Debugger):
    <stuff>

Then to send the debugging text to the other app loop:
  self.Debug(text)

Oh, there's a bit of cleanup to do but the upshot is that it does NOT
kill off the reactor running the protocol that calls it.

Off to bed...





From grimmtooth at softhome.net  Fri Feb 14 23:11:17 2003
From: grimmtooth at softhome.net (Jeff Grimmett)
Date: Sat, 15 Feb 2003 01:11:17 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <1045284175.12901.86.camel@troglodyte.funhouse>
Message-ID: <007701c2d4b9$0d7d9f10$6501a8c0@listy>

> That is to say, if you're using Twisted, embrace the 
> framework.  Don't attempt to use it just part of the time, 
> running some pieces inside it and leaving the rest of your 
> program out.  Unless, for some reason I have missed, you are 
> working in an environment that cannot integrate with Twisted? 
>  What is your application here?

To be honest, I know I could merge the debugger and main app together
into one event loop, but part of my concern is that the debugger employs
a GUI; if the server gets busy, the GUI is going to suffer since its
event loop is merged with the reactor event loop. 

Moot point, now that I have found a compromise solution. I can have my
cake and eat it too, I guess :-)





From wilk-ml at flibuste.net  Sat Feb 15 01:56:32 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 09:56:32 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <005501c2d480$01f374f0$0401a8c0@razor>
References: <005501c2d480$01f374f0$0401a8c0@razor>
Message-ID: <87wuk12a7z.fsf@flibuste.net>

Hi,

I'm new also, but i'll try to help you with what i find recently (and 
it works !)

When you don't find documentation, goto api-doc

"Thomas Weholt" <2002 at weholt.org> writes:

> Hi,
> 
> I'm new to the Twisted-framework, but it looks cool and has a lot of modules I'd like to use in a project. The only problem is that the current docs are a bit thin when it comes to web-development, when developing servlet-like dynamic-content. 
> 
> Does anybody have a tutorial or a reference project I could use to get the hang of it?
> 
> What I need is this:
> - Cookie-handling ( not mention at all in the docs )
there are in Request :

getCookie(self, key)
Get a cookie that was sent from the network. (inherited from Request)

addCookie(self, k, v, expires, domain, path, max_age, comment, secure)
Set an outgoing HTTP cookie. (inherited from Request)



> - Forms-processing ( this can be done manually when parsing the posted data, I'd like to get this done automatically )
also in Request (i find it in the source code, maybe it's a method for
them ?)

request.args

but why everythings is in list ?
?a=5&b=3
{"a":["5"], "b":["3"]} 

why not a compatible FieldStorage ?

> - a persistent Datastore/BusinessLogic-object available for every method and/or object that will produce content or process posted data, the D/B-object must be loaded at start-up and but should also have an option to be reloaded while the server is running
> 
> Any clues or hints? I'd be gratefull for any information that can clear up how Twisted best can be used to produce dynamic HTML-based content for a portal-like site. I'm most interested in methods similar to ZPT/SimpleTAL/ES and tech. like XMLC in the Enhydra project, but anything goes and I'm grateful for all you have to offer :-)
> 
> Thanks in advance,
> Thomas
> 

-- 
William Dodé - http://flibuste.net



From m at moshez.org  Sat Feb 15 02:28:37 2003
From: m at moshez.org (Moshe Zadka)
Date: 15 Feb 2003 09:28:37 -0000
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <87wuk12a7z.fsf@flibuste.net>
References: <87wuk12a7z.fsf@flibuste.net>, <005501c2d480$01f374f0$0401a8c0@razor>
Message-ID: <20030215092837.22474.qmail@green.zadka.com>

On 15 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:

> but why everythings is in list ?
> ?a=5&b=3
> {"a":["5"], "b":["3"]}

What would happen if it was ?a=1&a=2&a=3

> why not a compatible FieldStorage ?

Because FS is a horrible mess of semi-DWIMy stuff. 

Also, note that documentation patches (in this case, to using-twistedweb)
are happily accepted.
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From andrew-twisted at puzzling.org  Sat Feb 15 02:43:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 20:43:17 +1100
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <007401c2d4b8$4b29b250$6501a8c0@listy>
References: <20030215044641.GG22815@frobozz.local> <007401c2d4b8$4b29b250$6501a8c0@listy>
Message-ID: <20030215094317.GK22815@frobozz.local>

On Sat, Feb 15, 2003 at 01:05:51AM -0500, Jeff Grimmett wrote:
> 
> > Have you seen doc/examples/pbecho.py and 
> > doc/examples/pbechoclient.py?  They do pretty much exactly 
> > this, i.e. a long-running server, and a one-shot
> > client:
> 
> Yep, but there's that dreaded reactor.stop() in the client.

Well, if you don't want the client to stop, don't call reactor.stop().  I'm
not sure what you mean by "one-shot"; I thought you meant a program that was
run with the sole purpose of running a PB command and exiting.

> Good news: I figured out how to make it work. I've created a class that
> I use as a mix-in for my protocol classes to utilize. The down side is
> that I have to maintain two versions of the debugger OR put in some
> conditional code, but the upshot is that I can now do exactly what I
> needed to do with it.

[code snipped]

I can't see anything special about that, except that it doesn't call
reactor.stop(), which is what we've been saying all along :)

-Andrew.




From andrew-twisted at puzzling.org  Sat Feb 15 02:46:41 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 15 Feb 2003 20:46:41 +1100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <87wuk12a7z.fsf@flibuste.net>
References: <005501c2d480$01f374f0$0401a8c0@razor> <87wuk12a7z.fsf@flibuste.net>
Message-ID: <20030215094641.GL22815@frobozz.local>

I know next to nothing about Twisted Web, but...

On Sat, Feb 15, 2003 at 09:56:32AM +0100, William Dode wrote:
> 
> > - Forms-processing ( this can be done manually when parsing the posted data, I'd like to get this done automatically )
> also in Request (i find it in the source code, maybe it's a method for
> them ?)
> 
> request.args
> 
> but why everythings is in list ?
> ?a=5&b=3
> {"a":["5"], "b":["3"]} 
> 
> why not a compatible FieldStorage ?

I expect this is because ?a=5&a=7&b=8 is a perfectly valid URL.

-Andrew.




From wilk-ml at flibuste.net  Sat Feb 15 03:04:15 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 11:04:15 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <20030215092837.22474.qmail@green.zadka.com>
References: <87wuk12a7z.fsf@flibuste.net>
	<005501c2d480$01f374f0$0401a8c0@razor>
	<20030215092837.22474.qmail@green.zadka.com>
Message-ID: <87d6lt2734.fsf@flibuste.net>

Moshe Zadka <m at moshez.org> writes:

> On 15 Feb 2003, William Dode <wilk-ml at flibuste.net> wrote:
> 
> > but why everythings is in list ?
> > ?a=5&b=3
> > {"a":["5"], "b":["3"]}
> 
> What would happen if it was ?a=1&a=2&a=3

with FieldStorage ?a=1&a=2&a=3&b=5
{"a":["1","2","3"], "b":"5"}

> 
> > why not a compatible FieldStorage ?
> 
> Because FS is a horrible mess of semi-DWIMy stuff. 

we're agree, a documentation to explain the difference will be better.

> 
> Also, note that documentation patches (in this case, to using-twistedweb)
> are happily accepted.

ok, with my poor english, i'll better write an example !

-- 
William Dodé - http://flibuste.net



From tv at twistedmatrix.com  Sat Feb 15 03:38:50 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sat, 15 Feb 2003 12:38:50 +0200
Subject: [Twisted-Python] Re: In Defense of Taps
In-Reply-To: <20030214205749.31716.qmail@green.zadka.com>
References: <20030213011452.GC20194@frobozz.local> <20030213.042627.122625493.glyph@twistedmatrix.com> <1045160643.808.61.camel@mingus> <20030214133535.19502.qmail@green.zadka.com> <20030214205749.31716.qmail@green.zadka.com>
Message-ID: <20030215103850.GA27765@lapdog>

On Fri, Feb 14, 2003 at 08:57:49PM -0000, Moshe Zadka wrote:
> Oh, also, a comment about bash: if you're insane like me, you may want
> to consider running bash in vi-mode. Then editing something in the middle
> of a command can be easily done by word-jumping with b, w and e.
> It is rumoured the common (EMACS mode) also has something like
> that.

	You mean something like the standard emacs keybindings for
	faster cursor movement? Yes, it has those.

	M-b, M-f skip words.

	For more, type bind -p|egrep 'backward|forward'

-- 
:(){ :|:&};:



From wilk-ml at flibuste.net  Sat Feb 15 06:21:28 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 14:21:28 +0100
Subject: [Twisted-Python] Getting started using Twisted for servlet-like development
In-Reply-To: <87d6lt2734.fsf@flibuste.net>
References: <87wuk12a7z.fsf@flibuste.net>
	<005501c2d480$01f374f0$0401a8c0@razor>
	<20030215092837.22474.qmail@green.zadka.com>
	<87d6lt2734.fsf@flibuste.net>
Message-ID: <871y291xyf.fsf@flibuste.net>

I extend ReportResource and rename it ReportRequest since it show more a
request than a resource...
It show cookies (with a counter) and forms args
I would like to use session, but i'm not sure to understand how it
works... Is there and example somewhere ?

-------------- next part --------------
A non-text attachment was scrubbed...
Name: report_request.py
Type: text/python
Size: 1983 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030215/adabe428/attachment-0002.bin>

From twisted at itamarst.org  Sat Feb 15 09:11:41 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 15 Feb 2003 11:11:41 -0500
Subject: [Twisted-Python] PB and multiple apps
In-Reply-To: <007701c2d4b9$0d7d9f10$6501a8c0@listy>
References: <1045284175.12901.86.camel@troglodyte.funhouse>
	<007701c2d4b9$0d7d9f10$6501a8c0@listy>
Message-ID: <20030215111141.40187df0.twisted@itamarst.org>

On Sat, 15 Feb 2003 01:11:17 -0500
"Jeff Grimmett" <grimmtooth at softhome.net> wrote:

> To be honest, I know I could merge the debugger and main app together
> into one event loop, but part of my concern is that the debugger
> employs a GUI; if the server gets busy, the GUI is going to suffer
> since its event loop is merged with the reactor event loop. 

Twisted lets you merge the GUI's event loop with its own. See
http://twistedmatrix.com/documents/howto/choosing-reactor

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From wilk-ml at flibuste.net  Sat Feb 15 11:11:40 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 15 Feb 2003 19:11:40 +0100
Subject: [Twisted-Python] session
Message-ID: <87adgxza5f.fsf@flibuste.net>

Hi, 

I did an other litle example to see how can work session. A shop where
you put some articles in your bag...

I do request.getSession() and set attribute directly to the session...
Is it the good way ?
 
import twisted.web.resource
import cgi

class Shop(twisted.web.resource.Resource):
    """ ReportRequest with forms and cookies """
    articles=("chocolate","banana","apple")
    def isLeaf(self):
        return true
    def render(self, request):
        session = request.getSession()
        try:
            bag = session.bag
        except AttributeError:
            bag = session.bag={}

        try:
            article = request.args["put"][0]
            bag[article] = session.bag.get(article,0)+1
        except KeyError:
            pass # no article to put
        
        out = []
        out.append("""<html><body>What do you want to put in your bag ?<br>
        <a href='?put=chocolate'>chocolate</a><br>
        <a href='?put=banana'>banana</a><br>
        <a href='?put=apple'>apple</a><br>
        """)
        if len(bag) == 0:
            out.append("Your bag is empty")
        else:
            out.append("You have in your bag :<br>")
            for k,v in bag.items():
                out.append("%d %s<br>"%(v,k))
        return "".join(out)

from twisted.internet import reactor
from twisted.web import static, server

site = server.Site(Shop())
reactor.listenTCP(8080,site)
reactor.run()




From juliorom at ceibo.entelnet.bo  Sat Feb 15 17:17:03 2003
From: juliorom at ceibo.entelnet.bo (Julio Rommi =?iso-8859-15?q?O=F1a=20Miranda?=)
Date: Sat, 15 Feb 2003 20:17:03 -0400
Subject: [Twisted-Python] Woven examples
Message-ID: <20030216001456.ED1F685EF@pinky.miranda>

Hi,

I'm moving on Twisted, playing with woven but the twisted installed manual is 
not complete. Does anybody could tell me where I can get more information? or 
may be send my a larger example?

Regards.

-- 
Julio



From 2002 at weholt.org  Sat Feb 15 17:08:04 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 16 Feb 2003 01:08:04 +0100
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net>
Message-ID: <002901c2d54f$7b8e9630$0401a8c0@razor>

This is very interesting. I found out much of what was unclear when I posted
my earlier posting to this list by looking at this code. But I have some
more questions :

- how do I send HTTP-headers to the client?

- if I want to create some webservices, both XML-RPC and SOAP-based without
starting a different server using something like the code below, how do I do
that? I want to run one server, providing both webservices and content aimed
at browsers.

- is this the preferred way of doing things? Can I base my work on this
example? Drawbacks? I need the fastest, most scalable method available,
which can handle lots of concurrent users, several downloads and processes
at the same time, both using simple web-pages, webservices like the ones
mentioned earlier and ftp-access for administrators to maintain files served
by the server, both static files and source-code. The server should be able
to reload, using updated source without a complete restart. That would be
the ultimate platform. I'm still a bit unclear on wheter Twisted is a async.
*blocking* framework, making concurrent downloads harder, if at all
possible, or if it is similar to the threaded solution available in the
standard python distr. I've based my solutions on a threaded version of
BaseHTTPServer so far, and been told this is not very scalable. But I need a
non-blocking solution, where one process doesn't lock the entire server
until that process is over before other clients are handled.

Any clues, hints, code or flames appreciated. Thanks so far. Twisted looks
great !! :-)

Best regards,
Thomas


----- Original Message -----
From: "William Dode" <wilk-ml at flibuste.net>
To: <twisted-python at twistedmatrix.com>
Sent: Saturday, February 15, 2003 7:11 PM
Subject: [Twisted-Python] session


> Hi,
>
> I did an other litle example to see how can work session. A shop where
> you put some articles in your bag...
>
> I do request.getSession() and set attribute directly to the session...
> Is it the good way ?
>
> import twisted.web.resource
> import cgi
>
> class Shop(twisted.web.resource.Resource):
>     """ ReportRequest with forms and cookies """
>     articles=("chocolate","banana","apple")
>     def isLeaf(self):
>         return true
>     def render(self, request):
>         session = request.getSession()
>         try:
>             bag = session.bag
>         except AttributeError:
>             bag = session.bag={}
>
>         try:
>             article = request.args["put"][0]
>             bag[article] = session.bag.get(article,0)+1
>         except KeyError:
>             pass # no article to put
>
>         out = []
>         out.append("""<html><body>What do you want to put in your bag
?<br>
>         <a href='?put=chocolate'>chocolate</a><br>
>         <a href='?put=banana'>banana</a><br>
>         <a href='?put=apple'>apple</a><br>
>         """)
>         if len(bag) == 0:
>             out.append("Your bag is empty")
>         else:
>             out.append("You have in your bag :<br>")
>             for k,v in bag.items():
>                 out.append("%d %s<br>"%(v,k))
>         return "".join(out)
>
> from twisted.internet import reactor
> from twisted.web import static, server
>
> site = server.Site(Shop())
> reactor.listenTCP(8080,site)
> reactor.run()
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From andrew-twisted at puzzling.org  Sat Feb 15 18:28:14 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 16 Feb 2003 12:28:14 +1100
Subject: [Twisted-Python] session
In-Reply-To: <002901c2d54f$7b8e9630$0401a8c0@razor>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor>
Message-ID: <20030216012814.GC26957@frobozz.local>

On Sun, Feb 16, 2003 at 01:08:04AM +0100, Thomas Weholt wrote:
> by the server, both static files and source-code. The server should be able
> to reload, using updated source without a complete restart. That would be
> the ultimate platform. I'm still a bit unclear on wheter Twisted is a async.
> *blocking* framework, making concurrent downloads harder, if at all
> possible, or if it is similar to the threaded solution available in the
> standard python distr. I've based my solutions on a threaded version of

For reloading, look at twisted.python.rebuild.

And yes, Twisted is an async *non-blocking* framework, so it can merrily
handle multiple concurrent downloads.  And uploads.  For several different
protocols at the same time :)

-Andrew.




From wilk-ml at flibuste.net  Sun Feb 16 00:56:41 2003
From: wilk-ml at flibuste.net (William Dode)
Date: 16 Feb 2003 08:56:41 +0100
Subject: [Twisted-Python] session
In-Reply-To: <002901c2d54f$7b8e9630$0401a8c0@razor>
References: <87adgxza5f.fsf@flibuste.net>
	<002901c2d54f$7b8e9630$0401a8c0@razor>
Message-ID: <87n0kwzmiu.fsf@flibuste.net>

"Thomas Weholt" <2002 at weholt.org> writes:

> This is very interesting. I found out much of what was unclear when I posted
> my earlier posting to this list by looking at this code. But I have some
> more questions :

if twisted guru could confirm that it's the right way ? i could make a
little documentation cgi<->twisted

> 
> - how do I send HTTP-headers to the client?

request.setHeader(self, k, v)
Set an outgoing HTTP header. (inherited from Request)

for example setHeader("content-type","text/csv")

> 
> - if I want to create some webservices, both XML-RPC and SOAP-based without
> starting a different server using something like the code below, how do I do
> that? I want to run one server, providing both webservices and content aimed
> at browsers.
> 
> - is this the preferred way of doing things? Can I base my work on this
> example? Drawbacks? I need the fastest, most scalable method available,
> which can handle lots of concurrent users, several downloads and processes
> at the same time, both using simple web-pages, webservices like the ones
> mentioned earlier and ftp-access for administrators to maintain files served
> by the server, both static files and source-code. The server should be able
> to reload, using updated source without a complete restart. That would be
> the ultimate platform. I'm still a bit unclear on wheter Twisted is a async.
> *blocking* framework, making concurrent downloads harder, if at all
> possible, or if it is similar to the threaded solution available in the
> standard python distr. I've based my solutions on a threaded version of
> BaseHTTPServer so far, and been told this is not very scalable. But I need a
> non-blocking solution, where one process doesn't lock the entire server
> until that process is over before other clients are handled.

The IO are not blocked, you can upload/download big files in the same
times without worry about this, even if the client are slow.
Thread are blocked, you have to "defer" when you will do long task.
In the archive of the mailing-list, there is a good example of using
defered with sql query.

-- 
William Dode - http://flibuste.net



From warner at lothar.com  Sun Feb 16 02:22:50 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 16 Feb 2003 01:22:50 -0800 (PST)
Subject: [Twisted-Python] A useful value for argv[0]
References: <20030210232953.V22380-100000@nosferatu.kriln.com>
Message-ID: <20030216.012250.126590856.warner@lothar.com>

> >   I think it would be neat if twistd re-executed itself(/python), and
> > specified the name of the tap/tas/tax file it was currently processing as
> > the value for argv[0].

I like it, but the re-exec step is a bit unfortunate. I can imagine problems
(or at least user confusion) when twistd is run under strace, or pdb.

Is there any python way to change argv[0] in place? C apps can muck with it
all they like.. is sys.argv[0] mutable in any useful way?

 -Brian



From matt at pollenation.net  Sat Feb 15 17:21:12 2003
From: matt at pollenation.net (Matt Goodall)
Date: 16 Feb 2003 00:21:12 +0000
Subject: [Twisted-Python] Woven examples
In-Reply-To: <20030216001456.ED1F685EF@pinky.miranda>
References: <20030216001456.ED1F685EF@pinky.miranda>
Message-ID: <1045354872.27492.10.camel@localhost>

Hi,

I've asked the same question on IRC and was told that the best place is
to look at Issues, a bug tracking type application.

AFAIK, the only place the Issues code is available is from the twisted
matrix CVS repostitory. 'cvs -d :pserver:anon at twistedmatrix.com:/cvs co
Issues' should retrieve the code. More information on twisted CVS access
can be found at http://twistedmatrix.com/developers/cvs.

Hope this helps.

Cheers, Matt


On Sun, 2003-02-16 at 00:17, Julio Rommi Oña Miranda wrote:
> Hi,
> 
> I'm moving on Twisted, playing with woven but the twisted installed manual is 
> not complete. Does anybody could tell me where I can get more information? or 
> may be send my a larger example?
> 
> Regards.
-- 
Matt Goodall, Technical Director
Pollenation Internet Ltd, http://www.pollenation.net
e: matt at pollenation dot net




From radix at twistedmatrix.com  Sun Feb 16 03:00:50 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 05:00:50 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030216.012250.126590856.warner@lothar.com>
References: <20030210232953.V22380-100000@nosferatu.kriln.com> <20030216.012250.126590856.warner@lothar.com>
Message-ID: <20030216100050.GD29796@radii>

On Sun, Feb 16, 2003 at 01:22:50AM -0800, Brian Warner wrote:
> > >   I think it would be neat if twistd re-executed itself(/python), and
> > > specified the name of the tap/tas/tax file it was currently processing as
> > > the value for argv[0].
> 
> I like it, but the re-exec step is a bit unfortunate. I can imagine problems
> (or at least user confusion) when twistd is run under strace, or pdb.
> 
> Is there any python way to change argv[0] in place? C apps can muck with it
> all they like.. is sys.argv[0] mutable in any useful way?

Nope. I think there was a patch for Python to allow it to be mutable,
but nobody wanted to allow a change to main(), or something.

</rumour>

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Sun Feb 16 03:09:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 05:09:10 -0500
Subject: [Twisted-Python] session
In-Reply-To: <002901c2d54f$7b8e9630$0401a8c0@razor>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor>
Message-ID: <20030216100910.GE29796@radii>

On Sun, Feb 16, 2003 at 01:08:04AM +0100, Thomas Weholt wrote:
> - how do I send HTTP-headers to the client?

That's documented in Request's API ;-)

> - if I want to create some webservices, both XML-RPC and SOAP-based without
> starting a different server using something like the code below, how do I do
> that? I want to run one server, providing both webservices and content aimed
> at browsers.
> 
> - is this the preferred way of doing things? Can I base my work on this

No -- you want to use .rpys (.rpys can be used for XML-RPC resources
too, of course). William made some nice changes to that example, but
changing it to instantiate its own server.Site was a bad one.

> I'm still a bit unclear on wheter Twisted is a async.  *blocking*
> framework, making concurrent downloads harder, if at all

No, Twisted is non-blocking. i.e., NEVER write code that blocks in
Twisted applications, unless you know what you're doing :-)


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From warner at lothar.com  Sun Feb 16 03:32:51 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 16 Feb 2003 02:32:51 -0800 (PST)
Subject: [Twisted-Python] buildbot?
References: <20030214163132.41233.qmail@web10008.mail.yahoo.com>
Message-ID: <20030216.023251.21613415.warner@lothar.com>

> Does buildbot use cvs up -d to check out the code?  If not, it should,
> because that would fix the problem I'm seeing above.

There was a problem with the way the buildbot was doing the update (it did
'cvs update -dP doc/howto/listings/lore', but I think cvs-1.11.1p1 on pyramid
didn't interpret that correctly and didn't create the named directory). I
changed the code to respond to any new directory by doing an update of the
whole tree, and then manually updated the "quick" builder tree.

Eventually I plan to change the CVS update step to notice a CVS failure (like
the one that happened when it tried to update listings/plugins.tml later on)
and fix it by just checking out a brand new tree.

Thanks for the catch.. let me know if you see any other problems.

 -Brian

PS: I announced the buildbot's presence to the IRC channel, but not to this
list. Consider it announced :). http://twistedmatrix.com/~warner.twistd/ is
an instance of my BuildBot project running against the Twisted source tree.
It does full compile/test/process-docs cycles with both python-2.1 and -2.2
whenever the tree has been stable for more than 5 minutes, and tries to build
.debs if both the -2.1 and -2.2 test suites passed. More details will be
available through links on that page (as I start adding on-line
documentation) or at the PyCon presentation.



From 2002 at weholt.org  Sun Feb 16 08:06:56 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 16 Feb 2003 16:06:56 +0100
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii>
Message-ID: <005f01c2d5cd$0c65df10$0401a8c0@razor>

> That's documented in Request's API ;-)

Yes, after some digging around I found out that the API-docs explained alot.
I'll try there first in the future.

> > - is this the preferred way of doing things? Can I base my work on this
>
> No -- you want to use .rpys (.rpys can be used for XML-RPC resources
> too, of course). William made some nice changes to that example, but
> changing it to instantiate its own server.Site was a bad one.

Ok. I liked that way, but I'm porting a project from a solution based on
BaseHTTPServer and a very customized RequestHandler to Twisted and like to
do it the Twisted-way as much as possible. But I need to have some
middle-man between the server and the .rpy that will produce the content. So
far I've decided what method to use to produce content by path:

/test/index.html would be something like :

server.webapps['test'].index(request, response, server)

in my earlier code. ( Actually the method called was found using getattr and
some ugly code, so if there's a better way I'm read to learn. ) I cannot get
the grip on how to use childs and leafs in Twisted. I think my code should
be written to use that somehow. The reason I need this is because I need to
have a perstistent object, containing compiled templates ( using
simpleTAL/ES ), users-information and a dict of what I've called webapps,
similar to the rpys I guess, in memory. I think that can work with some of
the sample code I've seen. But I want to pass more parameters to the
rpy-file that will produce the content, not just call it's render method.

In short; how can I turn Williams example into a rpy and still have the
ability to decide what render-method to call based on the requested path and
pass more parameters to the rendering method? Is that possible?

I don't want to write an rpy for each file that will produce on page. In my
previous solution I've seperated businesslogic, data and content-generation
in such a way that the content-producer method took only a few lines each.
It made it possible to have them in one class, instead of a bunch of small
files. It could look something like this ;

class MyPage:

     def index(self, request, response, server):
        # produces content for index.html

    def about(self, request, response, server):
        # produces content for about.html

    ... etc ...

It made it easier to maintain, easier to reuse code between
content-generator methods and overall easier to understand. I think. Since
design was in templates all I did was build a dict of values, find the right
template and call the proper method in simpleTAL/ES to produce the content
with the dict and name of template as parameters. It was very easy and done
in just a few lines of code.

> Twisted applications, unless you know what you're doing :-)

So far I'm without a clue, but hopefully I'm getting there ;-) Thanks. Sorry
if I'm writing a bunch of crap here, but I'm very excited about getting the
hang of Twisted.

Best regards,
Thomas




From tv at twistedmatrix.com  Sun Feb 16 08:18:25 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Sun, 16 Feb 2003 17:18:25 +0200
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030216.012250.126590856.warner@lothar.com>
References: <20030210232953.V22380-100000@nosferatu.kriln.com> <20030216.012250.126590856.warner@lothar.com>
Message-ID: <20030216151825.GA29827@lapdog>

On Sun, Feb 16, 2003 at 01:22:50AM -0800, Brian Warner wrote:
> Is there any python way to change argv[0] in place? C apps can muck with it
> all they like.. is sys.argv[0] mutable in any useful way?

	C apps can't really muck with it all they like. There's a lot
	of limitations. In general, increasing the legth is not portably
	safe (without horrible kludges), and no minimum length can be
	guaranteed.

	The only simple, portable way is opportunistically resetting
	argv[0] if and only if the len(newValue) <= len(oldValue).

-- 
:(){ :|:&};:



From justin at iago.org  Sun Feb 16 08:31:46 2003
From: justin at iago.org (justin at iago.org)
Date: Sun, 16 Feb 2003 10:31:46 -0500
Subject: [Twisted-Python] session
In-Reply-To: <20030216100910.GE29796@radii> (Christopher Armstrong's message
 of "Sun, 16 Feb 2003 05:09:10 -0500")
References: <87adgxza5f.fsf@flibuste.net>
	<002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii>
Message-ID: <m2bs1c9r8d.fsf@justin.local.>

Christopher Armstrong <radix at twistedmatrix.com> writes:

> you want to use .rpys

A quick look through the documentation index doesn't show anything
that is obviously about .rpys.  How should the uninitiated be finding
out that they want to use them, if they don't even see a mention?

-Justin

 




From glyph at twistedmatrix.com  Sun Feb 16 08:57:10 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 16 Feb 2003 09:57:10 -0600
Subject: [Twisted-Python] session
In-Reply-To: <005f01c2d5cd$0c65df10$0401a8c0@razor>
Message-ID: <4EA4AF90-41C7-11D7-BB31-000393C9700E@twistedmatrix.com>

On Sunday, February 16, 2003, at 09:06 AM, Thomas Weholt wrote:

>> No -- you want to use .rpys (.rpys can be used for XML-RPC resources
>> too, of course). William made some nice changes to that example, but
>> changing it to instantiate its own server.Site was a bad one.

> I cannot get the grip on how to use childs and leafs in Twisted. I 
> think my code should be written to use that somehow. The reason I need 
> this is because I need to have a perstistent object, containing 
> compiled templates ( using simple TAL/ES ), users-information and a 
> dict of what I've called webapps, similar to the rpys I guess, in 
> memory. I think that can work with some of the sample code I've seen. 
> But I want to pass more parameters to the rpy-file that will produce 
> the content, not just call it's render method.

You want to use twisted.web.woven.tapestry: however, it's not entirely 
ready.  At last I knew of it, this module was going to be deprecated 
and functionality was going to be rolled back into Controller.  At any 
rate, reading the code there should give you some ideas.

Nothing horribly confusing is going to happen to it though.  You will 
probably have to spend 30 minutes renaming some classes when we polish 
and finalize it.

As to the theory:

An RPY is a file that can generate a resource.  It is NOT suggested, in 
an application, to have multiple related resources in different .rpy's. 
  They are conceptually related objects, which you can aggregate by 
using request.putChild and overriding request.getChild.

What you want to do is to create a top-level "site" resource, (not a 
server.Site) and then handle getChild there, returning other Resource 
instances that you can dynamically create, cache, or load from your own 
files.

As far as "leafs" -- in Twisted Web, isLeaf is just a flag that says 
"stop calling getChild here, please".  There's nothing really special 
about it.

A simple example:

	http://asdf.com/foo/bar/baz => root.getChild("foo", 
...).getChild("bar", ...).getChild("baz", ...).render(...)

What happens at each step of that path is pretty much up to you ;).




From radix at twistedmatrix.com  Sun Feb 16 11:11:26 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 13:11:26 -0500
Subject: [Twisted-Python] session
In-Reply-To: <m2bs1c9r8d.fsf@justin.local.>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.>
Message-ID: <20030216181126.GH29796@radii>

On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
> Christopher Armstrong <radix at twistedmatrix.com> writes:
> 
> > you want to use .rpys
> 
> A quick look through the documentation index doesn't show anything
> that is obviously about .rpys.  How should the uninitiated be finding
> out that they want to use them, if they don't even see a mention?

Don't look so quickly.

http://twistedmatrix.com/documents/howto/using-twistedweb

There's an entire section about them there.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From bob at redivi.com  Sun Feb 16 11:18:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 16 Feb 2003 13:18:48 -0500
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <20030216151825.GA29827@lapdog>
Message-ID: <181B51AA-41DB-11D7-B93C-000A95686CD8@redivi.com>

On Sunday, Feb 16, 2003, at 10:18 America/New_York, Tommi Virtanen 
wrote:

> On Sun, Feb 16, 2003 at 01:22:50AM -0800, Brian Warner wrote:
>> Is there any python way to change argv[0] in place? C apps can muck 
>> with it
>> all they like.. is sys.argv[0] mutable in any useful way?
>
> 	C apps can't really muck with it all they like. There's a lot
> 	of limitations. In general, increasing the legth is not portably
> 	safe (without horrible kludges), and no minimum length can be
> 	guaranteed.
>
> 	The only simple, portable way is opportunistically resetting
> 	argv[0] if and only if the len(newValue) <= len(oldValue).

Well, can't you do it with os.execve(sys.executable, ...) ?

-bob




From grrrendel at comcast.net  Sun Feb 16 04:31:58 2003
From: grrrendel at comcast.net (cary)
Date: Sun, 16 Feb 2003 11:31:58 +0000
Subject: [Twisted-Python] a qtManhole
Message-ID: <3E4F76AE.5070602@comcast.net>

hi guys,

i needed a qtManhole so i put a simple one together. .
meaning it doesnt support snazzy manhole stuff,
just basic "remote interp/shell" functionality. .

does manhole.explorer work now?

perhaps a knowledgable twisted person could give
me some pointers. .

i thought this could be useful to twisted ppl
who are on platforms where pyqt is easier to setup than
pygtk. .

would this be something that doc/examples could use?
( after i make it right, of course )

i have run this on linux/windows/and zaurus5500 :)

thanks,
cary


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: qtManhole.py
URL: </pipermail/twisted-python/attachments/20030216/6591c414/attachment.ksh>

From glyph at twistedmatrix.com  Sun Feb 16 11:33:49 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 16 Feb 2003 12:33:49 -0600
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <181B51AA-41DB-11D7-B93C-000A95686CD8@redivi.com>
Message-ID: <30EDE5A4-41DD-11D7-B314-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Sunday, February 16, 2003, at 12:18 PM, Bob Ippolito wrote:

( ... Lots of other people saying lots of other things ... )

> Well, can't you do it with os.execve(sys.executable, ...) ?

It occurs to me that we're exec'ing in any case, when we daemonize.  In 
the case where you don't daemonize, it's probably not too important to 
set argv[0] anyway.

Could we compromise on only setting it then?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+T9mRvVGR4uSOE2wRAq0sAKCTk2tGZI4mLCDhl78xdE8DwxqEngCfUdDW
1xLpgbXNqei3RGaUzvaAIZE=
=ch+L
-----END PGP SIGNATURE-----




From radix at twistedmatrix.com  Sun Feb 16 11:45:25 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 16 Feb 2003 13:45:25 -0500
Subject: [Twisted-Python] a qtManhole
In-Reply-To: <3E4F76AE.5070602@comcast.net>
References: <3E4F76AE.5070602@comcast.net>
Message-ID: <20030216184525.GA19353@radii>

On Sun, Feb 16, 2003 at 11:31:58AM +0000, cary wrote:
> i needed a qtManhole so i put a simple one together. .
> meaning it doesnt support snazzy manhole stuff,
> just basic "remote interp/shell" functionality. .

[snip]
 
> would this be something that doc/examples could use?
> ( after i make it right, of course )

It'd be better for twisted/manhole/ui/, with an additional argument to
`manhole' to specify the GUI toolkit to use. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Sun Feb 16 12:13:21 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Feb 2003 19:13:21 -0000
Subject: [Twisted-Python] A useful value for argv[0]
In-Reply-To: <30EDE5A4-41DD-11D7-B314-000393C9700E@twistedmatrix.com>
References: <30EDE5A4-41DD-11D7-B314-000393C9700E@twistedmatrix.com>
Message-ID: <20030216191321.3684.qmail@green.zadka.com>

On Sun, 16 Feb 2003, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> It occurs to me that we're exec'ing in any case, when we daemonize.  In 
> the case where you don't daemonize, it's probably not too important to 
> set argv[0] anyway.

Um...we fork, we don't exec.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From acapnotic at twistedmatrix.com  Sun Feb 16 12:17:04 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 16 Feb 2003 11:17:04 -0800
Subject: [Twisted-Python] a qtManhole
In-Reply-To: <3E4F76AE.5070602@comcast.net>
References: <3E4F76AE.5070602@comcast.net>
Message-ID: <1045422898.12896.97.camel@troglodyte.funhouse>

On Sun, 2003-02-16 at 03:31, cary wrote:
> does manhole.explorer work now?

For basic object-browsing, yes.  It doesn't have any update notification
or anything.  It's probably due for its annual code sanity audit.

-- 
The moon is full, 99.6% illuminated, 14.2 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030216/9e1c4353/attachment.sig>

From 2002 at weholt.org  Sun Feb 16 13:56:53 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Sun, 16 Feb 2003 21:56:53 +0100
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii>
Message-ID: <008301c2d5fd$f0f1dd20$0401a8c0@razor>

> On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
> > Christopher Armstrong <radix at twistedmatrix.com> writes:
> >
> > > you want to use .rpys
> >
> > A quick look through the documentation index doesn't show anything
> > that is obviously about .rpys.  How should the uninitiated be finding
> > out that they want to use them, if they don't even see a mention?
>
> Don't look so quickly.
>
> http://twistedmatrix.com/documents/howto/using-twistedweb
>
> There's an entire section about them there.

It's a bit unclear on where to put all the files created in the example,
where to put files to make them available in the generated *.tap-file etc.
Some lines about file organisation would be nice. More examples, more
details, step-by-step, for dummies approach, -- that's what I'm after.
Apparently I'm not the only one having trouble understanding the concepts of
rpys, resources and what not.

I'm slowly getting a grip on it, but there are still some things I must do
that I don't understand. If I get the time I'll try to document my findings
and make a more step-by-step guide for complete dummies on the matter.

Still, it seems like Twisted has enourmos potential. :-)

Thomas




From anthony at interlink.com.au  Sun Feb 16 18:12:28 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Mon, 17 Feb 2003 12:12:28 +1100
Subject: [Twisted-Python] A useful value for argv[0] 
In-Reply-To: <20030216100050.GD29796@radii> 
Message-ID: <200302170112.h1H1CSf25240@bonanza.off.ekorp.com>

>>> Christopher Armstrong wrote
> Nope. I think there was a patch for Python to allow it to be mutable,
> but nobody wanted to allow a change to main(), or something.

More accurately, no-one was willing to take on the platform-dependency
hell that it would cause. argv[0] setting works quite differently across
all sorts of different platforms.


-- 
Anthony Baxter     <anthony at interlink.com.au>   
It's never too late to have a happy childhood.




From bob at redivi.com  Sun Feb 16 18:46:39 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 16 Feb 2003 20:46:39 -0500
Subject: [Twisted-Python] A useful value for argv[0] 
In-Reply-To: <200302170112.h1H1CSf25240@bonanza.off.ekorp.com>
Message-ID: <A873C7D8-4219-11D7-B93C-000A95686CD8@redivi.com>

On Sunday, Feb 16, 2003, at 20:12 America/New_York, Anthony Baxter 
wrote:

>
>>>> Christopher Armstrong wrote
>> Nope. I think there was a patch for Python to allow it to be mutable,
>> but nobody wanted to allow a change to main(), or something.
>
> More accurately, no-one was willing to take on the platform-dependency
> hell that it would cause. argv[0] setting works quite differently 
> across
> all sorts of different platforms.

Yeah, for example, on OS X the WindowServer and application frameworks 
use it to determine the location of stuff in an application bundle -- 
and if it doesn't point inside an application bundle,  you're not 
allowed to make it a GUI application (unless it's CFM, or you  do some 
nasty unsupported undocumented stuff).  I've heard at least one Apple 
employee insinuate that this is a bug, but since that's been the state 
of affairs for over a year it's got a pretty low priority.

-bob




From m at moshez.org  Sun Feb 16 19:27:00 2003
From: m at moshez.org (Moshe Zadka)
Date: 17 Feb 2003 02:27:00 -0000
Subject: [Twisted-Python] session
In-Reply-To: <008301c2d5fd$f0f1dd20$0401a8c0@razor>
References: <008301c2d5fd$f0f1dd20$0401a8c0@razor>, <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii>
Message-ID: <20030217022700.6642.qmail@green.zadka.com>

On Sun, 16 Feb 2003, "Thomas Weholt" <2002 at weholt.org> wrote:

> It's a bit unclear on where to put all the files created in the example,
> where to put files to make them available in the generated *.tap-file etc.
> Some lines about file organisation would be nice. More examples, more
> details, step-by-step, for dummies approach, -- that's what I'm after.
> Apparently I'm not the only one having trouble understanding the concepts of
> rpys, resources and what not.

One of the tutorials for the upcoming PyCon is about Deployment, Configuration
and Usage of the Twisted Web Server (by Travis B. Hartwell). Just in case
any of you going there, this should be a pretty good introduction.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From golux at comcast.net  Sun Feb 16 23:23:07 2003
From: golux at comcast.net (Steve Waterbury)
Date: Mon, 17 Feb 2003 01:23:07 -0500
Subject: [Twisted-Python] twisted rooming scholarships for PyCon
Message-ID: <1045462987.1360.28.camel@golux>

Hey gang,

If anyone out there is coming to PyCon and hasn't yet 
made a reservation, I can accomodate one (or two, if 
they tolerate each other well ;^) at the waterbug mansion.  
(Yes "mansion" *is* a joke; my house is very humble!)
Chris Armstrong and Donovan Preston will be here Sunday 
eve, but they will be going to their hotels for the rest of 
their stay, so my living room (with convertible couch, 
and a futon for one more) is available the rest of the 
week.  I'm planning on attending the Twisted sprint, 
where I am hoping to enhance the twistification of my 
pangalactic app, and the rest of PyCon, so I can provide 
transpo into DC from Greenbelt where I live (a suburb 
just north) and back.  (If there are two people, one of 
them should be either a small person or very limber, as 
they will be riding in the back seat of a Mustang ;^).  
There's also a subway stop in Greenbelt, so in case you 
want to stay later I could pick you up there.

Cheers,
-- Steve.





From mario at ruggier.org  Mon Feb 17 02:19:27 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 17 Feb 2003 10:19:27 +0100
Subject: [Twisted-Python] man page web links broken
Message-ID: <E990C0EE-4258-11D7-8690-000393756786@ruggier.org>

Hi,

just to signal that all links on 
http://twistedmatrix.com/documents/man/index are broken...

mario




From cliechti at gmx.net  Sun Feb 16 16:28:45 2003
From: cliechti at gmx.net (Chris Liechti)
Date: Mon, 17 Feb 2003 00:28:45 +0100
Subject: [Twisted-Python] patch: win32serialport.py implementation
Message-ID: <NL31HEROJH94QL1W00893C4YOK43QM.3e501ead@rock>

here is an implementation for the serial port module for win32.

it uses a overlapped read of one character and when the event occours, it reads as much as possible from the buffer.
writes are overlapped too, meaning that if the send buffer of the os is full, that a python queue is used to save the output for later.
i hope that this gives a good performance, low latencies and short function calls.

note that i was not sucessful with the WaitCommEvent function that would allow event based programming not only for the data but 
also for the data lines. but this function is broken for overlapped IO in older win32all releases (fixed in newer ones) but i experienced 
crashes nontheless.
(setting up an overlapped wait, then using a WaitForSingleObject worked, but it did crash when using the win32 reactor of twisted. 
the crash was after the exit of the event handler, but before the control was back in the event loop of twisted. i guess there is some c-
stack corruption involved)

however, i think that the implementation below is a solid solution.

also note that i removed the timeout parameter from the twisted SerialPort class. i think it does not make sense as its event based.. 
even worse, a wrong timeout could cause malfunction. i sugest that the timeout parameter is removed in posixserial.py and 
javaserial.py too and inserting the default value in the instantiation of the internal Serial object (like i've done it below).

please cc me for comments, im not on the list, tnx.

chris

------------------ begin: Twisted/twisted/internet/serialport/win32serialport.py -----------------
# Twisted, the Framework of Your Internet
# Copyright (C) 2001-2002 Matthew W. Lefkowitz
# this module: cliechti at gmx.net
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of version 2.1 of the GNU Lesser General Public
# License as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""
Serial Port Protocol
"""

# system imports
import os, Queue

# dependent on pyserial ( http://pyserial.sf.net/ )
import serial
from serial import PARITY_NONE, PARITY_EVEN, PARITY_ODD
from serial import STOPBITS_ONE, STOPBITS_TWO
from serial import FIVEBITS, SIXBITS, SEVENBITS, EIGHTBITS
from serialport import BaseSerialPort
import win32file, win32event

# twisted imports
from twisted.protocols import basic
from twisted.internet import abstract
from twisted.python import log

class SerialPort(BaseSerialPort, abstract.FileDescriptor):
    """A select()able serial device, acting as a transport."""
    connected = 1

    def __init__(self, protocol, deviceNameOrPortNumber, reactor, 
        baudrate = 9600, bytesize = EIGHTBITS, parity = PARITY_NONE,
        stopbits = STOPBITS_ONE, xonxoff = 0, rtscts = 0):
        self._serial = serial.Serial(deviceNameOrPortNumber, baudrate = baudrate, bytesize = bytesize, parity = parity, stopbits = 
stopbits, timeout = None, xonxoff = xonxoff, rtscts = rtscts)
        self.flushInput()
        self.flushOutput()
        self.reactor = reactor
        self.protocol = protocol
        self.outQueue = Queue.Queue()
        self.closed = 0
        self.closedNotifies = 0
        self.write_in_progress = 0
        
        self.protocol = protocol
        self.protocol.makeConnection(self)
        self._overlapped_read = win32file.OVERLAPPED()
        self._overlapped_read.hEvent = win32event.CreateEvent(None, 0, 0, None)
        self._overlapped_write = win32file.OVERLAPPED()
        self._overlapped_write.hEvent = win32event.CreateEvent(None, 0, 0, None)
        
        self.reactor.addEvent(self._overlapped_read.hEvent, self, self.serialReadEvent)
        self.reactor.addEvent(self._overlapped_write.hEvent, self, self.serialWriteEvent)

        flags, comstat = win32file.ClearCommError(self._serial.hComPort)
        rc, self.read_buf = win32file.ReadFile(self._serial.hComPort, win32file.AllocateReadBuffer(1), self._overlapped_read)

    def serialReadEvent(self):
        #get that character we set up
        n = win32file.GetOverlappedResult(self._serial.hComPort, self._overlapped_read, 0)
        if n:
            first = str(self.read_buf[:n])
            #now we should get everything that is already in the buffer
            flags, comstat = win32file.ClearCommError(self._serial.hComPort)
            rc, buf = win32file.ReadFile(self._serial.hComPort, win32file.AllocateReadBuffer(comstat.cbInQue), self._overlapped_read)
            n = win32file.GetOverlappedResult(self._serial.hComPort, self._overlapped_read, 1)
            #handle all the received data:
            self.protocol.dataReceived(first + str(buf[:n]))

        #set up next one
        rc, self.read_buf = win32file.ReadFile(self._serial.hComPort, win32file.AllocateReadBuffer(1), self._overlapped_read)

    def write(self, data):
        #~ self._serial.write(data)
        if self.write_in_progress:
            #~ log.msg('adding to write queue')
            self.outQueue.put(data)
        else:
            #~ log.msg('write')
            self.write_in_progress = 1
            win32file.WriteFile(self._serial.hComPort, data, self._overlapped_write)

    def serialWriteEvent(self):
        try:
            dataToWrite = self.outQueue.get_nowait()
        except:
            self.write_in_progress = 0
            #~ log.msg('outQueue empty')
            return
        else:
            win32file.WriteFile(self._serial.hComPort, dataToWrite, self._overlapped_write)
    
    def connectionLost(self, reason):
        #~ log.msg('connectionLost')
        self.reactor.removeEvent(self._overlapped_read.hEvent)
        self.reactor.removeEvent(self._overlapped_write.hEvent)
        abstract.FileDescriptor.connectionLost(self, reason)
        self._serial.close()

------------------ end: Twisted/twisted/internet/serialport/win32serialport.py -----------------







From andrew-twisted at puzzling.org  Mon Feb 17 03:51:21 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 17 Feb 2003 21:51:21 +1100
Subject: [Twisted-Python] man page web links broken
In-Reply-To: <E990C0EE-4258-11D7-8690-000393756786@ruggier.org>
References: <E990C0EE-4258-11D7-8690-000393756786@ruggier.org>
Message-ID: <20030217105121.GD27513@frobozz.local>

On Mon, Feb 17, 2003 at 10:19:27AM +0100, Mario Ruggier wrote:
> Hi,
> 
> just to signal that all links on 
> http://twistedmatrix.com/documents/man/index are broken...

In the meantime, this page works:
    http://twistedmatrix.com/documents/man/index.xhtml

-Andrew.




From exarkun at intarweb.us  Mon Feb 17 12:13:00 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 17 Feb 2003 14:13:00 -0500
Subject: [Twisted-Python] Twisted Sister
Message-ID: <20030217191300.GA8726@meson.dyndns.org>

  Time and API changes seem to have taken their toll on twisted.sister. 
Currently, "mktap sister" fails with 

AttributeError: twisted.cred.authorizer.DefaultAuthorizer instance has no
accessor for: loadIdentity

  Obviously because DefaultAuthorizer doesn't provide loadIdentity -
TicketAuthorizer does.  I don't see any API for changing the authorizer of
an application, though.  A quick hack, setting app._authorizer =
TicketAuthorizer() at the beginning of sistap.py's updateApplication()
solves the problem, but this is probably the wrong approach.

  Does anyone know when or how the API sister relied on was changed, or have
any ideas about what should be done to fix it?

  Jp

-- 
 up 9 days, 0:28, 5 users, load average: 0.14, 0.09, 0.08
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030217/db030d64/attachment.sig>

From jbloom at cfa.harvard.edu  Mon Feb 17 15:56:56 2003
From: jbloom at cfa.harvard.edu (Joshua Bloom)
Date: Mon, 17 Feb 2003 17:56:56 -0500 (EST)
Subject: [Twisted-Python] newbie: asynchronous client
Message-ID: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>

I'd like to set up a non-blocking TCP client that loops indefinately,
waiting for the user to input something (which gets sent to the server)
but also responds to server replies whenever it can. So after I send
"factorial 1234" to the server, I'd like to be able to say "1 + 2" before
the server returns and get a response from that.

Thanks in advance for any pointers.

Josh Bloom



From exarkun at intarweb.us  Mon Feb 17 16:44:28 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 17 Feb 2003 18:44:28 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
Message-ID: <20030217234428.GB14752@meson.dyndns.org>

On Mon, Feb 17, 2003 at 05:56:56PM -0500, Joshua Bloom wrote:
> 
> I'd like to set up a non-blocking TCP client that loops indefinately,
> waiting for the user to input something (which gets sent to the server)
> but also responds to server replies whenever it can. So after I send
> "factorial 1234" to the server, I'd like to be able to say "1 + 2" before
> the server returns and get a response from that.
> 
> Thanks in advance for any pointers.

  Non-blocking user-input is the hardest part of this program.  That said,
if you go with one of the GUI toolkits that Twisted is integrated with, it
should be no problem (Qt, Gtk, Tk, PyUI, curses, wxWindows).  Their
mainloops are mashed into Twisted's in various ways, letting network and
user events happily co-exist.  If you go with another toolkit, you'll have
to find some way to accomplish the same mainloop integration.

  Examples for GUI apps are (surprise) in doc/examples/

  Jp

-- 
"Pascal is Pascal is Pascal is dog meat."
                -- M. Devine and P. Larson, Computer Science 340
-- 
 up 9 days, 4:28, 3 users, load average: 0.02, 0.06, 0.02
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030217/2b816604/attachment.sig>

From bob at redivi.com  Mon Feb 17 17:14:27 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 17 Feb 2003 19:14:27 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030217234428.GB14752@meson.dyndns.org>
Message-ID: <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>

On Monday, Feb 17, 2003, at 18:44 America/New_York, Jp Calderone wrote:

> On Mon, Feb 17, 2003 at 05:56:56PM -0500, Joshua Bloom wrote:
>>
>> I'd like to set up a non-blocking TCP client that loops indefinately,
>> waiting for the user to input something (which gets sent to the 
>> server)
>> but also responds to server replies whenever it can. So after I send
>> "factorial 1234" to the server, I'd like to be able to say "1 + 2" 
>> before
>> the server returns and get a response from that.
>>
>> Thanks in advance for any pointers.
>
>   Non-blocking user-input is the hardest part of this program.  That 
> said,
> if you go with one of the GUI toolkits that Twisted is integrated 
> with, it
> should be no problem (Qt, Gtk, Tk, PyUI, curses, wxWindows).  Their
> mainloops are mashed into Twisted's in various ways, letting network 
> and
> user events happily co-exist.  If you go with another toolkit, you'll 
> have
> to find some way to accomplish the same mainloop integration.
>
>   Examples for GUI apps are (surprise) in doc/examples/

Eh, if you're fine with line-based input (doesn't actually get data 
until user presses enter, and there's a way around that if necessary.. 
at least you can get around it in unix).  I've got some code below that 
you could use as a starting point.

I think that maybe there should be a tutorial on how to make 
interactive console Twisted programs using stdio and then another with 
curses/readline perhaps?

-bob

#!/usr/bin/env python
from twisted.protocols.basic import LineReceiver
from twisted.internet import reactor, stdio
class MyProtocol(LineReceiver):
	delimiter = '\n'
	def lineReceived(self, line):
		line = line.rstrip() # this sacrifices trailing white space and/or a 
possible '\r' if on windows?
		if line.lower() in ('quit', 'q'):
			reactor.stop()
		print "You just typed: %s" % (line,)

if __name__ == '__main__':
	# basically tie stdin to an instance of MyProtocol
	print 'type "q" or "quit" (sans quotes) to exit'
	stdio.StandardIO(MyProtocol())
	reactor.run()




From radix at twistedmatrix.com  Mon Feb 17 18:14:41 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 17 Feb 2003 20:14:41 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
Message-ID: <20030218011441.GA1527@radii>

On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> I think that maybe there should be a tutorial on how to make 
> interactive console Twisted programs using stdio and then another with 
> curses/readline perhaps?

FY(and the list's)I, doc/examples/cursesclient.py has an example IRC
client with a curses UI.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Mon Feb 17 18:46:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 12:46:22 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218011441.GA1527@radii>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218011441.GA1527@radii>
Message-ID: <20030218014622.GC30508@frobozz.local>

On Mon, Feb 17, 2003 at 08:14:41PM -0500, Christopher Armstrong wrote:
> On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> > I think that maybe there should be a tutorial on how to make 
> > interactive console Twisted programs using stdio and then another with 
> > curses/readline perhaps?
> 
> FY(and the list's)I, doc/examples/cursesclient.py has an example IRC
> client with a curses UI.

Perhaps this thread should be turned into a FAQ?

-Andrew.




From screwtape at froup.com  Mon Feb 17 18:28:21 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 18 Feb 2003 12:28:21 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com>
Message-ID: <20030218012820.GA15759@ferd2.thristian.org>

On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> I think that maybe there should be a tutorial on how to make 
> interactive console Twisted programs using stdio and then another with 
> curses/readline perhaps?

A reactor that integrated with the cmd.Cmd() event loop would be
wonderful. :)

(for those who haven't caught up with this nifty part of the Python
standard library, have a look at:

	http://www.python.org/doc/current/lib/Cmd-objects.html

for some detailed information.)

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "This plane is not equipped with vertices" -- Gold Inlaid Muffet
|



From andrew-twisted at puzzling.org  Mon Feb 17 19:24:10 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 13:24:10 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218012820.GA15759@ferd2.thristian.org>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218012820.GA15759@ferd2.thristian.org>
Message-ID: <20030218022410.GE30508@frobozz.local>

On Tue, Feb 18, 2003 at 12:28:21PM +1100, screwtape at froup.com wrote:
> On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> > I think that maybe there should be a tutorial on how to make 
> > interactive console Twisted programs using stdio and then another with 
> > curses/readline perhaps?
> 
> A reactor that integrated with the cmd.Cmd() event loop would be
> wonderful. :)
> 
> (for those who haven't caught up with this nifty part of the Python
> standard library, have a look at:
> 
> 	http://www.python.org/doc/current/lib/Cmd-objects.html
> 
> for some detailed information.)

Or just add a telnet server (is "telnet manhole" a better term?)... :)

-Andrew.




From kwaker at uch.net  Mon Feb 17 19:13:37 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 18 Feb 2003 04:13:37 +0200
Subject: [Twisted-Python] Using IConnector descendant
In-Reply-To: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
Message-ID: <109942648.20030218041337@uch.net>

Currently I have working SOCKS5-client Protocol, Connector and
ClientFactory classes. Almost working.

The question is: when I certainly done and my self.state in protocol
is "done" and transport pipe is ready, how to switch from SOCKS
protocol to underlying one?

Assuming I am inside Protocol object.

    def socks_gotConnectReply (self, data):
        """ Called after server accepts or rejects CONNECT method.
        """
        if data[:2] == "\x05\x00":
            # IMHO no need to analyze other fields of reply, we are done
            #
            self.state = "done"

+++ what to put here to switch from SOCKS to another protocol? +++

            return # do something after we are connected


-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From andrew-twisted at puzzling.org  Mon Feb 17 19:42:00 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 13:42:00 +1100
Subject: [Twisted-Python] Using IConnector descendant
In-Reply-To: <109942648.20030218041337@uch.net>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu> <109942648.20030218041337@uch.net>
Message-ID: <20030218024200.GF30508@frobozz.local>

On Tue, Feb 18, 2003 at 04:13:37AM +0200, Dmitry Litovchenko wrote:
> Currently I have working SOCKS5-client Protocol, Connector and
> ClientFactory classes. Almost working.
> 
> The question is: when I certainly done and my self.state in protocol
> is "done" and transport pipe is ready, how to switch from SOCKS
> protocol to underlying one?
> 
> Assuming I am inside Protocol object.
> 
>     def socks_gotConnectReply (self, data):
>         """ Called after server accepts or rejects CONNECT method.
>         """
>         if data[:2] == "\x05\x00":
>             # IMHO no need to analyze other fields of reply, we are done
>             #
>             self.state = "done"
> 
> +++ what to put here to switch from SOCKS to another protocol? +++

Probably something like:
    self.__class__ = self.otherProtocol
    self.connectionMade()

I don't know anything about SOCKS, but I've used this trick successfully
before, where I had to handshake with one protocol, then switch another
protocol for the rest of the connection.

-Andrew.




From anthony at interlink.com.au  Mon Feb 17 19:34:23 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 18 Feb 2003 13:34:23 +1100
Subject: [Twisted-Python] integrating twisted into an existing application
Message-ID: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>

I have a large complex application that I'd like to start migrating
to twisted, and I'd appreciate feedback on how to implement this.

It's a large (around 17KLOC) voicemail server that works with a cisco
AS5x00 to provide unified messaging. It talks RADIUS, RTSP and RTP to
the cisco, IMAP and SMTP to the message stores, and has a telnet 
interface for administration and debugging. The current implementation
has a separate thread for each of the RTSP, RADIUS and telnet listeners,
and spawns a thread for each incoming request. 

Internally it has a cache of IMAP connections - when a RADIUS request
or an RTSP request comes in, it grabs the cached IMAP connection for
the user and does the request.

A typical request looks like:

cisco sends a number of RADIUS requests to the server - login, selectFolder,
nextMessage, and gets back RADIUS responses with various attribute-value
pairs indicating things like 'number of unread messages' or 'message-type'
or the like. It then sends in an RTSP request to start the message playback -
the server pulls down the data from the message store, decodes it if 
necessary, sends it to a text-to-speech server if necessary, then spawns 
a small C program to handle the actual RTP playback to the cisco.

There's a bunch of thorny issues that have to be handled - obviously 
you have a number of operations that can block when talking to the IMAP
server, there's the shared imap connection cache, it's all rather ugly.

Initially I was thinking I'd replace the telnet listener with a 
twisted reactor running in it's own thread - this can then do the
telnet server (and maybe ssh server). Moving the RADIUS or RTSP 
listeners to twisted means I'd need to find a way to do the IMAP
and SMTP (for message sending) in an async manner - I'm not sure
on the best way to do this. My initial thought would be to have a
pool of IMAP handler threads; when a RADIUS request comes in that
needs IMAP, it grabs an IMAP thread that's free (or creates a new
one) and gets it to do the operation (and signal back when it's 
done). Is this sort of thing a typical way to handle a stateful
protocol like IMAP? 


--
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.




From kwaker at uch.net  Mon Feb 17 19:36:53 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 18 Feb 2003 04:36:53 +0200
Subject: [Twisted-Python] Using IConnector descendant
In-Reply-To: <20030218024200.GF30508@frobozz.local>
References: <Pine.SOL.4.53.0302171752440.18674@cfa0.cfa.harvard.edu>
 <109942648.20030218041337@uch.net> <20030218024200.GF30508@frobozz.local>
Message-ID: <462338749.20030218043653@uch.net>

Hello Andrew,

Tuesday, February 18, 2003, 4:42:00 AM, you wrote:

>> Assuming I am inside Protocol object.
>> 
>>     def socks_gotConnectReply (self, data):
>>         """ Called after server accepts or rejects CONNECT method.
>>         """
>>         if data[:2] == "\x05\x00":
>>             # IMHO no need to analyze other fields of reply, we are done
>>             #
>>             self.state = "done"
>> 
>> +++ what to put here to switch from SOCKS to another protocol? +++

AB> Probably something like:
AB>     self.__class__ = self.otherProtocol
AB>     self.connectionMade()

AB> I don't know anything about SOCKS, but I've used this trick successfully
AB> before, where I had to handshake with one protocol, then switch another
AB> protocol for the rest of the connection.

Cool, this may work, certainly. Thanks a lot.

Is this example repeats the original way, that IConnector inventor
thought everyone will use, or there are other variants?

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From screwtape at froup.com  Mon Feb 17 20:37:40 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Tue, 18 Feb 2003 14:37:40 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218022410.GE30508@frobozz.local>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218012820.GA15759@ferd2.thristian.org> <20030218022410.GE30508@frobozz.local>
Message-ID: <20030218033740.GB15759@ferd2.thristian.org>

On Tue, Feb 18, 2003 at 01:24:10PM +1100, Andrew Bennetts wrote:
> On Tue, Feb 18, 2003 at 12:28:21PM +1100, screwtape at froup.com wrote:
> > On Mon, Feb 17, 2003 at 07:14:27PM -0500, Bob Ippolito wrote:
> > > I think that maybe there should be a tutorial on how to make 
> > > interactive console Twisted programs using stdio and then another with 
> > > curses/readline perhaps?
> > 
> > A reactor that integrated with the cmd.Cmd() event loop would be
> > wonderful. :)
> > 
> > (for those who haven't caught up with this nifty part of the Python
> > standard library, have a look at:
> > 
> > 	http://www.python.org/doc/current/lib/Cmd-objects.html
> > 
> > for some detailed information.)
> 
> Or just add a telnet server (is "telnet manhole" a better term?)... :)

Advantages of the telnet manhole:
- A Python prompt, so you can manipulate all the objects you have
  available as much as you'd like.

Disadvantages of the telnet manhole:
- No history.
- No completion.
- No help.
- You have to telnet to a particular port to access it (you can only
  run one instance per host, and it makes it difficult to use a
  user-interactive program.

That said, there's probably something nifty that can be done with
curses. I've never done any curses programming, though, and usually
if I'm just whipping together a script, an eval-print loop is all the
interface I need.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| I've found that very little humour can be squeezed into 64 chara
|



From andrew-twisted at puzzling.org  Mon Feb 17 21:31:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 18 Feb 2003 15:31:12 +1100
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218033740.GB15759@ferd2.thristian.org>
References: <20030217234428.GB14752@meson.dyndns.org> <F138E9EE-42D5-11D7-B93C-000A95686CD8@redivi.com> <20030218012820.GA15759@ferd2.thristian.org> <20030218022410.GE30508@frobozz.local> <20030218033740.GB15759@ferd2.thristian.org>
Message-ID: <20030218043112.GJ30508@frobozz.local>

On Tue, Feb 18, 2003 at 02:37:40PM +1100, screwtape at froup.com wrote:
> On Tue, Feb 18, 2003 at 01:24:10PM +1100, Andrew Bennetts wrote:
> > 
> > Or just add a telnet server (is "telnet manhole" a better term?)... :)
> 
> Advantages of the telnet manhole:
> - A Python prompt, so you can manipulate all the objects you have
>   available as much as you'd like.
> 
> Disadvantages of the telnet manhole:
> - No history.
> - No completion.
> - No help.

What do you mean by help?

> - You have to telnet to a particular port to access it (you can only
>   run one instance per host, and it makes it difficult to use a
>   user-interactive program.

There will be an ssh variant soon, I'm told.

And from glancing at the code, it wouldn't be hard for it to have a seperate
namespace for each connection, if you wanted that.

> That said, there's probably something nifty that can be done with
> curses. I've never done any curses programming, though, and usually
> if I'm just whipping together a script, an eval-print loop is all the
> interface I need.

Depends on what you need, I guess.  As with everything :)

-Andrew.




From bob at redivi.com  Mon Feb 17 21:36:54 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 17 Feb 2003 23:36:54 -0500
Subject: [Twisted-Python] newbie: asynchronous client
In-Reply-To: <20030218043112.GJ30508@frobozz.local>
Message-ID: <9B750D94-42FA-11D7-B93C-000A95686CD8@redivi.com>

On Monday, Feb 17, 2003, at 23:31 America/New_York, Andrew Bennetts 
wrote:

> On Tue, Feb 18, 2003 at 02:37:40PM +1100, screwtape at froup.com wrote:
>> On Tue, Feb 18, 2003 at 01:24:10PM +1100, Andrew Bennetts wrote:
>>>
>>> Or just add a telnet server (is "telnet manhole" a better term?)... 
>>> :)

There shouldn't be much, if anything, stopping you from creating a 
"stdio manhole" by using the console as the transport.. with or without 
curses!

-bob




From twisted at moshez.org  Tue Feb 18 00:14:23 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 07:14:23 -0000
Subject: [Twisted-Python] integrating twisted into an existing application
In-Reply-To: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
References: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
Message-ID: <20030218071423.10574.qmail@green.zadka.com>

On Tue, 18 Feb 2003, Anthony Baxter <anthony at interlink.com.au> wrote:

> There's a bunch of thorny issues that have to be handled - obviously 
> you have a number of operations that can block when talking to the IMAP
> server, there's the shared imap connection cache, it's all rather ugly.

In general, in Twisted caches should be handled by things like Services.
The simplest Service (which doesn't do caching, but hopefully should show
the way) which does something non-trivial is in twisted/runner/procmon.py

> Initially I was thinking I'd replace the telnet listener with a 
> twisted reactor running in it's own thread - this can then do the
> telnet server (and maybe ssh server). Moving the RADIUS or RTSP 
> listeners to twisted means I'd need to find a way to do the IMAP
> and SMTP (for message sending) in an async manner - I'm not sure
> on the best way to do this.

Well, SMTP is already supported by Twisted (see twisted/protocols/smtp.py).
IMAP isn't...but my inclination would be to drink the whole kool-aid and just
go with async connections instead of threads.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From twisted at moshez.org  Tue Feb 18 06:10:43 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 13:10:43 -0000
Subject: [Twisted-Python] twisted.web.server.Request.notifyFinish
Message-ID: <20030218131043.1358.qmail@green.zadka.com>

After asked how to know when the other side has terminated a web connection,
and noticing there wasn't a way I've added the above mentioned method.
It is documented in using-twistedweb.

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From twisted at itamarst.org  Tue Feb 18 08:56:14 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Feb 2003 10:56:14 -0500
Subject: [Twisted-Python] integrating twisted into an existing application
In-Reply-To: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
References: <200302180234.h1I2YNe21063@bonanza.off.ekorp.com>
Message-ID: <20030218105614.12d7ae52.twisted@itamarst.org>

On Tue, 18 Feb 2003 13:34:23 +1100
Anthony Baxter <anthony at interlink.com.au> wrote:

> Initially I was thinking I'd replace the telnet listener with a 
> twisted reactor running in it's own thread - this can then do the
> telnet server (and maybe ssh server). Moving the RADIUS or RTSP 
> listeners to twisted means I'd need to find a way to do the IMAP
> and SMTP (for message sending) in an async manner - I'm not sure
> on the best way to do this. My initial thought would be to have a
> pool of IMAP handler threads; when a RADIUS request comes in that
> needs IMAP, it grabs an IMAP thread that's free (or creates a new
> one) and gets it to do the operation (and signal back when it's 
> done). Is this sort of thing a typical way to handle a stateful
> protocol like IMAP? 

No, the typical way is to use an async protocol with Deferreds instead
of threads. Basically, anytime your blocking protocol would have a
command
"do something and block until we get result", you would instead of
blocking get a Deferred of the result. An example of this is in action
is the FTPClient protocol (twisted.protocols.ftp).

See http://twistedmatrix.com/documents/howto/defer

Downside is that you need to implement an IMAP client for Twisted. You
might be interested in looking at PyRAD too, btw, since it has
some sort of basic Twisted support in the latest version.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From fog at initd.org  Tue Feb 18 09:08:23 2003
From: fog at initd.org (Federico Di Gregorio)
Date: 18 Feb 2003 17:08:23 +0100
Subject: [Twisted-Python] quoting strings in db transactions
Message-ID: <1045584503.1898.48.camel@momo.initd.org>

hi *,

i'm going through the twisted.enterprise python code and i find almost
everywhere commens as:

        safe(text) 
        Make a string safe to include in an SQL statement

or 
        escape_string(self, text) 
        Escape a string for use in an SQL statement.
        
imho, this is plain wrong. twisted uses dbapi compliant adapters and
they *should* provide safe argument quoting (as per DBAPI-2.0.) it is
almost impossible to manage the quoting the right way for every db
adapter, but it is possible to call the driver the right way and let it
do the quoting.

or did i missed something?

also, how much mature is the enterprise code? it is a stable API or
there is space for contributions?

-- 
Federico Di Gregorio
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Mi piace schioccare la lingua fortemente.
                                        -- Maria Luisa Benedetta Panzani
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030218/631f4654/attachment.sig>

From abe at fettig.net  Tue Feb 18 10:55:10 2003
From: abe at fettig.net (Abe Fettig)
Date: 18 Feb 2003 12:55:10 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
Message-ID: <1045590910.654.46.camel@mingus>

Hi all,

This weekend I started playing around with twisted.web, and I'm really
impressed.  This is great stuff.  I'd like to port the web interface for
Hep over to twisted.web (the current version uses twisted.protocols.http
only), but I'm having trouble figuring out the best way to accomplish
what I want.

So far I've set up a server that processes .epy files using
twisted.web.script.PythonScript.  This would be fine, except that it
doesn't seem to let me do asynchronous things - I can start a deferred,
and set the callback to request.write(something), but then it never gets
called.

twisted.web.widgets looked like the logical place to go next, but then  
http://twistedmatrix.com/documents/howto/widgets says that widgets are
depriciated in favor of Woven.  But Woven is kind of a lot to get my
head around at the moment, and it looks like I'd have to rewrite all my
code to use it.  Is that really the only solution?  If so, is there an
example of a woven page that runs a deferred function and then writes
some output when it gets a callback?

Also, I'm having trouble with twisted.web.static.Registry.  All I want
to is make a set of objects available to all the pages in my site. I
don't understand how a Registry object uses interfaces, or even why its
neccessary to use interfaces at all.  Is there a way to access objects
in the registry by name?  Some sample code would helpe me here, too.

Thanks!
-- 
Abe Fettig <abe at fettig.net>




From twisted at moshez.org  Tue Feb 18 11:11:55 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 18:11:55 -0000
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <1045590910.654.46.camel@mingus>
References: <1045590910.654.46.camel@mingus>
Message-ID: <20030218181155.11286.qmail@green.zadka.com>

On 18 Feb 2003, Abe Fettig <abe at fettig.net> wrote:

> So far I've set up a server that processes .epy files using
> twisted.web.script.PythonScript.

You don't want that. Use resource scripts.

> This would be fine, except that it
> doesn't seem to let me do asynchronous things - I can start a deferred,
> and set the callback to request.write(something), but then it never gets
> called.

PythonScripts bad. ResourceScripts good. In resource scripts, you
just return server.NOT_DONE_YET and everything is fine.
(See using-twistedweb.html)

> Also, I'm having trouble with twisted.web.static.Registry.  All I want
> to is make a set of objects available to all the pages in my site. I
> don't understand how a Registry object uses interfaces, or even why its
> neccessary to use interfaces at all.  Is there a way to access objects
> in the registry by name?  Some sample code would helpe me here, too.

Read the HOWTO mentioned above. It should answer all your questions.
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From abe at fettig.net  Tue Feb 18 12:28:57 2003
From: abe at fettig.net (Abe Fettig)
Date: 18 Feb 2003 14:28:57 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <20030218181155.11286.qmail@green.zadka.com>
References: <1045590910.654.46.camel@mingus>
	 <20030218181155.11286.qmail@green.zadka.com>
Message-ID: <1045596536.648.59.camel@mingus>

On Tue, 2003-02-18 at 13:11, Moshe Zadka wrote:
> On 18 Feb 2003, Abe Fettig <abe at fettig.net> wrote:
> 
> > So far I've set up a server that processes .epy files using
> > twisted.web.script.PythonScript.
> 
> You don't want that. Use resource scripts.

Thanks for pointing me in the right direction.

> > Also, I'm having trouble with twisted.web.static.Registry.  All I want
> > to is make a set of objects available to all the pages in my site. I
> > don't understand how a Registry object uses interfaces, or even why its
> > neccessary to use interfaces at all.  Is there a way to access objects
> > in the registry by name?  Some sample code would helpe me here, too.
> 
> Read the HOWTO mentioned above. It should answer all your questions.

I had read that HOWTO, but I see now that there's an improved version on
the Twisted web site.  That's what I was looking for, thanks!

Abe

p.s. Any chance of an updated twisted-doc package being released in the
near future?  I do a lot of development offline so I usually refer to my
local copy of the documentation.
-- 
Abe Fettig <abe at fettig.net>




From kwaker at uch.net  Tue Feb 18 12:45:44 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Tue, 18 Feb 2003 21:45:44 +0200
Subject: [Twisted-Python] Using IConnector
Message-ID: <5230628315.20030218214544@uch.net>

I certainly need a brief sample of how to use reactor.connectWith and
how to set up Protocol so that it correctly switches to another
Protocol and initializes it.

Example with:

    self.__class__ = anotherProto.__class__
    self.connectionMade()

is good but not enough. Constructor must be called at least and
parameters should be passed to it.

If I solve this problem in my way this may be incompatible with the
whole Twisted ideology, which I currently don't know well. But I need
to know the right way because I intend to create SOCKS 4, 5 and HTTP
tunnel modules not for my use only but to contribute to Twisted.

Please advise, I don't want to produce working code that works for me
only while violating ten tons of Twisted conventions that are
undocumented and invisible for me.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net





From radix at twistedmatrix.com  Tue Feb 18 13:09:21 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 18 Feb 2003 15:09:21 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <1045596536.648.59.camel@mingus>
References: <1045590910.654.46.camel@mingus> <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus>
Message-ID: <20030218200921.GG1527@radii>

On Tue, Feb 18, 2003 at 02:28:57PM -0500, Abe Fettig wrote:
> p.s. Any chance of an updated twisted-doc package being released in the
> near future?  I do a lot of development offline so I usually refer to my
> local copy of the documentation.

I assume you mean Debian packages, since you said `twisted-doc'. If
not, get the latest Twisted tarball, which contains the documentation
(as opposed to Twisted_NoDocs). If so, use the up-to-date
twisted-debian repository. From the web site::

Debian

Debian users can add the following to their /etc/apt/sources.list:

    Woody: deb http://twisted.sourceforge.net/debian/woody/ ./
    Sid/Sarge: deb http://twisted.sourceforge.net/debian/ ./


The latest packages in that repository are always the latest alpha,
RC, or Release. Debian proper only gets updated every official release
(well, when we feel the release is good enough to go into Debian
proper, anyway).


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From 2002 at weholt.org  Tue Feb 18 13:11:03 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Tue, 18 Feb 2003 21:11:03 +0100
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
Message-ID: <003601c2d789$dd548370$0401a8c0@razor>

I need to authenticate users using basic HTTP authentication and the code below works on Mozilla, Opera, that awful KDE browser ;-) and whatever else I throw at it, EXCEPT MSIE. Most of my potential users are MS IE addicts so this is a key point in my project. The code below are ported from a previous project based on BaseHTTPServer. It might be that I didn't send a end_headers-header before sending the plain-text content. This was done in the BaseHTTPServer-solution, but I didn't find any such code in Twisted.

   def render(self, request):
        username = request.getUser()
        password = request.getPassword()
        if not username or not password:
            request.setResponseCode(401, 'Authentication needed')
            request.setHeader('Connection', 'close')
            request.setHeader('WWW-Authenticate', 'Basic realm="%s"' % 'default')
            request.setHeader('Content-Length', str(len('401: Authorization needed.')))
            request.setHeader('Content-Type', 'text/html')
            return '<h1>401 Authentication required</h1>%s' % msg
    # else process the request in a normal way


How can I use Twisted to authenticate users using basic HTTP authentication? Are there any example on how to use the cred-module in Twisted to authenticate users? 

Any information on this issue would be highly appreciated. Ideas on how to maintain user-information and implement security policies in Twisted, especially web-based Twisted-apps are also very interesting.

Best regards,
Thomas Weholt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030218/49f005bf/attachment.html>

From radix at twistedmatrix.com  Tue Feb 18 13:20:10 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 18 Feb 2003 15:20:10 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <5230628315.20030218214544@uch.net>
References: <5230628315.20030218214544@uch.net>
Message-ID: <20030218202010.GH1527@radii>

On Tue, Feb 18, 2003 at 09:45:44PM +0200, Dmitry Litovchenko wrote:
> I certainly need a brief sample of how to use reactor.connectWith and
> how to set up Protocol so that it correctly switches to another
> Protocol and initializes it.
> 
> Example with:
> 
>     self.__class__ = anotherProto.__class__
>     self.connectionMade()

You're probably better off proxying through to the other
Protocol. Changing __class__ is horrible because the two classes may
have conflicting assumptions about the self namespace. I don't know
anything about connectWith, though.

I think there's some other code somewhere in Twisted where one
Protocol wraps another.. Anyone remember where?


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Tue Feb 18 13:24:39 2003
From: m at moshez.org (Moshe Zadka)
Date: 18 Feb 2003 20:24:39 -0000
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <20030218200921.GG1527@radii>
References: <20030218200921.GG1527@radii>, <1045590910.654.46.camel@mingus> <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus>
Message-ID: <20030218202439.12222.qmail@green.zadka.com>

On Tue, 18 Feb 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> I assume you mean Debian packages, since you said `twisted-doc'. If
> not, get the latest Twisted tarball, which contains the documentation
> (as opposed to Twisted_NoDocs). If so, use the up-to-date
> twisted-debian repository. From the web site::
> 
> Debian
> 
> Debian users can add the following to their /etc/apt/sources.list:
> 
>     Woody: deb http://twisted.sourceforge.net/debian/woody/ ./
>     Sid/Sarge: deb http://twisted.sourceforge.net/debian/ ./

And if you need the auto-generated docs, twisted-doc-api
 
-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From twisted at itamarst.org  Tue Feb 18 13:35:16 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 18 Feb 2003 15:35:16 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <20030218202010.GH1527@radii>
References: <5230628315.20030218214544@uch.net>
	<20030218202010.GH1527@radii>
Message-ID: <20030218153516.015fbfaf.twisted@itamarst.org>

On Tue, 18 Feb 2003 15:20:10 -0500
Christopher Armstrong <radix at twistedmatrix.com> wrote:

> I think there's some other code somewhere in Twisted where one
> Protocol wraps another.. Anyone remember where?

twisted.protocols.policies does that, IIRC.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From jepler at unpythonic.net  Tue Feb 18 15:00:18 2003
From: jepler at unpythonic.net (Jeff Epler)
Date: Tue, 18 Feb 2003 16:00:18 -0600
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
In-Reply-To: <003601c2d789$dd548370$0401a8c0@razor>
References: <003601c2d789$dd548370$0401a8c0@razor>
Message-ID: <20030218220018.GD22051@unpythonic.net>

On Tue, Feb 18, 2003 at 09:11:03PM +0100, Thomas Weholt wrote:
>             request.setHeader('Content-Length', str(len('401: Authorization needed.')))
...
>             return '<h1>401 Authentication required</h1>%s' % msg

Your Content-Length and actual body are different.  This may be the
point at which all hell breaks loose.

Jeff



From golux at comcast.net  Tue Feb 18 15:43:35 2003
From: golux at comcast.net (Steve Waterbury)
Date: Tue, 18 Feb 2003 17:43:35 -0500
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <20030218202439.12222.qmail@green.zadka.com>
References: <20030218200921.GG1527@radii> <1045590910.654.46.camel@mingus>
 <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus>
 <20030218202439.12222.qmail@green.zadka.com>
Message-ID: <1045608216.6772.25.camel@golux>

On Tue, 2003-02-18 at 15:24, Moshe Zadka wrote:
> And if you need the auto-generated docs, twisted-doc-api

... and speaking of which, admin/generate-lore works 
(again) -- thanks, Moshe!  BTW, one teensy little nit 
on the generated pdf:  the date is still set to show
October 24, 2002 ... I know it should be later than that!

Cheers,
-- Steve.





From 2002 at weholt.org  Tue Feb 18 16:07:05 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Wed, 19 Feb 2003 00:07:05 +0100
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
References: <003601c2d789$dd548370$0401a8c0@razor> <20030218220018.GD22051@unpythonic.net>
Message-ID: <005701c2d7a2$74f56bf0$0401a8c0@razor>

Thanks for the tip.

Changed the code to use the same content for both the body and the
Content-Length-header. Still no go. Isn't there a special Twisted way of
doing this? My curreny solution is as I said earlier a dirty hack based on
code from BaseHTTPServer.

Anybody else has this kind of authentication going in their application who
can spare a few lines of code as an example ???

Thomas


----- Original Message -----
From: "Jeff Epler" <jepler at unpythonic.net>
To: <twisted-python at twistedmatrix.com>
Sent: Tuesday, February 18, 2003 11:00 PM
Subject: Re: [Twisted-Python] Basic HTTP Authentication in Twisted.web


> On Tue, Feb 18, 2003 at 09:11:03PM +0100, Thomas Weholt wrote:
> >             request.setHeader('Content-Length', str(len('401:
Authorization needed.')))
> ...
> >             return '<h1>401 Authentication required</h1>%s' % msg
>
> Your Content-Length and actual body are different.  This may be the
> point at which all hell breaks loose.
>
> Jeff
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>




From acapnotic at twistedmatrix.com  Tue Feb 18 16:19:41 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 18 Feb 2003 15:19:41 -0800
Subject: [Twisted-Python] Re: IRCClient
In-Reply-To: <Pine.SOL.4.44.0302181526510.12877-100000@rac2.wam.umd.edu>
References: <Pine.SOL.4.44.0302181526510.12877-100000@rac2.wam.umd.edu>
Message-ID: <1045610379.2997.55.camel@troglodyte.funhouse>

(I'm sending this to the Twisted list, please feel free to follow-up
there.)

On Tue, 2003-02-18 at 12:33, Konrad Rokicki wrote:
> I just started working with the IRCClient class (twisted.protocols.irc)
> and unless I'm mistaken, it is missing some features like a userQuit event
> and handling of NAMREPLY (for getting a list of users in a channel).
> I was wondering if this module is still being actively developed and if I
> should submit patches to do those sorts of things.

What would you have them do?  The protocol does not dictate any response
to these messages, and protocols.irc.IRCClient is intended to be an
implementation of just the IRC client protocol.  The class is designed
to be extensible so its users can subclass it and define their own
irc_QUIT and irc_RPL_NAMREPLY methods.  The decision of what to do when
you receive such a message is up to the application, I think.

Really, the interface involving NAMREPLY should look more like
"group.getMembers() returns a Deferred list of Persons," which doesn't
go in the wire-level twisted.protocols package.  Development of
high-level interfaces for chat clients is happening in twisted.im;
currently with support for IRC, twisted.words, and TOC (and OSCAR and
MSN any moment now, right guys?).  

That said, twisted.im is a pretty scary place right now: there are
things not covered by the interface, the implementation is a bit of a
mess, there's no test coverage, and it's rather unstable as I have to go
in there and mess around with things whenever I discover that what I was
trying to do with it just wasn't possible.  So, I'd understand if you
decide to stick with extending IRCClient instead, but twisted.im is
where we're really looking to develop an interface for chat clients
(both user-interactive and autonomous), and it could use a few more
user-developers (not to mention a loving maintainer) to help define its
needs.

Regards,

 - Kevin Turner,
   reluctant maintainer of twisted.protocols.irc

-- 
The moon is waning gibbous, 96.5% illuminated, 16.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030218/8a64972c/attachment.sig>

From exarkun at intarweb.us  Tue Feb 18 16:47:57 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 18 Feb 2003 18:47:57 -0500
Subject: [Twisted-Python] Conch traceback
Message-ID: <20030218234757.GA14522@meson.dyndns.org>

  When starting multiple conch sessions, those started after the first give:

exarkun:~$ !conch
conch twistedmatrix.com
exarkun at twistedmatrix.com's password:
Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
--- <exception caught here> ---
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 197, in dataReceived
    self.service.packetReceived(ord(packet[0]), packet[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/service.py", line 51, in packetReceived
    f(packet)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/userauth.py", line 231, in ssh_USERAUTH_SUCCESS
    self.transport.setService(self.instance)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 227, in setService
    self.service.serviceStarted()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 620, in serviceStarted
    onConnect()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 206, in onConnect
    reactor.listenUNIX(filename, SSHUnixServerFactory()).numberAccepts = 1
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 223, in listenUNIX
    p.startListening()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/unix.py", line 70, in startListening
    raise CannotListenError, (None, self.port, le)
twisted.internet.error.CannotListenError: Couldn't listen on any:/home/exarkun/.conch-exarkun-twistedmatrix.com-22: (98, 'Address already in use')
Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
--- <exception caught here> ---
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 457, in doSelect
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 197, in dataReceived
    self.service.packetReceived(ord(packet[0]), packet[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/service.py", line 51, in packetReceived
    f(packet)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/userauth.py", line 231, in ssh_USERAUTH_SUCCESS
    self.transport.setService(self.instance)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 227, in setService
    self.service.serviceStarted()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 620, in serviceStarted
    onConnect()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 206, in onConnect
    reactor.listenUNIX(filename, SSHUnixServerFactory()).numberAccepts = 1
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 223, in listenUNIX
    p.startListening()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/unix.py", line 70, in startListening
    raise CannotListenError, (None, self.port, le)
twisted.internet.error.CannotListenError: Couldn't listen on any:/home/exarkun/.conch-exarkun-twistedmatrix.com-22: (98, 'Address already in use')
Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 127, in mainLoop
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 457, in doSelect
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 197, in dataReceived
    self.service.packetReceived(ord(packet[0]), packet[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/service.py", line 51, in packetReceived
    f(packet)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/userauth.py", line 231, in ssh_USERAUTH_SUCCESS
    self.transport.setService(self.instance)
  File "/home/exarkun/projects/python/Twisted/twisted/conch/ssh/transport.py", line 227, in setService
    self.service.serviceStarted()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 620, in serviceStarted
    onConnect()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 206, in onConnect
    reactor.listenUNIX(filename, SSHUnixServerFactory()).numberAccepts = 1
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 223, in listenUNIX
    p.startListening()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/unix.py", line 70, in startListening
    raise CannotListenError, (None, self.port, le)
twisted.internet.error.CannotListenError: Couldn't listen on any:/home/exarkun/.conch-exarkun-twistedmatrix.com-22: (98, 'Address already in use')

  Jp

-- 
http://catandgirl.com/view.cgi?44
-- 
 up 10 days, 4:28, 4 users, load average: 0.08, 0.07, 0.03
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030218/f2c67eed/attachment.sig>

From andrew-twisted at puzzling.org  Tue Feb 18 17:29:07 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Feb 2003 11:29:07 +1100
Subject: [Twisted-Python] quoting strings in db transactions
In-Reply-To: <1045584503.1898.48.camel@momo.initd.org>
References: <1045584503.1898.48.camel@momo.initd.org>
Message-ID: <20030219002907.GA32233@frobozz.local>

On Tue, Feb 18, 2003 at 05:08:23PM +0100, Federico Di Gregorio wrote:
> hi *,
> 
> i'm going through the twisted.enterprise python code and i find almost
> everywhere commens as:
> 
>         safe(text) 
>         Make a string safe to include in an SQL statement
> 
> or 
>         escape_string(self, text) 
>         Escape a string for use in an SQL statement.
>         
> imho, this is plain wrong. twisted uses dbapi compliant adapters and
> they *should* provide safe argument quoting (as per DBAPI-2.0.) it is
> almost impossible to manage the quoting the right way for every db
> adapter, but it is possible to call the driver the right way and let it
> do the quoting.

They should provide it -- but they provide it differently, which
unfortunately DBAPI-2.0 allows.  See the docs for the 'paramstyle' module
attribute at:
    http://www.python.org/topics/database/DatabaseAPI-2.0.html

I don't see any sane way to provide safe automatic quoting in adbapi, but
I'd love to be proved wrong.

> also, how much mature is the enterprise code? it is a stable API or
> there is space for contributions?

The module and package docstrings don't have a "Stability: ..." line, so
the API is officially unstable.  Patches are welcome :)

-Andrew.




From skin_pup-twisted at damnable.happypoo.com  Tue Feb 18 18:13:14 2003
From: skin_pup-twisted at damnable.happypoo.com (Skinny Puppy)
Date: Tue, 18 Feb 2003 20:13:14 -0500
Subject: [Twisted-Python] TLS support for twisted (PATCH)
In-Reply-To: <20030205213639.74b3b797.twisted@itamarst.org>
References: <20030206011632.GP32425@shitbomb.com> <20030205213639.74b3b797.twisted@itamarst.org>
Message-ID: <20030219011314.GC65611@shitbomb.com>

> > Attached is the patch for TLS support within twisted.  It is not the
> > best code,  but it passes all the SSL test (None working on that next)
> > and works.  The diff also adds an echoclient_tls.py/echoserv_tls.py,
> > that work along with the echoclient_ssl.py/echoserv_tls.py
> 
> Neato! I don't have time to look at it right now, but it *will* be
> looked at sooner or later. If I don't check this in within a week bug me
> personally.

As requested I be buggin' you.  I have been keeping the patch update with CVS
twisted.  If you need that just say so.  I am bored again so will most
like try getting mail to support TLS and maybe the web server (no client
I know of uses it but still cool factor).  It also seams a perfect match
for pb and changing your perspective right/permissions based if TLS is
started, but I think that will take some learning first.  

Jeremy




From bob at mastersofbranding.com  Tue Feb 18 13:28:02 2003
From: bob at mastersofbranding.com (Bob Ippolito)
Date: Tue, 18 Feb 2003 15:28:02 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <5230628315.20030218214544@uch.net>
Message-ID: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>

On Tuesday, Feb 18, 2003, at 14:45 America/New_York, Dmitry Litovchenko 
wrote:

> I certainly need a brief sample of how to use reactor.connectWith and
> how to set up Protocol so that it correctly switches to another
> Protocol and initializes it.
>
> Example with:
>
>     self.__class__ = anotherProto.__class__
>     self.connectionMade()
>
> is good but not enough. Constructor must be called at least and
> parameters should be passed to it.
>
> If I solve this problem in my way this may be incompatible with the
> whole Twisted ideology, which I currently don't know well. But I need
> to know the right way because I intend to create SOCKS 4, 5 and HTTP
> tunnel modules not for my use only but to contribute to Twisted.
>
> Please advise, I don't want to produce working code that works for me
> only while violating ten tons of Twisted conventions that are
> undocumented and invisible for me.

Ok, well, I can't speak for this part of twisted.. but I *think* the 
proper way would be to make it a Transport, not a Protocol.   For 
example, if you were behind a stupid firewall and you wanted to make 
connections to another host outside of the firewall, you would have to 
refactor a lot less code if it could just be a transport.

Just an idea, again, I'm not an authority on this in any way.

-bob




From kwaker at uch.net  Tue Feb 18 19:06:11 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Wed, 19 Feb 2003 04:06:11 +0200
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
References: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
Message-ID: <2453458772.20030219040611@uch.net>

Hello Bob,

Tuesday, February 18, 2003, 10:28:02 PM, you wrote:

>> Please advise, I don't want to produce working code that works for me
>> only while violating ten tons of Twisted conventions that are
>> undocumented and invisible for me.

BI> Ok, well, I can't speak for this part of twisted.. but I *think* the 
BI> proper way would be to make it a Transport, not a Protocol.   For 
BI> example, if you were behind a stupid firewall and you wanted to make 
BI> connections to another host outside of the firewall, you would have to 
BI> refactor a lot less code if it could just be a transport.

BI> Just an idea, again, I'm not an authority on this in any way.

All right. But I currently have working example of SOCKS5 which sends
email (using standard SMTPSenderFactory and whatever protocol it
spawns) to my local SMTP server. All I provide is socks host and port
and plus SMTPSenderFactory filled with mail data. May this be called
"much refactoring" ?

Transport is not involved, only set of SOCKS5Connector, SOCKS5ClientFactory
and SOCKS5ClientProtocol.

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From radix at twistedmatrix.com  Tue Feb 18 19:10:47 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 18 Feb 2003 21:10:47 -0500
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
References: <5230628315.20030218214544@uch.net> <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
Message-ID: <20030219021047.GA1168@radii>

On Tue, Feb 18, 2003 at 03:28:02PM -0500, Bob Ippolito wrote:
> Ok, well, I can't speak for this part of twisted.. but I *think* the 
> proper way would be to make it a Transport, not a Protocol.   For 
> example, if you were behind a stupid firewall and you wanted to make 
> connections to another host outside of the firewall, you would have to 
> refactor a lot less code if it could just be a transport.
> 
> Just an idea, again, I'm not an authority on this in any way.

I'm not sure why I didn't think of this earlier, but yes, it does
sound like a transport is the way to go -- it's exactly the kind of
thing that the transport/protocol separation was done for.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From kwaker at uch.net  Tue Feb 18 20:09:10 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Wed, 19 Feb 2003 05:09:10 +0200
Subject: [Twisted-Python] Using IConnector
In-Reply-To: <20030219021047.GA1168@radii>
References: <5230628315.20030218214544@uch.net>
 <7A6E8BC6-437F-11D7-B93C-000A95686CD8@mastersofbranding.com>
 <20030219021047.GA1168@radii>
Message-ID: <5557238876.20030219050910@uch.net>

Hello Christopher,

Wednesday, February 19, 2003, 4:10:47 AM, you wrote:

>> Ok, well, I can't speak for this part of twisted.. but I *think* the
>> proper way would be to make it a Transport, not a Protocol.   For 
>> example, if you were behind a stupid firewall and you wanted to make 
>> connections to another host outside of the firewall, you would have to 
>> refactor a lot less code if it could just be a transport.
>> 
>> Just an idea, again, I'm not an authority on this in any way.

CA> I'm not sure why I didn't think of this earlier, but yes, it does
CA> sound like a transport is the way to go -- it's exactly the kind of
CA> thing that the transport/protocol separation was done for.

Ok, I agree that transport sounds better, will refactor later today.
When should I attach new transport (instead of standard TCP) and how
client code, that connects to some host using SOCKS, will look like?

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net





From sean at twistedmatrix.com  Tue Feb 18 20:52:01 2003
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 18 Feb 2003 21:52:01 -0600
Subject: [Twisted-Python] quoting strings in db transactions
In-Reply-To: <1045584503.1898.48.camel@momo.initd.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGAEJMCJAA.sean@twistedmatrix.com>

Hello,

The twisted enterprise was in use for an on-line game development project at
Ninjaneering (http://www.ninjaneering.com) and I was the primary user, but
unfortunately, I am no longer at that company and future of the project may
be going in a different direction.

I'd say the twisted.enterprise code is relatively solid at what it does, but
its functionality is only really useful in a limited set of circumstances.
There have been some discussions about extending its functionality, but I no
longer have any time to devote to it. So, there is definitely room for
contributions :)

Regarding the particular issue of quoting strings, I was not aware of a
database independant way of safely quoting strings when that code was
written - is that actually part of the DBAPI?

Sean

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Federico Di
Gregorio
Sent: Tuesday, February 18, 2003 10:08 AM
To: Twisted Mailing List
Subject: [Twisted-Python] quoting strings in db transactions


hi *,

i'm going through the twisted.enterprise python code and i find almost
everywhere commens as:

        safe(text)
        Make a string safe to include in an SQL statement

or
        escape_string(self, text)
        Escape a string for use in an SQL statement.

imho, this is plain wrong. twisted uses dbapi compliant adapters and
they *should* provide safe argument quoting (as per DBAPI-2.0.) it is
almost impossible to manage the quoting the right way for every db
adapter, but it is possible to call the driver the right way and let it
do the quoting.

or did i missed something?

also, how much mature is the enterprise code? it is a stable API or
there is space for contributions?

--
Federico Di Gregorio
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  Mi piace schioccare la lingua fortemente.
                                        -- Maria Luisa Benedetta Panzani




From exarkun at intarweb.us  Wed Feb 19 00:42:56 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 19 Feb 2003 02:42:56 -0500
Subject: [Twisted-Python] Another conch traceback
In-Reply-To: <20030218234757.GA14522@meson.dyndns.org>
References: <20030218234757.GA14522@meson.dyndns.org>
Message-ID: <20030219074256.GA24916@meson.dyndns.org>

  When multiple sessions are running over the same <whatever>, exiting the
"primary" session hangs indefinitely.  Exiting any other session generates
this traceback in the "primary" session:

Traceback (most recent call last):
  File "/usr/local/bin/conch", line 32, in ?
    run()
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 170, in run
    reactor.run()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 113, in run
    self.mainLoop()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 127, in mainLoop
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 124, in mainLoop
    self.doIteration(t)
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 457, in doSelect
    log.deferr()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/default.py", line 450, in doSelect
    why = getattr(selectable, method)()
  File "/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py", line 105, in doRead
    return self.protocol.dataReceived(data)
  File "/home/exarkun/projects/python/Twisted/twisted/spread/banana.py", line 187, in dataReceived
    gotItem(item)
  File "/home/exarkun/projects/python/Twisted/twisted/spread/banana.py", line 119, in gotItem
    self.callExpressionReceived(item)
  File "/home/exarkun/projects/python/Twisted/twisted/spread/banana.py", line 86, in callExpressionReceived
    self.expressionReceived(obj)
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 370, in expressionReceived
    func(lst[1:])
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 430, in server_sendEOF
    channel = self.getChannel(cn)
  File "/home/exarkun/projects/python/Twisted/twisted/scripts/conch.py", line 389, in getChannel
    channel = conn.channels[channelID]
KeyError: 1


  and the unix socket is left dangling.

  Jp

-- 
 up 10 days, 12:28, 5 users, load average: 0.00, 0.02, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030219/c783f3da/attachment.sig>

From andrew-twisted at puzzling.org  Wed Feb 19 04:43:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Feb 2003 22:43:23 +1100
Subject: [Twisted-Python] Trying to figure out twisted.web
In-Reply-To: <1045608216.6772.25.camel@golux>
References: <20030218200921.GG1527@radii> <1045590910.654.46.camel@mingus> <20030218181155.11286.qmail@green.zadka.com> <1045596536.648.59.camel@mingus> <20030218202439.12222.qmail@green.zadka.com> <1045608216.6772.25.camel@golux>
Message-ID: <20030219114323.GA541@frobozz.local>

On Tue, Feb 18, 2003 at 05:43:35PM -0500, Steve Waterbury wrote:
> On Tue, 2003-02-18 at 15:24, Moshe Zadka wrote:
> > And if you need the auto-generated docs, twisted-doc-api
> 
> ... and speaking of which, admin/generate-lore works 
> (again) -- thanks, Moshe!  BTW, one teensy little nit 
> on the generated pdf:  the date is still set to show
> October 24, 2002 ... I know it should be later than that!

There is no admin/generate-lore command.  There used to be a
bin/generatelore, though.

I presume you mean admin/process-docs.  It works fine here; I get the
current date on the PDF, which is as expected, seeing as book.tex has never
had a \date command.  I suspect something is screwy at your end.

-Andrew.




From user143 at tsolver.com  Wed Feb 19 04:39:58 2003
From: user143 at tsolver.com (Allen Chan)
Date: Wed, 19 Feb 2003 06:39:58 -0500
Subject: [Twisted-Python] Basic HTTP Authentication in Twisted.web
In-Reply-To: <20030218181301.27948.89173.Mailman@pyramid.twistedmatrix.com>
Message-ID: <HMEFJOHGCKGPIHHGENIIOEBDCAAA.user143@tsolver.com>

The following test.rpy works for me in MSIE:

from twisted.protocols import http
from twisted.web import resource,error

class AuthResource(resource.Resource):
    def __init__(self):
        resource.Resource.__init__(self)

    def render(self, request):
        if not request.getUser() or not request.getPassword():
            request.setHeader('WWW-authenticate', 'Basic realm="%s"' %
("default"))
            errpage = error.ErrorPage(http.UNAUTHORIZED,"Unauthorized","401
Authentication required")
            return errpage.render(request)
        else:
            return "<html><head></head><body>Hello World</body></html>\n"

resource = AuthResource()


-----Original Message-----
>From: "Thomas Weholt" <2002 at weholt.org>
>To: <twisted-python at twistedmatrix.com>
>Subject: Re: [Twisted-Python] Basic HTTP Authentication in Twisted.web
>Date: Wed, 19 Feb 2003 00:07:05 +0100
>Reply-To: twisted-python at twistedmatrix.com
>
>Thanks for the tip.
>
>Changed the code to use the same content for both the body and the
>Content-Length-header. Still no go. Isn't there a special Twisted way of
>doing this? My curreny solution is as I said earlier a dirty hack based on
>code from BaseHTTPServer.
>
>Anybody else has this kind of authentication going in their application who
>can spare a few lines of code as an example ???
>
>Thomas





From twisted at itamarst.org  Wed Feb 19 07:18:19 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 19 Feb 2003 09:18:19 -0500
Subject: [Twisted-Python] quoting strings in db transactions
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAEJMCJAA.sean@twistedmatrix.com>
References: <1045584503.1898.48.camel@momo.initd.org>
	<HOEEKPCOKELHCNIJNMAGAEJMCJAA.sean@twistedmatrix.com>
Message-ID: <20030219091819.529225d0.twisted@itamarst.org>

On Tue, 18 Feb 2003 21:52:01 -0600
"Sean Riley" <sean at twistedmatrix.com> wrote:

> I'd say the twisted.enterprise code is relatively solid at what it
> does, but its functionality is only really useful in a limited set of
> circumstances. There have been some discussions about extending its
> functionality, but I no longer have any time to devote to it. So,
> there is definitely room for contributions :)

I don't think adbapi is going to go away or change in significant ways,
though.



From twisted at itamarst.org  Wed Feb 19 08:30:11 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 19 Feb 2003 10:30:11 -0500
Subject: [Twisted-Python] Someone broke my precious code!
Message-ID: <20030219103011.723ee9e9.twisted@itamarst.org>

The latest patch to process.py broke process running on Windows. This is
bad.

Twisted should not be released until the tests are run with the
win32event reactor!

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From konrad at wam.umd.edu  Wed Feb 19 11:14:02 2003
From: konrad at wam.umd.edu (Konrad Rokicki)
Date: Wed, 19 Feb 2003 13:14:02 -0500 (EST)
Subject: [Twisted-Python] Re: IRCClient
In-Reply-To: <1045610379.2997.55.camel@troglodyte.funhouse>
Message-ID: <Pine.SOL.4.44.0302191302010.12767-100000@rac2.wam.umd.edu>

On 18 Feb 2003, Kevin Turner wrote:

> On Tue, 2003-02-18 at 12:33, Konrad Rokicki wrote:
> > I just started working with the IRCClient class (twisted.protocols.irc)
> > and unless I'm mistaken, it is missing some features like a userQuit event
> > and handling of NAMREPLY (for getting a list of users in a channel).
> > I was wondering if this module is still being actively developed and if I
> > should submit patches to do those sorts of things.
>
> What would you have them do?  The protocol does not dictate any response
> to these messages, and protocols.irc.IRCClient is intended to be an
> implementation of just the IRC client protocol.  The class is designed
> to be extensible so its users can subclass it and define their own
> irc_QUIT and irc_RPL_NAMREPLY methods.  The decision of what to do when
> you receive such a message is up to the application, I think.

I don't mean the client needs to respond to the messages. But why doesn't
it process a QUIT the same way it processes a JOIN or PART? The irc_QUIT
method could be implemented to parse the message and call userQuit.
The same goes for the NAMREPLY stuff except you'd also need a method
to request the names list. Sure, I could implement all this in my
subclass but wouldn't it be cleaner to hide all this protocol stuff inside
the protocol? That way my subclass would not need to know how to parse a
QUIT message.

-Konrad







From radix at twistedmatrix.com  Wed Feb 19 17:53:58 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 19 Feb 2003 19:53:58 -0500
Subject: [Twisted-Python] Re: IRCClient
In-Reply-To: <Pine.SOL.4.44.0302191302010.12767-100000@rac2.wam.umd.edu>
References: <1045610379.2997.55.camel@troglodyte.funhouse> <Pine.SOL.4.44.0302191302010.12767-100000@rac2.wam.umd.edu>
Message-ID: <20030220005358.GC1168@radii>

On Wed, Feb 19, 2003 at 01:14:02PM -0500, Konrad Rokicki wrote:
> On 18 Feb 2003, Kevin Turner wrote:
> > What would you have them do?  The protocol does not dictate any response
> > to these messages, and protocols.irc.IRCClient is intended to be an
> > implementation of just the IRC client protocol.  The class is designed
> > to be extensible so its users can subclass it and define their own
> > irc_QUIT and irc_RPL_NAMREPLY methods.  The decision of what to do when
> > you receive such a message is up to the application, I think.
> 
> I don't mean the client needs to respond to the messages. But why doesn't
> it process a QUIT the same way it processes a JOIN or PART? The irc_QUIT
> method could be implemented to parse the message and call userQuit.
> The same goes for the NAMREPLY stuff except you'd also need a method
> to request the names list. Sure, I could implement all this in my
> subclass but wouldn't it be cleaner to hide all this protocol stuff inside
> the protocol? That way my subclass would not need to know how to parse a
> QUIT message.

Kevin, Jp and I discussed this on IRC a little bit, and came to the
conclusion (well, they stopped arguing against me, anyway ...) that
there should be more IRC-specific abstractions developed. There was
some uneasiness about putting more of them in IRCClient,
though. Perhaps we should split off another class that has
higher-level stuff like NAMES handlers.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From twisted at moshez.org  Thu Feb 20 01:56:54 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 20 Feb 2003 08:56:54 -0000
Subject: [Twisted-Python] t.i.tcp bug -- a possible fix
Message-ID: <20030220085654.3290.qmail@green.zadka.com>

Index: twisted/internet/tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.108
diff -u -r1.108 tcp.py
--- twisted/internet/tcp.py     19 Feb 2003 07:18:29 -0000      1.108
+++ twisted/internet/tcp.py     20 Feb 2003 00:55:28 -0000
@@ -283,7 +283,8 @@
             skt = self.createInternetSocket()
         except socket.error, se:
             err = error.ConnectBindError(se[0], se[1])
-            whenDone = None
+            self.connector.connectionFailed(failure.Failure(err))
+            return
         if whenDone and bindAddress is not None:
             try:
                 skt.bind(bindAddress)

Without this patch, skt is unbound if the except was triggered. A few lines
later, "skt" is used, prompting an UnboundLocalVariable exception. This
might not be the correct patch, but it does appear to solve stuff...

-- 
Moshe Zadka -- http://moshez.org/
Buffy: I don't like you hanging out with someone that... short.
Riley: Yeah, a lot of young people nowadays are experimenting with shortness.



From iko at cd.chalmers.se  Thu Feb 20 07:11:24 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Thu, 20 Feb 2003 15:11:24 +0100
Subject: [Twisted-Python] SMTP client patch
Message-ID: <200302201411.h1KEBP700006@haddock.cd.chalmers.se>

Hi gang!

A while ago I posted a patch for the client part of t.p.smtp, but I
haven't heard any comments. Did it get lost, or is everyone just
busy with more interesting projects?

/Anders

-- 
 -- Of course I'm crazy, but that doesn't mean I'm wrong.
Anders Hammarquist                                  | iko at cd.chalmers.se
Physics student, Chalmers University of Technology, | Hem: +46 31 88 48 50
G|teborg, Sweden.           RADIO: SM6XMM and N2JGL | Mob: +46 707 27 86 87



From twisted at itamarst.org  Thu Feb 20 08:06:38 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Feb 2003 10:06:38 -0500
Subject: [Twisted-Python] Twisted is apparently in this month's "Intelligent Enterprise" magazine
Message-ID: <20030220100638.2c373e2d.twisted@itamarst.org>

http://www.intelligententerprise.com/030301/604e_business1_2.shtml


-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From dietmar.gaffling at siemens.com  Thu Feb 20 09:35:13 2003
From: dietmar.gaffling at siemens.com (Gaffling Dietmar)
Date: Thu, 20 Feb 2003 17:35:13 +0100
Subject: [Twisted-Python] Unable to run mktap script under windows
Message-ID: <5BE5F1117AEDD5118BFC0000D11EA39C7C8746@blns205e.bln.icn.siemens.de>

I try to run the very beginners example Case Study "Twisted Quotes".

1. I make Direktory TwistedQuotes with quotetap.py, __init__.py, quoteproto.py, quoters.py and plugins.tml files as described

2. On Windows (NT) running in TwistedQuotes directory 

python C:\Python22\Lib\site-packages\twisted\scripts\mktap.py qotd

fails with 

Unknown command: qotd

Are there known problems, workarounds for windows environment?

Many thanks in advance

Dietmar




From twisted at itamarst.org  Thu Feb 20 10:17:36 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Feb 2003 12:17:36 -0500
Subject: [Twisted-Python] Unable to run mktap script under windows
In-Reply-To: <5BE5F1117AEDD5118BFC0000D11EA39C7C8746@blns205e.bln.icn.siemens.de>
References: <5BE5F1117AEDD5118BFC0000D11EA39C7C8746@blns205e.bln.icn.siemens.de>
Message-ID: <20030220121736.09fc1eaf.twisted@itamarst.org>

On Thu, 20 Feb 2003 17:35:13 +0100
Gaffling Dietmar <dietmar.gaffling at siemens.com> wrote:

> 2. On Windows (NT) running in TwistedQuotes directory 

You probably want to be in the directory that contains TwistedQuotes.

> python C:\Python22\Lib\site-packages\twisted\scripts\mktap.py qotd

"C:\python22\scripts\mktap.py" is less typing.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From mwh at python.net  Thu Feb 20 09:11:30 2003
From: mwh at python.net (Michael Hudson)
Date: Thu, 20 Feb 2003 16:11:30 +0000
Subject: [Twisted-Python] Re: Twisted is apparently in this month's "Intelligent Enterprise"
 magazine
References: <20030220100638.2c373e2d.twisted@itamarst.org>
Message-ID: <2m3cmjaq4t.fsf@starship.python.net>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:

> http://www.intelligententerprise.com/030301/604e_business1_2.shtml

And the author's Michael Hudson but not me.  Spooky.

Cheers,
M.

-- 
  : Giant screaming pieces of excrement, they are.
  I have a feeling that some of the people in here have a 
  MUCH more exciting time relieving themselves than I do.
                                       -- Mike Sphar & Dave Brown, asr




From chris at websys.com  Thu Feb 20 14:12:56 2003
From: chris at websys.com (Chris Skinner)
Date: Thu, 20 Feb 2003 16:12:56 -0500
Subject: [Twisted-Python] InstallSignalHandlers question
Message-ID: <115960-220032420211256578@websys.com>

Hi,
  I couldn't find any reference to methods/overrides I would need to
implement in my Application. to actually do some processing on
specific signals... is the flag in .run() just disabling some
previous call to signal assigning a default handler?

  Primarily I'm looking to implement an in-process re-initialize,
log-rotation and to catch the shutdown so I can terminate another
process before exiting.

  Thanks in advance for any assistance!

Chris Skinner
Websys, Inc.

"By will alone I put my mind in motion..."




From glyph at twistedmatrix.com  Thu Feb 20 15:14:31 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Feb 2003 16:14:31 -0600
Subject: [Twisted-Python] SMTP client patch
In-Reply-To: <200302201411.h1KEBP700006@haddock.cd.chalmers.se>
Message-ID: <AF8FD568-4520-11D7-B2AA-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Thursday, February 20, 2003, at 08:11 AM, Anders Hammarquist wrote:

> A while ago I posted a patch for the client part of t.p.smtp, but I
> haven't heard any comments. Did it get lost, or is everyone just
> busy with more interesting projects?

A little of both, I think :)

I had a look at this patch with Itamar today.  We like where you're 
going, but here are a few issues:

1. it's not backwards compatible.  DocmaServer uses its own sendEmail, 
which depends on the sentEmail callback's signature.

I personally would like to see Twisted's sendEmail deprecated and 
replaced with an admonishment to use the 'email' module ;), so it would 
be nice if you could re-implement sendEmail in terms of your  MIME-less 
'sendmail' function.

2. Those change to LineReceiver made no sense to us.  Care to explain?

3. What's up with the SMTP logger?  and logging every line in the 
client?  This is duplicated generic code, and should probably be 
refactored into someplace more appropriate, like twisted.python.log.

This is just from a cursory look-over; the main issue is #1.  Thanks 
for the patch!
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+VVNLvVGR4uSOE2wRAoadAJsHHDRBwyIzyRGkbuGHa3dhxx/29wCgqVXK
h96fPo8sJjzcNalxGWWtmNw=
=iDh6
-----END PGP SIGNATURE-----




From bob at redivi.com  Thu Feb 20 15:27:59 2003
From: bob at redivi.com (Bob Ippolito)
Date: Thu, 20 Feb 2003 17:27:59 -0500
Subject: [Twisted-Python] InstallSignalHandlers question
In-Reply-To: <115960-220032420211256578@websys.com>
Message-ID: <90CCFBED-4522-11D7-9123-000A95686CD8@redivi.com>

On Thursday, Feb 20, 2003, at 16:12 America/New_York, Chris Skinner 
wrote:

> Hi,
>   I couldn't find any reference to methods/overrides I would need to
> implement in my Application. to actually do some processing on
> specific signals... is the flag in .run() just disabling some
> previous call to signal assigning a default handler?
>
>   Primarily I'm looking to implement an in-process re-initialize,
> log-rotation and to catch the shutdown so I can terminate another
> process before exiting.
>
>   Thanks in advance for any assistance!
>
You want to look at app.ApplicationService.. I think we're missing 
examples for it though.

-bob





From twisted at itamarst.org  Thu Feb 20 15:47:58 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 20 Feb 2003 17:47:58 -0500
Subject: [Twisted-Python] InstallSignalHandlers question
In-Reply-To: <115960-220032420211256578@websys.com>
References: <115960-220032420211256578@websys.com>
Message-ID: <20030220174758.3ab610d0.twisted@itamarst.org>

On Thu, 20 Feb 2003 16:12:56 -0500
"Chris Skinner" <chris at websys.com> wrote:

>   I couldn't find any reference to methods/overrides I would need to
> implement in my Application. to actually do some processing on
> specific signals... is the flag in .run() just disabling some
> previous call to signal assigning a default handler?

Just schedule a method to run on startup, and then in that method use
the signal module as you usually would.

>   Primarily I'm looking to implement an in-process re-initialize,
> log-rotation and to catch the shutdown so I can terminate another
> process before exiting.

1. Twisted already does log rotation on signals, if you use twistd.
twistd id your friend (and no, that does not require TAPs).

2. in process re-initialize is a good use case.

3. Use the reactor's scheduling system - it lets you schedule events to
be run on shutdown.

http://twistedmatrix.com/documents/TwistedDocs/current/api/public/twisted.internet.interfaces.IReactorCore.html#addSystemEventTrigger
is the method you want.

E.g. reactor.addSystemEventTrigger('after', 'startup', myFunction) runs
myFunction after startup.

Or, as Bob Ippolito said, make an ApplicationService, and it will have
its stopService and startService methods called wwhen the application
starts and shuts down.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From glyph at twistedmatrix.com  Thu Feb 20 16:09:42 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Feb 2003 17:09:42 -0600
Subject: [Twisted-Python] InstallSignalHandlers question
In-Reply-To: <115960-220032420211256578@websys.com>
Message-ID: <650BCFE8-4528-11D7-B2AA-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Thursday, February 20, 2003, at 03:12 PM, Chris Skinner wrote:

> Hi,
>   I couldn't find any reference to methods/overrides I would need to
> implement in my Application. to actually do some processing on
> specific signals... is the flag in .run() just disabling some
> previous call to signal assigning a default handler?

Mucking with signal handlers directly is almost certainly the wrong way 
to do this :)

>   Primarily I'm looking to implement an in-process re-initialize,
> log-rotation and to catch the shutdown so I can terminate another
> process before exiting.

In the shutdown case, it sounds like you want to either override 
twisted.internet.protocol.Factory.startFactory or 
twisted.internet.app.ApplicationService.startService ... this is not 
really about signal handling, after all, because you want to shut down 
when Twisted shuts down.

In the re-init &c &c case, you can probably just catch SIGUSR1 (or 
whatever you want to re-initialize on) directly, since Twisted doesn't 
trap that itself.  However you may want to propose some defined 
semantics for future versions of Twisted, in case we ever want to 
implement this as part of the framework :-).
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+VWA6vVGR4uSOE2wRAgQFAJ9epoNdz4VWY0nl3rJPNz1I7xxx6wCfUetJ
+ssKp+8Olo3evQgySm7RdjU=
=RXdC
-----END PGP SIGNATURE-----




From iko at cd.chalmers.se  Thu Feb 20 17:29:34 2003
From: iko at cd.chalmers.se (Anders Hammarquist)
Date: Fri, 21 Feb 2003 01:29:34 +0100
Subject: [Twisted-Python] SMTP client patch 
In-Reply-To: Message from Glyph Lefkowitz <glyph@twistedmatrix.com> 
   of "Thu, 20 Feb 2003 16:14:31 CST." <AF8FD568-4520-11D7-B2AA-000393C9700E@twistedmatrix.com> 
References: <AF8FD568-4520-11D7-B2AA-000393C9700E@twistedmatrix.com> 
Message-ID: <200302210029.h1L0TZ511318@haddock.cd.chalmers.se>

In a message of Thu, 20 Feb 2003 16:14:31 CST, Glyph Lefkowitz writes:
>I had a look at this patch with Itamar today.  We like where you're 
>going, but here are a few issues:
>
>1. it's not backwards compatible.  DocmaServer uses its own sendEmail, 
>which depends on the sentEmail callback's signature.

Yes, I know. The changes were needed to be able to get complete
status for the message delivery. With the old code there was no
way to find out what happend to failed recipient addresses. I
suppose I could add logic to try and detect an old-style sentEmail.

>I personally would like to see Twisted's sendEmail deprecated and 
>replaced with an admonishment to use the 'email' module ;), so it would 
>be nice if you could re-implement sendEmail in terms of your  MIME-less 
>'sendmail' function.

As in using sendmail plus the email module? Sure, will do.

>2. Those change to LineReceiver made no sense to us.  Care to explain?

Somewhere in the docs I read that returning (as opposed to raising)
an exception will land you in Factory.clientConnectionFailed with
that exception (wrapped in a failure). However, LineReceiver didn't
propagate the returned exceptions up to Protocol, so it didn't work
without those changes. smtpConnectionFailed and smtpTransferFailed
uses this.

>3. What's up with the SMTP logger?  and logging every line in the 
>client?  This is duplicated generic code, and should probably be 
>refactored into someplace more appropriate, like twisted.python.log.

I agree that it may be useful elsewhere (though expect it's use
will be rather limited). The purpose keeping the log is for
generating bounce messages (i.e. as sendmail says:

... while talking to foo.bar.org.:
>>> RCPT To:<spam at foo.bar.org>
<<< 550 User unknown
>>> RCPT To:<eggs at foo.bar.org>
<<< 450 Insufficient disk space

). My first look at t.p.log suggested not using it, since it dealt
mostly with syslog()-like logging. I'll have another look to see
if it fits with those logging functions, else I'll just rename it
to something more generic and let it live in t.p.log.

/Anders





From radix at twistedmatrix.com  Thu Feb 20 20:48:03 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 20 Feb 2003 22:48:03 -0500
Subject: [Twisted-Python] PyCon Logistics
In-Reply-To: <20030214220537.GM2557@radii>
References: <20030211.191234.596544096.washort@twistedmatrix.com> <20030214220537.GM2557@radii>
Message-ID: <20030221034803.GA1238@radii>

On Fri, Feb 14, 2003 at 05:05:37PM -0500, Christopher Armstrong wrote:
> On Tue, Feb 11, 2003 at 07:12:34PM -0600, Allen Short wrote:
> > 
> > Chris and I have been looking at hotels in the D.C. area with an eye
> > towards affordability and proximity to GWU: the best we've found so
> > far is a Best Western in Arlington: assuming 3 to a room, it'll be
> > around $30/night/person. 
> 
> 
> Ok, I just called and they only have rooms available starting at
> $119/night + tax. :-( There's some damned flowery crap going on in
> D.C. around then, which is apparently booking up the hotels.

Ok, I lied.

If you register through the web site:

http://www.netbooker.com/booker/AppLogic+booker.hotel.info.Start?brand=BW&pid=47096&iid=BW

as opposed to calling to register, you can get the cheaper rates. From
what I can tell, the reason for this is that Best Western and Key
Bridge are two different organizations that have two different sets of
prices, regardless that it's the same hotel. :P


-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From glyph at twistedmatrix.com  Thu Feb 20 21:37:08 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 20 Feb 2003 22:37:08 -0600
Subject: [Twisted-Python] SMTP client patch 
In-Reply-To: <200302210029.h1L0TZ511318@haddock.cd.chalmers.se>
Message-ID: <231CF4B2-4556-11D7-B2AA-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Thursday, February 20, 2003, at 06:29 PM, Anders Hammarquist wrote:

> In a message of Thu, 20 Feb 2003 16:14:31 CST, Glyph Lefkowitz writes:
>> I had a look at this patch with Itamar today.  We like where you're
>> going, but here are a few issues:
>>
>> 1. it's not backwards compatible.  DocmaServer uses its own sendEmail,
>> which depends on the sentEmail callback's signature.
>
> Yes, I know. The changes were needed to be able to get complete
> status for the message delivery. With the old code there was no
> way to find out what happend to failed recipient addresses. I
> suppose I could add logic to try and detect an old-style sentEmail.

Hmm... if you do that (with inspect or somesuch) please make sure to 
spit out an ugly warning so that people will know to fix their code.  
We shouldn't be supporting that long-term.

>> I personally would like to see Twisted's sendEmail deprecated and
>> replaced with an admonishment to use the 'email' module ;), so it 
>> would
>> be nice if you could re-implement sendEmail in terms of your  
>> MIME-less
>> 'sendmail' function.
>
> As in using sendmail plus the email module? Sure, will do.

Actually I'd prefer the existing code not to be changed, but to spit 
out a warning, since the interface ought to be "just pass a Message", 
not "pass a bunch of crap that gets turned into a Message".  
Considering how easy it is to turn a Message object into a long string, 
I don't think a separate method is required for this...

As long as it's still maintained, though, the existing code should 
remain in place rather than dragging a new dependency in for use with 
2.1 (since 'email' is only in the stdlib since 2.2)

>> 2. Those change to LineReceiver made no sense to us.  Care to explain?
>
> Somewhere in the docs I read that returning (as opposed to raising)
> an exception will land you in Factory.clientConnectionFailed with
> that exception (wrapped in a failure). However, LineReceiver didn't
> propagate the returned exceptions up to Protocol, so it didn't work
> without those changes. smtpConnectionFailed and smtpTransferFailed
> uses this.

Hmm.  Well, in any event I guess this is a more useful return value in 
general, and doesn't break anything.

>> 3. What's up with the SMTP logger?  and logging every line in the
>> client?  This is duplicated generic code, and should probably be
>> refactored into someplace more appropriate, like twisted.python.log.
>
> I agree that it may be useful elsewhere (though expect it's use
> will be rather limited). The purpose keeping the log is for
> generating bounce messages (i.e. as sendmail says:

aah, this makes a little more sense.

> ). My first look at t.p.log suggested not using it, since it dealt
> mostly with syslog()-like logging.

You're right.  Given this use-case though, it sounds like you need 
little more beyond cStringIO...?

> I'll have another look to see if it fits with those logging functions, 
> else I'll just rename it to something more generic and let it live in 
> t.p.log.

t.p.log might not be the best place to put it, come to think of it, 
since your impression of 'something like syslog' is correct.  But 
somewhere in t.p in general.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+Vaz4vVGR4uSOE2wRAjGmAJ9ZWl6vptshdNeVcvd5NIeeob5gtACfSALt
h+xh9bV6ERYUDfGsatBqIrE=
=jzDr
-----END PGP SIGNATURE-----




From uwe at oss4u.com  Fri Feb 21 03:48:04 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 21 Feb 2003 02:48:04 -0800
Subject: [Twisted-Python] wxPython and Twisted event loops
Message-ID: <200302210248.04290.uwe@oss4u.com>

Hi,

for those interested, I just posted a recipe on the  activestate.com python 
cookbook about how to get wxPython running with Twisted withoud having 
blocked menu's and modal dialogs.

It's a simple and dirty hack, but it's working on linux and win (basically all 
systems using the default select reactor)

enjoy

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From andrew-twisted at puzzling.org  Fri Feb 21 20:28:39 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 22 Feb 2003 14:28:39 +1100
Subject: [Twisted-Python] wxPython and Twisted event loops
In-Reply-To: <200302210248.04290.uwe@oss4u.com>
References: <200302210248.04290.uwe@oss4u.com>
Message-ID: <20030222032838.GB7817@frobozz.local>

On Fri, Feb 21, 2003 at 02:48:04AM -0800, Uwe C. Schroeder wrote:
> 
> Hi,
> 
> for those interested, I just posted a recipe on the  activestate.com python 
> cookbook about how to get wxPython running with Twisted withoud having 
> blocked menu's and modal dialogs.
> 
> It's a simple and dirty hack, but it's working on linux and win (basically all 
> systems using the default select reactor)

Is there any reason why you aren't using the twisted.internet.wxsupport
module?

-Andrew.




From garth at deadlybloodyserious.com  Fri Feb 21 20:31:50 2003
From: garth at deadlybloodyserious.com (Garth Kidd)
Date: Sat, 22 Feb 2003 14:31:50 +1100
Subject: [Twisted-Python] Unable to run mktap script under windows
In-Reply-To: <20030220121736.09fc1eaf.twisted@itamarst.org>
Message-ID: <000e01c2da22$f2793c50$0601010a@gkiddxp2>

> > python C:\Python22\Lib\site-packages\twisted\scripts\mktap.py qotd
> 
> "C:\python22\scripts\mktap.py" is less typing.

... and adding python22\scripts to PATH even less so. :) 

Regards,
Garth.




From uwe at oss4u.com  Sat Feb 22 00:18:17 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 21 Feb 2003 23:18:17 -0800
Subject: [Twisted-Python] wxPython and Twisted event loops
In-Reply-To: <20030222032838.GB7817@frobozz.local>
References: <200302210248.04290.uwe@oss4u.com> <20030222032838.GB7817@frobozz.local>
Message-ID: <200302212318.17632.uwe@oss4u.com>

On Friday 21 February 2003 07:28 pm, Andrew Bennetts wrote:
> On Fri, Feb 21, 2003 at 02:48:04AM -0800, Uwe C. Schroeder wrote:
> > Hi,
> >
> > for those interested, I just posted a recipe on the  activestate.com
> > python cookbook about how to get wxPython running with Twisted withoud
> > having blocked menu's and modal dialogs.
> >
> > It's a simple and dirty hack, but it's working on linux and win
> > (basically all systems using the default select reactor)
>
> Is there any reason why you aren't using the twisted.internet.wxsupport
> module?

Yes, it doesn't work. :-)
wxPython (as does wxWindows) uses private eventloops for menus and modal 
dialogs. This means whenever you open a modal dialog or a menu, the main 
eventloop will freeze and wait for the child eventloop (the one of the menu 
or modal dialog) to finish.
Since wxsupport only emulates the main eventloop it will be stuck until you 
close the dialog.

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From kwaker at uch.net  Sat Feb 22 18:37:44 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Sun, 23 Feb 2003 03:37:44 +0200
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
Message-ID: <16816305285.20030223033744@uch.net>

Hello twisted-python,

Give me any clues on how to operate Twisted's services using
TCPTransport (twisted.internet.Client) descendant? As someone
suggested I will redo my SOCKS internet.protocol.Protocol
impletentation in Transport descendant.

Please include personal copy to my email (below) it seems that I can't
receive any maillist posts during last 40 hours.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net




From cce at clarkevans.com  Sat Feb 22 20:57:15 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 03:57:15 +0000
Subject: [Twisted-Python] serving up a directory
Message-ID: <20030223035715.GA5738@doublegemini.com>

Twisted looks pretty neat... I'm exploring it
as we speak.  Is there a Resource which I can i
add to my resource tree to recursively return 
static content in a given directory?  It really
wasn't obvious how to do this... without using
the "tap" stuff.  What I'm kinda looking for...

root = Resource()
root.putChild("dynamic",MyDynamicRequest())
root.putChild("static",StaticRequest("/var/htdocs"))

Anything like this monster?  So I can do...

  webserver/static/something.gif

  and it returns /var/htdocs/something.gif

Thanks!

Clark



From cce at clarkevans.com  Sat Feb 22 21:57:38 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 04:57:38 +0000
Subject: [Twisted-Python] serving up a directory
In-Reply-To: <20030223035715.GA5738@doublegemini.com>
References: <20030223035715.GA5738@doublegemini.com>
Message-ID: <20030223045738.GA5936@doublegemini.com>

On Sun, Feb 23, 2003 at 03:57:15AM +0000, Clark C. Evans wrote:
| root = Resource()
| root.putChild("dynamic",MyDynamicRequest())
| root.putChild("static",StaticRequest("/var/htdocs"))

Err, I just needed...

   class StaticRequest(static.File): pass

Quite clean, and works exactly as I expected.  Kudos.
I wouldn't have asked the question if the comment of
this class didn't use "file" in the singular in the
docstring.  It could say:

    This request handler serves up a path, including
    the Directory and Files found recursively under it.

I'd also re-name the class "static.Path" as it really
isn't _just_ a file resource -- it serves up directories
too.

Thanks tons.

Clark

P.S.  Is there a clear example (not using taps) of having
both an SMTP and a HTTP server in one process?  Thanks!




From exarkun at intarweb.us  Sat Feb 22 21:49:42 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 22 Feb 2003 23:49:42 -0500
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <16816305285.20030223033744@uch.net>
References: <16816305285.20030223033744@uch.net>
Message-ID: <20030223044942.GA9428@meson.dyndns.org>

On Sun, Feb 23, 2003 at 03:37:44AM +0200, Dmitry Litovchenko wrote:
> Hello twisted-python,
> 
> Give me any clues on how to operate Twisted's services using
> TCPTransport (twisted.internet.Client) descendant? As someone
> suggested I will redo my SOCKS internet.protocol.Protocol
> impletentation in Transport descendant.
> 

  See sandbox/ipv6.py for an example of how to to use Twisted with
non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
the new connectWith/listenWith interface; maybe I should update it.

  Jp

-- 
   Know what I pray for? The strength to change what I can, the inability to
accept what I can't and the incapacity to tell the difference.    -- Calvin
-- 
 up 14 days, 8:29, 4 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030222/abd3e601/attachment.sig>

From exarkun at intarweb.us  Sat Feb 22 22:08:33 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 23 Feb 2003 00:08:33 -0500
Subject: [Twisted-Python] serving up a directory
In-Reply-To: <20030223045738.GA5936@doublegemini.com>
References: <20030223035715.GA5738@doublegemini.com> <20030223045738.GA5936@doublegemini.com>
Message-ID: <20030223050833.GA9605@meson.dyndns.org>

On Sun, Feb 23, 2003 at 04:57:38AM +0000, Clark C. Evans wrote:
> On Sun, Feb 23, 2003 at 03:57:15AM +0000, Clark C. Evans wrote:
> | root = Resource()
> | root.putChild("dynamic",MyDynamicRequest())
> | root.putChild("static",StaticRequest("/var/htdocs"))
> 
> Err, I just needed...
> 
>    class StaticRequest(static.File): pass
> 
> Quite clean, and works exactly as I expected.  Kudos.
> I wouldn't have asked the question if the comment of
> this class didn't use "file" in the singular in the
> docstring.  It could say:
> 
>     This request handler serves up a path, including
>     the Directory and Files found recursively under it.
> 
> I'd also re-name the class "static.Path" as it really
> isn't _just_ a file resource -- it serves up directories
> too.
> 
> Thanks tons.
> 
> Clark
> 
> P.S.  Is there a clear example (not using taps) of having
> both an SMTP and a HTTP server in one process?  Thanks!
> 

  Taps are YAY!  But without one, it's really no more difficult than having
just an HTTP server:

    app = Application("whatever")
    ...
    app.listenTCP(port, siteInstance)
    app.listenTCP(anotherPot, smtpServerFactory)
    ...
    app.run(save=0)

  You can have practically as many listen or connect calls on the app object
as you like.  If you need more concrete examples of how to get
"smtpServerFactory", check out twisted.mail.tap.

  Jp

-- 
   Know what I pray for? The strength to change what I can, the inability to
accept what I can't and the incapacity to tell the difference.    -- Calvin
-- 
 up 14 days, 8:29, 4 users, load average: 0.00, 0.00, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030223/a99331f9/attachment.sig>

From cce at clarkevans.com  Sat Feb 22 22:49:00 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 05:49:00 +0000
Subject: [Twisted-Python] serving up a directory
In-Reply-To: <20030223050833.GA9605@meson.dyndns.org>
References: <20030223035715.GA5738@doublegemini.com> <20030223045738.GA5936@doublegemini.com> <20030223050833.GA9605@meson.dyndns.org>
Message-ID: <20030223054900.GA6188@doublegemini.com>

On Sun, Feb 23, 2003 at 12:08:33AM -0500, Jp Calderone wrote:
|     app = Application("whatever")
|     ...
|     app.listenTCP(port, siteInstance)
|     app.listenTCP(anotherPot, smtpServerFactory)
|     ...
|     app.run(save=0)

Thanks Jp

...

I think I found an unexpected behavior in putChild and 
the Redirect resource, here is my code snippet...


class Redirect(static.Redirect):
    def __init__(self, url):
        resource.Resource.__init__(self)
        self.url = url

def run():
    root = Resource()
    root.putChild("dynamic",MyDynamicResource())
    root.putChild("",Redirect("/static/"))
    root.putChild("static",static.File("/my/static/content"))
    site = server.Site(root)
    reactor.listenTCP(8081,site)
    reactor.run()


Anyway, first, I found the "Redirect" resource not to 
behave as expected... for some reason it wanted a request?!
for the argument of __init__ instead of a url. 

But second, and most importantly, I wanted to have my
static content served from the root (without the redirect); 
I initally tried:

    root.putChild("",static.File("/my/static/content"))

But unfortunately, this introduced two slashes after
the server, ie,  http://server//index.html which 
causes problems down the line.  Above was my current
work-aroud (using a redirect to a sub-folder).  However,
ideally, I'd like the above putChild to work as expected
and not to introduce the double slashes.   

I looked into the Rewrite resource for a while, but I 
couldn't find any examples and it wasn't obvious how
to use it (it's also getting late)

Regardless, this toolset is splendid; that I've gotten
this far (ported a rather complicated mod_python program
in less than 8 hours) is quite impressive indeed.  Now
the last bit... getting the database pooling to work!

Thank you so much,

;) Clark



From sam at twistedmatrix.com  Sun Feb 23 03:01:08 2003
From: sam at twistedmatrix.com (Sam Jordan)
Date: Sun, 23 Feb 2003 20:01:08 +1000 (EST)
Subject: [Twisted-Python] MSN Support
Message-ID: <Pine.LNX.4.44.0302231949200.9081-100000@localhost.localdomain>

Hi,

I've implemented protocol support for MSNP7 (MSN Messenger) (client only) 
using Twisted and I thought I'd post to the list to see if there was 
general interest in getting this added to Twisted.  The hope is that 
(eventually ;)) twisted.im will have msn support, this being the first 
step.

The module is at http://www.twistedmatrix.com/users/sam/msn/msn.py.txt
API docs at http://www.twistedmatrix.com/users/sam/msn/docs/
and a small number of tests at 
http://www.twistedmatrix.com/users/sam/msn/test_msn.py.txt

There's still plans for more stuff to be added, but it's in a useable 
state.  If I get the go ahead i'd be happy to commit it.

Any general feedback is appreciated.

Cheers,

Sam.




From kwaker at uch.net  Sun Feb 23 15:07:46 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 00:07:46 +0200
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <20030223044942.GA9428@meson.dyndns.org>
References: <16816305285.20030223033744@uch.net>
 <20030223044942.GA9428@meson.dyndns.org>
Message-ID: <7718712156.20030224000746@uch.net>

Hello Jp,

JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
JC> the new connectWith/listenWith interface; maybe I should update it.

Where "sandbox" is located? I didn't find any in neither in python's
site-packages/twisted, nor in examples. But please don't suggest me
using CVS :) Its a pain for someone who never used is longer that 5
minutes :)

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net




From uwe at oss4u.com  Sun Feb 23 15:28:30 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sun, 23 Feb 2003 14:28:30 -0800
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <7718712156.20030224000746@uch.net>
References: <16816305285.20030223033744@uch.net> <20030223044942.GA9428@meson.dyndns.org> <7718712156.20030224000746@uch.net>
Message-ID: <200302231428.30835.uwe@oss4u.com>

On Sunday 23 February 2003 02:07 pm, Dmitry Litovchenko wrote:
> Hello Jp,
>
> JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
> JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't
> use JC> the new connectWith/listenWith interface; maybe I should update it.
>
> Where "sandbox" is located? I didn't find any in neither in python's
> site-packages/twisted, nor in examples. But please don't suggest me
> using CVS :) Its a pain for someone who never used is longer that 5
> minutes :)

It's in the source distibution. i.e. for 1.0.3 in

Twisted-1.0.3/sandbox/



	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From cce at clarkevans.com  Sun Feb 23 16:21:28 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Sun, 23 Feb 2003 23:21:28 +0000
Subject: [Twisted-Python] daemonization
Message-ID: <20030223232128.GA8340@doublegemini.com>

Hello.  I've got my application working nicely (well, the linkage
to postgresql still needs work) and it looks sort of like:

if __name__ == '__main__':
    root = Resource()
    root.putChild("dynamic",MyDynamicResource())
    root.putChild("",Redirect("/static/"))
    root.putChild("static",static.File("/path/to/me/webpages"))
    site = server.Site(root)
    appl = Application("whatever")
    appl.listenTCP(8081,site)
    appl.run()

What I'd like to do now is have this act like a deamon where
I run a command like:

  server start     # starts server, and then returns
  server stop      # stops server
  server reload    # reloads server

also including functionality of logging to a given file
and rotating the logs as necessary.  Anyway, I'm sure there 
is shell script magic to do this or I could copy the deamon 
example in the ASPN Cookbook...
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66012

But, I was wondering if there was a simple thing I could inherit
from which would do such a thing automagically.

Clark

P.S. Yes, I suppose this is what that "taps" thing is all
about... however, it doesn't seem to do the deamon 
management well (it doesn't do stop/start/reload, right?)



From andrew-twisted at puzzling.org  Sun Feb 23 17:20:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 11:20:06 +1100
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <7718712156.20030224000746@uch.net>
References: <16816305285.20030223033744@uch.net> <20030223044942.GA9428@meson.dyndns.org> <7718712156.20030224000746@uch.net>
Message-ID: <20030224002006.GB12287@frobozz.local>

On Mon, Feb 24, 2003 at 12:07:46AM +0200, Dmitry Litovchenko wrote:
> Hello Jp,
> 
> JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
> JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
> JC> the new connectWith/listenWith interface; maybe I should update it.
> 
> Where "sandbox" is located? I didn't find any in neither in python's
> site-packages/twisted, nor in examples. But please don't suggest me
> using CVS :) Its a pain for someone who never used is longer that 5
> minutes :)

If all you want to do is quickly get one file from CVS, use the website:
    http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/?cvsroot=Twisted

-Andrew.




From kwaker at uch.net  Sun Feb 23 17:48:19 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 02:48:19 +0200
Subject: [Twisted-Python] Replacing standard TCP Transport with SOCKS one
In-Reply-To: <20030224002006.GB12287@frobozz.local>
References: <16816305285.20030223033744@uch.net>
 <20030223044942.GA9428@meson.dyndns.org> <7718712156.20030224000746@uch.net>
 <20030224002006.GB12287@frobozz.local>
Message-ID: <6628345078.20030224024819@uch.net>

Hello Andrew,

Monday, February 24, 2003, 2:20:06 AM, you wrote:

AB> On Mon, Feb 24, 2003 at 12:07:46AM +0200, Dmitry Litovchenko wrote:
>> Hello Jp,
>> 
>> JC>   See sandbox/ipv6.py for an example of how to to use Twisted with
>> JC> non-"core" Transports, Listeners, and Connectors.  Though, this doesn't use
>> JC> the new connectWith/listenWith interface; maybe I should update it.
>> 
>> Where "sandbox" is located? I didn't find any in neither in python's
>> site-packages/twisted, nor in examples. But please don't suggest me
>> using CVS :) Its a pain for someone who never used is longer that 5
>> minutes :)

AB> If all you want to do is quickly get one file from CVS, use the website:
AB>     http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/?cvsroot=Twisted

Ah.. Thanks...

Looked in the sandbox/ipv6... Hmmm, that's too easy :)

-- 
Best regards,
 Dmitry                            mailto:kwaker at uch.net




From cce at clarkevans.com  Sun Feb 23 19:11:10 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Mon, 24 Feb 2003 02:11:10 +0000
Subject: [Twisted-Python] daemonization
In-Reply-To: <20030223232128.GA8340@doublegemini.com>
References: <20030223232128.GA8340@doublegemini.com>
Message-ID: <20030224021110.GA8692@doublegemini.com>

# daemonize.py
'''
    This module is used to fork the current process into a daemon.
    Almost none of this is necessary (or advisable) if your daemon 
    is being started by inetd. In that case, stdin, stdout and stderr are 
    all set up for you to refer to the network connection, and the fork()s 
    and session manipulation should not be done (to avoid confusing inetd). 
    Only the chdir() and umask() steps remain as useful.
    References:
        UNIX Programming FAQ
            1.7 How do I get my program to act like a daemon?
                http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16
        Advanced Programming in the Unix Environment
            W. Richard Stevens, 1992, Addison-Wesley, ISBN 0-201-56317-7.

    History:
      2001/07/10 by J�rgen Hermann
      2002/08/28 by Noah Spurrier
      2003/02/24 by Clark Evans
      
      http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66012
'''
import sys, os, time
from signal import SIGTERM

def deamonize(stdout='/dev/null', stderr=None, stdin='/dev/null',
              pidfile=None, startmsg = 'started with pid %s' ):
    '''
        This forks the current process into a daemon.
        The stdin, stdout, and stderr arguments are file names that
        will be opened and be used to replace the standard file descriptors
        in sys.stdin, sys.stdout, and sys.stderr.
        These arguments are optional and default to /dev/null.
        Note that stderr is opened unbuffered, so
        if it shares a file with stdout then interleaved output
        may not appear in the order that you expect.
    '''
    # Do first fork.
    try: 
        pid = os.fork() 
        if pid > 0: sys.exit(0) # Exit first parent.
    except OSError, e: 
        sys.stderr.write("fork #1 failed: (%d) %s\n" % (e.errno, e.strerror))
        sys.exit(1)
        
    # Decouple from parent environment.
    os.chdir("/") 
    os.umask(0) 
    os.setsid() 
    
    # Do second fork.
    try: 
        pid = os.fork() 
        if pid > 0: sys.exit(0) # Exit second parent.
    except OSError, e: 
        sys.stderr.write("fork #2 failed: (%d) %s\n" % (e.errno, e.strerror))
        sys.exit(1)
    
    # Open file descriptors and print start message
    if not stderr: stderr = stdout
    si = file(stdin, 'r')
    so = file(stdout, 'a+')
    se = file(stderr, 'a+', 0)
    pid = str(os.getpid())
    sys.stderr.write("\n%s\n" % startmsg % pid)
    sys.stderr.flush()
    if pidfile: file(pidfile,'w+').write("%s\n" % pid)
    
    # Redirect standard file descriptors.
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

def startstop(stdout='/dev/null', stderr=None, stdin='/dev/null',
              pidfile='pid.txt', startmsg = 'started with pid %s' ):
    if len(sys.argv) > 1:
        action = sys.argv[1]
        try:
            pf  = file(pidfile,'r')
            pid = int(pf.read().strip())
            pf.close()
        except IOError:
            pid = None
        if 'stop' == action or 'restart' == action:
            if not pid:
                mess = "Could not stop, pid file '%s' missing.\n"
                sys.stderr.write(mess % pidfile)
                sys.exit(1)
            try:
               while 1:
                   os.kill(pid,SIGTERM)
                   time.sleep(1)
            except OSError, err:
               err = str(err)
               if err.find("No such process") > 0:
                   os.remove(pidfile)
                   if 'stop' == action:
                       sys.exit(0)
                   action = 'start'
                   pid = None
               else:
                   print str(err)
                   sys.exit(1)
        if 'start' == action:
            if pid:
                mess = "Start aborded since pid file '%s' exists.\n"
                sys.stderr.write(mess % pidfile)
                sys.exit(1)
            deamonize(stdout,stderr,stdin,pidfile,startmsg)
            return
    print "usage: %s start|stop|restart" % sys.argv[0]
    sys.exit(2)

def test():
    '''
        This is an example main function run by the daemon.
        This prints a count and timestamp once per second.
    '''
    sys.stdout.write ('Message to stdout...')
    sys.stderr.write ('Message to stderr...')
    c = 0
    while 1:
        sys.stdout.write ('%d: %s\n' % (c, time.ctime(time.time())) )
        sys.stdout.flush()
        c = c + 1
        time.sleep(1)

if __name__ == "__main__":
    startstop(stdout='/tmp/deamonize.log',
              pidfile='/tmp/deamonize.pid')
    test()



From justin at gnubia.net  Sun Feb 23 16:52:37 2003
From: justin at gnubia.net (Justin Ryan)
Date: 23 Feb 2003 17:52:37 -0600
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
Message-ID: <1046044356.5933.16.camel@qutang.gnubian.org>

Hiya all,

I'm playing around with the basics of Twisted.Enterprise, and am having
some trouble.  I seem to have fixed it, but am unsure why the example in
the howto ( http://twistedmatrix.com/documents/howto/enterprise ) did
not work off the bat.  I'm using pyPgSQL to connect to postgres.  Here
goes:

The howto suggests:

<- snip ->

class AgeDatabase(adbapi.Augmentation):
     def getAge(self, name):
         sql = """SELECT Age FROM People WHERE name = ?"""
         return self.runQuery(sql, name)

<- snip ->

Unfortunately, I get a TypeError which is only fixed by changing this
to:

<- snip ->

class AgeDatabase(adbapi.Augmentation):
     def getAge(self, name):
         sql = """
             SELECT
                 "Age"
             FROM
                 "People"
             WHERE
                 "Name" = '%s'""" \
               % name
         return self.runQuery(sql)

<- snip ->

FWIW, postgres requires you to enclose mixed-case relations in
double-quotes (else it pretends they are all lowercase).  I did have to
make all of the modifications in this second version to the original
query (whilst still including the ?, instead of %s) in order for the
query to be valid.  I don't think that this would change anything, but I
suppose I could try it with all lowercase tables just for kicks..

Is this a problem with pyPgSQL? something else? pyPgSQL is the
_recommended_ module in the enterprise howto, so I didn't expect to run
into trouble with it..

Thanks in advance twisted.list! :)

-Justin




From nafai at twistedmatrix.com  Sun Feb 23 18:22:07 2003
From: nafai at twistedmatrix.com (Travis B. Hartwell)
Date: Sun, 23 Feb 2003 18:22:07 -0700
Subject: [Twisted-Python] ["Edmund Lian" <elian@inbrief.net>] [Webware-discuss] Comments
 about Twisted?
Message-ID: <877kbqpj5s.fsf@lutya.travishartwell.net>

I received the following mail today from the webware-discuss mailing
list.  I can't seem to get to the online archives, so I forwarded it
to the group.

I don't feel like I yet know enough about Webware or parts of Twisted
to answer this, but perhaps someone (glyph, fzZzy, or itamar?) could
respond to this.

Travis

-------------- next part --------------
An embedded message was scrubbed...
From: "Edmund Lian" <elian at inbrief.net>
Subject: [Webware-discuss] Comments about Twisted?
Date: Sun, 23 Feb 2003 20:04:05 -0500
Size: 3529
URL: </pipermail/twisted-python/attachments/20030223/ef1ab58d/attachment.mht>

From andrew-twisted at puzzling.org  Sun Feb 23 19:44:21 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 13:44:21 +1100
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <1046044356.5933.16.camel@qutang.gnubian.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org>
Message-ID: <20030224024421.GF12287@frobozz.local>

On Sun, Feb 23, 2003 at 05:52:37PM -0600, Justin Ryan wrote:
> Hiya all,
> 
> I'm playing around with the basics of Twisted.Enterprise, and am having
> some trouble.  I seem to have fixed it, but am unsure why the example in
> the howto ( http://twistedmatrix.com/documents/howto/enterprise ) did
> not work off the bat.  I'm using pyPgSQL to connect to postgres.  Here
> goes:
> 
> The howto suggests:
> 
> <- snip ->
> 
> class AgeDatabase(adbapi.Augmentation):
>      def getAge(self, name):
>          sql = """SELECT Age FROM People WHERE name = ?"""
>          return self.runQuery(sql, name)
> 
> <- snip ->

The howto also says:
    Also worth noting is that this example assumes that dbmodule uses the
    qmarks paramstyle (see the DB-API specification).

This is the cause of the problem; pyPgSQL uses a different paramstyle.  

Maybe this should be made clearer, by inserting a 
        # Assumes dbmodule.paramstyle == 'qmarks'
into the example code, where people will read it.

> Is this a problem with pyPgSQL? something else? pyPgSQL is the
> _recommended_ module in the enterprise howto, so I didn't expect to run
> into trouble with it..

Yeah, that is a good point.  The howto should probably use examples that
work with pyPgSQL, to save confusion.

-Andrew.




From uwe at oss4u.com  Sun Feb 23 19:40:54 2003
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Sun, 23 Feb 2003 18:40:54 -0800
Subject: [Twisted-Python] ["Edmund Lian" <elian@inbrief.net>] [Webware-discuss] Comments about Twisted?
In-Reply-To: <877kbqpj5s.fsf@lutya.travishartwell.net>
References: <877kbqpj5s.fsf@lutya.travishartwell.net>
Message-ID: <200302231840.54647.uwe@oss4u.com>

On Sunday 23 February 2003 05:22 pm, Travis B. Hartwell wrote:
> I received the following mail today from the webware-discuss mailing
> list.  I can't seem to get to the online archives, so I forwarded it
> to the group.
>
> I don't feel like I yet know enough about Webware or parts of Twisted
> to answer this, but perhaps someone (glyph, fzZzy, or itamar?) could
> respond to this.

Well, the answer is relatively simple. Webware is, as the name already 
suggests - a web application server with some components. This means it is 
used in WEB applications. Twisted in contrary can be used for web 
applications, but I think a lot of people use it as the server side of a 
non-web application (like I do). Twisted incorporates way more protocols than 
webware does - actually does webware support anything else than http(s) ?
For example my app doesn't use the internet.web part of twisted at all. I just 
use the perspective broker for accessing remote objects - a capability I 
can't find in webware.
You probably might want to compare webware with Zope - I think those two are 
closer.

	UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417




From kwaker at uch.net  Sun Feb 23 19:51:48 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 04:51:48 +0200
Subject: [Twisted-Python] SOCKS via TCP Transport - Still in great doubt
Message-ID: <4635753631.20030224045148@uch.net>

Hello twisted-python,

I am still in great doubt regarding implementing SOCKS via TCP
transport. Though example in sandbox/ipv6.py is not using new
connectWith function, it declares Connector which is also used by
connectWith.

I have already this construction: Connector, Factory and proxying
Protocol which switches to another proto after SOCKS is connected and
it works but reports NOT about ALL errors, so I get more and more
hanging client satellite records with the flow of time.

These satellite records have to be deleted after connection calls back
about success or failure, but in case when error occured before
protocol is switched, I get no error/success report and lose one
satellite record every such error.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net




From justin at gnubia.net  Sun Feb 23 20:20:23 2003
From: justin at gnubia.net (Justin Ryan)
Date: 23 Feb 2003 21:20:23 -0600
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <20030224024421.GF12287@frobozz.local>
References: <1046044356.5933.16.camel@qutang.gnubian.org>
	 <20030224024421.GF12287@frobozz.local>
Message-ID: <1046056823.5928.27.camel@qutang.gnubian.org>

> The howto also says:
>     Also worth noting is that this example assumes that dbmodule uses the
>     qmarks paramstyle (see the DB-API specification).
> 
> This is the cause of the problem; pyPgSQL uses a different paramstyle.  
> 
> Maybe this should be made clearer, by inserting a 
>         # Assumes dbmodule.paramstyle == 'qmarks'
> into the example code, where people will read it.

Perhaps, However not being familiar with the qmarks paramstyle, I
noticed this bit but most likely skimmed over it because I didn't make
the connection..  Learn something new every day..

Is the qmarks paramstyle a required part of the DB API 2.0 spec?

> > Is this a problem with pyPgSQL? something else? pyPgSQL is the
> > _recommended_ module in the enterprise howto, so I didn't expect to run
> > into trouble with it..
> 
> Yeah, that is a good point.  The howto should probably use examples that
> work with pyPgSQL, to save confusion.
> 

or at least distinguish.  I assumed that the howto was using proper DB
API syntax, and that pyPgSQL is not 100% compliant, but it would be nice
to see the line drawn.  I don't know that I've worked with a fully DB
API compliant driver at this point ;p

Thanks for the clarification...

-Justin




From andrew-twisted at puzzling.org  Sun Feb 23 21:18:02 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 15:18:02 +1100
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <1046056823.5928.27.camel@qutang.gnubian.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org>
Message-ID: <20030224041802.GH12287@frobozz.local>

On Sun, Feb 23, 2003 at 09:20:23PM -0600, Justin Ryan wrote:
> 
> > The howto also says:
> >     Also worth noting is that this example assumes that dbmodule uses the
> >     qmarks paramstyle (see the DB-API specification).
> > 
> > This is the cause of the problem; pyPgSQL uses a different paramstyle.  
> > 
> > Maybe this should be made clearer, by inserting a 
> >         # Assumes dbmodule.paramstyle == 'qmarks'
> > into the example code, where people will read it.
> 
> Perhaps, However not being familiar with the qmarks paramstyle, I
> noticed this bit but most likely skimmed over it because I didn't make
> the connection..  Learn something new every day..
> 
> Is the qmarks paramstyle a required part of the DB API 2.0 spec?

No, it's even worse than that: DB API 2.0 doesn't specify which paramstyle
to use, it merely states that possible values are "qmark", "numeric",
"named", "format", and "pyformat".  So a DB API 2.0-compliant module is free
to implement any of these it feels like, so long as it sets the correct
paramstyle for it.  Thus they've defined a spec which allows 5 incompatible
flavours.  As far as I can see, the only portable way to write queries is to
format the queries yourself, which means handling correct quoting yourself.
Yuck.

> > > Is this a problem with pyPgSQL? something else? pyPgSQL is the
> > > _recommended_ module in the enterprise howto, so I didn't expect to run
> > > into trouble with it..
> > 
> > Yeah, that is a good point.  The howto should probably use examples that
> > work with pyPgSQL, to save confusion.
> > 
> 
> or at least distinguish.  I assumed that the howto was using proper DB
> API syntax, and that pyPgSQL is not 100% compliant, but it would be nice
> to see the line drawn.  I don't know that I've worked with a fully DB
> API compliant driver at this point ;p
> 
> Thanks for the clarification...

The howto is using proper DB API syntax.  The problem is that being DB API
2.0 compliant doesn't help here; qmarks format strings are compliant -- but
incompatible with pyformat format strings, which are also compliant.
Twisted has nothing to do with this mess, and lets you and your db module
sort it out between yourselves :)

-Andrew.




From sean at twistedmatrix.com  Sun Feb 23 22:06:18 2003
From: sean at twistedmatrix.com (Sean Riley)
Date: Sun, 23 Feb 2003 23:06:18 -0600
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <20030224041802.GH12287@frobozz.local>
Message-ID: <HOEEKPCOKELHCNIJNMAGOELLCJAA.sean@twistedmatrix.com>

yep, this really sucks. You cannot do parameterized SQL through pyPgSQL at
all. Inside the driver, pyPgSQL just does a string subsitution for the query
and submits the whole thing to the database.

When you pass parameters to a SQL operation with pyPgSQL is has absolutely
no effect on performance, so you might as well just build the entire SQL
statement youself and pass it in as a single string.

from PgSQL.py:

def execute(self, query, *parms):
	.
	_qstr = query
	.
	self.res = self.conn.conn.query(_qstr % parms)

Sean.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Andrew
Bennetts
Sent: Sunday, February 23, 2003 10:18 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] problems w/ pyPgSQL and the Enterprise
HOWTO


On Sun, Feb 23, 2003 at 09:20:23PM -0600, Justin Ryan wrote:
>
> > The howto also says:
> >     Also worth noting is that this example assumes that dbmodule uses
the
> >     qmarks paramstyle (see the DB-API specification).
> >
> > This is the cause of the problem; pyPgSQL uses a different paramstyle.
> >
> > Maybe this should be made clearer, by inserting a
> >         # Assumes dbmodule.paramstyle == 'qmarks'
> > into the example code, where people will read it.
>
> Perhaps, However not being familiar with the qmarks paramstyle, I
> noticed this bit but most likely skimmed over it because I didn't make
> the connection..  Learn something new every day..
>
> Is the qmarks paramstyle a required part of the DB API 2.0 spec?

No, it's even worse than that: DB API 2.0 doesn't specify which paramstyle
to use, it merely states that possible values are "qmark", "numeric",
"named", "format", and "pyformat".  So a DB API 2.0-compliant module is free
to implement any of these it feels like, so long as it sets the correct
paramstyle for it.  Thus they've defined a spec which allows 5 incompatible
flavours.  As far as I can see, the only portable way to write queries is to
format the queries yourself, which means handling correct quoting yourself.
Yuck.

> > > Is this a problem with pyPgSQL? something else? pyPgSQL is the
> > > _recommended_ module in the enterprise howto, so I didn't expect to
run
> > > into trouble with it..
> >
> > Yeah, that is a good point.  The howto should probably use examples that
> > work with pyPgSQL, to save confusion.
> >
>
> or at least distinguish.  I assumed that the howto was using proper DB
> API syntax, and that pyPgSQL is not 100% compliant, but it would be nice
> to see the line drawn.  I don't know that I've worked with a fully DB
> API compliant driver at this point ;p
>
> Thanks for the clarification...

The howto is using proper DB API syntax.  The problem is that being DB API
2.0 compliant doesn't help here; qmarks format strings are compliant -- but
incompatible with pyformat format strings, which are also compliant.
Twisted has nothing to do with this mess, and lets you and your db module
sort it out between yourselves :)

-Andrew.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From kwaker at uch.net  Sun Feb 23 23:46:27 2003
From: kwaker at uch.net (Dmitry Litovchenko)
Date: Mon, 24 Feb 2003 08:46:27 +0200
Subject: [Twisted-Python] SOCKS5 Client if anyone cares
Message-ID: <12049833306.20030224084627@uch.net>

Hello twisted-python,

Sorry no unit tests at this time, I have prepared SOCKS5 unit test at
the very beginning but there were added several parameters so
Protocol constructors don't start correctly. I will fix this
eventually.

To code guardians: Please review this somehow, all notices about
violations of Twisted standards are welcome.

Unit is proven to work with anonymous connections, unit tests proven
that authenticated connections are also ok.

-- 
Best regards,
 Dmitry                          mailto:kwaker at uch.net
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: socks5.py
URL: </pipermail/twisted-python/attachments/20030224/0d69f1ae/attachment.ksh>

From warner at lothar.com  Mon Feb 24 00:41:07 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 23 Feb 2003 23:41:07 -0800 (PST)
Subject: [Twisted-Python] serving up a directory
References: <20030223035715.GA5738@doublegemini.com>
 <20030223045738.GA5936@doublegemini.com>
Message-ID: <20030223.234107.88354541.warner@lothar.com>

"Clark C. Evans" <cce at clarkevans.com> writes:

> Quite clean, and works exactly as I expected.  Kudos.
> I wouldn't have asked the question if the comment of
> this class didn't use "file" in the singular in the
> docstring.  It could say:
> 
>     This request handler serves up a path, including
>     the Directory and Files found recursively under it.

Patched in CVS. Thanks for the tip!

 -Brian



From radix at twistedmatrix.com  Mon Feb 24 00:53:34 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 24 Feb 2003 02:53:34 -0500
Subject: [Twisted-Python] daemonization
In-Reply-To: <20030223232128.GA8340@doublegemini.com>
References: <20030223232128.GA8340@doublegemini.com>
Message-ID: <20030224075334.GA1092@radii>

On Sun, Feb 23, 2003 at 11:21:28PM +0000, Clark C. Evans wrote:
> What I'd like to do now is have this act like a deamon where
> I run a command like:

A simple wrapper around `twistd' could give you the `start', `stop',
and `reload' capabilities.

>   server start     # starts server, and then returns
>   server stop      # stops server
>   server reload    # reloads server
> 
> also including functionality of logging to a given file
> and rotating the logs as necessary.  Anyway, I'm sure there 

twistd does that.

> 
> P.S. Yes, I suppose this is what that "taps" thing is all
> about... however, it doesn't seem to do the deamon 
> management well (it doesn't do stop/start/reload, right?)

You can use twistd without taps. See `-y'.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Mon Feb 24 02:03:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 24 Feb 2003 20:03:56 +1100
Subject: [Twisted-Python] daemonization
In-Reply-To: <20030224075334.GA1092@radii>
References: <20030223232128.GA8340@doublegemini.com> <20030224075334.GA1092@radii>
Message-ID: <20030224090356.GT12287@frobozz.local>

On Mon, Feb 24, 2003 at 02:53:34AM -0500, Christopher Armstrong wrote:
> On Sun, Feb 23, 2003 at 11:21:28PM +0000, Clark C. Evans wrote:
> > 
> > P.S. Yes, I suppose this is what that "taps" thing is all
> > about... however, it doesn't seem to do the deamon 
> > management well (it doesn't do stop/start/reload, right?)
> 
> You can use twistd without taps. See `-y'.

At the risk of resurrecting the TAP thread, it might be nice to document
this more clearly... I see "-y" as the path to a gentle introduction to
TAPs.

All you need to do to use twistd is define a module with a top-level
"application" variable (an instance of t.i.app.Application), and use "-y"...
from this point it's easy to see how to progress to constructing a TAP via
application.save, and then to writing an updateApplication function for use
with mktap.  I think one of my main problems with TAPs is they are explained
far too abstractly regarding exactly what they are and how they work.  A
description that works through the above phases may alleviate that.

-Andrew.




From exarkun at intarweb.us  Mon Feb 24 12:00:29 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 24 Feb 2003 14:00:29 -0500
Subject: [Twisted-Python] problems w/ pyPgSQL and the Enterprise HOWTO
In-Reply-To: <20030224041802.GH12287@frobozz.local>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local>
Message-ID: <20030224190029.GA30155@meson.dyndns.org>

On Mon, Feb 24, 2003 at 03:18:02PM +1100, Andrew Bennetts wrote:
> On Sun, Feb 23, 2003 at 09:20:23PM -0600, Justin Ryan wrote:
> > 
> > > [snip]
> >
> > Is the qmarks paramstyle a required part of the DB API 2.0 spec?
> 
> No, it's even worse than that: DB API 2.0 doesn't specify which paramstyle
> to use, it merely states that possible values are "qmark", "numeric",
> "named", "format", and "pyformat".  So a DB API 2.0-compliant module is free
> to implement any of these it feels like, so long as it sets the correct
> paramstyle for it.  Thus they've defined a spec which allows 5 incompatible
> flavours.  As far as I can see, the only portable way to write queries is to
> format the queries yourself, which means handling correct quoting yourself.
> Yuck.
> 

  It occurs to me that this might be a useful place to apply localization,
gettext style. ;)  Now, if only there were an LC_SQL variable...

  Jp

-- 
"Pascal is Pascal is Pascal is dog meat."
                -- M. Devine and P. Larson, Computer Science 340
-- 
 up 15 days, 22:29, 4 users, load average: 0.03, 0.01, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030224/3ff56f05/attachment.sig>

From justin at iago.org  Mon Feb 24 15:45:42 2003
From: justin at iago.org (justin at iago.org)
Date: Mon, 24 Feb 2003 17:45:42 -0500
Subject: [Twisted-Python] session
References: <87adgxza5f.fsf@flibuste.net>
	<002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii>
	<m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii>
Message-ID: <m2r89xuwkp.fsf@justin.local.>

Christopher Armstrong <radix at twistedmatrix.com> writes:

> On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
>> Christopher Armstrong <radix at twistedmatrix.com> writes:
>> 
>> > you want to use .rpys
>> 
>> A quick look through the documentation index doesn't show anything
>> that is obviously about .rpys.  How should the uninitiated be finding
>> out that they want to use them, if they don't even see a mention?
>
> Don't look so quickly.
>
> http://twistedmatrix.com/documents/howto/using-twistedweb
>
> There's an entire section about them there.

Thanks.  Now I know what they are.

However, that doesn't really answer the point I was making.

Starting from the roots of the documentation, I would not have
found that, as I am not using or intending to use the Twisted Web server.

If these are actually recommended for general use, then they should be
presented in a non-domain-specific section of the documentation.

It would also be good if they were presented in context showing their
purpose, capbilities and role, perhaps in comparison to TAPs.

-Justin

 





From radix at twistedmatrix.com  Mon Feb 24 19:32:58 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 24 Feb 2003 21:32:58 -0500
Subject: [Twisted-Python] session
In-Reply-To: <m2r89xuwkp.fsf@justin.local.>
References: <87adgxza5f.fsf@flibuste.net> <002901c2d54f$7b8e9630$0401a8c0@razor> <20030216100910.GE29796@radii> <m2bs1c9r8d.fsf@justin.local.> <20030216181126.GH29796@radii> <m2r89xuwkp.fsf@justin.local.>
Message-ID: <20030225022656.GB1092@radii>

On Mon, Feb 24, 2003 at 05:45:42PM -0500, justin at iago.org wrote:
> Christopher Armstrong <radix at twistedmatrix.com> writes:
> > On Sun, Feb 16, 2003 at 10:31:46AM -0500, justin at iago.org wrote:
> >> A quick look through the documentation index doesn't show anything
> >> that is obviously about .rpys.  How should the uninitiated be finding
> >> out that they want to use them, if they don't even see a mention?
> >
> > Don't look so quickly.
> >
> > http://twistedmatrix.com/documents/howto/using-twistedweb
> >
> > There's an entire section about them there.
> 
> Thanks.  Now I know what they are.
> 
> However, that doesn't really answer the point I was making.
> 
> Starting from the roots of the documentation, I would not have
> found that, as I am not using or intending to use the Twisted Web server.
> 
> If these are actually recommended for general use, then they should be
> presented in a non-domain-specific section of the documentation.
> 
> It would also be good if they were presented in context showing their
> purpose, capbilities and role, perhaps in comparison to TAPs.

I'm not really sure what you mean... .rpys are specifically for
twisted.web. If you're not planning on using or developing stuff for
twisted.web, they're totally irrelevant for you. 

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From cce at clarkevans.com  Mon Feb 24 21:19:50 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 25 Feb 2003 04:19:50 +0000
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030224190029.GA30155@meson.dyndns.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local> <20030224190029.GA30155@meson.dyndns.org>
Message-ID: <20030225041950.GA13167@doublegemini.com>

I've been getting the following traceback in my log files... any ideas?
I'm using a separate thread for a long-running-query...

Traceback (most recent call last):
  File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py",
  line 121, in mainLoop

    File "/usr/local/lib/python2.2/site-packages/twisted/internet/base.py",
    line 343, in runUntilCurrent

      File
      "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
      line 162, in callback

        File
	"/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
	line 213, in _startRunCallbacks

	--- <exception caught here> ---
	  File
	  "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
	  line 227, in _runCallbacks

	    File "server.py", line 13, in bad
	        req.finish()
		  File
		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/http.py",
		  line 559, in finish

		  exceptions.AttributeError: Request instance has no
		  attribute 'channel'






From haering_python at gmx.de  Tue Feb 25 01:26:48 2003
From: haering_python at gmx.de (Gerhard =?iso-8859-1?Q?H=E4ring?=)
Date: Tue, 25 Feb 2003 08:26:48 +0000 (UTC)
Subject: [Twisted-Python] Re: problems w/ pyPgSQL and the Enterprise HOWTO
References: <20030224041802.GH12287@frobozz.local> <HOEEKPCOKELHCNIJNMAGOELLCJAA.sean@twistedmatrix.com>
Message-ID: <slrnb5ma8b.138.gerhard.haering@haering.opus-gmbh.net>

Sean Riley <sean at twistedmatrix.com> wrote:
> [...] When you pass parameters to a SQL operation with pyPgSQL is has
> absolutely no effect on performance, so you might as well just build the
> entire SQL statement youself and pass it in as a single string.
> 
> from PgSQL.py:
> 
> def execute(self, query, *parms):
> 	.
> 	_qstr = query
> 	.
> 	self.res = self.conn.conn.query(_qstr % parms)

That's because PostgreSQL started supporting prepared statements only very
recently (in 7.3). I pondered adding support for them in pyPgSQL, but
unfortunately to do so, I need to know the *PostgreSQL* type of the
parameters in advance, which is not possible in the general case.

Nothing's stopping you from using PREPARE and EXECUTE directly from
pyPgSQL, though:

cursor.execute("""
    PREPARE my_query (int4, numeric) AS
        SELECT A, B, C FROM TABLENAME WHERE X=$1 AND Y=$2
        """)

then, later on call the prepared statement:

cursor.execute("EXECUTE my_query (%s, %s)", (4, 5))

-- Gerhard




From twisted at itamarst.org  Tue Feb 25 11:16:24 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 13:16:24 -0500
Subject: [Twisted-Python] SOCKS5 Client if anyone cares
In-Reply-To: <12049833306.20030224084627@uch.net>
References: <12049833306.20030224084627@uch.net>
Message-ID: <20030225131624.28f706cf.twisted@itamarst.org>

On Mon, 24 Feb 2003 08:46:27 +0200
Dmitry Litovchenko <kwaker at uch.net> wrote:

> Sorry no unit tests at this time, I have prepared SOCKS5 unit test at
> the very beginning but there were added several parameters so
> Protocol constructors don't start correctly. I will fix this
> eventually.

Basically ditch the regex, we have a command somewhere that does this,
don't remember wwhere (isIPAddress I think.) A quick visual scan of the
code seems ok - give us some tests and I'll check this in.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From twisted at itamarst.org  Tue Feb 25 11:20:06 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 13:20:06 -0500
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030225041950.GA13167@doublegemini.com>
References: <1046044356.5933.16.camel@qutang.gnubian.org>
	<20030224024421.GF12287@frobozz.local>
	<1046056823.5928.27.camel@qutang.gnubian.org>
	<20030224041802.GH12287@frobozz.local>
	<20030224190029.GA30155@meson.dyndns.org>
	<20030225041950.GA13167@doublegemini.com>
Message-ID: <20030225132006.5e218185.twisted@itamarst.org>

On Tue, 25 Feb 2003 04:19:50 +0000
"Clark C. Evans" <cce at clarkevans.com> wrote:

> I've been getting the following traceback in my log files... any
> ideas? I'm using a separate thread for a long-running-query...

> 	    File "server.py", line 13, in bad
> 	        req.finish()
> 		  File
> 		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/ht
> 		  tp.py", line 559, in finish
> 
> 		  exceptions.AttributeError: Request instance has no
> 		  attribute 'channel'

You are calling request.finish() twice. Maybe your render method didn't
return NOT_DONE_YET to indicate that it is not finishing immediately?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From cce at clarkevans.com  Tue Feb 25 11:38:26 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 25 Feb 2003 18:38:26 +0000
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030225041950.GA13167@doublegemini.com>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local> <20030224190029.GA30155@meson.dyndns.org> <20030225041950.GA13167@doublegemini.com>
Message-ID: <20030225183826.GA15598@doublegemini.com>

The following patch seems to have solved the "symptom" below, but
I wonder if I've just masked a problem.  Clark


--- http.py.orig	Tue Feb 25 13:15:01 2003
+++ http.py	Tue Feb 25 13:16:55 2003
@@ -556,8 +556,10 @@
             self.write('')
 
         # log request
-        if hasattr(self.channel, "factory"):
-            self.channel.factory.log(self)
+        chan = getattr(self,"channel")
+        if chan:
+            fact = getattr(chan,"factory")
+            if fact: fact.log(self)
 
         self.finished = 1
         if not self.queued:



On Tue, Feb 25, 2003 at 04:19:50AM +0000, Clark C. Evans wrote:
| I've been getting the following traceback in my log files... any ideas?
| I'm using a separate thread for a long-running-query...
| 
| Traceback (most recent call last):
|   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py",
|   line 121, in mainLoop
| 
|     File "/usr/local/lib/python2.2/site-packages/twisted/internet/base.py",
|     line 343, in runUntilCurrent
| 
|       File
|       "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
|       line 162, in callback
| 
|         File
| 	"/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	line 213, in _startRunCallbacks
| 
| 	--- <exception caught here> ---
| 	  File
| 	  "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	  line 227, in _runCallbacks
| 
| 	    File "server.py", line 13, in bad
| 	        req.finish()
| 		  File
| 		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/http.py",
| 		  line 559, in finish
| 
| 		  exceptions.AttributeError: Request instance has no
| 		  attribute 'channel'
| 
| 
| 
| 
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Tue Feb 25 11:22:30 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 13:22:30 -0500
Subject: [Twisted-Python] MSN Support
In-Reply-To: <Pine.LNX.4.44.0302231949200.9081-100000@localhost.localdomain>
References: <Pine.LNX.4.44.0302231949200.9081-100000@localhost.localdomain>
Message-ID: <20030225132230.2c6d068e.twisted@itamarst.org>

On Sun, 23 Feb 2003 20:01:08 +1000 (EST)
Sam Jordan <sam at twistedmatrix.com> wrote:

> I've implemented protocol support for MSNP7 (MSN Messenger) (client
> only) using Twisted and I thought I'd post to the list to see if there
> was general interest in getting this added to Twisted.  The hope is
> that (eventually ;)) twisted.im will have msn support, this being the
> first step.

> There's still plans for more stuff to be added, but it's in a useable 
> state.  If I get the go ahead i'd be happy to commit it.

Go ahead, check it in.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
http://www.zoteca.com -- Python & Twisted consulting
***> Stop the war: http://unitedforpeace.org/ <***



From cce at clarkevans.com  Tue Feb 25 12:20:31 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Tue, 25 Feb 2003 19:20:31 +0000
Subject: [Twisted-Python] problem with long-running threads]
Message-ID: <20030225192031.GA16189@doublegemini.com>

Oops... I forgot the ,None part to getattr. 

The following patch seems to have solved the "symptom" below, but
I wonder if I've just masked a problem.  Clark


--- http.py.orig	Tue Feb 25 13:15:01 2003
+++ http.py	Tue Feb 25 13:16:55 2003
@@ -556,8 +556,10 @@
             self.write('')
 
         # log request
-        if hasattr(self.channel, "factory"):
-            self.channel.factory.log(self)
+        chan = getattr(self,"channel",None)
+        if chan:
+            fact = getattr(chan,"factory",None)
+            if fact: fact.log(self)
 
         self.finished = 1
         if not self.queued:



On Tue, Feb 25, 2003 at 04:19:50AM +0000, Clark C. Evans wrote:
| I've been getting the following traceback in my log files... any ideas?
| I'm using a separate thread for a long-running-query...
| 
| Traceback (most recent call last):
|   File "/usr/local/lib/python2.2/site-packages/twisted/internet/default.py",
|   line 121, in mainLoop
| 
|     File "/usr/local/lib/python2.2/site-packages/twisted/internet/base.py",
|     line 343, in runUntilCurrent
| 
|       File
|       "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
|       line 162, in callback
| 
|         File
| 	"/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	line 213, in _startRunCallbacks
| 
| 	--- <exception caught here> ---
| 	  File
| 	  "/usr/local/lib/python2.2/site-packages/twisted/internet/defer.py",
| 	  line 227, in _runCallbacks
| 
| 	    File "server.py", line 13, in bad
| 	        req.finish()
| 		  File
| 		  "/usr/local/lib/python2.2/site-packages/twisted/protocols/http.py",
| 		  line 559, in finish
| 
| 		  exceptions.AttributeError: Request instance has no
| 		  attribute 'channel'
| 
| 
| 
| 
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

----- End forwarded message -----



From twisted at itamarst.org  Tue Feb 25 12:14:53 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 14:14:53 -0500
Subject: [Twisted-Python] problem with long-running threads]
In-Reply-To: <20030225192031.GA16189@doublegemini.com>
References: <20030225192031.GA16189@doublegemini.com>
Message-ID: <20030225141453.50d4108a.twisted@itamarst.org>

On Tue, 25 Feb 2003 19:20:31 +0000
"Clark C. Evans" <cce at clarkevans.com> wrote:

> Oops... I forgot the ,None part to getattr. 
> 
> The following patch seems to have solved the "symptom" below, but
> I wonder if I've just masked a problem.  Clark

There's a lready a patch in CVS - but you have a bug in your code. See
my other comment.



From nbm at mithrandr.moria.org  Tue Feb 25 12:30:33 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Tue, 25 Feb 2003 21:30:33 +0200
Subject: [Twisted-Python] Beginning of jabber client protocol
Message-ID: <20030225193032.GB94769@mithrandr.moria.org>

Hi all,

Attached is some playing around I've done with twisted and jabber as a
client.  Not pretty, but just wanted to explore how microdom could be
used on the xml stream protocol jabber uses.

It can:
. connect
. receive messages
. send messages
. understand subscription requests
. understand rosters
. set online

That's about it, but I'm unlikely to have much time to spend on this for
some time, so I'm looking for comments on how to do it better for when I
do get time, and/or support for other functionality.

One thing I do know could be done better is callbacks for queries and
presence indicators.

Cheers,

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

#import sha
import sys
from twisted.internet import protocol, reactor
from twisted.python import log
from twisted.web import microdom

LOGIN = 1
AUTH_GET = 2
GETROSTER = 3

def jabberheader(host, namespace, id = None):
    str = "<?xml version='1.0' encoding='UTF-8' ?>   \
            <stream:stream to='%s' xmlns='%s'" % (host, namespace)

    if id: str = str + " id='%s' " % id
    str = str + " xmlns:stream='http://etherx.jabber.org/streams'>"
    return str

def jabberlogin(jid, method, password, resource, queryid):
    iq = microdom.Element("iq", { "type": "set", "id": queryid })
    query = microdom.Element("query", { "xmlns": "jabber:iq:auth" })
    username = ElementWithText("username", jid)
    password = ElementWithText(method, password)
    resource = ElementWithText("resource", resource)
    iq.appendChild(query)
    query.appendChild(username)
    query.appendChild(password)
    query.appendChild(resource)
    return iq

def jabbergetauthtypes(user, queryid):
    iq = microdom.Element("iq", { "type": "get", "id": queryid })
    query = microdom.Element("query", { "xmlns": "jabber:iq:auth" })
    username = ElementWithText("username", user)
    iq.appendChild(query)
    query.appendChild(username)
    return iq

def jabbergetroster(queryid):
    iq = microdom.Element("iq", { "type": "get", "id": queryid })
    query = microdom.Element("query", { "xmlns": "jabber:iq:roster" })
    iq.appendChild(query)
    return iq

def jabbersetonline():
    presence = microdom.Element("presence", { "type": "available" })
    show = ElementWithText("show", "online")
    status = ElementWithText("status", "online")
    priority = ElementWithText("priority", "5")
    presence.appendChild(show)
    presence.appendChild(status)
    presence.appendChild(priority)
    return presence

def jabbermessage(to, body):
    message = microdom.Element("message", { "to": to })
    body = ElementWithText("body", body)
    message.appendChild(body)
    return message

class ElementWithText(microdom.Element):
    def __init__(self, tagName, text, attributes=None, parentNode=None, filename=None, markpos=None):
        microdom.Element.__init__(self, tagName, attributes, parentNode, filename, markpos)
        self.text = microdom.Text(text)
        self.appendChild(self.text)

class Jabber(microdom.MicroDOMParser):
    def __init__(self):
        self.soonClosers = []
        self.laterClosers = {}
        microdom.MicroDOMParser.__init__(self, beExtremelyLenient = 1, caseInsensitive = 0)

    def connectionMade(self):
        self.queries = {}
        microdom.MicroDOMParser.connectionMade(self)
        self.factory.protocolobj = self
        self.transport.write(jabberheader(self.factory.host, "jabber:client"))

    def connectionLost(self, reason):
        microdom.MicroDOMParser.connectionLost(self, reason)
        self.factory.protocolobj = None

    def gotTagStart(self, name, attributes):
        microdom.MicroDOMParser.gotTagStart(self, name, attributes)
        if name == "stream:stream":
            el = self.elementstack.pop()
            self.jabberConnected(el)

    def gotTagEnd(self, name):
        microdom.MicroDOMParser.gotTagEnd(self, name)
        #print "Tag ended: %s" % (name)
        for document in self.documents:
            func = getattr(self, "jabber_%s" % document.tagName, self.jabberUnhandled)
            #print func
            func(document)
        self.documents = []

    def jabberUnhandled(self, document):
        print "Unhandled: \n  %s" % (document.toxml())

    def jabber_iq(self, document):
        queryid = document.attributes["id"]
        if document.attributes["type"] == "result":
            if not self.queries.has_key(queryid):
                # This shouldn't happen
                return
            if self.queries[queryid] == AUTH_GET:
                self.jabber_gotauthtypes(document)
                return
            if self.queries[queryid] == LOGIN:
                self.jabber_loginsuccessful(document)
                return

            if self.queries[queryid] == GETROSTER:
                self.jabber_gotroster(document)
                return

        if document.attributes["type"] == "error":
            if self.queries[queryid] == LOGIN:
                self.jabber_loginfailed(document)
                return

        self.jabberUnhandled(document)

    def jabber_gotroster(self, document):
        self.jabberGotRosterStart(document)
        for entry in document.childNodes[0].childNodes:
            jid = entry.attributes["jid"]
            ask = entry.attributes["ask"]
            subscription = entry.attributes["subscription"]
            if subscription == "none":
                subscription = None
            self.jabberGotRosterEntry(jid, ask, subscription, entry)
        self.jabberGotRosterEnd(document)


    def jabberGotRosterStart(self, document):
        print "Roster:"
        print "---------------------------"

    def jabberGotRosterEntry(self, jid, ask, subscription, document):
        print "User %s: " % (jid),
        if subscription:
            print "%s" % (subscription),
        if ask:
            print "%s-request" % (ask),
        print
        #print document.xml()

    def jabberGotRosterEnd(self, document):
        print "---------------------------"

    def jabber_message(self, document):
        # <message to="test at jabber.moria.org" from="nbm at jabber.moria.org/imcom"><body>hello</body></message>
        print "message"
        recipient = document.attributes["to"]
        sender = document.attributes["from"]
        body = document.childNodes[0].childNodes[0].nodeValue

        self.jabberGotMessage(sender, recipient, body, document)

    def jabberGotMessage(self, sender, recipient, body, document):
        print "Message from %s:" % (sender)
        print "\t%s" % (body)
        #self.jabberSendMessage(sender, "I got your message: %s" % (body))

    def jabberSendMessage(self, recipient, body):
        message = jabbermessage(recipient, body)
        self.transport.write(message.toxml())

    def jabber_presence(self, document):
        # <message to="test at jabber.moria.org" from="nbm at jabber.moria.org/imcom"><body>hello</body></message>
        if document.attributes["type"] == "subscribe":
            sender = document.attributes["from"]
            self.jabberSubscribeRequest(sender, document)
            return

        self.jabberUnhandled(document)

    def jabberSubscribeRequest(self, sender, document):
        print "Subscribe request from %s:" % (sender)

    def jabber_loginsuccessful(self, document):
        self.jabberLoggedIn(document)

        queryid = "getroster"
        roster = jabbergetroster(queryid)
        self.transport.write(roster.toxml())
        #print roster.toxml()
        self.queries[queryid] = GETROSTER
        
        presence = jabbersetonline()
        #print presence.toxml()
        self.transport.write(presence.toxml())

    def jabberLoggedIn(self, document):
        print "Logged in as %s on %s" % (self.factory.jid, self.factory.host)
        
    def jabber_loginfailed(self, document):
        error = document.childNodes[1]
        code = error.attributes["code"]
        reason = error.childNodes[0].nodeValue
        self.jabberFailedLogIn(error, code, reason, document)

    def jabberFailedLogIn(self, error, code, reason, document):
        print "Login failed (code %s), reason: %s" % (code, reason)

    def jabberConnected(self, element):
        self.logOn(element)

    def jabber_gotauthtypes(self, document):
        types = []
        for child in document.childNodes[0].childNodes:
            if child.tagName != "username":
                types.append(child.tagName)

        self.jabberGotAuthenticationTypes(types, document)

        #hd = sha.new(id+password).hexdigest()
        queryid = "auth"
        iq = jabberlogin(self.factory.jid, "password", self.factory.password, self.factory.resource, queryid)
        self.transport.write(iq.toxml())
        self.queries[queryid] = LOGIN

    def jabberGotAuthenticationTypes(self, types, document):
        print "Authentication types supported: ",
        print ", ".join(types)

    def logOn(self, element):
        queryid = "auth-get"
        iq = jabbergetauthtypes(self.factory.jid, queryid)
        self.queries[queryid] = AUTH_GET
        self.transport.write(iq.toxml())

    def everyTenSeconds(self):
        print self.documents
        for item in self.elementstack:
            print item
            #item.writexml(sys.stdout)

class JabberClientFactory(protocol.ClientFactory):
    protocol = Jabber

    def __init__(self, host, jid, password, resource = "tpjabber"):
        self.host = host
        self.jid = jid
        self.password = password
        self.resource = resource

    def everyTenSeconds(self):
        if self.protocolobj:
            self.protocolobj.everyTenSeconds()
        reactor.callLater(10, self.everyTenSeconds)

def main():
    host = "jabber.moria.org"
    log.startLogging(sys.stdout)
    factory = JabberClientFactory(host, "test", "test")
    reactor.connectTCP(host, 5222, factory)
    reactor.callLater(2, factory.everyTenSeconds)
    reactor.run()

if __name__ == "__main__":
    main()

From liiwi at lonesom.pp.fi  Tue Feb 25 04:57:35 2003
From: liiwi at lonesom.pp.fi (Jaakko Niemi)
Date: Tue, 25 Feb 2003 13:57:35 +0200
Subject: [Twisted-Python] oops
Message-ID: <87wujobmj4.fsf@jumper.lonesom.pp.fi>

Setting up python2.1-twisted (1.0.3-1) ...
/usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
'msg' as global in nested scope 'lambda'
  def _ebFailedLogin(self, reason):

/usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
'msg' as global in nested scope 'lambda'
  def _ebFailedLogin(self, reason):

               --j



From nbm at mithrandr.moria.org  Tue Feb 25 14:03:33 2003
From: nbm at mithrandr.moria.org (Neil Blakey-Milner)
Date: Tue, 25 Feb 2003 23:03:33 +0200
Subject: [Twisted-Python] Beginning of jabber client protocol
In-Reply-To: <20030225193032.GB94769@mithrandr.moria.org>
References: <20030225193032.GB94769@mithrandr.moria.org>
Message-ID: <20030225210332.GA95436@mithrandr.moria.org>

On Tue 2003-02-25 (21:30), Neil Blakey-Milner wrote:
> That's about it, but I'm unlikely to have much time to spend on this for
> some time, so I'm looking for comments on how to do it better for when I
> do get time, and/or support for other functionality.

I've hacked together the attached Tk client to help anyone who wishes to
play with this code.

Neil
-- 
Neil Blakey-Milner
nbm at mithrandr.moria.org
-------------- next part --------------
#!/usr/local/bin/python
#
# Copyright (c) 2002 Neil Blakey-Milner
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

import sys
import Tkinter

from twisted.internet import reactor, tksupport
from twisted.internet.protocol import ClientFactory
from twisted.python import log, logfile

import tpjabber

class TkJabber(tpjabber.Jabber):
    def jabberGotAuthenticationTypes(self, types, document):
        line = "Available authentication types: %s" % (", ".join(types))
        self.factory.screenObj.addLine(line)

    def jabberLoggedIn(self, document):
        line = "Successfully logged in as %s on %s" % (self.factory.jid,
            self.factory.host)
        self.factory.screenObj.addLine(line)
        self.factory.screenObj.status("Logged in as %s on %s" %
            (self.factory.jid, self.factory.host))

    def jabberGotMessage(self, sender, recipient, body, document):
        line = "Message from %s: %s" % (sender, body)
        self.factory.screenObj.addLine(line)
        #self.jabberSendMessage(sender, "I got your message: %s" % (body))

    def jabberFailedLogIn(self, error, code, reason, document):
        line = "Login failed (code %s), reason: %s" % (code, reason)
        self.factory.screenObj.addLine(line)

    def jabberGotRosterStart(self, document):
        line = "Roster:"
        self.factory.screenObj.addLine(line)
        line = "--------------------"
        self.factory.screenObj.addLine(line)

    def jabberGotRosterEntry(self, jid, ask, subscription, document):
        line = "%s: " % (jid)
        if subscription:
            line = line + "%s" % (subscription)
        if ask:
            line = line + "%s-request" % (ask)
        self.factory.screenObj.addLine(line)

    def jabberGotRosterEnd(self, document):
        line = "--------------------"
        self.factory.screenObj.addLine(line)

    def jabberSubscribeRequest(self, sender, document):
        line = "Subscribe request from  %s" % (sender)
        self.factory.screenObj.addLine(line)

    def jabberSendMessage(self, recipient, body):
        line = "-> *%s* %s" % (recipient, body)
        self.factory.screenObj.addLine(line)

class TkJabberClientFactory(tpjabber.JabberClientFactory):
    protocol = TkJabber

    def __init__(self, window, host, user, password):
        tpjabber.JabberClientFactory.__init__(self, host, user, password)
        self.screenObj = window
        window.factory = self

class win(Tkinter.Tk):
    # some constants to calculate window sizes
    CHARHEIGHT=15
    CHARWIDTH=8
    MARGIN=1

    # color codes
    color=['#000000', '#000080', '#008000', '#008080', '#800000', '#800080',
    #        black      blue       green      cyan       red        purple
            '#808000', '#CCCCCC', '#808080', '#0000FF', '#00FF00', '#00FFFF',
    #        brown      lt gray    gray       lt blue    lt green   lt cyan
            '#FF0000', '#FF00FF', '#FFFF00', '#FFFFFF']
    #        lt red     pink       yellow     white


    def __init__(self, title='', width=80, height=24):
        Tkinter.Tk.__init__(self)

        self.textarea = Tkinter.Text(self, width=width, height=height,
            state='disabled', wrap='word')

        self.sb = Tkinter.Scrollbar(self, command=self.textarea.yview)
        self.textarea.configure(yscrollcommand=self.sb.set)

        self.cmdlinevar = Tkinter.StringVar()
        self.cmdlinevar.set('')
        self.commandline = Tkinter.Entry(self, width=80, textvariable=self.cmdlinevar)
        self.commandline.bind('<Return>', self.gotLineInput)

        self.statusbar = Tkinter.Label(self, bd=1, relief='sunken')

        self.textarea.grid(row=0, column=0, sticky='nsew')
        self.sb.grid(row=0, column=1, sticky='ns')
        self.statusbar.grid(row=2, columnspan=2, sticky='ew')
        self.commandline.grid(row=1, columnspan=2, sticky='ew')

        self.columnconfigure(0, weight=1)
        self.rowconfigure(0, weight=1)

        self.status("Ready...")
        self.title(title)

    def close(self):
        self.withdraw()
        self.update_idletasks()
        self.destroy()

    def addLine(self, line):
        self.textarea.config(state='normal')
        self.textarea.insert('end', "\n%s" % (line))
        self.textarea.config(state='disabled')
        self.textarea.see('end')

    def status(self, msg):
        self.statusbar.config(text=msg)
        self.statusbar.update_idletasks()

    def gotLineInput(self, text):
        c = self.cmdlinevar.get()
        self.commandline.delete(0, 'end')
        split = c.split()
        if len(split):
            func = getattr(self, "input_%s" % (split[0]), self.input_UNHANDLED)
            func(split[0], " ".join(split[1:]))

    def input_UNHANDLED(self, command, text):
        self.addLine("Unknown command: %s" % (command))

    def input_echo(self, command, text):
        self.addLine(text)

    def input_message(self, command, text):
        split = text.split()
        self.factory.protocolobj.jabberSendMessage(split[0], " ".join(split[1:]))
        #self.addLine(str(dir(self.factory)))

    def input_exit(self, command, text):
        self.addLine("Shutting down...")
        #self.close()
        reactor.stop()

def main():
    host = "jabber.moria.org"
    user = "test"
    password = "test"
    #log.startLogging(logfile.LogFile("jabclient.log", "."))
    log.startLogging(sys.stdout)
    screen = win("tpjabber/Tk")
    screen.protocol('WM_DELETE_WINDOW', reactor.stop)
    tksupport.install(screen)
    factory = TkJabberClientFactory(screen, host, user, password)
    reactor.connectTCP(host, 5222, factory)
    reactor.run()

if __name__ == "__main__":
  main()

From twisted at itamarst.org  Tue Feb 25 14:37:30 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 25 Feb 2003 16:37:30 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] cog-commits list
In-Reply-To: <E18nebJ-0004e2-00@pyramid.twistedmatrix.com>
References: <E18nebJ-0004e2-00@pyramid.twistedmatrix.com>
Message-ID: <20030225163730.2640d0f9.twisted@itamarst.org>

Anyone know why cvstoys is ignoring my changes to freshCfg? COmmits to
Cog are not getting sent to the commits list :(



From radix at twistedmatrix.com  Tue Feb 25 15:21:02 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 25 Feb 2003 17:21:02 -0500
Subject: [Twisted-Python] oops
In-Reply-To: <87wujobmj4.fsf@jumper.lonesom.pp.fi>
References: <87wujobmj4.fsf@jumper.lonesom.pp.fi>
Message-ID: <20030225222102.GC1092@radii>

On Tue, Feb 25, 2003 at 01:57:35PM +0200, Jaakko Niemi wrote:
> 
> Setting up python2.1-twisted (1.0.3-1) ...
> /usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
> SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
> 'msg' as global in nested scope 'lambda'
>   def _ebFailedLogin(self, reason):
> 
> /usr/lib/python2.1/site-packages/twisted/spread/ui/gtk2util.py:179: 
> SyntaxWarning: local name 'msg' in '_ebFailedLogin' shadows use of 
> 'msg' as global in nested scope 'lambda'
>   def _ebFailedLogin(self, reason):


I see that exarkun fixed it, but it really doesn't matter; gtk2util.py
only works with 2.2, anyway (which has nested_scopes on by default). I
guess it's nice to get rid of the warning, though. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From mario at ruggier.org  Tue Feb 25 16:48:31 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Wed, 26 Feb 2003 00:48:31 +0100
Subject: [Twisted-Python] Serving files, again
Message-ID: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>

Hi,

i had hacked the rpy below, to serve files (those specified by the left  
over part of the url,
and rooted on a hard-wired rootdir on the system) following the  
suggestions of
this list, picking from the example bits, and salvaging whatever ideas  
I can
from the docs. However the mental model i'd like to form is still very  
murky...

After Clark's post from yesterday, I tried to redo this in the "proper"  
way,
i.e. using putChild. However, the best i could get was
"Request did not return a string", when trying putChild and getChild
as the content of the render() method below (with isLeaf=0).

Would anyone be able to clarify what the render() method should be
such that the url  http://host/docs/some/file.txt will return the file
at system location of: /Path/To/Somewhere/some/file.txt ?

Oh, and in general, how does one turn off directory browsing
for a twisted.web server?

Thanks, mario


############################
# docs.rpy

from twisted.protocols import http
from twisted.web import resource, error
import os

###

docsBase = '/Path/To/Somewhere'
serveFileTypes = ['','.txt','.pdf','.gif']

###

class RestrictedResource(resource.Resource):

     def isLeaf(self):
         return 1

     def render(self, request):

         # a few var used in blocks below
         subPath = '/'.join(request.postpath)
         fullPath = docsBase +'/'+ subPath
         rootPath = '/docs/'+subPath
         if not len(subPath):
             rootPath = '/docs'+subPath # otherwise get double slash  
(when postpath is zero length)
         dirlist = []

         # build list or return file
         try:
             if not os.path.exists(fullPath):
                 raise Exception # of type...
             elif os.path.isdir(fullPath):
                 dirlist = processDirlist(os.listdir(fullPath))
             elif os.path.isfile(fullPath):
                 import mimetypes
                 mimetype = mimetypes.guess_type(fullPath)[0]
                 if not mimetype:
                     mimetype = 'text/plain' # fallback
                 request.setHeader("content-type", mimetype)
                 try:
                     f = open(fullPath)
                     return f.read()
                 finally:
                     f.close()
             else:
                 raise Exception # of type..
         except:
             errpage = error.ErrorPage(http.NOT_FOUND,"Not  
Found",rootPath)
             return errpage.render(request)

         # response string
         s = '<ul>'
         for file in dirlist:
             s += '<li><a href="%s">%s</li>' % ( rootPath+'/'+file, file  
)
         s += '</ul>'
         title = 'Directory listing for ' + rootPath
         return  
'''<html><head><title>%s</title></head><body><h1>%s</h1>%s</body></ 
html>''' % (title,title,s)

###

resource = RestrictedResource()

###

def processDirlist(dirlist):
     dl = []
     for filename in dirlist:
         (name, suffix) = os.path.splitext(filename)
         if suffix in serveFileTypes:
             dl.append(filename)
     return dl

###




From cce at clarkevans.com  Tue Feb 25 22:19:12 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 05:19:12 +0000
Subject: [Twisted-Python] problem with long-running threads
In-Reply-To: <20030225132006.5e218185.twisted@itamarst.org>
References: <1046044356.5933.16.camel@qutang.gnubian.org> <20030224024421.GF12287@frobozz.local> <1046056823.5928.27.camel@qutang.gnubian.org> <20030224041802.GH12287@frobozz.local> <20030224190029.GA30155@meson.dyndns.org> <20030225041950.GA13167@doublegemini.com> <20030225132006.5e218185.twisted@itamarst.org>
Message-ID: <20030226051912.GA17895@doublegemini.com>

On Tue, Feb 25, 2003 at 01:20:06PM -0500, Itamar Shtull-Trauring wrote:
| You are calling request.finish() twice. Maybe your render method didn't
| return NOT_DONE_YET to indicate that it is not finishing immediately?

Quite right, thanks.

I have another question, since my queries take some time the user
can get bored and go backwards, click something else, or even
close the browser altogether.

Is there a way to detect this?  It'd be nice to somehow cancel
the current query executing, etc.  I'm using PyPgSQL

Best,

Clark



From cce at clarkevans.com  Tue Feb 25 23:05:26 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 06:05:26 +0000
Subject: [Twisted-Python] how to get those pretty tracebacks
Message-ID: <20030226060526.GA18184@doublegemini.com>

I'm currently using the "delayed" processing, and I was wondering how I
could get the pretty "web.Server" traceback when an error happens... right
now I got an ugly thing I wrote... ;)



From cce at clarkevans.com  Wed Feb 26 02:38:59 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 09:38:59 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <1046200834.1542.73.camel@lothlorien>
References: <OF83C43183.3D83B6FB-ON85256CD7.0005839F@juscom.com> <1046070422.13997.23.camel@lothlorien> <20030224131919.GA10280@doublegemini.com> <200302241835.21707.ChuckEsterbrook@yahoo.com> <20030225175153.GA14701@doublegemini.com> <1046200834.1542.73.camel@lothlorien>
Message-ID: <20030226093859.GA19242@doublegemini.com>

On Tue, Feb 25, 2003 at 01:20:34PM -0600, Ian Bicking wrote:
| > flexible.  I say this beacuse I was able to do path variables 
| > out-of-the-box (2 hours) with this tool; in Webware I've been 
| > maintaining a patch for over a year, and this patch isn't ideal.
| 
| Can you give a pointer to that?  I'm interesting in changing how paths
| are parsed in Webware, but I've never felt confident 

The Twisted model has the notion of a resource.   Let's start with
a simple working example:

    from twisted.web.resource import Resource
    from twisted.internet import reactor
    from twisted.web.server import Site
    from twisted.web.static import File
    
    class DynamicRequest(Resource):
        def isLeaf(self): return true
        def render(self, req):
            req.content_type = 'text/plain'
            return "uri: %s" % req.uri
    
    def run():
        root = Resource()
        root.putChild("dynamic", DynamicRequest())
        root.putChild("static",File("."))
        site = Site(root)
        reactor.listenTCP(8081,site)
        reactor.run()

The interface of resource is a collection, and has a
   getChild( pathsegment )
method is called for every segment in the path.  So,
   /foo/bar/baz
is somewhat equivalent to the following:
  site.resource.getChild('foo').getChild('bar').getChild('baz')

Twisted accomplishes this magic in a "private" function called
getChildForRequest which iterates over each path segment.  For
the current resource it first checks a mapping to see if any
static configured children (putChild) exist, and if a static
child isn't found, it calls getChild() to find the next child
in order.   Of course, the iteration stops when isLeaf() is true.

Twisted comes with many built in Resources, including a 
really nice one for doing redirects (Redirect) and dynamically
serving up a file system (File).  It also seems to have ones
for handling virtual hosts, and sessions.   Very cool.

For more detail...

http://www.twistedmatrix.com/documents/TwistedDocs/current/api/
       public/twisted.web.resource.Resource.html

On Tue, Feb 25, 2003 at 08:18:25PM +0100, Paul Jongsma wrote:
| Last night I was playing with Twisted to get some insight into it,
| one of the things which I tried to figure out was how to do
| path variables.
|
| Would you mind sharing your solution with me? The docs on
| Twisted are sparse and I haven't been able to figure it out
| yet..

Assume that your path is something like...

      /key:val/another:val/<servlet>

At any point in the tree, you should be able to add
the following "resource" which will eat all items
in the path having a colon.

class PathArgs(Resource):
    def getChild(self,path,request):
        if not(hasattr(request,'pathargs')):
            request.pathargs = {}
        pair = path.split(':')
        if 2 == len(pair):
            request.pathargs[pair[0]] = pair[1]
            return self
        return Resource.getChild(self,path,request)

To try it out, replace "root = Resource()" with "root = PathArgs()"
in the code above.   Note, you should be able to use this resource
anywhere in the tree...

I'm completely astonished with the power/simplicity of this
mechanism.  Serious Kudos to the brain who discovered it... that
such a small amount of code can add a "pathargs" attribute to
each request in a way that is completely pluggable is just
spectacular!  Clark



From cce at clarkevans.com  Wed Feb 26 03:20:21 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 10:20:21 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <20030226093859.GA19242@doublegemini.com>
References: <OF83C43183.3D83B6FB-ON85256CD7.0005839F@juscom.com> <1046070422.13997.23.camel@lothlorien> <20030224131919.GA10280@doublegemini.com> <200302241835.21707.ChuckEsterbrook@yahoo.com> <20030225175153.GA14701@doublegemini.com> <1046200834.1542.73.camel@lothlorien> <20030226093859.GA19242@doublegemini.com>
Message-ID: <20030226102021.GA19647@doublegemini.com>

| class PathArgs(Resource):
|     """ Provides a mechanism to add 'pathargs' attribute to
|         each request, and to populate it with instances of
|         key:value pairs found in child paths. 
|     """
|     def getChild(self,path,request):
|         pair = path.split(':')
|         if 2 == len(pair):
|             request.pathargs[pair[0]] = pair[1]
|             return self
|         return Resource.getChild(self,path,request)
|     def getChildWithDefault(self,path,request):
|         if not(hasattr(request,'pathargs')):
|             request.pathargs = {}
|         return Resource.getChildWithDefault(self,path,request)

I was wondering if anyone would like to add the above code to the 
web package so that people can use /path:args/servlet right out
of the box.  I hearby put the above code snippet into the public domain.  

Best,

Clark



From ab at pobox.com  Wed Feb 26 13:08:01 2003
From: ab at pobox.com (Amir Bakhtiar)
Date: Wed, 26 Feb 2003 12:08:01 -0800
Subject: [Twisted-Python] Patch for tap.ftp to add username and password options
References: <20030225123525.17019.1822.Mailman@pyramid.twistedmatrix.com>
Message-ID: <00d401c2ddd2$c96c16d0$877ba8c0@tesla>

This patch allows username and password pairs to be defined.
e.g. mktap ftp -uamir -pfoo
       mktap ftp -uamir:glyph -pfoo:bar

-A-

--- ftp.py 2003-02-26 11:31:15.000000000 -0800
+++ ftp.new.py 2003-02-26 11:43:16.000000000 -0800
@@ -33,13 +33,33 @@
     optParameters = [
         ["port", "p", "2121",                 "set the port number"],
         ["root", "r", "/usr/local/ftp",       "define the root of the
ftp-site."],
-        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."]
+        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."],
+        ["username(s)", "u", "twisted","set the login username. colon
separate for multiple."],
+        ["password(s)", "w", "twisted","set the password. colon separate
for multiple."]
     ]
     optFlags = [["anonymous", "a","allow anonymous logins"],
                 ["thirdparty", "3", "allow third-party
connections"],diff -c
                 ["otp", "","activate One-Time Passwords"]]

     longdesc = ''
+
+
+    def opt_username(self, username):
+        """Set the login username(s).
+        This can be a single username or a ':' separated
+        list of usernames.
+        """
+        self.opts['username'] = username
+    opt_u = opt_username
+
+
+    def opt_password(self, password):
+        """Set the login username(s).
+        This can be a single password or a ':' separated
+        list of passwords.
+        """
+        self.opts['password'] = password
+    opt_w = opt_password


 def addUser(factory, username, password):
@@ -60,8 +80,15 @@
     t.otp = config.opts['otp']
     t.userdict = {}

-    # adding a default user
-    addUser(t, "twisted", "twisted")
+    if config.opts['username']:
+        # Adding specified users
+        unames = config.opts['username'].split(':')
+        pwords = config.opts['password'].split(':')
+        for u, p in zip(unames, pwords):
+            addUser(t, u, p)
+    else:
+        # Adding a default user
+        addUser(t, "twisted", "twisted")

     try:
         portno = int(config.opts['port'])





From ab at pobox.com  Wed Feb 26 13:45:26 2003
From: ab at pobox.com (Amir Bakhtiar)
Date: Wed, 26 Feb 2003 12:45:26 -0800
Subject: [Twisted-Python] correction to patch to tap.ftp
Message-ID: <00de01c2ddd7$fe0dce60$877ba8c0@tesla>

Got confused by the interplay of optParameters and opt_ methods.
Here is a simplified version of my earlier patch.

This patch allows username and password pairs to be defined.
e.g. mktap ftp -uamir -wfoo
       mktap ftp -uamir:glyph -wfoo:bar

-A-


--- ftp.py 2003-02-26 12:41:27.000000000 -0800
+++ ftp.orig.py 2003-02-26 11:31:15.000000000 -0800
@@ -33,16 +33,14 @@
     optParameters = [
         ["port", "p", "2121",                 "set the port number"],
         ["root", "r", "/usr/local/ftp",       "define the root of the
ftp-site."],
-        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."],
-        ["username", "u", "twisted","set login username. colon separate for
multiple."],
-        ["password", "w", "twisted","set password. colon separate for
multiple."]
+        ["useranonymous", "", "anonymous",    "Name of the anonymous
user."]
     ]
     optFlags = [["anonymous", "a","allow anonymous logins"],
                 ["thirdparty", "3", "allow third-party connections"],
                 ["otp", "","activate One-Time Passwords"]]

     longdesc = ''
-
+

 def addUser(factory, username, password):
     factory.userdict[username] = {}
@@ -62,15 +60,8 @@
     t.otp = config.opts['otp']
     t.userdict = {}

-    if config.opts['username']:
-        # Adding specified users
-        unames = config.opts['username'].split(':')
-        pwords = config.opts['password'].split(':')
-        for u, p in zip(unames, pwords):
-            addUser(t, u, p)
-    else:
-        # Adding a default user
-        addUser(t, "twisted", "twisted")
+    # adding a default user
+    addUser(t, "twisted", "twisted")

     try:
         portno = int(config.opts['port'])






From cce at clarkevans.com  Wed Feb 26 12:20:02 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 19:20:02 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
Message-ID: <20030226192002.GA22857@doublegemini.com>

On Wed, Feb 26, 2003 at 12:48:31AM +0100, Mario Ruggier wrote:
| Would anyone be able to clarify what the render() method should be
| such that the url  http://host/docs/some/file.txt will return the file
| at system location of: /Path/To/Somewhere/some/file.txt ?

I don't know if this is your question; but I'd return the contents
of file.txt when the file size is less than a pre-defined size, say 32K.
Beyond that, the file should be DEFERRED into a thread which sends
the file a chunk at a time.   Further, it'd be cool if I could 
specify in the request object if the response should be compressed
via gzip.

This brings up another clarification of Resource, it'd be nice
if there was a sub-class of Resource called a "FilterResource"
which basically didn't serve content but which perhaps consumed
path segments or arguments or cookies and perhaps altered the
request object.   A FilterResource would have an additional
method called "initRequest" which could add stuff like my 
pathargs variable, and in the above request could add a flag
to the request object specifying if the file content should
be compressed.

Clark



From cce at clarkevans.com  Wed Feb 26 12:48:52 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 19:48:52 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org>
Message-ID: <20030226194852.GB22857@doublegemini.com>

On Wed, Feb 26, 2003 at 12:48:31AM +0100, Mario Ruggier wrote:
| 
| Oh, and in general, how does one turn off directory browsing
| for a twisted.web server?

You could do this in the constructor,

    path = RestrictedResource('/my/path',directoryBrowsing=false)

But, this really should be done on a per-request mechanism.  Perhaps
request needs a "options" collection where a top-level Resource 
can set processing options for lower-level resources in the path
chain (see the FilterResource post previously).

Anyway, I wanted to respond to your code below...

| class RestrictedResource(resource.Resource):
|     def isLeaf(self):
|         return 1
|     def render(self, request):
...
|         fullPath = docsBase +'/'+ subPath
|         try:
|             if not os.path.exists(fullPath):
|                 raise Exception # of type...
|             elif os.path.isdir(fullPath):
|                 dirlist = processDirlist(os.listdir(fullPath))
|             elif os.path.isfile(fullPath):
|                 import mimetypes

This is interesting.  I would have probably done it a less
efficient way (but perhaps more flexible)?  I would have 
used two resources, a DirectoryResource and a FileResource.  

The DirectoryResource would override getChild(path,request) and 
dynamically look for a child in the current path, leveraging the
descent operation in getChildForRequest.  This object would then
either return the subordinate NotFoundResource, DirectoryResource 
or a FileResource object depending on what the path matched. 
The constructor for these child resources would have a fullpath,
constructed by concatinating the fullpath of the current Directory
with the given path.

The FileResource would serve up the given file, by overriding
the render(request) method as you have specified above.  In this
way one could provide a replacement FileResource or override a
DirectoryResource, etc.  

If you wanted to get tricky, you could "stuff" the path state
into the request object and the DirectoryResource could 
'return self' instead of creating intermediary Directories.
This leads to the following more general questions:

  1.  There should be a general way to attach "resource specific"
      data to a given request, for DirectoryResource it'd be the
      current path, for PathArgs, it'd be the mapping of path
      arguments to variables.

  2.  This mechanism could thus be used for inter-resource 
      communication, say where a UserSession(FilterResource)
      would attach a directive to "compress_files" or not
      to subordinate FileResources.

As I said in a previous post, I'm quite impressed with the
whole "Resource" concept and the "tail recursive" descent
mechanism provided via getChildForRequest.

Hope this helps...

Clark



From cce at clarkevans.com  Wed Feb 26 12:51:35 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 19:51:35 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226192002.GA22857@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com>
Message-ID: <20030226195135.GA23100@doublegemini.com>

On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
| On Wed, Feb 26, 2003 at 12:48:31AM +0100, Mario Ruggier wrote:
| | Would anyone be able to clarify what the render() method should be
| | such that the url  http://host/docs/some/file.txt will return the file
| | at system location of: /Path/To/Somewhere/some/file.txt ?
| 
| I don't know if this is your question; but I'd return the contents
| of file.txt when the file size is less than a pre-defined size, say 32K.
| Beyond that, the file should be DEFERRED into a thread which sends
| the file a chunk at a time.   Further, it'd be cool if I could 
| specify in the request object if the response should be compressed
| via gzip.

Actually, shouldn't it always be deferred?  The file system may
be writing at the time (via another thread) so doing a file read
(even for a tiny file) at this point could cause significant lag 
or am I completely mis-understanding this whole async-stuff?

Clark



From exarkun at intarweb.us  Wed Feb 26 12:50:31 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 26 Feb 2003 14:50:31 -0500
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226195135.GA23100@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com>
Message-ID: <20030226195031.GA21673@meson.dyndns.org>

On Wed, Feb 26, 2003 at 07:51:35PM +0000, Clark C. Evans wrote:
> On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
> | 
> | I don't know if this is your question; but I'd return the contents
> | of file.txt when the file size is less than a pre-defined size, say 32K.
> | Beyond that, the file should be DEFERRED into a thread which sends
> | the file a chunk at a time.   Further, it'd be cool if I could 
> | specify in the request object if the response should be compressed
> | via gzip.
> 
> Actually, shouldn't it always be deferred?  The file system may
> be writing at the time (via another thread) so doing a file read
> (even for a tiny file) at this point could cause significant lag 
> or am I completely mis-understanding this whole async-stuff?

  We usually consider IO on local fixed disks to be fast enough.  In any
case, select() in POSIX tells you that files are always ready for reading,
so being smarter about it requires using a different mechanism (which is
entirely possible, but requires a different reactor, not to mention platform
support).

  BTW, deferring to a thread would not be the way to go.  Something similar
to twisted.spread.util.Pager would probably be appropriate, or maybe
something that implements IProducer.  Or maybe just a chain of Deferreds :)
No need to go into threads for this, though.

  Jp

-- 
        "I quite agree with you," said the Duchess; "and the moral of
that is -- Be what you would seem to be' -- or, if you'd like it put
more simply -- Never imagine yourself not to be otherwise than what it
might appear to others that what you were or might have been was not 
otherwise than what you had been would have appeared to them to be
otherwise.'"       -- Lewis Carrol, "Alice in Wonderland"
-- 
 up 18 days, 0:29, 5 users, load average: 0.47, 0.28, 0.14
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030226/424ce591/attachment.sig>

From cce at clarkevans.com  Wed Feb 26 14:06:57 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 26 Feb 2003 21:06:57 +0000
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226195031.GA21673@meson.dyndns.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com> <20030226195031.GA21673@meson.dyndns.org>
Message-ID: <20030226210657.GB23608@doublegemini.com>

Thanks Jp, this is helpful.

On Wed, Feb 26, 2003 at 02:50:31PM -0500, Jp Calderone wrote:
|   We usually consider IO on local fixed disks to be fast enough.  In any
| case, select() in POSIX tells you that files are always ready for reading,
| so being smarter about it requires using a different mechanism (which is
| entirely possible, but requires a different reactor, not to mention platform
| support).

The files that I need to serve up are quite big (some are a meg or more),
and it would be bad to block other resources while the file loads into
memory via file.read() or for the time it takes for the client to 
completely consume the file.

|   BTW, deferring to a thread would not be the way to go.  Something similar
| to twisted.spread.util.Pager would probably be appropriate, or maybe
| something that implements IProducer.  Or maybe just a chain of Deferreds :)
| No need to go into threads for this, though.

Ok.  So this would be the equivalent of a "file generator" which
returns its content in say 4K chunks?  This would work by returning
a callback which (a) wrote out 4K and then (b) deferred itself again?

class deferredreader:
    def __init__(self,filename,chunksize = 4096):
        self.filename  = filename
        self.file      = None
        self.chunksize = 4096
    def callback(self,req):
        if not self.file:
            self.file = open(filename,"r")
            return DEFERRED
        chunk = self.file.read(self.chunksize)
        if chunk: 
            req.write(chunk) 
            return DEFERRED
        else:
            return ""

(written but not tested)

Is this the Jist of it?  It still has the problem that file.read 
is a blocking call; I suppose for unix platforms you could use
"poll()" to not block.  This is probably resonable; on the server
side you don't block, while for desktop windows clients it blocks.

Is this what you were thinking with the chain of deferreds?

Best,

Clark



From radix at twistedmatrix.com  Wed Feb 26 15:23:44 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 26 Feb 2003 17:23:44 -0500
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226195031.GA21673@meson.dyndns.org>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com> <20030226195031.GA21673@meson.dyndns.org>
Message-ID: <20030226222344.GB8157@radii>

On Wed, Feb 26, 2003 at 02:50:31PM -0500, Jp Calderone wrote:
> On Wed, Feb 26, 2003 at 07:51:35PM +0000, Clark C. Evans wrote:
> > On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
> > | 
> > | I don't know if this is your question; but I'd return the contents
> > | of file.txt when the file size is less than a pre-defined size, say 32K.
> > | Beyond that, the file should be DEFERRED into a thread which sends
> > | the file a chunk at a time.   Further, it'd be cool if I could 
> > | specify in the request object if the response should be compressed
> > | via gzip.
> > 
> > Actually, shouldn't it always be deferred?  The file system may
> > be writing at the time (via another thread) so doing a file read
> > (even for a tiny file) at this point could cause significant lag 
> > or am I completely mis-understanding this whole async-stuff?
> 
>   We usually consider IO on local fixed disks to be fast enough.  In any
> case, select() in POSIX tells you that files are always ready for reading,
> so being smarter about it requires using a different mechanism (which is
> entirely possible, but requires a different reactor, not to mention platform
> support).
> 
>   BTW, deferring to a thread would not be the way to go.  Something similar
> to twisted.spread.util.Pager would probably be appropriate, or maybe
> something that implements IProducer.  Or maybe just a chain of Deferreds :)
> No need to go into threads for this, though.

static.File already reads/writes in chunks, and it uses Producers.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From mario at ruggier.org  Wed Feb 26 15:36:33 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Wed, 26 Feb 2003 23:36:33 +0100
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <20030226093859.GA19242@doublegemini.com>
Message-ID: <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org>

Thanks Clark, these little examples and explanations are very helpful.

I have a question on the PathArgs Resource you propose. Assuming we use
the PathArgs class as you suggest, there will be an exception thrown 
when a
requested "dynamic" URL does not include any actual path args, e.g. the 
URL
http://host/name:value/dynamic/whatever does actually work as 
suggested, with
variable "name" being added to the pathargs dict. However, if we ask 
simply for
http://host/dynamic/whatever then an exception is thrown because we try 
to access
req.pathargs, that is not set in this case (PathArgs.getChild() is not 
called)

Or, to put it differently, how can we make sure that Request acquires 
the pathargs
attribute, so that all children do not have to check for existance? (To 
me this seems
similar to having a request.args being always defined, even if no args.)

I am re-including your code below, slightly modified, to make myself 
clear...

mario

##

from twisted.web.resource import Resource
from twisted.internet import reactor
from twisted.web.server import Site
from twisted.web.static import File

class PathArgs(Resource):
     def __init__(self):
         Resource.__init__(self)
     def getChild(self,path,request):
         if not(hasattr(request,'pathargs')):
             request.pathargs = {}
         pair = path.split(':')
         if 2 == len(pair):
             request.pathargs[pair[0]] = pair[1]
             return self
         return Resource.getChild(self,path,request)

class DynamicRequest(Resource):
     def isLeaf(self):
         return true
     def render(self, req):
         req.content_type = 'text/plain'
         if not(hasattr(req,'pathargs')): # can this check be avoided?
             req.pathargs = {}
         return "uri: %s \npathargs: %s " % ( req.uri, req.pathargs )

def run():
     root = PathArgs()
     root.putChild("dynamic", DynamicRequest())
     root.putChild("static",File("."))
     site = Site(root)
     reactor.listenTCP(8081,site)
     reactor.run()

run()

##




From a00tch00 at nchc.gov.tw  Wed Feb 26 16:03:55 2003
From: a00tch00 at nchc.gov.tw (tch)
Date: Thu, 27 Feb 2003 07:03:55 +0800
Subject: [Twisted-Python] distant learning, video conference
References: <20030226123531.17434.95680.Mailman@pyramid.twistedmatrix.com>
Message-ID: <002501c2ddeb$563126b0$493c6e8c@dt.nchc.gov.tw>

Hi,All:

    Is twistedpython a framework suitable for developing distant learning
and/or video conference application?

Regards,

Tsuangchi Huang
 




From mattcampbell at pobox.com  Wed Feb 26 16:39:49 2003
From: mattcampbell at pobox.com (Matt Campbell)
Date: Wed, 26 Feb 2003 17:39:49 -0600
Subject: [Twisted-Python] distant learning, video conference
In-Reply-To: <002501c2ddeb$563126b0$493c6e8c@dt.nchc.gov.tw>
References: <20030226123531.17434.95680.Mailman@pyramid.twistedmatrix.com> <002501c2ddeb$563126b0$493c6e8c@dt.nchc.gov.tw>
Message-ID: <20030226233949.GA25778@mattc.dyndns.org>

Well, distance learning is kind of a broad term.  If it's text chat
you're looking for, Twisted.Words may be a good solution.  With it,
you can run your own server, and either use the included client
(Instance Messenger) or write your own.  For audio conferencing,
you should look at Speak Freely (http://www.speakfreely.org/) and
OpenH323 (http://www.openh323.org/).  OpenH323 may be able to do video
conferencing, but that's a subject I neither know nor care much about.

On Thu, Feb 27, 2003 at 07:03:55AM +0800, tch wrote:
>     Is twistedpython a framework suitable for developing distant learning
> and/or video conference application?
-- 
Matt Campbell
Phone:  (316) 652-8727
WWW:  http://pobox.com/~mattcampbell/



From andrew-twisted at puzzling.org  Wed Feb 26 16:57:46 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 27 Feb 2003 10:57:46 +1100
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226192002.GA22857@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com>
Message-ID: <20030226235746.GB16813@frobozz.local>

On Wed, Feb 26, 2003 at 07:20:02PM +0000, Clark C. Evans wrote:
> the file a chunk at a time.   Further, it'd be cool if I could 
> specify in the request object if the response should be compressed
> via gzip.

Probably what should happen is that Twisted Web should look for the
Content-Transfer-Encoding header (or whatever it's called), and
automatically gzip if appropriate.  The response should probably be able to
indicate that gzipping would a waste of time, though -- there's not much
point to gzipping jpegs, or .gz files...

-Andrew.




From juliorom at ceibo.entelnet.bo  Wed Feb 26 18:45:51 2003
From: juliorom at ceibo.entelnet.bo (Julio Rommi =?iso-8859-15?q?O=F1a=20Miranda?=)
Date: Wed, 26 Feb 2003 21:45:51 -0400
Subject: [Twisted-Python] Woven and others
Message-ID: <20030227014315.9ABD4791F@pinky.miranda>

Hi everyone,

I was reading the source of woven (with the hwlp of Issues) what a pice of 
code!!!

I like the idea, but I was asking me why woven should spend all it's power 
only with web, it would be nice if it work with some GUI interface. I mean, 
using all the VCM structure to work with them (TK, wx, etc.) as a interface 
building.

This should not be too hard because the only the View component component 
should be modified. 

Does Twisted has something like this? a generic woven?

Regards.

-- 
Julio



From cce at clarkevans.com  Wed Feb 26 20:11:15 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 27 Feb 2003 03:11:15 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org>
References: <20030226093859.GA19242@doublegemini.com> <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org>
Message-ID: <20030227031115.GB25107@doublegemini.com>

On Wed, Feb 26, 2003 at 11:36:33PM +0100, Mario Ruggier wrote:
| Thanks Clark, these little examples and explanations are very helpful.

Oh, glad it helped; I'm a newbie my self.

| Or, to put it differently, how can we make sure that Request acquires 
| the pathargs attribute, so that all children do not have to check for 
| existance?

Ok.  Here is a patched one that violates a bit of encapsulation 
by overriding getChildWithDefault() as well.  Furthermore, this
new version returns pathargs as a list to stay consistent with args.

...

from twisted.web.resource import Resource
from twisted.internet import reactor
from twisted.web.server import Site
from twisted.web.static import File

class PathArgs(Resource):
    """ Provides a mechanism to add 'pathargs' attribute to
        each request, and to populate it with instances of
        key:value pairs found in child paths.
    """
    def getChild(self,path,request):
        pair = path.split(':')
        if 2 == len(pair):
            (key,val) = pair
            lst = request.pathargs.get(key,[])
            if not lst: request.pathargs[key] = lst
            lst.append(val)
            return self
        return Resource.getChild(self,path,request)
    def getChildWithDefault(self,path,request):
        if not(hasattr(request,'pathargs')):
            request.pathargs = {}
        return Resource.getChildWithDefault(self,path,request)

class DynamicRequest(Resource):
    def isLeaf(self):
        return true
    def render(self, req):
        req.setHeader("Content-type","text/plain")
        resp = "uri: %s \nargs: %s\npathargs: %s\n"
        return resp % ( req.uri, req.args, req.pathargs )

def run():
    root = PathArgs()
    root.putChild("dynamic", DynamicRequest())
    root.putChild("static",File("."))
    site = Site(root)
    reactor.listenTCP(8080,site)
    reactor.run()

if '__main__' == __name__:
    run()
#
# And then go to...
# http://localhost:8080/key:one/key:two/another:value/dynamic?key=three
#




From cce at clarkevans.com  Wed Feb 26 20:43:18 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 27 Feb 2003 03:43:18 +0000
Subject: [Twisted-Python] Twisted Resources / PathArgs
In-Reply-To: <20030227031115.GB25107@doublegemini.com>
References: <20030226093859.GA19242@doublegemini.com> <C228FAED-49DA-11D7-A0BE-000393756786@ruggier.org> <20030227031115.GB25107@doublegemini.com>
Message-ID: <20030227034318.GA26518@doublegemini.com>

#
# pathargs.py
#
# Author: Clark Evans, Axista, Inc.
# Copyright: public domain
# Date: Wed, Febuary 26, 2003
#
# To test, simply run on the command line and then visit this url:
# http://localhost:8080/key:one/key:two,three/another:value/dynamic?key=four
#

from twisted.web.resource import Resource
class PathArgs(Resource):
    """ Provides a mechanism to add 'pathargs' attribute to
        each request, and to populate it with instances of
        key:value pairs found in child paths.  The value for
        each key will be an array, optionally split further
        with a comma.
    """
    def __init__(self,splitOnComma=0):
        Resource.__init__(self)
        self.splitOnComma = splitOnComma
    def getChild(self,path,request):
        pair = path.split(':')
        if 2 == len(pair):
            (key,val) = pair
            lst = request.pathargs.get(key,[])
            if not lst: request.pathargs[key] = lst
            if self.splitOnComma:
                for itm in val.split(','):
                    lst.append(itm)
            else:
                lst.append(val)
            return self
        return Resource.getChild(self,path,request)
    def getChildWithDefault(self,path,request):
        if not(hasattr(request,'pathargs')):
            request.pathargs = {}
        return Resource.getChildWithDefault(self,path,request)

def test():
    from twisted.internet import reactor
    from twisted.web.server import Site
    from twisted.web.static import File

    class DynamicRequest(Resource):
        def isLeaf(self):
            return true
        def render(self, req):
            req.setHeader('Content-type','text/plain')
            resp = 'uri: %s \nargs: %s\npathargs: %s\n'
            return resp % ( req.uri, req.args, req.pathargs )

    root = PathArgs(splitOnComma=1)
    root.putChild('dynamic', DynamicRequest())
    root.putChild('static',File('.'))
    site = Site(root)
    reactor.listenTCP(8080,site)
    reactor.run()

if '__main__' == __name__:
    test()



From cce at clarkevans.com  Wed Feb 26 21:34:06 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Thu, 27 Feb 2003 04:34:06 +0000
Subject: [Twisted-Python] minor patch to twisted.html.web
Message-ID: <20030227043406.GA26944@doublegemini.com>

When calling escape, this function seems to assume that
the object being called is a string; although a user
program could do this, an explict conversion here is
more generous with the input arguments.

--- html.py.orig        Wed Feb 26 23:17:00 2003
+++ html.py     Wed Feb 26 23:17:39 2003
@@ -36,6 +36,7 @@

 def escape(text):
     "Escape a few HTML special chars with HTML entities."
+    text = str(text)
     for s, h in [('&', '&amp;'), #order is important
                  ('<', '&lt;'),
                  ('>', '&gt;'),



From bob at redivi.com  Wed Feb 26 21:33:31 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 26 Feb 2003 23:33:31 -0500
Subject: [Twisted-Python] minor patch to twisted.html.web
In-Reply-To: <20030227043406.GA26944@doublegemini.com>
Message-ID: <9FF2809C-4A0C-11D7-B808-000A95686CD8@redivi.com>

On Wednesday, Feb 26, 2003, at 23:34 America/New_York, Clark C. Evans 
wrote:

> When calling escape, this function seems to assume that
> the object being called is a string; although a user
> program could do this, an explict conversion here is
> more generous with the input arguments.

What about unicode?  Ignoring the fact that unicode characters aren't 
escaped properly by this function (yet), if you str(text) you lose 
everything but 7bit ascii characters at best, and could very well raise 
an exception in the conversion to str.

-bob




From glyph at twistedmatrix.com  Wed Feb 26 23:13:33 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 27 Feb 2003 00:13:33 -0600
Subject: [Twisted-Python] minor patch to twisted.html.web
In-Reply-To: <9FF2809C-4A0C-11D7-B808-000A95686CD8@redivi.com>
Message-ID: <998055FC-4A1A-11D7-B820-000393C9700E@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Wednesday, February 26, 2003, at 10:33 PM, Bob Ippolito wrote:

> What about unicode?  Ignoring the fact that unicode characters aren't 
> escaped properly by this function (yet), if you str(text) you lose 
> everything but 7bit ascii characters at best, and could very well 
> raise an exception in the conversion to str.

I agree.  Thanks for the thought, Clark, but as traditional Python 
wisdom says, "In the face of ambiguity, refuse to guess."
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (Darwin)

iD8DBQE+XaySvVGR4uSOE2wRAkLLAKCsOsVkEZelKizeaLMcsIBOjxCJzgCeP2Gk
ntlDPVaDocCwBC3Fd19kAR0=
=8eHG
-----END PGP SIGNATURE-----




From iko at strakt.com  Thu Feb 27 02:11:06 2003
From: iko at strakt.com (Anders Hammarquist)
Date: Thu, 27 Feb 2003 10:11:06 +0100
Subject: [Twisted-Python] SMTP client patch 
In-Reply-To: Your message of "Thu, 20 Feb 2003 22:37:08 CST."
             <231CF4B2-4556-11D7-B2AA-000393C9700E@twistedmatrix.com> 
References: <231CF4B2-4556-11D7-B2AA-000393C9700E@twistedmatrix.com> 
Message-ID: <200302270911.h1R9B6M4030464@fido.strakt.com>

In a message of Thu, 20 Feb 2003 22:37:08 CST, Glyph Lefkowitz writes:
>On Thursday, February 20, 2003, at 06:29 PM, Anders Hammarquist wrote:
>
>> In a message of Thu, 20 Feb 2003 16:14:31 CST, Glyph Lefkowitz writes:
>>> 1. it's not backwards compatible.  DocmaServer uses its own sendEmail,
>>> which depends on the sentEmail callback's signature.
>>
>> way to find out what happend to failed recipient addresses. I
>> suppose I could add logic to try and detect an old-style sentEmail.
>
>Hmm... if you do that (with inspect or somesuch) please make sure to 
>spit out an ugly warning so that people will know to fix their code.  
>We shouldn't be supporting that long-term.

Done.

>>> I personally would like to see Twisted's sendEmail deprecated and
>>
>> As in using sendmail plus the email module? Sure, will do.
>
>Actually I'd prefer the existing code not to be changed, but to spit 
>out a warning, since the interface ought to be "just pass a Message", 
>not "pass a bunch of crap that gets turned into a Message".  
>Considering how easy it is to turn a Message object into a long string, 
>I don't think a separate method is required for this...

Right, and I agree with you that the creation of the rfc-822-format
is not part of send(E)mail's job (which is why I wrote the sendmail
function in the first place). So I've added a deprecation warning
stating that you should consider changing your code to using the
email module and sendmail()

>As long as it's still maintained, though, the existing code should 
>remain in place rather than dragging a new dependency in for use with 
>2.1 (since 'email' is only in the stdlib since 2.2)

It's not much code (right now anyway, but it seems to be growing) so
it shouldn't be hard to keep it up to snuff in it's current state.

>>> 3. What's up with the SMTP logger?  and logging every line in the
>>> client?  This is duplicated generic code, and should probably be
>>> refactored into someplace more appropriate, like twisted.python.log.
>>
>> ). My first look at t.p.log suggested not using it, since it dealt
>> mostly with syslog()-like logging.
>
>You're right.  Given this use-case though, it sounds like you need 
>little more beyond cStringIO...?

Well, I wanted to be able to limit the size of it, but apart from that
cStringIO would've done the job.

>t.p.log might not be the best place to put it, come to think of it, 
>since your impression of 'something like syslog' is correct.  But 
>somewhere in t.p in general.

I made it t.py.linelog. Feel free to change the name if you come
up with something better.

/Anders

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/x-patch
Size: 28840 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030227/0dbfdbc7/attachment-0002.bin>

From theller at python.net  Thu Feb 27 09:40:22 2003
From: theller at python.net (Thomas Heller)
Date: 27 Feb 2003 17:40:22 +0100
Subject: [Twisted-Python] Traceback in windows installer
Message-ID: <wujlpthl.fsf@python.net>

I get a traceback when runing the 1.0.3 windows installer.
Anyone else seeing this, or is it a problem on my side?

Thomas

Traceback (most recent call last):
  File "C:\Python22\Scripts\twisted_postinstall.py", line 25, in ?
    from twisted.python.shortcut import Shortcut
  File "C:\Python22\Lib\site-packages\twisted\python\shortcut.py", line 7, in ?
    from win32com.shell import shell
  File "C:\Python22\lib\site-packages\win32com\__init__.py", line 95, in ?
    SetupEnvironment()
  File "C:\Python22\lib\site-packages\win32com\__init__.py", line 32, in SetupEnvironment
    __path__.append( win32api.RegQueryValue(key, "Extensions" ))
TypeError: this constructor takes no arguments
*** run_installscript: internal error 0xFFFFFFFF ***






From mario at ruggier.org  Thu Feb 27 09:51:02 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 27 Feb 2003 17:51:02 +0100
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226194852.GB22857@doublegemini.com>
Message-ID: <A7A3E43A-4A73-11D7-8E7B-000393756786@ruggier.org>

Thanks, I have played with your suggestions somewhat.
But, I want to avoid doing things such as overriding File's
render() as I had initially (File.render() does too many nice things
to throw away so easily, as pointed out in the other posts).

A source of confusion for me is knowing which,
and when, specific methods are called automatically.
Particularly, it would be nice to have a clarification (in the
API docs) of when the methods getChildForRequest() and
getChildWithDefault() are called -- they seem not be called in
a non-siteroot resource. Things worked well with PathArgs, it
being set as root resource, but for an arbitrary resource,
like the example I previoulsy included, the game seems to
change .

But, indeed, as Clark, I do find this model of cascading requests
very intriguing, and tantalizingly powerful...

Cheers, mario


> Anyway, I wanted to respond to your code below...
>
> | class RestrictedResource(resource.Resource):
> |     def isLeaf(self):
> |         return 1
> |     def render(self, request):
> ...
> |         fullPath = docsBase +'/'+ subPath
> |         try:
> |             if not os.path.exists(fullPath):
> |                 raise Exception # of type...
> |             elif os.path.isdir(fullPath):
> |                 dirlist = processDirlist(os.listdir(fullPath))
> |             elif os.path.isfile(fullPath):
> |                 import mimetypes
>
> This is interesting.  I would have probably done it a less
> efficient way (but perhaps more flexible)?  I would have
> used two resources, a DirectoryResource and a FileResource.
>
> The DirectoryResource would override getChild(path,request) and
> dynamically look for a child in the current path, leveraging the
> descent operation in getChildForRequest.  This object would then
> either return the subordinate NotFoundResource, DirectoryResource
> or a FileResource object depending on what the path matched.
> The constructor for these child resources would have a fullpath,
> constructed by concatinating the fullpath of the current Directory
> with the given path.
>
> The FileResource would serve up the given file, by overriding
> the render(request) method as you have specified above.  In this
> way one could provide a replacement FileResource or override a
> DirectoryResource, etc.
>
> If you wanted to get tricky, you could "stuff" the path state
> into the request object and the DirectoryResource could
> 'return self' instead of creating intermediary Directories.
> This leads to the following more general questions:
>
>   1.  There should be a general way to attach "resource specific"
>       data to a given request, for DirectoryResource it'd be the
>       current path, for PathArgs, it'd be the mapping of path
>       arguments to variables.
>
>   2.  This mechanism could thus be used for inter-resource
>       communication, say where a UserSession(FilterResource)
>       would attach a directive to "compress_files" or not
>       to subordinate FileResources.
>
> As I said in a previous post, I'm quite impressed with the
> whole "Resource" concept and the "tail recursive" descent
> mechanism provided via getChildForRequest.
>
> Hope this helps...




From mario at ruggier.org  Thu Feb 27 10:15:08 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 27 Feb 2003 18:15:08 +0100
Subject: [Twisted-Python] reactor.run() or application.save()+run?
Message-ID: <055C3DF0-4A77-11D7-8E7B-000393756786@ruggier.org>

Hi,

trying to turn the little Resources example (below) into an application
(replacing use of reactor with application), so that I can save it as 
an application,
when i call "twistd -f pargs-webapp.tap", I get the following error :

Failed to load application: <twisted.persisted.styles.Ephemeral 
instance at 0x3ad330> is not safe for unpickling

If I do not call save() but just run(), the application runs 
correctly...

Any ideas?

mario


###

from twisted.web.resource import Resource
#from twisted.internet import reactor
from twisted.internet import app
from twisted.web.server import Site
from twisted.web.static import File
from PathArgs import PathArgs

class DynamicRequest(Resource):
     def isLeaf(self):
         return false
     def render(self, req):
         req.setHeader('Content-type','text/plain')
         resp = 'uri: %s \nargs: %s\npathargs: %s\n'
         return resp % ( req.uri, req.args, req.pathargs )

###

def run():
     root = PathArgs(splitOnComma=1)
     root.putChild("dynamic", DynamicRequest())
     root.putChild("static",MyFile("."))
     site = Site(root)
     #reactor.listenTCP(8081,site)
     #reactor.run()
     application = app.Application('webapp')
     application.listenTCP(8081,site)
     #application.run()
     application.save('pargs')

###

if __name__ == '__main__':
     run()

###




From warner at lothar.com  Thu Feb 27 12:59:55 2003
From: warner at lothar.com (Brian Warner)
Date: Thu, 27 Feb 2003 11:59:55 -0800 (PST)
Subject: [Twisted-Python] reactor.run() or application.save()+run?
References: <055C3DF0-4A77-11D7-8E7B-000393756786@ruggier.org>
Message-ID: <20030227.115955.76774077.warner@lothar.com>

Mario Ruggier <mario at ruggier.org> writes:
> when i call "twistd -f pargs-webapp.tap", I get the following error :
> 
> Failed to load application: <twisted.persisted.styles.Ephemeral instance at
> 0x3ad330> is not safe for unpickling
> 
> If I do not call save() but just run(), the application runs correctly...

It's probably related to this one:

 http://twistedmatrix.com/documents/howto/faq#auto23

In short, app.save() is storing an object of class __main__.DynamicRequest,
which cannot be loaded. You need to import that class from yourself to get a
globally-correct name.

It would be nice if we could detect this sort of thing at .save() time and
emit a warning..

 -Brian




From 2002 at weholt.org  Thu Feb 27 14:59:26 2003
From: 2002 at weholt.org (Thomas Weholt)
Date: Thu, 27 Feb 2003 22:59:26 +0100
Subject: [Twisted-Python] Serving a binary files from disk, outside folders for static content
Message-ID: <001001c2deab$7ff51fe0$0401a8c0@razor>

I need to serve a binary file from disk, not available in the normal folder for static content. In my code so far I've done something like this in the render-method :

request.setContentType( .... content-type set based on extension of file to serve )
f = open(somefile)
while 1:
    d = f.read(2048) # what's the correct size to read
    if not d:
        break
    request.write(d)
request.finish()
return

It seem to return the data OK, it's visible in the browser, but exceptions are raised in the server. How do I close this connection the right way? Should this be used with deferred or something like that? The files can be huge in size.

PS! From recent postings in this list is seems as if Twisted doesn't support compression of content, using gzip etc. Is this true? This would speed up things considerably. I implemented this in my previous webserver-project using BaseHTTPServer and on big files the increase in speed was impressive. Compressing HTML/Plain text/XML etc., just files known to be based in plain text, would be a great start.

Best regards,
Thomas Weholt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030227/8efaf712/attachment.html>

From radix at twistedmatrix.com  Thu Feb 27 15:46:19 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 27 Feb 2003 17:46:19 -0500
Subject: [Twisted-Python] Serving a binary files from disk, outside folders for static content
In-Reply-To: <001001c2deab$7ff51fe0$0401a8c0@razor>
References: <001001c2deab$7ff51fe0$0401a8c0@razor>
Message-ID: <20030227224619.GC8157@radii>

On Thu, Feb 27, 2003 at 10:59:26PM +0100, Thomas Weholt wrote:

> I need to serve a binary file from disk, not available in the normal
> folder for static content. In my code so far I've done something
> like this in the render-method :
>
> request.setContentType( .... content-type set based on extension of
> file to serve )
>
> f = open(somefile)
> while 1:
>     d = f.read(2048) # what's the correct size to read
>     if not d:
>         break
>     request.write(d)
> request.finish()
> return

zow! You should be using static.File. Just return
static.File('/path/to/binary.file') from your getChild, or putChild it
there in the first place. It will figure out the mime type by looking
it up in your mime database (/etc/mime.types), and if it's not found
in there, there's a dict of basic mime types that's hard-coded in, so
there's a good chance you won't have to set the mime-type. If you do,
you can just pass the defaultType parameter to the constructor, i.e.,
static.File('/path/foo', defaultType='application/x-octet-stream') (or
whatever the type is).

static.File is much better suited to the purpose because it's already
written :), and it doesn't block (well, it does a better job at
not-blocking, anyway), which your snippet does.

> It seem to return the data OK, it's visible in the browser, but
> exceptions are raised in the server. How do I close this connection
> the right way? Should this be used with deferred or something like
> that? The files can be huge in size.

The exceptions were probably raised because you didn't return anything
meaningful from render -- if you're going to be dealing with the
request directly (calling .write and .finish on it), then you need to
return server.NOT_DONE_YET (assuming `server' was imported with 
`from twisted.web import server'). For future reference, please show
us your tracebacks.


> PS! From recent postings in this list is seems as if Twisted doesn't
> support compression of content, using gzip etc. Is this true? This
> would speed up things considerably. I implemented this in my
> previous webserver-project using BaseHTTPServer and on big files the
> increase in speed was impressive. Compressing HTML/Plain text/XML
> etc., just files known to be based in plain text, would be a great
> start.

Patches accepted >:)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From mario at ruggier.org  Thu Feb 27 15:11:05 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 27 Feb 2003 23:11:05 +0100
Subject: [Twisted-Python] reactor.run() or application.save()+run?
In-Reply-To: <20030227.115955.76774077.warner@lothar.com>
Message-ID: <5D41528E-4AA0-11D7-BFB2-000393756786@ruggier.org>

> Mario Ruggier <mario at ruggier.org> writes:
>> when i call "twistd -f pargs-webapp.tap", I get the following error :
>>
>> Failed to load application: <twisted.persisted.styles.Ephemeral 
>> instance at
>> 0x3ad330> is not safe for unpickling
>>
>> If I do not call save() but just run(), the application runs 
>> correctly...
>
> It's probably related to this one:
>
>  http://twistedmatrix.com/documents/howto/faq#auto23
>
> In short, app.save() is storing an object of class 
> __main__.DynamicRequest,
> which cannot be loaded. You need to import that class from yourself to 
> get a
> globally-correct name

Yes indeed, it is exactly this. Importing the same module corrects the 
problem.
Thanks for the pointer!

> It would be nice if we could detect this sort of thing at .save() time 
> and
> emit a warning..

Yes, it would be a very good thing.

>  -Brian

Cheers, mario




From exarkun at intarweb.us  Thu Feb 27 18:34:23 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 27 Feb 2003 20:34:23 -0500
Subject: [Twisted-Python] reactor.run() or application.save()+run?
In-Reply-To: <20030227.115955.76774077.warner@lothar.com>
References: <055C3DF0-4A77-11D7-8E7B-000393756786@ruggier.org> <20030227.115955.76774077.warner@lothar.com>
Message-ID: <20030228013423.GC8702@meson.dyndns.org>

On Thu, Feb 27, 2003 at 11:59:55AM -0800, Brian Warner wrote:
> 
> In short, app.save() is storing an object of class __main__.DynamicRequest,
> which cannot be loaded. You need to import that class from yourself to get a
> globally-correct name.
> 
> It would be nice if we could detect this sort of thing at .save() time and
> emit a warning..
> 

  This might be cool (as well as detecting various Ephemeral instances), but
I suspect it would be prohibitively expensive to perform all the time. 
Perhaps it could be done in debug mode, though.

  Jp

-- 
 up 19 days, 6:29, 7 users, load average: 0.45, 0.39, 0.29
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030227/f38282b0/attachment.sig>

From theller at python.net  Fri Feb 28 03:16:11 2003
From: theller at python.net (Thomas Heller)
Date: 28 Feb 2003 11:16:11 +0100
Subject: [Twisted-Python] Fixes for windows installer
Message-ID: <of4wd82c.fsf@python.net>

Dear twisted developers, here are my patches against current twisted CVS
which make the bdist_wininst installer work correctly, tested on win98
and WinXP, built Python2.3 and Python 2.2 (although the latter requires
a newer distutils version which supports the postinstall script).

Apart from fixing this stuff so that it works for me, I made some
additional changes:

1. win32all is no longer required for the postinstall script, because
bdist_wininst has builtin support to create shortcuts.  So I removed the
warning message from the first screen.

2. The icons are no longer installed in a "Twisted 1.0.4alpha1" entry in
the start menu, the Python version is also required here (because
twisted can be installed separately for multiple Python versions on the
same machine).  The entry now looks like this:
"Twisted 1.0.4alpha1 (Python 2.2)"

I hereby assign the copyright for this stuff to the Twisted Matrix Labs,
because I would prefer to patch this stuff only once. Is this sufficient
for someone to check this in (after discussion, maybe)?

Thomas

-------------- next part --------------
A non-text attachment was scrubbed...
Name: setup.diff
Type: text/x-patch
Size: 13245 bytes
Desc: setup.diff
URL: </pipermail/twisted-python/attachments/20030228/fffd4854/attachment-0002.bin>

From likwoka at yahoo.com  Fri Feb 28 07:54:34 2003
From: likwoka at yahoo.com (Alex Li)
Date: Fri, 28 Feb 2003 06:54:34 -0800 (PST)
Subject: [Twisted-Python] introductory questions for twisted.web.woven
Message-ID: <20030228145434.57825.qmail@web13906.mail.yahoo.com>

Hi Twisted,

I am a newbie trying to learn the twisted.web.woven framework.
After reading the docs I am still confused.  Any answers or
pointers would be greatly appreciated.

1.  How to process a form?  I tried the wovenquotes example but
got confused (ex: the form used in the example has no method
and action attribute in the <form> tag)?  What is the class to use?
(I think it is related to the twisted.web.woven.input module, but
couldn't really see how...)

2.  How to get the querystring?  This is similar to the above question,
but it can be used without form.  Let's say I simply want to have
a dynamic link like this:
    <a href="http://destination/page.rpy?src=http://come/from/here">
How to get the arguments and values after the "?" ?

3.  In the twisted.web.resource.Resource class, what is an Entity?
what is a Name?  What is a Child (another Resource?)  It would be
nice if the answer can be provide is a simple example (not too abstract)?

4.  So for serving files in the file system, we use twisted.web.static.File.
For serving dynamically generated pages, we can use twisted.web.woven.page.Page?

5.  Any examples or docs that you think I should read (beside the one listed
in twistedmatrix.com website)?

Thanks in advance,
Alex

__________________________________________________
Do you Yahoo!?
Yahoo! Tax Center - forms, calculators, tips, more
http://taxes.yahoo.com/



From cce at clarkevans.com  Fri Feb 28 09:37:29 2003
From: cce at clarkevans.com (Clark C. Evans)
Date: Fri, 28 Feb 2003 16:37:29 +0000
Subject: [Twisted-Python] Refactoring GetChildWithDefault (removal is ideal)
In-Reply-To: <A7A3E43A-4A73-11D7-8E7B-000393756786@ruggier.org>
References: <20030226194852.GB22857@doublegemini.com> <A7A3E43A-4A73-11D7-8E7B-000393756786@ruggier.org>
Message-ID: <20030228163729.GA31978@doublegemini.com>

First, before I get started, let me just say that I think that
the resource delegation mechanism in this library is just 
brilliant in its simplicity and operation.  

However, after much musing, I've decided that getChildWithDefault
isn't very useful and kinda mucks up the waters:

    # public interface
    def getChild(self, path, request):
        return error.NoResource("No such child resource.")
    
    # private interface
    def getChildWithDefault(self, path, request):
        if self.children.has_key(path):
           return self.children[path]
        return self.getChild(path, request)
    def getChildForRequest(self, request):
        res = self
        while request.postpath and not res.isLeaf:
            pathElement = request.postpath.pop(0)
            request.acqpath.append(pathElement)
            request.prepath.append(pathElement)
            res = res.getChildWithDefault(pathElement, request)
        return res

Suggested refactor:

    # module variables
    resourceNotFound = error.NoResource('No such child resource.')

        # public interface
    def getChild(self, path, request):
        if self.children.has_key(path):
           return self.children[path]
        return None

        # private interface (called on root only)
    def getChildForRequest(self, request):
        res = self
        while request.postpath and not res.isLeaf:
            pathElement = request.postpath.pop(0)
            request.acqpath.append(pathElement)
            request.prepath.append(pathElement)
            res = res.getChild(pathElement, request)
            if res is None: return resourceNotFound
        return res

Rationale:

   1.  It is very useful to have a *public* interface function 
       which is _always_ called for every request.  In this manner,
       an application can implement request modifiers/filters.
       Currently the function that satisfies this need, 
       getChildWithDefault is private.

   2.  Unless you break the public interface, the current mechanism
       always searches children first without a hook for the 
       application.  This isn't always desireable.

       For example, a 'security' FilterResource may want to check 
       user access before descending down a given resource sub-tree.  
       Yes, you could implement this security as part of each 
       resource (by inheriting); but I feel that this is inferior
       to haveing a more "component" based solution where the
       security filter is injected into the resource tree.

   3.  From a object-oriented perspective, getChildWithDefault 
       actually does the 'default' behavior that people may want
       to inherit and discard, and thus this default searching
       code should go into getChild instead; the user can then
       decide how to best use this default behavior.

   4.  getChild's current interface, always returning a resource,
       albeit a not-very-useful resource limits possible innovative
       combinations of intra-resource delegation and cooperation.
       It should intead return a None value which can be tested for...

Impact on change:

    Anyone who wrote a previous resource who dependend on the
    set of children being searched *before* getChild is called
    would break.    I think that this is probably a pretty
    rare event; but it is a clean break, and the fix is simple...

    class MyResource(Resource):
        def getChild(self,path,request):
            res = Resource.getChild(self,path,request)
            if res is None:
                // try to create a dynamic resource
            return None

    Alternatively, if they wanted to search the dynamic 
    resources first, they could code it this way:

    class MyResource(Resource):
        def getChild(self,path,resource):
            res = None
            // try to create dynamic resource
            if res is not None: return res
            return Resource.getChild(self,path,request)

    Perhaps a few examples would have to be changed, but most
    likely the above impact is in only a few select resources.

Alternative refactor:

    The simplest alternative is to add getChildWithDefault to the 
    public interface and document the mechanism.  It think that this,
    in the long run is not as good as the proposed refactor since 
    it adds extra complexity for the "search children first or last"
    behavior choice.  It's just clunky the way it is, IMHO.

In any case, the Resource finding mechanism in Twisted is very
clever, and I'm using my PathArgs *alot* so I'd like a solution
so that my requirements don't require a breaking the public
interface.  Ohh, and to answer:

On Thu, Feb 27, 2003 at 05:51:02PM +0100, Mario Ruggier wrote:
| A source of confusion for me is knowing which,
| and when, specific methods are called automatically.
| Particularly, it would be nice to have a clarification (in the
| API docs) of when the methods getChildForRequest() and
| getChildWithDefault() are called -- they seem not be called in
| a non-siteroot resource. Things worked well with PathArgs, it
| being set as root resource, but for an arbitrary resource,
| like the example I previoulsy included, the game seems to
| change .

getChildWithDefault is infact called on non-siteroot resources,
so the current code for PathArgs will work at any level... albeit
a violation of the private/public encapsulation.  But yes, the
overall mechanism (by having a 3rd wheel) is less than ideal.

Best,

Clark



From corydodt at yahoo.com  Fri Feb 28 11:53:06 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Fri, 28 Feb 2003 10:53:06 -0800 (PST)
Subject: [Twisted-Python] Re: Fixes for windows installer
Message-ID: <20030228185306.45742.qmail@web10008.mail.yahoo.com>

I like where this is going, and I certainly have no complaints about
dumping shortcut.py, but could you please review a few things before I
commit this:

* Putting install-script into setup.cfg makes your change visible to
everyone who's building a distribution of Twisted.  As you pointed out
yourself, you can't use install-script without distutils 1.0.3, and
Twisted has to support pythons 2.1 and 2.2.  Will this config parameter be
ignored by setup.py when building a Twisted install on distutils <1.0.3 or
will it cause an error?

* You made this change to the test I use for isWinNT:
-    if platform.isWinNT():
-        return os.path.join(os.getenv("SYSTEMROOT"), 
-                            "system32", "shell32.dll")
+    # If SYSTEMROOT is not found (on Win98), guess the name
+    # of the windows directory
+    isNT = 0
+    try:
+        get_special_folder_path("CSIDL_COMMON_PROGRAMS")
+        isNT = 1
+    except OSError: # probably Win98
+        pass

Is the implementation of platform.isWinNT() broken?  If so, I'd rather you
patched it there.  If not, I'd rather keep using it.

* Most important thing: test_postinstall doesn't work with this patch,
because create_shortcut and get_special_folder_path appear to be magical
builtins installed by distutils.  I'll be happy to rewrite the test if you
can point me to the right place to import this code when it's not
available as a builtin.


__________________________________________________
Do you Yahoo!?
Yahoo! Tax Center - forms, calculators, tips, more
http://taxes.yahoo.com/



From theller at python.net  Fri Feb 28 12:40:42 2003
From: theller at python.net (Thomas Heller)
Date: 28 Feb 2003 20:40:42 +0100
Subject: [Twisted-Python] Re: Fixes for windows installer
References: <20030228185306.45742.qmail@web10008.mail.yahoo.com>
Message-ID: <7kbkb3d1.fsf@python.net>

Cory Dodt <corydodt at yahoo.com> writes:

> I like where this is going, and I certainly have no complaints about
> dumping shortcut.py, but could you please review a few things before I
> commit this:
> 
> * Putting install-script into setup.cfg makes your change visible to
> everyone who's building a distribution of Twisted.  As you pointed out
> yourself, you can't use install-script without distutils 1.0.3, and
> Twisted has to support pythons 2.1 and 2.2.  Will this config parameter be
> ignored by setup.py when building a Twisted install on distutils <1.0.3 or
> will it cause an error?

I think it will raise an error. Feel free to remove it again. 

(Another approach would be to handle it programatically in the setup.py
script, you can somehow find out whether it is supported or not, and in
the former case pass it through the options parameter).

> 
> * You made this change to the test I use for isWinNT:
> -    if platform.isWinNT():
> -        return os.path.join(os.getenv("SYSTEMROOT"), 
> -                            "system32", "shell32.dll")
> +    # If SYSTEMROOT is not found (on Win98), guess the name
> +    # of the windows directory
> +    isNT = 0
> +    try:
> +        get_special_folder_path("CSIDL_COMMON_PROGRAMS")
> +        isNT = 1
> +    except OSError: # probably Win98
> +        pass
> 
> Is the implementation of platform.isWinNT() broken?  If so, I'd rather you
> patched it there.  If not, I'd rather keep using it.

I don't think it is broken. But we're not interested if this is NT or
not, we only try to find shell32.dll.  And I wanted to remove the
requirement that win32all be installed for full functionality if the
installer only (actually that's the reason I integrated them in
bdist_wininst).

> 
> * Most important thing: test_postinstall doesn't work with this patch,
> because create_shortcut and get_special_folder_path appear to be magical
> builtins installed by distutils.  I'll be happy to rewrite the test if you
> can point me to the right place to import this code when it's not
> available as a builtin.

These are builtin commands in the bdist_wininst stub used to create the
installer. AFAIK, there's no way to access them from somewhere else ;-(
You could, of course, simulate them for the test stuff in Python with
win32all, you could even look up the C sources in
http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/python/python/dist/src/PC/bdist_wininst/install.c
look for the CreateShortcut function.

Thomas




From tjacobs at kinematic.com  Fri Feb 28 17:02:19 2003
From: tjacobs at kinematic.com (Thad Jacobs)
Date: Fri, 28 Feb 2003 16:02:19 -0800
Subject: [Twisted-Python] Automatically refresh imported module from source
Message-ID: <D1A1551B3520D51186B300508B1278FE367EC9@FS2>

Hello All,

My name is Thaddeus, and I am new to both Python and Twisted (I found out
about the language and platform yesterday).  I am doing some experimentation
to see how Twisted would benefit our organization.  So far Python blows
every other language I've seen out of the water, in terms of efficiency and
low cost of change.

What I'd like to know is if there is a way to modify the way twisted web
handles requests from within RPY scripts to external py modules.  If I
modify the py module while twisted web is running, I would like to see
subsequent Import requests to that module reference the newly saved version.
I realize that TwistedWeb must be caching the imported modules so future
requests don't require it to re-read from file, but it would seem that it
should at least check the modules modified date to make sure it still has a
current copy whenever the module is requested.

Here's the source for an example that demonstrates my point:

#Begin Test.rpy

from twisted.web import resource
import TestModule

class MyResource(resource.Resource):
	def render(self, request):
		return TestModule.SayHello()

resource = MyResource()

#End Test.rpy

#Begin TestModule.py

def SayHello():
    return "Hello World!!!"

#End Testmodule.py


If I point my browser to test.rpy, "Hello World!!!" is displayed.  This is
great so far.

But when I open up pythonwin, and modify TestModule.py to the following:

#Begin TestModule.py

def SayHello():
    return "Wazzaaap World??!!!"

#End Testmodule.py
 

And I hit refresh on my browser, "Hello World!!!" still displays.  It is not
until I stop and restart the web server that the change is reflected, and I
am greeted with the revised verbeage.

Must I bring the web server down, every time a make a simple change to an
external module?  There's gotta be a way around this.  The main reason I'm
looking into this platform is to decrease cost of change.

Please let me know,

Thaddeus Jacobs
IT Developer
Kinematic Automation, Inc.
mailto:tjacobs at kinematic.com







From radix at twistedmatrix.com  Fri Feb 28 19:32:47 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 28 Feb 2003 21:32:47 -0500
Subject: [Twisted-Python] Automatically refresh imported module from source
In-Reply-To: <D1A1551B3520D51186B300508B1278FE367EC9@FS2>
References: <D1A1551B3520D51186B300508B1278FE367EC9@FS2>
Message-ID: <20030301023247.GC10282@radii>

On Fri, Feb 28, 2003 at 04:02:19PM -0800, Thad Jacobs wrote:
> 
> I realize that TwistedWeb must be caching the imported modules so future
> requests don't require it to re-read from file, but it would seem that it
> should at least check the modules modified date to make sure it still has a
> current copy whenever the module is requested.

Nah, twisted.web doesn't do that, Python does. Python never
re-executes a module unless it's explicitly told to; the cache is in
`sys.modules'. And also, it would not be good if twisted.web checked
to reload the modules every time - that would hurt performance when
it's not really needed - you only really need it during development.

> Here's the source for an example that demonstrates my point:
> 
> #Begin Test.rpy
> 
> from twisted.web import resource
> import TestModule

Right here, just insert `reload(TestModule)' -- when you're in active
development. Just take it out after you're ready to deploy.

One caveat is if you have persistent objects that aren't re-created
from the .rpy on every request, `reload' won't update them. If that is
your case (which it isn't in your example), you should use
twisted.python.rebuild.

  from twisted.python.rebuild
  rebuild.rebuild(TestModule)

rather rather reload(TestModule).


> class MyResource(resource.Resource):
> 	def render(self, request):
> 		return TestModule.SayHello()
> 
> resource = MyResource()
> 
> #End Test.rpy
> 
> #Begin TestModule.py
> 
> def SayHello():
>     return "Hello World!!!"
> 
> #End Testmodule.py
> 


HTH.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From exarkun at intarweb.us  Fri Feb 28 21:20:00 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 28 Feb 2003 23:20:00 -0500
Subject: [Twisted-Python] [OT] Make Python Faster
Message-ID: <20030301042000.GA22038@meson.dyndns.org>

  Skip Montanaro has an xmlrpc server set up to collect information on
Python byte code occurrence frequencies.  With data from enough sources, some
useful information about optimizations that can be made to Python might be
extracted.

  Attached is a patch that causes twistd to spill its guts onto his server
when it shuts down.  It requires an interpreter with sys.getdxp, which is
only available if Python is built with DYNAMIC_EXECUTION_PROFILE, and
optionally DXPAIRS, defined (it won't break anything if getdxp isn't
available, it just won't work).  There is an "email" field required, which I
have left as a generic string - please set it to an actual email by which
you can be contacted if you intend to use it.

  I don't propose this for inclusion with Twisted, but if anyone wants to
apply it to their local copy and run real apps with it, it would be helpful
to Python, and I'm sure Skip would appreciate the extra data points.

  For the record, I'm currently running my instances of Twisted.mail and
Twisted.names with this, and I'll probably set up my Pynfo bot to use it as
well.

  Jp

-- 
A sad spectacle.  If they be inhabited, what a scope for misery 
and folly.  If they be not inhabited, what a waste of space.
                -- Thomas Carlyle, looking at the stars
-- 
 up 20 days, 8:29, 10 users, load average: 0.24, 0.33, 0.37
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030228/7730bded/attachment.sig>

From exarkun at intarweb.us  Fri Feb 28 21:27:48 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 28 Feb 2003 23:27:48 -0500
Subject: [Twisted-Python] [OT] Make Python Faster
In-Reply-To: <20030301042000.GA22038@meson.dyndns.org>
References: <20030301042000.GA22038@meson.dyndns.org>
Message-ID: <20030301042748.GA22127@meson.dyndns.org>

On Fri, Feb 28, 2003 at 11:20:00PM -0500, Jp Calderone wrote:

  Helps to attach the file.

  Jp

-- 
 up 20 days, 8:29, 10 users, load average: 0.24, 0.33, 0.37
-------------- next part --------------
Index: twistd.py
===================================================================
RCS file: /cvs/Twisted/twisted/scripts/twistd.py,v
retrieving revision 1.38
diff -u -r1.38 twistd.py
--- twistd.py	1 Mar 2003 04:03:28 -0000	1.38
+++ twistd.py	1 Mar 2003 04:06:12 -0000
@@ -1,4 +1,4 @@
-# Twisted, the Framework of Your Internet
+
 # Copyright (C) 2001 Matthew W. Lefkowitz
 #
 # This library is free software; you can redistribute it and/or
@@ -439,6 +439,7 @@
             log.msg("Failed to unlink PID file:")
             log.deferr()
     log.msg("Server Shut Down.")
+    report(application)
 
 
 def run():
@@ -455,3 +456,32 @@
         os._exit(1)
 
     runApp(config)
+    
+
+def rle(l):
+    import types
+    newl = []
+    lastel = None
+    count = 0
+    for elt in l:
+        if elt == lastel:
+            count = count + 1
+            continue
+        elif lastel is not None:
+            if isinstance(lastel, types.ListType):
+                lastel = rle(lastel)
+            newl.append([lastel, count])
+        lastel = elt
+        count = 1
+    if isinstance(lastel, types.ListType):
+        lastel = rle(lastel)
+    newl.append([lastel, count])
+    return newl
+
+def report(app):
+    email = 'your at email.address'
+    if hasattr(sys, 'getdxp') and app.processName:
+        import xmlrpclib
+        dxp = xmlrpclib.ServerProxy("http://manatee.mojam.com:7304")
+        dxp.add_dx_info(app.processName, email, sys.version_info[:3], rle(sys.getdxp()))
+        log.msg('Reported dxp results')
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030228/c259ccb4/attachment.sig>

From glyph at twistedmatrix.com  Fri Feb 28 22:08:19 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 28 Feb 2003 23:08:19 -0600 (CST)
Subject: [Twisted-Python] [OT] Make Python Faster
In-Reply-To: <20030301042000.GA22038@meson.dyndns.org>
References: <20030301042000.GA22038@meson.dyndns.org>
Message-ID: <20030228.230819.59483150.glyph@twistedmatrix.com>


On Fri, 28 Feb 2003 23:20:00 -0500, Jp Calderone <exarkun at intarweb.us> wrote:
>   I don't propose this for inclusion with Twisted, but if anyone wants to
> apply it to their local copy and run real apps with it, it would be helpful
> to Python, and I'm sure Skip would appreciate the extra data points.

I disagree.  This is exactly the kind of thing that we should make easy, to
give the Python developers, and ourselves, as much useful information as we can
about the community.  It should perhaps not be a default, but having a flag to
twistd (maybe --profile-me-harder?) so that people have a "one click" way to
report their run-time results would increase the number of people using it, I'm
sure.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030228/2e27e0e6/attachment.sig>

From lafou at wanadoo.fr  Fri Feb 28 11:31:48 2003
From: lafou at wanadoo.fr (Philippe =?ISO-8859-1?Q?Lafoucri=E8re?=)
Date: Fri, 28 Feb 2003 19:31:48 +0100
Subject: [Twisted-Python] GtkWindow
Message-ID: <b3o9v3$is2$1@main.gmane.org>

hello

I have a pb (the same as the thread "Gtk version" when I try to run manhole:


"
Traceback (most recent call last):
  File "/usr/bin/manhole", line 33, in ?
    from twisted.scripts import manhole
  File "/usr/lib/python2.2/site-packages/twisted/scripts/manhole.py", line 
23, in ?
    from twisted.spread.ui import gtkutil
  File "/usr/lib/python2.2/site-packages/twisted/spread/ui/gtkutil.py", line 
62, in ?
    class GetString(gtk.GtkWindow):
AttributeError: 'module' object has no attribute 'GtkWindow'
"

And if I look at the official page of PyGtk 
(http://www.daa.com.au/~james/software/pygtk/index.html)
I found this exemple :

[...]
window = gtk.Window(gtk.WINDOW_TOPLEVEL) # create a top level window
[...]

manhole pygtk seems to be outdated !

any idea ?
thx




From tv at twistedmatrix.com  Fri Feb 28 11:03:32 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 28 Feb 2003 20:03:32 +0200
Subject: [Twisted-Python] Serving files, again
In-Reply-To: <20030226210657.GB23608@doublegemini.com>
References: <A4F6BFB8-491B-11D7-A0BE-000393756786@ruggier.org> <20030226192002.GA22857@doublegemini.com> <20030226195135.GA23100@doublegemini.com> <20030226195031.GA21673@meson.dyndns.org> <20030226210657.GB23608@doublegemini.com>
Message-ID: <20030228180332.GC11190@lapdog>

On Wed, Feb 26, 2003 at 09:06:57PM +0000, Clark C. Evans wrote:
> The files that I need to serve up are quite big (some are a meg or more),
> and it would be bad to block other resources while the file loads into
> memory via file.read() or for the time it takes for the client to 
> completely consume the file.

	If file loading is too slow, buy some more memory. Keeping
	hundreds of megs of files in RAM is standard procedure for
	any sane operating system these days. Let it worry about
	keeping the file access fast.

	It should (and AIUI will) be served to the client
	chunk-by-chunk, processing other tasks between the reads.

> |   BTW, deferring to a thread would not be the way to go.  Something similar
> | to twisted.spread.util.Pager would probably be appropriate, or maybe
> | something that implements IProducer.  Or maybe just a chain of Deferreds :)
> | No need to go into threads for this, though.

	(sorry for responding to doublequoted text)

	Oh, python threads may not the low-level enough to actually
	help with disk IO (on Linux, atleast). Don't know if they are
	or are not.. Avoiding blocking on disk IO needs a separate
	process context in the kernel, userspace threading will not
	help.


> Is this the Jist of it?  It still has the problem that file.read 
> is a blocking call; I suppose for unix platforms you could use
> "poll()" to not block.  This is probably resonable; on the server
> side you don't block, while for desktop windows clients it blocks.

	poll() or select() won't work in file access, files block always
	unless you use AIO or something like that. Sorry.

	If you are that worried about performance, type "c10k" into
	google and start writing C. Nothing else will really help;
	file access only becomes a bottleneck _after_ you've done all
	the other things suggested at c10k.

-- 
:(){ :|:&};:



From tv at twistedmatrix.com  Fri Feb 28 10:52:48 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 28 Feb 2003 19:52:48 +0200
Subject: [Twisted-Python] Patch for tap.ftp to add username and password options
In-Reply-To: <00d401c2ddd2$c96c16d0$877ba8c0@tesla>
References: <20030225123525.17019.1822.Mailman@pyramid.twistedmatrix.com> <00d401c2ddd2$c96c16d0$877ba8c0@tesla>
Message-ID: <20030228175248.GB11190@lapdog>

On Wed, Feb 26, 2003 at 12:08:01PM -0800, Amir Bakhtiar wrote:
> This patch allows username and password pairs to be defined.
> e.g. mktap ftp -uamir -pfoo
>        mktap ftp -uamir:glyph -pfoo:bar

	Eww.

	1) It should be a twisted.cred thing.

	2) Don't put password on the command line, ever.

	3) Ignoring the above, -u amir:foo -u glyph:bar would make
	   much more sense.

-- 
:(){ :|:&};:



