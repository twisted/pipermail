From glyph at twistedmatrix.com  Wed Jun  1 01:00:53 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Jun 2011 01:00:53 -0400
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
Message-ID: <F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>


On May 31, 2011, at 5:58 PM, Laurens Van Houtven wrote:

> As promised:
> 
> https://github.com/lvh/async-pep

Great to see a public start on this.

It should really say something about protocol/transport separation early on, though ;).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110601/7991f146/attachment.htm 

From _ at lvh.cc  Wed Jun  1 17:21:19 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 1 Jun 2011 23:21:19 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
Message-ID: <BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>

>
> It should really say something about protocol/transport separation early
> on, though ;).
>

Pff, publishing finished work is for academics. Do you want me to be an
academic, Glyph? Do you?

I've added the stuff I got from Jim. FlowControl seems to be the equivalent
of IPushProducer. Why does Protocol and Transport inherit from it? I don't
understand why all Protocols and Transports are inherently
pausable/resumable.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110601/87291d94/attachment.htm 

From kevin.horn at gmail.com  Wed Jun  1 17:34:18 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 1 Jun 2011 16:34:18 -0500
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
Message-ID: <BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>

On Wed, Jun 1, 2011 at 4:21 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> It should really say something about protocol/transport separation early
>> on, though ;).
>>
>
> Pff, publishing finished work is for academics. Do you want me to be an
> academic, Glyph? Do you?
>
> I've added the stuff I got from Jim. FlowControl seems to be the equivalent
> of IPushProducer. Why does Protocol and Transport inherit from it? I don't
> understand why all Protocols and Transports are inherently
> pausable/resumable.
>
> cheers
> lvh
>
>
>
Hmmm...you might think about also allowing bytearrays everywhere it says
"data must be a bytestring".  Maybe there's some problem with that (I
haven't done a lot of Python3-style IO yet), but I don't think there is, and
if they are to be allowed, it should be explicitly mentioned, IMO.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110601/388a1f5b/attachment.htm 

From _ at lvh.cc  Wed Jun  1 18:20:09 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 2 Jun 2011 00:20:09 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
Message-ID: <BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>

On Wed, Jun 1, 2011 at 11:34 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> Hmmm...you might think about also allowing bytearrays everywhere it says
> "data must be a bytestring".  Maybe there's some problem with that (I
> haven't done a lot of Python3-style IO yet), but I don't think there is, and
> if they are to be allowed, it should be explicitly mentioned, IMO.
>

Yay, you're responsible for ticket #1:

https://github.com/lvh/async-pep/issues/1


> Kevin Horn
>

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110602/9c43c57a/attachment.htm 

From _ at lvh.cc  Wed Jun  1 18:50:33 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 2 Jun 2011 00:50:33 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
	<BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
Message-ID: <BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>

... and closed!


See people? Feedback works, now give me more of it please ;-)


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110602/0ca20766/attachment.htm 

From screwtape at froup.com  Wed Jun  1 23:56:19 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 2 Jun 2011 13:56:19 +1000
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
	<BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
	<BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>
Message-ID: <20110602035619.GN23087@boombah.thristian.org>

On Thu, Jun 02, 2011 at 12:50:33AM +0200, Laurens Van Houtven wrote:
> See people? Feedback works, now give me more of it please ;-)

Perhaps I'm looking at the wrong place;	the "pep-xxxx.rst" I'm looking
at via the web interface contains only an short abstract and a rationale
that won't be controversial to anyone subscribed to this list. There
doesn't seem to be much to give feedback *on*.

I guess that means my feedback is 'please write more text'. :)


From _ at lvh.cc  Thu Jun  2 20:35:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 3 Jun 2011 02:35:56 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <20110602035619.GN23087@boombah.thristian.org>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
	<BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
	<BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>
	<20110602035619.GN23087@boombah.thristian.org>
Message-ID: <BANLkTikL0m6EQV_xQfb-nPNoh5qrRwTfyg@mail.gmail.com>

On Thu, Jun 2, 2011 at 5:56 AM, Tim Allen <screwtape at froup.com> wrote:

> On Thu, Jun 02, 2011 at 12:50:33AM +0200, Laurens Van Houtven wrote:
> > See people? Feedback works, now give me more of it please ;-)
>
> Perhaps I'm looking at the wrong place; the "pep-xxxx.rst" I'm looking
> at via the web interface contains only an short abstract and a rationale
> that won't be controversial to anyone subscribed to this list. There
> doesn't seem to be much to give feedback *on*.
>

Definitely true! I was holding a few parallel backchannel diiscussions with
people that have more background information, if all you have is the repo
there's definitely not a lot to do right now, but I'm working on fixing this
:)


> I guess that means my feedback is 'please write more text'. :)
>

Noted and appreciated!


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110603/ba6227b5/attachment.htm 

From bra at fsn.hu  Fri Jun  3 08:54:14 2011
From: bra at fsn.hu (Attila Nagy)
Date: Fri, 03 Jun 2011 14:54:14 +0200
Subject: [Twisted-Python] Is this possible to catch this error? (returned by
	protocols/memcached.py)
Message-ID: <4DE8D976.5070909@fsn.hu>

Hi,

Here's a sample application, which gets a key from memcached:
from twisted.internet import reactor, protocol, defer
from twisted.application import internet, service
from twisted.protocols.memcache import MemCacheProtocol, DEFAULT_PORT

mc = None

class MemCacheFactory(protocol.ReconnectingClientFactory):
     protocol = MemCacheProtocol
     maxDelay = 5 # wait no more than 5 seconds to retry

     def buildProtocol(self, addr):
         p = self.protocol(self)
         p.factory = self
         p.persistentTimeOut = p.timeOut = 5
         global mc
         mc = p
         return p

def memc():
     factory = MemCacheFactory()
     reactor.connectTCP('localhost', 11211, factory)
     reactor.callLater(1,query)

@defer.inlineCallbacks
def query():
     res = yield mc.get('test')
     print "XXX",res

application = service.Application('memc')
serviceCollection = service.IServiceCollection(application)
reactor.callLater(0,memc)

If memcached is running on localhost:11211, it writes the "test" key's 
value:
$ twistd -noy memct.py
2011-06-03 14:48:27+0200 [-] Log opened.
2011-06-03 14:48:27+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7 
2.7.1) starting up.
2011-06-03 14:48:27+0200 [-] reactor class: 
twisted.internet.selectreactor.SelectReactor.
2011-06-03 14:48:27+0200 [-] Starting factory 
<__builtin__.MemCacheFactory instance at 0x802a38710>
2011-06-03 14:48:28+0200 [MemCacheProtocol,client] XXX (0, None)

Now I want to test the code for timeouts, where the TCP connection to 
memcached is open, but there is no answer.
So instead of memcached, I start a netcat on port 11211:
$ nc -l 11211
And start the above program. Now I get:
$ twistd -noy memct.py
2011-06-03 14:50:08+0200 [-] Log opened.
2011-06-03 14:50:08+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7 
2.7.1) starting up.
2011-06-03 14:50:08+0200 [-] reactor class: 
twisted.internet.selectreactor.SelectReactor.
2011-06-03 14:50:08+0200 [-] Starting factory 
<__builtin__.MemCacheFactory instance at 0x802a38710>
2011-06-03 14:50:14+0200 [-] Unhandled error in Deferred:
2011-06-03 14:50:14+0200 [-] Unhandled Error
         Traceback (most recent call last):
         Failure: twisted.internet.defer.TimeoutError: Connection timeout

2011-06-03 14:50:14+0200 [MemCacheProtocol,client] 
<twisted.internet.tcp.Connector instance at 0x804027dd0> will retry in 2 
seconds
2011-06-03 14:50:14+0200 [MemCacheProtocol,client] Stopping factory 
<__builtin__.MemCacheFactory instance at 0x802a38710>

As you can see, the connection is timed out, and protocols/memcached.py 
lost its connection. But how could I catch this around the "mc.get" call?
I guess this error should raise an exception, so enclosing mc.get into a 
try-except would make possible to catch this. But currently this is not 
the case?

How can this be solved?

Thanks,


From exarkun at twistedmatrix.com  Fri Jun  3 09:57:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Jun 2011 13:57:39 -0000
Subject: [Twisted-Python] Is this possible to catch this error?
	(returned	by protocols/memcached.py)
In-Reply-To: <4DE8D976.5070909@fsn.hu>
References: <4DE8D976.5070909@fsn.hu>
Message-ID: <20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>




On 12:54 pm, bra at fsn.hu wrote:
>Hi,
>
>Here's a sample application, which gets a key from memcached:
>from twisted.internet import reactor, protocol, defer
>from twisted.application import internet, service
>from twisted.protocols.memcache import MemCacheProtocol, DEFAULT_PORT
>
>mc = None
>
>class MemCacheFactory(protocol.ReconnectingClientFactory):
>     protocol = MemCacheProtocol
>     maxDelay = 5 # wait no more than 5 seconds to retry
>
>     def buildProtocol(self, addr):
>         p = self.protocol(self)
>         p.factory = self
>         p.persistentTimeOut = p.timeOut = 5
>         global mc
>         mc = p

Using a global protocol instance like this is error prone.
>         return p
>
>def memc():
>     factory = MemCacheFactory()
>     reactor.connectTCP('localhost', 11211, factory)
>     reactor.callLater(1,query)

What if the connection isn't set up within 1 second?
>
>@defer.inlineCallbacks
>def query():
>     res = yield mc.get('test')
>     print "XXX",res
>
>application = service.Application('memc')
>serviceCollection = service.IServiceCollection(application)
>reactor.callLater(0,memc)
>
>If memcached is running on localhost:11211, it writes the "test" key's
>value:
>$ twistd -noy memct.py
>2011-06-03 14:48:27+0200 [-] Log opened.
>2011-06-03 14:48:27+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>2.7.1) starting up.
>2011-06-03 14:48:27+0200 [-] reactor class:
>twisted.internet.selectreactor.SelectReactor.
>2011-06-03 14:48:27+0200 [-] Starting factory
><__builtin__.MemCacheFactory instance at 0x802a38710>
>2011-06-03 14:48:28+0200 [MemCacheProtocol,client] XXX (0, None)
>
>Now I want to test the code for timeouts, where the TCP connection to
>memcached is open, but there is no answer.
>So instead of memcached, I start a netcat on port 11211:
>$ nc -l 11211
>And start the above program. Now I get:
>$ twistd -noy memct.py
>2011-06-03 14:50:08+0200 [-] Log opened.
>2011-06-03 14:50:08+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>2.7.1) starting up.
>2011-06-03 14:50:08+0200 [-] reactor class:
>twisted.internet.selectreactor.SelectReactor.
>2011-06-03 14:50:08+0200 [-] Starting factory
><__builtin__.MemCacheFactory instance at 0x802a38710>
>2011-06-03 14:50:14+0200 [-] Unhandled error in Deferred:
>2011-06-03 14:50:14+0200 [-] Unhandled Error
>         Traceback (most recent call last):
>         Failure: twisted.internet.defer.TimeoutError: Connection 
>timeout
>
>2011-06-03 14:50:14+0200 [MemCacheProtocol,client]
><twisted.internet.tcp.Connector instance at 0x804027dd0> will retry in 
>2
>seconds
>2011-06-03 14:50:14+0200 [MemCacheProtocol,client] Stopping factory
><__builtin__.MemCacheFactory instance at 0x802a38710>
>
>As you can see, the connection is timed out, and protocols/memcached.py
>lost its connection. But how could I catch this around the "mc.get" 
>call?
>I guess this error should raise an exception, so enclosing mc.get into 
>a
>try-except would make possible to catch this. But currently this is not
>the case?

What do you think it is not the case?  That is how inlineCallbacks makes 
Failures available to you.

Jean-Paul


From bra at fsn.hu  Fri Jun  3 10:04:38 2011
From: bra at fsn.hu (Attila Nagy)
Date: Fri, 03 Jun 2011 16:04:38 +0200
Subject: [Twisted-Python] Is this possible to catch this error?
 (returned by protocols/memcached.py)
In-Reply-To: <20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>
References: <4DE8D976.5070909@fsn.hu>
	<20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>
Message-ID: <4DE8E9F6.1040208@fsn.hu>

Hi,

On 06/03/11 15:57, exarkun at twistedmatrix.com wrote:
>
> Using a global protocol instance like this is error prone.
>>         return p
>>
>> def memc():
>>     factory = MemCacheFactory()
>>     reactor.connectTCP('localhost', 11211, factory)
>>     reactor.callLater(1,query)
>
> What if the connection isn't set up within 1 second?
This is just an example, for demonstrating my problem.
>>
>> @defer.inlineCallbacks
>> def query():
>>     res = yield mc.get('test')
>>     print "XXX",res
>>
>> application = service.Application('memc')
>> serviceCollection = service.IServiceCollection(application)
>> reactor.callLater(0,memc)
>>
>> If memcached is running on localhost:11211, it writes the "test" key's
>> value:
>> $ twistd -noy memct.py
>> 2011-06-03 14:48:27+0200 [-] Log opened.
>> 2011-06-03 14:48:27+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>> 2.7.1) starting up.
>> 2011-06-03 14:48:27+0200 [-] reactor class:
>> twisted.internet.selectreactor.SelectReactor.
>> 2011-06-03 14:48:27+0200 [-] Starting factory
>> <__builtin__.MemCacheFactory instance at 0x802a38710>
>> 2011-06-03 14:48:28+0200 [MemCacheProtocol,client] XXX (0, None)
>>
>> Now I want to test the code for timeouts, where the TCP connection to
>> memcached is open, but there is no answer.
>> So instead of memcached, I start a netcat on port 11211:
>> $ nc -l 11211
>> And start the above program. Now I get:
>> $ twistd -noy memct.py
>> 2011-06-03 14:50:08+0200 [-] Log opened.
>> 2011-06-03 14:50:08+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>> 2.7.1) starting up.
>> 2011-06-03 14:50:08+0200 [-] reactor class:
>> twisted.internet.selectreactor.SelectReactor.
>> 2011-06-03 14:50:08+0200 [-] Starting factory
>> <__builtin__.MemCacheFactory instance at 0x802a38710>
>> 2011-06-03 14:50:14+0200 [-] Unhandled error in Deferred:
>> 2011-06-03 14:50:14+0200 [-] Unhandled Error
>>         Traceback (most recent call last):
>>         Failure: twisted.internet.defer.TimeoutError: Connection timeout
>>
>> 2011-06-03 14:50:14+0200 [MemCacheProtocol,client]
>> <twisted.internet.tcp.Connector instance at 0x804027dd0> will retry in 2
>> seconds
>> 2011-06-03 14:50:14+0200 [MemCacheProtocol,client] Stopping factory
>> <__builtin__.MemCacheFactory instance at 0x802a38710>
>>
>> As you can see, the connection is timed out, and protocols/memcached.py
>> lost its connection. But how could I catch this around the "mc.get" 
>> call?
>> I guess this error should raise an exception, so enclosing mc.get into a
>> try-except would make possible to catch this. But currently this is not
>> the case?
>
> What do you think it is not the case?  That is how inlineCallbacks 
> makes Failures available to you.
Because if I wrap mc.get into a try-except clause, it's not triggered. I 
guess if it would, the above error would show exact line numbers too.


From exarkun at twistedmatrix.com  Fri Jun  3 11:32:37 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Jun 2011 15:32:37 -0000
Subject: [Twisted-Python] Is this possible to catch this error?
	(returned	by protocols/memcached.py)
In-Reply-To: <4DE8E9F6.1040208@fsn.hu>
References: <4DE8D976.5070909@fsn.hu>
	<20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>
	<4DE8E9F6.1040208@fsn.hu>
Message-ID: <20110603153237.3983.2123820291.divmod.xquotient.347@localhost.localdomain>

On 02:04 pm, bra at fsn.hu wrote:
>Hi,
>
>On 06/03/11 15:57, exarkun at twistedmatrix.com wrote:
>>
>>>As you can see, the connection is timed out, and 
>>>protocols/memcached.py
>>>lost its connection. But how could I catch this around the "mc.get"
>>>call?
>>>I guess this error should raise an exception, so enclosing mc.get 
>>>into a
>>>try-except would make possible to catch this. But currently this is 
>>>not
>>>the case?
>>
>>What do you think it is not the case?  That is how inlineCallbacks
>>makes Failures available to you.
>Because if I wrap mc.get into a try-except clause, it's not triggered. 
>I
>guess if it would, the above error would show exact line numbers too.

I can't reproduce this.  I changed the code to:

    @defer.inlineCallbacks
    def query():
         try:
              res = yield mc.get('test')
         except Exception, e:
              print "get failed:", e
         else:
              print "XXX",res

When I run this against the nc server, the "get failed:" print happens.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Jun  5 00:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Jun 2011 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1307246722.51.1233556668@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110605/96016b1b/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jun 12 00:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jun 2011 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1307851525.97.1203627721@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110612/3b72d449/attachment.htm 

From orestis at orestis.gr  Sun Jun 12 08:48:13 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sun, 12 Jun 2011 15:48:13 +0300
Subject: [Twisted-Python] Information on new endpoints API?
Message-ID: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>

Hello,

I'm curious about the endpoints API that appeared. I've read the documentation, and I think I understand what it does, but I'm curious to see what parts of twisted it replaces. A lot of the documentation on-site is not updated (eg the finger tutorial) and it's not very clear whether one should use reactor.listenTCP, TCPServer or the new API.

I will be giving a training on Twisted in a few days during the EuroPython conference (actually, more of an assisted tutorial than a training) and I'm not sure how I should present this. Any information would be helpful.

Orestis

From exarkun at twistedmatrix.com  Sun Jun 12 09:22:35 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jun 2011 13:22:35 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
Message-ID: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>

On 12:48 pm, orestis at orestis.gr wrote:
>Hello,
>
>I'm curious about the endpoints API that appeared. I've read the 
>documentation, and I think I understand what it does, but I'm curious 
>to see what parts of twisted it replaces. A lot of the documentation 
>on-site is not updated (eg the finger tutorial) and it's not very clear 
>whether one should use reactor.listenTCP, TCPServer or the new API.

It's still often a good idea to use reactor.listenTCP.  If you know you 
want to run a TCP server, it's less typing than using an endpoint. 
Compare:

    reactor.listenTCP(1234, someFactory)
    TCP4ServerEndpoint(reactor, 1234).listen(someFactory)

Likewise, compare the service forms:

    TCPServer(1234, someFactory)
    StreamServerEndpointService(TCP4ServerEndpoint(reactor, 1234), 
someFactory)

However, if you want to write code that *isn't* hard-coded to TCP, then 
endpoints become much more attractive.  I won't even try to give an 
example of how you'd do that with the reactor listen* methods or the 
other services in twisted.application.internet.  But with endpoints, 
it's simple:

    someEndpoint.listen(someFactory)

or

    StreamServerEndpointService(someEndpoint, someFactory)

If you want the listen address to be configurable via some configuration 
file, or perhaps even in a GUI, 
`twisted.internet.endpoints.serverFromString` is one way you might get 
this endpoint (in particular, I would emphasize that serverFromString is 
really only meant to construct an endpoint if you *have* to start with a 
string - as you do when you are reading a configuration file).

Or you might have some other part of your application that directly 
constructs endpoints itself, rather than parsing strings, and passes 
them in to the part of code that is responsible for actually doing the 
listening
This is really why we introduced endpoints - to make it possible for 
applications to listen on (or connect to) an address that is specified 
elsewhere.  Previously, the "easy thing to do" was to only support 
TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any 
address family/transport type that there is now (or will be in the 
future!) an endpoint for.
>
>I will be giving a training on Twisted in a few days during the 
>EuroPython conference (actually, more of an assisted tutorial than a 
>training) and I'm not sure how I should present this. Any information 
>would be helpful.
>
>Orestis

Hope this helps!  Good luck with the session. :)

Jean-Paul


From itamar at itamarst.org  Sun Jun 12 09:32:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 12 Jun 2011 09:32:28 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
Message-ID: <1307885548.10214.1.camel@blake>

On Sun, 2011-06-12 at 15:48 +0300, Orestis Markou wrote:
> Hello,
> 
> I'm curious about the endpoints API that appeared. I've read the
> documentation, and I think I understand what it does, but I'm curious
> to see what parts of twisted it replaces. A lot of the documentation
> on-site is not updated (eg the finger tutorial) and it's not very
> clear whether one should use reactor.listenTCP, TCPServer or the new
> API.

TCPServer is a wrapper for listenTCP that makes a Service, i.e. a thing
you can run with twistd. So it's infrastructure for deployment. There
are Service wrappers for endpoints as well.

It's probably best not to bring up TCPServer at all when teaching
beginners, and just write a custom Service if you happen to be teaching
about twistd.



From orestis at orestis.gr  Sun Jun 12 09:34:01 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sun, 12 Jun 2011 16:34:01 +0300
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
Message-ID: <32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>

> This is really why we introduced endpoints - to make it possible for 
> applications to listen on (or connect to) an address that is specified 
> elsewhere.  Previously, the "easy thing to do" was to only support 
> TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any 
> address family/transport type that there is now (or will be in the 
> future!) an endpoint for.

That's a perfect explanation, many thanks!

>> I will be giving a training on Twisted in a few days during the 
>> EuroPython conference (actually, more of an assisted tutorial than a 
>> training) and I'm not sure how I should present this. Any information 
>> would be helpful.
>> 
>> Orestis
> 
> Hope this helps!  Good luck with the session. :)

Thanks. BTW, I've spent the past week browsing through twisted's documentation (esp. the API reference). I have a few ideas that I think would help newcomers find their away around much easier (and be less scared of twisteD). The ideas are mostly organisational, the material is there, if one knows what to look for. Should I create new tickets or mail ideas to this list?

From glyph at twistedmatrix.com  Sun Jun 12 22:35:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Jun 2011 22:35:19 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
Message-ID: <8CF3E100-9DE3-48A5-A2CC-3171224F0CEB@twistedmatrix.com>

On Jun 12, 2011, at 9:22 AM, exarkun at twistedmatrix.com wrote:

> If you want the listen address to be configurable via some configuration 
> file, or perhaps even in a GUI, 
> `twisted.internet.endpoints.serverFromString` is one way you might get 
> this endpoint (in particular, I would emphasize that serverFromString is 
> really only meant to construct an endpoint if you *have* to start with a 
> string - as you do when you are reading a configuration file).

I think this undersells the string-based API somewhat.

Generally, you should start with a string, because that's the most flexible mechanism available: it leaves the selection of the endpoint type up to the user, which is what most protocols want to do.  It's the only plugin mechanism that Twisted offers at this point for new endpoint mechanisms.  (It might be even cooler to have a form-based or GUI plugin mechanism as well, but strings are usually all that we have to go on.)  Avoid the impulse to construct specific endpoint types unless you need to have a specific type.  serverFromString and clientFromString should be the default APIs for most new applications.

I think that what exarkun was really trying to emphasize here is that, if you know that your protocol specifically supports TCP and only TCP, you should prefer

   StreamServerEndpointService(TCP4ServerEndpoint(reactor, myPortNumber), someFactory)

to

   strports.service("tcp:%d" % (myPortNumber,), someFactory)

because the former, while it is a bit more verbose, clearly expresses what you're trying to do, whereas the latter depends on the 'tcp' plugin having a specific behavior (which, since it's a plugin, might be overridden or changed in the future).

This problem becomes more pronounced when you're using the 'ssl' endpoint type, because if you're importing the endpoint you will be able to see a clear exception if SSL is not available, but if you're relying on the string plugin system it won't break until you actually try to start listening.  (And yet more pronounced if you were to rely on some endpoint plugin type that isn't provided with Twisted.)

In other words, you should tend to prefer one of the APIs that accept a string (strports.service, serverFromString, clientFromString), but if you use such an API, pass the whole string from the user into that function, so that you pass the flexibility on to your users and you don't introduce hidden dependencies into your application.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110612/f5543e22/attachment.htm 

From exarkun at twistedmatrix.com  Mon Jun 13 08:26:32 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 13 Jun 2011 12:26:32 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>
Message-ID: <20110613122632.1894.381076526.divmod.xquotient.48@localhost.localdomain>

On 12 Jun, 01:34 pm, orestis at orestis.gr wrote:
>>This is really why we introduced endpoints - to make it possible for
>>applications to listen on (or connect to) an address that is specified
>>elsewhere.  Previously, the "easy thing to do" was to only support
>>TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any
>>address family/transport type that there is now (or will be in the
>>future!) an endpoint for.
>
>That's a perfect explanation, many thanks!
>>>I will be giving a training on Twisted in a few days during the
>>>EuroPython conference (actually, more of an assisted tutorial than a
>>>training) and I'm not sure how I should present this. Any information
>>>would be helpful.
>>>
>>>Orestis
>>
>>Hope this helps!  Good luck with the session. :)
>
>Thanks. BTW, I've spent the past week browsing through twisted's 
>documentation (esp. the API reference). I have a few ideas that I think 
>would help newcomers find their away around much easier (and be less 
>scared of twisteD). The ideas are mostly organisational, the material 
>is there, if one knows what to look for. Should I create new tickets or 
>mail ideas to this list?

It would probably be best if you could get Kevin Horn and/or Tom Davis' 
attention.  They've both been thinking about making the documentation 
more accessible lately.  It would be great to incorporate your ideas 
into the overall plan.

Jean-Paul


From tom at recursivedream.com  Mon Jun 13 09:02:45 2011
From: tom at recursivedream.com (Tom Davis)
Date: Mon, 13 Jun 2011 09:02:45 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110613122632.1894.381076526.divmod.xquotient.48@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>
	<20110613122632.1894.381076526.divmod.xquotient.48@localhost.localdomain>
Message-ID: <E5EF7644-802A-44E6-BDAB-510EBEEDE85C@recursivedream.com>

On Jun 13, 2011, at 8:26 AM, exarkun at twistedmatrix.com wrote:

> On 12 Jun, 01:34 pm, orestis at orestis.gr wrote:
>>> This is really why we introduced endpoints - to make it possible for
>>> applications to listen on (or connect to) an address that is specified
>>> elsewhere.  Previously, the "easy thing to do" was to only support
>>> TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any
>>> address family/transport type that there is now (or will be in the
>>> future!) an endpoint for.
>> 
>> That's a perfect explanation, many thanks!
>>>> I will be giving a training on Twisted in a few days during the
>>>> EuroPython conference (actually, more of an assisted tutorial than a
>>>> training) and I'm not sure how I should present this. Any information
>>>> would be helpful.
>>>> 
>>>> Orestis
>>> 
>>> Hope this helps!  Good luck with the session. :)
>> 
>> Thanks. BTW, I've spent the past week browsing through twisted's 
>> documentation (esp. the API reference). I have a few ideas that I think 
>> would help newcomers find their away around much easier (and be less 
>> scared of twisteD). The ideas are mostly organisational, the material 
>> is there, if one knows what to look for. Should I create new tickets or 
>> mail ideas to this list?
> 
> It would probably be best if you could get Kevin Horn and/or Tom Davis' 
> attention.  They've both been thinking about making the documentation 
> more accessible lately.  It would be great to incorporate your ideas 
> into the overall plan.

My ears, they burn! But, yeah, in terms of discoverability, the ever-near lore-to-Sphinx conversion does a ton for discoverability and makes obvious a number of opportunities for organizational improvement (a link to a recentish build eludes me, but when you seem them you'll know what I mean). Beyond the low-hanging fruit, there are many notes regarding individual docs improvements. Feel free to share your own, though I recommend checking Trac first because many documents do indeed have tickets. If you need help there let me know.

Speaking of the lore-to-Sphinx conversion, I am contractually obligated to inform you that improvements to current documentation is not blocked by the pending conversion. And that you have the right to a lawyer.

Cheers,

Tom

> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From _ at lvh.cc  Mon Jun 13 09:18:55 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 13 Jun 2011 15:18:55 +0200
Subject: [Twisted-Python] A new & improved IResource
Message-ID: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>

Hey!


In relation to my recent getChild problem (specifically, I want to return
deferred resources from it), it has become evident that IResource just won't
cut it for a number of reasons and we should probably replace the API with
something else.

The issues we should take care of in this new API:

1. http://tm.tl/3711 (returning deferreds from render methods)
2. http://tm.tl/3621 (returning deferreds from getChild and friends)
3. http://tm.tl/288 (accessing uploaded data while in progress)

If there are any missing tickets I'm forgetting about that are only fixable
by breaking the interface, now would be a good time to speak up.

I have created a new ticket (http://tm.tl/5152) for the new interface using
an integration branch that addresses the issues in the individual tickets on
a new interface as Glyph proposed. I've also commented on #3711 to say that
it just won't work that way and that we need a new interface, referring them
to the new ticket number.

What should the migration plan look like? At least from the code point of
view, exarkun has already partially answered this question:
http://twistedmatrix.com/trac/ticket/288#comment:31



cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110613/ae9a1d20/attachment.htm 

From exarkun at twistedmatrix.com  Mon Jun 13 09:38:08 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 13 Jun 2011 13:38:08 -0000
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
Message-ID: <20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>

On 01:18 pm, _ at lvh.cc wrote:
>Hey!
>
>
>In relation to my recent getChild problem (specifically, I want to 
>return
>deferred resources from it), it has become evident that IResource just 
>won't
>cut it for a number of reasons and we should probably replace the API 
>with
>something else.
>
>The issues we should take care of in this new API:
>
>1. http://tm.tl/3711 (returning deferreds from render methods)
>2. http://tm.tl/3621 (returning deferreds from getChild and friends)
>3. http://tm.tl/288 (accessing uploaded data while in progress)
>
>If there are any missing tickets I'm forgetting about that are only 
>fixable
>by breaking the interface, now would be a good time to speak up.

Another thing we want is something closer to locateChild as Nevow and 
web2 had.  The key feature is being able to consume multiple path 
segments (or none at all) at a time if desired.

Jean-Paul
>I have created a new ticket (http://tm.tl/5152) for the new interface 
>using
>an integration branch that addresses the issues in the individual 
>tickets on
>a new interface as Glyph proposed. I've also commented on #3711 to say 
>that
>it just won't work that way and that we need a new interface, referring 
>them
>to the new ticket number.
>
>What should the migration plan look like? At least from the code point 
>of
>view, exarkun has already partially answered this question:
>http://twistedmatrix.com/trac/ticket/288#comment:31
>
>
>
>cheers
>lvh


From _ at lvh.cc  Mon Jun 13 18:30:04 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 14 Jun 2011 00:30:04 +0200
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>
Message-ID: <BANLkTiks077tSsCs2B_mg5X3406cSJpR4A@mail.gmail.com>

On Mon, Jun 13, 2011 at 3:38 PM, <exarkun at twistedmatrix.com> wrote:

> Another thing we want is something closer to locateChild as Nevow and
> web2 had.  The key feature is being able to consume multiple path
> segments (or none at all) at a time if desired.
>
> Jean-Paul
>

I added it to the ticket.

Someone on IRC mentioned that locateChild isn't exactly perfect either --
how does it differ from the idealized API?

For the people who hadn't seen locateChild before (much like myself) -- the
main difference is that instead of just taking the *next* segment, it takes
all of the remaining ones, and instead of returning a single child, it
returns a child and the remaining segments. A possible problem with this is
that people might get the impression they should mess with the segments...
Comments welcome.

I'm also not sure if it should be allowed to return an IResource (and
basically use the IResource getChild behavior whenever you see an
IResource...) or if it should only return the new things. Perhaps there
could be an adapter: if entity.locateChild([a, b, c]) returns a (resource,
[b, c]), the resource is adapted to IEntity (working title for
I2NewResource2), and the adapter's .locateChild([b, c]) call gets translated
into self.wrappedResource.getChild(b).getChild(c), or something.


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110614/26666d31/attachment.htm 

From albert.brandl at weiermayer.com  Tue Jun 14 03:37:29 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 14 Jun 2011 09:37:29 +0200
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
Message-ID: <20110614073729.GB2315@weiermayer.com>

On Sun, Jun 12, 2011 at 01:22:35PM -0000, exarkun at twistedmatrix.com wrote:
> `twisted.internet.endpoints.serverFromString` is one way you might get 
> this endpoint (in particular, I would emphasize that serverFromString is 
> really only meant to construct an endpoint if you *have* to start with a 
> string - as you do when you are reading a configuration file).

This works also quite well when you have different kinds of connection
in the testing and production environment. We read data from a GPS
device. For testing purposes, we want to feed the NMEA telegrams into
the server using a TCP connection, but the device is connected to the
server on a serial port.

We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800" 
for the production environment and "tcp:1049" for the test environment 
(SERIAL is not yet part of the endpoint framework - I've started working 
on issue 4847, but didn't find time yet to polish the code and submit a 
patch - sorry).

We're now able to create a service by calling 

    gps_service = strports.service(GPS_PORT, gps_factory)

Depending on the environment, the server listens either on TCP port 1049 
or the serial device /dev/ttyS2.

A nice side effect is that I have a central place where the connection 
details for all kinds of services are defined - should any port change, 
I know where to fix it.

Regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From glyph at twistedmatrix.com  Tue Jun 14 12:09:38 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 12:09:38 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614073729.GB2315@weiermayer.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
Message-ID: <5F024269-7320-42A3-80CE-F147EA3B8CE0@twistedmatrix.com>


On Jun 14, 2011, at 3:37 AM, Albert Brandl wrote:

> We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800" 
> for the production environment and "tcp:1049" for the test environment 
> (SERIAL is not yet part of the endpoint framework - I've started working 
> on issue 4847, but didn't find time yet to polish the code and submit a 
> patch - sorry).

Submit a patch that's unpolished, and perhaps someone else will take the opportunity to polish it up for you :).

If you're using an endpoint plugin of your own, though, that's cool, I'm glad that someone is making use of that API!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110614/2b3b4cb7/attachment.htm 

From anton at iki.fi  Tue Jun 14 12:25:14 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Tue, 14 Jun 2011 19:25:14 +0300
Subject: [Twisted-Python] Specifying the local port for a twisted.names DNS
	query or resolver
Message-ID: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>

I have external requirements that force me to issue DNS queries from a
specific local port range. I'm looking for a way to use the
twisted.names resolver but I need to specify a local port for a query
or set the local port range for all queries. I appreciate that the
local port randomization is there for good security reasons, but for
my application I do not care. I would be grateful for any tips or
guidelines on how to achieve this.

For some ancient Twisted version I got it working by monkey patching
twisted.names.dns.DNSDatagramProtocol.startListening() to this effect.
This ugly hack of mine does not work anymore for any recent version of
Twisted. Is there a right way to do it?

Best regards
Anton


From glyph at twistedmatrix.com  Tue Jun 14 12:58:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 12:58:56 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <BANLkTiks077tSsCs2B_mg5X3406cSJpR4A@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>
	<BANLkTiks077tSsCs2B_mg5X3406cSJpR4A@mail.gmail.com>
Message-ID: <7BC9278F-3783-4F11-9650-CA7166FB880B@twistedmatrix.com>


On Jun 13, 2011, at 6:30 PM, Laurens Van Houtven wrote:

> On Mon, Jun 13, 2011 at 3:38 PM, <exarkun at twistedmatrix.com> wrote:
> Another thing we want is something closer to locateChild as Nevow and
> web2 had.  The key feature is being able to consume multiple path
> segments (or none at all) at a time if desired.
> 
> Jean-Paul
> 
> I added it to the ticket.
> 
> Someone on IRC mentioned that locateChild isn't exactly perfect either -- how does it differ from the idealized API? 
> 
> For the people who hadn't seen locateChild before (much like myself) -- the main difference is that instead of just taking the *next* segment, it takes all of the remaining ones, and instead of returning a single child, it returns a child and the remaining segments. A possible problem with this is that people might get the impression they should mess with the segments... Comments welcome.

Yeah, messing with segments is an issue.  There's a thing that some Nevow applications would do which, while I'm not entirely sure it was a terrible idea, definitely exposed a weakness in this model.  We called it an "internal redirect".  The basic idea is that your resource gets called with "request, [a, b, c]" and you return "resource, [d, e, f]".  The problem with allowing this is that it decouples the resource from any sane way to identify its URL based on the request.  It's handy to have something like the 'prepath' attribute to assist in generating absolute URIs that can be passed to external systems, but you can't make that consistent in the face of code that arbitrarily manipulates the segments list.

Also, you can internally redirect this way based on path-based dispatch but you can't redirect based on hostname or other features of the request without mutating it.  So it seemed like a lopsided half-feature.

One off-the-cuff idea to address this would be to have a 'path' object with an API of its own; something like this:

def locateDescendant(self, request, path):
    year, month, day = path.consume(3)
    rsrc = self.resourceFromDate(year, month, day)
    return rsrc

.consume(integer) is something of a strawman here; you'd probably need a way to say stuff like "consume all of the path segments" or "consume everything up to a segment with the value 'x'", so that we didn't lose the (legitimate) flexibility of having a list.  We could of course just pass in a mutable list and not return it, but that provides a little more flexibility than I'd like, because it would allow you to do all the same stuff as returning your own arbitrary sequence.

Really this 'path' is actually cursor over the URI inside the request.  It would be nice if the state associated with traversal were encapsulated entirely in that object, so that the request itself didn't get mutated as it traveled down the path.

> I'm also not sure if it should be allowed to return an IResource (and basically use the IResource getChild behavior whenever you see an IResource...) or if it should only return the new things.

One return-type signature is a good idea.  Convenience APIs are better.  That said, if we do go with 2-tuple as the return type, good error reporting is crucial; it's very easy to accidentally return a resource.

> Perhaps there could be an adapter: if entity.locateChild([a, b, c]) returns a (resource, [b, c]), the resource is adapted to IEntity (working title for I2NewResource2), and the adapter's .locateChild([b, c]) call gets translated into self.wrappedResource.getChild(b).getChild(c), or something.

That seems sensible.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110614/56689e74/attachment.htm 

From glyph at twistedmatrix.com  Tue Jun 14 13:07:10 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 13:07:10 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
Message-ID: <7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>


On Jun 13, 2011, at 9:18 AM, Laurens Van Houtven wrote:

> Hey!
> 
> In relation to my recent getChild problem (specifically, I want to return deferred resources from it), it has become evident that IResource just won't cut it for a number of reasons and we should probably replace the API with something else.
> 
> The issues we should take care of in this new API:
> 
> 1. http://tm.tl/3711 (returning deferreds from render methods)
> 2. http://tm.tl/3621 (returning deferreds from getChild and friends)
> 3. http://tm.tl/288 (accessing uploaded data while in progress)

A new IResource means an opportunity for a new IRequest, since implementing that new interface is the easiest way for a resource to say "I require the new IRequest interface as a parameter to these methods".  This long-standing enhancement would be a nice thing to get in there:

http://tm.tl/1569 (IRequest should have a uri object)

This ticket predates my understanding of many of the nuances of URIs, URLs, URNs, IRIs, IDNA, etc, so URLPath is probably not quite up to the job.  nevow.url is closer, but probably needs some fixing (especially in the area of IRIs).

And, for that matter, some compatibility between the request object used by Agent and the request object used by the server would be great.  That's not necessary for a new interface, but in any design of a new interface, that should be taken into account so that it can satisfy requirements on both sides.

> If there are any missing tickets I'm forgetting about that are only fixable by breaking the interface, now would be a good time to speak up.
> 
> I have created a new ticket (http://tm.tl/5152) for the new interface using an integration branch that addresses the issues in the individual tickets on a new interface as Glyph proposed. I've also commented on #3711 to say that it just won't work that way and that we need a new interface, referring them to the new ticket number.
> 
> What should the migration plan look like? At least from the code point of view, exarkun has already partially answered this question: http://twistedmatrix.com/trac/ticket/288#comment:31
> 
> 
> 
> cheers
> lvh
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110614/ffc03d55/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jun 14 14:01:47 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Jun 2011 18:01:47 -0000
Subject: [Twisted-Python] Specifying the local port for a
	twisted.names	DNS query or resolver
In-Reply-To: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
References: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
Message-ID: <20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>

On 04:25 pm, anton at iki.fi wrote:
>I have external requirements that force me to issue DNS queries from a
>specific local port range. I'm looking for a way to use the
>twisted.names resolver but I need to specify a local port for a query
>or set the local port range for all queries. I appreciate that the
>local port randomization is there for good security reasons, but for
>my application I do not care. I would be grateful for any tips or
>guidelines on how to achieve this.
>
>For some ancient Twisted version I got it working by monkey patching
>twisted.names.dns.DNSDatagramProtocol.startListening() to this effect.
>This ugly hack of mine does not work anymore for any recent version of
>Twisted. Is there a right way to do it?

We'd be happy to have such a feature officially supported.  Would you 
like to work on a patch that adds a tested, documented hook for 
selecting the source port?

Jean-Paul


From exarkun at twistedmatrix.com  Tue Jun 14 14:37:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Jun 2011 18:37:45 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614073729.GB2315@weiermayer.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
Message-ID: <20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>

On 07:37 am, albert.brandl at weiermayer.com wrote:
>On Sun, Jun 12, 2011 at 01:22:35PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>`twisted.internet.endpoints.serverFromString` is one way you might get
>>this endpoint (in particular, I would emphasize that serverFromString 
>>is
>>really only meant to construct an endpoint if you *have* to start with 
>>a
>>string - as you do when you are reading a configuration file).
>
>This works also quite well when you have different kinds of connection
>in the testing and production environment. We read data from a GPS
>device. For testing purposes, we want to feed the NMEA telegrams into
>the server using a TCP connection, but the device is connected to the
>server on a serial port.

This is cool, I'm glad endpoints are working out for you. :)
>We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800"
>for the production environment and "tcp:1049" for the test environment

To be clear, though, it sounds like you're defining GPS_PORT in a .py 
file, and that's more or less what I was speaking against. :)  Instead, 
I would define GPS_PORT as either SerialEndpoint(reactor, "/dev/ttyS2", 
baudrate=4800) or TCP4ServerEndpoint(reactor, 1049).

The rest of your code can still be indifferent to which of these is in 
play (and you can have a service for either of these using 
StreamServerEndpointService).  If you misspell something or leave off a 
required argument, though, you're more likely to get an exception that 
points more directly at the problem.

Put another way, I suggest writing this:

    if debug_mode():
        gps_port = TCP4ServerEndpoint(reactor, 1049)
    else:
        gps_port = SerialEndpoint(reactor, "/dev/ttyS2", baudrate=4800)

    ...

    gps_service = StreamServerEndpointService(gps_port, gps_factory)

And save the "tcp:1049"-style strings for your .ini files where you 
cannot write it that way.

Jean-Paul


From glyph at twistedmatrix.com  Tue Jun 14 19:37:50 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 19:37:50 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
Message-ID: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>


On Jun 14, 2011, at 2:37 PM, exarkun at twistedmatrix.com wrote:

> On 07:37 am, albert.brandl at weiermayer.com wrote:
>> 

>> We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800"
>> for the production environment and "tcp:1049" for the test environment
> 
> To be clear, though, it sounds like you're defining GPS_PORT in a .py 
> file, and that's more or less what I was speaking against. :)  Instead, 
> I would define GPS_PORT as either SerialEndpoint(reactor, "/dev/ttyS2", 
> baudrate=4800) or TCP4ServerEndpoint(reactor, 1049).

In a rare show of dissent within the cabal[1], I disagree with Jean-Paul on this.

> The rest of your code can still be indifferent to which of these is in play (and you can have a service for either of these using StreamServerEndpointService).

This is the most important point to take away, and I agree with it.  As much as possible, code should interact with endpoints as parameters.  If you need to pass something around, pass the endpoint or the service itself, not the string or the parameters used to construct it.

> If you misspell something or leave off a required argument, though, you're more likely to get an exception that points more directly at the problem.

First, if you find bad error reporting while using the string-using APIs, it would be better to file a bug for improved error handling than to switch to hard-coding your endpoint types.  There's no particular reason that error-reporting needs to be worse in that case.

Second, I hate to say so, but the current error-reporting behavior wasn't designed particularly thoughtfully in either system, so in practice, sometimes you'll get better reporting from one and in some you'll get it from the other.  For example:

>>> from twisted.internet.endpoints import TCP4ServerEndpoint, serverFromString
>>> from twisted.internet import reactor
>>> serverFromString(reactor, 'bananas')
   ...
ValueError: Unqualified strport description passed to 'service'. Use qualified endpoint descriptions; for example, 'tcp:bananas'.
>>> serverFromString(reactor, 'tcp:bananas')
   ...
ValueError: invalid literal for int() with base 10: 'bananas'
>>> TCP4ServerEndpoint(reactor, 'bananas')
<twisted.internet.endpoints.TCP4ServerEndpoint object at 0x103629190>
>>> TCP4ServerEndpoint(reactor)
   ...
TypeError: __init__() takes at least 3 arguments (2 given)
>>> serverFromString(reactor, 'tcp:')
Traceback (most recent call last):
   ...
ValueError: invalid literal for int() with base 10: ''
>>> serverFromString(reactor, "bananas:")
   ...
ValueError: Unknown endpoint type: 'bananas'

Both of these really *should* be saying: "'bananas' is not a valid TCP port number" or "TCP requires a port number".  (Python's error reporting could use some improving here too: which __init__, exactly?)

Personally, I recommend that most developers prefer the string-based APIs, because they allow for more flexibility with less code.  (Granted, not a lot less code: just the N imports for each endpoint type you might support vs. the 1 import for serverFromString or strports.service.)

When you create a TCP4ServerEndpoint, that is an object with a very specific contract.  However, an endpoint created with the "tcp:" prefix passed to serverFromString has an opportunity for more dynamic behavior.  The former must always bind to TCPv4 sockets.  The latter, however, may develop different behavior.  For example, IPv6 support "for free" would be possible with this API, because by using the string-based APIs you are explicitly saying "I am passing some input in here, and I don't know what kind of stream-based transport I might get".  The compatibility contract with this code is much weaker, because it supports plugins, and already might be giving you lots of different kinds of objects depending on your configuration.

The place where I would recommend against using the string-based APIs is in systems which require knowledge of their transports.  For example, if you want to report about the apparent address of your peer in a protocol message with a specific format, you can't correctly do that with an arbitrary endpoint, because you won't know what datatype to expect from the getPeer() and getHost() methods on your transport.  You can't accept any endpoint that serverFromString might give you and then assume it will give you an IPv4Address as a peer.

So, you should be as flexible as you can, but no more.

> Put another way, I suggest writing this:
> 
>    if debug_mode():
>        gps_port = TCP4ServerEndpoint(reactor, 1049)
>    else:
>        gps_port = SerialEndpoint(reactor, "/dev/ttyS2", baudrate=4800)
> 
>    ...
> 
>    gps_service = StreamServerEndpointService(gps_port, gps_factory)
> 
> And save the "tcp:1049"-style strings for your .ini files where you 
> cannot write it that way.

This then begs the question: where does "debug_mode()"'s result come from?  Presumably someone had to indicate a boolean to this code somehow.  It would be simpler for whoever was supplying the value for debug_mode to just supply a value for the endpoint string description instead.  And if it's OK to hard-code the debug_mode boolean, why not just hard-code the string?  Since gps_factory already needs to accept being connected to different transport types, this is 8 lines of code (including the imports, not shown above) where 3 will do fine.

Can this code really only run over plain TCP and serial ports?  If not, then you might have to add an 'if secure()' to the TCP case.  And then you suddenly need a way to get a certificate in there, and all kinds of other information related to TLS.  Better to let the existing string-parsing configuration system do that for you.

-glyph

[1]: There is no cabal.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110614/7fc5e13a/attachment.htm 

From kevin.horn at gmail.com  Tue Jun 14 20:47:22 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 14 Jun 2011 19:47:22 -0500
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
	<316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
Message-ID: <BANLkTi=HgsEiK86MK-a6feZBrihDDDz76A@mail.gmail.com>

On Tue, Jun 14, 2011 at 6:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> [1]: There is no cabal.
>

The first rule of the Twisted Cabal[1] is that you do not talk about the
Twisted Cabal.

[1]: There (really!) is no cabal.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110614/4a298ee1/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jun 14 21:57:01 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 01:57:01 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
	<316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
Message-ID: <20110615015701.1894.325973391.divmod.xquotient.369@localhost.localdomain>

On 14 Jun, 11:37 pm, glyph at twistedmatrix.com wrote:
>
>On Jun 14, 2011, at 2:37 PM, exarkun at twistedmatrix.com wrote:
>
>[snip]
>>the rest of your code can still be indifferent to wHich of thEse is in 
>>play (and you can have a seRvice for Either of these usIng 
>>StreamServerEndpointService).
>
>ThiS is the most important poiNt to take away, and I agree with it.  As 
>much as possible, cOde should interact with endpoints as parameters. 
>If you need to pass something around, pass the endpoint or the service 
>itself, not the string or the parameters used to Construct it.

This is the most important point.
>[snip]
>>Put another way, I suggest writing this:
>>
>>    if debug_mode():
>>        gps_port = TCP4ServerEndpoint(reactor, 1049)
>>    else:
>>        gps_port = SerialEndpoint(reactor, "/dev/ttyS2", baudrate=4800)
>>
>>    ...
>>
>>    gps_service = StreamServerEndpointService(gps_port, gps_factory)
>>
>>And save the "tcp:1049"-style strings for your .ini files where you
>>cannot write it that way.
>
>This then begs the question: where does "debug_mode()"'s result come 
>from?

Yes, indeed.  I made my message a little too brief.  I didn't want to 
address whether the original code was correct or not in its approach of 
restricting itself to these two particular endpoints.
>Presumably someone had to indicAte a boolean to this code somehow.  It 
>would be simpler for whoever was supplying the value for debug_mode to 
>just supply a value for the endpoint string description instead.  And 
>if it's OK to hard-code the deBug_mode boolean, why not just hard-code 
>the string?  Since gps_factory already needs to Accept being connected 
>to different transport types, this is 8 lines of code (incLuding the 
>imports, not shown above) where 3 will do fine.
>
>Can this code really only run over plain TCP and serial ports?  If not, 
>then you might have to add an 'if secure()' to the TCP case.  And then 
>you suddenly need a way to get a certificate in there, and all kinds of 
>other information related to TLS.  Better to let the existing string- 
>parsing configuration system do that for you.

This is true.  And to a great extent it makes what I am going to say 
next rather unimportant.

If you *are* going to hard code a particular endpoint type or two, then 
using the string endpoints syntax is pointless.  Conversely, you should 
use the string endpoint syntax to good effect by not dropping literals 
into your source, but instead accepting the string value from user input 
or configuration somewhere.

Also, I snipped out the part of the message where you discuss bananas, 
but please consider this true result:
>>>ClientCreator(reactor, Protocol).connectTCP('localhost', 'bananas')
<Deferred #2>
Deferred #2 called back: <twisted.internet.protocol.Protocol instance at 
0x9e0522c>
>>>_.result.transport.getHost(), _.result.transport.getPeer()
(IPv4Address(TCP, '127.0.0.1', 44391), IPv4Address(TCP, '127.0.0.1', 
22))
>>>

Jean-Paul


From anton at iki.fi  Wed Jun 15 01:52:09 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 15 Jun 2011 08:52:09 +0300
Subject: [Twisted-Python] Specifying the local port for a twisted.names
 DNS query or resolver
In-Reply-To: <20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>
References: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
	<20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>
Message-ID: <BANLkTimWmvFPJpR+N0FyEiC9oDZP09e54w@mail.gmail.com>

On Tue, Jun 14, 2011 at 9:01 PM,  <exarkun at twistedmatrix.com> wrote:
> We'd be happy to have such a feature officially supported. ?Would you
> like to work on a patch that adds a tested, documented hook for
> selecting the source port?

Perhaps I could work on such a patch. I would be thankful for any tips
on where to start and what would be a good interface.

I looked at the code again, and I think the source port is selected by
calling dns.randomSource() deep in
twisted.names.client.Resolver._connectedProtocol(). This could perhaps
be broken out to a separate method of client.Resolver. It would
probably make sense to at the same time let the local IP address
(interface) be specified in addition to the port (as with the
bindAddress parameter). So perhaps Resolver._connectedProtocol() could
call a new method client.Resolver.getUDPBindAddress(), with the
default implementation returning ('', dns.getRandomSource()). Then a
user could subclass Resolver and override the getUDPBindAddress method
(or monkey patch an existing Resolver).

Currently Resolver._connectedProtocol() wraps the call to
dns.randomSource() and listenUDP in a "while True" loop, catching
CannotListenError so that if the randomly selected port is in use, a
new port will be selected by random. If we let the user change the
port selection logic, it might be good to safeguard against infinitely
looping if e.g., the user decides to always return the same port.
Perhaps re-raise the CannotListenError exception on the N-th loop.

Am I on the right track?

Best regards
Anton


From albert.brandl at weiermayer.com  Wed Jun 15 05:00:45 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 15 Jun 2011 11:00:45 +0200
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
Message-ID: <20110615090044.GA2819@weiermayer.com>

On Tue, Jun 14, 2011 at 06:37:45PM -0000, exarkun at twistedmatrix.com wrote:
> To be clear, though, it sounds like you're defining GPS_PORT in a .py 
> file, and that's more or less what I was speaking against. :)  Instead, 
> I would define GPS_PORT as either SerialEndpoint(reactor, "/dev/ttyS2", 
> baudrate=4800) or TCP4ServerEndpoint(reactor, 1049).

I've read your comment before sending the email. But I preferred to
show what we are doing right now over "faking" a solution that might
be more beautiful.

Regarding maintenance, the string representation has some advantages.
It's easier to explain how to modify a configuration file that contains
some strings than explaining how to modify Python source code. OTOH,
losing meaningful debug messages hurts, of course ;-).

Best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From albert.brandl at weiermayer.com  Wed Jun 15 05:31:17 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 15 Jun 2011 11:31:17 +0200
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
	<316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
Message-ID: <20110615093117.GB2819@weiermayer.com>

On Tue, Jun 14, 2011 at 07:37:50PM -0400, Glyph Lefkowitz wrote:
> This is the most important point to take away, and I agree with it.  As much as
> possible, code should interact with endpoints as parameters.  If you need to
> pass something around, pass the endpoint or the service itself, not the string
> or the parameters used to construct it.

Granted.

> This then begs the question: where does "debug_mode()"'s result come from?

Actually, there is no `debug_mode()` function, but we rewrite the 
configuration file before deploying it. It contains some blocks like

# DEV_START
GPS_PORT = "tcp:1049"
...
# DEV_END

and

# PROD_START
# GPS_PORT = "SERIAL:/dev/ttyS2:baudrate=4800"
# ...
# PROD_END

The deployment script removes all lines between "# DEV_START" and "# DEV_END" 
and removes the comments between "# PROD_START" and "# PROD_END". This allows 
us to guarantee that development features (e.g. a manhole, a different kind 
of database, TCP-based stubs for serial devices like the GPS-receiver) do not 
"leak" into the production environment.

> Presumably someone had to indicate a boolean to this code somehow.  It would
> be simpler for whoever was supplying the value for debug_mode to just supply a
> value for the endpoint string description instead.  And if it's OK to hard-code
> the debug_mode boolean, why not just hard-code the string?

That's how it's implemented.

Best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From exarkun at twistedmatrix.com  Wed Jun 15 07:56:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 11:56:34 -0000
Subject: [Twisted-Python] Specifying the local port for a
	twisted.names	DNS query or resolver
In-Reply-To: <BANLkTimWmvFPJpR+N0FyEiC9oDZP09e54w@mail.gmail.com>
References: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
	<20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>
	<BANLkTimWmvFPJpR+N0FyEiC9oDZP09e54w@mail.gmail.com>
Message-ID: <20110615115634.1894.1092821033.divmod.xquotient.370@localhost.localdomain>

On 05:52 am, anton at iki.fi wrote:
>On Tue, Jun 14, 2011 at 9:01 PM,  <exarkun at twistedmatrix.com> wrote:
>>We'd be happy to have such a feature officially supported. ?Would you
>>like to work on a patch that adds a tested, documented hook for
>>selecting the source port?
>
>Perhaps I could work on such a patch. I would be thankful for any tips
>on where to start and what would be a good interface.
>
>I looked at the code again, and I think the source port is selected by
>calling dns.randomSource() deep in
>twisted.names.client.Resolver._connectedProtocol(). This could perhaps
>be broken out to a separate method of client.Resolver. It would
>probably make sense to at the same time let the local IP address
>(interface) be specified in addition to the port (as with the
>bindAddress parameter). So perhaps Resolver._connectedProtocol() could
>call a new method client.Resolver.getUDPBindAddress(), with the
>default implementation returning ('', dns.getRandomSource()). Then a
>user could subclass Resolver and override the getUDPBindAddress method
>(or monkey patch an existing Resolver).
>
>Currently Resolver._connectedProtocol() wraps the call to
>dns.randomSource() and listenUDP in a "while True" loop, catching
>CannotListenError so that if the randomly selected port is in use, a
>new port will be selected by random. If we let the user change the
>port selection logic, it might be good to safeguard against infinitely
>looping if e.g., the user decides to always return the same port.
>Perhaps re-raise the CannotListenError exception on the N-th loop.
>
>Am I on the right track?

Yep, sounds like a great plan.

Jean-Paul


From orestis at orestis.gr  Wed Jun 15 13:03:14 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Wed, 15 Jun 2011 20:03:14 +0300
Subject: [Twisted-Python] Example of re-usable ClientFactories?
Message-ID: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>

Hello,

I've gotten to the point in my tutorial that I'm giving out examples of writing clients. Example:

class HTTPGETProtocol(protocol.Protocol):
    def connectionMade(self):
        self.buffer = []
        self.transport.write('GET %s HTTP/1.0\r\n' % self.factory.path)
        self.transport.write('User-Agent: europython/2011\r\n')
        self.transport.write('\r\n')

    def dataReceived(self, data):
        self.buffer.append(data)


    def connectionLost(self, reason):
        self.factory.deferred.callback(''.join(self.buffer))


def get(host, path):
    f = protocol.ClientFactory()
    f.protocol = HTTPGETProtocol
    f.path = path
    f.deferred = defer.Deferred()
    reactor.connectTCP(host, 80, f)
    return f.deferred


So far as I can tell, this is a common idiom (albeit with a ClientFactory subclass) - create a single-use factory, store some instance variables into it, connect somewhere, let the protocol do its thing by accessing the factory's instance variables. Of course, real-world examples are much more complex, but the pattern remains pretty much the same.

I'm curious, is there any case where a ClientFactory.buildProtocol would be used more than once? The only case I can think is something like ReconnectingClientFactory that will need to re-initiate the connection, but it doesn't even use that kind of functionality.

Thinking more about it, a factory could be reused by connecting it to different addresses, so it would coordinate different protocols.

But, for most of the one-shot cases it seems that a ClientCreator (or an endpoint) would serve the same purpose, no?

Any pointers would be appreciated.
Orestis




From glyph at twistedmatrix.com  Wed Jun 15 15:19:52 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Jun 2011 15:19:52 -0400
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
Message-ID: <9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>

On Jun 15, 2011, at 1:03 PM, Orestis Markou wrote:

> But, for most of the one-shot cases it seems that a ClientCreator (or an endpoint) would serve the same purpose, no?

I am not sure that I understand your message.  ClientFactory will be re-used if you re-use it; it won't be re-used if you don't.  There's no particularly compelling reason to do so or not to do so; just whatever happens to make sense within your application.

However, I should note that with the advent of endpoints, ClientFactory is no longer necessary.  Connection failure is communicated on an endpoint via the Deferred from connect() errbacking, so there's no need for the extra callbacks that ClientFactory provides.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110615/7b0dda98/attachment.htm 

From exarkun at twistedmatrix.com  Wed Jun 15 16:08:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 20:08:07 -0000
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
Message-ID: <20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>

On 07:19 pm, glyph at twistedmatrix.com wrote:
>On Jun 15, 2011, at 1:03 PM, Orestis Markou wrote:
>>But, for most of the one-shot cases it seems that a ClientCreator (or 
>>an endpoint) would serve the same purpose, no?
>
>I am not sure that I understand your message.  ClientFactory will be 
>re-used if you re-use it; it won't be re-used if you don't.  There's no 
>particularly compelling reason to do so or not to do so; just whatever 
>happens to make sense within your application.
>
>However, I should note that with the advent of endpoints, ClientFactory 
>is no longer necessary.  Connection failure is communicated on an 
>endpoint via the Deferred from connect() errbacking, so there's no need 
>for the extra callbacks that ClientFactory provides.

Except clientConnectionLost.

Jean-Paul


From dshein at rochester.rr.com  Wed Jun 15 16:10:05 2011
From: dshein at rochester.rr.com (David Shein)
Date: Wed, 15 Jun 2011 16:10:05 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on 6/22
	& 6/23
Message-ID: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>

Hey Twisted Developers,
I'm looking to get a half dozen devs who will commit to being on the  
Twisted IRC channel next Wed and Thurs during biz hours to answer  
noobish queries from CS faculty working in an OS environment for the  
first time. One group will be working on Twisted bug tickets.  All  
the details are below.  If you are interested please LMK on the list,  
or you can email me directly at dshein at rochester.rr.com.
Dave Shein
Rochester Institute of Technology

Greetings:
My name is Dave Shein, and I'm an Adjunct Faculty at Rochester  
Institute of Technology. Along with Chris Tyler of Seneca College, we  
are hosting a week long POSSE boot-camp at the RIT campus from June  
20th -24th. POSSE, sponsored by Red Hat, is a week long educational  
hand-on seminar in open source process, collaboration, and education.  
The central purpose of POSSE is to increase awareness and  
opportunities for Open Source participation in the university  
setting. All POSSE participants are university staff or faculty who  
will take what they learn in POSSE and use that knowledge in CS and  
related curricula, to spread the word about open source  
collaboration, and to provide increased educational opportunities for  
CS related students. Our first two days are spent acclimating our  
participants to tools and resources of the open source community, but  
on the third and fourth day of POSSE we will have our participants do  
a code-sprint. We are looking for opportunities in existing open  
source projects which have a quick learning curve and setup time for  
folks with a CS background but who in most cases will not have a  
great depth of experience working in open source languages. We are  
particularly interested in having our participants hack on Fedora  
based projects. The students will have a Fedora F14 & F15/Linux work  
environment setup as part of their initial orientation, and we are  
looking for projects that will not have lengthy setup beyond the  
participants' initial setup.
We obtained information about your open source project through  
OpenHatch, and would like to know if your project would have elements  
that would be amenable to our sprint. There will be approximately  
fifteen to twenty participants working on the sprint in teams of 3 to  
5 people each, of whom most are coders. IN ADDITION we are also  
looking for a project participation opportunity for 3 to 4 non- 
coders, possibly in the form of testing, copywriting, or editing  
work. Ideally we would also like to coordinate with a point-person in  
your organization during the period of the sprint, a person to whom  
participants could direct questions, perhaps via IRC in real time.
If this is of interest to you please contact me at your earliest  
convenience. I hope that we can work together soon.
David Malcom Shein
Rochester Institute of Technology
IRC# ProfSheinRIT on freenode
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110615/be31d106/attachment.htm 

From glyph at twistedmatrix.com  Wed Jun 15 16:24:01 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Jun 2011 16:24:01 -0400
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
	<20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>
Message-ID: <5A9DD346-C236-45A6-A906-AC6B52AC472D@twistedmatrix.com>

On Jun 15, 2011, at 4:08 PM, exarkun at twistedmatrix.com wrote:

>> However, I should note that with the advent of endpoints, ClientFactory 
>> is no longer necessary.  Connection failure is communicated on an 
>> endpoint via the Deferred from connect() errbacking, so there's no need 
>> for the extra callbacks that ClientFactory provides.
> 
> Except clientConnectionLost.


I chose my words carefully :-).

clientConnectionLost was always a duplicate of IProtocol.connectionLost.

It might be handy to have that notification delivered in multiple places (specifically, for implementing ReconnectingClientFactory), but it's not necessary (there's no "need" for it) since you can clone it by wrapping IProtocol instead of duplicating it in the guts of the reactor.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110615/b5a680ac/attachment.htm 

From exarkun at twistedmatrix.com  Wed Jun 15 16:37:49 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 20:37:49 -0000
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <5A9DD346-C236-45A6-A906-AC6B52AC472D@twistedmatrix.com>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
	<20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>
	<5A9DD346-C236-45A6-A906-AC6B52AC472D@twistedmatrix.com>
Message-ID: <20110615203749.1894.102405862.divmod.xquotient.374@localhost.localdomain>

On 08:24 pm, glyph at twistedmatrix.com wrote:
>On Jun 15, 2011, at 4:08 PM, exarkun at twistedmatrix.com wrote:
>>>However, I should note that with the advent of endpoints, 
>>>ClientFactory
>>>is no longer necessary.  Connection failure is communicated on an
>>>endpoint via the Deferred from connect() errbacking, so there's no 
>>>need
>>>for the extra callbacks that ClientFactory provides.
>>
>>Except clientConnectionLost.
>
>
>I chose my words carefully :-).
>
>clientConnectionLost was always a duplicate of 
>IProtocol.connectionLost.
>
>It might be handy to have that notification delivered in multiple 
>places (specifically, for implementing ReconnectingClientFactory), but 
>it's not necessary (there's no "need" for it) since you can clone it by 
>wrapping IProtocol instead of duplicating it in the guts of the 
>reactor.

The callback (not errback) case of the client endpoint API is redundant 
as well, then, since IProtocol.makeConnection exposes the same 
information. :)

Jean-Paul


From orestis at orestis.gr  Wed Jun 15 18:15:54 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Thu, 16 Jun 2011 01:15:54 +0300
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
Message-ID: <0172A5A5-1286-43C8-9799-1A951D4747D2@orestis.gr>


On 15 Jun 2011, at 22:19, Glyph Lefkowitz wrote:

> On Jun 15, 2011, at 1:03 PM, Orestis Markou wrote:
> 
>> But, for most of the one-shot cases it seems that a ClientCreator (or an endpoint) would serve the same purpose, no?
> 
> I am not sure that I understand your message.  ClientFactory will be re-used if you re-use it; it won't be re-used if you don't.  There's no particularly compelling reason to do so or not to do so; just whatever happens to make sense within your application.

I should have been more specific - I'm looking for application examples or domains that re-using a ClientFactory makes sense. Just in case someone asks ;) 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110616/621e6855/attachment-0001.htm 

From andrew at bemusement.org  Wed Jun 15 20:08:57 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 16 Jun 2011 10:08:57 +1000
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
 6/22 & 6/23
In-Reply-To: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
Message-ID: <20110616000857.GB30855@aihal.home.puzzling.org>

David Shein wrote:
>    Hey Twisted Developers,
> 
>    I'm looking to get a half dozen devs who will commit to being on the
>    Twisted IRC channel next Wed and Thurs during biz hours to answer noobish

Business hours in which timezone?

-Andrew.



From dshein at rochester.rr.com  Wed Jun 15 20:17:10 2011
From: dshein at rochester.rr.com (David Shein)
Date: Wed, 15 Jun 2011 20:17:10 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
	6/22 & 6/23
In-Reply-To: <20110616000857.GB30855@aihal.home.puzzling.org>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<20110616000857.GB30855@aihal.home.puzzling.org>
Message-ID: <5B953D1E-EA01-424C-AA6A-53F9982D718F@rochester.rr.com>

Thanks Andrew!
Business hours, Eastern Standard Time  (- 5 hrs GMT).

Dave
On Jun 15, 2011, at 8:08 PM, Andrew Bennetts wrote:

> David Shein wrote:
>>    Hey Twisted Developers,
>>
>>    I'm looking to get a half dozen devs who will commit to being  
>> on the
>>    Twisted IRC channel next Wed and Thurs during biz hours to  
>> answer noobish
>
> Business hours in which timezone?
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Thu Jun 16 13:54:10 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Jun 2011 13:54:10 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
	6/22 & 6/23
In-Reply-To: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
Message-ID: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>


On Jun 15, 2011, at 4:10 PM, David Shein wrote:

> I'm looking to get a half dozen devs who will commit to being on the Twisted IRC channel next Wed and Thurs during biz hours to answer noobish queries from CS faculty working in an OS environment for the first time. One group will be working on Twisted bug tickets.  All the details are below.  If you are interested please LMK on the list, or you can email me directly at dshein at rochester.rr.com.  


While I do have to be, you know, working during work hours :), I'll try to be around to answer questions that these folks might have.  I encourage others to do the same: this sounds like a great way to get more contributors involved.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110616/79baea28/attachment.htm 

From dshein at rochester.rr.com  Thu Jun 16 14:00:22 2011
From: dshein at rochester.rr.com (David Shein)
Date: Thu, 16 Jun 2011 14:00:22 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
	6/22 & 6/23
In-Reply-To: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
Message-ID: <CA7EA0CB-C629-4DC4-A59D-4A0DF5388DC2@rochester.rr.com>

Thanks Glyph,

This is a group of CS faculty and university staff after all, so yes,  
I think the likelihood is high that you could pick up an ongoing  
contributor or more.  Can't hurt either if some of these folks end up  
teaching courses in open source development--which is really POSSE's  
goal.

Dave Shein

On Jun 16, 2011, at 1:54 PM, Glyph Lefkowitz wrote:

>
> On Jun 15, 2011, at 4:10 PM, David Shein wrote:
>
>> I'm looking to get a half dozen devs who will commit to being on  
>> the Twisted IRC channel next Wed and Thurs during biz hours to  
>> answer noobish queries from CS faculty working in an OS  
>> environment for the first time. One group will be working on  
>> Twisted bug tickets.  All the details are below.  If you are  
>> interested please LMK on the list, or you can email me directly at  
>> dshein at rochester.rr.com.
>
>
> While I do have to be, you know, working during work hours :), I'll  
> try to be around to answer questions that these folks might have.   
> I encourage others to do the same: this sounds like a great way to  
> get more contributors involved.
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110616/4cd5d1f0/attachment.htm 

From _ at lvh.cc  Thu Jun 16 14:28:49 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 16 Jun 2011 20:28:49 +0200
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
 6/22 & 6/23
In-Reply-To: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
Message-ID: <BANLkTinJaz=w5cFRGfsdfxvykmMBaD4VCQ@mail.gmail.com>

On Thu, Jun 16, 2011 at 7:54 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> While I do have to be, you know, *working* during work hours :), I'll try
> to be around to answer questions that these folks might have.  I encourage
> others to do the same: this sounds like a great way to get more contributors
> involved.
>
> -glyph
>


Three cheers for drastically different timezones!


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110616/ea90393f/attachment.htm 

From exarkun at twistedmatrix.com  Thu Jun 16 14:32:32 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 16 Jun 2011 18:32:32 -0000
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on	6/22 & 6/23
In-Reply-To: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
Message-ID: <20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>

On 05:54 pm, glyph at twistedmatrix.com wrote:
>
>On Jun 15, 2011, at 4:10 PM, David Shein wrote:
>>I'm looking to get a half dozen devs who will commit to being on the 
>>Twisted IRC channel next Wed and Thurs during biz hours to answer 
>>noobish queries from CS faculty working in an OS environment for the 
>>first time. One group will be working on Twisted bug tickets.  All the 
>>details are below.  If you are interested please LMK on the list, or 
>>you can email me directly at dshein at rochester.rr.com.
>
>
>While I do have to be, you know, working during work hours :), I'll try 
>to be around to answer questions that these folks might have.

Likewise.

Jean-Paul
>I encourage others to do the same: this sounds like a great way to get 
>more contributors involved.
>
>-glyph


From dshein at rochester.rr.com  Thu Jun 16 15:24:04 2011
From: dshein at rochester.rr.com (David Shein)
Date: Thu, 16 Jun 2011 15:24:04 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on	6/22 & 6/23
In-Reply-To: <20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
	<20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>
Message-ID: <AD6C6276-30C1-4707-B862-29A88EEA9118@rochester.rr.com>

Thanks Jean-Paul.  :  )

Dave Shein
On Jun 16, 2011, at 2:32 PM, exarkun at twistedmatrix.com wrote:

> On 05:54 pm, glyph at twistedmatrix.com wrote:
>>
>> On Jun 15, 2011, at 4:10 PM, David Shein wrote:
>>> I'm looking to get a half dozen devs who will commit to being on the
>>> Twisted IRC channel next Wed and Thurs during biz hours to answer
>>> noobish queries from CS faculty working in an OS environment for the
>>> first time. One group will be working on Twisted bug tickets.   
>>> All the
>>> details are below.  If you are interested please LMK on the list, or
>>> you can email me directly at dshein at rochester.rr.com.
>>
>>
>> While I do have to be, you know, working during work hours :),  
>> I'll try
>> to be around to answer questions that these folks might have.
>
> Likewise.
>
> Jean-Paul
>> I encourage others to do the same: this sounds like a great way to  
>> get
>> more contributors involved.
>>
>> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From burslem2001 at yahoo.com  Thu Jun 16 18:46:20 2011
From: burslem2001 at yahoo.com (gary clark)
Date: Thu, 16 Jun 2011 15:46:20 -0700 (PDT)
Subject: [Twisted-Python] Failure to connect remotely to MySQL database
In-Reply-To: <20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>
Message-ID: <260797.53552.qm@web112505.mail.gq1.yahoo.com>

Hello,

I am trying to connect a twisted server to a remote machine which contains the mysql database, unfortunately I cannot access the database am am seeing error:

Failed to load application: Cant connect to MySQL on server 192.168.1.10.

db=create_engine('mysql://root:pwd at 192.168.1.10/database',echo=True)

The databse machine has a number of restrictions on the firewall. I can ping the database machine and can see the that mysqld is running and enabled. What need to be open and enabled to access the mysql server from another machine i.e what port and connection type.

I dont see anything in the mysqld log.

Cheers,
Gary C



From orestis at orestis.gr  Thu Jun 16 18:52:37 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Fri, 17 Jun 2011 01:52:37 +0300
Subject: [Twisted-Python] Ideas for a Twisted Training
Message-ID: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>

Hello,

In a few days I'll be giving a 4h long training on Twisted in Europython 2011 in Firenze, Italy.

I have a lot of material covering basic concepts, such as writing servers, writing clients, deferreds etc. I'm now looking for other areas of functionality I should show. I have a bit web, will do a bit of pb. Any other pointers?

Also, if anyone else from the Twisted community is going to be there, let's have a drink.

Disclaimer - I don't claim I'm a twisted expert. At first I hated Twisted, now I love it. I hope in this training I will help people learn how to approach Twisted, before I forget all my sources of confusion.

Orestis

From burslem2001 at yahoo.com  Thu Jun 16 19:52:52 2011
From: burslem2001 at yahoo.com (gary clark)
Date: Thu, 16 Jun 2011 16:52:52 -0700 (PDT)
Subject: [Twisted-Python] Failure to connect remotely to MySQL database
In-Reply-To: <260797.53552.qm@web112505.mail.gq1.yahoo.com>
Message-ID: <636725.86680.qm@web112517.mail.gq1.yahoo.com>

OK needed to allow port 3306 for mysql. Grant accesses on the database.

Thanks,
Gary C


--- On Thu, 6/16/11, gary clark <burslem2001 at yahoo.com> wrote:

> From: gary clark <burslem2001 at yahoo.com>
> Subject: [Twisted-Python] Failure to connect remotely to MySQL database
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Date: Thursday, June 16, 2011, 5:46 PM
> Hello,
> 
> I am trying to connect a twisted server to a remote machine
> which contains the mysql database, unfortunately I cannot
> access the database am am seeing error:
> 
> Failed to load application: Cant connect to MySQL on server
> 192.168.1.10.
> 
> db=create_engine('mysql://root:pwd at 192.168.1.10/database',echo=True)
> 
> The databse machine has a number of restrictions on the
> firewall. I can ping the database machine and can see the
> that mysqld is running and enabled. What need to be open and
> enabled to access the mysql server from another machine i.e
> what port and connection type.
> 
> I dont see anything in the mysqld log.
> 
> Cheers,
> Gary C
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


From atmb4u at gmail.com  Thu Jun 16 23:52:55 2011
From: atmb4u at gmail.com (Anoop Thomas Mathew)
Date: Fri, 17 Jun 2011 09:22:55 +0530
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <BANLkTimg9ieK_HS5BjZgGs2P+kirgMffcg@mail.gmail.com>

Hi Orestis,
It would be a great idea to record the entire session and publish somewhere
like youtube and post link on mailing list, so that every
twisted enthusiast can access it. I searched for video tutorials and found a
very few and all those were of either low quality or not worthy.

regards,
Anoop

atm
___
Life is short, Live it hard.




On 17 June 2011 04:22, Orestis Markou <orestis at orestis.gr> wrote:

> Hello,
>
> In a few days I'll be giving a 4h long training on Twisted in Europython
> 2011 in Firenze, Italy.
>
> I have a lot of material covering basic concepts, such as writing servers,
> writing clients, deferreds etc. I'm now looking for other areas of
> functionality I should show. I have a bit web, will do a bit of pb. Any
> other pointers?
>
> Also, if anyone else from the Twisted community is going to be there, let's
> have a drink.
>
> Disclaimer - I don't claim I'm a twisted expert. At first I hated Twisted,
> now I love it. I hope in this training I will help people learn how to
> approach Twisted, before I forget all my sources of confusion.
>
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110617/97c33c12/attachment-0001.htm 

From albert.brandl at weiermayer.com  Fri Jun 17 03:14:33 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 17 Jun 2011 09:14:33 +0200
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <20110617071433.GA2570@weiermayer.com>

On Fri, Jun 17, 2011 at 01:52:37AM +0300, Orestis Markou wrote:
> I have a lot of material covering basic concepts, such as writing 
> servers, writing clients, deferreds etc. I'm now looking for other 
> areas of functionality I should show. I have a bit web, will do a bit 
> of pb. Any other pointers?

It might be fun to talk about manholes. They allow you to inspect and 
change data in a running server - great for debugging and mocking 
functionality that is not yet implemented (or not available in the 
development environment).

Regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From therve at free.fr  Fri Jun 17 06:05:54 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 17 Jun 2011 12:05:54 +0200
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <4DFB2702.1060305@free.fr>

Le 17/06/2011 00:52, Orestis Markou a ?crit :
> Hello,

Hi!

> In a few days I'll be giving a 4h long training on Twisted in Europython 2011 in Firenze, Italy.
> 
> I have a lot of material covering basic concepts, such as writing servers, writing clients, deferreds etc. I'm now looking for other areas of functionality I should show. I have a bit web, will do a bit of pb. Any other pointers?

First thanks for having a tutorial, I think it's a great way to spread
the knowledge of Twisted around.

One thing which would be good to mention is testing: Twisted becomes
much easier if you manage to properly test your application, instead of
debugging with print statements around. You can look at the trial
tutorial in trunk to get some pointers:
http://twistedmatrix.com/trac/export/32129/trunk/doc/core/howto/trial.xhtml

Just talking about trial TestCase and returning Deferreds from tests is
a good start.

> Also, if anyone else from the Twisted community is going to be there, let's have a drink.

I'll be around starting Tuesday, happy to meet you here!

Cheers,

-- 
Thomas


From hs at ox.cx  Fri Jun 17 06:15:12 2011
From: hs at ox.cx (Hynek Schlawack)
Date: Fri, 17 Jun 2011 12:15:12 +0200
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <4DFB2702.1060305@free.fr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
	<4DFB2702.1060305@free.fr>
Message-ID: <BANLkTinbBGBoFcThueWsDPYUhnvN_Yk+mQ@mail.gmail.com>

Hi,

On Fri, Jun 17, 2011 at 12:05, Thomas Herv? <therve at free.fr> wrote:

>> Also, if anyone else from the Twisted community is going to be there, let's have a drink.
> I'll be around starting Tuesday, happy to meet you here!

Will there be a Twisted table at PyBeer/PyFiorentina? :)

Cheers,
-h, attending.


From techtonik at gmail.com  Fri Jun 17 06:18:28 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Fri, 17 Jun 2011 13:18:28 +0300
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <BANLkTimK5H=Z_4gz-gXyBf+sACezAON3WQ@mail.gmail.com>

On Fri, Jun 17, 2011 at 1:52 AM, Orestis Markou <orestis at orestis.gr> wrote:
> Hello,
>
> In a few days I'll be giving a 4h long training on Twisted in Europython 2011 in Firenze, Italy.
>
> I have a lot of material covering basic concepts, such as writing servers, writing clients, deferreds etc. I'm now looking for other areas of functionality I should show. I have a bit web, will do a bit of pb. Any other pointers?

Well, it would be nice to get some near real time visualization of
Twisted reactor in Blender game engine. It may inspire a lot of people
to learn Twisted. Blender has a lot of potential for Python
visualizations. =) Unfortunately, my visa have just expired, so I
won't get to the conference this year to spread the idea.
--
anatoly t.


From peter.inglesby at gmail.com  Fri Jun 17 06:20:26 2011
From: peter.inglesby at gmail.com (Peter Inglesby)
Date: Fri, 17 Jun 2011 11:20:26 +0100
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <BANLkTinbBGBoFcThueWsDPYUhnvN_Yk+mQ@mail.gmail.com>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
	<4DFB2702.1060305@free.fr>
	<BANLkTinbBGBoFcThueWsDPYUhnvN_Yk+mQ@mail.gmail.com>
Message-ID: <BANLkTikJF0qArFsTTkWYPKEahXWyQjt72g@mail.gmail.com>

>
>
> Will there be a Twisted table at PyBeer/PyFiorentina? :)
>
> If so, I'll be there!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110617/e8e64b0d/attachment.htm 

From ilja.livenson at gmail.com  Fri Jun 17 07:14:06 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Fri, 17 Jun 2011 13:14:06 +0200
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
Message-ID: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>

Hi,

I wonder if there are kind people here, who have implemented authN
against LDAP backend with twisted.cred and would be ok sharing the
code? Or even better - if this code could somehow make it into the
core package of Twisted.

thanks,
Ilja


From chris at emerge-life.de  Fri Jun 17 07:41:41 2011
From: chris at emerge-life.de (chris at emerge-life.de)
Date: Fri, 17 Jun 2011 13:41:41 +0200
Subject: [Twisted-Python]
	=?utf-8?q?twisted=2Ecred_implementation_for_LDAP?=
	=?utf-8?b?LCBhbnlvbmU/?=
In-Reply-To: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
Message-ID: <145-4dfb3d80-3-4c5ea780@38506918>

 Hi Ilja,

Am Freitag, 17. Juni 2011 13:14 CEST, Ilja Livenson <ilja.livenson at gmail.com> schrieb: 
> I wonder if there are kind people here, who have implemented authN
> against LDAP backend with twisted.cred and would be ok sharing the
> code? 

I believe the ldaptor project provides a LDAPBindingChecker to do just that.

Cheers,
Chris


From ilja.livenson at gmail.com  Fri Jun 17 07:47:22 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Fri, 17 Jun 2011 13:47:22 +0200
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <145-4dfb3d80-3-4c5ea780@38506918>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
Message-ID: <BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>

Oh, great, thanks! Saw the project but didn't notice they have checker as well.

I.

On 17 June 2011 13:41, chris at emerge-life.de <chris at emerge-life.de> wrote:
> ?Hi Ilja,
>
> Am Freitag, 17. Juni 2011 13:14 CEST, Ilja Livenson <ilja.livenson at gmail.com> schrieb:
>> I wonder if there are kind people here, who have implemented authN
>> against LDAP backend with twisted.cred and would be ok sharing the
>> code?
>
> I believe the ldaptor project provides a LDAPBindingChecker to do just that.
>
> Cheers,
> Chris
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From itamar at itamarst.org  Fri Jun 17 08:14:50 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 17 Jun 2011 08:14:50 -0400
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
Message-ID: <1308312890.14591.1.camel@blake>

On Fri, 2011-06-17 at 13:47 +0200, Ilja Livenson wrote:
> Oh, great, thanks! Saw the project but didn't notice they have checker as well.

Also note that unless it has been updated, there's a minor
incompatibility with modern Twisted (something about using
twisted.python.components instead of zope.interface IIRC), which is a
simple two line fix.



From kevin.horn at gmail.com  Fri Jun 17 13:10:09 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 17 Jun 2011 12:10:09 -0500
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <1308312890.14591.1.camel@blake>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
Message-ID: <BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>

On Fri, Jun 17, 2011 at 7:14 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> On Fri, 2011-06-17 at 13:47 +0200, Ilja Livenson wrote:
> > Oh, great, thanks! Saw the project but didn't notice they have checker as
> well.
>
> Also note that unless it has been updated, there's a minor
> incompatibility with modern Twisted (something about using
> twisted.python.components instead of zope.interface IIRC), which is a
> simple two line fix.
>
>
Also also note that the ldaptor project is now maintained here at github:

https://github.com/antong/ldaptor

Tommi V's old git repo is (AFAIK) no longer actively maintained.

I only mention it because it took me forever to find it last time I went
looking.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110617/e34ce948/attachment.htm 

From ldanielburr at gmail.com  Fri Jun 17 13:55:40 2011
From: ldanielburr at gmail.com (L. Daniel Burr)
Date: Fri, 17 Jun 2011 12:55:40 -0500
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
Message-ID: <op.vw8erftso3d63n@tiassa.local>

Hi Kevin,

On Fri, 17 Jun 2011 12:10:09 -0500, Kevin Horn <kevin.horn at gmail.com>  
wrote:

> On Fri, Jun 17, 2011 at 7:14 AM, Itamar Turner-Trauring  
> <itamar at itamarst.org
>> wrote:
>
>> On Fri, 2011-06-17 at 13:47 +0200, Ilja Livenson wrote:
>> > Oh, great, thanks! Saw the project but didn't notice they have  
>> checker as
>> well.
>>
>> Also note that unless it has been updated, there's a minor
>> incompatibility with modern Twisted (something about using
>> twisted.python.components instead of zope.interface IIRC), which is a
>> simple two line fix.
>>
>>
> Also also note that the ldaptor project is now maintained here at github:
>
> https://github.com/antong/ldaptor
>
> Tommi V's old git repo is (AFAIK) no longer actively maintained.
>
> I only mention it because it took me forever to find it last time I went
> looking.
>


Thanks for the link, I had no idea ldaptor was still being maintained.   
That's great news.

As an aside, I recall that ldaptor never could become part of twisted, due  
to its licensing.  I didn't see any license information in the new repo; I  
assume the code is still GPL v2?

Thanks,

--
L. Daniel Burr
ldanielburr at mac.com


From orestis at orestis.gr  Sat Jun 18 02:56:51 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 09:56:51 +0300
Subject: [Twisted-Python] Real-world but self-contained example?
Message-ID: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>

Hello,

I'm trying to come up with a real-world example of performant twisted code to show as the conclusion of the europython training I'll be giving this Monday.

After much help in the #twisted channel, I've written a simple "website monitoring service". I'm trying to keep everything as small and self-contained as possible. There are 3 files, one with a very simple http GET implementation, one with a 1000 sites (some might be NSFW-this is taken from the Alexa site rank) and a simple web service that uses a couple of DeferredQueues and cooperate to do the actual work.

However, I find that still there are issues - sometimes the output will block completely, signifying a blocked reactor (?). I don't know what else to try and fix, apart from setting up a local DNS server to cache the DNS queries. I'd appreciate either

a) someone looking at the code and pointing out possible bugs or ways it could be improved or
b) someone pointing out a proven, scaling real-world project that shows examples of doing things like this

Thanks,
Orestis


 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: httpget2.py
Type: text/x-python-script
Size: 1519 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20110618/0996bfaa/attachment-0003.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: monitor7.py
Type: text/x-python-script
Size: 3653 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20110618/0996bfaa/attachment-0004.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sites.py
Type: text/x-python-script
Size: 15151 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20110618/0996bfaa/attachment-0005.bin 

From orestis at orestis.gr  Sat Jun 18 03:09:30 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 10:09:30 +0300
Subject: [Twisted-Python] Building API documentation
Message-ID: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>

Apologies for the flood of messages - I'm getting anxious about this training ;)

I'm looking for a way to build (or download) the API reference offline, so each trainee would have it locally for faster access. Looks like I should be using t.p._release.APIBuilder, but presumably there's an automated script to do all that (and change the included html docs to point there as well?).

One of the aims of the training is to teach people to grok the docs (and the source), so we'll be diving into the docs a lot.

Thanks,
Orestis

From jaroslaw.fedewicz at gmail.com  Sat Jun 18 03:17:29 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sat, 18 Jun 2011 10:17:29 +0300
Subject: [Twisted-Python] Building API documentation
In-Reply-To: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
References: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
Message-ID: <4DFC5109.2030904@gmail.com>

On 18/06/11 10:09, Orestis Markou wrote:
> Apologies for the flood of messages - I'm getting anxious about this training ;)
>
> I'm looking for a way to build (or download) the API reference offline, so each trainee would have it locally for faster access. Looks like I should be using t.p._release.APIBuilder, but presumably there's an automated script to do all that (and change the included html docs to point there as well?).
>
> One of the aims of the training is to teach people to grok the docs (and the source), so we'll be diving into the docs a lot.
>

I did it in the following way.

1. Get a fresh copy of Twisted. I use trunk, you might go with a release 
as well.

2. Get pydoctor. It's either in your distribution or on Launchpad: bzr 
branch lp:pydoctor.

2.1. Get Nevow. It's probably at lp:nevow, though I'm not sure. Might be 
in your distribution, too, so you can just use that.

3. Go into the toplevel directory of Twisted code.

4. Run something along the lines of
    pydoctor --make-html twisted

5. Have some coffee while pydoctor does its job.

6. Enjoy apidocs/index.html!


From orestis at orestis.gr  Sat Jun 18 03:29:04 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 10:29:04 +0300
Subject: [Twisted-Python] Twisted training slides
Message-ID: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>

Hi again,

I'd greatly appreciate if someone could have a quick look through my slides:

http://dl.dropbox.com/u/34284/twisted_training.pdf (64MB PDF)

and comment on possible inaccuracies or flat-out wrong things. I have simplified some things in the beginning, but I expand later on.

Many thanks,
Orestis

From _ at lvh.cc  Sat Jun 18 07:20:07 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 18 Jun 2011 13:20:07 +0200
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
Message-ID: <BANLkTikZ2OcnRnTTRz0Q=dwrFB-gK8AhcA@mail.gmail.com>

Hey Orestis,

I'm driving around at the moment, but as soon as I get home I will take a
look at your slides. I will also be attending europython, so let's go grab a
beer :)
 On Jun 18, 2011 9:32 AM, "Orestis Markou" <orestis at orestis.gr> wrote:
> Hi again,
>
> I'd greatly appreciate if someone could have a quick look through my
slides:
>
> http://dl.dropbox.com/u/34284/twisted_training.pdf (64MB PDF)
>
> and comment on possible inaccuracies or flat-out wrong things. I have
simplified some things in the beginning, but I expand later on.
>
> Many thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110618/6e1e96a8/attachment.htm 

From jon at multani.info  Sat Jun 18 07:24:02 2011
From: jon at multani.info (Jonathan Ballet)
Date: Sat, 18 Jun 2011 20:24:02 +0900
Subject: [Twisted-Python] Real-world but self-contained example?
In-Reply-To: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>
References: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>
Message-ID: <20110618112401.GA4630@localhost>

[disclaimer: I'm a twisted newbie :) ]

On Sat, Jun 18, 2011 at 09:56:51AM +0300, Orestis Markou wrote:
> a) someone looking at the code and pointing out possible bugs or ways it could be improved or

I also reproduce the problem, so I tried to shutdown the HTTP GET first
to see what was going on, and I noticed two errors while running the code:

1) got_dns_error() is either called with a Twisted failure object (if
   the query fails) or with a Python exception if the address can't be
   resolved in _lookupName(), and the latter one doesn't have the
   getErrorMessage() method.

   I added a quick isinstance() call and now DNS resolving continues
   until all the names pool has been emptied.

2) However, at the end of the DNS lookups, I got the following error

2011-06-18 20:15:26+0900 [DNSProtocol,client] Unhandled Error
    Traceback (most recent call last):
      File "monitor7.py", line 126, in <module>
        reactor.run()
      File "/twisted/internet/base.py", line 1169, in run
        self.mainLoop()
      File "/twisted/internet/base.py", line 1181, in mainLoop
        self.doIteration(t)
      File "/twisted/internet/pollreactor.py", line 167, in doPoll
        log.callWithLogger(selectable, _drdw, selectable, fd, event)
    --- <exception caught here> ---
      File "/twisted/python/log.py", line 84, in callWithLogger
        return callWithContext({"system": lp}, func, *args, **kw)
      File "/twisted/python/log.py", line 69, in callWithContext
        return context.call({ILogContext: newCtx}, func, *args, **kw)
      File "/twisted/python/context.py", line 118, in callWithContext
        return self.currentContext().callWithContext(ctx, func, *args, **kw)
      File "/twisted/python/context.py", line 81, in callWithContext
        return func(*args,**kw)
      File "/twisted/internet/posixbase.py", line 587, in _doReadOrWrite
        self._disconnectSelectable(selectable, why, inRead)
      File "/twisted/internet/posixbase.py", line 257, in _disconnectSelectable
        selectable.readConnectionLost(f)
      File "/twisted/internet/tcp.py", line 221, in readConnectionLost
        self.connectionLost(reason)
      File "/twisted/internet/tcp.py", line 386, in connectionLost
        Connection.connectionLost(self, reason)
      File "/twisted/internet/tcp.py", line 232, in connectionLost
        protocol.connectionLost(reason)
      File "/twisted/names/dns.py", line 1863, in connectionLost
        self.controller.connectionLost(self)
    exceptions.AttributeError: Resolver instance has no attribute 'connectionLost'

  and I have no idea what's going on here. In this case, the
  DeferredList callback never got called.

My 2 cents,

 Jonathan


From jessica.mckellar at gmail.com  Sat Jun 18 08:54:45 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Sat, 18 Jun 2011 08:54:45 -0400
Subject: [Twisted-Python] Building API documentation
In-Reply-To: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
References: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
Message-ID: <BANLkTi=Ro2+PyUKWVBnM5U-VhUHxnabLBQ@mail.gmail.com>

Hi Orestis,

http://twistedmatrix.com/trac/wiki/ReviewingDocumentation#EditingAPIDocsdescribes
building the API docs.

Regards,
-Jessica

On Sat, Jun 18, 2011 at 3:09 AM, Orestis Markou <orestis at orestis.gr> wrote:

> Apologies for the flood of messages - I'm getting anxious about this
> training ;)
>
> I'm looking for a way to build (or download) the API reference offline, so
> each trainee would have it locally for faster access. Looks like I should be
> using t.p._release.APIBuilder, but presumably there's an automated script to
> do all that (and change the included html docs to point there as well?).
>
> One of the aims of the training is to teach people to grok the docs (and
> the source), so we'll be diving into the docs a lot.
>
> Thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110618/6fafb2fa/attachment.htm 

From ahsorrytigger-fibs at yahoo.de  Sat Jun 18 14:32:32 2011
From: ahsorrytigger-fibs at yahoo.de (Andreas Hausmann)
Date: Sat, 18 Jun 2011 18:32:32 +0000 (UTC)
Subject: [Twisted-Python] Twisted training slides
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
Message-ID: <itiqvv$k71$1@dough.gmane.org>

Hi,

I am Andreas. I used twisted to build an online backgammon server. I'll
post some on that later. My knowledge goes as far as server, client,
deferreds and plugins. Based on twisted core tutorial.

Orestis Markou wrote:

> [...]
> and comment on possible inaccuracies or flat-out wrong things. I have simplified some things in the beginning, but I expand later on.
> [...]

Unfortunately I went through slides 1-120 only. I have to stop now.
Maybe I can finish tomorrow morning. 

Alltogether it looks like very good roundup for newbies, showing all
important features. I like the style of the presentation.

Here my remarks so far:

I've been reading through it:
-----------------------------

- Slides 39<->40; the header changes from "Listen on a port"
to "Listen at a port". That unneccessarily distracts attention. (little
thing)

- Slide 100: I haven't gotten it. Maybe lack of knowledge on my side.

- Slides 108, 109 seem identical


I've been working through it (run this!):
-----------------------------------------

- Slide 48: Output doesn't correspond to code (slide 47).

- Exercise 2b: quite tough :), if you care to know. I was misled by your
examples the slides before (slides 99-103). I didn't see you were
heading to the use of deferreds throughout the code (_getPage),
despite your hint (defer.succeed()).


Hope, this helps
Andreas





From jstpierre at mecheye.net  Sat Jun 18 15:17:49 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sat, 18 Jun 2011 15:17:49 -0400
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
Message-ID: <BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>

Quick go-through:

  * Slide 50: Exercise 1 seems a bit poor -- it relies on the factory,
which you haven't introduced other than "oh hey there's this factory
attribute"

  * The panini stall metaphor goes on for way too long (IMO) and
doesn't really make sense.

  * Slide 92: I think having the callback being a method would make a
bit more sense.

  * Slide 100: I don't understand it. getRedirect doesn't exist, and
you should use 'return defer.succeed(data)' instead of 'return data'.

  * Slide 124: As I understand, DeferredList is a bit dated, and you
should use gatherResults instead -- it returns a deferred, and it
hands you a list of all the results in the callback. The dialogue is
also a bit repetitive (a list of Deferreds! I hand it a list of
Deferreds!) and the next slide has a typo header change.

  * Slide 133: You don't really introduce 'Deferred.callback', so I'd
recommend you do that. (I need to finish what I started with the
Deferred documentation improvements, I know)

  * Slide 137: I think a lot of people are going to just "reimplement"
it using getPage -- and I don't know why you'd want to create a poor
HTTP client when there's one built-in, and you're using it in
examples.

  * Slide 162: I think your examples would benefit by putting the
entire code on the screen at once, side-by-side: regular try/except on
the left, and errbacks on the right. Instead of replacing the slide to
point out some part of the example, highlight it instead. Do the same
for slides 167-168.

... and that's about all I read.

On Sat, Jun 18, 2011 at 3:29 AM, Orestis Markou <orestis at orestis.gr> wrote:
> Hi again,
>
> I'd greatly appreciate if someone could have a quick look through my slides:
>
> http://dl.dropbox.com/u/34284/twisted_training.pdf (64MB PDF)
>
> and comment on possible inaccuracies or flat-out wrong things. I have simplified some things in the beginning, but I expand later on.
>
> Many thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From orestis at orestis.gr  Sat Jun 18 16:30:22 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 23:30:22 +0300
Subject: [Twisted-Python] Building API documentation
In-Reply-To: <BANLkTi=Ro2+PyUKWVBnM5U-VhUHxnabLBQ@mail.gmail.com>
References: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
	<BANLkTi=Ro2+PyUKWVBnM5U-VhUHxnabLBQ@mail.gmail.com>
Message-ID: <8FB5B4D0-A807-438F-99A8-6D8B73F3D71D@orestis.gr>

Thanks, I managed to do that. For future reference, I just download a tarball of nevow out of launchpad's ubuntu distribution.

On 18 Jun 2011, at 15:54, Jessica McKellar wrote:

> Hi Orestis,
> 
> http://twistedmatrix.com/trac/wiki/ReviewingDocumentation#EditingAPIDocs describes building the API docs.
> 
> Regards,
> -Jessica
> 
> On Sat, Jun 18, 2011 at 3:09 AM, Orestis Markou <orestis at orestis.gr> wrote:
> Apologies for the flood of messages - I'm getting anxious about this training ;)
> 
> I'm looking for a way to build (or download) the API reference offline, so each trainee would have it locally for faster access. Looks like I should be using t.p._release.APIBuilder, but presumably there's an automated script to do all that (and change the included html docs to point there as well?).
> 
> One of the aims of the training is to teach people to grok the docs (and the source), so we'll be diving into the docs a lot.
> 
> Thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From orestis at orestis.gr  Sat Jun 18 16:35:41 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 23:35:41 +0300
Subject: [Twisted-Python] Real-world but self-contained example?
In-Reply-To: <20110618112401.GA4630@localhost>
References: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>
	<20110618112401.GA4630@localhost>
Message-ID: <EF115EDD-C21C-4256-AED8-2E363CB628B6@orestis.gr>

Thanks, the first error slipped through. The even more curious problem is why should that ever happen - getHostByName returns "None" for the address there, when it should errback. It looks like there might be an issue with twisted.names, but I've learned to blame my code at first, esp for things I'm not sure I understand clearly.


On 18 Jun 2011, at 14:24, Jonathan Ballet wrote:

> [disclaimer: I'm a twisted newbie :) ]
> 
> On Sat, Jun 18, 2011 at 09:56:51AM +0300, Orestis Markou wrote:
>> a) someone looking at the code and pointing out possible bugs or ways it could be improved or
> 
> I also reproduce the problem, so I tried to shutdown the HTTP GET first
> to see what was going on, and I noticed two errors while running the code:
> 
> 1) got_dns_error() is either called with a Twisted failure object (if
>   the query fails) or with a Python exception if the address can't be
>   resolved in _lookupName(), and the latter one doesn't have the
>   getErrorMessage() method.
> 
>   I added a quick isinstance() call and now DNS resolving continues
>   until all the names pool has been emptied.
> 
> 2) However, at the end of the DNS lookups, I got the following error
> 
> 2011-06-18 20:15:26+0900 [DNSProtocol,client] Unhandled Error
>    Traceback (most recent call last):
>      File "monitor7.py", line 126, in <module>
>        reactor.run()
>      File "/twisted/internet/base.py", line 1169, in run
>        self.mainLoop()
>      File "/twisted/internet/base.py", line 1181, in mainLoop
>        self.doIteration(t)
>      File "/twisted/internet/pollreactor.py", line 167, in doPoll
>        log.callWithLogger(selectable, _drdw, selectable, fd, event)
>    --- <exception caught here> ---
>      File "/twisted/python/log.py", line 84, in callWithLogger
>        return callWithContext({"system": lp}, func, *args, **kw)
>      File "/twisted/python/log.py", line 69, in callWithContext
>        return context.call({ILogContext: newCtx}, func, *args, **kw)
>      File "/twisted/python/context.py", line 118, in callWithContext
>        return self.currentContext().callWithContext(ctx, func, *args, **kw)
>      File "/twisted/python/context.py", line 81, in callWithContext
>        return func(*args,**kw)
>      File "/twisted/internet/posixbase.py", line 587, in _doReadOrWrite
>        self._disconnectSelectable(selectable, why, inRead)
>      File "/twisted/internet/posixbase.py", line 257, in _disconnectSelectable
>        selectable.readConnectionLost(f)
>      File "/twisted/internet/tcp.py", line 221, in readConnectionLost
>        self.connectionLost(reason)
>      File "/twisted/internet/tcp.py", line 386, in connectionLost
>        Connection.connectionLost(self, reason)
>      File "/twisted/internet/tcp.py", line 232, in connectionLost
>        protocol.connectionLost(reason)
>      File "/twisted/names/dns.py", line 1863, in connectionLost
>        self.controller.connectionLost(self)
>    exceptions.AttributeError: Resolver instance has no attribute 'connectionLost'
> 
>  and I have no idea what's going on here. In this case, the
>  DeferredList callback never got called.
> 
> My 2 cents,
> 
> Jonathan
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From andrew at bemusement.org  Sat Jun 18 20:06:29 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 19 Jun 2011 10:06:29 +1000
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>
Message-ID: <20110619000629.GJ30855@aihal.home.puzzling.org>

Jasper St. Pierre wrote:
[?]
>   * Slide 124: As I understand, DeferredList is a bit dated, and you
> should use gatherResults instead -- it returns a deferred, and it
> hands you a list of all the results in the callback. The dialogue is
> also a bit repetitive (a list of Deferreds! I hand it a list of
> Deferreds!) and the next slide has a typo header change.

DeferredList isn't dated exactly.  You should definitely prefer
gatherResults if it suits your situation, because it is a simpler and
easier API.  But DeferredList is more capable, it provides more
functionality (at the cost of being more complex to used).
gatherResults is implemented using DeferredList.

If it really were something to avoid entirely in favour of a newer
replacement we would have deprecated it by now :)

(IIRC there are actually one or two tickets about replacing it with
something better, but until that happens, it's certainly reasonable to
use.)

-Andrew.


From glyph at twistedmatrix.com  Sat Jun 18 21:14:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jun 2011 21:14:56 -0400
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <20110619000629.GJ30855@aihal.home.puzzling.org>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>
	<20110619000629.GJ30855@aihal.home.puzzling.org>
Message-ID: <A39C29B0-4E5B-43EE-98AA-21552C7FCB9E@twistedmatrix.com>


On Jun 18, 2011, at 8:06 PM, Andrew Bennetts wrote:

> Jasper St. Pierre wrote:
> [?]
>>  * Slide 124: As I understand, DeferredList is a bit dated, and you
>> should use gatherResults instead -- it returns a deferred, and it
>> hands you a list of all the results in the callback. The dialogue is
>> also a bit repetitive (a list of Deferreds! I hand it a list of
>> Deferreds!) and the next slide has a typo header change.
> 
> DeferredList isn't dated exactly.  You should definitely prefer
> gatherResults if it suits your situation, because it is a simpler and
> easier API.  But DeferredList is more capable, it provides more
> functionality (at the cost of being more complex to used).
> gatherResults is implemented using DeferredList.
> 
> If it really were something to avoid entirely in favour of a newer
> replacement we would have deprecated it by now :)
> 
> (IIRC there are actually one or two tickets about replacing it with
> something better, but until that happens, it's certainly reasonable to
> use.)

The ticket I can find quickly is <http://tm.tl/4977>.  Worth noting is that this ticket doesn't propose any major changes to the interface, except that it won't be a type, so you won't be able to do isinstance(x, DeferredList) any more.  But you shouldn't be doing this now, because nothing really needs to subclass Deferred.

So, when that replacement does arrive, as it stands now, changing one import line should be all you need to do to update your code.

If somebody wants to propose some changes in the new and improved version, commenting on that ticket would be a good place to start. :)

From exarkun at twistedmatrix.com  Sun Jun 19 00:05:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Jun 2011 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1308456323.25.1222084123@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110619/473028df/attachment-0001.htm 

From ahsorrytigger-fibs at yahoo.de  Sun Jun 19 07:24:34 2011
From: ahsorrytigger-fibs at yahoo.de (Andreas Hausmann)
Date: Sun, 19 Jun 2011 11:24:34 +0000 (UTC)
Subject: [Twisted-Python] Twisted training slides
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<itiqvv$k71$1@dough.gmane.org>
Message-ID: <itkm9i$i0r$1@dough.gmane.org>

Andreas Hausmann wrote:


> [...]
> Unfortunately I went through slides 1-120 only. I have to stop now.
> Maybe I can finish tomorrow morning. 
> [...]


here comes the rest:

slide 121: in my case, output was perfectly sorted. Here it is B A C D?

slide 125: typo in header "DefferedList"


From orestis at orestis.gr  Sun Jun 19 09:41:14 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sun, 19 Jun 2011 15:41:14 +0200
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <itkm9i$i0r$1@dough.gmane.org>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<itiqvv$k71$1@dough.gmane.org> <itkm9i$i0r$1@dough.gmane.org>
Message-ID: <228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>

Many thanks to everyone for the feedback. I will continue to work in this as much as possible.

This is a 4 hour training, so we should have enough time.

I will post the final slides after the training, tomorrow.

--
orestis.gr

19 ???? 2011, 13:24, ?/? Andreas Hausmann <ahsorrytigger-fibs at yahoo.de> ??????:

> Andreas Hausmann wrote:
> 
> 
>> [...]
>> Unfortunately I went through slides 1-120 only. I have to stop now.
>> Maybe I can finish tomorrow morning. 
>> [...]
> 
> 
> here comes the rest:
> 
> slide 121: in my case, output was perfectly sorted. Here it is B A C D?
> 
> slide 125: typo in header "DefferedList"
> 
> From exercise 3 on I had to scan through quickly. I got lost on slide
> 156 because I didn't understand that assertion. That might happen to
> some in the audience at this point.
> 
> Summary: I for myself will walk through the rest of your exercises as I
> believe my understanding will profit from it. As a talk, it is too much.
> As a workshop I'd say 2 hours the least. But a very good presentation
> alltogether.
> 
> Andreas
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From platsakos at gmail.com  Sun Jun 19 18:05:10 2011
From: platsakos at gmail.com (AK)
Date: Mon, 20 Jun 2011 01:05:10 +0300
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>	<itiqvv$k71$1@dough.gmane.org>
	<itkm9i$i0r$1@dough.gmane.org>
	<228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>
Message-ID: <4DFE7296.8090504@gmail.com>

Thanks for the useful slides Orestis. Once you have finalized them, is
it ok to provide a link towards them from my blog or they are bound with
the specific training session?
Cheers!

On 06/19/2011 04:41 PM, Orestis Markou wrote:
> Many thanks to everyone for the feedback. I will continue to work in this as much as possible.
>
> This is a 4 hour training, so we should have enough time.
>
> I will post the final slides after the training, tomorrow.
>
> --
> orestis.gr
>
> 19 ???? 2011, 13:24, ?/? Andreas Hausmann <ahsorrytigger-fibs at yahoo.de> ??????:
>
>> Andreas Hausmann wrote:
>>
>>
>>> [...]
>>> Unfortunately I went through slides 1-120 only. I have to stop now.
>>> Maybe I can finish tomorrow morning. 
>>> [...]
>>
>> here comes the rest:
>>
>> slide 121: in my case, output was perfectly sorted. Here it is B A C D?
>>
>> slide 125: typo in header "DefferedList"
>>
>> From exercise 3 on I had to scan through quickly. I got lost on slide
>> 156 because I didn't understand that assertion. That might happen to
>> some in the audience at this point.
>>
>> Summary: I for myself will walk through the rest of your exercises as I
>> believe my understanding will profit from it. As a talk, it is too much.
>> As a workshop I'd say 2 hours the least. But a very good presentation
>> alltogether.
>>
>> Andreas
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
What is the air-speed velocity of an unladen swallow? 



From david at silveregg.co.jp  Mon Jun 20 03:00:38 2011
From: david at silveregg.co.jp (David)
Date: Mon, 20 Jun 2011 16:00:38 +0900
Subject: [Twisted-Python] Handling application initialization synchronously
Message-ID: <4DFEF016.1000603@silveregg.co.jp>

Hi,

	I was wondering what's the recommended way to initialize a "complex" 
twisted application. Typically, let's say I have an application which 
needs to create a couple of "heavy" objects, each of which may create 
mysql db/tables:

class MyApplication(object):
     def __init__(self):
         # object1 and object2 may need to interact with MySQL,
         # and object2 assumes that object1 is completely initialized
         object1 = SomeClass1()
         object2 = SomeClass2()

Writing this kind of code asynchronously seems very tedious. My current 
solution is to use non-twisted, blocking API, but there may be a more 
elegant solution ? My main issue with using blocking API is that I 
sometimes have to write the same kind of code twice (one blocking, one 
non blocking).

cheers,

David


From orestis at orestis.gr  Mon Jun 20 04:57:50 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Mon, 20 Jun 2011 10:57:50 +0200
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <4DFE7296.8090504@gmail.com>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>	<itiqvv$k71$1@dough.gmane.org>
	<itkm9i$i0r$1@dough.gmane.org>
	<228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>
	<4DFE7296.8090504@gmail.com>
Message-ID: <D5884C0D-4002-4380-B96D-A5BCF72F901E@orestis.gr>

I will try to make a proper tutorial out of them - please don't spread that file around, I'll remove it at some point.
On 20 Jun 2011, at 00:05, AK wrote:

> Thanks for the useful slides Orestis. Once you have finalized them, is
> it ok to provide a link towards them from my blog or they are bound with
> the specific training session?
> Cheers!
> 
> On 06/19/2011 04:41 PM, Orestis Markou wrote:
>> Many thanks to everyone for the feedback. I will continue to work in this as much as possible.
>> 
>> This is a 4 hour training, so we should have enough time.
>> 
>> I will post the final slides after the training, tomorrow.
>> 
>> --
>> orestis.gr
>> 
>> 19 ???? 2011, 13:24, ?/? Andreas Hausmann <ahsorrytigger-fibs at yahoo.de> ??????:
>> 
>>> Andreas Hausmann wrote:
>>> 
>>> 
>>>> [...]
>>>> Unfortunately I went through slides 1-120 only. I have to stop now.
>>>> Maybe I can finish tomorrow morning. 
>>>> [...]
>>> 
>>> here comes the rest:
>>> 
>>> slide 121: in my case, output was perfectly sorted. Here it is B A C D?
>>> 
>>> slide 125: typo in header "DefferedList"
>>> 
>>> From exercise 3 on I had to scan through quickly. I got lost on slide
>>> 156 because I didn't understand that assertion. That might happen to
>>> some in the audience at this point.
>>> 
>>> Summary: I for myself will walk through the rest of your exercises as I
>>> believe my understanding will profit from it. As a talk, it is too much.
>>> As a workshop I'd say 2 hours the least. But a very good presentation
>>> alltogether.
>>> 
>>> Andreas
>>> 
>>> 
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> -- 
> What is the air-speed velocity of an unladen swallow? 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From orestis at orestis.gr  Mon Jun 20 05:04:27 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Mon, 20 Jun 2011 11:04:27 +0200
Subject: [Twisted-Python] Question about "starving" the reactor
Message-ID: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>

Hello,

I have a question about the "best practices" on making callbacks and making sure you don't hog the reactor.

So you pass a deferred to a client, who attaches a chain of callbacks that might probably do some CPU intensive stuff. How should one guard for that? The obvious solution to me for the server part would be to do

reactor.callLater(0, d.callback, arg)

insted of

d.callback(arg)


What about the client part? What would be the best way to have a chain of callbacks executed in such a way that the reactor isn't blocking during that time?

Thanks,
Orestis



From p.mayers at imperial.ac.uk  Mon Jun 20 06:10:34 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Jun 2011 11:10:34 +0100
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
Message-ID: <4DFF1C9A.9000101@imperial.ac.uk>

On 06/20/2011 10:04 AM, Orestis Markou wrote:
> Hello,
>
> I have a question about the "best practices" on making callbacks and
> making sure you don't hog the reactor.
>
> So you pass a deferred to a client, who attaches a chain of callbacks

Who is "you" and who is "client"?

> that might probably do some CPU intensive stuff. How should one guard
> for that? The obvious solution to me for the server part would be to
> do

AIUI, callback/errback (or indeed any Twisted function) should not 
block, which means if they're doing any significant quantity of work 
they should deferToThread or use a task.cooperator to break it into chunks.

You can return a deferred from a callback to pause processing, so this 
is very easy to implement:

def my_callback(data):
   d = deferToThread(factor_some_prime, data['number'])
   d.addCallback(lambda x: 'prime factors are '+repr(x))
   return d

>
> reactor.callLater(0, d.callback, arg)

That can help in some cases. Specifically if you're receiving datagrams, 
you might want to service the read() loop as much as possible before 
packets start to get dropped. But if d.callback is going to do a lot of 
work, it doesn't solve the problem - just delays it.

callbacks/errbacks should not do a lot of work.

>
> insted of
>
> d.callback(arg)
>
>
> What about the client part? What would be the best way to have a

I don't really understand what you mean by client and server part. A 
deferred is just a deferred. They don't even have to be used in a 
network context.


From orestis at orestis.gr  Mon Jun 20 06:29:13 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Mon, 20 Jun 2011 12:29:13 +0200
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <4DFF1C9A.9000101@imperial.ac.uk>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
Message-ID: <F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>

>> reactor.callLater(0, d.callback, arg)
> 
> That can help in some cases. Specifically if you're receiving datagrams, 
> you might want to service the read() loop as much as possible before 
> packets start to get dropped. But if d.callback is going to do a lot of 
> work, it doesn't solve the problem - just delays it.
> 
> callbacks/errbacks should not do a lot of work.
> 
>> 
>> insted of
>> 
>> d.callback(arg)
>> 
>> 
>> What about the client part? What would be the best way to have a
> 
> I don't really understand what you mean by client and server part. A 
> deferred is just a deferred. They don't even have to be used in a 
> network context.

By "server" I mean my application's API, by "client" I mean someone else that will go and attach callbacks to deferreds I will return.
I guess the question is, what is the best way to guard my application against callbacks that are doing a lot of work. But probably I'm confused by conflating the neglecting read() loop with starving the reactor.

It might be there's no way to do guarantee something like that, so it might be just that everyone should be careful about this.

From p.mayers at imperial.ac.uk  Mon Jun 20 07:39:22 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Jun 2011 12:39:22 +0100
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
Message-ID: <4DFF316A.8090506@imperial.ac.uk>

On 20/06/11 11:29, Orestis Markou wrote:

> By "server" I mean my application's API, by "client" I mean someone
> else that will go and attach callbacks to deferreds I will return. I
> guess the question is, what is the best way to guard my application
> against callbacks that are doing a lot of work. But probably I'm
> confused by conflating the neglecting read() loop with starving the
> reactor.
>
> It might be there's no way to do guarantee something like that, so it
> might be just that everyone should be careful about this.

I don't think you can stop callers of a function doing silly things with 
the return value.


From itamar at itamarst.org  Mon Jun 20 08:24:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 20 Jun 2011 08:24:28 -0400
Subject: [Twisted-Python] Handling application initialization
 synchronously
In-Reply-To: <4DFEF016.1000603@silveregg.co.jp>
References: <4DFEF016.1000603@silveregg.co.jp>
Message-ID: <1308572668.14591.35.camel@blake>

On Mon, 2011-06-20 at 16:00 +0900, David wrote:
> Hi,
> 
> 	I was wondering what's the recommended way to initialize a "complex" 
> twisted application. Typically, let's say I have an application which 
> needs to create a couple of "heavy" objects, each of which may create 
> mysql db/tables:

You could create all of the objects you need in one runInteraction call,
maybe?



From glyph at twistedmatrix.com  Mon Jun 20 11:09:40 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jun 2011 11:09:40 -0400
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <4DFF316A.8090506@imperial.ac.uk>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
Message-ID: <2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>

On Jun 20, 2011, at 7:39 AM, Phil Mayers wrote:

> On 20/06/11 11:29, Orestis Markou wrote:
> 
>> By "server" I mean my application's API, by "client" I mean someone
>> else that will go and attach callbacks to deferreds I will return. I
>> guess the question is, what is the best way to guard my application
>> against callbacks that are doing a lot of work. But probably I'm
>> confused by conflating the neglecting read() loop with starving the
>> reactor.
>> 
>> It might be there's no way to do guarantee something like that, so it
>> might be just that everyone should be careful about this.
> 
> I don't think you can stop callers of a function doing silly things with 
> the return value.

+1.  The best way to deal with this is to make your APIs nice and simple, and their implementation straightforward.  If you try to do weird tricks to make callbacks on your Deferreds cooperative, then you might break an otherwise reasonable strategy on the part of the client code to be well-behaved on their part.

For the code that is itself trying to be well-behaved, there are things like twisted.internet.task.cooperate.



From luke-lists at hybrid-logic.co.uk  Mon Jun 20 12:23:41 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Mon, 20 Jun 2011 17:23:41 +0100
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
	<2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
Message-ID: <1308587021.18253.57.camel@behemoth>

On Mon, 2011-06-20 at 11:09 -0400, Glyph Lefkowitz wrote:
> On Jun 20, 2011, at 7:39 AM, Phil Mayers wrote:
> > On 20/06/11 11:29, Orestis Markou wrote:
> >> It might be there's no way to do guarantee something like that, so it
> >> might be just that everyone should be careful about this.
> > 
> > I don't think you can stop callers of a function doing silly things with 
> > the return value.
> 
> +1.  The best way to deal with this is to make your APIs nice and
> simple, and their implementation straightforward.  If you try to do
> weird tricks to make callbacks on your Deferreds cooperative, then you
> might break an otherwise reasonable strategy on the part of the client
> code to be well-behaved on their part.
> 
> For the code that is itself trying to be well-behaved, there are
> things like twisted.internet.task.cooperate.

There might not be any way to stop consumers of your Deferreds executing
blocking operations, but when trying to track down which pieces of code
are the culprits, I found exarkun's BigTimesliceTimer very useful:

http://twistedmatrix.com/trac/browser/sandbox/exarkun/btt.py

It uses a reactor-independent timing mechanism (the setitimer sigcall on
Linux, contact me if you want the FreeBSD version) to set an alarm which
the reactor then has to "race" to unset, else the itimer handler gets
pre-emptively executed.  When the alarm runs, it prints a traceback of
the current execution point in the "client" code.  By setting the alarm
frequency sufficiently low and by watching for sufficiently long you can
"sample" the code which is running while the reactor is blocked.  Code
paths which show up frequently are therefore *more likely* to be the
culprits.

One day it would be nice to turn this into some kind of statistical tool
for highlighting which code paths are the "hot-spots" in your code, so
that you can optimise the "blockiest" bits first.  Premature
optimisation, etc.

Hope this helps; it helped me :-)

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +447791750420



From terry at jon.es  Mon Jun 20 15:51:35 2011
From: terry at jon.es (Terry Jones)
Date: Mon, 20 Jun 2011 21:51:35 +0200
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: Your message at 17:23:41 on Monday, 20 June 2011
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
	<2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
	<1308587021.18253.57.camel@behemoth>
Message-ID: <19967.42183.914380.109434@jon.es>

I posted to the mailing list a few years back with a Deferred class that
can log what callbacks were called, what result they returned, etc. It
would be very easy to add callback timing information to that. You'd just
insert a callback into the chain of any deferred you wanted to monitor to
have it log the timing of the various calls that were made. See:

  http://twistedmatrix.com/pipermail/twisted-python/2008-October/018535.html

T


From jml at mumak.net  Tue Jun 21 06:15:37 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 21 Jun 2011 11:15:37 +0100
Subject: [Twisted-Python] txStatsD - A Twisted-based StatsD server
In-Reply-To: <BANLkTi=VZcKfh0sZoAkNuPNkjBJMN5iG-w@mail.gmail.com>
References: <BANLkTi=VZcKfh0sZoAkNuPNkjBJMN5iG-w@mail.gmail.com>
Message-ID: <BANLkTikf8tPfu=-PYV-yRLqf3kqBjH9qMQ@mail.gmail.com>

Sidnei da Silva of Canonical wrote a StatsD server with Twisted. I
thought it was pretty neat, and thus worth sharing with
twisted-python at .

jml

---------- Forwarded message ----------
From: Sidnei da Silva <sidnei.da.silva at canonical.com>
Date: Tue, Jun 21, 2011 at 7:27 AM
Subject: [Canonical-tech] txStatsD - A Twisted-based StatsD server
To: Canonical Tech <canonical-tech at lists.launchpad.net>


Since we're looking into using Graphite in Landscape, and since I know
UbuntuOne is adding Graphite stats left and right and saw their
struggle with getting nodejs backported to Lucid so that they could
run StatsD, I thought I could sharpen my Twisted axe by porting StatsD
to Twisted.

?http://launchpad.net/txstatsd

For reference, StatsD
(https://github.com/etsy/statsd/blob/master/stats.js) is a UDP-based
server which collects and aggregates data at a configurable minimum
resolution, then forwards it to Graphite (which talks TCP). UDP was
chosen by StatsD since it's stateless, which means that the StatsD
server can be down without taking the application being graphed down
(some data can be lost but no downtime is incurred).

Bonus points to Twisted for ReconnectingClientFactory,
LineOnlyReceiver and LoopingCall, which make the Twisted version not
just more fun but also more robust.

Reviews from people with Twisted experience are more than welcome.

--
Sidnei

Make the most of Ubuntu with Landscape
http://landscape.canonical.com

_______________________________________________
Mailing list: https://launchpad.net/~canonical-tech
Post to ? ? : canonical-tech at lists.launchpad.net
Unsubscribe : https://launchpad.net/~canonical-tech
More help ? : https://help.launchpad.net/ListHelp


From stephen at thorne.id.au  Tue Jun 21 12:17:14 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Tue, 21 Jun 2011 18:17:14 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
Message-ID: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>

G'day,

Here at europython there was an excellent tutorial given on the first
afternoon that was so well attended and regarded that a repeat is
being done tomorrow afternoon (24 hours from this posting).

I was asked by the person running the training to give him a hand
because it's quite tiring doing a multi-hour training twice in a week,
and he specifically mentioned that it would be nice to have an example
of best practice with regard to making a working twisted program into
a 'production ready' deployable piece of code.

So I wrote this example which is a skeleton of how to set up a twistd
plugin and how to invoke it:

https://bitbucket.org/jerub/twisted-plugin-example

I would appreciate any comments, patches or criticisms between now and
tomorrow. (hg email anything to my address, stephen at thorne.id.au, fork
and push to bitbucket, or just email the list to yell at me).

Thanks!
Stephen.


From dshein at rochester.rr.com  Tue Jun 21 12:51:54 2011
From: dshein at rochester.rr.com (David Shein)
Date: Tue, 21 Jun 2011 12:51:54 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on6/22 & 6/23 POSTPONED UNTIL AUGUST
Message-ID: <401C48A1-816D-4096-8F47-A4C905AB1712@rochester.rr.com>

Hi Glyph & Jean-Paul & Whomever else volunteered,

My partner for POSSE had a family health emergency on Friday, so we  
have had to postpone the boot-camp.  We will be doing POSSE RIT in  
the second week of August.  So our code sprint is now scheduled be on  
August 9th and 10th.   I will ping the list again as we get closer.   
I want to say thank you to those who volunteered; I really appreciate  
your getting back to me.  Anyone who is considering helping, I want  
to say that even if there is not much accomplished during the sprint  
itself, here you have almost a score of faculty, many of whom will go  
on to teach open source and be faculty sponsors for student open  
source projects.  Having these faculty work on Twisted is a very good  
way to help increase awareness of your project/work amongst new  
people coming into the OS community.

Sincerely,

Dave Shein
Rochester Institute of Technology
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110621/89c931a2/attachment.htm 

From glyph at twistedmatrix.com  Tue Jun 21 12:56:08 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Jun 2011 12:56:08 -0400
Subject: [Twisted-Python] txStatsD - A Twisted-based StatsD server
In-Reply-To: <BANLkTikf8tPfu=-PYV-yRLqf3kqBjH9qMQ@mail.gmail.com>
References: <BANLkTi=VZcKfh0sZoAkNuPNkjBJMN5iG-w@mail.gmail.com>
	<BANLkTikf8tPfu=-PYV-yRLqf3kqBjH9qMQ@mail.gmail.com>
Message-ID: <148BBE75-F7CF-4C36-860D-F3EBA66E3176@twistedmatrix.com>


On Jun 21, 2011, at 6:15 AM, Jonathan Lange wrote:

> Sidnei da Silva of Canonical wrote a StatsD server with Twisted. I
> thought it was pretty neat, and thus worth sharing with
> twisted-python at .

Always glad to hear about a new thing with a 'tx' in it.  Thanks Sidnei! :)

> jml
> 
> ---------- Forwarded message ----------
> From: Sidnei da Silva <sidnei.da.silva at canonical.com>
> Date: Tue, Jun 21, 2011 at 7:27 AM
> Subject: [Canonical-tech] txStatsD - A Twisted-based StatsD server
> To: Canonical Tech <canonical-tech at lists.launchpad.net>
> 
> 
> Since we're looking into using Graphite in Landscape, and since I know
> UbuntuOne is adding Graphite stats left and right and saw their
> struggle with getting nodejs backported to Lucid so that they could
> run StatsD, I thought I could sharpen my Twisted axe by porting StatsD
> to Twisted.
> 
>  http://launchpad.net/txstatsd
> 
> For reference, StatsD
> (https://github.com/etsy/statsd/blob/master/stats.js) is a UDP-based
> server which collects and aggregates data at a configurable minimum
> resolution, then forwards it to Graphite (which talks TCP). UDP was
> chosen by StatsD since it's stateless, which means that the StatsD
> server can be down without taking the application being graphed down
> (some data can be lost but no downtime is incurred).
> 
> Bonus points to Twisted for ReconnectingClientFactory,
> LineOnlyReceiver and LoopingCall, which make the Twisted version not
> just more fun but also more robust.
> 
> Reviews from people with Twisted experience are more than welcome.
> 
> --
> Sidnei
> 
> Make the most of Ubuntu with Landscape
> http://landscape.canonical.com
> 
> _______________________________________________
> Mailing list: https://launchpad.net/~canonical-tech
> Post to     : canonical-tech at lists.launchpad.net
> Unsubscribe : https://launchpad.net/~canonical-tech
> More help   : https://help.launchpad.net/ListHelp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110621/7f909263/attachment.htm 

From glyph at twistedmatrix.com  Tue Jun 21 13:20:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Jun 2011 13:20:59 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on6/22 & 6/23 POSTPONED UNTIL AUGUST
In-Reply-To: <401C48A1-816D-4096-8F47-A4C905AB1712@rochester.rr.com>
References: <401C48A1-816D-4096-8F47-A4C905AB1712@rochester.rr.com>
Message-ID: <EFE747C0-7D4A-40D3-A297-9B1AE6167242@twistedmatrix.com>


On Jun 21, 2011, at 12:51 PM, David Shein wrote:

> Hi Glyph & Jean-Paul & Whomever else volunteered,
> 
> My partner for POSSE had a family health emergency on Friday, so we have had to postpone the boot-camp.  We will be doing POSSE RIT in the second week of August.  So our code sprint is now scheduled be on August 9th and 10th.   I will ping the list again as we get closer.  I want to say thank you to those who volunteered; I really appreciate your getting back to me.  Anyone who is considering helping, I want to say that even if there is not much accomplished during the sprint itself, here you have almost a score of faculty, many of whom will go on to teach open source and be faculty sponsors for student open source projects.  Having these faculty work on Twisted is a very good way to help increase awareness of your project/work amongst new people coming into the OS community.
> 
> Sincerely,
> 
> Dave Shein
> Rochester Institute of Technology

Sorry to hear about the delay, and good luck to your parter's family.

The delay is an opportunity for more people to volunteer though.  Perhaps we should post this to the Twisted Matrix Labs blog?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110621/a70e6795/attachment.htm 

From exarkun at twistedmatrix.com  Tue Jun 21 17:32:11 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jun 2011 21:32:11 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
Message-ID: <20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>

On 04:17 pm, stephen at thorne.id.au wrote:
>G'day,
>
>Here at europython there was an excellent tutorial given on the first
>afternoon that was so well attended and regarded that a repeat is
>being done tomorrow afternoon (24 hours from this posting).
>
>I was asked by the person running the training to give him a hand
>because it's quite tiring doing a multi-hour training twice in a week,
>and he specifically mentioned that it would be nice to have an example
>of best practice with regard to making a working twisted program into
>a 'production ready' deployable piece of code.
>
>So I wrote this example which is a skeleton of how to set up a twistd
>plugin and how to invoke it:
>
>https://bitbucket.org/jerub/twisted-plugin-example
>
>I would appreciate any comments, patches or criticisms between now and
>tomorrow. (hg email anything to my address, stephen at thorne.id.au, fork
>and push to bitbucket, or just email the list to yell at me).

Unit tests.

Docstrings.

Don't define Options or makeService in the dropin file.

Unit tests.

Use twisted.application.service.ServiceMaker instead of implementing 
your own.

Unit tests.

Docstrings.

It's not "strports" anymore.  It's "string endpoint descriptions" or 
just "endpoints".  You are using the right API but you named all the 
options and variables wrong.

Unit tests.

Don't use the global reactor in SetupService.

Unit tests.

Docstrings.
>Thanks!
>Stephen.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From stephen at thorne.id.au  Wed Jun 22 03:32:25 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Wed, 22 Jun 2011 09:32:25 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
Message-ID: <BANLkTi=J=d6zxkffYxV0UvOZMqTPuwCy1w@mail.gmail.com>

On Tue, Jun 21, 2011 at 23:32,  <exarkun at twistedmatrix.com> wrote:
> Don't define Options or makeService in the dropin file.
>
> Use twisted.application.service.ServiceMaker instead of implementing
> your own.

Oh that's nice. I'll rewrite to use that now. What's the first
argument to ServiceMaker, 'name' for? it's not documented.

> It's not "strports" anymore. ?It's "string endpoint descriptions" or
> just "endpoints". ?You are using the right API but you named all the
> options and variables wrong.
>
> Unit tests.
>
> Don't use the global reactor in SetupService.

okay, I've changed this to do 'from twisted.internet import reactor'
at the top of the two methods that access the reactor.

> Unit tests.
>
> Docstrings.

Fair call, I'll put docstrings in and write some tests.

Stephen.


From exarkun at twistedmatrix.com  Wed Jun 22 07:03:47 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Jun 2011 11:03:47 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTi=J=d6zxkffYxV0UvOZMqTPuwCy1w@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTi=J=d6zxkffYxV0UvOZMqTPuwCy1w@mail.gmail.com>
Message-ID: <20110622110347.1894.1663222652.divmod.xquotient.395@localhost.localdomain>

On 07:32 am, stephen at thorne.id.au wrote:
>On Tue, Jun 21, 2011 at 23:32,  <exarkun at twistedmatrix.com> wrote:
>>Don't define Options or makeService in the dropin file.
>>
>>Use twisted.application.service.ServiceMaker instead of implementing
>>your own.
>
>Oh that's nice. I'll rewrite to use that now. What's the first
>argument to ServiceMaker, 'name' for? it's not documented.
>>It's not "strports" anymore. ?It's "string endpoint descriptions" or
>>just "endpoints". ?You are using the right API but you named all the
>>options and variables wrong.
>>
>>Unit tests.
>>
>>Don't use the global reactor in SetupService.
>
>okay, I've changed this to do 'from twisted.internet import reactor'
>at the top of the two methods that access the reactor.

That's still the global reactor.  "from twisted.internet import reactor" 
is always the global reactor.  Instead, you should make the reactor a 
parameter.

Jean-Paul


From anton at iki.fi  Wed Jun 22 10:04:12 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 22 Jun 2011 17:04:12 +0300
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <op.vw8erftso3d63n@tiassa.local>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
Message-ID: <BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>

On Fri, Jun 17, 2011 at 8:55 PM, L. Daniel Burr <ldanielburr at gmail.com> wrote:
> As an aside, I recall that ldaptor never could become part of twisted, due
> to its licensing. ?I didn't see any license information in the new repo; I
> assume the code is still GPL v2?

The Ldaptor license is LGPL and I think it has always been LGPL. I'm
not sure, as it was well before my time, but I believe early Ldaptor
code was part of Twisted but was broken out when Twisted changed
license from LGPL to MIT-style.

Best regards
Anton


From glyph at twistedmatrix.com  Thu Jun 23 13:01:44 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Jun 2011 13:01:44 -0400
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
	<BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
Message-ID: <D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>

On Jun 22, 2011, at 10:04 AM, Anton Gyllenberg wrote:

> On Fri, Jun 17, 2011 at 8:55 PM, L. Daniel Burr <ldanielburr at gmail.com> wrote:
>> As an aside, I recall that ldaptor never could become part of twisted, due
>> to its licensing.  I didn't see any license information in the new repo; I
>> assume the code is still GPL v2?
> 
> The Ldaptor license is LGPL and I think it has always been LGPL. I'm
> not sure, as it was well before my time, but I believe early Ldaptor
> code was part of Twisted but was broken out when Twisted changed
> license from LGPL to MIT-style.

The code was always LGPL, but the code was never part of Twisted.  If it were, it would have had its license changed along with Twisted.  I do hope that Tommi decides to change its license to MIT one day and contribute it though.

-glyph



From anshul.singhle at gmail.com  Thu Jun 23 20:37:15 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 24 Jun 2011 06:07:15 +0530
Subject: [Twisted-Python] Doubt regarding registerAdapter in
	sshsimpleserver.py
Message-ID: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>

Hi,
I'm a Twisted newbie and I'm working on a custom ssh daemon for serving git.
I happened to read one of the example files sshsimpleserver.py at *
http://twistedmatrix.com/projects/conch/documentation/examples/* . At line
93 ExampleSession is registered as an Adapter for ExampleAvatar adapting it
to session.ISession. As i understand, to actually do the adaptation a call
like ISession(ExampleAvatar) has to be done (?). This call hasn't been done.
Am i missing something?
Thanks in advance,
Anshul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110624/bc2b1254/attachment.htm 

From robert.waters at gmail.com  Fri Jun 24 11:41:13 2011
From: robert.waters at gmail.com (R M Waters)
Date: Fri, 24 Jun 2011 11:41:13 -0400
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
Message-ID: <BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>

On Tue, Jun 21, 2011 at 5:32 PM, <exarkun at twistedmatrix.com> wrote:

>
> Don't define Options or makeService in the dropin file.
>
> Use twisted.application.service.ServiceMaker instead of implementing
> your own.
>
>  Don't use the global reactor in SetupService.
>
>
>
Would you please elaborate on the three items above?
Most of the plugin code that I've used as examples for my own have all
violated at least two of those.

Thank you very much.
- Robert
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110624/0d1e8460/attachment.htm 

From exarkun at twistedmatrix.com  Fri Jun 24 11:57:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Jun 2011 15:57:19 -0000
Subject: [Twisted-Python] Doubt regarding registerAdapter
	in	sshsimpleserver.py
In-Reply-To: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>
References: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>
Message-ID: <20110624155719.1894.1510052012.divmod.xquotient.408@localhost.localdomain>

On 12:37 am, anshul.singhle at gmail.com wrote:
>Hi,
>I'm a Twisted newbie and I'm working on a custom ssh daemon for serving 
>git.
>I happened to read one of the example files sshsimpleserver.py at *
>http://twistedmatrix.com/projects/conch/documentation/examples/* . At 
>line
>93 ExampleSession is registered as an Adapter for ExampleAvatar 
>adapting it
>to session.ISession. As i understand, to actually do the adaptation a 
>call
>like ISession(ExampleAvatar) has to be done (?). This call hasn't been 
>done.

It's more like ISession(ExampleAvatar()) - the instance is adapted, not 
the class.

Conch does this in SSHSession in a few places:

http://twistedmatrix.com/trac/browser/tags/releases/twisted-11.0.0/twisted/conch/ssh/session.py#L23

So using SSHSession is the main way to have your ISession adapter make a 
difference.

Jean-Paul


From exarkun at twistedmatrix.com  Fri Jun 24 12:23:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Jun 2011 16:23:36 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
Message-ID: <20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>

On 03:41 pm, robert.waters at gmail.com wrote:
>On Tue, Jun 21, 2011 at 5:32 PM, <exarkun at twistedmatrix.com> wrote:
>>
>>Don't define Options or makeService in the dropin file.

The system will perform better if there is less code in the dropin file 
(or imported by the dropin file).  There are some ideas to add an 
optimization which will make this irrelevant, but someone needs to 
implement them before they'll matter.
>>Use twisted.application.service.ServiceMaker instead of implementing
>>your own.

It's just less code to use `ServiceMaker`.  It should be flexible enough 
for any twistd plugin.  This interacts with the previous point as well, 
ServiceMaker avoids loading your Options and makeService implementation 
until someone actually invokes your twistd plugin.
>>  Don't use the global reactor in SetupService.

Using the global reactor makes code less easily testable.  This isn't 
specific to plugins, you should avoid the global reactor in all your 
Twisted-using code.  Accept it as a parameter instead.
>>
>Would you please elaborate on the three items above?
>Most of the plugin code that I've used as examples for my own have all
>violated at least two of those.

Hope that helps!

Jean-Paul


From stephen at thorne.id.au  Fri Jun 24 13:06:12 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Fri, 24 Jun 2011 19:06:12 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
	<20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
Message-ID: <BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>

On Fri, Jun 24, 2011 at 18:23,  <exarkun at twistedmatrix.com> wrote:
> Using the global reactor makes code less easily testable. ?This isn't
> specific to plugins, you should avoid the global reactor in all your
> Twisted-using code. ?Accept it as a parameter instead.

Ah, I did not do this successfully in my rewrite. I'd be interested to
see an example of the correct technique to use. Is this what you mean?

from twisted.internet import reactor
class SetupClass(service.Service):
    def doStart(self, reactor=reactor):
         reactor.callLater(3, self.done)

-- 
Regards,
Stephen.Thorne


From exarkun at twistedmatrix.com  Fri Jun 24 13:29:49 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Jun 2011 17:29:49 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
	<20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
	<BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>
Message-ID: <20110624172949.1894.1985972988.divmod.xquotient.423@localhost.localdomain>

On 05:06 pm, stephen at thorne.id.au wrote:
>On Fri, Jun 24, 2011 at 18:23,  <exarkun at twistedmatrix.com> wrote:
>>Using the global reactor makes code less easily testable. ?This isn't
>>specific to plugins, you should avoid the global reactor in all your
>>Twisted-using code. ?Accept it as a parameter instead.
>
>Ah, I did not do this successfully in my rewrite. I'd be interested to
>see an example of the correct technique to use. Is this what you mean?
>
>from twisted.internet import reactor
>class SetupClass(service.Service):
>    def doStart(self, reactor=reactor):
>         reactor.callLater(3, self.done)

That's possible (and I'll assume you mean startService, not doStart), 
but the style I prefer is to keep the reactor as instance state, and 
initialize it in __init__.

    class SetupClass(service.Service):
        def __init__(self, reactor):
            self._reactor = reactor

        def startService(self):
            self._startupCall = self._reactor.callLater(3, self.done)

Some people like to make the reactor optional:

    class SetupClass(service.Service):
        def __init__(self, reactor=None):
            if reactor is None:
                from twisted.internet import reactor
            self._reactor = reactor

        def startService(self):
            self._startupCall = self._reactor.callLater(3, self.done)

Jean-Paul


From stephen at thorne.id.au  Fri Jun 24 13:51:17 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Fri, 24 Jun 2011 19:51:17 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110624172949.1894.1985972988.divmod.xquotient.423@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
	<20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
	<BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>
	<20110624172949.1894.1985972988.divmod.xquotient.423@localhost.localdomain>
Message-ID: <BANLkTinSR2PjTxinoMjyRjiJT97iOs7caQ@mail.gmail.com>

On Fri, Jun 24, 2011 at 19:29,  <exarkun at twistedmatrix.com> wrote:
> ? class SetupClass(service.Service):
> ? ? ? def __init__(self, reactor):
> ? ? ? ? ? self._reactor = reactor
>
> ? ? ? def startService(self):
> ? ? ? ? ? self._startupCall = self._reactor.callLater(3, self.done)

Thanks Jean-Paul,

I've taken the first suggestion and put that into the example, and put
a test in too:

https://bitbucket.org/jerub/twisted-plugin-example/changeset/a3af1e55194a

Stephen Thorne.


From anshul.singhle at gmail.com  Fri Jun 24 15:41:12 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Sat, 25 Jun 2011 01:11:12 +0530
Subject: [Twisted-Python] Doubt regarding registerAdapter in
	sshsimpleserver.py
In-Reply-To: <20110624155719.1894.1510052012.divmod.xquotient.408@localhost.localdomain>
References: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>
	<20110624155719.1894.1510052012.divmod.xquotient.408@localhost.localdomain>
Message-ID: <8B021A4E-188F-48D7-8E9D-9E8FB31892ED@gmail.com>

Thanks. That clears it. 


From orestis at orestis.gr  Sat Jun 25 04:38:39 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 25 Jun 2011 10:38:39 +0200
Subject: [Twisted-Python] New Twisted Tutorial
Message-ID: <D14C6A5D-FEB3-4967-B454-CEDBA625C71C@orestis.gr>

Hello,

I've started porting my training slides into a written tutorial, making changes along the way based on the audience reactions. You can find it here:

https://github.com/orestis/twisted-tutorial

It's missing a couple of chapters like errbacks or examples on how to use threads for CPU-intensive tasks, but it's already 6500 words long. Everyone is encouraged to comment on specific lines or fork and change stuff. 

It's not in any particular format, though at some points it resembles ReST. I think it'd make a great addition to the existing Twisted documentation so unless anyone objects, let's make it so. 

Once I get to a proper internet connection, I will upload the training slides as well (though they are not very useful on their own).

Many thanks to everyone that helped, and especially to lvh and jerub who attended the training (twice!) and helped with the tricky bits.

Orestis




From exarkun at twistedmatrix.com  Sun Jun 26 00:05:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Jun 2011 04:05:34 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1309061134.43.1954060597@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110626/3ae02b94/attachment.htm 

From mithrandi at mithrandi.net  Sun Jun 26 06:00:55 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 26 Jun 2011 12:00:55 +0200
Subject: [Twisted-Python] Deferred flow control examples
Message-ID: <BANLkTik1EVrz5rXVniEd9F34WkKkTr3q1Q@mail.gmail.com>

When trying to help people understand how to use
Deferred.add{Callback,Errback,Callbacks,Both} I've found it useful on
a number of occasions to illustrate flow control with Deferreds by
comparison with synchronous code. I realised there wasn't really
anyway that a "complete" set of examples was collected, so I wrote
this blog post:

http://mithrandi.net/blog/2011/06/flow-control-with-deferreds-by-example/

I'd appreciate it if people could take a moment to review the examples
(I think they're all correct, but maybe I made a mistake somewhere),
suggest any important examples I missed, and let me know if they find
this approach generally useful.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From _ at lvh.cc  Sun Jun 26 15:11:09 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 26 Jun 2011 21:11:09 +0200
Subject: [Twisted-Python] Deferred flow control examples
In-Reply-To: <BANLkTik1EVrz5rXVniEd9F34WkKkTr3q1Q@mail.gmail.com>
References: <BANLkTik1EVrz5rXVniEd9F34WkKkTr3q1Q@mail.gmail.com>
Message-ID: <BANLkTimNAmESi-4R+ZrDf0gWKG_GW4fhGQ@mail.gmail.com>

Reviewed, looks good to me!

Thanks for writing this, one of the comments I got at Europython was very
specifically about a lack of docs on how you actually use Deferreds in real
situations. This will hopefully make things clearer for them.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110626/d8b79c9b/attachment.htm 

From anton at iki.fi  Mon Jun 27 07:35:39 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Mon, 27 Jun 2011 14:35:39 +0300
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
	<BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
	<D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>
Message-ID: <BANLkTimVTkms9T_kjtp-HdghJ+OiCAgexA@mail.gmail.com>

On Thu, Jun 23, 2011 at 8:01 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> On Jun 22, 2011, at 10:04 AM, Anton Gyllenberg wrote:
>> The Ldaptor license is LGPL and I think it has always been LGPL. I'm
>> not sure, as it was well before my time, but I believe early Ldaptor
>> code was part of Twisted but was broken out when Twisted changed
>> license from LGPL to MIT-style.
>
> The code was always LGPL, but the code was never part of Twisted. ?If it were, it would have had its license changed along with Twisted. ?I do hope that Tommi decides to change its license to MIT one day and contribute it though.
>

OK, thanks for the clarification. I was looking at
http://twistedmatrix.com/trac/changeset/1857 and thought it meant it
was once part of Twisted.

Best regards
Anton


From terry at jon.es  Mon Jun 27 11:27:45 2011
From: terry at jon.es (Terry Jones)
Date: Mon, 27 Jun 2011 17:27:45 +0200
Subject: [Twisted-Python] A resizable dispatch queue for Twisted (updated)
Message-ID: <19976.41329.445934.243071@jon.es>

I've made some changes to txRDQ, and just blogged about the class:
http://bit.ly/lD5zIT

Summary of changes: A put on the queue now gets you a deferred. There's a
new Job class that the deferred fires or errs with. The deferreds can be
cancelled. Jobs can be given priorities and can be . On the admin side, the
pending and underway methods return lists of job instances (which can be
re-prioritized, canceled, and independently watched). Shutdown now allows
you to cancel underway jobs.

The code also contains a DeferredPriorityQueue which will likely be
independently of interest to some, and might make its way into Twisted?

Code at https://launchpad.net/txrdq

Terry


From glyph at twistedmatrix.com  Mon Jun 27 12:51:12 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jun 2011 12:51:12 -0400
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTimVTkms9T_kjtp-HdghJ+OiCAgexA@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
	<BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
	<D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>
	<BANLkTimVTkms9T_kjtp-HdghJ+OiCAgexA@mail.gmail.com>
Message-ID: <4F7E1520-032C-4C89-814E-838D58F5392F@twistedmatrix.com>


On Jun 27, 2011, at 7:35 AM, Anton Gyllenberg wrote:

> On Thu, Jun 23, 2011 at 8:01 PM, Glyph Lefkowitz
> <glyph at twistedmatrix.com> wrote:
>> On Jun 22, 2011, at 10:04 AM, Anton Gyllenberg wrote:
>>> The Ldaptor license is LGPL and I think it has always been LGPL. I'm
>>> not sure, as it was well before my time, but I believe early Ldaptor
>>> code was part of Twisted but was broken out when Twisted changed
>>> license from LGPL to MIT-style.
>> 
>> The code was always LGPL, but the code was never part of Twisted.  If it were, it would have had its license changed along with Twisted.  I do hope that Tommi decides to change its license to MIT one day and contribute it though.
>> 
> 
> OK, thanks for the clarification. I was looking at
> http://twistedmatrix.com/trac/changeset/1857 and thought it meant it
> was once part of Twisted.

I stand corrected!  I looked around for that changeset before I posted this, but didn't find it.  Apparently I misremembered.  So your summary was correct; the code was broken out before Twisted changed to the MIT license.

(I do still hope that it changes to MIT and lives in the tree again someday, though.)

-glyph



From jonathan at stoppani.name  Mon Jun 27 16:52:43 2011
From: jonathan at stoppani.name (Jonathan Stoppani)
Date: Mon, 27 Jun 2011 14:52:43 -0600
Subject: [Twisted-Python] PB and FilePager
Message-ID: <2C5356FB-162D-4EE0-876E-80EC0471721D@stoppani.name>

Hi there,

I encountered a problem while dealing with file transfers using PB and t.s.u.FilePager.

The sscce illustrates the problem:

--------- server.py --------------------------------------------------
from twisted.spread import pb
from twisted.internet import reactor

ROOT = '/tmp/'

class ImageCollector(pb.Referenceable): 
def __init__(self, fd):
    self.fd = fd

def remote_dummy(self):
    pass

def remote_gotPage(self, page):
    self.fd.write(page)

def remote_endedPaging(self):
    print "Completed"
    self.fd.close()

class VurmController(pb.Root):
def remote_createImage(self, imageId):
    return ImageCollector(open(ROOT + imageId, 'w'))

reactor.listenTCP(8789, pb.PBServerFactory(VurmController()))
reactor.run()
----------------------------------------------------------------------


--------- client.py --------------------------------------------------
import sys

from twisted.spread import pb
from twisted.internet import reactor, defer
from twisted.spread import util

FILE = 'myfile.something'

factory = pb.PBClientFactory()
reactor.connectTCP("localhost", 8789, factory)

d = factory.getRootObject()

def createImage(controller):
return controller.callRemote('createImage', 'image-id')
d.addCallback(createImage)

def sendImage(ctl):
print ctl.callRemote('dummy') ############# LINE 19 #############
d = defer.Deferred()
util.FilePager(ctl, open(FILE), callback=lambda: d.callback(None))
return d
d.addCallback(sendImage)

def done(_):
print "Transfer completed"
#reactor.callLater(1, reactor.stop)
reactor.stop()
d.addCallback(done)

reactor.run()
----------------------------------------------------------------------


I'm trying to *upload* a file from the client to the server by calling a method on the
server which returns a collector to be used with a FilePager instance.

When run with the line client.py:19 commented out, the script blocks before sending
out any file chunks, if the line is uncommented (effectively calling the 'dummy' method
remotely), everything works as expected.

Digging around in the sources, I found out that t.p.u.Pager registers itself to the
collector's pb broker as a pageProducer. When resumeProducing is called on the broker,
it asks the FilePager instance for the next page, which leads to the invocation of
the following method on FilePager::

def sendNextPage(self):
    """
    Get the first chunk read and send it to collector.
    """
    if not self.chunks:
        return

    val = self.chunks.pop(0)
    self.producer.resumeProducing()
    self.collector.callRemote("gotPage", val)

As the t.b.FileSender producer does not yet had a chance to write something to the
FilePager, the method returns straight away without sending anything.

As anything was sent, the Broker.resumeProducing method is never called again, and
thus the FilePager.sendNextPage neither.

The problem is caused by the calling chain of the FilePager constructor:

FilePager.__init__()
-> Pager.__init__()
-> broker.registerPageProducer(FilePager)
  -> transport.registerProducer(broker)
    -> broker.resumeProducing()
      -> FilePager.sendNextPage()
        -> <no data, don't send anything>
-> FilePager.startProducing(fd)
-> FileSender().beginFileTransfer(fd, FilePager)
  -> FilePager.registerProducer(FileSender)
    -> FileSender.resumeProducing()
      -> FilePager.write(data)
        -> <store data, wait for sendNextPage to be called>

Simply inverting these two method calls (Pager.__init__ and FilePager.startProducing)
solves the problem.

The same problem does not appear when calling the 'dummy' method (client.py:19)
because the data for the method call is waiting to be sent out by the reactor and
the transport does not call 'resumeProducing' on the broker until the next iteration.

This allows the call to FilePager.startProducing to complete before sendNextPage is
ever called on it.

Does this sound correct? It seems only strange to me that nobody else had this problem
previously. If no errors on my side are found, I'll submit this as a ticket.

Cheers,
Jonathan






From m-lists at the-moon.net  Mon Jun 27 17:53:18 2011
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 27 Jun 2011 22:53:18 +0100
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
	change the interface?
Message-ID: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>

I'm in the process of switching some of my Javascript code from
MochiKit.Async.Deferred to the recently introduced jQuery.Deferred.

Does anyone else hate the confusing new method names they've chosen?
Why couldn't they just stick with the tried and tested
interface...aargh...it really pisses me off!

 * http://api.jquery.com/category/deferred-object/
 * http://mochi.github.com/mochikit/doc/html/MochiKit/Async.html#fn-deferred
 * http://bazaar.launchpad.net/~richardw/jarmon/jquery-deferred/revision/73

-RichardW.


From glyph at twistedmatrix.com  Mon Jun 27 18:13:37 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jun 2011 18:13:37 -0400
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
	change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <8617D2D1-961B-442F-8D7A-9AFA9CA7DB0F@twistedmatrix.com>


On Jun 27, 2011, at 5:53 PM, Richard Wall wrote:

> Does anyone else hate the confusing new method names they've chosen?

Yes.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110627/51cce9dc/attachment.htm 

From jstpierre at mecheye.net  Mon Jun 27 18:23:19 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 27 Jun 2011 18:23:19 -0400
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <BANLkTi=zMxjgUqKzqM+RgDsscywWV0WOWQ@mail.gmail.com>

Not only that, but it doesn't do callback chaining, which is a huge
disappointment.

On Mon, Jun 27, 2011 at 5:53 PM, Richard Wall <m-lists at the-moon.net> wrote:
> I'm in the process of switching some of my Javascript code from
> MochiKit.Async.Deferred to the recently introduced jQuery.Deferred.
>
> Does anyone else hate the confusing new method names they've chosen?
> Why couldn't they just stick with the tried and tested
> interface...aargh...it really pisses me off!
>
> ?* http://api.jquery.com/category/deferred-object/
> ?* http://mochi.github.com/mochikit/doc/html/MochiKit/Async.html#fn-deferred
> ?* http://bazaar.launchpad.net/~richardw/jarmon/jquery-deferred/revision/73
>
> -RichardW.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
?Jasper


From amauryfa at gmail.com  Mon Jun 27 18:33:39 2011
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Tue, 28 Jun 2011 00:33:39 +0200
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <8617D2D1-961B-442F-8D7A-9AFA9CA7DB0F@twistedmatrix.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
	<8617D2D1-961B-442F-8D7A-9AFA9CA7DB0F@twistedmatrix.com>
Message-ID: <BANLkTin7wAeiGxbe6LWxAqYptgweNkHWEQ@mail.gmail.com>

2011/6/28 Glyph Lefkowitz <glyph at twistedmatrix.com>:
> On Jun 27, 2011, at 5:53 PM, Richard Wall wrote:
>
> Does anyone else hate the confusing new method names they've chosen?
>
> Yes.

No! Because it's not a Deferred.

The JQuery Deferred has only a slight resemblance with Twisted's.
Looking at the source code
https://github.com/jquery/jquery/blob/master/src/deferred.js
this implementation lacks many important features of the Deferred we know:

- All callbacks are called with the same "result"
- Impossible to recover from an errback (and call the next callback)
- The callback chain is not paused when a callback returns another Deferred

IOW, don't use it as a Deferred.
The Mochikit implementation looks much more similar to Twisted.

-- 
Amaury Forgeot d'Arc


From jml at mumak.net  Mon Jun 27 18:39:01 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Jun 2011 23:39:01 +0100
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <BANLkTinrG=sN8x3VX0M6tAJyKiDynLMJFg@mail.gmail.com>

On Mon, Jun 27, 2011 at 10:53 PM, Richard Wall <m-lists at the-moon.net> wrote:
...
> Does anyone else hate the confusing new method names they've chosen?
> Why couldn't they just stick with the tried and tested
> interface...aargh...it really pisses me off!

Patches acc... Oh wait, wrong project. Sorry.

jml


From emmanuel.cazenave at gmail.com  Tue Jun 28 05:45:08 2011
From: emmanuel.cazenave at gmail.com (emmanuel CAZENAVE)
Date: Tue, 28 Jun 2011 11:45:08 +0200
Subject: [Twisted-Python] How to wait for a transport to write some data
	before loosing the connection
Message-ID: <BANLkTink-9uZ+Wpa6dQs4zwgV0XsWSTd0Q@mail.gmail.com>

Hi,

I wrote a server using a protocol that inherit from 'basic.LineReceiver'.

In some circonstances I need  to reject the data send by the client and to
close the connection. Here is how I do that:

class MyProtocol(basic.LineReceiver):

    ........

    def error(self, error_msg):
        self.transport.write(error_msg)
        self.transport.loseConnection()


Sometimes it works: the client gets notify of the error and the connection
is closed properly.
And some other times, the client does not received the error notification
and the server closes the connection, which causes the client (wich is not
written using twisted, but with the socket module from the standard lib) to
crash with 'socket.error: (10054, 'Connection reset by peer')'.

As I red somewhere in the docs or in the mailing list, self.transort.write
does can return before it really writes the data.

So how could I do, without using blocking code, to wait
until self.transort.write effectively writes the data to avoid closing the
connection with unwritten data ?

Thanks you.

Emmanuel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110628/ccabaa73/attachment.htm 

From luke-lists at hybrid-logic.co.uk  Tue Jun 28 05:51:17 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Tue, 28 Jun 2011 10:51:17 +0100
Subject: [Twisted-Python] A resizable dispatch queue for Twisted
 (updated)
In-Reply-To: <19976.41329.445934.243071@jon.es>
References: <19976.41329.445934.243071@jon.es>
Message-ID: <1309254677.19698.13.camel@behemoth>

On Mon, 2011-06-27 at 17:27 +0200, Terry Jones wrote:
> I've made some changes to txRDQ, and just blogged about the class:
> http://bit.ly/lD5zIT
> 
> Summary of changes: A put on the queue now gets you a deferred. There's a
> new Job class that the deferred fires or errs with. The deferreds can be
> cancelled. Jobs can be given priorities and can be . On the admin side, the
> pending and underway methods return lists of job instances (which can be
> re-prioritized, canceled, and independently watched). Shutdown now allows
> you to cancel underway jobs.
> 
> The code also contains a DeferredPriorityQueue which will likely be
> independently of interest to some, and might make its way into Twisted?
> 
> Code at https://launchpad.net/txrdq
> 

Nice!  Thanks Terry, this looks really interesting, and may well replace
DeferredSemaphore in some parts of our code.

Cheers,
Luke

--
www.hybrid-cluster.com - Cloud web hosting platform



From _ at lvh.cc  Tue Jun 28 05:54:13 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 28 Jun 2011 11:54:13 +0200
Subject: [Twisted-Python] How to wait for a transport to write some data
 before loosing the connection
In-Reply-To: <BANLkTink-9uZ+Wpa6dQs4zwgV0XsWSTd0Q@mail.gmail.com>
References: <BANLkTink-9uZ+Wpa6dQs4zwgV0XsWSTd0Q@mail.gmail.com>
Message-ID: <BANLkTi=Z+xqMyq4noupeCqGu9hXQHcA50A@mail.gmail.com>

That's strange.

Although the write doesn't block, ITransport.loseConnection() will *first*
finish writing everything and *then* lose the connection.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110628/bef33753/attachment.htm 

From tomw at ubilix.com  Tue Jun 28 09:30:22 2011
From: tomw at ubilix.com (tomw)
Date: Tue, 28 Jun 2011 15:30:22 +0200
Subject: [Twisted-Python] How to safely stop a chain of deferreds
Message-ID: <1309267822.2959.10.camel@P560>

Hi, 
        
in a GUI application I'm using quite a comprehensive chain of deferreds
and I'm running the mainloop from the glib2reactor. At a certain point
of my application I need to terminate the entire chain of deferreds to
make sure that no more data is loaded and processed. Stopping the
reactor does not work as the entire GUI would terminate, too. I tried to
cancel the first deferred, hoping that the cancel event will be
forwarded to the next deferred in the chain or at least invoke an
errback, but for some reason it does not work and the deferreds seem to
run forever. Any ideas on how to solve this issue?
        
Many thanks,
        
        
-- 
tomw <tomw at ubilix.com>
        
        



From itamar at itamarst.org  Tue Jun 28 10:10:14 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Jun 2011 10:10:14 -0400
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <1309267822.2959.10.camel@P560>
References: <1309267822.2959.10.camel@P560>
Message-ID: <1309270214.13270.13.camel@blake>

On Tue, 2011-06-28 at 15:30 +0200, tomw wrote:

> I tried to
> cancel the first deferred, hoping that the cancel event will be
> forwarded to the next deferred in the chain or at least invoke an
> errback, but for some reason it does not work and the deferreds seem to
> run forever. Any ideas on how to solve this issue?

Unless you registered a cancellation function for the Deferreds, the
best cancelling one can do is not pass you the results. So you'll need
to register a canceller for the Deferred that is hooked up to the result
of the original task (and any new Deferreds created along the chain).



From terry at jon.es  Tue Jun 28 10:14:38 2011
From: terry at jon.es (Terry Jones)
Date: Tue, 28 Jun 2011 16:14:38 +0200
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: Your message at 15:30:22 on Tuesday, 28 June 2011
References: <1309267822.2959.10.camel@P560>
Message-ID: <19977.57806.687600.584965@jon.es>

Hi Tom

> in a GUI application I'm using quite a comprehensive chain of deferreds
> and I'm running the mainloop from the glib2reactor. At a certain point of
> my application I need to terminate the entire chain of deferreds to make
> sure that no more data is loaded and processed. Stopping the reactor does
> not work as the entire GUI would terminate, too. I tried to cancel the
> first deferred, hoping that the cancel event will be forwarded to the
> next deferred in the chain or at least invoke an errback, but for some
> reason it does not work and the deferreds seem to run forever. Any ideas
> on how to solve this issue?

It's a bit hard to know how to help without more detail.  Code you paste
some code somewhere?  I'm sorry if this sounds picky, but your description
is a bit vague. E.g., there's no such thing as a "chain of deferreds" (do
you mean chain of callbacks on a single deferred? or a callbacks that
return deferreds etc?) and e.g., "deferreds seem to run forever" but
deferreds don't run at all, callbacks do. If you can make it a bit more
precise I'll be happy to try to help.

Terry


From mithrandi at mithrandi.net  Tue Jun 28 13:14:58 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 28 Jun 2011 19:14:58 +0200
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <BANLkTim7x9ZmAWkZoXS5362e8dGBwa0uKw@mail.gmail.com>

On Mon, Jun 27, 2011 at 11:53 PM, Richard Wall <m-lists at the-moon.net> wrote:
> I'm in the process of switching some of my Javascript code from
> MochiKit.Async.Deferred to the recently introduced jQuery.Deferred.
>
> Does anyone else hate the confusing new method names they've chosen?
> Why couldn't they just stick with the tried and tested
> interface...aargh...it really pisses me off!

At least they didn't change the API while keeping the names the same,
like MochiKit did :/
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From exarkun at twistedmatrix.com  Tue Jun 28 13:37:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Jun 2011 17:37:45 -0000
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <1309267822.2959.10.camel@P560>
References: <1309267822.2959.10.camel@P560>
Message-ID: <20110628173745.1894.1669977052.divmod.xquotient.669@localhost.localdomain>

On 01:30 pm, tomw at ubilix.com wrote:
>Hi,
>
>in a GUI application I'm using quite a comprehensive chain of deferreds
>and I'm running the mainloop from the glib2reactor. At a certain point
>of my application I need to terminate the entire chain of deferreds to
>make sure that no more data is loaded and processed. Stopping the
>reactor does not work as the entire GUI would terminate, too. I tried 
>to
>cancel the first deferred, hoping that the cancel event will be
>forwarded to the next deferred in the chain or at least invoke an
>errback, but for some reason it does not work and the deferreds seem to
>run forever. Any ideas on how to solve this issue?

What would you do if you had this non-Deferred using code:

    x = a()
    y = b(x)
    z = c(y)

and you decided in b that you need to terminate your data loading and 
processing?

Jean-Paul


From orestis at orestis.gr  Tue Jun 28 13:50:21 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 28 Jun 2011 20:50:21 +0300
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <20110628173745.1894.1669977052.divmod.xquotient.669@localhost.localdomain>
References: <1309267822.2959.10.camel@P560>
	<20110628173745.1894.1669977052.divmod.xquotient.669@localhost.localdomain>
Message-ID: <49496A32-46D2-4398-85ED-A1E95C477AAB@orestis.gr>


On 28 Jun 2011, at 20:37, exarkun at twistedmatrix.com wrote:

> On 01:30 pm, tomw at ubilix.com wrote:
>> Hi,
>> 
>> in a GUI application I'm using quite a comprehensive chain of deferreds
>> and I'm running the mainloop from the glib2reactor. At a certain point
>> of my application I need to terminate the entire chain of deferreds to
>> make sure that no more data is loaded and processed. Stopping the
>> reactor does not work as the entire GUI would terminate, too. I tried 
>> to
>> cancel the first deferred, hoping that the cancel event will be
>> forwarded to the next deferred in the chain or at least invoke an
>> errback, but for some reason it does not work and the deferreds seem to
>> run forever. Any ideas on how to solve this issue?
> 
> What would you do if you had this non-Deferred using code:
> 
>    x = a()
>    y = b(x)
>    z = c(y)
> 
> and you decided in b that you need to terminate your data loading and 
> processing?

Pretty much what everyone is insinuating is that:

a) By your description it is not obvious what the application is doing, so a better description will be more helpful
b) You are using incorrect terms, making even harder to give advice
c) Callback chains don't have any built-in support for any kind of cancelling/stopping.
d) Deferreds have a cancel method but it's up to the creator of the Deferred to provide any meaning to it

Now, if you have a loop loading data and passing it to a chain of callbacks, and you'd need to stop mid-processing, the way I'd do that is to have a 'isStopped' boolean variable that can be set to True to initiate the stopping procedure. You will then stop loading any data and finish processing existing data. However, this is little more than a guess based upon my very vague understanding of the problem you are trying to describe.

Orestis



From dynamicgl at gmail.com  Wed Jun 29 04:50:03 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 29 Jun 2011 16:50:03 +0800
Subject: [Twisted-Python] Does twisted have plan to support python 3.x?
Message-ID: <BANLkTi=DZYnuy8Mgj_dv0G-SfyYNGNs44w@mail.gmail.com>

   I heard that Python 3.3 may support coroutine natively via yield
generator. I am interested in how this thing can affect twisted development.


   The most compelling feature of twisted for me is to support a large set
of protocols and the most important...it can run on windows flawlessly.
Other solutions like gevent, eventlet or etc usually are unable to run on
windows.


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110629/e2c1429f/attachment.htm 

From exarkun at twistedmatrix.com  Wed Jun 29 08:27:58 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Jun 2011 12:27:58 -0000
Subject: [Twisted-Python] Does twisted have plan to support python 3.x?
In-Reply-To: <BANLkTi=DZYnuy8Mgj_dv0G-SfyYNGNs44w@mail.gmail.com>
References: <BANLkTi=DZYnuy8Mgj_dv0G-SfyYNGNs44w@mail.gmail.com>
Message-ID: <20110629122758.1894.800379409.divmod.xquotient.738@localhost.localdomain>

On 08:50 am, dynamicgl at gmail.com wrote:
>   I heard that Python 3.3 may support coroutine natively via yield
>generator. I am interested in how this thing can affect twisted 
>development.

Glyph wrote a good summary of the Python 3.x plan on Stack Overflow:

    http://stackoverflow.com/questions/172306

You can also help out with the porting work and follow the progress of 
others by watching tickets in the Python-3.x milestone:

    http://twistedmatrix.com/trac/milestone/Python-3.x

Meanwhile, twisted.internet.defer.inlineCallbacks offers essentially all 
of the same features as you'll get from PEP 380 (which I think is what 
you're talking about when you say "support coroutine natively via yield 
generator"), and works on Python 2.5 through 2.7.

There's also corotwine, which is even more extreme (than either 
inlineCallbacks or PEP 380):

    https://launchpad.net/corotwine

Jean-Paul


From jrennie at gmail.com  Wed Jun 29 15:54:36 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Wed, 29 Jun 2011 15:54:36 -0400
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <1309267822.2959.10.camel@P560>
References: <1309267822.2959.10.camel@P560>
Message-ID: <BANLkTi=x7gbjNmwpODboQJOEXQnhQgy81w@mail.gmail.com>

On Tue, Jun 28, 2011 at 9:30 AM, tomw <tomw at ubilix.com> wrote:

> in a GUI application I'm using quite a comprehensive chain of deferreds
> and I'm running the mainloop from the glib2reactor. At a certain point
> of my application I need to terminate the entire chain of deferreds to
> make sure that no more data is loaded and processed.


Have you tried setting up appropriate callback functions and raising an
Exception at the point where the callback chain should be terminated?  Note
that each errback should return the provided failure so that execution
doesn't switch back to the callback side.  See "Visual Explanation" in this
document:

http://twistedmatrix.com/documents/current/core/howto/defer.html

Cheers,

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110629/a20700b8/attachment.htm 

From jeff at ocjtech.us  Wed Jun 29 16:39:03 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 29 Jun 2011 15:39:03 -0500
Subject: [Twisted-Python] Public Key Authentication with Conch
Message-ID: <BANLkTik6U-2iDHFzXVMhUwDcC8wZYP97tw@mail.gmail.com>

Hello,

I'm trying out Twisted/Conch as a replacement for a script based upon
Paramiko for transferring some files around.  However, I'm not able to
get my Twisted/Conch script to authenticate to the remote server using
public keys.  Password authentication works in my Twisted/Conch script
and public key authentication works when I connect to a local server
that uses OpenSSH.  The remote server identifies itself as
"SSH-2.0-http://3sp.com_Maverick_SSHD".  Can anyone give me any tips
on what might be going wrong?  Is there a way to increase the
verbosity to see what might be going on?

-- 
Jeff Ollie


From exarkun at twistedmatrix.com  Thu Jun 30 11:35:06 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jun 2011 15:35:06 -0000
Subject: [Twisted-Python] Public Key Authentication with Conch
In-Reply-To: <BANLkTik6U-2iDHFzXVMhUwDcC8wZYP97tw@mail.gmail.com>
References: <BANLkTik6U-2iDHFzXVMhUwDcC8wZYP97tw@mail.gmail.com>
Message-ID: <20110630153506.1894.1246013686.divmod.xquotient.1733@localhost.localdomain>

On 29 Jun, 08:39 pm, jeff at ocjtech.us wrote:
>Hello,
>
>I'm trying out Twisted/Conch as a replacement for a script based upon
>Paramiko for transferring some files around.  However, I'm not able to
>get my Twisted/Conch script to authenticate to the remote server using
>public keys.  Password authentication works in my Twisted/Conch script
>and public key authentication works when I connect to a local server
>that uses OpenSSH.  The remote server identifies itself as
>"SSH-2.0-http://3sp.com_Maverick_SSHD".  Can anyone give me any tips
>on what might be going wrong?  Is there a way to increase the
>verbosity to see what might be going on?

If you haven't already looked in the log, you might find more 
information there.  Conch emits some extra information there.

Jean-Paul


From _ at lvh.cc  Wed Jun  1 15:21:19 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 1 Jun 2011 23:21:19 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
Message-ID: <BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>

>
> It should really say something about protocol/transport separation early
> on, though ;).
>

Pff, publishing finished work is for academics. Do you want me to be an
academic, Glyph? Do you?

I've added the stuff I got from Jim. FlowControl seems to be the equivalent
of IPushProducer. Why does Protocol and Transport inherit from it? I don't
understand why all Protocols and Transports are inherently
pausable/resumable.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110601/87291d94/attachment-0001.html>

From kevin.horn at gmail.com  Wed Jun  1 15:34:18 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 1 Jun 2011 16:34:18 -0500
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
Message-ID: <BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>

On Wed, Jun 1, 2011 at 4:21 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> It should really say something about protocol/transport separation early
>> on, though ;).
>>
>
> Pff, publishing finished work is for academics. Do you want me to be an
> academic, Glyph? Do you?
>
> I've added the stuff I got from Jim. FlowControl seems to be the equivalent
> of IPushProducer. Why does Protocol and Transport inherit from it? I don't
> understand why all Protocols and Transports are inherently
> pausable/resumable.
>
> cheers
> lvh
>
>
>
Hmmm...you might think about also allowing bytearrays everywhere it says
"data must be a bytestring".  Maybe there's some problem with that (I
haven't done a lot of Python3-style IO yet), but I don't think there is, and
if they are to be allowed, it should be explicitly mentioned, IMO.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110601/388a1f5b/attachment.html>

From _ at lvh.cc  Wed Jun  1 16:20:09 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 2 Jun 2011 00:20:09 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
Message-ID: <BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>

On Wed, Jun 1, 2011 at 11:34 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> Hmmm...you might think about also allowing bytearrays everywhere it says
> "data must be a bytestring".  Maybe there's some problem with that (I
> haven't done a lot of Python3-style IO yet), but I don't think there is, and
> if they are to be allowed, it should be explicitly mentioned, IMO.
>

Yay, you're responsible for ticket #1:

https://github.com/lvh/async-pep/issues/1


> Kevin Horn
>

-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110602/9c43c57a/attachment.html>

From _ at lvh.cc  Wed Jun  1 16:50:33 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 2 Jun 2011 00:50:33 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
	<BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
Message-ID: <BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>

... and closed!


See people? Feedback works, now give me more of it please ;-)


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110602/0ca20766/attachment.html>

From screwtape at froup.com  Wed Jun  1 21:56:19 2011
From: screwtape at froup.com (Tim Allen)
Date: Thu, 2 Jun 2011 13:56:19 +1000
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
	<BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
	<BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>
Message-ID: <20110602035619.GN23087@boombah.thristian.org>

On Thu, Jun 02, 2011 at 12:50:33AM +0200, Laurens Van Houtven wrote:
> See people? Feedback works, now give me more of it please ;-)

Perhaps I'm looking at the wrong place;	the "pep-xxxx.rst" I'm looking
at via the web interface contains only an short abstract and a rationale
that won't be controversial to anyone subscribed to this list. There
doesn't seem to be much to give feedback *on*.

I guess that means my feedback is 'please write more text'. :)



From _ at lvh.cc  Thu Jun  2 18:35:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Fri, 3 Jun 2011 02:35:56 +0200
Subject: [Twisted-Python] Asynchronous code PEP
In-Reply-To: <20110602035619.GN23087@boombah.thristian.org>
References: <BANLkTinGTu5XkaCEmMqb_yQhJwt6jn813g@mail.gmail.com>
	<7A74CD65-EAF6-4ECC-B488-B9D774B79EEA@twistedmatrix.com>
	<BANLkTinjGBFyqpP=KsMbkPJ9jy1Of+rMCg@mail.gmail.com>
	<F099FF99-6C51-475B-B082-6A667A5CF6E5@twistedmatrix.com>
	<BANLkTinPgWQfNhbJjj4B2=C4wyAg1iqfZg@mail.gmail.com>
	<BANLkTinVRGZKDeaR3GG0apC7kL8todf+Jw@mail.gmail.com>
	<BANLkTin9cAWsKETJPxjtw84NnfYEWSj=SA@mail.gmail.com>
	<BANLkTimJtaB0YwuaQ50ss1chpbakUt+_AA@mail.gmail.com>
	<20110602035619.GN23087@boombah.thristian.org>
Message-ID: <BANLkTikL0m6EQV_xQfb-nPNoh5qrRwTfyg@mail.gmail.com>

On Thu, Jun 2, 2011 at 5:56 AM, Tim Allen <screwtape at froup.com> wrote:

> On Thu, Jun 02, 2011 at 12:50:33AM +0200, Laurens Van Houtven wrote:
> > See people? Feedback works, now give me more of it please ;-)
>
> Perhaps I'm looking at the wrong place; the "pep-xxxx.rst" I'm looking
> at via the web interface contains only an short abstract and a rationale
> that won't be controversial to anyone subscribed to this list. There
> doesn't seem to be much to give feedback *on*.
>

Definitely true! I was holding a few parallel backchannel diiscussions with
people that have more background information, if all you have is the repo
there's definitely not a lot to do right now, but I'm working on fixing this
:)


> I guess that means my feedback is 'please write more text'. :)
>

Noted and appreciated!


>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110603/ba6227b5/attachment-0001.html>

From bra at fsn.hu  Fri Jun  3 06:54:14 2011
From: bra at fsn.hu (Attila Nagy)
Date: Fri, 03 Jun 2011 14:54:14 +0200
Subject: [Twisted-Python] Is this possible to catch this error? (returned by
	protocols/memcached.py)
Message-ID: <4DE8D976.5070909@fsn.hu>

Hi,

Here's a sample application, which gets a key from memcached:
from twisted.internet import reactor, protocol, defer
from twisted.application import internet, service
from twisted.protocols.memcache import MemCacheProtocol, DEFAULT_PORT

mc = None

class MemCacheFactory(protocol.ReconnectingClientFactory):
     protocol = MemCacheProtocol
     maxDelay = 5 # wait no more than 5 seconds to retry

     def buildProtocol(self, addr):
         p = self.protocol(self)
         p.factory = self
         p.persistentTimeOut = p.timeOut = 5
         global mc
         mc = p
         return p

def memc():
     factory = MemCacheFactory()
     reactor.connectTCP('localhost', 11211, factory)
     reactor.callLater(1,query)

@defer.inlineCallbacks
def query():
     res = yield mc.get('test')
     print "XXX",res

application = service.Application('memc')
serviceCollection = service.IServiceCollection(application)
reactor.callLater(0,memc)

If memcached is running on localhost:11211, it writes the "test" key's 
value:
$ twistd -noy memct.py
2011-06-03 14:48:27+0200 [-] Log opened.
2011-06-03 14:48:27+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7 
2.7.1) starting up.
2011-06-03 14:48:27+0200 [-] reactor class: 
twisted.internet.selectreactor.SelectReactor.
2011-06-03 14:48:27+0200 [-] Starting factory 
<__builtin__.MemCacheFactory instance at 0x802a38710>
2011-06-03 14:48:28+0200 [MemCacheProtocol,client] XXX (0, None)

Now I want to test the code for timeouts, where the TCP connection to 
memcached is open, but there is no answer.
So instead of memcached, I start a netcat on port 11211:
$ nc -l 11211
And start the above program. Now I get:
$ twistd -noy memct.py
2011-06-03 14:50:08+0200 [-] Log opened.
2011-06-03 14:50:08+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7 
2.7.1) starting up.
2011-06-03 14:50:08+0200 [-] reactor class: 
twisted.internet.selectreactor.SelectReactor.
2011-06-03 14:50:08+0200 [-] Starting factory 
<__builtin__.MemCacheFactory instance at 0x802a38710>
2011-06-03 14:50:14+0200 [-] Unhandled error in Deferred:
2011-06-03 14:50:14+0200 [-] Unhandled Error
         Traceback (most recent call last):
         Failure: twisted.internet.defer.TimeoutError: Connection timeout

2011-06-03 14:50:14+0200 [MemCacheProtocol,client] 
<twisted.internet.tcp.Connector instance at 0x804027dd0> will retry in 2 
seconds
2011-06-03 14:50:14+0200 [MemCacheProtocol,client] Stopping factory 
<__builtin__.MemCacheFactory instance at 0x802a38710>

As you can see, the connection is timed out, and protocols/memcached.py 
lost its connection. But how could I catch this around the "mc.get" call?
I guess this error should raise an exception, so enclosing mc.get into a 
try-except would make possible to catch this. But currently this is not 
the case?

How can this be solved?

Thanks,



From exarkun at twistedmatrix.com  Fri Jun  3 07:57:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Jun 2011 13:57:39 -0000
Subject: [Twisted-Python] Is this possible to catch this error?
	(returned	by protocols/memcached.py)
In-Reply-To: <4DE8D976.5070909@fsn.hu>
References: <4DE8D976.5070909@fsn.hu>
Message-ID: <20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>




On 12:54 pm, bra at fsn.hu wrote:
>Hi,
>
>Here's a sample application, which gets a key from memcached:
>from twisted.internet import reactor, protocol, defer
>from twisted.application import internet, service
>from twisted.protocols.memcache import MemCacheProtocol, DEFAULT_PORT
>
>mc = None
>
>class MemCacheFactory(protocol.ReconnectingClientFactory):
>     protocol = MemCacheProtocol
>     maxDelay = 5 # wait no more than 5 seconds to retry
>
>     def buildProtocol(self, addr):
>         p = self.protocol(self)
>         p.factory = self
>         p.persistentTimeOut = p.timeOut = 5
>         global mc
>         mc = p

Using a global protocol instance like this is error prone.
>         return p
>
>def memc():
>     factory = MemCacheFactory()
>     reactor.connectTCP('localhost', 11211, factory)
>     reactor.callLater(1,query)

What if the connection isn't set up within 1 second?
>
>@defer.inlineCallbacks
>def query():
>     res = yield mc.get('test')
>     print "XXX",res
>
>application = service.Application('memc')
>serviceCollection = service.IServiceCollection(application)
>reactor.callLater(0,memc)
>
>If memcached is running on localhost:11211, it writes the "test" key's
>value:
>$ twistd -noy memct.py
>2011-06-03 14:48:27+0200 [-] Log opened.
>2011-06-03 14:48:27+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>2.7.1) starting up.
>2011-06-03 14:48:27+0200 [-] reactor class:
>twisted.internet.selectreactor.SelectReactor.
>2011-06-03 14:48:27+0200 [-] Starting factory
><__builtin__.MemCacheFactory instance at 0x802a38710>
>2011-06-03 14:48:28+0200 [MemCacheProtocol,client] XXX (0, None)
>
>Now I want to test the code for timeouts, where the TCP connection to
>memcached is open, but there is no answer.
>So instead of memcached, I start a netcat on port 11211:
>$ nc -l 11211
>And start the above program. Now I get:
>$ twistd -noy memct.py
>2011-06-03 14:50:08+0200 [-] Log opened.
>2011-06-03 14:50:08+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>2.7.1) starting up.
>2011-06-03 14:50:08+0200 [-] reactor class:
>twisted.internet.selectreactor.SelectReactor.
>2011-06-03 14:50:08+0200 [-] Starting factory
><__builtin__.MemCacheFactory instance at 0x802a38710>
>2011-06-03 14:50:14+0200 [-] Unhandled error in Deferred:
>2011-06-03 14:50:14+0200 [-] Unhandled Error
>         Traceback (most recent call last):
>         Failure: twisted.internet.defer.TimeoutError: Connection 
>timeout
>
>2011-06-03 14:50:14+0200 [MemCacheProtocol,client]
><twisted.internet.tcp.Connector instance at 0x804027dd0> will retry in 
>2
>seconds
>2011-06-03 14:50:14+0200 [MemCacheProtocol,client] Stopping factory
><__builtin__.MemCacheFactory instance at 0x802a38710>
>
>As you can see, the connection is timed out, and protocols/memcached.py
>lost its connection. But how could I catch this around the "mc.get" 
>call?
>I guess this error should raise an exception, so enclosing mc.get into 
>a
>try-except would make possible to catch this. But currently this is not
>the case?

What do you think it is not the case?  That is how inlineCallbacks makes 
Failures available to you.

Jean-Paul



From bra at fsn.hu  Fri Jun  3 08:04:38 2011
From: bra at fsn.hu (Attila Nagy)
Date: Fri, 03 Jun 2011 16:04:38 +0200
Subject: [Twisted-Python] Is this possible to catch this error?
 (returned by protocols/memcached.py)
In-Reply-To: <20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>
References: <4DE8D976.5070909@fsn.hu>
	<20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>
Message-ID: <4DE8E9F6.1040208@fsn.hu>

Hi,

On 06/03/11 15:57, exarkun at twistedmatrix.com wrote:
>
> Using a global protocol instance like this is error prone.
>>         return p
>>
>> def memc():
>>     factory = MemCacheFactory()
>>     reactor.connectTCP('localhost', 11211, factory)
>>     reactor.callLater(1,query)
>
> What if the connection isn't set up within 1 second?
This is just an example, for demonstrating my problem.
>>
>> @defer.inlineCallbacks
>> def query():
>>     res = yield mc.get('test')
>>     print "XXX",res
>>
>> application = service.Application('memc')
>> serviceCollection = service.IServiceCollection(application)
>> reactor.callLater(0,memc)
>>
>> If memcached is running on localhost:11211, it writes the "test" key's
>> value:
>> $ twistd -noy memct.py
>> 2011-06-03 14:48:27+0200 [-] Log opened.
>> 2011-06-03 14:48:27+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>> 2.7.1) starting up.
>> 2011-06-03 14:48:27+0200 [-] reactor class:
>> twisted.internet.selectreactor.SelectReactor.
>> 2011-06-03 14:48:27+0200 [-] Starting factory
>> <__builtin__.MemCacheFactory instance at 0x802a38710>
>> 2011-06-03 14:48:28+0200 [MemCacheProtocol,client] XXX (0, None)
>>
>> Now I want to test the code for timeouts, where the TCP connection to
>> memcached is open, but there is no answer.
>> So instead of memcached, I start a netcat on port 11211:
>> $ nc -l 11211
>> And start the above program. Now I get:
>> $ twistd -noy memct.py
>> 2011-06-03 14:50:08+0200 [-] Log opened.
>> 2011-06-03 14:50:08+0200 [-] twistd 10.1.0 (/usr/local/bin/python2.7
>> 2.7.1) starting up.
>> 2011-06-03 14:50:08+0200 [-] reactor class:
>> twisted.internet.selectreactor.SelectReactor.
>> 2011-06-03 14:50:08+0200 [-] Starting factory
>> <__builtin__.MemCacheFactory instance at 0x802a38710>
>> 2011-06-03 14:50:14+0200 [-] Unhandled error in Deferred:
>> 2011-06-03 14:50:14+0200 [-] Unhandled Error
>>         Traceback (most recent call last):
>>         Failure: twisted.internet.defer.TimeoutError: Connection timeout
>>
>> 2011-06-03 14:50:14+0200 [MemCacheProtocol,client]
>> <twisted.internet.tcp.Connector instance at 0x804027dd0> will retry in 2
>> seconds
>> 2011-06-03 14:50:14+0200 [MemCacheProtocol,client] Stopping factory
>> <__builtin__.MemCacheFactory instance at 0x802a38710>
>>
>> As you can see, the connection is timed out, and protocols/memcached.py
>> lost its connection. But how could I catch this around the "mc.get" 
>> call?
>> I guess this error should raise an exception, so enclosing mc.get into a
>> try-except would make possible to catch this. But currently this is not
>> the case?
>
> What do you think it is not the case?  That is how inlineCallbacks 
> makes Failures available to you.
Because if I wrap mc.get into a try-except clause, it's not triggered. I 
guess if it would, the above error would show exact line numbers too.



From exarkun at twistedmatrix.com  Fri Jun  3 09:32:37 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 03 Jun 2011 15:32:37 -0000
Subject: [Twisted-Python] Is this possible to catch this error?
	(returned	by protocols/memcached.py)
In-Reply-To: <4DE8E9F6.1040208@fsn.hu>
References: <4DE8D976.5070909@fsn.hu>
	<20110603135739.3983.1373810086.divmod.xquotient.344@localhost.localdomain>
	<4DE8E9F6.1040208@fsn.hu>
Message-ID: <20110603153237.3983.2123820291.divmod.xquotient.347@localhost.localdomain>

On 02:04 pm, bra at fsn.hu wrote:
>Hi,
>
>On 06/03/11 15:57, exarkun at twistedmatrix.com wrote:
>>
>>>As you can see, the connection is timed out, and 
>>>protocols/memcached.py
>>>lost its connection. But how could I catch this around the "mc.get"
>>>call?
>>>I guess this error should raise an exception, so enclosing mc.get 
>>>into a
>>>try-except would make possible to catch this. But currently this is 
>>>not
>>>the case?
>>
>>What do you think it is not the case?  That is how inlineCallbacks
>>makes Failures available to you.
>Because if I wrap mc.get into a try-except clause, it's not triggered. 
>I
>guess if it would, the above error would show exact line numbers too.

I can't reproduce this.  I changed the code to:

    @defer.inlineCallbacks
    def query():
         try:
              res = yield mc.get('test')
         except Exception, e:
              print "get failed:", e
         else:
              print "XXX",res

When I run this against the nc server, the "get failed:" print happens.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jun  4 22:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Jun 2011 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1307246722.51.1233556668@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110605/96016b1b/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Jun 11 22:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jun 2011 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1307851525.97.1203627721@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110612/3b72d449/attachment-0001.html>

From orestis at orestis.gr  Sun Jun 12 06:48:13 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sun, 12 Jun 2011 15:48:13 +0300
Subject: [Twisted-Python] Information on new endpoints API?
Message-ID: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>

Hello,

I'm curious about the endpoints API that appeared. I've read the documentation, and I think I understand what it does, but I'm curious to see what parts of twisted it replaces. A lot of the documentation on-site is not updated (eg the finger tutorial) and it's not very clear whether one should use reactor.listenTCP, TCPServer or the new API.

I will be giving a training on Twisted in a few days during the EuroPython conference (actually, more of an assisted tutorial than a training) and I'm not sure how I should present this. Any information would be helpful.

Orestis


From exarkun at twistedmatrix.com  Sun Jun 12 07:22:35 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jun 2011 13:22:35 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
Message-ID: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>

On 12:48 pm, orestis at orestis.gr wrote:
>Hello,
>
>I'm curious about the endpoints API that appeared. I've read the 
>documentation, and I think I understand what it does, but I'm curious 
>to see what parts of twisted it replaces. A lot of the documentation 
>on-site is not updated (eg the finger tutorial) and it's not very clear 
>whether one should use reactor.listenTCP, TCPServer or the new API.

It's still often a good idea to use reactor.listenTCP.  If you know you 
want to run a TCP server, it's less typing than using an endpoint. 
Compare:

    reactor.listenTCP(1234, someFactory)
    TCP4ServerEndpoint(reactor, 1234).listen(someFactory)

Likewise, compare the service forms:

    TCPServer(1234, someFactory)
    StreamServerEndpointService(TCP4ServerEndpoint(reactor, 1234), 
someFactory)

However, if you want to write code that *isn't* hard-coded to TCP, then 
endpoints become much more attractive.  I won't even try to give an 
example of how you'd do that with the reactor listen* methods or the 
other services in twisted.application.internet.  But with endpoints, 
it's simple:

    someEndpoint.listen(someFactory)

or

    StreamServerEndpointService(someEndpoint, someFactory)

If you want the listen address to be configurable via some configuration 
file, or perhaps even in a GUI, 
`twisted.internet.endpoints.serverFromString` is one way you might get 
this endpoint (in particular, I would emphasize that serverFromString is 
really only meant to construct an endpoint if you *have* to start with a 
string - as you do when you are reading a configuration file).

Or you might have some other part of your application that directly 
constructs endpoints itself, rather than parsing strings, and passes 
them in to the part of code that is responsible for actually doing the 
listening
This is really why we introduced endpoints - to make it possible for 
applications to listen on (or connect to) an address that is specified 
elsewhere.  Previously, the "easy thing to do" was to only support 
TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any 
address family/transport type that there is now (or will be in the 
future!) an endpoint for.
>
>I will be giving a training on Twisted in a few days during the 
>EuroPython conference (actually, more of an assisted tutorial than a 
>training) and I'm not sure how I should present this. Any information 
>would be helpful.
>
>Orestis

Hope this helps!  Good luck with the session. :)

Jean-Paul



From itamar at itamarst.org  Sun Jun 12 07:32:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 12 Jun 2011 09:32:28 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
Message-ID: <1307885548.10214.1.camel@blake>

On Sun, 2011-06-12 at 15:48 +0300, Orestis Markou wrote:
> Hello,
> 
> I'm curious about the endpoints API that appeared. I've read the
> documentation, and I think I understand what it does, but I'm curious
> to see what parts of twisted it replaces. A lot of the documentation
> on-site is not updated (eg the finger tutorial) and it's not very
> clear whether one should use reactor.listenTCP, TCPServer or the new
> API.

TCPServer is a wrapper for listenTCP that makes a Service, i.e. a thing
you can run with twistd. So it's infrastructure for deployment. There
are Service wrappers for endpoints as well.

It's probably best not to bring up TCPServer at all when teaching
beginners, and just write a custom Service if you happen to be teaching
about twistd.




From orestis at orestis.gr  Sun Jun 12 07:34:01 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sun, 12 Jun 2011 16:34:01 +0300
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
Message-ID: <32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>

> This is really why we introduced endpoints - to make it possible for 
> applications to listen on (or connect to) an address that is specified 
> elsewhere.  Previously, the "easy thing to do" was to only support 
> TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any 
> address family/transport type that there is now (or will be in the 
> future!) an endpoint for.

That's a perfect explanation, many thanks!

>> I will be giving a training on Twisted in a few days during the 
>> EuroPython conference (actually, more of an assisted tutorial than a 
>> training) and I'm not sure how I should present this. Any information 
>> would be helpful.
>> 
>> Orestis
> 
> Hope this helps!  Good luck with the session. :)

Thanks. BTW, I've spent the past week browsing through twisted's documentation (esp. the API reference). I have a few ideas that I think would help newcomers find their away around much easier (and be less scared of twisteD). The ideas are mostly organisational, the material is there, if one knows what to look for. Should I create new tickets or mail ideas to this list?


From glyph at twistedmatrix.com  Sun Jun 12 20:35:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Jun 2011 22:35:19 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
Message-ID: <8CF3E100-9DE3-48A5-A2CC-3171224F0CEB@twistedmatrix.com>

On Jun 12, 2011, at 9:22 AM, exarkun at twistedmatrix.com wrote:

> If you want the listen address to be configurable via some configuration 
> file, or perhaps even in a GUI, 
> `twisted.internet.endpoints.serverFromString` is one way you might get 
> this endpoint (in particular, I would emphasize that serverFromString is 
> really only meant to construct an endpoint if you *have* to start with a 
> string - as you do when you are reading a configuration file).

I think this undersells the string-based API somewhat.

Generally, you should start with a string, because that's the most flexible mechanism available: it leaves the selection of the endpoint type up to the user, which is what most protocols want to do.  It's the only plugin mechanism that Twisted offers at this point for new endpoint mechanisms.  (It might be even cooler to have a form-based or GUI plugin mechanism as well, but strings are usually all that we have to go on.)  Avoid the impulse to construct specific endpoint types unless you need to have a specific type.  serverFromString and clientFromString should be the default APIs for most new applications.

I think that what exarkun was really trying to emphasize here is that, if you know that your protocol specifically supports TCP and only TCP, you should prefer

   StreamServerEndpointService(TCP4ServerEndpoint(reactor, myPortNumber), someFactory)

to

   strports.service("tcp:%d" % (myPortNumber,), someFactory)

because the former, while it is a bit more verbose, clearly expresses what you're trying to do, whereas the latter depends on the 'tcp' plugin having a specific behavior (which, since it's a plugin, might be overridden or changed in the future).

This problem becomes more pronounced when you're using the 'ssl' endpoint type, because if you're importing the endpoint you will be able to see a clear exception if SSL is not available, but if you're relying on the string plugin system it won't break until you actually try to start listening.  (And yet more pronounced if you were to rely on some endpoint plugin type that isn't provided with Twisted.)

In other words, you should tend to prefer one of the APIs that accept a string (strports.service, serverFromString, clientFromString), but if you use such an API, pass the whole string from the user into that function, so that you pass the flexibility on to your users and you don't introduce hidden dependencies into your application.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110612/f5543e22/attachment-0001.html>

From exarkun at twistedmatrix.com  Mon Jun 13 06:26:32 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 13 Jun 2011 12:26:32 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>
Message-ID: <20110613122632.1894.381076526.divmod.xquotient.48@localhost.localdomain>

On 12 Jun, 01:34 pm, orestis at orestis.gr wrote:
>>This is really why we introduced endpoints - to make it possible for
>>applications to listen on (or connect to) an address that is specified
>>elsewhere.  Previously, the "easy thing to do" was to only support
>>TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any
>>address family/transport type that there is now (or will be in the
>>future!) an endpoint for.
>
>That's a perfect explanation, many thanks!
>>>I will be giving a training on Twisted in a few days during the
>>>EuroPython conference (actually, more of an assisted tutorial than a
>>>training) and I'm not sure how I should present this. Any information
>>>would be helpful.
>>>
>>>Orestis
>>
>>Hope this helps!  Good luck with the session. :)
>
>Thanks. BTW, I've spent the past week browsing through twisted's 
>documentation (esp. the API reference). I have a few ideas that I think 
>would help newcomers find their away around much easier (and be less 
>scared of twisteD). The ideas are mostly organisational, the material 
>is there, if one knows what to look for. Should I create new tickets or 
>mail ideas to this list?

It would probably be best if you could get Kevin Horn and/or Tom Davis' 
attention.  They've both been thinking about making the documentation 
more accessible lately.  It would be great to incorporate your ideas 
into the overall plan.

Jean-Paul



From tom at recursivedream.com  Mon Jun 13 07:02:45 2011
From: tom at recursivedream.com (Tom Davis)
Date: Mon, 13 Jun 2011 09:02:45 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110613122632.1894.381076526.divmod.xquotient.48@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<32C24F13-BC4E-4C5C-A8E7-4A35C19E9D76@orestis.gr>
	<20110613122632.1894.381076526.divmod.xquotient.48@localhost.localdomain>
Message-ID: <E5EF7644-802A-44E6-BDAB-510EBEEDE85C@recursivedream.com>

On Jun 13, 2011, at 8:26 AM, exarkun at twistedmatrix.com wrote:

> On 12 Jun, 01:34 pm, orestis at orestis.gr wrote:
>>> This is really why we introduced endpoints - to make it possible for
>>> applications to listen on (or connect to) an address that is specified
>>> elsewhere.  Previously, the "easy thing to do" was to only support
>>> TCP/IPv4.  With endpoints, the "easy thing to do" is to work with any
>>> address family/transport type that there is now (or will be in the
>>> future!) an endpoint for.
>> 
>> That's a perfect explanation, many thanks!
>>>> I will be giving a training on Twisted in a few days during the
>>>> EuroPython conference (actually, more of an assisted tutorial than a
>>>> training) and I'm not sure how I should present this. Any information
>>>> would be helpful.
>>>> 
>>>> Orestis
>>> 
>>> Hope this helps!  Good luck with the session. :)
>> 
>> Thanks. BTW, I've spent the past week browsing through twisted's 
>> documentation (esp. the API reference). I have a few ideas that I think 
>> would help newcomers find their away around much easier (and be less 
>> scared of twisteD). The ideas are mostly organisational, the material 
>> is there, if one knows what to look for. Should I create new tickets or 
>> mail ideas to this list?
> 
> It would probably be best if you could get Kevin Horn and/or Tom Davis' 
> attention.  They've both been thinking about making the documentation 
> more accessible lately.  It would be great to incorporate your ideas 
> into the overall plan.

My ears, they burn! But, yeah, in terms of discoverability, the ever-near lore-to-Sphinx conversion does a ton for discoverability and makes obvious a number of opportunities for organizational improvement (a link to a recentish build eludes me, but when you seem them you'll know what I mean). Beyond the low-hanging fruit, there are many notes regarding individual docs improvements. Feel free to share your own, though I recommend checking Trac first because many documents do indeed have tickets. If you need help there let me know.

Speaking of the lore-to-Sphinx conversion, I am contractually obligated to inform you that improvements to current documentation is not blocked by the pending conversion. And that you have the right to a lawyer.

Cheers,

Tom

> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From _ at lvh.cc  Mon Jun 13 07:18:55 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 13 Jun 2011 15:18:55 +0200
Subject: [Twisted-Python] A new & improved IResource
Message-ID: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>

Hey!


In relation to my recent getChild problem (specifically, I want to return
deferred resources from it), it has become evident that IResource just won't
cut it for a number of reasons and we should probably replace the API with
something else.

The issues we should take care of in this new API:

1. http://tm.tl/3711 (returning deferreds from render methods)
2. http://tm.tl/3621 (returning deferreds from getChild and friends)
3. http://tm.tl/288 (accessing uploaded data while in progress)

If there are any missing tickets I'm forgetting about that are only fixable
by breaking the interface, now would be a good time to speak up.

I have created a new ticket (http://tm.tl/5152) for the new interface using
an integration branch that addresses the issues in the individual tickets on
a new interface as Glyph proposed. I've also commented on #3711 to say that
it just won't work that way and that we need a new interface, referring them
to the new ticket number.

What should the migration plan look like? At least from the code point of
view, exarkun has already partially answered this question:
http://twistedmatrix.com/trac/ticket/288#comment:31



cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110613/ae9a1d20/attachment.html>

From exarkun at twistedmatrix.com  Mon Jun 13 07:38:08 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 13 Jun 2011 13:38:08 -0000
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
Message-ID: <20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>

On 01:18 pm, _ at lvh.cc wrote:
>Hey!
>
>
>In relation to my recent getChild problem (specifically, I want to 
>return
>deferred resources from it), it has become evident that IResource just 
>won't
>cut it for a number of reasons and we should probably replace the API 
>with
>something else.
>
>The issues we should take care of in this new API:
>
>1. http://tm.tl/3711 (returning deferreds from render methods)
>2. http://tm.tl/3621 (returning deferreds from getChild and friends)
>3. http://tm.tl/288 (accessing uploaded data while in progress)
>
>If there are any missing tickets I'm forgetting about that are only 
>fixable
>by breaking the interface, now would be a good time to speak up.

Another thing we want is something closer to locateChild as Nevow and 
web2 had.  The key feature is being able to consume multiple path 
segments (or none at all) at a time if desired.

Jean-Paul
>I have created a new ticket (http://tm.tl/5152) for the new interface 
>using
>an integration branch that addresses the issues in the individual 
>tickets on
>a new interface as Glyph proposed. I've also commented on #3711 to say 
>that
>it just won't work that way and that we need a new interface, referring 
>them
>to the new ticket number.
>
>What should the migration plan look like? At least from the code point 
>of
>view, exarkun has already partially answered this question:
>http://twistedmatrix.com/trac/ticket/288#comment:31
>
>
>
>cheers
>lvh



From _ at lvh.cc  Mon Jun 13 16:30:04 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 14 Jun 2011 00:30:04 +0200
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>
Message-ID: <BANLkTiks077tSsCs2B_mg5X3406cSJpR4A@mail.gmail.com>

On Mon, Jun 13, 2011 at 3:38 PM, <exarkun at twistedmatrix.com> wrote:

> Another thing we want is something closer to locateChild as Nevow and
> web2 had.  The key feature is being able to consume multiple path
> segments (or none at all) at a time if desired.
>
> Jean-Paul
>

I added it to the ticket.

Someone on IRC mentioned that locateChild isn't exactly perfect either --
how does it differ from the idealized API?

For the people who hadn't seen locateChild before (much like myself) -- the
main difference is that instead of just taking the *next* segment, it takes
all of the remaining ones, and instead of returning a single child, it
returns a child and the remaining segments. A possible problem with this is
that people might get the impression they should mess with the segments...
Comments welcome.

I'm also not sure if it should be allowed to return an IResource (and
basically use the IResource getChild behavior whenever you see an
IResource...) or if it should only return the new things. Perhaps there
could be an adapter: if entity.locateChild([a, b, c]) returns a (resource,
[b, c]), the resource is adapted to IEntity (working title for
I2NewResource2), and the adapter's .locateChild([b, c]) call gets translated
into self.wrappedResource.getChild(b).getChild(c), or something.


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110614/26666d31/attachment-0001.html>

From albert.brandl at weiermayer.com  Tue Jun 14 01:37:29 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Tue, 14 Jun 2011 09:37:29 +0200
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
Message-ID: <20110614073729.GB2315@weiermayer.com>

On Sun, Jun 12, 2011 at 01:22:35PM -0000, exarkun at twistedmatrix.com wrote:
> `twisted.internet.endpoints.serverFromString` is one way you might get 
> this endpoint (in particular, I would emphasize that serverFromString is 
> really only meant to construct an endpoint if you *have* to start with a 
> string - as you do when you are reading a configuration file).

This works also quite well when you have different kinds of connection
in the testing and production environment. We read data from a GPS
device. For testing purposes, we want to feed the NMEA telegrams into
the server using a TCP connection, but the device is connected to the
server on a serial port.

We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800" 
for the production environment and "tcp:1049" for the test environment 
(SERIAL is not yet part of the endpoint framework - I've started working 
on issue 4847, but didn't find time yet to polish the code and submit a 
patch - sorry).

We're now able to create a service by calling 

    gps_service = strports.service(GPS_PORT, gps_factory)

Depending on the environment, the server listens either on TCP port 1049 
or the serial device /dev/ttyS2.

A nice side effect is that I have a central place where the connection 
details for all kinds of services are defined - should any port change, 
I know where to fix it.

Regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From glyph at twistedmatrix.com  Tue Jun 14 10:09:38 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 12:09:38 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614073729.GB2315@weiermayer.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
Message-ID: <5F024269-7320-42A3-80CE-F147EA3B8CE0@twistedmatrix.com>


On Jun 14, 2011, at 3:37 AM, Albert Brandl wrote:

> We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800" 
> for the production environment and "tcp:1049" for the test environment 
> (SERIAL is not yet part of the endpoint framework - I've started working 
> on issue 4847, but didn't find time yet to polish the code and submit a 
> patch - sorry).

Submit a patch that's unpolished, and perhaps someone else will take the opportunity to polish it up for you :).

If you're using an endpoint plugin of your own, though, that's cool, I'm glad that someone is making use of that API!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110614/2b3b4cb7/attachment.html>

From anton at iki.fi  Tue Jun 14 10:25:14 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Tue, 14 Jun 2011 19:25:14 +0300
Subject: [Twisted-Python] Specifying the local port for a twisted.names DNS
	query or resolver
Message-ID: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>

I have external requirements that force me to issue DNS queries from a
specific local port range. I'm looking for a way to use the
twisted.names resolver but I need to specify a local port for a query
or set the local port range for all queries. I appreciate that the
local port randomization is there for good security reasons, but for
my application I do not care. I would be grateful for any tips or
guidelines on how to achieve this.

For some ancient Twisted version I got it working by monkey patching
twisted.names.dns.DNSDatagramProtocol.startListening() to this effect.
This ugly hack of mine does not work anymore for any recent version of
Twisted. Is there a right way to do it?

Best regards
Anton



From glyph at twistedmatrix.com  Tue Jun 14 10:58:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 12:58:56 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <BANLkTiks077tSsCs2B_mg5X3406cSJpR4A@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
	<20110613133808.1894.900461113.divmod.xquotient.51@localhost.localdomain>
	<BANLkTiks077tSsCs2B_mg5X3406cSJpR4A@mail.gmail.com>
Message-ID: <7BC9278F-3783-4F11-9650-CA7166FB880B@twistedmatrix.com>


On Jun 13, 2011, at 6:30 PM, Laurens Van Houtven wrote:

> On Mon, Jun 13, 2011 at 3:38 PM, <exarkun at twistedmatrix.com> wrote:
> Another thing we want is something closer to locateChild as Nevow and
> web2 had.  The key feature is being able to consume multiple path
> segments (or none at all) at a time if desired.
> 
> Jean-Paul
> 
> I added it to the ticket.
> 
> Someone on IRC mentioned that locateChild isn't exactly perfect either -- how does it differ from the idealized API? 
> 
> For the people who hadn't seen locateChild before (much like myself) -- the main difference is that instead of just taking the *next* segment, it takes all of the remaining ones, and instead of returning a single child, it returns a child and the remaining segments. A possible problem with this is that people might get the impression they should mess with the segments... Comments welcome.

Yeah, messing with segments is an issue.  There's a thing that some Nevow applications would do which, while I'm not entirely sure it was a terrible idea, definitely exposed a weakness in this model.  We called it an "internal redirect".  The basic idea is that your resource gets called with "request, [a, b, c]" and you return "resource, [d, e, f]".  The problem with allowing this is that it decouples the resource from any sane way to identify its URL based on the request.  It's handy to have something like the 'prepath' attribute to assist in generating absolute URIs that can be passed to external systems, but you can't make that consistent in the face of code that arbitrarily manipulates the segments list.

Also, you can internally redirect this way based on path-based dispatch but you can't redirect based on hostname or other features of the request without mutating it.  So it seemed like a lopsided half-feature.

One off-the-cuff idea to address this would be to have a 'path' object with an API of its own; something like this:

def locateDescendant(self, request, path):
    year, month, day = path.consume(3)
    rsrc = self.resourceFromDate(year, month, day)
    return rsrc

.consume(integer) is something of a strawman here; you'd probably need a way to say stuff like "consume all of the path segments" or "consume everything up to a segment with the value 'x'", so that we didn't lose the (legitimate) flexibility of having a list.  We could of course just pass in a mutable list and not return it, but that provides a little more flexibility than I'd like, because it would allow you to do all the same stuff as returning your own arbitrary sequence.

Really this 'path' is actually cursor over the URI inside the request.  It would be nice if the state associated with traversal were encapsulated entirely in that object, so that the request itself didn't get mutated as it traveled down the path.

> I'm also not sure if it should be allowed to return an IResource (and basically use the IResource getChild behavior whenever you see an IResource...) or if it should only return the new things.

One return-type signature is a good idea.  Convenience APIs are better.  That said, if we do go with 2-tuple as the return type, good error reporting is crucial; it's very easy to accidentally return a resource.

> Perhaps there could be an adapter: if entity.locateChild([a, b, c]) returns a (resource, [b, c]), the resource is adapted to IEntity (working title for I2NewResource2), and the adapter's .locateChild([b, c]) call gets translated into self.wrappedResource.getChild(b).getChild(c), or something.

That seems sensible.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110614/56689e74/attachment.html>

From glyph at twistedmatrix.com  Tue Jun 14 11:07:10 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 13:07:10 -0400
Subject: [Twisted-Python] A new & improved IResource
In-Reply-To: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
References: <BANLkTi=jpP=ufbibgPkfo=uzTCs_YKhKYA@mail.gmail.com>
Message-ID: <7B876BA2-586A-423B-AE2C-E68DD3A83D4B@twistedmatrix.com>


On Jun 13, 2011, at 9:18 AM, Laurens Van Houtven wrote:

> Hey!
> 
> In relation to my recent getChild problem (specifically, I want to return deferred resources from it), it has become evident that IResource just won't cut it for a number of reasons and we should probably replace the API with something else.
> 
> The issues we should take care of in this new API:
> 
> 1. http://tm.tl/3711 (returning deferreds from render methods)
> 2. http://tm.tl/3621 (returning deferreds from getChild and friends)
> 3. http://tm.tl/288 (accessing uploaded data while in progress)

A new IResource means an opportunity for a new IRequest, since implementing that new interface is the easiest way for a resource to say "I require the new IRequest interface as a parameter to these methods".  This long-standing enhancement would be a nice thing to get in there:

http://tm.tl/1569 (IRequest should have a uri object)

This ticket predates my understanding of many of the nuances of URIs, URLs, URNs, IRIs, IDNA, etc, so URLPath is probably not quite up to the job.  nevow.url is closer, but probably needs some fixing (especially in the area of IRIs).

And, for that matter, some compatibility between the request object used by Agent and the request object used by the server would be great.  That's not necessary for a new interface, but in any design of a new interface, that should be taken into account so that it can satisfy requirements on both sides.

> If there are any missing tickets I'm forgetting about that are only fixable by breaking the interface, now would be a good time to speak up.
> 
> I have created a new ticket (http://tm.tl/5152) for the new interface using an integration branch that addresses the issues in the individual tickets on a new interface as Glyph proposed. I've also commented on #3711 to say that it just won't work that way and that we need a new interface, referring them to the new ticket number.
> 
> What should the migration plan look like? At least from the code point of view, exarkun has already partially answered this question: http://twistedmatrix.com/trac/ticket/288#comment:31
> 
> 
> 
> cheers
> lvh
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110614/ffc03d55/attachment.html>

From exarkun at twistedmatrix.com  Tue Jun 14 12:01:47 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Jun 2011 18:01:47 -0000
Subject: [Twisted-Python] Specifying the local port for a
	twisted.names	DNS query or resolver
In-Reply-To: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
References: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
Message-ID: <20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>

On 04:25 pm, anton at iki.fi wrote:
>I have external requirements that force me to issue DNS queries from a
>specific local port range. I'm looking for a way to use the
>twisted.names resolver but I need to specify a local port for a query
>or set the local port range for all queries. I appreciate that the
>local port randomization is there for good security reasons, but for
>my application I do not care. I would be grateful for any tips or
>guidelines on how to achieve this.
>
>For some ancient Twisted version I got it working by monkey patching
>twisted.names.dns.DNSDatagramProtocol.startListening() to this effect.
>This ugly hack of mine does not work anymore for any recent version of
>Twisted. Is there a right way to do it?

We'd be happy to have such a feature officially supported.  Would you 
like to work on a patch that adds a tested, documented hook for 
selecting the source port?

Jean-Paul



From exarkun at twistedmatrix.com  Tue Jun 14 12:37:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 14 Jun 2011 18:37:45 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614073729.GB2315@weiermayer.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
Message-ID: <20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>

On 07:37 am, albert.brandl at weiermayer.com wrote:
>On Sun, Jun 12, 2011 at 01:22:35PM -0000, exarkun at twistedmatrix.com 
>wrote:
>>`twisted.internet.endpoints.serverFromString` is one way you might get
>>this endpoint (in particular, I would emphasize that serverFromString 
>>is
>>really only meant to construct an endpoint if you *have* to start with 
>>a
>>string - as you do when you are reading a configuration file).
>
>This works also quite well when you have different kinds of connection
>in the testing and production environment. We read data from a GPS
>device. For testing purposes, we want to feed the NMEA telegrams into
>the server using a TCP connection, but the device is connected to the
>server on a serial port.

This is cool, I'm glad endpoints are working out for you. :)
>We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800"
>for the production environment and "tcp:1049" for the test environment

To be clear, though, it sounds like you're defining GPS_PORT in a .py 
file, and that's more or less what I was speaking against. :)  Instead, 
I would define GPS_PORT as either SerialEndpoint(reactor, "/dev/ttyS2", 
baudrate=4800) or TCP4ServerEndpoint(reactor, 1049).

The rest of your code can still be indifferent to which of these is in 
play (and you can have a service for either of these using 
StreamServerEndpointService).  If you misspell something or leave off a 
required argument, though, you're more likely to get an exception that 
points more directly at the problem.

Put another way, I suggest writing this:

    if debug_mode():
        gps_port = TCP4ServerEndpoint(reactor, 1049)
    else:
        gps_port = SerialEndpoint(reactor, "/dev/ttyS2", baudrate=4800)

    ...

    gps_service = StreamServerEndpointService(gps_port, gps_factory)

And save the "tcp:1049"-style strings for your .ini files where you 
cannot write it that way.

Jean-Paul



From glyph at twistedmatrix.com  Tue Jun 14 17:37:50 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jun 2011 19:37:50 -0400
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
Message-ID: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>


On Jun 14, 2011, at 2:37 PM, exarkun at twistedmatrix.com wrote:

> On 07:37 am, albert.brandl at weiermayer.com wrote:
>> 

>> We've defined a constant GPS_PORT as "SERIAL:/dev/ttyS2:baudrate=4800"
>> for the production environment and "tcp:1049" for the test environment
> 
> To be clear, though, it sounds like you're defining GPS_PORT in a .py 
> file, and that's more or less what I was speaking against. :)  Instead, 
> I would define GPS_PORT as either SerialEndpoint(reactor, "/dev/ttyS2", 
> baudrate=4800) or TCP4ServerEndpoint(reactor, 1049).

In a rare show of dissent within the cabal[1], I disagree with Jean-Paul on this.

> The rest of your code can still be indifferent to which of these is in play (and you can have a service for either of these using StreamServerEndpointService).

This is the most important point to take away, and I agree with it.  As much as possible, code should interact with endpoints as parameters.  If you need to pass something around, pass the endpoint or the service itself, not the string or the parameters used to construct it.

> If you misspell something or leave off a required argument, though, you're more likely to get an exception that points more directly at the problem.

First, if you find bad error reporting while using the string-using APIs, it would be better to file a bug for improved error handling than to switch to hard-coding your endpoint types.  There's no particular reason that error-reporting needs to be worse in that case.

Second, I hate to say so, but the current error-reporting behavior wasn't designed particularly thoughtfully in either system, so in practice, sometimes you'll get better reporting from one and in some you'll get it from the other.  For example:

>>> from twisted.internet.endpoints import TCP4ServerEndpoint, serverFromString
>>> from twisted.internet import reactor
>>> serverFromString(reactor, 'bananas')
   ...
ValueError: Unqualified strport description passed to 'service'. Use qualified endpoint descriptions; for example, 'tcp:bananas'.
>>> serverFromString(reactor, 'tcp:bananas')
   ...
ValueError: invalid literal for int() with base 10: 'bananas'
>>> TCP4ServerEndpoint(reactor, 'bananas')
<twisted.internet.endpoints.TCP4ServerEndpoint object at 0x103629190>
>>> TCP4ServerEndpoint(reactor)
   ...
TypeError: __init__() takes at least 3 arguments (2 given)
>>> serverFromString(reactor, 'tcp:')
Traceback (most recent call last):
   ...
ValueError: invalid literal for int() with base 10: ''
>>> serverFromString(reactor, "bananas:")
   ...
ValueError: Unknown endpoint type: 'bananas'

Both of these really *should* be saying: "'bananas' is not a valid TCP port number" or "TCP requires a port number".  (Python's error reporting could use some improving here too: which __init__, exactly?)

Personally, I recommend that most developers prefer the string-based APIs, because they allow for more flexibility with less code.  (Granted, not a lot less code: just the N imports for each endpoint type you might support vs. the 1 import for serverFromString or strports.service.)

When you create a TCP4ServerEndpoint, that is an object with a very specific contract.  However, an endpoint created with the "tcp:" prefix passed to serverFromString has an opportunity for more dynamic behavior.  The former must always bind to TCPv4 sockets.  The latter, however, may develop different behavior.  For example, IPv6 support "for free" would be possible with this API, because by using the string-based APIs you are explicitly saying "I am passing some input in here, and I don't know what kind of stream-based transport I might get".  The compatibility contract with this code is much weaker, because it supports plugins, and already might be giving you lots of different kinds of objects depending on your configuration.

The place where I would recommend against using the string-based APIs is in systems which require knowledge of their transports.  For example, if you want to report about the apparent address of your peer in a protocol message with a specific format, you can't correctly do that with an arbitrary endpoint, because you won't know what datatype to expect from the getPeer() and getHost() methods on your transport.  You can't accept any endpoint that serverFromString might give you and then assume it will give you an IPv4Address as a peer.

So, you should be as flexible as you can, but no more.

> Put another way, I suggest writing this:
> 
>    if debug_mode():
>        gps_port = TCP4ServerEndpoint(reactor, 1049)
>    else:
>        gps_port = SerialEndpoint(reactor, "/dev/ttyS2", baudrate=4800)
> 
>    ...
> 
>    gps_service = StreamServerEndpointService(gps_port, gps_factory)
> 
> And save the "tcp:1049"-style strings for your .ini files where you 
> cannot write it that way.

This then begs the question: where does "debug_mode()"'s result come from?  Presumably someone had to indicate a boolean to this code somehow.  It would be simpler for whoever was supplying the value for debug_mode to just supply a value for the endpoint string description instead.  And if it's OK to hard-code the debug_mode boolean, why not just hard-code the string?  Since gps_factory already needs to accept being connected to different transport types, this is 8 lines of code (including the imports, not shown above) where 3 will do fine.

Can this code really only run over plain TCP and serial ports?  If not, then you might have to add an 'if secure()' to the TCP case.  And then you suddenly need a way to get a certificate in there, and all kinds of other information related to TLS.  Better to let the existing string-parsing configuration system do that for you.

-glyph

[1]: There is no cabal.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110614/7fc5e13a/attachment.html>

From kevin.horn at gmail.com  Tue Jun 14 18:47:22 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 14 Jun 2011 19:47:22 -0500
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
	<316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
Message-ID: <BANLkTi=HgsEiK86MK-a6feZBrihDDDz76A@mail.gmail.com>

On Tue, Jun 14, 2011 at 6:37 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

>
> [1]: There is no cabal.
>

The first rule of the Twisted Cabal[1] is that you do not talk about the
Twisted Cabal.

[1]: There (really!) is no cabal.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110614/4a298ee1/attachment.html>

From exarkun at twistedmatrix.com  Tue Jun 14 19:57:01 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 01:57:01 -0000
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
	<316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
Message-ID: <20110615015701.1894.325973391.divmod.xquotient.369@localhost.localdomain>

On 14 Jun, 11:37 pm, glyph at twistedmatrix.com wrote:
>
>On Jun 14, 2011, at 2:37 PM, exarkun at twistedmatrix.com wrote:
>
>[snip]
>>the rest of your code can still be indifferent to wHich of thEse is in 
>>play (and you can have a seRvice for Either of these usIng 
>>StreamServerEndpointService).
>
>ThiS is the most important poiNt to take away, and I agree with it.  As 
>much as possible, cOde should interact with endpoints as parameters. 
>If you need to pass something around, pass the endpoint or the service 
>itself, not the string or the parameters used to Construct it.

This is the most important point.
>[snip]
>>Put another way, I suggest writing this:
>>
>>    if debug_mode():
>>        gps_port = TCP4ServerEndpoint(reactor, 1049)
>>    else:
>>        gps_port = SerialEndpoint(reactor, "/dev/ttyS2", baudrate=4800)
>>
>>    ...
>>
>>    gps_service = StreamServerEndpointService(gps_port, gps_factory)
>>
>>And save the "tcp:1049"-style strings for your .ini files where you
>>cannot write it that way.
>
>This then begs the question: where does "debug_mode()"'s result come 
>from?

Yes, indeed.  I made my message a little too brief.  I didn't want to 
address whether the original code was correct or not in its approach of 
restricting itself to these two particular endpoints.
>Presumably someone had to indicAte a boolean to this code somehow.  It 
>would be simpler for whoever was supplying the value for debug_mode to 
>just supply a value for the endpoint string description instead.  And 
>if it's OK to hard-code the deBug_mode boolean, why not just hard-code 
>the string?  Since gps_factory already needs to Accept being connected 
>to different transport types, this is 8 lines of code (incLuding the 
>imports, not shown above) where 3 will do fine.
>
>Can this code really only run over plain TCP and serial ports?  If not, 
>then you might have to add an 'if secure()' to the TCP case.  And then 
>you suddenly need a way to get a certificate in there, and all kinds of 
>other information related to TLS.  Better to let the existing string- 
>parsing configuration system do that for you.

This is true.  And to a great extent it makes what I am going to say 
next rather unimportant.

If you *are* going to hard code a particular endpoint type or two, then 
using the string endpoints syntax is pointless.  Conversely, you should 
use the string endpoint syntax to good effect by not dropping literals 
into your source, but instead accepting the string value from user input 
or configuration somewhere.

Also, I snipped out the part of the message where you discuss bananas, 
but please consider this true result:
>>>ClientCreator(reactor, Protocol).connectTCP('localhost', 'bananas')
<Deferred #2>
Deferred #2 called back: <twisted.internet.protocol.Protocol instance at 
0x9e0522c>
>>>_.result.transport.getHost(), _.result.transport.getPeer()
(IPv4Address(TCP, '127.0.0.1', 44391), IPv4Address(TCP, '127.0.0.1', 
22))
>>>

Jean-Paul



From anton at iki.fi  Tue Jun 14 23:52:09 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 15 Jun 2011 08:52:09 +0300
Subject: [Twisted-Python] Specifying the local port for a twisted.names
 DNS query or resolver
In-Reply-To: <20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>
References: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
	<20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>
Message-ID: <BANLkTimWmvFPJpR+N0FyEiC9oDZP09e54w@mail.gmail.com>

On Tue, Jun 14, 2011 at 9:01 PM,  <exarkun at twistedmatrix.com> wrote:
> We'd be happy to have such a feature officially supported.  Would you
> like to work on a patch that adds a tested, documented hook for
> selecting the source port?

Perhaps I could work on such a patch. I would be thankful for any tips
on where to start and what would be a good interface.

I looked at the code again, and I think the source port is selected by
calling dns.randomSource() deep in
twisted.names.client.Resolver._connectedProtocol(). This could perhaps
be broken out to a separate method of client.Resolver. It would
probably make sense to at the same time let the local IP address
(interface) be specified in addition to the port (as with the
bindAddress parameter). So perhaps Resolver._connectedProtocol() could
call a new method client.Resolver.getUDPBindAddress(), with the
default implementation returning ('', dns.getRandomSource()). Then a
user could subclass Resolver and override the getUDPBindAddress method
(or monkey patch an existing Resolver).

Currently Resolver._connectedProtocol() wraps the call to
dns.randomSource() and listenUDP in a "while True" loop, catching
CannotListenError so that if the randomly selected port is in use, a
new port will be selected by random. If we let the user change the
port selection logic, it might be good to safeguard against infinitely
looping if e.g., the user decides to always return the same port.
Perhaps re-raise the CannotListenError exception on the N-th loop.

Am I on the right track?

Best regards
Anton



From albert.brandl at weiermayer.com  Wed Jun 15 03:00:45 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 15 Jun 2011 11:00:45 +0200
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
Message-ID: <20110615090044.GA2819@weiermayer.com>

On Tue, Jun 14, 2011 at 06:37:45PM -0000, exarkun at twistedmatrix.com wrote:
> To be clear, though, it sounds like you're defining GPS_PORT in a .py 
> file, and that's more or less what I was speaking against. :)  Instead, 
> I would define GPS_PORT as either SerialEndpoint(reactor, "/dev/ttyS2", 
> baudrate=4800) or TCP4ServerEndpoint(reactor, 1049).

I've read your comment before sending the email. But I preferred to
show what we are doing right now over "faking" a solution that might
be more beautiful.

Regarding maintenance, the string representation has some advantages.
It's easier to explain how to modify a configuration file that contains
some strings than explaining how to modify Python source code. OTOH,
losing meaningful debug messages hurts, of course ;-).

Best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From albert.brandl at weiermayer.com  Wed Jun 15 03:31:17 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Wed, 15 Jun 2011 11:31:17 +0200
Subject: [Twisted-Python] Information on new endpoints API?
In-Reply-To: <316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
References: <35B9422A-D481-4666-85D9-6C59E3783A8E@orestis.gr>
	<20110612132235.1894.1918079688.divmod.xquotient.23@localhost.localdomain>
	<20110614073729.GB2315@weiermayer.com>
	<20110614183745.1894.583160205.divmod.xquotient.264@localhost.localdomain>
	<316A2E38-DB70-4751-8558-E7EDC469ED50@twistedmatrix.com>
Message-ID: <20110615093117.GB2819@weiermayer.com>

On Tue, Jun 14, 2011 at 07:37:50PM -0400, Glyph Lefkowitz wrote:
> This is the most important point to take away, and I agree with it.  As much as
> possible, code should interact with endpoints as parameters.  If you need to
> pass something around, pass the endpoint or the service itself, not the string
> or the parameters used to construct it.

Granted.

> This then begs the question: where does "debug_mode()"'s result come from?

Actually, there is no `debug_mode()` function, but we rewrite the 
configuration file before deploying it. It contains some blocks like

# DEV_START
GPS_PORT = "tcp:1049"
...
# DEV_END

and

# PROD_START
# GPS_PORT = "SERIAL:/dev/ttyS2:baudrate=4800"
# ...
# PROD_END

The deployment script removes all lines between "# DEV_START" and "# DEV_END" 
and removes the comments between "# PROD_START" and "# PROD_END". This allows 
us to guarantee that development features (e.g. a manhole, a different kind 
of database, TCP-based stubs for serial devices like the GPS-receiver) do not 
"leak" into the production environment.

> Presumably someone had to indicate a boolean to this code somehow.  It would
> be simpler for whoever was supplying the value for debug_mode to just supply a
> value for the endpoint string description instead.  And if it's OK to hard-code
> the debug_mode boolean, why not just hard-code the string?

That's how it's implemented.

Best regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From exarkun at twistedmatrix.com  Wed Jun 15 05:56:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 11:56:34 -0000
Subject: [Twisted-Python] Specifying the local port for a
	twisted.names	DNS query or resolver
In-Reply-To: <BANLkTimWmvFPJpR+N0FyEiC9oDZP09e54w@mail.gmail.com>
References: <BANLkTinPtq=ktGa718c0UW0b9ZRJ_paFRg@mail.gmail.com>
	<20110614180147.1894.736810718.divmod.xquotient.238@localhost.localdomain>
	<BANLkTimWmvFPJpR+N0FyEiC9oDZP09e54w@mail.gmail.com>
Message-ID: <20110615115634.1894.1092821033.divmod.xquotient.370@localhost.localdomain>

On 05:52 am, anton at iki.fi wrote:
>On Tue, Jun 14, 2011 at 9:01 PM,  <exarkun at twistedmatrix.com> wrote:
>>We'd be happy to have such a feature officially supported. �Would you
>>like to work on a patch that adds a tested, documented hook for
>>selecting the source port?
>
>Perhaps I could work on such a patch. I would be thankful for any tips
>on where to start and what would be a good interface.
>
>I looked at the code again, and I think the source port is selected by
>calling dns.randomSource() deep in
>twisted.names.client.Resolver._connectedProtocol(). This could perhaps
>be broken out to a separate method of client.Resolver. It would
>probably make sense to at the same time let the local IP address
>(interface) be specified in addition to the port (as with the
>bindAddress parameter). So perhaps Resolver._connectedProtocol() could
>call a new method client.Resolver.getUDPBindAddress(), with the
>default implementation returning ('', dns.getRandomSource()). Then a
>user could subclass Resolver and override the getUDPBindAddress method
>(or monkey patch an existing Resolver).
>
>Currently Resolver._connectedProtocol() wraps the call to
>dns.randomSource() and listenUDP in a "while True" loop, catching
>CannotListenError so that if the randomly selected port is in use, a
>new port will be selected by random. If we let the user change the
>port selection logic, it might be good to safeguard against infinitely
>looping if e.g., the user decides to always return the same port.
>Perhaps re-raise the CannotListenError exception on the N-th loop.
>
>Am I on the right track?

Yep, sounds like a great plan.

Jean-Paul



From orestis at orestis.gr  Wed Jun 15 11:03:14 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Wed, 15 Jun 2011 20:03:14 +0300
Subject: [Twisted-Python] Example of re-usable ClientFactories?
Message-ID: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>

Hello,

I've gotten to the point in my tutorial that I'm giving out examples of writing clients. Example:

class HTTPGETProtocol(protocol.Protocol):
    def connectionMade(self):
        self.buffer = []
        self.transport.write('GET %s HTTP/1.0\r\n' % self.factory.path)
        self.transport.write('User-Agent: europython/2011\r\n')
        self.transport.write('\r\n')

    def dataReceived(self, data):
        self.buffer.append(data)


    def connectionLost(self, reason):
        self.factory.deferred.callback(''.join(self.buffer))


def get(host, path):
    f = protocol.ClientFactory()
    f.protocol = HTTPGETProtocol
    f.path = path
    f.deferred = defer.Deferred()
    reactor.connectTCP(host, 80, f)
    return f.deferred


So far as I can tell, this is a common idiom (albeit with a ClientFactory subclass) - create a single-use factory, store some instance variables into it, connect somewhere, let the protocol do its thing by accessing the factory's instance variables. Of course, real-world examples are much more complex, but the pattern remains pretty much the same.

I'm curious, is there any case where a ClientFactory.buildProtocol would be used more than once? The only case I can think is something like ReconnectingClientFactory that will need to re-initiate the connection, but it doesn't even use that kind of functionality.

Thinking more about it, a factory could be reused by connecting it to different addresses, so it would coordinate different protocols.

But, for most of the one-shot cases it seems that a ClientCreator (or an endpoint) would serve the same purpose, no?

Any pointers would be appreciated.
Orestis





From glyph at twistedmatrix.com  Wed Jun 15 13:19:52 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Jun 2011 15:19:52 -0400
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
Message-ID: <9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>

On Jun 15, 2011, at 1:03 PM, Orestis Markou wrote:

> But, for most of the one-shot cases it seems that a ClientCreator (or an endpoint) would serve the same purpose, no?

I am not sure that I understand your message.  ClientFactory will be re-used if you re-use it; it won't be re-used if you don't.  There's no particularly compelling reason to do so or not to do so; just whatever happens to make sense within your application.

However, I should note that with the advent of endpoints, ClientFactory is no longer necessary.  Connection failure is communicated on an endpoint via the Deferred from connect() errbacking, so there's no need for the extra callbacks that ClientFactory provides.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110615/7b0dda98/attachment.html>

From exarkun at twistedmatrix.com  Wed Jun 15 14:08:07 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 20:08:07 -0000
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
Message-ID: <20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>

On 07:19 pm, glyph at twistedmatrix.com wrote:
>On Jun 15, 2011, at 1:03 PM, Orestis Markou wrote:
>>But, for most of the one-shot cases it seems that a ClientCreator (or 
>>an endpoint) would serve the same purpose, no?
>
>I am not sure that I understand your message.  ClientFactory will be 
>re-used if you re-use it; it won't be re-used if you don't.  There's no 
>particularly compelling reason to do so or not to do so; just whatever 
>happens to make sense within your application.
>
>However, I should note that with the advent of endpoints, ClientFactory 
>is no longer necessary.  Connection failure is communicated on an 
>endpoint via the Deferred from connect() errbacking, so there's no need 
>for the extra callbacks that ClientFactory provides.

Except clientConnectionLost.

Jean-Paul



From dshein at rochester.rr.com  Wed Jun 15 14:10:05 2011
From: dshein at rochester.rr.com (David Shein)
Date: Wed, 15 Jun 2011 16:10:05 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on 6/22
	& 6/23
Message-ID: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>

Hey Twisted Developers,
I'm looking to get a half dozen devs who will commit to being on the  
Twisted IRC channel next Wed and Thurs during biz hours to answer  
noobish queries from CS faculty working in an OS environment for the  
first time. One group will be working on Twisted bug tickets.  All  
the details are below.  If you are interested please LMK on the list,  
or you can email me directly at dshein at rochester.rr.com.
Dave Shein
Rochester Institute of Technology

Greetings:
My name is Dave Shein, and I'm an Adjunct Faculty at Rochester  
Institute of Technology. Along with Chris Tyler of Seneca College, we  
are hosting a week long POSSE boot-camp at the RIT campus from June  
20th -24th. POSSE, sponsored by Red Hat, is a week long educational  
hand-on seminar in open source process, collaboration, and education.  
The central purpose of POSSE is to increase awareness and  
opportunities for Open Source participation in the university  
setting. All POSSE participants are university staff or faculty who  
will take what they learn in POSSE and use that knowledge in CS and  
related curricula, to spread the word about open source  
collaboration, and to provide increased educational opportunities for  
CS related students. Our first two days are spent acclimating our  
participants to tools and resources of the open source community, but  
on the third and fourth day of POSSE we will have our participants do  
a code-sprint. We are looking for opportunities in existing open  
source projects which have a quick learning curve and setup time for  
folks with a CS background but who in most cases will not have a  
great depth of experience working in open source languages. We are  
particularly interested in having our participants hack on Fedora  
based projects. The students will have a Fedora F14 & F15/Linux work  
environment setup as part of their initial orientation, and we are  
looking for projects that will not have lengthy setup beyond the  
participants' initial setup.
We obtained information about your open source project through  
OpenHatch, and would like to know if your project would have elements  
that would be amenable to our sprint. There will be approximately  
fifteen to twenty participants working on the sprint in teams of 3 to  
5 people each, of whom most are coders. IN ADDITION we are also  
looking for a project participation opportunity for 3 to 4 non- 
coders, possibly in the form of testing, copywriting, or editing  
work. Ideally we would also like to coordinate with a point-person in  
your organization during the period of the sprint, a person to whom  
participants could direct questions, perhaps via IRC in real time.
If this is of interest to you please contact me at your earliest  
convenience. I hope that we can work together soon.
David Malcom Shein
Rochester Institute of Technology
IRC# ProfSheinRIT on freenode
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110615/be31d106/attachment.html>

From glyph at twistedmatrix.com  Wed Jun 15 14:24:01 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Jun 2011 16:24:01 -0400
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
	<20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>
Message-ID: <5A9DD346-C236-45A6-A906-AC6B52AC472D@twistedmatrix.com>

On Jun 15, 2011, at 4:08 PM, exarkun at twistedmatrix.com wrote:

>> However, I should note that with the advent of endpoints, ClientFactory 
>> is no longer necessary.  Connection failure is communicated on an 
>> endpoint via the Deferred from connect() errbacking, so there's no need 
>> for the extra callbacks that ClientFactory provides.
> 
> Except clientConnectionLost.


I chose my words carefully :-).

clientConnectionLost was always a duplicate of IProtocol.connectionLost.

It might be handy to have that notification delivered in multiple places (specifically, for implementing ReconnectingClientFactory), but it's not necessary (there's no "need" for it) since you can clone it by wrapping IProtocol instead of duplicating it in the guts of the reactor.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110615/b5a680ac/attachment.html>

From exarkun at twistedmatrix.com  Wed Jun 15 14:37:49 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 15 Jun 2011 20:37:49 -0000
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <5A9DD346-C236-45A6-A906-AC6B52AC472D@twistedmatrix.com>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
	<20110615200807.1894.96144206.divmod.xquotient.371@localhost.localdomain>
	<5A9DD346-C236-45A6-A906-AC6B52AC472D@twistedmatrix.com>
Message-ID: <20110615203749.1894.102405862.divmod.xquotient.374@localhost.localdomain>

On 08:24 pm, glyph at twistedmatrix.com wrote:
>On Jun 15, 2011, at 4:08 PM, exarkun at twistedmatrix.com wrote:
>>>However, I should note that with the advent of endpoints, 
>>>ClientFactory
>>>is no longer necessary.  Connection failure is communicated on an
>>>endpoint via the Deferred from connect() errbacking, so there's no 
>>>need
>>>for the extra callbacks that ClientFactory provides.
>>
>>Except clientConnectionLost.
>
>
>I chose my words carefully :-).
>
>clientConnectionLost was always a duplicate of 
>IProtocol.connectionLost.
>
>It might be handy to have that notification delivered in multiple 
>places (specifically, for implementing ReconnectingClientFactory), but 
>it's not necessary (there's no "need" for it) since you can clone it by 
>wrapping IProtocol instead of duplicating it in the guts of the 
>reactor.

The callback (not errback) case of the client endpoint API is redundant 
as well, then, since IProtocol.makeConnection exposes the same 
information. :)

Jean-Paul



From orestis at orestis.gr  Wed Jun 15 16:15:54 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Thu, 16 Jun 2011 01:15:54 +0300
Subject: [Twisted-Python] Example of re-usable ClientFactories?
In-Reply-To: <9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
References: <5D05952E-A58B-4EFE-B33E-40CEBAB5E468@orestis.gr>
	<9EED7BFA-C27A-405C-9EB0-4C82CF112DA6@twistedmatrix.com>
Message-ID: <0172A5A5-1286-43C8-9799-1A951D4747D2@orestis.gr>


On 15 Jun 2011, at 22:19, Glyph Lefkowitz wrote:

> On Jun 15, 2011, at 1:03 PM, Orestis Markou wrote:
> 
>> But, for most of the one-shot cases it seems that a ClientCreator (or an endpoint) would serve the same purpose, no?
> 
> I am not sure that I understand your message.  ClientFactory will be re-used if you re-use it; it won't be re-used if you don't.  There's no particularly compelling reason to do so or not to do so; just whatever happens to make sense within your application.

I should have been more specific - I'm looking for application examples or domains that re-using a ClientFactory makes sense. Just in case someone asks ;) 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110616/621e6855/attachment.html>

From andrew at bemusement.org  Wed Jun 15 18:08:57 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 16 Jun 2011 10:08:57 +1000
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
 6/22 & 6/23
In-Reply-To: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
Message-ID: <20110616000857.GB30855@aihal.home.puzzling.org>

David Shein wrote:
>    Hey Twisted Developers,
> 
>    I'm looking to get a half dozen devs who will commit to being on the
>    Twisted IRC channel next Wed and Thurs during biz hours to answer noobish

Business hours in which timezone?

-Andrew.




From dshein at rochester.rr.com  Wed Jun 15 18:17:10 2011
From: dshein at rochester.rr.com (David Shein)
Date: Wed, 15 Jun 2011 20:17:10 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
	6/22 & 6/23
In-Reply-To: <20110616000857.GB30855@aihal.home.puzzling.org>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<20110616000857.GB30855@aihal.home.puzzling.org>
Message-ID: <5B953D1E-EA01-424C-AA6A-53F9982D718F@rochester.rr.com>

Thanks Andrew!
Business hours, Eastern Standard Time  (- 5 hrs GMT).

Dave
On Jun 15, 2011, at 8:08 PM, Andrew Bennetts wrote:

> David Shein wrote:
>>    Hey Twisted Developers,
>>
>>    I'm looking to get a half dozen devs who will commit to being  
>> on the
>>    Twisted IRC channel next Wed and Thurs during biz hours to  
>> answer noobish
>
> Business hours in which timezone?
>
> -Andrew.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Thu Jun 16 11:54:10 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Jun 2011 13:54:10 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
	6/22 & 6/23
In-Reply-To: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
Message-ID: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>


On Jun 15, 2011, at 4:10 PM, David Shein wrote:

> I'm looking to get a half dozen devs who will commit to being on the Twisted IRC channel next Wed and Thurs during biz hours to answer noobish queries from CS faculty working in an OS environment for the first time. One group will be working on Twisted bug tickets.  All the details are below.  If you are interested please LMK on the list, or you can email me directly at dshein at rochester.rr.com.  


While I do have to be, you know, working during work hours :), I'll try to be around to answer questions that these folks might have.  I encourage others to do the same: this sounds like a great way to get more contributors involved.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110616/79baea28/attachment.html>

From dshein at rochester.rr.com  Thu Jun 16 12:00:22 2011
From: dshein at rochester.rr.com (David Shein)
Date: Thu, 16 Jun 2011 14:00:22 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
	6/22 & 6/23
In-Reply-To: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
Message-ID: <CA7EA0CB-C629-4DC4-A59D-4A0DF5388DC2@rochester.rr.com>

Thanks Glyph,

This is a group of CS faculty and university staff after all, so yes,  
I think the likelihood is high that you could pick up an ongoing  
contributor or more.  Can't hurt either if some of these folks end up  
teaching courses in open source development--which is really POSSE's  
goal.

Dave Shein

On Jun 16, 2011, at 1:54 PM, Glyph Lefkowitz wrote:

>
> On Jun 15, 2011, at 4:10 PM, David Shein wrote:
>
>> I'm looking to get a half dozen devs who will commit to being on  
>> the Twisted IRC channel next Wed and Thurs during biz hours to  
>> answer noobish queries from CS faculty working in an OS  
>> environment for the first time. One group will be working on  
>> Twisted bug tickets.  All the details are below.  If you are  
>> interested please LMK on the list, or you can email me directly at  
>> dshein at rochester.rr.com.
>
>
> While I do have to be, you know, working during work hours :), I'll  
> try to be around to answer questions that these folks might have.   
> I encourage others to do the same: this sounds like a great way to  
> get more contributors involved.
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110616/4cd5d1f0/attachment.html>

From _ at lvh.cc  Thu Jun 16 12:28:49 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 16 Jun 2011 20:28:49 +0200
Subject: [Twisted-Python] Looking for Devs to answer noob questions on
 6/22 & 6/23
In-Reply-To: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
Message-ID: <BANLkTinJaz=w5cFRGfsdfxvykmMBaD4VCQ@mail.gmail.com>

On Thu, Jun 16, 2011 at 7:54 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> While I do have to be, you know, *working* during work hours :), I'll try
> to be around to answer questions that these folks might have.  I encourage
> others to do the same: this sounds like a great way to get more contributors
> involved.
>
> -glyph
>


Three cheers for drastically different timezones!


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110616/ea90393f/attachment.html>

From exarkun at twistedmatrix.com  Thu Jun 16 12:32:32 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 16 Jun 2011 18:32:32 -0000
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on	6/22 & 6/23
In-Reply-To: <C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
Message-ID: <20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>

On 05:54 pm, glyph at twistedmatrix.com wrote:
>
>On Jun 15, 2011, at 4:10 PM, David Shein wrote:
>>I'm looking to get a half dozen devs who will commit to being on the 
>>Twisted IRC channel next Wed and Thurs during biz hours to answer 
>>noobish queries from CS faculty working in an OS environment for the 
>>first time. One group will be working on Twisted bug tickets.  All the 
>>details are below.  If you are interested please LMK on the list, or 
>>you can email me directly at dshein at rochester.rr.com.
>
>
>While I do have to be, you know, working during work hours :), I'll try 
>to be around to answer questions that these folks might have.

Likewise.

Jean-Paul
>I encourage others to do the same: this sounds like a great way to get 
>more contributors involved.
>
>-glyph



From dshein at rochester.rr.com  Thu Jun 16 13:24:04 2011
From: dshein at rochester.rr.com (David Shein)
Date: Thu, 16 Jun 2011 15:24:04 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on	6/22 & 6/23
In-Reply-To: <20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>
References: <3969FA4E-03DB-411F-874A-69E10DD25A72@rochester.rr.com>
	<C208D266-DE4B-4D09-8A22-A0F3377297BA@twistedmatrix.com>
	<20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>
Message-ID: <AD6C6276-30C1-4707-B862-29A88EEA9118@rochester.rr.com>

Thanks Jean-Paul.  :  )

Dave Shein
On Jun 16, 2011, at 2:32 PM, exarkun at twistedmatrix.com wrote:

> On 05:54 pm, glyph at twistedmatrix.com wrote:
>>
>> On Jun 15, 2011, at 4:10 PM, David Shein wrote:
>>> I'm looking to get a half dozen devs who will commit to being on the
>>> Twisted IRC channel next Wed and Thurs during biz hours to answer
>>> noobish queries from CS faculty working in an OS environment for the
>>> first time. One group will be working on Twisted bug tickets.   
>>> All the
>>> details are below.  If you are interested please LMK on the list, or
>>> you can email me directly at dshein at rochester.rr.com.
>>
>>
>> While I do have to be, you know, working during work hours :),  
>> I'll try
>> to be around to answer questions that these folks might have.
>
> Likewise.
>
> Jean-Paul
>> I encourage others to do the same: this sounds like a great way to  
>> get
>> more contributors involved.
>>
>> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From burslem2001 at yahoo.com  Thu Jun 16 16:46:20 2011
From: burslem2001 at yahoo.com (gary clark)
Date: Thu, 16 Jun 2011 15:46:20 -0700 (PDT)
Subject: [Twisted-Python] Failure to connect remotely to MySQL database
In-Reply-To: <20110616183232.1894.804232967.divmod.xquotient.375@localhost.localdomain>
Message-ID: <260797.53552.qm@web112505.mail.gq1.yahoo.com>

Hello,

I am trying to connect a twisted server to a remote machine which contains the mysql database, unfortunately I cannot access the database am am seeing error:

Failed to load application: Cant connect to MySQL on server 192.168.1.10.

db=create_engine('mysql://root:pwd at 192.168.1.10/database',echo=True)

The databse machine has a number of restrictions on the firewall. I can ping the database machine and can see the that mysqld is running and enabled. What need to be open and enabled to access the mysql server from another machine i.e what port and connection type.

I dont see anything in the mysqld log.

Cheers,
Gary C




From orestis at orestis.gr  Thu Jun 16 16:52:37 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Fri, 17 Jun 2011 01:52:37 +0300
Subject: [Twisted-Python] Ideas for a Twisted Training
Message-ID: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>

Hello,

In a few days I'll be giving a 4h long training on Twisted in Europython 2011 in Firenze, Italy.

I have a lot of material covering basic concepts, such as writing servers, writing clients, deferreds etc. I'm now looking for other areas of functionality I should show. I have a bit web, will do a bit of pb. Any other pointers?

Also, if anyone else from the Twisted community is going to be there, let's have a drink.

Disclaimer - I don't claim I'm a twisted expert. At first I hated Twisted, now I love it. I hope in this training I will help people learn how to approach Twisted, before I forget all my sources of confusion.

Orestis


From burslem2001 at yahoo.com  Thu Jun 16 17:52:52 2011
From: burslem2001 at yahoo.com (gary clark)
Date: Thu, 16 Jun 2011 16:52:52 -0700 (PDT)
Subject: [Twisted-Python] Failure to connect remotely to MySQL database
In-Reply-To: <260797.53552.qm@web112505.mail.gq1.yahoo.com>
Message-ID: <636725.86680.qm@web112517.mail.gq1.yahoo.com>

OK needed to allow port 3306 for mysql. Grant accesses on the database.

Thanks,
Gary C


--- On Thu, 6/16/11, gary clark <burslem2001 at yahoo.com> wrote:

> From: gary clark <burslem2001 at yahoo.com>
> Subject: [Twisted-Python] Failure to connect remotely to MySQL database
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Date: Thursday, June 16, 2011, 5:46 PM
> Hello,
> 
> I am trying to connect a twisted server to a remote machine
> which contains the mysql database, unfortunately I cannot
> access the database am am seeing error:
> 
> Failed to load application: Cant connect to MySQL on server
> 192.168.1.10.
> 
> db=create_engine('mysql://root:pwd at 192.168.1.10/database',echo=True)
> 
> The databse machine has a number of restrictions on the
> firewall. I can ping the database machine and can see the
> that mysqld is running and enabled. What need to be open and
> enabled to access the mysql server from another machine i.e
> what port and connection type.
> 
> I dont see anything in the mysqld log.
> 
> Cheers,
> Gary C
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From atmb4u at gmail.com  Thu Jun 16 21:52:55 2011
From: atmb4u at gmail.com (Anoop Thomas Mathew)
Date: Fri, 17 Jun 2011 09:22:55 +0530
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <BANLkTimg9ieK_HS5BjZgGs2P+kirgMffcg@mail.gmail.com>

Hi Orestis,
It would be a great idea to record the entire session and publish somewhere
like youtube and post link on mailing list, so that every
twisted enthusiast can access it. I searched for video tutorials and found a
very few and all those were of either low quality or not worthy.

regards,
Anoop

atm
___
Life is short, Live it hard.




On 17 June 2011 04:22, Orestis Markou <orestis at orestis.gr> wrote:

> Hello,
>
> In a few days I'll be giving a 4h long training on Twisted in Europython
> 2011 in Firenze, Italy.
>
> I have a lot of material covering basic concepts, such as writing servers,
> writing clients, deferreds etc. I'm now looking for other areas of
> functionality I should show. I have a bit web, will do a bit of pb. Any
> other pointers?
>
> Also, if anyone else from the Twisted community is going to be there, let's
> have a drink.
>
> Disclaimer - I don't claim I'm a twisted expert. At first I hated Twisted,
> now I love it. I hope in this training I will help people learn how to
> approach Twisted, before I forget all my sources of confusion.
>
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110617/97c33c12/attachment.html>

From albert.brandl at weiermayer.com  Fri Jun 17 01:14:33 2011
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Fri, 17 Jun 2011 09:14:33 +0200
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <20110617071433.GA2570@weiermayer.com>

On Fri, Jun 17, 2011 at 01:52:37AM +0300, Orestis Markou wrote:
> I have a lot of material covering basic concepts, such as writing 
> servers, writing clients, deferreds etc. I'm now looking for other 
> areas of functionality I should show. I have a bit web, will do a bit 
> of pb. Any other pointers?

It might be fun to talk about manholes. They allow you to inspect and 
change data in a running server - great for debugging and mocking 
functionality that is not yet implemented (or not available in the 
development environment).

Regards,
-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From therve at free.fr  Fri Jun 17 04:05:54 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Fri, 17 Jun 2011 12:05:54 +0200
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <4DFB2702.1060305@free.fr>

Le 17/06/2011 00:52, Orestis Markou a écrit :
> Hello,

Hi!

> In a few days I'll be giving a 4h long training on Twisted in Europython 2011 in Firenze, Italy.
> 
> I have a lot of material covering basic concepts, such as writing servers, writing clients, deferreds etc. I'm now looking for other areas of functionality I should show. I have a bit web, will do a bit of pb. Any other pointers?

First thanks for having a tutorial, I think it's a great way to spread
the knowledge of Twisted around.

One thing which would be good to mention is testing: Twisted becomes
much easier if you manage to properly test your application, instead of
debugging with print statements around. You can look at the trial
tutorial in trunk to get some pointers:
http://twistedmatrix.com/trac/export/32129/trunk/doc/core/howto/trial.xhtml

Just talking about trial TestCase and returning Deferreds from tests is
a good start.

> Also, if anyone else from the Twisted community is going to be there, let's have a drink.

I'll be around starting Tuesday, happy to meet you here!

Cheers,

-- 
Thomas



From hs at ox.cx  Fri Jun 17 04:15:12 2011
From: hs at ox.cx (Hynek Schlawack)
Date: Fri, 17 Jun 2011 12:15:12 +0200
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <4DFB2702.1060305@free.fr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
	<4DFB2702.1060305@free.fr>
Message-ID: <BANLkTinbBGBoFcThueWsDPYUhnvN_Yk+mQ@mail.gmail.com>

Hi,

On Fri, Jun 17, 2011 at 12:05, Thomas Hervé <therve at free.fr> wrote:

>> Also, if anyone else from the Twisted community is going to be there, let's have a drink.
> I'll be around starting Tuesday, happy to meet you here!

Will there be a Twisted table at PyBeer/PyFiorentina? :)

Cheers,
-h, attending.



From techtonik at gmail.com  Fri Jun 17 04:18:28 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Fri, 17 Jun 2011 13:18:28 +0300
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
Message-ID: <BANLkTimK5H=Z_4gz-gXyBf+sACezAON3WQ@mail.gmail.com>

On Fri, Jun 17, 2011 at 1:52 AM, Orestis Markou <orestis at orestis.gr> wrote:
> Hello,
>
> In a few days I'll be giving a 4h long training on Twisted in Europython 2011 in Firenze, Italy.
>
> I have a lot of material covering basic concepts, such as writing servers, writing clients, deferreds etc. I'm now looking for other areas of functionality I should show. I have a bit web, will do a bit of pb. Any other pointers?

Well, it would be nice to get some near real time visualization of
Twisted reactor in Blender game engine. It may inspire a lot of people
to learn Twisted. Blender has a lot of potential for Python
visualizations. =) Unfortunately, my visa have just expired, so I
won't get to the conference this year to spread the idea.
--
anatoly t.



From peter.inglesby at gmail.com  Fri Jun 17 04:20:26 2011
From: peter.inglesby at gmail.com (Peter Inglesby)
Date: Fri, 17 Jun 2011 11:20:26 +0100
Subject: [Twisted-Python] Ideas for a Twisted Training
In-Reply-To: <BANLkTinbBGBoFcThueWsDPYUhnvN_Yk+mQ@mail.gmail.com>
References: <D728CF5B-A634-4BD5-9B88-CF6A9988467D@orestis.gr>
	<4DFB2702.1060305@free.fr>
	<BANLkTinbBGBoFcThueWsDPYUhnvN_Yk+mQ@mail.gmail.com>
Message-ID: <BANLkTikJF0qArFsTTkWYPKEahXWyQjt72g@mail.gmail.com>

>
>
> Will there be a Twisted table at PyBeer/PyFiorentina? :)
>
> If so, I'll be there!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110617/e8e64b0d/attachment-0001.html>

From ilja.livenson at gmail.com  Fri Jun 17 05:14:06 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Fri, 17 Jun 2011 13:14:06 +0200
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
Message-ID: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>

Hi,

I wonder if there are kind people here, who have implemented authN
against LDAP backend with twisted.cred and would be ok sharing the
code? Or even better - if this code could somehow make it into the
core package of Twisted.

thanks,
Ilja



From chris at emerge-life.de  Fri Jun 17 05:41:41 2011
From: chris at emerge-life.de (chris at emerge-life.de)
Date: Fri, 17 Jun 2011 13:41:41 +0200
Subject: [Twisted-Python]
	=?utf-8?q?twisted=2Ecred_implementation_for_LDAP?=
	=?utf-8?b?LCBhbnlvbmU/?=
In-Reply-To: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
Message-ID: <145-4dfb3d80-3-4c5ea780@38506918>

 Hi Ilja,

Am Freitag, 17. Juni 2011 13:14 CEST, Ilja Livenson <ilja.livenson at gmail.com> schrieb: 
> I wonder if there are kind people here, who have implemented authN
> against LDAP backend with twisted.cred and would be ok sharing the
> code? 

I believe the ldaptor project provides a LDAPBindingChecker to do just that.

Cheers,
Chris



From ilja.livenson at gmail.com  Fri Jun 17 05:47:22 2011
From: ilja.livenson at gmail.com (Ilja Livenson)
Date: Fri, 17 Jun 2011 13:47:22 +0200
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <145-4dfb3d80-3-4c5ea780@38506918>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
Message-ID: <BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>

Oh, great, thanks! Saw the project but didn't notice they have checker as well.

I.

On 17 June 2011 13:41, chris at emerge-life.de <chris at emerge-life.de> wrote:
>  Hi Ilja,
>
> Am Freitag, 17. Juni 2011 13:14 CEST, Ilja Livenson <ilja.livenson at gmail.com> schrieb:
>> I wonder if there are kind people here, who have implemented authN
>> against LDAP backend with twisted.cred and would be ok sharing the
>> code?
>
> I believe the ldaptor project provides a LDAPBindingChecker to do just that.
>
> Cheers,
> Chris
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Fri Jun 17 06:14:50 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 17 Jun 2011 08:14:50 -0400
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
Message-ID: <1308312890.14591.1.camel@blake>

On Fri, 2011-06-17 at 13:47 +0200, Ilja Livenson wrote:
> Oh, great, thanks! Saw the project but didn't notice they have checker as well.

Also note that unless it has been updated, there's a minor
incompatibility with modern Twisted (something about using
twisted.python.components instead of zope.interface IIRC), which is a
simple two line fix.




From kevin.horn at gmail.com  Fri Jun 17 11:10:09 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 17 Jun 2011 12:10:09 -0500
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <1308312890.14591.1.camel@blake>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
Message-ID: <BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>

On Fri, Jun 17, 2011 at 7:14 AM, Itamar Turner-Trauring <itamar at itamarst.org
> wrote:

> On Fri, 2011-06-17 at 13:47 +0200, Ilja Livenson wrote:
> > Oh, great, thanks! Saw the project but didn't notice they have checker as
> well.
>
> Also note that unless it has been updated, there's a minor
> incompatibility with modern Twisted (something about using
> twisted.python.components instead of zope.interface IIRC), which is a
> simple two line fix.
>
>
Also also note that the ldaptor project is now maintained here at github:

https://github.com/antong/ldaptor

Tommi V's old git repo is (AFAIK) no longer actively maintained.

I only mention it because it took me forever to find it last time I went
looking.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110617/e34ce948/attachment.html>

From ldanielburr at gmail.com  Fri Jun 17 11:55:40 2011
From: ldanielburr at gmail.com (L. Daniel Burr)
Date: Fri, 17 Jun 2011 12:55:40 -0500
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
Message-ID: <op.vw8erftso3d63n@tiassa.local>

Hi Kevin,

On Fri, 17 Jun 2011 12:10:09 -0500, Kevin Horn <kevin.horn at gmail.com>  
wrote:

> On Fri, Jun 17, 2011 at 7:14 AM, Itamar Turner-Trauring  
> <itamar at itamarst.org
>> wrote:
>
>> On Fri, 2011-06-17 at 13:47 +0200, Ilja Livenson wrote:
>> > Oh, great, thanks! Saw the project but didn't notice they have  
>> checker as
>> well.
>>
>> Also note that unless it has been updated, there's a minor
>> incompatibility with modern Twisted (something about using
>> twisted.python.components instead of zope.interface IIRC), which is a
>> simple two line fix.
>>
>>
> Also also note that the ldaptor project is now maintained here at github:
>
> https://github.com/antong/ldaptor
>
> Tommi V's old git repo is (AFAIK) no longer actively maintained.
>
> I only mention it because it took me forever to find it last time I went
> looking.
>


Thanks for the link, I had no idea ldaptor was still being maintained.   
That's great news.

As an aside, I recall that ldaptor never could become part of twisted, due  
to its licensing.  I didn't see any license information in the new repo; I  
assume the code is still GPL v2?

Thanks,

--
L. Daniel Burr
ldanielburr at mac.com



From orestis at orestis.gr  Sat Jun 18 00:56:51 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 09:56:51 +0300
Subject: [Twisted-Python] Real-world but self-contained example?
Message-ID: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>

Hello,

I'm trying to come up with a real-world example of performant twisted code to show as the conclusion of the europython training I'll be giving this Monday.

After much help in the #twisted channel, I've written a simple "website monitoring service". I'm trying to keep everything as small and self-contained as possible. There are 3 files, one with a very simple http GET implementation, one with a 1000 sites (some might be NSFW-this is taken from the Alexa site rank) and a simple web service that uses a couple of DeferredQueues and cooperate to do the actual work.

However, I find that still there are issues - sometimes the output will block completely, signifying a blocked reactor (?). I don't know what else to try and fix, apart from setting up a local DNS server to cache the DNS queries. I'd appreciate either

a) someone looking at the code and pointing out possible bugs or ways it could be improved or
b) someone pointing out a proven, scaling real-world project that shows examples of doing things like this

Thanks,
Orestis


 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: httpget2.py
Type: text/x-python-script
Size: 1519 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20110618/0996bfaa/attachment-0006.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: monitor7.py
Type: text/x-python-script
Size: 3653 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20110618/0996bfaa/attachment-0007.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sites.py
Type: text/x-python-script
Size: 15151 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20110618/0996bfaa/attachment-0008.bin>

From orestis at orestis.gr  Sat Jun 18 01:09:30 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 10:09:30 +0300
Subject: [Twisted-Python] Building API documentation
Message-ID: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>

Apologies for the flood of messages - I'm getting anxious about this training ;)

I'm looking for a way to build (or download) the API reference offline, so each trainee would have it locally for faster access. Looks like I should be using t.p._release.APIBuilder, but presumably there's an automated script to do all that (and change the included html docs to point there as well?).

One of the aims of the training is to teach people to grok the docs (and the source), so we'll be diving into the docs a lot.

Thanks,
Orestis


From jaroslaw.fedewicz at gmail.com  Sat Jun 18 01:17:29 2011
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Sat, 18 Jun 2011 10:17:29 +0300
Subject: [Twisted-Python] Building API documentation
In-Reply-To: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
References: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
Message-ID: <4DFC5109.2030904@gmail.com>

On 18/06/11 10:09, Orestis Markou wrote:
> Apologies for the flood of messages - I'm getting anxious about this training ;)
>
> I'm looking for a way to build (or download) the API reference offline, so each trainee would have it locally for faster access. Looks like I should be using t.p._release.APIBuilder, but presumably there's an automated script to do all that (and change the included html docs to point there as well?).
>
> One of the aims of the training is to teach people to grok the docs (and the source), so we'll be diving into the docs a lot.
>

I did it in the following way.

1. Get a fresh copy of Twisted. I use trunk, you might go with a release 
as well.

2. Get pydoctor. It's either in your distribution or on Launchpad: bzr 
branch lp:pydoctor.

2.1. Get Nevow. It's probably at lp:nevow, though I'm not sure. Might be 
in your distribution, too, so you can just use that.

3. Go into the toplevel directory of Twisted code.

4. Run something along the lines of
    pydoctor --make-html twisted

5. Have some coffee while pydoctor does its job.

6. Enjoy apidocs/index.html!



From orestis at orestis.gr  Sat Jun 18 01:29:04 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 10:29:04 +0300
Subject: [Twisted-Python] Twisted training slides
Message-ID: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>

Hi again,

I'd greatly appreciate if someone could have a quick look through my slides:

http://dl.dropbox.com/u/34284/twisted_training.pdf (64MB PDF)

and comment on possible inaccuracies or flat-out wrong things. I have simplified some things in the beginning, but I expand later on.

Many thanks,
Orestis


From _ at lvh.cc  Sat Jun 18 05:20:07 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sat, 18 Jun 2011 13:20:07 +0200
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
Message-ID: <BANLkTikZ2OcnRnTTRz0Q=dwrFB-gK8AhcA@mail.gmail.com>

Hey Orestis,

I'm driving around at the moment, but as soon as I get home I will take a
look at your slides. I will also be attending europython, so let's go grab a
beer :)
 On Jun 18, 2011 9:32 AM, "Orestis Markou" <orestis at orestis.gr> wrote:
> Hi again,
>
> I'd greatly appreciate if someone could have a quick look through my
slides:
>
> http://dl.dropbox.com/u/34284/twisted_training.pdf (64MB PDF)
>
> and comment on possible inaccuracies or flat-out wrong things. I have
simplified some things in the beginning, but I expand later on.
>
> Many thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110618/6e1e96a8/attachment-0001.html>

From jon at multani.info  Sat Jun 18 05:24:02 2011
From: jon at multani.info (Jonathan Ballet)
Date: Sat, 18 Jun 2011 20:24:02 +0900
Subject: [Twisted-Python] Real-world but self-contained example?
In-Reply-To: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>
References: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>
Message-ID: <20110618112401.GA4630@localhost>

[disclaimer: I'm a twisted newbie :) ]

On Sat, Jun 18, 2011 at 09:56:51AM +0300, Orestis Markou wrote:
> a) someone looking at the code and pointing out possible bugs or ways it could be improved or

I also reproduce the problem, so I tried to shutdown the HTTP GET first
to see what was going on, and I noticed two errors while running the code:

1) got_dns_error() is either called with a Twisted failure object (if
   the query fails) or with a Python exception if the address can't be
   resolved in _lookupName(), and the latter one doesn't have the
   getErrorMessage() method.

   I added a quick isinstance() call and now DNS resolving continues
   until all the names pool has been emptied.

2) However, at the end of the DNS lookups, I got the following error

2011-06-18 20:15:26+0900 [DNSProtocol,client] Unhandled Error
    Traceback (most recent call last):
      File "monitor7.py", line 126, in <module>
        reactor.run()
      File "/twisted/internet/base.py", line 1169, in run
        self.mainLoop()
      File "/twisted/internet/base.py", line 1181, in mainLoop
        self.doIteration(t)
      File "/twisted/internet/pollreactor.py", line 167, in doPoll
        log.callWithLogger(selectable, _drdw, selectable, fd, event)
    --- <exception caught here> ---
      File "/twisted/python/log.py", line 84, in callWithLogger
        return callWithContext({"system": lp}, func, *args, **kw)
      File "/twisted/python/log.py", line 69, in callWithContext
        return context.call({ILogContext: newCtx}, func, *args, **kw)
      File "/twisted/python/context.py", line 118, in callWithContext
        return self.currentContext().callWithContext(ctx, func, *args, **kw)
      File "/twisted/python/context.py", line 81, in callWithContext
        return func(*args,**kw)
      File "/twisted/internet/posixbase.py", line 587, in _doReadOrWrite
        self._disconnectSelectable(selectable, why, inRead)
      File "/twisted/internet/posixbase.py", line 257, in _disconnectSelectable
        selectable.readConnectionLost(f)
      File "/twisted/internet/tcp.py", line 221, in readConnectionLost
        self.connectionLost(reason)
      File "/twisted/internet/tcp.py", line 386, in connectionLost
        Connection.connectionLost(self, reason)
      File "/twisted/internet/tcp.py", line 232, in connectionLost
        protocol.connectionLost(reason)
      File "/twisted/names/dns.py", line 1863, in connectionLost
        self.controller.connectionLost(self)
    exceptions.AttributeError: Resolver instance has no attribute 'connectionLost'

  and I have no idea what's going on here. In this case, the
  DeferredList callback never got called.

My 2 cents,

 Jonathan



From jessica.mckellar at gmail.com  Sat Jun 18 06:54:45 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Sat, 18 Jun 2011 08:54:45 -0400
Subject: [Twisted-Python] Building API documentation
In-Reply-To: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
References: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
Message-ID: <BANLkTi=Ro2+PyUKWVBnM5U-VhUHxnabLBQ@mail.gmail.com>

Hi Orestis,

http://twistedmatrix.com/trac/wiki/ReviewingDocumentation#EditingAPIDocsdescribes
building the API docs.

Regards,
-Jessica

On Sat, Jun 18, 2011 at 3:09 AM, Orestis Markou <orestis at orestis.gr> wrote:

> Apologies for the flood of messages - I'm getting anxious about this
> training ;)
>
> I'm looking for a way to build (or download) the API reference offline, so
> each trainee would have it locally for faster access. Looks like I should be
> using t.p._release.APIBuilder, but presumably there's an automated script to
> do all that (and change the included html docs to point there as well?).
>
> One of the aims of the training is to teach people to grok the docs (and
> the source), so we'll be diving into the docs a lot.
>
> Thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110618/6fafb2fa/attachment.html>

From ahsorrytigger-fibs at yahoo.de  Sat Jun 18 12:32:32 2011
From: ahsorrytigger-fibs at yahoo.de (Andreas Hausmann)
Date: Sat, 18 Jun 2011 18:32:32 +0000 (UTC)
Subject: [Twisted-Python] Twisted training slides
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
Message-ID: <itiqvv$k71$1@dough.gmane.org>

Hi,

I am Andreas. I used twisted to build an online backgammon server. I'll
post some on that later. My knowledge goes as far as server, client,
deferreds and plugins. Based on twisted core tutorial.

Orestis Markou wrote:

> [...]
> and comment on possible inaccuracies or flat-out wrong things. I have simplified some things in the beginning, but I expand later on.
> [...]

Unfortunately I went through slides 1-120 only. I have to stop now.
Maybe I can finish tomorrow morning. 

Alltogether it looks like very good roundup for newbies, showing all
important features. I like the style of the presentation.

Here my remarks so far:

I've been reading through it:
-----------------------------

- Slides 39<->40; the header changes from "Listen on a port"
to "Listen at a port". That unneccessarily distracts attention. (little
thing)

- Slide 100: I haven't gotten it. Maybe lack of knowledge on my side.

- Slides 108, 109 seem identical


I've been working through it (run this!):
-----------------------------------------

- Slide 48: Output doesn't correspond to code (slide 47).

- Exercise 2b: quite tough :), if you care to know. I was misled by your
examples the slides before (slides 99-103). I didn't see you were
heading to the use of deferreds throughout the code (_getPage),
despite your hint (defer.succeed()).


Hope, this helps
Andreas






From jstpierre at mecheye.net  Sat Jun 18 13:17:49 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Sat, 18 Jun 2011 15:17:49 -0400
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
Message-ID: <BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>

Quick go-through:

  * Slide 50: Exercise 1 seems a bit poor -- it relies on the factory,
which you haven't introduced other than "oh hey there's this factory
attribute"

  * The panini stall metaphor goes on for way too long (IMO) and
doesn't really make sense.

  * Slide 92: I think having the callback being a method would make a
bit more sense.

  * Slide 100: I don't understand it. getRedirect doesn't exist, and
you should use 'return defer.succeed(data)' instead of 'return data'.

  * Slide 124: As I understand, DeferredList is a bit dated, and you
should use gatherResults instead -- it returns a deferred, and it
hands you a list of all the results in the callback. The dialogue is
also a bit repetitive (a list of Deferreds! I hand it a list of
Deferreds!) and the next slide has a typo header change.

  * Slide 133: You don't really introduce 'Deferred.callback', so I'd
recommend you do that. (I need to finish what I started with the
Deferred documentation improvements, I know)

  * Slide 137: I think a lot of people are going to just "reimplement"
it using getPage -- and I don't know why you'd want to create a poor
HTTP client when there's one built-in, and you're using it in
examples.

  * Slide 162: I think your examples would benefit by putting the
entire code on the screen at once, side-by-side: regular try/except on
the left, and errbacks on the right. Instead of replacing the slide to
point out some part of the example, highlight it instead. Do the same
for slides 167-168.

... and that's about all I read.

On Sat, Jun 18, 2011 at 3:29 AM, Orestis Markou <orestis at orestis.gr> wrote:
> Hi again,
>
> I'd greatly appreciate if someone could have a quick look through my slides:
>
> http://dl.dropbox.com/u/34284/twisted_training.pdf (64MB PDF)
>
> and comment on possible inaccuracies or flat-out wrong things. I have simplified some things in the beginning, but I expand later on.
>
> Many thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From orestis at orestis.gr  Sat Jun 18 14:30:22 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 23:30:22 +0300
Subject: [Twisted-Python] Building API documentation
In-Reply-To: <BANLkTi=Ro2+PyUKWVBnM5U-VhUHxnabLBQ@mail.gmail.com>
References: <B02F2DA3-13E7-4BDD-A61B-515296A87A1D@orestis.gr>
	<BANLkTi=Ro2+PyUKWVBnM5U-VhUHxnabLBQ@mail.gmail.com>
Message-ID: <8FB5B4D0-A807-438F-99A8-6D8B73F3D71D@orestis.gr>

Thanks, I managed to do that. For future reference, I just download a tarball of nevow out of launchpad's ubuntu distribution.

On 18 Jun 2011, at 15:54, Jessica McKellar wrote:

> Hi Orestis,
> 
> http://twistedmatrix.com/trac/wiki/ReviewingDocumentation#EditingAPIDocs describes building the API docs.
> 
> Regards,
> -Jessica
> 
> On Sat, Jun 18, 2011 at 3:09 AM, Orestis Markou <orestis at orestis.gr> wrote:
> Apologies for the flood of messages - I'm getting anxious about this training ;)
> 
> I'm looking for a way to build (or download) the API reference offline, so each trainee would have it locally for faster access. Looks like I should be using t.p._release.APIBuilder, but presumably there's an automated script to do all that (and change the included html docs to point there as well?).
> 
> One of the aims of the training is to teach people to grok the docs (and the source), so we'll be diving into the docs a lot.
> 
> Thanks,
> Orestis
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From orestis at orestis.gr  Sat Jun 18 14:35:41 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 18 Jun 2011 23:35:41 +0300
Subject: [Twisted-Python] Real-world but self-contained example?
In-Reply-To: <20110618112401.GA4630@localhost>
References: <6FC30C2F-D7B9-4805-83E3-3D2E9D44B452@orestis.gr>
	<20110618112401.GA4630@localhost>
Message-ID: <EF115EDD-C21C-4256-AED8-2E363CB628B6@orestis.gr>

Thanks, the first error slipped through. The even more curious problem is why should that ever happen - getHostByName returns "None" for the address there, when it should errback. It looks like there might be an issue with twisted.names, but I've learned to blame my code at first, esp for things I'm not sure I understand clearly.


On 18 Jun 2011, at 14:24, Jonathan Ballet wrote:

> [disclaimer: I'm a twisted newbie :) ]
> 
> On Sat, Jun 18, 2011 at 09:56:51AM +0300, Orestis Markou wrote:
>> a) someone looking at the code and pointing out possible bugs or ways it could be improved or
> 
> I also reproduce the problem, so I tried to shutdown the HTTP GET first
> to see what was going on, and I noticed two errors while running the code:
> 
> 1) got_dns_error() is either called with a Twisted failure object (if
>   the query fails) or with a Python exception if the address can't be
>   resolved in _lookupName(), and the latter one doesn't have the
>   getErrorMessage() method.
> 
>   I added a quick isinstance() call and now DNS resolving continues
>   until all the names pool has been emptied.
> 
> 2) However, at the end of the DNS lookups, I got the following error
> 
> 2011-06-18 20:15:26+0900 [DNSProtocol,client] Unhandled Error
>    Traceback (most recent call last):
>      File "monitor7.py", line 126, in <module>
>        reactor.run()
>      File "/twisted/internet/base.py", line 1169, in run
>        self.mainLoop()
>      File "/twisted/internet/base.py", line 1181, in mainLoop
>        self.doIteration(t)
>      File "/twisted/internet/pollreactor.py", line 167, in doPoll
>        log.callWithLogger(selectable, _drdw, selectable, fd, event)
>    --- <exception caught here> ---
>      File "/twisted/python/log.py", line 84, in callWithLogger
>        return callWithContext({"system": lp}, func, *args, **kw)
>      File "/twisted/python/log.py", line 69, in callWithContext
>        return context.call({ILogContext: newCtx}, func, *args, **kw)
>      File "/twisted/python/context.py", line 118, in callWithContext
>        return self.currentContext().callWithContext(ctx, func, *args, **kw)
>      File "/twisted/python/context.py", line 81, in callWithContext
>        return func(*args,**kw)
>      File "/twisted/internet/posixbase.py", line 587, in _doReadOrWrite
>        self._disconnectSelectable(selectable, why, inRead)
>      File "/twisted/internet/posixbase.py", line 257, in _disconnectSelectable
>        selectable.readConnectionLost(f)
>      File "/twisted/internet/tcp.py", line 221, in readConnectionLost
>        self.connectionLost(reason)
>      File "/twisted/internet/tcp.py", line 386, in connectionLost
>        Connection.connectionLost(self, reason)
>      File "/twisted/internet/tcp.py", line 232, in connectionLost
>        protocol.connectionLost(reason)
>      File "/twisted/names/dns.py", line 1863, in connectionLost
>        self.controller.connectionLost(self)
>    exceptions.AttributeError: Resolver instance has no attribute 'connectionLost'
> 
>  and I have no idea what's going on here. In this case, the
>  DeferredList callback never got called.
> 
> My 2 cents,
> 
> Jonathan
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From andrew at bemusement.org  Sat Jun 18 18:06:29 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Sun, 19 Jun 2011 10:06:29 +1000
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>
Message-ID: <20110619000629.GJ30855@aihal.home.puzzling.org>

Jasper St. Pierre wrote:
[…]
>   * Slide 124: As I understand, DeferredList is a bit dated, and you
> should use gatherResults instead -- it returns a deferred, and it
> hands you a list of all the results in the callback. The dialogue is
> also a bit repetitive (a list of Deferreds! I hand it a list of
> Deferreds!) and the next slide has a typo header change.

DeferredList isn't dated exactly.  You should definitely prefer
gatherResults if it suits your situation, because it is a simpler and
easier API.  But DeferredList is more capable, it provides more
functionality (at the cost of being more complex to used).
gatherResults is implemented using DeferredList.

If it really were something to avoid entirely in favour of a newer
replacement we would have deprecated it by now :)

(IIRC there are actually one or two tickets about replacing it with
something better, but until that happens, it's certainly reasonable to
use.)

-Andrew.



From glyph at twistedmatrix.com  Sat Jun 18 19:14:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jun 2011 21:14:56 -0400
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <20110619000629.GJ30855@aihal.home.puzzling.org>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<BANLkTi=Bxpc+Tu_4d4ZvADSWYSW2mrj3Zg@mail.gmail.com>
	<20110619000629.GJ30855@aihal.home.puzzling.org>
Message-ID: <A39C29B0-4E5B-43EE-98AA-21552C7FCB9E@twistedmatrix.com>


On Jun 18, 2011, at 8:06 PM, Andrew Bennetts wrote:

> Jasper St. Pierre wrote:
> […]
>>  * Slide 124: As I understand, DeferredList is a bit dated, and you
>> should use gatherResults instead -- it returns a deferred, and it
>> hands you a list of all the results in the callback. The dialogue is
>> also a bit repetitive (a list of Deferreds! I hand it a list of
>> Deferreds!) and the next slide has a typo header change.
> 
> DeferredList isn't dated exactly.  You should definitely prefer
> gatherResults if it suits your situation, because it is a simpler and
> easier API.  But DeferredList is more capable, it provides more
> functionality (at the cost of being more complex to used).
> gatherResults is implemented using DeferredList.
> 
> If it really were something to avoid entirely in favour of a newer
> replacement we would have deprecated it by now :)
> 
> (IIRC there are actually one or two tickets about replacing it with
> something better, but until that happens, it's certainly reasonable to
> use.)

The ticket I can find quickly is <http://tm.tl/4977>.  Worth noting is that this ticket doesn't propose any major changes to the interface, except that it won't be a type, so you won't be able to do isinstance(x, DeferredList) any more.  But you shouldn't be doing this now, because nothing really needs to subclass Deferred.

So, when that replacement does arrive, as it stands now, changing one import line should be all you need to do to update your code.

If somebody wants to propose some changes in the new and improved version, commenting on that ticket would be a good place to start. :)


From exarkun at twistedmatrix.com  Sat Jun 18 22:05:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Jun 2011 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1308456323.25.1222084123@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110619/473028df/attachment.html>

From ahsorrytigger-fibs at yahoo.de  Sun Jun 19 05:24:34 2011
From: ahsorrytigger-fibs at yahoo.de (Andreas Hausmann)
Date: Sun, 19 Jun 2011 11:24:34 +0000 (UTC)
Subject: [Twisted-Python] Twisted training slides
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<itiqvv$k71$1@dough.gmane.org>
Message-ID: <itkm9i$i0r$1@dough.gmane.org>

Andreas Hausmann wrote:


> [...]
> Unfortunately I went through slides 1-120 only. I have to stop now.
> Maybe I can finish tomorrow morning. 
> [...]


here comes the rest:

slide 121: in my case, output was perfectly sorted. Here it is B A C D?

slide 125: typo in header "DefferedList"

>From exercise 3 on I had to scan through quickly. I got lost on slide
156 because I didn't understand that assertion. That might happen to
some in the audience at this point.

Summary: I for myself will walk through the rest of your exercises as I
believe my understanding will profit from it. As a talk, it is too much.
As a workshop I'd say 2 hours the least. But a very good presentation
alltogether.

Andreas




From orestis at orestis.gr  Sun Jun 19 07:41:14 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sun, 19 Jun 2011 15:41:14 +0200
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <itkm9i$i0r$1@dough.gmane.org>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>
	<itiqvv$k71$1@dough.gmane.org> <itkm9i$i0r$1@dough.gmane.org>
Message-ID: <228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>

Many thanks to everyone for the feedback. I will continue to work in this as much as possible.

This is a 4 hour training, so we should have enough time.

I will post the final slides after the training, tomorrow.

--
orestis.gr

19 Ιουν 2011, 13:24, ο/η Andreas Hausmann <ahsorrytigger-fibs at yahoo.de> έγραψε:

> Andreas Hausmann wrote:
> 
> 
>> [...]
>> Unfortunately I went through slides 1-120 only. I have to stop now.
>> Maybe I can finish tomorrow morning. 
>> [...]
> 
> 
> here comes the rest:
> 
> slide 121: in my case, output was perfectly sorted. Here it is B A C D?
> 
> slide 125: typo in header "DefferedList"
> 
> From exercise 3 on I had to scan through quickly. I got lost on slide
> 156 because I didn't understand that assertion. That might happen to
> some in the audience at this point.
> 
> Summary: I for myself will walk through the rest of your exercises as I
> believe my understanding will profit from it. As a talk, it is too much.
> As a workshop I'd say 2 hours the least. But a very good presentation
> alltogether.
> 
> Andreas
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From platsakos at gmail.com  Sun Jun 19 16:05:10 2011
From: platsakos at gmail.com (AK)
Date: Mon, 20 Jun 2011 01:05:10 +0300
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>	<itiqvv$k71$1@dough.gmane.org>
	<itkm9i$i0r$1@dough.gmane.org>
	<228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>
Message-ID: <4DFE7296.8090504@gmail.com>

Thanks for the useful slides Orestis. Once you have finalized them, is
it ok to provide a link towards them from my blog or they are bound with
the specific training session?
Cheers!

On 06/19/2011 04:41 PM, Orestis Markou wrote:
> Many thanks to everyone for the feedback. I will continue to work in this as much as possible.
>
> This is a 4 hour training, so we should have enough time.
>
> I will post the final slides after the training, tomorrow.
>
> --
> orestis.gr
>
> 19 Ιουν 2011, 13:24, ο/η Andreas Hausmann <ahsorrytigger-fibs at yahoo.de> έγραψε:
>
>> Andreas Hausmann wrote:
>>
>>
>>> [...]
>>> Unfortunately I went through slides 1-120 only. I have to stop now.
>>> Maybe I can finish tomorrow morning. 
>>> [...]
>>
>> here comes the rest:
>>
>> slide 121: in my case, output was perfectly sorted. Here it is B A C D?
>>
>> slide 125: typo in header "DefferedList"
>>
>> From exercise 3 on I had to scan through quickly. I got lost on slide
>> 156 because I didn't understand that assertion. That might happen to
>> some in the audience at this point.
>>
>> Summary: I for myself will walk through the rest of your exercises as I
>> believe my understanding will profit from it. As a talk, it is too much.
>> As a workshop I'd say 2 hours the least. But a very good presentation
>> alltogether.
>>
>> Andreas
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
What is the air-speed velocity of an unladen swallow? 




From david at silveregg.co.jp  Mon Jun 20 01:00:38 2011
From: david at silveregg.co.jp (David)
Date: Mon, 20 Jun 2011 16:00:38 +0900
Subject: [Twisted-Python] Handling application initialization synchronously
Message-ID: <4DFEF016.1000603@silveregg.co.jp>

Hi,

	I was wondering what's the recommended way to initialize a "complex" 
twisted application. Typically, let's say I have an application which 
needs to create a couple of "heavy" objects, each of which may create 
mysql db/tables:

class MyApplication(object):
     def __init__(self):
         # object1 and object2 may need to interact with MySQL,
         # and object2 assumes that object1 is completely initialized
         object1 = SomeClass1()
         object2 = SomeClass2()

Writing this kind of code asynchronously seems very tedious. My current 
solution is to use non-twisted, blocking API, but there may be a more 
elegant solution ? My main issue with using blocking API is that I 
sometimes have to write the same kind of code twice (one blocking, one 
non blocking).

cheers,

David



From orestis at orestis.gr  Mon Jun 20 02:57:50 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Mon, 20 Jun 2011 10:57:50 +0200
Subject: [Twisted-Python] Twisted training slides
In-Reply-To: <4DFE7296.8090504@gmail.com>
References: <A953D368-53D7-46E6-A3AD-50636511AA67@orestis.gr>	<itiqvv$k71$1@dough.gmane.org>
	<itkm9i$i0r$1@dough.gmane.org>
	<228CD0F5-639D-4119-894D-FB0199386770@orestis.gr>
	<4DFE7296.8090504@gmail.com>
Message-ID: <D5884C0D-4002-4380-B96D-A5BCF72F901E@orestis.gr>

I will try to make a proper tutorial out of them - please don't spread that file around, I'll remove it at some point.
On 20 Jun 2011, at 00:05, AK wrote:

> Thanks for the useful slides Orestis. Once you have finalized them, is
> it ok to provide a link towards them from my blog or they are bound with
> the specific training session?
> Cheers!
> 
> On 06/19/2011 04:41 PM, Orestis Markou wrote:
>> Many thanks to everyone for the feedback. I will continue to work in this as much as possible.
>> 
>> This is a 4 hour training, so we should have enough time.
>> 
>> I will post the final slides after the training, tomorrow.
>> 
>> --
>> orestis.gr
>> 
>> 19 Ιουν 2011, 13:24, ο/η Andreas Hausmann <ahsorrytigger-fibs at yahoo.de> έγραψε:
>> 
>>> Andreas Hausmann wrote:
>>> 
>>> 
>>>> [...]
>>>> Unfortunately I went through slides 1-120 only. I have to stop now.
>>>> Maybe I can finish tomorrow morning. 
>>>> [...]
>>> 
>>> here comes the rest:
>>> 
>>> slide 121: in my case, output was perfectly sorted. Here it is B A C D?
>>> 
>>> slide 125: typo in header "DefferedList"
>>> 
>>> From exercise 3 on I had to scan through quickly. I got lost on slide
>>> 156 because I didn't understand that assertion. That might happen to
>>> some in the audience at this point.
>>> 
>>> Summary: I for myself will walk through the rest of your exercises as I
>>> believe my understanding will profit from it. As a talk, it is too much.
>>> As a workshop I'd say 2 hours the least. But a very good presentation
>>> alltogether.
>>> 
>>> Andreas
>>> 
>>> 
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> -- 
> What is the air-speed velocity of an unladen swallow? 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From orestis at orestis.gr  Mon Jun 20 03:04:27 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Mon, 20 Jun 2011 11:04:27 +0200
Subject: [Twisted-Python] Question about "starving" the reactor
Message-ID: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>

Hello,

I have a question about the "best practices" on making callbacks and making sure you don't hog the reactor.

So you pass a deferred to a client, who attaches a chain of callbacks that might probably do some CPU intensive stuff. How should one guard for that? The obvious solution to me for the server part would be to do

reactor.callLater(0, d.callback, arg)

insted of

d.callback(arg)


What about the client part? What would be the best way to have a chain of callbacks executed in such a way that the reactor isn't blocking during that time?

Thanks,
Orestis




From p.mayers at imperial.ac.uk  Mon Jun 20 04:10:34 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Jun 2011 11:10:34 +0100
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
Message-ID: <4DFF1C9A.9000101@imperial.ac.uk>

On 06/20/2011 10:04 AM, Orestis Markou wrote:
> Hello,
>
> I have a question about the "best practices" on making callbacks and
> making sure you don't hog the reactor.
>
> So you pass a deferred to a client, who attaches a chain of callbacks

Who is "you" and who is "client"?

> that might probably do some CPU intensive stuff. How should one guard
> for that? The obvious solution to me for the server part would be to
> do

AIUI, callback/errback (or indeed any Twisted function) should not 
block, which means if they're doing any significant quantity of work 
they should deferToThread or use a task.cooperator to break it into chunks.

You can return a deferred from a callback to pause processing, so this 
is very easy to implement:

def my_callback(data):
   d = deferToThread(factor_some_prime, data['number'])
   d.addCallback(lambda x: 'prime factors are '+repr(x))
   return d

>
> reactor.callLater(0, d.callback, arg)

That can help in some cases. Specifically if you're receiving datagrams, 
you might want to service the read() loop as much as possible before 
packets start to get dropped. But if d.callback is going to do a lot of 
work, it doesn't solve the problem - just delays it.

callbacks/errbacks should not do a lot of work.

>
> insted of
>
> d.callback(arg)
>
>
> What about the client part? What would be the best way to have a

I don't really understand what you mean by client and server part. A 
deferred is just a deferred. They don't even have to be used in a 
network context.



From orestis at orestis.gr  Mon Jun 20 04:29:13 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Mon, 20 Jun 2011 12:29:13 +0200
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <4DFF1C9A.9000101@imperial.ac.uk>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
Message-ID: <F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>

>> reactor.callLater(0, d.callback, arg)
> 
> That can help in some cases. Specifically if you're receiving datagrams, 
> you might want to service the read() loop as much as possible before 
> packets start to get dropped. But if d.callback is going to do a lot of 
> work, it doesn't solve the problem - just delays it.
> 
> callbacks/errbacks should not do a lot of work.
> 
>> 
>> insted of
>> 
>> d.callback(arg)
>> 
>> 
>> What about the client part? What would be the best way to have a
> 
> I don't really understand what you mean by client and server part. A 
> deferred is just a deferred. They don't even have to be used in a 
> network context.

By "server" I mean my application's API, by "client" I mean someone else that will go and attach callbacks to deferreds I will return.
I guess the question is, what is the best way to guard my application against callbacks that are doing a lot of work. But probably I'm confused by conflating the neglecting read() loop with starving the reactor.

It might be there's no way to do guarantee something like that, so it might be just that everyone should be careful about this.


From p.mayers at imperial.ac.uk  Mon Jun 20 05:39:22 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Jun 2011 12:39:22 +0100
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
Message-ID: <4DFF316A.8090506@imperial.ac.uk>

On 20/06/11 11:29, Orestis Markou wrote:

> By "server" I mean my application's API, by "client" I mean someone
> else that will go and attach callbacks to deferreds I will return. I
> guess the question is, what is the best way to guard my application
> against callbacks that are doing a lot of work. But probably I'm
> confused by conflating the neglecting read() loop with starving the
> reactor.
>
> It might be there's no way to do guarantee something like that, so it
> might be just that everyone should be careful about this.

I don't think you can stop callers of a function doing silly things with 
the return value.



From itamar at itamarst.org  Mon Jun 20 06:24:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 20 Jun 2011 08:24:28 -0400
Subject: [Twisted-Python] Handling application initialization
 synchronously
In-Reply-To: <4DFEF016.1000603@silveregg.co.jp>
References: <4DFEF016.1000603@silveregg.co.jp>
Message-ID: <1308572668.14591.35.camel@blake>

On Mon, 2011-06-20 at 16:00 +0900, David wrote:
> Hi,
> 
> 	I was wondering what's the recommended way to initialize a "complex" 
> twisted application. Typically, let's say I have an application which 
> needs to create a couple of "heavy" objects, each of which may create 
> mysql db/tables:

You could create all of the objects you need in one runInteraction call,
maybe?




From glyph at twistedmatrix.com  Mon Jun 20 09:09:40 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jun 2011 11:09:40 -0400
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <4DFF316A.8090506@imperial.ac.uk>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
Message-ID: <2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>

On Jun 20, 2011, at 7:39 AM, Phil Mayers wrote:

> On 20/06/11 11:29, Orestis Markou wrote:
> 
>> By "server" I mean my application's API, by "client" I mean someone
>> else that will go and attach callbacks to deferreds I will return. I
>> guess the question is, what is the best way to guard my application
>> against callbacks that are doing a lot of work. But probably I'm
>> confused by conflating the neglecting read() loop with starving the
>> reactor.
>> 
>> It might be there's no way to do guarantee something like that, so it
>> might be just that everyone should be careful about this.
> 
> I don't think you can stop callers of a function doing silly things with 
> the return value.

+1.  The best way to deal with this is to make your APIs nice and simple, and their implementation straightforward.  If you try to do weird tricks to make callbacks on your Deferreds cooperative, then you might break an otherwise reasonable strategy on the part of the client code to be well-behaved on their part.

For the code that is itself trying to be well-behaved, there are things like twisted.internet.task.cooperate.




From luke-lists at hybrid-logic.co.uk  Mon Jun 20 10:23:41 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Mon, 20 Jun 2011 17:23:41 +0100
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
	<2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
Message-ID: <1308587021.18253.57.camel@behemoth>

On Mon, 2011-06-20 at 11:09 -0400, Glyph Lefkowitz wrote:
> On Jun 20, 2011, at 7:39 AM, Phil Mayers wrote:
> > On 20/06/11 11:29, Orestis Markou wrote:
> >> It might be there's no way to do guarantee something like that, so it
> >> might be just that everyone should be careful about this.
> > 
> > I don't think you can stop callers of a function doing silly things with 
> > the return value.
> 
> +1.  The best way to deal with this is to make your APIs nice and
> simple, and their implementation straightforward.  If you try to do
> weird tricks to make callbacks on your Deferreds cooperative, then you
> might break an otherwise reasonable strategy on the part of the client
> code to be well-behaved on their part.
> 
> For the code that is itself trying to be well-behaved, there are
> things like twisted.internet.task.cooperate.

There might not be any way to stop consumers of your Deferreds executing
blocking operations, but when trying to track down which pieces of code
are the culprits, I found exarkun's BigTimesliceTimer very useful:

http://twistedmatrix.com/trac/browser/sandbox/exarkun/btt.py

It uses a reactor-independent timing mechanism (the setitimer sigcall on
Linux, contact me if you want the FreeBSD version) to set an alarm which
the reactor then has to "race" to unset, else the itimer handler gets
pre-emptively executed.  When the alarm runs, it prints a traceback of
the current execution point in the "client" code.  By setting the alarm
frequency sufficiently low and by watching for sufficiently long you can
"sample" the code which is running while the reactor is blocked.  Code
paths which show up frequently are therefore *more likely* to be the
culprits.

One day it would be nice to turn this into some kind of statistical tool
for highlighting which code paths are the "hot-spots" in your code, so
that you can optimise the "blockiest" bits first.  Premature
optimisation, etc.

Hope this helps; it helped me :-)

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Phone: +447791750420




From terry at jon.es  Mon Jun 20 13:51:35 2011
From: terry at jon.es (Terry Jones)
Date: Mon, 20 Jun 2011 21:51:35 +0200
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: Your message at 17:23:41 on Monday, 20 June 2011
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
	<2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
	<1308587021.18253.57.camel@behemoth>
Message-ID: <19967.42183.914380.109434@jon.es>

I posted to the mailing list a few years back with a Deferred class that
can log what callbacks were called, what result they returned, etc. It
would be very easy to add callback timing information to that. You'd just
insert a callback into the chain of any deferred you wanted to monitor to
have it log the timing of the various calls that were made. See:

  http://twistedmatrix.com/pipermail/twisted-python/2008-October/018535.html

T



From jml at mumak.net  Tue Jun 21 04:15:37 2011
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 21 Jun 2011 11:15:37 +0100
Subject: [Twisted-Python] txStatsD - A Twisted-based StatsD server
In-Reply-To: <BANLkTi=VZcKfh0sZoAkNuPNkjBJMN5iG-w@mail.gmail.com>
References: <BANLkTi=VZcKfh0sZoAkNuPNkjBJMN5iG-w@mail.gmail.com>
Message-ID: <BANLkTikf8tPfu=-PYV-yRLqf3kqBjH9qMQ@mail.gmail.com>

Sidnei da Silva of Canonical wrote a StatsD server with Twisted. I
thought it was pretty neat, and thus worth sharing with
twisted-python at .

jml

---------- Forwarded message ----------
From: Sidnei da Silva <sidnei.da.silva at canonical.com>
Date: Tue, Jun 21, 2011 at 7:27 AM
Subject: [Canonical-tech] txStatsD - A Twisted-based StatsD server
To: Canonical Tech <canonical-tech at lists.launchpad.net>


Since we're looking into using Graphite in Landscape, and since I know
UbuntuOne is adding Graphite stats left and right and saw their
struggle with getting nodejs backported to Lucid so that they could
run StatsD, I thought I could sharpen my Twisted axe by porting StatsD
to Twisted.

 http://launchpad.net/txstatsd

For reference, StatsD
(https://github.com/etsy/statsd/blob/master/stats.js) is a UDP-based
server which collects and aggregates data at a configurable minimum
resolution, then forwards it to Graphite (which talks TCP). UDP was
chosen by StatsD since it's stateless, which means that the StatsD
server can be down without taking the application being graphed down
(some data can be lost but no downtime is incurred).

Bonus points to Twisted for ReconnectingClientFactory,
LineOnlyReceiver and LoopingCall, which make the Twisted version not
just more fun but also more robust.

Reviews from people with Twisted experience are more than welcome.

--
Sidnei

Make the most of Ubuntu with Landscape
http://landscape.canonical.com

_______________________________________________
Mailing list: https://launchpad.net/~canonical-tech
Post to     : canonical-tech at lists.launchpad.net
Unsubscribe : https://launchpad.net/~canonical-tech
More help   : https://help.launchpad.net/ListHelp



From stephen at thorne.id.au  Tue Jun 21 10:17:14 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Tue, 21 Jun 2011 18:17:14 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
Message-ID: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>

G'day,

Here at europython there was an excellent tutorial given on the first
afternoon that was so well attended and regarded that a repeat is
being done tomorrow afternoon (24 hours from this posting).

I was asked by the person running the training to give him a hand
because it's quite tiring doing a multi-hour training twice in a week,
and he specifically mentioned that it would be nice to have an example
of best practice with regard to making a working twisted program into
a 'production ready' deployable piece of code.

So I wrote this example which is a skeleton of how to set up a twistd
plugin and how to invoke it:

https://bitbucket.org/jerub/twisted-plugin-example

I would appreciate any comments, patches or criticisms between now and
tomorrow. (hg email anything to my address, stephen at thorne.id.au, fork
and push to bitbucket, or just email the list to yell at me).

Thanks!
Stephen.



From dshein at rochester.rr.com  Tue Jun 21 10:51:54 2011
From: dshein at rochester.rr.com (David Shein)
Date: Tue, 21 Jun 2011 12:51:54 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on6/22 & 6/23 POSTPONED UNTIL AUGUST
Message-ID: <401C48A1-816D-4096-8F47-A4C905AB1712@rochester.rr.com>

Hi Glyph & Jean-Paul & Whomever else volunteered,

My partner for POSSE had a family health emergency on Friday, so we  
have had to postpone the boot-camp.  We will be doing POSSE RIT in  
the second week of August.  So our code sprint is now scheduled be on  
August 9th and 10th.   I will ping the list again as we get closer.   
I want to say thank you to those who volunteered; I really appreciate  
your getting back to me.  Anyone who is considering helping, I want  
to say that even if there is not much accomplished during the sprint  
itself, here you have almost a score of faculty, many of whom will go  
on to teach open source and be faculty sponsors for student open  
source projects.  Having these faculty work on Twisted is a very good  
way to help increase awareness of your project/work amongst new  
people coming into the OS community.

Sincerely,

Dave Shein
Rochester Institute of Technology
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110621/89c931a2/attachment.html>

From glyph at twistedmatrix.com  Tue Jun 21 10:56:08 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Jun 2011 12:56:08 -0400
Subject: [Twisted-Python] txStatsD - A Twisted-based StatsD server
In-Reply-To: <BANLkTikf8tPfu=-PYV-yRLqf3kqBjH9qMQ@mail.gmail.com>
References: <BANLkTi=VZcKfh0sZoAkNuPNkjBJMN5iG-w@mail.gmail.com>
	<BANLkTikf8tPfu=-PYV-yRLqf3kqBjH9qMQ@mail.gmail.com>
Message-ID: <148BBE75-F7CF-4C36-860D-F3EBA66E3176@twistedmatrix.com>


On Jun 21, 2011, at 6:15 AM, Jonathan Lange wrote:

> Sidnei da Silva of Canonical wrote a StatsD server with Twisted. I
> thought it was pretty neat, and thus worth sharing with
> twisted-python at .

Always glad to hear about a new thing with a 'tx' in it.  Thanks Sidnei! :)

> jml
> 
> ---------- Forwarded message ----------
> From: Sidnei da Silva <sidnei.da.silva at canonical.com>
> Date: Tue, Jun 21, 2011 at 7:27 AM
> Subject: [Canonical-tech] txStatsD - A Twisted-based StatsD server
> To: Canonical Tech <canonical-tech at lists.launchpad.net>
> 
> 
> Since we're looking into using Graphite in Landscape, and since I know
> UbuntuOne is adding Graphite stats left and right and saw their
> struggle with getting nodejs backported to Lucid so that they could
> run StatsD, I thought I could sharpen my Twisted axe by porting StatsD
> to Twisted.
> 
>  http://launchpad.net/txstatsd
> 
> For reference, StatsD
> (https://github.com/etsy/statsd/blob/master/stats.js) is a UDP-based
> server which collects and aggregates data at a configurable minimum
> resolution, then forwards it to Graphite (which talks TCP). UDP was
> chosen by StatsD since it's stateless, which means that the StatsD
> server can be down without taking the application being graphed down
> (some data can be lost but no downtime is incurred).
> 
> Bonus points to Twisted for ReconnectingClientFactory,
> LineOnlyReceiver and LoopingCall, which make the Twisted version not
> just more fun but also more robust.
> 
> Reviews from people with Twisted experience are more than welcome.
> 
> --
> Sidnei
> 
> Make the most of Ubuntu with Landscape
> http://landscape.canonical.com
> 
> _______________________________________________
> Mailing list: https://launchpad.net/~canonical-tech
> Post to     : canonical-tech at lists.launchpad.net
> Unsubscribe : https://launchpad.net/~canonical-tech
> More help   : https://help.launchpad.net/ListHelp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110621/7f909263/attachment.html>

From glyph at twistedmatrix.com  Tue Jun 21 11:20:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Jun 2011 13:20:59 -0400
Subject: [Twisted-Python] Looking for Devs to answer noob questions
	on6/22 & 6/23 POSTPONED UNTIL AUGUST
In-Reply-To: <401C48A1-816D-4096-8F47-A4C905AB1712@rochester.rr.com>
References: <401C48A1-816D-4096-8F47-A4C905AB1712@rochester.rr.com>
Message-ID: <EFE747C0-7D4A-40D3-A297-9B1AE6167242@twistedmatrix.com>


On Jun 21, 2011, at 12:51 PM, David Shein wrote:

> Hi Glyph & Jean-Paul & Whomever else volunteered,
> 
> My partner for POSSE had a family health emergency on Friday, so we have had to postpone the boot-camp.  We will be doing POSSE RIT in the second week of August.  So our code sprint is now scheduled be on August 9th and 10th.   I will ping the list again as we get closer.  I want to say thank you to those who volunteered; I really appreciate your getting back to me.  Anyone who is considering helping, I want to say that even if there is not much accomplished during the sprint itself, here you have almost a score of faculty, many of whom will go on to teach open source and be faculty sponsors for student open source projects.  Having these faculty work on Twisted is a very good way to help increase awareness of your project/work amongst new people coming into the OS community.
> 
> Sincerely,
> 
> Dave Shein
> Rochester Institute of Technology

Sorry to hear about the delay, and good luck to your parter's family.

The delay is an opportunity for more people to volunteer though.  Perhaps we should post this to the Twisted Matrix Labs blog?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110621/a70e6795/attachment.html>

From exarkun at twistedmatrix.com  Tue Jun 21 15:32:11 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 21 Jun 2011 21:32:11 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
Message-ID: <20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>

On 04:17 pm, stephen at thorne.id.au wrote:
>G'day,
>
>Here at europython there was an excellent tutorial given on the first
>afternoon that was so well attended and regarded that a repeat is
>being done tomorrow afternoon (24 hours from this posting).
>
>I was asked by the person running the training to give him a hand
>because it's quite tiring doing a multi-hour training twice in a week,
>and he specifically mentioned that it would be nice to have an example
>of best practice with regard to making a working twisted program into
>a 'production ready' deployable piece of code.
>
>So I wrote this example which is a skeleton of how to set up a twistd
>plugin and how to invoke it:
>
>https://bitbucket.org/jerub/twisted-plugin-example
>
>I would appreciate any comments, patches or criticisms between now and
>tomorrow. (hg email anything to my address, stephen at thorne.id.au, fork
>and push to bitbucket, or just email the list to yell at me).

Unit tests.

Docstrings.

Don't define Options or makeService in the dropin file.

Unit tests.

Use twisted.application.service.ServiceMaker instead of implementing 
your own.

Unit tests.

Docstrings.

It's not "strports" anymore.  It's "string endpoint descriptions" or 
just "endpoints".  You are using the right API but you named all the 
options and variables wrong.

Unit tests.

Don't use the global reactor in SetupService.

Unit tests.

Docstrings.
>Thanks!
>Stephen.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From stephen at thorne.id.au  Wed Jun 22 01:32:25 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Wed, 22 Jun 2011 09:32:25 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
Message-ID: <BANLkTi=J=d6zxkffYxV0UvOZMqTPuwCy1w@mail.gmail.com>

On Tue, Jun 21, 2011 at 23:32,  <exarkun at twistedmatrix.com> wrote:
> Don't define Options or makeService in the dropin file.
>
> Use twisted.application.service.ServiceMaker instead of implementing
> your own.

Oh that's nice. I'll rewrite to use that now. What's the first
argument to ServiceMaker, 'name' for? it's not documented.

> It's not "strports" anymore.  It's "string endpoint descriptions" or
> just "endpoints".  You are using the right API but you named all the
> options and variables wrong.
>
> Unit tests.
>
> Don't use the global reactor in SetupService.

okay, I've changed this to do 'from twisted.internet import reactor'
at the top of the two methods that access the reactor.

> Unit tests.
>
> Docstrings.

Fair call, I'll put docstrings in and write some tests.

Stephen.



From exarkun at twistedmatrix.com  Wed Jun 22 05:03:47 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 22 Jun 2011 11:03:47 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTi=J=d6zxkffYxV0UvOZMqTPuwCy1w@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTi=J=d6zxkffYxV0UvOZMqTPuwCy1w@mail.gmail.com>
Message-ID: <20110622110347.1894.1663222652.divmod.xquotient.395@localhost.localdomain>

On 07:32 am, stephen at thorne.id.au wrote:
>On Tue, Jun 21, 2011 at 23:32,  <exarkun at twistedmatrix.com> wrote:
>>Don't define Options or makeService in the dropin file.
>>
>>Use twisted.application.service.ServiceMaker instead of implementing
>>your own.
>
>Oh that's nice. I'll rewrite to use that now. What's the first
>argument to ServiceMaker, 'name' for? it's not documented.
>>It's not "strports" anymore. �It's "string endpoint descriptions" or
>>just "endpoints". �You are using the right API but you named all the
>>options and variables wrong.
>>
>>Unit tests.
>>
>>Don't use the global reactor in SetupService.
>
>okay, I've changed this to do 'from twisted.internet import reactor'
>at the top of the two methods that access the reactor.

That's still the global reactor.  "from twisted.internet import reactor" 
is always the global reactor.  Instead, you should make the reactor a 
parameter.

Jean-Paul



From anton at iki.fi  Wed Jun 22 08:04:12 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Wed, 22 Jun 2011 17:04:12 +0300
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <op.vw8erftso3d63n@tiassa.local>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
Message-ID: <BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>

On Fri, Jun 17, 2011 at 8:55 PM, L. Daniel Burr <ldanielburr at gmail.com> wrote:
> As an aside, I recall that ldaptor never could become part of twisted, due
> to its licensing.  I didn't see any license information in the new repo; I
> assume the code is still GPL v2?

The Ldaptor license is LGPL and I think it has always been LGPL. I'm
not sure, as it was well before my time, but I believe early Ldaptor
code was part of Twisted but was broken out when Twisted changed
license from LGPL to MIT-style.

Best regards
Anton



From glyph at twistedmatrix.com  Thu Jun 23 11:01:44 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Jun 2011 13:01:44 -0400
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
	<BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
Message-ID: <D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>

On Jun 22, 2011, at 10:04 AM, Anton Gyllenberg wrote:

> On Fri, Jun 17, 2011 at 8:55 PM, L. Daniel Burr <ldanielburr at gmail.com> wrote:
>> As an aside, I recall that ldaptor never could become part of twisted, due
>> to its licensing.  I didn't see any license information in the new repo; I
>> assume the code is still GPL v2?
> 
> The Ldaptor license is LGPL and I think it has always been LGPL. I'm
> not sure, as it was well before my time, but I believe early Ldaptor
> code was part of Twisted but was broken out when Twisted changed
> license from LGPL to MIT-style.

The code was always LGPL, but the code was never part of Twisted.  If it were, it would have had its license changed along with Twisted.  I do hope that Tommi decides to change its license to MIT one day and contribute it though.

-glyph




From anshul.singhle at gmail.com  Thu Jun 23 18:37:15 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Fri, 24 Jun 2011 06:07:15 +0530
Subject: [Twisted-Python] Doubt regarding registerAdapter in
	sshsimpleserver.py
Message-ID: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>

Hi,
I'm a Twisted newbie and I'm working on a custom ssh daemon for serving git.
I happened to read one of the example files sshsimpleserver.py at *
http://twistedmatrix.com/projects/conch/documentation/examples/* . At line
93 ExampleSession is registered as an Adapter for ExampleAvatar adapting it
to session.ISession. As i understand, to actually do the adaptation a call
like ISession(ExampleAvatar) has to be done (?). This call hasn't been done.
Am i missing something?
Thanks in advance,
Anshul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110624/bc2b1254/attachment-0001.html>

From robert.waters at gmail.com  Fri Jun 24 09:41:13 2011
From: robert.waters at gmail.com (R M Waters)
Date: Fri, 24 Jun 2011 11:41:13 -0400
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
Message-ID: <BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>

On Tue, Jun 21, 2011 at 5:32 PM, <exarkun at twistedmatrix.com> wrote:

>
> Don't define Options or makeService in the dropin file.
>
> Use twisted.application.service.ServiceMaker instead of implementing
> your own.
>
>  Don't use the global reactor in SetupService.
>
>
>
Would you please elaborate on the three items above?
Most of the plugin code that I've used as examples for my own have all
violated at least two of those.

Thank you very much.
- Robert
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110624/0d1e8460/attachment.html>

From exarkun at twistedmatrix.com  Fri Jun 24 09:57:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Jun 2011 15:57:19 -0000
Subject: [Twisted-Python] Doubt regarding registerAdapter
	in	sshsimpleserver.py
In-Reply-To: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>
References: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>
Message-ID: <20110624155719.1894.1510052012.divmod.xquotient.408@localhost.localdomain>

On 12:37 am, anshul.singhle at gmail.com wrote:
>Hi,
>I'm a Twisted newbie and I'm working on a custom ssh daemon for serving 
>git.
>I happened to read one of the example files sshsimpleserver.py at *
>http://twistedmatrix.com/projects/conch/documentation/examples/* . At 
>line
>93 ExampleSession is registered as an Adapter for ExampleAvatar 
>adapting it
>to session.ISession. As i understand, to actually do the adaptation a 
>call
>like ISession(ExampleAvatar) has to be done (?). This call hasn't been 
>done.

It's more like ISession(ExampleAvatar()) - the instance is adapted, not 
the class.

Conch does this in SSHSession in a few places:

http://twistedmatrix.com/trac/browser/tags/releases/twisted-11.0.0/twisted/conch/ssh/session.py#L23

So using SSHSession is the main way to have your ISession adapter make a 
difference.

Jean-Paul



From exarkun at twistedmatrix.com  Fri Jun 24 10:23:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Jun 2011 16:23:36 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
Message-ID: <20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>

On 03:41 pm, robert.waters at gmail.com wrote:
>On Tue, Jun 21, 2011 at 5:32 PM, <exarkun at twistedmatrix.com> wrote:
>>
>>Don't define Options or makeService in the dropin file.

The system will perform better if there is less code in the dropin file 
(or imported by the dropin file).  There are some ideas to add an 
optimization which will make this irrelevant, but someone needs to 
implement them before they'll matter.
>>Use twisted.application.service.ServiceMaker instead of implementing
>>your own.

It's just less code to use `ServiceMaker`.  It should be flexible enough 
for any twistd plugin.  This interacts with the previous point as well, 
ServiceMaker avoids loading your Options and makeService implementation 
until someone actually invokes your twistd plugin.
>>  Don't use the global reactor in SetupService.

Using the global reactor makes code less easily testable.  This isn't 
specific to plugins, you should avoid the global reactor in all your 
Twisted-using code.  Accept it as a parameter instead.
>>
>Would you please elaborate on the three items above?
>Most of the plugin code that I've used as examples for my own have all
>violated at least two of those.

Hope that helps!

Jean-Paul



From stephen at thorne.id.au  Fri Jun 24 11:06:12 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Fri, 24 Jun 2011 19:06:12 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
	<20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
Message-ID: <BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>

On Fri, Jun 24, 2011 at 18:23,  <exarkun at twistedmatrix.com> wrote:
> Using the global reactor makes code less easily testable.  This isn't
> specific to plugins, you should avoid the global reactor in all your
> Twisted-using code.  Accept it as a parameter instead.

Ah, I did not do this successfully in my rewrite. I'd be interested to
see an example of the correct technique to use. Is this what you mean?

from twisted.internet import reactor
class SetupClass(service.Service):
    def doStart(self, reactor=reactor):
         reactor.callLater(3, self.done)

-- 
Regards,
Stephen.Thorne



From exarkun at twistedmatrix.com  Fri Jun 24 11:29:49 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 24 Jun 2011 17:29:49 -0000
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
	<20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
	<BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>
Message-ID: <20110624172949.1894.1985972988.divmod.xquotient.423@localhost.localdomain>

On 05:06 pm, stephen at thorne.id.au wrote:
>On Fri, Jun 24, 2011 at 18:23,  <exarkun at twistedmatrix.com> wrote:
>>Using the global reactor makes code less easily testable. �This isn't
>>specific to plugins, you should avoid the global reactor in all your
>>Twisted-using code. �Accept it as a parameter instead.
>
>Ah, I did not do this successfully in my rewrite. I'd be interested to
>see an example of the correct technique to use. Is this what you mean?
>
>from twisted.internet import reactor
>class SetupClass(service.Service):
>    def doStart(self, reactor=reactor):
>         reactor.callLater(3, self.done)

That's possible (and I'll assume you mean startService, not doStart), 
but the style I prefer is to keep the reactor as instance state, and 
initialize it in __init__.

    class SetupClass(service.Service):
        def __init__(self, reactor):
            self._reactor = reactor

        def startService(self):
            self._startupCall = self._reactor.callLater(3, self.done)

Some people like to make the reactor optional:

    class SetupClass(service.Service):
        def __init__(self, reactor=None):
            if reactor is None:
                from twisted.internet import reactor
            self._reactor = reactor

        def startService(self):
            self._startupCall = self._reactor.callLater(3, self.done)

Jean-Paul



From stephen at thorne.id.au  Fri Jun 24 11:51:17 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Fri, 24 Jun 2011 19:51:17 +0200
Subject: [Twisted-Python] Plugin Example - review appreciated
In-Reply-To: <20110624172949.1894.1985972988.divmod.xquotient.423@localhost.localdomain>
References: <BANLkTi=9KCvzT_NuYiSwyDe5SNmEb45QVw@mail.gmail.com>
	<20110621213211.1894.1611994881.divmod.xquotient.392@localhost.localdomain>
	<BANLkTikEE5rBG3ngQkmyE+fPigXUnf3g5Q@mail.gmail.com>
	<20110624162336.1894.109217534.divmod.xquotient.415@localhost.localdomain>
	<BANLkTintGGcVJgxv9xt6Q_ii=1-DuMuuSQ@mail.gmail.com>
	<20110624172949.1894.1985972988.divmod.xquotient.423@localhost.localdomain>
Message-ID: <BANLkTinSR2PjTxinoMjyRjiJT97iOs7caQ@mail.gmail.com>

On Fri, Jun 24, 2011 at 19:29,  <exarkun at twistedmatrix.com> wrote:
>   class SetupClass(service.Service):
>       def __init__(self, reactor):
>           self._reactor = reactor
>
>       def startService(self):
>           self._startupCall = self._reactor.callLater(3, self.done)

Thanks Jean-Paul,

I've taken the first suggestion and put that into the example, and put
a test in too:

https://bitbucket.org/jerub/twisted-plugin-example/changeset/a3af1e55194a

Stephen Thorne.



From anshul.singhle at gmail.com  Fri Jun 24 13:41:12 2011
From: anshul.singhle at gmail.com (Anshul Singhle)
Date: Sat, 25 Jun 2011 01:11:12 +0530
Subject: [Twisted-Python] Doubt regarding registerAdapter in
	sshsimpleserver.py
In-Reply-To: <20110624155719.1894.1510052012.divmod.xquotient.408@localhost.localdomain>
References: <BANLkTi=1aHxkFdDxF0rZPCgL5=TXS9DEXQ@mail.gmail.com>
	<20110624155719.1894.1510052012.divmod.xquotient.408@localhost.localdomain>
Message-ID: <8B021A4E-188F-48D7-8E9D-9E8FB31892ED@gmail.com>

Thanks. That clears it. 



From orestis at orestis.gr  Sat Jun 25 02:38:39 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Sat, 25 Jun 2011 10:38:39 +0200
Subject: [Twisted-Python] New Twisted Tutorial
Message-ID: <D14C6A5D-FEB3-4967-B454-CEDBA625C71C@orestis.gr>

Hello,

I've started porting my training slides into a written tutorial, making changes along the way based on the audience reactions. You can find it here:

https://github.com/orestis/twisted-tutorial

It's missing a couple of chapters like errbacks or examples on how to use threads for CPU-intensive tasks, but it's already 6500 words long. Everyone is encouraged to comment on specific lines or fork and change stuff. 

It's not in any particular format, though at some points it resembles ReST. I think it'd make a great addition to the existing Twisted documentation so unless anyone objects, let's make it so. 

Once I get to a proper internet connection, I will upload the training slides as well (though they are not very useful on their own).

Many thanks to everyone that helped, and especially to lvh and jerub who attended the training (twice!) and helped with the tricky bits.

Orestis





From exarkun at twistedmatrix.com  Sat Jun 25 22:05:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Jun 2011 04:05:34 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1309061134.43.1954060597@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110626/3ae02b94/attachment-0001.html>

From mithrandi at mithrandi.net  Sun Jun 26 04:00:55 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 26 Jun 2011 12:00:55 +0200
Subject: [Twisted-Python] Deferred flow control examples
Message-ID: <BANLkTik1EVrz5rXVniEd9F34WkKkTr3q1Q@mail.gmail.com>

When trying to help people understand how to use
Deferred.add{Callback,Errback,Callbacks,Both} I've found it useful on
a number of occasions to illustrate flow control with Deferreds by
comparison with synchronous code. I realised there wasn't really
anyway that a "complete" set of examples was collected, so I wrote
this blog post:

http://mithrandi.net/blog/2011/06/flow-control-with-deferreds-by-example/

I'd appreciate it if people could take a moment to review the examples
(I think they're all correct, but maybe I made a mistake somewhere),
suggest any important examples I missed, and let me know if they find
this approach generally useful.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From _ at lvh.cc  Sun Jun 26 13:11:09 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Sun, 26 Jun 2011 21:11:09 +0200
Subject: [Twisted-Python] Deferred flow control examples
In-Reply-To: <BANLkTik1EVrz5rXVniEd9F34WkKkTr3q1Q@mail.gmail.com>
References: <BANLkTik1EVrz5rXVniEd9F34WkKkTr3q1Q@mail.gmail.com>
Message-ID: <BANLkTimNAmESi-4R+ZrDf0gWKG_GW4fhGQ@mail.gmail.com>

Reviewed, looks good to me!

Thanks for writing this, one of the comments I got at Europython was very
specifically about a lack of docs on how you actually use Deferreds in real
situations. This will hopefully make things clearer for them.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110626/d8b79c9b/attachment-0001.html>

From anton at iki.fi  Mon Jun 27 05:35:39 2011
From: anton at iki.fi (Anton Gyllenberg)
Date: Mon, 27 Jun 2011 14:35:39 +0300
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
	<BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
	<D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>
Message-ID: <BANLkTimVTkms9T_kjtp-HdghJ+OiCAgexA@mail.gmail.com>

On Thu, Jun 23, 2011 at 8:01 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> On Jun 22, 2011, at 10:04 AM, Anton Gyllenberg wrote:
>> The Ldaptor license is LGPL and I think it has always been LGPL. I'm
>> not sure, as it was well before my time, but I believe early Ldaptor
>> code was part of Twisted but was broken out when Twisted changed
>> license from LGPL to MIT-style.
>
> The code was always LGPL, but the code was never part of Twisted.  If it were, it would have had its license changed along with Twisted.  I do hope that Tommi decides to change its license to MIT one day and contribute it though.
>

OK, thanks for the clarification. I was looking at
http://twistedmatrix.com/trac/changeset/1857 and thought it meant it
was once part of Twisted.

Best regards
Anton



From terry at jon.es  Mon Jun 27 09:27:45 2011
From: terry at jon.es (Terry Jones)
Date: Mon, 27 Jun 2011 17:27:45 +0200
Subject: [Twisted-Python] A resizable dispatch queue for Twisted (updated)
Message-ID: <19976.41329.445934.243071@jon.es>

I've made some changes to txRDQ, and just blogged about the class:
http://bit.ly/lD5zIT

Summary of changes: A put on the queue now gets you a deferred. There's a
new Job class that the deferred fires or errs with. The deferreds can be
cancelled. Jobs can be given priorities and can be . On the admin side, the
pending and underway methods return lists of job instances (which can be
re-prioritized, canceled, and independently watched). Shutdown now allows
you to cancel underway jobs.

The code also contains a DeferredPriorityQueue which will likely be
independently of interest to some, and might make its way into Twisted?

Code at https://launchpad.net/txrdq

Terry



From glyph at twistedmatrix.com  Mon Jun 27 10:51:12 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jun 2011 12:51:12 -0400
Subject: [Twisted-Python] twisted.cred implementation for LDAP, anyone?
In-Reply-To: <BANLkTimVTkms9T_kjtp-HdghJ+OiCAgexA@mail.gmail.com>
References: <BANLkTinATiDzRSA40JnAY5QXTDczjJQkAA@mail.gmail.com>
	<145-4dfb3d80-3-4c5ea780@38506918>
	<BANLkTimZ5usbQq_bhEC5U3+ns_yg6xw5Gw@mail.gmail.com>
	<1308312890.14591.1.camel@blake>
	<BANLkTi=+vQrRJAWHRL9-uRDoKUhS6LTXnw@mail.gmail.com>
	<op.vw8erftso3d63n@tiassa.local>
	<BANLkTikGJdO27whsHNRPKSRxOy_aCiVpWA@mail.gmail.com>
	<D4302E6A-3FB8-4D50-BC95-2D4199CE747C@twistedmatrix.com>
	<BANLkTimVTkms9T_kjtp-HdghJ+OiCAgexA@mail.gmail.com>
Message-ID: <4F7E1520-032C-4C89-814E-838D58F5392F@twistedmatrix.com>


On Jun 27, 2011, at 7:35 AM, Anton Gyllenberg wrote:

> On Thu, Jun 23, 2011 at 8:01 PM, Glyph Lefkowitz
> <glyph at twistedmatrix.com> wrote:
>> On Jun 22, 2011, at 10:04 AM, Anton Gyllenberg wrote:
>>> The Ldaptor license is LGPL and I think it has always been LGPL. I'm
>>> not sure, as it was well before my time, but I believe early Ldaptor
>>> code was part of Twisted but was broken out when Twisted changed
>>> license from LGPL to MIT-style.
>> 
>> The code was always LGPL, but the code was never part of Twisted.  If it were, it would have had its license changed along with Twisted.  I do hope that Tommi decides to change its license to MIT one day and contribute it though.
>> 
> 
> OK, thanks for the clarification. I was looking at
> http://twistedmatrix.com/trac/changeset/1857 and thought it meant it
> was once part of Twisted.

I stand corrected!  I looked around for that changeset before I posted this, but didn't find it.  Apparently I misremembered.  So your summary was correct; the code was broken out before Twisted changed to the MIT license.

(I do still hope that it changes to MIT and lives in the tree again someday, though.)

-glyph




From jonathan at stoppani.name  Mon Jun 27 14:52:43 2011
From: jonathan at stoppani.name (Jonathan Stoppani)
Date: Mon, 27 Jun 2011 14:52:43 -0600
Subject: [Twisted-Python] PB and FilePager
Message-ID: <2C5356FB-162D-4EE0-876E-80EC0471721D@stoppani.name>

Hi there,

I encountered a problem while dealing with file transfers using PB and t.s.u.FilePager.

The sscce illustrates the problem:

--------- server.py --------------------------------------------------
from twisted.spread import pb
from twisted.internet import reactor

ROOT = '/tmp/'

class ImageCollector(pb.Referenceable): 
def __init__(self, fd):
    self.fd = fd

def remote_dummy(self):
    pass

def remote_gotPage(self, page):
    self.fd.write(page)

def remote_endedPaging(self):
    print "Completed"
    self.fd.close()

class VurmController(pb.Root):
def remote_createImage(self, imageId):
    return ImageCollector(open(ROOT + imageId, 'w'))

reactor.listenTCP(8789, pb.PBServerFactory(VurmController()))
reactor.run()
----------------------------------------------------------------------


--------- client.py --------------------------------------------------
import sys

from twisted.spread import pb
from twisted.internet import reactor, defer
from twisted.spread import util

FILE = 'myfile.something'

factory = pb.PBClientFactory()
reactor.connectTCP("localhost", 8789, factory)

d = factory.getRootObject()

def createImage(controller):
return controller.callRemote('createImage', 'image-id')
d.addCallback(createImage)

def sendImage(ctl):
print ctl.callRemote('dummy') ############# LINE 19 #############
d = defer.Deferred()
util.FilePager(ctl, open(FILE), callback=lambda: d.callback(None))
return d
d.addCallback(sendImage)

def done(_):
print "Transfer completed"
#reactor.callLater(1, reactor.stop)
reactor.stop()
d.addCallback(done)

reactor.run()
----------------------------------------------------------------------


I'm trying to *upload* a file from the client to the server by calling a method on the
server which returns a collector to be used with a FilePager instance.

When run with the line client.py:19 commented out, the script blocks before sending
out any file chunks, if the line is uncommented (effectively calling the 'dummy' method
remotely), everything works as expected.

Digging around in the sources, I found out that t.p.u.Pager registers itself to the
collector's pb broker as a pageProducer. When resumeProducing is called on the broker,
it asks the FilePager instance for the next page, which leads to the invocation of
the following method on FilePager::

def sendNextPage(self):
    """
    Get the first chunk read and send it to collector.
    """
    if not self.chunks:
        return

    val = self.chunks.pop(0)
    self.producer.resumeProducing()
    self.collector.callRemote("gotPage", val)

As the t.b.FileSender producer does not yet had a chance to write something to the
FilePager, the method returns straight away without sending anything.

As anything was sent, the Broker.resumeProducing method is never called again, and
thus the FilePager.sendNextPage neither.

The problem is caused by the calling chain of the FilePager constructor:

FilePager.__init__()
-> Pager.__init__()
-> broker.registerPageProducer(FilePager)
  -> transport.registerProducer(broker)
    -> broker.resumeProducing()
      -> FilePager.sendNextPage()
        -> <no data, don't send anything>
-> FilePager.startProducing(fd)
-> FileSender().beginFileTransfer(fd, FilePager)
  -> FilePager.registerProducer(FileSender)
    -> FileSender.resumeProducing()
      -> FilePager.write(data)
        -> <store data, wait for sendNextPage to be called>

Simply inverting these two method calls (Pager.__init__ and FilePager.startProducing)
solves the problem.

The same problem does not appear when calling the 'dummy' method (client.py:19)
because the data for the method call is waiting to be sent out by the reactor and
the transport does not call 'resumeProducing' on the broker until the next iteration.

This allows the call to FilePager.startProducing to complete before sendNextPage is
ever called on it.

Does this sound correct? It seems only strange to me that nobody else had this problem
previously. If no errors on my side are found, I'll submit this as a ticket.

Cheers,
Jonathan







From m-lists at the-moon.net  Mon Jun 27 15:53:18 2011
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 27 Jun 2011 22:53:18 +0100
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
	change the interface?
Message-ID: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>

I'm in the process of switching some of my Javascript code from
MochiKit.Async.Deferred to the recently introduced jQuery.Deferred.

Does anyone else hate the confusing new method names they've chosen?
Why couldn't they just stick with the tried and tested
interface...aargh...it really pisses me off!

 * http://api.jquery.com/category/deferred-object/
 * http://mochi.github.com/mochikit/doc/html/MochiKit/Async.html#fn-deferred
 * http://bazaar.launchpad.net/~richardw/jarmon/jquery-deferred/revision/73

-RichardW.



From glyph at twistedmatrix.com  Mon Jun 27 16:13:37 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jun 2011 18:13:37 -0400
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
	change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <8617D2D1-961B-442F-8D7A-9AFA9CA7DB0F@twistedmatrix.com>


On Jun 27, 2011, at 5:53 PM, Richard Wall wrote:

> Does anyone else hate the confusing new method names they've chosen?

Yes.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110627/51cce9dc/attachment.html>

From jstpierre at mecheye.net  Mon Jun 27 16:23:19 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 27 Jun 2011 18:23:19 -0400
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <BANLkTi=zMxjgUqKzqM+RgDsscywWV0WOWQ@mail.gmail.com>

Not only that, but it doesn't do callback chaining, which is a huge
disappointment.

On Mon, Jun 27, 2011 at 5:53 PM, Richard Wall <m-lists at the-moon.net> wrote:
> I'm in the process of switching some of my Javascript code from
> MochiKit.Async.Deferred to the recently introduced jQuery.Deferred.
>
> Does anyone else hate the confusing new method names they've chosen?
> Why couldn't they just stick with the tried and tested
> interface...aargh...it really pisses me off!
>
>  * http://api.jquery.com/category/deferred-object/
>  * http://mochi.github.com/mochikit/doc/html/MochiKit/Async.html#fn-deferred
>  * http://bazaar.launchpad.net/~richardw/jarmon/jquery-deferred/revision/73
>
> -RichardW.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
 Jasper



From amauryfa at gmail.com  Mon Jun 27 16:33:39 2011
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Tue, 28 Jun 2011 00:33:39 +0200
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <8617D2D1-961B-442F-8D7A-9AFA9CA7DB0F@twistedmatrix.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
	<8617D2D1-961B-442F-8D7A-9AFA9CA7DB0F@twistedmatrix.com>
Message-ID: <BANLkTin7wAeiGxbe6LWxAqYptgweNkHWEQ@mail.gmail.com>

2011/6/28 Glyph Lefkowitz <glyph at twistedmatrix.com>:
> On Jun 27, 2011, at 5:53 PM, Richard Wall wrote:
>
> Does anyone else hate the confusing new method names they've chosen?
>
> Yes.

No! Because it's not a Deferred.

The JQuery Deferred has only a slight resemblance with Twisted's.
Looking at the source code
https://github.com/jquery/jquery/blob/master/src/deferred.js
this implementation lacks many important features of the Deferred we know:

- All callbacks are called with the same "result"
- Impossible to recover from an errback (and call the next callback)
- The callback chain is not paused when a callback returns another Deferred

IOW, don't use it as a Deferred.
The Mochikit implementation looks much more similar to Twisted.

-- 
Amaury Forgeot d'Arc



From jml at mumak.net  Mon Jun 27 16:39:01 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Jun 2011 23:39:01 +0100
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <BANLkTinrG=sN8x3VX0M6tAJyKiDynLMJFg@mail.gmail.com>

On Mon, Jun 27, 2011 at 10:53 PM, Richard Wall <m-lists at the-moon.net> wrote:
...
> Does anyone else hate the confusing new method names they've chosen?
> Why couldn't they just stick with the tried and tested
> interface...aargh...it really pisses me off!

Patches acc... Oh wait, wrong project. Sorry.

jml



From emmanuel.cazenave at gmail.com  Tue Jun 28 03:45:08 2011
From: emmanuel.cazenave at gmail.com (emmanuel CAZENAVE)
Date: Tue, 28 Jun 2011 11:45:08 +0200
Subject: [Twisted-Python] How to wait for a transport to write some data
	before loosing the connection
Message-ID: <BANLkTink-9uZ+Wpa6dQs4zwgV0XsWSTd0Q@mail.gmail.com>

Hi,

I wrote a server using a protocol that inherit from 'basic.LineReceiver'.

In some circonstances I need  to reject the data send by the client and to
close the connection. Here is how I do that:

class MyProtocol(basic.LineReceiver):

    ........

    def error(self, error_msg):
        self.transport.write(error_msg)
        self.transport.loseConnection()


Sometimes it works: the client gets notify of the error and the connection
is closed properly.
And some other times, the client does not received the error notification
and the server closes the connection, which causes the client (wich is not
written using twisted, but with the socket module from the standard lib) to
crash with 'socket.error: (10054, 'Connection reset by peer')'.

As I red somewhere in the docs or in the mailing list, self.transort.write
does can return before it really writes the data.

So how could I do, without using blocking code, to wait
until self.transort.write effectively writes the data to avoid closing the
connection with unwritten data ?

Thanks you.

Emmanuel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110628/ccabaa73/attachment.html>

From luke-lists at hybrid-logic.co.uk  Tue Jun 28 03:51:17 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Tue, 28 Jun 2011 10:51:17 +0100
Subject: [Twisted-Python] A resizable dispatch queue for Twisted
 (updated)
In-Reply-To: <19976.41329.445934.243071@jon.es>
References: <19976.41329.445934.243071@jon.es>
Message-ID: <1309254677.19698.13.camel@behemoth>

On Mon, 2011-06-27 at 17:27 +0200, Terry Jones wrote:
> I've made some changes to txRDQ, and just blogged about the class:
> http://bit.ly/lD5zIT
> 
> Summary of changes: A put on the queue now gets you a deferred. There's a
> new Job class that the deferred fires or errs with. The deferreds can be
> cancelled. Jobs can be given priorities and can be . On the admin side, the
> pending and underway methods return lists of job instances (which can be
> re-prioritized, canceled, and independently watched). Shutdown now allows
> you to cancel underway jobs.
> 
> The code also contains a DeferredPriorityQueue which will likely be
> independently of interest to some, and might make its way into Twisted?
> 
> Code at https://launchpad.net/txrdq
> 

Nice!  Thanks Terry, this looks really interesting, and may well replace
DeferredSemaphore in some parts of our code.

Cheers,
Luke

--
www.hybrid-cluster.com - Cloud web hosting platform




From _ at lvh.cc  Tue Jun 28 03:54:13 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Tue, 28 Jun 2011 11:54:13 +0200
Subject: [Twisted-Python] How to wait for a transport to write some data
 before loosing the connection
In-Reply-To: <BANLkTink-9uZ+Wpa6dQs4zwgV0XsWSTd0Q@mail.gmail.com>
References: <BANLkTink-9uZ+Wpa6dQs4zwgV0XsWSTd0Q@mail.gmail.com>
Message-ID: <BANLkTi=Z+xqMyq4noupeCqGu9hXQHcA50A@mail.gmail.com>

That's strange.

Although the write doesn't block, ITransport.loseConnection() will *first*
finish writing everything and *then* lose the connection.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110628/bef33753/attachment-0001.html>

From tomw at ubilix.com  Tue Jun 28 07:30:22 2011
From: tomw at ubilix.com (tomw)
Date: Tue, 28 Jun 2011 15:30:22 +0200
Subject: [Twisted-Python] How to safely stop a chain of deferreds
Message-ID: <1309267822.2959.10.camel@P560>

Hi, 
        
in a GUI application I'm using quite a comprehensive chain of deferreds
and I'm running the mainloop from the glib2reactor. At a certain point
of my application I need to terminate the entire chain of deferreds to
make sure that no more data is loaded and processed. Stopping the
reactor does not work as the entire GUI would terminate, too. I tried to
cancel the first deferred, hoping that the cancel event will be
forwarded to the next deferred in the chain or at least invoke an
errback, but for some reason it does not work and the deferreds seem to
run forever. Any ideas on how to solve this issue?
        
Many thanks,
        
        
-- 
tomw <tomw at ubilix.com>
        
        




From itamar at itamarst.org  Tue Jun 28 08:10:14 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 28 Jun 2011 10:10:14 -0400
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <1309267822.2959.10.camel@P560>
References: <1309267822.2959.10.camel@P560>
Message-ID: <1309270214.13270.13.camel@blake>

On Tue, 2011-06-28 at 15:30 +0200, tomw wrote:

> I tried to
> cancel the first deferred, hoping that the cancel event will be
> forwarded to the next deferred in the chain or at least invoke an
> errback, but for some reason it does not work and the deferreds seem to
> run forever. Any ideas on how to solve this issue?

Unless you registered a cancellation function for the Deferreds, the
best cancelling one can do is not pass you the results. So you'll need
to register a canceller for the Deferred that is hooked up to the result
of the original task (and any new Deferreds created along the chain).




From terry at jon.es  Tue Jun 28 08:14:38 2011
From: terry at jon.es (Terry Jones)
Date: Tue, 28 Jun 2011 16:14:38 +0200
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: Your message at 15:30:22 on Tuesday, 28 June 2011
References: <1309267822.2959.10.camel@P560>
Message-ID: <19977.57806.687600.584965@jon.es>

Hi Tom

> in a GUI application I'm using quite a comprehensive chain of deferreds
> and I'm running the mainloop from the glib2reactor. At a certain point of
> my application I need to terminate the entire chain of deferreds to make
> sure that no more data is loaded and processed. Stopping the reactor does
> not work as the entire GUI would terminate, too. I tried to cancel the
> first deferred, hoping that the cancel event will be forwarded to the
> next deferred in the chain or at least invoke an errback, but for some
> reason it does not work and the deferreds seem to run forever. Any ideas
> on how to solve this issue?

It's a bit hard to know how to help without more detail.  Code you paste
some code somewhere?  I'm sorry if this sounds picky, but your description
is a bit vague. E.g., there's no such thing as a "chain of deferreds" (do
you mean chain of callbacks on a single deferred? or a callbacks that
return deferreds etc?) and e.g., "deferreds seem to run forever" but
deferreds don't run at all, callbacks do. If you can make it a bit more
precise I'll be happy to try to help.

Terry



From mithrandi at mithrandi.net  Tue Jun 28 11:14:58 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 28 Jun 2011 19:14:58 +0200
Subject: [Twisted-Python] jQuery.Deferred - why did they have to go and
 change the interface?
In-Reply-To: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
References: <BANLkTikETBP=SX8ptiLtAHoZeJabdjpamg@mail.gmail.com>
Message-ID: <BANLkTim7x9ZmAWkZoXS5362e8dGBwa0uKw@mail.gmail.com>

On Mon, Jun 27, 2011 at 11:53 PM, Richard Wall <m-lists at the-moon.net> wrote:
> I'm in the process of switching some of my Javascript code from
> MochiKit.Async.Deferred to the recently introduced jQuery.Deferred.
>
> Does anyone else hate the confusing new method names they've chosen?
> Why couldn't they just stick with the tried and tested
> interface...aargh...it really pisses me off!

At least they didn't change the API while keeping the names the same,
like MochiKit did :/
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From exarkun at twistedmatrix.com  Tue Jun 28 11:37:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 28 Jun 2011 17:37:45 -0000
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <1309267822.2959.10.camel@P560>
References: <1309267822.2959.10.camel@P560>
Message-ID: <20110628173745.1894.1669977052.divmod.xquotient.669@localhost.localdomain>

On 01:30 pm, tomw at ubilix.com wrote:
>Hi,
>
>in a GUI application I'm using quite a comprehensive chain of deferreds
>and I'm running the mainloop from the glib2reactor. At a certain point
>of my application I need to terminate the entire chain of deferreds to
>make sure that no more data is loaded and processed. Stopping the
>reactor does not work as the entire GUI would terminate, too. I tried 
>to
>cancel the first deferred, hoping that the cancel event will be
>forwarded to the next deferred in the chain or at least invoke an
>errback, but for some reason it does not work and the deferreds seem to
>run forever. Any ideas on how to solve this issue?

What would you do if you had this non-Deferred using code:

    x = a()
    y = b(x)
    z = c(y)

and you decided in b that you need to terminate your data loading and 
processing?

Jean-Paul



From orestis at orestis.gr  Tue Jun 28 11:50:21 2011
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 28 Jun 2011 20:50:21 +0300
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <20110628173745.1894.1669977052.divmod.xquotient.669@localhost.localdomain>
References: <1309267822.2959.10.camel@P560>
	<20110628173745.1894.1669977052.divmod.xquotient.669@localhost.localdomain>
Message-ID: <49496A32-46D2-4398-85ED-A1E95C477AAB@orestis.gr>


On 28 Jun 2011, at 20:37, exarkun at twistedmatrix.com wrote:

> On 01:30 pm, tomw at ubilix.com wrote:
>> Hi,
>> 
>> in a GUI application I'm using quite a comprehensive chain of deferreds
>> and I'm running the mainloop from the glib2reactor. At a certain point
>> of my application I need to terminate the entire chain of deferreds to
>> make sure that no more data is loaded and processed. Stopping the
>> reactor does not work as the entire GUI would terminate, too. I tried 
>> to
>> cancel the first deferred, hoping that the cancel event will be
>> forwarded to the next deferred in the chain or at least invoke an
>> errback, but for some reason it does not work and the deferreds seem to
>> run forever. Any ideas on how to solve this issue?
> 
> What would you do if you had this non-Deferred using code:
> 
>    x = a()
>    y = b(x)
>    z = c(y)
> 
> and you decided in b that you need to terminate your data loading and 
> processing?

Pretty much what everyone is insinuating is that:

a) By your description it is not obvious what the application is doing, so a better description will be more helpful
b) You are using incorrect terms, making even harder to give advice
c) Callback chains don't have any built-in support for any kind of cancelling/stopping.
d) Deferreds have a cancel method but it's up to the creator of the Deferred to provide any meaning to it

Now, if you have a loop loading data and passing it to a chain of callbacks, and you'd need to stop mid-processing, the way I'd do that is to have a 'isStopped' boolean variable that can be set to True to initiate the stopping procedure. You will then stop loading any data and finish processing existing data. However, this is little more than a guess based upon my very vague understanding of the problem you are trying to describe.

Orestis




From dynamicgl at gmail.com  Wed Jun 29 02:50:03 2011
From: dynamicgl at gmail.com (gelin yan)
Date: Wed, 29 Jun 2011 16:50:03 +0800
Subject: [Twisted-Python] Does twisted have plan to support python 3.x?
Message-ID: <BANLkTi=DZYnuy8Mgj_dv0G-SfyYNGNs44w@mail.gmail.com>

   I heard that Python 3.3 may support coroutine natively via yield
generator. I am interested in how this thing can affect twisted development.


   The most compelling feature of twisted for me is to support a large set
of protocols and the most important...it can run on windows flawlessly.
Other solutions like gevent, eventlet or etc usually are unable to run on
windows.


Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110629/e2c1429f/attachment-0001.html>

From exarkun at twistedmatrix.com  Wed Jun 29 06:27:58 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 29 Jun 2011 12:27:58 -0000
Subject: [Twisted-Python] Does twisted have plan to support python 3.x?
In-Reply-To: <BANLkTi=DZYnuy8Mgj_dv0G-SfyYNGNs44w@mail.gmail.com>
References: <BANLkTi=DZYnuy8Mgj_dv0G-SfyYNGNs44w@mail.gmail.com>
Message-ID: <20110629122758.1894.800379409.divmod.xquotient.738@localhost.localdomain>

On 08:50 am, dynamicgl at gmail.com wrote:
>   I heard that Python 3.3 may support coroutine natively via yield
>generator. I am interested in how this thing can affect twisted 
>development.

Glyph wrote a good summary of the Python 3.x plan on Stack Overflow:

    http://stackoverflow.com/questions/172306

You can also help out with the porting work and follow the progress of 
others by watching tickets in the Python-3.x milestone:

    http://twistedmatrix.com/trac/milestone/Python-3.x

Meanwhile, twisted.internet.defer.inlineCallbacks offers essentially all 
of the same features as you'll get from PEP 380 (which I think is what 
you're talking about when you say "support coroutine natively via yield 
generator"), and works on Python 2.5 through 2.7.

There's also corotwine, which is even more extreme (than either 
inlineCallbacks or PEP 380):

    https://launchpad.net/corotwine

Jean-Paul



From jrennie at gmail.com  Wed Jun 29 13:54:36 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Wed, 29 Jun 2011 15:54:36 -0400
Subject: [Twisted-Python] How to safely stop a chain of deferreds
In-Reply-To: <1309267822.2959.10.camel@P560>
References: <1309267822.2959.10.camel@P560>
Message-ID: <BANLkTi=x7gbjNmwpODboQJOEXQnhQgy81w@mail.gmail.com>

On Tue, Jun 28, 2011 at 9:30 AM, tomw <tomw at ubilix.com> wrote:

> in a GUI application I'm using quite a comprehensive chain of deferreds
> and I'm running the mainloop from the glib2reactor. At a certain point
> of my application I need to terminate the entire chain of deferreds to
> make sure that no more data is loaded and processed.


Have you tried setting up appropriate callback functions and raising an
Exception at the point where the callback chain should be terminated?  Note
that each errback should return the provided failure so that execution
doesn't switch back to the callback side.  See "Visual Explanation" in this
document:

http://twistedmatrix.com/documents/current/core/howto/defer.html

Cheers,

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110629/a20700b8/attachment-0001.html>

From jeff at ocjtech.us  Wed Jun 29 14:39:03 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 29 Jun 2011 15:39:03 -0500
Subject: [Twisted-Python] Public Key Authentication with Conch
Message-ID: <BANLkTik6U-2iDHFzXVMhUwDcC8wZYP97tw@mail.gmail.com>

Hello,

I'm trying out Twisted/Conch as a replacement for a script based upon
Paramiko for transferring some files around.  However, I'm not able to
get my Twisted/Conch script to authenticate to the remote server using
public keys.  Password authentication works in my Twisted/Conch script
and public key authentication works when I connect to a local server
that uses OpenSSH.  The remote server identifies itself as
"SSH-2.0-http://3sp.com_Maverick_SSHD".  Can anyone give me any tips
on what might be going wrong?  Is there a way to increase the
verbosity to see what might be going on?

-- 
Jeff Ollie



From exarkun at twistedmatrix.com  Thu Jun 30 09:35:06 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 30 Jun 2011 15:35:06 -0000
Subject: [Twisted-Python] Public Key Authentication with Conch
In-Reply-To: <BANLkTik6U-2iDHFzXVMhUwDcC8wZYP97tw@mail.gmail.com>
References: <BANLkTik6U-2iDHFzXVMhUwDcC8wZYP97tw@mail.gmail.com>
Message-ID: <20110630153506.1894.1246013686.divmod.xquotient.1733@localhost.localdomain>

On 29 Jun, 08:39 pm, jeff at ocjtech.us wrote:
>Hello,
>
>I'm trying out Twisted/Conch as a replacement for a script based upon
>Paramiko for transferring some files around.  However, I'm not able to
>get my Twisted/Conch script to authenticate to the remote server using
>public keys.  Password authentication works in my Twisted/Conch script
>and public key authentication works when I connect to a local server
>that uses OpenSSH.  The remote server identifies itself as
>"SSH-2.0-http://3sp.com_Maverick_SSHD".  Can anyone give me any tips
>on what might be going wrong?  Is there a way to increase the
>verbosity to see what might be going on?

If you haven't already looked in the log, you might find more 
information there.  Conch emits some extra information there.

Jean-Paul



