From wolfgang.kde at rohdewald.de  Tue Aug  2 02:45:32 2016
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Tue, 02 Aug 2016 10:45:32 +0200
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
Message-ID: <1985097.xpC6b6TUEP@skull>

Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
> #7598: Port twisted.spread.pb to Python3

did you test with client on Python2 and server on Python3 and vice versa?

Not a bug report, but anyway ... This was client with Python3, 
server with Python2

The same works with my old port to Python3:
git clone https://github.com/wrohdewald/twisted.git
git checkout spread-py3-7598

My version uses helpers in remoteMessageReceived:

        kw = nativeStringDict(broker.unserialize(kw))
        method = getattr(self, "remote_%s" % nativeString(message), None)


If you need a minimal example and an official bug report -
that would take some more time. Maybe in a week or so.

Peer will receive following PB traceback:
Unhandled Error
Traceback (most recent call last):
  File "/home/wr/src/kajongg/src/twisted/spread/banana.py", line 173, in 
gotItem
    self.callExpressionReceived(item)
  File "/home/wr/src/kajongg/src/twisted/spread/banana.py", line 136, in 
callExpressionReceived
    self.expressionReceived(obj)
  File "/home/wr/src/kajongg/src/twisted/spread/pb.py", line 575, in 
expressionReceived
    method(*sexp[1:])
  File "/home/wr/src/kajongg/src/twisted/spread/pb.py", line 896, in 
proto_message
    self._recvMessage(self.localObjectForID, requestID, objectID, message, 
answerRequired, netArgs, netKw)
--- <exception caught here> ---
  File "/home/wr/src/kajongg/src/twisted/spread/pb.py", line 913, in 
_recvMessage
    netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
  File "/home/wr/src/kajongg/src/twisted/spread/flavors.py", line 120, in 
remoteMessageReceived
    state = method(*args, **kw)
builtins.TypeError: remote_move() keywords must be strings


--
Wolfgang


From glyph at twistedmatrix.com  Tue Aug  2 04:39:58 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 2 Aug 2016 03:39:58 -0700
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1985097.xpC6b6TUEP@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
Message-ID: <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>


> On Aug 2, 2016, at 01:45, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de> wrote:
> 
> Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
>> #7598: Port twisted.spread.pb to Python3
> 
> did you test with client on Python2 and server on Python3 and vice versa?
> 
> Not a bug report, but anyway ... This was client with Python3, 
> server with Python2

This is a perfectly good bug report :) and it's a case that should definitely be considered.  Probably we should up-convert from bytes automatically in the places where we know python will be using the values as identifiers, including callRemote and the keys in a __dict__.

This is unfortunately very tricky to know though, if we support serializing both bytes and strings :-\.

-glyph



From wolfgang.kde at rohdewald.de  Tue Aug  2 05:38:47 2016
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Tue, 02 Aug 2016 13:38:47 +0200
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
 <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>
Message-ID: <1569436.EIiP6lfl0G@skull>

Am Dienstag, 2. August 2016, 03:39:58 CEST schrieb Glyph Lefkowitz:
>   Probably we should up-convert from bytes automatically in the places
> where we know python will be using the values as identifiers, including
> callRemote and the keys in a __dict__.

Attached is some grep for my port showing where I had co convert.

grep -ri -e '\(network\|native\)'
 


> This is unfortunately very tricky to know though, if we support
> serializing both bytes and strings :-\.

Why? The wire protocol does not change. PY3 bytes are already
compatible, and PY3 strings are serialized as unicode objects.

--
Wolfgang
-------------- next part --------------
jelly.py:from twisted.python.compat import nativeString, networkString
jelly.py:        classname = nativeString(classname)
jelly.py:    sxp.extend([networkString(qual(inst.__class__)), jellier.jelly(state)])
jelly.py:            networkString(qual(self.__class__)),
jelly.py:                return [function_atom, networkString(pickle.whichmodule(obj, obj.__name__))
jelly.py:                return [datetime_atom, networkString('%s %s %s %s %s %s %s' % (
jelly.py:                return [time_atom, networkString('%s %s %s %s' % (obj.hour, obj.minute,
jelly.py:                return [date_atom, networkString('%s %s %s' % (obj.year, obj.month, obj.day))]
jelly.py:                return [timedelta_atom, networkString('%s %s %s' % (obj.days, obj.seconds,
jelly.py:        jelType = nativeString(obj[0])
jelly.py:        moduleName = nativeString(moduleName)
jelly.py:        qualName = nativeString(rest[0])
jelly.py:        im_name = nativeString(rest[0])
jelly.py:        typeName = nativeString(typeName)
flavors.py:from twisted.python.compat import _PY3, nativeString, networkString
flavors.py:        kw = nativeStringDict(broker.unserialize(kw))
flavors.py:        method = getattr(self, "remote_%s" % nativeString(message), None)
flavors.py:            raise NoSuchMethod("No such method: remote_%s" % (nativeString(message),))
flavors.py:        method = getattr(self.object, "view_%s" % nativeString(message))
flavors.py:        t = networkString(self.getTypeToCopyFor(p))
flavors.py:            l.extend([networkString(type_), luid, jstate])
flavors.py:def nativeStringDict(networkDict, encoding='ascii'):
flavors.py:    Convert them to the native string type.
flavors.py:    @param networkDict: Any C{dict}. Keys must be C{bytes} or C{unicode}.
flavors.py:    @return: The passed dict, but all keys converted with nativeString().
flavors.py:    return dict((nativeString(key, encoding), value)
flavors.py:        for key, value in networkDict.items())
flavors.py:        self.__dict__ = nativeStringDict(state)
flavors.py:        method = getattr(self, "observe_%s" % nativeString(message))
banana.py:from twisted.python.compat import _PY3, networkChar
banana.py:        stream(networkChar(0))
banana.py:        stream(networkChar(integer & 0x7f))
banana.py:LIST     = networkChar(0x80)
banana.py:INT      = networkChar(0x81)
banana.py:STRING   = networkChar(0x82)
banana.py:NEG      = networkChar(0x83)
banana.py:FLOAT    = networkChar(0x84)
banana.py:LONGINT  = networkChar(0x85)
banana.py:LONGNEG  = networkChar(0x86)
banana.py:VOCAB    = networkChar(0x87)
banana.py:                typebyte = networkChar(buffer[pos])
pb.py:from twisted.python.compat import xrange, networkString, nativeString
pb.py:from twisted.python.compat import nativeString, _PY3
pb.py:from twisted.python.compat import unicode, networkChar
pb.py:        This method is called when a network message is received.
pb.py:        This method is called when a network message is received.
pb.py:        method = getattr(self, "perspective_%s" % nativeString(message))
pb.py:            state['value'] = nativeString(self.value, encoding='utf-8') # Exception instance
pb.py:        file.write(nativeString(self.traceback, encoding='utf-8'))
pb.py:            nativeString(str(self.type)),
pb.py:            nativeString(self.value, encoding='utf-8'))
pb.py:            methodName = "proto_%s" % nativeString(command)
pb.py:            objectID = networkString(objectID)
pb.py:        self.sendCall(prefix+message_atom, requestID, objectID, networkString(message), answerRequired, netArgs, netKw)
pb.py:        message = nativeString(message)
pb.py:            objectID = nativeString(objectID)
pb.py:#                    unserFail.value = unserFail.type((nativeString(unserFail.value, encoding='utf-8')))
pb.py:        crap = crap + networkChar(random.randint(65,90))
pb.py:    Alternatively, any object providing or adaptable to L{IPBRoot} can be

From glyph at twistedmatrix.com  Tue Aug  2 14:55:42 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 2 Aug 2016 13:55:42 -0700
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1569436.EIiP6lfl0G@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
 <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>
 <1569436.EIiP6lfl0G@skull>
Message-ID: <D2853C5D-56AA-467E-A5AF-FAB40FED1B1D@twistedmatrix.com>


> On Aug 2, 2016, at 4:38 AM, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de <mailto:wolfgang.kde at rohdewald.de>> wrote:
> 
> Am Dienstag, 2. August 2016, 03:39:58 CEST schrieb Glyph Lefkowitz:
>>  Probably we should up-convert from bytes automatically in the places
>> where we know python will be using the values as identifiers, including
>> callRemote and the keys in a __dict__.
> 
> Attached is some grep for my port showing where I had co convert.
> 
> grep -ri -e '\(network\|native\)'
> 
> 
> 
>> This is unfortunately very tricky to know though, if we support
>> serializing both bytes and strings :-\.
> 
> Why? The wire protocol does not change. PY3 bytes are already
> compatible, and PY3 strings are serialized as unicode objects.

The protocol does change though.  ['foo'] in jelly means "bytes".  ['unicode', 'foo'] means "text".  You can fix some problems with this; obviously if you see a ['dictionary', [['unicode', 'foo'], ['unicode', 'bar']]] come in over the wire, and then get sent to setCopyableState, we can translate 'foo' back to a native 'str' in the python 2 implementation.  But what to do with 'bar'?  It will remain text.  If you extend that, and consider that your application code might have a value floating around in a variable which later gets used for a key in **kwargs or something, there's no way we can know as we're deserializing that you're going to do that, so your application is going to need to account for it manually.

Ultimately that's not a bug we can fix, so we won't.  But it's still unfortunate.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160802/84739989/attachment.html>

From jlitzingerdev at gmail.com  Wed Aug  3 21:59:32 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Wed, 3 Aug 2016 21:59:32 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
Message-ID: <20160804035901.GA3995@jlitzing-dell>

> >> Testing multicast is ... challenging.  I barely have any idea how to set up a test environment for IPv4, and no idea what to do for IPv6.  If you can speak to this in your tests (and hopefully docs as well) that would be super helpful.
On that note, one effect of actually testing that a registered socket
receives data is that, if no interfaces are up, the tests are going to
start failing (passing tests).

The existing Multicast test class exibits the same behavior on my
machine if I take my interfaces down, so can I assume that this is an
acceptable constraint?  The constraint being that, if no network
interfaces are up, these tests are going to start failing, at least on
Linux.

I'm looking for a better option, but haven't found one as of yet.

Thanks!
-Jason Litzinger
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From cory at lukasa.co.uk  Thu Aug  4 09:46:18 2016
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 4 Aug 2016 16:46:18 +0100
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <20160804035901.GA3995@jlitzing-dell>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
Message-ID: <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>


> On 4 Aug 2016, at 04:59, Jason Litzinger <jlitzingerdev at gmail.com> wrote:
> 
>>>> Testing multicast is ... challenging.  I barely have any idea how to set up a test environment for IPv4, and no idea what to do for IPv6.  If you can speak to this in your tests (and hopefully docs as well) that would be super helpful.
> On that note, one effect of actually testing that a registered socket
> receives data is that, if no interfaces are up, the tests are going to
> start failing (passing tests).
> 
> The existing Multicast test class exibits the same behavior on my
> machine if I take my interfaces down, so can I assume that this is an
> acceptable constraint?  The constraint being that, if no network
> interfaces are up, these tests are going to start failing, at least on
> Linux.

When you say *no* interfaces, do you mean actually no interfaces? As in, no loopback as well?

Cory

From jlitzingerdev at gmail.com  Thu Aug  4 10:03:49 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Thu, 4 Aug 2016 10:03:49 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
Message-ID: <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>

> When you say *no* interfaces, do you mean actually no interfaces? As in, no loopback as well?

I do not, sorry, that was poorly worded.  The loopback interface was
up for all test runs, and all other interfaces on my machine (ethernet
and wifi) were down.  Down in this context has two meanings (I tested
both):
1.  I manually took the interface down with "ifconfig <iface> down"
2.  I disconnected from my wireless network, so I had no address
assigned to any interface save the loopback.

In both cases, tests that pass with connectivity will fail due to the
index parameter.

I did try specifying the loopback index, however, I received a
"Network Unreachable" error.  I didn't have time to dig into whether
it was possible to do what I wanted with the loopback interface last
night.

Thanks,
-Jason

*Note: I'm using my gmail client for the reply here instead of
mutt...hopefully it isn't garbled.


From cory at lukasa.co.uk  Thu Aug  4 11:18:48 2016
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 4 Aug 2016 18:18:48 +0100
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
Message-ID: <7593ED08-FC39-41D9-8EC9-55A7BABFC60A@lukasa.co.uk>


> On 4 Aug 2016, at 17:03, Jason Litzinger <jlitzingerdev at gmail.com> wrote:
> 
>> When you say *no* interfaces, do you mean actually no interfaces? As in, no loopback as well?
> 
> I do not, sorry, that was poorly worded.  The loopback interface was
> up for all test runs, and all other interfaces on my machine (ethernet
> and wifi) were down.  Down in this context has two meanings (I tested
> both):
> 1.  I manually took the interface down with "ifconfig <iface> down"
> 2.  I disconnected from my wireless network, so I had no address
> assigned to any interface save the loopback.
> 
> In both cases, tests that pass with connectivity will fail due to the
> index parameter.
> 
> I did try specifying the loopback index, however, I received a
> "Network Unreachable" error.  I didn't have time to dig into whether
> it was possible to do what I wanted with the loopback interface last
> night.

So with the caveat that I am not the author of most of these tests, and I don?t understand their special circumstances?

My intuition is that no interface other than the loopback should be required to run the Twisted tests. The loopback should be sufficient to test pretty much anything that Twisted has to test. As a result, if things fail in that scenario, I?d consider it a bug.

Cory

From mithrandi at mithrandi.net  Thu Aug  4 19:10:28 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 05 Aug 2016 01:10:28 +0000
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
Message-ID: <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>

On Thu, 4 Aug 2016 at 18:04 Jason Litzinger <jlitzingerdev at gmail.com> wrote:

> I did try specifying the loopback index, however, I received a
> "Network Unreachable" error.  I didn't have time to dig into whether
> it was possible to do what I wanted with the loopback interface last
> night.
>

By default, the "multicast" flag is not enabled for the loopback interface
on Linux. Does running "ip link set dev lo multicast on" help here?
(Although requiring this would then be rather problematic for testing, as
doing this in containerized environments and restricted environments like
Travis is presumably impossible)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160805/ebe1c25b/attachment.html>

From jlitzingerdev at gmail.com  Thu Aug  4 22:29:23 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Thu, 4 Aug 2016 22:29:23 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
 <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>
Message-ID: <CAARXrPnuZKq=oCD=ZDQY2WuXgf7HvY+D8oe8-nbksO7QitBOFQ@mail.gmail.com>

> By default, the "multicast" flag is not enabled for the loopback interface
> on Linux. Does running "ip link set dev lo multicast on" help here?
> (Although requiring this would then be rather problematic for testing, as
> doing this in containerized environments and restricted environments like
> Travis is presumably impossible)
It didn't seem to.  Despite the subject, I'll focus on the existing,
IPv4 tests, rather than the new tests I'm writing (to eliminate any
issues in my code, though the change didn't help there either).

When I run with at least one interface up, my results for `./bin/trial
twisted` at SHA baba4c661a6606a56d8dab053cfe7b336a3c593e are:
PASSED (skips=2140, successes=9472)

When I take disconnect my wireless, and manually take down my lxr
interface, `ip link` shows:
1: lo: <LOOPBACK,MULTICAST,UP,LOWER_UP> mtu 65536 qdisc noqueue state
UNKNOWN mode DEFAULT group default qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: enp1s0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc
pfifo_fast state DOWN mode DEFAULT group default qlen 1000
    link/ether <removed> brd ff:ff:ff:ff:ff:ff
3: wlp2s0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc mq state
DOWN mode DORMANT group default qlen 1000
    link/ether <removed> brd ff:ff:ff:ff:ff:ff
4: lxcbr0: <BROADCAST,MULTICAST> mtu 1500 qdisc noqueue state DOWN
mode DEFAULT group default qlen 1000
    link/ether <removed> brd ff:ff:ff:ff:ff:ff

And the results of `./bin/trial` are:
FAILED (skips=2212, failures=3, errors=8, successes=9393)

Specific to multicast, one of the errors is:
Traceback (most recent call last):
Failure: twisted.internet.error.MulticastJoinError:
('\xe1\x00\x00\xfa', '\x00\x00\x00\x00', 19, 'No such device')

twisted.test.test_udp.MulticastTests.test_multicast

However, I can eliminate the error for test_multicast with the
following patch, and this works even when multicast is not explicitly
enabled on the loopback.

diff --git a/twisted/test/test_udp.py b/twisted/test/test_udp.py
index 6cf4583..79fd9d0 100644
--- a/twisted/test/test_udp.py
+++ b/twisted/test/test_udp.py
@@ -623,10 +623,10 @@ class MulticastTests(unittest.TestCase):
         received from it.
         """
         c = Server()
-        p = reactor.listenMulticast(0, c)
+        p = reactor.listenMulticast(0, c, interface="127.0.0.1")
         addr = self.server.transport.getHost()

-        joined = self.server.transport.joinGroup("225.0.0.250")
+        joined = self.server.transport.joinGroup("225.0.0.250",
interface="127.0.0.1")

         def cbJoined(ignored):
             d = self.server.packetReceived = Deferred()


Unfortunately, a similar change on my IPv6 code didn't yield the
results I was hoping for, but, I assume that's my problem.

Is there interest in a separate patch for these tests?  I assume a new ticket?

Thanks,
-Jason Litzinger


From randomcoder1 at gmail.com  Sat Aug  6 04:48:23 2016
From: randomcoder1 at gmail.com (Randomcoder)
Date: Sat, 6 Aug 2016 13:48:23 +0300
Subject: [Twisted-Python] clientfactory cleanup slow-down (after many http
	requests)
Message-ID: <20160806104823.GA14053@garage2>

Hello,

I've been working on a small Twisted program.
The program makes HTTP requests to a large number of feeds.
Twisted is used to speed up the entire process.
After the feeds are fetched, they're parsed. Finally they should be
written to a database (to simplify the code, that part is left out).

Feeds are fetched in parallel using gatherResults, and a batch is
built. Then all batches are again gathered into a set of batches,
a DeferredList is built out of those. A semaphore controls both the
batch-level list of deferreds, and a semaphore controls the entire batch
list deferred.

Currently, the program works ok on 100-150 feeds, and BATCH_SIZE between
5 and 20.

However, I notice the program starts to hang for a long time, when the
number of feeds goes over 150-200.

To be more precise, at the end of running the program, messages
like these are printed, but the program seems to not be very active:

    Stopping factory <twisted.web.client._HTTP11ClientFactory instance at 0x7f0b7d5f3908>

It seems like this is the cleanup phase.

I've read what I could find on the topic. I wasn't able to make progress
on it, so I'm posting to the mailing list to ask if someone has encountered this
before. Maybe it's a common pitfall or issue that other people have also
bumped into.

Thanks
-------------- next part --------------
http://mauveweb.co.uk/rss.xml "python"
http://blog.hownowstephen.com/rss "python"
http://blog.codepainters.com/feed/ "python"
http://chase-seibert.github.io/blog/atom.xml "python"
http://www.lshift.net/blog/feed/ "python"
http://django-planet.com/feeds/main/rss/ "python"
http://eflorenzano.com/atom.xml "python"

-------------- next part --------------
A non-text attachment was scrubbed...
Name: collect.py
Type: text/x-python
Size: 6818 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160806/fbf5912d/attachment.py>

From jlitzingerdev at gmail.com  Sat Aug  6 15:46:46 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Sat, 6 Aug 2016 15:46:46 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAARXrPnuZKq=oCD=ZDQY2WuXgf7HvY+D8oe8-nbksO7QitBOFQ@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
 <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>
 <CAARXrPnuZKq=oCD=ZDQY2WuXgf7HvY+D8oe8-nbksO7QitBOFQ@mail.gmail.com>
Message-ID: <CAARXrPkJV-=oKQ4=t+u2mi18dtmmjm0hS=S+XAxPc8Yv7CPCmQ@mail.gmail.com>

An update for those interested.  I've been hoping for a solution to
test IPv6 multicast using only the loopback interface.  Unfortunately,
the only working (on Linux) solution I've found is to manually add a
route for the multicast prefix used in the tests.

E.g. ip -6 route add ff01::/16 dev lo

Without this, and assuming I specify the loopback interface index, a
"Network Unreachable" error results.  I'm fairly certain the culprit
is a kernel route:

unreachable default dev lo  table unspec  proto kernel  metric
4294967295  error -101 pref medium
local ::1 dev lo  table local  proto none  metric 0  pref medium
unreachable default dev lo  table unspec  proto kernel  metric
4294967295  error -101 pref medium

That's the default output of `ip -6 route show table all` on my
machine (Ubuntu 16.04).  I haven't found much information on why that
route exists (let alone twice), so I'm going to have to turn to the
kernel source.

Regardless, route manipulation for tests is a non-starter, so unless
there's a way to flag the tests as requiring a network interface,
it'll be a while before I submit patches on the original feature.

Thanks for all the suggestions/feedback and I welcome any more.
-Jason


From glyph at twistedmatrix.com  Sat Aug  6 16:51:39 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 6 Aug 2016 15:51:39 -0700
Subject: [Twisted-Python] clientfactory cleanup slow-down (after many
	http requests)
In-Reply-To: <20160806104823.GA14053@garage2>
References: <20160806104823.GA14053@garage2>
Message-ID: <EC839276-759E-4172-BF0E-5990C170CE11@twistedmatrix.com>


> On Aug 6, 2016, at 03:48, Randomcoder <randomcoder1 at gmail.com> wrote:
> 
> Hello,
> 
> I've been working on a small Twisted program.

Cool, thanks for using Twisted.

> The program makes HTTP requests to a large number of feeds.
> Twisted is used to speed up the entire process.
> After the feeds are fetched, they're parsed. Finally they should be
> written to a database (to simplify the code, that part is left out).

Thanks for including examples, so we know exactly what you're talking about! :)

> Feeds are fetched in parallel using gatherResults, and a batch is
> built. Then all batches are again gathered into a set of batches,
> a DeferredList is built out of those. A semaphore controls both the
> batch-level list of deferreds, and a semaphore controls the entire batch
> list deferred.
> 
> Currently, the program works ok on 100-150 feeds, and BATCH_SIZE between
> 5 and 20.

This all seems pretty reasonable and following best practices and such...

> However, I notice the program starts to hang for a long time, when the
> number of feeds goes over 150-200.

Two key questions: what do you mean by "hang" and what is "a long time"?  Do you mean it's totally unresponsive, or do you mean it's just failing to make progress on downloading more feeds?

> 
> To be more precise, at the end of running the program, messages
> like these are printed, but the program seems to not be very active:
> 
>    Stopping factory <twisted.web.client._HTTP11ClientFactory instance at 0x7f0b7d5f3908>
> 
> It seems like this is the cleanup phase.

This just means that it is finished making connections.  We have to do some clean-up around the usefulness of these log messages, sorry :-\.

> I've read what I could find on the topic. I wasn't able to make progress
> on it, so I'm posting to the mailing list to ask if someone has encountered this
> before. Maybe it's a common pitfall or issue that other people have also
> bumped into.

Right now, my guess is this: some of the sites you're contacting have very slow proxies, or for some other reason let you connect to them, but then hang when sent requests.  If you're simultaneously requesting stuff from a very large number of different sites, this is sort of inevitably bound to happen, either based on network problems, or issues with the sites themselves.  I suspect you thought that the connectTimeout argument to Agent would save you from this, but that timeout is just for making the initial underlying TCP connection, not receiving a full response.  What you actually want to do is cancel the Deferred returned by Agent.request.

Luckily, https://treq.readthedocs.io/en/latest/ <https://treq.readthedocs.io/en/latest/> already implements this high-level timeout functionality for you, in the form of the 'timeout=' argument it accepts.  If you give that a try, do you see more connections timing out as it runs, rather than "hanging" the process for long periods of time?

As long as I'm looking at your code, as a way of thanking you for providing such a nice specific runnable example, I have a few other random thoughts which may be useful to you:

- I see you're importing psycopg.  Do you know about https://txpostgres.readthedocs.io/en/latest/ <https://txpostgres.readthedocs.io/en/latest/> ?  You can talk to postgres asynchronously with Twisted.
- d.addCallback(lambda out: out).addCallback(lambda resp: client.readBody(resp)) can be much more briefly spelled "d.addCallback(client.readBody)". d.addErrback(lambda err: err) does nothing and can just be removed.
- BrowserLikePolicyForHTTPS() is the default, so you don't need to pass that.
- clean_up_and_exit will only be called if batchesDef doesn't fail, and if it does fail, it will swallow the exception message.  Rather than manually calling `reactor.stop`, you probably want to use react(), <https://twistedmatrix.com/documents/16.3.0/api/twisted.internet.task.html#react <https://twistedmatrix.com/documents/16.3.0/api/twisted.internet.task.html#react>>.  This way your function is an API that anyone who wants to use it can call - it just returns a Deferred when it's done - but your __main__ block calls react() which will both start and stop the reactor, as well as reporting errors if there's a problem while still shutting down.

Hope some of that code review is helpful - let us know if the treq timeout solves the problem or if the issue is somewhere else!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160806/96ad3ad1/attachment.html>

From adi at roiban.ro  Sat Aug  6 17:31:14 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 7 Aug 2016 00:31:14 +0100
Subject: [Twisted-Python] twisted.python.dist as a public API
Message-ID: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>

Hi,

Why is twisted.python.dist3.py a public module?

Are there any external projects which need to get the list of the modules
ported to Python3?

------------------

Why is twisted.python.dist a public module?

The docstring starts with `Don't use this outside of Twisted.'  but why not
named it twisted.python._dist or twisted.python._setup to make it clear
that it is private ?

-------

I am trying to clean up the setup.py code as I feel that having the setup()
definition split between setup.py and dist.py is not ideal

----------

Can I rename twisted.python.dist and remove unused code from
twisted.python.dist without a deprecation dance?

--------------

The dedicated ticket is here https://twistedmatrix.com/trac/ticket/8622 and
is in the review queue

Regards,
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/d3514a90/attachment.html>

From glyph at twistedmatrix.com  Sat Aug  6 17:50:13 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 6 Aug 2016 16:50:13 -0700
Subject: [Twisted-Python] twisted.python.dist as a public API
In-Reply-To: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
References: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
Message-ID: <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>


> On Aug 6, 2016, at 16:31, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> Why is twisted.python.dist3.py <http://twisted.python.dist3.py/> a public module?

Negligence on the part of a code reviewer :).

> Are there any external projects which need to get the list of the modules ported to Python3?

No.  This info should be private.

> Why is twisted.python.dist a public module?

Similarly; this code was just accidentally made public without much thought.  This is why twisted.python._release exists, and contains much more code; 

> The docstring starts with `Don't use this outside of Twisted.'  but why not named it twisted.python._dist or twisted.python._setup to make it clear that it is private ?

Again; just a mistake.

> I am trying to clean up the setup.py code as I feel that having the setup() definition split between setup.py and dist.py is not ideal

The purpose of putting stuff in dist.py was just to be able to unit test it.  If you have some alternate strategy for testing, that might be better.

> Can I rename twisted.python.dist and remove unused code from twisted.python.dist without a deprecation dance?

You always have to follow the compatibility process - if it's not a security bug, we would have to change the process first :-).  But if you want to follow the exception path rather than the deprecation path (this message doesn't qualify, because the subject is incorrectly formatted) I certainly don't have any objection.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160806/f3a1569e/attachment-0001.html>

From adi at roiban.ro  Sun Aug  7 05:03:51 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 7 Aug 2016 12:03:51 +0100
Subject: [Twisted-Python] twisted.python.dist as a public API
In-Reply-To: <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>
References: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
 <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>
Message-ID: <CAFycZ9f34qzSQtOEP=ahmETY2w_sB_VmS+u6gg6ERR1O7GAYPQ@mail.gmail.com>

On 7 August 2016 at 00:50, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

[snip]


> You always have to follow the compatibility process - if it's not a
> security bug, we would have to change the process first :-).  But if you
> want to follow the exception path rather than the deprecation path (this
> message doesn't qualify, because the subject is incorrectly formatted) I
> certainly don't have any objection.
>
>
As pointed by Craig in the PR, dist3.py is used by
https://github.com/habnabit/twisted-depgraph. I will revert the dist3
change.

With this email, I just wanted to get an initial feedback and try to
understand why we have code split between setup.py and dist.py

I will come back with an email following the compatibility process.

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/f1bb5f28/attachment.html>

From adi at roiban.ro  Sun Aug  7 05:19:43 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 7 Aug 2016 12:19:43 +0100
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist renamed
	to twisted.python._setup
Message-ID: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>

Hi,

I would like to remove twisted.python.dist as a public API without
following the 1 year deprecation processes.

The module has a comment which informs people not to use it outside of
Twisted, but I think it should be private module instead.

The ticket is here https://twistedmatrix.com/trac/ticket/8622
The PR is here https://github.com/twisted/twisted/pull/467
The branch is here
https://github.com/twisted/twisted/tree/8622-setup-coverage

This is part of the setup.py cleanup effort for having most of the setup.py
code outside of setup.py itself so that we can test it as part of the
automated test suite.

twisted.python.dist3 was kept as a private API as it is already used  by
https://github.com/habnabit/twisted-depgraph

Please let me know if you are using twisted.python.dist outside of Twisted
and are against this change or if you approve it.

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/5789b081/attachment.html>

From glyph at twistedmatrix.com  Sun Aug  7 17:15:08 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 7 Aug 2016 16:15:08 -0700
Subject: [Twisted-Python] twisted.python.dist as a public API
In-Reply-To: <CAFycZ9f34qzSQtOEP=ahmETY2w_sB_VmS+u6gg6ERR1O7GAYPQ@mail.gmail.com>
References: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
 <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>
 <CAFycZ9f34qzSQtOEP=ahmETY2w_sB_VmS+u6gg6ERR1O7GAYPQ@mail.gmail.com>
Message-ID: <1879D20C-4FCD-4116-A786-C2F3F578BE0D@twistedmatrix.com>


> On Aug 7, 2016, at 4:03 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> 
> 
> On 7 August 2016 at 00:50, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> [snip]
>  
> You always have to follow the compatibility process - if it's not a security bug, we would have to change the process first :-).  But if you want to follow the exception path rather than the deprecation path (this message doesn't qualify, because the subject is incorrectly formatted) I certainly don't have any objection.
> 
> 
> As pointed by Craig in the PR, dist3.py is used by https://github.com/habnabit/twisted-depgraph <https://github.com/habnabit/twisted-depgraph>. I will revert the dist3 change.

I should point out that the entire point of twisted-depgraph is to help Twisted developers - basically, you and Craig - understand the dependencies remaining and port more things to py3.  So I'm pretty sure Aaron would not mind at all if he had to update it :).  It's not really a user-facing application, just a core developer tool.

> With this email, I just wanted to get an initial feedback and try to understand why we have code split between setup.py and dist.py 
> 
> I will come back with an email following the compatibility process.
> 
> Thanks!

No problem!  I have a little tool that imports dist3 myself, and it  is _super_ encouraging to see the percentages of ported code these days.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/fc589abe/attachment.html>

From glyph at twistedmatrix.com  Sun Aug  7 17:15:21 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 7 Aug 2016 16:15:21 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
	renamed to twisted.python._setup
In-Reply-To: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
Message-ID: <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>


> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I would like to remove twisted.python.dist as a public API without following the 1 year deprecation processes.
> 
> The module has a comment which informs people not to use it outside of Twisted, but I think it should be private module instead.
> 
> The ticket is here https://twistedmatrix.com/trac/ticket/8622 <https://twistedmatrix.com/trac/ticket/8622>
> The PR is here https://github.com/twisted/twisted/pull/467 <https://github.com/twisted/twisted/pull/467>
> The branch is here https://github.com/twisted/twisted/tree/8622-setup-coverage <https://github.com/twisted/twisted/tree/8622-setup-coverage>
> 
> This is part of the setup.py cleanup effort for having most of the setup.py code outside of setup.py itself so that we can test it as part of the automated test suite.
> 
> twisted.python.dist3 was kept as a private API as it is already used  by https://github.com/habnabit/twisted-depgraph <https://github.com/habnabit/twisted-depgraph>
> 
> Please let me know if you are using twisted.python.dist outside of Twisted and are against this change or if you approve it.
> 
> Thanks!

+1 from me!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/0499c800/attachment.html>

From rodrigc at crodrigues.org  Sun Aug  7 18:15:39 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 7 Aug 2016 17:15:39 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
Message-ID: <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>

On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> I would like to remove twisted.python.dist as a public API without
> following the 1 year deprecation processes.
>
> The module has a comment which informs people not to use it outside of
> Twisted, but I think it should be private module instead.
>
> The ticket is here https://twistedmatrix.com/trac/ticket/8622
> The PR is here https://github.com/twisted/twisted/pull/467
> The branch is here https://github.com/twisted/twisted/tree/8622-
> setup-coverage
>
> This is part of the setup.py cleanup effort for having most of the
> setup.py code outside of setup.py itself so that we can test it as part of
> the automated test suite.
>
> twisted.python.dist3 was kept as a private API as it is already used  by
> https://github.com/habnabit/twisted-depgraph
>
> Please let me know if you are using twisted.python.dist outside of Twisted
> and are against this change or if you approve it.
>
> Thanks!
>
>
> +1 from me!
>
>
>

-1 from me.  dist.py probably should have been a private API from the
beginning, but it slipped through the cracks.
However, what has been done is done.  This change seems gratuitous and
pointless with
no benefits to anybody.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/110dc683/attachment.html>

From hawkowl at atleastfornow.net  Sun Aug  7 18:25:48 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Mon, 8 Aug 2016 08:25:48 +0800
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
	renamed to twisted.python._setup
In-Reply-To: <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
Message-ID: <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>


> On 8 Aug 2016, at 08:15, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Hi,
>> 
>> I would like to remove twisted.python.dist as a public API without following the 1 year deprecation processes.
>> 
>> The module has a comment which informs people not to use it outside of Twisted, but I think it should be private module instead.
>> 
>> The ticket is here https://twistedmatrix.com/trac/ticket/8622 <https://twistedmatrix.com/trac/ticket/8622>
>> The PR is here https://github.com/twisted/twisted/pull/467 <https://github.com/twisted/twisted/pull/467>
>> The branch is here https://github.com/twisted/twisted/tree/8622-setup-coverage <https://github.com/twisted/twisted/tree/8622-setup-coverage>
>> 
>> This is part of the setup.py cleanup effort for having most of the setup.py code outside of setup.py itself so that we can test it as part of the automated test suite.
>> 
>> twisted.python.dist3 was kept as a private API as it is already used  by https://github.com/habnabit/twisted-depgraph <https://github.com/habnabit/twisted-depgraph>
>> 
>> Please let me know if you are using twisted.python.dist outside of Twisted and are against this change or if you approve it.
>> 
>> Thanks!
> 
> +1 from me!
> 
> 
> 
> 
> -1 from me.  dist.py probably should have been a private API from the beginning, but it slipped through the cracks.
> However, what has been done is done.  This change seems gratuitous and pointless with
> no benefits to anybody.
> 
> --
> Craig

I believe there's a point to it -- that is, we make it clear what is and what isn't user API. It's always said it in the header, but we should codify that it's really not user API. Plus it being private means we can make what changes we need for future setup.py changes, without deprecating things that nobody but us should ever use.

+1 from me.

- Amber

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160808/7343af71/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160808/7343af71/attachment-0001.pgp>

From rodrigc at crodrigues.org  Sun Aug  7 18:35:24 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 7 Aug 2016 17:35:24 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
Message-ID: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>

On Sun, Aug 7, 2016 at 5:25 PM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

>
> On 8 Aug 2016, at 08:15, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>
>
>
> On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> I would like to remove twisted.python.dist as a public API without
>> following the 1 year deprecation processes.
>>
>> The module has a comment which informs people not to use it outside of
>> Twisted, but I think it should be private module instead.
>>
>> The ticket is here https://twistedmatrix.com/trac/ticket/8622
>> The PR is here https://github.com/twisted/twisted/pull/467
>> The branch is here https://github.com/twisted/twisted/tree/8622-setup-
>> coverage
>>
>> This is part of the setup.py cleanup effort for having most of the
>> setup.py code outside of setup.py itself so that we can test it as part of
>> the automated test suite.
>>
>> twisted.python.dist3 was kept as a private API as it is already used  by
>> https://github.com/habnabit/twisted-depgraph
>>
>> Please let me know if you are using twisted.python.dist outside of
>> Twisted and are against this change or if you approve it.
>>
>> Thanks!
>>
>>
>> +1 from me!
>>
>>
>>
>
> -1 from me.  dist.py probably should have been a private API from the
> beginning, but it slipped through the cracks.
> However, what has been done is done.  This change seems gratuitous and
> pointless with
> no benefits to anybody.
>
> --
> Craig
>
>
> I believe there's a point to it -- that is, we make it clear what is and
> what isn't user API. It's always said it in the header, but we should
> codify that it's really not user API. Plus it being private means we can
> make what changes we need for future setup.py changes, without deprecating
> things that nobody but us should ever use.
>
> +1 from me.
>
>
I understand the motivation, but the time to have done this was when dist.py
was originally reviewed.

There are real problems in the Twisted code, and in the Twisted
infrastructure.
Focusing on something like this instead of those problems seems pointless,
gratuitous and of little benefit.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/3223ac53/attachment.html>

From hawkowl at atleastfornow.net  Sun Aug  7 18:42:48 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sun, 7 Aug 2016 17:42:48 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
Message-ID: <CAMxb2is9ipd_A=0cNMJUcByUcKHoDneoVQAjdtcP8VnT=4i6AA@mail.gmail.com>

t.p.dist dates from 2005, and as far as I can tell, predates Twisted's code
review system. It's an early mistake, but we can fix many mistakes in
parallel.

- Amber

On 8 Aug 2016 08:36, "Craig Rodrigues" <rodrigc at crodrigues.org> wrote:

>
>
> On Sun, Aug 7, 2016 at 5:25 PM, Amber "Hawkie" Brown <
> hawkowl at atleastfornow.net> wrote:
>
>>
>> On 8 Aug 2016, at 08:15, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>>
>>
>>
>> On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
>>  wrote:
>>
>>>
>>> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
>>>
>>> Hi,
>>>
>>> I would like to remove twisted.python.dist as a public API without
>>> following the 1 year deprecation processes.
>>>
>>> The module has a comment which informs people not to use it outside of
>>> Twisted, but I think it should be private module instead.
>>>
>>> The ticket is here https://twistedmatrix.com/trac/ticket/8622
>>> The PR is here https://github.com/twisted/twisted/pull/467
>>> The branch is here https://github.com/twiste
>>> d/twisted/tree/8622-setup-coverage
>>>
>>> This is part of the setup.py cleanup effort for having most of the
>>> setup.py code outside of setup.py itself so that we can test it as part of
>>> the automated test suite.
>>>
>>> twisted.python.dist3 was kept as a private API as it is already used  by
>>>  https://github.com/habnabit/twisted-depgraph
>>>
>>> Please let me know if you are using twisted.python.dist outside of
>>> Twisted and are against this change or if you approve it.
>>>
>>> Thanks!
>>>
>>>
>>> +1 from me!
>>>
>>>
>>>
>>
>> -1 from me.  dist.py probably should have been a private API from the
>> beginning, but it slipped through the cracks.
>> However, what has been done is done.  This change seems gratuitous and
>> pointless with
>> no benefits to anybody.
>>
>> --
>> Craig
>>
>>
>> I believe there's a point to it -- that is, we make it clear what is and
>> what isn't user API. It's always said it in the header, but we should
>> codify that it's really not user API. Plus it being private means we can
>> make what changes we need for future setup.py changes, without deprecating
>> things that nobody but us should ever use.
>>
>> +1 from me.
>>
>>
> I understand the motivation, but the time to have done this was when
> dist.py
> was originally reviewed.
>
> There are real problems in the Twisted code, and in the Twisted
> infrastructure.
> Focusing on something like this instead of those problems seems pointless,
> gratuitous and of little benefit.
>
> --
> Craig
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/df24e04d/attachment.html>

From mithrandi at mithrandi.net  Sun Aug  7 18:58:06 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 08 Aug 2016 00:58:06 +0000
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
Message-ID: <CAMcKhMRRnyr1pmBRD8E32rAAR=iVcYgj5-4EEC6Dw+XWVP8yxQ@mail.gmail.com>

+1 from me

On Mon, 8 Aug 2016 at 02:35 Craig Rodrigues <rodrigc at crodrigues.org> wrote:

>
> I understand the motivation, but the time to have done this was when
> dist.py
> was originally reviewed.
>
> There are real problems in the Twisted code, and in the Twisted
> infrastructure.
> Focusing on something like this instead of those problems seems pointless,
> gratuitous and of little benefit.
>

The problem is that if we defer this change until later, it becomes a lot
more work then. If we do it now, while nobody is depending on the module,
then we save ourselves that work in future by doing a trivial amount of
work now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160808/e57a0934/attachment.html>

From chriswwolfe at gmail.com  Sun Aug  7 21:00:30 2016
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Mon, 08 Aug 2016 03:00:30 +0000
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAMcKhMRRnyr1pmBRD8E32rAAR=iVcYgj5-4EEC6Dw+XWVP8yxQ@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <CAMcKhMRRnyr1pmBRD8E32rAAR=iVcYgj5-4EEC6Dw+XWVP8yxQ@mail.gmail.com>
Message-ID: <CAEKSqksqgbwa96Ltv310CNqB_YxD0oQDZizDweLpO1=bnkFXww@mail.gmail.com>

+1 from me as well. Depending directly on how twisted installs itself seems
problematic. In my opinion, the more we discourage this practice the better.

On Sun, Aug 7, 2016 at 8:00 PM Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> +1 from me
>
> On Mon, 8 Aug 2016 at 02:35 Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
>>
>> I understand the motivation, but the time to have done this was when
>> dist.py
>> was originally reviewed.
>>
>> There are real problems in the Twisted code, and in the Twisted
>> infrastructure.
>> Focusing on something like this instead of those problems seems pointless,
>> gratuitous and of little benefit.
>>
>
> The problem is that if we defer this change until later, it becomes a lot
> more work then. If we do it now, while nobody is depending on the module,
> then we save ourselves that work in future by doing a trivial amount of
> work now.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-- 
- Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160808/328f2b5c/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Aug  8 00:01:54 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 7 Aug 2016 23:01:54 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
	renamed to twisted.python._setup
In-Reply-To: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
Message-ID: <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>


> On Aug 7, 2016, at 5:35 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I understand the motivation, but the time to have done this was when dist.py
> was originally reviewed.

It certainly would have been better :-).

> There are real problems in the Twisted code, and in the Twisted infrastructure.

This is also addressing a real problem.  One of the major issues with Twisted is documentation noise.  Developers trying to use Twisted to build things frequently complain about this: they look for an API to do XYZ, and they search the reference documentation, which produces dozens of confusing, irrelevant hits.  There are multiple issues that interact here (see, for example, <https://github.com/twisted/pydoctor/issues/49> which is a big part of the problem) but one significant one is that our apparently-public API surface is just too big.  Removing things like this, which are really _totally_ useless to anyone, is useful in and of itself and also amplifies the benefit of any other work on docs and tooling to properly segregate public and private API documentation.

For a long time we were extremely conservative about doing any compatibility-breaking thing, even hypothetically breaking, even within the policy we'd set forth, and I think the result of that is a sprawling API that's incredibly hard to navigate, full of old junk that nobody should ever use.  The slightly more aggressive attitude that has been exemplified by e.g. Amber has been a breath of fresh air when it comes to unburdening ourselves from literal garbage.

So I think that "overburdened public API surface" is one of the largest problems facing Twisted and every little bit we can chip away at it is a real win.  We do have to be super careful of course, we don't want to be chopping off obscure but useful pieces of API that programs were actually using, but that's what the compat policy (and judicious judgement) are for.

> Focusing on something like this instead of those problems seems pointless, gratuitous and of little benefit.

In addition to underplaying the usefulness of maintenance like this, I think this comment belies acceptance of a superficially true falsehood - one that I've often fallen prey to myself - and that is, the idea that volunteer time is fungible.  It isn't.  If the members of a project have problems A, B, C, X, Y, Z in very clear ranked order of importance, and a volunteer ("V") shows up to work on Z, the impulse of the existing members of the project is "but you should really just work on 'A'!".  V doesn't care about A, doesn't want to work on A, and the likely result of telling them they should be working on A is that they will feel bad about not working on A and their fix for Z will go unfinished.

I'm not saying that necessarily applies in its full force here; after all Adi is a member of the project as well.  But one of the corollaries of this realization is that if A were really so important someone would already be working on it :).

We should totally have the ABCXYZ list in case anyone shows up just wondering what would be helpful to work on; but if someone shows up with a solution to Z, we should always try to incorporate it and help them feel motivated about continuing, hopefully up the list towards A of course, but maybe they are going to contribute stuff for M, N, and O that we didn't even realize was a problem.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/91ec9073/attachment.html>

From rodrigc at crodrigues.org  Mon Aug  8 00:53:50 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 7 Aug 2016 23:53:50 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
Message-ID: <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>

On Sun, Aug 7, 2016 at 11:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> This is also addressing a real problem.  One of the *major* issues with
> Twisted is *documentation noise*.  Developers trying to use Twisted to
> build things frequently complain about this: they look for an API to do
> XYZ, and they search the reference documentation, which produces dozens of
> confusing, irrelevant hits.  There are multiple issues that interact here
> (see, for example, <https://github.com/twisted/pydoctor/issues/49> which
> is a big part of the problem) but one significant one is that our
> apparently-public API surface is just too big.  Removing things like this,
> which are really _totally_ useless to anyone, is useful in and of itself
> and also amplifies the benefit of any other work on docs and tooling to
> properly segregate public and private API documentation.
>
>

Making dist.py private seems to fall under the category of "code
cleanliness", and doesn't
seem to solve any specific pressing issue that I see.  Reducing
documentation noise is a good goal,
but if dist.py was left the way it is, things would probably be OK with
Twisted, and I think people
could figure things out in Twisted with respect to the documentation.

Since you mention pydoctor, I will mention two issues, that I feel are more
important to the project
that moving around dist.py:


   - pydoctor produces false errors, specifically in h2 code:
   https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/steps/api-documentation/logs/pydoctor%20errors
   - pydoctor doesn't work on Python 3:
   https://github.com/twisted/pydoctor/issues/96

I understand that Twisted is a volunteer project, and people can work on
whatever they want.
I also see on this list, that a few people support the dist.py change, so
as long as
Adi's change meets the Twisted coding standards, gets code review approval,
and can pass all the buildbots,
it can move forward, despite my objections.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160807/e36d491e/attachment.html>

From radix at twistedmatrix.com  Mon Aug  8 01:10:39 2016
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 08 Aug 2016 07:10:39 +0000
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
 <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
Message-ID: <CAPkRfUSV-RgeO=0dLKoQZ9zpKE+SLZsHzXEeQNhZ6FJxnbL+wQ@mail.gmail.com>

The reason this module never had an underscore (and instead has the "don't
use this outside of Twisted" line in the docstring) is because it
originated in a time when Twisted was ostensibly split up into multiple
projects, and I ill-advisedly decided that it technically needed to be
"public" in order for the non-Twisted-core subprojects to use it. That was
a silly decision, and given that the docstring has always told people not
to use it, please feel free to rename it.

-Chris

On Mon, Aug 8, 2016, 1:56 AM Craig Rodrigues <rodrigc at crodrigues.org> wrote:

> On Sun, Aug 7, 2016 at 11:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> This is also addressing a real problem.  One of the *major* issues with
>> Twisted is *documentation noise*.  Developers trying to use Twisted to
>> build things frequently complain about this: they look for an API to do
>> XYZ, and they search the reference documentation, which produces dozens of
>> confusing, irrelevant hits.  There are multiple issues that interact here
>> (see, for example, <https://github.com/twisted/pydoctor/issues/49> which
>> is a big part of the problem) but one significant one is that our
>> apparently-public API surface is just too big.  Removing things like this,
>> which are really _totally_ useless to anyone, is useful in and of itself
>> and also amplifies the benefit of any other work on docs and tooling to
>> properly segregate public and private API documentation.
>>
>>
>
> Making dist.py private seems to fall under the category of "code
> cleanliness", and doesn't
> seem to solve any specific pressing issue that I see.  Reducing
> documentation noise is a good goal,
> but if dist.py was left the way it is, things would probably be OK with
> Twisted, and I think people
> could figure things out in Twisted with respect to the documentation.
>
> Since you mention pydoctor, I will mention two issues, that I feel are
> more important to the project
> that moving around dist.py:
>
>
>    - pydoctor produces false errors, specifically in h2 code:
>    https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/steps/api-documentation/logs/pydoctor%20errors
>    - pydoctor doesn't work on Python 3:
>    https://github.com/twisted/pydoctor/issues/96
>
> I understand that Twisted is a volunteer project, and people can work on
> whatever they want.
> I also see on this list, that a few people support the dist.py change, so
> as long as
> Adi's change meets the Twisted coding standards, gets code review
> approval, and can pass all the buildbots,
> it can move forward, despite my objections.
>
> --
> Craig
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160808/1b9b0e83/attachment-0001.html>

From adi at roiban.ro  Mon Aug  8 03:54:26 2016
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 8 Aug 2016 10:54:26 +0100
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
 <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
Message-ID: <CAFycZ9cYrRtaPHZti3ZUOzmzc9HmNB9TQE7gyncjSuZ1-JdVnQ@mail.gmail.com>

On 8 August 2016 at 07:53, Craig Rodrigues <rodrigc at crodrigues.org> wrote:

> On Sun, Aug 7, 2016 at 11:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> This is also addressing a real problem.  One of the *major* issues with
>> Twisted is *documentation noise*.  Developers trying to use Twisted to
>> build things frequently complain about this: they look for an API to do
>> XYZ, and they search the reference documentation, which produces dozens of
>> confusing, irrelevant hits.  There are multiple issues that interact here
>> (see, for example, <https://github.com/twisted/pydoctor/issues/49> which
>> is a big part of the problem) but one significant one is that our
>> apparently-public API surface is just too big.  Removing things like this,
>> which are really _totally_ useless to anyone, is useful in and of itself
>> and also amplifies the benefit of any other work on docs and tooling to
>> properly segregate public and private API documentation.
>>
>>
>
> Making dist.py private seems to fall under the category of "code
> cleanliness", and doesn't
> seem to solve any specific pressing issue that I see.  Reducing
> documentation noise is a good goal,
> but if dist.py was left the way it is, things would probably be OK with
> Twisted, and I think people
> could figure things out in Twisted with respect to the documentation.
>
> Since you mention pydoctor, I will mention two issues, that I feel are
> more important to the project
> that moving around dist.py:
>
>
>    - pydoctor produces false errors, specifically in h2 code:
>    https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/
>    steps/api-documentation/logs/pydoctor%20errors
>    <https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/steps/api-documentation/logs/pydoctor%20errors>
>    - pydoctor doesn't work on Python 3: https://github.com/twisted/
>    pydoctor/issues/96
>
> I have already proposed a solution for the pydoctor h2 issue
https://github.com/twisted/pydoctor/pull/126
... waiting for a review :)

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160808/ce9dc1cf/attachment.html>

From adi at roiban.ro  Tue Aug  9 06:28:52 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 9 Aug 2016 13:28:52 +0100
Subject: [Twisted-Python] close to the finish line on hosted windows
	testing
In-Reply-To: <EC43BB15-AFDC-42F3-8182-33EE3F2EFDC6@atleastfornow.net>
References: <4BBAB63C-216F-48B5-9163-F2659C0F34F9@twistedmatrix.com>
 <EC43BB15-AFDC-42F3-8182-33EE3F2EFDC6@atleastfornow.net>
Message-ID: <CAFycZ9eBkCx0dDuA94n0ddYXyiQEX6XetmZJ7MjTiP7nvFhkmw@mail.gmail.com>

On 24 July 2016 at 20:07, Amber "Hawkie" Brown
<hawkowl at atleastfornow.net> wrote:
> Just a note; I've got both issues fixed on a branch and am just cleaning it
> up for review. Them, I would like to remove the (quite broken) Windows 7
> builder and just use appveyor.
>
> - Amber

Just an update on this.

We got a $130/month credit sponsored by MS for Azure VMs, including
Windows 8.1 and Windows 10 VMs.

Right now I don't have time to manage a Windows buildslave, but if
someone want to maintain the buildbot slaves on Windows I can take
care of creating the VM and give the required access and I can also
take care of updating the buildbot configuration.

The Appveyor build is pretty responsive and is available to anyone...
so hosted Windows is not a top priority.

I think that Appveyor only runs on a single Windows Server flavor...
so with Azure we can also have desktop flavors.

For security reasons Buildbot slaves are accessible only to the
Twisted team members, and this reduces their usefulness.

The goal is to have latent slaves starting from a snapshot and running
all PRs even if they are from forks.

If you are already running latest buildbot slaves on Azure and want to
share your infrastructure code, please let me know as it would be of
great help. I have never used Azure API and I am just starting to
learn how it works.

---------

Even if we don't run Azure VMs, the Azure account is of great help as
it makes it easier to publish the Windows wheels generated on Appveyor
using the Azure Blob storage

Many thanks to Microsoft for providing access to these VMs and for the
MSDN subscription.T

-- 
Adi Roiban


From hawkowl at atleastfornow.net  Wed Aug 10 06:47:35 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Wed, 10 Aug 2016 20:47:35 +0800
Subject: [Twisted-Python] Twisted 16.3.1 Prerelease 1 Announcement
Message-ID: <FFF8521A-4ACF-48A5-AC53-BBA30BE098E9@atleastfornow.net>

Hi everyone,

I've just uploaded the first prerelease of Twisted 16.3.1, a security & critical bug fix release of the 16.3 series. It contains:

- A bugfix for a HTTP/2 edge case,
- Fix for CVE-2008-7317 (generating potentially guessable HTTP session identifiers)
- Fix for CVE-2008-7318 (sending secure session cookies over insecured connections)
- Fix for CVE-2016-1000111 (http://httpoxy.org/)

You can find the tarball and the full news file for testing at https://twistedmatrix.com/Releases/pre/16.3.1pre1/ .

If no issues are found, I will issue a full release by Friday.

- Amber
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160810/e6e5bc98/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160810/e6e5bc98/attachment.pgp>

From rodrigc at crodrigues.org  Thu Aug 11 06:42:16 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 11 Aug 2016 05:42:16 -0700
Subject: [Twisted-Python] More tests running on Python 3
In-Reply-To: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
References: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
Message-ID: <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>

I looked at latest Travis builds on Linux:

DATE                       BUILD
====                        =====
August 11, 2016      https://travis-ci.org/twisted/twisted/jobs/151440581


Tests on Python 2.7
===============
11640  (skips=2083, successes=9557)

Tests on Python 3.5
================
9647   (skips=2008, successes=7639)

--
Craig

On Thu, Jun 30, 2016 at 3:43 PM, Craig Rodrigues <rodrigc at crodrigues.org
<rodrigc at freebsd.org>> wrote:

> Hi,
>
> I looked at these two Travis builds on Linux
>
> DATE              BUILD
> ====              =====
> June  3, 2016    https://travis-ci.org/twisted/twisted/builds/135219940
> June 30, 2016    https://travis-ci.org/twisted/twisted/builds/141426367
>
>
> I noticed:
>
> DATE             Tests on Python 2.7
> ====              =====================================
> June  3, 2016     11438 (skips=3013, successes=8425)
> June 30, 2016    11496 (skips=2063, successes=9433)
>
>
> DATE             Tests on Python 3.5
> ====               =====================================
> June  3, 2016     6367 (skips=1533, successes=4834)
> June 30, 2016    7902 (skips=1693, successes=6209)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160811/e1faaeee/attachment.html>

From cory at lukasa.co.uk  Thu Aug 11 06:54:35 2016
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 11 Aug 2016 13:54:35 +0100
Subject: [Twisted-Python] More tests running on Python 3
In-Reply-To: <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
References: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
 <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
Message-ID: <4CFE8A36-D21B-42FD-9FF8-DFBF72E2BAAE@lukasa.co.uk>

This is really excellent work!

Cory

> On 11 Aug 2016, at 13:42, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I looked at latest Travis builds on Linux:
> 
> DATE                       BUILD
> ====                        =====
> August 11, 2016      https://travis-ci.org/twisted/twisted/jobs/151440581 <https://travis-ci.org/twisted/twisted/jobs/151440581>
>  
> 
> Tests on Python 2.7
> ===============
> 11640  (skips=2083, successes=9557)
> 
> Tests on Python 3.5
> ================
> 9647   (skips=2008, successes=7639)
> 
> --
> Craig
> 
> On Thu, Jun 30, 2016 at 3:43 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at freebsd.org>> wrote:
> Hi,
> 
> I looked at these two Travis builds on Linux
> 
> DATE              BUILD
> ====              =====
> June  3, 2016    https://travis-ci.org/twisted/twisted/builds/135219940 <https://travis-ci.org/twisted/twisted/builds/135219940>
> June 30, 2016    https://travis-ci.org/twisted/twisted/builds/141426367 <https://travis-ci.org/twisted/twisted/builds/141426367>
> 
> 
> I noticed:
> 
> DATE             Tests on Python 2.7
> ====              =====================================
> June  3, 2016     11438 (skips=3013, successes=8425)
> June 30, 2016    11496 (skips=2063, successes=9433)
> 
> 
> DATE             Tests on Python 3.5
> ====               =====================================
> June  3, 2016     6367 (skips=1533, successes=4834)
> June 30, 2016    7902 (skips=1693, successes=6209)
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160811/b817b4fb/attachment.html>

From adi at roiban.ro  Thu Aug 11 07:11:43 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 11 Aug 2016 14:11:43 +0100
Subject: [Twisted-Python] More tests running on Python 3
In-Reply-To: <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
References: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
 <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
Message-ID: <CAFycZ9eiuCmH6RRHvRegNW0poxFKTS3cwfM7p9nDayd-e+JiHg@mail.gmail.com>

On 11 August 2016 at 13:42, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> I looked at latest Travis builds on Linux:
>
> DATE                       BUILD
> ====                        =====
> August 11, 2016      https://travis-ci.org/twisted/twisted/jobs/151440581
>
>
> Tests on Python 2.7
> ===============
> 11640  (skips=2083, successes=9557)
>
> Tests on Python 3.5
> ================
> 9647   (skips=2008, successes=7639)
>
> --
> Craig
>


Great work!

Here is my bad math :)

So from 3rd of June to 11th of August we have an increase of 51.5% in
Python3 tests.

Also, while on the 3rd of June only 55% of Python2 tests were executed
on Python3 (as a raw measure)
in 11th of August the gap was reduced and now we have 88% of total
tests executed on Python3

This is a huge progress!
Many thanks!

-- 
Adi Roiban


From adi at roiban.ro  Thu Aug 11 07:59:12 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 11 Aug 2016 14:59:12 +0100
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the transport's
 connected flag on connection lost
Message-ID: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>

Hi,

I have observed that when a SSL4ClientEndpoint was used, the
protocol's transport `connected` attribute is not updated by the
wrapper when the connection is lost.

I have this code which will need your own server cert+key file:

https://gist.github.com/adiroiban/8e0be840f81750f88a587e634ddfb194

I tried it on twisted/trunk and when SSL is used the output is

server:client connected
client:connected
client:send-message
server:data received
client:connection-lost
client:transport-status:1:wrapped-transport->0
server:client disconnected
client:transport-status:1:wrapped-transport->0

while without SSL the output is:

server:client connected
client:connected
client:send-message
server:data received
server:client disconnected
client:connection-lost
client:transport-status:0:wrapped-transport->0
client:transport-status:0:wrapped-transport->0

------------

My current finding is that the reactor will call connection lost on
t.i.abstract.FileDescriptor.connectionLost and not on
t.protocols.policies.ProtocolWrapper

so it seems that when SSL is used the wrapped protocol is registered
instead of the wrapping protocol.

------

I am doing something wrong here?

Is this the expected behavior or this is a bug?

Thanks!

-- 
Adi Roiban


From adi at roiban.ro  Thu Aug 11 08:21:56 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 11 Aug 2016 15:21:56 +0100
Subject: [Twisted-Python] twisted.internet.protocol.Protocol.connected flag
	purpose
Message-ID: <CAFycZ9e5bqNUx2MBLWKt4aNW=CRxMyMai0HBFcOCthULiVgB4w@mail.gmail.com>

Hi,

Looking at the code in trunk [1] I can see that
t.internet.protocol.Protocol will update the 'connected' attribute
upon makeConnection but will not update it on connectionLost

Is this the intended design?
Is this design documented somewhere ?

I have check the narrative docs [2] and api-docs[3] but this attribute
is not documented.

What is the purpose of t.internet.protocol.Protocol.connected ?

Thanks!

[1] https://github.com/twisted/twisted/blob/trunk/twisted/internet/protocol.py#L471
[2] http://twistedmatrix.com/documents/current/core/howto/servers.html#protocols
[3]
-- 
Adi Roiban


From burak.arslan at arskom.com.tr  Thu Aug 11 09:55:35 2016
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Thu, 11 Aug 2016 18:55:35 +0300
Subject: [Twisted-Python] reading multipart/form-data headers
Message-ID: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>

Hello All,

You can find a sample HTTP POST request using HTTP multipart/form-data
at the end of this message.

The server that handles this request is using twisted so I end up with a
Request object. Is there a way I can extract the file name
("image008.jpg") from this stream? I'm looking at the source of
cgi.parse_multipart() and it seems to be ignored.

Best regards Burak

PS:

POST /put HTTP/1.1
Host: localhost:7111
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: multipart/form-data; boundary=---------------------------352471062160373366296932264
Content-Length: 382691

-----------------------------352471062160373366296932264
Content-Disposition: form-data; name="name"

a
-----------------------------352471062160373366296932264
Content-Disposition: form-data; name="version"

1
-----------------------------352471062160373366296932264
Content-Disposition: form-data; name="data"; filename="image008.jpg"
Content-Type: image/jpeg

(...)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160811/d4862ee9/attachment-0001.html>

From wolfgang.kde at rohdewald.de  Thu Aug 11 09:56:51 2016
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Thu, 11 Aug 2016 17:56:51 +0200
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1985097.xpC6b6TUEP@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
Message-ID: <1474725.BNzsdodUFN@skull>

Am Dienstag, 2. August 2016, 10:45:32 CEST schrieb Wolfgang Rohdewald:
> Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
> > #7598: Port twisted.spread.pb to Python3
> 
> did you test with client on Python2 and server on Python3 and vice versa?
> 
> Not a bug report, but anyway ... This was client with Python3, 
> server with Python2

 I have now restricted testing to using the same version of Python
on both sides.

That works nicely with my application. 

Hope this is released soon!

--
Wolfgang


From glyph at twistedmatrix.com  Thu Aug 11 14:35:14 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 11 Aug 2016 13:35:14 -0700
Subject: [Twisted-Python] twisted.internet.protocol.Protocol.connected
	flag purpose
In-Reply-To: <CAFycZ9e5bqNUx2MBLWKt4aNW=CRxMyMai0HBFcOCthULiVgB4w@mail.gmail.com>
References: <CAFycZ9e5bqNUx2MBLWKt4aNW=CRxMyMai0HBFcOCthULiVgB4w@mail.gmail.com>
Message-ID: <AE84D680-AAF2-4FFD-B8D9-9A88AD47B4D2@twistedmatrix.com>


> On Aug 11, 2016, at 7:21 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> Looking at the code in trunk [1] I can see that
> t.internet.protocol.Protocol will update the 'connected' attribute
> upon makeConnection but will not update it on connectionLost
> 
> Is this the intended design?

I'm sure someone intended it at some point!  But it seems like an extraneous wart.  (This state can be detected by the presence of the 'transport' attribute, so it doesn't tell us anything interesting.)

> Is this design documented somewhere ?

Doubtful.

> I have check the narrative docs [2] and api-docs[3] but this attribute
> is not documented.
> 
> What is the purpose of t.internet.protocol.Protocol.connected ?

Many things that date back this far are simple accidents of implementation.  Protocol is, after all, from the very first versions of Twisted, before we even had TDD in place.  So, unfortunately, as you're discovering, sometimes there are random little bits of maybe-useful-but-ultimately-broken functionality hanging around in uninspected parts of the codebase.

In all likelihood, whoever was implementing makeConnection (me probably, or maybe Itamar or Moshe) thought "hrm, maybe I'd like to know if the protocol is connected?", stuck the attribute on there, but then forgot that they'd had that idea by the time they got to connectionLost.

That said, I don't think we should bother removing this particular wart here.  If we deprecate the attribute, we deprecate the use of the attribute 'connected' on any subclass of Protocol, which may be quite valid.  Given that it's also an old-style class, it would add non-trivial overhead to attribute access too; it would generally be a big mess.

Instead, if you want to get rid of this, we should add a new way of writing Protocol objects, which is to use a new class decorator that fills out the methods on IProtocol with no-op implementations, rather than using inheritance.  This new decorator, which resolves a bunch other problems with using inheritance, could drop accidental details like this one (if there are others; or just this one :)).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160811/2e94a20a/attachment.html>

From glyph at twistedmatrix.com  Thu Aug 11 14:52:21 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 11 Aug 2016 13:52:21 -0700
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
Message-ID: <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>

> On Aug 11, 2016, at 8:55 AM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hello All,
> 
> You can find a sample HTTP POST request using HTTP multipart/form-data at the end of this message.
> 
> The server that handles this request is using twisted so I end up with a Request object. Is there a way I can extract the file name ("image008.jpg") from this stream? I'm looking at the source of cgi.parse_multipart() and it seems to be ignored.
> 
Sadly Twisted just calls into cgi.parse_multipart and so it is in fact ignored.  You might be able to re-parse the request body (request.content.seek(0); request.content.read()) with something like <https://docs.python.org/2.7/library/email.mime.html#email.mime.multipart.MIMEMultipart <https://docs.python.org/2.7/library/email.mime.html#email.mime.multipart.MIMEMultipart>> or <https://github.com/mailgun/flanker <https://github.com/mailgun/flanker>> to extract more information about the MIME.

It would definitely be better for Twisted to have more robust facilities for dealing with request inputs, particularly to be able to process large uploads as a stream rather than an individual message (and such an API for form post uploads should obviously include the content disposition filename).  See <https://twistedmatrix.com/trac/ticket/288 <https://twistedmatrix.com/trac/ticket/288>> for more discussion :).

Thanks for using Twisted, and sorry about this shortcoming.

-g



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160811/d27c5c14/attachment.html>

From glyph at twistedmatrix.com  Thu Aug 11 14:53:19 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 11 Aug 2016 13:53:19 -0700
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1474725.BNzsdodUFN@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull> <1474725.BNzsdodUFN@skull>
Message-ID: <963DEF05-F618-4544-AAAB-4259E8374955@twistedmatrix.com>


> On Aug 11, 2016, at 8:56 AM, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de> wrote:
> 
> Am Dienstag, 2. August 2016, 10:45:32 CEST schrieb Wolfgang Rohdewald:
>> Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
>>> #7598: Port twisted.spread.pb to Python3
>> 
>> did you test with client on Python2 and server on Python3 and vice versa?
>> 
>> Not a bug report, but anyway ... This was client with Python3, 
>> server with Python2
> 
> I have now restricted testing to using the same version of Python
> on both sides.
> 
> That works nicely with my application. 

Thank you for testing!

> Hope this is released soon!

It didn't make it for 16.4, but I'd anticipate it will likely land in 16.5.  I just need to figure out what's going on with the python 3.3 test failures.

-glyph



From manish.tomar at gmail.com  Thu Aug 11 15:19:45 2016
From: manish.tomar at gmail.com (Manish Tomar)
Date: Thu, 11 Aug 2016 14:19:45 -0700
Subject: [Twisted-Python] clientfactory cleanup slow-down (after many
	http requests)
In-Reply-To: <EC839276-759E-4172-BF0E-5990C170CE11@twistedmatrix.com>
References: <20160806104823.GA14053@garage2>
 <EC839276-759E-4172-BF0E-5990C170CE11@twistedmatrix.com>
Message-ID: <CABH8oEOSoGHtRxPJxUoWmAzQTo+E8Jh+fYPGP5JRjkQLAz8ebg@mail.gmail.com>

Wow! This is the friendliest way to welcome a new Twisted programmer. Great
job Glyph! :)

Regards,
Manish

On Sat, Aug 6, 2016 at 3:51 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Aug 6, 2016, at 03:48, Randomcoder <randomcoder1 at gmail.com> wrote:
>
> Hello,
>
> I've been working on a small Twisted program.
>
>
> Cool, thanks for using Twisted.
>
> The program makes HTTP requests to a large number of feeds.
> Twisted is used to speed up the entire process.
> After the feeds are fetched, they're parsed. Finally they should be
> written to a database (to simplify the code, that part is left out).
>
>
> Thanks for including examples, so we know exactly what you're talking
> about! :)
>
> Feeds are fetched in parallel using gatherResults, and a batch is
> built. Then all batches are again gathered into a set of batches,
> a DeferredList is built out of those. A semaphore controls both the
> batch-level list of deferreds, and a semaphore controls the entire batch
> list deferred.
>
> Currently, the program works ok on 100-150 feeds, and BATCH_SIZE between
> 5 and 20.
>
>
> This all seems pretty reasonable and following best practices and such...
>
> However, I notice the program starts to hang for a long time, when the
> number of feeds goes over 150-200.
>
>
> Two key questions: what do you mean by "hang" and what is "a long time"?
> Do you mean it's totally unresponsive, or do you mean it's just failing to
> make progress on downloading more feeds?
>
>
> To be more precise, at the end of running the program, messages
> like these are printed, but the program seems to not be very active:
>
>    Stopping factory <twisted.web.client._HTTP11ClientFactory instance at
> 0x7f0b7d5f3908>
>
> It seems like this is the cleanup phase.
>
>
> This just means that it is finished making connections.  We have to do
> some clean-up around the usefulness of these log messages, sorry :-\.
>
> I've read what I could find on the topic. I wasn't able to make progress
> on it, so I'm posting to the mailing list to ask if someone has
> encountered this
> before. Maybe it's a common pitfall or issue that other people have also
> bumped into.
>
>
> Right now, my guess is this: some of the sites you're contacting have very
> slow proxies, or for some other reason let you *connect* to them, but
> then hang when sent requests.  If you're simultaneously requesting stuff
> from a very large number of different sites, this is sort of inevitably
> bound to happen, either based on network problems, or issues with the sites
> themselves.  I suspect you thought that the connectTimeout argument to
> Agent would save you from this, but that timeout is just for making the
> initial underlying TCP connection, not receiving a full response.  What you
> actually want to do is cancel the Deferred returned by Agent.request.
>
> Luckily, https://treq.readthedocs.io/en/latest/ already implements this
> high-level timeout functionality for you, in the form of the 'timeout='
> argument it accepts.  If you give that a try, do you see more connections
> timing out as it runs, rather than "hanging" the process for long periods
> of time?
>
> As long as I'm looking at your code, as a way of thanking you for
> providing such a nice specific runnable example, I have a few other random
> thoughts which may be useful to you:
>
> - I see you're importing psycopg.  Do you know about https://txpostgres.
> readthedocs.io/en/latest/ ?  You can talk to postgres asynchronously with
> Twisted.
> - d.addCallback(lambda out: out).addCallback(lambda resp:
> client.readBody(resp)) can be much more briefly spelled
> "d.addCallback(client.readBody)". d.addErrback(lambda err: err) does
> nothing and can just be removed.
> - BrowserLikePolicyForHTTPS() is the default, so you don't need to pass
> that.
> - clean_up_and_exit will only be called if batchesDef doesn't fail, and if
> it does fail, it will swallow the exception message.  Rather than manually
> calling `reactor.stop`, you probably want to use react(), <
> https://twistedmatrix.com/documents/16.3.0/api/twisted.
> internet.task.html#react>.  This way your function is an API that anyone
> who wants to use it can call - it just returns a Deferred when it's done -
> but your __main__ block calls react() which will both start and stop the
> reactor, as well as reporting errors if there's a problem while still
> shutting down.
>
> Hope some of that code review is helpful - let us know if the treq timeout
> solves the problem or if the issue is somewhere else!
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160811/4842971c/attachment-0001.html>

From meejah at meejah.ca  Thu Aug 11 16:40:10 2016
From: meejah at meejah.ca (meejah)
Date: Fri, 12 Aug 2016 02:40:10 +0400
Subject: [Twisted-Python] txtorcon 0.15.1
In-Reply-To: <86eg6g0yer.fsf@atlantis.meejah.ca> (meejah@meejah.ca's message
 of "Wed, 27 Jul 2016 03:31:24 +0400")
References: <86eg6g0yer.fsf@atlantis.meejah.ca>
Message-ID: <867fbnvsj9.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

There was a small issue in 0.15.0 noticed by the Debian reproducible
builds (thanks irl at debian for your packaging work!)

   * fix issue 179 (Circuit.age() incorrect default arg)

You can download the release from PyPI or GitHub (or of
course "pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.15.1
   https://github.com/meejah/txtorcon/releases/tag/v0.15.1

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.15.1.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.15.1.tar.gz.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
bbf69b7642d18b0678580e91d92ed91601759aea2de0e971539a2fb96fbd607c  txtorcon-0.15.1.tar.gz
35c15acb2fda99dc35279286f905e38e3e19f15fe229c13164d4ae37a75d6df7  txtorcon-0.15.1-py2-none-any.whl
EOF

thanks,
meejah
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQEcBAEBAgAGBQJXrP4RAAoJEMJgKAMSgGmnJBoH/RzulNMAEB+9x8us7W2x0Jay
kabecTOvX7zoAvYk+OV6ApRK8I72m23cHM7bv2qzrTasTpaMO2Jox6vQMJM2C+1i
tyBNivPN91svMCTI4QLnX9735fBS+hKQ1CN3lWtLoQi66xyM3Vf6Ux/tf4HEwDnN
qV1EPptjd1Rbic60ZR3TN0qNyIF/pfGfgkZiOLtKqCoKlGfpQTEJeX+pTkMdzpxq
z6rw1YSX9HkJacufu8N9ZjyhVO16EJpV98u7iP5l21nL/nk42pnNgnovDnl6wqGD
+zuBbAH2qa9jCih3Y9OPdLwkKcyCTmfKnD/aR2oCSVrMH2BMO615eRDUv+/ESH0=
=qZ3n
-----END PGP SIGNATURE-----


From adi at roiban.ro  Fri Aug 12 03:28:39 2016
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 12 Aug 2016 10:28:39 +0100
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
 <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
Message-ID: <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>

On 11 August 2016 at 21:52, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> On Aug 11, 2016, at 8:55 AM, Burak Arslan <burak.arslan at arskom.com.tr>
> wrote:
>
> Hello All,
>
> You can find a sample HTTP POST request using HTTP multipart/form-data at
> the end of this message.
>
> The server that handles this request is using twisted so I end up with a
> Request object. Is there a way I can extract the file name ("image008.jpg")
> from this stream? I'm looking at the source of cgi.parse_multipart() and it
> seems to be ignored.
>
> Sadly Twisted just calls into cgi.parse_multipart and so it is in fact
> ignored.  You might be able to re-parse the request body
> (request.content.seek(0); request.content.read()) with something like
> <https://docs.python.org/2.7/library/email.mime.html#email.mime.multipart.MIMEMultipart>
> or <https://github.com/mailgun/flanker> to extract more information about
> the MIME.
>
> It would definitely be better for Twisted to have more robust facilities for
> dealing with request inputs, particularly to be able to process large
> uploads as a stream rather than an individual message (and such an API for
> form post uploads should obviously include the content disposition
> filename).  See <https://twistedmatrix.com/trac/ticket/288> for more
> discussion :).
>
> Thanks for using Twisted, and sorry about this shortcoming.

I have some coding which is doing a best effort to parse the request
body in a streaming mode... but it is using a fork based on the code
submitted for this ticket http://twistedmatrix.com/trac/ticket/6928

diff for the fork https://github.com/chevah/twisted/compare/6928-http-100-accept

It relies on the fact that the request will call the
resource.headerReceive() before the actual body is consumed.

form handling code using this fork
https://gist.github.com/adiroiban/7f593d6d18113aae797ad081e07f4745

It uses werkzeug.http.parse_options_header for parsing the headers

If your POST requests are just a few bytes, you can just use
request.content.seek(0); request.content.read() as suggested by Glyph
and redirect the content to the MultiPartFormData protocol

For my project I need to handle files larger than 5GB, so I ended up
with the modified request/resource

Good luck!
-- 
Adi Roiban


From burak.arslan at arskom.com.tr  Fri Aug 12 03:58:28 2016
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Fri, 12 Aug 2016 12:58:28 +0300
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
 <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
 <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>
Message-ID: <2031264f-6e97-7a99-fb99-216cdfe0bf17@arskom.com.tr>

Hey Adi, hey Glyph,

Thanks a lot for your answers.


On 08/12/16 12:28, Adi Roiban wrote:
> On 11 August 2016 at 21:52, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> Thanks for using Twisted, and sorry about this shortcoming.

Nothing to be sorry about, twisted is made of man-years of good work.
Once you twist your point of view enough, it becomes quite elegant and
predictable. Some wars *had* to be fought uphill while integrating with
twisted's HTTP implementation but it's the way things are, I'm not
complaining.


> I have some coding which is doing a best effort to parse the request
> body in a streaming mode... but it is using a fork based on the code
> submitted for this ticket http://twistedmatrix.com/trac/ticket/6928

This is for a library I'm developing, so I can only depend on what's
already released. However, thanks for the code -- it will certainly give
me ideas.

> For my project I need to handle files larger than 5GB, so I ended up
> with the modified request/resource
>

As I said, I can't make any assumptions on file size but I *think* I can
pretend that my requests fit in memory as long as I keep them in
memory-mapped files. mmap is wonderful -- It's both a file and a string!

With that assumption, this is what I came up with:

https://github.com/plq/spyne/blob/7f52ab0f11773535c6a73702b4b838b49ecdd9e6/spyne/server/twisted/http.py#L321

I'd love to hear your feedback about it. Do you think I can get away
with relying on mmap here?

Best regards,
Burak


From hawkowl at atleastfornow.net  Sat Aug 13 00:18:26 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sat, 13 Aug 2016 16:18:26 +1000
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
Message-ID: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>

In a rare Twisted release double feature right after 16.3.1, I bring you the first prerelease of Twisted 16.4.0.

This is a big release, the first after the Git migration has really kicked in! And so, here's what it brings us:

- twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
- A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
- async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
- Trial can be invoked with "python -m twisted.trial".
- 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
- 240+ closed tickets overall.

For more information, check the NEWS file (link provided below).

As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.0pre1/ <https://twistedmatrix.com/Releases/pre/16.4.0pre1/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:

   pip install https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2>

Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160813/d81df9e8/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160813/d81df9e8/attachment.pgp>

From glyph at twistedmatrix.com  Sat Aug 13 17:33:58 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 13 Aug 2016 16:33:58 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>


> On Aug 12, 2016, at 11:18 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> In a rare Twisted release double feature right after 16.3.1, I bring you the first prerelease of Twisted 16.4.0.
> 
> This is a big release, the first after the Git migration has really kicked in! And so, here's what it brings us:
> 
> - twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
> - A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
> - async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
> - Trial can be invoked with "python -m twisted.trial".
> - 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
> - 240+ closed tickets overall.
> 
> For more information, check the NEWS file (link provided below).
> 
> As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.0pre1/ <https://twistedmatrix.com/Releases/pre/16.4.0pre1/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:
> 
>    pip install https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2>
> 
> Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

This is a _lot_ of stuff.  I can only imagine what a mega-blockbuster release we are going to have once we have this level of investment but we are already _done_ with python 3 porting (a day which, at this clip, will come soon)!!!

Two minor points:

This release _also_ comes with setuptools console scripts.  That sounds a bit dull, but for those of you on Windows, the exciting consequence of this apparently mundane tweak is that that this is the first release to have programs like twistd (and the new 'twist'!) work properly at a Windows command line, without any special %PATHEXT% configuration!  setuptools/virtualenv/pip's .exe-stub generation makes .exe files that work more or less like regular Windows executables, and therefore integrate much better into the environment for all kinds of purposes.
I'm about to land the fix for <https://twistedmatrix.com/trac/ticket/8754>.  While not technically a regression, I believe we should have a pre2 for this; it would be sad for our first asyncioreactor release to be beset by random EPIPE tracebacks (even if asyncio itself would be without our help ;-)).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160813/338c5c1f/attachment.html>

From hawkowl at atleastfornow.net  Sat Aug 13 17:38:04 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sat, 13 Aug 2016 16:38:04 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
 <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>
Message-ID: <CAMxb2itNWoOJFc4EdU_N0C9BqxyM9fvbxFrGtJ3PCxQNW8V9pw@mail.gmail.com>

You needn't be concerned, Glyph, the asyncio reactor landed after I cut the
release, so it's existence is currently a spoiler for season 16.5 of
Twisted ;)

On 14 Aug 2016 09:34, "Glyph Lefkowitz" <glyph at twistedmatrix.com> wrote:

>
> On Aug 12, 2016, at 11:18 PM, Amber Hawkie Brown <
> hawkowl at atleastfornow.net> wrote:
>
> In a rare Twisted release double feature right after 16.3.1, I bring you
> the first prerelease of Twisted 16.4.0.
>
> This is a big release, the first after the Git migration has really kicked
> in! And so, here's what it brings us:
>
> - twist, a new command line tool for running Twisted plugins, similar to
> twistd but with a simpler, cleaner interface.
> - A new interface for Protocols, IHandshakeListener, which tells Twisted
> to tell the Protocol when the TLS handshake has been completed.
> - async/await support for Deferreds, allowing you to write Python 3.5+
> coroutines using Twisted
> - Trial can be invoked with "python -m twisted.trial".
> - 35+ more modules ported to Python 3, and many many cleanups on the way
> to Python 3 on Windows support.
> - 240+ closed tickets overall.
>
> For more information, check the NEWS file (link provided below).
>
> As usual, it's available for download -- go here (
> https://twistedmatrix.com/Releases/pre/16.4.0pre1/) to get the prerelease
> tarballs and the full NEWS file. If you want to install it right away, run:
>
>    pip install https://twistedmatrix.com/Releases/pre/16.4.0pre1/
> Twisted-16.4.0rc1.tar.bz2
>
> Please let me know if you have any issues, as well as if you don't! If
> everything works well, that's a good thing for me to know :)
>
>
> This is a _lot_ of stuff.  I can only imagine what a mega-blockbuster
> release we are going to have once we have this level of investment but we
> are already _done_ with python 3 porting (a day which, at this clip, will
> come soon)!!!
>
> Two minor points:
>
>
>    1. This release _also_ comes with setuptools console scripts.  That
>    sounds a bit dull, but for those of you on Windows, the exciting
>    consequence of this apparently mundane tweak is that that this is the first
>    release to have programs like twistd (and the new 'twist'!) work properly
>    at a Windows command line, without any special %PATHEXT% configuration!
>     setuptools/virtualenv/pip's .exe-stub generation makes .exe files that
>    work more or less like regular Windows executables, and therefore integrate
>    much better into the environment for all kinds of purposes.
>    2. I'm about to land the fix for <https://twistedmatrix.com/
>    trac/ticket/8754>.  While not technically a regression, I believe we
>    should have a pre2 for this; it would be sad for our first asyncioreactor
>    release to be beset by random EPIPE tracebacks (even if asyncio itself
>    would be without our help ;-)).
>
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160813/6d6092ca/attachment.html>

From glyph at twistedmatrix.com  Sat Aug 13 17:40:50 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 13 Aug 2016 16:40:50 -0700
Subject: [Twisted-Python] making appveyor a required status
Message-ID: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>

Just a bit of Github housekeeping: Appveyor has looked pretty stable (more than our other Windows builds, even).  I'm thinking about making it a required status for merging.  But I'm curious what other folks have seen on PRs I might not have looked at; is it pretty reliable at this point?

Also: I am thinking of turning off push statuses for Travis (for every branch but trunk), and just making it PR statuses.  Is anyone using the push status, or is it just making builds take twice as long?

-glyph

From glyph at twistedmatrix.com  Sat Aug 13 17:41:59 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 13 Aug 2016 16:41:59 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <CAMxb2itNWoOJFc4EdU_N0C9BqxyM9fvbxFrGtJ3PCxQNW8V9pw@mail.gmail.com>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
 <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>
 <CAMxb2itNWoOJFc4EdU_N0C9BqxyM9fvbxFrGtJ3PCxQNW8V9pw@mail.gmail.com>
Message-ID: <506040D3-3C67-4AAA-9F6E-CDD95881A33E@twistedmatrix.com>


> On Aug 13, 2016, at 4:38 PM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> You needn't be concerned, Glyph, the asyncio reactor landed after I cut the release, so it's existence is currently a spoiler for season 16.5 of Twisted ;)
> 
Oops! :)

We should have an easier system for tracking this stuff.  In any case, looks like we are already teed up for an amazing 16.5 ;)

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160813/ef749070/attachment.html>

From meejah at meejah.ca  Sat Aug 13 17:49:08 2016
From: meejah at meejah.ca (meejah)
Date: Sun, 14 Aug 2016 03:49:08 +0400
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net> (Amber
 Brown's message of "Sat, 13 Aug 2016 16:18:26 +1000")
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <86popcut57.fsf@atlantis.meejah.ca>


txtorcon runs all tests fine with 16.4.0pre1

Thanks! Lots of great additions, it looks like :)
meejah


From adi at roiban.ro  Sun Aug 14 04:38:39 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 14 Aug 2016 11:38:39 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI and
	Buildbot
Message-ID: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>

Hi,

We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.

If we want to reduce the waste of running push tests for a PR we
should check that the other repos from the Twisted organization are
doing the same.

We now have in twisted/twisted 9 jobs per each build ... and for each
push to a PR ... we run the tests for the push and for the PR merge...
so those are 18 jobs for a commit.

twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
jobs

.... so we are a bit over the limit of 5 jobs

---------

I have asked Travis-CI how we can improve the waiting time for
twisted/twisted jobs and for $6000 per year they can give us 15
concurrent jobs for the Twisted organization.

This will not give us access to a faster waiting line for the OSX jobs.

Also, I don't think that we can have twisted/twisted take priority
inside the organization.

If you think that we can raise $6000 per year for sponsoring our
Travis-CI and that is worth increasing the queue size I can follow up
with Travis-CI.

-------------

I have also asked Circle CI for a free ride on their OSX builders, but
it was put on hold as Glyph told me that Circe CI is slower than
Travis.

I have never used Circle CI. If you have a good experience with OSX on
Circle CI I can continue the phone interview with Circle Ci so that we
get the free access and see how it goes.

--------

There are multiple ways in which we can improve the time a test takes
to run on Travis-CI, but it will never be faster than buildbot with a
slave which is always active and ready to start a job in 1 second and
which already has 99% of the virtualev dependencies already installed.

AFAIK the main concern with buildot, is that the slaves are always
running so a malicious person could create a PR with some malware and
then all our slaves will execute that malware.

One way to mitigate this, is to use latent buildslaves and stop and
reset a slave after each build, but this will also slow the build and
lose the virtualenv ... which of docker based slave should not be a
problem... but if we want Windows latent slaves it might increase the
build time.

What do you say if we protect our buildslaves with a firewall which
only allows outgoing connections to buildmaster and github ... and
have the slaves running only on RAX + Azure to simplify the firewall
configuration?

Will a malicious person still be interested of exploiting the slaves?

I would be happy to help with buildbot configuration as I think that
for TDD, buildbot_try with slaves which are always connected and
virtualenv already created is the only acceptable CI system.

Cheers
-- 
Adi Roiban


From adi at roiban.ro  Sun Aug 14 04:38:45 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 14 Aug 2016 11:38:45 +0100
Subject: [Twisted-Python] making appveyor a required status
In-Reply-To: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>
References: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>
Message-ID: <CAFycZ9cjRXhan+-g6ewnvdd3iNvveHTPDeBo9d5w2Owbx6E2yA@mail.gmail.com>

On 14 August 2016 at 00:40, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> Just a bit of Github housekeeping: Appveyor has looked pretty stable (more than our other Windows builds, even).  I'm thinking about making it a required status for merging.  But I'm curious what other folks have seen on PRs I might not have looked at; is it pretty reliable at this point?

+1 for enforcing Windows tests via Appveyor

I think that Appveyor are providing an excellent service... much
faster than Travis-CI.

> Also: I am thinking of turning off push statuses for Travis (for every branch but trunk), and just making it PR statuses.  Is anyone using the push status, or is it just making builds take twice as long?

+1 for having Travis-CI run push tests only on trunk.

I will come back with more details in a separate email.


Cheers
-- 
Adi Roiban


From glyph at twistedmatrix.com  Sun Aug 14 17:10:13 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 14 Aug 2016 16:10:13 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
Message-ID: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>


> On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.
> 
> If we want to reduce the waste of running push tests for a PR we
> should check that the other repos from the Twisted organization are
> doing the same.
> 
> We now have in twisted/twisted 9 jobs per each build ... and for each
> push to a PR ... we run the tests for the push and for the PR merge...
> so those are 18 jobs for a commit.
> 
> twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
> build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
> jobs
> 
> .... so we are a bit over the limit of 5 jobs

Well, we're not "over the limit".  It's just 5 concurrent.  Most of the projects that I work on have more than 5 entries in their build matrix.

> I have asked Travis-CI how we can improve the waiting time for
> twisted/twisted jobs and for $6000 per year they can give us 15
> concurrent jobs for the Twisted organization.
> 
> This will not give us access to a faster waiting line for the OSX jobs.
> 
> Also, I don't think that we can have twisted/twisted take priority
> inside the organization.
> 
> If you think that we can raise $6000 per year for sponsoring our
> Travis-CI and that is worth increasing the queue size I can follow up
> with Travis-CI.

I think that this is definitely worth doing.

> I have also asked Circle CI for a free ride on their OSX builders, but
> it was put on hold as Glyph told me that Circe CI is slower than
> Travis.
> 
> I have never used Circle CI. If you have a good experience with OSX on
> Circle CI I can continue the phone interview with Circle Ci so that we
> get the free access and see how it goes.

The reason I'm opposed to Circle is simply that their idiom for creating a build matrix is less parallelism-friendly than Travis.  Travis is also more popular, so more contributors will be interested in participating.

> There are multiple ways in which we can improve the time a test takes
> to run on Travis-CI, but it will never be faster than buildbot with a
> slave which is always active and ready to start a job in 1 second and
> which already has 99% of the virtualev dependencies already installed.

There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).

> AFAIK the main concern with buildot, is that the slaves are always
> running so a malicious person could create a PR with some malware and
> then all our slaves will execute that malware.

Not only that, but the security between the buildmaster and the builders themselves is weak.  Now that we have the buildmaster on a dedicated machine, this is less of a concern, but it still has access to a few secrets (an SSL private key, github oauth tokens) which we would rather not leak if we can avoid it.

> One way to mitigate this, is to use latent buildslaves and stop and
> reset a slave after each build, but this will also slow the build and
> lose the virtualenv ... which of docker based slave should not be a
> problem... but if we want Windows latent slaves it might increase the
> build time.

It seems like fully latent slaves would be slower than Travis by a lot, since Travis is effectively doing the same thing, but they have a massive economy of scale with pre-warmed pre-booted VMs that they can keep in a gigantic pool and share between many different projects.

> What do you say if we protect our buildslaves with a firewall which
> only allows outgoing connections to buildmaster and github ... and
> have the slaves running only on RAX + Azure to simplify the firewall
> configuration?
> 
> Will a malicious person still be interested of exploiting the slaves?
> 
> I would be happy to help with buildbot configuration as I think that
> for TDD, buildbot_try with slaves which are always connected and
> virtualenv already created is the only acceptable CI system.


Personally, I just want to stop dealing with so much administrative overhead.  I am willing to wait for slightly longer build times in order to do that.  Using Travis for everything means we don't need to worry about these issues, or have these discussions; we can just focus on developing Twisted, and have sponsors throw money at the problem.  There's also the issue that deploying new things to the buildmaster will forever remain a separate permission level, but proposing changes to the travis configuration just means sending a PR.

There are things we could do to reduce both overhead and the risk impact further though.  For example, we could deploy buildbot as a docker container instead of as a VM, making it much faster to blow away the VM if we have a security problem, and limiting its reach even more.

On the plus side, it would be nice to be dogfooding Twisted as part of our CI system, and buildbot uses it heavily.  So while I think overall the tradeoffs are in favor of travis, I wouldn't say that I'm 100% in favor.  And _most_ of the things we used to need a buildbot config change for now are just tox environment changes; if we can move to 99% of the job configuration being in tox.ini as opposed to the buildmaster, that would eliminate another objection.

I'd also be interested in hearing from as many contributors as possible about this though.  The point of all of this is to make contributing easier and more enjoyable, so the majority opinion is kind of important here :).

-glyph



From JOHN at egh.com  Sun Aug 14 22:18:33 2016
From: JOHN at egh.com (John Santos)
Date: Mon, 15 Aug 2016 00:18:33 -0400
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <1160814212837.13220A-100000@joonya.egh.com>


Quick check with my app (Python 2.7) which uses twisted.conch and t.c.insults
pretty heavily shows no problems with Twisted 16.4.0.

I really appreciate the Twisted project's attention to backwards 
compatibility, though someday I will port this to Python 3 :-)

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539

From glyph at twistedmatrix.com  Sun Aug 14 22:37:54 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 14 Aug 2016 21:37:54 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <1160814212837.13220A-100000@joonya.egh.com>
References: <1160814212837.13220A-100000@joonya.egh.com>
Message-ID: <529A37C5-37FE-48BB-B816-79EA5987E753@twistedmatrix.com>


> On Aug 14, 2016, at 9:18 PM, John Santos <JOHN at egh.com> wrote:
> 
> 
> Quick check with my app (Python 2.7) which uses twisted.conch and t.c.insults
> pretty heavily shows no problems with Twisted 16.4.0.
> 
> I really appreciate the Twisted project's attention to backwards 
> compatibility, though someday I will port this to Python 3 :-)

Thanks a ton for testing the upgrade!

-g



From mithrandi at mithrandi.net  Mon Aug 15 03:43:03 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 15 Aug 2016 09:43:03 +0000
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <CAMcKhMRWLoH3qt-J20GJS9Cb5i2XctOnuX0f=UaJ7hwrpfyqcQ@mail.gmail.com>

On Sat, 13 Aug 2016 at 08:19 Amber "Hawkie" Brown <hawkowl at atleastfornow.net>
wrote:

> In a rare Twisted release double feature right after 16.3.1, I bring you
> the first prerelease of Twisted 16.4.0.
>

FWIW my $DAYJOB test suite passes against 16.4.0rc1.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160815/fe849ad8/attachment.html>

From mithrandi at mithrandi.net  Mon Aug 15 03:43:44 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 15 Aug 2016 09:43:44 +0000
Subject: [Twisted-Python] Twisted 16.3.1 Prerelease 1 Announcement
In-Reply-To: <FFF8521A-4ACF-48A5-AC53-BBA30BE098E9@atleastfornow.net>
References: <FFF8521A-4ACF-48A5-AC53-BBA30BE098E9@atleastfornow.net>
Message-ID: <CAMcKhMRbeg5fRq=soGxZ6WbPgbJVwtjpVLLW4W8E3rpjr9o8+A@mail.gmail.com>

On Wed, 10 Aug 2016 at 14:48 Amber "Hawkie" Brown <hawkowl at atleastfornow.net>
wrote:

> I've just uploaded the first prerelease of Twisted 16.3.1, a security &
> critical bug fix release of the 16.3 series. It contains:
>

FWIW my $DAYJOB test suite passes against 16.3.1rc1.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160815/a703ad8b/attachment.html>

From exarkun at twistedmatrix.com  Mon Aug 15 04:55:12 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 15 Aug 2016 06:55:12 -0400
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
Message-ID: <CAEeXt4N+Za2B9M_260ymz0R5c3wGRJ2yyi9xVDScxzp+Ojr4Pw@mail.gmail.com>

On Sun, Aug 14, 2016 at 7:10 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> >
> > If you think that we can raise $6000 per year for sponsoring our
> > Travis-CI and that is worth increasing the queue size I can follow up
> > with Travis-CI.
>
> I think that this is definitely worth doing.
>

How might we guess this would compare to $6000/year development effort
spent towards  speeding up the test suite?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160815/d3c5ecd1/attachment.html>

From adi at roiban.ro  Mon Aug 15 07:06:58 2016
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 15 Aug 2016 14:06:58 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
Message-ID: <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>

On 15 August 2016 at 00:10, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
>> On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.
>>
>> If we want to reduce the waste of running push tests for a PR we
>> should check that the other repos from the Twisted organization are
>> doing the same.
>>
>> We now have in twisted/twisted 9 jobs per each build ... and for each
>> push to a PR ... we run the tests for the push and for the PR merge...
>> so those are 18 jobs for a commit.
>>
>> twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
>> build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
>> jobs
>>
>> .... so we are a bit over the limit of 5 jobs
>
> Well, we're not "over the limit".  It's just 5 concurrent.  Most of the projects that I work on have more than 5 entries in their build matrix.
>
>> I have asked Travis-CI how we can improve the waiting time for
>> twisted/twisted jobs and for $6000 per year they can give us 15
>> concurrent jobs for the Twisted organization.
>>
>> This will not give us access to a faster waiting line for the OSX jobs.
>>
>> Also, I don't think that we can have twisted/twisted take priority
>> inside the organization.
>>
>> If you think that we can raise $6000 per year for sponsoring our
>> Travis-CI and that is worth increasing the queue size I can follow up
>> with Travis-CI.
>
> I think that this is definitely worth doing.

Do we have the budget for this or we need to do a fundraising drive?
Can The Software Freedom Conservancy handle the payment for Travis-CI?

Even if we speed up the build time, with 5 jobs we would still have
only 0.5 concurrent complete builds ... or even less.
So I think that increasing to 15 jobs would be needed anyway.

>> I have also asked Circle CI for a free ride on their OSX builders, but
>> it was put on hold as Glyph told me that Circe CI is slower than
>> Travis.
>>
>> I have never used Circle CI. If you have a good experience with OSX on
>> Circle CI I can continue the phone interview with Circle Ci so that we
>> get the free access and see how it goes.
>
> The reason I'm opposed to Circle is simply that their idiom for creating a build matrix is less parallelism-friendly than Travis.  Travis is also more popular, so more contributors will be interested in participating.
>

OK. No problem. Thanks for the feedback.
I also would like to have less providers as we already have
buildbot/travis/appveyor :)

My push is for a single provider -> buildbot ... but I am aware that
it might not be feasible

>> There are multiple ways in which we can improve the time a test takes
>> to run on Travis-CI, but it will never be faster than buildbot with a
>> slave which is always active and ready to start a job in 1 second and
>> which already has 99% of the virtualev dependencies already installed.
>
> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).

Hm... pre-built dockers also takes effort to keep them updated... and
then we will have a KVM VM starting inside a docker in which we run
the tests...

...and we would not be able to test the inotify part.

... and if something will go wrong and  we need debugging on the host
I am not sure how fun is to debug this.

>> AFAIK the main concern with buildot, is that the slaves are always
>> running so a malicious person could create a PR with some malware and
>> then all our slaves will execute that malware.
>
> Not only that, but the security between the buildmaster and the builders themselves is weak.  Now that we have the buildmaster on a dedicated machine, this is less of a concern, but it still has access to a few secrets (an SSL private key, github oauth tokens) which we would rather not leak if we can avoid it.

If we have all slaved in RAX and Azure I hope that communication
between slaves and buildmaster is secure.

github token is only for publishing the commit status ... and I hope
that we can make that token public :)

I have little experience with running public infrastructures for open
source projects... but are there that many malicious people which
would want to exploit a github commit status only token?

>> One way to mitigate this, is to use latent buildslaves and stop and
>> reset a slave after each build, but this will also slow the build and
>> lose the virtualenv ... which of docker based slave should not be a
>> problem... but if we want Windows latent slaves it might increase the
>> build time.
>
> It seems like fully latent slaves would be slower than Travis by a lot, since Travis is effectively doing the same thing, but they have a massive economy of scale with pre-warmed pre-booted VMs that they can keep in a gigantic pool and share between many different projects.

Yes... without pre-warmed VMs, latent slaves in the cloud might be slow.

I don't have experience with Azure/Amazon/Rackspace VM and their
snapshot capabilities... I have just recently start using Azure and
Rackspace... and I saw that rackspace vm or image creation is very
slow.

I am using Virtualbox on my local system and starting a VM from a
saved state and restoring a state is fast... and I was expecting that
I can get the same experience from a cloud VM.

>> What do you say if we protect our buildslaves with a firewall which
>> only allows outgoing connections to buildmaster and github ... and
>> have the slaves running only on RAX + Azure to simplify the firewall
>> configuration?
>>
>> Will a malicious person still be interested of exploiting the slaves?
>>
>> I would be happy to help with buildbot configuration as I think that
>> for TDD, buildbot_try with slaves which are always connected and
>> virtualenv already created is the only acceptable CI system.
>
>
> Personally, I just want to stop dealing with so much administrative overhead.  I am willing to wait for slightly longer build times in order to do that.  Using Travis for everything means we don't need to worry about these issues, or have these discussions; we can just focus on developing Twisted, and have sponsors throw money at the problem.  There's also the issue that deploying new things to the buildmaster will forever remain a separate permission level, but proposing changes to the travis configuration just means sending a PR.

I also don't like to do administrative work and just work on Twisted.

But I think that with or without buildbot we still have a problem with Travis-CI

The OSX build is slow (12 minutes) and there is not much we can do about it.

The OSX build on Travis-CI is now green and soon we might want to enforce it.


> There are things we could do to reduce both overhead and the risk impact further though.  For example, we could deploy buildbot as a docker container instead of as a VM, making it much faster to blow away the VM if we have a security problem, and limiting its reach even more.
>
> On the plus side, it would be nice to be dogfooding Twisted as part of our CI system, and buildbot uses it heavily.  So while I think overall the tradeoffs are in favor of travis, I wouldn't say that I'm 100% in favor.  And _most_ of the things we used to need a buildbot config change for now are just tox environment changes; if we can move to 99% of the job configuration being in tox.ini as opposed to the buildmaster, that would eliminate another objection.

We are now pretty close to running all buildbot jobs using only tox.

I am happy to work for having a simple buildbot builder configuration
which will always run the tests based on the branch configuration.

I think that the only thing left is the bdist_wheel job
(https://twistedmatrix.com/trac/ticket/8676) but with the latest
changes in the appveyor script, this should be solved.

> I'd also be interested in hearing from as many contributors as possible about this though.  The point of all of this is to make contributing easier and more enjoyable, so the majority opinion is kind of important here :).

Working with Travis-CI, but also current buildbot is not an enjoyable
experience.

I am using Linux as my dev system, and if I want to fix an OSX or
Windows issue I don't want to switch my working environment to run the
tests in a local VM.

If I use the current configuration, even if I want to do TDD for a
specific tests on a specific OS (OSX or Windows) I will have to commit
 and push each step in the TDD process and have the test executed
across all systems... which is a waste of resources and my time.

For my project I am using buildbot_try and I can target a specific
builder and a specific test using `buildbot_try --builder SOMETHING
--properties=testcase=TEST_RUN_ARGS  ... and with a little change in
buildbot try I can wait for results and get them printed in the
console

I would enjoy using something similar for when working for Twisted.

Maybe Travis-CI already has this capability ... or are planning to add
it soon... but I was not able to find it.

-----

but my biggest problem with Twisted is still the huge wait times for
the review queue ... at least for my tickets :)

I would enjoy working for a branch is is reviewed in 1 or 2 days.

-- 
Adi Roiban


From glyph at twistedmatrix.com  Mon Aug 15 14:38:03 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Aug 2016 13:38:03 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
Message-ID: <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>


> On Aug 15, 2016, at 6:06 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 15 August 2016 at 00:10, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 
>>> On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
>>> 
>>> Hi,
>>> 
>>> We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.
>>> 
>>> If we want to reduce the waste of running push tests for a PR we
>>> should check that the other repos from the Twisted organization are
>>> doing the same.
>>> 
>>> We now have in twisted/twisted 9 jobs per each build ... and for each
>>> push to a PR ... we run the tests for the push and for the PR merge...
>>> so those are 18 jobs for a commit.
>>> 
>>> twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
>>> build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
>>> jobs
>>> 
>>> .... so we are a bit over the limit of 5 jobs
>> 
>> Well, we're not "over the limit".  It's just 5 concurrent.  Most of the projects that I work on have more than 5 entries in their build matrix.
>> 
>>> I have asked Travis-CI how we can improve the waiting time for
>>> twisted/twisted jobs and for $6000 per year they can give us 15
>>> concurrent jobs for the Twisted organization.
>>> 
>>> This will not give us access to a faster waiting line for the OSX jobs.
>>> 
>>> Also, I don't think that we can have twisted/twisted take priority
>>> inside the organization.
>>> 
>>> If you think that we can raise $6000 per year for sponsoring our
>>> Travis-CI and that is worth increasing the queue size I can follow up
>>> with Travis-CI.
>> 
>> I think that this is definitely worth doing.
> 
> Do we have the budget for this or we need to do a fundraising drive?
> Can The Software Freedom Conservancy handle the payment for Travis-CI?

We have almost no budget, so we would definitely need to raise money.  OTOH sometime soon we're going to run out of money just to keep the lights on on our tummy.com server, so we probably need to do that anyway :).

> Even if we speed up the build time, with 5 jobs we would still have
> only 0.5 concurrent complete builds ... or even less.
> So I think that increasing to 15 jobs would be needed anyway.

Faster is better, of course, but I don't see buildbot completing all its builds that much faster than Travis right now, so I'm not sure why you think this is so critical?

>>> I have also asked Circle CI for a free ride on their OSX builders, but
>>> it was put on hold as Glyph told me that Circe CI is slower than
>>> Travis.
>>> 
>>> I have never used Circle CI. If you have a good experience with OSX on
>>> Circle CI I can continue the phone interview with Circle Ci so that we
>>> get the free access and see how it goes.
>> 
>> The reason I'm opposed to Circle is simply that their idiom for creating a build matrix is less parallelism-friendly than Travis.  Travis is also more popular, so more contributors will be interested in participating.
>> 
> 
> OK. No problem. Thanks for the feedback.
> I also would like to have less providers as we already have
> buildbot/travis/appveyor :)
> 
> My push is for a single provider -> buildbot ... but I am aware that
> it might not be feasible

Yeah I just don't think buildbot is hardened enough for this sort of thing (although I would be happy to be proven wrong).

>>> There are multiple ways in which we can improve the time a test takes
>>> to run on Travis-CI, but it will never be faster than buildbot with a
>>> slave which is always active and ready to start a job in 1 second and
>>> which already has 99% of the virtualev dependencies already installed.
>> 
>> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).
> 
> Hm... pre-built dockers also takes effort to keep them updated... and
> then we will have a KVM VM starting inside a docker in which we run
> the tests...
> 
> ...and we would not be able to test the inotify part.

Not true:

We can have one non-containerized builder (sudo: true) for testing inotify; no need for KVM-in-Docker (also you can't do that without a privileged container, so, good thing)
Docker has multiple storage backends, and only one (overlayfs) doesn't work with inotify
It's work to keep buildbot updated too :)

> ... and if something will go wrong and  we need debugging on the host
> I am not sure how fun is to debug this.
> 
>>> AFAIK the main concern with buildot, is that the slaves are always
>>> running so a malicious person could create a PR with some malware and
>>> then all our slaves will execute that malware.
>> 
>> Not only that, but the security between the buildmaster and the builders themselves is weak.  Now that we have the buildmaster on a dedicated machine, this is less of a concern, but it still has access to a few secrets (an SSL private key, github oauth tokens) which we would rather not leak if we can avoid it.
> 
> If we have all slaved in RAX and Azure I hope that communication
> between slaves and buildmaster is secure.

https://www.agwa.name/blog/post/cloudflare_ssl_added_and_removed_here

> github token is only for publishing the commit status ... and I hope
> that we can make that token public :)

I am pretty sure that if we do that, Github will revoke it.  Part of the deal with OAuth tokens is that you keep them secret.

> I have little experience with running public infrastructures for open
> source projects... but are there that many malicious people which
> would want to exploit a github commit status only token?

I don't know, because nobody I am aware of is foolish enough to make this public :-).  But spammers will find ANY open access point to shove spam links into and start exploiting it, and commit statuses are such a place.  Even if you forget about spammers; this is a great way to get a high-value target like a sysadmin or infrastructure developer to click on a malicious link.

>>> One way to mitigate this, is to use latent buildslaves and stop and
>>> reset a slave after each build, but this will also slow the build and
>>> lose the virtualenv ... which of docker based slave should not be a
>>> problem... but if we want Windows latent slaves it might increase the
>>> build time.
>> 
>> It seems like fully latent slaves would be slower than Travis by a lot, since Travis is effectively doing the same thing, but they have a massive economy of scale with pre-warmed pre-booted VMs that they can keep in a gigantic pool and share between many different projects.
> 
> Yes... without pre-warmed VMs, latent slaves in the cloud might be slow.
> 
> I don't have experience with Azure/Amazon/Rackspace VM and their
> snapshot capabilities... I have just recently start using Azure and
> Rackspace... and I saw that rackspace vm or image creation is very
> slow.
> 
> I am using Virtualbox on my local system and starting a VM from a
> saved state and restoring a state is fast... and I was expecting that
> I can get the same experience from a cloud VM.

Booting from a cached image is still booting; it's not the same as saving a suspended VM.  (I don't think you can do this with most cloud providers due to the problems it would create for networking, but despite working at a cloud provider I'm not really an expert in that layer of the stack...)

>>> What do you say if we protect our buildslaves with a firewall which
>>> only allows outgoing connections to buildmaster and github ... and
>>> have the slaves running only on RAX + Azure to simplify the firewall
>>> configuration?
>>> 
>>> Will a malicious person still be interested of exploiting the slaves?
>>> 
>>> I would be happy to help with buildbot configuration as I think that
>>> for TDD, buildbot_try with slaves which are always connected and
>>> virtualenv already created is the only acceptable CI system.
>> 
>> 
>> Personally, I just want to stop dealing with so much administrative overhead.  I am willing to wait for slightly longer build times in order to do that.  Using Travis for everything means we don't need to worry about these issues, or have these discussions; we can just focus on developing Twisted, and have sponsors throw money at the problem.  There's also the issue that deploying new things to the buildmaster will forever remain a separate permission level, but proposing changes to the travis configuration just means sending a PR.
> 
> I also don't like to do administrative work and just work on Twisted.
> 
> But I think that with or without buildbot we still have a problem with Travis-CI
> 
> The OSX build is slow (12 minutes) and there is not much we can do about it.

The OS X build on buildbot is 9 minutes: https://buildbot.twistedmatrix.com/builders/osx10.10-py2.7/builds/1418 which sort of reinforces my point: this is a lot of administrative energy to spend on a 25% speedup.

> The OSX build on Travis-CI is now green and soon we might want to enforce it.

Well this is good news at least!

>> There are things we could do to reduce both overhead and the risk impact further though.  For example, we could deploy buildbot as a docker container instead of as a VM, making it much faster to blow away the VM if we have a security problem, and limiting its reach even more.
>> 
>> On the plus side, it would be nice to be dogfooding Twisted as part of our CI system, and buildbot uses it heavily.  So while I think overall the tradeoffs are in favor of travis, I wouldn't say that I'm 100% in favor.  And _most_ of the things we used to need a buildbot config change for now are just tox environment changes; if we can move to 99% of the job configuration being in tox.ini as opposed to the buildmaster, that would eliminate another objection.
> 
> We are now pretty close to running all buildbot jobs using only tox.

Awesome!

> I am happy to work for having a simple buildbot builder configuration
> which will always run the tests based on the branch configuration.
> 
> I think that the only thing left is the bdist_wheel job
> (https://twistedmatrix.com/trac/ticket/8676) but with the latest
> changes in the appveyor script, this should be solved.

Yay!

As we're working through the parts of this process where we don't have total agreement it is REALLY nice to see all the parts where there _is_ consensus moving forward so fast :).  And I should be clear: I'm doing basically none of this work.  Thank you Adi, and also everyone else helping with the CI maintenance!

>> I'd also be interested in hearing from as many contributors as possible about this though.  The point of all of this is to make contributing easier and more enjoyable, so the majority opinion is kind of important here :).
> 
> Working with Travis-CI, but also current buildbot is not an enjoyable
> experience.
> 
> I am using Linux as my dev system, and if I want to fix an OSX or
> Windows issue I don't want to switch my working environment to run the
> tests in a local VM.

One other solution to this would be to get verified fakes.

> If I use the current configuration, even if I want to do TDD for a
> specific tests on a specific OS (OSX or Windows) I will have to commit
> and push each step in the TDD process and have the test executed
> across all systems... which is a waste of resources and my time.
> 
> For my project I am using buildbot_try and I can target a specific
> builder and a specific test using `buildbot_try --builder SOMETHING
> --properties=testcase=TEST_RUN_ARGS  ... and with a little change in
> buildbot try I can wait for results and get them printed in the
> console
> 
> I would enjoy using something similar for when working for Twisted.
> 
> Maybe Travis-CI already has this capability ... or are planning to add
> it soon... but I was not able to find it.

The way that you do this with Travis is you open a PR and you watch its build status.  If you want to see individual test results quickly you can edit the test matrix on your branch to just run the part you want.  There's command-line support for this in 'travis monitor' for watching for the build to finish on the command line.  It's not quite as nice as 'buildbot_try' but it can get the job done.

> but my biggest problem with Twisted is still the huge wait times for
> the review queue ... at least for my tickets :)
> 
> I would enjoy working for a branch is is reviewed in 1 or 2 days.


I wish we had a graph of review latency, because it certainly _feels_ like review queue times are going down with all the activity we've had in the last couple of months.  But we should keep making progress...

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160815/b50729a0/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Aug 15 14:38:24 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Aug 2016 13:38:24 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAEeXt4N+Za2B9M_260ymz0R5c3wGRJ2yyi9xVDScxzp+Ojr4Pw@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAEeXt4N+Za2B9M_260ymz0R5c3wGRJ2yyi9xVDScxzp+Ojr4Pw@mail.gmail.com>
Message-ID: <4EF86D73-4AC6-4831-95F0-FB34A0616932@twistedmatrix.com>


> On Aug 15, 2016, at 3:55 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> How might we guess this would compare to $6000/year development effort spent towards  speeding up the test suite?

An excellent point :).

Although both are somewhat moot if we don't do some fundraising...

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160815/fee0d2be/attachment.html>

From exarkun at twistedmatrix.com  Mon Aug 15 15:11:10 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 15 Aug 2016 17:11:10 -0400
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
Message-ID: <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>

On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

There's a lot that we can do to make Travis almost that fast, with
pre-built Docker images and cached dependencies.  We haven't done much in
the way of aggressive optimization yet.  As recently discussed we're still
doing twice as many builds as we need to just because we've misconfigured
branch / push builds :).


Hm... pre-built dockers also takes effort to keep them updated... and
then we will have a KVM VM starting inside a docker in which we run
the tests...

...and we would not be able to test the inotify part.


Not true:
>
>
>    1. We can have one non-containerized builder (sudo: true) for testing
>    inotify; no need for KVM-in-Docker (also you can't do that without a
>    privileged container, so, good thing)
>
> I'm curious about the details of how such a configuration would work.
Since there is only one travis configuration per repository (well, per
branch, technically, don't think that makes a difference here) and the sudo
configuration is global (isn't it?), I always though either a project had
to pick sudo or not sudo and you couldn't have a mix of builds with each.

(Wonky quoting thanks to gmail's wonky web interface, sorry)

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160815/e78318db/attachment.html>

From glyph at twistedmatrix.com  Mon Aug 15 17:03:12 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Aug 2016 16:03:12 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
Message-ID: <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>


> On Aug 15, 2016, at 2:11 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>>> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).
>> 
>> Hm... pre-built dockers also takes effort to keep them updated... and
>> then we will have a KVM VM starting inside a docker in which we run
>> the tests...
>> 
>> ...and we would not be able to test the inotify part.
> 
> Not true:
> 
> We can have one non-containerized builder (sudo: true) for testing inotify; no need for KVM-in-Docker (also you can't do that without a privileged container, so, good thing)
> I'm curious about the details of how such a configuration would work.  Since there is only one travis configuration per repository (well, per branch, technically, don't think that makes a difference here) and the sudo configuration is global (isn't it?), I always though either a project had to pick sudo or not sudo and you couldn't have a mix of builds with each.

I had just assumed that it would be per-matrix-entry, and while it looks like I'm correct, it's much less obvious than I had thought.  If you look at the second example code block under this heading:

https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix

you'll see that one of the matrix/include entries has a 'sudo: required' tag, which means "non-container-based" please.  Presumably you can mix those.

The docs on "migrating to the container-based infrastructure" do make it sound like this is impossible though, and this isn't nearly as clear as I'd like, so it would be nice to actually experiment and see what happens...

> (Wonky quoting thanks to gmail's wonky web interface, sorry)

It wasn't too bad - certainly well-worth suffering through for your contribution :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160815/3326994e/attachment.html>

From hawkowl at atleastfornow.net  Mon Aug 15 19:40:18 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 16 Aug 2016 11:40:18 +1000
Subject: [Twisted-Python] Twisted 16.3.1 Release Announcement
Message-ID: <FDE31F52-4984-4DDC-AD2D-125B2E9D94F7@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.3.1.

This is a bug fix & security fix release, and is recommended for all users of Twisted. The fixes are:

- A bugfix for a HTTP/2 edge case,
- Fix for CVE-2008-7317 (generating potentially guessable HTTP session identifiers)
- Fix for CVE-2008-7318 (sending secure session cookies over insecured connections)
- Fix for CVE-2016-1000111 (http://httpoxy.org/ <http://httpoxy.org/>)

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.3.1/NEWS <https://github.com/twisted/twisted/blob/twisted-16.3.1/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160816/93d19fe2/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160816/93d19fe2/attachment.pgp>

From burak.arslan at arskom.com.tr  Tue Aug 16 01:19:17 2016
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Tue, 16 Aug 2016 10:19:17 +0300
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <2031264f-6e97-7a99-fb99-216cdfe0bf17@arskom.com.tr>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
 <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
 <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>
 <2031264f-6e97-7a99-fb99-216cdfe0bf17@arskom.com.tr>
Message-ID: <433f48db-3d56-8fca-94a7-78b23736154f@arskom.com.tr>



On 08/12/16 12:58, Burak Arslan wrote:
> Do you think I can get away
> with relying on mmap here?

So I'll go with the usual "don't touch it from the reactor thread" and I
guess I'll be good :)

Cheers,
Burak


From hawkowl at atleastfornow.net  Tue Aug 16 01:20:24 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 16 Aug 2016 17:20:24 +1000
Subject: [Twisted-Python] [BACKWARDS INCOMPATIBILITY] Making
	twisted.python.dist3 private
Message-ID: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>

Hi everyone,

I am moving the dist3 from a whitelist to a blacklist, and that requires changing the whole module's interface, which shouldn't be public anyway.

You can get the branch here: https://github.com/twisted/twisted/pull/501 , it'll be available for a further week.

The only concern for this code was depgraph, which we are now at the point of not needing, as we're getting to leaf modules and not core modules.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160816/ea023bbf/attachment-0001.pgp>

From adi at roiban.ro  Tue Aug 16 01:25:23 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 16 Aug 2016 08:25:23 +0100
Subject: [Twisted-Python] [BACKWARDS INCOMPATIBILITY] Making
 twisted.python.dist3 private
In-Reply-To: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>
References: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>
Message-ID: <CAFycZ9ch47UwghdirPWJEgywB2tX--jBYWMfjpRmaN+tXkMNSA@mail.gmail.com>

+1 for the change.

Thanks!

On 16 August 2016 at 08:20, Amber "Hawkie" Brown
<hawkowl at atleastfornow.net> wrote:
> Hi everyone,
>
> I am moving the dist3 from a whitelist to a blacklist, and that requires changing the whole module's interface, which shouldn't be public anyway.
>
> You can get the branch here: https://github.com/twisted/twisted/pull/501 , it'll be available for a further week.
>
> The only concern for this code was depgraph, which we are now at the point of not needing, as we're getting to leaf modules and not core modules.
>
> - Amber
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban


From exarkun at twistedmatrix.com  Tue Aug 16 04:06:28 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 16 Aug 2016 06:06:28 -0400
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
Message-ID: <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>

On Mon, Aug 15, 2016 at 7:03 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Aug 15, 2016, at 2:11 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
> There's a lot that we can do to make Travis almost that fast, with
> pre-built Docker images and cached dependencies.  We haven't done much in
> the way of aggressive optimization yet.  As recently discussed we're still
> doing twice as many builds as we need to just because we've misconfigured
> branch / push builds :).
>
>
> Hm... pre-built dockers also takes effort to keep them updated... and
> then we will have a KVM VM starting inside a docker in which we run
> the tests...
>
> ...and we would not be able to test the inotify part.
>
>
> Not true:
>>
>>
>>    1. We can have one non-containerized builder (sudo: true) for testing
>>    inotify; no need for KVM-in-Docker (also you can't do that without a
>>    privileged container, so, good thing)
>>
>> I'm curious about the details of how such a configuration would work.
> Since there is only one travis configuration per repository (well, per
> branch, technically, don't think that makes a difference here) and the sudo
> configuration is global (isn't it?), I always though either a project had
> to pick sudo or not sudo and you couldn't have a mix of builds with each.
>
>
> I had just assumed that it would be per-matrix-entry, and while it looks
> like I'm correct, it's much less obvious than I had thought.  If you look
> at the second example code block under this heading:
>
> https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix
>
> you'll see that one of the matrix/include entries has a 'sudo: required'
> tag, which means "non-container-based" please.  Presumably you can mix
> those.
>

Ah, neat.  I hope that works (and wish I'd noticed that example a couple
months ago).

Jean-Paul


>
> The docs on "migrating to the container-based infrastructure" do make it
> sound like this is impossible though, and this isn't nearly as clear as I'd
> like, so it would be nice to actually experiment and see what happens...
>
> (Wonky quoting thanks to gmail's wonky web interface, sorry)
>
>
> It wasn't too bad - certainly well-worth suffering through for your
> contribution :).
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160816/5d15c2b8/attachment.html>

From glyph at twistedmatrix.com  Tue Aug 16 13:38:07 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 16 Aug 2016 12:38:07 -0700
Subject: [Twisted-Python] [BACKWARDS INCOMPATIBILITY] Making
	twisted.python.dist3 private
In-Reply-To: <CAFycZ9ch47UwghdirPWJEgywB2tX--jBYWMfjpRmaN+tXkMNSA@mail.gmail.com>
References: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>
 <CAFycZ9ch47UwghdirPWJEgywB2tX--jBYWMfjpRmaN+tXkMNSA@mail.gmail.com>
Message-ID: <8C4EAF46-5C4C-4FDD-9C02-93CA0EB69822@twistedmatrix.com>

+1 from me as well.

It's just weird that we ever made that module public in the first place.
This change will make a lot harder to accidentally add some new code and make it python2 only (which we should not be doing at this point!).
It will be encouraging progress-wise to visibly see this list shrink, rather than an indeterminate-sized list grow.

> On Aug 16, 2016, at 12:25 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> +1 for the change.
> 
> Thanks!
> 
> On 16 August 2016 at 08:20, Amber "Hawkie" Brown
> <hawkowl at atleastfornow.net> wrote:
>> Hi everyone,
>> 
>> I am moving the dist3 from a whitelist to a blacklist, and that requires changing the whole module's interface, which shouldn't be public anyway.
>> 
>> You can get the branch here: https://github.com/twisted/twisted/pull/501 , it'll be available for a further week.
>> 
>> The only concern for this code was depgraph, which we are now at the point of not needing, as we're getting to leaf modules and not core modules.
>> 
>> - Amber
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
> 
> 
> 
> -- 
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160816/8ea5fc1e/attachment.html>

From glyph at twistedmatrix.com  Tue Aug 16 13:38:49 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 16 Aug 2016 12:38:49 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
Message-ID: <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>


> On Aug 16, 2016, at 3:06 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Aug 15, 2016 at 7:03 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Aug 15, 2016, at 2:11 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>>> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).
>>> 
>>> Hm... pre-built dockers also takes effort to keep them updated... and
>>> then we will have a KVM VM starting inside a docker in which we run
>>> the tests...
>>> 
>>> ...and we would not be able to test the inotify part.
>> 
>> Not true:
>> 
>> We can have one non-containerized builder (sudo: true) for testing inotify; no need for KVM-in-Docker (also you can't do that without a privileged container, so, good thing)
>> I'm curious about the details of how such a configuration would work.  Since there is only one travis configuration per repository (well, per branch, technically, don't think that makes a difference here) and the sudo configuration is global (isn't it?), I always though either a project had to pick sudo or not sudo and you couldn't have a mix of builds with each.
> 
> I had just assumed that it would be per-matrix-entry, and while it looks like I'm correct, it's much less obvious than I had thought.  If you look at the second example code block under this heading:
> 
> https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix <https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix>
> 
> you'll see that one of the matrix/include entries has a 'sudo: required' tag, which means "non-container-based" please.  Presumably you can mix those.
> 
> Ah, neat.  I hope that works (and wish I'd noticed that example a couple months ago).
> 

I strongly suspect it will, since you can have OS X and Linux builds in the same matrix, and OS X builds are by definition not container based :).

> Jean-Paul
>  
> 
> The docs on "migrating to the container-based infrastructure" do make it sound like this is impossible though, and this isn't nearly as clear as I'd like, so it would be nice to actually experiment and see what happens...
> 
>> (Wonky quoting thanks to gmail's wonky web interface, sorry)
> 
> It wasn't too bad - certainly well-worth suffering through for your contribution :).
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160816/d7d86e00/attachment.html>

From adi at roiban.ro  Wed Aug 17 09:07:17 2016
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 17 Aug 2016 16:07:17 +0100
Subject: [Twisted-Python] making appveyor a required status
In-Reply-To: <CAFycZ9cjRXhan+-g6ewnvdd3iNvveHTPDeBo9d5w2Owbx6E2yA@mail.gmail.com>
References: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>
 <CAFycZ9cjRXhan+-g6ewnvdd3iNvveHTPDeBo9d5w2Owbx6E2yA@mail.gmail.com>
Message-ID: <CAFycZ9e1JjpUG9BKa_BPTQLiYJN-awYw1j+OFbNi4M=9x=bSGg@mail.gmail.com>

On 14 August 2016 at 11:38, Adi Roiban <adi at roiban.ro> wrote:
> On 14 August 2016 at 00:40, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> Just a bit of Github housekeeping: Appveyor has looked pretty stable (more than our other Windows builds, even).  I'm thinking about making it a required status for merging.  But I'm curious what other folks have seen on PRs I might not have looked at; is it pretty reliable at this point?

Appveyor Twisted jobs are still running under my account. There is a
ticket to fix this [1] ... but I don't know how to create organization
accounts  ... other than sharing the same username and password

As the tests are executed under a private account, I am the only
person who can trigger a rebuild... and I have just saw Appveyor tests
failing and then passing on a re-run with the same code.


[1] https://twistedmatrix.com/trac/ticket/8708
-- 
Adi Roiban


From steve.morin at gmail.com  Wed Aug 17 16:43:57 2016
From: steve.morin at gmail.com (Steve Morin)
Date: Wed, 17 Aug 2016 15:43:57 -0700
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
Message-ID: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>

Twisted Community

Problem: How do you determine the buffer size of a transport, to know how
much data is waiting to be transmitted from using transport.write?

Wait! You're going to say: use the Producer Consumer API (
http://twistedmatrix.com/documents/current/core/howto/producers.html )

To do what: So that instead of using back pressure I can check the buffer
and when it's "too big/full" can decide to do something to the transport I
am writing to:

Slow transport handling options:

- Buffer to disk instead of memory
- Kill the transport
- Decide to skip sending some data
- Send an error or message to the transport I am writing to
- Reduce the resolution, increase the compression (things like video or
audio)

Why not use back pressure?: Some use-cases and some protocols this doesn't
make sense.

Examples:
- You're sending video and if the receiver can't keep up you want to
downgrade or upgrade the quality of the video, but if you don't know if you
can't tell how much it buffering.
- You're receiving from one connection and then broadcasting what you
received to multiple clients and you want to handle it by sending an error
to a client that doesn't keep up
- You're sending a real-time protocol and want to skip sending some data
that's no longer relevant if the buffer is too slow.

On a server what are the consequences:
Too much buffering in many transport write buffer can cause a server to
fail.  I don't know how to keep track of this to proactively without access
to the buffer sizes.  Resolutions can then be to, not accept new
connections when memory pressure is too high, kill connections with the
weakest/slowest clients or have a protocol that can have client switch
connections to new servers when instructed to spread out the load.
1) I would like to hear on how people would solve this sort of problem in
Twisted for a server?
2) I would like to hear people opinions on this in general.

Tobias Oberstein - BCC'ed you on this email because you seems to have
tackled similar problems (based on the mailing list) and would really love
to get your take on this too.

Glyph and Jean-Paul, you're also big on those threads so any opinions you
have would be appreciated as well.

Some of my background research

* http://twistedmatrix.com/pipermail/twisted-python/2015-January/029064.html
* Later but good in the chain:
http://twistedmatrix.com/pipermail/twisted-python/2015-January/029071.html
  * Twisted receiving buffers swamped?
  * Summary: Great thread but runs into a tangent for a while and picks up
good at the end again discussing producer again and the need for
backpressure
  * Other:
    * http://crossbar.io/
    * http://tavendo.com/
  * Scenario: "Twisted is reading off the TCP stack from the kernel and
buffering in userspace faster than the echo server is pushing out stuff to
the TCP stack into the kernel. Hence, no TCP backpressure results, netperf
happily sends more and more, and the memory of the Twisted process runs
away."
  * Confirmed: Data isn't Buffered in "userspace inside Twisted, and before
data is handled by the app in dataReceived."
*
https://twistedmatrix.com/pipermail/twisted-python/2010-September/022900.html
  * How to cap the buffering size of data to be sent in Protocol class
  * Summary: Same issue, very short no good info
* https://twistedmatrix.com/pipermail/twisted-python/2012-March/025416.html
  * Limit on transport.write
  * Summary: Similar issue, very short no good info, glyph confirms that
transport.write buffers everything sent to it.
*
https://twistedmatrix.com/pipermail/twisted-python/2012-February/025215.html
  * pushing out same message on 100k TCPs
  * Summary: Interesting discussion but different issue - interesting aside
about irc spanning trees for a large broadcasts
* http://twistedmatrix.com/pipermail/twisted-python/2008-April/017503.html
  * Question on push/pull producers inter-workings, was : "Is there a
simple Producer/Consumer example or tutorial?"
  * Summary: Related and goes into what a producer is - an explanation of it
* http://twistedmatrix.com/pipermail/twisted-python/2004-May/007732.html
  * When do calls to transport.write() block ?
  * Summary: Discusses the right issue, talks about buffer call back if
full which would be great (if configurable)
*
https://pythonhosted.org/qbuf/qbuf.twisted_support.MultiBufferer-class.html
  * https://launchpad.net/qbuf
  * Summary: c buffer implementation that's incomplete thought might be
promising
*
http://stackoverflow.com/questions/21821119/twisted-producer-to-many-clients-with-buffer
  * Summary: Was indicating a similar use-case but source doesn't seem to
exist on the internet
* http://twistedmatrix.com/documents/current/core/howto/producers.html
  * Summary: Documentation on Producer and Consumers but only help with a
backpressure scenario
* http://twistedmatrix.com/pipermail/twisted-python/2007-July/015690.html
  * Summary: Discussion on how producer-consumer API's work and future
enhancement no help
* MANY MORE THAT 100% NOT RELEVANT


-- 
Steve Morin | Hacker, Entrepreneur, Startup Advisor
twitter.com/SteveMorin | stevemorin.com
*Live the dream start a startup. Make the world ... a better place.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160817/b0dd2096/attachment.html>

From hawkowl at atleastfornow.net  Wed Aug 17 18:39:55 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Thu, 18 Aug 2016 10:39:55 +1000
Subject: [Twisted-Python] Moving under a src directory,
	or: Sorry But I Broke All Your Pull Requests
Message-ID: <072D9AF2-82A1-45F9-91F8-FD9D2917CF39@atleastfornow.net>

Hi everyone,

I have just merged the branch which puts twisted under a src/ directory. The reasons are many (see https://hynek.me/articles/testing-packaging/ for details as to why this is a Fantastic Idea), and it will require a bit of care with existing branches and pull requests.

Thankfully, glyph has scripted all that your PR should need to do:

    python admin/fix-for-src-mv.py

This will move everything under the src/ dir. If you have moved/renamed files in your PR, you may need to manually fix the conflicts.

Happy hacking, everyone :)

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160818/bceb5368/attachment.pgp>

From adi at roiban.ro  Thu Aug 18 09:51:30 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 18 Aug 2016 16:51:30 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
Message-ID: <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>

PR for running only on trunk and release branches is here
https://twistedmatrix.com/trac/ticket/8767

Travis-CI told that they can increase the limit to 15 jobs for one
week so that we can give it a try.

It would help to have the PR only build branch merged soon :)

Cheers,
Adi


From hawkowl at atleastfornow.net  Fri Aug 19 03:39:31 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Fri, 19 Aug 2016 17:39:31 +0800
Subject: [Twisted-Python] Twisted 16.3.2 Release Announcement
Message-ID: <BABD88F9-3895-41D8-BE50-100F88C66C38@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.3.1.

This is a security fix release, and is recommended for all users of Twisted. The fixes contained are:

- Twisted's HTTP server, when operating over TLS, would not cleanly close sockets, causing it to build up CLOSE_WAIT sockets until it would eventually run out of file descriptors.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.3.2/NEWS <https://github.com/twisted/twisted/blob/twisted-16.3.2/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160819/3b0ecfc0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160819/3b0ecfc0/attachment.pgp>

From steve at stevemorin.com  Fri Aug 19 08:08:40 2016
From: steve at stevemorin.com (Steve Morin)
Date: Fri, 19 Aug 2016 07:08:40 -0700
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
In-Reply-To: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
References: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
Message-ID: <CAPxhEGe+Wer2w_imZ5O8zxbDfdiuWgu142pw0YiVwQuzyzyXDA@mail.gmail.com>

Anyone know how do you determine the buffer size of a transport, to know
how much data is waiting to be transmitted from using transport.write?

Or how you would go about adding that ability to a reactor/transport?

On Wed, Aug 17, 2016 at 3:43 PM, Steve Morin <steve.morin at gmail.com> wrote:

> Twisted Community
>
> Problem: How do you determine the buffer size of a transport, to know how
> much data is waiting to be transmitted from using transport.write?
>
> Wait! You're going to say: use the Producer Consumer API (
> http://twistedmatrix.com/documents/current/core/howto/producers.html )
>
> To do what: So that instead of using back pressure I can check the buffer
> and when it's "too big/full" can decide to do something to the transport I
> am writing to:
>
> Slow transport handling options:
>
> - Buffer to disk instead of memory
> - Kill the transport
> - Decide to skip sending some data
> - Send an error or message to the transport I am writing to
> - Reduce the resolution, increase the compression (things like video or
> audio)
>
> Why not use back pressure?: Some use-cases and some protocols this doesn't
> make sense.
>
> Examples:
> - You're sending video and if the receiver can't keep up you want to
> downgrade or upgrade the quality of the video, but if you don't know if you
> can't tell how much it buffering.
> - You're receiving from one connection and then broadcasting what you
> received to multiple clients and you want to handle it by sending an error
> to a client that doesn't keep up
> - You're sending a real-time protocol and want to skip sending some data
> that's no longer relevant if the buffer is too slow.
>
> On a server what are the consequences:
> Too much buffering in many transport write buffer can cause a server to
> fail.  I don't know how to keep track of this to proactively without access
> to the buffer sizes.  Resolutions can then be to, not accept new
> connections when memory pressure is too high, kill connections with the
> weakest/slowest clients or have a protocol that can have client switch
> connections to new servers when instructed to spread out the load.
> 1) I would like to hear on how people would solve this sort of problem in
> Twisted for a server?
> 2) I would like to hear people opinions on this in general.
>
> Tobias Oberstein - BCC'ed you on this email because you seems to have
> tackled similar problems (based on the mailing list) and would really love
> to get your take on this too.
>
> Glyph and Jean-Paul, you're also big on those threads so any opinions you
> have would be appreciated as well.
>
> Some of my background research
>
> * http://twistedmatrix.com/pipermail/twisted-python/2015-
> January/029064.html
> * Later but good in the chain: http://twistedmatrix.com/
> pipermail/twisted-python/2015-January/029071.html
>   * Twisted receiving buffers swamped?
>   * Summary: Great thread but runs into a tangent for a while and picks up
> good at the end again discussing producer again and the need for
> backpressure
>   * Other:
>     * http://crossbar.io/
>     * http://tavendo.com/
>   * Scenario: "Twisted is reading off the TCP stack from the kernel and
> buffering in userspace faster than the echo server is pushing out stuff to
> the TCP stack into the kernel. Hence, no TCP backpressure results, netperf
> happily sends more and more, and the memory of the Twisted process runs
> away."
>   * Confirmed: Data isn't Buffered in "userspace inside Twisted, and
> before data is handled by the app in dataReceived."
> * https://twistedmatrix.com/pipermail/twisted-python/2010-
> September/022900.html
>   * How to cap the buffering size of data to be sent in Protocol class
>   * Summary: Same issue, very short no good info
> * https://twistedmatrix.com/pipermail/twisted-python/2012-
> March/025416.html
>   * Limit on transport.write
>   * Summary: Similar issue, very short no good info, glyph confirms that
> transport.write buffers everything sent to it.
> * https://twistedmatrix.com/pipermail/twisted-python/2012-
> February/025215.html
>   * pushing out same message on 100k TCPs
>   * Summary: Interesting discussion but different issue - interesting
> aside about irc spanning trees for a large broadcasts
> * http://twistedmatrix.com/pipermail/twisted-python/2008-April/017503.html
>   * Question on push/pull producers inter-workings, was : "Is there a
> simple Producer/Consumer example or tutorial?"
>   * Summary: Related and goes into what a producer is - an explanation of
> it
> * http://twistedmatrix.com/pipermail/twisted-python/2004-May/007732.html
>   * When do calls to transport.write() block ?
>   * Summary: Discusses the right issue, talks about buffer call back if
> full which would be great (if configurable)
> * https://pythonhosted.org/qbuf/qbuf.twisted_support.
> MultiBufferer-class.html
>   * https://launchpad.net/qbuf
>   * Summary: c buffer implementation that's incomplete thought might be
> promising
> * http://stackoverflow.com/questions/21821119/twisted-
> producer-to-many-clients-with-buffer
>   * Summary: Was indicating a similar use-case but source doesn't seem to
> exist on the internet
> * http://twistedmatrix.com/documents/current/core/howto/producers.html
>   * Summary: Documentation on Producer and Consumers but only help with a
> backpressure scenario
> * http://twistedmatrix.com/pipermail/twisted-python/2007-July/015690.html
>   * Summary: Discussion on how producer-consumer API's work and future
> enhancement no help
> * MANY MORE THAT 100% NOT RELEVANT
>
>
> --
> Steve Morin | Hacker, Entrepreneur, Startup Advisor
> twitter.com/SteveMorin | stevemorin.com
> *Live the dream start a startup. Make the world ... a better place.*
>



-- 
*Steve Morin | Managing Partner - CTO*

*Nvent*

O 800-407-1156 ext 803 <800-407-1156;803> | M 347-453-5579

smorin at nventdata.com  <smorin at nventdata.com>

*Enabling the Data Driven Enterprise*
*(Ask us how we can setup scalable open source realtime billion+ event/data
collection/analytics infrastructure in weeks)*

Service Areas: Management & Strategy Consulting | Data Engineering | Data
Science & Visualization
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160819/71efe035/attachment-0001.html>

From exarkun at twistedmatrix.com  Fri Aug 19 09:58:22 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 19 Aug 2016 11:58:22 -0400
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
In-Reply-To: <CAPxhEGe+Wer2w_imZ5O8zxbDfdiuWgu142pw0YiVwQuzyzyXDA@mail.gmail.com>
References: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
 <CAPxhEGe+Wer2w_imZ5O8zxbDfdiuWgu142pw0YiVwQuzyzyXDA@mail.gmail.com>
Message-ID: <CAEeXt4No1DMTZwMej2uN8r2130eTUThJJU903ux7ToqzyGi_dA@mail.gmail.com>

There are at least two buffers (per direction) you might be interested in.
You can get the kernel buffer size with getsockopt - SO_SNDBUF and
SO_RCVBUF.  Then, there may also be a user-space buffer (or perhaps more
than one) managed by the transport implementation.  The details of this are
entirely up to the transport so there's no general answer apart from "read
the implementation, contribute a patch implementing a public interface for
retrieving the information".

Jean-Paul

On Fri, Aug 19, 2016 at 10:08 AM, Steve Morin <steve at stevemorin.com> wrote:

> Anyone know how do you determine the buffer size of a transport, to know
> how much data is waiting to be transmitted from using transport.write?
>
> Or how you would go about adding that ability to a reactor/transport?
>
> On Wed, Aug 17, 2016 at 3:43 PM, Steve Morin <steve.morin at gmail.com>
> wrote:
>
>> Twisted Community
>>
>> Problem: How do you determine the buffer size of a transport, to know how
>> much data is waiting to be transmitted from using transport.write?
>>
>> Wait! You're going to say: use the Producer Consumer API (
>> http://twistedmatrix.com/documents/current/core/howto/producers.html )
>>
>> To do what: So that instead of using back pressure I can check the buffer
>> and when it's "too big/full" can decide to do something to the transport I
>> am writing to:
>>
>> Slow transport handling options:
>>
>> - Buffer to disk instead of memory
>> - Kill the transport
>> - Decide to skip sending some data
>> - Send an error or message to the transport I am writing to
>> - Reduce the resolution, increase the compression (things like video or
>> audio)
>>
>> Why not use back pressure?: Some use-cases and some protocols this
>> doesn't make sense.
>>
>> Examples:
>> - You're sending video and if the receiver can't keep up you want to
>> downgrade or upgrade the quality of the video, but if you don't know if you
>> can't tell how much it buffering.
>> - You're receiving from one connection and then broadcasting what you
>> received to multiple clients and you want to handle it by sending an error
>> to a client that doesn't keep up
>> - You're sending a real-time protocol and want to skip sending some data
>> that's no longer relevant if the buffer is too slow.
>>
>> On a server what are the consequences:
>> Too much buffering in many transport write buffer can cause a server to
>> fail.  I don't know how to keep track of this to proactively without access
>> to the buffer sizes.  Resolutions can then be to, not accept new
>> connections when memory pressure is too high, kill connections with the
>> weakest/slowest clients or have a protocol that can have client switch
>> connections to new servers when instructed to spread out the load.
>> 1) I would like to hear on how people would solve this sort of problem in
>> Twisted for a server?
>> 2) I would like to hear people opinions on this in general.
>>
>> Tobias Oberstein - BCC'ed you on this email because you seems to have
>> tackled similar problems (based on the mailing list) and would really love
>> to get your take on this too.
>>
>> Glyph and Jean-Paul, you're also big on those threads so any opinions you
>> have would be appreciated as well.
>>
>> Some of my background research
>>
>> * http://twistedmatrix.com/pipermail/twisted-python/2015-Janua
>> ry/029064.html
>> * Later but good in the chain: http://twistedmatrix.com/piper
>> mail/twisted-python/2015-January/029071.html
>>   * Twisted receiving buffers swamped?
>>   * Summary: Great thread but runs into a tangent for a while and picks
>> up good at the end again discussing producer again and the need for
>> backpressure
>>   * Other:
>>     * http://crossbar.io/
>>     * http://tavendo.com/
>>   * Scenario: "Twisted is reading off the TCP stack from the kernel and
>> buffering in userspace faster than the echo server is pushing out stuff to
>> the TCP stack into the kernel. Hence, no TCP backpressure results, netperf
>> happily sends more and more, and the memory of the Twisted process runs
>> away."
>>   * Confirmed: Data isn't Buffered in "userspace inside Twisted, and
>> before data is handled by the app in dataReceived."
>> * https://twistedmatrix.com/pipermail/twisted-python/2010-Sept
>> ember/022900.html
>>   * How to cap the buffering size of data to be sent in Protocol class
>>   * Summary: Same issue, very short no good info
>> * https://twistedmatrix.com/pipermail/twisted-python/2012-Marc
>> h/025416.html
>>   * Limit on transport.write
>>   * Summary: Similar issue, very short no good info, glyph confirms that
>> transport.write buffers everything sent to it.
>> * https://twistedmatrix.com/pipermail/twisted-python/2012-Febr
>> uary/025215.html
>>   * pushing out same message on 100k TCPs
>>   * Summary: Interesting discussion but different issue - interesting
>> aside about irc spanning trees for a large broadcasts
>> * http://twistedmatrix.com/pipermail/twisted-python/2008-April
>> /017503.html
>>   * Question on push/pull producers inter-workings, was : "Is there a
>> simple Producer/Consumer example or tutorial?"
>>   * Summary: Related and goes into what a producer is - an explanation of
>> it
>> * http://twistedmatrix.com/pipermail/twisted-python/2004-May/007732.html
>>   * When do calls to transport.write() block ?
>>   * Summary: Discusses the right issue, talks about buffer call back if
>> full which would be great (if configurable)
>> * https://pythonhosted.org/qbuf/qbuf.twisted_support.MultiBuff
>> erer-class.html
>>   * https://launchpad.net/qbuf
>>   * Summary: c buffer implementation that's incomplete thought might be
>> promising
>> * http://stackoverflow.com/questions/21821119/twisted-producer
>> -to-many-clients-with-buffer
>>   * Summary: Was indicating a similar use-case but source doesn't seem to
>> exist on the internet
>> * http://twistedmatrix.com/documents/current/core/howto/producers.html
>>   * Summary: Documentation on Producer and Consumers but only help with a
>> backpressure scenario
>> * http://twistedmatrix.com/pipermail/twisted-python/2007-July/015690.html
>>   * Summary: Discussion on how producer-consumer API's work and future
>> enhancement no help
>> * MANY MORE THAT 100% NOT RELEVANT
>>
>>
>> --
>> Steve Morin | Hacker, Entrepreneur, Startup Advisor
>> twitter.com/SteveMorin | stevemorin.com
>> *Live the dream start a startup. Make the world ... a better place.*
>>
>
>
>
> --
> *Steve Morin | Managing Partner - CTO*
>
> *Nvent*
>
> O 800-407-1156 ext 803 <800-407-1156;803> | M 347-453-5579
>
> smorin at nventdata.com  <smorin at nventdata.com>
>
> *Enabling the Data Driven Enterprise*
> *(Ask us how we can setup scalable open source realtime billion+
> event/data collection/analytics infrastructure in weeks)*
>
> Service Areas: Management & Strategy Consulting | Data Engineering | Data
> Science & Visualization
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160819/b8e90bd8/attachment.html>

From glyph at twistedmatrix.com  Sat Aug 20 01:37:59 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 20 Aug 2016 00:37:59 -0700
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the
	transport's connected flag on connection lost
In-Reply-To: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
References: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
Message-ID: <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>


> On Aug 11, 2016, at 06:59, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I have observed that when a SSL4ClientEndpoint was used, the
> protocol's transport `connected` attribute is not updated by the
> wrapper when the connection is lost.

Hey Adi,

I took a look through the code, and I think it's a lot simpler than you realize :-).

> My current finding is that the reactor will call connection lost on
> t.i.abstract.FileDescriptor.connectionLost and not on
> t.protocols.policies.ProtocolWrapper

This is definitely not true, or dropping the connection just wouldn't work at all, and you wouldn't get connectionLost on your protocol.  The call path is FileDescriptor.connectionLost -> endpoint wrapper protocol.connectionLost -> *TLS wrapper protocol.connectionLost* -> your protocol connectionLost.

The bold-faced protocol is the interesting one, because that is the 'transport' object that your protocol sees.  Here's that object's connectionLost method:

https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488 <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488>

As you can see, neither it, nor the superclass that it upcalls to <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123 <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123>> sets the "connected" attribute.  So the method is totally called, it just doesn't do what you expect.

> so it seems that when SSL is used the wrapped protocol is registered
> instead of the wrapping protocol.

I'm not sure what you mean here.

> I am doing something wrong here?

> Is this the expected behavior or this is a bug?

Probably both, kinda?  This attribute is undocumented; probably an old implementation accident.  Technically it's public, but you probably shouldn't be depending on it.  However, it's silly that this is inconsistent between TLS transports and raw TCP transports, so fixing up ProtocolWrapper.connectionLost to set 'connected' to False is probably not a bad change.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160820/af59d3ce/attachment.html>

From adi at roiban.ro  Sat Aug 20 03:13:35 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 20 Aug 2016 10:13:35 +0100
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the
 transport's connected flag on connection lost
In-Reply-To: <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>
References: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
 <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>
Message-ID: <CAFycZ9ek4+RNGAy-9yPLFjwwda8gY_hRKk24zcfdR8PnCMKgFA@mail.gmail.com>

On 20 August 2016 at 08:37, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Aug 11, 2016, at 06:59, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> I have observed that when a SSL4ClientEndpoint was used, the
> protocol's transport `connected` attribute is not updated by the
> wrapper when the connection is lost.
>
>
> Hey Adi,
>
> I took a look through the code, and I think it's a lot simpler than you
> realize :-).
>
> My current finding is that the reactor will call connection lost on
> t.i.abstract.FileDescriptor.connectionLost and not on
> t.protocols.policies.ProtocolWrapper
>
>
> This is definitely not true, or dropping the connection just wouldn't work
> at all, and you wouldn't get connectionLost on your protocol.  The call path
> is FileDescriptor.connectionLost -> endpoint wrapper protocol.connectionLost
> -> *TLS wrapper protocol.connectionLost* -> your protocol connectionLost.
>
> The bold-faced protocol is the interesting one, because that is the
> 'transport' object that your protocol sees.  Here's that object's
> connectionLost method:
>
> https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488
>
> As you can see, neither it, nor the superclass that it upcalls to
> <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123>
> sets the "connected" attribute.  So the method is totally called, it just
> doesn't do what you expect.
>
> so it seems that when SSL is used the wrapped protocol is registered
> instead of the wrapping protocol.
>
>
> I'm not sure what you mean here.
>
> I am doing something wrong here?
>
>
> Is this the expected behavior or this is a bug?
>
>
> Probably both, kinda?  This attribute is undocumented; probably an old
> implementation accident.  Technically it's public, but you probably
> shouldn't be depending on it.  However, it's silly that this is inconsistent
> between TLS transports and raw TCP transports, so fixing up
> ProtocolWrapper.connectionLost to set 'connected' to False is probably not a
> bad change.

Thanks for your comments.

I asked the question about SSL4ClientEndpoint in parallel with the
question about twisted.internet.protocol.Protocol.connected ... so by
that time I was very confused about all this.

I have created a ticket for this
https://twistedmatrix.com/trac/ticket/8774 and will try to work on it.

I have searched to code for `self.connected =` and there are a few of
places where it is not set at connection lost:

INotify, PTYProcess, udp.Port (not sure why we have this state for
UDP) , unix.Port (but is set to 0 for unix.DatagramPort)
iocpreactor.udp.Port (but is set to False for iocpreactor.tcp.Port)

I will try to follow up with a ticket+branch.

Thanks!
-- 
Adi Roiban


From glyph at twistedmatrix.com  Sat Aug 20 03:38:03 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 20 Aug 2016 02:38:03 -0700
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the
	transport's connected flag on connection lost
In-Reply-To: <CAFycZ9ek4+RNGAy-9yPLFjwwda8gY_hRKk24zcfdR8PnCMKgFA@mail.gmail.com>
References: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
 <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>
 <CAFycZ9ek4+RNGAy-9yPLFjwwda8gY_hRKk24zcfdR8PnCMKgFA@mail.gmail.com>
Message-ID: <9D1B72A3-4DB6-4347-A798-8CF8330B98E0@twistedmatrix.com>


> On Aug 20, 2016, at 2:13 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 20 August 2016 at 08:37, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> On Aug 11, 2016, at 06:59, Adi Roiban <adi at roiban.ro> wrote:
>> 
>> Hi,
>> 
>> I have observed that when a SSL4ClientEndpoint was used, the
>> protocol's transport `connected` attribute is not updated by the
>> wrapper when the connection is lost.
>> 
>> 
>> Hey Adi,
>> 
>> I took a look through the code, and I think it's a lot simpler than you
>> realize :-).
>> 
>> My current finding is that the reactor will call connection lost on
>> t.i.abstract.FileDescriptor.connectionLost and not on
>> t.protocols.policies.ProtocolWrapper
>> 
>> 
>> This is definitely not true, or dropping the connection just wouldn't work
>> at all, and you wouldn't get connectionLost on your protocol.  The call path
>> is FileDescriptor.connectionLost -> endpoint wrapper protocol.connectionLost
>> -> *TLS wrapper protocol.connectionLost* -> your protocol connectionLost.
>> 
>> The bold-faced protocol is the interesting one, because that is the
>> 'transport' object that your protocol sees.  Here's that object's
>> connectionLost method:
>> 
>> https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488
>> 
>> As you can see, neither it, nor the superclass that it upcalls to
>> <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123>
>> sets the "connected" attribute.  So the method is totally called, it just
>> doesn't do what you expect.
>> 
>> so it seems that when SSL is used the wrapped protocol is registered
>> instead of the wrapping protocol.
>> 
>> 
>> I'm not sure what you mean here.
>> 
>> I am doing something wrong here?
>> 
>> 
>> Is this the expected behavior or this is a bug?
>> 
>> 
>> Probably both, kinda?  This attribute is undocumented; probably an old
>> implementation accident.  Technically it's public, but you probably
>> shouldn't be depending on it.  However, it's silly that this is inconsistent
>> between TLS transports and raw TCP transports, so fixing up
>> ProtocolWrapper.connectionLost to set 'connected' to False is probably not a
>> bad change.
> 
> Thanks for your comments.
> 
> I asked the question about SSL4ClientEndpoint in parallel with the
> question about twisted.internet.protocol.Protocol.connected ... so by
> that time I was very confused about all this.
> 
> I have created a ticket for this
> https://twistedmatrix.com/trac/ticket/8774 <https://twistedmatrix.com/trac/ticket/8774> and will try to work on it.
> 
> I have searched to code for `self.connected =` and there are a few of
> places where it is not set at connection lost:
> 
> INotify, PTYProcess, udp.Port (not sure why we have this state for
> UDP) , unix.Port (but is set to 0 for unix.DatagramPort)
> iocpreactor.udp.Port (but is set to False for iocpreactor.tcp.Port)
> 
> I will try to follow up with a ticket+branch.
> 
> Thanks!

No problem!  Glad we could clear that up - it was definitely a bit confusing at first for me as well, which is why I wanted to investigate to the bottom of it :).

Another option here, though, is to simply deprecate the attribute; like I said, it's not documented and if you're properly implementing everything by reacting to events, it's not very useful.  Why do you need it?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160820/55ffa95a/attachment-0001.html>

From glyph at twistedmatrix.com  Sun Aug 21 04:13:59 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 21 Aug 2016 03:13:59 -0700
Subject: [Twisted-Python] setup.py broken in trunk
Message-ID: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>

41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.

I think we should revert this.

Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).

-glyph

From adi at roiban.ro  Sun Aug 21 04:46:52 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 21 Aug 2016 11:46:52 +0100
Subject: [Twisted-Python] setup.py broken in trunk
In-Reply-To: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
References: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
Message-ID: <CAFycZ9dTJXeGAuy3t+6RsOsDkx7ZDAnqRuWDLWncX1UJOhB3Ew@mail.gmail.com>

Yes. Will revert it. My fault for not correctly solving the conflicts
during merge.


On 21 August 2016 at 11:13, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.
>
> I think we should revert this.
>
> Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Adi Roiban


From adi at roiban.ro  Sun Aug 21 05:19:17 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 21 Aug 2016 12:19:17 +0100
Subject: [Twisted-Python] setup.py broken in trunk
In-Reply-To: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
References: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
Message-ID: <CAFycZ9c4f5DH7OcigeU9kpaH6+_CYXMsyzLtmoCyB787z7nmSQ@mail.gmail.com>

On 21 August 2016 at 11:13, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.
>
> I think we should revert this.
>
> Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).

I have reverted and re-submitted the ticket for review. Sorry for the trouble!

I have not yet added integration tests for the console scripts.

I think that before writing such tests we need to make sure that
development environments and CI environments all have `pip install -e
.` or something similar called.

For more details see https://twistedmatrix.com/trac/ticket/8622#comment:8

Craig is pushing for removing bin/trial and after bin/trial is removed
I think that all environments will need to have `pip install .` called
so that we don't run the OS trial version.

There is also ticket https://twistedmatrix.com/trac/ticket/8544 which
tries to create tox environments for all Buildbot builders so that we
can run everything with Tox on buildbot CI system.

-- 
Adi Roiban


From glyph at twistedmatrix.com  Sun Aug 21 11:10:11 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 21 Aug 2016 10:10:11 -0700
Subject: [Twisted-Python] setup.py broken in trunk
In-Reply-To: <CAFycZ9c4f5DH7OcigeU9kpaH6+_CYXMsyzLtmoCyB787z7nmSQ@mail.gmail.com>
References: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
 <CAFycZ9c4f5DH7OcigeU9kpaH6+_CYXMsyzLtmoCyB787z7nmSQ@mail.gmail.com>
Message-ID: <27E026AD-E01C-4642-9152-49D0D6D99034@twistedmatrix.com>


> On Aug 21, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 21 August 2016 at 11:13, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.
>> 
>> I think we should revert this.
>> 
>> Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).
> 
> I have reverted and re-submitted the ticket for review. Sorry for the trouble!

Thanks for fixing!

> I have not yet added integration tests for the console scripts.
> 
> I think that before writing such tests we need to make sure that
> development environments and CI environments all have `pip install -e
> .` or something similar called.
> 
> For more details see https://twistedmatrix.com/trac/ticket/8622#comment:8


> Craig is pushing for removing bin/trial and after bin/trial is removed
> I think that all environments will need to have `pip install .` called
> so that we don't run the OS trial version.
> 
> There is also ticket https://twistedmatrix.com/trac/ticket/8544 which
> tries to create tox environments for all Buildbot builders so that we
> can run everything with Tox on buildbot CI system.

Once we have `tox` everywhere, we don't need a separate step to run `pip`.  This seems like the right way to address it.

-g

From hawkowl at atleastfornow.net  Sun Aug 21 11:28:30 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Mon, 22 Aug 2016 01:28:30 +0800
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 2 Announcement
Message-ID: <F35D9632-72B7-44AE-BB96-7D838254BDD6@atleastfornow.net>

Hi everyone!

I bring you a new Twisted 16.4.0 prerelease, with the following fixes:

- Twisted's HTTP server, when operating over TLS, would not cleanly close sockets, causing it to build up CLOSE_WAIT sockets until it would eventually run out of file descriptors. (from 16.3.2)
- AMP no longer fails on floats on Python 3.

For more information, check the NEWS file (link provided below).

As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.0pre2/ <https://twistedmatrix.com/Releases/pre/16.4.0pre2/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:

   pip install https://twistedmatrix.com/Releases/pre/16.4.0pre2/Twisted-16.4.0rc2.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.0pre2/Twisted-16.4.0rc2.tar.bz2>

Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/76143a6a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/76143a6a/attachment.pgp>

From p.mayers at imperial.ac.uk  Mon Aug 22 07:22:20 2016
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 22 Aug 2016 14:22:20 +0100
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
In-Reply-To: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
References: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
Message-ID: <57BAFC8C.1080300@imperial.ac.uk>

On 17/08/16 23:43, Steve Morin wrote:
> Twisted Community
>
> Problem: How do you determine the buffer size of a transport, to know
> how much data is waiting to be transmitted from using transport.write?

You haven't received many responses, so I'll add a short note here:

The ideal way to do this IMO is to have the receiver send 
acknowledgements with a sequence number to the sender once a message has 
been received *and processed*. Keep track of these at the sender and 
adjust the sending rate accordingly.

Another complementary approach is for the client to keep track of the 
length (in space or in time/age) of it's local 
received-but-not-processed queue and report this. Keeping track of the 
queue in terms of delay is close to the CoDel approach for AQM.

Depending on the network portion of the implementation, the mere fact of 
a message having been received and TCP-ack'd doesn't tell you the client 
is keeping up - it might be receiving and buffering into RAM and getting 
more and more backlogged.

If you can't alter the protocol to include protocol-level ack messages 
then obviously you have to go the less satisfactory route and estimate 
it from the lower-layer transport. As JP has noted, you can get this 
from the kernel.

Flow control is hard ;o)


From rodrigc at crodrigues.org  Mon Aug 22 18:40:31 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 22 Aug 2016 17:40:31 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
Message-ID: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>

Hi,

Someone has made changes in the past few days which have broken
many of the buildbots.  For example, in this build:

https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/steps/select/logs/stdio

There is this:

python -m tox -r -e py27-tests "" in dir /buildslave/debian8-py2.7/Twisted
(timeout 1200 secs) watching logfiles {'test.log':
'build/py27-tests/tmp/_trial_temp/test.log'} argv: ['python', '-m', 'tox',
'-r', '-e', 'py27-tests', '']

The last argument being passed to python is an empty string.
This is causing an empty string to be passed to trial, and
consequently none of the tests are being run.

This empty string is causing none of the tests to run, which is causing
the build to fail.  The fix is either to:

(1)  eliminate the last parameter

(2)  the last parameter should not be an empty string, but should be
"twisted"
      so that trial is invoked as "trial twisted".

I don't understand the buildbot scripts so don't know where to fix this.

Can someone fix this?

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/492ee36d/attachment.html>

From glyph at twistedmatrix.com  Mon Aug 22 19:23:31 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 22 Aug 2016 18:23:31 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
Message-ID: <A95F44D6-58FC-4FCF-9EA5-7F409F4A0ED9@twistedmatrix.com>


> On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> 
> Someone has made changes in the past few days which have broken
> many of the buildbots.  For example, in this build:
> 
> https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/steps/select/logs/stdio>
> 
> There is this:
> 
> python -m tox -r -e py27-tests "" in dir /buildslave/debian8-py2.7/Twisted (timeout 1200 secs) watching logfiles {'test.log': 'build/py27-tests/tmp/_trial_temp/test.log'} argv: ['python', '-m', 'tox', '-r', '-e', 'py27-tests', '']
> 
> The last argument being passed to python is an empty string.
> This is causing an empty string to be passed to trial, and
> consequently none of the tests are being run.
> 
> This empty string is causing none of the tests to run, which is causing
> the build to fail.  The fix is either to:
> 
> (1)  eliminate the last parameter
> 
> (2)  the last parameter should not be an empty string, but should be "twisted"
>       so that trial is invoked as "trial twisted".
> 
> I don't understand the buildbot scripts so don't know where to fix this.
> 
> Can someone fix this?

Just to be clear: these are changes to the buildbot scripts themselves, and not to the repo?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/408f0e3b/attachment.html>

From glyph at twistedmatrix.com  Mon Aug 22 19:24:29 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 22 Aug 2016 18:24:29 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
Message-ID: <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>


> On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I don't understand the buildbot scripts so don't know where to fix this.

Oh, and since this answer may be of general interest: the buildbot configuration is here: https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/master.cfg so folks can look in that repository to investigate.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/f96c82cb/attachment.html>

From rodrigc at crodrigues.org  Mon Aug 22 21:05:26 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 22 Aug 2016 20:05:26 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <A95F44D6-58FC-4FCF-9EA5-7F409F4A0ED9@twistedmatrix.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <A95F44D6-58FC-4FCF-9EA5-7F409F4A0ED9@twistedmatrix.com>
Message-ID: <CAG=rPVe0vd3yC=-PR1N8dYL5wWCZwzQ1hWXDsLOw2JokKGKTpA@mail.gmail.com>

On Monday, August 22, 2016, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org
> <javascript:_e(%7B%7D,'cvml','rodrigc at crodrigues.org');>> wrote:
>
> Hi,
>
> Someone has made changes in the past few days which have broken
> many of the buildbots.  For example, in this build:
>
> https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/
> steps/select/logs/stdio
>
> There is this:
>
> python -m tox -r -e py27-tests "" in dir /buildslave/debian8-py2.7/Twisted
> (timeout 1200 secs) watching logfiles {'test.log':
> 'build/py27-tests/tmp/_trial_temp/test.log'} argv: ['python', '-m',
> 'tox', '-r', '-e', 'py27-tests', '']
>
> The last argument being passed to python is an empty string.
> This is causing an empty string to be passed to trial, and
> consequently none of the tests are being run.
>
> This empty string is causing none of the tests to run, which is causing
> the build to fail.  The fix is either to:
>
> (1)  eliminate the last parameter
>
> (2)  the last parameter should not be an empty string, but should be
> "twisted"
>       so that trial is invoked as "trial twisted".
>
> I don't understand the buildbot scripts so don't know where to fix this.
>
> Can someone fix this?
>
>
> Just to be clear: these are changes to the buildbot scripts themselves,
> and not to the repo?
>
>
Correct.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/c4b7d5be/attachment.html>

From markrwilliams at gmail.com  Mon Aug 22 21:08:18 2016
From: markrwilliams at gmail.com (Mark Williams)
Date: Mon, 22 Aug 2016 20:08:18 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
Message-ID: <20160823030817.GA12611@hammal>

On Mon, Aug 22, 2016 at 06:24:29PM -0700, Glyph Lefkowitz wrote:
>
> > On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> >
> > I don't understand the buildbot scripts so don't know where to fix this.
>
> Oh, and since this answer may be of general interest: the buildbot configuration is here: https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/master.cfg so folks can look in that repository to investigate.
>
> -g

This appears to be the builder responsible for the failure Craig found, because it's got the same tox env:

https://github.com/twisted-infra/braid/blob/b04ca7df2943a75b8100c41be4016077fb442639/services/buildbot/master/master.cfg#L124-L131

In the definition of TwistedToxBuildFactory, the tests to run are always empty:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L369

For each reactor, there's a TrialTox build step:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L397-L402

And in the TrialTox step, tests comes in via __init__:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_steps.py#L125

...gets assigned as an instance variable...
https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_steps.py#L131

...and then put into a shell command:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_steps.py#L155

I don't see how this could result in an empty string.  Something's up
on the boxes themselves.

Please give me access to the buildbots so I can fix them, I love them
and want them to thrive, etc.


From rodrigc at crodrigues.org  Mon Aug 22 22:29:29 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 22 Aug 2016 21:29:29 -0700
Subject: [Twisted-Python] Tests on Windows with Python 3 now passing
Message-ID: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>

I have fixed the tests that were failing on Windows with Python 3.

If you look at:
https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008

We now have builds running on Python 3.3, 3.4, and 3.5 on Windows.
These builds are also uploading coverage results to codecov.io.

I looked at that build and on Python 3.5 we have:

9539 tests (2338 skipped, 7201 succeeded)

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/69f55a0a/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Aug 22 22:49:15 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 22 Aug 2016 21:49:15 -0700
Subject: [Twisted-Python] Tests on Windows with Python 3 now passing
In-Reply-To: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>
References: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>
Message-ID: <4C77BA51-BF8C-47AA-AAAB-89FAA6F00AF5@twistedmatrix.com>


> On Aug 22, 2016, at 9:29 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I have fixed the tests that were failing on Windows with Python 3.
> 
> If you look at:
> https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008 <https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008>
> 
> We now have builds running on Python 3.3, 3.4, and 3.5 on Windows.
> These builds are also uploading coverage results to codecov.io <http://codecov.io/>.
> 
> I looked at that build and on Python 3.5 we have:
> 
> 9539 tests (2338 skipped, 7201 succeeded)

This is awesome.  I hope it'll open the door to more Windows/py3-minded contributors!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160822/b11d248c/attachment.html>

From markrwilliams at gmail.com  Tue Aug 23 01:43:11 2016
From: markrwilliams at gmail.com (Mark Williams)
Date: Tue, 23 Aug 2016 00:43:11 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
Message-ID: <20160823074311.GA31138@hammal>

Glyph got me all set up so I can work on the Buildbots.  Thanks,
Glyph!

I hope to resolve the issue Craig identified soon and will announce
any progress.  Stay tuned!


From hawkowl at atleastfornow.net  Tue Aug 23 01:51:56 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 23 Aug 2016 15:51:56 +0800
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <20160823074311.GA31138@hammal>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
 <20160823074311.GA31138@hammal>
Message-ID: <D41E4BAA-2149-4875-9CB8-64E939A1E7B9@atleastfornow.net>

So I also investigated and it appeared like the hack I had in https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L368 to prevent this from occurring disappeared in prod; I think maybe Adi pushed up something trying to replicate what it was doing without committing it :)

I've redeployed from master of braid, and it appears to be working now.

- Amber

> On 23 Aug 2016, at 15:43, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> Glyph got me all set up so I can work on the Buildbots.  Thanks,
> Glyph!
> 
> I hope to resolve the issue Craig identified soon and will announce
> any progress.  Stay tuned!
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160823/b352f75d/attachment.pgp>

From adi at roiban.ro  Tue Aug 23 04:29:06 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 23 Aug 2016 11:29:06 +0100
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <D41E4BAA-2149-4875-9CB8-64E939A1E7B9@atleastfornow.net>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
 <20160823074311.GA31138@hammal>
 <D41E4BAA-2149-4875-9CB8-64E939A1E7B9@atleastfornow.net>
Message-ID: <CAFycZ9durGdOV+B=respTyzsVAiV0qtVKHySTcPJEk1hYUeOxw@mail.gmail.com>

Hi,

On 23 August 2016 at 08:51, Amber "Hawkie" Brown
<hawkowl at atleastfornow.net> wrote:
> So I also investigated and it appeared like the hack I had in https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L368 to prevent this from occurring disappeared in prod; I think maybe Adi pushed up something trying to replicate what it was doing without committing it :)

I broke the build. Sorry for that.

I saw those conflicting lines ... and I went for the one injecting the
test case ... as this is how it was supposed to work :)

I am working on creating tox/ven builders for everything... and as
part of that, I have refactored some factories ...as there is some
code duplication.

I have created a PR now... https://github.com/twisted-infra/braid/pull/223

I think that we should have tests =
[WithProperties("%(test-case-name:~twisted)s")]

This should put twisted when test-case-name is not defined by a build job.

Any objections on that?

-- 
Adi Roiban


From adi at roiban.ro  Tue Aug 23 04:33:12 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 23 Aug 2016 11:33:12 +0100
Subject: [Twisted-Python] Tests on Windows with Python 3 now passing
In-Reply-To: <4C77BA51-BF8C-47AA-AAAB-89FAA6F00AF5@twistedmatrix.com>
References: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>
 <4C77BA51-BF8C-47AA-AAAB-89FAA6F00AF5@twistedmatrix.com>
Message-ID: <CAFycZ9dGk30dqj9ys=pEOERszF5uk81eL5uK+V7a9LsQJAdmaA@mail.gmail.com>

On 23 August 2016 at 05:49, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Aug 22, 2016, at 9:29 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>
> I have fixed the tests that were failing on Windows with Python 3.
>
> If you look at:
> https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008
>
> We now have builds running on Python 3.3, 3.4, and 3.5 on Windows.
> These builds are also uploading coverage results to codecov.io.
>
> I looked at that build and on Python 3.5 we have:
>
> 9539 tests (2338 skipped, 7201 succeeded)
>
>
> This is awesome.  I hope it'll open the door to more Windows/py3-minded
> contributors!
Great news.

Now that we have windows on appveyor, can we remove the Windows builders?

The windows builders are stuck on the virtualenv --clear step.

https://buildbot.twistedmatrix.com/boxes-unsupported?branch=8544-tox-for-buildbot

As part of the work for #8544 I have created tox environment for all
builders  https://github.com/twisted/twisted/pull/280

so we should be able to run on appveyor the nomodules and bdist builders

for the bdist, we still need to see if is ok  to publish the wheel on
Azure and if is ok to create it from Win2008R2 Server vs Win7

-- 
Adi Roiban


From adi at roiban.ro  Tue Aug 23 05:24:16 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 23 Aug 2016 12:24:16 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
Message-ID: <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>

We now have 15 concurrent jobs.... for the next 10 days.

Please check if it makes a difference worth more than $6000 per year :)

Also, do we need both python 3.3 and 3.4 jobs?

I think that we have non python 3.5 builders to prevent the usage of
string formatting for bytes which is not available in 3.3 and 3.4.

What are the differences between 3.3 and 3.4  that requires us to have
both versions?

Regards,
Adi


From glyph at twistedmatrix.com  Tue Aug 23 10:44:16 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2016 09:44:16 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
Message-ID: <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>


> On Aug 23, 2016, at 4:24 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> We now have 15 concurrent jobs.... for the next 10 days.
> 
> Please check if it makes a difference worth more than $6000 per year :)
> 
> Also, do we need both python 3.3 and 3.4 jobs?
> 
> I think that we have non python 3.5 builders to prevent the usage of
> string formatting for bytes which is not available in 3.3 and 3.4.
> 
> What are the differences between 3.3 and 3.4  that requires us to have
> both versions?

We can't enumerate them.  If we support 3.3, we have to test on 3.3.  For example, there's some difference in the way the garbage collector works which made the PB tests fail on 3.3 but not 3.4; it turns out that this change was fixed by adding better test cleanup, and did not necessitate a change to the implementation, but small undocumented changes can easily require different implementation strategies.

We can drop support for 3.3 of course, but that's a separate discussion.

-glyph

From markrwilliams at gmail.com  Tue Aug 23 11:27:33 2016
From: markrwilliams at gmail.com (Mark Williams)
Date: Tue, 23 Aug 2016 10:27:33 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
 and Buildbot
In-Reply-To: <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
Message-ID: <20160823172732.GA4484@hammal>

On Tue, Aug 23, 2016 at 09:44:16AM -0700, Glyph Lefkowitz wrote:
>
> We can drop support for 3.3 of course, but that's a separate discussion.

I'm marginally in favor of it.  I appreciate Adi's concern about the
build infrastructure.  And thanks to the inimitable Donald Stufft,
it's easy to get a sense of how popular Python 3.3 is among Twisted
users and whether or not dropping support for it will affect a large
percentage of them.

He provided the following BigTable Query to run against the PyPI
downloads dataset (available at
https://bigquery.cloud.google.com/dataset/the-psf:pypi?pli=1 ):

SELECT
  REGEXP_EXTRACT(details.python, r"^([^\.]+\.[^\.]+)") as python_version,
  COUNT(*) as downloads,
FROM
  TABLE_DATE_RANGE(
    [the-psf:pypi.downloads],
    DATE_ADD(CURRENT_TIMESTAMP(), -31, "day"),
    DATE_ADD(CURRENT_TIMESTAMP(), -1, "day")
  )
WHERE file.project = 'twisted'
GROUP BY python_version
ORDER BY
  downloads DESC


Here're the results:

python_version	downloads
2.7             446869
null            21959
3.5             15204
3.4             11245
2.6             5060
3.3             1060
3.2             271
3.6             241
2.4             5
1.17		    3
2.5	            2

(Donald explained that `null` represents mirrors and caches like
bandersnatch.)

It appears that dropping Python 3.3 wouldn't exclude very many of our
users.


From hawkowl at atleastfornow.net  Tue Aug 23 11:32:18 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Wed, 24 Aug 2016 01:32:18 +0800
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <20160823172732.GA4484@hammal>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
 <20160823172732.GA4484@hammal>
Message-ID: <08102F51-DA9F-4490-8595-10DF5998FDF2@atleastfornow.net>

The only reason to support Python 3.3 is PyPy3. However, since they now have funding to push it to 3.5, and PyPy3 is by no means production ready, I think it is reasonable to do this.

I will announce the release after Twisted 16.4 as the final one to support Python 3.3, in accordance with our compatibility policy.

- Amber

> On 24 Aug 2016, at 01:27, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> On Tue, Aug 23, 2016 at 09:44:16AM -0700, Glyph Lefkowitz wrote:
>> 
>> We can drop support for 3.3 of course, but that's a separate discussion.
> 
> I'm marginally in favor of it.  I appreciate Adi's concern about the
> build infrastructure.  And thanks to the inimitable Donald Stufft,
> it's easy to get a sense of how popular Python 3.3 is among Twisted
> users and whether or not dropping support for it will affect a large
> percentage of them.
> 
> He provided the following BigTable Query to run against the PyPI
> downloads dataset (available at
> https://bigquery.cloud.google.com/dataset/the-psf:pypi?pli=1 ):
> 
> SELECT
>  REGEXP_EXTRACT(details.python, r"^([^\.]+\.[^\.]+)") as python_version,
>  COUNT(*) as downloads,
> FROM
>  TABLE_DATE_RANGE(
>    [the-psf:pypi.downloads],
>    DATE_ADD(CURRENT_TIMESTAMP(), -31, "day"),
>    DATE_ADD(CURRENT_TIMESTAMP(), -1, "day")
>  )
> WHERE file.project = 'twisted'
> GROUP BY python_version
> ORDER BY
>  downloads DESC
> 
> 
> Here're the results:
> 
> python_version	downloads
> 2.7             446869
> null            21959
> 3.5             15204
> 3.4             11245
> 2.6             5060
> 3.3             1060
> 3.2             271
> 3.6             241
> 2.4             5
> 1.17		    3
> 2.5	            2
> 
> (Donald explained that `null` represents mirrors and caches like
> bandersnatch.)
> 
> It appears that dropping Python 3.3 wouldn't exclude very many of our
> users.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160824/eab2066f/attachment.pgp>

From glyph at twistedmatrix.com  Tue Aug 23 13:20:34 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2016 12:20:34 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <20160823172732.GA4484@hammal>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
 <20160823172732.GA4484@hammal>
Message-ID: <F8B2D16B-21F8-4F62-89B0-40091BBFF457@twistedmatrix.com>


> On Aug 23, 2016, at 10:27 AM, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> It appears that dropping Python 3.3 wouldn't exclude very many of our
> users.

1/5 as many as Python 2.6, which we already don't support :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160823/709b9851/attachment.html>

From glyph at twistedmatrix.com  Tue Aug 23 13:21:08 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2016 12:21:08 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <08102F51-DA9F-4490-8595-10DF5998FDF2@atleastfornow.net>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
 <20160823172732.GA4484@hammal>
 <08102F51-DA9F-4490-8595-10DF5998FDF2@atleastfornow.net>
Message-ID: <D855CFAD-9A31-4EF2-9514-110254EE484D@twistedmatrix.com>


> On Aug 23, 2016, at 10:32 AM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> However, since they now have funding to push it to 3.5,

... and can I just reiterate how SUPER PUMPED I am about this???

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160823/5732982e/attachment.html>

From jerryguitarist at gmail.com  Tue Aug 23 19:23:40 2016
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Tue, 23 Aug 2016 22:53:40 -0230
Subject: [Twisted-Python] Regarding moving on with ticket #7934 (New
	Logging System)
In-Reply-To: <CA+2gYiriE1EXmU89Vxj5Y5iB-Qu7rNNuxygW-mP_NExAEtjtsQ@mail.gmail.com>
References: <CA+2gYiriE1EXmU89Vxj5Y5iB-Qu7rNNuxygW-mP_NExAEtjtsQ@mail.gmail.com>
Message-ID: <CA+2gYiqEMC9EjGkqCH9CqPggDAKHSe-o0=iUwG+g0HTAMrjrcA@mail.gmail.com>

Hello!

Just submitted a PR for this, <https://github.com/twisted/twisted/pull/520>.

Thanks! :-)
Eeshan

On Wed, Jun 22, 2016 at 12:24 AM, Eeshan Garg <jerryguitarist at gmail.com>
wrote:

> Hello again!
>
> I am fully aware that it has been a _very_ long time since I mentioned
> that I would get on with <https://twistedmatrix.com/trac/ticket/7934>,
> but I haven't really had the time to actually do anything about it. :-/
>
> I would love to work on more tickets like <https://twistedmatrix.com/
> trac/ticket/7897> and help port Twisted to the new logging system and
> kind of get back into the flow of submitting patches and contributing to
> Twisted again (I miss it so much!!).
>
> My main concerns about moving on with #7934 after my last patch have
> already been reported by hawkowl in <https://twistedmatrix.com/
> trac/ticket/7983>. However, it was a bit unclear to me from the
> discussions in 7983 as to how to move forward. It would mean a lot to me if
> someone who is working on this right now (or glyph or hawkowl) could please
> give me a couple of pointers as to what should be done with the "self.log"
> issue for porting existing code to the new logging system.
>
> - Should I declare a log attribute for an entire module to use?
>
> - Should I rewrite my new patch around hawkowl's suggestion in 7983, use
> _loggerFor for everything? If so, how do you refer to the Logger instance
> to compare the log_logger in the event dict with what is expected (since
> asserting everything in the event dict, including log_logger is crucial for
> optimum test coverage)?
>
> - Or is there another way I should be searching for? Has anything changed
> since 7983 was filed? :-)
>
> I have already started working on the other suggestions put forth by the
> reviewers (such as context managers for capturing log events, etc.).
> Looking forward to contributing more!
>
> Regards,
> Eeshan Garg
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160823/e5459dad/attachment.html>

From hs at ox.cx  Wed Aug 24 07:07:36 2016
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 24 Aug 2016 15:07:36 +0200
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
Message-ID: <584EF059-1050-4A59-B942-A8F862422AE9@ox.cx>

> We can drop support for 3.3 of course, but that's a separate discussion.

+1 since 3.3 wasn?t ever part of any LTS distribution.  3.4 will live for a while but it?s also the first really good Python 3. :)

From hawkowl at atleastfornow.net  Sat Aug 27 19:44:28 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 09:44:28 +0800
Subject: [Twisted-Python] Twisted 16.4.0 Release Announcement
Message-ID: <D3CC8F69-0CD8-4D62-9377-20EC000A8A47@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.4.0.

The highlights of this release are:

- twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
- A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
- async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
- Trial can be invoked with "python -m twisted.trial".
- All Twisted executables (trial, twistd, etc) are now Setuptools console scripts, meaning they will work much better on Windows.
- 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
- All the security fixes of Twisted 16.3.1 + 16.3.2 (httpoxy, HTTP session identifier strengthening, HTTP+TLS consuming sockets)
- 240+ closed tickets overall.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)

PS: Twisted 16.4.1 will be coming soon after this with a patch mitigating SWEET32, by updating the acceptable cipher list.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160828/c9903ea0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160828/c9903ea0/attachment.pgp>

From hawkowl at atleastfornow.net  Sat Aug 27 20:11:23 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 10:11:23 +0800
Subject: [Twisted-Python] Trial not operating on current working dir &
	Sunsetting Python 3.3
Message-ID: <540535FC-D4B4-4E6A-9F99-8695601037E7@atleastfornow.net>

Hi everyone!

Two things to let you all know in this email:

1. The new trial console script does not add the current directory to the PATH. Meaning, you can't use it to test a checkout of your code anymore! Instead, you should only use it for things that are actually on your path -- we recommend using something like tox to automate installing your package and testing your code. Hynek goes into detail here: https://hynek.me/articles/testing-packaging/ . If you really want to do this, you can use 'python -m twisted.trial', but you should really be testing installed versions of your code instead!

2. The next release of Twisted (tentatively named 16.5) will be the last to support Python 3.3. It's not in any LTS platforms, and the only reason we cared was PyPy3 -- but PyPy3.3.5 is not exactly production ready, and since they're working hard on the move to 3.5, I think there's no reason hanging around on 3.3. Hence, 16.5 will still support it in line with our compat policy, but 16.6 (the next release -- might be called 16.11 or 16.12 by that time!) will drop it completely.

Enjoy 16.4.0!

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160828/01e7acf9/attachment.pgp>

From hawkowl at atleastfornow.net  Sun Aug 28 09:45:09 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 23:45:09 +0800
Subject: [Twisted-Python] Twisted 16.4.1 Prerelease 1 Announcement
Message-ID: <BAFB7F74-3A23-4F16-9535-778A599B8469@atleastfornow.net>

Hello again everyone,

I bring you a prerelease of the Twisted 16.4.1 security fix release, thus deemed 16.4.1pre1. This release contains:

- A mitigation for SWEET32 (https://www.openssl.org/blog/blog/2016/08/24/sweet32/ <https://www.openssl.org/blog/blog/2016/08/24/sweet32/>).
- The inclusion of ChaCha20 to our TLS cipher suite, providing your underlying OpenSSL supports it.

Please note that the SWEET32 mitigation will break TLS from IE on Windows XP. This shouldn't be an issue for you (hopefully), but if you need to support those poor XP using souls, you can add 3DES back to your CertificateOptions yourself.

As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.1pre1/ <https://twistedmatrix.com/Releases/pre/16.4.1pre1/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:

   pip install https://twistedmatrix.com/Releases/pre/16.4.1pre1/Twisted-16.4.1rc1.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.1pre1/Twisted-16.4.1rc1.tar.bz2>

Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

Have fun, and stay secure!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160828/fdfd20c9/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160828/fdfd20c9/attachment.pgp>

From hawkowl at atleastfornow.net  Sun Aug 28 09:54:40 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 23:54:40 +0800
Subject: [Twisted-Python] Twisted 16.3.2/16.4.0 Release Errata
Message-ID: <9F89FC64-B42F-48E0-B3EA-021FB8878E31@atleastfornow.net>

Hi everyone,

Just a note to say that the HTTP/1 + TLS leaking CLOSE_WAIT sockets issue, fixed in 16.3.2 and 16.4.0, has been assigned a CVE, CVE-2016-7100. It'll start showing up on the various CVE databases soon.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160828/3dbc0d0d/attachment.pgp>

From glyph at twistedmatrix.com  Sun Aug 28 14:34:34 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Aug 2016 13:34:34 -0700
Subject: [Twisted-Python] [Twisted-web] Twisted 16.4.0 Release
	Announcement
In-Reply-To: <D3CC8F69-0CD8-4D62-9377-20EC000A8A47@atleastfornow.net>
References: <D3CC8F69-0CD8-4D62-9377-20EC000A8A47@atleastfornow.net>
Message-ID: <ACFCE096-2526-45CB-B5E4-4A8BD6DDCA3B@twistedmatrix.com>


> On Aug 27, 2016, at 18:44, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.4.0.
> 
> The highlights of this release are:
> 
> - twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
> - A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
> - async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
> - Trial can be invoked with "python -m twisted.trial".
> - All Twisted executables (trial, twistd, etc) are now Setuptools console scripts, meaning they will work much better on Windows.
> - 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
> - All the security fixes of Twisted 16.3.1 + 16.3.2 (httpoxy, HTTP session identifier strengthening, HTTP+TLS consuming sockets)
> - 240+ closed tickets overall.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS>>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
> 
> Twisted Regards,
> Amber Brown (HawkOwl)
> 
> PS: Twisted 16.4.1 will be coming soon after this with a patch mitigating SWEET32, by updating the acceptable cipher list.

Really looking forward to using 'twist' on all my infrastructure.  This is a great release, everybody!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160828/fed0bbad/attachment.html>

From glyph at twistedmatrix.com  Wed Aug 31 02:49:09 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 31 Aug 2016 01:49:09 -0700
Subject: [Twisted-Python] very weird 16.4 upgrade breakage
Message-ID: <D2A3E108-70D1-4B1D-8335-DDBB4360D392@twistedmatrix.com>

On Mimic, the requires.io PR that upgraded us to Twisted 16.4 broke the build.

It did so in a really weird way: https://travis-ci.org/rackerlabs/mimic/jobs/156439316

Specifically, our mac app CI tests failed like so:

  File "pkg_resources/extern/__init__.pyc", line 61, in load_module
    
exceptions.ImportError: The 'appdirs' package is required; normally this is bundled with this package so if you get this warning, consult the packager of your distribution.

Any idea why 'appdirs' might suddenly become a hard dependency of pkg_resources, but only in the py2app bundle?  Did something change about the way we referenced dependencies?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160831/b40ee5fd/attachment.html>

From meejah at meejah.ca  Wed Aug 31 18:34:26 2016
From: meejah at meejah.ca (meejah)
Date: Thu, 01 Sep 2016 04:34:26 +0400
Subject: [Twisted-Python] txtorcon 0.16.1
Message-ID: <8660qgtq3x.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm very happy to announce txtorcon 0.16.1 which adds a couple minor
features to help support using Foolscap and Tahoe-LAFS over Tor.

 * issue 172: give TorProcessProtocol a .quit method
 * issue 181: enable SOCKS5-over-unix-sockets for TorClientEndpoint
   (thanks to "dawuud"). Also adds TLS support over SOCKS5.

You can download the release from PyPI or GitHub (or of
course "pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.16.1
   https://github.com/meejah/txtorcon/releases/tag/v0.16.1

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.16.1.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.16.1.tar.gz.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
d551837025bb9f4fdded58cd11025c6e42924b6eb20dcb2a49f182b3fd85f377  dist/txtorcon-0.16.1.tar.gz
e89a785f64f3544b19f7b1e6cebdbd6914475e0c60f508d9f0b6ce4a840769a7  dist/txtorcon-0.16.1-py2-none-any.whl
EOF

thanks,
meejah


p.s. There is no 0.16.0 because I tagged the wrong thing and noticed
     when pushing to PyPI.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJXx3TOAAoJEMJgKAMSgGmn7AEIAN5BQNqisxefMyKnHA8BCSZW
UJpXPagnftg33HF2v4ZG/2yQUh8sYMqEn/OI99g8yA++bZmG9H0lJixg0zs6V2XV
bX63zJ7d9lr+uu3D+crQNnmofcoUbLRX+Z7n5SWhgGtlsVqemIJton/cuedtnrXm
1E5VdjhxYIZ/2Qv0gTz7ZBYw0Hmkr24qwVufdblQHDov2SdM0kknInWqxFqVMLQd
/p0+PTEF6SMdemHFkOJ73sCbINg6qLB4cErKaFY14U2cnS3Y1pZLhlEKFTzbd8TU
SWtg1b9pn5s4Euq5ruYhNNIqVtQz/lrq0/ZQ+NKiLZ/L2rtw9xFY0nF1KhFTgLc=
=IMj2
-----END PGP SIGNATURE-----


From wolfgang.kde at rohdewald.de  Tue Aug  2 02:45:32 2016
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Tue, 02 Aug 2016 10:45:32 +0200
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
Message-ID: <1985097.xpC6b6TUEP@skull>

Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
> #7598: Port twisted.spread.pb to Python3

did you test with client on Python2 and server on Python3 and vice versa?

Not a bug report, but anyway ... This was client with Python3, 
server with Python2

The same works with my old port to Python3:
git clone https://github.com/wrohdewald/twisted.git
git checkout spread-py3-7598

My version uses helpers in remoteMessageReceived:

        kw = nativeStringDict(broker.unserialize(kw))
        method = getattr(self, "remote_%s" % nativeString(message), None)


If you need a minimal example and an official bug report -
that would take some more time. Maybe in a week or so.

Peer will receive following PB traceback:
Unhandled Error
Traceback (most recent call last):
  File "/home/wr/src/kajongg/src/twisted/spread/banana.py", line 173, in 
gotItem
    self.callExpressionReceived(item)
  File "/home/wr/src/kajongg/src/twisted/spread/banana.py", line 136, in 
callExpressionReceived
    self.expressionReceived(obj)
  File "/home/wr/src/kajongg/src/twisted/spread/pb.py", line 575, in 
expressionReceived
    method(*sexp[1:])
  File "/home/wr/src/kajongg/src/twisted/spread/pb.py", line 896, in 
proto_message
    self._recvMessage(self.localObjectForID, requestID, objectID, message, 
answerRequired, netArgs, netKw)
--- <exception caught here> ---
  File "/home/wr/src/kajongg/src/twisted/spread/pb.py", line 913, in 
_recvMessage
    netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
  File "/home/wr/src/kajongg/src/twisted/spread/flavors.py", line 120, in 
remoteMessageReceived
    state = method(*args, **kw)
builtins.TypeError: remote_move() keywords must be strings


--
Wolfgang



From glyph at twistedmatrix.com  Tue Aug  2 04:39:58 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 2 Aug 2016 03:39:58 -0700
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1985097.xpC6b6TUEP@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
Message-ID: <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>


> On Aug 2, 2016, at 01:45, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de> wrote:
> 
> Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
>> #7598: Port twisted.spread.pb to Python3
> 
> did you test with client on Python2 and server on Python3 and vice versa?
> 
> Not a bug report, but anyway ... This was client with Python3, 
> server with Python2

This is a perfectly good bug report :) and it's a case that should definitely be considered.  Probably we should up-convert from bytes automatically in the places where we know python will be using the values as identifiers, including callRemote and the keys in a __dict__.

This is unfortunately very tricky to know though, if we support serializing both bytes and strings :-\.

-glyph




From wolfgang.kde at rohdewald.de  Tue Aug  2 05:38:47 2016
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Tue, 02 Aug 2016 13:38:47 +0200
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
 <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>
Message-ID: <1569436.EIiP6lfl0G@skull>

Am Dienstag, 2. August 2016, 03:39:58 CEST schrieb Glyph Lefkowitz:
>   Probably we should up-convert from bytes automatically in the places
> where we know python will be using the values as identifiers, including
> callRemote and the keys in a __dict__.

Attached is some grep for my port showing where I had co convert.

grep -ri -e '\(network\|native\)'
 


> This is unfortunately very tricky to know though, if we support
> serializing both bytes and strings :-\.

Why? The wire protocol does not change. PY3 bytes are already
compatible, and PY3 strings are serialized as unicode objects.

--
Wolfgang
-------------- next part --------------
jelly.py:from twisted.python.compat import nativeString, networkString
jelly.py:        classname = nativeString(classname)
jelly.py:    sxp.extend([networkString(qual(inst.__class__)), jellier.jelly(state)])
jelly.py:            networkString(qual(self.__class__)),
jelly.py:                return [function_atom, networkString(pickle.whichmodule(obj, obj.__name__))
jelly.py:                return [datetime_atom, networkString('%s %s %s %s %s %s %s' % (
jelly.py:                return [time_atom, networkString('%s %s %s %s' % (obj.hour, obj.minute,
jelly.py:                return [date_atom, networkString('%s %s %s' % (obj.year, obj.month, obj.day))]
jelly.py:                return [timedelta_atom, networkString('%s %s %s' % (obj.days, obj.seconds,
jelly.py:        jelType = nativeString(obj[0])
jelly.py:        moduleName = nativeString(moduleName)
jelly.py:        qualName = nativeString(rest[0])
jelly.py:        im_name = nativeString(rest[0])
jelly.py:        typeName = nativeString(typeName)
flavors.py:from twisted.python.compat import _PY3, nativeString, networkString
flavors.py:        kw = nativeStringDict(broker.unserialize(kw))
flavors.py:        method = getattr(self, "remote_%s" % nativeString(message), None)
flavors.py:            raise NoSuchMethod("No such method: remote_%s" % (nativeString(message),))
flavors.py:        method = getattr(self.object, "view_%s" % nativeString(message))
flavors.py:        t = networkString(self.getTypeToCopyFor(p))
flavors.py:            l.extend([networkString(type_), luid, jstate])
flavors.py:def nativeStringDict(networkDict, encoding='ascii'):
flavors.py:    Convert them to the native string type.
flavors.py:    @param networkDict: Any C{dict}. Keys must be C{bytes} or C{unicode}.
flavors.py:    @return: The passed dict, but all keys converted with nativeString().
flavors.py:    return dict((nativeString(key, encoding), value)
flavors.py:        for key, value in networkDict.items())
flavors.py:        self.__dict__ = nativeStringDict(state)
flavors.py:        method = getattr(self, "observe_%s" % nativeString(message))
banana.py:from twisted.python.compat import _PY3, networkChar
banana.py:        stream(networkChar(0))
banana.py:        stream(networkChar(integer & 0x7f))
banana.py:LIST     = networkChar(0x80)
banana.py:INT      = networkChar(0x81)
banana.py:STRING   = networkChar(0x82)
banana.py:NEG      = networkChar(0x83)
banana.py:FLOAT    = networkChar(0x84)
banana.py:LONGINT  = networkChar(0x85)
banana.py:LONGNEG  = networkChar(0x86)
banana.py:VOCAB    = networkChar(0x87)
banana.py:                typebyte = networkChar(buffer[pos])
pb.py:from twisted.python.compat import xrange, networkString, nativeString
pb.py:from twisted.python.compat import nativeString, _PY3
pb.py:from twisted.python.compat import unicode, networkChar
pb.py:        This method is called when a network message is received.
pb.py:        This method is called when a network message is received.
pb.py:        method = getattr(self, "perspective_%s" % nativeString(message))
pb.py:            state['value'] = nativeString(self.value, encoding='utf-8') # Exception instance
pb.py:        file.write(nativeString(self.traceback, encoding='utf-8'))
pb.py:            nativeString(str(self.type)),
pb.py:            nativeString(self.value, encoding='utf-8'))
pb.py:            methodName = "proto_%s" % nativeString(command)
pb.py:            objectID = networkString(objectID)
pb.py:        self.sendCall(prefix+message_atom, requestID, objectID, networkString(message), answerRequired, netArgs, netKw)
pb.py:        message = nativeString(message)
pb.py:            objectID = nativeString(objectID)
pb.py:#                    unserFail.value = unserFail.type((nativeString(unserFail.value, encoding='utf-8')))
pb.py:        crap = crap + networkChar(random.randint(65,90))
pb.py:    Alternatively, any object providing or adaptable to L{IPBRoot} can be

From glyph at twistedmatrix.com  Tue Aug  2 14:55:42 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 2 Aug 2016 13:55:42 -0700
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1569436.EIiP6lfl0G@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
 <7729B0E8-5774-415D-A05E-BC8E4FC400B8@twistedmatrix.com>
 <1569436.EIiP6lfl0G@skull>
Message-ID: <D2853C5D-56AA-467E-A5AF-FAB40FED1B1D@twistedmatrix.com>


> On Aug 2, 2016, at 4:38 AM, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de <mailto:wolfgang.kde at rohdewald.de>> wrote:
> 
> Am Dienstag, 2. August 2016, 03:39:58 CEST schrieb Glyph Lefkowitz:
>>  Probably we should up-convert from bytes automatically in the places
>> where we know python will be using the values as identifiers, including
>> callRemote and the keys in a __dict__.
> 
> Attached is some grep for my port showing where I had co convert.
> 
> grep -ri -e '\(network\|native\)'
> 
> 
> 
>> This is unfortunately very tricky to know though, if we support
>> serializing both bytes and strings :-\.
> 
> Why? The wire protocol does not change. PY3 bytes are already
> compatible, and PY3 strings are serialized as unicode objects.

The protocol does change though.  ['foo'] in jelly means "bytes".  ['unicode', 'foo'] means "text".  You can fix some problems with this; obviously if you see a ['dictionary', [['unicode', 'foo'], ['unicode', 'bar']]] come in over the wire, and then get sent to setCopyableState, we can translate 'foo' back to a native 'str' in the python 2 implementation.  But what to do with 'bar'?  It will remain text.  If you extend that, and consider that your application code might have a value floating around in a variable which later gets used for a key in **kwargs or something, there's no way we can know as we're deserializing that you're going to do that, so your application is going to need to account for it manually.

Ultimately that's not a bug we can fix, so we won't.  But it's still unfortunate.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160802/84739989/attachment-0002.html>

From jlitzingerdev at gmail.com  Wed Aug  3 21:59:32 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Wed, 3 Aug 2016 21:59:32 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
Message-ID: <20160804035901.GA3995@jlitzing-dell>

> >> Testing multicast is ... challenging.  I barely have any idea how to set up a test environment for IPv4, and no idea what to do for IPv6.  If you can speak to this in your tests (and hopefully docs as well) that would be super helpful.
On that note, one effect of actually testing that a registered socket
receives data is that, if no interfaces are up, the tests are going to
start failing (passing tests).

The existing Multicast test class exibits the same behavior on my
machine if I take my interfaces down, so can I assume that this is an
acceptable constraint?  The constraint being that, if no network
interfaces are up, these tests are going to start failing, at least on
Linux.

I'm looking for a better option, but haven't found one as of yet.

Thanks!
-Jason Litzinger
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From cory at lukasa.co.uk  Thu Aug  4 09:46:18 2016
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 4 Aug 2016 16:46:18 +0100
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <20160804035901.GA3995@jlitzing-dell>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
Message-ID: <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>


> On 4 Aug 2016, at 04:59, Jason Litzinger <jlitzingerdev at gmail.com> wrote:
> 
>>>> Testing multicast is ... challenging.  I barely have any idea how to set up a test environment for IPv4, and no idea what to do for IPv6.  If you can speak to this in your tests (and hopefully docs as well) that would be super helpful.
> On that note, one effect of actually testing that a registered socket
> receives data is that, if no interfaces are up, the tests are going to
> start failing (passing tests).
> 
> The existing Multicast test class exibits the same behavior on my
> machine if I take my interfaces down, so can I assume that this is an
> acceptable constraint?  The constraint being that, if no network
> interfaces are up, these tests are going to start failing, at least on
> Linux.

When you say *no* interfaces, do you mean actually no interfaces? As in, no loopback as well?

Cory


From jlitzingerdev at gmail.com  Thu Aug  4 10:03:49 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Thu, 4 Aug 2016 10:03:49 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
Message-ID: <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>

> When you say *no* interfaces, do you mean actually no interfaces? As in, no loopback as well?

I do not, sorry, that was poorly worded.  The loopback interface was
up for all test runs, and all other interfaces on my machine (ethernet
and wifi) were down.  Down in this context has two meanings (I tested
both):
1.  I manually took the interface down with "ifconfig <iface> down"
2.  I disconnected from my wireless network, so I had no address
assigned to any interface save the loopback.

In both cases, tests that pass with connectivity will fail due to the
index parameter.

I did try specifying the loopback index, however, I received a
"Network Unreachable" error.  I didn't have time to dig into whether
it was possible to do what I wanted with the loopback interface last
night.

Thanks,
-Jason

*Note: I'm using my gmail client for the reply here instead of
mutt...hopefully it isn't garbled.



From cory at lukasa.co.uk  Thu Aug  4 11:18:48 2016
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 4 Aug 2016 18:18:48 +0100
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
Message-ID: <7593ED08-FC39-41D9-8EC9-55A7BABFC60A@lukasa.co.uk>


> On 4 Aug 2016, at 17:03, Jason Litzinger <jlitzingerdev at gmail.com> wrote:
> 
>> When you say *no* interfaces, do you mean actually no interfaces? As in, no loopback as well?
> 
> I do not, sorry, that was poorly worded.  The loopback interface was
> up for all test runs, and all other interfaces on my machine (ethernet
> and wifi) were down.  Down in this context has two meanings (I tested
> both):
> 1.  I manually took the interface down with "ifconfig <iface> down"
> 2.  I disconnected from my wireless network, so I had no address
> assigned to any interface save the loopback.
> 
> In both cases, tests that pass with connectivity will fail due to the
> index parameter.
> 
> I did try specifying the loopback index, however, I received a
> "Network Unreachable" error.  I didn't have time to dig into whether
> it was possible to do what I wanted with the loopback interface last
> night.

So with the caveat that I am not the author of most of these tests, and I don’t understand their special circumstances…

My intuition is that no interface other than the loopback should be required to run the Twisted tests. The loopback should be sufficient to test pretty much anything that Twisted has to test. As a result, if things fail in that scenario, I’d consider it a bug.

Cory


From mithrandi at mithrandi.net  Thu Aug  4 19:10:28 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Fri, 05 Aug 2016 01:10:28 +0000
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
Message-ID: <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>

On Thu, 4 Aug 2016 at 18:04 Jason Litzinger <jlitzingerdev at gmail.com> wrote:

> I did try specifying the loopback index, however, I received a
> "Network Unreachable" error.  I didn't have time to dig into whether
> it was possible to do what I wanted with the loopback interface last
> night.
>

By default, the "multicast" flag is not enabled for the loopback interface
on Linux. Does running "ip link set dev lo multicast on" help here?
(Although requiring this would then be rather problematic for testing, as
doing this in containerized environments and restricted environments like
Travis is presumably impossible)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160805/ebe1c25b/attachment-0002.html>

From jlitzingerdev at gmail.com  Thu Aug  4 22:29:23 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Thu, 4 Aug 2016 22:29:23 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
 <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>
Message-ID: <CAARXrPnuZKq=oCD=ZDQY2WuXgf7HvY+D8oe8-nbksO7QitBOFQ@mail.gmail.com>

> By default, the "multicast" flag is not enabled for the loopback interface
> on Linux. Does running "ip link set dev lo multicast on" help here?
> (Although requiring this would then be rather problematic for testing, as
> doing this in containerized environments and restricted environments like
> Travis is presumably impossible)
It didn't seem to.  Despite the subject, I'll focus on the existing,
IPv4 tests, rather than the new tests I'm writing (to eliminate any
issues in my code, though the change didn't help there either).

When I run with at least one interface up, my results for `./bin/trial
twisted` at SHA baba4c661a6606a56d8dab053cfe7b336a3c593e are:
PASSED (skips=2140, successes=9472)

When I take disconnect my wireless, and manually take down my lxr
interface, `ip link` shows:
1: lo: <LOOPBACK,MULTICAST,UP,LOWER_UP> mtu 65536 qdisc noqueue state
UNKNOWN mode DEFAULT group default qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: enp1s0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc
pfifo_fast state DOWN mode DEFAULT group default qlen 1000
    link/ether <removed> brd ff:ff:ff:ff:ff:ff
3: wlp2s0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc mq state
DOWN mode DORMANT group default qlen 1000
    link/ether <removed> brd ff:ff:ff:ff:ff:ff
4: lxcbr0: <BROADCAST,MULTICAST> mtu 1500 qdisc noqueue state DOWN
mode DEFAULT group default qlen 1000
    link/ether <removed> brd ff:ff:ff:ff:ff:ff

And the results of `./bin/trial` are:
FAILED (skips=2212, failures=3, errors=8, successes=9393)

Specific to multicast, one of the errors is:
Traceback (most recent call last):
Failure: twisted.internet.error.MulticastJoinError:
('\xe1\x00\x00\xfa', '\x00\x00\x00\x00', 19, 'No such device')

twisted.test.test_udp.MulticastTests.test_multicast

However, I can eliminate the error for test_multicast with the
following patch, and this works even when multicast is not explicitly
enabled on the loopback.

diff --git a/twisted/test/test_udp.py b/twisted/test/test_udp.py
index 6cf4583..79fd9d0 100644
--- a/twisted/test/test_udp.py
+++ b/twisted/test/test_udp.py
@@ -623,10 +623,10 @@ class MulticastTests(unittest.TestCase):
         received from it.
         """
         c = Server()
-        p = reactor.listenMulticast(0, c)
+        p = reactor.listenMulticast(0, c, interface="127.0.0.1")
         addr = self.server.transport.getHost()

-        joined = self.server.transport.joinGroup("225.0.0.250")
+        joined = self.server.transport.joinGroup("225.0.0.250",
interface="127.0.0.1")

         def cbJoined(ignored):
             d = self.server.packetReceived = Deferred()


Unfortunately, a similar change on my IPv6 code didn't yield the
results I was hoping for, but, I assume that's my problem.

Is there interest in a separate patch for these tests?  I assume a new ticket?

Thanks,
-Jason Litzinger



From randomcoder1 at gmail.com  Sat Aug  6 04:48:23 2016
From: randomcoder1 at gmail.com (Randomcoder)
Date: Sat, 6 Aug 2016 13:48:23 +0300
Subject: [Twisted-Python] clientfactory cleanup slow-down (after many http
	requests)
Message-ID: <20160806104823.GA14053@garage2>

Hello,

I've been working on a small Twisted program.
The program makes HTTP requests to a large number of feeds.
Twisted is used to speed up the entire process.
After the feeds are fetched, they're parsed. Finally they should be
written to a database (to simplify the code, that part is left out).

Feeds are fetched in parallel using gatherResults, and a batch is
built. Then all batches are again gathered into a set of batches,
a DeferredList is built out of those. A semaphore controls both the
batch-level list of deferreds, and a semaphore controls the entire batch
list deferred.

Currently, the program works ok on 100-150 feeds, and BATCH_SIZE between
5 and 20.

However, I notice the program starts to hang for a long time, when the
number of feeds goes over 150-200.

To be more precise, at the end of running the program, messages
like these are printed, but the program seems to not be very active:

    Stopping factory <twisted.web.client._HTTP11ClientFactory instance at 0x7f0b7d5f3908>

It seems like this is the cleanup phase.

I've read what I could find on the topic. I wasn't able to make progress
on it, so I'm posting to the mailing list to ask if someone has encountered this
before. Maybe it's a common pitfall or issue that other people have also
bumped into.

Thanks
-------------- next part --------------
http://mauveweb.co.uk/rss.xml "python"
http://blog.hownowstephen.com/rss "python"
http://blog.codepainters.com/feed/ "python"
http://chase-seibert.github.io/blog/atom.xml "python"
http://www.lshift.net/blog/feed/ "python"
http://django-planet.com/feeds/main/rss/ "python"
http://eflorenzano.com/atom.xml "python"

-------------- next part --------------
A non-text attachment was scrubbed...
Name: collect.py
Type: text/x-python
Size: 6818 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20160806/fbf5912d/attachment-0002.py>

From jlitzingerdev at gmail.com  Sat Aug  6 15:46:46 2016
From: jlitzingerdev at gmail.com (Jason Litzinger)
Date: Sat, 6 Aug 2016 15:46:46 -0600
Subject: [Twisted-Python] RFC: IPv6 multicast join/ticket 6597
In-Reply-To: <CAARXrPnuZKq=oCD=ZDQY2WuXgf7HvY+D8oe8-nbksO7QitBOFQ@mail.gmail.com>
References: <20160726044330.GA8172@jlitzing-dell>
 <4608F909-EE03-401B-A898-BAC3D3CBB35B@twistedmatrix.com>
 <20160727060007.GA3076@jlitzing-dell>
 <28A3C345-0F54-452F-8CA1-901D8E5F839C@twistedmatrix.com>
 <20160804035901.GA3995@jlitzing-dell>
 <462A0A6F-FA6E-4DDF-871E-525444E45C0F@lukasa.co.uk>
 <CAARXrPkFWW1VjSF0ejoMymo9HeF=OcVKQh9xSaZWPJT7NM+H9g@mail.gmail.com>
 <CAMcKhMQS06GLARPdD2_PumvTs7HSVefGqAf7xF=4z9pY_JRPaA@mail.gmail.com>
 <CAARXrPnuZKq=oCD=ZDQY2WuXgf7HvY+D8oe8-nbksO7QitBOFQ@mail.gmail.com>
Message-ID: <CAARXrPkJV-=oKQ4=t+u2mi18dtmmjm0hS=S+XAxPc8Yv7CPCmQ@mail.gmail.com>

An update for those interested.  I've been hoping for a solution to
test IPv6 multicast using only the loopback interface.  Unfortunately,
the only working (on Linux) solution I've found is to manually add a
route for the multicast prefix used in the tests.

E.g. ip -6 route add ff01::/16 dev lo

Without this, and assuming I specify the loopback interface index, a
"Network Unreachable" error results.  I'm fairly certain the culprit
is a kernel route:

unreachable default dev lo  table unspec  proto kernel  metric
4294967295  error -101 pref medium
local ::1 dev lo  table local  proto none  metric 0  pref medium
unreachable default dev lo  table unspec  proto kernel  metric
4294967295  error -101 pref medium

That's the default output of `ip -6 route show table all` on my
machine (Ubuntu 16.04).  I haven't found much information on why that
route exists (let alone twice), so I'm going to have to turn to the
kernel source.

Regardless, route manipulation for tests is a non-starter, so unless
there's a way to flag the tests as requiring a network interface,
it'll be a while before I submit patches on the original feature.

Thanks for all the suggestions/feedback and I welcome any more.
-Jason



From glyph at twistedmatrix.com  Sat Aug  6 16:51:39 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 6 Aug 2016 15:51:39 -0700
Subject: [Twisted-Python] clientfactory cleanup slow-down (after many
	http requests)
In-Reply-To: <20160806104823.GA14053@garage2>
References: <20160806104823.GA14053@garage2>
Message-ID: <EC839276-759E-4172-BF0E-5990C170CE11@twistedmatrix.com>


> On Aug 6, 2016, at 03:48, Randomcoder <randomcoder1 at gmail.com> wrote:
> 
> Hello,
> 
> I've been working on a small Twisted program.

Cool, thanks for using Twisted.

> The program makes HTTP requests to a large number of feeds.
> Twisted is used to speed up the entire process.
> After the feeds are fetched, they're parsed. Finally they should be
> written to a database (to simplify the code, that part is left out).

Thanks for including examples, so we know exactly what you're talking about! :)

> Feeds are fetched in parallel using gatherResults, and a batch is
> built. Then all batches are again gathered into a set of batches,
> a DeferredList is built out of those. A semaphore controls both the
> batch-level list of deferreds, and a semaphore controls the entire batch
> list deferred.
> 
> Currently, the program works ok on 100-150 feeds, and BATCH_SIZE between
> 5 and 20.

This all seems pretty reasonable and following best practices and such...

> However, I notice the program starts to hang for a long time, when the
> number of feeds goes over 150-200.

Two key questions: what do you mean by "hang" and what is "a long time"?  Do you mean it's totally unresponsive, or do you mean it's just failing to make progress on downloading more feeds?

> 
> To be more precise, at the end of running the program, messages
> like these are printed, but the program seems to not be very active:
> 
>    Stopping factory <twisted.web.client._HTTP11ClientFactory instance at 0x7f0b7d5f3908>
> 
> It seems like this is the cleanup phase.

This just means that it is finished making connections.  We have to do some clean-up around the usefulness of these log messages, sorry :-\.

> I've read what I could find on the topic. I wasn't able to make progress
> on it, so I'm posting to the mailing list to ask if someone has encountered this
> before. Maybe it's a common pitfall or issue that other people have also
> bumped into.

Right now, my guess is this: some of the sites you're contacting have very slow proxies, or for some other reason let you connect to them, but then hang when sent requests.  If you're simultaneously requesting stuff from a very large number of different sites, this is sort of inevitably bound to happen, either based on network problems, or issues with the sites themselves.  I suspect you thought that the connectTimeout argument to Agent would save you from this, but that timeout is just for making the initial underlying TCP connection, not receiving a full response.  What you actually want to do is cancel the Deferred returned by Agent.request.

Luckily, https://treq.readthedocs.io/en/latest/ <https://treq.readthedocs.io/en/latest/> already implements this high-level timeout functionality for you, in the form of the 'timeout=' argument it accepts.  If you give that a try, do you see more connections timing out as it runs, rather than "hanging" the process for long periods of time?

As long as I'm looking at your code, as a way of thanking you for providing such a nice specific runnable example, I have a few other random thoughts which may be useful to you:

- I see you're importing psycopg.  Do you know about https://txpostgres.readthedocs.io/en/latest/ <https://txpostgres.readthedocs.io/en/latest/> ?  You can talk to postgres asynchronously with Twisted.
- d.addCallback(lambda out: out).addCallback(lambda resp: client.readBody(resp)) can be much more briefly spelled "d.addCallback(client.readBody)". d.addErrback(lambda err: err) does nothing and can just be removed.
- BrowserLikePolicyForHTTPS() is the default, so you don't need to pass that.
- clean_up_and_exit will only be called if batchesDef doesn't fail, and if it does fail, it will swallow the exception message.  Rather than manually calling `reactor.stop`, you probably want to use react(), <https://twistedmatrix.com/documents/16.3.0/api/twisted.internet.task.html#react <https://twistedmatrix.com/documents/16.3.0/api/twisted.internet.task.html#react>>.  This way your function is an API that anyone who wants to use it can call - it just returns a Deferred when it's done - but your __main__ block calls react() which will both start and stop the reactor, as well as reporting errors if there's a problem while still shutting down.

Hope some of that code review is helpful - let us know if the treq timeout solves the problem or if the issue is somewhere else!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160806/96ad3ad1/attachment-0002.html>

From adi at roiban.ro  Sat Aug  6 17:31:14 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 7 Aug 2016 00:31:14 +0100
Subject: [Twisted-Python] twisted.python.dist as a public API
Message-ID: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>

Hi,

Why is twisted.python.dist3.py a public module?

Are there any external projects which need to get the list of the modules
ported to Python3?

------------------

Why is twisted.python.dist a public module?

The docstring starts with `Don't use this outside of Twisted.'  but why not
named it twisted.python._dist or twisted.python._setup to make it clear
that it is private ?

-------

I am trying to clean up the setup.py code as I feel that having the setup()
definition split between setup.py and dist.py is not ideal

----------

Can I rename twisted.python.dist and remove unused code from
twisted.python.dist without a deprecation dance?

--------------

The dedicated ticket is here https://twistedmatrix.com/trac/ticket/8622 and
is in the review queue

Regards,
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/d3514a90/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Aug  6 17:50:13 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 6 Aug 2016 16:50:13 -0700
Subject: [Twisted-Python] twisted.python.dist as a public API
In-Reply-To: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
References: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
Message-ID: <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>


> On Aug 6, 2016, at 16:31, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> Why is twisted.python.dist3.py <http://twisted.python.dist3.py/> a public module?

Negligence on the part of a code reviewer :).

> Are there any external projects which need to get the list of the modules ported to Python3?

No.  This info should be private.

> Why is twisted.python.dist a public module?

Similarly; this code was just accidentally made public without much thought.  This is why twisted.python._release exists, and contains much more code; 

> The docstring starts with `Don't use this outside of Twisted.'  but why not named it twisted.python._dist or twisted.python._setup to make it clear that it is private ?

Again; just a mistake.

> I am trying to clean up the setup.py code as I feel that having the setup() definition split between setup.py and dist.py is not ideal

The purpose of putting stuff in dist.py was just to be able to unit test it.  If you have some alternate strategy for testing, that might be better.

> Can I rename twisted.python.dist and remove unused code from twisted.python.dist without a deprecation dance?

You always have to follow the compatibility process - if it's not a security bug, we would have to change the process first :-).  But if you want to follow the exception path rather than the deprecation path (this message doesn't qualify, because the subject is incorrectly formatted) I certainly don't have any objection.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160806/f3a1569e/attachment-0002.html>

From adi at roiban.ro  Sun Aug  7 05:03:51 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 7 Aug 2016 12:03:51 +0100
Subject: [Twisted-Python] twisted.python.dist as a public API
In-Reply-To: <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>
References: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
 <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>
Message-ID: <CAFycZ9f34qzSQtOEP=ahmETY2w_sB_VmS+u6gg6ERR1O7GAYPQ@mail.gmail.com>

On 7 August 2016 at 00:50, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

[snip]


> You always have to follow the compatibility process - if it's not a
> security bug, we would have to change the process first :-).  But if you
> want to follow the exception path rather than the deprecation path (this
> message doesn't qualify, because the subject is incorrectly formatted) I
> certainly don't have any objection.
>
>
As pointed by Craig in the PR, dist3.py is used by
https://github.com/habnabit/twisted-depgraph. I will revert the dist3
change.

With this email, I just wanted to get an initial feedback and try to
understand why we have code split between setup.py and dist.py

I will come back with an email following the compatibility process.

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/f1bb5f28/attachment-0002.html>

From adi at roiban.ro  Sun Aug  7 05:19:43 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 7 Aug 2016 12:19:43 +0100
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist renamed
	to twisted.python._setup
Message-ID: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>

Hi,

I would like to remove twisted.python.dist as a public API without
following the 1 year deprecation processes.

The module has a comment which informs people not to use it outside of
Twisted, but I think it should be private module instead.

The ticket is here https://twistedmatrix.com/trac/ticket/8622
The PR is here https://github.com/twisted/twisted/pull/467
The branch is here
https://github.com/twisted/twisted/tree/8622-setup-coverage

This is part of the setup.py cleanup effort for having most of the setup.py
code outside of setup.py itself so that we can test it as part of the
automated test suite.

twisted.python.dist3 was kept as a private API as it is already used  by
https://github.com/habnabit/twisted-depgraph

Please let me know if you are using twisted.python.dist outside of Twisted
and are against this change or if you approve it.

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/5789b081/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Aug  7 17:15:08 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 7 Aug 2016 16:15:08 -0700
Subject: [Twisted-Python] twisted.python.dist as a public API
In-Reply-To: <CAFycZ9f34qzSQtOEP=ahmETY2w_sB_VmS+u6gg6ERR1O7GAYPQ@mail.gmail.com>
References: <CAFycZ9dthRv3Hqcjd9FPtnRZrCu00N8WukdSAbj3maW0S6oKOA@mail.gmail.com>
 <B5CB29CD-2430-4E64-B5F3-C40FCCB4323C@twistedmatrix.com>
 <CAFycZ9f34qzSQtOEP=ahmETY2w_sB_VmS+u6gg6ERR1O7GAYPQ@mail.gmail.com>
Message-ID: <1879D20C-4FCD-4116-A786-C2F3F578BE0D@twistedmatrix.com>


> On Aug 7, 2016, at 4:03 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> 
> 
> On 7 August 2016 at 00:50, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> [snip]
>  
> You always have to follow the compatibility process - if it's not a security bug, we would have to change the process first :-).  But if you want to follow the exception path rather than the deprecation path (this message doesn't qualify, because the subject is incorrectly formatted) I certainly don't have any objection.
> 
> 
> As pointed by Craig in the PR, dist3.py is used by https://github.com/habnabit/twisted-depgraph <https://github.com/habnabit/twisted-depgraph>. I will revert the dist3 change.

I should point out that the entire point of twisted-depgraph is to help Twisted developers - basically, you and Craig - understand the dependencies remaining and port more things to py3.  So I'm pretty sure Aaron would not mind at all if he had to update it :).  It's not really a user-facing application, just a core developer tool.

> With this email, I just wanted to get an initial feedback and try to understand why we have code split between setup.py and dist.py 
> 
> I will come back with an email following the compatibility process.
> 
> Thanks!

No problem!  I have a little tool that imports dist3 myself, and it  is _super_ encouraging to see the percentages of ported code these days.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/fc589abe/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Aug  7 17:15:21 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 7 Aug 2016 16:15:21 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
	renamed to twisted.python._setup
In-Reply-To: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
Message-ID: <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>


> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I would like to remove twisted.python.dist as a public API without following the 1 year deprecation processes.
> 
> The module has a comment which informs people not to use it outside of Twisted, but I think it should be private module instead.
> 
> The ticket is here https://twistedmatrix.com/trac/ticket/8622 <https://twistedmatrix.com/trac/ticket/8622>
> The PR is here https://github.com/twisted/twisted/pull/467 <https://github.com/twisted/twisted/pull/467>
> The branch is here https://github.com/twisted/twisted/tree/8622-setup-coverage <https://github.com/twisted/twisted/tree/8622-setup-coverage>
> 
> This is part of the setup.py cleanup effort for having most of the setup.py code outside of setup.py itself so that we can test it as part of the automated test suite.
> 
> twisted.python.dist3 was kept as a private API as it is already used  by https://github.com/habnabit/twisted-depgraph <https://github.com/habnabit/twisted-depgraph>
> 
> Please let me know if you are using twisted.python.dist outside of Twisted and are against this change or if you approve it.
> 
> Thanks!

+1 from me!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/0499c800/attachment-0002.html>

From rodrigc at crodrigues.org  Sun Aug  7 18:15:39 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 7 Aug 2016 17:15:39 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
Message-ID: <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>

On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> I would like to remove twisted.python.dist as a public API without
> following the 1 year deprecation processes.
>
> The module has a comment which informs people not to use it outside of
> Twisted, but I think it should be private module instead.
>
> The ticket is here https://twistedmatrix.com/trac/ticket/8622
> The PR is here https://github.com/twisted/twisted/pull/467
> The branch is here https://github.com/twisted/twisted/tree/8622-
> setup-coverage
>
> This is part of the setup.py cleanup effort for having most of the
> setup.py code outside of setup.py itself so that we can test it as part of
> the automated test suite.
>
> twisted.python.dist3 was kept as a private API as it is already used  by
> https://github.com/habnabit/twisted-depgraph
>
> Please let me know if you are using twisted.python.dist outside of Twisted
> and are against this change or if you approve it.
>
> Thanks!
>
>
> +1 from me!
>
>
>

-1 from me.  dist.py probably should have been a private API from the
beginning, but it slipped through the cracks.
However, what has been done is done.  This change seems gratuitous and
pointless with
no benefits to anybody.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/110dc683/attachment-0002.html>

From hawkowl at atleastfornow.net  Sun Aug  7 18:25:48 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Mon, 8 Aug 2016 08:25:48 +0800
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
	renamed to twisted.python._setup
In-Reply-To: <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
Message-ID: <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>


> On 8 Aug 2016, at 08:15, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> 
> 
> On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Hi,
>> 
>> I would like to remove twisted.python.dist as a public API without following the 1 year deprecation processes.
>> 
>> The module has a comment which informs people not to use it outside of Twisted, but I think it should be private module instead.
>> 
>> The ticket is here https://twistedmatrix.com/trac/ticket/8622 <https://twistedmatrix.com/trac/ticket/8622>
>> The PR is here https://github.com/twisted/twisted/pull/467 <https://github.com/twisted/twisted/pull/467>
>> The branch is here https://github.com/twisted/twisted/tree/8622-setup-coverage <https://github.com/twisted/twisted/tree/8622-setup-coverage>
>> 
>> This is part of the setup.py cleanup effort for having most of the setup.py code outside of setup.py itself so that we can test it as part of the automated test suite.
>> 
>> twisted.python.dist3 was kept as a private API as it is already used  by https://github.com/habnabit/twisted-depgraph <https://github.com/habnabit/twisted-depgraph>
>> 
>> Please let me know if you are using twisted.python.dist outside of Twisted and are against this change or if you approve it.
>> 
>> Thanks!
> 
> +1 from me!
> 
> 
> 
> 
> -1 from me.  dist.py probably should have been a private API from the beginning, but it slipped through the cracks.
> However, what has been done is done.  This change seems gratuitous and pointless with
> no benefits to anybody.
> 
> --
> Craig

I believe there's a point to it -- that is, we make it clear what is and what isn't user API. It's always said it in the header, but we should codify that it's really not user API. Plus it being private means we can make what changes we need for future setup.py changes, without deprecating things that nobody but us should ever use.

+1 from me.

- Amber

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160808/7343af71/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160808/7343af71/attachment.sig>

From rodrigc at crodrigues.org  Sun Aug  7 18:35:24 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 7 Aug 2016 17:35:24 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
Message-ID: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>

On Sun, Aug 7, 2016 at 5:25 PM, Amber "Hawkie" Brown <
hawkowl at atleastfornow.net> wrote:

>
> On 8 Aug 2016, at 08:15, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>
>
>
> On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> I would like to remove twisted.python.dist as a public API without
>> following the 1 year deprecation processes.
>>
>> The module has a comment which informs people not to use it outside of
>> Twisted, but I think it should be private module instead.
>>
>> The ticket is here https://twistedmatrix.com/trac/ticket/8622
>> The PR is here https://github.com/twisted/twisted/pull/467
>> The branch is here https://github.com/twisted/twisted/tree/8622-setup-
>> coverage
>>
>> This is part of the setup.py cleanup effort for having most of the
>> setup.py code outside of setup.py itself so that we can test it as part of
>> the automated test suite.
>>
>> twisted.python.dist3 was kept as a private API as it is already used  by
>> https://github.com/habnabit/twisted-depgraph
>>
>> Please let me know if you are using twisted.python.dist outside of
>> Twisted and are against this change or if you approve it.
>>
>> Thanks!
>>
>>
>> +1 from me!
>>
>>
>>
>
> -1 from me.  dist.py probably should have been a private API from the
> beginning, but it slipped through the cracks.
> However, what has been done is done.  This change seems gratuitous and
> pointless with
> no benefits to anybody.
>
> --
> Craig
>
>
> I believe there's a point to it -- that is, we make it clear what is and
> what isn't user API. It's always said it in the header, but we should
> codify that it's really not user API. Plus it being private means we can
> make what changes we need for future setup.py changes, without deprecating
> things that nobody but us should ever use.
>
> +1 from me.
>
>
I understand the motivation, but the time to have done this was when dist.py
was originally reviewed.

There are real problems in the Twisted code, and in the Twisted
infrastructure.
Focusing on something like this instead of those problems seems pointless,
gratuitous and of little benefit.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/3223ac53/attachment-0002.html>

From hawkowl at atleastfornow.net  Sun Aug  7 18:42:48 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sun, 7 Aug 2016 17:42:48 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
Message-ID: <CAMxb2is9ipd_A=0cNMJUcByUcKHoDneoVQAjdtcP8VnT=4i6AA@mail.gmail.com>

t.p.dist dates from 2005, and as far as I can tell, predates Twisted's code
review system. It's an early mistake, but we can fix many mistakes in
parallel.

- Amber

On 8 Aug 2016 08:36, "Craig Rodrigues" <rodrigc at crodrigues.org> wrote:

>
>
> On Sun, Aug 7, 2016 at 5:25 PM, Amber "Hawkie" Brown <
> hawkowl at atleastfornow.net> wrote:
>
>>
>> On 8 Aug 2016, at 08:15, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>>
>>
>>
>> On Sun, Aug 7, 2016 at 4:15 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
>>  wrote:
>>
>>>
>>> On Aug 7, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
>>>
>>> Hi,
>>>
>>> I would like to remove twisted.python.dist as a public API without
>>> following the 1 year deprecation processes.
>>>
>>> The module has a comment which informs people not to use it outside of
>>> Twisted, but I think it should be private module instead.
>>>
>>> The ticket is here https://twistedmatrix.com/trac/ticket/8622
>>> The PR is here https://github.com/twisted/twisted/pull/467
>>> The branch is here https://github.com/twiste
>>> d/twisted/tree/8622-setup-coverage
>>>
>>> This is part of the setup.py cleanup effort for having most of the
>>> setup.py code outside of setup.py itself so that we can test it as part of
>>> the automated test suite.
>>>
>>> twisted.python.dist3 was kept as a private API as it is already used  by
>>>  https://github.com/habnabit/twisted-depgraph
>>>
>>> Please let me know if you are using twisted.python.dist outside of
>>> Twisted and are against this change or if you approve it.
>>>
>>> Thanks!
>>>
>>>
>>> +1 from me!
>>>
>>>
>>>
>>
>> -1 from me.  dist.py probably should have been a private API from the
>> beginning, but it slipped through the cracks.
>> However, what has been done is done.  This change seems gratuitous and
>> pointless with
>> no benefits to anybody.
>>
>> --
>> Craig
>>
>>
>> I believe there's a point to it -- that is, we make it clear what is and
>> what isn't user API. It's always said it in the header, but we should
>> codify that it's really not user API. Plus it being private means we can
>> make what changes we need for future setup.py changes, without deprecating
>> things that nobody but us should ever use.
>>
>> +1 from me.
>>
>>
> I understand the motivation, but the time to have done this was when
> dist.py
> was originally reviewed.
>
> There are real problems in the Twisted code, and in the Twisted
> infrastructure.
> Focusing on something like this instead of those problems seems pointless,
> gratuitous and of little benefit.
>
> --
> Craig
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/df24e04d/attachment-0002.html>

From mithrandi at mithrandi.net  Sun Aug  7 18:58:06 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 08 Aug 2016 00:58:06 +0000
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
Message-ID: <CAMcKhMRRnyr1pmBRD8E32rAAR=iVcYgj5-4EEC6Dw+XWVP8yxQ@mail.gmail.com>

+1 from me

On Mon, 8 Aug 2016 at 02:35 Craig Rodrigues <rodrigc at crodrigues.org> wrote:

>
> I understand the motivation, but the time to have done this was when
> dist.py
> was originally reviewed.
>
> There are real problems in the Twisted code, and in the Twisted
> infrastructure.
> Focusing on something like this instead of those problems seems pointless,
> gratuitous and of little benefit.
>

The problem is that if we defer this change until later, it becomes a lot
more work then. If we do it now, while nobody is depending on the module,
then we save ourselves that work in future by doing a trivial amount of
work now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160808/e57a0934/attachment-0002.html>

From chriswwolfe at gmail.com  Sun Aug  7 21:00:30 2016
From: chriswwolfe at gmail.com (Chris Wolfe)
Date: Mon, 08 Aug 2016 03:00:30 +0000
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAMcKhMRRnyr1pmBRD8E32rAAR=iVcYgj5-4EEC6Dw+XWVP8yxQ@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <CAMcKhMRRnyr1pmBRD8E32rAAR=iVcYgj5-4EEC6Dw+XWVP8yxQ@mail.gmail.com>
Message-ID: <CAEKSqksqgbwa96Ltv310CNqB_YxD0oQDZizDweLpO1=bnkFXww@mail.gmail.com>

+1 from me as well. Depending directly on how twisted installs itself seems
problematic. In my opinion, the more we discourage this practice the better.

On Sun, Aug 7, 2016 at 8:00 PM Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> +1 from me
>
> On Mon, 8 Aug 2016 at 02:35 Craig Rodrigues <rodrigc at crodrigues.org>
> wrote:
>
>>
>> I understand the motivation, but the time to have done this was when
>> dist.py
>> was originally reviewed.
>>
>> There are real problems in the Twisted code, and in the Twisted
>> infrastructure.
>> Focusing on something like this instead of those problems seems pointless,
>> gratuitous and of little benefit.
>>
>
> The problem is that if we defer this change until later, it becomes a lot
> more work then. If we do it now, while nobody is depending on the module,
> then we save ourselves that work in future by doing a trivial amount of
> work now.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-- 
- Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160808/328f2b5c/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Aug  8 00:01:54 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 7 Aug 2016 23:01:54 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
	renamed to twisted.python._setup
In-Reply-To: <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
Message-ID: <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>


> On Aug 7, 2016, at 5:35 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I understand the motivation, but the time to have done this was when dist.py
> was originally reviewed.

It certainly would have been better :-).

> There are real problems in the Twisted code, and in the Twisted infrastructure.

This is also addressing a real problem.  One of the major issues with Twisted is documentation noise.  Developers trying to use Twisted to build things frequently complain about this: they look for an API to do XYZ, and they search the reference documentation, which produces dozens of confusing, irrelevant hits.  There are multiple issues that interact here (see, for example, <https://github.com/twisted/pydoctor/issues/49> which is a big part of the problem) but one significant one is that our apparently-public API surface is just too big.  Removing things like this, which are really _totally_ useless to anyone, is useful in and of itself and also amplifies the benefit of any other work on docs and tooling to properly segregate public and private API documentation.

For a long time we were extremely conservative about doing any compatibility-breaking thing, even hypothetically breaking, even within the policy we'd set forth, and I think the result of that is a sprawling API that's incredibly hard to navigate, full of old junk that nobody should ever use.  The slightly more aggressive attitude that has been exemplified by e.g. Amber has been a breath of fresh air when it comes to unburdening ourselves from literal garbage.

So I think that "overburdened public API surface" is one of the largest problems facing Twisted and every little bit we can chip away at it is a real win.  We do have to be super careful of course, we don't want to be chopping off obscure but useful pieces of API that programs were actually using, but that's what the compat policy (and judicious judgement) are for.

> Focusing on something like this instead of those problems seems pointless, gratuitous and of little benefit.

In addition to underplaying the usefulness of maintenance like this, I think this comment belies acceptance of a superficially true falsehood - one that I've often fallen prey to myself - and that is, the idea that volunteer time is fungible.  It isn't.  If the members of a project have problems A, B, C, X, Y, Z in very clear ranked order of importance, and a volunteer ("V") shows up to work on Z, the impulse of the existing members of the project is "but you should really just work on 'A'!".  V doesn't care about A, doesn't want to work on A, and the likely result of telling them they should be working on A is that they will feel bad about not working on A and their fix for Z will go unfinished.

I'm not saying that necessarily applies in its full force here; after all Adi is a member of the project as well.  But one of the corollaries of this realization is that if A were really so important someone would already be working on it :).

We should totally have the ABCXYZ list in case anyone shows up just wondering what would be helpful to work on; but if someone shows up with a solution to Z, we should always try to incorporate it and help them feel motivated about continuing, hopefully up the list towards A of course, but maybe they are going to contribute stuff for M, N, and O that we didn't even realize was a problem.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/91ec9073/attachment-0002.html>

From rodrigc at crodrigues.org  Mon Aug  8 00:53:50 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 7 Aug 2016 23:53:50 -0700
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
Message-ID: <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>

On Sun, Aug 7, 2016 at 11:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> This is also addressing a real problem.  One of the *major* issues with
> Twisted is *documentation noise*.  Developers trying to use Twisted to
> build things frequently complain about this: they look for an API to do
> XYZ, and they search the reference documentation, which produces dozens of
> confusing, irrelevant hits.  There are multiple issues that interact here
> (see, for example, <https://github.com/twisted/pydoctor/issues/49> which
> is a big part of the problem) but one significant one is that our
> apparently-public API surface is just too big.  Removing things like this,
> which are really _totally_ useless to anyone, is useful in and of itself
> and also amplifies the benefit of any other work on docs and tooling to
> properly segregate public and private API documentation.
>
>

Making dist.py private seems to fall under the category of "code
cleanliness", and doesn't
seem to solve any specific pressing issue that I see.  Reducing
documentation noise is a good goal,
but if dist.py was left the way it is, things would probably be OK with
Twisted, and I think people
could figure things out in Twisted with respect to the documentation.

Since you mention pydoctor, I will mention two issues, that I feel are more
important to the project
that moving around dist.py:


   - pydoctor produces false errors, specifically in h2 code:
   https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/steps/api-documentation/logs/pydoctor%20errors
   - pydoctor doesn't work on Python 3:
   https://github.com/twisted/pydoctor/issues/96

I understand that Twisted is a volunteer project, and people can work on
whatever they want.
I also see on this list, that a few people support the dist.py change, so
as long as
Adi's change meets the Twisted coding standards, gets code review approval,
and can pass all the buildbots,
it can move forward, despite my objections.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160807/e36d491e/attachment-0002.html>

From radix at twistedmatrix.com  Mon Aug  8 01:10:39 2016
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 08 Aug 2016 07:10:39 +0000
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
 <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
Message-ID: <CAPkRfUSV-RgeO=0dLKoQZ9zpKE+SLZsHzXEeQNhZ6FJxnbL+wQ@mail.gmail.com>

The reason this module never had an underscore (and instead has the "don't
use this outside of Twisted" line in the docstring) is because it
originated in a time when Twisted was ostensibly split up into multiple
projects, and I ill-advisedly decided that it technically needed to be
"public" in order for the non-Twisted-core subprojects to use it. That was
a silly decision, and given that the docstring has always told people not
to use it, please feel free to rename it.

-Chris

On Mon, Aug 8, 2016, 1:56 AM Craig Rodrigues <rodrigc at crodrigues.org> wrote:

> On Sun, Aug 7, 2016 at 11:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> This is also addressing a real problem.  One of the *major* issues with
>> Twisted is *documentation noise*.  Developers trying to use Twisted to
>> build things frequently complain about this: they look for an API to do
>> XYZ, and they search the reference documentation, which produces dozens of
>> confusing, irrelevant hits.  There are multiple issues that interact here
>> (see, for example, <https://github.com/twisted/pydoctor/issues/49> which
>> is a big part of the problem) but one significant one is that our
>> apparently-public API surface is just too big.  Removing things like this,
>> which are really _totally_ useless to anyone, is useful in and of itself
>> and also amplifies the benefit of any other work on docs and tooling to
>> properly segregate public and private API documentation.
>>
>>
>
> Making dist.py private seems to fall under the category of "code
> cleanliness", and doesn't
> seem to solve any specific pressing issue that I see.  Reducing
> documentation noise is a good goal,
> but if dist.py was left the way it is, things would probably be OK with
> Twisted, and I think people
> could figure things out in Twisted with respect to the documentation.
>
> Since you mention pydoctor, I will mention two issues, that I feel are
> more important to the project
> that moving around dist.py:
>
>
>    - pydoctor produces false errors, specifically in h2 code:
>    https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/steps/api-documentation/logs/pydoctor%20errors
>    - pydoctor doesn't work on Python 3:
>    https://github.com/twisted/pydoctor/issues/96
>
> I understand that Twisted is a volunteer project, and people can work on
> whatever they want.
> I also see on this list, that a few people support the dist.py change, so
> as long as
> Adi's change meets the Twisted coding standards, gets code review
> approval, and can pass all the buildbots,
> it can move forward, despite my objections.
>
> --
> Craig
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160808/1b9b0e83/attachment-0002.html>

From adi at roiban.ro  Mon Aug  8 03:54:26 2016
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 8 Aug 2016 10:54:26 +0100
Subject: [Twisted-Python] INCOMPATIBLE CHANGE: twisted.python.dist
 renamed to twisted.python._setup
In-Reply-To: <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
References: <CAFycZ9cTW-Fsj20hxcVKKUBH9ABpbVDtveLBK=rDDNsBag48kg@mail.gmail.com>
 <4D354CBB-C5BD-4F6B-8427-4A6A65B22656@twistedmatrix.com>
 <CAG=rPVeJ_SSXBCTU6xhmzwZFiApU61=7Rn36d3NKp=+KJBCFaA@mail.gmail.com>
 <CBC1385B-884D-4E96-8611-545630D1998F@atleastfornow.net>
 <CAG=rPVcsiUcoEiJWzZBxHnCcxvCRjyKF0pWhq3paagKYYXAo5g@mail.gmail.com>
 <7FDC3B01-7C3F-4DC6-AEC0-3AF7A7CF4CDA@twistedmatrix.com>
 <CAG=rPVdj9dMc67qofpW7xz4koVHHvhGd-R0UU0=eETnF5qEDsA@mail.gmail.com>
Message-ID: <CAFycZ9cYrRtaPHZti3ZUOzmzc9HmNB9TQE7gyncjSuZ1-JdVnQ@mail.gmail.com>

On 8 August 2016 at 07:53, Craig Rodrigues <rodrigc at crodrigues.org> wrote:

> On Sun, Aug 7, 2016 at 11:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> This is also addressing a real problem.  One of the *major* issues with
>> Twisted is *documentation noise*.  Developers trying to use Twisted to
>> build things frequently complain about this: they look for an API to do
>> XYZ, and they search the reference documentation, which produces dozens of
>> confusing, irrelevant hits.  There are multiple issues that interact here
>> (see, for example, <https://github.com/twisted/pydoctor/issues/49> which
>> is a big part of the problem) but one significant one is that our
>> apparently-public API surface is just too big.  Removing things like this,
>> which are really _totally_ useless to anyone, is useful in and of itself
>> and also amplifies the benefit of any other work on docs and tooling to
>> properly segregate public and private API documentation.
>>
>>
>
> Making dist.py private seems to fall under the category of "code
> cleanliness", and doesn't
> seem to solve any specific pressing issue that I see.  Reducing
> documentation noise is a good goal,
> but if dist.py was left the way it is, things would probably be OK with
> Twisted, and I think people
> could figure things out in Twisted with respect to the documentation.
>
> Since you mention pydoctor, I will mention two issues, that I feel are
> more important to the project
> that moving around dist.py:
>
>
>    - pydoctor produces false errors, specifically in h2 code:
>    https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/
>    steps/api-documentation/logs/pydoctor%20errors
>    <https://buildbot.twistedmatrix.com/builders/documentation/builds/1291/steps/api-documentation/logs/pydoctor%20errors>
>    - pydoctor doesn't work on Python 3: https://github.com/twisted/
>    pydoctor/issues/96
>
> I have already proposed a solution for the pydoctor h2 issue
https://github.com/twisted/pydoctor/pull/126
... waiting for a review :)

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160808/ce9dc1cf/attachment-0002.html>

From adi at roiban.ro  Tue Aug  9 06:28:52 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 9 Aug 2016 13:28:52 +0100
Subject: [Twisted-Python] close to the finish line on hosted windows
	testing
In-Reply-To: <EC43BB15-AFDC-42F3-8182-33EE3F2EFDC6@atleastfornow.net>
References: <4BBAB63C-216F-48B5-9163-F2659C0F34F9@twistedmatrix.com>
 <EC43BB15-AFDC-42F3-8182-33EE3F2EFDC6@atleastfornow.net>
Message-ID: <CAFycZ9eBkCx0dDuA94n0ddYXyiQEX6XetmZJ7MjTiP7nvFhkmw@mail.gmail.com>

On 24 July 2016 at 20:07, Amber "Hawkie" Brown
<hawkowl at atleastfornow.net> wrote:
> Just a note; I've got both issues fixed on a branch and am just cleaning it
> up for review. Them, I would like to remove the (quite broken) Windows 7
> builder and just use appveyor.
>
> - Amber

Just an update on this.

We got a $130/month credit sponsored by MS for Azure VMs, including
Windows 8.1 and Windows 10 VMs.

Right now I don't have time to manage a Windows buildslave, but if
someone want to maintain the buildbot slaves on Windows I can take
care of creating the VM and give the required access and I can also
take care of updating the buildbot configuration.

The Appveyor build is pretty responsive and is available to anyone...
so hosted Windows is not a top priority.

I think that Appveyor only runs on a single Windows Server flavor...
so with Azure we can also have desktop flavors.

For security reasons Buildbot slaves are accessible only to the
Twisted team members, and this reduces their usefulness.

The goal is to have latent slaves starting from a snapshot and running
all PRs even if they are from forks.

If you are already running latest buildbot slaves on Azure and want to
share your infrastructure code, please let me know as it would be of
great help. I have never used Azure API and I am just starting to
learn how it works.

---------

Even if we don't run Azure VMs, the Azure account is of great help as
it makes it easier to publish the Windows wheels generated on Appveyor
using the Azure Blob storage

Many thanks to Microsoft for providing access to these VMs and for the
MSDN subscription.T

-- 
Adi Roiban



From hawkowl at atleastfornow.net  Wed Aug 10 06:47:35 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Wed, 10 Aug 2016 20:47:35 +0800
Subject: [Twisted-Python] Twisted 16.3.1 Prerelease 1 Announcement
Message-ID: <FFF8521A-4ACF-48A5-AC53-BBA30BE098E9@atleastfornow.net>

Hi everyone,

I've just uploaded the first prerelease of Twisted 16.3.1, a security & critical bug fix release of the 16.3 series. It contains:

- A bugfix for a HTTP/2 edge case,
- Fix for CVE-2008-7317 (generating potentially guessable HTTP session identifiers)
- Fix for CVE-2008-7318 (sending secure session cookies over insecured connections)
- Fix for CVE-2016-1000111 (http://httpoxy.org/)

You can find the tarball and the full news file for testing at https://twistedmatrix.com/Releases/pre/16.3.1pre1/ .

If no issues are found, I will issue a full release by Friday.

- Amber
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160810/e6e5bc98/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160810/e6e5bc98/attachment.sig>

From rodrigc at crodrigues.org  Thu Aug 11 06:42:16 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Thu, 11 Aug 2016 05:42:16 -0700
Subject: [Twisted-Python] More tests running on Python 3
In-Reply-To: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
References: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
Message-ID: <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>

I looked at latest Travis builds on Linux:

DATE                       BUILD
====                        =====
August 11, 2016      https://travis-ci.org/twisted/twisted/jobs/151440581


Tests on Python 2.7
===============
11640  (skips=2083, successes=9557)

Tests on Python 3.5
================
9647   (skips=2008, successes=7639)

--
Craig

On Thu, Jun 30, 2016 at 3:43 PM, Craig Rodrigues <rodrigc at crodrigues.org
<rodrigc at freebsd.org>> wrote:

> Hi,
>
> I looked at these two Travis builds on Linux
>
> DATE              BUILD
> ====              =====
> June  3, 2016    https://travis-ci.org/twisted/twisted/builds/135219940
> June 30, 2016    https://travis-ci.org/twisted/twisted/builds/141426367
>
>
> I noticed:
>
> DATE             Tests on Python 2.7
> ====              =====================================
> June  3, 2016     11438 (skips=3013, successes=8425)
> June 30, 2016    11496 (skips=2063, successes=9433)
>
>
> DATE             Tests on Python 3.5
> ====               =====================================
> June  3, 2016     6367 (skips=1533, successes=4834)
> June 30, 2016    7902 (skips=1693, successes=6209)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160811/e1faaeee/attachment-0002.html>

From cory at lukasa.co.uk  Thu Aug 11 06:54:35 2016
From: cory at lukasa.co.uk (Cory Benfield)
Date: Thu, 11 Aug 2016 13:54:35 +0100
Subject: [Twisted-Python] More tests running on Python 3
In-Reply-To: <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
References: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
 <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
Message-ID: <4CFE8A36-D21B-42FD-9FF8-DFBF72E2BAAE@lukasa.co.uk>

This is really excellent work!

Cory

> On 11 Aug 2016, at 13:42, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I looked at latest Travis builds on Linux:
> 
> DATE                       BUILD
> ====                        =====
> August 11, 2016      https://travis-ci.org/twisted/twisted/jobs/151440581 <https://travis-ci.org/twisted/twisted/jobs/151440581>
>  
> 
> Tests on Python 2.7
> ===============
> 11640  (skips=2083, successes=9557)
> 
> Tests on Python 3.5
> ================
> 9647   (skips=2008, successes=7639)
> 
> --
> Craig
> 
> On Thu, Jun 30, 2016 at 3:43 PM, Craig Rodrigues <rodrigc at crodrigues.org <mailto:rodrigc at freebsd.org>> wrote:
> Hi,
> 
> I looked at these two Travis builds on Linux
> 
> DATE              BUILD
> ====              =====
> June  3, 2016    https://travis-ci.org/twisted/twisted/builds/135219940 <https://travis-ci.org/twisted/twisted/builds/135219940>
> June 30, 2016    https://travis-ci.org/twisted/twisted/builds/141426367 <https://travis-ci.org/twisted/twisted/builds/141426367>
> 
> 
> I noticed:
> 
> DATE             Tests on Python 2.7
> ====              =====================================
> June  3, 2016     11438 (skips=3013, successes=8425)
> June 30, 2016    11496 (skips=2063, successes=9433)
> 
> 
> DATE             Tests on Python 3.5
> ====               =====================================
> June  3, 2016     6367 (skips=1533, successes=4834)
> June 30, 2016    7902 (skips=1693, successes=6209)
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160811/b817b4fb/attachment-0002.html>

From adi at roiban.ro  Thu Aug 11 07:11:43 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 11 Aug 2016 14:11:43 +0100
Subject: [Twisted-Python] More tests running on Python 3
In-Reply-To: <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
References: <CAG=rPVeu-GS=wEb+RdhvwUC8+q72MZKG+-3=Twb6PE8Qwi_bEw@mail.gmail.com>
 <CAG=rPVfUGmftL1-pNw2=3v-pKWqeii99zcMot_mC=iEbphB4Kw@mail.gmail.com>
Message-ID: <CAFycZ9eiuCmH6RRHvRegNW0poxFKTS3cwfM7p9nDayd-e+JiHg@mail.gmail.com>

On 11 August 2016 at 13:42, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> I looked at latest Travis builds on Linux:
>
> DATE                       BUILD
> ====                        =====
> August 11, 2016      https://travis-ci.org/twisted/twisted/jobs/151440581
>
>
> Tests on Python 2.7
> ===============
> 11640  (skips=2083, successes=9557)
>
> Tests on Python 3.5
> ================
> 9647   (skips=2008, successes=7639)
>
> --
> Craig
>


Great work!

Here is my bad math :)

So from 3rd of June to 11th of August we have an increase of 51.5% in
Python3 tests.

Also, while on the 3rd of June only 55% of Python2 tests were executed
on Python3 (as a raw measure)
in 11th of August the gap was reduced and now we have 88% of total
tests executed on Python3

This is a huge progress!
Many thanks!

-- 
Adi Roiban



From adi at roiban.ro  Thu Aug 11 07:59:12 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 11 Aug 2016 14:59:12 +0100
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the transport's
 connected flag on connection lost
Message-ID: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>

Hi,

I have observed that when a SSL4ClientEndpoint was used, the
protocol's transport `connected` attribute is not updated by the
wrapper when the connection is lost.

I have this code which will need your own server cert+key file:

https://gist.github.com/adiroiban/8e0be840f81750f88a587e634ddfb194

I tried it on twisted/trunk and when SSL is used the output is

server:client connected
client:connected
client:send-message
server:data received
client:connection-lost
client:transport-status:1:wrapped-transport->0
server:client disconnected
client:transport-status:1:wrapped-transport->0

while without SSL the output is:

server:client connected
client:connected
client:send-message
server:data received
server:client disconnected
client:connection-lost
client:transport-status:0:wrapped-transport->0
client:transport-status:0:wrapped-transport->0

------------

My current finding is that the reactor will call connection lost on
t.i.abstract.FileDescriptor.connectionLost and not on
t.protocols.policies.ProtocolWrapper

so it seems that when SSL is used the wrapped protocol is registered
instead of the wrapping protocol.

------

I am doing something wrong here?

Is this the expected behavior or this is a bug?

Thanks!

-- 
Adi Roiban



From adi at roiban.ro  Thu Aug 11 08:21:56 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 11 Aug 2016 15:21:56 +0100
Subject: [Twisted-Python] twisted.internet.protocol.Protocol.connected flag
	purpose
Message-ID: <CAFycZ9e5bqNUx2MBLWKt4aNW=CRxMyMai0HBFcOCthULiVgB4w@mail.gmail.com>

Hi,

Looking at the code in trunk [1] I can see that
t.internet.protocol.Protocol will update the 'connected' attribute
upon makeConnection but will not update it on connectionLost

Is this the intended design?
Is this design documented somewhere ?

I have check the narrative docs [2] and api-docs[3] but this attribute
is not documented.

What is the purpose of t.internet.protocol.Protocol.connected ?

Thanks!

[1] https://github.com/twisted/twisted/blob/trunk/twisted/internet/protocol.py#L471
[2] http://twistedmatrix.com/documents/current/core/howto/servers.html#protocols
[3]
-- 
Adi Roiban



From burak.arslan at arskom.com.tr  Thu Aug 11 09:55:35 2016
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Thu, 11 Aug 2016 18:55:35 +0300
Subject: [Twisted-Python] reading multipart/form-data headers
Message-ID: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>

Hello All,

You can find a sample HTTP POST request using HTTP multipart/form-data
at the end of this message.

The server that handles this request is using twisted so I end up with a
Request object. Is there a way I can extract the file name
("image008.jpg") from this stream? I'm looking at the source of
cgi.parse_multipart() and it seems to be ignored.

Best regards Burak

PS:

POST /put HTTP/1.1
Host: localhost:7111
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: multipart/form-data; boundary=---------------------------352471062160373366296932264
Content-Length: 382691

-----------------------------352471062160373366296932264
Content-Disposition: form-data; name="name"

a
-----------------------------352471062160373366296932264
Content-Disposition: form-data; name="version"

1
-----------------------------352471062160373366296932264
Content-Disposition: form-data; name="data"; filename="image008.jpg"
Content-Type: image/jpeg

(...)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160811/d4862ee9/attachment-0002.html>

From wolfgang.kde at rohdewald.de  Thu Aug 11 09:56:51 2016
From: wolfgang.kde at rohdewald.de (Wolfgang Rohdewald)
Date: Thu, 11 Aug 2016 17:56:51 +0200
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1985097.xpC6b6TUEP@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull>
Message-ID: <1474725.BNzsdodUFN@skull>

Am Dienstag, 2. August 2016, 10:45:32 CEST schrieb Wolfgang Rohdewald:
> Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
> > #7598: Port twisted.spread.pb to Python3
> 
> did you test with client on Python2 and server on Python3 and vice versa?
> 
> Not a bug report, but anyway ... This was client with Python3, 
> server with Python2

 I have now restricted testing to using the same version of Python
on both sides.

That works nicely with my application. 

Hope this is released soon!

--
Wolfgang



From glyph at twistedmatrix.com  Thu Aug 11 14:35:14 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 11 Aug 2016 13:35:14 -0700
Subject: [Twisted-Python] twisted.internet.protocol.Protocol.connected
	flag purpose
In-Reply-To: <CAFycZ9e5bqNUx2MBLWKt4aNW=CRxMyMai0HBFcOCthULiVgB4w@mail.gmail.com>
References: <CAFycZ9e5bqNUx2MBLWKt4aNW=CRxMyMai0HBFcOCthULiVgB4w@mail.gmail.com>
Message-ID: <AE84D680-AAF2-4FFD-B8D9-9A88AD47B4D2@twistedmatrix.com>


> On Aug 11, 2016, at 7:21 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> Looking at the code in trunk [1] I can see that
> t.internet.protocol.Protocol will update the 'connected' attribute
> upon makeConnection but will not update it on connectionLost
> 
> Is this the intended design?

I'm sure someone intended it at some point!  But it seems like an extraneous wart.  (This state can be detected by the presence of the 'transport' attribute, so it doesn't tell us anything interesting.)

> Is this design documented somewhere ?

Doubtful.

> I have check the narrative docs [2] and api-docs[3] but this attribute
> is not documented.
> 
> What is the purpose of t.internet.protocol.Protocol.connected ?

Many things that date back this far are simple accidents of implementation.  Protocol is, after all, from the very first versions of Twisted, before we even had TDD in place.  So, unfortunately, as you're discovering, sometimes there are random little bits of maybe-useful-but-ultimately-broken functionality hanging around in uninspected parts of the codebase.

In all likelihood, whoever was implementing makeConnection (me probably, or maybe Itamar or Moshe) thought "hrm, maybe I'd like to know if the protocol is connected?", stuck the attribute on there, but then forgot that they'd had that idea by the time they got to connectionLost.

That said, I don't think we should bother removing this particular wart here.  If we deprecate the attribute, we deprecate the use of the attribute 'connected' on any subclass of Protocol, which may be quite valid.  Given that it's also an old-style class, it would add non-trivial overhead to attribute access too; it would generally be a big mess.

Instead, if you want to get rid of this, we should add a new way of writing Protocol objects, which is to use a new class decorator that fills out the methods on IProtocol with no-op implementations, rather than using inheritance.  This new decorator, which resolves a bunch other problems with using inheritance, could drop accidental details like this one (if there are others; or just this one :)).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160811/2e94a20a/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Aug 11 14:52:21 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 11 Aug 2016 13:52:21 -0700
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
Message-ID: <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>

> On Aug 11, 2016, at 8:55 AM, Burak Arslan <burak.arslan at arskom.com.tr> wrote:
> 
> Hello All,
> 
> You can find a sample HTTP POST request using HTTP multipart/form-data at the end of this message.
> 
> The server that handles this request is using twisted so I end up with a Request object. Is there a way I can extract the file name ("image008.jpg") from this stream? I'm looking at the source of cgi.parse_multipart() and it seems to be ignored.
> 
Sadly Twisted just calls into cgi.parse_multipart and so it is in fact ignored.  You might be able to re-parse the request body (request.content.seek(0); request.content.read()) with something like <https://docs.python.org/2.7/library/email.mime.html#email.mime.multipart.MIMEMultipart <https://docs.python.org/2.7/library/email.mime.html#email.mime.multipart.MIMEMultipart>> or <https://github.com/mailgun/flanker <https://github.com/mailgun/flanker>> to extract more information about the MIME.

It would definitely be better for Twisted to have more robust facilities for dealing with request inputs, particularly to be able to process large uploads as a stream rather than an individual message (and such an API for form post uploads should obviously include the content disposition filename).  See <https://twistedmatrix.com/trac/ticket/288 <https://twistedmatrix.com/trac/ticket/288>> for more discussion :).

Thanks for using Twisted, and sorry about this shortcoming.

-g



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160811/d27c5c14/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Aug 11 14:53:19 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 11 Aug 2016 13:53:19 -0700
Subject: [Twisted-Python] [Twisted] #7598: Port twisted.spread.pb to
	Python3
In-Reply-To: <1474725.BNzsdodUFN@skull>
References: <053.3921990c4e23d1c358e60a8157e4dfe8@twistedmatrix.com>
 <068.60dd16daf365e1c4d37c98004bda68bc@twistedmatrix.com>
 <1985097.xpC6b6TUEP@skull> <1474725.BNzsdodUFN@skull>
Message-ID: <963DEF05-F618-4544-AAAB-4259E8374955@twistedmatrix.com>


> On Aug 11, 2016, at 8:56 AM, Wolfgang Rohdewald <wolfgang.kde at rohdewald.de> wrote:
> 
> Am Dienstag, 2. August 2016, 10:45:32 CEST schrieb Wolfgang Rohdewald:
>> Am Donnerstag, 28. Juli 2016, 11:27:15 CEST schrieb Twisted:
>>> #7598: Port twisted.spread.pb to Python3
>> 
>> did you test with client on Python2 and server on Python3 and vice versa?
>> 
>> Not a bug report, but anyway ... This was client with Python3, 
>> server with Python2
> 
> I have now restricted testing to using the same version of Python
> on both sides.
> 
> That works nicely with my application. 

Thank you for testing!

> Hope this is released soon!

It didn't make it for 16.4, but I'd anticipate it will likely land in 16.5.  I just need to figure out what's going on with the python 3.3 test failures.

-glyph




From manish.tomar at gmail.com  Thu Aug 11 15:19:45 2016
From: manish.tomar at gmail.com (Manish Tomar)
Date: Thu, 11 Aug 2016 14:19:45 -0700
Subject: [Twisted-Python] clientfactory cleanup slow-down (after many
	http requests)
In-Reply-To: <EC839276-759E-4172-BF0E-5990C170CE11@twistedmatrix.com>
References: <20160806104823.GA14053@garage2>
 <EC839276-759E-4172-BF0E-5990C170CE11@twistedmatrix.com>
Message-ID: <CABH8oEOSoGHtRxPJxUoWmAzQTo+E8Jh+fYPGP5JRjkQLAz8ebg@mail.gmail.com>

Wow! This is the friendliest way to welcome a new Twisted programmer. Great
job Glyph! :)

Regards,
Manish

On Sat, Aug 6, 2016 at 3:51 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Aug 6, 2016, at 03:48, Randomcoder <randomcoder1 at gmail.com> wrote:
>
> Hello,
>
> I've been working on a small Twisted program.
>
>
> Cool, thanks for using Twisted.
>
> The program makes HTTP requests to a large number of feeds.
> Twisted is used to speed up the entire process.
> After the feeds are fetched, they're parsed. Finally they should be
> written to a database (to simplify the code, that part is left out).
>
>
> Thanks for including examples, so we know exactly what you're talking
> about! :)
>
> Feeds are fetched in parallel using gatherResults, and a batch is
> built. Then all batches are again gathered into a set of batches,
> a DeferredList is built out of those. A semaphore controls both the
> batch-level list of deferreds, and a semaphore controls the entire batch
> list deferred.
>
> Currently, the program works ok on 100-150 feeds, and BATCH_SIZE between
> 5 and 20.
>
>
> This all seems pretty reasonable and following best practices and such...
>
> However, I notice the program starts to hang for a long time, when the
> number of feeds goes over 150-200.
>
>
> Two key questions: what do you mean by "hang" and what is "a long time"?
> Do you mean it's totally unresponsive, or do you mean it's just failing to
> make progress on downloading more feeds?
>
>
> To be more precise, at the end of running the program, messages
> like these are printed, but the program seems to not be very active:
>
>    Stopping factory <twisted.web.client._HTTP11ClientFactory instance at
> 0x7f0b7d5f3908>
>
> It seems like this is the cleanup phase.
>
>
> This just means that it is finished making connections.  We have to do
> some clean-up around the usefulness of these log messages, sorry :-\.
>
> I've read what I could find on the topic. I wasn't able to make progress
> on it, so I'm posting to the mailing list to ask if someone has
> encountered this
> before. Maybe it's a common pitfall or issue that other people have also
> bumped into.
>
>
> Right now, my guess is this: some of the sites you're contacting have very
> slow proxies, or for some other reason let you *connect* to them, but
> then hang when sent requests.  If you're simultaneously requesting stuff
> from a very large number of different sites, this is sort of inevitably
> bound to happen, either based on network problems, or issues with the sites
> themselves.  I suspect you thought that the connectTimeout argument to
> Agent would save you from this, but that timeout is just for making the
> initial underlying TCP connection, not receiving a full response.  What you
> actually want to do is cancel the Deferred returned by Agent.request.
>
> Luckily, https://treq.readthedocs.io/en/latest/ already implements this
> high-level timeout functionality for you, in the form of the 'timeout='
> argument it accepts.  If you give that a try, do you see more connections
> timing out as it runs, rather than "hanging" the process for long periods
> of time?
>
> As long as I'm looking at your code, as a way of thanking you for
> providing such a nice specific runnable example, I have a few other random
> thoughts which may be useful to you:
>
> - I see you're importing psycopg.  Do you know about https://txpostgres.
> readthedocs.io/en/latest/ ?  You can talk to postgres asynchronously with
> Twisted.
> - d.addCallback(lambda out: out).addCallback(lambda resp:
> client.readBody(resp)) can be much more briefly spelled
> "d.addCallback(client.readBody)". d.addErrback(lambda err: err) does
> nothing and can just be removed.
> - BrowserLikePolicyForHTTPS() is the default, so you don't need to pass
> that.
> - clean_up_and_exit will only be called if batchesDef doesn't fail, and if
> it does fail, it will swallow the exception message.  Rather than manually
> calling `reactor.stop`, you probably want to use react(), <
> https://twistedmatrix.com/documents/16.3.0/api/twisted.
> internet.task.html#react>.  This way your function is an API that anyone
> who wants to use it can call - it just returns a Deferred when it's done -
> but your __main__ block calls react() which will both start and stop the
> reactor, as well as reporting errors if there's a problem while still
> shutting down.
>
> Hope some of that code review is helpful - let us know if the treq timeout
> solves the problem or if the issue is somewhere else!
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160811/4842971c/attachment-0002.html>

From meejah at meejah.ca  Thu Aug 11 16:40:10 2016
From: meejah at meejah.ca (meejah)
Date: Fri, 12 Aug 2016 02:40:10 +0400
Subject: [Twisted-Python] txtorcon 0.15.1
In-Reply-To: <86eg6g0yer.fsf@atlantis.meejah.ca> (meejah@meejah.ca's message
 of "Wed, 27 Jul 2016 03:31:24 +0400")
References: <86eg6g0yer.fsf@atlantis.meejah.ca>
Message-ID: <867fbnvsj9.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

There was a small issue in 0.15.0 noticed by the Debian reproducible
builds (thanks irl at debian for your packaging work!)

   * fix issue 179 (Circuit.age() incorrect default arg)

You can download the release from PyPI or GitHub (or of
course "pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.15.1
   https://github.com/meejah/txtorcon/releases/tag/v0.15.1

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.15.1.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.15.1.tar.gz.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
bbf69b7642d18b0678580e91d92ed91601759aea2de0e971539a2fb96fbd607c  txtorcon-0.15.1.tar.gz
35c15acb2fda99dc35279286f905e38e3e19f15fe229c13164d4ae37a75d6df7  txtorcon-0.15.1-py2-none-any.whl
EOF

thanks,
meejah
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQEcBAEBAgAGBQJXrP4RAAoJEMJgKAMSgGmnJBoH/RzulNMAEB+9x8us7W2x0Jay
kabecTOvX7zoAvYk+OV6ApRK8I72m23cHM7bv2qzrTasTpaMO2Jox6vQMJM2C+1i
tyBNivPN91svMCTI4QLnX9735fBS+hKQ1CN3lWtLoQi66xyM3Vf6Ux/tf4HEwDnN
qV1EPptjd1Rbic60ZR3TN0qNyIF/pfGfgkZiOLtKqCoKlGfpQTEJeX+pTkMdzpxq
z6rw1YSX9HkJacufu8N9ZjyhVO16EJpV98u7iP5l21nL/nk42pnNgnovDnl6wqGD
+zuBbAH2qa9jCih3Y9OPdLwkKcyCTmfKnD/aR2oCSVrMH2BMO615eRDUv+/ESH0=
=qZ3n
-----END PGP SIGNATURE-----



From adi at roiban.ro  Fri Aug 12 03:28:39 2016
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 12 Aug 2016 10:28:39 +0100
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
 <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
Message-ID: <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>

On 11 August 2016 at 21:52, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> On Aug 11, 2016, at 8:55 AM, Burak Arslan <burak.arslan at arskom.com.tr>
> wrote:
>
> Hello All,
>
> You can find a sample HTTP POST request using HTTP multipart/form-data at
> the end of this message.
>
> The server that handles this request is using twisted so I end up with a
> Request object. Is there a way I can extract the file name ("image008.jpg")
> from this stream? I'm looking at the source of cgi.parse_multipart() and it
> seems to be ignored.
>
> Sadly Twisted just calls into cgi.parse_multipart and so it is in fact
> ignored.  You might be able to re-parse the request body
> (request.content.seek(0); request.content.read()) with something like
> <https://docs.python.org/2.7/library/email.mime.html#email.mime.multipart.MIMEMultipart>
> or <https://github.com/mailgun/flanker> to extract more information about
> the MIME.
>
> It would definitely be better for Twisted to have more robust facilities for
> dealing with request inputs, particularly to be able to process large
> uploads as a stream rather than an individual message (and such an API for
> form post uploads should obviously include the content disposition
> filename).  See <https://twistedmatrix.com/trac/ticket/288> for more
> discussion :).
>
> Thanks for using Twisted, and sorry about this shortcoming.

I have some coding which is doing a best effort to parse the request
body in a streaming mode... but it is using a fork based on the code
submitted for this ticket http://twistedmatrix.com/trac/ticket/6928

diff for the fork https://github.com/chevah/twisted/compare/6928-http-100-accept

It relies on the fact that the request will call the
resource.headerReceive() before the actual body is consumed.

form handling code using this fork
https://gist.github.com/adiroiban/7f593d6d18113aae797ad081e07f4745

It uses werkzeug.http.parse_options_header for parsing the headers

If your POST requests are just a few bytes, you can just use
request.content.seek(0); request.content.read() as suggested by Glyph
and redirect the content to the MultiPartFormData protocol

For my project I need to handle files larger than 5GB, so I ended up
with the modified request/resource

Good luck!
-- 
Adi Roiban



From burak.arslan at arskom.com.tr  Fri Aug 12 03:58:28 2016
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Fri, 12 Aug 2016 12:58:28 +0300
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
 <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
 <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>
Message-ID: <2031264f-6e97-7a99-fb99-216cdfe0bf17@arskom.com.tr>

Hey Adi, hey Glyph,

Thanks a lot for your answers.


On 08/12/16 12:28, Adi Roiban wrote:
> On 11 August 2016 at 21:52, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> Thanks for using Twisted, and sorry about this shortcoming.

Nothing to be sorry about, twisted is made of man-years of good work.
Once you twist your point of view enough, it becomes quite elegant and
predictable. Some wars *had* to be fought uphill while integrating with
twisted's HTTP implementation but it's the way things are, I'm not
complaining.


> I have some coding which is doing a best effort to parse the request
> body in a streaming mode... but it is using a fork based on the code
> submitted for this ticket http://twistedmatrix.com/trac/ticket/6928

This is for a library I'm developing, so I can only depend on what's
already released. However, thanks for the code -- it will certainly give
me ideas.

> For my project I need to handle files larger than 5GB, so I ended up
> with the modified request/resource
>

As I said, I can't make any assumptions on file size but I *think* I can
pretend that my requests fit in memory as long as I keep them in
memory-mapped files. mmap is wonderful -- It's both a file and a string!

With that assumption, this is what I came up with:

https://github.com/plq/spyne/blob/7f52ab0f11773535c6a73702b4b838b49ecdd9e6/spyne/server/twisted/http.py#L321

I'd love to hear your feedback about it. Do you think I can get away
with relying on mmap here?

Best regards,
Burak



From hawkowl at atleastfornow.net  Sat Aug 13 00:18:26 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sat, 13 Aug 2016 16:18:26 +1000
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
Message-ID: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>

In a rare Twisted release double feature right after 16.3.1, I bring you the first prerelease of Twisted 16.4.0.

This is a big release, the first after the Git migration has really kicked in! And so, here's what it brings us:

- twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
- A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
- async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
- Trial can be invoked with "python -m twisted.trial".
- 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
- 240+ closed tickets overall.

For more information, check the NEWS file (link provided below).

As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.0pre1/ <https://twistedmatrix.com/Releases/pre/16.4.0pre1/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:

   pip install https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2>

Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160813/d81df9e8/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160813/d81df9e8/attachment.sig>

From glyph at twistedmatrix.com  Sat Aug 13 17:33:58 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 13 Aug 2016 16:33:58 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>


> On Aug 12, 2016, at 11:18 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> In a rare Twisted release double feature right after 16.3.1, I bring you the first prerelease of Twisted 16.4.0.
> 
> This is a big release, the first after the Git migration has really kicked in! And so, here's what it brings us:
> 
> - twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
> - A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
> - async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
> - Trial can be invoked with "python -m twisted.trial".
> - 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
> - 240+ closed tickets overall.
> 
> For more information, check the NEWS file (link provided below).
> 
> As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.0pre1/ <https://twistedmatrix.com/Releases/pre/16.4.0pre1/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:
> 
>    pip install https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.0pre1/Twisted-16.4.0rc1.tar.bz2>
> 
> Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

This is a _lot_ of stuff.  I can only imagine what a mega-blockbuster release we are going to have once we have this level of investment but we are already _done_ with python 3 porting (a day which, at this clip, will come soon)!!!

Two minor points:

This release _also_ comes with setuptools console scripts.  That sounds a bit dull, but for those of you on Windows, the exciting consequence of this apparently mundane tweak is that that this is the first release to have programs like twistd (and the new 'twist'!) work properly at a Windows command line, without any special %PATHEXT% configuration!  setuptools/virtualenv/pip's .exe-stub generation makes .exe files that work more or less like regular Windows executables, and therefore integrate much better into the environment for all kinds of purposes.
I'm about to land the fix for <https://twistedmatrix.com/trac/ticket/8754>.  While not technically a regression, I believe we should have a pre2 for this; it would be sad for our first asyncioreactor release to be beset by random EPIPE tracebacks (even if asyncio itself would be without our help ;-)).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160813/338c5c1f/attachment-0002.html>

From hawkowl at atleastfornow.net  Sat Aug 13 17:38:04 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Sat, 13 Aug 2016 16:38:04 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
 <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>
Message-ID: <CAMxb2itNWoOJFc4EdU_N0C9BqxyM9fvbxFrGtJ3PCxQNW8V9pw@mail.gmail.com>

You needn't be concerned, Glyph, the asyncio reactor landed after I cut the
release, so it's existence is currently a spoiler for season 16.5 of
Twisted ;)

On 14 Aug 2016 09:34, "Glyph Lefkowitz" <glyph at twistedmatrix.com> wrote:

>
> On Aug 12, 2016, at 11:18 PM, Amber Hawkie Brown <
> hawkowl at atleastfornow.net> wrote:
>
> In a rare Twisted release double feature right after 16.3.1, I bring you
> the first prerelease of Twisted 16.4.0.
>
> This is a big release, the first after the Git migration has really kicked
> in! And so, here's what it brings us:
>
> - twist, a new command line tool for running Twisted plugins, similar to
> twistd but with a simpler, cleaner interface.
> - A new interface for Protocols, IHandshakeListener, which tells Twisted
> to tell the Protocol when the TLS handshake has been completed.
> - async/await support for Deferreds, allowing you to write Python 3.5+
> coroutines using Twisted
> - Trial can be invoked with "python -m twisted.trial".
> - 35+ more modules ported to Python 3, and many many cleanups on the way
> to Python 3 on Windows support.
> - 240+ closed tickets overall.
>
> For more information, check the NEWS file (link provided below).
>
> As usual, it's available for download -- go here (
> https://twistedmatrix.com/Releases/pre/16.4.0pre1/) to get the prerelease
> tarballs and the full NEWS file. If you want to install it right away, run:
>
>    pip install https://twistedmatrix.com/Releases/pre/16.4.0pre1/
> Twisted-16.4.0rc1.tar.bz2
>
> Please let me know if you have any issues, as well as if you don't! If
> everything works well, that's a good thing for me to know :)
>
>
> This is a _lot_ of stuff.  I can only imagine what a mega-blockbuster
> release we are going to have once we have this level of investment but we
> are already _done_ with python 3 porting (a day which, at this clip, will
> come soon)!!!
>
> Two minor points:
>
>
>    1. This release _also_ comes with setuptools console scripts.  That
>    sounds a bit dull, but for those of you on Windows, the exciting
>    consequence of this apparently mundane tweak is that that this is the first
>    release to have programs like twistd (and the new 'twist'!) work properly
>    at a Windows command line, without any special %PATHEXT% configuration!
>     setuptools/virtualenv/pip's .exe-stub generation makes .exe files that
>    work more or less like regular Windows executables, and therefore integrate
>    much better into the environment for all kinds of purposes.
>    2. I'm about to land the fix for <https://twistedmatrix.com/
>    trac/ticket/8754>.  While not technically a regression, I believe we
>    should have a pre2 for this; it would be sad for our first asyncioreactor
>    release to be beset by random EPIPE tracebacks (even if asyncio itself
>    would be without our help ;-)).
>
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160813/6d6092ca/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Aug 13 17:40:50 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 13 Aug 2016 16:40:50 -0700
Subject: [Twisted-Python] making appveyor a required status
Message-ID: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>

Just a bit of Github housekeeping: Appveyor has looked pretty stable (more than our other Windows builds, even).  I'm thinking about making it a required status for merging.  But I'm curious what other folks have seen on PRs I might not have looked at; is it pretty reliable at this point?

Also: I am thinking of turning off push statuses for Travis (for every branch but trunk), and just making it PR statuses.  Is anyone using the push status, or is it just making builds take twice as long?

-glyph


From glyph at twistedmatrix.com  Sat Aug 13 17:41:59 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 13 Aug 2016 16:41:59 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <CAMxb2itNWoOJFc4EdU_N0C9BqxyM9fvbxFrGtJ3PCxQNW8V9pw@mail.gmail.com>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
 <F68F3327-84C7-4FC8-8A31-204B8AF07966@twistedmatrix.com>
 <CAMxb2itNWoOJFc4EdU_N0C9BqxyM9fvbxFrGtJ3PCxQNW8V9pw@mail.gmail.com>
Message-ID: <506040D3-3C67-4AAA-9F6E-CDD95881A33E@twistedmatrix.com>


> On Aug 13, 2016, at 4:38 PM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> You needn't be concerned, Glyph, the asyncio reactor landed after I cut the release, so it's existence is currently a spoiler for season 16.5 of Twisted ;)
> 
Oops! :)

We should have an easier system for tracking this stuff.  In any case, looks like we are already teed up for an amazing 16.5 ;)

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160813/ef749070/attachment-0002.html>

From meejah at meejah.ca  Sat Aug 13 17:49:08 2016
From: meejah at meejah.ca (meejah)
Date: Sun, 14 Aug 2016 03:49:08 +0400
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net> (Amber
 Brown's message of "Sat, 13 Aug 2016 16:18:26 +1000")
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <86popcut57.fsf@atlantis.meejah.ca>


txtorcon runs all tests fine with 16.4.0pre1

Thanks! Lots of great additions, it looks like :)
meejah



From adi at roiban.ro  Sun Aug 14 04:38:39 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 14 Aug 2016 11:38:39 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI and
	Buildbot
Message-ID: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>

Hi,

We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.

If we want to reduce the waste of running push tests for a PR we
should check that the other repos from the Twisted organization are
doing the same.

We now have in twisted/twisted 9 jobs per each build ... and for each
push to a PR ... we run the tests for the push and for the PR merge...
so those are 18 jobs for a commit.

twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
jobs

.... so we are a bit over the limit of 5 jobs

---------

I have asked Travis-CI how we can improve the waiting time for
twisted/twisted jobs and for $6000 per year they can give us 15
concurrent jobs for the Twisted organization.

This will not give us access to a faster waiting line for the OSX jobs.

Also, I don't think that we can have twisted/twisted take priority
inside the organization.

If you think that we can raise $6000 per year for sponsoring our
Travis-CI and that is worth increasing the queue size I can follow up
with Travis-CI.

-------------

I have also asked Circle CI for a free ride on their OSX builders, but
it was put on hold as Glyph told me that Circe CI is slower than
Travis.

I have never used Circle CI. If you have a good experience with OSX on
Circle CI I can continue the phone interview with Circle Ci so that we
get the free access and see how it goes.

--------

There are multiple ways in which we can improve the time a test takes
to run on Travis-CI, but it will never be faster than buildbot with a
slave which is always active and ready to start a job in 1 second and
which already has 99% of the virtualev dependencies already installed.

AFAIK the main concern with buildot, is that the slaves are always
running so a malicious person could create a PR with some malware and
then all our slaves will execute that malware.

One way to mitigate this, is to use latent buildslaves and stop and
reset a slave after each build, but this will also slow the build and
lose the virtualenv ... which of docker based slave should not be a
problem... but if we want Windows latent slaves it might increase the
build time.

What do you say if we protect our buildslaves with a firewall which
only allows outgoing connections to buildmaster and github ... and
have the slaves running only on RAX + Azure to simplify the firewall
configuration?

Will a malicious person still be interested of exploiting the slaves?

I would be happy to help with buildbot configuration as I think that
for TDD, buildbot_try with slaves which are always connected and
virtualenv already created is the only acceptable CI system.

Cheers
-- 
Adi Roiban



From adi at roiban.ro  Sun Aug 14 04:38:45 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 14 Aug 2016 11:38:45 +0100
Subject: [Twisted-Python] making appveyor a required status
In-Reply-To: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>
References: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>
Message-ID: <CAFycZ9cjRXhan+-g6ewnvdd3iNvveHTPDeBo9d5w2Owbx6E2yA@mail.gmail.com>

On 14 August 2016 at 00:40, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> Just a bit of Github housekeeping: Appveyor has looked pretty stable (more than our other Windows builds, even).  I'm thinking about making it a required status for merging.  But I'm curious what other folks have seen on PRs I might not have looked at; is it pretty reliable at this point?

+1 for enforcing Windows tests via Appveyor

I think that Appveyor are providing an excellent service... much
faster than Travis-CI.

> Also: I am thinking of turning off push statuses for Travis (for every branch but trunk), and just making it PR statuses.  Is anyone using the push status, or is it just making builds take twice as long?

+1 for having Travis-CI run push tests only on trunk.

I will come back with more details in a separate email.


Cheers
-- 
Adi Roiban



From glyph at twistedmatrix.com  Sun Aug 14 17:10:13 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 14 Aug 2016 16:10:13 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
Message-ID: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>


> On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.
> 
> If we want to reduce the waste of running push tests for a PR we
> should check that the other repos from the Twisted organization are
> doing the same.
> 
> We now have in twisted/twisted 9 jobs per each build ... and for each
> push to a PR ... we run the tests for the push and for the PR merge...
> so those are 18 jobs for a commit.
> 
> twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
> build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
> jobs
> 
> .... so we are a bit over the limit of 5 jobs

Well, we're not "over the limit".  It's just 5 concurrent.  Most of the projects that I work on have more than 5 entries in their build matrix.

> I have asked Travis-CI how we can improve the waiting time for
> twisted/twisted jobs and for $6000 per year they can give us 15
> concurrent jobs for the Twisted organization.
> 
> This will not give us access to a faster waiting line for the OSX jobs.
> 
> Also, I don't think that we can have twisted/twisted take priority
> inside the organization.
> 
> If you think that we can raise $6000 per year for sponsoring our
> Travis-CI and that is worth increasing the queue size I can follow up
> with Travis-CI.

I think that this is definitely worth doing.

> I have also asked Circle CI for a free ride on their OSX builders, but
> it was put on hold as Glyph told me that Circe CI is slower than
> Travis.
> 
> I have never used Circle CI. If you have a good experience with OSX on
> Circle CI I can continue the phone interview with Circle Ci so that we
> get the free access and see how it goes.

The reason I'm opposed to Circle is simply that their idiom for creating a build matrix is less parallelism-friendly than Travis.  Travis is also more popular, so more contributors will be interested in participating.

> There are multiple ways in which we can improve the time a test takes
> to run on Travis-CI, but it will never be faster than buildbot with a
> slave which is always active and ready to start a job in 1 second and
> which already has 99% of the virtualev dependencies already installed.

There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).

> AFAIK the main concern with buildot, is that the slaves are always
> running so a malicious person could create a PR with some malware and
> then all our slaves will execute that malware.

Not only that, but the security between the buildmaster and the builders themselves is weak.  Now that we have the buildmaster on a dedicated machine, this is less of a concern, but it still has access to a few secrets (an SSL private key, github oauth tokens) which we would rather not leak if we can avoid it.

> One way to mitigate this, is to use latent buildslaves and stop and
> reset a slave after each build, but this will also slow the build and
> lose the virtualenv ... which of docker based slave should not be a
> problem... but if we want Windows latent slaves it might increase the
> build time.

It seems like fully latent slaves would be slower than Travis by a lot, since Travis is effectively doing the same thing, but they have a massive economy of scale with pre-warmed pre-booted VMs that they can keep in a gigantic pool and share between many different projects.

> What do you say if we protect our buildslaves with a firewall which
> only allows outgoing connections to buildmaster and github ... and
> have the slaves running only on RAX + Azure to simplify the firewall
> configuration?
> 
> Will a malicious person still be interested of exploiting the slaves?
> 
> I would be happy to help with buildbot configuration as I think that
> for TDD, buildbot_try with slaves which are always connected and
> virtualenv already created is the only acceptable CI system.


Personally, I just want to stop dealing with so much administrative overhead.  I am willing to wait for slightly longer build times in order to do that.  Using Travis for everything means we don't need to worry about these issues, or have these discussions; we can just focus on developing Twisted, and have sponsors throw money at the problem.  There's also the issue that deploying new things to the buildmaster will forever remain a separate permission level, but proposing changes to the travis configuration just means sending a PR.

There are things we could do to reduce both overhead and the risk impact further though.  For example, we could deploy buildbot as a docker container instead of as a VM, making it much faster to blow away the VM if we have a security problem, and limiting its reach even more.

On the plus side, it would be nice to be dogfooding Twisted as part of our CI system, and buildbot uses it heavily.  So while I think overall the tradeoffs are in favor of travis, I wouldn't say that I'm 100% in favor.  And _most_ of the things we used to need a buildbot config change for now are just tox environment changes; if we can move to 99% of the job configuration being in tox.ini as opposed to the buildmaster, that would eliminate another objection.

I'd also be interested in hearing from as many contributors as possible about this though.  The point of all of this is to make contributing easier and more enjoyable, so the majority opinion is kind of important here :).

-glyph




From JOHN at egh.com  Sun Aug 14 22:18:33 2016
From: JOHN at egh.com (John Santos)
Date: Mon, 15 Aug 2016 00:18:33 -0400
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <1160814212837.13220A-100000@joonya.egh.com>


Quick check with my app (Python 2.7) which uses twisted.conch and t.c.insults
pretty heavily shows no problems with Twisted 16.4.0.

I really appreciate the Twisted project's attention to backwards 
compatibility, though someday I will port this to Python 3 :-)

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539

From glyph at twistedmatrix.com  Sun Aug 14 22:37:54 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 14 Aug 2016 21:37:54 -0700
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <1160814212837.13220A-100000@joonya.egh.com>
References: <1160814212837.13220A-100000@joonya.egh.com>
Message-ID: <529A37C5-37FE-48BB-B816-79EA5987E753@twistedmatrix.com>


> On Aug 14, 2016, at 9:18 PM, John Santos <JOHN at egh.com> wrote:
> 
> 
> Quick check with my app (Python 2.7) which uses twisted.conch and t.c.insults
> pretty heavily shows no problems with Twisted 16.4.0.
> 
> I really appreciate the Twisted project's attention to backwards 
> compatibility, though someday I will port this to Python 3 :-)

Thanks a ton for testing the upgrade!

-g




From mithrandi at mithrandi.net  Mon Aug 15 03:43:03 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 15 Aug 2016 09:43:03 +0000
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 1 Announcement
In-Reply-To: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
References: <907706DC-77A4-4026-9190-7052B0CBE4E3@atleastfornow.net>
Message-ID: <CAMcKhMRWLoH3qt-J20GJS9Cb5i2XctOnuX0f=UaJ7hwrpfyqcQ@mail.gmail.com>

On Sat, 13 Aug 2016 at 08:19 Amber "Hawkie" Brown <hawkowl at atleastfornow.net>
wrote:

> In a rare Twisted release double feature right after 16.3.1, I bring you
> the first prerelease of Twisted 16.4.0.
>

FWIW my $DAYJOB test suite passes against 16.4.0rc1.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160815/fe849ad8/attachment-0002.html>

From mithrandi at mithrandi.net  Mon Aug 15 03:43:44 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 15 Aug 2016 09:43:44 +0000
Subject: [Twisted-Python] Twisted 16.3.1 Prerelease 1 Announcement
In-Reply-To: <FFF8521A-4ACF-48A5-AC53-BBA30BE098E9@atleastfornow.net>
References: <FFF8521A-4ACF-48A5-AC53-BBA30BE098E9@atleastfornow.net>
Message-ID: <CAMcKhMRbeg5fRq=soGxZ6WbPgbJVwtjpVLLW4W8E3rpjr9o8+A@mail.gmail.com>

On Wed, 10 Aug 2016 at 14:48 Amber "Hawkie" Brown <hawkowl at atleastfornow.net>
wrote:

> I've just uploaded the first prerelease of Twisted 16.3.1, a security &
> critical bug fix release of the 16.3 series. It contains:
>

FWIW my $DAYJOB test suite passes against 16.3.1rc1.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160815/a703ad8b/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Aug 15 04:55:12 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 15 Aug 2016 06:55:12 -0400
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
Message-ID: <CAEeXt4N+Za2B9M_260ymz0R5c3wGRJ2yyi9xVDScxzp+Ojr4Pw@mail.gmail.com>

On Sun, Aug 14, 2016 at 7:10 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> >
> > If you think that we can raise $6000 per year for sponsoring our
> > Travis-CI and that is worth increasing the queue size I can follow up
> > with Travis-CI.
>
> I think that this is definitely worth doing.
>

How might we guess this would compare to $6000/year development effort
spent towards  speeding up the test suite?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160815/d3c5ecd1/attachment-0002.html>

From adi at roiban.ro  Mon Aug 15 07:06:58 2016
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 15 Aug 2016 14:06:58 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
Message-ID: <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>

On 15 August 2016 at 00:10, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
>> On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
>>
>> Hi,
>>
>> We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.
>>
>> If we want to reduce the waste of running push tests for a PR we
>> should check that the other repos from the Twisted organization are
>> doing the same.
>>
>> We now have in twisted/twisted 9 jobs per each build ... and for each
>> push to a PR ... we run the tests for the push and for the PR merge...
>> so those are 18 jobs for a commit.
>>
>> twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
>> build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
>> jobs
>>
>> .... so we are a bit over the limit of 5 jobs
>
> Well, we're not "over the limit".  It's just 5 concurrent.  Most of the projects that I work on have more than 5 entries in their build matrix.
>
>> I have asked Travis-CI how we can improve the waiting time for
>> twisted/twisted jobs and for $6000 per year they can give us 15
>> concurrent jobs for the Twisted organization.
>>
>> This will not give us access to a faster waiting line for the OSX jobs.
>>
>> Also, I don't think that we can have twisted/twisted take priority
>> inside the organization.
>>
>> If you think that we can raise $6000 per year for sponsoring our
>> Travis-CI and that is worth increasing the queue size I can follow up
>> with Travis-CI.
>
> I think that this is definitely worth doing.

Do we have the budget for this or we need to do a fundraising drive?
Can The Software Freedom Conservancy handle the payment for Travis-CI?

Even if we speed up the build time, with 5 jobs we would still have
only 0.5 concurrent complete builds ... or even less.
So I think that increasing to 15 jobs would be needed anyway.

>> I have also asked Circle CI for a free ride on their OSX builders, but
>> it was put on hold as Glyph told me that Circe CI is slower than
>> Travis.
>>
>> I have never used Circle CI. If you have a good experience with OSX on
>> Circle CI I can continue the phone interview with Circle Ci so that we
>> get the free access and see how it goes.
>
> The reason I'm opposed to Circle is simply that their idiom for creating a build matrix is less parallelism-friendly than Travis.  Travis is also more popular, so more contributors will be interested in participating.
>

OK. No problem. Thanks for the feedback.
I also would like to have less providers as we already have
buildbot/travis/appveyor :)

My push is for a single provider -> buildbot ... but I am aware that
it might not be feasible

>> There are multiple ways in which we can improve the time a test takes
>> to run on Travis-CI, but it will never be faster than buildbot with a
>> slave which is always active and ready to start a job in 1 second and
>> which already has 99% of the virtualev dependencies already installed.
>
> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).

Hm... pre-built dockers also takes effort to keep them updated... and
then we will have a KVM VM starting inside a docker in which we run
the tests...

...and we would not be able to test the inotify part.

... and if something will go wrong and  we need debugging on the host
I am not sure how fun is to debug this.

>> AFAIK the main concern with buildot, is that the slaves are always
>> running so a malicious person could create a PR with some malware and
>> then all our slaves will execute that malware.
>
> Not only that, but the security between the buildmaster and the builders themselves is weak.  Now that we have the buildmaster on a dedicated machine, this is less of a concern, but it still has access to a few secrets (an SSL private key, github oauth tokens) which we would rather not leak if we can avoid it.

If we have all slaved in RAX and Azure I hope that communication
between slaves and buildmaster is secure.

github token is only for publishing the commit status ... and I hope
that we can make that token public :)

I have little experience with running public infrastructures for open
source projects... but are there that many malicious people which
would want to exploit a github commit status only token?

>> One way to mitigate this, is to use latent buildslaves and stop and
>> reset a slave after each build, but this will also slow the build and
>> lose the virtualenv ... which of docker based slave should not be a
>> problem... but if we want Windows latent slaves it might increase the
>> build time.
>
> It seems like fully latent slaves would be slower than Travis by a lot, since Travis is effectively doing the same thing, but they have a massive economy of scale with pre-warmed pre-booted VMs that they can keep in a gigantic pool and share between many different projects.

Yes... without pre-warmed VMs, latent slaves in the cloud might be slow.

I don't have experience with Azure/Amazon/Rackspace VM and their
snapshot capabilities... I have just recently start using Azure and
Rackspace... and I saw that rackspace vm or image creation is very
slow.

I am using Virtualbox on my local system and starting a VM from a
saved state and restoring a state is fast... and I was expecting that
I can get the same experience from a cloud VM.

>> What do you say if we protect our buildslaves with a firewall which
>> only allows outgoing connections to buildmaster and github ... and
>> have the slaves running only on RAX + Azure to simplify the firewall
>> configuration?
>>
>> Will a malicious person still be interested of exploiting the slaves?
>>
>> I would be happy to help with buildbot configuration as I think that
>> for TDD, buildbot_try with slaves which are always connected and
>> virtualenv already created is the only acceptable CI system.
>
>
> Personally, I just want to stop dealing with so much administrative overhead.  I am willing to wait for slightly longer build times in order to do that.  Using Travis for everything means we don't need to worry about these issues, or have these discussions; we can just focus on developing Twisted, and have sponsors throw money at the problem.  There's also the issue that deploying new things to the buildmaster will forever remain a separate permission level, but proposing changes to the travis configuration just means sending a PR.

I also don't like to do administrative work and just work on Twisted.

But I think that with or without buildbot we still have a problem with Travis-CI

The OSX build is slow (12 minutes) and there is not much we can do about it.

The OSX build on Travis-CI is now green and soon we might want to enforce it.


> There are things we could do to reduce both overhead and the risk impact further though.  For example, we could deploy buildbot as a docker container instead of as a VM, making it much faster to blow away the VM if we have a security problem, and limiting its reach even more.
>
> On the plus side, it would be nice to be dogfooding Twisted as part of our CI system, and buildbot uses it heavily.  So while I think overall the tradeoffs are in favor of travis, I wouldn't say that I'm 100% in favor.  And _most_ of the things we used to need a buildbot config change for now are just tox environment changes; if we can move to 99% of the job configuration being in tox.ini as opposed to the buildmaster, that would eliminate another objection.

We are now pretty close to running all buildbot jobs using only tox.

I am happy to work for having a simple buildbot builder configuration
which will always run the tests based on the branch configuration.

I think that the only thing left is the bdist_wheel job
(https://twistedmatrix.com/trac/ticket/8676) but with the latest
changes in the appveyor script, this should be solved.

> I'd also be interested in hearing from as many contributors as possible about this though.  The point of all of this is to make contributing easier and more enjoyable, so the majority opinion is kind of important here :).

Working with Travis-CI, but also current buildbot is not an enjoyable
experience.

I am using Linux as my dev system, and if I want to fix an OSX or
Windows issue I don't want to switch my working environment to run the
tests in a local VM.

If I use the current configuration, even if I want to do TDD for a
specific tests on a specific OS (OSX or Windows) I will have to commit
 and push each step in the TDD process and have the test executed
across all systems... which is a waste of resources and my time.

For my project I am using buildbot_try and I can target a specific
builder and a specific test using `buildbot_try --builder SOMETHING
--properties=testcase=TEST_RUN_ARGS  ... and with a little change in
buildbot try I can wait for results and get them printed in the
console

I would enjoy using something similar for when working for Twisted.

Maybe Travis-CI already has this capability ... or are planning to add
it soon... but I was not able to find it.

-----

but my biggest problem with Twisted is still the huge wait times for
the review queue ... at least for my tickets :)

I would enjoy working for a branch is is reviewed in 1 or 2 days.

-- 
Adi Roiban



From glyph at twistedmatrix.com  Mon Aug 15 14:38:03 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Aug 2016 13:38:03 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
Message-ID: <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>


> On Aug 15, 2016, at 6:06 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 15 August 2016 at 00:10, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 
>>> On Aug 14, 2016, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
>>> 
>>> Hi,
>>> 
>>> We now have 5 concurrent jobs on Travis-CI for the whole Twisted organization.
>>> 
>>> If we want to reduce the waste of running push tests for a PR we
>>> should check that the other repos from the Twisted organization are
>>> doing the same.
>>> 
>>> We now have in twisted/twisted 9 jobs per each build ... and for each
>>> push to a PR ... we run the tests for the push and for the PR merge...
>>> so those are 18 jobs for a commit.
>>> 
>>> twisted/mantisa has 7 jobs per build, twisted/epsilon 3 jobs per
>>> build, twisted/nevow 14 jobs, twisted/axiom 6 jobs, twisted/txmongo 16
>>> jobs
>>> 
>>> .... so we are a bit over the limit of 5 jobs
>> 
>> Well, we're not "over the limit".  It's just 5 concurrent.  Most of the projects that I work on have more than 5 entries in their build matrix.
>> 
>>> I have asked Travis-CI how we can improve the waiting time for
>>> twisted/twisted jobs and for $6000 per year they can give us 15
>>> concurrent jobs for the Twisted organization.
>>> 
>>> This will not give us access to a faster waiting line for the OSX jobs.
>>> 
>>> Also, I don't think that we can have twisted/twisted take priority
>>> inside the organization.
>>> 
>>> If you think that we can raise $6000 per year for sponsoring our
>>> Travis-CI and that is worth increasing the queue size I can follow up
>>> with Travis-CI.
>> 
>> I think that this is definitely worth doing.
> 
> Do we have the budget for this or we need to do a fundraising drive?
> Can The Software Freedom Conservancy handle the payment for Travis-CI?

We have almost no budget, so we would definitely need to raise money.  OTOH sometime soon we're going to run out of money just to keep the lights on on our tummy.com server, so we probably need to do that anyway :).

> Even if we speed up the build time, with 5 jobs we would still have
> only 0.5 concurrent complete builds ... or even less.
> So I think that increasing to 15 jobs would be needed anyway.

Faster is better, of course, but I don't see buildbot completing all its builds that much faster than Travis right now, so I'm not sure why you think this is so critical?

>>> I have also asked Circle CI for a free ride on their OSX builders, but
>>> it was put on hold as Glyph told me that Circe CI is slower than
>>> Travis.
>>> 
>>> I have never used Circle CI. If you have a good experience with OSX on
>>> Circle CI I can continue the phone interview with Circle Ci so that we
>>> get the free access and see how it goes.
>> 
>> The reason I'm opposed to Circle is simply that their idiom for creating a build matrix is less parallelism-friendly than Travis.  Travis is also more popular, so more contributors will be interested in participating.
>> 
> 
> OK. No problem. Thanks for the feedback.
> I also would like to have less providers as we already have
> buildbot/travis/appveyor :)
> 
> My push is for a single provider -> buildbot ... but I am aware that
> it might not be feasible

Yeah I just don't think buildbot is hardened enough for this sort of thing (although I would be happy to be proven wrong).

>>> There are multiple ways in which we can improve the time a test takes
>>> to run on Travis-CI, but it will never be faster than buildbot with a
>>> slave which is always active and ready to start a job in 1 second and
>>> which already has 99% of the virtualev dependencies already installed.
>> 
>> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).
> 
> Hm... pre-built dockers also takes effort to keep them updated... and
> then we will have a KVM VM starting inside a docker in which we run
> the tests...
> 
> ...and we would not be able to test the inotify part.

Not true:

We can have one non-containerized builder (sudo: true) for testing inotify; no need for KVM-in-Docker (also you can't do that without a privileged container, so, good thing)
Docker has multiple storage backends, and only one (overlayfs) doesn't work with inotify
It's work to keep buildbot updated too :)

> ... and if something will go wrong and  we need debugging on the host
> I am not sure how fun is to debug this.
> 
>>> AFAIK the main concern with buildot, is that the slaves are always
>>> running so a malicious person could create a PR with some malware and
>>> then all our slaves will execute that malware.
>> 
>> Not only that, but the security between the buildmaster and the builders themselves is weak.  Now that we have the buildmaster on a dedicated machine, this is less of a concern, but it still has access to a few secrets (an SSL private key, github oauth tokens) which we would rather not leak if we can avoid it.
> 
> If we have all slaved in RAX and Azure I hope that communication
> between slaves and buildmaster is secure.

https://www.agwa.name/blog/post/cloudflare_ssl_added_and_removed_here

> github token is only for publishing the commit status ... and I hope
> that we can make that token public :)

I am pretty sure that if we do that, Github will revoke it.  Part of the deal with OAuth tokens is that you keep them secret.

> I have little experience with running public infrastructures for open
> source projects... but are there that many malicious people which
> would want to exploit a github commit status only token?

I don't know, because nobody I am aware of is foolish enough to make this public :-).  But spammers will find ANY open access point to shove spam links into and start exploiting it, and commit statuses are such a place.  Even if you forget about spammers; this is a great way to get a high-value target like a sysadmin or infrastructure developer to click on a malicious link.

>>> One way to mitigate this, is to use latent buildslaves and stop and
>>> reset a slave after each build, but this will also slow the build and
>>> lose the virtualenv ... which of docker based slave should not be a
>>> problem... but if we want Windows latent slaves it might increase the
>>> build time.
>> 
>> It seems like fully latent slaves would be slower than Travis by a lot, since Travis is effectively doing the same thing, but they have a massive economy of scale with pre-warmed pre-booted VMs that they can keep in a gigantic pool and share between many different projects.
> 
> Yes... without pre-warmed VMs, latent slaves in the cloud might be slow.
> 
> I don't have experience with Azure/Amazon/Rackspace VM and their
> snapshot capabilities... I have just recently start using Azure and
> Rackspace... and I saw that rackspace vm or image creation is very
> slow.
> 
> I am using Virtualbox on my local system and starting a VM from a
> saved state and restoring a state is fast... and I was expecting that
> I can get the same experience from a cloud VM.

Booting from a cached image is still booting; it's not the same as saving a suspended VM.  (I don't think you can do this with most cloud providers due to the problems it would create for networking, but despite working at a cloud provider I'm not really an expert in that layer of the stack...)

>>> What do you say if we protect our buildslaves with a firewall which
>>> only allows outgoing connections to buildmaster and github ... and
>>> have the slaves running only on RAX + Azure to simplify the firewall
>>> configuration?
>>> 
>>> Will a malicious person still be interested of exploiting the slaves?
>>> 
>>> I would be happy to help with buildbot configuration as I think that
>>> for TDD, buildbot_try with slaves which are always connected and
>>> virtualenv already created is the only acceptable CI system.
>> 
>> 
>> Personally, I just want to stop dealing with so much administrative overhead.  I am willing to wait for slightly longer build times in order to do that.  Using Travis for everything means we don't need to worry about these issues, or have these discussions; we can just focus on developing Twisted, and have sponsors throw money at the problem.  There's also the issue that deploying new things to the buildmaster will forever remain a separate permission level, but proposing changes to the travis configuration just means sending a PR.
> 
> I also don't like to do administrative work and just work on Twisted.
> 
> But I think that with or without buildbot we still have a problem with Travis-CI
> 
> The OSX build is slow (12 minutes) and there is not much we can do about it.

The OS X build on buildbot is 9 minutes: https://buildbot.twistedmatrix.com/builders/osx10.10-py2.7/builds/1418 which sort of reinforces my point: this is a lot of administrative energy to spend on a 25% speedup.

> The OSX build on Travis-CI is now green and soon we might want to enforce it.

Well this is good news at least!

>> There are things we could do to reduce both overhead and the risk impact further though.  For example, we could deploy buildbot as a docker container instead of as a VM, making it much faster to blow away the VM if we have a security problem, and limiting its reach even more.
>> 
>> On the plus side, it would be nice to be dogfooding Twisted as part of our CI system, and buildbot uses it heavily.  So while I think overall the tradeoffs are in favor of travis, I wouldn't say that I'm 100% in favor.  And _most_ of the things we used to need a buildbot config change for now are just tox environment changes; if we can move to 99% of the job configuration being in tox.ini as opposed to the buildmaster, that would eliminate another objection.
> 
> We are now pretty close to running all buildbot jobs using only tox.

Awesome!

> I am happy to work for having a simple buildbot builder configuration
> which will always run the tests based on the branch configuration.
> 
> I think that the only thing left is the bdist_wheel job
> (https://twistedmatrix.com/trac/ticket/8676) but with the latest
> changes in the appveyor script, this should be solved.

Yay!

As we're working through the parts of this process where we don't have total agreement it is REALLY nice to see all the parts where there _is_ consensus moving forward so fast :).  And I should be clear: I'm doing basically none of this work.  Thank you Adi, and also everyone else helping with the CI maintenance!

>> I'd also be interested in hearing from as many contributors as possible about this though.  The point of all of this is to make contributing easier and more enjoyable, so the majority opinion is kind of important here :).
> 
> Working with Travis-CI, but also current buildbot is not an enjoyable
> experience.
> 
> I am using Linux as my dev system, and if I want to fix an OSX or
> Windows issue I don't want to switch my working environment to run the
> tests in a local VM.

One other solution to this would be to get verified fakes.

> If I use the current configuration, even if I want to do TDD for a
> specific tests on a specific OS (OSX or Windows) I will have to commit
> and push each step in the TDD process and have the test executed
> across all systems... which is a waste of resources and my time.
> 
> For my project I am using buildbot_try and I can target a specific
> builder and a specific test using `buildbot_try --builder SOMETHING
> --properties=testcase=TEST_RUN_ARGS  ... and with a little change in
> buildbot try I can wait for results and get them printed in the
> console
> 
> I would enjoy using something similar for when working for Twisted.
> 
> Maybe Travis-CI already has this capability ... or are planning to add
> it soon... but I was not able to find it.

The way that you do this with Travis is you open a PR and you watch its build status.  If you want to see individual test results quickly you can edit the test matrix on your branch to just run the part you want.  There's command-line support for this in 'travis monitor' for watching for the build to finish on the command line.  It's not quite as nice as 'buildbot_try' but it can get the job done.

> but my biggest problem with Twisted is still the huge wait times for
> the review queue ... at least for my tickets :)
> 
> I would enjoy working for a branch is is reviewed in 1 or 2 days.


I wish we had a graph of review latency, because it certainly _feels_ like review queue times are going down with all the activity we've had in the last couple of months.  But we should keep making progress...

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160815/b50729a0/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Aug 15 14:38:24 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Aug 2016 13:38:24 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAEeXt4N+Za2B9M_260ymz0R5c3wGRJ2yyi9xVDScxzp+Ojr4Pw@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAEeXt4N+Za2B9M_260ymz0R5c3wGRJ2yyi9xVDScxzp+Ojr4Pw@mail.gmail.com>
Message-ID: <4EF86D73-4AC6-4831-95F0-FB34A0616932@twistedmatrix.com>


> On Aug 15, 2016, at 3:55 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> How might we guess this would compare to $6000/year development effort spent towards  speeding up the test suite?

An excellent point :).

Although both are somewhat moot if we don't do some fundraising...

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160815/fee0d2be/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Aug 15 15:11:10 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 15 Aug 2016 17:11:10 -0400
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
Message-ID: <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>

On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

There's a lot that we can do to make Travis almost that fast, with
pre-built Docker images and cached dependencies.  We haven't done much in
the way of aggressive optimization yet.  As recently discussed we're still
doing twice as many builds as we need to just because we've misconfigured
branch / push builds :).


Hm... pre-built dockers also takes effort to keep them updated... and
then we will have a KVM VM starting inside a docker in which we run
the tests...

...and we would not be able to test the inotify part.


Not true:
>
>
>    1. We can have one non-containerized builder (sudo: true) for testing
>    inotify; no need for KVM-in-Docker (also you can't do that without a
>    privileged container, so, good thing)
>
> I'm curious about the details of how such a configuration would work.
Since there is only one travis configuration per repository (well, per
branch, technically, don't think that makes a difference here) and the sudo
configuration is global (isn't it?), I always though either a project had
to pick sudo or not sudo and you couldn't have a mix of builds with each.

(Wonky quoting thanks to gmail's wonky web interface, sorry)

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160815/e78318db/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Aug 15 17:03:12 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 15 Aug 2016 16:03:12 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
Message-ID: <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>


> On Aug 15, 2016, at 2:11 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>>> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).
>> 
>> Hm... pre-built dockers also takes effort to keep them updated... and
>> then we will have a KVM VM starting inside a docker in which we run
>> the tests...
>> 
>> ...and we would not be able to test the inotify part.
> 
> Not true:
> 
> We can have one non-containerized builder (sudo: true) for testing inotify; no need for KVM-in-Docker (also you can't do that without a privileged container, so, good thing)
> I'm curious about the details of how such a configuration would work.  Since there is only one travis configuration per repository (well, per branch, technically, don't think that makes a difference here) and the sudo configuration is global (isn't it?), I always though either a project had to pick sudo or not sudo and you couldn't have a mix of builds with each.

I had just assumed that it would be per-matrix-entry, and while it looks like I'm correct, it's much less obvious than I had thought.  If you look at the second example code block under this heading:

https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix

you'll see that one of the matrix/include entries has a 'sudo: required' tag, which means "non-container-based" please.  Presumably you can mix those.

The docs on "migrating to the container-based infrastructure" do make it sound like this is impossible though, and this isn't nearly as clear as I'd like, so it would be nice to actually experiment and see what happens...

> (Wonky quoting thanks to gmail's wonky web interface, sorry)

It wasn't too bad - certainly well-worth suffering through for your contribution :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160815/3326994e/attachment-0002.html>

From hawkowl at atleastfornow.net  Mon Aug 15 19:40:18 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 16 Aug 2016 11:40:18 +1000
Subject: [Twisted-Python] Twisted 16.3.1 Release Announcement
Message-ID: <FDE31F52-4984-4DDC-AD2D-125B2E9D94F7@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.3.1.

This is a bug fix & security fix release, and is recommended for all users of Twisted. The fixes are:

- A bugfix for a HTTP/2 edge case,
- Fix for CVE-2008-7317 (generating potentially guessable HTTP session identifiers)
- Fix for CVE-2008-7318 (sending secure session cookies over insecured connections)
- Fix for CVE-2016-1000111 (http://httpoxy.org/ <http://httpoxy.org/>)

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.3.1/NEWS <https://github.com/twisted/twisted/blob/twisted-16.3.1/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160816/93d19fe2/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160816/93d19fe2/attachment.sig>

From burak.arslan at arskom.com.tr  Tue Aug 16 01:19:17 2016
From: burak.arslan at arskom.com.tr (Burak Arslan)
Date: Tue, 16 Aug 2016 10:19:17 +0300
Subject: [Twisted-Python] reading multipart/form-data headers
In-Reply-To: <2031264f-6e97-7a99-fb99-216cdfe0bf17@arskom.com.tr>
References: <3eb98b8d-be58-190e-2210-a71e21f1630b@arskom.com.tr>
 <8861561D-F7C8-41D5-80E3-79E216AD29D1@twistedmatrix.com>
 <CAFycZ9esWiFYu=k2wo9_Asu4quur3_WLCU3LVrNh2k05tzbxDA@mail.gmail.com>
 <2031264f-6e97-7a99-fb99-216cdfe0bf17@arskom.com.tr>
Message-ID: <433f48db-3d56-8fca-94a7-78b23736154f@arskom.com.tr>



On 08/12/16 12:58, Burak Arslan wrote:
> Do you think I can get away
> with relying on mmap here?

So I'll go with the usual "don't touch it from the reactor thread" and I
guess I'll be good :)

Cheers,
Burak



From hawkowl at atleastfornow.net  Tue Aug 16 01:20:24 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 16 Aug 2016 17:20:24 +1000
Subject: [Twisted-Python] [BACKWARDS INCOMPATIBILITY] Making
	twisted.python.dist3 private
Message-ID: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>

Hi everyone,

I am moving the dist3 from a whitelist to a blacklist, and that requires changing the whole module's interface, which shouldn't be public anyway.

You can get the branch here: https://github.com/twisted/twisted/pull/501 , it'll be available for a further week.

The only concern for this code was depgraph, which we are now at the point of not needing, as we're getting to leaf modules and not core modules.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160816/ea023bbf/attachment.sig>

From adi at roiban.ro  Tue Aug 16 01:25:23 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 16 Aug 2016 08:25:23 +0100
Subject: [Twisted-Python] [BACKWARDS INCOMPATIBILITY] Making
 twisted.python.dist3 private
In-Reply-To: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>
References: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>
Message-ID: <CAFycZ9ch47UwghdirPWJEgywB2tX--jBYWMfjpRmaN+tXkMNSA@mail.gmail.com>

+1 for the change.

Thanks!

On 16 August 2016 at 08:20, Amber "Hawkie" Brown
<hawkowl at atleastfornow.net> wrote:
> Hi everyone,
>
> I am moving the dist3 from a whitelist to a blacklist, and that requires changing the whole module's interface, which shouldn't be public anyway.
>
> You can get the branch here: https://github.com/twisted/twisted/pull/501 , it'll be available for a further week.
>
> The only concern for this code was depgraph, which we are now at the point of not needing, as we're getting to leaf modules and not core modules.
>
> - Amber
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban



From exarkun at twistedmatrix.com  Tue Aug 16 04:06:28 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 16 Aug 2016 06:06:28 -0400
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
Message-ID: <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>

On Mon, Aug 15, 2016 at 7:03 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Aug 15, 2016, at 2:11 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
> There's a lot that we can do to make Travis almost that fast, with
> pre-built Docker images and cached dependencies.  We haven't done much in
> the way of aggressive optimization yet.  As recently discussed we're still
> doing twice as many builds as we need to just because we've misconfigured
> branch / push builds :).
>
>
> Hm... pre-built dockers also takes effort to keep them updated... and
> then we will have a KVM VM starting inside a docker in which we run
> the tests...
>
> ...and we would not be able to test the inotify part.
>
>
> Not true:
>>
>>
>>    1. We can have one non-containerized builder (sudo: true) for testing
>>    inotify; no need for KVM-in-Docker (also you can't do that without a
>>    privileged container, so, good thing)
>>
>> I'm curious about the details of how such a configuration would work.
> Since there is only one travis configuration per repository (well, per
> branch, technically, don't think that makes a difference here) and the sudo
> configuration is global (isn't it?), I always though either a project had
> to pick sudo or not sudo and you couldn't have a mix of builds with each.
>
>
> I had just assumed that it would be per-matrix-entry, and while it looks
> like I'm correct, it's much less obvious than I had thought.  If you look
> at the second example code block under this heading:
>
> https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix
>
> you'll see that one of the matrix/include entries has a 'sudo: required'
> tag, which means "non-container-based" please.  Presumably you can mix
> those.
>

Ah, neat.  I hope that works (and wish I'd noticed that example a couple
months ago).

Jean-Paul


>
> The docs on "migrating to the container-based infrastructure" do make it
> sound like this is impossible though, and this isn't nearly as clear as I'd
> like, so it would be nice to actually experiment and see what happens...
>
> (Wonky quoting thanks to gmail's wonky web interface, sorry)
>
>
> It wasn't too bad - certainly well-worth suffering through for your
> contribution :).
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160816/5d15c2b8/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Aug 16 13:38:07 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 16 Aug 2016 12:38:07 -0700
Subject: [Twisted-Python] [BACKWARDS INCOMPATIBILITY] Making
	twisted.python.dist3 private
In-Reply-To: <CAFycZ9ch47UwghdirPWJEgywB2tX--jBYWMfjpRmaN+tXkMNSA@mail.gmail.com>
References: <B0DED637-0454-4120-90A0-6BFE4C54AA4A@atleastfornow.net>
 <CAFycZ9ch47UwghdirPWJEgywB2tX--jBYWMfjpRmaN+tXkMNSA@mail.gmail.com>
Message-ID: <8C4EAF46-5C4C-4FDD-9C02-93CA0EB69822@twistedmatrix.com>

+1 from me as well.

It's just weird that we ever made that module public in the first place.
This change will make a lot harder to accidentally add some new code and make it python2 only (which we should not be doing at this point!).
It will be encouraging progress-wise to visibly see this list shrink, rather than an indeterminate-sized list grow.

> On Aug 16, 2016, at 12:25 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> +1 for the change.
> 
> Thanks!
> 
> On 16 August 2016 at 08:20, Amber "Hawkie" Brown
> <hawkowl at atleastfornow.net> wrote:
>> Hi everyone,
>> 
>> I am moving the dist3 from a whitelist to a blacklist, and that requires changing the whole module's interface, which shouldn't be public anyway.
>> 
>> You can get the branch here: https://github.com/twisted/twisted/pull/501 , it'll be available for a further week.
>> 
>> The only concern for this code was depgraph, which we are now at the point of not needing, as we're getting to leaf modules and not core modules.
>> 
>> - Amber
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
> 
> 
> 
> -- 
> Adi Roiban
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160816/8ea5fc1e/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Aug 16 13:38:49 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 16 Aug 2016 12:38:49 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
Message-ID: <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>


> On Aug 16, 2016, at 3:06 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Aug 15, 2016 at 7:03 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Aug 15, 2016, at 2:11 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Mon, Aug 15, 2016 at 4:38 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>>>> There's a lot that we can do to make Travis almost that fast, with pre-built Docker images and cached dependencies.  We haven't done much in the way of aggressive optimization yet.  As recently discussed we're still doing twice as many builds as we need to just because we've misconfigured branch / push builds :).
>>> 
>>> Hm... pre-built dockers also takes effort to keep them updated... and
>>> then we will have a KVM VM starting inside a docker in which we run
>>> the tests...
>>> 
>>> ...and we would not be able to test the inotify part.
>> 
>> Not true:
>> 
>> We can have one non-containerized builder (sudo: true) for testing inotify; no need for KVM-in-Docker (also you can't do that without a privileged container, so, good thing)
>> I'm curious about the details of how such a configuration would work.  Since there is only one travis configuration per repository (well, per branch, technically, don't think that makes a difference here) and the sudo configuration is global (isn't it?), I always though either a project had to pick sudo or not sudo and you couldn't have a mix of builds with each.
> 
> I had just assumed that it would be per-matrix-entry, and while it looks like I'm correct, it's much less obvious than I had thought.  If you look at the second example code block under this heading:
> 
> https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix <https://docs.travis-ci.com/user/multi-os/#Example-Multi-OS-Build-Matrix>
> 
> you'll see that one of the matrix/include entries has a 'sudo: required' tag, which means "non-container-based" please.  Presumably you can mix those.
> 
> Ah, neat.  I hope that works (and wish I'd noticed that example a couple months ago).
> 

I strongly suspect it will, since you can have OS X and Linux builds in the same matrix, and OS X builds are by definition not container based :).

> Jean-Paul
>  
> 
> The docs on "migrating to the container-based infrastructure" do make it sound like this is impossible though, and this isn't nearly as clear as I'd like, so it would be nice to actually experiment and see what happens...
> 
>> (Wonky quoting thanks to gmail's wonky web interface, sorry)
> 
> It wasn't too bad - certainly well-worth suffering through for your contribution :).
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160816/d7d86e00/attachment-0002.html>

From adi at roiban.ro  Wed Aug 17 09:07:17 2016
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 17 Aug 2016 16:07:17 +0100
Subject: [Twisted-Python] making appveyor a required status
In-Reply-To: <CAFycZ9cjRXhan+-g6ewnvdd3iNvveHTPDeBo9d5w2Owbx6E2yA@mail.gmail.com>
References: <87A3CB76-6BBB-472A-BB76-95603A647669@twistedmatrix.com>
 <CAFycZ9cjRXhan+-g6ewnvdd3iNvveHTPDeBo9d5w2Owbx6E2yA@mail.gmail.com>
Message-ID: <CAFycZ9e1JjpUG9BKa_BPTQLiYJN-awYw1j+OFbNi4M=9x=bSGg@mail.gmail.com>

On 14 August 2016 at 11:38, Adi Roiban <adi at roiban.ro> wrote:
> On 14 August 2016 at 00:40, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> Just a bit of Github housekeeping: Appveyor has looked pretty stable (more than our other Windows builds, even).  I'm thinking about making it a required status for merging.  But I'm curious what other folks have seen on PRs I might not have looked at; is it pretty reliable at this point?

Appveyor Twisted jobs are still running under my account. There is a
ticket to fix this [1] ... but I don't know how to create organization
accounts  ... other than sharing the same username and password

As the tests are executed under a private account, I am the only
person who can trigger a rebuild... and I have just saw Appveyor tests
failing and then passing on a re-run with the same code.


[1] https://twistedmatrix.com/trac/ticket/8708
-- 
Adi Roiban



From steve.morin at gmail.com  Wed Aug 17 16:43:57 2016
From: steve.morin at gmail.com (Steve Morin)
Date: Wed, 17 Aug 2016 15:43:57 -0700
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
Message-ID: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>

Twisted Community

Problem: How do you determine the buffer size of a transport, to know how
much data is waiting to be transmitted from using transport.write?

Wait! You're going to say: use the Producer Consumer API (
http://twistedmatrix.com/documents/current/core/howto/producers.html )

To do what: So that instead of using back pressure I can check the buffer
and when it's "too big/full" can decide to do something to the transport I
am writing to:

Slow transport handling options:

- Buffer to disk instead of memory
- Kill the transport
- Decide to skip sending some data
- Send an error or message to the transport I am writing to
- Reduce the resolution, increase the compression (things like video or
audio)

Why not use back pressure?: Some use-cases and some protocols this doesn't
make sense.

Examples:
- You're sending video and if the receiver can't keep up you want to
downgrade or upgrade the quality of the video, but if you don't know if you
can't tell how much it buffering.
- You're receiving from one connection and then broadcasting what you
received to multiple clients and you want to handle it by sending an error
to a client that doesn't keep up
- You're sending a real-time protocol and want to skip sending some data
that's no longer relevant if the buffer is too slow.

On a server what are the consequences:
Too much buffering in many transport write buffer can cause a server to
fail.  I don't know how to keep track of this to proactively without access
to the buffer sizes.  Resolutions can then be to, not accept new
connections when memory pressure is too high, kill connections with the
weakest/slowest clients or have a protocol that can have client switch
connections to new servers when instructed to spread out the load.
1) I would like to hear on how people would solve this sort of problem in
Twisted for a server?
2) I would like to hear people opinions on this in general.

Tobias Oberstein - BCC'ed you on this email because you seems to have
tackled similar problems (based on the mailing list) and would really love
to get your take on this too.

Glyph and Jean-Paul, you're also big on those threads so any opinions you
have would be appreciated as well.

Some of my background research

* http://twistedmatrix.com/pipermail/twisted-python/2015-January/029064.html
* Later but good in the chain:
http://twistedmatrix.com/pipermail/twisted-python/2015-January/029071.html
  * Twisted receiving buffers swamped?
  * Summary: Great thread but runs into a tangent for a while and picks up
good at the end again discussing producer again and the need for
backpressure
  * Other:
    * http://crossbar.io/
    * http://tavendo.com/
  * Scenario: "Twisted is reading off the TCP stack from the kernel and
buffering in userspace faster than the echo server is pushing out stuff to
the TCP stack into the kernel. Hence, no TCP backpressure results, netperf
happily sends more and more, and the memory of the Twisted process runs
away."
  * Confirmed: Data isn't Buffered in "userspace inside Twisted, and before
data is handled by the app in dataReceived."
*
https://twistedmatrix.com/pipermail/twisted-python/2010-September/022900.html
  * How to cap the buffering size of data to be sent in Protocol class
  * Summary: Same issue, very short no good info
* https://twistedmatrix.com/pipermail/twisted-python/2012-March/025416.html
  * Limit on transport.write
  * Summary: Similar issue, very short no good info, glyph confirms that
transport.write buffers everything sent to it.
*
https://twistedmatrix.com/pipermail/twisted-python/2012-February/025215.html
  * pushing out same message on 100k TCPs
  * Summary: Interesting discussion but different issue - interesting aside
about irc spanning trees for a large broadcasts
* http://twistedmatrix.com/pipermail/twisted-python/2008-April/017503.html
  * Question on push/pull producers inter-workings, was : "Is there a
simple Producer/Consumer example or tutorial?"
  * Summary: Related and goes into what a producer is - an explanation of it
* http://twistedmatrix.com/pipermail/twisted-python/2004-May/007732.html
  * When do calls to transport.write() block ?
  * Summary: Discusses the right issue, talks about buffer call back if
full which would be great (if configurable)
*
https://pythonhosted.org/qbuf/qbuf.twisted_support.MultiBufferer-class.html
  * https://launchpad.net/qbuf
  * Summary: c buffer implementation that's incomplete thought might be
promising
*
http://stackoverflow.com/questions/21821119/twisted-producer-to-many-clients-with-buffer
  * Summary: Was indicating a similar use-case but source doesn't seem to
exist on the internet
* http://twistedmatrix.com/documents/current/core/howto/producers.html
  * Summary: Documentation on Producer and Consumers but only help with a
backpressure scenario
* http://twistedmatrix.com/pipermail/twisted-python/2007-July/015690.html
  * Summary: Discussion on how producer-consumer API's work and future
enhancement no help
* MANY MORE THAT 100% NOT RELEVANT


-- 
Steve Morin | Hacker, Entrepreneur, Startup Advisor
twitter.com/SteveMorin | stevemorin.com
*Live the dream start a startup. Make the world ... a better place.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160817/b0dd2096/attachment-0002.html>

From hawkowl at atleastfornow.net  Wed Aug 17 18:39:55 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Thu, 18 Aug 2016 10:39:55 +1000
Subject: [Twisted-Python] Moving under a src directory,
	or: Sorry But I Broke All Your Pull Requests
Message-ID: <072D9AF2-82A1-45F9-91F8-FD9D2917CF39@atleastfornow.net>

Hi everyone,

I have just merged the branch which puts twisted under a src/ directory. The reasons are many (see https://hynek.me/articles/testing-packaging/ for details as to why this is a Fantastic Idea), and it will require a bit of care with existing branches and pull requests.

Thankfully, glyph has scripted all that your PR should need to do:

    python admin/fix-for-src-mv.py

This will move everything under the src/ dir. If you have moved/renamed files in your PR, you may need to manually fix the conflicts.

Happy hacking, everyone :)

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160818/bceb5368/attachment.sig>

From adi at roiban.ro  Thu Aug 18 09:51:30 2016
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 18 Aug 2016 16:51:30 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
Message-ID: <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>

PR for running only on trunk and release branches is here
https://twistedmatrix.com/trac/ticket/8767

Travis-CI told that they can increase the limit to 15 jobs for one
week so that we can give it a try.

It would help to have the PR only build branch merged soon :)

Cheers,
Adi



From hawkowl at atleastfornow.net  Fri Aug 19 03:39:31 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Fri, 19 Aug 2016 17:39:31 +0800
Subject: [Twisted-Python] Twisted 16.3.2 Release Announcement
Message-ID: <BABD88F9-3895-41D8-BE50-100F88C66C38@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.3.1.

This is a security fix release, and is recommended for all users of Twisted. The fixes contained are:

- Twisted's HTTP server, when operating over TLS, would not cleanly close sockets, causing it to build up CLOSE_WAIT sockets until it would eventually run out of file descriptors.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.3.2/NEWS <https://github.com/twisted/twisted/blob/twisted-16.3.2/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160819/3b0ecfc0/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160819/3b0ecfc0/attachment.sig>

From steve at stevemorin.com  Fri Aug 19 08:08:40 2016
From: steve at stevemorin.com (Steve Morin)
Date: Fri, 19 Aug 2016 07:08:40 -0700
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
In-Reply-To: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
References: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
Message-ID: <CAPxhEGe+Wer2w_imZ5O8zxbDfdiuWgu142pw0YiVwQuzyzyXDA@mail.gmail.com>

Anyone know how do you determine the buffer size of a transport, to know
how much data is waiting to be transmitted from using transport.write?

Or how you would go about adding that ability to a reactor/transport?

On Wed, Aug 17, 2016 at 3:43 PM, Steve Morin <steve.morin at gmail.com> wrote:

> Twisted Community
>
> Problem: How do you determine the buffer size of a transport, to know how
> much data is waiting to be transmitted from using transport.write?
>
> Wait! You're going to say: use the Producer Consumer API (
> http://twistedmatrix.com/documents/current/core/howto/producers.html )
>
> To do what: So that instead of using back pressure I can check the buffer
> and when it's "too big/full" can decide to do something to the transport I
> am writing to:
>
> Slow transport handling options:
>
> - Buffer to disk instead of memory
> - Kill the transport
> - Decide to skip sending some data
> - Send an error or message to the transport I am writing to
> - Reduce the resolution, increase the compression (things like video or
> audio)
>
> Why not use back pressure?: Some use-cases and some protocols this doesn't
> make sense.
>
> Examples:
> - You're sending video and if the receiver can't keep up you want to
> downgrade or upgrade the quality of the video, but if you don't know if you
> can't tell how much it buffering.
> - You're receiving from one connection and then broadcasting what you
> received to multiple clients and you want to handle it by sending an error
> to a client that doesn't keep up
> - You're sending a real-time protocol and want to skip sending some data
> that's no longer relevant if the buffer is too slow.
>
> On a server what are the consequences:
> Too much buffering in many transport write buffer can cause a server to
> fail.  I don't know how to keep track of this to proactively without access
> to the buffer sizes.  Resolutions can then be to, not accept new
> connections when memory pressure is too high, kill connections with the
> weakest/slowest clients or have a protocol that can have client switch
> connections to new servers when instructed to spread out the load.
> 1) I would like to hear on how people would solve this sort of problem in
> Twisted for a server?
> 2) I would like to hear people opinions on this in general.
>
> Tobias Oberstein - BCC'ed you on this email because you seems to have
> tackled similar problems (based on the mailing list) and would really love
> to get your take on this too.
>
> Glyph and Jean-Paul, you're also big on those threads so any opinions you
> have would be appreciated as well.
>
> Some of my background research
>
> * http://twistedmatrix.com/pipermail/twisted-python/2015-
> January/029064.html
> * Later but good in the chain: http://twistedmatrix.com/
> pipermail/twisted-python/2015-January/029071.html
>   * Twisted receiving buffers swamped?
>   * Summary: Great thread but runs into a tangent for a while and picks up
> good at the end again discussing producer again and the need for
> backpressure
>   * Other:
>     * http://crossbar.io/
>     * http://tavendo.com/
>   * Scenario: "Twisted is reading off the TCP stack from the kernel and
> buffering in userspace faster than the echo server is pushing out stuff to
> the TCP stack into the kernel. Hence, no TCP backpressure results, netperf
> happily sends more and more, and the memory of the Twisted process runs
> away."
>   * Confirmed: Data isn't Buffered in "userspace inside Twisted, and
> before data is handled by the app in dataReceived."
> * https://twistedmatrix.com/pipermail/twisted-python/2010-
> September/022900.html
>   * How to cap the buffering size of data to be sent in Protocol class
>   * Summary: Same issue, very short no good info
> * https://twistedmatrix.com/pipermail/twisted-python/2012-
> March/025416.html
>   * Limit on transport.write
>   * Summary: Similar issue, very short no good info, glyph confirms that
> transport.write buffers everything sent to it.
> * https://twistedmatrix.com/pipermail/twisted-python/2012-
> February/025215.html
>   * pushing out same message on 100k TCPs
>   * Summary: Interesting discussion but different issue - interesting
> aside about irc spanning trees for a large broadcasts
> * http://twistedmatrix.com/pipermail/twisted-python/2008-April/017503.html
>   * Question on push/pull producers inter-workings, was : "Is there a
> simple Producer/Consumer example or tutorial?"
>   * Summary: Related and goes into what a producer is - an explanation of
> it
> * http://twistedmatrix.com/pipermail/twisted-python/2004-May/007732.html
>   * When do calls to transport.write() block ?
>   * Summary: Discusses the right issue, talks about buffer call back if
> full which would be great (if configurable)
> * https://pythonhosted.org/qbuf/qbuf.twisted_support.
> MultiBufferer-class.html
>   * https://launchpad.net/qbuf
>   * Summary: c buffer implementation that's incomplete thought might be
> promising
> * http://stackoverflow.com/questions/21821119/twisted-
> producer-to-many-clients-with-buffer
>   * Summary: Was indicating a similar use-case but source doesn't seem to
> exist on the internet
> * http://twistedmatrix.com/documents/current/core/howto/producers.html
>   * Summary: Documentation on Producer and Consumers but only help with a
> backpressure scenario
> * http://twistedmatrix.com/pipermail/twisted-python/2007-July/015690.html
>   * Summary: Discussion on how producer-consumer API's work and future
> enhancement no help
> * MANY MORE THAT 100% NOT RELEVANT
>
>
> --
> Steve Morin | Hacker, Entrepreneur, Startup Advisor
> twitter.com/SteveMorin | stevemorin.com
> *Live the dream start a startup. Make the world ... a better place.*
>



-- 
*Steve Morin | Managing Partner - CTO*

*Nvent*

O 800-407-1156 ext 803 <800-407-1156;803> | M 347-453-5579

smorin at nventdata.com  <smorin at nventdata.com>

*Enabling the Data Driven Enterprise*
*(Ask us how we can setup scalable open source realtime billion+ event/data
collection/analytics infrastructure in weeks)*

Service Areas: Management & Strategy Consulting | Data Engineering | Data
Science & Visualization
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160819/71efe035/attachment-0002.html>

From exarkun at twistedmatrix.com  Fri Aug 19 09:58:22 2016
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 19 Aug 2016 11:58:22 -0400
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
In-Reply-To: <CAPxhEGe+Wer2w_imZ5O8zxbDfdiuWgu142pw0YiVwQuzyzyXDA@mail.gmail.com>
References: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
 <CAPxhEGe+Wer2w_imZ5O8zxbDfdiuWgu142pw0YiVwQuzyzyXDA@mail.gmail.com>
Message-ID: <CAEeXt4No1DMTZwMej2uN8r2130eTUThJJU903ux7ToqzyGi_dA@mail.gmail.com>

There are at least two buffers (per direction) you might be interested in.
You can get the kernel buffer size with getsockopt - SO_SNDBUF and
SO_RCVBUF.  Then, there may also be a user-space buffer (or perhaps more
than one) managed by the transport implementation.  The details of this are
entirely up to the transport so there's no general answer apart from "read
the implementation, contribute a patch implementing a public interface for
retrieving the information".

Jean-Paul

On Fri, Aug 19, 2016 at 10:08 AM, Steve Morin <steve at stevemorin.com> wrote:

> Anyone know how do you determine the buffer size of a transport, to know
> how much data is waiting to be transmitted from using transport.write?
>
> Or how you would go about adding that ability to a reactor/transport?
>
> On Wed, Aug 17, 2016 at 3:43 PM, Steve Morin <steve.morin at gmail.com>
> wrote:
>
>> Twisted Community
>>
>> Problem: How do you determine the buffer size of a transport, to know how
>> much data is waiting to be transmitted from using transport.write?
>>
>> Wait! You're going to say: use the Producer Consumer API (
>> http://twistedmatrix.com/documents/current/core/howto/producers.html )
>>
>> To do what: So that instead of using back pressure I can check the buffer
>> and when it's "too big/full" can decide to do something to the transport I
>> am writing to:
>>
>> Slow transport handling options:
>>
>> - Buffer to disk instead of memory
>> - Kill the transport
>> - Decide to skip sending some data
>> - Send an error or message to the transport I am writing to
>> - Reduce the resolution, increase the compression (things like video or
>> audio)
>>
>> Why not use back pressure?: Some use-cases and some protocols this
>> doesn't make sense.
>>
>> Examples:
>> - You're sending video and if the receiver can't keep up you want to
>> downgrade or upgrade the quality of the video, but if you don't know if you
>> can't tell how much it buffering.
>> - You're receiving from one connection and then broadcasting what you
>> received to multiple clients and you want to handle it by sending an error
>> to a client that doesn't keep up
>> - You're sending a real-time protocol and want to skip sending some data
>> that's no longer relevant if the buffer is too slow.
>>
>> On a server what are the consequences:
>> Too much buffering in many transport write buffer can cause a server to
>> fail.  I don't know how to keep track of this to proactively without access
>> to the buffer sizes.  Resolutions can then be to, not accept new
>> connections when memory pressure is too high, kill connections with the
>> weakest/slowest clients or have a protocol that can have client switch
>> connections to new servers when instructed to spread out the load.
>> 1) I would like to hear on how people would solve this sort of problem in
>> Twisted for a server?
>> 2) I would like to hear people opinions on this in general.
>>
>> Tobias Oberstein - BCC'ed you on this email because you seems to have
>> tackled similar problems (based on the mailing list) and would really love
>> to get your take on this too.
>>
>> Glyph and Jean-Paul, you're also big on those threads so any opinions you
>> have would be appreciated as well.
>>
>> Some of my background research
>>
>> * http://twistedmatrix.com/pipermail/twisted-python/2015-Janua
>> ry/029064.html
>> * Later but good in the chain: http://twistedmatrix.com/piper
>> mail/twisted-python/2015-January/029071.html
>>   * Twisted receiving buffers swamped?
>>   * Summary: Great thread but runs into a tangent for a while and picks
>> up good at the end again discussing producer again and the need for
>> backpressure
>>   * Other:
>>     * http://crossbar.io/
>>     * http://tavendo.com/
>>   * Scenario: "Twisted is reading off the TCP stack from the kernel and
>> buffering in userspace faster than the echo server is pushing out stuff to
>> the TCP stack into the kernel. Hence, no TCP backpressure results, netperf
>> happily sends more and more, and the memory of the Twisted process runs
>> away."
>>   * Confirmed: Data isn't Buffered in "userspace inside Twisted, and
>> before data is handled by the app in dataReceived."
>> * https://twistedmatrix.com/pipermail/twisted-python/2010-Sept
>> ember/022900.html
>>   * How to cap the buffering size of data to be sent in Protocol class
>>   * Summary: Same issue, very short no good info
>> * https://twistedmatrix.com/pipermail/twisted-python/2012-Marc
>> h/025416.html
>>   * Limit on transport.write
>>   * Summary: Similar issue, very short no good info, glyph confirms that
>> transport.write buffers everything sent to it.
>> * https://twistedmatrix.com/pipermail/twisted-python/2012-Febr
>> uary/025215.html
>>   * pushing out same message on 100k TCPs
>>   * Summary: Interesting discussion but different issue - interesting
>> aside about irc spanning trees for a large broadcasts
>> * http://twistedmatrix.com/pipermail/twisted-python/2008-April
>> /017503.html
>>   * Question on push/pull producers inter-workings, was : "Is there a
>> simple Producer/Consumer example or tutorial?"
>>   * Summary: Related and goes into what a producer is - an explanation of
>> it
>> * http://twistedmatrix.com/pipermail/twisted-python/2004-May/007732.html
>>   * When do calls to transport.write() block ?
>>   * Summary: Discusses the right issue, talks about buffer call back if
>> full which would be great (if configurable)
>> * https://pythonhosted.org/qbuf/qbuf.twisted_support.MultiBuff
>> erer-class.html
>>   * https://launchpad.net/qbuf
>>   * Summary: c buffer implementation that's incomplete thought might be
>> promising
>> * http://stackoverflow.com/questions/21821119/twisted-producer
>> -to-many-clients-with-buffer
>>   * Summary: Was indicating a similar use-case but source doesn't seem to
>> exist on the internet
>> * http://twistedmatrix.com/documents/current/core/howto/producers.html
>>   * Summary: Documentation on Producer and Consumers but only help with a
>> backpressure scenario
>> * http://twistedmatrix.com/pipermail/twisted-python/2007-July/015690.html
>>   * Summary: Discussion on how producer-consumer API's work and future
>> enhancement no help
>> * MANY MORE THAT 100% NOT RELEVANT
>>
>>
>> --
>> Steve Morin | Hacker, Entrepreneur, Startup Advisor
>> twitter.com/SteveMorin | stevemorin.com
>> *Live the dream start a startup. Make the world ... a better place.*
>>
>
>
>
> --
> *Steve Morin | Managing Partner - CTO*
>
> *Nvent*
>
> O 800-407-1156 ext 803 <800-407-1156;803> | M 347-453-5579
>
> smorin at nventdata.com  <smorin at nventdata.com>
>
> *Enabling the Data Driven Enterprise*
> *(Ask us how we can setup scalable open source realtime billion+
> event/data collection/analytics infrastructure in weeks)*
>
> Service Areas: Management & Strategy Consulting | Data Engineering | Data
> Science & Visualization
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160819/b8e90bd8/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Aug 20 01:37:59 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 20 Aug 2016 00:37:59 -0700
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the
	transport's connected flag on connection lost
In-Reply-To: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
References: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
Message-ID: <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>


> On Aug 11, 2016, at 06:59, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I have observed that when a SSL4ClientEndpoint was used, the
> protocol's transport `connected` attribute is not updated by the
> wrapper when the connection is lost.

Hey Adi,

I took a look through the code, and I think it's a lot simpler than you realize :-).

> My current finding is that the reactor will call connection lost on
> t.i.abstract.FileDescriptor.connectionLost and not on
> t.protocols.policies.ProtocolWrapper

This is definitely not true, or dropping the connection just wouldn't work at all, and you wouldn't get connectionLost on your protocol.  The call path is FileDescriptor.connectionLost -> endpoint wrapper protocol.connectionLost -> *TLS wrapper protocol.connectionLost* -> your protocol connectionLost.

The bold-faced protocol is the interesting one, because that is the 'transport' object that your protocol sees.  Here's that object's connectionLost method:

https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488 <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488>

As you can see, neither it, nor the superclass that it upcalls to <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123 <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123>> sets the "connected" attribute.  So the method is totally called, it just doesn't do what you expect.

> so it seems that when SSL is used the wrapped protocol is registered
> instead of the wrapping protocol.

I'm not sure what you mean here.

> I am doing something wrong here?

> Is this the expected behavior or this is a bug?

Probably both, kinda?  This attribute is undocumented; probably an old implementation accident.  Technically it's public, but you probably shouldn't be depending on it.  However, it's silly that this is inconsistent between TLS transports and raw TCP transports, so fixing up ProtocolWrapper.connectionLost to set 'connected' to False is probably not a bad change.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160820/af59d3ce/attachment-0002.html>

From adi at roiban.ro  Sat Aug 20 03:13:35 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 20 Aug 2016 10:13:35 +0100
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the
 transport's connected flag on connection lost
In-Reply-To: <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>
References: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
 <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>
Message-ID: <CAFycZ9ek4+RNGAy-9yPLFjwwda8gY_hRKk24zcfdR8PnCMKgFA@mail.gmail.com>

On 20 August 2016 at 08:37, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Aug 11, 2016, at 06:59, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> I have observed that when a SSL4ClientEndpoint was used, the
> protocol's transport `connected` attribute is not updated by the
> wrapper when the connection is lost.
>
>
> Hey Adi,
>
> I took a look through the code, and I think it's a lot simpler than you
> realize :-).
>
> My current finding is that the reactor will call connection lost on
> t.i.abstract.FileDescriptor.connectionLost and not on
> t.protocols.policies.ProtocolWrapper
>
>
> This is definitely not true, or dropping the connection just wouldn't work
> at all, and you wouldn't get connectionLost on your protocol.  The call path
> is FileDescriptor.connectionLost -> endpoint wrapper protocol.connectionLost
> -> *TLS wrapper protocol.connectionLost* -> your protocol connectionLost.
>
> The bold-faced protocol is the interesting one, because that is the
> 'transport' object that your protocol sees.  Here's that object's
> connectionLost method:
>
> https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488
>
> As you can see, neither it, nor the superclass that it upcalls to
> <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123>
> sets the "connected" attribute.  So the method is totally called, it just
> doesn't do what you expect.
>
> so it seems that when SSL is used the wrapped protocol is registered
> instead of the wrapping protocol.
>
>
> I'm not sure what you mean here.
>
> I am doing something wrong here?
>
>
> Is this the expected behavior or this is a bug?
>
>
> Probably both, kinda?  This attribute is undocumented; probably an old
> implementation accident.  Technically it's public, but you probably
> shouldn't be depending on it.  However, it's silly that this is inconsistent
> between TLS transports and raw TCP transports, so fixing up
> ProtocolWrapper.connectionLost to set 'connected' to False is probably not a
> bad change.

Thanks for your comments.

I asked the question about SSL4ClientEndpoint in parallel with the
question about twisted.internet.protocol.Protocol.connected ... so by
that time I was very confused about all this.

I have created a ticket for this
https://twistedmatrix.com/trac/ticket/8774 and will try to work on it.

I have searched to code for `self.connected =` and there are a few of
places where it is not set at connection lost:

INotify, PTYProcess, udp.Port (not sure why we have this state for
UDP) , unix.Port (but is set to 0 for unix.DatagramPort)
iocpreactor.udp.Port (but is set to False for iocpreactor.tcp.Port)

I will try to follow up with a ticket+branch.

Thanks!
-- 
Adi Roiban



From glyph at twistedmatrix.com  Sat Aug 20 03:38:03 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 20 Aug 2016 02:38:03 -0700
Subject: [Twisted-Python] SSL4ClientEndpoint not updating the
	transport's connected flag on connection lost
In-Reply-To: <CAFycZ9ek4+RNGAy-9yPLFjwwda8gY_hRKk24zcfdR8PnCMKgFA@mail.gmail.com>
References: <CAFycZ9c4H6ZGOhR_w9v9MGHmYe4b-oBXo6LyQcEd=yXVkc-f_A@mail.gmail.com>
 <094897E6-0B90-43CF-B88D-2B9B8C8E2F44@twistedmatrix.com>
 <CAFycZ9ek4+RNGAy-9yPLFjwwda8gY_hRKk24zcfdR8PnCMKgFA@mail.gmail.com>
Message-ID: <9D1B72A3-4DB6-4347-A798-8CF8330B98E0@twistedmatrix.com>


> On Aug 20, 2016, at 2:13 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 20 August 2016 at 08:37, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> On Aug 11, 2016, at 06:59, Adi Roiban <adi at roiban.ro> wrote:
>> 
>> Hi,
>> 
>> I have observed that when a SSL4ClientEndpoint was used, the
>> protocol's transport `connected` attribute is not updated by the
>> wrapper when the connection is lost.
>> 
>> 
>> Hey Adi,
>> 
>> I took a look through the code, and I think it's a lot simpler than you
>> realize :-).
>> 
>> My current finding is that the reactor will call connection lost on
>> t.i.abstract.FileDescriptor.connectionLost and not on
>> t.protocols.policies.ProtocolWrapper
>> 
>> 
>> This is definitely not true, or dropping the connection just wouldn't work
>> at all, and you wouldn't get connectionLost on your protocol.  The call path
>> is FileDescriptor.connectionLost -> endpoint wrapper protocol.connectionLost
>> -> *TLS wrapper protocol.connectionLost* -> your protocol connectionLost.
>> 
>> The bold-faced protocol is the interesting one, because that is the
>> 'transport' object that your protocol sees.  Here's that object's
>> connectionLost method:
>> 
>> https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/tls.py#L488
>> 
>> As you can see, neither it, nor the superclass that it upcalls to
>> <https://github.com/twisted/twisted/blob/6022f65903eda2f8df74b2d284b8ef359df24904/src/twisted/protocols/policies.py#L123>
>> sets the "connected" attribute.  So the method is totally called, it just
>> doesn't do what you expect.
>> 
>> so it seems that when SSL is used the wrapped protocol is registered
>> instead of the wrapping protocol.
>> 
>> 
>> I'm not sure what you mean here.
>> 
>> I am doing something wrong here?
>> 
>> 
>> Is this the expected behavior or this is a bug?
>> 
>> 
>> Probably both, kinda?  This attribute is undocumented; probably an old
>> implementation accident.  Technically it's public, but you probably
>> shouldn't be depending on it.  However, it's silly that this is inconsistent
>> between TLS transports and raw TCP transports, so fixing up
>> ProtocolWrapper.connectionLost to set 'connected' to False is probably not a
>> bad change.
> 
> Thanks for your comments.
> 
> I asked the question about SSL4ClientEndpoint in parallel with the
> question about twisted.internet.protocol.Protocol.connected ... so by
> that time I was very confused about all this.
> 
> I have created a ticket for this
> https://twistedmatrix.com/trac/ticket/8774 <https://twistedmatrix.com/trac/ticket/8774> and will try to work on it.
> 
> I have searched to code for `self.connected =` and there are a few of
> places where it is not set at connection lost:
> 
> INotify, PTYProcess, udp.Port (not sure why we have this state for
> UDP) , unix.Port (but is set to 0 for unix.DatagramPort)
> iocpreactor.udp.Port (but is set to False for iocpreactor.tcp.Port)
> 
> I will try to follow up with a ticket+branch.
> 
> Thanks!

No problem!  Glad we could clear that up - it was definitely a bit confusing at first for me as well, which is why I wanted to investigate to the bottom of it :).

Another option here, though, is to simply deprecate the attribute; like I said, it's not documented and if you're properly implementing everything by reacting to events, it's not very useful.  Why do you need it?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160820/55ffa95a/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Aug 21 04:13:59 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 21 Aug 2016 03:13:59 -0700
Subject: [Twisted-Python] setup.py broken in trunk
Message-ID: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>

41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.

I think we should revert this.

Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).

-glyph


From adi at roiban.ro  Sun Aug 21 04:46:52 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 21 Aug 2016 11:46:52 +0100
Subject: [Twisted-Python] setup.py broken in trunk
In-Reply-To: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
References: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
Message-ID: <CAFycZ9dTJXeGAuy3t+6RsOsDkx7ZDAnqRuWDLWncX1UJOhB3Ew@mail.gmail.com>

Yes. Will revert it. My fault for not correctly solving the conflicts
during merge.


On 21 August 2016 at 11:13, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.
>
> I think we should revert this.
>
> Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



-- 
Adi Roiban



From adi at roiban.ro  Sun Aug 21 05:19:17 2016
From: adi at roiban.ro (Adi Roiban)
Date: Sun, 21 Aug 2016 12:19:17 +0100
Subject: [Twisted-Python] setup.py broken in trunk
In-Reply-To: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
References: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
Message-ID: <CAFycZ9c4f5DH7OcigeU9kpaH6+_CYXMsyzLtmoCyB787z7nmSQ@mail.gmail.com>

On 21 August 2016 at 11:13, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.
>
> I think we should revert this.
>
> Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).

I have reverted and re-submitted the ticket for review. Sorry for the trouble!

I have not yet added integration tests for the console scripts.

I think that before writing such tests we need to make sure that
development environments and CI environments all have `pip install -e
.` or something similar called.

For more details see https://twistedmatrix.com/trac/ticket/8622#comment:8

Craig is pushing for removing bin/trial and after bin/trial is removed
I think that all environments will need to have `pip install .` called
so that we don't run the OS trial version.

There is also ticket https://twistedmatrix.com/trac/ticket/8544 which
tries to create tox environments for all Buildbot builders so that we
can run everything with Tox on buildbot CI system.

-- 
Adi Roiban



From glyph at twistedmatrix.com  Sun Aug 21 11:10:11 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 21 Aug 2016 10:10:11 -0700
Subject: [Twisted-Python] setup.py broken in trunk
In-Reply-To: <CAFycZ9c4f5DH7OcigeU9kpaH6+_CYXMsyzLtmoCyB787z7nmSQ@mail.gmail.com>
References: <EC8AC814-50B3-4F9C-AA54-58454438D3F3@twistedmatrix.com>
 <CAFycZ9c4f5DH7OcigeU9kpaH6+_CYXMsyzLtmoCyB787z7nmSQ@mail.gmail.com>
Message-ID: <27E026AD-E01C-4642-9152-49D0D6D99034@twistedmatrix.com>


> On Aug 21, 2016, at 4:19 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> On 21 August 2016 at 11:13, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> 41482c4fe5442bcc7b046ab53bf15409f2031abd makes a change such that 'pip install -e .' (and indeed, 'pip install .') no longer installs 'twist'.
>> 
>> I think we should revert this.
>> 
>> Clearly we have a problem with our test suite, if we're not catching the binaries disappearing on us :-).
> 
> I have reverted and re-submitted the ticket for review. Sorry for the trouble!

Thanks for fixing!

> I have not yet added integration tests for the console scripts.
> 
> I think that before writing such tests we need to make sure that
> development environments and CI environments all have `pip install -e
> .` or something similar called.
> 
> For more details see https://twistedmatrix.com/trac/ticket/8622#comment:8


> Craig is pushing for removing bin/trial and after bin/trial is removed
> I think that all environments will need to have `pip install .` called
> so that we don't run the OS trial version.
> 
> There is also ticket https://twistedmatrix.com/trac/ticket/8544 which
> tries to create tox environments for all Buildbot builders so that we
> can run everything with Tox on buildbot CI system.

Once we have `tox` everywhere, we don't need a separate step to run `pip`.  This seems like the right way to address it.

-g


From hawkowl at atleastfornow.net  Sun Aug 21 11:28:30 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Mon, 22 Aug 2016 01:28:30 +0800
Subject: [Twisted-Python] Twisted 16.4.0 Prerelease 2 Announcement
Message-ID: <F35D9632-72B7-44AE-BB96-7D838254BDD6@atleastfornow.net>

Hi everyone!

I bring you a new Twisted 16.4.0 prerelease, with the following fixes:

- Twisted's HTTP server, when operating over TLS, would not cleanly close sockets, causing it to build up CLOSE_WAIT sockets until it would eventually run out of file descriptors. (from 16.3.2)
- AMP no longer fails on floats on Python 3.

For more information, check the NEWS file (link provided below).

As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.0pre2/ <https://twistedmatrix.com/Releases/pre/16.4.0pre2/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:

   pip install https://twistedmatrix.com/Releases/pre/16.4.0pre2/Twisted-16.4.0rc2.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.0pre2/Twisted-16.4.0rc2.tar.bz2>

Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160822/76143a6a/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160822/76143a6a/attachment.sig>

From p.mayers at imperial.ac.uk  Mon Aug 22 07:22:20 2016
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 22 Aug 2016 14:22:20 +0100
Subject: [Twisted-Python] How do you determine the buffer size of a
 transport - a use-case for not using back pressure
In-Reply-To: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
References: <CAPxhEGccVASQQsh9kGODOVnu3ygHrjDAdo+8_gwYLWwmaqQ1mA@mail.gmail.com>
Message-ID: <57BAFC8C.1080300@imperial.ac.uk>

On 17/08/16 23:43, Steve Morin wrote:
> Twisted Community
>
> Problem: How do you determine the buffer size of a transport, to know
> how much data is waiting to be transmitted from using transport.write?

You haven't received many responses, so I'll add a short note here:

The ideal way to do this IMO is to have the receiver send 
acknowledgements with a sequence number to the sender once a message has 
been received *and processed*. Keep track of these at the sender and 
adjust the sending rate accordingly.

Another complementary approach is for the client to keep track of the 
length (in space or in time/age) of it's local 
received-but-not-processed queue and report this. Keeping track of the 
queue in terms of delay is close to the CoDel approach for AQM.

Depending on the network portion of the implementation, the mere fact of 
a message having been received and TCP-ack'd doesn't tell you the client 
is keeping up - it might be receiving and buffering into RAM and getting 
more and more backlogged.

If you can't alter the protocol to include protocol-level ack messages 
then obviously you have to go the less satisfactory route and estimate 
it from the lower-layer transport. As JP has noted, you can get this 
from the kernel.

Flow control is hard ;o)



From rodrigc at crodrigues.org  Mon Aug 22 18:40:31 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 22 Aug 2016 17:40:31 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
Message-ID: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>

Hi,

Someone has made changes in the past few days which have broken
many of the buildbots.  For example, in this build:

https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/steps/select/logs/stdio

There is this:

python -m tox -r -e py27-tests "" in dir /buildslave/debian8-py2.7/Twisted
(timeout 1200 secs) watching logfiles {'test.log':
'build/py27-tests/tmp/_trial_temp/test.log'} argv: ['python', '-m', 'tox',
'-r', '-e', 'py27-tests', '']

The last argument being passed to python is an empty string.
This is causing an empty string to be passed to trial, and
consequently none of the tests are being run.

This empty string is causing none of the tests to run, which is causing
the build to fail.  The fix is either to:

(1)  eliminate the last parameter

(2)  the last parameter should not be an empty string, but should be
"twisted"
      so that trial is invoked as "trial twisted".

I don't understand the buildbot scripts so don't know where to fix this.

Can someone fix this?

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160822/492ee36d/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Aug 22 19:23:31 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 22 Aug 2016 18:23:31 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
Message-ID: <A95F44D6-58FC-4FCF-9EA5-7F409F4A0ED9@twistedmatrix.com>


> On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> 
> Someone has made changes in the past few days which have broken
> many of the buildbots.  For example, in this build:
> 
> https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/steps/select/logs/stdio <https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/steps/select/logs/stdio>
> 
> There is this:
> 
> python -m tox -r -e py27-tests "" in dir /buildslave/debian8-py2.7/Twisted (timeout 1200 secs) watching logfiles {'test.log': 'build/py27-tests/tmp/_trial_temp/test.log'} argv: ['python', '-m', 'tox', '-r', '-e', 'py27-tests', '']
> 
> The last argument being passed to python is an empty string.
> This is causing an empty string to be passed to trial, and
> consequently none of the tests are being run.
> 
> This empty string is causing none of the tests to run, which is causing
> the build to fail.  The fix is either to:
> 
> (1)  eliminate the last parameter
> 
> (2)  the last parameter should not be an empty string, but should be "twisted"
>       so that trial is invoked as "trial twisted".
> 
> I don't understand the buildbot scripts so don't know where to fix this.
> 
> Can someone fix this?

Just to be clear: these are changes to the buildbot scripts themselves, and not to the repo?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160822/408f0e3b/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Aug 22 19:24:29 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 22 Aug 2016 18:24:29 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
Message-ID: <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>


> On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I don't understand the buildbot scripts so don't know where to fix this.

Oh, and since this answer may be of general interest: the buildbot configuration is here: https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/master.cfg so folks can look in that repository to investigate.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160822/f96c82cb/attachment-0002.html>

From rodrigc at crodrigues.org  Mon Aug 22 21:05:26 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 22 Aug 2016 20:05:26 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <A95F44D6-58FC-4FCF-9EA5-7F409F4A0ED9@twistedmatrix.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <A95F44D6-58FC-4FCF-9EA5-7F409F4A0ED9@twistedmatrix.com>
Message-ID: <CAG=rPVe0vd3yC=-PR1N8dYL5wWCZwzQ1hWXDsLOw2JokKGKTpA@mail.gmail.com>

On Monday, August 22, 2016, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

>
> On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org
> <javascript:_e(%7B%7D,'cvml','rodrigc at crodrigues.org');>> wrote:
>
> Hi,
>
> Someone has made changes in the past few days which have broken
> many of the buildbots.  For example, in this build:
>
> https://buildbot.twistedmatrix.com/builders/debian8-py2.7/builds/1548/
> steps/select/logs/stdio
>
> There is this:
>
> python -m tox -r -e py27-tests "" in dir /buildslave/debian8-py2.7/Twisted
> (timeout 1200 secs) watching logfiles {'test.log':
> 'build/py27-tests/tmp/_trial_temp/test.log'} argv: ['python', '-m',
> 'tox', '-r', '-e', 'py27-tests', '']
>
> The last argument being passed to python is an empty string.
> This is causing an empty string to be passed to trial, and
> consequently none of the tests are being run.
>
> This empty string is causing none of the tests to run, which is causing
> the build to fail.  The fix is either to:
>
> (1)  eliminate the last parameter
>
> (2)  the last parameter should not be an empty string, but should be
> "twisted"
>       so that trial is invoked as "trial twisted".
>
> I don't understand the buildbot scripts so don't know where to fix this.
>
> Can someone fix this?
>
>
> Just to be clear: these are changes to the buildbot scripts themselves,
> and not to the repo?
>
>
Correct.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160822/c4b7d5be/attachment-0002.html>

From markrwilliams at gmail.com  Mon Aug 22 21:08:18 2016
From: markrwilliams at gmail.com (Mark Williams)
Date: Mon, 22 Aug 2016 20:08:18 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
Message-ID: <20160823030817.GA12611@hammal>

On Mon, Aug 22, 2016 at 06:24:29PM -0700, Glyph Lefkowitz wrote:
>
> > On Aug 22, 2016, at 5:40 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> >
> > I don't understand the buildbot scripts so don't know where to fix this.
>
> Oh, and since this answer may be of general interest: the buildbot configuration is here: https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/master.cfg so folks can look in that repository to investigate.
>
> -g

This appears to be the builder responsible for the failure Craig found, because it's got the same tox env:

https://github.com/twisted-infra/braid/blob/b04ca7df2943a75b8100c41be4016077fb442639/services/buildbot/master/master.cfg#L124-L131

In the definition of TwistedToxBuildFactory, the tests to run are always empty:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L369

For each reactor, there's a TrialTox build step:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L397-L402

And in the TrialTox step, tests comes in via __init__:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_steps.py#L125

...gets assigned as an instance variable...
https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_steps.py#L131

...and then put into a shell command:

https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_steps.py#L155

I don't see how this could result in an empty string.  Something's up
on the boxes themselves.

Please give me access to the buildbots so I can fix them, I love them
and want them to thrive, etc.



From rodrigc at crodrigues.org  Mon Aug 22 22:29:29 2016
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 22 Aug 2016 21:29:29 -0700
Subject: [Twisted-Python] Tests on Windows with Python 3 now passing
Message-ID: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>

I have fixed the tests that were failing on Windows with Python 3.

If you look at:
https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008

We now have builds running on Python 3.3, 3.4, and 3.5 on Windows.
These builds are also uploading coverage results to codecov.io.

I looked at that build and on Python 3.5 we have:

9539 tests (2338 skipped, 7201 succeeded)

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160822/69f55a0a/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Aug 22 22:49:15 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 22 Aug 2016 21:49:15 -0700
Subject: [Twisted-Python] Tests on Windows with Python 3 now passing
In-Reply-To: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>
References: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>
Message-ID: <4C77BA51-BF8C-47AA-AAAB-89FAA6F00AF5@twistedmatrix.com>


> On Aug 22, 2016, at 9:29 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> I have fixed the tests that were failing on Windows with Python 3.
> 
> If you look at:
> https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008 <https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008>
> 
> We now have builds running on Python 3.3, 3.4, and 3.5 on Windows.
> These builds are also uploading coverage results to codecov.io <http://codecov.io/>.
> 
> I looked at that build and on Python 3.5 we have:
> 
> 9539 tests (2338 skipped, 7201 succeeded)

This is awesome.  I hope it'll open the door to more Windows/py3-minded contributors!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160822/b11d248c/attachment-0002.html>

From markrwilliams at gmail.com  Tue Aug 23 01:43:11 2016
From: markrwilliams at gmail.com (Mark Williams)
Date: Tue, 23 Aug 2016 00:43:11 -0700
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
Message-ID: <20160823074311.GA31138@hammal>

Glyph got me all set up so I can work on the Buildbots.  Thanks,
Glyph!

I hope to resolve the issue Craig identified soon and will announce
any progress.  Stay tuned!



From hawkowl at atleastfornow.net  Tue Aug 23 01:51:56 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 23 Aug 2016 15:51:56 +0800
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <20160823074311.GA31138@hammal>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
 <20160823074311.GA31138@hammal>
Message-ID: <D41E4BAA-2149-4875-9CB8-64E939A1E7B9@atleastfornow.net>

So I also investigated and it appeared like the hack I had in https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L368 to prevent this from occurring disappeared in prod; I think maybe Adi pushed up something trying to replicate what it was doing without committing it :)

I've redeployed from master of braid, and it appears to be working now.

- Amber

> On 23 Aug 2016, at 15:43, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> Glyph got me all set up so I can work on the Buildbots.  Thanks,
> Glyph!
> 
> I hope to resolve the issue Craig identified soon and will announce
> any progress.  Stay tuned!
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160823/b352f75d/attachment.sig>

From adi at roiban.ro  Tue Aug 23 04:29:06 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 23 Aug 2016 11:29:06 +0100
Subject: [Twisted-Python] Please fix the broken buildbots
In-Reply-To: <D41E4BAA-2149-4875-9CB8-64E939A1E7B9@atleastfornow.net>
References: <CAG=rPVc5nLnFC958XpcqH9Z5oyrO_f7n7OHzAdqHj=YWTVg2tA@mail.gmail.com>
 <3D66979C-C1CF-404A-A3C2-67B88D91CF3F@twistedmatrix.com>
 <20160823074311.GA31138@hammal>
 <D41E4BAA-2149-4875-9CB8-64E939A1E7B9@atleastfornow.net>
Message-ID: <CAFycZ9durGdOV+B=respTyzsVAiV0qtVKHySTcPJEk1hYUeOxw@mail.gmail.com>

Hi,

On 23 August 2016 at 08:51, Amber "Hawkie" Brown
<hawkowl at atleastfornow.net> wrote:
> So I also investigated and it appeared like the hack I had in https://github.com/twisted-infra/braid/blob/master/services/buildbot/master/twisted_factories.py#L368 to prevent this from occurring disappeared in prod; I think maybe Adi pushed up something trying to replicate what it was doing without committing it :)

I broke the build. Sorry for that.

I saw those conflicting lines ... and I went for the one injecting the
test case ... as this is how it was supposed to work :)

I am working on creating tox/ven builders for everything... and as
part of that, I have refactored some factories ...as there is some
code duplication.

I have created a PR now... https://github.com/twisted-infra/braid/pull/223

I think that we should have tests =
[WithProperties("%(test-case-name:~twisted)s")]

This should put twisted when test-case-name is not defined by a build job.

Any objections on that?

-- 
Adi Roiban



From adi at roiban.ro  Tue Aug 23 04:33:12 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 23 Aug 2016 11:33:12 +0100
Subject: [Twisted-Python] Tests on Windows with Python 3 now passing
In-Reply-To: <4C77BA51-BF8C-47AA-AAAB-89FAA6F00AF5@twistedmatrix.com>
References: <CAG=rPVeSvGqo30b=TwK5YN8meD59rmngnW5wkhGxi4C7NNReUQ@mail.gmail.com>
 <4C77BA51-BF8C-47AA-AAAB-89FAA6F00AF5@twistedmatrix.com>
Message-ID: <CAFycZ9dGk30dqj9ys=pEOERszF5uk81eL5uK+V7a9LsQJAdmaA@mail.gmail.com>

On 23 August 2016 at 05:49, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Aug 22, 2016, at 9:29 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
>
> I have fixed the tests that were failing on Windows with Python 3.
>
> If you look at:
> https://ci.appveyor.com/project/adiroiban/twisted/build/trunk-1008
>
> We now have builds running on Python 3.3, 3.4, and 3.5 on Windows.
> These builds are also uploading coverage results to codecov.io.
>
> I looked at that build and on Python 3.5 we have:
>
> 9539 tests (2338 skipped, 7201 succeeded)
>
>
> This is awesome.  I hope it'll open the door to more Windows/py3-minded
> contributors!
Great news.

Now that we have windows on appveyor, can we remove the Windows builders?

The windows builders are stuck on the virtualenv --clear step.

https://buildbot.twistedmatrix.com/boxes-unsupported?branch=8544-tox-for-buildbot

As part of the work for #8544 I have created tox environment for all
builders  https://github.com/twisted/twisted/pull/280

so we should be able to run on appveyor the nomodules and bdist builders

for the bdist, we still need to see if is ok  to publish the wheel on
Azure and if is ok to create it from Win2008R2 Server vs Win7

-- 
Adi Roiban



From adi at roiban.ro  Tue Aug 23 05:24:16 2016
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 23 Aug 2016 12:24:16 +0100
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
Message-ID: <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>

We now have 15 concurrent jobs.... for the next 10 days.

Please check if it makes a difference worth more than $6000 per year :)

Also, do we need both python 3.3 and 3.4 jobs?

I think that we have non python 3.5 builders to prevent the usage of
string formatting for bytes which is not available in 3.3 and 3.4.

What are the differences between 3.3 and 3.4  that requires us to have
both versions?

Regards,
Adi



From glyph at twistedmatrix.com  Tue Aug 23 10:44:16 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2016 09:44:16 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
Message-ID: <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>


> On Aug 23, 2016, at 4:24 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> We now have 15 concurrent jobs.... for the next 10 days.
> 
> Please check if it makes a difference worth more than $6000 per year :)
> 
> Also, do we need both python 3.3 and 3.4 jobs?
> 
> I think that we have non python 3.5 builders to prevent the usage of
> string formatting for bytes which is not available in 3.3 and 3.4.
> 
> What are the differences between 3.3 and 3.4  that requires us to have
> both versions?

We can't enumerate them.  If we support 3.3, we have to test on 3.3.  For example, there's some difference in the way the garbage collector works which made the PB tests fail on 3.3 but not 3.4; it turns out that this change was fixed by adding better test cleanup, and did not necessitate a change to the implementation, but small undocumented changes can easily require different implementation strategies.

We can drop support for 3.3 of course, but that's a separate discussion.

-glyph


From markrwilliams at gmail.com  Tue Aug 23 11:27:33 2016
From: markrwilliams at gmail.com (Mark Williams)
Date: Tue, 23 Aug 2016 10:27:33 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
 and Buildbot
In-Reply-To: <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
Message-ID: <20160823172732.GA4484@hammal>

On Tue, Aug 23, 2016 at 09:44:16AM -0700, Glyph Lefkowitz wrote:
>
> We can drop support for 3.3 of course, but that's a separate discussion.

I'm marginally in favor of it.  I appreciate Adi's concern about the
build infrastructure.  And thanks to the inimitable Donald Stufft,
it's easy to get a sense of how popular Python 3.3 is among Twisted
users and whether or not dropping support for it will affect a large
percentage of them.

He provided the following BigTable Query to run against the PyPI
downloads dataset (available at
https://bigquery.cloud.google.com/dataset/the-psf:pypi?pli=1 ):

SELECT
  REGEXP_EXTRACT(details.python, r"^([^\.]+\.[^\.]+)") as python_version,
  COUNT(*) as downloads,
FROM
  TABLE_DATE_RANGE(
    [the-psf:pypi.downloads],
    DATE_ADD(CURRENT_TIMESTAMP(), -31, "day"),
    DATE_ADD(CURRENT_TIMESTAMP(), -1, "day")
  )
WHERE file.project = 'twisted'
GROUP BY python_version
ORDER BY
  downloads DESC


Here're the results:

python_version	downloads
2.7             446869
null            21959
3.5             15204
3.4             11245
2.6             5060
3.3             1060
3.2             271
3.6             241
2.4             5
1.17		    3
2.5	            2

(Donald explained that `null` represents mirrors and caches like
bandersnatch.)

It appears that dropping Python 3.3 wouldn't exclude very many of our
users.



From hawkowl at atleastfornow.net  Tue Aug 23 11:32:18 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Wed, 24 Aug 2016 01:32:18 +0800
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <20160823172732.GA4484@hammal>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
 <20160823172732.GA4484@hammal>
Message-ID: <08102F51-DA9F-4490-8595-10DF5998FDF2@atleastfornow.net>

The only reason to support Python 3.3 is PyPy3. However, since they now have funding to push it to 3.5, and PyPy3 is by no means production ready, I think it is reasonable to do this.

I will announce the release after Twisted 16.4 as the final one to support Python 3.3, in accordance with our compatibility policy.

- Amber

> On 24 Aug 2016, at 01:27, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> On Tue, Aug 23, 2016 at 09:44:16AM -0700, Glyph Lefkowitz wrote:
>> 
>> We can drop support for 3.3 of course, but that's a separate discussion.
> 
> I'm marginally in favor of it.  I appreciate Adi's concern about the
> build infrastructure.  And thanks to the inimitable Donald Stufft,
> it's easy to get a sense of how popular Python 3.3 is among Twisted
> users and whether or not dropping support for it will affect a large
> percentage of them.
> 
> He provided the following BigTable Query to run against the PyPI
> downloads dataset (available at
> https://bigquery.cloud.google.com/dataset/the-psf:pypi?pli=1 ):
> 
> SELECT
>  REGEXP_EXTRACT(details.python, r"^([^\.]+\.[^\.]+)") as python_version,
>  COUNT(*) as downloads,
> FROM
>  TABLE_DATE_RANGE(
>    [the-psf:pypi.downloads],
>    DATE_ADD(CURRENT_TIMESTAMP(), -31, "day"),
>    DATE_ADD(CURRENT_TIMESTAMP(), -1, "day")
>  )
> WHERE file.project = 'twisted'
> GROUP BY python_version
> ORDER BY
>  downloads DESC
> 
> 
> Here're the results:
> 
> python_version	downloads
> 2.7             446869
> null            21959
> 3.5             15204
> 3.4             11245
> 2.6             5060
> 3.3             1060
> 3.2             271
> 3.6             241
> 2.4             5
> 1.17		    3
> 2.5	            2
> 
> (Donald explained that `null` represents mirrors and caches like
> bandersnatch.)
> 
> It appears that dropping Python 3.3 wouldn't exclude very many of our
> users.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160824/eab2066f/attachment.sig>

From glyph at twistedmatrix.com  Tue Aug 23 13:20:34 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2016 12:20:34 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <20160823172732.GA4484@hammal>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
 <20160823172732.GA4484@hammal>
Message-ID: <F8B2D16B-21F8-4F62-89B0-40091BBFF457@twistedmatrix.com>


> On Aug 23, 2016, at 10:27 AM, Mark Williams <markrwilliams at gmail.com> wrote:
> 
> It appears that dropping Python 3.3 wouldn't exclude very many of our
> users.

1/5 as many as Python 2.6, which we already don't support :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160823/709b9851/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Aug 23 13:21:08 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2016 12:21:08 -0700
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <08102F51-DA9F-4490-8595-10DF5998FDF2@atleastfornow.net>
References: <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
 <20160823172732.GA4484@hammal>
 <08102F51-DA9F-4490-8595-10DF5998FDF2@atleastfornow.net>
Message-ID: <D855CFAD-9A31-4EF2-9514-110254EE484D@twistedmatrix.com>


> On Aug 23, 2016, at 10:32 AM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> However, since they now have funding to push it to 3.5,

... and can I just reiterate how SUPER PUMPED I am about this???

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160823/5732982e/attachment-0002.html>

From jerryguitarist at gmail.com  Tue Aug 23 19:23:40 2016
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Tue, 23 Aug 2016 22:53:40 -0230
Subject: [Twisted-Python] Regarding moving on with ticket #7934 (New
	Logging System)
In-Reply-To: <CA+2gYiriE1EXmU89Vxj5Y5iB-Qu7rNNuxygW-mP_NExAEtjtsQ@mail.gmail.com>
References: <CA+2gYiriE1EXmU89Vxj5Y5iB-Qu7rNNuxygW-mP_NExAEtjtsQ@mail.gmail.com>
Message-ID: <CA+2gYiqEMC9EjGkqCH9CqPggDAKHSe-o0=iUwG+g0HTAMrjrcA@mail.gmail.com>

Hello!

Just submitted a PR for this, <https://github.com/twisted/twisted/pull/520>.

Thanks! :-)
Eeshan

On Wed, Jun 22, 2016 at 12:24 AM, Eeshan Garg <jerryguitarist at gmail.com>
wrote:

> Hello again!
>
> I am fully aware that it has been a _very_ long time since I mentioned
> that I would get on with <https://twistedmatrix.com/trac/ticket/7934>,
> but I haven't really had the time to actually do anything about it. :-/
>
> I would love to work on more tickets like <https://twistedmatrix.com/
> trac/ticket/7897> and help port Twisted to the new logging system and
> kind of get back into the flow of submitting patches and contributing to
> Twisted again (I miss it so much!!).
>
> My main concerns about moving on with #7934 after my last patch have
> already been reported by hawkowl in <https://twistedmatrix.com/
> trac/ticket/7983>. However, it was a bit unclear to me from the
> discussions in 7983 as to how to move forward. It would mean a lot to me if
> someone who is working on this right now (or glyph or hawkowl) could please
> give me a couple of pointers as to what should be done with the "self.log"
> issue for porting existing code to the new logging system.
>
> - Should I declare a log attribute for an entire module to use?
>
> - Should I rewrite my new patch around hawkowl's suggestion in 7983, use
> _loggerFor for everything? If so, how do you refer to the Logger instance
> to compare the log_logger in the event dict with what is expected (since
> asserting everything in the event dict, including log_logger is crucial for
> optimum test coverage)?
>
> - Or is there another way I should be searching for? Has anything changed
> since 7983 was filed? :-)
>
> I have already started working on the other suggestions put forth by the
> reviewers (such as context managers for capturing log events, etc.).
> Looking forward to contributing more!
>
> Regards,
> Eeshan Garg
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160823/e5459dad/attachment-0002.html>

From hs at ox.cx  Wed Aug 24 07:07:36 2016
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 24 Aug 2016 15:07:36 +0200
Subject: [Twisted-Python] Waiting time for tests running on Travis CI
	and Buildbot
In-Reply-To: <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
References: <CAFycZ9cJ4YeJaSvyFA-1mQyvYL=AC1VL4Qn0Fi8tV4HRP+tOGw@mail.gmail.com>
 <F7E1E702-694C-46AC-A705-9FFE713884BD@twistedmatrix.com>
 <CAFycZ9eozjThH4G4j+UXkUsGgHJzgjFOn_QcOk4zMTs5ivc41w@mail.gmail.com>
 <B184350E-CA08-41C5-BE2F-4F362ED398D8@twistedmatrix.com>
 <CAEeXt4PMBiPapCKbTkDQ+=mLBM3JrxWqHL9fxsS+6aNuAg8Y0w@mail.gmail.com>
 <A0921386-5950-4D30-8C52-DA58BEC64AD1@twistedmatrix.com>
 <CAEeXt4MEP5C20MSpa=7tikptS95wUz8vbKn9p4bKxZV5g+M-Lg@mail.gmail.com>
 <CB0A7C25-83E7-45C8-A7B5-9CEFDCCF91D4@twistedmatrix.com>
 <CAFycZ9c2yaQypC47OE4R9aturFTbozznZuqvXqiVd1y7Lvs-Pg@mail.gmail.com>
 <CAFycZ9fmPMDkP_MM4dBnm=7hZCCL0Nz2hGj4ARhBjPgYiF3Z6g@mail.gmail.com>
 <037E3663-CCC2-4E8A-8942-3C589EFD7893@twistedmatrix.com>
Message-ID: <584EF059-1050-4A59-B942-A8F862422AE9@ox.cx>

> We can drop support for 3.3 of course, but that's a separate discussion.

+1 since 3.3 wasn’t ever part of any LTS distribution.  3.4 will live for a while but it’s also the first really good Python 3. :)


From hawkowl at atleastfornow.net  Sat Aug 27 19:44:28 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 09:44:28 +0800
Subject: [Twisted-Python] Twisted 16.4.0 Release Announcement
Message-ID: <D3CC8F69-0CD8-4D62-9377-20EC000A8A47@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.4.0.

The highlights of this release are:

- twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
- A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
- async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
- Trial can be invoked with "python -m twisted.trial".
- All Twisted executables (trial, twistd, etc) are now Setuptools console scripts, meaning they will work much better on Windows.
- 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
- All the security fixes of Twisted 16.3.1 + 16.3.2 (httpoxy, HTTP session identifier strengthening, HTTP+TLS consuming sockets)
- 240+ closed tickets overall.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)

PS: Twisted 16.4.1 will be coming soon after this with a patch mitigating SWEET32, by updating the acceptable cipher list.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160828/c9903ea0/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160828/c9903ea0/attachment.sig>

From hawkowl at atleastfornow.net  Sat Aug 27 20:11:23 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 10:11:23 +0800
Subject: [Twisted-Python] Trial not operating on current working dir &
	Sunsetting Python 3.3
Message-ID: <540535FC-D4B4-4E6A-9F99-8695601037E7@atleastfornow.net>

Hi everyone!

Two things to let you all know in this email:

1. The new trial console script does not add the current directory to the PATH. Meaning, you can't use it to test a checkout of your code anymore! Instead, you should only use it for things that are actually on your path -- we recommend using something like tox to automate installing your package and testing your code. Hynek goes into detail here: https://hynek.me/articles/testing-packaging/ . If you really want to do this, you can use 'python -m twisted.trial', but you should really be testing installed versions of your code instead!

2. The next release of Twisted (tentatively named 16.5) will be the last to support Python 3.3. It's not in any LTS platforms, and the only reason we cared was PyPy3 -- but PyPy3.3.5 is not exactly production ready, and since they're working hard on the move to 3.5, I think there's no reason hanging around on 3.3. Hence, 16.5 will still support it in line with our compat policy, but 16.6 (the next release -- might be called 16.11 or 16.12 by that time!) will drop it completely.

Enjoy 16.4.0!

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160828/01e7acf9/attachment.sig>

From hawkowl at atleastfornow.net  Sun Aug 28 09:45:09 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 23:45:09 +0800
Subject: [Twisted-Python] Twisted 16.4.1 Prerelease 1 Announcement
Message-ID: <BAFB7F74-3A23-4F16-9535-778A599B8469@atleastfornow.net>

Hello again everyone,

I bring you a prerelease of the Twisted 16.4.1 security fix release, thus deemed 16.4.1pre1. This release contains:

- A mitigation for SWEET32 (https://www.openssl.org/blog/blog/2016/08/24/sweet32/ <https://www.openssl.org/blog/blog/2016/08/24/sweet32/>).
- The inclusion of ChaCha20 to our TLS cipher suite, providing your underlying OpenSSL supports it.

Please note that the SWEET32 mitigation will break TLS from IE on Windows XP. This shouldn't be an issue for you (hopefully), but if you need to support those poor XP using souls, you can add 3DES back to your CertificateOptions yourself.

As usual, it's available for download -- go here (https://twistedmatrix.com/Releases/pre/16.4.1pre1/ <https://twistedmatrix.com/Releases/pre/16.4.1pre1/>) to get the prerelease tarballs and the full NEWS file. If you want to install it right away, run:

   pip install https://twistedmatrix.com/Releases/pre/16.4.1pre1/Twisted-16.4.1rc1.tar.bz2 <https://twistedmatrix.com/Releases/pre/16.4.1pre1/Twisted-16.4.1rc1.tar.bz2>

Please let me know if you have any issues, as well as if you don't! If everything works well, that's a good thing for me to know :)

Have fun, and stay secure!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160828/fdfd20c9/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160828/fdfd20c9/attachment.sig>

From hawkowl at atleastfornow.net  Sun Aug 28 09:54:40 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sun, 28 Aug 2016 23:54:40 +0800
Subject: [Twisted-Python] Twisted 16.3.2/16.4.0 Release Errata
Message-ID: <9F89FC64-B42F-48E0-B3EA-021FB8878E31@atleastfornow.net>

Hi everyone,

Just a note to say that the HTTP/1 + TLS leaking CLOSE_WAIT sockets issue, fixed in 16.3.2 and 16.4.0, has been assigned a CVE, CVE-2016-7100. It'll start showing up on the various CVE databases soon.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160828/3dbc0d0d/attachment.sig>

From glyph at twistedmatrix.com  Sun Aug 28 14:34:34 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 28 Aug 2016 13:34:34 -0700
Subject: [Twisted-Python] [Twisted-web] Twisted 16.4.0 Release
	Announcement
In-Reply-To: <D3CC8F69-0CD8-4D62-9377-20EC000A8A47@atleastfornow.net>
References: <D3CC8F69-0CD8-4D62-9377-20EC000A8A47@atleastfornow.net>
Message-ID: <ACFCE096-2526-45CB-B5E4-4A8BD6DDCA3B@twistedmatrix.com>


> On Aug 27, 2016, at 18:44, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.4.0.
> 
> The highlights of this release are:
> 
> - twist, a new command line tool for running Twisted plugins, similar to twistd but with a simpler, cleaner interface.
> - A new interface for Protocols, IHandshakeListener, which tells Twisted to tell the Protocol when the TLS handshake has been completed.
> - async/await support for Deferreds, allowing you to write Python 3.5+ coroutines using Twisted
> - Trial can be invoked with "python -m twisted.trial".
> - All Twisted executables (trial, twistd, etc) are now Setuptools console scripts, meaning they will work much better on Windows.
> - 35+ more modules ported to Python 3, and many many cleanups on the way to Python 3 on Windows support.
> - All the security fixes of Twisted 16.3.1 + 16.3.2 (httpoxy, HTTP session identifier strengthening, HTTP+TLS consuming sockets)
> - 240+ closed tickets overall.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS <https://github.com/twisted/twisted/blob/twisted-16.4.0/NEWS>>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
> 
> Twisted Regards,
> Amber Brown (HawkOwl)
> 
> PS: Twisted 16.4.1 will be coming soon after this with a patch mitigating SWEET32, by updating the acceptable cipher list.

Really looking forward to using 'twist' on all my infrastructure.  This is a great release, everybody!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160828/fed0bbad/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Aug 31 02:49:09 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 31 Aug 2016 01:49:09 -0700
Subject: [Twisted-Python] very weird 16.4 upgrade breakage
Message-ID: <D2A3E108-70D1-4B1D-8335-DDBB4360D392@twistedmatrix.com>

On Mimic, the requires.io PR that upgraded us to Twisted 16.4 broke the build.

It did so in a really weird way: https://travis-ci.org/rackerlabs/mimic/jobs/156439316

Specifically, our mac app CI tests failed like so:

  File "pkg_resources/extern/__init__.pyc", line 61, in load_module
    
exceptions.ImportError: The 'appdirs' package is required; normally this is bundled with this package so if you get this warning, consult the packager of your distribution.

Any idea why 'appdirs' might suddenly become a hard dependency of pkg_resources, but only in the py2app bundle?  Did something change about the way we referenced dependencies?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160831/b40ee5fd/attachment-0002.html>

From meejah at meejah.ca  Wed Aug 31 18:34:26 2016
From: meejah at meejah.ca (meejah)
Date: Thu, 01 Sep 2016 04:34:26 +0400
Subject: [Twisted-Python] txtorcon 0.16.1
Message-ID: <8660qgtq3x.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm very happy to announce txtorcon 0.16.1 which adds a couple minor
features to help support using Foolscap and Tahoe-LAFS over Tor.

 * issue 172: give TorProcessProtocol a .quit method
 * issue 181: enable SOCKS5-over-unix-sockets for TorClientEndpoint
   (thanks to "dawuud"). Also adds TLS support over SOCKS5.

You can download the release from PyPI or GitHub (or of
course "pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.16.1
   https://github.com/meejah/txtorcon/releases/tag/v0.16.1

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.16.1.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.16.1.tar.gz.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
d551837025bb9f4fdded58cd11025c6e42924b6eb20dcb2a49f182b3fd85f377  dist/txtorcon-0.16.1.tar.gz
e89a785f64f3544b19f7b1e6cebdbd6914475e0c60f508d9f0b6ce4a840769a7  dist/txtorcon-0.16.1-py2-none-any.whl
EOF

thanks,
meejah


p.s. There is no 0.16.0 because I tagged the wrong thing and noticed
     when pushing to PyPI.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJXx3TOAAoJEMJgKAMSgGmn7AEIAN5BQNqisxefMyKnHA8BCSZW
UJpXPagnftg33HF2v4ZG/2yQUh8sYMqEn/OI99g8yA++bZmG9H0lJixg0zs6V2XV
bX63zJ7d9lr+uu3D+crQNnmofcoUbLRX+Z7n5SWhgGtlsVqemIJton/cuedtnrXm
1E5VdjhxYIZ/2Qv0gTz7ZBYw0Hmkr24qwVufdblQHDov2SdM0kknInWqxFqVMLQd
/p0+PTEF6SMdemHFkOJ73sCbINg6qLB4cErKaFY14U2cnS3Y1pZLhlEKFTzbd8TU
SWtg1b9pn5s4Euq5ruYhNNIqVtQz/lrq0/ZQ+NKiLZ/L2rtw9xFY0nF1KhFTgLc=
=IMj2
-----END PGP SIGNATURE-----



