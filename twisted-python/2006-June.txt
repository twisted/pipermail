From glyph at divmod.com  Thu Jun  1 17:44:57 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 1 Jun 2006 17:44:57 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: 0
Message-ID: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>

Are you packaging Twisted for a major platform?

Do our users know that?

I have just created a placeholder wiki page for package maintainers to link to their particular distribution, explain packaging or installation issues, identify themselves and list appropriate fora for complaining about packaging.

    http://twistedmatrix.com/trac/wiki/Packages

If you are a package maintainer, or you are building packages of Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or whatever the crap it is that Slackware uses these days) please add some information about yourself there.

If you are a package maintainer and you do not have wiki edit permission **please speak up**, a lot more people should have wiki edit than currently do.

Thanks a lot.



From eric.faurot at gmail.com  Thu Jun  1 17:57:57 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Thu, 1 Jun 2006 23:57:57 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
References: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
Message-ID: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>

On 6/1/06, glyph at divmod.com <glyph at divmod.com> wrote:
> Are you packaging Twisted for a major platform?

Not officially, but yes.

> Do our users know that?

Probably not.

> I have just created a placeholder wiki page for package maintainers to link to their particular distribution, explain packaging or installation issues, identify themselves and list appropriate fora for complaining about packaging.
>
>     http://twistedmatrix.com/trac/wiki/Packages
>
> If you are a package maintainer, or you are building packages of Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or whatever the crap it is that Slackware uses these days) please add some information about yourself there.

Actually I liked slackware a lot before turning irremediably to BSD.

> If you are a package maintainer and you do not have wiki edit permission **please speak up**, a lot more people should have wiki edit than currently do.
>
> Thanks a lot.

I have made unofficial OpenBSD ports for various twisted things.
Everything at: http://ekyo.nerim.net/openbsd/index.html

Eric



From jadestorm at nc.rr.com  Thu Jun  1 18:26:38 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Thu, 1 Jun 2006 18:26:38 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
References: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
Message-ID: <7BC7AD36-69B9-4F87-80BD-D988BFD7FBC1@nc.rr.com>

Hi Glyph!  I package the various twisted components for Fink  
(fink.sf.net).  That said, I do not have access to edit that page  
apparantly.  (or if I do, I am blind to where the edit link is)  My  
account on there is "jadestorm".

Daniel

On Jun 1, 2006, at 5:44 PM, glyph at divmod.com wrote:

> Are you packaging Twisted for a major platform?
>
> Do our users know that?
>
> I have just created a placeholder wiki page for package maintainers  
> to link to their particular distribution, explain packaging or  
> installation issues, identify themselves and list appropriate fora  
> for complaining about packaging.
>
>    http://twistedmatrix.com/trac/wiki/Packages
>
> If you are a package maintainer, or you are building packages of  
> Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or  
> whatever the crap it is that Slackware uses these days) please add  
> some information about yourself there.
>
> If you are a package maintainer and you do not have wiki edit  
> permission **please speak up**, a lot more people should have wiki  
> edit than currently do.
>
> Thanks a lot.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at divmod.com  Thu Jun  1 18:31:11 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 1 Jun 2006 18:31:11 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>
Message-ID: <20060601223111.28682.223777387.divmod.quotient.9600@ohm>



On Thu, 1 Jun 2006 23:57:57 +0200, Eric Faurot <eric.faurot at gmail.com> wrote:
>On 6/1/06, glyph at divmod.com <glyph at divmod.com> wrote:

>>Do our users know that?
>
>Probably not.

As I suspected :).

>>     http://twistedmatrix.com/trac/wiki/Packages

I've added you to this page, but please add information (what version of Twisted you've packaged, what subprojects are supported, etc) as necessary.  I'd like this page to be updated frequently and be as authoritative as possible.

On #twisted today for the 100th or so time I repeated our packaging situation, poor communication with packagers, no central source of information, etc, and I realized that this is why people think packages like TurboGears are so great.  Probably 50% of Twisted's learning curve is just figuring out how to install it, and that's sad: originally an explicit goal was no non-Python dependencies so that users could just download and run.

Of course these days that's not really feasible, since you *can* run Twisted without dependencies, but nobody wants to use it without SSH support, without conch, and so forth.  So it should be really well documented how to install it on your particular platform.



From glyph at divmod.com  Thu Jun  1 18:48:59 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 1 Jun 2006 18:48:59 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <7BC7AD36-69B9-4F87-80BD-D988BFD7FBC1@nc.rr.com>
Message-ID: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>



On Thu, 1 Jun 2006 18:26:38 -0400, Daniel Henninger <jadestorm at nc.rr.com> wrote:
>Hi Glyph!  I package the various twisted components for Fink  (fink.sf.net). 
>That said, I do not have access to edit that page  apparantly.  (or if I do, 
>I am blind to where the edit link is)  My  account on there is "jadestorm".

I *think* I just gave you the permission to do that.  Check and let me know? :)



From eric.faurot at gmail.com  Thu Jun  1 18:53:10 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri, 2 Jun 2006 00:53:10 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601223111.28682.223777387.divmod.quotient.9600@ohm>
References: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>
	<20060601223111.28682.223777387.divmod.quotient.9600@ohm>
Message-ID: <e012d6b50606011553q6883027eo6f6308462cb8edad@mail.gmail.com>

On 6/2/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On Thu, 1 Jun 2006 23:57:57 +0200, Eric Faurot <eric.faurot at gmail.com> wrote:
> >On 6/1/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
> >>Do our users know that?
> >
> >Probably not.
>
> As I suspected :).

Well, I advertised it on the openbsd port mailing list and some people
were interrested. I have good hope that these ports can make it to the
official port tree sooner or later.

> >>     http://twistedmatrix.com/trac/wiki/Packages
>
> I've added you to this page, but please add information (what version of Twisted you've packaged, what subprojects are supported, etc) as necessary.  I'd like this page to be updated frequently and be as authoritative as possible.

I'll check that.

> On #twisted today for the 100th or so time I repeated our packaging situation, poor communication with packagers, no central source of information, etc, and I realized that this is why people think packages like TurboGears are so great.  Probably 50% of Twisted's learning curve is just figuring out how to install it, and that's sad: originally an explicit goal was no non-Python dependencies so that users could just download and run.

> Of course these days that's not really feasible, since you *can* run Twisted without dependencies, but nobody wants to use it without SSH support, without conch, and so forth.  So it should be really well documented how to install it on your particular platform.

Concerning OpenBSD, all dependencies (py-crypto, etc) are found in the
official port tree. Installation is very easy. Anyway, I have never
understood what is so complicated with "python setup.py install
--prefix=..." (and why people want nasty eggs now. We hatessss nassty
eggsss. curse them!).

Eric.



From eric.faurot at gmail.com  Thu Jun  1 18:57:49 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri, 2 Jun 2006 00:57:49 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601223111.28682.223777387.divmod.quotient.9600@ohm>
References: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>
	<20060601223111.28682.223777387.divmod.quotient.9600@ohm>
Message-ID: <e012d6b50606011557h2d1e8f7tc54a65023fa6d062@mail.gmail.com>

On 6/2/06, glyph at divmod.com <glyph at divmod.com> wrote:

> I've added you to this page, but please add information (what version of Twisted you've packaged, what subprojects are supported, etc) as necessary.  I'd like this page to be updated frequently and be as authoritative as possible.

By the way, my twisted account is soyt. I don't think I have wiki edit
permission.

Eric.



From pjenvey at groovie.org  Thu Jun  1 19:00:27 2006
From: pjenvey at groovie.org (Philip Jenvey)
Date: Thu, 1 Jun 2006 16:00:27 -0700
Subject: [Twisted-Python] Synchronous Code Fishbowl
In-Reply-To: <447DA3E3.6000801@pollenation.net>
References: <E1Fkl64-0004Lu-02@pyramid.twistedmatrix.com>	<447B6BB5.6000208@eepatents.com>
	<447C655E.2060400@pollenation.net>
	<447DA3E3.6000801@pollenation.net>
Message-ID: <732EC7EF-27C8-4FF1-AC8A-0651F4D848F6@groovie.org>

On May 31, 2006, at 7:10 AM, Matt Goodall wrote:
> After that, I think the queue implementation is ok.
>
>
> And some people insist that threading is easy ;-).
>

Alternatively you could take advantage of python's built in thread- 
safe Queue.Queue. Simply extend it and overwrite the private methods  
(_put, _get, etc.)

--
Philip Jenvey




From jadestorm at nc.rr.com  Thu Jun  1 19:29:52 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Thu, 1 Jun 2006 19:29:52 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
References: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
Message-ID: <B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>

You did indeed.  =D  I don't seem to have access to edit a "page  
about me".  (I just called it jadestorm)  Would you mind granting me  
access to that?  (or if you want the page about me to be named  
differently, that's cool too)

Daniel

On Jun 1, 2006, at 6:48 PM, glyph at divmod.com wrote:

>
>
> On Thu, 1 Jun 2006 18:26:38 -0400, Daniel Henninger  
> <jadestorm at nc.rr.com> wrote:
>> Hi Glyph!  I package the various twisted components for Fink   
>> (fink.sf.net). That said, I do not have access to edit that page   
>> apparantly.  (or if I do, I am blind to where the edit link is)   
>> My  account on there is "jadestorm".
>
> I *think* I just gave you the permission to do that.  Check and let  
> me know? :)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nealie at kobudo.homeunix.net  Fri Jun  2 05:26:50 2006
From: nealie at kobudo.homeunix.net (Nealie)
Date: Fri, 02 Jun 2006 11:26:50 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
References: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
Message-ID: <1149240410.1907.18.camel@server.home>

I package most of the Twisted stuff for FreeBSD, although not all. I've
just created myself a trac account "nealie" if feel like giving me edit
permission.

All the Twisted ports for FreeBSD can be found at:
http://www.freebsd.org/cgi/ports.cgi?query=twisted&stype=all


On Thu, 2006-06-01 at 17:44 -0400, glyph at divmod.com wrote:
> Are you packaging Twisted for a major platform?
> 
> Do our users know that?
> 
> I have just created a placeholder wiki page for package maintainers to link to their particular distribution, explain packaging or installation issues, identify themselves and list appropriate fora for complaining about packaging.
> 
>     http://twistedmatrix.com/trac/wiki/Packages
> 
> If you are a package maintainer, or you are building packages of Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or whatever the crap it is that Slackware uses these days) please add some information about yourself there.
> 
> If you are a package maintainer and you do not have wiki edit permission **please speak up**, a lot more people should have wiki edit than currently do.
> 
> Thanks a lot.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> !DSPAM:447f659893251166728781!
> 




From matt at pollenation.net  Fri Jun  2 07:20:07 2006
From: matt at pollenation.net (Matt Goodall)
Date: Fri, 02 Jun 2006 12:20:07 +0100
Subject: [Twisted-Python] Synchronous Code Fishbowl
In-Reply-To: <732EC7EF-27C8-4FF1-AC8A-0651F4D848F6@groovie.org>
References: <E1Fkl64-0004Lu-02@pyramid.twistedmatrix.com>	<447B6BB5.6000208@eepatents.com>	<447C655E.2060400@pollenation.net>	<447DA3E3.6000801@pollenation.net>
	<732EC7EF-27C8-4FF1-AC8A-0651F4D848F6@groovie.org>
Message-ID: <44801EE7.8070503@pollenation.net>

Philip Jenvey wrote:
> On May 31, 2006, at 7:10 AM, Matt Goodall wrote:
> 
>> After that, I think the queue implementation is ok.
>>
>>
>> And some people insist that threading is easy ;-).
>>
> 
> Alternatively you could take advantage of python's built in thread- safe
> Queue.Queue. Simply extend it and overwrite the private methods  (_put,
> _get, etc.)


Good idea.


The usual comment about not overriding _ method applies but it looks
safe in this case because Queue explicitly documents the _ methods that
are safe to override.


- Matt


-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.



From acapnotic at twistedmatrix.com  Fri Jun  2 11:21:58 2006
From: acapnotic at twistedmatrix.com (Wayne)
Date: Fri, 02 Jun 2006 08:21:58 -0700
Subject: [Twisted-Python] f0und aff0rdable medicati0n prices
Message-ID: <19869058.20060602082158@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060602/7b60c982/attachment.htm 

From acapnotic at twistedmatrix.com  Fri Jun  2 12:20:07 2006
From: acapnotic at twistedmatrix.com (Greta)
Date: Fri, 02 Jun 2006 08:20:07 -0800
Subject: [Twisted-Python] DOctOr recOmmendatiOns
Message-ID: <99366995.20060602082007@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060602/7133e4b0/attachment.htm 

From acapnotic at twistedmatrix.com  Fri Jun  2 11:39:21 2006
From: acapnotic at twistedmatrix.com (Tasha)
Date: Fri, 02 Jun 2006 08:39:21 -0700
Subject: [Twisted-Python] Simple things review.
Message-ID: <70024806.20060602083921@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060602/f01950e6/attachment.htm 

From radix at twistedmatrix.com  Fri Jun  2 10:06:56 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 2 Jun 2006 10:06:56 -0400
Subject: [Twisted-Python] Simple things review.
In-Reply-To: <70024806.20060602083921@twistedmatrix.com>
References: <70024806.20060602083921@twistedmatrix.com>
Message-ID: <60ed19d40606020706m528c9b80ha1cf66a27c70be15@mail.gmail.com>

On 6/2/06, Tasha <acapnotic at twistedmatrix.com> wrote:
> Hi, may i present you freshest hot stuff? ;) Please open your mind for a
> simple thing
>  Internet provided products always cheaper than others.
>  You may agree or not, but this is a fact
>  Just compare the numbers and get the same goods for a half value
>  You may agree or not, but this is a fact.


Sorry about all this spam that has been getting through; some
forging-spammer has gotten hold of a useful address (Kevin's) to send
mail to this list with. I've marked it as requiring moderation for the
time being, so hopefully there won't be any more of this instance.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Fri Jun  2 10:09:03 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 2 Jun 2006 10:09:03 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>
References: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
	<B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>
Message-ID: <60ed19d40606020709q80ef7beu3f7ea03399b2c021@mail.gmail.com>

On 6/1/06, Daniel Henninger <jadestorm at nc.rr.com> wrote:
> You did indeed.  =D  I don't seem to have access to edit a "page
> about me".  (I just called it jadestorm)  Would you mind granting me
> access to that?  (or if you want the page about me to be named
> differently, that's cool too)

You certainly should be able to. Are you getting an error message or
something? As per wiki convention, the page should probably be named
JadeStorm, or DanielHenninger, even.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From jadestorm at nc.rr.com  Fri Jun  2 10:34:00 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Fri, 2 Jun 2006 10:34:00 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <60ed19d40606020709q80ef7beu3f7ea03399b2c021@mail.gmail.com>
References: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
	<B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>
	<60ed19d40606020709q80ef7beu3f7ea03399b2c021@mail.gmail.com>
Message-ID: <472AB896-4915-42AA-B970-73614DA70A1E@nc.rr.com>

Note I just switched it to DanielHenninger.

I get:
Page DanielHenninger not found

With no edit/add abilities on the page.  Is it just that I'm not  
doing the right thing?

Daniel


On Jun 2, 2006, at 10:09 AM, Christopher Armstrong wrote:

> On 6/1/06, Daniel Henninger <jadestorm at nc.rr.com> wrote:
>> You did indeed.  =D  I don't seem to have access to edit a "page
>> about me".  (I just called it jadestorm)  Would you mind granting me
>> access to that?  (or if you want the page about me to be named
>> differently, that's cool too)
>
> You certainly should be able to. Are you getting an error message or
> something? As per wiki convention, the page should probably be named
> JadeStorm, or DanielHenninger, even.
>
>
> -- 
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From sean at twistedmatrix.com  Sat Jun  3 06:04:30 2006
From: sean at twistedmatrix.com (Alexis Gibson)
Date: Sat, 03 Jun 2006 05:04:30 -0500
Subject: [Twisted-Python] Earn a University Degree based on your
	professional experience. 
Message-ID: <tcvbhmhJFWAFCTsean@twistedmatrix.com>


University Degree 

OBTAIN A PROSPEROUS FUTURE, MONEY-EARNING POWER, AND THE PRESTIGE THAT COMES WITH HAVING THE CAREER POSITION YOU?VE ALWAYS DREAMED OF. DIPLOMA FROM PRESTIGIOUS NON-ACCREDITED UNVERSITIES BASED ON YOUR PRESENT KNOWLEDGE AND PROFESSIONAL EXPERIENCE.

If you qualify, no required tests, classes, books or examinations. 

Confidentiality Assured 

1-520-844-1041 

24 hours a day, 7 days a week including Sundays and Holidays







From meng.yan at gmail.com  Sat Jun  3 21:32:32 2006
From: meng.yan at gmail.com (Mike Meng)
Date: Sun, 4 Jun 2006 09:32:32 +0800
Subject: [Twisted-Python] Newbie Q: The first example in Fettig's book
	confused me
Message-ID: <88aa66fa0606031832g7ace824bk9489f341eb7ff1ac@mail.gmail.com>

Hi all,
    I'm a new Python programmer and just picked up Abe Fettig's "Twisted"
book. I tried out the first example, which use reactor.run() to drive
printTime and stopReactor callback functions to print time, and found some
strange things.

   I wrote the code in a .py file and run it, it's fine. However, when I
tried to write the code in interactive mode and run it from IDLE shell
window, all the four printTime were called at once. Why?

   Thank you in advance.

   The session is listed here:

>>> from twisted.internet import reactor
>>> import time
>>> def printTime():
    print "Current time is ", time.strftime("%H:%M:%S")


>>> def stopReactor():
    printTime()
        print "Stopping reactor"
        reactor.stop()


>>> reactor.callLater(1, printTime)
<twisted.internet.base.DelayedCall instance at 0x00D9E288>
>>> reactor.callLater(2, printTime)
<twisted.internet.base.DelayedCall instance at 0x00E42210>
>>> reactor.callLater(3, printTime)
<twisted.internet.base.DelayedCall instance at 0x00DF8BC0>
>>> reactor.callLater(4, printTime)
<twisted.internet.base.DelayedCall instance at 0x00C74760>
>>> reactor.callLater(5, stopReactor)
<twisted.internet.base.DelayedCall instance at 0x0132E738>
>>> reactor.run()
Current time is  09:06:52
Current time is  09:06:52
Current time is  09:06:52
Current time is  09:06:52
Current time is  09:06:52
Stopping reactor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060604/7d46ca45/attachment.htm 

From glyph at divmod.com  Sat Jun  3 21:51:23 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 3 Jun 2006 21:51:23 -0400
Subject: [Twisted-Python] Newbie Q: The first example in Fettig's book
In-Reply-To: <88aa66fa0606031832g7ace824bk9489f341eb7ff1ac@mail.gmail.com>
Message-ID: <20060604015123.31435.497805246.divmod.quotient.816@ohm>



On Sun, 4 Jun 2006 09:32:32 +0800, Mike Meng <meng.yan at gmail.com> wrote:
>Hi all,
>    I'm a new Python programmer and just picked up Abe Fettig's "Twisted"
>book. I tried out the first example, which use reactor.run() to drive
>printTime and stopReactor callback functions to print time, and found some
>strange things.
>
>   I wrote the code in a .py file and run it, it's fine. However, when I
>tried to write the code in interactive mode and run it from IDLE shell
>window, all the four printTime were called at once. Why?

Presumably it took you 5 seconds to type all that code interactively, but each callLater is basing the time it wants to run off of the time that it was when you completed each line :).

Either learn to type really, really fast, or put all the callLater calls into a function which you then call interactively.



From exarkun at twistedmatrix.com  Sun Jun  4 01:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1149397501.81.13793643@twistedmatrix.com

Bug summary
______________________
Summary for 2006-05-28 through 2006-06-04
Bugs opened: 29    Bugs closed: 28  Total open bugs: 622 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -2  |Highest:  +0          |Conch:               -3  
|Enhancement: +10  |High:     +1          |Core:                +7  
                   |Normal:   +3          |Release Management:  -1  
                   |Low:      +4          |Runner:              +1  
                   |Lowest:   +0          |Trial:               +2  
                                          |Web:                 +1  
                                          |Web2:                +2  
                                          |Website:             -1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1761] give wiki edit permissions to everyone who should have them (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1761

[#1770] Reactor for Qt4 using PyQt4 (opened by grudy)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1770

[#1783] add dreid to LICENSE and CREDITS (opened by PenguinOfDoom) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1783

                    ===== High =====
[#1773] twisted.python.filepath.FilePath.islink will never return True (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1773

[#1775] Attach URI to a resource during lookup (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1775

[#1778] Need a way to locate another resource on the site (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1778

[#1779] Use URLPath everywhere we deal with URLs (opened by wsanchez) (CLOSED, duplicate)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1779

[#1780] self.transport.pauseProducing() in connectionMade is ignored for clients (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1780

                    ===== Normal =====
[#1757] Clean up test Clock and move it to a public location (opened by exarkun) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1757

[#1758] url address of our website has changed (opened by lstep) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1758

[#1760] Rewrite iocpreactor to be a small add-on to selectreactor (opened by PenguinOfDoom)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1760

[#1762] iocpreactor 'Connector' object has no attribute 'sub' (opened by ghazel) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1762

[#1763] ProcessMonitor.active is actually Service.running (opened by soyt)
    enhancement     runner     http://twistedmatrix.com/trac/ticket/1763

[#1765] twisted.web.static's file listing should decode filenames properly (opened by radix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1765

[#1768] Synchronous Task Queue (opened by edsuom)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1768

[#1769] setup.py --help still references 'all' command. (opened by dreid) (CLOSED, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1769

[#1771] Per-method preconditions (opened by wsanchez) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1771

[#1772] doc/web2/examples/auth/credsetup.py missing import (opened by dreid) (CLOSED, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1772

[#1776] 2518bis (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1776

[#1777] DAV methods are all bound to DAVFile, need to promote generic code to DAVResource (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1777

[#1781] Remove TestCase._wait from Trial (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1781

[#1782] web2's WSGIHandler incorrectly advertises twisted as a multiprocess environment (opened by pjenvey)
    defect          web2       http://twistedmatrix.com/trac/ticket/1782

[#1785] reactor.run should raise an error when called while the reactor is running (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/1785

                    ===== Low =====
[#1759] eliminate "portable" gtk2 reactor on win32 platforms, use real gtk2 reactor (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1759

[#1764] No-op timer service in _twistw.py is (probably) unnecessary (opened by soyt)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1764

[#1766] distutils' bdist_rpm fails due to package naming (opened by gopher) (CLOSED, duplicate)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1766

[#1774] HTTP Proxies inproperly handled both for client and server code in Twisted.Web (opened by ironfroggy)
    defect          web        http://twistedmatrix.com/trac/ticket/1774

[#1784] disttrial --hosts=kunai,takkun,muon twisted (opened by exarkun)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1784

                    ===== Lowest =====
[#1767] distutils' bdist_rpm fails (assuming it is not supported and requesting this as a feature) (opened by gopher) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1767



Closed Bugs
______________________
                    ===== Highest =====
[#1399] log.msg('why I failed'); log.err(failureObj); idiom is really stupid, should be replaced (opened by glyph, closed by glyph, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1399

[#1658] conch plugin stomps manhole plugin (opened by mfeif, closed by glyph, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/1658

[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1783] add dreid to LICENSE and CREDITS (opened by PenguinOfDoom, closed by PenguinOfDoom, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1783

                    ===== High =====
[#610 ] Use gobject functions when possible in gtk2reactor (opened by jdahlin, closed by glyph, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/610

[#1779] Use URLPath everywhere we deal with URLs (opened by wsanchez, closed by dreid, duplicate)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1779

[#1773] twisted.python.filepath.FilePath.islink will never return True (opened by exarkun, closed by glyph, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1773

[#945 ] websetroot: Completely fails fresh install of Twisted 2.0.0 and Twisted Web 0.5.0 (opened by levi, closed by radix, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/945

                    ===== Normal =====
[#494 ] Extract maintainers from docstrings to separate page (opened by hypatia, closed by tekNico, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/494

[#1758] url address of our website has changed (opened by lstep, closed by glyph, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1758

[#1762] iocpreactor 'Connector' object has no attribute 'sub' (opened by ghazel, closed by ghazel, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1762

[#1769] setup.py --help still references 'all' command. (opened by dreid, closed by exarkun, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1769

[#1520] README-sumo is missing a date (opened by TimothyFitz, closed by radix, wontfix)
    defect          release management http://twistedmatrix.com/trac/ticket/1520

[#1678] State of many Twisted subprojects is unclear (opened by synapsis, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1678

[#1771] Per-method preconditions (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1771

[#1772] doc/web2/examples/auth/credsetup.py missing import (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1772

[#1700] t.w2.vhost.AutoVHostURIRewrite fails silently if no X-Forwarded-Host header is provided. (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1700

[#1699] t.w2.vhost.AutoVHostURIRewrite doesn't pass remote_ip information (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1699

[#1723] twisted.web2.http_headers.parseWWWAuthenticate doesn't work without a challenge. (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1723

[#1757] Clean up test Clock and move it to a public location (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1757

[#1757] Clean up test Clock and move it to a public location (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1757

                    ===== Low =====
[#1766] distutils' bdist_rpm fails due to package naming (opened by gopher, closed by glyph, duplicate)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1766

[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

                    ===== Lowest =====
[#1767] distutils' bdist_rpm fails (assuming it is not supported and requesting this as a feature) (opened by gopher, closed by glyph, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1767





From sean at twistedmatrix.com  Mon Jun  5 05:47:44 2006
From: sean at twistedmatrix.com (Hubert Rodriquez)
Date: Mon, 05 Jun 2006 04:47:44 -0500
Subject: [Twisted-Python] Earn a University Degree based on your
	professional experience. 
Message-ID: <qqknnkPMHHQYFsean@twistedmatrix.com>


University Degree 

OBTAIN A PROSPEROUS FUTURE, MONEY-EARNING POWER, AND THE PRESTIGE THAT COMES WITH HAVING THE CAREER POSITION YOU?VE ALWAYS DREAMED OF. DIPLOMA FROM PRESTIGIOUS NON-ACCREDITED UNVERSITIES BASED ON YOUR PRESENT KNOWLEDGE AND PROFESSIONAL EXPERIENCE.

If you qualify, no required tests, classes, books or examinations. 

Confidentiality Assured 

1-520-844-1041 

24 hours a day, 7 days a week including Sundays and Holidays

Call us and leave message 
offer ending soon..






From fairwinds at eastlink.ca  Mon Jun  5 10:05:38 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 05 Jun 2006 11:05:38 -0300
Subject: [Twisted-Python] Message sizing design question
In-Reply-To: <20060604015123.31435.497805246.divmod.quotient.816@ohm>
References: <20060604015123.31435.497805246.divmod.quotient.816@ohm>
Message-ID: <44843A32.7060907@eastlink.ca>

Hi. I am trying to decide where to put message sizing for a custom 
protocol. I have set up the connections to be as generic as possible so 
message handling in as much as possible is being done by the connection 
handler that is aware of the connection it is handling at the time. 
There are a few things I need to keep track of at the connection 
(protocol) level such as original handshake and message id's that I am 
tracking per connection, but for the most part, everything else can be 
handled pretty generically by the connection handler.

In any case, where to deal with message sizing? My thought was that the 
connection handler should deal with it since it should also be 
responsible for encode and decode of messages. So to process or prepare 
a message size seems like it fits in the connection handler also.

I realize Banana, for example does sizing in the protocol itself but it 
does not anticipate handing the message off to a handler for such 
things. Anyway, it would be great if someone could confirm my reasoning 
or has some comments on this. Many thanks,

Regards,
David



From michele.petrazzo at unipex.it  Mon Jun  5 14:45:30 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Mon, 05 Jun 2006 20:45:30 +0200
Subject: [Twisted-Python] ftpclient question
Message-ID: <44847BCA.3060503@unipex.it>

Hi list,
I'm making some tries with the ftpclient.py example and I don't know how
to handle the "login error" state (and other errors): if I use a correct
name/passwd, the .pwd/.nlst functions work, but if I use a wrong one, I
receive "only":

"""
[Failure instance: Traceback (failure with no frames):
twisted.protocols.ftp.ConnectionLost: ('FTP connection lost',
<twisted.python.failure.Failure twisted.protocols.ftp.CommandFailed>)
]
"""

that not mean "wrong username or password"!
Where I can find more useful error-descriptions?

P.s. There is a "global" solution for the "error-descriptions" on
FTPClient class? I'm making a lot of tries with .list function (with a
not exits path) and others, but all say me a "unreadable" errors.

Thanks,
Michele



From fairwinds at eastlink.ca  Mon Jun  5 15:26:12 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 05 Jun 2006 16:26:12 -0300
Subject: [Twisted-Python] Message sizing design question
In-Reply-To: <44843A32.7060907@eastlink.ca>
References: <20060604015123.31435.497805246.divmod.quotient.816@ohm>
	<44843A32.7060907@eastlink.ca>
Message-ID: <44848554.2030904@eastlink.ca>

I guess I answered myself. Subclassing my base protocol to handle the 
marshalling between sending and receiving appears more transparent.

Regards,
David

David Pratt wrote:
> Hi. I am trying to decide where to put message sizing for a custom 
> protocol. I have set up the connections to be as generic as possible so 
> message handling in as much as possible is being done by the connection 
> handler that is aware of the connection it is handling at the time. 
> There are a few things I need to keep track of at the connection 
> (protocol) level such as original handshake and message id's that I am 
> tracking per connection, but for the most part, everything else can be 
> handled pretty generically by the connection handler.
> 
> In any case, where to deal with message sizing? My thought was that the 
> connection handler should deal with it since it should also be 
> responsible for encode and decode of messages. So to process or prepare 
> a message size seems like it fits in the connection handler also.
> 
> I realize Banana, for example does sizing in the protocol itself but it 
> does not anticipate handing the message off to a handler for such 
> things. Anyway, it would be great if someone could confirm my reasoning 
> or has some comments on this. Many thanks,
> 
> Regards,
> David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From jcea at argo.es  Tue Jun  6 18:14:08 2006
From: jcea at argo.es (Jesus Cea)
Date: Wed, 07 Jun 2006 00:14:08 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <447CA73E.5090705@comcast.net>
References: <447CA73E.5090705@comcast.net>
Message-ID: <4485FE30.3070700@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stephen Waterbury wrote:
> I just today discovered "json-rpc", which looks pretty cool.

Perhaps you should look at "pyro" also:

http://pyro.sourceforge.net/

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRIX+MJlgi5GaxT1NAQLcNwQAnjuVRWuUNihHRPK/vMsijYG1986xPqV8
+NPxAoAMx2WNJYdtem4gZJQUKn5Oip1V2anZonawcoA0Oru4H366pU0EUbAQyyWH
ALI6aNkD9pwLKZTCkCJSvNvbb/ZPU+mcIYuV7ydj9S5rCmo+6HM5FhUhy9cO8TrW
fQ0HkfqZrno=
=EvKv
-----END PGP SIGNATURE-----



From jcea at argo.es  Tue Jun  6 18:20:52 2006
From: jcea at argo.es (Jesus Cea)
Date: Wed, 07 Jun 2006 00:20:52 +0200
Subject: [Twisted-Python] Do Twisted support LMTP servers?
In-Reply-To: <000e01c66476$728e8860$38aa20d4@hp>
References: <000e01c66476$728e8860$38aa20d4@hp>
Message-ID: <4485FFC4.7080006@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Simon Hedberg wrote:
> Ok, I had a closer look and here's a more complete version, that sends a
> status code for each recipient. 
> Try it out

Thanks.

I finally buried twisted and did the work with threads. Yes, I hear you
cry :-).

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRIX/xJlgi5GaxT1NAQLEUwP+PIt2CyT6jCB9x7/h9YR8bkgofNOGJXRl
qr5faPgpPGbC8OIv4dOQAD/bvMKryOpDGTF5Sv++CNwRgufp9utcYcaAXhYS+54k
95uzAonVn0p0BYPwDuJLddN1IVfYsD6aVFUje474m2in8+H2NwZLR/r3G1u5ouOA
5V6tQeeD2Ls=
=3lFE
-----END PGP SIGNATURE-----



From golux at comcast.net  Tue Jun  6 22:06:50 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 06 Jun 2006 22:06:50 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <4485FE30.3070700@argo.es>
References: <447CA73E.5090705@comcast.net> <4485FE30.3070700@argo.es>
Message-ID: <448634BA.2050800@comcast.net>

Jesus Cea wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Stephen Waterbury wrote:
>> I just today discovered "json-rpc", which looks pretty cool.
> 
> Perhaps you should look at "pyro" also:

Pyro's been around for a while.  It's useful for simple things
but has several deficiencies relative to PB.

Steve



From l.oluyede at gmail.com  Wed Jun  7 08:42:18 2006
From: l.oluyede at gmail.com (Lawrence Oluyede)
Date: Wed, 7 Jun 2006 14:42:18 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <448634BA.2050800@comcast.net>
References: <447CA73E.5090705@comcast.net> <4485FE30.3070700@argo.es>
	<448634BA.2050800@comcast.net>
Message-ID: <9eebf5740606070542n52b15734q908cf826c750217@mail.gmail.com>

> Pyro's been around for a while.  It's useful for simple things
> but has several deficiencies relative to PB.

I heard of http://rpyc.wikispaces.com/

-- 
Lawrence
http://www.oluyede.org/blog



From thomas at apestaart.org  Thu Jun  8 05:45:15 2006
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Thu, 08 Jun 2006 11:45:15 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <447CA73E.5090705@comcast.net>
References: <447CA73E.5090705@comcast.net>
Message-ID: <1149759916.24971.109.camel@otto.amantes>


> PB is what I really want to use for my project, but I need something
> that's close to ready-for-prime-time, and I've been waiting literally
> years for PB, so in the meantime I'm looking at other candidates.

At the risk of being too obvious, we've been using PB as shipped with
Twisted since 1.3.0, and it's worked very well for us.  Are you saying
there's specific stuff you need from newpb that's not in the current
implementation ?

Thomas




From thomas at apestaart.org  Thu Jun  8 06:05:22 2006
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Thu, 08 Jun 2006 12:05:22 +0200
Subject: [Twisted-Python] recommended twisted database coding
Message-ID: <1149761123.24971.120.camel@otto.amantes>

Hi everyone,

As of late I've been thinking of rewriting an old PHP application that I
used to help out on in Python.  It would give me a chance to see if
Python and everything I"ve learned while learning Python would help me
overcome my innate disgust of doing database/web programming :)

The application in question is relatively simple - it's your average
"manage-all-my-music" application,  with artists, audio files, albums,
ratings, ... In the PHP version, I had already moved from doing raw SQL
queries everywhere to instantiating objects from the database, so the
idea of having an object model that abstracts away persistence to a
database is appealing.

Being a Twisted groupie I would prefer to use something that works well
with Twisted.  After looking at all the options available to me, I'm
getting a little confused, and would like some feedback to clear up the
confusion.

- Twisted is, of course, async, so twisted.enterprise.adbapi wraps 2.0
DB API's using threads, which makes sense.  Are people using adbapi much
in production though ? From scanning the mailing list it seems like
people prefer layering stuff on top of adbapi to implement object
models.

- Axiom seems like a nice Object layer with a database backend.
However, the part I don't understand is that suddenly the description
claims that Axiom is doing blocking SQLite calls, and that this isn't
really a problem.  Since Axiom is a Divmod project, I tend to trust
their opinion when it comes to Twisted.  But why is it suddenly OK to
have blocking code being used ? Does this only apply to SQLite, or would
it apply to any database being used ?

- SQLObject seems to come very close to what I would want to use to
abstract away the database backend, and just pretend that I only deal
with persistently stored python objects.  Has anyone managed to use
SQLObject in a twisted project ? If not, what's the closest I can get
that gives me the advantage of having a python object backend ?

- how do persistent object systems typically deal with transactions ?
Suppose you want to do three operations on three different objects as a
transaction, is that possible at all ?

- Are there any active projects that use a database backend, twisted,
persistent objects, and are freely available, that I can sneak a peek at
for my further education ?

Thanks in advance,
Thomas





From mithrandi-twisted-python at mithrandi.za.net  Thu Jun  8 08:13:35 2006
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Thu, 8 Jun 2006 14:13:35 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
References: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <20060608121335.GK4297@mithrandi.za.net>

* Thomas Vander Stichele <thomas at apestaart.org> [2006-06-08 12:05:22 +0200]:

> - Axiom seems like a nice Object layer with a database backend.
> However, the part I don't understand is that suddenly the description
> claims that Axiom is doing blocking SQLite calls, and that this isn't
> really a problem.  Since Axiom is a Divmod project, I tend to trust
> their opinion when it comes to Twisted.  But why is it suddenly OK to
> have blocking code being used ? Does this only apply to SQLite, or would
> it apply to any database being used ?

One thing that's "special" about SQLite is that in runs in-process, so
there are no network latency issues involved; like any other "blocking"
code, the idea is to only do small bits of work at a time. If you need
to run long queries, you would either break them up into smaller chunks,
or run them in a separate process/thread/whatever to avoid blocking the
main server.

> - how do persistent object systems typically deal with transactions ?
> Suppose you want to do three operations on three different objects as a
> transaction, is that possible at all ?

I'm only really familiar with Axiom, so I can't comment on SQLObject and
friends; in Axiom, the Store (which is the application-level object you
use to interact with the database) has a transact() method which you
invoke like store.transact(someFunc, arg1, arg2, ...). Within the
transaction, any object manipulations/queries/etc. you perform obviously
turn into SQL queries in the database layer, and these are run in an SQL
transaction.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060608/7c9c8dc0/attachment.pgp 

From eprparadocs at gmail.com  Thu Jun  8 09:09:59 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 08 Jun 2006 09:09:59 -0400
Subject: [Twisted-Python] Shutting down a service...
In-Reply-To: <200605301513.31116.rudy@goldenhelix.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>	<200605301014.45911.rudy@goldenhelix.com>	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com>
Message-ID: <448821A7.8010707@gmail.com>

I have a problem I am trying to solve and hope that someone can see an
obvious way (particularly since I am new with Twisted).

My system is composed of 4 different services: an ftp server, a
multicast server, a XML-RPC facility and a service made of a proprietary
 protocol. The problem I am having is when I shut down the system I have
to close down nicely which means that I have to send out a few "I am
leaving" messages, etc.

The issue is that I can terminate because I get an RPC shutdown request,
but also the service getting a SIGINT. Is there some convenient
"Twisted" way to capture sigint (or any signals) and route them to
shutdown services in my application?

Thanks in advance,
Chaz.



From eric.faurot at gmail.com  Thu Jun  8 09:22:57 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Thu, 8 Jun 2006 15:22:57 +0200
Subject: [Twisted-Python] Shutting down a service...
In-Reply-To: <448821A7.8010707@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448821A7.8010707@gmail.com>
Message-ID: <e012d6b50606080622p12a456e5icaed10ad6773b2b6@mail.gmail.com>

On 6/8/06, Chaz. <eprparadocs at gmail.com> wrote:

> The issue is that I can terminate because I get an RPC shutdown request,
> but also the service getting a SIGINT. Is there some convenient
> "Twisted" way to capture sigint (or any signals) and route them to
> shutdown services in my application?

The stopService() method is called on your service instances, so
that is where you must do the clean up.

Eric.



From golux at comcast.net  Thu Jun  8 09:30:17 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 08 Jun 2006 09:30:17 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <1149759916.24971.109.camel@otto.amantes>
References: <447CA73E.5090705@comcast.net>
	<1149759916.24971.109.camel@otto.amantes>
Message-ID: <44882669.2040501@comcast.net>

Thomas Vander Stichele wrote:
>> PB is what I really want to use for my project, but I need something
>> that's close to ready-for-prime-time, and I've been waiting literally
>> years for PB, so in the meantime I'm looking at other candidates.
> 
> At the risk of being too obvious, we've been using PB as shipped with
> Twisted since 1.3.0, and it's worked very well for us.  Are you saying
> there's specific stuff you need from newpb that's not in the current
> implementation ?

Yes:  forward compatibility.  ;)   I've written PB code, too, and that
code doesn't work with newpb.  Not that I would expect it to, given the
fairly substantial changes Brian made in developing newpb, nor do I
think it would be good to have that as a constraint on newpb.

Given newpb's list of features:

http://twistedmatrix.com/trac/wiki/NewPB

... what would you *not* want??  ;)  But of course, you said "need".
My impression is that newpb will be more scalable, which is something
my app will definitely need.  Also, the better serialization
architecture will be important, as some of my objects can be large.
And the serializability of "most inert Python types", while not
essential, is very nice to have.  Also, my code is interface-driven,
for which newpb is better adapted (so to speak :).

Steve



From glyph at divmod.com  Thu Jun  8 11:38:56 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 8 Jun 2006 11:38:56 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <44882669.2040501@comcast.net>
Message-ID: <20060608153856.31435.1503123222.divmod.quotient.3918@ohm>

On Thu, 08 Jun 2006 09:30:17 -0400, Stephen Waterbury <golux at comcast.net> wrote:
>Thomas Vander Stichele wrote:

>>At the risk of being too obvious, we've been using PB as shipped with
>>Twisted since 1.3.0, and it's worked very well for us.  Are you saying
>>there's specific stuff you need from newpb that's not in the current
>>implementation ?

>Yes:  forward compatibility.  ;)   I've written PB code, too, and that
>code doesn't work with newpb.  Not that I would expect it to, given the
>fairly substantial changes Brian made in developing newpb, nor do I
>think it would be good to have that as a constraint on newpb.

I think I actually disagree.  If it's going to be called "PB", it should be compatible, in some way, with the existing "PB" infrastructure.  Maybe not if you wrote insanely complex custom side-effecty custom jelliers, but at least you should be able to port fairly easily.

While wire-level compatibility might be desirable, I think that application-level compatibility should actually become a requirement.  As you note, Steve, the only thing that the promise of a PB2 that will be totally incompatible with PB1 is doing is discouraging people from looking at either right now.

If it's not going to be compatible at all, we should come up with a new name and stop calling it PB.  Maybe Twisted Caps or something.

That said, I don't think that pb2 should be focused on application-level compatibility *right now*.  It's got a bunch of problems left to solve, and what little time Brian can spend to work on it should be spent fixing those problems.

(Can we please stop calling it "newpb", by the way?  Or at least, for consistency, call Twisted 2.4, "newnewnewnewnewnewnewTwisted"?)

Other applications are already using PB though, and many are doing it to good effect.  So let me say this as unambiguously as possible:

PB1 is still supported, and until further notice, it will continue to be.  PB2 is still experimental and is *not* yet supported.  We might not have a lot of development bandwidth to spend on PB1, but bugs are still being fixed, deprecations removed, and APIs updated to reflect the modern state of Twisted.

It can be updated and fixed incrementally while we wait for the Great Revolution of PB2.  Perhaps we can even start making the various APIs converge, so that the migration process will be smoother.

This isn't a new decision or announcement, just a statement of the current state of affairs.  Brian has been very clear about PB2's experimental status all along.  Maintenance on PB1 never stopped.  JP, for example, just recently removed a bunch of grotty old-cred stuff (hallelujiah it's gone) from PB1.  It just seems like because there's this new direction, everyone tacitly assumes that the old stuff will be dropped -- Twisted has an unfortunate history as such things go, but we are getting better about it.



From glyph at divmod.com  Thu Jun  8 12:00:39 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 8 Jun 2006 12:00:39 -0400
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <20060608160039.31435.79285738.divmod.quotient.3924@ohm>



On Thu, 08 Jun 2006 12:05:22 +0200, Thomas Vander Stichele <thomas at apestaart.org> wrote:
>Hi everyone,

>Being a Twisted groupie I would prefer to use something that works well
>with Twisted.  After looking at all the options available to me, I'm
>getting a little confused, and would like some feedback to clear up the
>confusion.

Axiom was designed from the ground up as a Twisted-friendly database.  You can store Twisted service objects in axiom databases, and run axiom databases as twisted servers using the 'axiomatic start' command.

If you're writing a blog/cms type thing, you should probably look at this brief tutorial for an example of how such things get built with axiom:

  http://divmod.org/trac/wiki/MantissaBlogTutorial

(mantissa is axiom+nevow+athena+glue, basically)

Other database integration tools may be more database-y (and, for example, give you a choice of database backend, which axiom does not currently do) but you are unlikely to find one twistier than axiom ;).



From general at eepatents.com  Thu Jun  8 19:55:27 2006
From: general at eepatents.com (Ed Suominen)
Date: Thu, 08 Jun 2006 16:55:27 -0700
Subject: [Twisted-Python] Re: recommended twisted database coding
In-Reply-To: <E1FoNrY-0005JF-02@pyramid.twistedmatrix.com>
References: <E1FoNrY-0005JF-02@pyramid.twistedmatrix.com>
Message-ID: <4488B8EF.6070206@eepatents.com>

From: Thomas Vander Stichele <thomas at apestaart.org>
> Are there any active projects that use a database backend, twisted,
> persistent objects, and are freely available, that I can sneak a peek at
> for my further education ?

Take a look at my sAsync ("SQLAlchemy made Asynchronous") project at
http://foss.eepatents.com/sAsync/. I think it does a lot of what you're
looking for. I've got the lower-level foundation code unit tested and
working fine, and am currently working on higher-level stuff like an
asynchronously-accessible persistent "name:value" item store and a
persistent dictionary that uses it.

The object you'll most want to get familiar with if you use sAsync is
"AccessBroker" in the "database" module [1].

The synchronous-to-asynchronous interface problem, which must be dealt
with by any Twisted-compatible DB-API that doesn't do the low-level
network file or connections entirely on its own, is addressed in what I
like to think is a pretty cool fashion via a priority queue that runs in
a single, dedicated worker thread. See the "syncbridge" module for
details [2].

By popular demand (well, one user to be exact), I've included a mildly
informative "Usage" document at the site that may help explain how and
why to use sAsync.

Best regards,
Ed Suominen

--------------------------------------------
[1] http://foss.eepatents.com/sAsync/browser/trunk/sasync/database.py
[2] http://foss.eepatents.com/sAsync/browser/trunk/sasync/syncbridge.py



From eric.faurot at gmail.com  Fri Jun  9 08:02:50 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri, 9 Jun 2006 14:02:50 +0200
Subject: [Twisted-Python] Bullets for the twisted proselytizer gun?
Message-ID: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>

Hi all,

I will probably have a chance to be in charge of a (commercial)
project that consists in developping a platform for handling
distributed content, with XML-flavored chips and webby services.  I am
also confident that my voice will be heard concerning the technical
aspects of the project.  My wish is of course to use twisted for that.
But I will have to convince people with the tie and the money, who
tragically are also the ones who are most sensible to buzzwords.

The LAMP case will be rather easy to deal with.  I'll show no mercy.
My concern is that the dreadful J2EE acronym has already been uttered.
I have programmed a bit in java already, and I never liked it.  I find
it cumbersome and boring.  Although I can certainly do that if I am
forced to, I want to avoid it at (nearly) all cost.  But I don't have
enough experience to plead effectively against it.  I doubt that
intuition and aesthetic inclinations are really convincing arguments.

So, I'd like to ask twisted enthiusiasts with better knowledge and
experience of J2EE than I have, if they could provide meaningful
points for advocating python/twisted over J2EE, pro and cons for each.

My main argument so far is that I am *way* more fluent in python, so I
am more likely to come up with a prototype quickly.  Also, the
flexibility of python makes early refactoring much easier, and it is
always possible to reimplement things in another language once the
architecture stabilizes.  I also think python is more portable than
java, but that would sound a bit anecdotal.

Thanks for your input.
Eric.



From therve at free.fr  Fri Jun  9 10:33:13 2006
From: therve at free.fr (Thomas HERVE)
Date: Fri, 09 Jun 2006 16:33:13 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
References: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <20060609163313.4cjarlueww088w80@itchy.wasabout.net>

Quoting Thomas Vander Stichele <thomas at apestaart.org>:

> Hi everyone,

Hi,

> - Twisted is, of course, async, so twisted.enterprise.adbapi wraps 2.0
> DB API's using threads, which makes sense.  Are people using adbapi much
> in production though ?

Here we use adbapi a lot, against Postgresql, MySQL and SQLite. Note 
that adapi is mainly a wrapper around a threadpool, there's very little 
magic in it (which explains it works great).

> From scanning the mailing list it seems like
> people prefer layering stuff on top of adbapi to implement object
> models.

We did that too :). I just modeled a simple ORM to construct objects 
from SQL results (it just put the values into attributes of a dict or 
an object).

We also use a simple wrapper around ConnectionPool to handle specific 
databases problems (concurrent updates in Postgres or timeouts in 
MySQL), and add other methods (for example executemany of pysqlite2 is 
very useful).

> - SQLObject seems to come very close to what I would want to use to
> abstract away the database backend, and just pretend that I only deal
> with persistently stored python objects.  Has anyone managed to use
> SQLObject in a twisted project ? If not, what's the closest I can get
> that gives me the advantage of having a python object backend ?

I strongly discourage you from using SQLObject. It's really a pain to 
use, and there's implicit behaviours that are nasty (cache, attributes 
retrieval...). It's not very hard to use with a thread pool in Twisted, 
but I think it's really designed for simple threaded (web) apps.

SQLAlchemy seems much cleaner (but still in early stage) and as advised 
by Ed Suominen you should take a look at sAsync.

-- 
Thomas

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.




From ldanielburr at mac.com  Fri Jun  9 12:44:59 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 09 Jun 2006 11:44:59 -0500
Subject: [Twisted-Python] Bullets for the twisted proselytizer gun?
In-Reply-To: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
References: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
Message-ID: <op.tavzdxqm3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Fri, 09 Jun 2006 07:02:50 -0500, Eric Faurot <eric.faurot at gmail.com>  
wrote:

> Hi all,
>

Hi Eric, let's see if we can provide you with some ammunition...

> I will probably have a chance to be in charge of a (commercial)
> project that consists in developping a platform for handling
> distributed content, with XML-flavored chips and webby services.  I am
> also confident that my voice will be heard concerning the technical
> aspects of the project.  My wish is of course to use twisted for that.
> But I will have to convince people with the tie and the money, who
> tragically are also the ones who are most sensible to buzzwords.
>

How true.  I've worked for a few large corporations, in the energy and  
pharmaceutical sectors, and management is always more comfortable  
contemplating so-called "best-of-breed solutions", where said term really  
means "whatever is popular in the media, supported by large companies, and  
used by the competition".

> The LAMP case will be rather easy to deal with.  I'll show no mercy.
> My concern is that the dreadful J2EE acronym has already been uttered.
> I have programmed a bit in java already, and I never liked it.  I find
> it cumbersome and boring.  Although I can certainly do that if I am
> forced to, I want to avoid it at (nearly) all cost.  But I don't have
> enough experience to plead effectively against it.  I doubt that
> intuition and aesthetic inclinations are really convincing arguments.
>

That's correct; management is already relying on subjective criteria  
masquerading as objective requirements, so adding more subjectivity to the  
discussion will only hurt you.

> So, I'd like to ask twisted enthiusiasts with better knowledge and
> experience of J2EE than I have, if they could provide meaningful
> points for advocating python/twisted over J2EE, pro and cons for each.
>

My experience, which is based on a number of projects for the corporations  
I mentioned above, is as follows:

- Case 1
   - A web-service application was written in Python, using twisted
     and the SGMLOP parser (needed because it can parse non-xml markup).
     This application was used by a search engine, to allow users to
     search for portlets that might be useful in solving a problem.
     When the user clicked on a search result, the twisted service
     would connect to the chosen portlet, perform URL rewriting on
     the portlet's markup, and present a preview of the portlet UI
     to the user, from within the search results UI.
   - Application was developed to a working state in 2 weeks.
   - Bug fixes, refinements, etc, took another 2 weeks.

   - Management decided to contract a large offshore J2EE firm to
     rewrite the application in Java, so as to be compliant with
     "best-practices".
   - Development of a working prototype took 1 month.
   - Application was completed after 3 months, with slightly
     reduced functionality.
   - Cost was roughly twice that of the original application, despite
     the reduced hourly rate of the offshore developers.

I've got more such cases, but not the time to type them all up for you.   
Hopefully this one real-world example will give you some idea what kind of  
advantages python and twisted can provide your management.

> My main argument so far is that I am *way* more fluent in python, so I
> am more likely to come up with a prototype quickly.  Also, the
> flexibility of python makes early refactoring much easier, and it is
> always possible to reimplement things in another language once the
> architecture stabilizes.  I also think python is more portable than
> java, but that would sound a bit anecdotal.
>

Fluency isn't a great argument, in that management will counter by  
pointing out that there are a bazillion more J2EE developers than Python  
developers, and therefore choosing J2EE would make it easier/cheaper to  
find developers to support and maintain the application.  Stick with  
reduced development time and increased developer productivity as your main  
points: Make it clear to them that 1 developer using python and twisted  
can do more work, in less time.  That's efficient for the business, and  
management should see that as a viable alternative to the "throw bodies at  
the problem" approach.

> Thanks for your input.
> Eric.
>

Hope this helps,

L. Daniel Burr



From projects at reedflute.com  Fri Jun  9 14:39:21 2006
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 09 Jun 2006 20:39:21 +0200
Subject: [Twisted-Python] Bullets for the twisted proselytizer gun?
In-Reply-To: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
References: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
Message-ID: <4489C059.6080600@reedflute.com>

Eric Faurot wrote:

> So, I'd like to ask twisted enthiusiasts with better knowledge and
> experience of J2EE than I have, if they could provide meaningful
> points for advocating python/twisted over J2EE, pro and cons for each.

Let me take a shot.

Pros for J2EE over Twisted:

J2EE is fully mulithreaded and Twisted running on Python has some small 
built-in inconvenience named  a "global interpreter lock"
J2EE is built on Java which does not comply with the Open Source license 
requirement where Twisted on Python is Open Source compatible

Pros for Twisted over J2EE:

J2EE is fully mulithreaded and Twisted running on Python uses the 
event-driven  model in a single thread
J2EE is a full fledged application server platform where Twisted is good 
for network based applications
J2EE is built on Java which does not comply with the Open Source license 
requirement where Twisted on Python is Open Source compatible

>
>
> My main argument so far is that I am *way* more fluent in python, 


I'm also much better at swinging a chain saw than chopping small with my 
swiss army knife.   But I  don't open cans with my chain saw  just as I 
don't try to chop down trees with my swiss army knife :-)


regards,

Eugene Coetzee




From thomas at apestaart.org  Fri Jun  9 15:37:44 2006
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Fri, 09 Jun 2006 21:37:44 +0200
Subject: [Twisted-Python] Twisted Fedora Core packages - testing appreciated
Message-ID: <1149881864.25479.7.camel@otto.amantes>

Hey everyone,

I've finally gotten off my ass and started updating the Fedora Extras
packages for Twisted.  I based myself on the excellent work of Jeff
Pitman from PyVault, and refined some things here and there.  In
addition, I started packaging parts of the DivMod stack (because I"m
curious and wanted to try them out).

I could use some feedback from people on Fedora Core to see if
everything looks fine.

I have packages for FC4 and FC5 for both i386 and x86_64.
FC5 i386 is up at
http://thomas.apestaart.org/download/pkg/fedora-5-i386-extras/

change 5 to 4 for FC4, or i386 to x86_64 for 64 bit, or both.

If anything doesn't work, let me know.  I will start pushing these to
Fedora Extras as soon as we have Flumotion completely converted to 2.4

Enjoy,
Thomas




From terry at jon.es  Fri Jun  9 17:03:06 2006
From: terry at jon.es (Terry Jones)
Date: Fri, 9 Jun 2006 23:03:06 +0200
Subject: [Twisted-Python] Passing extra arguments to twistd?
Message-ID: <17545.57866.711310.845285@terry.jones.tc>

I have a .tac file and am using twistd on it to start the application.  I
would like to be able to specify a config file on the command line so the
.tac file code can figure out what it should do.  Twistd doesn't seem to
want me to do that though.

Something like allowing

  $ twistd -twistedopts file -- extra args here...

would be nice. Or is there a better way to do this?

Regards,
Terry



From exarkun at divmod.com  Fri Jun  9 18:15:55 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Jun 2006 18:15:55 -0400
Subject: [Twisted-Python] Passing extra arguments to twistd?
In-Reply-To: <17545.57866.711310.845285@terry.jones.tc>
Message-ID: <20060609221555.31435.2102753837.divmod.quotient.4881@ohm>

On Fri, 9 Jun 2006 23:03:06 +0200, Terry Jones <terry at jon.es> wrote:
>I have a .tac file and am using twistd on it to start the application.  I
>would like to be able to specify a config file on the command line so the
>.tac file code can figure out what it should do.  Twistd doesn't seem to
>want me to do that though.
>
>Something like allowing
>
>  $ twistd -twistedopts file -- extra args here...
>
>would be nice. Or is there a better way to do this?

.tac files _are_ configuration, so they don't _take_ configuration.  You
should have so little code in your .tac file that it is neither burdensome
nor distasteful to make a copy and change bits of it to meet particular
configuration requirements.

On the other hand, .tac files are far from the final word on configuration.
They're just the last word Twisted has put in so far ;)  No doubt we'll see
something better added at some future date.

Jean-Paul



From terry at jon.es  Fri Jun  9 18:50:25 2006
From: terry at jon.es (Terry Jones)
Date: Sat, 10 Jun 2006 00:50:25 +0200
Subject: [Twisted-Python] Passing extra arguments to twistd?
In-Reply-To: Your message at 18:15:55 on Friday, 9 June 2006
References: <17545.57866.711310.845285@terry.jones.tc>
	<20060609221555.31435.2102753837.divmod.quotient.4881@ohm>
Message-ID: <17545.64305.874548.38866@terry.jones.tc>

Hi Jean-Paul

OK, I take your point. Below are a couple more reasons why I still think it
would be useful.

>>>>> "JPC" == Jean-Paul Calderone <exarkun at divmod.com> writes:
JPC> .tac files _are_ configuration, so they don't _take_ configuration.
JPC> You should have so little code in your .tac file that it is neither
JPC> burdensome nor distasteful to make a copy and change bits of it to
JPC> meet particular configuration requirements.

.tac files don't always seem to be that small:

~/Nevow-0.8.0/examples $ find . -name '*.tac' -print0 | xargs -0 wc -l
     12 ./blogengine/blogengine.tac
      7 ./chatola/chatola.tac
    189 ./examples.tac
      9 ./image_uploader/imagination.tac
     13 ./liveanimal/liveanimal.tac
     25 ./pastebin/pastebin.tac
      9 ./postit/postit.tac
     18 ./todo/todo.tac
    483 ./userdb/userdb.tac
     40 ./with_axiom/main.tac
    805 total

I'd like to avoid making people edit python files in what I distribute. I
know it seems easy, that it is easy, but it's also easy to provide a
familiar .ini style config file and let them edit that. Then the .ini file
could be passed to twistd and on to my app. This minimizes duplicated code
in the case that the .tac file is non trivial and is more idiot proof
(especially given python's indentation sensitivity).

Anyway, for now I'm taking your advice and simply embedding a config file
name in my .tac file. It's not a big deal - I was just wondering.

Thanks again,
Terry



From glyph at divmod.com  Fri Jun  9 20:58:15 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 9 Jun 2006 20:58:15 -0400
Subject: [Twisted-Python] Twisted Fedora Core packages - testing
	appreciated
In-Reply-To: <1149881864.25479.7.camel@otto.amantes>
Message-ID: <20060610005815.31435.361951025.divmod.quotient.4983@ohm>

On Fri, 09 Jun 2006 21:37:44 +0200, Thomas Vander Stichele <thomas at apestaart.org> wrote:
>Hey everyone,
>
>I've finally gotten off my ass and started updating the Fedora Extras
>packages for Twisted.


Thanks a lot, Thomas!  Now I know where to send people looking for Fedora and RHEL Twisted :-D



From eprparadocs at gmail.com  Sat Jun 10 09:19:10 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 10 Jun 2006 09:19:10 -0400
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <200605301513.31116.rudy@goldenhelix.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>	<200605301014.45911.rudy@goldenhelix.com>	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com>
Message-ID: <448AC6CE.1060209@gmail.com>

I have an application that I am converting to Twisted. One of the things
the application does is have three different logs running. Each of the
three does something different.

In normal python logging I figured out how to have the three different
loggers. In Twisted I am not quite sure how to do it. Has someone done
this before?

Thanks,
Chaz.



From moof at metamoof.net  Sat Jun 10 11:16:40 2006
From: moof at metamoof.net (Moof)
Date: Sat, 10 Jun 2006 17:16:40 +0200
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <448AC6CE.1060209@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448AC6CE.1060209@gmail.com>
Message-ID: <bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>

On 6/10/06, Chaz. <eprparadocs at gmail.com> wrote:
> I have an application that I am converting to Twisted. One of the things
> the application does is have three different logs running. Each of the
> three does something different.
>
> In normal python logging I figured out how to have the three different
> loggers. In Twisted I am not quite sure how to do it. Has someone done
> this before?

You want to write a class or function that will receive a dictionary
with 'system', 'message', and possibly 'failure', 'isError', 'debug'
and 'printed', and take appropriate action. You may wish to have a
look at twisted.python.log.FileLogObserver. Once you have the function
or method, you can do a log.addLogObserver(function).

You can pass things on to the eventDict as keywords to log.msg,
log.error, and log.debug (though the last one is deprecated). If you
find that isn't enough for you, it's possible to replace the
LogPublisher with something that can gather more data, I currently use
one that inspects the stack for which module called it, for example.

Moof



From eprparadocs at gmail.com  Sat Jun 10 11:39:48 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 10 Jun 2006 11:39:48 -0400
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>	
	<200605301014.45911.rudy@goldenhelix.com>	
	<1149013182.5737.4.camel@localhost.localdomain>	
	<200605301513.31116.rudy@goldenhelix.com>
	<448AC6CE.1060209@gmail.com>
	<bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>
Message-ID: <448AE7C4.20600@gmail.com>

Thanks but I think that answers the wrong question. In my original
application I have three different named loggers (the original app
is written in Python). I have logOp, logTrace, logDebug each of which
goes somewhere different (for instance logOp messages go to the
operators system, logDebug is sent to a non-rotated file and logTrace
goes to a rotating log file). Through out my application I will log
message to the appropriate logger, for example messages that I want
written out to the debug file I write as logDebug.msg(...). Those that I
want to trace objects moving around I will do logDebug.info(...). etc.

In Twisted.python.log it looks like there is a single logger and I do:
log.startLogging(...). What I need to know is how can I create three
different loggers in my new application. Do I need to subclass some
twisted class?

Chaz.

Moof wrote:
> On 6/10/06, Chaz. <eprparadocs at gmail.com> wrote:
>> I have an application that I am converting to Twisted. One of the things
>> the application does is have three different logs running. Each of the
>> three does something different.
>>
>> In normal python logging I figured out how to have the three different
>> loggers. In Twisted I am not quite sure how to do it. Has someone done
>> this before?
> 
> You want to write a class or function that will receive a dictionary
> with 'system', 'message', and possibly 'failure', 'isError', 'debug'
> and 'printed', and take appropriate action. You may wish to have a
> look at twisted.python.log.FileLogObserver. Once you have the function
> or method, you can do a log.addLogObserver(function).
> 
> You can pass things on to the eventDict as keywords to log.msg,
> log.error, and log.debug (though the last one is deprecated). If you
> find that isn't enough for you, it's possible to replace the
> LogPublisher with something that can gather more data, I currently use
> one that inspects the stack for which module called it, for example.
> 
> Moof
> 




From itamar at itamarst.org  Sat Jun 10 12:09:24 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 10 Jun 2006 12:09:24 -0400
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <448AC6CE.1060209@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448AC6CE.1060209@gmail.com>
Message-ID: <1149955765.5619.1.camel@localhost.localdomain>

On Sat, 2006-06-10 at 09:19 -0400, Chaz. wrote:

> In normal python logging I figured out how to have the three different
> loggers. In Twisted I am not quite sure how to do it. Has someone done
> this before?

I'd suggest continuing using Python's logging module (just don't use its
socket or db backends, as they will block your app).

-- 
Itamar Shtull-Trauring
http://itamarst.org





From manlio_perillo at libero.it  Sat Jun 10 12:24:21 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 14:24:21 -0200
Subject: [Twisted-Python] Writing a New Plug-In for mktap
Message-ID: <448AF235.6060201@libero.it>

What's the current Twisted best practice.?


Thanks and regards  Manlio Perillo



From manlio_perillo at libero.it  Sat Jun 10 12:39:02 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 14:39:02 -0200
Subject: [Twisted-Python] Passing extra arguments to twistd?
In-Reply-To: <20060609221555.31435.2102753837.divmod.quotient.4881@ohm>
References: <20060609221555.31435.2102753837.divmod.quotient.4881@ohm>
Message-ID: <448AF5A6.4050601@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>
> On the other hand, .tac files are far from the final word on configuration.
> They're just the last word Twisted has put in so far ;)  No doubt we'll see
> something better added at some future date.
> 

Maybe just a
--conf=myconfig

argument to twistd that will parse the config file (ini file or a simple
python module) and call makeService(config) as with command line arguments.




Regards  Manlio Perillo



From moof at metamoof.net  Sat Jun 10 12:45:15 2006
From: moof at metamoof.net (Moof)
Date: Sat, 10 Jun 2006 18:45:15 +0200
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <448AE7C4.20600@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448AC6CE.1060209@gmail.com>
	<bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>
	<448AE7C4.20600@gmail.com>
Message-ID: <bff8eeef0606100945j56ac6193kaf77f8db271f8c11@mail.gmail.com>

On 6/10/06, Chaz. <eprparadocs at gmail.com> wrote:
> Thanks but I think that answers the wrong question. In my original
> application I have three different named loggers (the original app
> is written in Python). I have logOp, logTrace, logDebug each of which
> goes somewhere different (for instance logOp messages go to the
> operators system, logDebug is sent to a non-rotated file and logTrace
> goes to a rotating log file). Through out my application I will log
> message to the appropriate logger, for example messages that I want
> written out to the debug file I write as logDebug.msg(...). Those that I
> want to trace objects moving around I will do logDebug.info(...). etc.
>
> In Twisted.python.log it looks like there is a single logger and I do:
> log.startLogging(...). What I need to know is how can I create three
> different loggers in my new application. Do I need to subclass some
> twisted class?

The twisted log system has a single "log publisher", known as
twisted.python.log.theLogPublisher. This publisher will receive all
log messages and add certain essential informaion, and create
something called an eventDict. It then passes all eventDict to every
LogObserver registered with it. This allows for a central location to
receive log messages that decouples potentially slow, blocking, file
writing or network sending of log messages from the rest of the
asynchronous framework.

log.StartLogging(file) literally creates a FileLogObeserver for the
file called flo, and then calls StartLoggignWithObserver(flo.emit).

You want to create an equivalent to a FileLogObserver, or just
subclass it. You can chose to ignore certain messages by checking for
flags in the eventDict, and just returning from the method, or you can
write it to a file, or send it over the network or whatever.

Moof



From nico at tekNico.net  Sat Jun 10 12:47:39 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Sat, 10 Jun 2006 18:47:39 +0200
Subject: [Twisted-Python] Re: Writing a New Plug-In for mktap
In-Reply-To: <448AF235.6060201@libero.it>
References: <448AF235.6060201@libero.it>
Message-ID: <e6et43$50e$1@sea.gmane.org>

Manlio Perillo wrote:
> What's the current Twisted best practice.?

Discussed in depth here:

http://twistedmatrix.com/pipermail/twisted-python/2006-April/012924.html

(Glyph: Quotient *still* does not wrap emails, rendering the archive less
readable via web. This has been going on for years now. :-| )

-- 
Nicola Larosa - http://www.tekNico.net/

First World War poster: Your Chums are Figthing. Why aren't You?
David Icke: Because I have a friggin' mind of my own...
 -- David Icke, February 2006




From manlio_perillo at libero.it  Sat Jun 10 13:13:54 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 15:13:54 -0200
Subject: [Twisted-Python] Re: Writing a New Plug-In for mktap
In-Reply-To: <e6et43$50e$1@sea.gmane.org>
References: <448AF235.6060201@libero.it> <e6et43$50e$1@sea.gmane.org>
Message-ID: <448AFDD2.3070000@libero.it>

Nicola Larosa ha scritto:
> Manlio Perillo wrote:
>> What's the current Twisted best practice.?
> 
> Discussed in depth here:
> 
> http://twistedmatrix.com/pipermail/twisted-python/2006-April/012924.html
> 

So, if I'm right, the main ussue is with application persistence?

The problem is that simple .tap file (started with twistd -y) have no
access to command line arguments.


P.S.
Now I explain myself why my application is not persisted under Windows
and why there is no more a paragraphs on Versioned...



Thanks and regards  Manlio Perillo



From manlio_perillo at libero.it  Sat Jun 10 13:23:31 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 15:23:31 -0200
Subject: [Twisted-Python] how to stop a service
Message-ID: <448B0013.8020504@libero.it>

Just to be sure.

I have written a small application that do some computation, than stop.

I have subclassed twisted.application.service.Service, because the
application do some persistence, and this seems to be the best solution (?).

To stop the application/service I just have to call reactor.stop, "as
usual"?



Thanks and regards  Manlio Perillo



From manlio_perillo at libero.it  Sat Jun 10 13:53:47 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 15:53:47 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B0013.8020504@libero.it>
References: <448B0013.8020504@libero.it>
Message-ID: <448B072B.4090008@libero.it>

Manlio Perillo ha scritto:
> Just to be sure.
> 
> I have written a small application that do some computation, than stop.
> 
> I have subclassed twisted.application.service.Service, because the
> application do some persistence, and this seems to be the best solution (?).
> 
> To stop the application/service I just have to call reactor.stop, "as
> usual"?
> 

Just another question: when running application with twistd, how can I
return error codes from my application to operating system?

That is: where (and how) can I safely call os.exit?



Thanks and regards  Manlio Perillo



From exarkun at divmod.com  Sat Jun 10 14:44:31 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Jun 2006 14:44:31 -0400
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B072B.4090008@libero.it>
Message-ID: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>

On Sat, 10 Jun 2006 15:53:47 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Manlio Perillo ha scritto:
>> Just to be sure.
>>
>> I have written a small application that do some computation, than stop.
>>
>> I have subclassed twisted.application.service.Service, because the
>> application do some persistence, and this seems to be the best solution (?).
>>
>> To stop the application/service I just have to call reactor.stop, "as
>> usual"?
>>

Yep.

>
>Just another question: when running application with twistd, how can I
>return error codes from my application to operating system?
>
>That is: where (and how) can I safely call os.exit?
>

There's no support for this yet.

Jean-Paul



From manlio_perillo at libero.it  Sat Jun 10 15:01:55 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 17:01:55 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>
References: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>
Message-ID: <448B1723.7090603@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>>
>> Just another question: when running application with twistd, how can I
>> return error codes from my application to operating system?
>>
>> That is: where (and how) can I safely call os.exit?
>>
> 
> There's no support for this yet.
> 

What about storing the return code in the application instance and call
os.exit(application.retcode) in an after shutdown system event?



Thanks and regards  Manlio Perillo



From exarkun at divmod.com  Sat Jun 10 15:15:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Jun 2006 15:15:21 -0400
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B1723.7090603@libero.it>
Message-ID: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>

On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> [...]
>>>
>>> Just another question: when running application with twistd, how can I
>>> return error codes from my application to operating system?
>>>
>>> That is: where (and how) can I safely call os.exit?
>>>
>>
>> There's no support for this yet.
>>
>
>What about storing the return code in the application instance and call
>os.exit(application.retcode) in an after shutdown system event?
>

That's probably not a bad idea.  One slight change I would suggest is
having the attribute be specified by the IProcess interface and stored
on that facet of the application componentized.  See tickets #718 and
#761 in the tracker.  If someone contributes patches implementing some
functionality in this area I'll try to get it committed.

Jean-Paul



From manlio_perillo at libero.it  Sat Jun 10 16:17:35 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 18:17:35 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>
References: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>
Message-ID: <448B28DF.40207@libero.it>

Jean-Paul Calderone ha scritto:
> On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> Jean-Paul Calderone ha scritto:
>>> [...]
>>>>
>>>> Just another question: when running application with twistd, how can I
>>>> return error codes from my application to operating system?
>>>>
>>>> That is: where (and how) can I safely call os.exit?
>>>>
>>>
>>> There's no support for this yet.
>>>
>>
>> What about storing the return code in the application instance and call
>> os.exit(application.retcode) in an after shutdown system event?
>>
> 
> That's probably not a bad idea.  One slight change I would suggest is
> having the attribute be specified by the IProcess interface and stored
> on that facet of the application componentized.  

Yes, this is much better.

> See tickets #718 and
> #761 in the tracker.  If someone contributes patches implementing some
> functionality in this area I'll try to get it committed.
> 

By the way, there is no support for installing user defined handlers for
signals?

In this way I can implement this idea in my application.



Thanks and regards   Manlio Perillo




From exarkun at divmod.com  Sat Jun 10 16:52:00 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Jun 2006 16:52:00 -0400
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B28DF.40207@libero.it>
Message-ID: <20060610205200.31435.464381603.divmod.quotient.5612@ohm>

On Sat, 10 Jun 2006 18:17:35 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo
>> <manlio_perillo at libero.it> wrote:
>>> Jean-Paul Calderone ha scritto:
>>>> [...]
>>>>>
>>>>> Just another question: when running application with twistd, how can I
>>>>> return error codes from my application to operating system?
>>>>>
>>>>> That is: where (and how) can I safely call os.exit?
>>>>>
>>>>
>>>> There's no support for this yet.
>>>>
>>>
>>> What about storing the return code in the application instance and call
>>> os.exit(application.retcode) in an after shutdown system event?
>>>
>>
>> That's probably not a bad idea.  One slight change I would suggest is
>> having the attribute be specified by the IProcess interface and stored
>> on that facet of the application componentized.
>
>Yes, this is much better.
>
>> See tickets #718 and
>> #761 in the tracker.  If someone contributes patches implementing some
>> functionality in this area I'll try to get it committed.
>>
>
>By the way, there is no support for installing user defined handlers for
>signals?
>
>In this way I can implement this idea in my application.
>

You can just use the signal module to install whatever handlers you
like.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jun 11 01:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1150002301.72.2115214721@twistedmatrix.com

Bug summary
______________________
Summary for 2006-06-04 through 2006-06-11
Bugs opened: 28    Bugs closed: 32  Total open bugs: 620 (-4)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +1  |Highest:  -6          |Conch:               -1  
|Enhancement:  -4  |High:     -5          |Core:                +0  
|Task:         +1  |Normal:  +11          |Ftp:                 +1  
                   |Low:      -2          |Mail:                -1  
                                          |Names:               +0  
                                          |Pair:                +1  
                                          |Release Management:  +0  
                                          |Trial:               +0  
                                          |Vfs:                 +1  
                                          |Web:                 +1  
                                          |Web2:                -2  
                                          |Website:             +1  
                                          |Words:               -3  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1788] twisted/conch/test/test_filetransfer.py has fragile setUp/tearDown (opened by spiv) (CLOSED, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1788

[#1797] twisted/web/topfiles/setup.py fails during build_scripts (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1797

[#1798] iocpreactor should use GetAcceptExSockaddrs instead of getpeername for incoming connections (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1798

[#1800] twisted.test.test_process.Win32ProcessTestCase.testBadArgs fails on win32er and iocpr (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1800

[#1801] Invalid components.implements (opened by therve) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1801

[#1804] numerous coding standard violations, one potential bug not noted in review of #1775 (opened by glyph) (CLOSED, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1804

[#1809] AdvancedPOP3Client doesn't notice SSL is secure (opened by exarkun) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1809

[#1812] Installation error: "Subprocess exited with result 1 for project web" (opened by edsuom) (CLOSED, duplicate)
    defect          release management http://twistedmatrix.com/trac/ticket/1812

                    ===== Normal =====
[#1786] Twisted VFS SFTP tests can be clearer and have more specific purposes. (opened by spiv) (CLOSED, fixed)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/1786

[#1787] Last line of trial's traceback output is often difficult to read (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1787

[#1789] twisted.conch.test.test_filetransfer.TestOurServerOurClient.testOpenFileAttributes (and perhaps others) leaks file descriptors (opened by exarkun)
    defect          conch      http://twistedmatrix.com/trac/ticket/1789

[#1791] Update FAQ links to point to non-obsolete URLs (opened by exarkun)
    task            website    http://twistedmatrix.com/trac/ticket/1791

[#1792] qt step of reactors build fails due to Xlib spew on stderr (opened by spiv)
    defect          core       http://twistedmatrix.com/trac/ticket/1792

[#1793] Threading guide is unclear on reactor requirements (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1793

[#1794] protocols/ftp.py SenderProtocol doesn't implement IFInishableConsumer even though it claims it does (opened by thor)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1794

[#1795] Trial feature for simulating missing modules for a test run (opened by exarkun)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1795

[#1796] Flumotion could use an API-stable and approved way of stealing the underlying socket of a transport from the reactor (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1796

[#1799] Remove usage of exec from twisted/names/dns.py (opened by exarkun)
    task            names      http://twistedmatrix.com/trac/ticket/1799

[#1802] No tag in tags/ for release 2.4.0 sumo equivalent (opened by moof) (CLOSED, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1802

[#1803] unittest  using adbapi hang on exit (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1803

[#1805] SFTP adapter doesn't translate deferred errors (opened by spiv)
    defect          vfs        http://twistedmatrix.com/trac/ticket/1805

[#1806] adbapi.ConnectionPool.noisy defaults to True, when it should be False (opened by moof)
    defect          core       http://twistedmatrix.com/trac/ticket/1806

[#1807] Exception handling improvements in web2/dav (opened by troy at osc.edu)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1807

[#1808] Buildbot pyflakes stage (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1808

[#1810] Release Twisted Web2 0.2 (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1810

[#1811] setup.py bdist_rpm fails on FC5 for x86_64 (opened by troy at osc.edu) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1811

                    ===== Low =====
[#1790] Remove obsolete release documentation (opened by exarkun)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1790

[#1813] twisted.pair.tuntap uses t.p.c.implements which no longer exists (opened by exarkun)
    defect          pair       http://twistedmatrix.com/trac/ticket/1813



Closed Bugs
______________________
                    ===== Highest =====
[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1788] twisted/conch/test/test_filetransfer.py has fragile setUp/tearDown (opened by spiv, closed by spiv, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1788

[#1440] Remove old cred (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1440

[#1788] twisted/conch/test/test_filetransfer.py has fragile setUp/tearDown (opened by spiv, closed by spiv, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1788

[#1734] twisted.words.service has NameErrors (opened by radix, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1734

[#1708] twisted.names shouldn't stop listening when crappy data is sent (opened by radix, closed by exarkun, fixed)
    enhancement     names      http://twistedmatrix.com/trac/ticket/1708

[#1609] Docs on return type for IReactorUNIX, IReactorArbitrary missing (opened by msmith, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1609

[#1800] twisted.test.test_process.Win32ProcessTestCase.testBadArgs fails on win32er and iocpr (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1800

[#1804] numerous coding standard violations, one potential bug not noted in review of #1775 (opened by glyph, closed by wsanchez, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1804

[#1604] Write More Doc Strings (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1604

[#1812] Installation error: "Subprocess exited with result 1 for project web" (opened by edsuom, closed by exarkun, duplicate)
    defect          release management http://twistedmatrix.com/trac/ticket/1812

[#1735] skip twisted.words' msn tests when twisted.web is not available (opened by radix, closed by exarkun, fixed)
    task            words      http://twistedmatrix.com/trac/ticket/1735

[#1801] Invalid components.implements (opened by therve, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1801

[#1809] AdvancedPOP3Client doesn't notice SSL is secure (opened by exarkun, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1809

[#1515] Web2 documentation should not disregard the Documentation Standard (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1515

                    ===== High =====
[#1755] t.w2.twscgi.SCGIClientProtocol causes an exception to be raised in t.w2.log._LogByteCounter (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1755

[#1755] t.w2.twscgi.SCGIClientProtocol causes an exception to be raised in t.w2.log._LogByteCounter (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1755

[#1778] Need a way to locate another resource on the site (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1778

[#1775] Attach URI to a resource during lookup (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1775

[#926 ] Automatically delete plugin cache at the slightest sign of trouble (BUG: Uninstalled plugins are not uncached) (opened by justinj, closed by glyph, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/926

[#1086] ITCPConnector.disconnect() default implementation (or API?) problem (opened by itamarst, closed by glyph, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1086

                    ===== Normal =====
[#1786] Twisted VFS SFTP tests can be clearer and have more specific purposes. (opened by spiv, closed by spiv, fixed)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/1786

[#1648] twisted.mail.imap4.IMAP4Client.append docstring (opened by synapsis, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1648

[#1802] No tag in tags/ for release 2.4.0 sumo equivalent (opened by moof, closed by radix, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1802

[#1441] Support registering adapters by the fully qualified python name of objects involved (opened by exarkun, closed by exarkun, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1441

[#1811] setup.py bdist_rpm fails on FC5 for x86_64 (opened by troy at osc.edu, closed by glyph, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1811

[#1768] Synchronous Task Queue (opened by edsuom, closed by glyph, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1768

[#1324] Cacheable/RemoteCache does not work with new style classes (opened by karlb, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1324

                    ===== Low =====
[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

[#1414] IRCClient.userJoined() argument list (opened by urago, closed by exarkun, invalid)
    enhancement     words      http://twistedmatrix.com/trac/ticket/1414

[#1040] Starting threads in a tac file blocks everything (opened by exarkun, closed by exarkun, wontfix)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1040

[#845 ] TAGS table creation for Twisted source (opened by ytrewq1, closed by glyph, wontfix)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/845





From manlio_perillo at libero.it  Sun Jun 11 04:43:38 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 06:43:38 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B1723.7090603@libero.it>
References: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>
	<448B1723.7090603@libero.it>
Message-ID: <448BD7BA.7000800@libero.it>

Manlio Perillo ha scritto:
> Jean-Paul Calderone ha scritto:
>> [...]
>>> Just another question: when running application with twistd, how can I
>>> return error codes from my application to operating system?
>>>
>>> That is: where (and how) can I safely call os.exit?
>>>
>> There's no support for this yet.
>>
> 
> What about storing the return code in the application instance and call
> os.exit(application.retcode) in an after shutdown system event?
> 

Maybe a better place is inside the reactor:

In twisted.internet.base

# IReactorCore

    def stop(self, exitStatus=0):
        """See twisted.internet.interfaces.IReactorCore.stop.
        """
        if not self.running:
            raise RuntimeError, "can't stop reactor that isn't running"
        self.exitStatus = exitStatus
        self.fireSystemEvent("shutdown")

    def crash(self):
        """See twisted.internet.interfaces.IReactorCore.crash.
        """
        self.exitStatus = ???
        self.running = 0

    def sigInt(self, *args):
        """Handle a SIGINT interrupt.
        """
        log.msg("Received SIGINT, shutting down.")
        self.callFromThread(self.stop, SIGINT)

    def sigBreak(self, *args):
        """Handle a SIGBREAK interrupt.
        """
        log.msg("Received SIGBREAK, shutting down.")
        self.callFromThread(self.stop, SIGBREAK)

    def sigTerm(self, *args):
        """Handle a SIGTERM interrupt.
        """
        log.msg("Received SIGTERM, shutting down.")
        self.callFromThread(self.stop, SIGTERM)



In twisted.scripts.twistd:

def runApp(config):
   ...

   log.msg("Server Shut Down.")

   from twisted.internet import reactor
   os.exit(reactor.exitStatus)




Regards  Manlio Perillo



From manlio_perillo at libero.it  Sun Jun 11 05:48:51 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 07:48:51 -0200
Subject: [Twisted-Python] sub options in twisted applications
Message-ID: <448BE703.2080806@libero.it>

I don't know if this is useful/safe, but I have written a patch that
allow users to pass additional command line arguments to an application
started with twistd -y.

I don't know if this is compatible with mktap, this is why I have posted
the "patch" here and not on the traker.


########## In twisted.scripts.twistd
def runApp(config):
    import sys

    sys.argv = appArgv

    ...


def configHelper(argv):
    idx = 1
    for i, opt in enumerate(argv[1:]):
        if not opt.startswith('-'):
            idx = i + 1
            break

    tmp = argv[idx:]
    if len(argv) > idx:
        del argv[idx + 1:]

    return tmp

appArgv = []

def run():
    global appArgv
    import sys

    appArgv = configHelper(sys.argv)
    app.run(runApp, ServerOptions)

#########

Now if I do
twistd -y myapp -x -y

sys.argv is
["myapp", "-x", "-y"]




Regards  Manlio Perillo



From glyph at divmod.com  Sun Jun 11 07:33:36 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 11 Jun 2006 07:33:36 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448BE703.2080806@libero.it>
Message-ID: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>



On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>I don't know if this is useful/safe, but I have written a patch that
>allow users to pass additional command line arguments to an application
>started with twistd -y.
>
>I don't know if this is compatible with mktap, this is why I have posted
>the "patch" here and not on the traker.

I don't think this is a good idea.

As JP said, .tac files *are* configuration, they don't *take* configuration.  If you want to write some patches that improve the ability to write command-line tools that take arguments, submit a patch that fixes this:

    http://twistedmatrix.com/trac/ticket/1501

:)




From itamar at itamarst.org  Sun Jun 11 11:55:39 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Jun 2006 11:55:39 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
References: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
Message-ID: <1150041339.5404.0.camel@localhost.localdomain>

On Sun, 2006-06-11 at 07:33 -0400, glyph at divmod.com wrote:

> As JP said, .tac files *are* configuration, they don't *take*
> configuration.  If you want to write some patches that improve the
> ability to write command-line tools that take arguments, submit a
> patch that fixes this:
> 
>     http://twistedmatrix.com/trac/ticket/1501

Or http://twistedmatrix.com/trac/ticket/1490 

-- 
Itamar Shtull-Trauring
http://itamarst.org





From manlio_perillo at libero.it  Sun Jun 11 13:47:13 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 15:47:13 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
References: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
Message-ID: <448C5721.6020905@libero.it>

glyph at divmod.com ha scritto:
> 
> 
> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> I don't know if this is useful/safe, but I have written a patch that
>> allow users to pass additional command line arguments to an application
>> started with twistd -y.
>>
>> I don't know if this is compatible with mktap, this is why I have posted
>> the "patch" here and not on the traker.
> 
> I don't think this is a good idea.
> 
> As JP said, .tac files *are* configuration, they don't *take*
> configuration.  

Ok, but I *can not* move .tac file in /etc/myapp/, as an example.


Regards  Manlio Perillo






From exarkun at divmod.com  Sun Jun 11 13:55:10 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jun 2006 13:55:10 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448C5721.6020905@libero.it>
Message-ID: <20060611175510.31435.1931987870.divmod.quotient.6002@ohm>

On Sun, 11 Jun 2006 15:47:13 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>glyph at divmod.com ha scritto:
>>
>>
>> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
>> <manlio_perillo at libero.it> wrote:
>>> I don't know if this is useful/safe, but I have written a patch that
>>> allow users to pass additional command line arguments to an application
>>> started with twistd -y.
>>>
>>> I don't know if this is compatible with mktap, this is why I have posted
>>> the "patch" here and not on the traker.
>>
>> I don't think this is a good idea.
>>
>> As JP said, .tac files *are* configuration, they don't *take*
>> configuration.
>
>Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>

Why not?  Try this:

  mv myapp.tac /etc/myapp/

HTH,

Jean-Paul



From manlio_perillo at libero.it  Sun Jun 11 14:31:42 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 16:31:42 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611175510.31435.1931987870.divmod.quotient.6002@ohm>
References: <20060611175510.31435.1931987870.divmod.quotient.6002@ohm>
Message-ID: <448C618E.3060706@libero.it>

Jean-Paul Calderone ha scritto:
> On Sun, 11 Jun 2006 15:47:13 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> glyph at divmod.com ha scritto:
>>>
>>>
>>> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
>>> <manlio_perillo at libero.it> wrote:
>>>> I don't know if this is useful/safe, but I have written a patch that
>>>> allow users to pass additional command line arguments to an application
>>>> started with twistd -y.
>>>>
>>>> I don't know if this is compatible with mktap, this is why I have
>>>> posted
>>>> the "patch" here and not on the traker.
>>>
>>> I don't think this is a good idea.
>>>
>>> As JP said, .tac files *are* configuration, they don't *take*
>>> configuration.
>>
>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>
> 
> Why not?  Try this:
> 
>  mv myapp.tac /etc/myapp/
> 


I'm not sure...

Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
How can I handle this?



Regards  Manlio Perillo



From exarkun at divmod.com  Sun Jun 11 15:33:02 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jun 2006 15:33:02 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448C618E.3060706@libero.it>
Message-ID: <20060611193302.31435.681618375.divmod.quotient.6026@ohm>

On Sun, 11 Jun 2006 16:31:42 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> On Sun, 11 Jun 2006 15:47:13 -0200, Manlio Perillo
>> <manlio_perillo at libero.it> wrote:
>>> glyph at divmod.com ha scritto:
>>>>
>>>>
>>>> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
>>>> <manlio_perillo at libero.it> wrote:
>>>>> I don't know if this is useful/safe, but I have written a patch that
>>>>> allow users to pass additional command line arguments to an application
>>>>> started with twistd -y.
>>>>>
>>>>> I don't know if this is compatible with mktap, this is why I have
>>>>> posted
>>>>> the "patch" here and not on the traker.
>>>>
>>>> I don't think this is a good idea.
>>>>
>>>> As JP said, .tac files *are* configuration, they don't *take*
>>>> configuration.
>>>
>>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>>
>>
>> Why not?  Try this:
>>
>>  mv myapp.tac /etc/myapp/
>>
>
>
>I'm not sure...
>
>Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
>How can I handle this?
>

I don't understand how the location of the tac file matters.

Jean-Paul



From manlio_perillo at libero.it  Sun Jun 11 16:31:25 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 18:31:25 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611193302.31435.681618375.divmod.quotient.6026@ohm>
References: <20060611193302.31435.681618375.divmod.quotient.6026@ohm>
Message-ID: <448C7D9D.7020308@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>>>>> As JP said, .tac files *are* configuration, they don't *take*
>>>>> configuration.
>>>>
>>>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>>>
>>>
>>> Why not?  Try this:
>>>
>>>  mv myapp.tac /etc/myapp/
>>>
>>
>>
>> I'm not sure...
>>
>> Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
>> How can I handle this?
>>
> 
> I don't understand how the location of the tac file matters.
> 

Well, it does not matters if the application "package" is on the PYTHONPATH.

But I'm not sure about this, how should be installed a Twisted application?



Regards  Manlio Perillo




From exarkun at divmod.com  Sun Jun 11 18:16:41 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jun 2006 18:16:41 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448C7D9D.7020308@libero.it>
Message-ID: <20060611221641.31435.1632465558.divmod.quotient.6060@ohm>

On Sun, 11 Jun 2006 18:31:25 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> [...]
>>>>>> As JP said, .tac files *are* configuration, they don't *take*
>>>>>> configuration.
>>>>>
>>>>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>>>>
>>>>
>>>> Why not?  Try this:
>>>>
>>>>  mv myapp.tac /etc/myapp/
>>>>
>>>
>>>
>>> I'm not sure...
>>>
>>> Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
>>> How can I handle this?
>>>
>>
>> I don't understand how the location of the tac file matters.
>>
>
>Well, it does not matters if the application "package" is on the PYTHONPATH.
>
>But I'm not sure about this, how should be installed a Twisted application?
>

However you generally install software on your preferred platform.  What's
special about Twisted applications?

Jean-Paul



From fairwinds at eastlink.ca  Mon Jun 12 11:25:58 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 12 Jun 2006 12:25:58 -0300
Subject: [Twisted-Python] pb.Broker subclass question
Message-ID: <448D8786.7010507@eastlink.ca>

Hi. I'm interested in subclassing Broker to extend it. I've subclassed 
the PBServerFactory and PBClientFactory. The server starts with the new 
protocol class but the client is unable to communicate. I believe the 
client is not using the correct protocol since it gets it from Broker to 
start. Can someone provide some advice on a way to subclassing the 
client to have it use a subclassed Broker protocol. Many thanks

Regards,
David



From exarkun at divmod.com  Mon Jun 12 11:47:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jun 2006 11:47:54 -0400
Subject: [Twisted-Python] pb.Broker subclass question
In-Reply-To: <448D8786.7010507@eastlink.ca>
Message-ID: <20060612154754.31435.1844329110.divmod.quotient.6297@ohm>

On Mon, 12 Jun 2006 12:25:58 -0300, David Pratt <fairwinds at eastlink.ca> wrote:
>Hi. I'm interested in subclassing Broker to extend it. I've subclassed the 
>PBServerFactory and PBClientFactory. The server starts with the new protocol 
>class but the client is unable to communicate. I believe the client is not 
>using the correct protocol since it gets it from Broker to start. Can 
>someone provide some advice on a way to subclassing the client to have it 
>use a subclassed Broker protocol. Many thanks

What does your Broker subclass do?

Jean-Paul



From fairwinds at eastlink.ca  Mon Jun 12 12:16:06 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 12 Jun 2006 13:16:06 -0300
Subject: [Twisted-Python] pb.Broker subclass question
In-Reply-To: <20060612154754.31435.1844329110.divmod.quotient.6297@ohm>
References: <20060612154754.31435.1844329110.divmod.quotient.6297@ohm>
Message-ID: <448D9346.2040606@eastlink.ca>

Hi Jean-Paul. Nothing too special - I have just added a couple of 
attributes for classes the subclassed Broker will use and a couple of 
notification methods back to the factory. Can you advise a method for 
this sort of subclassing that might work so Client and Server are fine 
with the subclassed Broker.

Regard,
David

Jean-Paul Calderone wrote:
> On Mon, 12 Jun 2006 12:25:58 -0300, David Pratt <fairwinds at eastlink.ca> 
> wrote:
>> Hi. I'm interested in subclassing Broker to extend it. I've subclassed 
>> the PBServerFactory and PBClientFactory. The server starts with the 
>> new protocol class but the client is unable to communicate. I believe 
>> the client is not using the correct protocol since it gets it from 
>> Broker to start. Can someone provide some advice on a way to 
>> subclassing the client to have it use a subclassed Broker protocol. 
>> Many thanks
> 
> What does your Broker subclass do?
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From manlio_perillo at libero.it  Mon Jun 12 13:52:22 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 12 Jun 2006 15:52:22 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611221641.31435.1632465558.divmod.quotient.6060@ohm>
References: <20060611221641.31435.1632465558.divmod.quotient.6060@ohm>
Message-ID: <448DA9D6.2050403@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>
>>> I don't understand how the location of the tac file matters.
>>>
>>
>> Well, it does not matters if the application "package" is on the
>> PYTHONPATH.
>>
>> But I'm not sure about this, how should be installed a Twisted
>> application?
>>
> 
> However you generally install software on your preferred platform.  What's
> special about Twisted applications?
> 

In general software (but I have only Windows experience here) all
modules are in the same directory.

So when I run the "main" module, the software directory is in PYTHONPATH.

But what if I want to put pyapp.tac in /etc/myapp/ while the application
is in /usr/lib/myapp?



Thanks and regards  Manlio Perillo



From glyph at divmod.com  Mon Jun 12 20:38:30 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Jun 2006 20:38:30 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448DA9D6.2050403@libero.it>
Message-ID: <20060613003830.31435.1087446195.divmod.quotient.6412@ohm>

On Mon, 12 Jun 2006 15:52:22 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:

>In general software (but I have only Windows experience here) all
>modules are in the same directory.
>
>So when I run the "main" module, the software directory is in PYTHONPATH.
>
>But what if I want to put pyapp.tac in /etc/myapp/ while the application
>is in /usr/lib/myapp?

If there were actually a valid reason to do this, your init script would do something like ...

    PYTHONPATH=/usr/lib/myapp:$PYTHONPATH twistd -y /etc/myapp/myapp.tac

... but there isn't.  Why is your application so special that it can't be installed in the same place as every other python application?  Why shouldn't the regular Python interpreter be able to 'import' your modules?

(If the user wants to put your module somewhere other than site-packages that is certainly their choice, but that is what sitecustomize and PYTHONPATH are for.)

Does anyone else remember commercial UNIX applications that would require installation to a fixed, non-standard location and then require that you set LD_LIBRARY_PATH in some configuration file?  That was gross, and lead to all manner of problems, this is no better.



From twisted at ralphm.ik.nu  Tue Jun 13 03:51:51 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 13 Jun 2006 09:51:51 +0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>
References: <448B1723.7090603@libero.it>
	<20060610191521.31435.576089388.divmod.quotient.5552@ohm>
Message-ID: <20060613075151.GA9631@ik.nu>

On Sat, Jun 10, 2006 at 03:15:21PM -0400, Jean-Paul Calderone wrote:
> On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo 
> <manlio_perillo at libero.it> wrote:
> >Jean-Paul Calderone ha scritto:
> >>[...]
> >>>
> >>>Just another question: when running application with twistd, how can I
> >>>return error codes from my application to operating system?
> >>>
> >>>That is: where (and how) can I safely call os.exit?
> >>>
> >>
> >>There's no support for this yet.
> >>
> >
> >What about storing the return code in the application instance and call
> >os.exit(application.retcode) in an after shutdown system event?
> >
> 
> That's probably not a bad idea.  One slight change I would suggest is
> having the attribute be specified by the IProcess interface and stored
> on that facet of the application componentized.  See tickets #718 and
> #761 in the tracker.  If someone contributes patches implementing some
> functionality in this area I'll try to get it committed.

Wouldn't it be better to have the reactor.run() call to return the exit
code instead of something inside twisted calling os.exit() itself?

-- 
Groetjes,

ralphm



From manlio_perillo at libero.it  Tue Jun 13 04:52:16 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 13 Jun 2006 06:52:16 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060613003830.31435.1087446195.divmod.quotient.6412@ohm>
References: <20060613003830.31435.1087446195.divmod.quotient.6412@ohm>
Message-ID: <448E7CC0.2010805@libero.it>

glyph at divmod.com ha scritto:
> On Mon, 12 Jun 2006 15:52:22 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
> 
>> In general software (but I have only Windows experience here) all
>> modules are in the same directory.
>>
>> So when I run the "main" module, the software directory is in PYTHONPATH.
>>
>> But what if I want to put pyapp.tac in /etc/myapp/ while the application
>> is in /usr/lib/myapp?
> 
> If there were actually a valid reason to do this, your init script would
> do something like ...
> 
>    PYTHONPATH=/usr/lib/myapp:$PYTHONPATH twistd -y /etc/myapp/myapp.tac
> 
> ... but there isn't.  Why is your application so special that it can't
> be installed in the same place as every other python application?  Why
> shouldn't the regular Python interpreter be able to 'import' your modules?
> 

Mailman, as an example, does not install itself in site-package...
GNOME applications written in Python do not install in site-package (non
 100% sure).




Regards  Manlio Perillo



From jcea at argo.es  Tue Jun 13 09:43:45 2006
From: jcea at argo.es (Jesus Cea)
Date: Tue, 13 Jun 2006 15:43:45 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <448634BA.2050800@comcast.net>
References: <447CA73E.5090705@comcast.net> <4485FE30.3070700@argo.es>
	<448634BA.2050800@comcast.net>
Message-ID: <448EC111.5080406@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stephen Waterbury wrote:
> Pyro's been around for a while.  It's useful for simple things
> but has several deficiencies relative to PB.

Details? :-).

I had have running pyro for ages (patched) and I'm fairly happy. My main
complain is the centralized nameserver, so I privately implemented a
distributed service locator using "spread" :-).

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI7BEZlgi5GaxT1NAQKxDwP/Y+KzO5Ja5dH4DxNkCuo1TVBBGKuRlo8R
9UwlLzjU87wXJaMAyaG4VL2TxKdw2hNSsGDfIFboEfXQW5aTSIITiiJU6KEEBbjM
zalC8Ozj0Lv61fszkRZ8KxFVclR2qn/wNC3FvTa5gppjAUpEQX4eNpheRQYvXJDr
SxNxzyKxu6s=
=0HQc
-----END PGP SIGNATURE-----



From jcea at argo.es  Tue Jun 13 09:48:10 2006
From: jcea at argo.es (Jesus Cea)
Date: Tue, 13 Jun 2006 15:48:10 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
References: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <448EC21A.5010001@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Thomas Vander Stichele wrote:
> - how do persistent object systems typically deal with transactions ?
> Suppose you want to do three operations on three different objects as a
> transaction, is that possible at all ?

I recomend you "durus" (http://www.mems-exchange.org/software/durus/)
and, depending of your usage profile, my storage backend:
<http://www.argo.es/~jcea/programacion/durus-berkeleydbstorage.htm>

Yes, durus supports transactions.

Durus is not async, but wrapping it in a thread should be easy enough.
I'm fairly involved with Durus, so I could help you there.

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI7CGZlgi5GaxT1NAQJHKQQAl+ZB5zjX+n51dandH3q7n1M20qnoEdbI
mkIZ0rKX8BFKcCixp9ZlJf01HszNJ93OqUxlNofwZKRz26JoO+FGjtZrV9QYDWUC
/uOdSinqsrpCgRhYOOnNjut/ks/RpHVsknHPWfxQL9nUDHqLObvy8PmGvhVkl9wk
u6CPJzETaec=
=yaBs
-----END PGP SIGNATURE-----



From terry at jon.es  Tue Jun 13 10:23:43 2006
From: terry at jon.es (Terry Jones)
Date: Tue, 13 Jun 2006 16:23:43 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: Your message at 15:48:10 on Tuesday, 13 June 2006
References: <1149761123.24971.120.camel@otto.amantes>
	<448EC21A.5010001@argo.es>
Message-ID: <17550.51823.969151.444380@terry.jones.tc>

>>>>> "Jesus" == Jesus Cea <jcea at argo.es> writes:

Jesus> I recomend you "durus"
Jesus> (http://www.mems-exchange.org/software/durus/) and, depending of
Jesus> your usage profile, my storage backend:
Jesus> <http://www.argo.es/~jcea/programacion/durus-berkeleydbstorage.htm>

Jesus> Yes, durus supports transactions.
Jesus> Durus is not async, but wrapping it in a thread should be easy enough.
Jesus> I'm fairly involved with Durus, so I could help you there.

Hi Jesus

Thanks for the info.  I think I've seen Durus before, but was not aware
that you had implemented a BSD backend. Does that mean the qualification on
the Durus home page "Durus is best suited to collections of less than a
million instances with relatively stable state." does not apply here?

After looking around at some Pyhon persistence options, I decided to use
ZODB. I'd be happy to hear your thoughts on Durus+BSD versus ZODB. I was
disappointed to see that ZODB had dropped BSD as a backend as BSD is battle
hardened and I wanted to use its secondary DBs. BTW, I had no reply to
email sent to greg at electricrain.com, the maintainer of the Python bsddb
interface. I presume you are using that code? Anyway, I am using the BTrees
provided by ZCatalog in Zope. Apart from things like robustness, speed, and
number of objects I could store, I very much wanted to avoid having
multiple persistence systems. Using ZODB makes this very easy. It sounds
like you have that advantage too.

How well supported is Durus? What about your interface?

Are you in Spain? We can discuss that offline I guess.

Regards,
Terry



From glyph at divmod.com  Tue Jun 13 10:36:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 13 Jun 2006 10:36:21 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448E7CC0.2010805@libero.it>
Message-ID: <20060613143621.31435.942337279.divmod.quotient.6509@ohm>

On Tue, 13 Jun 2006 06:52:16 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>glyph at divmod.com ha scritto:

>> Why is your application so special that it can't
>> be installed in the same place as every other python application?  Why
>> shouldn't the regular Python interpreter be able to 'import' your modules?

>Mailman, as an example, does not install itself in site-package...
>GNOME applications written in Python do not install in site-package (non
> 100% sure).

This is really a configuration decision that gets mixed up with an application's packaging.

Some GNOME applications do live in site-packages by default; for example, gnome-blog.  Some, like Quod Libet, are only in their own installation directory because they don't use their own namespace (and this is arguably a bug).  Some, like Straw, have no real reason.

Mailman puts itself into a non-site-packages directory because it wants to be able to install its own versions of the 'email' and 'codecs' packages, regardless of what other versions of those bits of software you have on your system.

Although I'm not a huge fan of the "egg" format as it stands, it does solve the particular problem of per-application version dependencies a bit better than these ad-hoc decisions made on behalf of each application in a platform-specific way.

On a platform like Debian where the package manager is verifying that your package versions match, the additional support is unnecessary unless you have applications which explicitly depend on different, incompatible versions of the same library.

In short: your application should at least be *able* to install itself in site-packages on systems where the package versions line up properly.  In the case where they don't, setting PYTHONPATH in a startup script is perfectly acceptable.

None of this, you'll notice, has anything to do with .tac files :).  If your application requires a particular version of Twisted, for example, the 'twistd' script which your startup script invokes will need to be specifically selected as well; you can't run whatever random twistd is on your PATH and then require a specific version of twistd in the .tac, so it's too late to start manipulating your sys.path there.



From jcea at argo.es  Tue Jun 13 18:56:32 2006
From: jcea at argo.es (Jesus Cea)
Date: Wed, 14 Jun 2006 00:56:32 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <17550.51823.969151.444380@terry.jones.tc>
References: <1149761123.24971.120.camel@otto.amantes>	<448EC21A.5010001@argo.es>
	<17550.51823.969151.444380@terry.jones.tc>
Message-ID: <448F42A0.8010204@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Terry Jones wrote:
> Thanks for the info.  I think I've seen Durus before, but was not aware
> that you had implemented a BSD backend. Does that mean the qualification on
> the Durus home page "Durus is best suited to collections of less than a
> million instances with relatively stable state." does not apply here?

Right. My storage engine allows multigigabytes repositories, with a lot
of writes. Actually, I use it myself with a 933 gygabytes repository
(mailbox storage) and a couple of days ago a guy reported me his
profile: 16 terabytes storage managing medical scanning images.

> After looking around at some Pyhon persistence options, I decided to use
> ZODB. I'd be happy to hear your thoughts on Durus+BSD versus ZODB. I was
> disappointed to see that ZODB had dropped BSD as a backend as BSD is battle
> hardened and I wanted to use its secondary DBs.

ZODB is fine, but its storage engine is ugly. I miss also the BSD
backend. Without it, ZODB behaviour when you have a lot of writes is not
better than stock Durus. The main advantages of ZODB over Durus is the
distributed caching client (ZEO) and the multithreading support. I'm
working with the Durus guys to improve durus in those areas. Progress is
slow but working on it :-p

For my environment, Durus simplicity (you can keep the entiry durus code
in your head) and performance, plus my storage backend goodies, are my
favourite poisons :).

> BTW, I had no reply to
> email sent to greg at electricrain.com, the maintainer of the Python bsddb
> interface. I presume you are using that code?

Yes I use pybddb. In fact, next release (in python 2.5 beta 1) will
include some patches of mine :-). Greg is a bit slow answering email. I
suffer it myself from time to time :). The inminent Python 2.5 beta
could increase his workload, also, I guess. So, forgiveness...

> Anyway, I am using the BTrees
> provided by ZCatalog in Zope. Apart from things like robustness, speed, and
> number of objects I could store, I very much wanted to avoid having
> multiple persistence systems. Using ZODB makes this very easy. It sounds
> like you have that advantage too.

Durus has a BTree class also :). I also prefer to use a single
persistence system. I'm decommisioning SQL, for example, migrating all
my systems to Durus backends. My Durus preference over ZODB started
because I could understand Durus completely, and its "limitations" were
not important to me. Nowadays Durus was improved a lot and I still see
additional potential to grow.

BTW, I see very few people using ZODB outside ZOPE. Ah, my personal
webserver runs Zope :p

> How well supported is Durus? What about your interface?

My only complain about Durus support is that it is not a open source
proyect in the sense that you can't directly contribute code. This is an
issue I had talked to the coder guys several times in the past. I guess
that if durus could reach a critical mass, the issue would be solved by
itself. Meantime, the difficulty is convincing the coder guys that your
suggestions a) do not hurt their performance and b) are valuable enough
for their workload. Of course, their workload is not your workload. In
any case, I must say that they are smart and recognize a good idea when
they see it. The mailing list is quiet and supportive, also.

About my backend... currently I try to do a monthly release, although
current releases are already production ready. I'm very motivated and
Durus + my backend are top priorities now for me, so... I'm planning for
replication/redundancy also, if Durus guys implement some suggestions I
did recently :).

> Are you in Spain? We can discuss that offline I guess.

Yes. I live in Madrid.

We are getting a bit offtopic. If you use jabber/XMPP, you can contact
me online. See details in my signature.

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI9CoJlgi5GaxT1NAQL/pwP+LQQnzJANoDaAjp2/7nAMl1CMcrCgBIrP
WUapc2h6W8SsO4XYRuWd8d/yZAvhG7ZnsGZOHYnn4qvQ9BPBwNDy1z2vej/ZdQpd
KbGOSwW2hNm8burdmHvbVvRAPuuZGS+0u0/YApOQ+XTsiMOxpPHeFdRPncw+J9Lg
uzcnUVXpZC4=
=nhHW
-----END PGP SIGNATURE-----



From sc at linux.it  Wed Jun 14 12:04:14 2006
From: sc at linux.it (Stefano Canepa)
Date: Wed, 14 Jun 2006 18:04:14 +0200
Subject: [Twisted-Python] pb and other protocol
Message-ID: <1150301054.6133.9.camel@localhost>

Hi all,
	I have an application listening on a port that needs to connect to a pb
server. As the reactor is running for the server part, how can I do
somethink like the protocol.ClientCreator I use in other applications
that are pb server and client for other protocols?

TIA
Stefano

-- 
Stefano Canepa aka sc: sc at linux.it  http://www.stefanocanepa.it
Three great virtues of a programmer: laziness, impatience and hubris.
Le tre grandi virt? di un programmatore: pigrizia, impazienza e
arroganza. (Larry Wall)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa =?ISO-8859-1?Q?=E8?= una parte del messaggio
	firmata digitalmente
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060614/a2f9a797/attachment.pgp 

From eprparadocs at gmail.com  Wed Jun 14 16:01:35 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 16:01:35 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44906B1F.1060007@gmail.com>

I've written a simple protocol, factory and service and can't seem to
get it to work right. It is so simple that I can't seem to figure out
the problem.

Here is the code:

---------------------------------------------------------

# Import standard python modules
from random import random
from cmath import exp


# Import 3rd party modules
from twisted.internet.protocol import DatagramProtocol, ServerFactory
from twisted.internet import reactor
from twisted.application import internet


class NeedFilesServer(DatagramProtocol) :
    def datagramReceived(self, dgram, sourceIP) :
        if dgram == 'HELPNeedFiles' :
		self.transport.write(IAmHere",sourceIP)

class NeedFilesFactory(ServerFactory):
    protocol = NeedFilesServer

class NeedFilesService(internet.UDPServer):
    def __init__(self,wkp):
        internet.UDPServer.__init__(self,wkp,NeedFilesFactory())

-----------------------------------------------------------------

When I do the standard application thing...

application = service.Application('foo')
srv = service.MultiService()
NeedFilesSrv = NeedFilesService(config['wkp'])
NeedFilesSrv.setServiceParent(srv)
srv.setServiceParent(service.IServiceCollection(application))

I get a the following trace:

Traceback (most recent call last):
2006/06/14 15:23 EDT [-]   File "/usr/bin/twistd", line 25, in ?
2006/06/14 15:23 EDT [-]     run()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/scripts/twistd.py", line
205, in run
2006/06/14 15:23 EDT [-]     app.run(runApp, ServerOptions)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/app.py", line
278, in run
2006/06/14 15:23 EDT [-]     runApp(config)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/scripts/twistd.py", line
196, in runApp
2006/06/14 15:23 EDT [-]     startApplication(config, application)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/scripts/twistd.py", line
173, in startApplication
2006/06/14 15:23 EDT [-]
service.IService(application).privilegedStartService()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/service.py",
line 191, in privilegedStartService
2006/06/14 15:23 EDT [-]     service.privilegedStartService()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/service.py",
line 191, in privilegedStartService
2006/06/14 15:23 EDT [-]     service.privilegedStartService()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/internet.py",
line 68, in privilegedStartService
2006/06/14 15:23 EDT [-]     self._port = self._getPort()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/internet.py",
line 86, in _getPort
2006/06/14 15:23 EDT [-]     return getattr(reactor,
'listen'+self.method)(*self.args, **self.kwargs)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/internet/posixbase.py", line
307, in listenUDP
2006/06/14 15:23 EDT [-]     p.startListening()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/internet/udp.py", line 85,
in startListening
2006/06/14 15:23 EDT [-]     self._connectToProtocol()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/internet/udp.py", line 105,
in _connectToProtocol
2006/06/14 15:23 EDT [-]     self.protocol.makeConnection(self)
2006/06/14 15:23 EDT [-] AttributeError: NeedFilesFactory instance has
no attribute 'makeConnection'


I've looked at the FTP protocol code and I seem to be doing the same
things.

Does anyone know what I am doing wrong?

Thanks in advance,
Chaz.



From exarkun at divmod.com  Wed Jun 14 16:15:48 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Jun 2006 16:15:48 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <44906B1F.1060007@gmail.com>
Message-ID: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>

On Wed, 14 Jun 2006 16:01:35 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I've written a simple protocol, factory and service and can't seem to
>get it to work right. It is so simple that I can't seem to figure out
>the problem.
>
>Here is the code:

UDP servers don't use factories, since there is no network-level
connection for which to maintain state.  Instead, pass an instance
of DatagramProtocol directly to listenUDP.

Jean-Paul



From eprparadocs at gmail.com  Wed Jun 14 16:33:19 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 16:33:19 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>
References: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>
Message-ID: <4490728F.9040603@gmail.com>

How come the Echo server example shows a factory being used?

Chaz.

Jean-Paul Calderone wrote:
> On Wed, 14 Jun 2006 16:01:35 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>> I've written a simple protocol, factory and service and can't seem to
>> get it to work right. It is so simple that I can't seem to figure out
>> the problem.
>>
>> Here is the code:
> 
> UDP servers don't use factories, since there is no network-level
> connection for which to maintain state.  Instead, pass an instance
> of DatagramProtocol directly to listenUDP.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From itamar at itamarst.org  Wed Jun 14 17:02:19 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Jun 2006 17:02:19 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <4490728F.9040603@gmail.com>
References: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>
	<4490728F.9040603@gmail.com>
Message-ID: <1150318939.5617.37.camel@localhost.localdomain>

On Wed, 2006-06-14 at 16:33 -0400, Chaz. wrote:
> How come the Echo server example shows a factory being used?

Doesn't that use TCP, rather than UDP?




From eprparadocs at gmail.com  Wed Jun 14 18:33:01 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 18:33:01 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <1150318939.5617.37.camel@localhost.localdomain>
References: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>	
	<4490728F.9040603@gmail.com>
	<1150318939.5617.37.camel@localhost.localdomain>
Message-ID: <44908E9D.4050605@gmail.com>

I don't know; is protocol a TCP protocol? Here is the example:

class Echo(protocol.Protocol):

    def dataReceived(self, data):
        self.transport.write(data)

class EchoFactory(protocol.ServerFactory):

    protocol = Echo


Chaz.

Itamar Shtull-Trauring wrote:
> On Wed, 2006-06-14 at 16:33 -0400, Chaz. wrote:
>> How come the Echo server example shows a factory being used?
> 
> Doesn't that use TCP, rather than UDP?
> 
> 




From eprparadocs at gmail.com  Wed Jun 14 19:31:40 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 19:31:40 -0400
Subject: [Twisted-Python] Intercepting shutdown ?
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44909C5C.9090508@gmail.com>

I am sorry I keep asking all these questions and hope you can tolerate
at least one more. I have an application that has five services in it;
two are factory based and three are protocol based (UDP).

To shut the system down I need to blast out a couple of messages to one
of the UDP connections. Is there an easy way to do this?


Thanks once again,
Chaz



From exarkun at divmod.com  Wed Jun 14 22:02:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Jun 2006 22:02:44 -0400
Subject: [Twisted-Python] Intercepting shutdown ?
In-Reply-To: <44909C5C.9090508@gmail.com>
Message-ID: <20060615020244.29014.757372852.divmod.quotient.513@ohm>

On Wed, 14 Jun 2006 19:31:40 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I am sorry I keep asking all these questions and hope you can tolerate
>at least one more. I have an application that has five services in it;
>two are factory based and three are protocol based (UDP).
>
>To shut the system down I need to blast out a couple of messages to one
>of the UDP connections. Is there an easy way to do this?
>

See twisted.internet.interfaces.IReactorCore and twisted.application:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorCore.html#twisted.internet.interfaces.IReactorCore.addSystemEventTrigger
http://twistedmatrix.com/documents/current/api/twisted.application.service.Service.html

Jean-Paul



From terry at jon.es  Thu Jun 15 11:09:26 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 17:09:26 +0200
Subject: [Twisted-Python] twisted.plugin question
Message-ID: <17553.30758.121742.323787@terry.jones.tc>

Is the Twisted plugin system described here

  http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

still supported / functional?

I tried implementing the example on that page and couldn't make it
work.  Below is my simplified code from that example, in two files.

BTW, the code on that page in the section Extending an Existing Program is
missing a 'from zope.interface import implements'. Also, the assumption
that code is in a file called imatsim.py, and the curious 'from matsim
import imatsim' could be explained. I guess the later is just a harmless
anachronism?

Regards,
Terry


# -------------------
# Begin plugin.py:
import sys
from zope.interface import Interface
from twisted.plugin import getPlugins

sys.path[:0] = ['./twisted/plugins']

class IMaterial(Interface):
    def yieldStress(temperature):
        """ """
def displayMaterial(m):
    print 'A material with yield stress %s at 500 K' % (m.yieldStress(500),)

def displayAllKnownMaterials():
    for material in getPlugins(IMaterial):
        displayMaterial(material)

if __name__ == '__main__':
    displayAllKnownMaterials()
# End plugin.py:


# -------------------
# Begin ./twisted/plugins/materials.py:
from twisted.plugin import IPlugin
from plugin import IMaterial
from zope.interface import implements

class SimpleMaterial(object):
    implements(IPlugin, IMaterial)

    def __init__(self, yieldStressFactor):
        self._yieldStressFactor = yieldStressFactor

    def yieldStress(self, temperature):
        return self._yieldStressFactory * temperature

steelPlate = SimpleMaterial(2)
brassPlate = SimpleMaterial(1)
# End ./twisted/plugins/materials.py:



When I run plugin.py, I get the error:

$ python plugin.py
Traceback (most recent call last):
  File "plugin.py", line 18, in ?
    displayAllKnownMaterials()
  File "plugin.py", line 14, in displayAllKnownMaterials
    for material in getPlugins(IMaterial):
  File "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/twisted/plugin.py", line 210, in getPlugins
    allDropins = getCache(package)
  File "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/twisted/plugin.py", line 176, in getCache
    newCacheData = pickle.dumps(cache, 2)
cPickle.PicklingError: Can't pickle <InterfaceClass plugin.IMaterial>: attribute lookup plugin.IMaterial failed



From terry at jon.es  Thu Jun 15 11:24:10 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 17:24:10 +0200
Subject: [Twisted-Python] General question on components, interfaces, etc.
Message-ID: <17553.31642.395380.717728@terry.jones.tc>

I've been trying to properly understand components, interfaces, adaptors
etc., as summarized here

  http://twistedmatrix.com/projects/core/documentation/howto/components.html

and elsewhere.

Although I feel like I understand the various bit & pieces, I still don't
feel like I have a good grip on when these things are most useful, or that
I can recognize patterns where they can be best applied. I do have the
feeling that it's important though.

So here's a specific example and question.

Suppose I am implementing some functionality that I want to be able to
easily replace with an alternate implementation, perhaps written by someone
else. I can use some kind of plugin architecture, and I can specify an
Interface that the plugin code is expected to provide. I can look for
plugins (or have twisted.plugin do it for me), import them, allow a user
config file to specify the preferred plugin to use to provide the
functionality, and I can test the loaded plugin to see that it does provide
the Interface.

All that makes sense, but I'm not sure what it really buys me. An
alternative would just be to document the expected interface (perhaps as an
Interface), and then use __import__() to load the desired implementation.

It seems that without needing adapters, the component architecture doesn't
really buy me anything except a formalism (which I do think has value,
though limited).

Is this thinking more or less correct? How would people go about doing what
I outline above?

Regards,
Terry



From exarkun at divmod.com  Thu Jun 15 12:21:24 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jun 2006 12:21:24 -0400
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: <17553.30758.121742.323787@terry.jones.tc>
Message-ID: <20060615162124.29014.1693079773.divmod.quotient.965@ohm>

On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:
>Is the Twisted plugin system described here
>
>  http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>
>still supported / functional?

Yes.

>
>I tried implementing the example on that page and couldn't make it
>work.  Below is my simplified code from that example, in two files.

One problem with the code attached is that it creates a plugin class
which implements plugin.IMaterial but then goes and searches for
plugins which provide __main__.IMaterial.  Since these aren't the same
interface, even without the pickle error no results will be found.

As for the pickle error itself, I'm not sure what's causing it.  I
can't reproduce it myself.  The exception suggests that either
"plugin" cannot be imported, or that it has no attribute IMaterial.
Since the module which defines the object being pickled imports
plugin and uses its IMaterial attribute, this seems unlikely, but
that is what the exception suggests to me.

>
>BTW, the code on that page in the section Extending an Existing Program is
>missing a 'from zope.interface import implements'. Also, the assumption
>that code is in a file called imatsim.py, and the curious 'from matsim
>import imatsim' could be explained. I guess the later is just a harmless
>anachronism?

I've created a ticket in the tracker for expanding the howto to explain
these things.  Thanks for pointing out that they were not well explained.

Jean-Paul



From eprparadocs at gmail.com  Thu Jun 15 13:34:59 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 15 Jun 2006 13:34:59 -0400
Subject: [Twisted-Python] Twistd and command line options...
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44919A43.6090400@gmail.com>

I have built a twistd application and now I want to pass in some
arguments from the command line. The code I use is:

class Options(usage.Options) :
   optParameters = [['wkp','Z','2200','The well known port']]

config = Options()
try :
    config.parseOptions()
except usage.UsageError, e:
    print '%s: %s' % (sys.argv[0],e)
    print '%s: Try --help for usage details.' % (sys.argv[0])
    sys.exit(1)

I've tried running "twistd -ny --wkp=2200 foo.tac" and "twistd -ny
foo.tac --wkp=2000" without success.

I've decided I must not know how to get command line options to foo.tac.
Can someone please enlighten me?

Thanks,
Chaz



From eprparadocs at gmail.com  Thu Jun 15 13:36:53 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 15 Jun 2006 13:36:53 -0400
Subject: [Twisted-Python] Manhole - an example? Anyone?
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44919AB5.3030208@gmail.com>

Yes, a second question in a row...I am extending my application (that
runs under twistd) to use Manhole. It looks like a great extension.
Unfortunately after doing a google on twisted manhole I came up with zilch.

Does anyone have an example they can pass my way?

Thanks in advance,
Chaz



From thostrup at gmail.com  Thu Jun 15 14:31:06 2006
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 15 Jun 2006 20:31:06 +0200
Subject: [Twisted-Python] Manhole - an example? Anyone?
In-Reply-To: <44919AB5.3030208@gmail.com>
References: <4479018B.7060503@eepatents.com> <44919AB5.3030208@gmail.com>
Message-ID: <f33a4da20606151131h4da5ec7dtc50f4d1e91e27718@mail.gmail.com>

On 6/15/06, Chaz. <eprparadocs at gmail.com> wrote:
>
> Yes, a second question in a row...I am extending my application (that
> runs under twistd) to use Manhole. It looks like a great extension.
> Unfortunately after doing a google on twisted manhole I came up with
> zilch.
>
> Does anyone have an example they can pass my way?


Check out the sample chapter in the Oreilly Twisted Book[1]. It also
includes how to do make it accessible over SSH.

If you like the book, you should of course buy it :-).


1. http://oreilly.com/catalog/twistedadn/

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060615/406b6189/attachment.htm 

From glyph at divmod.com  Thu Jun 15 15:08:47 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 15:08:47 -0400
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: <17553.30758.121742.323787@terry.jones.tc>
Message-ID: <20060615190847.29014.2105024162.divmod.quotient.1102@ohm>



On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:

>sys.path[:0] = ['./twisted/plugins']

This line is unnecessary, and probably wrong.  If you look in twisted/plugins/__init__.py, you will notice that it puts any additional entries on sys.path into its __path__; the fact that "." is already on your sys.path is enough for it to recognize this plugin.

>def displayAllKnownMaterials():
>    for material in getPlugins(IMaterial):
>        displayMaterial(material)

This is going to look for plugins in twisted.plugins, which is probably not what you want.  Did you look under the "alternate plugin packages" section of that document?

>from twisted.plugin import IPlugin
>from plugin import IMaterial

There is some vagueness in naming here.  Depending on your working directory (etc) twisted.plugin might be picked up as plugin.  You probably want to change the name of your example module to something unique.

>When I run plugin.py, I get the error:

My analysis of this is the same as JP's; however, generally the file you run with 'python' should look something like this:

    from myapp import main
    main()

Python has the unfortunate habit of creating a special module called "__main__" and putting the code from the file it is passed onto the commandline into that module, rather than into the location where it would go if you imported it; having two copies of your "plugin" module in memory at once (the imported one, and the __main__ one) is probably causing at least some of your problems.




From exarkun at divmod.com  Thu Jun 15 15:14:56 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jun 2006 15:14:56 -0400
Subject: [Twisted-Python] Twistd and command line options...
In-Reply-To: <44919A43.6090400@gmail.com>
Message-ID: <20060615191456.29014.846636409.divmod.quotient.1107@ohm>

On Thu, 15 Jun 2006 13:34:59 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I have built a twistd application and now I want to pass in some
>arguments from the command line. The code I use is:
>
>class Options(usage.Options) :
>   optParameters = [['wkp','Z','2200','The well known port']]
>
>config = Options()
>try :
>    config.parseOptions()
>except usage.UsageError, e:
>    print '%s: %s' % (sys.argv[0],e)
>    print '%s: Try --help for usage details.' % (sys.argv[0])
>    sys.exit(1)
>
>I've tried running "twistd -ny --wkp=2200 foo.tac" and "twistd -ny
>foo.tac --wkp=2000" without success.
>
>I've decided I must not know how to get command line options to foo.tac.
>Can someone please enlighten me?

Check out the following threads:

http://twistedmatrix.com/pipermail/twisted-python/2006-June/013330.html
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010529.html
http://twistedmatrix.com/pipermail/twisted-python/2005-June/010856.html

Jean-Paul



From glyph at divmod.com  Thu Jun 15 15:17:01 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 15:17:01 -0400
Subject: [Twisted-Python] General question on components, interfaces, etc.
In-Reply-To: <17553.31642.395380.717728@terry.jones.tc>
Message-ID: <20060615191701.29014.575537789.divmod.quotient.1111@ohm>

On Thu, 15 Jun 2006 17:24:10 +0200, Terry Jones <terry at jon.es> wrote:

>All that makes sense, but I'm not sure what it really buys me. An
>alternative would just be to document the expected interface (perhaps as an
>Interface), and then use __import__() to load the desired implementation.

That's basically what the plugin system does.  At 156 SLOC, it doesn't have room to do much else :).

>It seems that without needing adapters, the component architecture doesn't
>really buy me anything except a formalism (which I do think has value,
>though limited).

It allows you to use the same language to talk about plugins as you would about any other kind of adapter.  Effectively, the plugin system is a way to adapt your "system environment" to an object which provides a given interface.  If you use the twisted plugin system (or some other system which uses Interface objects) then it is pretty easy to factor your code such that implementations of the desired interface can be obtained implicitly through the environment or explicitly by user code passing in an implementation -- or by passing in an object that is adaptable to that interface, and then doing adaptation.

As Jim Fulton is fond of saying, the whole point of the components system is to allow you to reason about the requirements are for a given bit of code.  It also lets you translate that reasoning to code directly.  "argument x must be adaptable to IFoo" is a nice succinct way of dictating your requirements both in documentation (by giving a link to the fully-qualified name of IFoo which includes lots more documentation) and in code (by adapting to IFoo, or looking for IFoo plugins, at runtime).

>Is this thinking more or less correct? How would people go about doing what
>I outline above?

Mostly yes.  Obviously, I'd personally use twisted.plugin, because that's what I wrote it for :).



From terry at jon.es  Thu Jun 15 16:18:13 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 22:18:13 +0200
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: Your message at 12:21:24 on Thursday, 15 June 2006
References: <17553.30758.121742.323787@terry.jones.tc>
	<20060615162124.29014.1693079773.divmod.quotient.965@ohm>
Message-ID: <17553.49285.671626.314298@terry.jones.tc>

>>>>> "JP" == Jean-Paul Calderone <exarkun at divmod.com> writes:
JP> On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:

JP> One problem with the code attached is that it creates a plugin class
JP> which implements plugin.IMaterial but then goes and searches for
JP> plugins which provide __main__.IMaterial.  Since these aren't the same
JP> interface, even without the pickle error no results will be found.

OK, thanks for the tip. I've fixed things - see next mail.

>> BTW, the code on that page in the section Extending an Existing Program
>> is missing a 'from zope.interface import implements'. Also, the
>> assumption that code is in a file called imatsim.py, and the curious
>> 'from matsim import imatsim' could be explained. I guess the later is
>> just a harmless anachronism?

JP> I've created a ticket in the tracker for expanding the howto to explain
JP> these things.  Thanks for pointing out that they were not well
JP> explained.

Thanks. I should have created the ticket myself. I just added another, but
now see it was a duplicate.

Terry



From terry at jon.es  Thu Jun 15 16:38:52 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 22:38:52 +0200
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: Your message at 15:08:47 on Thursday, 15 June 2006
References: <17553.30758.121742.323787@terry.jones.tc>
	<20060615190847.29014.2105024162.divmod.quotient.1102@ohm>
Message-ID: <17553.50524.332456.823735@terry.jones.tc>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:

>> sys.path[:0] = ['./twisted/plugins']

glyph> This line is unnecessary, and probably wrong.  If you look in
glyph> twisted/plugins/__init__.py, you will notice that it puts any
glyph> additional entries on sys.path into its __path__; the fact that "."
glyph> is already on your sys.path is enough for it to recognize this
glyph> plugin.

OK, I see now how that's working, thanks.

>> def displayAllKnownMaterials():
>> for material in getPlugins(IMaterial):
>> displayMaterial(material)

glyph> This is going to look for plugins in twisted.plugins, which is
glyph> probably not what you want.  Did you look under the "alternate
glyph> plugin packages" section of that document?

I did, and it seemed relevant, but I didn't understand it. The page says
"If passed in, the 2nd argument should be a module or package to be used
instead of twisted.plugins as the plugin meta-package." I had no idea what
such a module or package should do!  Reading the section above seemed to
make it clear that I could mkdir -p twisted/plugins and drop my code in
there.

>> from twisted.plugin import IPlugin
>> from plugin import IMaterial

glyph> There is some vagueness in naming here.  Depending on your working
glyph> directory (etc) twisted.plugin might be picked up as plugin.  You
glyph> probably want to change the name of your example module to something
glyph> unique.

OK, done.

glyph> from myapp import main
glyph> main()

glyph> Python has the unfortunate habit of creating a special module called
glyph> "__main__" and putting the code from the file it is passed onto the
glyph> commandline into that module, rather than into the location where it
glyph> would go if you imported it; having two copies of your "plugin"
glyph> module in memory at once (the imported one, and the __main__ one) is
glyph> probably causing at least some of your problems.

And thanks for this too. I'm very new to python, and I had no idea.

The code is now working.

Terry



From edahl at confmon.com  Thu Jun 15 18:50:11 2006
From: edahl at confmon.com (Erik Dahl)
Date: Thu, 15 Jun 2006 18:50:11 -0400
Subject: [Twisted-Python] ANNOUNCE: Zenoss-0.20.1
Message-ID: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>

Version 0.20.1 of Zenoss is available for download.

This version fixes several issues, upgrades to Twisted-2.4 and adds  
finer grained monitoring control on device components such as:  
IpInterfaces, FileSystems, and HardDisks.

Project Home:
http://www.zenoss.org/

To download:
http://www.zenoss.org/download

Release Notes:
http://dev.zenoss.org/trac/wiki/zenoss-0.20

-----------
Project Blurb:

Zenoss is a GPL licensed enterprise grade monitoring system that  
provides Inventory/Configuration, Event, Performance and Availability  
management in a single integrated package. It is written in Python  
using the Zope web application framework and Twisted network  
programming environment.  Zenoss is designed to be easy to use for a  
beginner yet flexible and powerful enough for the advanced user

Enjoy,

-EAD

Erik Dahl



From eprparadocs at gmail.com  Thu Jun 15 19:32:05 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 15 Jun 2006 19:32:05 -0400
Subject: [Twisted-Python] Running manhole gui...
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <4491EDF5.60101@gmail.com>

With some well directed I got Manhole running in my server. When I run
the manhole GUI and login I get back the following error message:

Invalid Type Byte '\xc4'

I've included the log window contents if anyone can offer a clue on what
I am doing wrong.

Thanks,
Chaz.


>From inside the log window I see:

2006/06/15 19:27 EDT [-] Log opened.
2006/06/15 19:27 EDT [-]
/usr/lib64/python2.4/site-packages/twisted/manhole/ui/gtk2manhole.py:160:
gtk.GtkDeprecationWarning: gtk.idle_add is deprecated, use
gobject.idle_add instead
2006/06/15 19:27 EDT [-] Starting factory
<twisted.spread.pb.PBClientFactory instance at 0x2ab335e2cfc8>
2006/06/15 19:27 EDT [-]
/usr/lib64/python2.4/site-packages/twisted/spread/ui/gtk2util.py:156:
exceptions.DeprecationWarning: Deferred.setTimeout is deprecated.  Look
for timeout support specific to the API you are using instead.
2006/06/15 19:27 EDT [Broker,client] Error In <<class
'twisted.internet.tcp.Client'> to ('localhost', 2204) at 2ab335e2e350>
2006/06/15 19:27 EDT [Broker,client] Traceback (most recent call last):
	  File "/usr/lib64/python2.4/site-packages/twisted/python/log.py", line
53, in callWithLogger
	    return callWithContext({"system": lp}, func, *args, **kw)
	  File "/usr/lib64/python2.4/site-packages/twisted/python/log.py", line
38, in callWithContext
	    return context.call({ILogContext: newCtx}, func, *args, **kw)
	  File "/usr/lib64/python2.4/site-packages/twisted/python/context.py",
line 59, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib64/python2.4/site-packages/twisted/python/context.py",
line 37, in callWithContext
	    return func(*args,**kw)
	--- <exception caught here> ---
	  File
"/usr/lib64/python2.4/site-packages/twisted/internet/gtk2reactor.py",
line 189, in _doReadOrWrite
	    why = source.doRead()
	  File "/usr/lib64/python2.4/site-packages/twisted/internet/tcp.py",
line 348, in doRead
	    return self.protocol.dataReceived(data)
	  File "/usr/lib64/python2.4/site-packages/twisted/spread/banana.py",
line 181, in dataReceived
	    raise NotImplementedError(("Invalid Type Byte %r" % (typebyte,)))
	exceptions.NotImplementedError: Invalid Type Byte '\xc4'
	
2006/06/15 19:27 EDT [Broker,client] Stopping factory
<twisted.spread.pb.PBClientFactory instance at 0x2ab335e2cfc8>
Login FAILED User aborted connection: User hit Cancel..




From wsanchez at wsanchez.net  Thu Jun 15 19:33:39 2006
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Thu, 15 Jun 2006 16:33:39 -0700
Subject: [Twisted-Python] @raise and deferreds
Message-ID: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>

   I'm curious about what conventions we have for documenting  
exceptions that are raised in deferreds, which turn into errbacks.   
Say I have a function which returns a deferred, and several flavors  
of Failure might have been raised.  I'd like to document that thusly:

	def foo():
		"""
		Do something fooey.
		@raise FooError: if it's too fooey.
		@raise BarError: if there is any bar; this is foo, not bar.
		@raise HolyCrapError: if your pants are on fire.
		@return: a deferred containing a Foo.
		"""
		...

   This is a little weird, since the exceptions are actually being  
raised, but are being delivered in errbacks.  The alternative is to  
describe all of the possible exceptions in the @return clause, but  
that is really clunky.  So I'd like to have a convention whereby  
everyone knows that if you have a function that returns a deferred,  
that the exceptions described in the docstring refer to exceptions  
delivered via errbacks rather than via raising.

   Is that making any sense?  Alternatively, we could make up a new  
keyword (@errback?), but I don't know how troublesome doing so is.   
If we do that, maybe another keyword (@callback) makes sense as well.

	-wsv




From wsanchez at wsanchez.net  Thu Jun 15 19:40:59 2006
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Thu, 15 Jun 2006 16:40:59 -0700
Subject: [Twisted-Python] Returning a deferred, maybe
Message-ID: <39C66BC0-3582-49BA-88BB-E9186332B8F5@wsanchez.net>

   We have several functions in the code which return either a  
synchronous value or a deferred.  In these cases, the caller has to  
either inspect the return type and do different things depending  
whether the value is available right then, or call the function using  
meybeDeferred.

   It seems like you can save the caller some grief by ensuring that  
you always return a deferred value (eg. by wrapping a synchronous  
result with defer.succeed(), as suggested in http://twistedmatrix.com/ 
projects/core/documentation/howto/gendefer.html).  Should this be an  
encouraged practice?

	-wsv




From db3l at fitlinxx.com  Thu Jun 15 20:07:58 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 15 Jun 2006 20:07:58 -0400
Subject: [Twisted-Python] Tracking twisted repository post 2.4.0?
Message-ID: <uslm6vu75.fsf@fitlinxx.com>

We've got some locally maintained modifications to Twisted that prior
to 2.4.0 we were tracking by syncing our repository with the Twisted
trunk (as a vendor) at the overall official tags.

But with the tagging changes with 2.4.0 (and without a tag for the
overall trunk), I was wondering if there were suggestions on how to
adjust our setup.

I can understand why there is no single tag for the trunk, since an overall
"Sumo" release of twisted (and even the overall 2.4.0 concept) is really
a combination of different releases of the various subpackages, but I can't
figure out how to use the existing tags to track those pieces we are
interested in.

For example, we really use core and web, so I had thought I could just
export, for example, the twisted-core-2.4.0 and twisted-web-0.6.0 tags
from tags/releases, merge them together and call that our "vendor"
dump for 2.4.0.  But it would appear that the individual project tags
are still based on tags for the complete trunk, and thus contain all
trunk files as of when the subproject was tagged.  Thus, if I try to
use a checkout/export from twisted-web-0.6.0, then depending on when
it was tagged, it may overlay files that came from twisted-core-2.4.0
with different versions that aren't really part of core 2.4.0.

So how (at the subversion tag level) if at all can I isolate those
files from beneath the twisted-web-0.6.0 tag that only apply to
twisted-web, so that I can add them to the files from
twisted-core-2.4.0 to yield my simulated vendor dump?

Is anyone else tracking the repository (but not instant to instant at
the trunk, but rather at release points) and if so, how are you doing
it post 2.4.0?

Thanks.

-- David






From glyph at divmod.com  Thu Jun 15 20:14:15 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 20:14:15 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <39C66BC0-3582-49BA-88BB-E9186332B8F5@wsanchez.net>
Message-ID: <20060616001415.29014.183238890.divmod.quotient.1294@ohm>

On Thu, 15 Jun 2006 16:40:59 -0700, Wilfredo S?nchez Vega <wsanchez at wsanchez.net> wrote:

>   It seems like you can save the caller some grief by ensuring that  you 
>always return a deferred value (eg. by wrapping a synchronous  result with 
>defer.succeed(), as suggested in http://twistedmatrix.com/ 
>projects/core/documentation/howto/gendefer.html).  Should this be an 
>encouraged practice?

There are 2 reasons for this practice.  One is a sort of silly micro-optimization (which vanishes anyway if the caller uses maybeDeferred) and the other is an issue of convenience for the callee.  We should forget about this and just make Deferred faster.

Newer interfaces have tended toward just saying "@return a Deferred which..." rather than "@return a value or a Deferred" unless they are highly public APIs like IResource and forgetting to wrap a 2-byte string return value is a real pain.

In other words: document your interfaces precisely, and decide whose responsibility is to ensure that the value is a Deferred at some point, and you should probably prefer requiring it is a Deferred in most cases -- but I don't think that this is the sort of thing that should be in the coding standard.  It varies from situation to situation.



From glyph at divmod.com  Thu Jun 15 21:04:42 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 21:04:42 -0400
Subject: [Twisted-Python] Tracking twisted repository post 2.4.0?
In-Reply-To: <uslm6vu75.fsf@fitlinxx.com>
Message-ID: <20060616010442.29014.765795977.divmod.quotient.1333@ohm>

On 15 Jun 2006 20:07:58 -0400, David Bolen <db3l at fitlinxx.com> wrote:
>We've got some locally maintained modifications to Twisted that prior
>to 2.4.0 we were tracking by syncing our repository with the Twisted
>trunk (as a vendor) at the overall official tags.

Have you submitted those as patches in the bugtracker?  If so, are we being really sluggish about applying them? :)

As you have unfortunately noticed with this change... we don't currently provide any support for configurations like this.  I'd personally like to discourage it, because long-term local modifications to Twisted indicate a failure of process, either you submitting them or us accepting them.

>But with the tagging changes with 2.4.0 (and without a tag for the
>overall trunk), I was wondering if there were suggestions on how to
>adjust our setup.

>I can understand why there is no single tag for the trunk, since an overall
>"Sumo" release of twisted

To reduce confusion we're trying to remove the word "sumo" everywhere.  If you spot that word still being used somewhere on the site it's a bug, please let us know.

Right now it's just "a release of Twisted".

>So how (at the subversion tag level) if at all can I isolate those
>files from beneath the twisted-web-0.6.0 tag that only apply to
>twisted-web, so that I can add them to the files from
>twisted-core-2.4.0 to yield my simulated vendor dump?

You can't, really.  Hopefully the internal repository structure of Twisted will one day look more like this:

    http://divmod.org/trac/browser/trunk

and the tags will refer to project directories, like this:

    http://divmod.org/trac/browser/tags/releases

but until that happens, the setup.py files for separate projects determine a fairly arbitrary collection of files.  Specifically, ownership of twisted/plugins/ is spread out between all subprojects.  Also, some files are moved around; the "topfiles" directory is pulled out to the root of each subproject as part of the release process.

>Is anyone else tracking the repository (but not instant to instant at
>the trunk, but rather at release points) and if so, how are you doing
>it post 2.4.0?

Divmod doesn't track Twisted releases through SVN; any changes we are in the process of contributing but which haven't been released are kept in our utility package "Epsilon".  Epsilon has a "hotfixes" module which allows us to modify Twisted's behavior in cases where we really need to modify the library rather than just package additional functionality outside it -- you might look at that implementation as an example of a way to formalize monkeypatching and reduce its fragility.



From wsanchez at wsanchez.net  Thu Jun 15 22:24:20 2006
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Thu, 15 Jun 2006 19:24:20 -0700
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <20060616001415.29014.183238890.divmod.quotient.1294@ohm>
References: <20060616001415.29014.183238890.divmod.quotient.1294@ohm>
Message-ID: <3663EE1D-30FF-43A1-9C38-D3C9F4BB5522@wsanchez.net>

   I guess I'm not seeing any justification for returning a deferred  
some of the time other than:

	- the micro-optimization (which your saying is silly) and

	- convenience for the callee (but wrapping a result in defer.succeed 
() is hardly a burden, and you are basically just passed the  
inconvenience down to every caller, which is usually a bad allocation  
of convenience-ness-es).

   The reason I thought it a good idea to require always returning a  
deferred is that I had a lot of code which depended on locateChild()  
to return a non-deferred value, which is clearly broken.  But none of  
the unit tests caught this, because I've never traversed a resource  
which returned a deferred in locateChild().  dreid pointed this out  
to me, so I changed some routines to fix this and had them always  
return a deferred, and sure enough, I ended up having to fix a *lot*  
of code.

   The point being that callers of functions that _usually_ return  
non-deferred values will usually work, enough so that it's hard to  
catch them with unit tests unless you go out of your way to ensure  
that deferreds are tested, which is unlikely if you also wrote the  
offending code.

	-wsv


On Jun 15, 2006, at 5:14 PM, glyph at divmod.com wrote:

> On Thu, 15 Jun 2006 16:40:59 -0700, Wilfredo S?nchez Vega  
> <wsanchez at wsanchez.net> wrote:
>
>>   It seems like you can save the caller some grief by ensuring  
>> that  you always return a deferred value (eg. by wrapping a  
>> synchronous  result with defer.succeed(), as suggested in http:// 
>> twistedmatrix.com/ projects/core/documentation/howto/ 
>> gendefer.html).  Should this be an encouraged practice?
>
> There are 2 reasons for this practice.  One is a sort of silly  
> micro-optimization (which vanishes anyway if the caller uses  
> maybeDeferred) and the other is an issue of convenience for the  
> callee.  We should forget about this and just make Deferred faster.
>
> Newer interfaces have tended toward just saying "@return a Deferred  
> which..." rather than "@return a value or a Deferred" unless they  
> are highly public APIs like IResource and forgetting to wrap a 2- 
> byte string return value is a real pain.
>
> In other words: document your interfaces precisely, and decide  
> whose responsibility is to ensure that the value is a Deferred at  
> some point, and you should probably prefer requiring it is a  
> Deferred in most cases -- but I don't think that this is the sort  
> of thing that should be in the coding standard.  It varies from  
> situation to situation.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at divmod.com  Thu Jun 15 22:53:22 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 22:53:22 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <3663EE1D-30FF-43A1-9C38-D3C9F4BB5522@wsanchez.net>
Message-ID: <20060616025322.29014.1055736251.divmod.quotient.1423@ohm>

On Thu, 15 Jun 2006 19:24:20 -0700, Wilfredo S?nchez Vega <wsanchez at wsanchez.net> wrote:
>   I guess I'm not seeing any justification for returning a deferred  some of 
>the time other than:
>
>         - the micro-optimization (which your saying is silly) and
>
>         - convenience for the callee (but wrapping a result in defer.succeed 
>() is hardly a burden, and you are basically just passed the  inconvenience 
>down to every caller, which is usually a bad allocation  of convenience- 
>ness-es).

In the case of, for example, web1's IResource, callers are in framework code and callees are in application code.  Which means maybe two-dozen callers and like a billion callees.

In the case of the *new* IResource, this might not be the right factoring since you are really supposed to subclass stuff and not implement directly; and in any event, in the long term hopefully most people will be using nevow+web2 and avoiding touching the resource model directly.

>   The point being that callers of functions that _usually_ return  non- 
>deferred values will usually work, enough so that it's hard to  catch them 
>with unit tests unless you go out of your way to ensure  that deferreds are 
>tested, which is unlikely if you also wrote the  offending code.

Which reminds me.  Somebody really *should* be trying to get that C deferred stuff James did into Twisted proper; one Deferred for every locateChild sounds excruciatingly expensive for long URLs, as the code currently stands.



From exarkun at divmod.com  Thu Jun 15 23:01:46 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jun 2006 23:01:46 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <20060616025322.29014.1055736251.divmod.quotient.1423@ohm>
Message-ID: <20060616030146.29014.738989505.divmod.quotient.1430@ohm>

On Thu, 15 Jun 2006 22:53:22 -0400, glyph at divmod.com wrote:
> [snip]
>
>Which reminds me.  Somebody really *should* be trying to get that C deferred 
>stuff James did into Twisted proper; one Deferred for every locateChild 
>sounds excruciatingly expensive for long URLs, as the code currently stands.
>

FWIW, last I checked, it was an insignificant performance improvement over
the current Deferred implementation, at least for web2.

Jean-Paul



From fairwinds at eastlink.ca  Fri Jun 16 08:36:28 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 09:36:28 -0300
Subject: [Twisted-Python] Bring multi service up gradually
Message-ID: <4492A5CC.1030606@eastlink.ca>

Hi. I have got a number of services that am bringing together at 
startup. In the past, I have added them to a parent and started them up 
all at one time.  But now I am incorporating a service (the main 
service) that may be available from more than one address and I want to 
connect with one of these addresses first before starting the other 
services.

What I am seeking is some general advice on this since I want the 
startup to be as efficient as possible. I was thinking that quickly 
testing the addresses first, before starting any twisted service might 
help increase the odds of a quick startup. But if this fails, I will 
still need to iterate with a backoff through each address to connect the 
main service, then add the other services when the main service is 
running. Many thanks.

Regards,
David



From eprparadocs at gmail.com  Fri Jun 16 08:51:53 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Fri, 16 Jun 2006 08:51:53 -0400
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492A5CC.1030606@eastlink.ca>
References: <4492A5CC.1030606@eastlink.ca>
Message-ID: <4492A969.8040704@gmail.com>

I don't think there is a way to insure you will get the ports you want.
Why bother testing if the port is available before hand? In between the
port being tested and the application using it someone can sneak in and
take it.

I have built a twistd app that uses 5 different services and find the
good old way is the easiest and fastest: just bring them up.

Chaz



From fairwinds at eastlink.ca  Fri Jun 16 09:39:56 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 10:39:56 -0300
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492A969.8040704@gmail.com>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
Message-ID: <4492B4AC.1060100@eastlink.ca>

Chaz. wrote:
> I don't think there is a way to insure you will get the ports you want.
> Why bother testing if the port is available before hand? In between the
> port being tested and the application using it someone can sneak in and
> take it.

Hi Chaz. Thank you for your reply. The reason for the test is that I 
don't want the other services to start at all if a connection cannot be 
found to run the main service. I was thinking of writing a simple tester 
using socket module to determine which addresses are alive first. When 
it finds one it stops so in my logic I give this address to my 
ListenTCP/SSL and attempt to start the main service.

I don't expect the address list to be large. This way no time is lost 
with the client running through a long backoff cycle on an address that 
may not be alive only to have to stop it and try a another until one is 
possibly found.

I am not aware of something in twisted that evaluates addresses like 
this as part of a startup solution. In any case, if I see that an 
address in the list is available, then I would start my main service 
using it.  When a connection is made to the main address, then I want to 
start the remaining services since they are useless without the main 
service.

Regards,
David



From eprparadocs at gmail.com  Fri Jun 16 09:46:15 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Fri, 16 Jun 2006 09:46:15 -0400
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492B4AC.1060100@eastlink.ca>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca>
Message-ID: <4492B627.7030909@gmail.com>

I would know how to do it in C, but I am no twisted expert. The idea
would be to open the socket and hand it off to the service to use. I am
sure there is a way to do it in Twisted (opening a port and using it in
a service).

What you don't want to do is just "test" the port (opening it and
closing it). Once you have it opened, you need to keep it open.

Chaz


David Pratt wrote:
> Chaz. wrote:
>> I don't think there is a way to insure you will get the ports you want.
>> Why bother testing if the port is available before hand? In between the
>> port being tested and the application using it someone can sneak in and
>> take it.
> 
> Hi Chaz. Thank you for your reply. The reason for the test is that I
> don't want the other services to start at all if a connection cannot be
> found to run the main service. I was thinking of writing a simple tester
> using socket module to determine which addresses are alive first. When
> it finds one it stops so in my logic I give this address to my
> ListenTCP/SSL and attempt to start the main service.
> 
> I don't expect the address list to be large. This way no time is lost
> with the client running through a long backoff cycle on an address that
> may not be alive only to have to stop it and try a another until one is
> possibly found.
> 
> I am not aware of something in twisted that evaluates addresses like
> this as part of a startup solution. In any case, if I see that an
> address in the list is available, then I would start my main service
> using it.  When a connection is made to the main address, then I want to
> start the remaining services since they are useless without the main
> service.
> 
> Regards,
> David
> 




From jacob at internet24.de  Fri Jun 16 10:03:00 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 16 Jun 2006 16:03:00 +0200
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492B4AC.1060100@eastlink.ca>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca>
Message-ID: <1150466580.21486.10.camel@localhost.localdomain>

Why not simply start the additional
services from the startFactory-method of your mainservice'
protocol factory?

i,e,:

class MainServiceFac(ServerFactory):
    def startFactory(self):
           <possibly call parent's startFactory>
           reactor.listenTCP(.... subservice 1)
           reactor.listenTCP(.... subservice 2)....
           



On Fri, 2006-06-16 at 10:39 -0300, David Pratt wrote:
> Chaz. wrote:
> > I don't think there is a way to insure you will get the ports you want.
> > Why bother testing if the port is available before hand? In between the
> > port being tested and the application using it someone can sneak in and
> > take it.
> 
> Hi Chaz. Thank you for your reply. The reason for the test is that I 
> don't want the other services to start at all if a connection cannot be 
> found to run the main service. I was thinking of writing a simple tester 
> using socket module to determine which addresses are alive first. When 
> it finds one it stops so in my logic I give this address to my 
> ListenTCP/SSL and attempt to start the main service.
> 
> I don't expect the address list to be large. This way no time is lost 
> with the client running through a long backoff cycle on an address that 
> may not be alive only to have to stop it and try a another until one is 
> possibly found.
> 
> I am not aware of something in twisted that evaluates addresses like 
> this as part of a startup solution. In any case, if I see that an 
> address in the list is available, then I would start my main service 
> using it.  When a connection is made to the main address, then I want to 
> start the remaining services since they are useless without the main 
> service.
> 
> Regards,
> David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060616/39f0f46a/attachment.pgp 

From fairwinds at eastlink.ca  Fri Jun 16 10:07:20 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 11:07:20 -0300
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492B627.7030909@gmail.com>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca> <4492B627.7030909@gmail.com>
Message-ID: <4492BB18.8030702@eastlink.ca>

Hi Chaz. Yes, passing the connection from a test that iterates through 
addresses would be the best solution. I still have authentication that 
is handled by twisted upon connection but the first priority is finding 
something is on the other end so I've got a viable service. If there is 
a way to do something like this directly in twisted I'm hoping for some 
direction. Many thanks.

Regards,
David

Chaz. wrote:
> I would know how to do it in C, but I am no twisted expert. The idea
> would be to open the socket and hand it off to the service to use. I am
> sure there is a way to do it in Twisted (opening a port and using it in
> a service).

> What you don't want to do is just "test" the port (opening it and
> closing it). Once you have it opened, you need to keep it open.
> 
> Chaz
> 
> 
> David Pratt wrote:
>> Chaz. wrote:
>>> I don't think there is a way to insure you will get the ports you want.
>>> Why bother testing if the port is available before hand? In between the
>>> port being tested and the application using it someone can sneak in and
>>> take it.
>> Hi Chaz. Thank you for your reply. The reason for the test is that I
>> don't want the other services to start at all if a connection cannot be
>> found to run the main service. I was thinking of writing a simple tester
>> using socket module to determine which addresses are alive first. When
>> it finds one it stops so in my logic I give this address to my
>> ListenTCP/SSL and attempt to start the main service.
>>
>> I don't expect the address list to be large. This way no time is lost
>> with the client running through a long backoff cycle on an address that
>> may not be alive only to have to stop it and try a another until one is
>> possibly found.
>>
>> I am not aware of something in twisted that evaluates addresses like
>> this as part of a startup solution. In any case, if I see that an
>> address in the list is available, then I would start my main service
>> using it.  When a connection is made to the main address, then I want to
>> start the remaining services since they are useless without the main
>> service.
>>
>> Regards,
>> David
>>
> 



From fairwinds at eastlink.ca  Fri Jun 16 10:23:42 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 11:23:42 -0300
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <1150466580.21486.10.camel@localhost.localdomain>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca>
	<1150466580.21486.10.camel@localhost.localdomain>
Message-ID: <4492BEEE.9010905@eastlink.ca>

Hi Thomas. Thank you for your reply. Yes, this might be a plan for 
starting services. I'll look at how something like this could work with 
my config since I am not using twisted app in this case but integrated 
with another daemon service. Many thanks.

Regards,
David

Thomas Jacob wrote:
> Why not simply start the additional
> services from the startFactory-method of your mainservice'
> protocol factory?
> 
> i,e,:
> 
> class MainServiceFac(ServerFactory):
>     def startFactory(self):
>            <possibly call parent's startFactory>
>            reactor.listenTCP(.... subservice 1)
>            reactor.listenTCP(.... subservice 2)....
>            
> 
> 
> 
> On Fri, 2006-06-16 at 10:39 -0300, David Pratt wrote:
>> Chaz. wrote:
>>> I don't think there is a way to insure you will get the ports you want.
>>> Why bother testing if the port is available before hand? In between the
>>> port being tested and the application using it someone can sneak in and
>>> take it.
>> Hi Chaz. Thank you for your reply. The reason for the test is that I 
>> don't want the other services to start at all if a connection cannot be 
>> found to run the main service. I was thinking of writing a simple tester 
>> using socket module to determine which addresses are alive first. When 
>> it finds one it stops so in my logic I give this address to my 
>> ListenTCP/SSL and attempt to start the main service.
>>
>> I don't expect the address list to be large. This way no time is lost 
>> with the client running through a long backoff cycle on an address that 
>> may not be alive only to have to stop it and try a another until one is 
>> possibly found.
>>
>> I am not aware of something in twisted that evaluates addresses like 
>> this as part of a startup solution. In any case, if I see that an 
>> address in the list is available, then I would start my main service 
>> using it.  When a connection is made to the main address, then I want to 
>> start the remaining services since they are useless without the main 
>> service.
>>
>> Regards,
>> David
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From foom at fuhm.net  Fri Jun 16 11:19:50 2006
From: foom at fuhm.net (James Y Knight)
Date: Fri, 16 Jun 2006 11:19:50 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <20060616030146.29014.738989505.divmod.quotient.1430@ohm>
References: <20060616030146.29014.738989505.divmod.quotient.1430@ohm>
Message-ID: <B5C97BFC-3C14-454C-8AE7-03ABD390819C@fuhm.net>


On Jun 15, 2006, at 11:01 PM, Jean-Paul Calderone wrote:

> On Thu, 15 Jun 2006 22:53:22 -0400, glyph at divmod.com wrote:
>> [snip]
>>
>> Which reminds me.  Somebody really *should* be trying to get that  
>> C deferred stuff James did into Twisted proper; one Deferred for  
>> every locateChild sounds excruciatingly expensive for long URLs,  
>> as the code currently stands.
>>
>
> FWIW, last I checked, it was an insignificant performance  
> improvement over
> the current Deferred implementation, at least for web2.

Which is not all that surprising, as web2 doesn't make very many  
deferreds. The optimization of not returning a deferred when you have  
an immediate result is not really so minor if you'd otherwise be  
making a ton of them.

However, be careful, it's possible that in some cases the ambiguous  
result is actually slower, as "isinstance" turns out to be quite an  
expensive operation. So if you end up returning the deferred/result  
out multiple levels, testing at each level, at some point all the  
isinstance calls add up to be slower than just always returning a  
deferred.

James




From p.mayers at imperial.ac.uk  Fri Jun 16 12:25:22 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 16 Jun 2006 17:25:22 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus 
Message-ID: <4492DB72.2050903@imperial.ac.uk>

All,

I've run into "this service needs to know about this event from this 
other service" once too often. It's message bus time, baby.

However, many of the daemons I use are locally-written Twisted code, so 
a Twisted-friendly (async api) one would be nice. Note also that other 
non-Twisted code will need to connect to it, so rolling my own (aside 
from it being a bad idea from a NIH perspective) is out.

I could of course wrap the message queue receiver for something 
well-proven like Spread into a thread. Then there's XMPP which is the 
darling of the anti-Java movement - though wrapping Twisteds' XMPP API 
to get a message bus might be annoying.

Suggestions?



From eprparadocs at gmail.com  Fri Jun 16 12:49:23 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Fri, 16 Jun 2006 12:49:23 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <4492E113.2040703@gmail.com>

I do it using "named singleton" classes and callbacks. Anyone that wants
to share the queue merely asks for the class to be instantiated. There
are 3 methods - registerCallback, removeCallback and sendEvent. Whatever
arguments, short of a few, are passed to the callback routines. It is
simple and has worked for me.

I have thought about doing something more sophisticated so the message
bus can extend to other machines, but I haven't done that yet.

Chaz

Phil Mayers wrote:
> All,
> 
> I've run into "this service needs to know about this event from this
> other service" once too often. It's message bus time, baby.
> 
> However, many of the daemons I use are locally-written Twisted code, so
> a Twisted-friendly (async api) one would be nice. Note also that other
> non-Twisted code will need to connect to it, so rolling my own (aside
> from it being a bad idea from a NIH perspective) is out.
> 
> I could of course wrap the message queue receiver for something
> well-proven like Spread into a thread. Then there's XMPP which is the
> darling of the anti-Java movement - though wrapping Twisteds' XMPP API
> to get a message bus might be annoying.
> 
> Suggestions?
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dreid at dreid.org  Fri Jun 16 13:54:21 2006
From: dreid at dreid.org (David Reid)
Date: Fri, 16 Jun 2006 10:54:21 -0700
Subject: [Twisted-Python] @raise and deferreds
In-Reply-To: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>
References: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>
Message-ID: <4492F04D.4010805@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Wilfredo S?nchez Vega wrote:
>   I'm curious about what conventions we have for documenting exceptions
> that are raised in deferreds, which turn into errbacks.  Say I have a
> function which returns a deferred, and several flavors of Failure might
> have been raised.  I'd like to document that thusly:
> 
>     def foo():
>         """
>         Do something fooey.
>         @raise FooError: if it's too fooey.
>         @raise BarError: if there is any bar; this is foo, not bar.
>         @raise HolyCrapError: if your pants are on fire.
>         @return: a deferred containing a Foo.
>         """
>         ...
> 
>   This is a little weird, since the exceptions are actually being
> raised, but are being delivered in errbacks.  The alternative is to
> describe all of the possible exceptions in the @return clause, but that
> is really clunky.  So I'd like to have a convention whereby everyone
> knows that if you have a function that returns a deferred, that the
> exceptions described in the docstring refer to exceptions delivered via
> errbacks rather than via raising.

A couple of quick greps seem to indicate that @raise is used sometimes,
but mostly that the errbacks are documented in @return which may be
unattractive is quite clear.  @raise is very confusing and I had to
check the actual implementations of the interfaces which brought up this
issue to see where the 'raise' actually took place.  So I'm still in
favor of the interfaces being changed to include the errback information
in the @return.  However it can probably be put off until the next web2
release.

>   Is that making any sense?  Alternatively, we could make up a new
> keyword (@errback?), but I don't know how troublesome doing so is.  If
> we do that, maybe another keyword (@callback) makes sense as well.

I think that would be good, we should ask mwh to do that.

- -David


- --
"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEkvBMrsrO6aeULcgRAjkCAJoDsfNOgTd8jM+JPa3jMdIJeX5OMQCeKpyK
hLiNeAHwmKSoOItnX6wC7sA=
=Gn0G
-----END PGP SIGNATURE-----



From db3l at fitlinxx.com  Fri Jun 16 16:24:48 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Jun 2006 16:24:48 -0400
Subject: [Twisted-Python] Re: Tracking twisted repository post 2.4.0?
References: <uslm6vu75.fsf@fitlinxx.com>
	<20060616010442.29014.765795977.divmod.quotient.1333@ohm>
Message-ID: <uirn097cf.fsf@fitlinxx.com>

glyph at divmod.com writes:

> On 15 Jun 2006 20:07:58 -0400, David Bolen <db3l at fitlinxx.com> wrote:
> >We've got some locally maintained modifications to Twisted that prior
> >to 2.4.0 we were tracking by syncing our repository with the Twisted
> >trunk (as a vendor) at the overall official tags.
> 
> Have you submitted those as patches in the bugtracker?  If so, are
> we being really sluggish about applying them? :)

It depends.  There really aren't many of them but a few are changes to
PB to pass some additional types (such as mx.DateTime) that I don't
really see as valid for general incorporation into Twisted, but that
were the simplest way to resolve some issues for ourselves in the
past.  There was also an ongoing email discussion about better passing
of exception objects through PB that we implemented during the
discussion but I am not certain if all the same support got committed
into the core (it wasn't clear at the time what was willing to be
accepted).

Others did get submitted (see ticket 669), but show an example of how
even when a fix does eventually make it in (in this case via a
reworked implementation) there can be a long period of time - across
multiple Twisted "releases" - where we need to maintain it as a local
patch for our own operations before we can retire it.

> As you have unfortunately noticed with this change... we don't
> currently provide any support for configurations like this.  I'd
> personally like to discourage it, because long-term local
> modifications to Twisted indicate a failure of process, either you
> submitting them or us accepting them.

But I think it's somewhat unrealistic to expect there not to be short
term local modifications - certainly I find that to be fairly common
with a large percentage of open source packages I track.  It's not
unexpected - when I fix something locally it's normally to scratch an
immediate itch I have, but there's bound to be some latency before
either it can be cleaned up for a good submission to the package
maintainer and/or it gets accepted/applied.  It's unfortunate that the
recent changes in the Twisted source tree aren't that friendly to
doing this (particularly with generally easy ways to handle such
issues with CVS and/or Subversion).

Long term I'd agree - although I do still see times where some
modifications just won't likely get accepted back and will be
maintained for a while.

> >I can understand why there is no single tag for the trunk, since an overall
> >"Sumo" release of twisted
> 
> To reduce confusion we're trying to remove the word "sumo"
> everywhere.  If you spot that word still being used somewhere on the
> site it's a bug, please let us know.
> 
> Right now it's just "a release of Twisted".

No problem.  Off the top of my head I only remember noticing it on the
web site on the "What is Twisted" page, but I think it was in an older
News entry.

> but until that happens, the setup.py files for separate projects
> determine a fairly arbitrary collection of files.  Specifically,
> ownership of twisted/plugins/ is spread out between all subprojects.
> Also, some files are moved around; the "topfiles" directory is
> pulled out to the root of each subproject as part of the release
> process.

I did notice that but figured I'd ignore the root files when combining
for a vendor dump (since they also existed independently under
topfiles).

I suppose I could try just executing the setup for each sub-project I
am interested in, and using the result of the build directory as the
appropriate collection of files.  At least that way I'm properly in
sync with what is considered part of each sub-project.

> Divmod doesn't track Twisted releases through SVN; any changes we are
> in the process of contributing but which haven't been released are
> kept in our utility package "Epsilon".  Epsilon has a "hotfixes"
> module which allows us to modify Twisted's behavior in cases where we
> really need to modify the library rather than just package additional
> functionality outside it -- you might look at that implementation as
> an example of a way to formalize monkeypatching and reduce its
> fragility.

Perhaps, although to be honest, I'd be contrasting that effort versus
just using the source code system's capabilities, since managing such
local modifications is one of the things it does reasonably well, and
I already do for a number of other projects we use.

But thanks, at least I know I'm not missing something obvious from the
transition to the 2.4.0 tagging approach.

-- David




From db3l at fitlinxx.com  Fri Jun 16 16:38:08 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Jun 2006 16:38:08 -0400
Subject: [Twisted-Python] Re: Twisted-friendly Message bus
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <uejxo96q7.fsf@fitlinxx.com>

Phil Mayers <p.mayers at imperial.ac.uk> writes:

> All,
> 
> I've run into "this service needs to know about this event from this
> other service" once too often. It's message bus time, baby.
(...)
> Suggestions?

You could go with a signal dispatcher mechanism.  PyDispatcher works
well, although the actual signal delivery is synchronous.  But it has
nice features such as weak references to receivers so no need to worry
about cleanup when a receiver disappears.

There's also a package, Louie, based on PyDispatcher which in theory
added support for Twisted among other things.  We're still using
PyDispatcher (I don't recall exactly why I didn't want to move to
Louie - maybe we were still on Python 2.2 at the time) ourselves.

http://pydispatcher.sourceforge.net  (also has a ref to Louie)

-- David





From christian.simms at gmail.com  Fri Jun 16 19:37:48 2006
From: christian.simms at gmail.com (christian simms)
Date: Fri, 16 Jun 2006 19:37:48 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <cd8fa6f90606161637h2bf4bb78te6bfd4a070c40a63@mail.gmail.com>

I like and use XMPP myself.  Since it's a standard, there are multiple
implementation choices, which is nice. And you get queueing for free.
And besides having a bunch of client libraries available in all major
programming languages, for testing you can just manually send messages
using an IM client like GAIM.

The only other major standard I know of is JMS, and that's tied to Java.

Cheers,
Christian


On 6/16/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> All,
>
> I've run into "this service needs to know about this event from this
> other service" once too often. It's message bus time, baby.
>
> However, many of the daemons I use are locally-written Twisted code, so
> a Twisted-friendly (async api) one would be nice. Note also that other
> non-Twisted code will need to connect to it, so rolling my own (aside
> from it being a bad idea from a NIH perspective) is out.
>
> I could of course wrap the message queue receiver for something
> well-proven like Spread into a thread. Then there's XMPP which is the
> darling of the anti-Java movement - though wrapping Twisteds' XMPP API
> to get a message bus might be annoying.
>
> Suggestions?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Fri Jun 16 20:23:33 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 16 Jun 2006 20:23:33 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus 
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>

On Fri, 16 Jun 2006 17:25:22 +0100, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>All,
>
>I've run into "this service needs to know about this event from this other 
>service" once too often. It's message bus time, baby.

Could you clarify whether you mean message passing within a single process
or message passing between different processes on the same host or message
passing between multiple hosts?  Different responders in this thread seem
to have assumed different things.

Jean-Paul



From eprparadocs at gmail.com  Sat Jun 17 06:54:00 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 17 Jun 2006 06:54:00 -0400
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <4493DF48.2080604@gmail.com>

I am just about to embark on a SOAP interface to my services. I enjoy
using Twisted and would love to continue using it with SOAP. I have used
ZSI before in a standalone product but don't see much about marrying the
two: twisted and ZSI.

I am sure there is someone out there that has done it, and wonder how to
do it? Are there any examples yet?

Peace,
Chaz



From ldanielburr at mac.com  Sat Jun 17 12:34:50 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Sat, 17 Jun 2006 11:34:50 -0500
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <4493DF48.2080604@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
Message-ID: <op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Sat, 17 Jun 2006 05:54:00 -0500, Chaz. <eprparadocs at gmail.com> wrote:

> I am just about to embark on a SOAP interface to my services. I enjoy
> using Twisted and would love to continue using it with SOAP. I have used
> ZSI before in a standalone product but don't see much about marrying the
> two: twisted and ZSI.
>

That's because SOAP and company suck.  There is always, always, *always* a
better way to accomplish a task than using SOAP.  I've ranted about this
topic before in another thread, to no avail, and I doubt I'll change your
mind either, but someone needs to speak out against this nonsense.

> I am sure there is someone out there that has done it, and wonder how to
> do it? Are there any examples yet?
>

Check out PyGridWare; they've integrated ZSI with twisted for you.  Again,
SOAP is a pure waste of time and effort, so please consider exploring the
other options available to you, before committing to SOAP.

L. Daniel Burr



From foom at fuhm.net  Sat Jun 17 13:47:08 2006
From: foom at fuhm.net (James Y Knight)
Date: Sat, 17 Jun 2006 13:47:08 -0400
Subject: [Twisted-Python] Re: Tracking twisted repository post 2.4.0?
In-Reply-To: <uirn097cf.fsf@fitlinxx.com>
References: <uslm6vu75.fsf@fitlinxx.com>
	<20060616010442.29014.765795977.divmod.quotient.1333@ohm>
	<uirn097cf.fsf@fitlinxx.com>
Message-ID: <92C97205-61F6-4813-9AD3-8F576D4F7A92@fuhm.net>


On Jun 16, 2006, at 4:24 PM, David Bolen wrote:
>> As you have unfortunately noticed with this change... we don't
>> currently provide any support for configurations like this.  I'd
>> personally like to discourage it, because long-term local
>> modifications to Twisted indicate a failure of process, either you
>> submitting them or us accepting them.
>
> But I think it's somewhat unrealistic to expect there not to be short
> term local modifications - certainly I find that to be fairly common
> with a large percentage of open source packages I track.  It's not
> unexpected - when I fix something locally it's normally to scratch an
> immediate itch I have, but there's bound to be some latency before
> either it can be cleaned up for a good submission to the package
> maintainer and/or it gets accepted/applied.  It's unfortunate that the
> recent changes in the Twisted source tree aren't that friendly to
> doing this (particularly with generally easy ways to handle such
> issues with CVS and/or Subversion).
>
> Long term I'd agree - although I do still see times where some
> modifications just won't likely get accepted back and will be
> maintained for a while.

I'm very sympathetic to this, and I'd really like for the SVN source  
tree to be arranged better than it is. The main constraint is keeping  
the ability to run from a svn checkout directly, without an install  
step. I made a branch that did reorganize things by subproject. And  
that pretty much worked fine except that trial gets totally confused  
when running regressions on it. I then also patched trial to make it  
not blow up.

However, that particular way of fixing trial was rejected, and no  
other has been implemented yet. Reorganization is essentially blocked  
until this issue is solved.

James



From mwh at python.net  Sat Jun 17 13:48:14 2006
From: mwh at python.net (Michael Hudson)
Date: Sat, 17 Jun 2006 18:48:14 +0100
Subject: [Twisted-Python] Re: @raise and deferreds
References: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>
	<4492F04D.4010805@dreid.org>
Message-ID: <2m4pyjn069.fsf@starship.python.net>

David Reid <dreid at dreid.org> writes:

>>   Is that making any sense?  Alternatively, we could make up a new
>> keyword (@errback?), but I don't know how troublesome doing so is.  If
>> we do that, maybe another keyword (@callback) makes sense as well.
>
> I think that would be good, we should ask mwh to do that.

This turns out to be fairly easy.  This markup:

    def renderHTTP(req):
        """Return an IResponse or a deferred which will fire an
        IResponse. This response will be written to the web browser
        which initiated the request.

        @errback FooError: if it's too fooey.
        @errback BarError: if there is any bar; this is foo, not bar.
        @errback HolyCrapError: if your pants are on fire.
        """

(function chosen entirely at random) produces this output:

http://starship.python.net/crew/mwh/twisted.web2.iweb.IResource.html

Producing something better than "Unknown Field: errback" is a matter
of a little typing; ideas welcome :)

Cheers,
mwh

-- 
  I believe C++ instills fear in programmers, fear that the
  interaction of some details causes unpredictable results.
                                        -- Erik Naggum, comp.lang.lisp




From golux at comcast.net  Sat Jun 17 15:40:54 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 17 Jun 2006 15:40:54 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <20060608153856.31435.1503123222.divmod.quotient.3918@ohm>
References: <20060608153856.31435.1503123222.divmod.quotient.3918@ohm>
Message-ID: <44945AC6.1050207@comcast.net>

glyph at divmod.com wrote:
> On Thu, 08 Jun 2006 09:30:17 -0400, Stephen Waterbury 
> <golux at comcast.net> wrote:
>> Thomas Vander Stichele wrote:
> 
>>> At the risk of being too obvious, we've been using PB as shipped with
>>> Twisted since 1.3.0, and it's worked very well for us.  Are you saying
>>> there's specific stuff you need from newpb that's not in the current
>>> implementation ?
> 
>> Yes:  forward compatibility.  ;)   I've written PB code, too, and that
>> code doesn't work with newpb.  Not that I would expect it to, given the
>> fairly substantial changes Brian made in developing newpb, nor do I
>> think it would be good to have that as a constraint on newpb.
> 
> I think I actually disagree.  If it's going to be called "PB", it should 
> be compatible, in some way, with the existing "PB" infrastructure.  
> Maybe not if you wrote insanely complex custom side-effecty custom 
> jelliers, but at least you should be able to port fairly easily.

Glyph, thanks for (finally ;) chiming in on this one!
I'm happy to hear that PB1 -> PB2 ports shouldn't be too hard ...
so I'll just shut up and use PB1.  :)

> While wire-level compatibility might be desirable, I think that 
> application-level compatibility should actually become a requirement.  
> As you note, Steve, the only thing that the promise of a PB2 that will 
> be totally incompatible with PB1 is doing is discouraging people from 
> looking at either right now.

Well, it had definitely discouraged me from using PB1, partly because
Brian's commit messages were always so cogent and PB2 sounds so great,
I just thought damn, well I'll wait for that ...

> Other applications are already using PB though, and many are doing it to 
> good effect.

Thanks -- another important thing to know.  (I admit, I'd probably
be more au courant if I'd tune in to irc once in a while!)

> So let me say this as unambiguously as possible:
> 
> PB1 is still supported, and until further notice, it will continue to 
> be.  PB2 is still experimental and is *not* yet supported.  We might not 
> have a lot of development bandwidth to spend on PB1, but bugs are still 
> being fixed, deprecations removed, and APIs updated to reflect the 
> modern state of Twisted.
> 
> It can be updated and fixed incrementally while we wait for the Great 
> Revolution of PB2.  Perhaps we can even start making the various APIs 
> converge, so that the migration process will be smoother.
> 
> This isn't a new decision or announcement, just a statement of the 
> current state of affairs.

Well, it certainly was a much-needed clarification, IMO, and it
helped my decision a great deal.  Thanks!

> ... Brian has been very clear about PB2's 
> experimental status all along.

Agreed.  What I was not obvious was how long it would remain
experimental.  I can bleed for a while, but it's nice to have
some idea of how many pints I'll need ... ;)

> ... Maintenance on PB1 never stopped.  JP, 
> for example, just recently removed a bunch of grotty old-cred stuff 
> (hallelujiah it's gone) from PB1.

Right -- thanks, JP!  I do monitor commits, so I was aware that PB1
was being maintained, which is important for my decision.

> It just seems like because there's 
> this new direction, everyone tacitly assumes that the old stuff will be 
> dropped -- Twisted has an unfortunate history as such things go, but we 
> are getting better about it.

Also agreed -- and I'm very happy to see Twisted continuing its
steady evolution, and now a mainstay among Python libraries.  Kinda
validates my original judgment that it would be -- thanks to the
whole Twisted community for that, especially Glyph and the core
minions (you know who you are :).

Cheers,
Steve




From exarkun at twistedmatrix.com  Sun Jun 18 01:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1150607101.45.32006561@twistedmatrix.com

Bug summary
______________________
Summary for 2006-06-11 through 2006-06-18
Bugs opened: 17    Bugs closed: 20  Total open bugs: 618 (-3)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       -2  |Highest:  -2          |Conch:    -5           
|Enhancement:  +0  |High:     -3          |Core:     -2           
|Task:         +1  |Normal:   +3          |Mail:     -1           
                   |Low:      +1          |Runner:   +1           
                   |Lowest:   +0          |Web:      -1           
                                          |Web2:     +4           
                                          |Website:  +2           
                                          |Words:    +1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1815] Update website documentation for web2 0.2.0 (opened by dreid) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1815

[#1817] Several methods in web2.dav that should return deferreds do not (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1817

[#1818] connectionLost in examples is omitting reason arg (opened by jerub) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1818

[#1829] Various simple lore errors exist in twisted documentation (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1829

                    ===== High =====
[#1830] Sell the Twisted reference PDF, bound as a physical book (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/1830

                    ===== Normal =====
[#1814] twisted.web2.auth should provide an UnauthorizedResponse (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1814

[#1816] More informative docstring for chainDeferred (opened by edsuom)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1816

[#1819] give permission to update the website to the people who occasionally need to do it (opened by dreid)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1819

[#1820] TwistedRunner 0.2.0 install on Cygwin in build_ext step (-lrpc link statement is missing) (opened by jenisys)
    defect          runner     http://twistedmatrix.com/trac/ticket/1820

[#1821] Turn deferredgenerator wiki page into howto (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1821

[#1823] twisted.words.im.tap / proxyui is untested and riddled with bugs. (opened by jerub)
    enhancement     words      http://twistedmatrix.com/trac/ticket/1823

[#1824] typo in plugin howto (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1824

[#1825] web2.dav COPY and MOVE methods fail if root directory of DAV resource is unwritable (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1825

[#1827] web2.auth.wrapper.UnauthenticatedResource does not reply with allowed methods for wrapped resource (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1827

[#1828] DAV server using web2.dav fails several properties tests in Litmus 0.10.5 (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1828

                    ===== Low =====
[#1822] connectTCP should re-resolve domain names on each connection attempt (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1822

                    ===== Lowest =====
[#1826] Typo in twisted.plugin example (opened by terrycojones) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1826



Closed Bugs
______________________
                    ===== Highest =====
[#1818] connectionLost in examples is omitting reason arg (opened by jerub, closed by stephen, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1818

[#1565] VT102Writer.__str__ method in manhole.py does not check for special case (opened by htj, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1565

[#1629] Unjellyable.unjellyFor does not return self (opened by ml.flex, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1629

[#1817] Several methods in web2.dav that should return deferreds do not (opened by wsanchez, closed by exarkun, )
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1817

[#1815] Update website documentation for web2 0.2.0 (opened by dreid, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1815

[#1829] Various simple lore errors exist in twisted documentation (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1829

[#664 ] use reactor pool instead of internal pool (opened by davep, closed by davep, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/664

                    ===== High =====
[#417 ] Twisted.web deferred handling bug (opened by slyphon, closed by exarkun, invalid)
    defect          web        http://twistedmatrix.com/trac/ticket/417

[#466 ] OSCAR protocol bug (opened by exarkun, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/466

[#427 ] cred backwards compatibility fails for updateApplication (opened by acapnotic, closed by exarkun, wontfix)
    defect          conch      http://twistedmatrix.com/trac/ticket/427

[#1009] Document defgen (opened by hypatia, closed by edsuom, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1009

                    ===== Normal =====
[#405 ] uid/gid related permissions checking methods for t.w.filepath (opened by slyphon, closed by exarkun, invalid)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/405

[#464 ] simple enterprise example (opened by davep, closed by exarkun, invalid)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/464

[#396 ] [PATCH] Maildir folder and courier Maildir++ support (quota) (opened by sirius, closed by exarkun, wontfix)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/396

[#450 ] [PATCH] add --pidfile '' for not creating pidfiles (opened by rgl, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/450

[#497 ] client support for SFTP (opened by z3p, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/497

[#1819] give permission to update the website to the people who occasionally need to do it (opened by dreid, closed by tekNico, )
    enhancement     website    http://twistedmatrix.com/trac/ticket/1819

[#1782] web2's WSGIHandler incorrectly advertises twisted as a multiprocess environment (opened by pjenvey, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1782

[#665 ] extend reactor pool api to handle suggested additional threads (opened by davep, closed by davep, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/665

                    ===== Lowest =====
[#1826] Typo in twisted.plugin example (opened by terrycojones, closed by mithrandi, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1826





From foom at fuhm.net  Sun Jun 18 23:24:55 2006
From: foom at fuhm.net (James Y Knight)
Date: Sun, 18 Jun 2006 23:24:55 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17259 - Revert 17255 -
	win32 test suit failures
In-Reply-To: <E1Frg2U-0004yk-00@wolfwood>
References: <E1Frg2U-0004yk-00@wolfwood>
Message-ID: <AE587186-A0E7-417B-BA5D-23D23690B0B2@fuhm.net>

On Jun 17, 2006, at 3:00 PM, Jp Calderone wrote:
> Revert 17255 - win32 test suit failures

FYI, the error was:

======================================================================== 
=======
[ERROR]: twisted.web2.dav.test.test_options.OPTIONS.test_DAV1

Traceback (most recent call last):
   File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted 
\web2\dav\test\util.py", line 164, in do_serialize
     r = f(*args)
   File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted 
\web2\dav\test\util.py", line 121, in send
     d = request.locateResource(request.uri)
   File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted 
\web2\server.py", line 408, in locateResource
     assert segments[0] == "", "URL path didn't begin with '/': %s" %  
(path,)
exceptions.AssertionError: URL path didn't begin with '/': %5Cdir2% 
5Ctest_delete.py

James



From jacob at internet24.de  Mon Jun 19 07:19:58 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 19 Jun 2006 13:19:58 +0200
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <1150715998.23944.39.camel@localhost.localdomain>

> That's because SOAP and company suck.  There is always, always, *always* a
> better way to accomplish a task than using SOAP.  I've ranted about this
> topic before in another thread, to no avail, and I doubt I'll change your
> mind either, but someone needs to speak out against this nonsense.

Curious, what would you use if you needed a general remote programming
interface built using python, where you can simply upload new python
codelets, that should be accessible not just from python but from any
major Windows and Unix PL, where you need complex types, and where you
wouldn't know what
kind of tasks you'll be solving with it in a couple of years. 

Corba? XML-RPC?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060619/577caed9/attachment.pgp 

From p.mayers at imperial.ac.uk  Mon Jun 19 07:43:45 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 19 Jun 2006 12:43:45 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>
Message-ID: <44968DF1.1070504@imperial.ac.uk>

Jean-Paul Calderone wrote:
> On Fri, 16 Jun 2006 17:25:22 +0100, Phil Mayers 
> <p.mayers at imperial.ac.uk> wrote:
>> All,
>>
>> I've run into "this service needs to know about this event from this 
>> other service" once too often. It's message bus time, baby.
> 
> Could you clarify whether you mean message passing within a single process
> or message passing between different processes on the same host or message
> passing between multiple hosts?  Different responders in this thread seem
> to have assumed different things.

Yes sorry:

Message passing between different processes on different machines i.e. 
the hard one.

I am thinking something like Spread.



From eprparadocs at gmail.com  Mon Jun 19 10:11:58 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 19 Jun 2006 10:11:58 -0400
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <1150715998.23944.39.camel@localhost.localdomain>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>	<4493DF48.2080604@gmail.com>	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
Message-ID: <4496B0AE.6050609@gmail.com>

Right now I support XML-RPC but people have clamored for SOAP, so SOAP
it is as well.

Personally I think sending stuff in ASCII text is silly, but it is out
there today as (a more or less) standard.

Chaz

Thomas Jacob wrote:
>> That's because SOAP and company suck.  There is always, always, *always* a
>> better way to accomplish a task than using SOAP.  I've ranted about this
>> topic before in another thread, to no avail, and I doubt I'll change your
>> mind either, but someone needs to speak out against this nonsense.
> 
> Curious, what would you use if you needed a general remote programming
> interface built using python, where you can simply upload new python
> codelets, that should be accessible not just from python but from any
> major Windows and Unix PL, where you need complex types, and where you
> wouldn't know what
> kind of tasks you'll be solving with it in a couple of years. 
> 
> Corba? XML-RPC?
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From eprparadocs at gmail.com  Mon Jun 19 10:14:17 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 19 Jun 2006 10:14:17 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <44968DF1.1070504@imperial.ac.uk>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>
	<44968DF1.1070504@imperial.ac.uk>
Message-ID: <4496B139.1070300@gmail.com>

Spread as in Twisted's Spread or the Spread communication package?

Chaz.

Phil Mayers wrote:
> Jean-Paul Calderone wrote:
>> On Fri, 16 Jun 2006 17:25:22 +0100, Phil Mayers
>> <p.mayers at imperial.ac.uk> wrote:
>>> All,
>>>
>>> I've run into "this service needs to know about this event from this
>>> other service" once too often. It's message bus time, baby.
>>
>> Could you clarify whether you mean message passing within a single
>> process
>> or message passing between different processes on the same host or
>> message
>> passing between multiple hosts?  Different responders in this thread seem
>> to have assumed different things.
> 
> Yes sorry:
> 
> Message passing between different processes on different machines i.e.
> the hard one.
> 
> I am thinking something like Spread.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From washort at twistedmatrix.com  Mon Jun 19 10:43:02 2006
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Mon, 19 Jun 2006 10:43:02 -0400
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <1150715998.23944.39.camel@localhost.localdomain>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
Message-ID: <20060619144302.GY31901@localhost.localdomain>

On Mon, Jun 19, 2006 at 01:19:58PM +0200, Thomas Jacob wrote:
> Curious, what would you use if you needed a general remote programming
> interface built using python, where you can simply upload new python
> codelets, that should be accessible not just from python but from any
> major Windows and Unix PL, where you need complex types, and where you
> wouldn't know what
> kind of tasks you'll be solving with it in a couple of years. 

You're sending new code? SSH and SFTP.



From dekonerding at lbl.gov  Mon Jun 19 10:49:44 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Mon, 19 Jun 2006 07:49:44 -0700
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <4493DF48.2080604@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
Message-ID: <4496B988.8080808@lbl.gov>

Chaz. wrote:
> I am just about to embark on a SOAP interface to my services. I enjoy
> using Twisted and would love to continue using it with SOAP. I have used
> ZSI before in a standalone product but don't see much about marrying the
> two: twisted and ZSI.
>
> I am sure there is someone out there that has done it, and wonder how to
> do it? Are there any examples yet?
>   

The latest versions of ZSI (in subversion) incorporate "Twisted web 
client" support for SOAP.
This means you can start a twisted reactor and do asynchronous SOAP 
requests and get deferreds
returned.

Also, ZSI provides a WSResource you can add to a Site, very easy to make 
web services.

Another poster mentioned pyGridWare.  pyGridWare is nice in that it 
includes an extra
script, 'wsdl2web', which will create a .tac file and a WSResource file 
(you still have
to fill in the web service implementation).

Dave



From jacob at internet24.de  Mon Jun 19 11:02:47 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 19 Jun 2006 17:02:47 +0200
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <4496B0AE.6050609@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
	<4496B0AE.6050609@gmail.com>
Message-ID: <1150729367.23944.73.camel@localhost.localdomain>

On Mon, 2006-06-19 at 10:11 -0400, Chaz. wrote:
> Right now I support XML-RPC but people have clamored for SOAP, so SOAP
> it is as well.

It's really popular, especially among .NET disciples ... ;)

> Personally I think sending stuff in ASCII text is silly, but it is out
> there today as (a more or less) standard.

Well, it's certainly not something that speeds up processing, but
it makes systems much easier to debug, if the underlying messaging
system
doesn't work as it should. Which of course happens far more
often with SOAP than with other systems.

Actually, SOAP would be quite nice, if it 1) were standardised
enough to really allow condition free interoperability, 2) were less
bloated and 3) didn't simply ignore major parts of the actual
RPC/Document
request process in the standard.

The WS-I people (http://www.ws-i.org/)  try to address these things, in
an attempt to "standardise the standard" and by adding additional
stuff like WS-Security (standardised security credentials
handling) and WS-Addressing (actually specifying 
the service endpoint/protocol inside a SOAP message).

Maybe that will improve the situation somewhat, python's ZSI
is at least tracking those developments.

   -Thomas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060619/dd286b4b/attachment.pgp 

From jacob at internet24.de  Mon Jun 19 11:11:21 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 19 Jun 2006 17:11:21 +0200
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <20060619144302.GY31901@localhost.localdomain>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
	<20060619144302.GY31901@localhost.localdomain>
Message-ID: <1150729881.23944.82.camel@localhost.localdomain>

On Mon, 2006-06-19 at 10:43 -0400, washort at twistedmatrix.com wrote:
> On Mon, Jun 19, 2006 at 01:19:58PM +0200, Thomas Jacob wrote:
> > Curious, what would you use if you needed a general remote programming
> > interface built using python, where you can simply upload new python
> > codelets, that should be accessible not just from python but from any
> > major Windows and Unix PL, where you need complex types, and where you
> > wouldn't know what
> > kind of tasks you'll be solving with it in a couple of years. 

Sure ;) But these codelets are supposed to offer some kind of
RPC-Service, once they are uploaded, several different "rpc functions"
per service, various complex input and output data types, in a multi
platform/OS
environment. And the question was: what is better suited for
that than SOAP.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060619/aa626834/attachment.pgp 

From p.mayers at imperial.ac.uk  Mon Jun 19 17:24:43 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 19 Jun 2006 22:24:43 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4496B139.1070300@gmail.com>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk>
	<4496B139.1070300@gmail.com>
Message-ID: <4497161B.5090709@imperial.ac.uk>

Chaz. wrote:
> Spread as in Twisted's Spread or the Spread communication package?

The latter (sorry, thought it was obvious in the context)



From terry at jon.es  Mon Jun 19 17:59:49 2006
From: terry at jon.es (Terry Jones)
Date: Mon, 19 Jun 2006 23:59:49 +0200
Subject: [Twisted-Python] General question on components, interfaces, etc.
In-Reply-To: Your message at 15:17:01 on Thursday, 15 June 2006
References: <17553.31642.395380.717728@terry.jones.tc>
	<20060615191701.29014.575537789.divmod.quotient.1111@ohm>
Message-ID: <17559.7765.337206.304911@terry.jones.tc>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> It allows you to use the same language to talk about plugins as you
glyph> would about any other kind of adapter.  Effectively, the plugin
glyph> system is a way to adapt your "system environment" to an object
glyph> which provides a given interface.  If you use the twisted plugin
glyph> system (or some other system which uses Interface objects) then it
glyph> is pretty easy to factor your code such that implementations of the
glyph> desired interface can be obtained implicitly through the environment
glyph> or explicitly by user code passing in an implementation -- or by
glyph> passing in an object that is adaptable to that interface, and then
glyph> doing adaptation.

Hi, thanks for the explanation. I have another basic question...

If were not using a component-based approach and instead I simply
implemented the interface I wanted (in, say, myImp.py), then I could
"import myImp" in multiple source files and everything would be fairly
straightforward (if inflexible when it came to using different
implementations).

If I allow a user or sysadmin to specify the implementation to use on the
command line, then my main() in main.py can use some kind of plugin
approach to find and load the right source file. That's presumably going to
use some form of __import__, such as

  myImp = __import__(....)

so I then have a module-level global variable in main.py called myImp. But
my other source files do not yet know what to import.

It seems like an obvious solution is to have other source files that want
to use the implementation refer to main.myImp instead of importing anything
themselves.  Or, equivalently, one could have a plugin.py module with an
init() function that loads all required plugins and makes them accessible
as module-level global variables for others to use to get to classes and
methods in the loaded implementation.

Is that the recommended way to deal with accessing dynamically imported
components?

Regards,
Terry



From eprparadocs at gmail.com  Mon Jun 19 22:26:34 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 19 Jun 2006 22:26:34 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4497161B.5090709@imperial.ac.uk>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk>
	<4496B139.1070300@gmail.com> <4497161B.5090709@imperial.ac.uk>
Message-ID: <44975CDA.8070704@gmail.com>

I've used Spread communication before. While it is a nice system is does
have some shortcomings. First, it is a pretty costly system in terms of
resources. Secondly, it will only support a hundred or so computers (too
small for my application).


Chaz.

Phil Mayers wrote:
> Chaz. wrote:
>> Spread as in Twisted's Spread or the Spread communication package?
> 
> The latter (sorry, thought it was obvious in the context)
> 




From ml.flex at gmail.com  Tue Jun 20 08:32:10 2006
From: ml.flex at gmail.com (Micky Latowicki)
Date: Tue, 20 Jun 2006 14:32:10 +0200
Subject: [Twisted-Python] pb over windows named pipes?
Message-ID: <d27002d90606200532u79b33fb9p3d6845333ff0bf9b@mail.gmail.com>

Hi.

We are interested in running pb using windows named pipes as transport, to
enjoy the OS-level access control they offer.

We seek advice regarding:

1. what must be written to make this happen
2. how hard would it be
3. what existing code can we learn from

Thanks in advance

Micky Latowicki,
Retell Development Laboratories
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060620/8f956909/attachment.htm 

From markus at bluegap.ch  Tue Jun 20 09:52:28 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Tue, 20 Jun 2006 15:52:28 +0200
Subject: [Twisted-Python] twisted threads: synchronous function calls
Message-ID: <4497FD9C.1070207@bluegap.ch>

Hi,

I had to use a thread... that thread must also call a function in the 
twisted reactor thread. No problem, I thought, looked up in the fine 
manual and found the reactor.callFromThread(somefunc, someargs...).

Wonderful, so in my separate thread I wrote:

x = reactor.callFromThread(myfunc, myargs...)

..but...

callFromThread returns before myfunc finishes. It seems to be useful for 
async function calls, but not for my case.

I ended up writing something like:

def syncCall():

	waitCond = threading.Condition()
	waitCond.result = 0

	def _process(cond):
		cond.acquire()
		cond.result = ..some function call..
		cond.notify()
		cond.release()

	waitCond.acquire()
	reactor.callFromThread(_process, waitCond)
	waitCond.wait()
	waitCond.release()

	return waitCond.result


Now, I might have missed something, but that's sure functionality which 
Twisted should provide.

In my first attempt I let the function return a Defer. I expected the 
reactor to 'send back' the result to the calling thread only after the 
Defer.callback() was called. IMHO that would be the most elegant and 
intuitively way:


def myfunc(myarg):
	Defer d
	reactor.callLater(10, d.callback)
	return d

# from the separate thread one would write:
reactor.callFromThreadSync(myfunc, args)

Am I facing problems I'm not aware of? Did I miss something?

Regards

Markus



From andrew-twisted at puzzling.org  Tue Jun 20 10:25:41 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 21 Jun 2006 00:25:41 +1000
Subject: [Twisted-Python] twisted threads: synchronous function calls
In-Reply-To: <4497FD9C.1070207@bluegap.ch>
References: <4497FD9C.1070207@bluegap.ch>
Message-ID: <20060620142541.GA4667@steerpike.home.puzzling.org>

On Tue, Jun 20, 2006 at 03:52:28PM +0200, Markus Schiltknecht wrote:
[...]
> 
> Now, I might have missed something, but that's sure functionality which 
> Twisted should provide.

See http://twistedmatrix.com/trac/ticket/1042

It has code for a function that does the same basic thing that yours does, but
with a bit more polish, e.g. if the result is a Deferred, it won't wake the
calling thread until the Deferred has a result, and it handles exceptions.

It just needs someone to write some tests and docs, and then it can be merged.
The function in that issue has actually been used by a few people, so it seems
to do the job.

-Andrew.




From therve at free.fr  Tue Jun 20 10:27:06 2006
From: therve at free.fr (Thomas HERVE)
Date: Tue, 20 Jun 2006 16:27:06 +0200
Subject: [Twisted-Python] twisted threads: synchronous function calls
In-Reply-To: <4497FD9C.1070207@bluegap.ch>
References: <4497FD9C.1070207@bluegap.ch>
Message-ID: <20060620162706.sdltikon4wccg0gg@itchy.wasabout.net>

Quoting Markus Schiltknecht <markus at bluegap.ch>:

> Hi,
>
> callFromThread returns before myfunc finishes. It seems to be useful 
> for async function calls, but not for my case.
>
> [snip]
>
> Am I facing problems I'm not aware of? Did I miss something?

There's a ticket waiting for tests/review/? in the tracker: 
http://twistedmatrix.com/trac/ticket/1042.

You can see that you have an available implementation in web2.wsgi 
called callInReactor which looks similar to yours but uses Queue 
instead.

-- 
Thomas

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.




From glyph at divmod.com  Tue Jun 20 14:03:22 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 20 Jun 2006 14:03:22 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <d27002d90606200532u79b33fb9p3d6845333ff0bf9b@mail.gmail.com>
Message-ID: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>



On Tue, 20 Jun 2006 14:32:10 +0200, Micky Latowicki <ml.flex at gmail.com> wrote:

>We are interested in running pb using windows named pipes as transport, to
>enjoy the OS-level access control they offer.
>
>We seek advice regarding:
>
>1. what must be written to make this happen

A reactor extension like listenNamedPipe/connectNamedPipe probably.

Likely this would be implemented similarly to listenUNIX.

>2. how hard would it be

To do it properly?  You can't select() on named pipes in Windows, so you'd have to work with IOCP, which I unfortunately understand only at a high level.  Hopefully someone who has worked with iocpreactor can answer your questions (hint, hint).

>3. what existing code can we learn from

There is code in twisted.internet._dumbwin32proc which does timed polling of asynchronous anonymous pipes for portable subprocess support, which may be of some use to you.

Please consider contributing the code for this if you implement it :).



From itamar at itamarst.org  Tue Jun 20 14:31:30 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 20 Jun 2006 14:31:30 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
Message-ID: <1150828291.5835.31.camel@localhost.localdomain>

On Tue, 2006-06-20 at 14:03 -0400, glyph at divmod.com wrote:

> >2. how hard would it be
> 
> To do it properly?  You can't select() on named pipes in Windows, so
> you'd have to work with IOCP, which I unfortunately understand only at
> a high level.  Hopefully someone who has worked with iocpreactor can
> answer your questions (hint, hint).

That's not completely accurate. I'm faily certain you can use named
pipes with WaitForMultipleObjects, so you could probably implement this
relatively easily with the win32eventreactor.

If they support non-blocking operations it should be easy to implement
using t.i.abstract.FileDescriptor as a basis; if they don't you can
probably steal most of the code from the win32 process support.





From ml.flex at gmail.com  Tue Jun 20 14:55:36 2006
From: ml.flex at gmail.com (Micky Latowicki)
Date: Tue, 20 Jun 2006 20:55:36 +0200
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <1150828291.5835.31.camel@localhost.localdomain>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<1150828291.5835.31.camel@localhost.localdomain>
Message-ID: <d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>

Thank you glyph and Itamar.

The idea to use named pipes occured to us very late in our dev. process, at
a point where we really have to do things quickly. We think that we should
adopt named pipes nonetheless because they should save us a lot of other
work.

Looking at WaitForMultipleObjects, it doesn't seem like named pipes fit. We
would have to use overlapping IO and events for that.

Since we use wxreactor, we probably can't use win32eventreactor as-is.

What is most accessible to us, we think, it to create threads and block. So
that's what we're going to do, at least until we have time to do something
nicer. We will contribute it, if we think it's good. We probably won't think
it's much good, though. Sorry.

Thanks again.

On 20/06/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Tue, 2006-06-20 at 14:03 -0400, glyph at divmod.com wrote:
>
> > >2. how hard would it be
> >
> > To do it properly?  You can't select() on named pipes in Windows, so
> > you'd have to work with IOCP, which I unfortunately understand only at
> > a high level.  Hopefully someone who has worked with iocpreactor can
> > answer your questions (hint, hint).
>
> That's not completely accurate. I'm faily certain you can use named
> pipes with WaitForMultipleObjects, so you could probably implement this
> relatively easily with the win32eventreactor.
>
> If they support non-blocking operations it should be easy to implement
> using t.i.abstract.FileDescriptor as a basis; if they don't you can
> probably steal most of the code from the win32 process support.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060620/534298bc/attachment.htm 

From itamar at itamarst.org  Tue Jun 20 15:54:22 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 20 Jun 2006 15:54:22 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<1150828291.5835.31.camel@localhost.localdomain>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
Message-ID: <1150833263.5835.33.camel@localhost.localdomain>

On Tue, 2006-06-20 at 20:55 +0200, Micky Latowicki wrote:

> What is most accessible to us, we think, it to create threads and
> block. So that's what we're going to do, at least until we have time
> to do something nicer. We will contribute it, if we think it's good.
> We probably won't think it's much good, though. Sorry.

Take a look at how Twisted 2.4 implements process communication on
Windows; it uses anonymous pipes, so you should be able to just use that
code and change the pipe creation bits.




From general at eepatents.com  Tue Jun 20 16:08:13 2006
From: general at eepatents.com (Ed Suominen)
Date: Tue, 20 Jun 2006 13:08:13 -0700
Subject: [Twisted-Python] twisted threads: synchronous function calls
In-Reply-To: <E1Fsja9-0001pz-02@pyramid.twistedmatrix.com>
References: <E1Fsja9-0001pz-02@pyramid.twistedmatrix.com>
Message-ID: <449855AD.1040101@eepatents.com>

> From: Andrew Bennetts <andrew-twisted at puzzling.org> On Tue, Jun 20,
> 2006 at 03:52:28PM +0200, Markus Schiltknecht wrote: [...]
>> Now, I might have missed something, but that's sure functionality
>> which Twisted should provide.
> 
> See http://twistedmatrix.com/trac/ticket/1042
> 
> It has code for a function that does the same basic thing that yours
> does, but with a bit more polish, e.g. if the result is a Deferred,
> it won't wake the calling thread until the Deferred has a result, and
> it handles exceptions.
> 
> It just needs someone to write some tests and docs, and then it can
> be merged. The function in that issue has actually been used by a few
> people, so it seems to do the job.

I liked Andrew's idea and incorporated the code of his ticket into my
syncbridge module, which I'm using as part of my sAsync package,
http://foss.eepatents.com/sAsync/

In addition to the topic here, the syncbridge module expands
considerably on the theme of queuing up synchronous tasks. It took a
*lot* of work to get the synchronous/asynchronous interface debugged and
free (apparently) of race conditions. And it has a pretty complete suite
of unit tests, although there's just one test for this particular method
right now.

The sAsync package is GPL, but I just re-licensed the syncbridge module
itself to MIT in hopes of getting Glyph to accept it into Twisted. See
ticket http://twistedmatrix.com/trac/ticket/1768.

Best regards, Ed




From teratorn at twistedmatrix.com  Tue Jun 20 20:26:48 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 21 Jun 2006 10:26:48 +1000
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<1150828291.5835.31.camel@localhost.localdomain>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
Message-ID: <op.tbgzgv08y3d107@localhost.localdomain>

On Wed, 21 Jun 2006 04:55:36 +1000, Micky Latowicki <ml.flex at gmail.com>  
wrote:

> Thank you glyph and Itamar.
>
> The idea to use named pipes occured to us very late in our dev. process,  
> at
> a point where we really have to do things quickly. We think that we  
> should
> adopt named pipes nonetheless because they should save us a lot of other
> work.
>
> Looking at WaitForMultipleObjects, it doesn't seem like named pipes fit.  
> We
> would have to use overlapping IO and events for that.

WaitForMultipleObjects can be used with named pipes, and yes, you will  
create Event objects and use overlapping IO with it.

See, for example,  
http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ipc/base/named_pipe_server_using_overlapped_i_o.asp

I don't really have any idea how easily this would fit in  
win32eventreactor... anyone?

>
> Since we use wxreactor, we probably can't use win32eventreactor as-is.
>
> What is most accessible to us, we think, it to create threads and block.  
> So
> that's what we're going to do, at least until we have time to do  
> something
> nicer. We will contribute it, if we think it's good. We probably won't  
> think
> it's much good, though. Sorry.
>
> Thanks again.

Yeah, Twisted doesn't have any real support for combining reactors (and  
maybe it's not really feasible), but that's a topic for another thread :)

> On 20/06/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>>
>> On Tue, 2006-06-20 at 14:03 -0400, glyph at divmod.com wrote:
>>
>> > >2. how hard would it be
>> >
>> > To do it properly?  You can't select() on named pipes in Windows, so
>> > you'd have to work with IOCP, which I unfortunately understand only at
>> > a high level.  Hopefully someone who has worked with iocpreactor can
>> > answer your questions (hint, hint).
>>
>> That's not completely accurate. I'm faily certain you can use named
>> pipes with WaitForMultipleObjects, so you could probably implement this
>> relatively easily with the win32eventreactor.
>>
>> If they support non-blocking operations it should be easy to implement
>> using t.i.abstract.FileDescriptor as a basis; if they don't you can
>> probably steal most of the code from the win32 process support.

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows



From tdickenson at devmail.geminidataloggers.co.uk  Wed Jun 21 04:05:43 2006
From: tdickenson at devmail.geminidataloggers.co.uk (Toby Dickenson)
Date: Wed, 21 Jun 2006 09:05:43 +0100
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <op.tbgzgv08y3d107@localhost.localdomain>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
	<op.tbgzgv08y3d107@localhost.localdomain>
Message-ID: <200606210905.43868.tdickenson@devmail.geminidataloggers.co.uk>

On Wednesday 21 June 2006 01:26, Eric Mangold wrote:

> > Since we use wxreactor, we probably can't use win32eventreactor as-is.

Could you use threadedselectreactor in place of wxreactor today? If yes, you 
should be able to use a win32eventreactor/threadedselectreactor hybrid that  
I contributed last year sometime.

(I dont have the URL right now... let me know if you cant find it)

-- 
Toby Dickenson



From eprparadocs at gmail.com  Wed Jun 21 09:28:07 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 21 Jun 2006 09:28:07 -0400
Subject: [Twisted-Python] Manhole - How to support 
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <44994967.9000608@gmail.com>

I've built a 'ManholeFactory' to use with my application (see below).
When I try to connect to it via the 'manhole' client (under Linux) it
asks for Host, port, Name, Password, all of which I provide. But it gets
an error returned.

I was wondering if I need to do anything special (besides what my
manhole support does)?

Peace,
Chaz


(Please forgive the poor formatting...it is the email client doing it).


def ManholeFactory(namespace,**passwords) :
    realm = manhole_ssh.TerminalRealm()
    def getManhole(_): return manhole.Manhole(namespace)
    realm.chainedProtocolFactory.protocolFactory = getManhole
    p = portal.Portal(realm)
    p.registerChecker(
	checkers.InMemoryUsernamePasswordDatabaseDontUse(**passwords))
    f = manhole_ssh.ConchFactory(p)
    return f


class ManholeService(internet.TCPServer):
    def __init__(self,port,namespace,**passwords):
	internet.TCPServer.__init__(self,port,
		ManholeFactory(namespace,**passwords))

ManholeSrv = ManholeService(ivars.ManholePort,
			globals(),admin='whirlwind')

ManholeSrv.setServiceParent(srv)



From exarkun at divmod.com  Wed Jun 21 10:36:51 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 10:36:51 -0400
Subject: [Twisted-Python] Manhole - How to support 
In-Reply-To: <44994967.9000608@gmail.com>
Message-ID: <20060621143651.29014.2056138675.divmod.quotient.5672@ohm>

On Wed, 21 Jun 2006 09:28:07 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I've built a 'ManholeFactory' to use with my application (see below).
>When I try to connect to it via the 'manhole' client (under Linux) it
>asks for Host, port, Name, Password, all of which I provide. But it gets
>an error returned.
>
>I was wondering if I need to do anything special (besides what my
>manhole support does)?

The manhole you set up with the attached code only listens for SSH
connections.  The Gtk2 manhole client that you're running hasn't been
updated to run with the new version of manhole yet.

I've run your code and tried ssh'ing into it and everything seems to
work alright.

Jean-Paul



From eprparadocs at gmail.com  Wed Jun 21 10:48:47 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 21 Jun 2006 10:48:47 -0400
Subject: [Twisted-Python] Manhole - How to support
In-Reply-To: <20060621143651.29014.2056138675.divmod.quotient.5672@ohm>
References: <20060621143651.29014.2056138675.divmod.quotient.5672@ohm>
Message-ID: <44995C4F.8030203@gmail.com>

Yes, the ssh side worked well. I was hoping to give my customer
something more graphical...lol.

Peace,
Chaz

Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 09:28:07 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>> I've built a 'ManholeFactory' to use with my application (see below).
>> When I try to connect to it via the 'manhole' client (under Linux) it
>> asks for Host, port, Name, Password, all of which I provide. But it gets
>> an error returned.
>>
>> I was wondering if I need to do anything special (besides what my
>> manhole support does)?
> 
> The manhole you set up with the attached code only listens for SSH
> connections.  The Gtk2 manhole client that you're running hasn't been
> updated to run with the new version of manhole yet.
> 
> I've run your code and tried ssh'ing into it and everything seems to
> work alright.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dekonerding at lbl.gov  Wed Jun 21 11:09:17 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Wed, 21 Jun 2006 08:09:17 -0700
Subject: [Twisted-Python] How to get at applications in a reactor?
Message-ID: <4499611D.7030901@lbl.gov>

Hi folks,.

I've set up a convenient telnet manhole into my application.  The 
application runs a web site serving up Static files
and some Resources.  What I want to do is telnet into the manhole and 
get access to the application object.
Unfortunately, the useful information is not bound to the local scope of 
the telnet manhole, so
I have to "stash" the application object when it is instantiated in some 
global place (such as sys._myapplication).

I'd much rather just be able to import a reactor and get at the Sites 
which have been added to it.  Browsing around
the reactor, however, hasn't been that illuminating, and none of the 
reference docs seem to point at some global
registry of added Sites/Applications, etc.

Dave



From itamar at itamarst.org  Wed Jun 21 11:21:58 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Jun 2006 11:21:58 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <200606210905.43868.tdickenson@devmail.geminidataloggers.co.uk>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
	<op.tbgzgv08y3d107@localhost.localdomain>
	<200606210905.43868.tdickenson@devmail.geminidataloggers.co.uk>
Message-ID: <1150903318.5667.0.camel@localhost.localdomain>

On Wed, 2006-06-21 at 09:05 +0100, Toby Dickenson wrote:
> On Wednesday 21 June 2006 01:26, Eric Mangold wrote:
> 
> > > Since we use wxreactor, we probably can't use win32eventreactor as-is.
> 
> Could you use threadedselectreactor in place of wxreactor today? 

Newer versions of wxreactor are based on threadedselectreactor.





From itamar at itamarst.org  Wed Jun 21 11:23:28 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Jun 2006 11:23:28 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <E1FsvEM-0001Ht-00@wolfwood>
References: <E1FsvEM-0001Ht-00@wolfwood>
Message-ID: <1150903408.5667.2.camel@localhost.localdomain>

On Tue, 2006-06-20 at 23:26 -0600, Stephen Thorne wrote:
> Author: stephen
> Date: Tue Jun 20 23:26:19 2006
> New Revision: 17325
> 
> Modified:
>    trunk/twisted/persisted/sob.py
>    trunk/twisted/test/test_sob.py
> Log:
> merge sob-491, fixes #491

Who reviewed it, and what was #491?




From exarkun at divmod.com  Wed Jun 21 12:15:03 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 12:15:03 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <1150903408.5667.2.camel@localhost.localdomain>
Message-ID: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>

On Wed, 21 Jun 2006 11:23:28 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2006-06-20 at 23:26 -0600, Stephen Thorne wrote:
>> Author: stephen
>> Date: Tue Jun 20 23:26:19 2006
>> New Revision: 17325
>>
>> Modified:
>>    trunk/twisted/persisted/sob.py
>>    trunk/twisted/test/test_sob.py
>> Log:
>> merge sob-491, fixes #491
>
>Who reviewed it, and what was #491?
>

To clarify, all commits to trunk should take on this form:

  <line of 78 or fewer characters summarizing change>

  Author: <names of people who wrote the code>
  Reviewer: <names of people who reviewed the branch>
  Fixes <whatever tickets are being fixed>
  [Re <whatever other tickets are related>]

  <longer description of what changes are taking place>

Jean-Paul




From exarkun at divmod.com  Wed Jun 21 12:19:09 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 12:19:09 -0400
Subject: [Twisted-Python] How to get at applications in a reactor?
In-Reply-To: <4499611D.7030901@lbl.gov>
Message-ID: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>

On Wed, 21 Jun 2006 08:09:17 -0700, "David E. Konerding" <dekonerding at lbl.gov> wrote:
>Hi folks,.
>
>I've set up a convenient telnet manhole into my application.  The 
>application runs a web site serving up Static files
>and some Resources.  What I want to do is telnet into the manhole and get 
>access to the application object.
>Unfortunately, the useful information is not bound to the local scope of the 
>telnet manhole, so
>I have to "stash" the application object when it is instantiated in some 
>global place (such as sys._myapplication).

You can populate the local namespace of the manhole.

twisted.conch.manhole.Manhole takes a namespace argument to its __init__

twisted.manhole.telnet.ShellFactory has a namespace instance attribute
which you can populate after creating one.

The reactor doesn't know anything about sites or applications, so it can't
give you a list of them.  It could give you a list of file descriptors, but
I don't think that would be very useful :)

The gc module is also fairly handy with manhole.  For example,
gc.get_referrers(SomeClass) will give you every instance of the
given class which exists in the process at that time (it will
give you some other stuff too, like a module dictionary, but you
can use isinstance() to filter out just the instances).

Jean-Paul



From corydodt at twistedmatrix.com  Wed Jun 21 12:30:02 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 09:30:02 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
Message-ID: <4499740A.30406@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Oh, for pete's sake.

I'm all for a structured development process, but this is just being pedantic
for the sake of being pedantic.  Please tell me, how does following this rigid
log message structure help speed twisted development?  How does it contribute
to the overall quality of Twisted in any substantive way?

>  <line of 78 or fewer characters summarizing change>

Be serious.  The haranguing about this kind of stuff is getting so tiresome
that I've stopped making any serious attempts to commit to the trunk.  As long
as the necessary information is in there, who the heck cares how it's
formatted?  I see that glyph looked at the bug and pronounced it acceptable.
It was possible to look this up in the bug, which is how I found out, spending
all of 10 seconds on it.

C


Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 11:23:28 -0400, Itamar Shtull-Trauring
> <itamar at itamarst.org> wrote:
>> On Tue, 2006-06-20 at 23:26 -0600, Stephen Thorne wrote:
>>> Author: stephen
>>> Date: Tue Jun 20 23:26:19 2006
>>> New Revision: 17325
>>>
>>> Modified:
>>>    trunk/twisted/persisted/sob.py
>>>    trunk/twisted/test/test_sob.py
>>> Log:
>>> merge sob-491, fixes #491
>>
>> Who reviewed it, and what was #491?
>>
> 
> To clarify, all commits to trunk should take on this form:
> 
>  <line of 78 or fewer characters summarizing change>
> 
>  Author: <names of people who wrote the code>
>  Reviewer: <names of people who reviewed the branch>
>  Fixes <whatever tickets are being fixed>
>  [Re <whatever other tickets are related>]
> 
>  <longer description of what changes are taking place>
> 
> Jean-Paul
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmXQK3A5SrXAiHQcRAjjmAJ96P0FRjVLFiTpE5uWviwx3jrbcMACdE1zB
RJhcljV+ICD9UDvYVuEbNNw=
=M3HX
-----END PGP SIGNATURE-----



From therve at free.fr  Wed Jun 21 12:34:47 2006
From: therve at free.fr (Thomas HERVE)
Date: Wed, 21 Jun 2006 18:34:47 +0200
Subject: [Twisted-Python] Twisters at EuroPython ?
Message-ID: <20060621183447.x3wrj47qv44g8wwg@itchy.wasabout.net>

Hi,

My company should pay me the trip to assist EuroPython at Geneva (which 
is a great thing!). I'd probably be there from the 1st to the 5th of 
July, and was wondering if some folks were motivated by 
discuss/code/whatever, particulary in the pre-conference time. No 
sprint are registered for now in the wiki page : 
http://wiki.python.org/moin/EuroPython2006. I'm interested about nearly 
any topics (code, bug squashing, doc, tutorial, etc).

Among Twisted guys I identify Moshe (I'll definitely go to wuuuuu at 
his talk :)), who didn't say when he'll be there. I suppose there 
should be other mailling-list readers, so please make yourself known!

-- 
Thomas

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.




From mike at mkp.ca  Wed Jun 21 12:38:44 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Wed, 21 Jun 2006 12:38:44 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <4499740A.30406@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com>
Message-ID: <200606211238.45431.mike@mkp.ca>

On Wednesday 21 June 2006 12:30, Cory Dodt wrote:
> As long
> as the necessary information is in there, who the heck cares how it's
> formatted?

Could be wrong, but I think the commit messages need to be machine-readable.  
Hence, strict format guidelines that need to be followed.

Mike.



From corydodt at twistedmatrix.com  Wed Jun 21 12:45:44 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 09:45:44 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <200606211238.45431.mike@mkp.ca>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com> <200606211238.45431.mike@mkp.ca>
Message-ID: <449977B8.6000407@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

If so, this is the first time I've heard about it.  And what are we doing
about the masses of commit messages that aren't?

C


Mike Pelletier wrote:
> On Wednesday 21 June 2006 12:30, Cory Dodt wrote:
>> As long
>> as the necessary information is in there, who the heck cares how it's
>> formatted?
> 
> Could be wrong, but I think the commit messages need to be machine-readable.  
> Hence, strict format guidelines that need to be followed.
> 
> Mike.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmXe43A5SrXAiHQcRAgH7AJ4lzv5V8IsKIxuXsKXF+9O/QUXKogCgg563
9oogCVAHg6fC154dTQ4DL44=
=cpKI
-----END PGP SIGNATURE-----



From mike at mkp.ca  Wed Jun 21 12:41:19 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Wed, 21 Jun 2006 12:41:19 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <449977B8.6000407@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<200606211238.45431.mike@mkp.ca>
	<449977B8.6000407@twistedmatrix.com>
Message-ID: <200606211241.19782.mike@mkp.ca>

On Wednesday 21 June 2006 12:45, Cory Dodt wrote:
> If so, this is the first time I've heard about it.  And what are we doing
> about the masses of commit messages that aren't?

Excuse me, just realised I was thinking of the plone SVN, which scrapes "fixes 
#xxx" an so on.

Mike.



From eprparadocs at gmail.com  Wed Jun 21 12:41:20 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 21 Jun 2006 12:41:20 -0400
Subject: [Twisted-Python] How to get at applications in a reactor?
In-Reply-To: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
References: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
Message-ID: <449976B0.6080404@gmail.com>

Here is some code I use that uses the global() parm in manhole.

from twisted.cred import portal,checkers
from twisted.conch import manhole, manhole_ssh
from twisted.application import internet


def ManholeFactory(namespace,**passwords) :
    realm = manhole_ssh.TerminalRealm()
    def getManhole(_): return manhole.Manhole(namespace)
    realm.chainedProtocolFactory.protocolFactory = getManhole
    p = portal.Portal(realm)

p.registerChecker(checkers.InMemoryUsernamePasswordDatabaseDontUse(**passwords))
    f = manhole_ssh.ConchFactory(p)
    return f


class ManholeService(internet.TCPServer):
    def __init__(self,port,namespace,**passwords):
        internet.TCPServer.__init__(self,port,
			ManholeFactory(namespace,**passwords))

You invoke it like:

    # Maybe start the manhole debugging service
    ManholeSrv = ManholeService(manholePort,
				globals(),admin='acct')
    ManholeSrv.setServiceParent(srv)


This will allow me access to everything in my application.

Chaz


Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 08:09:17 -0700, "David E. Konerding"
> <dekonerding at lbl.gov> wrote:
>> Hi folks,.
>>
>> I've set up a convenient telnet manhole into my application.  The
>> application runs a web site serving up Static files
>> and some Resources.  What I want to do is telnet into the manhole and
>> get access to the application object.
>> Unfortunately, the useful information is not bound to the local scope
>> of the telnet manhole, so
>> I have to "stash" the application object when it is instantiated in
>> some global place (such as sys._myapplication).
> 
> You can populate the local namespace of the manhole.
> 
> twisted.conch.manhole.Manhole takes a namespace argument to its __init__
> 
> twisted.manhole.telnet.ShellFactory has a namespace instance attribute
> which you can populate after creating one.
> 
> The reactor doesn't know anything about sites or applications, so it can't
> give you a list of them.  It could give you a list of file descriptors, but
> I don't think that would be very useful :)
> 
> The gc module is also fairly handy with manhole.  For example,
> gc.get_referrers(SomeClass) will give you every instance of the
> given class which exists in the process at that time (it will
> give you some other stuff too, like a module dictionary, but you
> can use isinstance() to filter out just the instances).
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dekonerding at lbl.gov  Wed Jun 21 12:57:10 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Wed, 21 Jun 2006 09:57:10 -0700
Subject: [Twisted-Python] How to get at applications in a reactor?
In-Reply-To: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
References: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
Message-ID: <44997A66.4000508@lbl.gov>

Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 08:09:17 -0700, "David E. Konerding" 
> <dekonerding at lbl.gov> wrote:
>> Hi folks,.
>>
>> I've set up a convenient telnet manhole into my application.  The 
>> application runs a web site serving up Static files
>> and some Resources.  What I want to do is telnet into the manhole and 
>> get access to the application object.
>> Unfortunately, the useful information is not bound to the local scope 
>> of the telnet manhole, so
>> I have to "stash" the application object when it is instantiated in 
>> some global place (such as sys._myapplication).
>
> You can populate the local namespace of the manhole.
>
> twisted.conch.manhole.Manhole takes a namespace argument to its __init__
>
> twisted.manhole.telnet.ShellFactory has a namespace instance attribute
> which you can populate after creating one.
>
Excellent, thanks!
> The reactor doesn't know anything about sites or applications, so it 
> can't
> give you a list of them.  It could give you a list of file 
> descriptors, but
> I don't think that would be very useful :)
>
Oh, yeah, I expected to get only file descriptors, and hoped that a bit 
of clever gc.get_referrers()
would help me walk back to the Site and Application objects.

Somebody must be keeping references to the Site and Application 
objects-- at least,
the twistd daemon that imported my .tac file, right?

> The gc module is also fairly handy with manhole.  For example,
> gc.get_referrers(SomeClass) will give you every instance of the
> given class which exists in the process at that time (it will
> give you some other stuff too, like a module dictionary, but you
> can use isinstance() to filter out just the instances).
>
Yep, when I played with this *all* I got back were module namespace 
dictionaries.  That's partly why I was so confused...

Dave



From radix at twistedmatrix.com  Wed Jun 21 13:12:10 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jun 2006 13:12:10 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <4499740A.30406@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com>
Message-ID: <60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>

On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> I'm all for a structured development process, but this is just being pedantic
> for the sake of being pedantic.  Please tell me, how does following this rigid
> log message structure help speed twisted development?  How does it contribute
> to the overall quality of Twisted in any substantive way?
>
> >  <line of 78 or fewer characters summarizing change>
>
> Be serious.  The haranguing about this kind of stuff is getting so tiresome
> that I've stopped making any serious attempts to commit to the trunk.  As long
> as the necessary information is in there, who the heck cares how it's
> formatted?  I see that glyph looked at the bug and pronounced it acceptable.
> It was possible to look this up in the bug, which is how I found out, spending
> all of 10 seconds on it.

While I don't care so much  how it's 78 characters, I *do* care about
all the missing information in that commit message, given that I'm one
of the guys who has to read through commit logs while building a NEWS
file for the release. This is a good policy and everyone's been
following it beautifully for a while now.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Wed Jun 21 13:23:38 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 13:23:38 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <200606211241.19782.mike@mkp.ca>
Message-ID: <20060621172338.29014.2084817004.divmod.quotient.5806@ohm>



On Wed, 21 Jun 2006 12:41:19 -0400, Mike Pelletier <mike at mkp.ca> wrote:
>On Wednesday 21 June 2006 12:45, Cory Dodt wrote:
>> If so, this is the first time I've heard about it.  And what are we doing
>> about the masses of commit messages that aren't?

We're posting messages on the mailing list reminding people of the appropriate format, and of other rules related to the development process.  Of course, some people have raised objections to this practice, but I think overall it is a net win that people are finding out.

>Excuse me, just realised I was thinking of the plone SVN, which scrapes "fixes
>#xxx" an so on.

This is a trac feature, and Twisted is using it too.  That's the reason for the required "Fixes #xxx" line.

For an example, see the ticket in question:  http://twistedmatrix.com/trac/ticket/491

Despite lacking the other required bits of the commit message, the merge did include the ticket number.



From corydodt at twistedmatrix.com  Wed Jun 21 14:13:01 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 11:13:01 -0700
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>	<4499740A.30406@twistedmatrix.com>
	<60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>
Message-ID: <44998C2D.2070701@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I don't object to asking for the information to be there.  I don't object to
emailing people to ask them not to leave out important stuff.  I don't even
*necessarily* object to pedantic formatting, although I think it's far more
important that the information be there, not that it be typed in RFC 822*.

I do object to aspects of how this is handled publicly.  For example, why does
the only document I can find on the subject:
<http://twistedmatrix.com/trac/wiki/BranchPolicy> not mention a rigid format
for commit messages?  In fact, it doesn't mention the commit messages at all.
 In fact, the document is labelled "some guy's opinion", although it is in
facted titled "Policy", which is a pretty mixed message.  This page
<http://twistedmatrix.com/trac/wiki/TwistedDevelopment> doesn't mention it
either.  (It also doesn't mention the coding standard, documentation standard,
etc. but that's the subject of another rant.)

If you're going to have an official policy, and you're going to publicly
chastise people on the mailing list, you'd better make sure the whole world
knows what the rules are before you do so.  I do not consider "Re:
[Twisted-commits] r17325 ..." to be the title of an official policy document.

And here's where I'm coming from.  We are creating a higher standard for
committers, I understand that.  We believe we are getting higher quality code
and better turnaround for releases out of it, I understand that.  But the
approach being taken is to just blast people for not doing it right; bad
enough on its own, doubly bad for not having warned them first.  This is
discouraging to those of us who are occasional committers, and it's even more
discouraging to people who love to work in Twisted and hope to get the
"commit" level of trust someday themselves.

I think the correct approach is to discuss the policy on IRC, then to waste NO
TIME posting the contents of the discussion to the Wiki, then to announce the
wiki page on the mailing list.  If anyone objects, and probably very few will,
you might have to revise the policy a bit.  *then* you can ding people, but at
least try to work with them in private first.

C


*(I did know about the trac integration thing, but I consider that to be
almost useless as it's so easy to add this information to the bug manually.)


Christopher Armstrong wrote:
> On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
>> I'm all for a structured development process, but this is just being
>> pedantic
>> for the sake of being pedantic.  Please tell me, how does following
>> this rigid
>> log message structure help speed twisted development?  How does it
>> contribute
>> to the overall quality of Twisted in any substantive way?
>>
>> >  <line of 78 or fewer characters summarizing change>
>>
>> Be serious.  The haranguing about this kind of stuff is getting so
>> tiresome
>> that I've stopped making any serious attempts to commit to the trunk. 
>> As long
>> as the necessary information is in there, who the heck cares how it's
>> formatted?  I see that glyph looked at the bug and pronounced it
>> acceptable.
>> It was possible to look this up in the bug, which is how I found out,
>> spending
>> all of 10 seconds on it.
> 
> While I don't care so much  how it's 78 characters, I *do* care about
> all the missing information in that commit message, given that I'm one
> of the guys who has to read through commit logs while building a NEWS
> file for the release. This is a good policy and everyone's been
> following it beautifully for a while now.
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmYwt3A5SrXAiHQcRAip5AJkB1376KCVWbdyx+ME0JuXqAEPvnQCgouvR
e5N7nCVs6axTM97WR09b4gs=
=s31I
-----END PGP SIGNATURE-----



From radix at twistedmatrix.com  Wed Jun 21 14:15:10 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jun 2006 14:15:10 -0400
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <44998C2D.2070701@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com>
	<60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>
	<44998C2D.2070701@twistedmatrix.com>
Message-ID: <60ed19d40606211115h2c6f647m44b9a7e5c07daa3a@mail.gmail.com>

On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> If you're going to have an official policy, and you're going to publicly
> chastise people on the mailing list, you'd better make sure the whole world
> knows what the rules are before you do so.  I do not consider "Re:
> [Twisted-commits] r17325 ..." to be the title of an official policy document.

"chastise"? You're overreacting, Cory. Nobody has been chastised in
this thread apart from those you chastised for pointing out the commit
format. While you're definitely right about not having much public
documentation about it (please contribute, you are a wiki editor), the
main point of your messages seem to be based on the mistaken
assumption that someone is being *abused*.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Wed Jun 21 14:16:10 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 14:16:10 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <4499740A.30406@twistedmatrix.com>
Message-ID: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>

On Wed, 21 Jun 2006 09:30:02 -0700, Cory Dodt <corydodt at twistedmatrix.com> wrote:

>I'm all for a structured development process, but

I love the way that everyone who objects to a structured development process begins their criticism with "I love a structured development process, but".

>this is just being pedantic for the sake of being pedantic.

Nope, there are good reasons for all of it.  The commit message was incorrectly formatted.  Nobody reverted the commit or anything, and I certainly didn't interpret JP's informative post to be "haranguing" anyone about the process; merely reminding.  "Jerub is such a jackass, he didn't follow the required process for commits, I am reverting everything he's done in the last 3 months" -- now that would be a harangue.

(BTW jerub, you are a jackass: it's rude to the release manager to include helpful information in the commit, and I am already so rude to him that he's going to start killing people if he doesn't get some respect around here :))

Even the 78-characters thing has a purpose.  The commit messages on the IRC channel and commits list are generated from the message.  Some mailer software chokes on >78-character subject lines, and the IRC message will be truncated if it's longer than that, and it will be omitted entirely if the message doesn't appear on the first line.

The format for commit messages, among other things, is documented here:

    http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem

I've written a bit more about the philosophical underpinnings of the constant striving to improve our development process through simple procedures like this one here:

    http://glyf.livejournal.com/58626.html

>Be serious.

We are serious.  What's with the tone of your message?

>It was possible to look this up in the bug, which is how I found out, spending
>all of 10 seconds on it.

It wouldn't have been if he forgot the "fixes" field instead of some other random bits of information from the message.  That field is also required for a reason.

Even if it is literally ten seconds (and I doubt that, it's probably more like 40 seconds, once you've mixed in trac latency) multiply that ten seconds by every change made to trunk in six months, add a few minutes for each relevant message, and that's how long it takes to write the NEWS file.  There's no (reasonable) way to correct commit messages, so it's important to write them correctly the first time.



From corydodt at twistedmatrix.com  Wed Jun 21 14:32:52 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 11:32:52 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>
References: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>
Message-ID: <449990D4.6040902@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'll start by apologizing for the tone of my message, and I am aware that I
was being chastising.  JP is just doing his job.  JP, I have the utmost
respect for you and what you do for Twisted, which is far more than I have
space to enumerate in this email.

There was a reason for my tone.  This has been accumulating for a while, with
lots of these little dings for this or that on this public mailing list.  It
gets exasperating.  People read this list, and they get a feeling for the
attitude of the developers on it when they do.  I don't think "pedantic twits"
is the feeling we want to project, do you?  This is no single person's fault,
it just felt like the right time to say, "Step back.  Think about the
direction this is going.  We don't want to go there."

It changes the tone of a project when Twisted.Quotes stops being updated but
the list of policy updates keeps growing and growing and growing without warning.

My last email contains suggestions of some better ways to handle this.

C


glyph at divmod.com wrote:
> On Wed, 21 Jun 2006 09:30:02 -0700, Cory Dodt
> <corydodt at twistedmatrix.com> wrote:
> 
>> I'm all for a structured development process, but
>> Be serious.
> 
> We are serious.  What's with the tone of your message?
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmZDU3A5SrXAiHQcRAgE3AKCH0EB2aYpjnoGr0AguEK5pq0hq2wCeO8Ed
o5tSAmEt9ePtPDsJuX1JMaw=
=20FS
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Wed Jun 21 14:37:44 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 11:37:44 -0700
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <60ed19d40606211115h2c6f647m44b9a7e5c07daa3a@mail.gmail.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>	<4499740A.30406@twistedmatrix.com>	<60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>	<44998C2D.2070701@twistedmatrix.com>
	<60ed19d40606211115h2c6f647m44b9a7e5c07daa3a@mail.gmail.com>
Message-ID: <449991F8.4000508@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Christopher Armstrong wrote:
> On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
>> If you're going to have an official policy, and you're going to publicly
>> chastise people on the mailing list, you'd better make sure the whole
>> world
>> knows what the rules are before you do so.  I do not consider "Re:
>> [Twisted-commits] r17325 ..." to be the title of an official policy
>> document.
> 
> "chastise"? You're overreacting, Cory. Nobody has been chastised in
> this thread apart from those you chastised for pointing out the commit
> format. While you're definitely right about not having much public
> documentation about it (please contribute, you are a wiki editor)

Usually I object to this kind of policy change; documents of policy should be
written by a person who holds the majority opinion.  In this case, and in
others, I was not around to discuss it when it was decided on.  (I suspect
this was a Divmod policy that has migrated to Twisted; while this is not
always bad, Divmod is not Twisted, and the communication avenues are not the
same, so I don't assume the same rules apply to both.)


C


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmZH43A5SrXAiHQcRAgb4AJ0QYoqfAQyS5SyBULJU63+QeTKtiwCgmplI
0JIeQHwUDXavOeQQXV0udHc=
=Psyl
-----END PGP SIGNATURE-----



From ldanielburr at mac.com  Wed Jun 21 14:49:50 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed, 21 Jun 2006 13:49:50 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <449990D4.6040902@twistedmatrix.com>
References: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>
	<449990D4.6040902@twistedmatrix.com>
Message-ID: <op.tbielczn3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Wed, 21 Jun 2006 13:32:52 -0500, Cory Dodt <corydodt at twistedmatrix.com>  
wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> I'll start by apologizing for the tone of my message, and I am aware  
> that I
> was being chastising.  JP is just doing his job.  JP, I have the utmost
> respect for you and what you do for Twisted, which is far more than I  
> have
> space to enumerate in this email.
>

Hear hear.  I don't think anyone really interpreted you as denying JP his
deserved respect, but it never hurts to remind people that you respect
them.

[snip]

> It changes the tone of a project when Twisted.Quotes stops being updated  
> but
> the list of policy updates keeps growing and growing and growing without  
> warning.
>

Well, to me, when a project moves away from frequent updates to the very
amusing Quotes file, and towards policies and procedures, it means that
the project is maturing and recognizing that a broader audience requires
such steps.  The ecosystem may no longer be as fun for many of the people
who were in at the beginning, but I consider this a change for the better,
whereas you see it as a change for the worse.

Different strokes, I guess.

> My last email contains suggestions of some better ways to handle this.
>

Those suggestions look fine to me, as a person who files a ticket now and
again, and once in a great while posts a patch.  That said, I also feel
that as a very minimal contributor, it doesn't behoove me to take offense
when overworked full-time contributors are terse in their communications.

L. Daniel Burr



From glyph at divmod.com  Wed Jun 21 17:48:30 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 17:48:30 -0400
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <44998C2D.2070701@twistedmatrix.com>
Message-ID: <20060621214830.29014.2145866539.divmod.quotient.6054@ohm>

On Wed, 21 Jun 2006 11:13:01 -0700, Cory Dodt <corydodt at twistedmatrix.com> wrote:

>If you're going to have an official policy, and you're going to publicly
>chastise people on the mailing list, you'd better make sure the whole world
>knows what the rules are before you do so.  I do not consider "Re:
>[Twisted-commits] r17325 ..." to be the title of an official policy document.

I do disagree pretty strongly about this particular case being a "chastisement", but I agree with the general problem, so that's not a productive avenue of discussion. :)

The policy is documented, but in fragments, counting just now across the documents *I* happen to know about, spread across 5 different documents on 3 servers and in at least 4 different document-management systems.  The UQDS page, which is probably the best source of information, is only linked (indirectly) at the bottom of the BBD page, which isn't linked from the front page.

Clearly this is a serious issue.  Since we have a place for issues, I have created one:

    http://twistedmatrix.com/trac/ticket/1840

I've assigned the ticket for you, but I feel I should explain why - it's not because I think that, because you have mentioned a problem, you are now responsible for fixing it.  At the very least, you can't do this on your own, I recognize that to really fix the problem you will need to get participation from the people making (me) and enforcing (jp, apparently) the policies.  I've assigned it to you because you obviously care a good deal about this issue and are more likely than anyone else to agitate for it to get done right now.

I've personally known about this for a while, of course, but I am fairly interrupt-driven on Twisted stuff these days; I'm overtaxed and I can't muster the time and energy to fix an issue until it (for example) becomes an interesting thread on the mailing list that I have to deal with as I'm going through my inbox :).

I do check my trac tickets with some frequency though, and I'm always trying to resolve simple stuff.  If you can think of simple tasks that #1840 depends on please feel free to assign tickets to me.

>Usually I object to this kind of policy change; documents of policy should be
>written by a person who holds the majority opinion.  In this case, and in
>others, I was not around to discuss it when it was decided on.  (I suspect
>this was a Divmod policy that has migrated to Twisted; while this is not
>always bad, Divmod is not Twisted, and the communication avenues are not the
>same, so I don't assume the same rules apply to both.)

I'm sorry you weren't available but we did bring it up on IRC numerous times, it was mentioned in a few threads on this list before indirectly, and there was an "official" thread on the mailing list for a while dedicated to this to avoid excluding non-IRC contributors.  I think this particular exclusion may have had more to do with your having less free time available when we were talking about it.

I am, however, sensitive to the fact that it is damn hard to find maintainers for something like Twisted's windows installer (especially those that are interested in adhering to the rather high standards for quality we have been requiring), so we need to communicate requirements and such more clearly and avoid pissing you off any more than necessary. ;-)

I suspect that Twisted.Quotes will be getting more frequent updates once all of our IRC bandwidth is no longer taken up answering undocumented FAQs about unit tests, coding style and commit messages.



From stephen at thorne.id.au  Wed Jun 21 18:58:10 2006
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 22 Jun 2006 08:58:10 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
Message-ID: <20060621225810.29014.262339943.divmod.quotient.6116@ohm>

On Wed, 21 Jun 2006 12:15:03 -0400, Jean-Paul Calderone <exarkun at divmod.com> 
>To clarify, all commits to trunk should take on this form:
>
>  <line of 78 or fewer characters summarizing change>
>
>  Author: <names of people who wrote the code>
>  Reviewer: <names of people who reviewed the branch>
>  Fixes <whatever tickets are being fixed>
>  [Re <whatever other tickets are related>]
>
>  <longer description of what changes are taking place>

Thanks for that, my commits to trunk will take this form from now on.

I had managed to avoid finding and reading http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem - I've read found it now, and hopefully I will make fewer process errors.

Stephen.



From jml at mumak.net  Wed Jun 21 20:21:17 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 22 Jun 2006 10:21:17 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621225810.29014.262339943.divmod.quotient.6116@ohm>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<20060621225810.29014.262339943.divmod.quotient.6116@ohm>
Message-ID: <d06a5cd30606211721j2c02e838yc17ed0402000d7d3@mail.gmail.com>

On 6/22/06, Stephen Thorne <stephen at thorne.id.au> wrote:
>
> I had managed to avoid finding and reading http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem

Assisted, no doubt, by the fact that there is no mention of it on the
Twisted website.  Although see #1222, #1697.

jml



From stephen at thorne.id.au  Wed Jun 21 20:53:15 2006
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 22 Jun 2006 10:53:15 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <d06a5cd30606211721j2c02e838yc17ed0402000d7d3@mail.gmail.com>
Message-ID: <20060622005315.29014.176135884.divmod.quotient.6222@ohm>



On Thu, 22 Jun 2006 10:21:17 +1000, Jonathan Lange <jml at mumak.net> wrote:
>On 6/22/06, Stephen Thorne <stephen at thorne.id.au> wrote:
>>
>>I had managed to avoid finding and reading 
>>http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem
>
>Assisted, no doubt, by the fact that there is no mention of it on the
>Twisted website.  Although see #1222, #1697.

There's no mention, but it is linked.

http://twistedmatrix.com/trac/wiki/TwistedDevelopment
links
http://divmod.org/trac/wiki/BranchBasedDevelopment
links
http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem

Stephen.



From exarkun at divmod.com  Wed Jun 21 21:20:39 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 21:20:39 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <20060621225810.29014.262339943.divmod.quotient.6116@ohm>
Message-ID: <20060622012039.29014.444842153.divmod.quotient.6245@ohm>

On Thu, 22 Jun 2006 08:58:10 +1000, Stephen Thorne <stephen at thorne.id.au> wrote:
>On Wed, 21 Jun 2006 12:15:03 -0400, Jean-Paul Calderone <exarkun at divmod.com>
>>To clarify, all commits to trunk should take on this form:
>>
>>  <line of 78 or fewer characters summarizing change>
>>
>>  Author: <names of people who wrote the code>
>>  Reviewer: <names of people who reviewed the branch>
>>  Fixes <whatever tickets are being fixed>
>>  [Re <whatever other tickets are related>]
>>
>>  <longer description of what changes are taking place>
>
>Thanks for that, my commits to trunk will take this form from now on.
>
>I had managed to avoid finding and reading 
>http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem - I've read 
>found it now, and hopefully I will make fewer process errors.

Thanks :)

>
>Stephen.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From andrew-twisted at puzzling.org  Wed Jun 21 22:31:59 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 22 Jun 2006 12:31:59 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
References: <1150903408.5667.2.camel@localhost.localdomain>
	<20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
Message-ID: <20060622023159.GC5774@steerpike.home.puzzling.org>

On Wed, Jun 21, 2006 at 12:15:03PM -0400, Jean-Paul Calderone wrote:
[...]
> 
> To clarify, all commits to trunk should take on this form:

Here's an idea: can we configure SVN to enforce this?

-Andrew.




From glyph at divmod.com  Wed Jun 21 23:00:05 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 23:00:05 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <20060622023159.GC5774@steerpike.home.puzzling.org>
Message-ID: <20060622030005.29014.198663675.divmod.quotient.6335@ohm>



On Thu, 22 Jun 2006 12:31:59 +1000, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Wed, Jun 21, 2006 at 12:15:03PM -0400, Jean-Paul Calderone wrote:
>[...]
>>
>> To clarify, all commits to trunk should take on this form:
>
>Here's an idea: can we configure SVN to enforce this?

I've received this suggestion a few times privately and I'm still mulling it over.  On the face of it, it's a good idea, buuuuuut:

 1. I've had a series of disastrous experiences with commit hooks rejecting changes.  The guy who wrote the commit hook goes on vacation for 3 days, there's a bug in it, and nobody can figure out how to merge code or turn it off for 8 hours; meanwhile the guy trying to commit in bangalore goes to sleep, then doesn't show up again for a week, and the changes are lost.  (Having changes on a branch prior to trunk would alleviate this somewhat, I think, but it would be just as much of a pain to be blocked on some stupid merge-script bug.)
 2. The most important thing, really, is a sufficiently descriptive explanation for the change.  Any programmatic attempt to enforce this is sure to drive artificial gaming of the metric; i.e. if we require 3 sentences, "fixed random junk in foo module" will become "Fixed random. Junk in. Foo module."
 3. 99% of the time (e.g. all "normal" commits) should be in this format; however, the underlying tools, to be honest, are still kind of primitive, and we still have to leave a little wiggle room to deal with their foibles.  At least it isn't the masochistic chewing-gum-and-duct-tape perpetual catastrophe of CVS, but SVN still does annoying things like screwing up merges.  If there is a commit with a nice long description and a 'fixes' and everything, which needs to be reverted and reapplied for some dumb technical reason, I'd like to see

  r1234: "author: foo; reviewer: bar; wonderful wonderful description ..."
  r1235: "crap, reverting r1234 because of svn bug #9813741"
  r1236: "reapplying r1234 merged in utterly retarded way to work around svn bug #9813741"

not the entire description of r1234 repeated twice -- or, more realistically, three times, since the revert in the middle would also have to have a conformant commit message.
 4. precommit hooks keep the SVN SSH transport alive to report errors to the client for the duration of the hook.  When I last investigated (although this was in an SVN pre-release, a good 2+ years ago) if the connection drops while you're validating the commit message, it rejects the commit.  This would be especially annoying if you were committing an important fix over some intermittent link, like a GPRS modem.  That's not a common occurrance, but then again, if something were important enough that someone needed to commit code on a *GPRS modem* that is probably the time they would _least_ like something technical to go wrong with the process.


This is basically just the same reason that, despite our hardcore attitude towards tests, we don't have buildbot automatically reject or revert commits based on automated test failures.  The tools (in that case, buildbot, trial, and our test suite) are too primitive to rely on without some level of human judgement.  We've been moving to a stricter model so that the human judgements can be as mechanical and apolitical as possible (e.g. "was this a test failure due to too much load on the buildbot / known intermittent failure", not "is this an important enough area of code to worry about test failures in") but we still need it there.

I am eager to be corrected however; the more work our tools can reliably do for us the better.  Has anybody had a good experience with automatically-rejected commits in another reasonably sized project before?




From jml at mumak.net  Wed Jun 21 23:07:11 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 22 Jun 2006 13:07:11 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060622030005.29014.198663675.divmod.quotient.6335@ohm>
References: <20060622023159.GC5774@steerpike.home.puzzling.org>
	<20060622030005.29014.198663675.divmod.quotient.6335@ohm>
Message-ID: <d06a5cd30606212007u43f28ca9lbac235fcc93d4b91@mail.gmail.com>

On 6/22/06, glyph at divmod.com <glyph at divmod.com> wrote:
> This is basically just the same reason that, despite our hardcore attitude towards tests, we don't haThe tools (in that case, buildbot, trial, and our test suite) are too primitive to rely on without some level of human judgement.

Yeah?! Well your face is primitive!












:)
jml



From andrew-twisted at puzzling.org  Thu Jun 22 00:57:39 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 22 Jun 2006 14:57:39 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060622030005.29014.198663675.divmod.quotient.6335@ohm>
References: <20060622023159.GC5774@steerpike.home.puzzling.org>
	<20060622030005.29014.198663675.divmod.quotient.6335@ohm>
Message-ID: <20060622045739.GD5774@steerpike.home.puzzling.org>

On Wed, Jun 21, 2006 at 11:00:05PM -0400, glyph at divmod.com wrote:
[...]
> 
> I've received this suggestion a few times privately and I'm still mulling 
> it over.  On the face of it, it's a good idea, buuuuuut:
> 
> 1. I've had a series of disastrous experiences with commit hooks rejecting 
> changes.  The guy who wrote the commit hook goes on vacation for 3 days, 
> there's a bug in it, and nobody can figure out how to merge code or turn it 
> off for 8 hours; meanwhile the guy trying to commit in bangalore goes to 
> sleep, then doesn't show up again for a week, and the changes are lost.  
> (Having changes on a branch prior to trunk would alleviate this somewhat, I 
> think, but it would be just as much of a pain to be blocked on some stupid 
> merge-script bug.)

Two things make this a non-issue, hopefully:
  - a script that checks that a commit message matches a regex is pretty damn
    simple.
  - in case of emergency, it shouldn't be hard to just disable the offending
    commit-hook until such time as it can be fixed properly.

> 2. The most important thing, really, is a sufficiently descriptive 
> explanation for the change.  Any programmatic attempt to enforce this is 
> sure to drive artificial gaming of the metric; i.e. if we require 3 
> sentences, "fixed random junk in foo module" will become "Fixed random. 
> Junk in. Foo module."

Well, I was really only suggesting that the presence of mandatory metadata is
checked for, not that we write an AI to check that the text of the messages make
sense :)

> 3. 99% of the time (e.g. all "normal" commits) should be in this format; 
> however, the underlying tools, to be honest, are still kind of primitive, 
> and we still have to leave a little wiggle room to deal with their foibles. 
> At least it isn't the masochistic chewing-gum-and-duct-tape perpetual 
> catastrophe of CVS, but SVN still does annoying things like screwing up 
> merges.  If there is a commit with a nice long description and a 'fixes' 
> and everything, which needs to be reverted and reapplied for some dumb 
> technical reason, I'd like to see
> 
>  r1234: "author: foo; reviewer: bar; wonderful wonderful description ..."
>  r1235: "crap, reverting r1234 because of svn bug #9813741"
>  r1236: "reapplying r1234 merged in utterly retarded way to work around svn 
>  bug #9813741"
> 
> not the entire description of r1234 repeated twice -- or, more 
> realistically, three times, since the revert in the middle would also have 
> to have a conformant commit message.

Good point.  So there either needs to be a way to explicitly flag that this
message is ok despite not being in the usual format, or we need to anticipate
all possible forms of exceptional commits.  Requiring e.g. "[override=reason]"
in the text of the commit message somewhere could do this.  This of course
complicates the checker slightly, which relates to point 1, but not impossibly
so.

> 4. precommit hooks keep the SVN SSH transport alive to report errors to the 
> client for the duration of the hook.  When I last investigated (although 
> this was in an SVN pre-release, a good 2+ years ago) if the connection 
> drops while you're validating the commit message, it rejects the commit.  
> This would be especially annoying if you were committing an important fix 
> over some intermittent link, like a GPRS modem.  That's not a common 
> occurrance, but then again, if something were important enough that someone 
> needed to commit code on a *GPRS modem* that is probably the time they 
> would _least_ like something technical to go wrong with the process.

The time it takes to validate a commit message against a regex should be
negligible.  I doubt this will be a real problem.

> This is basically just the same reason that, despite our hardcore attitude 
> towards tests, we don't have buildbot automatically reject or revert 
> commits based on automated test failures.  The tools (in that case, 
> buildbot, trial, and our test suite) are too primitive to rely on without 
> some level of human judgement.  We've been moving to a stricter model so 
> that the human judgements can be as mechanical and apolitical as possible 
> (e.g. "was this a test failure due to too much load on the buildbot / known 
> intermittent failure", not "is this an important enough area of code to 
> worry about test failures in") but we still need it there.

There are important differences between a commit message checker and our test
suite.  Our test suite gives way too many false positives, and does so
unpredictably.  Our test suite takes many minutes to run, at best.  Our test
suite should be run on multiple platforms for full effectiveness.  Our test
suite is extremely complex.  A simple "does the commit message match this regex"
check has none of these problems, assuming the regex isn't insane.

> I am eager to be corrected however; the more work our tools can reliably do 
> for us the better.  Has anybody had a good experience with 
> automatically-rejected commits in another reasonably sized project before?

Yes, the Launchpad development process automatically rejects commits, both for
malformed commit messages[1] and for test failures.  It's generally worked quite
well.  The test suite takes similar lengths of time to Twisted's to run (but
without the portability concerns, thankfully), but we submit requests to merge
to trunk asynchronously (via gpg-signed email), so this isn't a killer for poor
connections.

We have occasionally had problems where a system upgrade or other supposedly
unrelated change causes the test suite on trunk to start failing, effectively
blocking all merges, requiring admin intervention.  Old processes from previous
test runs can also be an issue.  It's generally worked very well for us, though.
And it means we are forced to have zero tolerance of failing tests.  Developers
get unhappy if there's an intermittently failing test that's blocking their
merges :)

We use PQM ("Patch Queue Manager", bzr branch available here:
http://people.ubuntu.com/~robertc/pqm/trunk/, bugs etc here:
https://launchpad.net/products/pqm) to do this.

-Andrew.

[1] We require either "[trivial]", "[r=reviewer]", or "[rs=approver]" to be in the
    message.  "r=" means "reviewed and approved by" and "rs=" means "rubber
    stamped by", i.e. not closely reviewed by the person (generally a manager)
    approving it anyway is happy with it being merged despite that and is
    responsible for the result.  "trivial" should be obvious ;).  Regardless of
    commit message, the full test suite is always run.




From joe at neosource.com.au  Fri Jun 23 11:12:57 2006
From: joe at neosource.com.au (Joe Cotroneo)
Date: Sat, 24 Jun 2006 01:12:57 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
Message-ID: <9ccaa767ba98be1f1762edc11a65201b@web>

Hi there,

I just downloaded the twisted words package, and tried the ircLogBot.py sample.

It came up with an error on my Win32 box, but worked fine on my linux box.

The error on win32 was due to the following line 512 in twisted/internet/tcp.py:

r, w, e = select.select([], [], [self.fileno()], 0.0)

The select module on Win32 doesn't accept empty read/write handles, so it generated an 'invalid argument' exception.

I changed line 512 to the following, and the sample now works on win32.

r, w, e = select.select([self.fileno()], [self.fileno()], [self.fileno()], 0.0)

P.S: I used Twisted 2.4.0 and twisted words 0.3.0

Hope you find my report useful, even if win32 bugs aren't a priority ;)

Cheers,

Joe








From exarkun at divmod.com  Fri Jun 23 11:32:53 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 Jun 2006 11:32:53 -0400
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
In-Reply-To: <9ccaa767ba98be1f1762edc11a65201b@web>
Message-ID: <20060623153253.29014.1173202936.divmod.quotient.8001@ohm>

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au> wrote:
>Hi there,
>
>I just downloaded the twisted words package, and tried the ircLogBot.py sample.
>
>It came up with an error on my Win32 box, but worked fine on my linux box.
>
>The error on win32 was due to the following line 512 in twisted/internet/tcp.py:
>
>r, w, e = select.select([], [], [self.fileno()], 0.0)
>
>The select module on Win32 doesn't accept empty read/write handles, so it generated an 'invalid argument' exception.
>
>I changed line 512 to the following, and the sample now works on win32.
>
>r, w, e = select.select([self.fileno()], [self.fileno()], [self.fileno()], 0.0)
>
>P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
>Hope you find my report useful, even if win32 bugs aren't a priority ;)

What version of Python and Windows?  I wouldn't expect any Twisted
application to run on a machine where that line unconditionally
raises an exception, but clearly some does.  Does anything else work
for you?

Jean-Paul



From manlio_perillo at libero.it  Fri Jun 23 11:35:55 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 23 Jun 2006 13:35:55 -0200
Subject: [Twisted-Python] Iron Python support
Message-ID: <449C0A5B.60600@libero.it>

Just to know: does Twisted works with Iron Python?



Thanks and regards  Manlio Perillo



From itamar at itamarst.org  Fri Jun 23 11:37:45 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Jun 2006 11:37:45 -0400
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
In-Reply-To: <9ccaa767ba98be1f1762edc11a65201b@web>
References: <9ccaa767ba98be1f1762edc11a65201b@web>
Message-ID: <1151077065.5623.0.camel@localhost.localdomain>

On Sat, 2006-06-24 at 01:12 +1000, Joe Cotroneo wrote:
> Hi there,
> 
> I just downloaded the twisted words package, and tried the ircLogBot.py sample.
> 
> It came up with an error on my Win32 box, but worked fine on my linux box.
...
> Hope you find my report useful, even if win32 bugs aren't a priority ;)

Thanks for the bug report; could you add to our bug tracker please?




From exarkun at divmod.com  Fri Jun 23 11:51:13 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 Jun 2006 11:51:13 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <449C0A5B.60600@libero.it>
Message-ID: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>

On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Just to know: does Twisted works with Iron Python?
>

See http://twistedmatrix.com/buildbot/

Jean-Paul



From mike at mkp.ca  Fri Jun 23 12:14:14 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Fri, 23 Jun 2006 12:14:14 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
Message-ID: <200606231214.14695.mike@mkp.ca>

On Friday 23 June 2006 11:51, Jean-Paul Calderone wrote:
> On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo 
<manlio_perillo at libero.it> wrote:
> >Just to know: does Twisted works with Iron Python?
>
> See http://twistedmatrix.com/buildbot/

The question piqued my curiosity, but the answer is unsatisfying.  I don't 
find any of the strings "iron", "clr", or "net" on that page.  Could you 
assist in interpreting buildbot's output WRT the OP?

Thx,
Mike.



From radix at twistedmatrix.com  Fri Jun 23 12:20:13 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 23 Jun 2006 12:20:13 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <200606231214.14695.mike@mkp.ca>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
	<200606231214.14695.mike@mkp.ca>
Message-ID: <60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>

On 6/23/06, Mike Pelletier <mike at mkp.ca> wrote:
> On Friday 23 June 2006 11:51, Jean-Paul Calderone wrote:
> > On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
> > >Just to know: does Twisted works with Iron Python?
> >
> > See http://twistedmatrix.com/buildbot/
>
> The question piqued my curiosity, but the answer is unsatisfying.  I don't
> find any of the strings "iron", "clr", or "net" on that page.  Could you
> assist in interpreting buildbot's output WRT the OP?

What Jp meant to say was "See <url> for the list of support platforms.
As you can see, there is no buildbot running for ironpython, so
Twisted cannot have support for it. However, if you would like to move
things in the direction of Ironpython support, the donation of an
Ironpython buildslave would certainly be appreciated."


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From ldanielburr at mac.com  Fri Jun 23 12:40:09 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 23 Jun 2006 11:40:09 -0500
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <200606231214.14695.mike@mkp.ca>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
	<200606231214.14695.mike@mkp.ca>
Message-ID: <op.tblxw70h3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Fri, 23 Jun 2006 11:14:14 -0500, Mike Pelletier <mike at mkp.ca> wrote:

> On Friday 23 June 2006 11:51, Jean-Paul Calderone wrote:
>> On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> >Just to know: does Twisted works with Iron Python?
>>
>> See http://twistedmatrix.com/buildbot/
>
> The question piqued my curiosity, but the answer is unsatisfying.  I  
> don't
> find any of the strings "iron", "clr", or "net" on that page.  Could you
> assist in interpreting buildbot's output WRT the OP?

I believe the answer is "if you don't see it on the buildbot, then the
platform in question is not known to work with twisted".

Anyway, no, twisted does not run on FePy, for the same reasons that it
does not run on jython: None of the core devs have the time or incentive
to make it run, and nobody else has stepped up to the plate.

Hope this helps,

L. Daniel Burr



From manlio_perillo at libero.it  Fri Jun 23 12:46:28 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 23 Jun 2006 14:46:28 -0200
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>	<200606231214.14695.mike@mkp.ca>
	<60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>
Message-ID: <449C1AE4.4070802@libero.it>

Christopher Armstrong ha scritto:
> [...]
> 
> What Jp meant to say was "See <url> for the list of support platforms.
> As you can see, there is no buildbot running for ironpython, so
> Twisted cannot have support for it. 

I also see no Jython support.
What about it?


> However, if you would like to move
> things in the direction of Ironpython support, the donation of an
> Ironpython buildslave would certainly be appreciated."
> 

Do you use one dedicated server for each build slaves?
If you just need a computer with a buildbot I can offer (spare) access
to my PC.

Usually my PC is on from
10:00 to 12:30 and 17:00 to 23:00
(local time in Italy).


Do you use builbot from http://buildbot.sourceforge.net/?
I just downloaded the version 0.7.3.



Regards  Manlio Perillo







From itamar at itamarst.org  Fri Jun 23 13:28:42 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Jun 2006 13:28:42 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <449C0A5B.60600@libero.it>
References: <449C0A5B.60600@libero.it>
Message-ID: <1151083723.5623.7.camel@localhost.localdomain>

On Fri, 2006-06-23 at 13:35 -0200, Manlio Perillo wrote:
> Just to know: does Twisted works with Iron Python?

If IronPython provides select, socket and errno modules it might work.
Which is to say "probably not".

It could be made to work even if not, but that would probably require
writing a custom reactor.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From manlio_perillo at libero.it  Fri Jun 23 14:36:28 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 23 Jun 2006 16:36:28 -0200
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <1151083723.5623.7.camel@localhost.localdomain>
References: <449C0A5B.60600@libero.it>
	<1151083723.5623.7.camel@localhost.localdomain>
Message-ID: <449C34AC.2040206@libero.it>

Itamar Shtull-Trauring ha scritto:
> On Fri, 2006-06-23 at 13:35 -0200, Manlio Perillo wrote:
>> Just to know: does Twisted works with Iron Python?
> 
> If IronPython provides select, socket and errno modules it might work.

Here is a list of supplies modules:

_random.cs            codecs.cs                gc.cs
operator.cs
_sre.cs               collections.cs           imp.cs             re.cs
_weakref.cs           cStringIO.cs             IterTools.cs       struct.cs
binascii.cs           datetime.cs              marshal.cs         thread.cs
Builtin.cs            errno.cs                 math.cs            time.cs
Builtin.Generated.cs  Exceptions.cs            math.Generated.cs
clr.cs                Exceptions.Generated.cs  nt.cs


There is a sys module (not listed here), but no os or socket.
Not very useful...



Regards  Manlio Perillo



From joe at neosource.com.au  Fri Jun 23 21:18:34 2006
From: joe at neosource.com.au (Joe Cotroneo)
Date: Sat, 24 Jun 2006 11:18:34 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
Message-ID: <450119024227b585397b0d715c25c9c4@web>

Hi Jean-Paul,

I'm running Python 2.4.1 and Windows XP SP2.

I hadn't really tried any twisted apps on my Windows PC beforehand.

Joe
----------------------------------------
Date: Fri, 23 Jun 2006 11:32:53 -0400
From: Jean-Paul Calderone <exarkun at divmod.com>
Subject: Re: [Twisted-Python] Win32 fix for twisted/internet/tcp.py

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au> wrote:
>Hi there,
>
>I just downloaded the twisted words package, and tried the ircLogBot.py sample.
>
>It came up with an error on my Win32 box, but worked fine on my linux box.
>
>The error on win32 was due to the following line 512 in twisted/internet/tcp.py:
>
>r, w, e = select.select([], [], [self.fileno()], 0.0)
>
>The select module on Win32 doesn't accept empty read/write handles, so it generated an 'invalid argument' exception.
>
>I changed line 512 to the following, and the sample now works on win32.
>
>r, w, e = select.select([self.fileno()], [self.fileno()], [self.fileno()], 0.0)
>
>P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
>Hope you find my report useful, even if win32 bugs aren't a priority ;)

What version of Python and Windows?  I wouldn't expect any Twisted
application to run on a machine where that line unconditionally
raises an exception, but clearly some does.  Does anything else work
for you?

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From teratorn at twistedmatrix.com  Fri Jun 23 23:45:35 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 24 Jun 2006 13:45:35 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
In-Reply-To: <9ccaa767ba98be1f1762edc11a65201b@web>
References: <9ccaa767ba98be1f1762edc11a65201b@web>
Message-ID: <op.tbmsp9eny3d107@localhost.localdomain>

Hi Joe,

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au>  
wrote:

> Hi there,
>
> I just downloaded the twisted words package, and tried the ircLogBot.py  
> sample.
>
> It came up with an error on my Win32 box, but worked fine on my linux  
> box.
>
> The error on win32 was due to the following line 512 in  
> twisted/internet/tcp.py:
>
> r, w, e = select.select([], [], [self.fileno()], 0.0)
>
> The select module on Win32 doesn't accept empty read/write handles, so  
> it generated an 'invalid argument' exception.
>
> I changed line 512 to the following, and the sample now works on win32.
>
> r, w, e = select.select([self.fileno()], [self.fileno()],  
> [self.fileno()], 0.0)
>
> P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
> Hope you find my report useful, even if win32 bugs aren't a priority ;)

I don't want people to get the wrong impression: Win32 *IS* a fully  
supported platform. Our support could be better than it is, but fixing  
win32 bugs in the existing code is just as much of a priority as any other  
platform. Commits that breaks tests on win32 are reverted almost  
immediately. The only issue is that there are simply fewer developers who  
have the desire, expertise, or dev evironments to work on Windows.

> Cheers,
>
> Joe

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows



From joe at neosource.com.au  Sat Jun 24 00:42:43 2006
From: joe at neosource.com.au (Joe Cotroneo)
Date: Sat, 24 Jun 2006 14:42:43 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
Message-ID: <930efa53df0a997dbea52df0e899901f@web>

Hi Eric,

Sorry I didn't mean to downplay your level of Windows support. My comment was in jest. The guys on the #twisted channel were helpful, though as you said they had more of a linux background.

Joe

----------------------------------------
Date: Sat, 24 Jun 2006 13:45:35 +1000
From: "Eric Mangold" <teratorn at twistedmatrix.com>
Subject: Re: [Twisted-Python] Win32 fix for twisted/internet/tcp.py

Hi Joe,

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au>  
wrote:

> Hi there,
>
> I just downloaded the twisted words package, and tried the ircLogBot.py  
> sample.
>
> It came up with an error on my Win32 box, but worked fine on my linux  
> box.
>
> The error on win32 was due to the following line 512 in  
> twisted/internet/tcp.py:
>
> r, w, e = select.select([], [], [self.fileno()], 0.0)
>
> The select module on Win32 doesn't accept empty read/write handles, so  
> it generated an 'invalid argument' exception.
>
> I changed line 512 to the following, and the sample now works on win32.
>
> r, w, e = select.select([self.fileno()], [self.fileno()],  
> [self.fileno()], 0.0)
>
> P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
> Hope you find my report useful, even if win32 bugs aren't a priority ;)

I don't want people to get the wrong impression: Win32 *IS* a fully  
supported platform. Our support could be better than it is, but fixing  
win32 bugs in the existing code is just as much of a priority as any other  
platform. Commits that breaks tests on win32 are reverted almost  
immediately. The only issue is that there are simply fewer developers who  
have the desire, expertise, or dev evironments to work on Windows.

> Cheers,
>
> Joe

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows





From robert at gravina.com  Sat Jun 24 13:57:56 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 02:57:56 +0900
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
Message-ID: <B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>

This is an old thread, but I am finally tackling the round trip  
editing problem and unfortunately getting nowhere. Basically, I want  
to be able to create some object on one machine, then send it off to  
another (who edits some of the attributes) then when the other  
machine calls a method on the original machine and passes it the  
updated object, I can identify it simply by comparing for quality.  
Think of your basic client/server database application.

The Twisted howtos make the claim that " Copyable objects return  
unchanged from a round trip", and can be compared for quality like  
(obj == obj) but in all my attempts I can get this to work (they are  
never equal). Does someone know of some sample code where this is  
done successfully? It is done successfully with pb.Referenceables in  
the howtos (look for the pb2client.py and pb2server.py listings).
http://twistedmatrix.com/projects/core/documentation/howto/pb-usage.html

Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to  
identify objects that come back to me but the _p_oid is  None even  
after a transaction.commit() (since the object hasn't been persisted  
yet probably).

I could also create my own ID attribute and attempt to generate a  
random ID and compare that, but this is most definately a hack.

I am really having trouble progressing with my application because of  
this problem. I'd really appreciate some insight on how to go about  
solving this. Admittedly I'm not all that experienced with Twisted,  
but I thought this kind of thing was supposed to be straightforward.  
What am I doing wrong?

Thanks,

Robert

On 2006/05/07, at 18:55, Micky Latowicki wrote:

> It's possible to make each element in the set being edited a
> cacheable. If you think that would introduce too much overhead, then
> you can add a method to the "address book" object which updates one of
> the entries in this address book, and uses an id to identify the entry
> within the address book. So the address book is the dict. That's what
> I did in a similar case. I'm no expert though.
>
> HTH
>
> Micky
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From ml.flex at gmail.com  Sat Jun 24 18:13:26 2006
From: ml.flex at gmail.com (Micky Latowicki)
Date: Sun, 25 Jun 2006 00:13:26 +0200
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
Message-ID: <d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>

Only thing I can think of is generate your own id. Doesn't have to be
random, you can simply increament a counter every time you create a new
instance. If you're worried about the id growing too long you can search the
database for unused ids that are lower than the current value of the
counter.

Perhaps somebody else has a better idea.

On 24/06/06, Robert Gravina <robert at gravina.com> wrote:
>
> This is an old thread, but I am finally tackling the round trip
> editing problem and unfortunately getting nowhere. Basically, I want
> to be able to create some object on one machine, then send it off to
> another (who edits some of the attributes) then when the other
> machine calls a method on the original machine and passes it the
> updated object, I can identify it simply by comparing for quality.
> Think of your basic client/server database application.
>
> The Twisted howtos make the claim that " Copyable objects return
> unchanged from a round trip", and can be compared for quality like
> (obj == obj) but in all my attempts I can get this to work (they are
> never equal). Does someone know of some sample code where this is
> done successfully? It is done successfully with pb.Referenceables in
> the howtos (look for the pb2client.py and pb2server.py listings).
> http://twistedmatrix.com/projects/core/documentation/howto/pb-usage.html
>
> Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to
> identify objects that come back to me but the _p_oid is  None even
> after a transaction.commit() (since the object hasn't been persisted
> yet probably).
>
> I could also create my own ID attribute and attempt to generate a
> random ID and compare that, but this is most definately a hack.
>
> I am really having trouble progressing with my application because of
> this problem. I'd really appreciate some insight on how to go about
> solving this. Admittedly I'm not all that experienced with Twisted,
> but I thought this kind of thing was supposed to be straightforward.
> What am I doing wrong?
>
> Thanks,
>
> Robert
>
> On 2006/05/07, at 18:55, Micky Latowicki wrote:
>
> > It's possible to make each element in the set being edited a
> > cacheable. If you think that would introduce too much overhead, then
> > you can add a method to the "address book" object which updates one of
> > the entries in this address book, and uses an id to identify the entry
> > within the address book. So the address book is the dict. That's what
> > I did in a similar case. I'm no expert though.
> >
> > HTH
> >
> > Micky
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060625/15f19b64/attachment.htm 

From robert at gravina.com  Sat Jun 24 20:18:43 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 09:18:43 +0900
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
Message-ID: <6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>

> Only thing I can think of is generate your own id. Doesn't have to  
> be random, you can simply increament a counter every time you  
> create a new instance. If you're worried about the id growing too  
> long you can search the database for unused ids that are lower than  
> the current value of the counter.
>

While I appreciate your suggestions, given that PB is really quite  
powerful and pb.Referenceables can be identified after a round trip,  
I figure there must be a better way of doing this. I don't want to  
use pb.Referenceables because I need to access the objects attributes  
and call methods on the remote end. I'm not 100% sure that your  
method is bug-free, although I haven't had a good think about it.  
Thanks anyhow.

> Perhaps somebody else has a better idea.
>

I really hope so. I'm stuck for ideas, short of turning everything  
into pb.Cacheables.

Robert

> On 24/06/06, Robert Gravina <robert at gravina.com> wrote: This is an  
> old thread, but I am finally tackling the round trip
> editing problem and unfortunately getting nowhere. Basically, I want
> to be able to create some object on one machine, then send it off to
> another (who edits some of the attributes) then when the other
> machine calls a method on the original machine and passes it the
> updated object, I can identify it simply by comparing for quality.
> Think of your basic client/server database application.
>
> The Twisted howtos make the claim that " Copyable objects return
> unchanged from a round trip", and can be compared for quality like
> (obj == obj) but in all my attempts I can get this to work (they are
> never equal). Does someone know of some sample code where this is
> done successfully? It is done successfully with pb.Referenceables in
> the howtos (look for the pb2client.py and pb2server.py listings).
> http://twistedmatrix.com/projects/core/documentation/howto/pb- 
> usage.html
>
> Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to
> identify objects that come back to me but the _p_oid is  None even
> after a transaction.commit() (since the object hasn't been persisted
> yet probably).
>
> I could also create my own ID attribute and attempt to generate a
> random ID and compare that, but this is most definately a hack.
>
> I am really having trouble progressing with my application because of
> this problem. I'd really appreciate some insight on how to go about
> solving this. Admittedly I'm not all that experienced with Twisted,
> but I thought this kind of thing was supposed to be straightforward.
> What am I doing wrong?
>
> Thanks,
>
> Robert
>
> On 2006/05/07, at 18:55, Micky Latowicki wrote:
>
> > It's possible to make each element in the set being edited a
> > cacheable. If you think that would introduce too much overhead, then
> > you can add a method to the "address book" object which updates  
> one of
> > the entries in this address book, and uses an id to identify the  
> entry
> > within the address book. So the address book is the dict. That's  
> what
> > I did in a similar case. I'm no expert though.
> >
> > HTH
> >
> > Micky
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From me at kbrooks.ath.cx  Sat Jun 24 17:04:13 2006
From: me at kbrooks.ath.cx (The Wiz)
Date: Sat, 24 Jun 2006 17:04:13 -0400
Subject: [Twisted-Python] Any Twisted tutorial?
Message-ID: <449DA8CD.4060000@kbrooks.ath.cx>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Is there a Twisted tutorial?

Also, can I ask dumb questions (like, what is twisted, etc)?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFEnajNA7t0hsXXeiERAm02AKDKFhYXcWYqqR4RR9U25lp3PO/ThwCbBmhL
Mrca7FI9XHwTnokK0e6IlEg=
=5oDH
-----END PGP SIGNATURE-----



From jml at mumak.net  Sat Jun 24 21:38:51 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 25 Jun 2006 11:38:51 +1000
Subject: [Twisted-Python] Any Twisted tutorial?
In-Reply-To: <449DA8CD.4060000@kbrooks.ath.cx>
References: <449DA8CD.4060000@kbrooks.ath.cx>
Message-ID: <d06a5cd30606241838j52aa3a51t60c4cad39c944b14@mail.gmail.com>

On 6/25/06, The Wiz <me at kbrooks.ath.cx> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Is there a Twisted tutorial?

Yes there is!  It is linked to from
http://twistedmatrix.com/projects/core/documentation/howto/index.html

> Also, can I ask dumb questions (like, what is twisted, etc)?

In general, no.  We'd prefer it if you looked at the documentation and
FAQ available on the website before you ask questions.

If your question is *not* answered by the documentation, then please
feel free to ask it here, or on #twisted.

Hope this helps,
jml



From jadestorm at nc.rr.com  Sat Jun 24 21:48:11 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sat, 24 Jun 2006 21:48:11 -0400
Subject: [Twisted-Python] Any Twisted tutorial?
In-Reply-To: <449DA8CD.4060000@kbrooks.ath.cx>
References: <449DA8CD.4060000@kbrooks.ath.cx>
Message-ID: <0567084D-CE4D-4631-B96D-FBA36B9BB4DE@nc.rr.com>

This would be a really good start:
http://www.amazon.com/gp/product/0596100329/sr=8-1/qid=1151200014/ 
ref=pd_bbs_1/002-1540570-6626468?ie=UTF8
(if that link doesn't work, it's a book called Twisted Network  
Programming Essentials by Abe Fettig)

=)

Daniel

On Jun 24, 2006, at 5:04 PM, The Wiz wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Is there a Twisted tutorial?
>
> Also, can I ask dumb questions (like, what is twisted, etc)?
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2.2 (GNU/Linux)
>
> iD8DBQFEnajNA7t0hsXXeiERAm02AKDKFhYXcWYqqR4RR9U25lp3PO/ThwCbBmhL
> Mrca7FI9XHwTnokK0e6IlEg=
> =5oDH
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From robert at gravina.com  Sat Jun 24 21:48:47 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 10:48:47 +0900
Subject: [Twisted-Python] Any Twisted tutorial?
In-Reply-To: <449DA8CD.4060000@kbrooks.ath.cx>
References: <449DA8CD.4060000@kbrooks.ath.cx>
Message-ID: <DCC5207C-F741-45E2-9F74-3423472D4CAB@gravina.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> Is there a Twisted tutorial?
>

Yes! These tutorials are really quite good. If you have the time and  
inclination, working through the "Twisted from Scratch" tutorial is  
very useful. Also, I found the section "High-level Twisted" to be  
another good starting place.
http://twistedmatrix.com/projects/core/documentation/howto/index.html

> Also, can I ask dumb questions (like, what is twisted, etc)?

Well I'm just another user like yourself, but most of these basic  
questions are answered on the Twisted wiki <http://twistedmatrix.com/ 
 > and in those tutorials I mentioned. Twisted has great  
documentation. Try that first.

Robert


> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2.2 (GNU/Linux)
>
> iD8DBQFEnajNA7t0hsXXeiERAm02AKDKFhYXcWYqqR4RR9U25lp3PO/ThwCbBmhL
> Mrca7FI9XHwTnokK0e6IlEg=
> =5oDH
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFEneuAUhM5QJJcb3cRAlCfAJ9iRwakn3Wb/ZmyS5+Jm90Frw6ZTgCfeVA+
fRaewCAfDVHKWCfeDu19cf0=
=t4tJ
-----END PGP SIGNATURE-----



From robert at gravina.com  Sat Jun 24 22:21:48 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 11:21:48 +0900
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
Message-ID: <E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>

Ah sorry everyone... it seems I've misunderstood a very basic concept:

Copyables are copy-by-value
Referenceables are copy-by-reference

It says so here:
http://www.lothar.com/tech/papers/PyCon-2003/pb-pycon/pb.html

So basically I need to use either Referenceable or Viewable! OK now I  
can get back to work.

Robert

On 2006/06/25, at 9:18, Robert Gravina wrote:

>> Only thing I can think of is generate your own id. Doesn't have to  
>> be random, you can simply increament a counter every time you  
>> create a new instance. If you're worried about the id growing too  
>> long you can search the database for unused ids that are lower  
>> than the current value of the counter.
>>
>
> While I appreciate your suggestions, given that PB is really quite  
> powerful and pb.Referenceables can be identified after a round  
> trip, I figure there must be a better way of doing this. I don't  
> want to use pb.Referenceables because I need to access the objects  
> attributes and call methods on the remote end. I'm not 100% sure  
> that your method is bug-free, although I haven't had a good think  
> about it. Thanks anyhow.
>
>> Perhaps somebody else has a better idea.
>>
>
> I really hope so. I'm stuck for ideas, short of turning everything  
> into pb.Cacheables.
>
> Robert
>
>> On 24/06/06, Robert Gravina <robert at gravina.com> wrote: This is an  
>> old thread, but I am finally tackling the round trip
>> editing problem and unfortunately getting nowhere. Basically, I want
>> to be able to create some object on one machine, then send it off to
>> another (who edits some of the attributes) then when the other
>> machine calls a method on the original machine and passes it the
>> updated object, I can identify it simply by comparing for quality.
>> Think of your basic client/server database application.
>>
>> The Twisted howtos make the claim that " Copyable objects return
>> unchanged from a round trip", and can be compared for quality like
>> (obj == obj) but in all my attempts I can get this to work (they are
>> never equal). Does someone know of some sample code where this is
>> done successfully? It is done successfully with pb.Referenceables in
>> the howtos (look for the pb2client.py and pb2server.py listings).
>> http://twistedmatrix.com/projects/core/documentation/howto/pb- 
>> usage.html
>>
>> Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to
>> identify objects that come back to me but the _p_oid is  None even
>> after a transaction.commit() (since the object hasn't been persisted
>> yet probably).
>>
>> I could also create my own ID attribute and attempt to generate a
>> random ID and compare that, but this is most definately a hack.
>>
>> I am really having trouble progressing with my application because of
>> this problem. I'd really appreciate some insight on how to go about
>> solving this. Admittedly I'm not all that experienced with Twisted,
>> but I thought this kind of thing was supposed to be straightforward.
>> What am I doing wrong?
>>
>> Thanks,
>>
>> Robert
>>
>> On 2006/05/07, at 18:55, Micky Latowicki wrote:
>>
>> > It's possible to make each element in the set being edited a
>> > cacheable. If you think that would introduce too much overhead,  
>> then
>> > you can add a method to the "address book" object which updates  
>> one of
>> > the entries in this address book, and uses an id to identify the  
>> entry
>> > within the address book. So the address book is the dict. That's  
>> what
>> > I did in a similar case. I'm no expert though.
>> >
>> > HTH
>> >
>> > Micky
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From jfn20 at cam.ac.uk  Sat Jun 24 23:19:22 2006
From: jfn20 at cam.ac.uk (Joseph Newman)
Date: Sun, 25 Jun 2006 04:19:22 +0100
Subject: [Twisted-Python] reset/restart reactor problem
Message-ID: <001815A0-67B5-424B-AB5A-8A6EE3344871@cam.ac.uk>

Hi All,

I am porting an academic middleware project, currently implemented in  
C++ and Java, to python. It extensively uses multicast for  
communicating general events and TCP to communicate with a database.  
The multicast messages that I send out depend on the results that I  
first obtain from the database. I would prefer to serialise each of  
these requests in turn, but its not immediately obvious to me what  
the best way to do this using Twisted is.

If I could reset the reactor after each client/server transaction  
that would be by far the easiest. I have been experimenting with  
threadedselectreactor, but I currently don't have an event loop as  
such that is independent of the reactor event loop. Nearly all the  
examples deal with processes that either act as servers or clients,  
rather than combinations of the two.

Thanks in advance for any help,

Joe Newman




From exarkun at divmod.com  Sat Jun 24 23:47:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 24 Jun 2006 23:47:47 -0400
Subject: [Twisted-Python] reset/restart reactor problem
In-Reply-To: <001815A0-67B5-424B-AB5A-8A6EE3344871@cam.ac.uk>
Message-ID: <20060625034747.29014.1818227858.divmod.quotient.9731@ohm>

On Sun, 25 Jun 2006 04:19:22 +0100, Joseph Newman <jfn20 at cam.ac.uk> wrote:
>Hi All,
>
>I am porting an academic middleware project, currently implemented in  C++ 
>and Java, to python. It extensively uses multicast for  communicating 
>general events and TCP to communicate with a database.  The multicast 
>messages that I send out depend on the results that I  first obtain from the 
>database. I would prefer to serialise each of  these requests in turn, but 
>its not immediately obvious to me what  the best way to do this using 
>Twisted is.

There are quite a few possible techniques to apply here.  One I would
recommend is to keep a list of objects which represent pending tasks
which need to be executed serially.  When each task completes, pop the
next one from the list and begin processing it.  When a new task needs
to be performed, push it onto the list.

>
>If I could reset the reactor after each client/server transaction  that 
>would be by far the easiest.

Twisted does not currently support restartable reactors.  This may be
addressed someday, but I don't think this is actually the best solution
to the problem you are facing.

>I have been experimenting with 
>threadedselectreactor, but I currently don't have an event loop as  such 
>that is independent of the reactor event loop. Nearly all the  examples deal 
>with processes that either act as servers or clients,  rather than 
>combinations of the two.

TSR probably isn't helpful here.  I would suggest something like this:

  class JobList:
      def __init__(self):
          self.jobs = []

      def add(self, job):
          self.jobs.append(job)
          if len(self.jobs) == 1:
              self._doJob()

      def _doJob(self):
          job = self.jobs[0]
          d = job.do()
          d.addErrback(log.err)
          d.addCallback(self._finishedJob)

      def _finishedJob(self, result):
          self.jobs.pop(0)
          if self.jobs:
              self._doJob()

Hope this helps,

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jun 25 01:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1151211901.62.1013482434@twistedmatrix.com

Bug summary
______________________
Summary for 2006-06-18 through 2006-06-25
Bugs opened: 27    Bugs closed: 17  Total open bugs: 631 (+10)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +7  |Highest:  -2          |Conch:               -1  
|Enhancement:  +5  |High:     +0          |Core:               +10  
|Task:         +1  |Normal:  +13          |Names:               -1  
                   |Low:      +2          |Pb:                  +1  
                                          |Release Management:  +1  
                                          |Trial:               +1  
                                          |Web2:                +1  
                                          |Website:             +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1831] Delete twisted.spread.newjelly (opened by exarkun) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1831

[#1835] make main setup.py work with 'build' subcommand (opened by radix)
    defect          release management http://twistedmatrix.com/trac/ticket/1835

[#1837] trial -e doesn't work with pyunit test cases (opened by radix)
    defect          trial      http://twistedmatrix.com/trac/ticket/1837

[#1847] build error,  svn version 11356 (opened by scmikes) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1847

                    ===== High =====
[#1839] web2.dav.fileop methods should return deferreds also (opened by wsanchez) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1839

[#1840] clearly, unambiguously, and centrally document development procedures (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1840

[#1855] trial pyunit support mixes up argument order when creating Failures (opened by exarkun) (CLOSED, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1855

[#1856] setup.py broken in SVN? (opened by rikyu) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1856

                    ===== Normal =====
[#1833] Paragraph on CoreFoundation in "Choosing a Reactor" is maybe wrong. (opened by indigo)
    defect          core       http://twistedmatrix.com/trac/ticket/1833

[#1834] Trac spews a RuntimeError when creating a New Ticket under some conditions. (opened by indigo)
    defect          website    http://twistedmatrix.com/trac/ticket/1834

[#1836] _dumbwin32proc.py Process does not have a pid attribute as advertised in the interface (opened by wrstlprmpft)
    defect          core       http://twistedmatrix.com/trac/ticket/1836

[#1838] DAV MKCOL method with body causes uncaught exception (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1838

[#1842] Deprecated usage of id in __hash__ methods (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/1842

[#1843] twisted.spread.util.FilePager keeps all sent chunks in memory (opened by ino)
    defect          pb         http://twistedmatrix.com/trac/ticket/1843

[#1844] StringTransport should behave more like a real transport (opened by washort)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1844

[#1845] twisted 2.4 test run on Suse 9, 64 bit, python 2.5b1 (opened by scmikes)
    task            core       http://twistedmatrix.com/trac/ticket/1845

[#1846] Test run python2.4  Twisted 2.4 tarball, Suse 9,  64 bit (opened by scmikes)
    task            core       http://twistedmatrix.com/trac/ticket/1846

[#1848] Python 2.5b1  svn (opened by scmikes)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1848

[#1849] twisted.conch.test.test_cftp.TestOurServerUnixClient._getBatchOutput is a mess (opened by spiv)
    defect          conch      http://twistedmatrix.com/trac/ticket/1849

[#1850] web2 documentation should recommend putChild instead of setattr (opened by marienz)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1850

[#1851] Svn  python 2.4  Suse 9, 64 bit (opened by scmikes)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1851

[#1852] Replace uses of @ivar in interfaces with z.i.Attribute (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/1852

[#1853] Fix/eliminate @cvar in Interfaces. (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/1853

[#1854] Suse 10,  Python 2.5   32 bit  Twisted SVN (opened by scmikes)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1854

                    ===== Low =====
[#1832] test_threads.ReactorThreadsTestCase is very fragile (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/1832

[#1841] twisted.web2.dav.fileop's handling of symbolic links is untested (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1841

[#1857] Check if admin/book.texinfo is needed (opened by hypatia)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1857



Closed Bugs
______________________
                    ===== Highest =====
[#1817] Several methods in web2.dav that should return deferreds do not (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1817

[#1824] typo in plugin howto (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1824

[#1799] Remove usage of exec from twisted/names/dns.py (opened by exarkun, closed by exarkun, fixed)
    task            names      http://twistedmatrix.com/trac/ticket/1799

[#1486] AttributeError: 'NoneType' object has no attribute 'connectionLost' (opened by miro, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/1486

[#1831] Delete twisted.spread.newjelly (opened by exarkun, closed by exarkun, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1831

[#1847] build error,  svn version 11356 (opened by scmikes, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1847

                    ===== High =====
[#491 ] [PATCH] persisted.sob buglet (opened by warner, closed by stephen, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/491

[#1839] web2.dav.fileop methods should return deferreds also (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1839

[#1839] web2.dav.fileop methods should return deferreds also (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1839

[#1856] setup.py broken in SVN? (opened by rikyu, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1856

[#1855] trial pyunit support mixes up argument order when creating Failures (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1855

                    ===== Normal =====
[#634 ] sandbox/itamar/components.py CannotAdapt when registering adapter to types.ClassType (opened by slyphon, closed by exarkun, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/634

[#1502] call selectreactor._preenDescriptors for WSAENOTSOCK (opened by titty, closed by titty, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1502

[#1816] More informative docstring for chainDeferred (opened by edsuom, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1816

[#1660] using conch plugin, cannot load the namespace (opened by mfeif, closed by exarkun, wontfix)
    defect          conch      http://twistedmatrix.com/trac/ticket/1660

[#1106] [NO PATCH] make example in howto/process.xhtml more clear (opened by headly, closed by hypatia, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1106

                    ===== Low =====
[#1476] Include web2 in main Twisted release (opened by andrea, closed by radix, invalid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1476





From moof at metamoof.net  Sun Jun 25 07:39:16 2006
From: moof at metamoof.net (Moof)
Date: Sun, 25 Jun 2006 12:39:16 +0100
Subject: [Twisted-Python] reset/restart reactor problem
In-Reply-To: <20060625034747.29014.1818227858.divmod.quotient.9731@ohm>
References: <001815A0-67B5-424B-AB5A-8A6EE3344871@cam.ac.uk>
	<20060625034747.29014.1818227858.divmod.quotient.9731@ohm>
Message-ID: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>

> >I am porting an academic middleware project, currently implemented in  C++
> >and Java, to python. It extensively uses multicast for  communicating
> >general events and TCP to communicate with a database.  The multicast
> >messages that I send out depend on the results that I  first obtain from the
> >database. I would prefer to serialise each of  these requests in turn, but
> >its not immediately obvious to me what  the best way to do this using
> >Twisted is.
>
> There are quite a few possible techniques to apply here.  One I would
> recommend is to keep a list of objects which represent pending tasks
> which need to be executed serially.  When each task completes, pop the
> next one from the list and begin processing it.  When a new task needs
> to be performed, push it onto the list.

[snip code]

This has already been implemented in twisted.

from twisted.internet import defer

requestqueue = defer.DeferredSemaphore(1) # only allow one token to be
in use at a time
d = requestqueue.run(object.method, arg1, arg2, arg3=3)

d is a deferred that will return the result of the method call in the
standard manner. The semaphore will store the function call in a FIFO
queue and run it when a token becomes available, acquiring the lock,
running, and releasing it once run. It allows for multiple tokens, so
it's normally used to run a maximum of, say, 30 things at a time, but
there's no reson not to set a maximum of 1. This guarantees that only
one call in the notional queue will be run at a time, effectively
serialising your requests.

Keep in mind that twisted is inherently single-threaded, and hence, to
an extent, serial in nature anyway, there are very few times in a
twisted programme when it becomes multi-threaded, database access with
twisted.enterprise being one of them. The general strategy would be to
keep only the part of your programme that needs to be transactional in
a queue like this, leaving the rest of the programme (like sending the
multicast data) in twisted's normal asynchronous execution space. In
fact, the only reason to do it this way is if you need to process the
data in the order it's received. If the order is not important, then
you can use your own database's transaction model to solve the
concurrency issues, (see
twisted.enterprise.adbapi.ConnectionPool.runInteraction), and just let
twisted gets on with doing things the way it knows best.

Hope this helps,

Moof



From exarkun at divmod.com  Sun Jun 25 10:12:37 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 25 Jun 2006 10:12:37 -0400
Subject: [Twisted-Python] reset/restart reactor problem
In-Reply-To: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>
Message-ID: <20060625141237.29014.1281644275.divmod.quotient.10162@ohm>

On Sun, 25 Jun 2006 12:39:16 +0100, Moof <moof at metamoof.net> wrote:
>> >I am porting an academic middleware project, currently implemented in  C++
>> >and Java, to python. It extensively uses multicast for  communicating
>> >general events and TCP to communicate with a database.  The multicast
>> >messages that I send out depend on the results that I  first obtain from 
>>the
>> >database. I would prefer to serialise each of  these requests in turn, but
>> >its not immediately obvious to me what  the best way to do this using
>> >Twisted is.
>>
>>There are quite a few possible techniques to apply here.  One I would
>>recommend is to keep a list of objects which represent pending tasks
>>which need to be executed serially.  When each task completes, pop the
>>next one from the list and begin processing it.  When a new task needs
>>to be performed, push it onto the list.
>
>[snip code]
>
>This has already been implemented in twisted.

I know.  I implemented it. ;)

Jean-Paul



From eprparadocs at gmail.com  Sun Jun 25 14:20:25 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sun, 25 Jun 2006 14:20:25 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <449ED3E9.40802@gmail.com>

I have a problem to solve: I need to get files from one machine to
another. I had thought about all the obvious solutions (and implemented
some of them); for instance adding an FTP server to my Twisted services
and using a client. I thought about doing the file transfer with XML-RPC
and even SOAP. And I even thought of WebDav.

I started reading about PB and thought it might be useful. I thought
about building a "remote" class that simulates open and all its
functions, like read, write, close, etc.

The more I thought about it the more I thought it cool and the way to do
it. That got me thinking that I must be missing something. I am curious
about what you might think of this approach. Is there another better way?

Peace,
Chaz.



From phil at bubblehouse.org  Sun Jun 25 22:12:42 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 25 Jun 2006 22:12:42 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <449ED3E9.40802@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com>
Message-ID: <A7F89B66-E3C5-4456-B14C-E4F5E08242AE@bubblehouse.org>

I'm sure there will be a flood of answers for this (involving using a  
Producer/Consumer)...I'd give a clue, but my PB usage right now is  
only in quick messages...

However, I wanted to ask if you could please create new messages for  
new threads on the list instead of replying to arbitrary old  
messages. When you start new threads by replying, it adds a In-Reply- 
To header that thwarts any attempts to sort by threads.

This is my OCD talking, so please for give me... ;-)

-phil



On Jun 25, 2006, at 2:20 PM, Chaz. wrote:

> I have a problem to solve: I need to get files from one machine to
> another. I had thought about all the obvious solutions (and  
> implemented
> some of them); for instance adding an FTP server to my Twisted  
> services
> and using a client. I thought about doing the file transfer with  
> XML-RPC
> and even SOAP. And I even thought of WebDav.
>
> I started reading about PB and thought it might be useful. I thought
> about building a "remote" class that simulates open and all its
> functions, like read, write, close, etc.
>
> The more I thought about it the more I thought it cool and the way  
> to do
> it. That got me thinking that I must be missing something. I am  
> curious
> about what you might think of this approach. Is there another  
> better way?
>
> Peace,
> Chaz.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at tekNico.net  Mon Jun 26 06:37:42 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 26 Jun 2006 12:37:42 +0200
Subject: [Twisted-Python] Re: Need words of wisdom regarding PB
In-Reply-To: <449ED3E9.40802@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com>
Message-ID: <e7oddp$i2b$1@sea.gmane.org>

> I have a problem to solve: I need to get files from one machine to
> another. I had thought about all the obvious solutions (and implemented
> some of them); for instance adding an FTP server to my Twisted services
> and using a client. I thought about doing the file transfer with XML-RPC
> and even SOAP. And I even thought of WebDav.
> 
> I started reading about PB and thought it might be useful.

PB, XML-RPC and SOAP introduce serialization and encoding overhead. FTP is
uselessly complicated. WebDav may be too complicated for simple file
transfers. Try plain HTTP, and add authentication and encryption if required.

-- 
Nicola Larosa - http://www.tekNico.net/

We mustn't settle for negotiating "Net Neutrality". We must demand the
basic right to connect and not just an enumerated list of what we are
allowed to do. It's no different from having to negotiate free speech
by listing what is allowed. Having to beg for permission to speak is
offensive. -- Robert Frankston (cited by Doc Searls), March 2006




From eprparadocs at gmail.com  Mon Jun 26 07:04:51 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 26 Jun 2006 07:04:51 -0400
Subject: [Twisted-Python] Performance of PB, XML-RPC and SOAP (ZSI version)
Message-ID: <449FBF53.3000101@gmail.com>

I was wondering if anyone has performance information for PB, XML-RPC
and/or ZSI's SOAP? I am trying to find out what I should be expecting
for raw performance.

I have done some raw performance of gSOAP doing an echo of 1-byte
messages and get around 500/second. I am trying to figure out the "hit"
I am going to take using Python, Twisted, and the 3 protocols.

Thanks in advance,
Chaz



From lordvan at lordvan.com  Mon Jun 26 08:43:39 2006
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Mon, 26 Jun 2006 13:43:39 +0100
Subject: [Twisted-Python] Re: Performance of PB,
	XML-RPC and SOAP (ZSI version)
References: <449FBF53.3000101@gmail.com>
Message-ID: <pan.2006.06.26.12.43.37.602948@lordvan.com>

On Mon, 26 Jun 2006 07:04:51 -0400, Chaz. wrote:

> I was wondering if anyone has performance information for PB, XML-RPC
> and/or ZSI's SOAP? I am trying to find out what I should be expecting
> for raw performance.
> 
> I have done some raw performance of gSOAP doing an echo of 1-byte
> messages and get around 500/second. I am trying to figure out the "hit"
> I am going to take using Python, Twisted, and the 3 protocols.
> 
> Thanks in advance,
> Chaz

Hi.

interesting question. if you do the tests can you share them with us? :)

Regards


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z- 
------END GEEK CODE BLOCK------





From lordvan at lordvan.com  Mon Jun 26 08:47:38 2006
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Mon, 26 Jun 2006 13:47:38 +0100
Subject: [Twisted-Python] Re: Iron Python support
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
	<200606231214.14695.mike@mkp.ca>
	<60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>
	<449C1AE4.4070802@libero.it>
Message-ID: <pan.2006.06.26.12.47.37.277085@lordvan.com>

On Fri, 23 Jun 2006 14:46:28 -0200, Manlio Perillo wrote:

I think for that to work someone will have to (re-) write some core parts
of twisted using .net (ironpython, python.net, boo)

sounds like an interesting challenge though :) too bad I ain't got time to
play with this atm :)

> Christopher Armstrong ha scritto:
>> [...]
>> 
>> What Jp meant to say was "See <url> for the list of support platforms.
>> As you can see, there is no buildbot running for ironpython, so
>> Twisted cannot have support for it. 
> 
> I also see no Jython support.
> What about it?
> 
> 
>> However, if you would like to move
>> things in the direction of Ironpython support, the donation of an
>> Ironpython buildslave would certainly be appreciated."
>> 
> 
> Do you use one dedicated server for each build slaves?
> If you just need a computer with a buildbot I can offer (spare) access
> to my PC.
> 
> Usually my PC is on from
> 10:00 to 12:30 and 17:00 to 23:00
> (local time in Italy).
> 
> 
> Do you use builbot from http://buildbot.sourceforge.net/?
> I just downloaded the version 0.7.3.
> 
> 
> 
> Regards  Manlio Perillo

-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z- 
------END GEEK CODE BLOCK------





From itamar at itamarst.org  Mon Jun 26 11:17:37 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jun 2006 11:17:37 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17371 - Add roadmap.xhtml
	to index
In-Reply-To: <E1FuI0V-0005qB-00@wolfwood>
References: <E1FuI0V-0005qB-00@wolfwood>
Message-ID: <1151335058.6033.1.camel@localhost.localdomain>

Isn't the roadmap extremely out-of-date? I thought we wrote that back in
1.0.




From db3l at fitlinxx.com  Mon Jun 26 12:56:27 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Jun 2006 12:56:27 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
	<E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>
Message-ID: <ufyhr97pg.fsf@fitlinxx.com>

Robert Gravina <robert at gravina.com> writes:

> Ah sorry everyone... it seems I've misunderstood a very basic concept:
> 
> Copyables are copy-by-value
> Referenceables are copy-by-reference
> 
> It says so here:
> http://www.lothar.com/tech/papers/PyCon-2003/pb-pycon/pb.html
> 
> So basically I need to use either Referenceable or Viewable! OK now I
> can get back to work.

Well, or just define your own comparison semantics in your copyable,
as you might for any other object.  We use copyables all the time for
precisely this pattern (return object remotely, edit it, re-use it in
a subsequent call back to the server) and it works fine as long as you
control the comparison and don't fall back to default Python rules,
which for class instances is effectively just an id() comparison.

As it turns out, we do also embed an "_id" attribute within the
objects (an auto-generated UUID) so we can detect collisions
(two clients attempting to modify the same object), but for general
comparison purposes outside of that collision check, we exclude the
_id attribute.

-- David




From robert at gravina.com  Mon Jun 26 13:55:11 2006
From: robert at gravina.com (Robert Gravina)
Date: Tue, 27 Jun 2006 02:55:11 +0900
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <ufyhr97pg.fsf@fitlinxx.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
	<E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
Message-ID: <44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>


On 2006/06/27, at 1:56, David Bolen wrote:

> Robert Gravina <robert at gravina.com> writes:
>
>> Ah sorry everyone... it seems I've misunderstood a very basic  
>> concept:
>>
>> Copyables are copy-by-value
>> Referenceables are copy-by-reference
>>
>> It says so here:
>> http://www.lothar.com/tech/papers/PyCon-2003/pb-pycon/pb.html
>>
>> So basically I need to use either Referenceable or Viewable! OK now I
>> can get back to work.
>
> Well, or just define your own comparison semantics in your copyable,
> as you might for any other object.  We use copyables all the time for
> precisely this pattern (return object remotely, edit it, re-use it in
> a subsequent call back to the server) and it works fine as long as you
> control the comparison and don't fall back to default Python rules,
> which for class instances is effectively just an id() comparison.
>

Thanks, that is exactly what I am trying to do (return object  
remotely, edit it, re-use it in a subsequent call back to the  
server). What kind of comparison do you do then? Do you compare all  
attributes? By the way, what is an id() comparison? As far as I know  
Python compares to see if the instances (i.e. memory locations) are  
equal.

> As it turns out, we do also embed an "_id" attribute within the
> objects (an auto-generated UUID) so we can detect collisions
> (two clients attempting to modify the same object), but for general
> comparison purposes outside of that collision check, we exclude the
> _id attribute.
>

I've been looking around trying to find some good code for generating  
IDs, but most snippets I can find are accompanied by post after post  
on how that generation technique may fail under certain conditions.

I've been using the ZODB, but for the live of me I can't seem to get  
anything out of the _p_oid attribute (supposedly the object ID, but  
it's always None!). This prompted me today to experiment with Axiom  
(thanks Divmod guys!) and I like what I see so far, but I'm having  
problems with that also (see here if you're interested <http:// 
divmod.org/trac/ticket/1220>).

I'd really like to stick with Copyables and the ZODB if possible.  
What I'm not sure how to do is when I get my copyable back, not screw  
up my references to this object in the ZODB because what I'm really  
getting back is a whole new object.

Thanks for your advice,

Robert

> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mike at mkp.ca  Mon Jun 26 14:55:06 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Mon, 26 Jun 2006 14:55:06 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
Message-ID: <200606261455.07318.mike@mkp.ca>

On Monday 26 June 2006 13:55, Robert Gravina wrote:
> By the way, what is an id() comparison? As far as I know
> Python compares to see if the instances (i.e. memory locations) are
> equal.

You got your chocolate in my peanutbutter!

An "id()" comparison would be, "id(this) == id(that)".  In most (all?) 
implementations, 'id()' returns the memory location, but this is an 
implementation detail that is not guaranteed and shouldn't be depended on.  
An object's python id is to be treated as an opaque identifier.

Mike.



From robert at gravina.com  Mon Jun 26 15:18:03 2006
From: robert at gravina.com (Robert Gravina)
Date: Tue, 27 Jun 2006 04:18:03 +0900
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <200606261455.07318.mike@mkp.ca>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
	<200606261455.07318.mike@mkp.ca>
Message-ID: <56FF91ED-BC73-4CF0-873B-87252308F726@gravina.com>

Thanks Mike and others.. I just figured out how I can get this to  
work (with a bit of help from the ZODB mailing list too)! I am using  
the ZODB, and up until now I though that the _p_oid (the attribute  
that stores a unique object ID) was None all the time, even after I  
had persisted an object. I tried loading up a persisted object  
iteractively and found:

 >>> p._p_oid
'\x00\x00\x00\x00\x00\x00\x00\x08'
 >>> print p._p_oid
 >>> p._p_oid is None
False

... that it prints out as nothing, but it really is something (hence  
missing it in all my debug printouts)! (Those nutcase Zope  
developers!)... anyhow, it now appears I can compare the _p_oid of a  
Copyable coming back and find the object that represents it on the  
server, update it accordingly, commit the transaction and do a  
victory dance.

Thanks all for you help.

I thought I'd post this so anyone else using Twisted and ZODB won't  
spend days on this like I did.

Robert



On 2006/06/27, at 3:55, Mike Pelletier wrote:

> On Monday 26 June 2006 13:55, Robert Gravina wrote:
>> By the way, what is an id() comparison? As far as I know
>> Python compares to see if the instances (i.e. memory locations) are
>> equal.
>
> You got your chocolate in my peanutbutter!
>
> An "id()" comparison would be, "id(this) == id(that)".  In most (all?)
> implementations, 'id()' returns the memory location, but this is an
> implementation detail that is not guaranteed and shouldn't be  
> depended on.
> An object's python id is to be treated as an opaque identifier.
>
> Mike.




From itamar at itamarst.org  Mon Jun 26 15:38:24 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jun 2006 15:38:24 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <56FF91ED-BC73-4CF0-873B-87252308F726@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
	<200606261455.07318.mike@mkp.ca>
	<56FF91ED-BC73-4CF0-873B-87252308F726@gravina.com>
Message-ID: <1151350705.6033.21.camel@localhost.localdomain>

On Tue, 2006-06-27 at 04:18 +0900, Robert Gravina wrote:

> ... that it prints out as nothing, but it really is something (hence  
> missing it in all my debug printouts)! (Those nutcase Zope  
> developers!)... anyhow, it now appears I can compare the _p_oid of a  
> Copyable coming back and find the object that represents it on the  
> server, update it accordingly, commit the transaction and do a  
> victory dance.

There are potential issues with that; I don't think ZODB oids are
guaranteed to be unique across multiple sub-databases. It's been long
enough since I used ZODB that I forget the details.




From terry at jon.es  Mon Jun 26 17:12:34 2006
From: terry at jon.es (Terry Jones)
Date: Mon, 26 Jun 2006 23:12:34 +0200
Subject: [Twisted-Python] Nevow docs typo
Message-ID: <17568.19906.262852.837917@terry.jones.tc>

Should Nevow issues go into the general Twisted tracker?

Line 148 of doc/txt/nevow-rendering.txt in the current (#7314) revision of
Nevow has:

  class Root(page.Page):

s/page/rend/

Terry



From exarkun at divmod.com  Mon Jun 26 17:23:49 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jun 2006 17:23:49 -0400
Subject: [Twisted-Python] Nevow docs typo
In-Reply-To: <17568.19906.262852.837917@terry.jones.tc>
Message-ID: <20060626212349.29014.297250899.divmod.quotient.11648@ohm>

On Mon, 26 Jun 2006 23:12:34 +0200, Terry Jones <terry at jon.es> wrote:
>Should Nevow issues go into the general Twisted tracker?

Nevow tickets should go into the tracker at <http://divmod.org/>.  There's also a separate mailing list for web-related topics involving Twisted, <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web>.

Jean-Paul



From glyph at divmod.com  Mon Jun 26 18:58:29 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 26 Jun 2006 18:58:29 -0400
Subject: [Twisted-Python] Nevow docs typo
In-Reply-To: <17568.19906.262852.837917@terry.jones.tc>
Message-ID: <20060626225829.29014.1432244521.divmod.quotient.11735@ohm>



On Mon, 26 Jun 2006 23:12:34 +0200, Terry Jones <terry at jon.es> wrote:
>Should Nevow issues go into the general Twisted tracker?

Nope, into the Divmod tracker, thanks: http://divmod.org/trac

Use the "Nevow" component.

And you probably want to talk about it on twisted-web, rather than twisted-python :)



From dreid at dreid.org  Mon Jun 26 19:24:56 2006
From: dreid at dreid.org (David Reid)
Date: Mon, 26 Jun 2006 16:24:56 -0700
Subject: [Twisted-Python] Bay Area Twisted sprint.
Message-ID: <44A06CC8.4040006@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello there,
  I'm attempting to think about possibly organizing a Twisted sprint
(focus on closing bugs) in the San Francisco/Bay Area for mid to late
July.  I know there are quite a few Twisted committers who are in the
area and I've approached some of them to gather preliminary information
regarding availability and interest.  There are also some people in town
for the summer for various reasons who've expressed interest.  So this
is an open invitation to every on twisted-python and twisted-web who is
in the bay area (or willing to travel to the bay area) for a weekend
sprint.  I need a rough approximation of how many people will actually
be able to make it so that I can attempt to locate a place to hold the
sprint.

  So if you're interested email me with your availability for the
weekends of the 15-16, 22-23, 29-30.  Basically I'll take the weekend
with the most available participants and start fishing around for a
location.

  Alternatively if you would like to host the sprint at your large
private estate or successful corporate offices you can contact me as
well with your preference for any of the above dates and some details
about the facilities you can provide.  (Close proximity to a caffeine
dispensary and reliable unrestrictive internet access are a must.  Comfy
chairs a plus.)

- -David Reid

- --
"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEoGzIrsrO6aeULcgRAlGmAKCfO9zBU/2UV5mIMXfNHRo7jlyXrACfSDbB
+TQMSPD7uwLnSDV1Ou2H/Qc=
=cWIj
-----END PGP SIGNATURE-----



From eprparadocs at gmail.com  Tue Jun 27 08:20:21 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Tue, 27 Jun 2006 08:20:21 -0400
Subject: [Twisted-Python] Performance data?
Message-ID: <44A12285.4060509@gmail.com>

I was wondering if anyone had performance data on using twisted with
XML-RPC, PB and/or SOAP (using ZSI)?

Peace,
Chaz



From stephane_brault at yahoo.fr  Tue Jun 27 12:49:12 2006
From: stephane_brault at yahoo.fr (=?utf-8?q?St=C3=A9phane=20Brault?=)
Date: Tue, 27 Jun 2006 16:49:12 +0000 (GMT)
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>
Message-ID: <20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>

Hi,
 I'm developping servers which communicate with webservices. I need to have
 looping tasks making calls every x (x depends on the task). My communication
 code works well but I'm not sure how to add scheduled tasks. Do I have to add 
 a scheduler service, if so how should i go ? Or is there another way ?
 
 Thanks,
 
 St?phane




From exarkun at divmod.com  Tue Jun 27 13:04:32 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jun 2006 13:04:32 -0400
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>
Message-ID: <20060627170432.29014.1890156191.divmod.quotient.12566@ohm>

On Tue, 27 Jun 2006 16:49:12 +0000 (GMT), St?phane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
> I'm developping servers which communicate with webservices. I need to have
> looping tasks making calls every x (x depends on the task). My communication
> code works well but I'm not sure how to add scheduled tasks. Do I have to add
> a scheduler service, if so how should i go ? Or is there another way ?

Whether or not you use a service depends on the structure of your application.
If you don't use a twisted.application.internet.TimerService, you can use a
twisted.internet.task.LoopingCall directly.

Jean-Paul



From moof at metamoof.net  Tue Jun 27 13:13:23 2006
From: moof at metamoof.net (Moof)
Date: Tue, 27 Jun 2006 18:13:23 +0100
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>
References: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>
	<20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>
Message-ID: <bff8eeef0606271013g3e1e5028v92d42646d2e86133@mail.gmail.com>

On 6/27/06, St?phane Brault <stephane_brault at yahoo.fr> wrote:
> Hi,
>  I'm developping servers which communicate with webservices. I need to have
>  looping tasks making calls every x (x depends on the task). My communication
>  code works well but I'm not sure how to add scheduled tasks. Do I have to add
>  a scheduler service, if so how should i go ? Or is there another way ?

If you just need a function called every x seconds, then you can use a
twisted.internet.service.TimerService attached to your application in
the .tac file.

If you want to do it outside the service architecture, then
twisted.internet.task.LoopingCall is more your sort of thing.

To my knowledge, there is no cron-style scheduler in twisted, which
would allow you to run  at 9:00am every day or second tuesday or
schedules to that effect. You may wish to use cron to do that, running
applications that connect to your daemon using pb or some other
similar mechanism and trigger the action.

That being said, I'm currenly considering writing such a service for
twisted itself, too.

Moof



From stephane_brault at yahoo.fr  Tue Jun 27 13:28:02 2006
From: stephane_brault at yahoo.fr (=?utf-8?q?St=C3=A9phane=20Brault?=)
Date: Tue, 27 Jun 2006 17:28:02 +0000 (GMT)
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <bff8eeef0606271013g3e1e5028v92d42646d2e86133@mail.gmail.com>
Message-ID: <20060627172802.21114.qmail@web26512.mail.ukl.yahoo.com>

Thanks Moof,
  in fact i need to call different functions. I didn't know about the timerservice. For the cron-style scheduler
  you could try googling 'zope twisted integration', there is a link to Stephen Richter's integration with 
  a cron task. My concern was how, inside an application to launch tasks (or a looping call) at the initialization.
  I tried an example but it didn't seem to work.
  
  Thanks again,
  
  St?phane

----- Message d'origine ----
De : Moof <moof at metamoof.net>
? : St?phane Brault <stephane_brault at yahoo.fr>; Twisted general discussion <twisted-python at twistedmatrix.com>
Envoy? le : Mardi, 27 Juin 2006, 7h13mn 23s
Objet : Re: [Twisted-Python] Scheduling tasks in twisted

On 6/27/06, St?phane Brault <stephane_brault at yahoo.fr> wrote:
> Hi,
>  I'm developping servers which communicate with webservices. I need to have
>  looping tasks making calls every x (x depends on the task). My communication
>  code works well but I'm not sure how to add scheduled tasks. Do I have to add
>  a scheduler service, if so how should i go ? Or is there another way ?

If you just need a function called every x seconds, then you can use a
twisted.internet.service.TimerService attached to your application in
the .tac file.

If you want to do it outside the service architecture, then
twisted.internet.task.LoopingCall is more your sort of thing.

To my knowledge, there is no cron-style scheduler in twisted, which
would allow you to run  at 9:00am every day or second tuesday or
schedules to that effect. You may wish to use cron to do that, running
applications that connect to your daemon using pb or some other
similar mechanism and trigger the action.

That being said, I'm currenly considering writing such a service for
twisted itself, too.

Moof






From stephane_brault at yahoo.fr  Tue Jun 27 13:34:07 2006
From: stephane_brault at yahoo.fr (=?utf-8?q?St=C3=A9phane=20Brault?=)
Date: Tue, 27 Jun 2006 17:34:07 +0000 (GMT)
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <20060627170432.29014.1890156191.divmod.quotient.12566@ohm>
Message-ID: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>

Thanks Jean-Paul,
 
 I think I'll try to write my own service, getting inspiration from the TimerService.
 
 St?phane

----- Message d'origine ----
De : Jean-Paul Calderone <exarkun at divmod.com>
? : twisted-python at twistedmatrix.com
Envoy? le : Mardi, 27 Juin 2006, 7h04mn 32s
Objet : Re: [Twisted-Python] Scheduling tasks in twisted

On Tue, 27 Jun 2006 16:49:12 +0000 (GMT), St?phane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
> I'm developping servers which communicate with webservices. I need to have
> looping tasks making calls every x (x depends on the task). My communication
> code works well but I'm not sure how to add scheduled tasks. Do I have to add
> a scheduler service, if so how should i go ? Or is there another way ?

Whether or not you use a service depends on the structure of your application.
If you don't use a twisted.application.internet.TimerService, you can use a
twisted.internet.task.LoopingCall directly.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From robert at gravina.com  Tue Jun 27 14:31:56 2006
From: robert at gravina.com (Robert Gravina)
Date: Wed, 28 Jun 2006 03:31:56 +0900
Subject: [Twisted-Python] A proposal for simple remote object editing
	(Twisted and ZODB integration)
In-Reply-To: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
Message-ID: <63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>

I'd just like to throw out an idea after working with Twisted  
(especially Perspective Broker) getting the early stages of my  
application going over the last few weeks.

I love object databases... I've been using ZODB because it's so  
simple to work with, no SQL, just create your Python classes and all  
their attributes (dictionaries, references to other objects) will be  
pickled for you and saved in a file (or database, never tried it  
though)...

Anyhow, I've started writing my Twisted application, where clients  
contact a server to get objects, edit their details, and send them  
back. Because ZODB works by maintaining references to other objects,  
I can't just replace them with the new Copyables  when they come back  
because they are different instances. So, I compare the _p_oid  
attribute (object ID) with my original objects to locate the one I'm  
looking for, copy the __dict__ across from the Copyable to the  
original object, and commit the transaction. I haven't gotten much  
further than that, but I'm sure I'll have problems with objects which  
refer to other objects etc.

What's great about Referenceables is that Twisted gives you the  
original instance when they come back to you, but the client can't  
access the attributes or run any of it's methods locally. What's  
great about Copyables is that the whole instance is sent down the  
wire and the client can alter it's attributes, call it's methods, and  
send it back...

Back to the ZODB... what would be extremely useful is if clients  
could get an objects from the ZODB sent down to them, edit the  
attributes and call the methods, and sent it back and *have it be the  
original instance again*. Sort of like the best of both words of  
Referenceables and Copyables. Of course, this doesn't have to have  
anything to do with the ZODB, it was just my motivation for this  
idea. Any object could be sent down the wire, edited, and sent back  
having the original instance updated.

My questions are:

1) Is there any way to achieve this using Twisted the way things are?

2) Is my copying-across-the-dict a good enough solution, and I should  
just forget about the whole thing?

3) I hear Zope 3 contains some kind of Twisted integration. For the  
life of me I can't find any information about this on the web, and I  
even bought a book on Zope 3 recently and the only reference to  
Twisted is that you can use Twisted Web instead of Zope's ZServer to  
service web requests.

4) I've been toying with Divmod Axiom, and I see there is Twisted  
Persisted (but can't find much info on it), plus there is Twisted  
Enterprise, but that is too close to relational databases for my  
liking. Do any of these projects have integration like this?

5) Does anyone else think this is a cool idea and like to see it  
implemented?

Robert



From exarkun at divmod.com  Tue Jun 27 14:50:49 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jun 2006 14:50:49 -0400
Subject: [Twisted-Python] A proposal for simple remote object editing
	(Twisted and ZODB integration)
In-Reply-To: <63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
Message-ID: <20060627185049.29014.927720205.divmod.quotient.12689@ohm>

On Wed, 28 Jun 2006 03:31:56 +0900, Robert Gravina <robert at gravina.com> wrote:
>I'd just like to throw out an idea after working with Twisted  (especially 
>Perspective Broker) getting the early stages of my  application going over 
>the last few weeks.
>
>I love object databases... I've been using ZODB because it's so  simple to 
>work with, no SQL, just create your Python classes and all  their attributes 
>(dictionaries, references to other objects) will be  pickled for you and 
>saved in a file (or database, never tried it  though)...
>
>Anyhow, I've started writing my Twisted application, where clients  contact 
>a server to get objects, edit their details, and send them  back. Because 
>ZODB works by maintaining references to other objects,  I can't just replace 
>them with the new Copyables  when they come back  because they are different 
>instances. So, I compare the _p_oid  attribute (object ID) with my original 
>objects to locate the one I'm  looking for, copy the __dict__ across from 
>the Copyable to the  original object, and commit the transaction. I haven't 
>gotten much  further than that, but I'm sure I'll have problems with objects 
>which  refer to other objects etc.
>
>What's great about Referenceables is that Twisted gives you the  original 
>instance when they come back to you, but the client can't  access the 
>attributes or run any of it's methods locally. What's  great about Copyables 
>is that the whole instance is sent down the  wire and the client can alter 
>it's attributes, call it's methods, and  send it back...
>
>Back to the ZODB... what would be extremely useful is if clients  could get 
>an objects from the ZODB sent down to them, edit the  attributes and call 
>the methods, and sent it back and *have it be the  original instance again*. 
>Sort of like the best of both words of  Referenceables and Copyables. Of 
>course, this doesn't have to have  anything to do with the ZODB, it was just 
>my motivation for this  idea. Any object could be sent down the wire, 
>edited, and sent back  having the original instance updated.
>
>My questions are:
>
>1) Is there any way to achieve this using Twisted the way things are?

It's possible for applications or libraries which use Twisted but aren't
part of Twisted to define new kinds of behavior for PB objects.  You can
define a class which combines the features of Referenceable and Copyable
if you like.

You can find some code which does something somewhat along these lines in
twisted/words/service.py: for example, the PBGroup and PBGroupReference
classes cooperate to make a type which, on the remote side, ends up with
Python methods which make remote PB method calls as well as a single
data attributes copied from the server (the attributes are effectively
read-only, though - you cannot modify them and send the instance back to
the server).

>
>2) Is my copying-across-the-dict a good enough solution, and I should  just 
>forget about the whole thing?

If the possibility for multiple clients to interact with the same objects
simultaneously exists, you will need some kind of conflict resolution.
This is one reason Twisted doesn't include a class like this - different
applications often want different conflict resolution behavior.

>
>3) I hear Zope 3 contains some kind of Twisted integration. For the  life of 
>me I can't find any information about this on the web, and I  even bought a 
>book on Zope 3 recently and the only reference to  Twisted is that you can 
>use Twisted Web instead of Zope's ZServer to  service web requests.

The integration is by way of WSGI.  While this means that Zope3 code may
be running in the same process as a Twisted reactor, you have to go a bit
out of your way to get any benefit from this.

>
>4) I've been toying with Divmod Axiom, and I see there is Twisted  Persisted 
>(but can't find much info on it), plus there is Twisted  Enterprise, but 
>that is too close to relational databases for my  liking. Do any of these 
>projects have integration like this?

None of them do.

>
>5) Does anyone else think this is a cool idea and like to see it 
>implemented?

It might be interesting.  I can't see any use-cases for which it is head
and shoulders above a solution with looser PB coupling, but that doesn't
mean one doesn't exist. :)

Jean-Paul



From ldanielburr at mac.com  Tue Jun 27 15:16:30 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Tue, 27 Jun 2006 14:16:30 -0500
Subject: [Twisted-Python] A proposal for simple remote object
	editing	(Twisted and ZODB integration)
In-Reply-To: <63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
	<63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
Message-ID: <op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>

Robert,

On Tue, 27 Jun 2006 13:31:56 -0500, Robert Gravina <robert at gravina.com>  
wrote:

[snip description of current work]

> Back to the ZODB... what would be extremely useful is if clients could  
> get an objects from the ZODB sent down to them, edit the attributes and  
> call the methods, and sent it back and *have it be the original instance  
> again*. Sort of like the best of both words of Referenceables and  
> Copyables. Of course, this doesn't have to have anything to do with the  
> ZODB, it was just my motivation for this idea. Any object could be sent  
> down the wire, edited, and sent back having the original instance  
> updated.
>

What does "have it be the original instance again" really mean?  It sounds
as though you simply want the distinction between Referenceables and
Copyables to disappear.  I smell security issues in here somewhere.

> My questions are:
>
> 1) Is there any way to achieve this using Twisted the way things are?
>

I don't know for a certainty, but my guess is that there isn't any
out-of-box solution for this.  You'd have to do this yourself, I think.

> 2) Is my copying-across-the-dict a good enough solution, and I should  
> just forget about the whole thing?
>

I think you really want ZEO, but I may be misunderstanding your aims.

> 3) I hear Zope 3 contains some kind of Twisted integration. For the life  
> of me I can't find any information about this on the web, and I even  
> bought a book on Zope 3 recently and the only reference to Twisted is  
> that you can use Twisted Web instead of Zope's ZServer to service web  
> requests.
>

The twisted/zope integration is really just so that zope 3 can start
using twisted as a server (web, ftp, etc.).  I don't think the zope
community has any immediate plans to use twisted as a framework.

Jim Fulton has said he wants to get out of the server business, and
twisted lets him do that.  I don't think he is particularly interested
in using twisted to build his apps, as he already has his own framework.

> 4) I've been toying with Divmod Axiom, and I see there is Twisted  
> Persisted (but can't find much info on it), plus there is Twisted  
> Enterprise, but that is too close to relational databases for my liking.  
> Do any of these projects have integration like this?
>

As a person who uses Axiom for his current project, I say "Use Axiom!".
That said, you can't use Axiom with ZODB, or vice versa.  Axiom is a
really great alternative to ZODB, and one that will work much more
nicely with twisted, hence my endorsement of it.

> 5) Does anyone else think this is a cool idea and like to see it  
> implemented?
>

I don't have any interest in such a thing, personally, but then again,
I don't use ZODB, and hope never to do so ;)

L. Daniel Burr



From robert at gravina.com  Tue Jun 27 16:05:40 2006
From: robert at gravina.com (Robert Gravina)
Date: Wed, 28 Jun 2006 05:05:40 +0900
Subject: [Twisted-Python] A proposal for simple remote object
	editing	(Twisted and ZODB integration)
In-Reply-To: <op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
	<63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
	<op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <F0581A64-4F40-473A-A1E0-720D9075B7D4@gravina.com>

>> 2) Is my copying-across-the-dict a good enough solution, and I  
>> should just forget about the whole thing?
>>
>
> I think you really want ZEO, but I may be misunderstanding your aims.
>

Actually yes, that's exactly what I want. I've been wishing I had of  
used that but I got the impression it was designed for making Zope  
more scalable, not for writing GUI apps that need to share data.
http://www.zope.org/Products/ZEO/ZEOFactSheet

I need authentication etc. and found Zope too scary and geared  
towards web-development, came across Twisted and decided to go with  
that.

If there's any way I can use ZEO instead of Twisted PB and use  
Twisted for everything else, that would be perfect. I'll have to  
learn more about ZEO to see how this is done, but if anyone has any  
suggestions for this I'd love to hear about them.

[snip]

> As a person who uses Axiom for his current project, I say "Use  
> Axiom!".
> That said, you can't use Axiom with ZODB, or vice versa.  Axiom is a
> really great alternative to ZODB, and one that will work much more
> nicely with twisted, hence my endorsement of it.
>

Ah great... since my app is still in early stages it's not too hard  
to switch back to Axiom (I tried it out for a day, and liked it very  
much. Perhaps it will become Twisted's answer to object  
persistence)...  I wonder if using Axiom would make this problem of  
updating database-stored objects with lots of references to other  
objects after Copyables come back any easier? Or am I just being  
lazy? A good bit of introspecting rich code that traverses the  
__dict__ recursively might be all I need.

Robert



From nico at tekNico.net  Tue Jun 27 18:46:06 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 28 Jun 2006 00:46:06 +0200
Subject: [Twisted-Python] Re: A proposal for simple remote object editing
 (Twisted and ZODB integration)
In-Reply-To: <op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>	<63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
	<op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <44A1B52E.7010507@tekNico.net>

>> 3) I hear Zope 3 contains some kind of Twisted integration. For the
>> life of me I can't find any information about this on the web, and I
>> even bought a book on Zope 3 recently and the only reference to
>> Twisted is that you can use Twisted Web instead of Zope's ZServer to
>> service web requests.

Here are a few references to Twisted and Zope together, found a few months ago.

Diary for itamar - 9 Dec 2002
http://www.advogato.org/person/itamar/diary.html?start=15

TwistedZopeOpenSpaceTalk - PyCon 2004
http://www.zope.org/Members/adytumsolutions/pycon2004/TwistedZopeOpenSpaceTalk

Neckar Sprint - A Zope3 Sprint in Tuebingen, Germany, Oct. 6-9, 2005
http://www.zope.org/Wikis/DevSite/Projects/ComponentArchitecture/NeckarSprint

zasync 1.0: Zope Product + Twisted ZEO client
http://www.zope.org/Members/poster/zasync/zasync_1_0/zasync_1_0_nr

(There would be another one: I have the page in my archive, but it's
unreachable now, and zope.org is excluded from archive.org. That's one of
the niceties of using Firefox' ScrapBook extension, instead of simple
bookmarks. :-) )


> The twisted/zope integration is really just so that zope 3 can start
> using twisted as a server (web, ftp, etc.).  I don't think the zope
> community has any immediate plans to use twisted as a framework.
> 
> Jim Fulton has said he wants to get out of the server business, and
> twisted lets him do that.  I don't think he is particularly interested
> in using twisted to build his apps, as he already has his own framework.

An opinion definitely shared by at least Stephan Richter; see this log of
an exchange between me (tekNico) and him (srichter) on IRC:

IRC log of #zope3-dev for Wednesday, 2005-07-27
http://zope3.pov.lt/irclogs/%23zope3-dev.2005-07-27.log.html


> I don't have any interest in such a thing, personally, but then again,
> I don't use ZODB, and hope never to do so ;)

Some of the reasons why one may not want to use pickle, nor ZODB, are
touched upon in this interesting piece by Glyph:

What Happened to Atop?
http://divmod.org/trac/wiki/WhitherAtop


-- 
Nicola Larosa - http://www.tekNico.net/

Implementation of Microsoft SOAP, a protocol running over HTTP
precisely so it could bypass firewalls, should be withdrawn.
[...] It is exactly this feature-above-security mindset
that needs to go. -- Bruce Schneier, February 2002





From Tzahi.ML at gmail.com  Tue Jun 27 19:51:21 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Wed, 28 Jun 2006 02:51:21 +0300
Subject: [Twisted-Python] Mobile code using PB
Message-ID: <200606280251.22220.Tzahi.ML@gmail.com>

Hi,
I am looking for a way to have a mobile code feature using PB very similar to 
pyro. The idea is like this: There is a server and a client.
The client trust the server completly.
The server does not trust the client.
The client gets arbitrary classes from the server and if a module
of the class is missing it raises an exception that will ultimately
result in downloading the module and injecting it.
If the module exists locally (same ver or something like that)
do not download it.
Basically i can override the security options like so:
pb.globalSecurity.isModuleAllowed=\
        jelly.DummySecurityOptions().isModuleAllowed
    pb.globalSecurity.isClassAllowed=\
        jelly.DummySecurityOptions().isClassAllowed
    pb.globalSecurity.isTypeAllowed=\
        jelly.DummySecurityOptions().isTypeAllowed

If i call a remote method and the returned value is an unknown class,
i recieve importError as "failure" which i can handle and 
send the module to the client 

However, if i send an unknown class as a parameter for a remote
method, the exception at the remote side is handled behind the scene
and i can't seem to trap it. Though, i am getting the importError 
failure message on the calling side (so it is somehow manageable).

Is there something that already exists so i won't have to reinvent the wheel?
using this trust model, do i really need pb.copyable and pb.remotecopy?
I.e. i want to replace these with custom isModuleAllowed isClassAllowed, 
etc...

10x.

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From glyph at divmod.com  Tue Jun 27 20:10:31 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jun 2006 20:10:31 -0400
Subject: [Twisted-Python] Mobile code using PB
In-Reply-To: <200606280251.22220.Tzahi.ML@gmail.com>
Message-ID: <20060628001031.29014.1836889504.divmod.quotient.13021@ohm>



On Wed, 28 Jun 2006 02:51:21 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>Basically i can override the security options like so:

Why not just do Broker(security=PermitEverything()) on the client?  This is why SecurityOptions is parameterizeable.  You shouldn't have to monkey-patch anything.



From jarrod at vertigrated.com  Tue Jun 27 20:20:24 2006
From: jarrod at vertigrated.com (jarrod roberson)
Date: Tue, 27 Jun 2006 20:20:24 -0400
Subject: [Twisted-Python] Starting POP3 server as an application in a .tac
	file
Message-ID: <2389d4730606271720t47ffa441ue4f1e384ce64dbf1@mail.gmail.com>

anyone have a basic example of how this would look?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060627/c1e8603d/attachment.htm 

From moe at divmod.com  Tue Jun 27 21:50:19 2006
From: moe at divmod.com (Moe Aboulkheir)
Date: Wed, 28 Jun 2006 03:50:19 +0200
Subject: [Twisted-Python] Starting POP3 server as an application in a
	.tac file
In-Reply-To: <2389d4730606271720t47ffa441ue4f1e384ce64dbf1@mail.gmail.com>
Message-ID: <20060628015019.29014.1113220064.divmod.quotient.13057@ohm>



On Tue, 27 Jun 2006 20:20:24 -0400, jarrod roberson <jarrod at vertigrated.com> wrote:
>anyone have a basic example of how this would look?
>

This does some stuff you're probably not interesting in doing, but the general idea is the same: 

http://divmod.org/trac/browser/trunk/Quotient/xquotient/benchmarks/pop3server.tac



From Tzahi.ML at gmail.com  Wed Jun 28 04:43:16 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Wed, 28 Jun 2006 11:43:16 +0300
Subject: [Twisted-Python] Mobile code using PB
In-Reply-To: <20060628001031.29014.1836889504.divmod.quotient.13021@ohm>
References: <20060628001031.29014.1836889504.divmod.quotient.13021@ohm>
Message-ID: <200606281143.17408.Tzahi.ML@gmail.com>

On Wednesday 28 June 2006 03:10, glyph at divmod.com wrote:
> On Wed, 28 Jun 2006 02:51:21 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >Basically i can override the security options like so:
>
> Why not just do Broker(security=PermitEverything()) on the client?  This is
> why SecurityOptions is parameterizeable.  You shouldn't have to
> monkey-patch anything.

Thank you for your answer.
I am sorry, but i am fairly new to twisted. I am using the PBClientFactory
but it does not have any parameters.
Do you suggest to use Broker class instead somehow, because it looks
a lot more low level...

Also, the documentation says "RemoteCopy provides the methods that tell the 
Jelly layer how to create the local object from the incoming serialized 
state" and the same thing for copyable.  However, with security off,
i send classes with no pb.copyable and pb.remote. Does this mean they are
being serialized differently? unsecurely in the sense of being pickled instead
of jellied?
What is really the difference in stating the name module.classfoo in the 
isAllowed security options instead of using pb.copyable and pb.remotecopy.

The main problem is that if you want to send objects of classes that are
imports that is from some library then you cannot simply inherit the 
pb.copyable etc...

10x.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From ayuer.python at gmail.com  Wed Jun 28 05:07:14 2006
From: ayuer.python at gmail.com (Jia Liu)
Date: Wed, 28 Jun 2006 17:07:14 +0800
Subject: [Twisted-Python] Naive questions about how to do it twisted way.
Message-ID: <65665c910606280207l23514b4at7068a910492c6103@mail.gmail.com>

Hi,
  I have been follow twisted for like half a year now, I have read the doc
and the oreilly book, but i still cann't do some simple work in the twisted
way. Could someone give me a hint?
  Like today, i write this little code to follow my friends list on my msn
space, and get their friends list, so on and so on, and maybe at last I can
build a social relationship graph with it. The code is actually really
navie, here it goes. Sorry for the ugliness of my code, please help me make
it prettier:)
  Thanks. Appologize for my poor English.
Jia Liu

import re, sys, socket
import urllib
from sets import Set

socket.setdefaulttimeout = 10
re_buddy_pre = re.compile("href=\"(?:http://)?([^\.\"]+)\.spaces.msn.com",
re.IGNORECASE)  # http://nick.spaces.msn.com
re_buddy_post = re.compile("spaces.msn.com/members/([^\"\/]+)",
re.IGNORECASE) # http://spaces.msn.com/members/nick/

all_buddies = Set()
relation_dict = {}

def get_buddy(page, buddy=None):
    #print page
    print buddy
    global all_buddies
    buddies_of_this_page = Set()
    for re_buddy in [re_buddy_pre, re_buddy_post]:
        for m in re_buddy.finditer(page):
            buddies_of_this_page.add(m.group(1))
    relation_dict[buddy] = buddies_of_this_page
    return buddies_of_this_page

def got(url, buddy=None):
    f = urllib.urlopen(url)
    return f.read(), buddy

URL = "http://ayueer.spaces.msn.com/"
(page, buddy) = got(URL, "ayueer")

buddies_of_this_page = get_buddy(page, buddy)
all_buddies.add("ayueer")
next_to_visit = buddies_of_this_page.difference(all_buddies)

try:
    while 1:
        #reactor.run()
        #multi_buddy_factory(buddies_of_this_page)
        for buddy in next_to_visit:
            url = "http://"+buddy+".spaces.msn.com/"
            try:
                (page, buddy) = got(url, buddy)
                buddies_of_this_page.update(get_buddy(page, buddy))
            except:
                pass
        all_buddies.update(next_to_visit)
        next_to_visit = buddies_of_this_page.difference(all_buddies)
except KeyboardInterrupt:
    print all_buddies


-- 
???????????????
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060628/0c2b379b/attachment.htm 

From paul-lists at perforge.com  Wed Jun 28 07:50:52 2006
From: paul-lists at perforge.com (Paul G)
Date: Wed, 28 Jun 2006 07:50:52 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com>
Message-ID: <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>


----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Sunday, June 25, 2006 2:20 PM
Subject: [Twisted-Python] Need words of wisdom regarding PB


>I have a problem to solve: I need to get files from one machine to
> another. I had thought about all the obvious solutions (and implemented
> some of them); for instance adding an FTP server to my Twisted services
> and using a client. I thought about doing the file transfer with XML-RPC
> and even SOAP. And I even thought of WebDav.
>
> I started reading about PB and thought it might be useful. I thought
> about building a "remote" class that simulates open and all its
> functions, like read, write, close, etc.
>
> The more I thought about it the more I thought it cool and the way to do
> it. That got me thinking that I must be missing something. I am curious
> about what you might think of this approach. Is there another better way?

i implemented file transfer with an optional intermediate gzip stage using 
pb a long while ago. if you're dealing with fairly low latency, a single pb 
connection is fine; for higher latencies, you'll want to multiplex multiple 
pb connections (this has to do with tcp, not pb). with my quick hack, i was 
able to saturate a fast-e with virtually no significant cpu utilization - 
the disk io and the network were the bottlenecks.

-p 




From eprparadocs at gmail.com  Wed Jun 28 08:03:57 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 28 Jun 2006 08:03:57 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com> <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
Message-ID: <44A2702D.10705@gmail.com>

Paul,

 Thanks for the information. I hadn't thought about multiple pb
connections, but I might even for my low-latency environment. I can have
files that range from very small to very very large and getting them
transferred in a reasonable period of time might might require many
connections at once.

 In your solution did you just allow the client to "divide" up the work
or was there something else you did?

Chaz

Paul G wrote:
> 
> ----- Original Message ----- From: "Chaz." <eprparadocs at gmail.com>
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Sunday, June 25, 2006 2:20 PM
> Subject: [Twisted-Python] Need words of wisdom regarding PB
> 
> 
>> I have a problem to solve: I need to get files from one machine to
>> another. I had thought about all the obvious solutions (and implemented
>> some of them); for instance adding an FTP server to my Twisted services
>> and using a client. I thought about doing the file transfer with XML-RPC
>> and even SOAP. And I even thought of WebDav.
>>
>> I started reading about PB and thought it might be useful. I thought
>> about building a "remote" class that simulates open and all its
>> functions, like read, write, close, etc.
>>
>> The more I thought about it the more I thought it cool and the way to do
>> it. That got me thinking that I must be missing something. I am curious
>> about what you might think of this approach. Is there another better way?
> 
> i implemented file transfer with an optional intermediate gzip stage
> using pb a long while ago. if you're dealing with fairly low latency, a
> single pb connection is fine; for higher latencies, you'll want to
> multiplex multiple pb connections (this has to do with tcp, not pb).
> with my quick hack, i was able to saturate a fast-e with virtually no
> significant cpu utilization - the disk io and the network were the
> bottlenecks.
> 
> -p
> 




From paul-lists at perforge.com  Wed Jun 28 08:11:08 2006
From: paul-lists at perforge.com (Paul G)
Date: Wed, 28 Jun 2006 08:11:08 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk><4496B139.1070300@gmail.com>
	<4497161B.5090709@imperial.ac.uk> <44975CDA.8070704@gmail.com>
Message-ID: <14bbc01c69aab$f07173d0$6302a8c0@dcore>


----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Phil Mayers" <p.mayers at imperial.ac.uk>
Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, June 19, 2006 10:26 PM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


> I've used Spread communication before. While it is a nice system is does
> have some shortcomings. First, it is a pretty costly system in terms of
> resources. Secondly, it will only support a hundred or so computers (too
> small for my application).

can you elaborate on this please? ideally, i'd like to see some reasonably 
hard data for this. not implying that you're wrong, mind you, but i was 
under a completely different impression wrt resource utilization (albeit 
without extensive firsthand experience).

-p 




From Tzahi.ML at gmail.com  Wed Jun 28 08:39:49 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Wed, 28 Jun 2006 15:39:49 +0300
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com> <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
Message-ID: <200606281539.50051.Tzahi.ML@gmail.com>

On Wednesday 28 June 2006 14:50, Paul G wrote:
> i implemented file transfer with an optional intermediate gzip stage using
> pb a long while ago. if you're dealing with fairly low latency, a single pb
> connection is fine; for higher latencies, you'll want to multiplex multiple
> pb connections (this has to do with tcp, not pb). with my quick hack, i was
> able to saturate a fast-e with virtually no significant cpu utilization -
> the disk io and the network were the bottlenecks.

I am also very much interested in compressing the underlying transfers using
PB. Where can we get the hack? :)
I am looking for something that is done after serialization so all features of 
jelly remains. I.e., just before transfer, compress the data. Preferably with 
some control, i.e., with each message i send i want to be able to say
if to compress and to what level of compression.

Currently i have to circumvent jelly by pickle and compress but i can only
do that when server sends to client since the client trusts the server. 
However the server does not trust the client and thus, cannot allow pickled 
objects to be unserialized.

maybe something like callRemoteCompressed...

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From eprparadocs at gmail.com  Wed Jun 28 08:52:22 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 28 Jun 2006 08:52:22 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <14bbc01c69aab$f07173d0$6302a8c0@dcore>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk><4496B139.1070300@gmail.com>
	<4497161B.5090709@imperial.ac.uk> <44975CDA.8070704@gmail.com>
	<14bbc01c69aab$f07173d0$6302a8c0@dcore>
Message-ID: <44A27B86.3020706@gmail.com>

If you go to the Spread website and read the documentation and source
code it mentions both the number of computer limitations and the
performance hit. Secondly, the system uses a static file to list the
machines that participate in the communication.

First, it won't support more a 200 computers, or so. It appears that
deep in the bowels of the code is a byte sized field! The code is pretty
convoluted, so I never did manage to find out what specifically was the
field they mentioned. If you are going to build a system that involves a
hundred machines or less you are probably alright.

Secondly, as for the performance a search will point out how costly
reliable group communications are in general. I would suggest you load
the software up and run the demo, tracking the messaging passing with
Ethereal. Once this begins to scalable upwards to hundreds of machines
you will see the problem.

Third, the configuration of a Spread cluster is fixed based on a config
file. This was a problem for me; I wanted my system to scale upward by
just adding a machine to the cluster and not having to change a config
file and rebooting the daemon machines! It doesn't make for a very
reliable approach (after all if IM systems could do it why couldn't
non-IM systems?)

It wasn't until I hit the boundaries of the Spread system did I begin to
think about all that was involved in designing a highly reliable, highly
scalable system. In sketching out the design of a reliable group
communication system similar to Spread did I begin to see the weaknesses
in the solution.

Now if you think Spread is the way to go, and it might be for small
clusters of machines, you should do a little research into things like
the SWIM protocol (of which I am doing a twisted implementation right
now and will be releasing to the community) or other approaches to
group-like communication (do a google of overlay networks, which I will
be also releasing). You will find a lot of relevant information. In fact
they will probably lead you to a group at Cornell (and a few people
there) and some people at the U of I at Champaign.

So, as I said Spread is fine for small clusters of machines with a fixed
deployment. It has tolerable performance and overhead. If you find that
you want to scalable upwards of 200 machines or up to thousands, Spread
won't cut it.

For those of you that like reading academic stuff that is grounded in
reality point your browsers to google and find a copy of:

A Scalable Services Architecture
By Tudor Marian, Ken Birman and Robbert van Renesse
All in the Dept of CS at Cornell

(You might recognize the name Birman as the guy that started a lot of
this stuff...his first system was called Isis)

For what it is worth,
Charles "Chaz" Wegrzyn


Paul G wrote:
> 
> ----- Original Message ----- From: "Chaz." <eprparadocs at gmail.com>
> To: "Phil Mayers" <p.mayers at imperial.ac.uk>
> Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Monday, June 19, 2006 10:26 PM
> Subject: Re: [Twisted-Python] Twisted-friendly Message bus
> 
> 
>> I've used Spread communication before. While it is a nice system is does
>> have some shortcomings. First, it is a pretty costly system in terms of
>> resources. Secondly, it will only support a hundred or so computers (too
>> small for my application).
> 
> can you elaborate on this please? ideally, i'd like to see some
> reasonably hard data for this. not implying that you're wrong, mind you,
> but i was under a completely different impression wrt resource
> utilization (albeit without extensive firsthand experience).
> 
> -p
> 




From exarkun at divmod.com  Wed Jun 28 09:34:35 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Jun 2006 09:34:35 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <44A27B86.3020706@gmail.com>
Message-ID: <20060628133435.29014.1692196930.divmod.quotient.13705@ohm>

On Wed, 28 Jun 2006 08:52:22 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>If you go to the Spread website and read the documentation and source
>code it mentions both the number of computer limitations and the
>performance hit. Secondly, the system uses a static file to list the
>machines that participate in the communication.

Just to clarify in case anyone is confused, here is the Spread website:

  http://www.spread.org/

This is not related to the twisted.spread package.

Jean-Paul



From bruce at cubik.org  Wed Jun 28 10:56:53 2006
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 28 Jun 2006 08:56:53 -0600
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <44A298B5.3090900@cubik.org>

Phil Mayers wrote:
> I've run into "this service needs to know about this event from this 
> other service" once too often. It's message bus time, baby.

I ran into similar problems at work where we had been using PB but found 
that it did not perform to expectation (or requirement).

I've replaced the bulk of our PB communications with a STOMP[1] protocol 
implementation to talk to with ActiveMQ[2] servers.  This has been great 
and I can easily push over 10000 messages/second now.

And by switching over to ActiveMQ, we got a lot of other interesting 
features (much like what Spread might provide I guess), like topics 
(many to many communication rather than point to point), and their 
reliability and persistence features.

I did have to write my own STOMP protocol implementation as the existing 
one for Python is not up to snuff.  I may be able to release it back to 
the ActiveMQ people, but I'm not entirely sure yet.

And sure .. it meant installing Java.  But it also meant having 
something that worked well, performed beautifully, and gave me new 
features that are letting me re-architect our software to greatly 
simplify it and make it more reliable.

  - Bruce

[1] http://www.activemq.org/site/stomp.html
[2] http://www.activemq.org/site/home.html



From sidius at ucla.edu  Wed Jun 28 14:22:06 2006
From: sidius at ucla.edu (Richard Strong)
Date: Wed, 28 Jun 2006 11:22:06 -0700
Subject: [Twisted-Python] Creating a proxy between a flash client and
	xmlBlaster
Message-ID: <44A2C8CE.40309@ucla.edu>

Hi all,

I am attempting to build a proxy between xmlBlaster and a Flash client 
using an XmlSocket on the client side.
My cludge was going to be the twisted library. Essentially I want to 
have the update function of xmlBlaster
call basic.LineReceiver.sendLine(...) and the lineReceived function of 
twisted to call self.msgPublish.
I have a through line working from the Flash client to xmlBlaster, but 
cannot get a message from
xmlBlaster to Flash (even after a Flash client has successfully logged 
in.). Any help would be
divine.  Here is a copy of the source code for the server that has been 
created:

from const import *
import sys
import os
import time
import signal
import threading
sys.path.insert(0, CLIENTPATH)
import bistBlast
from twisted.protocols import basic
from twisted.internet import reactor, protocol
from twisted.internet.protocol import Protocol

class Proxy(bistBlast.bistBlast,basic.LineReceiver, threading.Thread):
   delimiter = '\0'
   def __init__(self):
             print 
"init======================================================>"
       #bistBlast.bistBlast.__init__(self, 8009)

                     def update(self, sessionId, key, content, qos):
       print """__recieved message__ """
           print "__key__", key
           print "__content__\n", content.data
           print "__qos__", qos
       #print ""
       self.sendLine('<MESSAGE USER="John" TEXT="Hello, my name is 
John!" />')
       #self.message('<MESSAGE USER="John" TEXT="Hello, my name is 
John!" />')
       #self.sendLine(key)
       return ""      
   def lineReceived(self,line):
 
       if line == "<policy-file-request/>":
           print "\t sending policy file"
           self.sendLine("<?xml 
version=\"1.0\"?><cross-domain-policy><allow-access-from domain=\"*\" 
to-ports=\"8007\" /></cross-domain-policy>")
           #bistBlast.bistBlast.__init__(self, 8009)
           #self.msgSubscribe("test")
       else:
                     print "LINE RECEIVED"
           try:
               bistBlast.bistBlast.__init__(self, 8009)
               self.msgSubscribe("test")
           except:
               print "already connected"
           self.msgPublish("<key oid='test' />", "<what />")
           self.sendLine('<MESSAGE USER="John" TEXT="Hello, my name is 
John!" />')

   def sendLine(self, msg):
       print "Sending Message"
       basic.LineReceiver.sendLine(self, msg)
       print "Sent Message"
         def message(self, msg):
       self.transport.write(msg + '\n' + delimiter)
       print msg + '\n'
      # Main
if __name__ == '__main__':

   ProxyFactory = protocol.ServerFactory()
   ProxyFactory.protocol = Proxy
   reactor.listenTCP(8007, ProxyFactory)
   reactor.run()



From me at kbrooks.ath.cx  Wed Jun 28 12:06:45 2006
From: me at kbrooks.ath.cx (The Wiz)
Date: Wed, 28 Jun 2006 12:06:45 -0400
Subject: [Twisted-Python] Twisted - tutorial links
Message-ID: <44A2A915.8040001@kbrooks.ath.cx>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I want to try Twisted. any links to tutorials? and when I say
"tutorials", I mean MORE THAN ONE tutorial.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFEoqkUA7t0hsXXeiERAsu/AKClQF2bHLnBNADznV90+rRV+Ze85ACfULkc
8XphES8v5v4whipvNw5fj5k=
=6XkZ
-----END PGP SIGNATURE-----



From db3l at fitlinxx.com  Wed Jun 28 16:56:49 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 28 Jun 2006 16:56:49 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
	<E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
Message-ID: <uk671gfse.fsf@fitlinxx.com>

Robert Gravina <robert at gravina.com> writes:

> Thanks, that is exactly what I am trying to do (return object
> remotely, edit it, re-use it in a subsequent call back to the
> server). What kind of comparison do you do then? Do you compare all
> attributes? By the way, what is an id() comparison? As far as I know
> Python compares to see if the instances (i.e. memory locations) are
> equal.

Precisely what comparison we do depends on the object in question.
Yes, in many cases it's more or less a straight __dict__ comparison
(sans the "_id" attribute), but in others there are only a few
"identity" attributes that we consider important for comparison
purposes, or that need special processing.  Such as a username object
equality test ignoring case of the username, or an object with date
fields that might round trip through a database so we round to a
precision that we consider equal.

So for example, our Password object contains, for equality testing:

    def __hash__(self):
        return hash(self._lvalue)

    def __eq__(self,other):
        if isinstance(other,Password):
            return self._lvalue == other._lvalue
        elif isinstance(other,types.StringTypes):
            return self._lvalue == other.lower()
        else:
            return False
    def __ne__(self,other):
        return not self.__eq__(other)

(_lvalue is an internally lowercased version of the current value)

Note that we also chose to permit a direct string comparison with a
password object, due to how it is often used to validate input, but most
other objects can only compare equally to others of their type.

A more blind __dict__ comparison (here for a FanClub object of ours)
might go like:

    def __eq__(self,other):
        if isinstance(other,FanClub):
            d1 = self.__dict__.copy()
            d2 = other.__dict__.copy()
            try:
                del d1['_id']
            except:
                pass
            try:
                del d2['_id']
            except:
                pass
            return d1 == d2
        else:
            raise NotImplementedError
    def __ne__(self,other):
        return not self.__eq__(other)

In general, just implement the rules as appropriate for your object.
Don't forget that if you are imposing rules on the equality - such as
our case insensitive username object above - you want to match that
with an appropriate __hash__ too, unless the object will never be used
as a dictionary key.

> > As it turns out, we do also embed an "_id" attribute within the
> > objects (an auto-generated UUID) so we can detect collisions
> > (two clients attempting to modify the same object), but for general
> > comparison purposes outside of that collision check, we exclude the
> > _id attribute.
> >
> 
> I've been looking around trying to find some good code for generating
> IDs, but most snippets I can find are accompanied by post after post
> on how that generation technique may fail under certain conditions.

I ran into a similar issue, and we ended up pretty much rolling our
own that at least had our own acceptable conditions.  It uses ctypes
to wrap either the native Win32 call on Windows or libuuid on *nix
(we've used it under FreeBSD and Linux).  So it needs ctypes, and
libuuid available for *nix.  Note that the Win32 call pre-Win2K
generates an address based UUID, while 2K+ defaults to random.  We've
used it for Python 2.2+.  It falls back to an ASPN-based recipe worst
case, but that generates UUIDs that aren't DCE conforming, so we warn
to stderr in that scenario.  I'll attach the generator class below if
it helps.

Since we wrote ours, there have been some other recent UUID generation
efforts in Python (e.g., http://zesty.ca/python/uuid.py) that seem
quite functional, but we didn't have incentive to move.

In terms of synchronizing the re-transmitted copyable with an existing
ZODB reference though, that still sounds like it may require some
extra work or index keeping, unless you already have a way to locate
the current internal copy of the object on the server side based on
the copy supplied in the client request.  Once you've got the server
copy then the above discussion can be used to determine if a change
has been made.

-- David

          - - - - - - - - - - - - - - - - - - - - - - - - -


class _UUIDGenerator(object):
    """Internal class used to contain state for UUID generation.  Selects
    the appropriate platform specific approach to UUID generation, preferring
    to use appropriate external UUID routines if available, otherwise falling
    back to a non-standard internal mechanism.

    An instance of this class generates UUIDs by being called - returning
    the 16-byte buffer containing the UUID as raw data."""

    def __init__(self):

        # We attempt to reference an appropriate platform routine for
        # UUID generation, and create a generation function to use it,
        # referencing that function as the "_generator" attribute of this
        # instance.  If anything goes wrong during the process, we fall
        # back to a pure Python implementation
        try:
            import ctypes, struct

            if sys.platform == 'win32':
                uuidgen = ctypes.windll.rpcrt4.UuidCreate
            else:
                uuidgen = ctypes.cdll.LoadLibrary('libuuid.so').uuid_generate

            # Both of these platform functions fill in a 16-byte block, so
            # we create a single buffer to be used on each generation.  Keep
            # in the instance so it will be available when accessed by the
            # generator function later.
            self.buffer = ctypes.c_buffer(16)

            # The generation function calls the platform routine to fill in
            # the buffer.  In the Windows case, the buffer is structured as
            # separate fields (the UUID struct) in native byte order, so we
            # use struct to unpack/repack the fields into network order to
            # conform to the opaque buffer UUID will be expecting.
            def _generator():
                uuidgen(self.buffer)
                if sys.platform == 'win32':
                    return struct.pack('>LHH8s',
                                       *struct.unpack('LHH8s',self.buffer))
                else:
                    return self.buffer.raw

        except:
            # If we fallback to this method, generate a warning for now 
            # (which will occur at import time) just as a head's up.
            sys.stderr.write('Warning: '
                             'Falling back to internal UUID generation\n')
            
            def _generator():
                # The following code was borrowed from ASPN, adjusted to not
                # use any additional option arguments.  Note that this does
                # not generate UUIDs conforming to the DCE 1.1 specification.
                import time, random, md5

                t = long( time.time() * 1000 )
                r = long( random.random()*100000000000000000L )
                try:
                    a = socket.gethostbyname( socket.gethostname() )
                except:
                    # if we can't get a network address, just imagine one
                    a = random.random()*100000000000000000L
                data = str(t)+' '+str(r)+' '+str(a)
                return md5.md5(data).digest()

        self._generator = _generator

    def __call__(self):
        """Return a buffer containing a newly generated UUID"""
        return self._generator()




From Tzahi.ML at gmail.com  Wed Jun 28 17:42:41 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 00:42:41 +0300
Subject: [Twisted-Python] Compressing PB communication
Message-ID: <200606290042.42056.Tzahi.ML@gmail.com>


I am interested in compressing the PB objects after serialization and 
unpacking when received at the other side.
I a using the pb.PBClientFactory() and ServerFactory from the documentation. 
Where is the most proper place to hack this?
What is possible?
I need to do this after the object becomes a string so i won't have to pickle
a string.
Is it possible to do something like factory.protocol.serialize=mySerialize
and in mySerialize i use the banana.encode function to encode the list of 
jelly myself and return there a new list that contains the now ziped and 
encoded value and let it go as it were.
This way i am not interfering with the jelly logic.

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From exarkun at divmod.com  Wed Jun 28 19:00:29 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Jun 2006 19:00:29 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606290042.42056.Tzahi.ML@gmail.com>
Message-ID: <20060628230029.29014.61608043.divmod.quotient.14310@ohm>

On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>
>I am interested in compressing the PB objects after serialization and
>unpacking when received at the other side.
>I a using the pb.PBClientFactory() and ServerFactory from the documentation.
>Where is the most proper place to hack this?
>What is possible?
>I need to do this after the object becomes a string so i won't have to pickle
>a string.
>Is it possible to do something like factory.protocol.serialize=mySerialize
>and in mySerialize i use the banana.encode function to encode the list of
>jelly myself and return there a new list that contains the now ziped and
>encoded value and let it go as it were.
>This way i am not interfering with the jelly logic.
>

Attached a demonstration of doing this.

However, I doubt it's actually a useful idea.

Jean-Paul
-------------- next part --------------
A non-text attachment was scrubbed...
Name: zip.py
Type: text/x-python
Size: 2019 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060628/dc4cfb73/attachment.py 

From glyph at divmod.com  Wed Jun 28 19:21:36 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Jun 2006 19:21:36 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606290042.42056.Tzahi.ML@gmail.com>
Message-ID: <20060628232136.29014.1512691590.divmod.quotient.14333@ohm>



On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>I am interested in compressing the PB objects after serialization and
>unpacking when received at the other side.

Have you actually measured the size of the PB data you are thinking about compressing?  PB's serialization tends to be extremely tight.



From teratorn at twistedmatrix.com  Thu Jun 29 01:00:26 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Thu, 29 Jun 2006 15:00:26 +1000
Subject: [Twisted-Python] Twisted - tutorial links
In-Reply-To: <44A2A915.8040001@kbrooks.ath.cx>
References: <44A2A915.8040001@kbrooks.ath.cx>
Message-ID: <op.tbv5i0l3y3d107@localhost.localdomain>

On Thu, 29 Jun 2006 02:06:45 +1000, The Wiz <me at kbrooks.ath.cx> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> I want to try Twisted. any links to tutorials? and when I say
> "tutorials", I mean MORE THAN ONE tutorial.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2.2 (GNU/Linux)
>
> iD8DBQFEoqkUA7t0hsXXeiERAsu/AKClQF2bHLnBNADznV90+rRV+Ze85ACfULkc
> 8XphES8v5v4whipvNw5fj5k=
> =6XkZ
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

What's with these questions? You already asked essentially the same  
question in another thread, and you received detailed responses. Please  
stop adding noise to the mailing list.

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows



From Tzahi.ML at gmail.com  Thu Jun 29 02:41:09 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 09:41:09 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060628232136.29014.1512691590.divmod.quotient.14333@ohm>
References: <20060628232136.29014.1512691590.divmod.quotient.14333@ohm>
Message-ID: <200606290941.10479.Tzahi.ML@gmail.com>

On Thursday 29 June 2006 02:21, glyph at divmod.com wrote:
> On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >I am interested in compressing the PB objects after serialization and
> >unpacking when received at the other side.
>
> Have you actually measured the size of the PB data you are thinking about
> compressing?  PB's serialization tends to be extremely tight.

Yes, it's about 20megabytes of data (~20000 records). 
Although, each client only get this once when they log on
and each time their cache is wiped.
This is one of the reasons i backed off using
a solution like XUL together with XMLRPC solutions and javascript, 
it would not hold (i tried). My only choice is to use pyGTK with
either pyro/twisted and in the end i decided on going with twisted
because of security concerns that are weighted with performance. 
This is why i was very insistent on compressing after serialization, 
so all the security features will be kept intact.
10x.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From Tzahi.ML at gmail.com  Thu Jun 29 04:21:40 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 11:21:40 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060628230029.29014.61608043.divmod.quotient.14310@ohm>
References: <20060628230029.29014.61608043.divmod.quotient.14310@ohm>
Message-ID: <200606291121.40954.Tzahi.ML@gmail.com>

10x!, exactly what i needed
It is useful for very big transfers (around 20mbytes).
The clients have a limited bandwidth of 750kbits or less
so it would be very useful to compress very big messages.

Which leads me to ask if it is possible to associate a .write call
to a specific callRemote or return value? or at least Mark the data
i wish to send, to be compressed after serialization in the callRemote.
Obviously there is no need to compress everything.
More so, it is possible to add meta information per call, like encryption
or tags for tracing etc... or if the server is loaded or, for example,
use a server in between to handle compression by looking at the meta
tag. Could be very useful. I'll need to do some testing to see what
is better.

On Thursday 29 June 2006 02:00, Jean-Paul Calderone wrote:
> On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >I am interested in compressing the PB objects after serialization and
>
> Attached a demonstration of doing this.
>
> However, I doubt it's actually a useful idea.
>
> Jean-Paul

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From eprparadocs at gmail.com  Thu Jun 29 10:47:10 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 29 Jun 2006 10:47:10 -0400
Subject: [Twisted-Python] URLLIB under twisted...
Message-ID: <44A3E7EE.905@gmail.com>

I was wondering if anyone knows of a URLLIB like facility under Twisted?

Chaz



From me at kbrooks.ath.cx  Thu Jun 29 08:05:03 2006
From: me at kbrooks.ath.cx (The Wiz)
Date: Thu, 29 Jun 2006 08:05:03 -0400
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <44A3E7EE.905@gmail.com>
References: <44A3E7EE.905@gmail.com>
Message-ID: <44A3C1EF.1090508@kbrooks.ath.cx>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

twisted.web.client.getPage, methinks

Chaz. wrote:
> I was wondering if anyone knows of a URLLIB like facility under Twisted?
> 
> Chaz
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFEo8HuA7t0hsXXeiERApxIAJ0eecHQoTZjTbsiSEkUhOszyARRTgCgxjkb
0GGEktzIVQZh13vHgPACYOE=
=aog7
-----END PGP SIGNATURE-----



From moe at divmod.com  Thu Jun 29 12:43:17 2006
From: moe at divmod.com (Moe Aboulkheir)
Date: Thu, 29 Jun 2006 18:43:17 +0200
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <44A3E7EE.905@gmail.com>
Message-ID: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>

On Thu, 29 Jun 2006 10:47:10 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I was wondering if anyone knows of a URLLIB like facility under Twisted?

twisted.web.client (see getPage() and HTTPPageGetter)



From eprparadocs at gmail.com  Thu Jun 29 13:25:06 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 29 Jun 2006 13:25:06 -0400
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>
References: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>
Message-ID: <44A40CF2.6000304@gmail.com>

Moe Aboulkheir wrote:
> On Thu, 29 Jun 2006 10:47:10 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>> I was wondering if anyone knows of a URLLIB like facility under Twisted?
> 
> twisted.web.client (see getPage() and HTTPPageGetter)
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

twisted.web.client will getPage() pull down files via FTP as well? I
don't see that any where in the documentation, so I am assuming no. Am I
wrong?

Chaz



From glyph at divmod.com  Thu Jun 29 14:33:33 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 14:33:33 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606290941.10479.Tzahi.ML@gmail.com>
Message-ID: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>

On Thu, 29 Jun 2006 09:41:09 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>On Thursday 29 June 2006 02:21, glyph at divmod.com wrote:

>> Have you actually measured the size of the PB data you are thinking about
>> compressing?  PB's serialization tends to be extremely tight.

>Yes, it's about 20megabytes of data (~20000 records).

You are aware that PB has a 640kb-per-message limit, right?  You'll have to be breaking up that data set.



From glyph at divmod.com  Thu Jun 29 14:37:50 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 14:37:50 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606291121.40954.Tzahi.ML@gmail.com>
Message-ID: <20060629183750.29014.400839100.divmod.quotient.15409@ohm>



On Thu, 29 Jun 2006 11:21:40 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>More so, it is possible to add meta information per call, like encryption
>or tags for tracing etc... or if the server is loaded or, for example,
>use a server in between to handle compression by looking at the meta
>tag. Could be very useful. I'll need to do some testing to see what
>is better.

No.  PB doesn't have any facility like that (nor for per-message compression).  It tries to abstract the wire as much as possible; its communication model is between objects witth methods, not byte streams or message processors.

You could probably add a type-byte to jelly to do something like this but I certainly don't have the motivation personally :).  Patches accepted...




From Tzahi.ML at gmail.com  Thu Jun 29 15:01:22 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 22:01:22 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
Message-ID: <200606292201.22504.Tzahi.ML@gmail.com>

On Thursday 29 June 2006 21:33, glyph at divmod.com wrote:
> On Thu, 29 Jun 2006 09:41:09 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >On Thursday 29 June 2006 02:21, glyph at divmod.com wrote:
> >> Have you actually measured the size of the PB data you are thinking
> >> about compressing?  PB's serialization tends to be extremely tight.
> >
> >Yes, it's about 20megabytes of data (~20000 records).
>
> You are aware that PB has a 640kb-per-message limit, right?  You'll have to
> be breaking up that data set.

No, that is new to me. I cannot break it up. 
can it be done using that writeSequence or Write in the ProtocolWrapper? 
I don't want to handle this on the application/PB level.
I can see though that this is confined to the banana.py and cbanana,
i can change it there as a last resort, right?
640kb looks arbitrary to me, times is changing, what was considered
large in the past is small in the present. At the very least it should be 
configurable.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From itamar at itamarst.org  Thu Jun 29 15:31:17 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Jun 2006 15:31:17 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606292201.22504.Tzahi.ML@gmail.com>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
	<200606292201.22504.Tzahi.ML@gmail.com>
Message-ID: <1151609477.6005.12.camel@localhost.localdomain>

On Thu, 2006-06-29 at 22:01 +0300, Tzahi Fadida wrote:

> I don't want to handle this on the application/PB level.

twisted.spread.util.Pager and subclasses thereof will do it for you.






From Tzahi.ML at gmail.com  Thu Jun 29 17:34:18 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Fri, 30 Jun 2006 00:34:18 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <1151609477.6005.12.camel@localhost.localdomain>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
	<200606292201.22504.Tzahi.ML@gmail.com>
	<1151609477.6005.12.camel@localhost.localdomain>
Message-ID: <200606300034.19124.Tzahi.ML@gmail.com>

On Thursday 29 June 2006 22:31, Itamar Shtull-Trauring wrote:
> On Thu, 2006-06-29 at 22:01 +0300, Tzahi Fadida wrote:
> > I don't want to handle this on the application/PB level.
>
> twisted.spread.util.Pager and subclasses thereof will do it for you.
First, the objects themselves hold , for a example, a list of records.
The records themselves are probably never going to exceed 640kb.
Looking at banana it looks at the string types per field. I.e. even if the 
message is 1gb but each field in the message, like a list of strings 
[str1,str2,...] does not exceed 640kb then there is no problem, right?

Assumming there is a problem:
I don't see how using Pager, going to not involve circumventing a PB
call. This should be done under the level of performing a call to the other 
side. As i said, i cannot break the arbitrary objects i am sending since i 
cannot predict each and every one of them in advance.
The proper way to do it, looks to me in the underlying communication.
I think that what should have been done was to send the size of the transfer
in advance and only then say "ok, this transfer is going to be over 640kb
don't want it." Or " ok the transmission has exceeded 640kb => error"
And, according to this number and policy i enforce, limiting the size of the 
expanded message, pass a parameter to banana.
For now, i think that i will set the limit parameter for banana.py
pb.banana.SIZE_LIMIT=20*1024*1024 
however, for cBanana i will have to either hardwire it or change it to include
it as a parameter. This is not a variable in cBanana, it just says 640*1024
instead of SIZE_LIMIT.
How can i pass parameters to cBanana (at least at initialization time),
i am not sure if it is even on.
Though i am seeing it in the directory:
/usr/lib/python2.4/site-packages/twisted/spread/cBanana.so
Maybe there should be something like pb.changeMessageSizeLimit(numBytes)

>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From paul-lists at perforge.com  Thu Jun 29 20:15:45 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 20:15:45 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com> <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
	<44A2702D.10705@gmail.com>
Message-ID: <1509501c69bda$54e99d90$6302a8c0@dcore>

chaz,

quick note: please don't top post (in replies to me, anyway). just common 
courtesy.

in my context, the solution was meant as a synchronization method with some 
application-level logic to be used instead of rsync (i didn't need 
differencing and needed some complicated candidacy logic). the pb client 
simply opened multiple connections and sent data chunks labelled with chunk 
id and object id, multiplexed over the connection pool, with the chunks 
being pulled out of a queue that a threadpool reading from disk and 
optionally gzipping data was writing to. i didn't need to write logic to 
grow the connection pool to maximize bandwidth (i easily saturated a 
fast-e), but that would be trivial.

note: i do not advocate doing this unless there is a very good reason 
existing tools won't work for your application. reinventing the wheel makes 
baby jesus cry.

-p

----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Paul G" <paul-lists at perforge.com>
Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Wednesday, June 28, 2006 8:03 AM
Subject: Re: [Twisted-Python] Need words of wisdom regarding PB


> Paul,
>
> Thanks for the information. I hadn't thought about multiple pb
> connections, but I might even for my low-latency environment. I can have
> files that range from very small to very very large and getting them
> transferred in a reasonable period of time might might require many
> connections at once.
>
> In your solution did you just allow the client to "divide" up the work
> or was there something else you did?
>
> Chaz
>
> Paul G wrote:
>>
>> ----- Original Message ----- From: "Chaz." <eprparadocs at gmail.com>
>> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
>> Sent: Sunday, June 25, 2006 2:20 PM
>> Subject: [Twisted-Python] Need words of wisdom regarding PB
>>
>>
>>> I have a problem to solve: I need to get files from one machine to
>>> another. I had thought about all the obvious solutions (and implemented
>>> some of them); for instance adding an FTP server to my Twisted services
>>> and using a client. I thought about doing the file transfer with XML-RPC
>>> and even SOAP. And I even thought of WebDav.
>>>
>>> I started reading about PB and thought it might be useful. I thought
>>> about building a "remote" class that simulates open and all its
>>> functions, like read, write, close, etc.
>>>
>>> The more I thought about it the more I thought it cool and the way to do
>>> it. That got me thinking that I must be missing something. I am curious
>>> about what you might think of this approach. Is there another better 
>>> way?
>>
>> i implemented file transfer with an optional intermediate gzip stage
>> using pb a long while ago. if you're dealing with fairly low latency, a
>> single pb connection is fine; for higher latencies, you'll want to
>> multiplex multiple pb connections (this has to do with tcp, not pb).
>> with my quick hack, i was able to saturate a fast-e with virtually no
>> significant cpu utilization - the disk io and the network were the
>> bottlenecks.
>>
>> -p
>>
> 




From paul-lists at perforge.com  Thu Jun 29 20:18:14 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 20:18:14 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com><449ED3E9.40802@gmail.com>
	<14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
	<200606281539.50051.Tzahi.ML@gmail.com>
Message-ID: <1509c01c69bda$adf26e80$6302a8c0@dcore>

tzahi,

it saddens me to say that you can't get it. the reason is simple: i can't 
get it either. i'd erroneously thought the code was backed up before i wiped 
a box, but that was not the case :( it is now lost, along with some other 
semi-useful stuff.

with that said, i don't think it would've been useful for what you were 
attempting - i was compressing the data before sending it over pb, while you 
seem to be interested in doing this automagically at the pb or transport 
level.

-p

----- Original Message ----- 
From: "Tzahi Fadida" <Tzahi.ML at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Wednesday, June 28, 2006 8:39 AM
Subject: Re: [Twisted-Python] Need words of wisdom regarding PB


On Wednesday 28 June 2006 14:50, Paul G wrote:
> i implemented file transfer with an optional intermediate gzip stage using
> pb a long while ago. if you're dealing with fairly low latency, a single 
> pb
> connection is fine; for higher latencies, you'll want to multiplex 
> multiple
> pb connections (this has to do with tcp, not pb). with my quick hack, i 
> was
> able to saturate a fast-e with virtually no significant cpu utilization -
> the disk io and the network were the bottlenecks.

I am also very much interested in compressing the underlying transfers using
PB. Where can we get the hack? :)
I am looking for something that is done after serialization so all features 
of
jelly remains. I.e., just before transfer, compress the data. Preferably 
with
some control, i.e., with each message i send i want to be able to say
if to compress and to what level of compression.

Currently i have to circumvent jelly by pickle and compress but i can only
do that when server sends to client since the client trusts the server.
However the server does not trust the client and thus, cannot allow pickled
objects to be unserialized.

maybe something like callRemoteCompressed...

-- 
Regards,
Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: see at
http://members.lycos.co.uk/my2nis/spamwarning.html

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From glyph at divmod.com  Thu Jun 29 20:44:43 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 20:44:43 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606292201.22504.Tzahi.ML@gmail.com>
Message-ID: <20060630004443.29014.1263770469.divmod.quotient.15669@ohm>



On Thu, 29 Jun 2006 22:01:22 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>No, that is new to me. I cannot break it up.
>can it be done using that writeSequence or Write in the ProtocolWrapper?
>I don't want to handle this on the application/PB level.
>I can see though that this is confined to the banana.py and cbanana,
>i can change it there as a last resort, right?
>640kb looks arbitrary to me, times is changing, what was considered
>large in the past is small in the present. At the very least it should be
>configurable.

Not really.  PB is optimized (heavily optimized) for lots of small control-channel messages.  Serializing 20MB of data with Jelly would probably stop your process for a good 30 seconds, and due to the way that the original Jelly was designed, it cannot be processed incrementally; you will end up allocating something like 100MB of memory just to get the data serialized and the packet sent, if you raise the limit.

Feel free to do so; if multi-second messages and multi-hundred-megabyte memory costs are acceptable to you then you can just change the arbitrary limit.  I won't accept patches to make it easily configurable in Twisted though; IMHO that is just bad design.  You should instead be factoring your data to be produced on demand in a series of messages rather than one giant message.  In addition to lower overall memory cost and more immediate feedback, that has the additional advantage of providing you with a way to interleave other messages on the same channel.



From paul-lists at perforge.com  Thu Jun 29 20:46:35 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 20:46:35 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk><4496B139.1070300@gmail.com>
	<4497161B.5090709@imperial.ac.uk> <44975CDA.8070704@gmail.com>
	<14bbc01c69aab$f07173d0$6302a8c0@dcore>
	<44A27B86.3020706@gmail.com>
Message-ID: <150a501c69bde$a43b42f0$6302a8c0@dcore>


----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Paul G" <paul-lists at perforge.com>
Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>; "Phil 
Mayers" <p.mayers at imperial.ac.uk>
Sent: Wednesday, June 28, 2006 8:52 AM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


> If you go to the Spread website and read the documentation and source
> code it mentions both the number of computer limitations and the
> performance hit. Secondly, the system uses a static file to list the
> machines that participate in the communication.
>
> First, it won't support more a 200 computers, or so. It appears that
> deep in the bowels of the code is a byte sized field! The code is pretty
> convoluted, so I never did manage to find out what specifically was the
> field they mentioned. If you are going to build a system that involves a
> hundred machines or less you are probably alright.

yes, for my purposes, a small number is perfectly fine.

> Secondly, as for the performance a search will point out how costly
> reliable group communications are in general. I would suggest you load
> the software up and run the demo, tracking the messaging passing with
> Ethereal. Once this begins to scalable upwards to hundreds of machines
> you will see the problem.

there isn't an incredible amount of cost for baseline group communication. 
the incremental cost is attached to several incremental levels of delivery, 
ordering and consistency guarantees. assuming i wanted delivery guarantees, 
but didn't care about ordering or consistency, i imagine the cost wouldn't 
be much higher than plain udp.

with spread specifically, i would imagine there's also extra cost associated 
with handling the WAN case and paritioning, which i wouldn't need. however, 
that's something i could live with if it weren't too great.

> Third, the configuration of a Spread cluster is fixed based on a config
> file. This was a problem for me; I wanted my system to scale upward by
> just adding a machine to the cluster and not having to change a config
> file and rebooting the daemon machines! It doesn't make for a very
> reliable approach (after all if IM systems could do it why couldn't
> non-IM systems?)

there new version (currently in beta) removes this limitation.


> Now if you think Spread is the way to go, and it might be for small
> clusters of machines, you should do a little research into things like
> the SWIM protocol (of which I am doing a twisted implementation right
> now and will be releasing to the community) or other approaches to
> group-like communication (do a google of overlay networks, which I will
> be also releasing). You will find a lot of relevant information. In fact
> they will probably lead you to a group at Cornell (and a few people
> there) and some people at the U of I at Champaign.

although i hadn't seen swim (doesn't help much, in any case), i've done 
quite a bit of digging andread quite a few papers. i've got several use 
cases i'm trying to find the right solutions for:

1. a lightweight message bus (a la mq) for a cluster of machines on a 
low-latency lan; must be fast, light, usable from python, php and c, not 
implemented in java, and perferably have an async api. this would be used to 
implement a cluster-wide event service.
2. same as above, but with much relaxed requirements for use as a log 
message handling service (think sending apache logs through it to logging 
servers).
3. a lightweight group communications framework which would allow me to 
implement multiple finely tuned semantics for consistency and ordering 
guarantees. this would be used to implement distributed data structures. can 
assume low latency lan environments, doesn't need to care about partitions 
(this would eventually run over myrinet/infiniband/friends).

unfortunately, the preponderance of work done in this area centers around 
'overlay networks', p2p and other such beasts; this introduces complexities 
which make the solutions too heavy for my use. it appears that the stuff 
you're interested in is along the same lines; that doesn't mean it (or you) 
suck(s), just that it's not what i'm looking for ;]

moreover, i would ideally like to use something very thin and hackable; 
spread is already too much of a monolithic black box for use case #3 - the 
dds stuff i want to do would allow me to select consistency guarantees from 
none, to modest to very stringent for each specific case, eg i wouldn't want 
to pay for serialization if i were replacing, say, php's session storage 
stuff and intended to store transient data.

the berkley ninja/sedo stuff is the closest i've seen, but it's in java (not 
a huge problem, since i could port it) and the code appears to be 
unavailable (large, some would say insurmountabl, problem).

if anyone's got any ideas, i'm all ears. it looks like i'll be implementing 
#1 on top of twisted (locally, not for twisted project proper) in the near 
future (unless the dev roadmap changes *again*), so i'm definitely eager to 
hear about alternatives to sticking this on top of pb (not the right tool 
for the job, imho) or spread. in this case, java solutions are out (i'm not 
an anti-java zealot, i won't discuss the reasoning here).

-p 




From glyph at divmod.com  Thu Jun 29 20:53:05 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 20:53:05 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <1151609477.6005.12.camel@localhost.localdomain>
Message-ID: <20060630005305.29014.1873368250.divmod.quotient.15677@ohm>



On Thu, 29 Jun 2006 15:31:17 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2006-06-29 at 22:01 +0300, Tzahi Fadida wrote:

>> I don't want to handle this on the application/PB level.

>twisted.spread.util.Pager and subclasses thereof will do it for you.

I should emphasize that not only do these classes help with this sort of functionality; every PB application I'm aware of that had to transfer bulk data over the main channel worked this way.  It's not like you're going to be in any new territory or implementing a large raft of functionality yourself.



From glyph at divmod.com  Thu Jun 29 21:00:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 21:00:21 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <1509c01c69bda$adf26e80$6302a8c0@dcore>
Message-ID: <20060630010021.29014.1083855316.divmod.quotient.15687@ohm>

On Thu, 29 Jun 2006 20:18:14 -0400, Paul G <paul-lists at perforge.com> wrote:

>i was compressing the data before sending it over pb, while you 
>seem to be interested in doing this automagically at the pb or transport 
>level.

This is, nevertheless, generally the correct way to compress data in PB.  PB itself is so low-overhead that compression isn't going to buy you much in terms of overhead reduction, and jellying/unjellying something that is already a byte sequence is a waste of time.  compress the data, transfer blocks of compressed data as PB strings - the strings are incredibly low overhead and length-prefixed so there isn't any real parsing overhead.



From paul-lists at perforge.com  Thu Jun 29 21:25:31 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 21:25:31 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <20060630010021.29014.1083855316.divmod.quotient.15687@ohm>
Message-ID: <150c901c69be4$14289310$6302a8c0@dcore>


----- Original Message ----- 
From: <glyph at divmod.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Thursday, June 29, 2006 9:00 PM
Subject: Re: [Twisted-Python] Need words of wisdom regarding PB


> On Thu, 29 Jun 2006 20:18:14 -0400, Paul G <paul-lists at perforge.com> 
> wrote:
>
>>i was compressing the data before sending it over pb, while you seem to be 
>>interested in doing this automagically at the pb or transport level.
>
> This is, nevertheless, generally the correct way to compress data in PB. 
> PB itself is so low-overhead that compression isn't going to buy you much 
> in terms of overhead reduction, and jellying/unjellying something that is 
> already a byte sequence is a waste of time.  compress the data, transfer 
> blocks of compressed data as PB strings - the strings are incredibly low 
> overhead and length-prefixed so there isn't any real parsing overhead.

oh, i agree of course, not to mention the fact that compression (and disk 
reads, if you have any) has to be performed in a threadpool. i wasn't 
commenting on the validity of the OP's approach one way or another, since 
one usually needs to have thick skin to handle the resultant acrimony or a 
lot of free time to participate in the ensuing back-and-forth ;]

-p




From paul-lists at perforge.com  Thu Jun 29 21:29:59 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 21:29:59 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
Message-ID: <150dc01c69be4$b42ffb50$6302a8c0@dcore>


----- Original Message ----- 
From: "Bruce Mitchener" <bruce at cubik.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Wednesday, June 28, 2006 10:56 AM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


> Phil Mayers wrote:
> I did have to write my own STOMP protocol implementation as the existing 
> one for Python is not up to snuff.  I may be able to release it back to 
> the ActiveMQ people, but I'm not entirely sure yet.

what were the problems with the existing implementation? is your 
implementation integrated with twisted? more info (and even... gasp... 
source) would be very sweet, seeing as this looks like my best option for 
certain things at the moment.

-p 




From sflist at ihonk.com  Thu Jun 29 21:41:05 2006
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 29 Jun 2006 18:41:05 -0700
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1128956792.9046.9.camel@localhost.localdomain>
References: <1128956792.9046.9.camel@localhost.localdomain>
Message-ID: <1151631666.6281.29.camel@lothar>

On Mon, 2005-10-10 at 11:06 -0400, Itamar Shtull-Trauring wrote:
> wxreactor in Twisted 2.1 uses threadedselectreactor. This means that wx
> apps ought to use wxreactor, not TSR directly; there are some issues
> with vanilla TSR wx integration that are also present in wxreactor, but
> will be fixed in future versions of wxreactor.
> 
> What's broken (there may be more):
> 1. reactor shutdown events aren't handled correctly (e.g. Deferred
> returned from during-shutdown event).
> 2. Signal handling for e.g. Ctrl-C is caught by wx, not twisted.
> 
> In order to get these fixed I need your help. I have a version of
> wxreactor that *probably* fixes these in Subversion trunk. You can try
> it out by running doc/core/examples/wxdemo.py. Hitting Ctrl-C, choosing
> Exit from the menu or closing the menu all should have the same effect -
> the application logs "shutting down in 0.3 seconds...", "2", "1", "0"
> then exits. In addition, "Hello world" should continue to be printed
> while the dialog box is open or you are holding down a menu.
> 
> Please try this out, and report success or failure at
> <http://twistedmatrix.com/bugs/issue1235>. I'm especially interested to
> hear if it works on Windows or Mac OS X. Please include your OS and
> version of wxPython/wxWidgets when submitting reports.

Hi Itamar,

So, rushing in where, ahh, somebody else fears to tread, I've decided to
use wx and Twisted on a project. Any updates on this I should know
about? Anything I can help you with? I'm noticing my own cheesie hello
world (PythonCard's 'counter' example all cozy snuggly with wxreactor)
doesn't quit on a ctrl-c with Twisted 2.2.0 on Debian unstable -- not
really sure what that means, just thought I'd mention it.

Steve





From bruce at cubik.org  Fri Jun 30 01:57:04 2006
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 29 Jun 2006 23:57:04 -0600
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <150dc01c69be4$b42ffb50$6302a8c0@dcore>
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
	<150dc01c69be4$b42ffb50$6302a8c0@dcore>
Message-ID: <44A4BD30.7030308@cubik.org>

Paul G wrote:
> Bruce Mitchener wrote:
>> I did have to write my own STOMP protocol implementation as the 
>> existing one for Python is not up to snuff.  I may be able to release 
>> it back to the ActiveMQ people, but I'm not entirely sure yet.
> 
> what were the problems with the existing implementation? is your 
> implementation integrated with twisted? more info (and even... gasp... 
> source) would be very sweet, seeing as this looks like my best option 
> for certain things at the moment.

I did two sorts of Twisted integration, first, I use it have a Protocol 
subclass.  Secondly, I have it using deferreds for request/reply type stuff.

The main problem that I recall with the existing code was that it 
assumed that it could just do a blocking read and get everything read in 
at once.  This clearly isn't true as a STOMP message may span multiple 
read()s from the network (and happens quite regularly under load).

I need to check with work about releasing it.  I'll try to do that 
tomorrow, but things are pretty crazy, so it might not happen until next 
week after the holiday.

But really, it is a pretty simple protocol.  The main tricks are in 
handling partial messages correctly.

The other way would be to look at the C++ OpenWire and STOMP 
implementations and think about wrapping one of them with SWIG.  I 
didn't go that route yet, but may for performance/features in the future.

  - Bruce



From nico at tekNico.net  Fri Jun 30 02:57:10 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Fri, 30 Jun 2006 08:57:10 +0200
Subject: [Twisted-Python] Re: Compressing PB communication
In-Reply-To: <200606300034.19124.Tzahi.ML@gmail.com>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>	<200606292201.22504.Tzahi.ML@gmail.com>	<1151609477.6005.12.camel@localhost.localdomain>
	<200606300034.19124.Tzahi.ML@gmail.com>
Message-ID: <44A4CB46.5070509@tekNico.net>

> How can i pass parameters to cBanana (at least at initialization time),
> i am not sure if it is even on.

http://twistedmatrix.com/pipermail/twisted-python/2005-September/011343.html
http://twistedmatrix.com/pipermail/twisted-python/2004-December/009158.html

-- 
Nicola Larosa - http://www.tekNico.net/

[Python] insists upon arranging the cupboard into strict rows, but you
stop noticing after a while, and eventually you come to prefer your
shelves organized this way. Your friends think this is weird until
they start dating Python too. -- Meredith L. Patterson, March 2006





From p.mayers at imperial.ac.uk  Fri Jun 30 04:08:59 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Jun 2006 09:08:59 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <150dc01c69be4$b42ffb50$6302a8c0@dcore>
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
	<150dc01c69be4$b42ffb50$6302a8c0@dcore>
Message-ID: <44A4DC1B.8070002@imperial.ac.uk>

>> Phil Mayers wrote:
>> I did have to write my own STOMP protocol implementation as the 
>> existing one for Python is not up to snuff.  I may be able to release 
>> it back to the ActiveMQ people, but I'm not entirely sure yet.

I wrote no such thing!



From p.mayers at imperial.ac.uk  Fri Jun 30 04:11:30 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Jun 2006 09:11:30 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <44A298B5.3090900@cubik.org>
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
Message-ID: <44A4DCB2.2090706@imperial.ac.uk>

Bruce Mitchener wrote:
> Phil Mayers wrote:
>> I've run into "this service needs to know about this event from this 
>> other service" once too often. It's message bus time, baby.
> 
> I ran into similar problems at work where we had been using PB but found 
> that it did not perform to expectation (or requirement).
> 
> I've replaced the bulk of our PB communications with a STOMP[1] protocol 
> implementation to talk to with ActiveMQ[2] servers.  This has been great 
> and I can easily push over 10000 messages/second now.

Bruce,

Thanks, this is very helpful. STOMP and ActiveMQ were two of the things 
I looked at after sending my original query, though I must admit to 
being turned off by the Java-based servers. But as you say, if it works. 
I'll take a look, thanks.



From p.mayers at imperial.ac.uk  Fri Jun 30 04:15:27 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Jun 2006 09:15:27 +0100
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <44A40CF2.6000304@gmail.com>
References: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>
	<44A40CF2.6000304@gmail.com>
Message-ID: <44A4DD9F.9080505@imperial.ac.uk>

Chaz. wrote:
> 
> twisted.web.client will getPage() pull down files via FTP as well? I
> don't see that any where in the documentation, so I am assuming no. Am I
> wrong?

No it will not pull down FTP URLs.



From paul-lists at perforge.com  Fri Jun 30 04:30:31 2006
From: paul-lists at perforge.com (Paul G)
Date: Fri, 30 Jun 2006 04:30:31 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <4492DB72.2050903@imperial.ac.uk>
	<44A298B5.3090900@cubik.org><150dc01c69be4$b42ffb50$6302a8c0@dcore>
	<44A4DC1B.8070002@imperial.ac.uk>
Message-ID: <1516701c69c1f$73686ae0$6302a8c0@dcore>


----- Original Message ----- 
From: "Phil Mayers" <p.mayers at imperial.ac.uk>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Friday, June 30, 2006 4:08 AM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


>>> Phil Mayers wrote:
>>> I did have to write my own STOMP protocol implementation as the existing 
>>> one for Python is not up to snuff.  I may be able to release it back to 
>>> the ActiveMQ people, but I'm not entirely sure yet.
>
> I wrote no such thing!

apologies, i'm handicapped with outlook express these two weeks and didn't 
check the quotations for sanity. bruce mitchener wrote that of course.

-p 




From Tzahi.ML at gmail.com  Fri Jun 30 05:24:43 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Fri, 30 Jun 2006 12:24:43 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060630004443.29014.1263770469.divmod.quotient.15669@ohm>
References: <20060630004443.29014.1263770469.divmod.quotient.15669@ohm>
Message-ID: <200606301224.43672.Tzahi.ML@gmail.com>

On Friday 30 June 2006 03:44, glyph at divmod.com wrote:
> On Thu, 29 Jun 2006 22:01:22 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >No, that is new to me. I cannot break it up.
> >can it be done using that writeSequence or Write in the ProtocolWrapper?
> >I don't want to handle this on the application/PB level.
> >I can see though that this is confined to the banana.py and cbanana,
> >i can change it there as a last resort, right?
> >640kb looks arbitrary to me, times is changing, what was considered
> >large in the past is small in the present. At the very least it should be
> >configurable.
>
> Not really.  PB is optimized (heavily optimized) for lots of small
> control-channel messages.  Serializing 20MB of data with Jelly would
> probably stop your process for a good 30 seconds, and due to the way that
> the original Jelly was designed, it cannot be processed incrementally; you
> will end up allocating something like 100MB of memory just to get the data
> serialized and the packet sent, if you raise the limit.

30 seconds of doing what? serializing?
Let me try something else, what if i want to replace jelly with pickle for
a special Server and Client factory for sending messages from the Server to
the client only. If the client sends a message to the server, they must
be jellied. The idea is that you are consciously saying that the client 
completely trust the server.
I think this is a good idea for some security model that also want performance 
and resource savings. 

>
> Feel free to do so; if multi-second messages and multi-hundred-megabyte
> memory costs are acceptable to you then you can just change the arbitrary
> limit.  I won't accept patches to make it easily configurable in Twisted
> though; IMHO that is just bad design.  You should instead be factoring your
> data to be produced on demand in a series of messages rather than one giant
> message.  In addition to lower overall memory cost and more immediate
> feedback, that has the additional advantage of providing you with a way to
> interleave other messages on the same channel.

I don't understand, you are saying that twisted does not send portions, i.e.
it is blocking? that doesn't sound right to me, even if i send 20mb of data
it should be portioned and let other transfer also get the chance.
I was under the impression that twisted is multiplexing even on the channel 
level. I can, of course, always open 2 channels but this is evil.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From schneider at gl-systemhaus.de  Fri Jun 30 06:25:07 2006
From: schneider at gl-systemhaus.de (Christian Schneider)
Date: Fri, 30 Jun 2006 12:25:07 +0200
Subject: [Twisted-Python] LineOnlyReceiver does not notice when connection's
	failing
Message-ID: <C5F18921-9F7B-4AFD-BB45-E9C9A1CDB7FE@gl-systemhaus.de>

Hi all,

I've got a twisted application that uses a LineOnlyReceiver as its  
protocol. All connections between clients and my server are open  
ended so I have to be sure they are working correctly. However, when  
I disrupt the network connection between a client and the server, the  
server happily keeps writing to the connection while the client  
closes its part and re-connects again.

I am using sendLine to send the data but have also tried  
transport.write and transport.writeSomeData but with these no data is  
being sent at all!

So, anyone knows what I have to do to get signalled when writing to a  
connection fails?

Any help would be very welcome.

Thanks,

chris



From general at eepatents.com  Fri Jun 30 11:59:56 2006
From: general at eepatents.com (Ed Suominen)
Date: Fri, 30 Jun 2006 08:59:56 -0700
Subject: [Twisted-Python] sAsync 0.1
In-Reply-To: <1151531286.4932.5.camel@wkv1.zmaxsolutions.com>
References: <e7ugki$pup$1@sea.gmane.org> <e7uieq$10e$1@sea.gmane.org>
	<1151531286.4932.5.camel@wkv1.zmaxsolutions.com>
Message-ID: <44A54A7C.5070804@eepatents.com>

Version 0.1 of sAsync, "SQLAlchemy Done Asynchronously" has been
released at http://foss.eepatents.com/sAsync. It provides a
Twisted-compatible way to use SQLAlchemy.

There are now some usage examples at
http://foss.eepatents.com/sAsync/wiki/Examples thanks to some people who
are apparently already using the package.

"sAsync offers asynchronous access to the outstanding SQLAlchemy package
by Michael Bayer. It is built around an 'access broker' object that
provides a priority-queued asynchronous interface to database accesses.
By wrapping your database-access methods in a @transact decorator, you
can put the underlying method call in a queue with whatever scheduling
priority you designate and immediately obtain a Deferred object that
references the eventual result of the database transaction. The access
broker also includes structure for convenient and integrated table
setup, startup, and shutdown.

"The package also provides higher-level SQLAlchemy enhancements
including persistent item storage with deferred read and write results,
and a persistent dictionary-like object using that storage. Text
indexing and searching, again with deferred 'behind the scenes'
processing, will be included at some point."



From glyph at divmod.com  Fri Jun 30 12:08:03 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 Jun 2006 12:08:03 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606301224.43672.Tzahi.ML@gmail.com>
Message-ID: <20060630160803.29014.1273028000.divmod.quotient.16545@ohm>

On Fri, 30 Jun 2006 12:24:43 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>On Friday 30 June 2006 03:44, glyph at divmod.com wrote:
>> On Thu, 29 Jun 2006 22:01:22 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>> Not really.  PB is optimized (heavily optimized) for lots of small
>> control-channel messages.  Serializing 20MB of data with Jelly would
>> probably stop your process for a good 30 seconds, and due to the way that
>> the original Jelly was designed, it cannot be processed incrementally; you
>> will end up allocating something like 100MB of memory just to get the data
>> serialized and the packet sent, if you raise the limit.
>
>30 seconds of doing what? serializing?

Yeah.  This is just an estimate, of course, but passing 20 megabytes of structured data through jelly is going to be really slow.  It definitely should be faster, but nobody really has the inclination; people with harder performance requirements tend to just go use other protocols rather than improve PB, as Bruce mentioned with STOMP.

>Let me try something else, what if i want to replace jelly with pickle for
>a special Server and Client factory for sending messages from the Server to
>the client only. If the client sends a message to the server, they must
>be jellied. The idea is that you are consciously saying that the client
>completely trust the server.
>I think this is a good idea for some security model that also want performance
>and resource savings.

I don't think this is particularly a good idea, but then, it's an idea that has less and less to do with PB all the time.  You're talking about implementing a new protocol that has about two dozen features that PB does not have: support for pluggable serialization mechanisms, message tagging, on the fly compression, chunked encoding of large messages.  Some of these features would require that you change the way ordering guarantees work in PB and the way concurrency interacts with its API.  Maybe you could use some small portion of PB to build this monster of a protocol, but when you're done, you would not be using PB.

I can't see why you need the protocol machinery to do all of this for you.  If I were building this application I'd certainly just use streaming producers and send PB messages (over an existing, unmodified PB) that were of a reasonable size until all the data had been transferred.

Also, designing a protocol where you "completely trust" the other end of the wire, even if it is the "server", is a bad idea.  You should only trust the other end of the wire if every message that it sends is encrypted and signed with a verified certificate, and even that is a stretch.  Using pickle at the protocol level means that during the verification process, you are vulnerable to attacks that use the pickled signature exchange to send you an exploit.

>I don't understand, you are saying that twisted does not send portions, i.e.
>it is blocking? that doesn't sound right to me, even if i send 20mb of data
>it should be portioned and let other transfer also get the chance.
>I was under the impression that twisted is multiplexing even on the channel
>level. I can, of course, always open 2 channels but this is evil.

If you send 20mb of data in a single write() call, that means you have at least 20mb of data sitting in the outbound write buffer until it can all be written, not to mention that the jelly serialization process is going to copy all of your data at least twice.



From itamar at itamarst.org  Fri Jun 30 12:11:28 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Jun 2006 12:11:28 -0400
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151631666.6281.29.camel@lothar>
References: <1128956792.9046.9.camel@localhost.localdomain>
	<1151631666.6281.29.camel@lothar>
Message-ID: <1151683888.5653.1.camel@localhost.localdomain>

The status is that I never got around to merging those improvements. A
severe bout of RSI has cut my computer hours even further recently, so
I'm only likely to be able to do so if I do some pair programming.




From Tzahi.ML at gmail.com  Fri Jun 30 13:11:21 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Fri, 30 Jun 2006 20:11:21 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060630160803.29014.1273028000.divmod.quotient.16545@ohm>
References: <20060630160803.29014.1273028000.divmod.quotient.16545@ohm>
Message-ID: <200606302011.21887.Tzahi.ML@gmail.com>

Well,
Lets reset the discussion.
You have convinced me. I'll move all the complexity to the application level.
You are right about the scalability issue so i am inclined to agree with you.
The idea is this:
First, i will use pickled/jellied strings to send objects to the client, all 
the while, using Pagers. If the pickled/jellied string will be too large i 
will dump it to the disk so it won't be in memory.
The main reason i need to use pickle or jelly is that it is hard to know what 
will be the eventual size of a jellied/pickled object (so message<640kb)
and i can't use Pager on arbitrary objects.
I will portion the big objects using some kind of a series of updating tasks.
A bit of a headache though. this is on the application level, probably will 
need to be specified explicitly. However, i was going to do that anyway,
for after sending the initial huge message for synchronization purposes. 
Sending from client to server will have to be done very explicitly, for 
example, an act for transfering documents, act for sending files, act for
mass update for records, etc...
Another headache.

Is there a very very simple example for a client server using PBServerFactory
and ClientFactory and also uses a Pager to send a big string.
10x.

-- 
Regards,
????????Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: ?see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From sflist at ihonk.com  Fri Jun 30 13:38:25 2006
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 30 Jun 2006 10:38:25 -0700
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151683888.5653.1.camel@localhost.localdomain>
References: <1128956792.9046.9.camel@localhost.localdomain>
	<1151631666.6281.29.camel@lothar>
	<1151683888.5653.1.camel@localhost.localdomain>
Message-ID: <1151689105.6281.67.camel@lothar>

I'm sorry to hear that, RSI sure is nasty. I had a bad experience with
it myself recently; it only went away after I broke down and bought a
new chair and one of those funky Kinesis keyboards. (Then I spilled
water in the keyboard, but that's another story. We should all thank our
lucky stars every day for water's low boiling point, don't you think?)

So it's question of merging rather than further bug fixing? I looked at
the feedback on the corresponding bug report
<http://twistedmatrix.com/bugs/issue1235> and it seemed like there was
still an issue on the Mac -- did you find a solution for that?

Steve

On Fri, 2006-06-30 at 12:11 -0400, Itamar Shtull-Trauring wrote:
> The status is that I never got around to merging those improvements. A
> severe bout of RSI has cut my computer hours even further recently, so
> I'm only likely to be able to do so if I do some pair programming.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Fri Jun 30 14:18:41 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Jun 2006 14:18:41 -0400
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151689105.6281.67.camel@lothar>
References: <1128956792.9046.9.camel@localhost.localdomain>
	<1151631666.6281.29.camel@lothar>
	<1151683888.5653.1.camel@localhost.localdomain>
	<1151689105.6281.67.camel@lothar>
Message-ID: <1151691521.5653.5.camel@localhost.localdomain>

On Fri, 2006-06-30 at 10:38 -0700, Steve Freitas wrote:

> So it's question of merging rather than further bug fixing?  

Probably. Maybe I'll get JP to help me with it on the weekend.

> I looked at
> the feedback on the corresponding bug report
> <http://twistedmatrix.com/bugs/issue1235> and it seemed like there was
> still an issue on the Mac -- did you find a solution for that?

I think the current version doesn't work on Mac either, so it's
certainly not worse :)




From exarkun at divmod.com  Fri Jun 30 14:43:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 30 Jun 2006 14:43:21 -0400
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151691521.5653.5.camel@localhost.localdomain>
Message-ID: <20060630184321.29014.1745226328.divmod.quotient.16713@ohm>

On Fri, 30 Jun 2006 14:18:41 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Fri, 2006-06-30 at 10:38 -0700, Steve Freitas wrote:
>
>> So it's question of merging rather than further bug fixing?
>
>Probably. Maybe I'll get JP to help me with it on the weekend.
>
>> I looked at
>> the feedback on the corresponding bug report
>> <http://twistedmatrix.com/bugs/issue1235> and it seemed like there was
>> still an issue on the Mac -- did you find a solution for that?
>
>I think the current version doesn't work on Mac either, so it's
>certainly not worse :)
>

This is what wxreactor does for me:

  exarkun at charm:/tmp$ trial --reactor wx twisted
  Using twisted.internet.wxreactor reactor
  Running 2741 tests.
  twisted.conch.test.test_cftp
    TestOurServerBatchFile
      testBatchFile ... 
  Traceback (most recent call last):
    File "/usr/lib/python2.4/site-packages/wx-2.6-gtk2-unicode/wx/_core.py", line 13262, in <lambda>
      lambda event: event.callable(*event.args, **event.kw) )
  StopIteration

Both in trunk and in the branch.  I think it needs some more work.  I'm not
really interested in doing it on my own time.  If someone wants to sponsor
the development I might consider it.

Jean-Paul



From sflist at ihonk.com  Fri Jun 30 16:45:05 2006
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 30 Jun 2006 13:45:05 -0700
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <20060630184321.29014.1745226328.divmod.quotient.16713@ohm>
References: <20060630184321.29014.1745226328.divmod.quotient.16713@ohm>
Message-ID: <1151700306.6778.11.camel@lothar>

On Fri, 2006-06-30 at 14:43 -0400, Jean-Paul Calderone wrote:
> This is what wxreactor does for me:
> 
>   exarkun at charm:/tmp$ trial --reactor wx twisted
>   Using twisted.internet.wxreactor reactor
>   Running 2741 tests.
>   twisted.conch.test.test_cftp
>     TestOurServerBatchFile
>       testBatchFile ... 
>   Traceback (most recent call last):
>     File "/usr/lib/python2.4/site-packages/wx-2.6-gtk2-unicode/wx/_core.py", line 13262, in <lambda>
>       lambda event: event.callable(*event.args, **event.kw) )
>   StopIteration
> 
> Both in trunk and in the branch.  I think it needs some more work.  I'm not
> really interested in doing it on my own time.  If someone wants to sponsor
> the development I might consider it.

Lemme see what I've got in my wallet... *rooting around* I've got a $20!

It's too bad this continues to have snags -- PythonCard plus Twisted
sure makes a killer combo for easily building cross-platform networked
client apps, much more worthy of the level of praise Rails is getting
than, say, Rails.

Steve




From glyph at divmod.com  Thu Jun  1 15:44:57 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 1 Jun 2006 17:44:57 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: 0
Message-ID: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>

Are you packaging Twisted for a major platform?

Do our users know that?

I have just created a placeholder wiki page for package maintainers to link to their particular distribution, explain packaging or installation issues, identify themselves and list appropriate fora for complaining about packaging.

    http://twistedmatrix.com/trac/wiki/Packages

If you are a package maintainer, or you are building packages of Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or whatever the crap it is that Slackware uses these days) please add some information about yourself there.

If you are a package maintainer and you do not have wiki edit permission **please speak up**, a lot more people should have wiki edit than currently do.

Thanks a lot.



From eric.faurot at gmail.com  Thu Jun  1 15:57:57 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Thu, 1 Jun 2006 23:57:57 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
References: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
Message-ID: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>

On 6/1/06, glyph at divmod.com <glyph at divmod.com> wrote:
> Are you packaging Twisted for a major platform?

Not officially, but yes.

> Do our users know that?

Probably not.

> I have just created a placeholder wiki page for package maintainers to link to their particular distribution, explain packaging or installation issues, identify themselves and list appropriate fora for complaining about packaging.
>
>     http://twistedmatrix.com/trac/wiki/Packages
>
> If you are a package maintainer, or you are building packages of Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or whatever the crap it is that Slackware uses these days) please add some information about yourself there.

Actually I liked slackware a lot before turning irremediably to BSD.

> If you are a package maintainer and you do not have wiki edit permission **please speak up**, a lot more people should have wiki edit than currently do.
>
> Thanks a lot.

I have made unofficial OpenBSD ports for various twisted things.
Everything at: http://ekyo.nerim.net/openbsd/index.html

Eric



From jadestorm at nc.rr.com  Thu Jun  1 16:26:38 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Thu, 1 Jun 2006 18:26:38 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
References: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
Message-ID: <7BC7AD36-69B9-4F87-80BD-D988BFD7FBC1@nc.rr.com>

Hi Glyph!  I package the various twisted components for Fink  
(fink.sf.net).  That said, I do not have access to edit that page  
apparantly.  (or if I do, I am blind to where the edit link is)  My  
account on there is "jadestorm".

Daniel

On Jun 1, 2006, at 5:44 PM, glyph at divmod.com wrote:

> Are you packaging Twisted for a major platform?
>
> Do our users know that?
>
> I have just created a placeholder wiki page for package maintainers  
> to link to their particular distribution, explain packaging or  
> installation issues, identify themselves and list appropriate fora  
> for complaining about packaging.
>
>    http://twistedmatrix.com/trac/wiki/Packages
>
> If you are a package maintainer, or you are building packages of  
> Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or  
> whatever the crap it is that Slackware uses these days) please add  
> some information about yourself there.
>
> If you are a package maintainer and you do not have wiki edit  
> permission **please speak up**, a lot more people should have wiki  
> edit than currently do.
>
> Thanks a lot.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at divmod.com  Thu Jun  1 16:31:11 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 1 Jun 2006 18:31:11 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>
Message-ID: <20060601223111.28682.223777387.divmod.quotient.9600@ohm>



On Thu, 1 Jun 2006 23:57:57 +0200, Eric Faurot <eric.faurot at gmail.com> wrote:
>On 6/1/06, glyph at divmod.com <glyph at divmod.com> wrote:

>>Do our users know that?
>
>Probably not.

As I suspected :).

>>     http://twistedmatrix.com/trac/wiki/Packages

I've added you to this page, but please add information (what version of Twisted you've packaged, what subprojects are supported, etc) as necessary.  I'd like this page to be updated frequently and be as authoritative as possible.

On #twisted today for the 100th or so time I repeated our packaging situation, poor communication with packagers, no central source of information, etc, and I realized that this is why people think packages like TurboGears are so great.  Probably 50% of Twisted's learning curve is just figuring out how to install it, and that's sad: originally an explicit goal was no non-Python dependencies so that users could just download and run.

Of course these days that's not really feasible, since you *can* run Twisted without dependencies, but nobody wants to use it without SSH support, without conch, and so forth.  So it should be really well documented how to install it on your particular platform.



From glyph at divmod.com  Thu Jun  1 16:48:59 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 1 Jun 2006 18:48:59 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <7BC7AD36-69B9-4F87-80BD-D988BFD7FBC1@nc.rr.com>
Message-ID: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>



On Thu, 1 Jun 2006 18:26:38 -0400, Daniel Henninger <jadestorm at nc.rr.com> wrote:
>Hi Glyph!  I package the various twisted components for Fink  (fink.sf.net). 
>That said, I do not have access to edit that page  apparantly.  (or if I do, 
>I am blind to where the edit link is)  My  account on there is "jadestorm".

I *think* I just gave you the permission to do that.  Check and let me know? :)



From eric.faurot at gmail.com  Thu Jun  1 16:53:10 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri, 2 Jun 2006 00:53:10 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601223111.28682.223777387.divmod.quotient.9600@ohm>
References: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>
	<20060601223111.28682.223777387.divmod.quotient.9600@ohm>
Message-ID: <e012d6b50606011553q6883027eo6f6308462cb8edad@mail.gmail.com>

On 6/2/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On Thu, 1 Jun 2006 23:57:57 +0200, Eric Faurot <eric.faurot at gmail.com> wrote:
> >On 6/1/06, glyph at divmod.com <glyph at divmod.com> wrote:
>
> >>Do our users know that?
> >
> >Probably not.
>
> As I suspected :).

Well, I advertised it on the openbsd port mailing list and some people
were interrested. I have good hope that these ports can make it to the
official port tree sooner or later.

> >>     http://twistedmatrix.com/trac/wiki/Packages
>
> I've added you to this page, but please add information (what version of Twisted you've packaged, what subprojects are supported, etc) as necessary.  I'd like this page to be updated frequently and be as authoritative as possible.

I'll check that.

> On #twisted today for the 100th or so time I repeated our packaging situation, poor communication with packagers, no central source of information, etc, and I realized that this is why people think packages like TurboGears are so great.  Probably 50% of Twisted's learning curve is just figuring out how to install it, and that's sad: originally an explicit goal was no non-Python dependencies so that users could just download and run.

> Of course these days that's not really feasible, since you *can* run Twisted without dependencies, but nobody wants to use it without SSH support, without conch, and so forth.  So it should be really well documented how to install it on your particular platform.

Concerning OpenBSD, all dependencies (py-crypto, etc) are found in the
official port tree. Installation is very easy. Anyway, I have never
understood what is so complicated with "python setup.py install
--prefix=..." (and why people want nasty eggs now. We hatessss nassty
eggsss. curse them!).

Eric.



From eric.faurot at gmail.com  Thu Jun  1 16:57:49 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri, 2 Jun 2006 00:57:49 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601223111.28682.223777387.divmod.quotient.9600@ohm>
References: <e012d6b50606011457g9b1c360v5ea2834f01843916@mail.gmail.com>
	<20060601223111.28682.223777387.divmod.quotient.9600@ohm>
Message-ID: <e012d6b50606011557h2d1e8f7tc54a65023fa6d062@mail.gmail.com>

On 6/2/06, glyph at divmod.com <glyph at divmod.com> wrote:

> I've added you to this page, but please add information (what version of Twisted you've packaged, what subprojects are supported, etc) as necessary.  I'd like this page to be updated frequently and be as authoritative as possible.

By the way, my twisted account is soyt. I don't think I have wiki edit
permission.

Eric.



From pjenvey at groovie.org  Thu Jun  1 17:00:27 2006
From: pjenvey at groovie.org (Philip Jenvey)
Date: Thu, 1 Jun 2006 16:00:27 -0700
Subject: [Twisted-Python] Synchronous Code Fishbowl
In-Reply-To: <447DA3E3.6000801@pollenation.net>
References: <E1Fkl64-0004Lu-02@pyramid.twistedmatrix.com>	<447B6BB5.6000208@eepatents.com>
	<447C655E.2060400@pollenation.net>
	<447DA3E3.6000801@pollenation.net>
Message-ID: <732EC7EF-27C8-4FF1-AC8A-0651F4D848F6@groovie.org>

On May 31, 2006, at 7:10 AM, Matt Goodall wrote:
> After that, I think the queue implementation is ok.
>
>
> And some people insist that threading is easy ;-).
>

Alternatively you could take advantage of python's built in thread- 
safe Queue.Queue. Simply extend it and overwrite the private methods  
(_put, _get, etc.)

--
Philip Jenvey




From jadestorm at nc.rr.com  Thu Jun  1 17:29:52 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Thu, 1 Jun 2006 19:29:52 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
References: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
Message-ID: <B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>

You did indeed.  =D  I don't seem to have access to edit a "page  
about me".  (I just called it jadestorm)  Would you mind granting me  
access to that?  (or if you want the page about me to be named  
differently, that's cool too)

Daniel

On Jun 1, 2006, at 6:48 PM, glyph at divmod.com wrote:

>
>
> On Thu, 1 Jun 2006 18:26:38 -0400, Daniel Henninger  
> <jadestorm at nc.rr.com> wrote:
>> Hi Glyph!  I package the various twisted components for Fink   
>> (fink.sf.net). That said, I do not have access to edit that page   
>> apparantly.  (or if I do, I am blind to where the edit link is)   
>> My  account on there is "jadestorm".
>
> I *think* I just gave you the permission to do that.  Check and let  
> me know? :)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nealie at kobudo.homeunix.net  Fri Jun  2 03:26:50 2006
From: nealie at kobudo.homeunix.net (Nealie)
Date: Fri, 02 Jun 2006 11:26:50 +0200
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
References: <20060601214457.28682.1015398664.divmod.quotient.9570@ohm>
Message-ID: <1149240410.1907.18.camel@server.home>

I package most of the Twisted stuff for FreeBSD, although not all. I've
just created myself a trac account "nealie" if feel like giving me edit
permission.

All the Twisted ports for FreeBSD can be found at:
http://www.freebsd.org/cgi/ports.cgi?query=twisted&stype=all


On Thu, 2006-06-01 at 17:44 -0400, glyph at divmod.com wrote:
> Are you packaging Twisted for a major platform?
> 
> Do our users know that?
> 
> I have just created a placeholder wiki page for package maintainers to link to their particular distribution, explain packaging or installation issues, identify themselves and list appropriate fora for complaining about packaging.
> 
>     http://twistedmatrix.com/trac/wiki/Packages
> 
> If you are a package maintainer, or you are building packages of Twisted for public consumption (RPMs, ebuilds, debs, MSIs, or whatever the crap it is that Slackware uses these days) please add some information about yourself there.
> 
> If you are a package maintainer and you do not have wiki edit permission **please speak up**, a lot more people should have wiki edit than currently do.
> 
> Thanks a lot.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> !DSPAM:447f659893251166728781!
> 




From matt at pollenation.net  Fri Jun  2 05:20:07 2006
From: matt at pollenation.net (Matt Goodall)
Date: Fri, 02 Jun 2006 12:20:07 +0100
Subject: [Twisted-Python] Synchronous Code Fishbowl
In-Reply-To: <732EC7EF-27C8-4FF1-AC8A-0651F4D848F6@groovie.org>
References: <E1Fkl64-0004Lu-02@pyramid.twistedmatrix.com>	<447B6BB5.6000208@eepatents.com>	<447C655E.2060400@pollenation.net>	<447DA3E3.6000801@pollenation.net>
	<732EC7EF-27C8-4FF1-AC8A-0651F4D848F6@groovie.org>
Message-ID: <44801EE7.8070503@pollenation.net>

Philip Jenvey wrote:
> On May 31, 2006, at 7:10 AM, Matt Goodall wrote:
> 
>> After that, I think the queue implementation is ok.
>>
>>
>> And some people insist that threading is easy ;-).
>>
> 
> Alternatively you could take advantage of python's built in thread- safe
> Queue.Queue. Simply extend it and overwrite the private methods  (_put,
> _get, etc.)


Good idea.


The usual comment about not overriding _ method applies but it looks
safe in this case because Queue explicitly documents the _ methods that
are safe to override.


- Matt


-- 
     __
    /  \__     Matt Goodall, Pollenation Internet Ltd
    \__/  \    w: http://www.pollenation.net
  __/  \__/    e: matt at pollenation.net
 /  \__/  \    t: +44 (0)113 2252500
 \__/  \__/
 /  \          Any views expressed are my own and do not necessarily
 \__/          reflect the views of my employer.



From acapnotic at twistedmatrix.com  Fri Jun  2 09:21:58 2006
From: acapnotic at twistedmatrix.com (Wayne)
Date: Fri, 02 Jun 2006 08:21:58 -0700
Subject: [Twisted-Python] f0und aff0rdable medicati0n prices
Message-ID: <19869058.20060602082158@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060602/7b60c982/attachment.html>

From acapnotic at twistedmatrix.com  Fri Jun  2 10:20:07 2006
From: acapnotic at twistedmatrix.com (Greta)
Date: Fri, 02 Jun 2006 08:20:07 -0800
Subject: [Twisted-Python] DOctOr recOmmendatiOns
Message-ID: <99366995.20060602082007@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060602/7133e4b0/attachment.html>

From acapnotic at twistedmatrix.com  Fri Jun  2 09:39:21 2006
From: acapnotic at twistedmatrix.com (Tasha)
Date: Fri, 02 Jun 2006 08:39:21 -0700
Subject: [Twisted-Python] Simple things review.
Message-ID: <70024806.20060602083921@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060602/f01950e6/attachment.html>

From radix at twistedmatrix.com  Fri Jun  2 08:06:56 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 2 Jun 2006 10:06:56 -0400
Subject: [Twisted-Python] Simple things review.
In-Reply-To: <70024806.20060602083921@twistedmatrix.com>
References: <70024806.20060602083921@twistedmatrix.com>
Message-ID: <60ed19d40606020706m528c9b80ha1cf66a27c70be15@mail.gmail.com>

On 6/2/06, Tasha <acapnotic at twistedmatrix.com> wrote:
> Hi, may i present you freshest hot stuff? ;) Please open your mind for a
> simple thing
>  Internet provided products always cheaper than others.
>  You may agree or not, but this is a fact
>  Just compare the numbers and get the same goods for a half value
>  You may agree or not, but this is a fact.


Sorry about all this spam that has been getting through; some
forging-spammer has gotten hold of a useful address (Kevin's) to send
mail to this list with. I've marked it as requiring moderation for the
time being, so hopefully there won't be any more of this instance.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From radix at twistedmatrix.com  Fri Jun  2 08:09:03 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 2 Jun 2006 10:09:03 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>
References: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
	<B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>
Message-ID: <60ed19d40606020709q80ef7beu3f7ea03399b2c021@mail.gmail.com>

On 6/1/06, Daniel Henninger <jadestorm at nc.rr.com> wrote:
> You did indeed.  =D  I don't seem to have access to edit a "page
> about me".  (I just called it jadestorm)  Would you mind granting me
> access to that?  (or if you want the page about me to be named
> differently, that's cool too)

You certainly should be able to. Are you getting an error message or
something? As per wiki convention, the page should probably be named
JadeStorm, or DanielHenninger, even.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From jadestorm at nc.rr.com  Fri Jun  2 08:34:00 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Fri, 2 Jun 2006 10:34:00 -0400
Subject: [Twisted-Python] Call For Packagers
In-Reply-To: <60ed19d40606020709q80ef7beu3f7ea03399b2c021@mail.gmail.com>
References: <20060601224859.28682.1550116285.divmod.quotient.9614@ohm>
	<B45BECC7-BF2E-40BE-90AF-25296213D772@nc.rr.com>
	<60ed19d40606020709q80ef7beu3f7ea03399b2c021@mail.gmail.com>
Message-ID: <472AB896-4915-42AA-B970-73614DA70A1E@nc.rr.com>

Note I just switched it to DanielHenninger.

I get:
Page DanielHenninger not found

With no edit/add abilities on the page.  Is it just that I'm not  
doing the right thing?

Daniel


On Jun 2, 2006, at 10:09 AM, Christopher Armstrong wrote:

> On 6/1/06, Daniel Henninger <jadestorm at nc.rr.com> wrote:
>> You did indeed.  =D  I don't seem to have access to edit a "page
>> about me".  (I just called it jadestorm)  Would you mind granting me
>> access to that?  (or if you want the page about me to be named
>> differently, that's cool too)
>
> You certainly should be able to. Are you getting an error message or
> something? As per wiki convention, the page should probably be named
> JadeStorm, or DanielHenninger, even.
>
>
> -- 
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From sean at twistedmatrix.com  Sat Jun  3 04:04:30 2006
From: sean at twistedmatrix.com (Alexis Gibson)
Date: Sat, 03 Jun 2006 05:04:30 -0500
Subject: [Twisted-Python] Earn a University Degree based on your
	professional experience. 
Message-ID: <tcvbhmhJFWAFCTsean@twistedmatrix.com>


University Degree 

OBTAIN A PROSPEROUS FUTURE, MONEY-EARNING POWER, AND THE PRESTIGE THAT COMES WITH HAVING THE CAREER POSITION YOU�VE ALWAYS DREAMED OF. DIPLOMA FROM PRESTIGIOUS NON-ACCREDITED UNVERSITIES BASED ON YOUR PRESENT KNOWLEDGE AND PROFESSIONAL EXPERIENCE.

If you qualify, no required tests, classes, books or examinations. 

Confidentiality Assured 

1-520-844-1041 

24 hours a day, 7 days a week including Sundays and Holidays







From meng.yan at gmail.com  Sat Jun  3 19:32:32 2006
From: meng.yan at gmail.com (Mike Meng)
Date: Sun, 4 Jun 2006 09:32:32 +0800
Subject: [Twisted-Python] Newbie Q: The first example in Fettig's book
	confused me
Message-ID: <88aa66fa0606031832g7ace824bk9489f341eb7ff1ac@mail.gmail.com>

Hi all,
    I'm a new Python programmer and just picked up Abe Fettig's "Twisted"
book. I tried out the first example, which use reactor.run() to drive
printTime and stopReactor callback functions to print time, and found some
strange things.

   I wrote the code in a .py file and run it, it's fine. However, when I
tried to write the code in interactive mode and run it from IDLE shell
window, all the four printTime were called at once. Why?

   Thank you in advance.

   The session is listed here:

>>> from twisted.internet import reactor
>>> import time
>>> def printTime():
    print "Current time is ", time.strftime("%H:%M:%S")


>>> def stopReactor():
    printTime()
        print "Stopping reactor"
        reactor.stop()


>>> reactor.callLater(1, printTime)
<twisted.internet.base.DelayedCall instance at 0x00D9E288>
>>> reactor.callLater(2, printTime)
<twisted.internet.base.DelayedCall instance at 0x00E42210>
>>> reactor.callLater(3, printTime)
<twisted.internet.base.DelayedCall instance at 0x00DF8BC0>
>>> reactor.callLater(4, printTime)
<twisted.internet.base.DelayedCall instance at 0x00C74760>
>>> reactor.callLater(5, stopReactor)
<twisted.internet.base.DelayedCall instance at 0x0132E738>
>>> reactor.run()
Current time is  09:06:52
Current time is  09:06:52
Current time is  09:06:52
Current time is  09:06:52
Current time is  09:06:52
Stopping reactor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060604/7d46ca45/attachment.html>

From glyph at divmod.com  Sat Jun  3 19:51:23 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 3 Jun 2006 21:51:23 -0400
Subject: [Twisted-Python] Newbie Q: The first example in Fettig's book
In-Reply-To: <88aa66fa0606031832g7ace824bk9489f341eb7ff1ac@mail.gmail.com>
Message-ID: <20060604015123.31435.497805246.divmod.quotient.816@ohm>



On Sun, 4 Jun 2006 09:32:32 +0800, Mike Meng <meng.yan at gmail.com> wrote:
>Hi all,
>    I'm a new Python programmer and just picked up Abe Fettig's "Twisted"
>book. I tried out the first example, which use reactor.run() to drive
>printTime and stopReactor callback functions to print time, and found some
>strange things.
>
>   I wrote the code in a .py file and run it, it's fine. However, when I
>tried to write the code in interactive mode and run it from IDLE shell
>window, all the four printTime were called at once. Why?

Presumably it took you 5 seconds to type all that code interactively, but each callLater is basing the time it wants to run off of the time that it was when you completed each line :).

Either learn to type really, really fast, or put all the callLater calls into a function which you then call interactively.



From exarkun at twistedmatrix.com  Sat Jun  3 23:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1149397501.81.13793643@twistedmatrix.com

Bug summary
______________________
Summary for 2006-05-28 through 2006-06-04
Bugs opened: 29    Bugs closed: 28  Total open bugs: 622 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -2  |Highest:  +0          |Conch:               -3  
|Enhancement: +10  |High:     +1          |Core:                +7  
                   |Normal:   +3          |Release Management:  -1  
                   |Low:      +4          |Runner:              +1  
                   |Lowest:   +0          |Trial:               +2  
                                          |Web:                 +1  
                                          |Web2:                +2  
                                          |Website:             -1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1761] give wiki edit permissions to everyone who should have them (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1761

[#1770] Reactor for Qt4 using PyQt4 (opened by grudy)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1770

[#1783] add dreid to LICENSE and CREDITS (opened by PenguinOfDoom) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1783

                    ===== High =====
[#1773] twisted.python.filepath.FilePath.islink will never return True (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1773

[#1775] Attach URI to a resource during lookup (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1775

[#1778] Need a way to locate another resource on the site (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1778

[#1779] Use URLPath everywhere we deal with URLs (opened by wsanchez) (CLOSED, duplicate)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1779

[#1780] self.transport.pauseProducing() in connectionMade is ignored for clients (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1780

                    ===== Normal =====
[#1757] Clean up test Clock and move it to a public location (opened by exarkun) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1757

[#1758] url address of our website has changed (opened by lstep) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1758

[#1760] Rewrite iocpreactor to be a small add-on to selectreactor (opened by PenguinOfDoom)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1760

[#1762] iocpreactor 'Connector' object has no attribute 'sub' (opened by ghazel) (CLOSED, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1762

[#1763] ProcessMonitor.active is actually Service.running (opened by soyt)
    enhancement     runner     http://twistedmatrix.com/trac/ticket/1763

[#1765] twisted.web.static's file listing should decode filenames properly (opened by radix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1765

[#1768] Synchronous Task Queue (opened by edsuom)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1768

[#1769] setup.py --help still references 'all' command. (opened by dreid) (CLOSED, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1769

[#1771] Per-method preconditions (opened by wsanchez) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1771

[#1772] doc/web2/examples/auth/credsetup.py missing import (opened by dreid) (CLOSED, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1772

[#1776] 2518bis (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1776

[#1777] DAV methods are all bound to DAVFile, need to promote generic code to DAVResource (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1777

[#1781] Remove TestCase._wait from Trial (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1781

[#1782] web2's WSGIHandler incorrectly advertises twisted as a multiprocess environment (opened by pjenvey)
    defect          web2       http://twistedmatrix.com/trac/ticket/1782

[#1785] reactor.run should raise an error when called while the reactor is running (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/1785

                    ===== Low =====
[#1759] eliminate "portable" gtk2 reactor on win32 platforms, use real gtk2 reactor (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1759

[#1764] No-op timer service in _twistw.py is (probably) unnecessary (opened by soyt)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1764

[#1766] distutils' bdist_rpm fails due to package naming (opened by gopher) (CLOSED, duplicate)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1766

[#1774] HTTP Proxies inproperly handled both for client and server code in Twisted.Web (opened by ironfroggy)
    defect          web        http://twistedmatrix.com/trac/ticket/1774

[#1784] disttrial --hosts=kunai,takkun,muon twisted (opened by exarkun)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1784

                    ===== Lowest =====
[#1767] distutils' bdist_rpm fails (assuming it is not supported and requesting this as a feature) (opened by gopher) (CLOSED, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1767



Closed Bugs
______________________
                    ===== Highest =====
[#1399] log.msg('why I failed'); log.err(failureObj); idiom is really stupid, should be replaced (opened by glyph, closed by glyph, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1399

[#1658] conch plugin stomps manhole plugin (opened by mfeif, closed by glyph, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/1658

[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1783] add dreid to LICENSE and CREDITS (opened by PenguinOfDoom, closed by PenguinOfDoom, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1783

                    ===== High =====
[#610 ] Use gobject functions when possible in gtk2reactor (opened by jdahlin, closed by glyph, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/610

[#1779] Use URLPath everywhere we deal with URLs (opened by wsanchez, closed by dreid, duplicate)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1779

[#1773] twisted.python.filepath.FilePath.islink will never return True (opened by exarkun, closed by glyph, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1773

[#945 ] websetroot: Completely fails fresh install of Twisted 2.0.0 and Twisted Web 0.5.0 (opened by levi, closed by radix, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/945

                    ===== Normal =====
[#494 ] Extract maintainers from docstrings to separate page (opened by hypatia, closed by tekNico, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/494

[#1758] url address of our website has changed (opened by lstep, closed by glyph, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1758

[#1762] iocpreactor 'Connector' object has no attribute 'sub' (opened by ghazel, closed by ghazel, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1762

[#1769] setup.py --help still references 'all' command. (opened by dreid, closed by exarkun, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1769

[#1520] README-sumo is missing a date (opened by TimothyFitz, closed by radix, wontfix)
    defect          release management http://twistedmatrix.com/trac/ticket/1520

[#1678] State of many Twisted subprojects is unclear (opened by synapsis, closed by radix, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1678

[#1771] Per-method preconditions (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1771

[#1772] doc/web2/examples/auth/credsetup.py missing import (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1772

[#1700] t.w2.vhost.AutoVHostURIRewrite fails silently if no X-Forwarded-Host header is provided. (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1700

[#1699] t.w2.vhost.AutoVHostURIRewrite doesn't pass remote_ip information (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1699

[#1723] twisted.web2.http_headers.parseWWWAuthenticate doesn't work without a challenge. (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1723

[#1757] Clean up test Clock and move it to a public location (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1757

[#1757] Clean up test Clock and move it to a public location (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1757

                    ===== Low =====
[#1766] distutils' bdist_rpm fails due to package naming (opened by gopher, closed by glyph, duplicate)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1766

[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, )
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

                    ===== Lowest =====
[#1767] distutils' bdist_rpm fails (assuming it is not supported and requesting this as a feature) (opened by gopher, closed by glyph, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1767





From sean at twistedmatrix.com  Mon Jun  5 03:47:44 2006
From: sean at twistedmatrix.com (Hubert Rodriquez)
Date: Mon, 05 Jun 2006 04:47:44 -0500
Subject: [Twisted-Python] Earn a University Degree based on your
	professional experience. 
Message-ID: <qqknnkPMHHQYFsean@twistedmatrix.com>


University Degree 

OBTAIN A PROSPEROUS FUTURE, MONEY-EARNING POWER, AND THE PRESTIGE THAT COMES WITH HAVING THE CAREER POSITION YOU�VE ALWAYS DREAMED OF. DIPLOMA FROM PRESTIGIOUS NON-ACCREDITED UNVERSITIES BASED ON YOUR PRESENT KNOWLEDGE AND PROFESSIONAL EXPERIENCE.

If you qualify, no required tests, classes, books or examinations. 

Confidentiality Assured 

1-520-844-1041 

24 hours a day, 7 days a week including Sundays and Holidays

Call us and leave message 
offer ending soon..






From fairwinds at eastlink.ca  Mon Jun  5 08:05:38 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 05 Jun 2006 11:05:38 -0300
Subject: [Twisted-Python] Message sizing design question
In-Reply-To: <20060604015123.31435.497805246.divmod.quotient.816@ohm>
References: <20060604015123.31435.497805246.divmod.quotient.816@ohm>
Message-ID: <44843A32.7060907@eastlink.ca>

Hi. I am trying to decide where to put message sizing for a custom 
protocol. I have set up the connections to be as generic as possible so 
message handling in as much as possible is being done by the connection 
handler that is aware of the connection it is handling at the time. 
There are a few things I need to keep track of at the connection 
(protocol) level such as original handshake and message id's that I am 
tracking per connection, but for the most part, everything else can be 
handled pretty generically by the connection handler.

In any case, where to deal with message sizing? My thought was that the 
connection handler should deal with it since it should also be 
responsible for encode and decode of messages. So to process or prepare 
a message size seems like it fits in the connection handler also.

I realize Banana, for example does sizing in the protocol itself but it 
does not anticipate handing the message off to a handler for such 
things. Anyway, it would be great if someone could confirm my reasoning 
or has some comments on this. Many thanks,

Regards,
David



From michele.petrazzo at unipex.it  Mon Jun  5 12:45:30 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Mon, 05 Jun 2006 20:45:30 +0200
Subject: [Twisted-Python] ftpclient question
Message-ID: <44847BCA.3060503@unipex.it>

Hi list,
I'm making some tries with the ftpclient.py example and I don't know how
to handle the "login error" state (and other errors): if I use a correct
name/passwd, the .pwd/.nlst functions work, but if I use a wrong one, I
receive "only":

"""
[Failure instance: Traceback (failure with no frames):
twisted.protocols.ftp.ConnectionLost: ('FTP connection lost',
<twisted.python.failure.Failure twisted.protocols.ftp.CommandFailed>)
]
"""

that not mean "wrong username or password"!
Where I can find more useful error-descriptions?

P.s. There is a "global" solution for the "error-descriptions" on
FTPClient class? I'm making a lot of tries with .list function (with a
not exits path) and others, but all say me a "unreadable" errors.

Thanks,
Michele



From fairwinds at eastlink.ca  Mon Jun  5 13:26:12 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 05 Jun 2006 16:26:12 -0300
Subject: [Twisted-Python] Message sizing design question
In-Reply-To: <44843A32.7060907@eastlink.ca>
References: <20060604015123.31435.497805246.divmod.quotient.816@ohm>
	<44843A32.7060907@eastlink.ca>
Message-ID: <44848554.2030904@eastlink.ca>

I guess I answered myself. Subclassing my base protocol to handle the 
marshalling between sending and receiving appears more transparent.

Regards,
David

David Pratt wrote:
> Hi. I am trying to decide where to put message sizing for a custom 
> protocol. I have set up the connections to be as generic as possible so 
> message handling in as much as possible is being done by the connection 
> handler that is aware of the connection it is handling at the time. 
> There are a few things I need to keep track of at the connection 
> (protocol) level such as original handshake and message id's that I am 
> tracking per connection, but for the most part, everything else can be 
> handled pretty generically by the connection handler.
> 
> In any case, where to deal with message sizing? My thought was that the 
> connection handler should deal with it since it should also be 
> responsible for encode and decode of messages. So to process or prepare 
> a message size seems like it fits in the connection handler also.
> 
> I realize Banana, for example does sizing in the protocol itself but it 
> does not anticipate handing the message off to a handler for such 
> things. Anyway, it would be great if someone could confirm my reasoning 
> or has some comments on this. Many thanks,
> 
> Regards,
> David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From jcea at argo.es  Tue Jun  6 16:14:08 2006
From: jcea at argo.es (Jesus Cea)
Date: Wed, 07 Jun 2006 00:14:08 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <447CA73E.5090705@comcast.net>
References: <447CA73E.5090705@comcast.net>
Message-ID: <4485FE30.3070700@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stephen Waterbury wrote:
> I just today discovered "json-rpc", which looks pretty cool.

Perhaps you should look at "pyro" also:

http://pyro.sourceforge.net/

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRIX+MJlgi5GaxT1NAQLcNwQAnjuVRWuUNihHRPK/vMsijYG1986xPqV8
+NPxAoAMx2WNJYdtem4gZJQUKn5Oip1V2anZonawcoA0Oru4H366pU0EUbAQyyWH
ALI6aNkD9pwLKZTCkCJSvNvbb/ZPU+mcIYuV7ydj9S5rCmo+6HM5FhUhy9cO8TrW
fQ0HkfqZrno=
=EvKv
-----END PGP SIGNATURE-----



From jcea at argo.es  Tue Jun  6 16:20:52 2006
From: jcea at argo.es (Jesus Cea)
Date: Wed, 07 Jun 2006 00:20:52 +0200
Subject: [Twisted-Python] Do Twisted support LMTP servers?
In-Reply-To: <000e01c66476$728e8860$38aa20d4@hp>
References: <000e01c66476$728e8860$38aa20d4@hp>
Message-ID: <4485FFC4.7080006@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Simon Hedberg wrote:
> Ok, I had a closer look and here's a more complete version, that sends a
> status code for each recipient. 
> Try it out

Thanks.

I finally buried twisted and did the work with threads. Yes, I hear you
cry :-).

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRIX/xJlgi5GaxT1NAQLEUwP+PIt2CyT6jCB9x7/h9YR8bkgofNOGJXRl
qr5faPgpPGbC8OIv4dOQAD/bvMKryOpDGTF5Sv++CNwRgufp9utcYcaAXhYS+54k
95uzAonVn0p0BYPwDuJLddN1IVfYsD6aVFUje474m2in8+H2NwZLR/r3G1u5ouOA
5V6tQeeD2Ls=
=3lFE
-----END PGP SIGNATURE-----



From golux at comcast.net  Tue Jun  6 20:06:50 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Tue, 06 Jun 2006 22:06:50 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <4485FE30.3070700@argo.es>
References: <447CA73E.5090705@comcast.net> <4485FE30.3070700@argo.es>
Message-ID: <448634BA.2050800@comcast.net>

Jesus Cea wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Stephen Waterbury wrote:
>> I just today discovered "json-rpc", which looks pretty cool.
> 
> Perhaps you should look at "pyro" also:

Pyro's been around for a while.  It's useful for simple things
but has several deficiencies relative to PB.

Steve



From l.oluyede at gmail.com  Wed Jun  7 06:42:18 2006
From: l.oluyede at gmail.com (Lawrence Oluyede)
Date: Wed, 7 Jun 2006 14:42:18 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <448634BA.2050800@comcast.net>
References: <447CA73E.5090705@comcast.net> <4485FE30.3070700@argo.es>
	<448634BA.2050800@comcast.net>
Message-ID: <9eebf5740606070542n52b15734q908cf826c750217@mail.gmail.com>

> Pyro's been around for a while.  It's useful for simple things
> but has several deficiencies relative to PB.

I heard of http://rpyc.wikispaces.com/

-- 
Lawrence
http://www.oluyede.org/blog



From thomas at apestaart.org  Thu Jun  8 03:45:15 2006
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Thu, 08 Jun 2006 11:45:15 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <447CA73E.5090705@comcast.net>
References: <447CA73E.5090705@comcast.net>
Message-ID: <1149759916.24971.109.camel@otto.amantes>


> PB is what I really want to use for my project, but I need something
> that's close to ready-for-prime-time, and I've been waiting literally
> years for PB, so in the meantime I'm looking at other candidates.

At the risk of being too obvious, we've been using PB as shipped with
Twisted since 1.3.0, and it's worked very well for us.  Are you saying
there's specific stuff you need from newpb that's not in the current
implementation ?

Thomas




From thomas at apestaart.org  Thu Jun  8 04:05:22 2006
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Thu, 08 Jun 2006 12:05:22 +0200
Subject: [Twisted-Python] recommended twisted database coding
Message-ID: <1149761123.24971.120.camel@otto.amantes>

Hi everyone,

As of late I've been thinking of rewriting an old PHP application that I
used to help out on in Python.  It would give me a chance to see if
Python and everything I"ve learned while learning Python would help me
overcome my innate disgust of doing database/web programming :)

The application in question is relatively simple - it's your average
"manage-all-my-music" application,  with artists, audio files, albums,
ratings, ... In the PHP version, I had already moved from doing raw SQL
queries everywhere to instantiating objects from the database, so the
idea of having an object model that abstracts away persistence to a
database is appealing.

Being a Twisted groupie I would prefer to use something that works well
with Twisted.  After looking at all the options available to me, I'm
getting a little confused, and would like some feedback to clear up the
confusion.

- Twisted is, of course, async, so twisted.enterprise.adbapi wraps 2.0
DB API's using threads, which makes sense.  Are people using adbapi much
in production though ? From scanning the mailing list it seems like
people prefer layering stuff on top of adbapi to implement object
models.

- Axiom seems like a nice Object layer with a database backend.
However, the part I don't understand is that suddenly the description
claims that Axiom is doing blocking SQLite calls, and that this isn't
really a problem.  Since Axiom is a Divmod project, I tend to trust
their opinion when it comes to Twisted.  But why is it suddenly OK to
have blocking code being used ? Does this only apply to SQLite, or would
it apply to any database being used ?

- SQLObject seems to come very close to what I would want to use to
abstract away the database backend, and just pretend that I only deal
with persistently stored python objects.  Has anyone managed to use
SQLObject in a twisted project ? If not, what's the closest I can get
that gives me the advantage of having a python object backend ?

- how do persistent object systems typically deal with transactions ?
Suppose you want to do three operations on three different objects as a
transaction, is that possible at all ?

- Are there any active projects that use a database backend, twisted,
persistent objects, and are freely available, that I can sneak a peek at
for my further education ?

Thanks in advance,
Thomas





From mithrandi-twisted-python at mithrandi.za.net  Thu Jun  8 06:13:35 2006
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Thu, 8 Jun 2006 14:13:35 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
References: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <20060608121335.GK4297@mithrandi.za.net>

* Thomas Vander Stichele <thomas at apestaart.org> [2006-06-08 12:05:22 +0200]:

> - Axiom seems like a nice Object layer with a database backend.
> However, the part I don't understand is that suddenly the description
> claims that Axiom is doing blocking SQLite calls, and that this isn't
> really a problem.  Since Axiom is a Divmod project, I tend to trust
> their opinion when it comes to Twisted.  But why is it suddenly OK to
> have blocking code being used ? Does this only apply to SQLite, or would
> it apply to any database being used ?

One thing that's "special" about SQLite is that in runs in-process, so
there are no network latency issues involved; like any other "blocking"
code, the idea is to only do small bits of work at a time. If you need
to run long queries, you would either break them up into smaller chunks,
or run them in a separate process/thread/whatever to avoid blocking the
main server.

> - how do persistent object systems typically deal with transactions ?
> Suppose you want to do three operations on three different objects as a
> transaction, is that possible at all ?

I'm only really familiar with Axiom, so I can't comment on SQLObject and
friends; in Axiom, the Store (which is the application-level object you
use to interact with the database) has a transact() method which you
invoke like store.transact(someFunc, arg1, arg2, ...). Within the
transaction, any object manipulations/queries/etc. you perform obviously
turn into SQL queries in the database layer, and these are run in an SQL
transaction.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20060608/7c9c8dc0/attachment.sig>

From eprparadocs at gmail.com  Thu Jun  8 07:09:59 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 08 Jun 2006 09:09:59 -0400
Subject: [Twisted-Python] Shutting down a service...
In-Reply-To: <200605301513.31116.rudy@goldenhelix.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>	<200605301014.45911.rudy@goldenhelix.com>	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com>
Message-ID: <448821A7.8010707@gmail.com>

I have a problem I am trying to solve and hope that someone can see an
obvious way (particularly since I am new with Twisted).

My system is composed of 4 different services: an ftp server, a
multicast server, a XML-RPC facility and a service made of a proprietary
 protocol. The problem I am having is when I shut down the system I have
to close down nicely which means that I have to send out a few "I am
leaving" messages, etc.

The issue is that I can terminate because I get an RPC shutdown request,
but also the service getting a SIGINT. Is there some convenient
"Twisted" way to capture sigint (or any signals) and route them to
shutdown services in my application?

Thanks in advance,
Chaz.



From eric.faurot at gmail.com  Thu Jun  8 07:22:57 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Thu, 8 Jun 2006 15:22:57 +0200
Subject: [Twisted-Python] Shutting down a service...
In-Reply-To: <448821A7.8010707@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448821A7.8010707@gmail.com>
Message-ID: <e012d6b50606080622p12a456e5icaed10ad6773b2b6@mail.gmail.com>

On 6/8/06, Chaz. <eprparadocs at gmail.com> wrote:

> The issue is that I can terminate because I get an RPC shutdown request,
> but also the service getting a SIGINT. Is there some convenient
> "Twisted" way to capture sigint (or any signals) and route them to
> shutdown services in my application?

The stopService() method is called on your service instances, so
that is where you must do the clean up.

Eric.



From golux at comcast.net  Thu Jun  8 07:30:17 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 08 Jun 2006 09:30:17 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <1149759916.24971.109.camel@otto.amantes>
References: <447CA73E.5090705@comcast.net>
	<1149759916.24971.109.camel@otto.amantes>
Message-ID: <44882669.2040501@comcast.net>

Thomas Vander Stichele wrote:
>> PB is what I really want to use for my project, but I need something
>> that's close to ready-for-prime-time, and I've been waiting literally
>> years for PB, so in the meantime I'm looking at other candidates.
> 
> At the risk of being too obvious, we've been using PB as shipped with
> Twisted since 1.3.0, and it's worked very well for us.  Are you saying
> there's specific stuff you need from newpb that's not in the current
> implementation ?

Yes:  forward compatibility.  ;)   I've written PB code, too, and that
code doesn't work with newpb.  Not that I would expect it to, given the
fairly substantial changes Brian made in developing newpb, nor do I
think it would be good to have that as a constraint on newpb.

Given newpb's list of features:

http://twistedmatrix.com/trac/wiki/NewPB

... what would you *not* want??  ;)  But of course, you said "need".
My impression is that newpb will be more scalable, which is something
my app will definitely need.  Also, the better serialization
architecture will be important, as some of my objects can be large.
And the serializability of "most inert Python types", while not
essential, is very nice to have.  Also, my code is interface-driven,
for which newpb is better adapted (so to speak :).

Steve



From glyph at divmod.com  Thu Jun  8 09:38:56 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 8 Jun 2006 11:38:56 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <44882669.2040501@comcast.net>
Message-ID: <20060608153856.31435.1503123222.divmod.quotient.3918@ohm>

On Thu, 08 Jun 2006 09:30:17 -0400, Stephen Waterbury <golux at comcast.net> wrote:
>Thomas Vander Stichele wrote:

>>At the risk of being too obvious, we've been using PB as shipped with
>>Twisted since 1.3.0, and it's worked very well for us.  Are you saying
>>there's specific stuff you need from newpb that's not in the current
>>implementation ?

>Yes:  forward compatibility.  ;)   I've written PB code, too, and that
>code doesn't work with newpb.  Not that I would expect it to, given the
>fairly substantial changes Brian made in developing newpb, nor do I
>think it would be good to have that as a constraint on newpb.

I think I actually disagree.  If it's going to be called "PB", it should be compatible, in some way, with the existing "PB" infrastructure.  Maybe not if you wrote insanely complex custom side-effecty custom jelliers, but at least you should be able to port fairly easily.

While wire-level compatibility might be desirable, I think that application-level compatibility should actually become a requirement.  As you note, Steve, the only thing that the promise of a PB2 that will be totally incompatible with PB1 is doing is discouraging people from looking at either right now.

If it's not going to be compatible at all, we should come up with a new name and stop calling it PB.  Maybe Twisted Caps or something.

That said, I don't think that pb2 should be focused on application-level compatibility *right now*.  It's got a bunch of problems left to solve, and what little time Brian can spend to work on it should be spent fixing those problems.

(Can we please stop calling it "newpb", by the way?  Or at least, for consistency, call Twisted 2.4, "newnewnewnewnewnewnewTwisted"?)

Other applications are already using PB though, and many are doing it to good effect.  So let me say this as unambiguously as possible:

PB1 is still supported, and until further notice, it will continue to be.  PB2 is still experimental and is *not* yet supported.  We might not have a lot of development bandwidth to spend on PB1, but bugs are still being fixed, deprecations removed, and APIs updated to reflect the modern state of Twisted.

It can be updated and fixed incrementally while we wait for the Great Revolution of PB2.  Perhaps we can even start making the various APIs converge, so that the migration process will be smoother.

This isn't a new decision or announcement, just a statement of the current state of affairs.  Brian has been very clear about PB2's experimental status all along.  Maintenance on PB1 never stopped.  JP, for example, just recently removed a bunch of grotty old-cred stuff (hallelujiah it's gone) from PB1.  It just seems like because there's this new direction, everyone tacitly assumes that the old stuff will be dropped -- Twisted has an unfortunate history as such things go, but we are getting better about it.



From glyph at divmod.com  Thu Jun  8 10:00:39 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 8 Jun 2006 12:00:39 -0400
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <20060608160039.31435.79285738.divmod.quotient.3924@ohm>



On Thu, 08 Jun 2006 12:05:22 +0200, Thomas Vander Stichele <thomas at apestaart.org> wrote:
>Hi everyone,

>Being a Twisted groupie I would prefer to use something that works well
>with Twisted.  After looking at all the options available to me, I'm
>getting a little confused, and would like some feedback to clear up the
>confusion.

Axiom was designed from the ground up as a Twisted-friendly database.  You can store Twisted service objects in axiom databases, and run axiom databases as twisted servers using the 'axiomatic start' command.

If you're writing a blog/cms type thing, you should probably look at this brief tutorial for an example of how such things get built with axiom:

  http://divmod.org/trac/wiki/MantissaBlogTutorial

(mantissa is axiom+nevow+athena+glue, basically)

Other database integration tools may be more database-y (and, for example, give you a choice of database backend, which axiom does not currently do) but you are unlikely to find one twistier than axiom ;).



From general at eepatents.com  Thu Jun  8 17:55:27 2006
From: general at eepatents.com (Ed Suominen)
Date: Thu, 08 Jun 2006 16:55:27 -0700
Subject: [Twisted-Python] Re: recommended twisted database coding
In-Reply-To: <E1FoNrY-0005JF-02@pyramid.twistedmatrix.com>
References: <E1FoNrY-0005JF-02@pyramid.twistedmatrix.com>
Message-ID: <4488B8EF.6070206@eepatents.com>

From: Thomas Vander Stichele <thomas at apestaart.org>
> Are there any active projects that use a database backend, twisted,
> persistent objects, and are freely available, that I can sneak a peek at
> for my further education ?

Take a look at my sAsync ("SQLAlchemy made Asynchronous") project at
http://foss.eepatents.com/sAsync/. I think it does a lot of what you're
looking for. I've got the lower-level foundation code unit tested and
working fine, and am currently working on higher-level stuff like an
asynchronously-accessible persistent "name:value" item store and a
persistent dictionary that uses it.

The object you'll most want to get familiar with if you use sAsync is
"AccessBroker" in the "database" module [1].

The synchronous-to-asynchronous interface problem, which must be dealt
with by any Twisted-compatible DB-API that doesn't do the low-level
network file or connections entirely on its own, is addressed in what I
like to think is a pretty cool fashion via a priority queue that runs in
a single, dedicated worker thread. See the "syncbridge" module for
details [2].

By popular demand (well, one user to be exact), I've included a mildly
informative "Usage" document at the site that may help explain how and
why to use sAsync.

Best regards,
Ed Suominen

--------------------------------------------
[1] http://foss.eepatents.com/sAsync/browser/trunk/sasync/database.py
[2] http://foss.eepatents.com/sAsync/browser/trunk/sasync/syncbridge.py



From eric.faurot at gmail.com  Fri Jun  9 06:02:50 2006
From: eric.faurot at gmail.com (Eric Faurot)
Date: Fri, 9 Jun 2006 14:02:50 +0200
Subject: [Twisted-Python] Bullets for the twisted proselytizer gun?
Message-ID: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>

Hi all,

I will probably have a chance to be in charge of a (commercial)
project that consists in developping a platform for handling
distributed content, with XML-flavored chips and webby services.  I am
also confident that my voice will be heard concerning the technical
aspects of the project.  My wish is of course to use twisted for that.
But I will have to convince people with the tie and the money, who
tragically are also the ones who are most sensible to buzzwords.

The LAMP case will be rather easy to deal with.  I'll show no mercy.
My concern is that the dreadful J2EE acronym has already been uttered.
I have programmed a bit in java already, and I never liked it.  I find
it cumbersome and boring.  Although I can certainly do that if I am
forced to, I want to avoid it at (nearly) all cost.  But I don't have
enough experience to plead effectively against it.  I doubt that
intuition and aesthetic inclinations are really convincing arguments.

So, I'd like to ask twisted enthiusiasts with better knowledge and
experience of J2EE than I have, if they could provide meaningful
points for advocating python/twisted over J2EE, pro and cons for each.

My main argument so far is that I am *way* more fluent in python, so I
am more likely to come up with a prototype quickly.  Also, the
flexibility of python makes early refactoring much easier, and it is
always possible to reimplement things in another language once the
architecture stabilizes.  I also think python is more portable than
java, but that would sound a bit anecdotal.

Thanks for your input.
Eric.



From therve at free.fr  Fri Jun  9 08:33:13 2006
From: therve at free.fr (Thomas HERVE)
Date: Fri, 09 Jun 2006 16:33:13 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
References: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <20060609163313.4cjarlueww088w80@itchy.wasabout.net>

Quoting Thomas Vander Stichele <thomas at apestaart.org>:

> Hi everyone,

Hi,

> - Twisted is, of course, async, so twisted.enterprise.adbapi wraps 2.0
> DB API's using threads, which makes sense.  Are people using adbapi much
> in production though ?

Here we use adbapi a lot, against Postgresql, MySQL and SQLite. Note 
that adapi is mainly a wrapper around a threadpool, there's very little 
magic in it (which explains it works great).

> From scanning the mailing list it seems like
> people prefer layering stuff on top of adbapi to implement object
> models.

We did that too :). I just modeled a simple ORM to construct objects 
from SQL results (it just put the values into attributes of a dict or 
an object).

We also use a simple wrapper around ConnectionPool to handle specific 
databases problems (concurrent updates in Postgres or timeouts in 
MySQL), and add other methods (for example executemany of pysqlite2 is 
very useful).

> - SQLObject seems to come very close to what I would want to use to
> abstract away the database backend, and just pretend that I only deal
> with persistently stored python objects.  Has anyone managed to use
> SQLObject in a twisted project ? If not, what's the closest I can get
> that gives me the advantage of having a python object backend ?

I strongly discourage you from using SQLObject. It's really a pain to 
use, and there's implicit behaviours that are nasty (cache, attributes 
retrieval...). It's not very hard to use with a thread pool in Twisted, 
but I think it's really designed for simple threaded (web) apps.

SQLAlchemy seems much cleaner (but still in early stage) and as advised 
by Ed Suominen you should take a look at sAsync.

-- 
Thomas

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.




From ldanielburr at mac.com  Fri Jun  9 10:44:59 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 09 Jun 2006 11:44:59 -0500
Subject: [Twisted-Python] Bullets for the twisted proselytizer gun?
In-Reply-To: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
References: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
Message-ID: <op.tavzdxqm3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Fri, 09 Jun 2006 07:02:50 -0500, Eric Faurot <eric.faurot at gmail.com>  
wrote:

> Hi all,
>

Hi Eric, let's see if we can provide you with some ammunition...

> I will probably have a chance to be in charge of a (commercial)
> project that consists in developping a platform for handling
> distributed content, with XML-flavored chips and webby services.  I am
> also confident that my voice will be heard concerning the technical
> aspects of the project.  My wish is of course to use twisted for that.
> But I will have to convince people with the tie and the money, who
> tragically are also the ones who are most sensible to buzzwords.
>

How true.  I've worked for a few large corporations, in the energy and  
pharmaceutical sectors, and management is always more comfortable  
contemplating so-called "best-of-breed solutions", where said term really  
means "whatever is popular in the media, supported by large companies, and  
used by the competition".

> The LAMP case will be rather easy to deal with.  I'll show no mercy.
> My concern is that the dreadful J2EE acronym has already been uttered.
> I have programmed a bit in java already, and I never liked it.  I find
> it cumbersome and boring.  Although I can certainly do that if I am
> forced to, I want to avoid it at (nearly) all cost.  But I don't have
> enough experience to plead effectively against it.  I doubt that
> intuition and aesthetic inclinations are really convincing arguments.
>

That's correct; management is already relying on subjective criteria  
masquerading as objective requirements, so adding more subjectivity to the  
discussion will only hurt you.

> So, I'd like to ask twisted enthiusiasts with better knowledge and
> experience of J2EE than I have, if they could provide meaningful
> points for advocating python/twisted over J2EE, pro and cons for each.
>

My experience, which is based on a number of projects for the corporations  
I mentioned above, is as follows:

- Case 1
   - A web-service application was written in Python, using twisted
     and the SGMLOP parser (needed because it can parse non-xml markup).
     This application was used by a search engine, to allow users to
     search for portlets that might be useful in solving a problem.
     When the user clicked on a search result, the twisted service
     would connect to the chosen portlet, perform URL rewriting on
     the portlet's markup, and present a preview of the portlet UI
     to the user, from within the search results UI.
   - Application was developed to a working state in 2 weeks.
   - Bug fixes, refinements, etc, took another 2 weeks.

   - Management decided to contract a large offshore J2EE firm to
     rewrite the application in Java, so as to be compliant with
     "best-practices".
   - Development of a working prototype took 1 month.
   - Application was completed after 3 months, with slightly
     reduced functionality.
   - Cost was roughly twice that of the original application, despite
     the reduced hourly rate of the offshore developers.

I've got more such cases, but not the time to type them all up for you.   
Hopefully this one real-world example will give you some idea what kind of  
advantages python and twisted can provide your management.

> My main argument so far is that I am *way* more fluent in python, so I
> am more likely to come up with a prototype quickly.  Also, the
> flexibility of python makes early refactoring much easier, and it is
> always possible to reimplement things in another language once the
> architecture stabilizes.  I also think python is more portable than
> java, but that would sound a bit anecdotal.
>

Fluency isn't a great argument, in that management will counter by  
pointing out that there are a bazillion more J2EE developers than Python  
developers, and therefore choosing J2EE would make it easier/cheaper to  
find developers to support and maintain the application.  Stick with  
reduced development time and increased developer productivity as your main  
points: Make it clear to them that 1 developer using python and twisted  
can do more work, in less time.  That's efficient for the business, and  
management should see that as a viable alternative to the "throw bodies at  
the problem" approach.

> Thanks for your input.
> Eric.
>

Hope this helps,

L. Daniel Burr



From projects at reedflute.com  Fri Jun  9 12:39:21 2006
From: projects at reedflute.com (Eugene Coetzee)
Date: Fri, 09 Jun 2006 20:39:21 +0200
Subject: [Twisted-Python] Bullets for the twisted proselytizer gun?
In-Reply-To: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
References: <e012d6b50606090502k2b635084w3fc76ab49983b3eb@mail.gmail.com>
Message-ID: <4489C059.6080600@reedflute.com>

Eric Faurot wrote:

> So, I'd like to ask twisted enthiusiasts with better knowledge and
> experience of J2EE than I have, if they could provide meaningful
> points for advocating python/twisted over J2EE, pro and cons for each.

Let me take a shot.

Pros for J2EE over Twisted:

J2EE is fully mulithreaded and Twisted running on Python has some small 
built-in inconvenience named  a "global interpreter lock"
J2EE is built on Java which does not comply with the Open Source license 
requirement where Twisted on Python is Open Source compatible

Pros for Twisted over J2EE:

J2EE is fully mulithreaded and Twisted running on Python uses the 
event-driven  model in a single thread
J2EE is a full fledged application server platform where Twisted is good 
for network based applications
J2EE is built on Java which does not comply with the Open Source license 
requirement where Twisted on Python is Open Source compatible

>
>
> My main argument so far is that I am *way* more fluent in python, 


I'm also much better at swinging a chain saw than chopping small with my 
swiss army knife.   But I  don't open cans with my chain saw  just as I 
don't try to chop down trees with my swiss army knife :-)


regards,

Eugene Coetzee




From thomas at apestaart.org  Fri Jun  9 13:37:44 2006
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Fri, 09 Jun 2006 21:37:44 +0200
Subject: [Twisted-Python] Twisted Fedora Core packages - testing appreciated
Message-ID: <1149881864.25479.7.camel@otto.amantes>

Hey everyone,

I've finally gotten off my ass and started updating the Fedora Extras
packages for Twisted.  I based myself on the excellent work of Jeff
Pitman from PyVault, and refined some things here and there.  In
addition, I started packaging parts of the DivMod stack (because I"m
curious and wanted to try them out).

I could use some feedback from people on Fedora Core to see if
everything looks fine.

I have packages for FC4 and FC5 for both i386 and x86_64.
FC5 i386 is up at
http://thomas.apestaart.org/download/pkg/fedora-5-i386-extras/

change 5 to 4 for FC4, or i386 to x86_64 for 64 bit, or both.

If anything doesn't work, let me know.  I will start pushing these to
Fedora Extras as soon as we have Flumotion completely converted to 2.4

Enjoy,
Thomas




From terry at jon.es  Fri Jun  9 15:03:06 2006
From: terry at jon.es (Terry Jones)
Date: Fri, 9 Jun 2006 23:03:06 +0200
Subject: [Twisted-Python] Passing extra arguments to twistd?
Message-ID: <17545.57866.711310.845285@terry.jones.tc>

I have a .tac file and am using twistd on it to start the application.  I
would like to be able to specify a config file on the command line so the
.tac file code can figure out what it should do.  Twistd doesn't seem to
want me to do that though.

Something like allowing

  $ twistd -twistedopts file -- extra args here...

would be nice. Or is there a better way to do this?

Regards,
Terry



From exarkun at divmod.com  Fri Jun  9 16:15:55 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Jun 2006 18:15:55 -0400
Subject: [Twisted-Python] Passing extra arguments to twistd?
In-Reply-To: <17545.57866.711310.845285@terry.jones.tc>
Message-ID: <20060609221555.31435.2102753837.divmod.quotient.4881@ohm>

On Fri, 9 Jun 2006 23:03:06 +0200, Terry Jones <terry at jon.es> wrote:
>I have a .tac file and am using twistd on it to start the application.  I
>would like to be able to specify a config file on the command line so the
>.tac file code can figure out what it should do.  Twistd doesn't seem to
>want me to do that though.
>
>Something like allowing
>
>  $ twistd -twistedopts file -- extra args here...
>
>would be nice. Or is there a better way to do this?

.tac files _are_ configuration, so they don't _take_ configuration.  You
should have so little code in your .tac file that it is neither burdensome
nor distasteful to make a copy and change bits of it to meet particular
configuration requirements.

On the other hand, .tac files are far from the final word on configuration.
They're just the last word Twisted has put in so far ;)  No doubt we'll see
something better added at some future date.

Jean-Paul



From terry at jon.es  Fri Jun  9 16:50:25 2006
From: terry at jon.es (Terry Jones)
Date: Sat, 10 Jun 2006 00:50:25 +0200
Subject: [Twisted-Python] Passing extra arguments to twistd?
In-Reply-To: Your message at 18:15:55 on Friday, 9 June 2006
References: <17545.57866.711310.845285@terry.jones.tc>
	<20060609221555.31435.2102753837.divmod.quotient.4881@ohm>
Message-ID: <17545.64305.874548.38866@terry.jones.tc>

Hi Jean-Paul

OK, I take your point. Below are a couple more reasons why I still think it
would be useful.

>>>>> "JPC" == Jean-Paul Calderone <exarkun at divmod.com> writes:
JPC> .tac files _are_ configuration, so they don't _take_ configuration.
JPC> You should have so little code in your .tac file that it is neither
JPC> burdensome nor distasteful to make a copy and change bits of it to
JPC> meet particular configuration requirements.

.tac files don't always seem to be that small:

~/Nevow-0.8.0/examples $ find . -name '*.tac' -print0 | xargs -0 wc -l
     12 ./blogengine/blogengine.tac
      7 ./chatola/chatola.tac
    189 ./examples.tac
      9 ./image_uploader/imagination.tac
     13 ./liveanimal/liveanimal.tac
     25 ./pastebin/pastebin.tac
      9 ./postit/postit.tac
     18 ./todo/todo.tac
    483 ./userdb/userdb.tac
     40 ./with_axiom/main.tac
    805 total

I'd like to avoid making people edit python files in what I distribute. I
know it seems easy, that it is easy, but it's also easy to provide a
familiar .ini style config file and let them edit that. Then the .ini file
could be passed to twistd and on to my app. This minimizes duplicated code
in the case that the .tac file is non trivial and is more idiot proof
(especially given python's indentation sensitivity).

Anyway, for now I'm taking your advice and simply embedding a config file
name in my .tac file. It's not a big deal - I was just wondering.

Thanks again,
Terry



From glyph at divmod.com  Fri Jun  9 18:58:15 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 9 Jun 2006 20:58:15 -0400
Subject: [Twisted-Python] Twisted Fedora Core packages - testing
	appreciated
In-Reply-To: <1149881864.25479.7.camel@otto.amantes>
Message-ID: <20060610005815.31435.361951025.divmod.quotient.4983@ohm>

On Fri, 09 Jun 2006 21:37:44 +0200, Thomas Vander Stichele <thomas at apestaart.org> wrote:
>Hey everyone,
>
>I've finally gotten off my ass and started updating the Fedora Extras
>packages for Twisted.


Thanks a lot, Thomas!  Now I know where to send people looking for Fedora and RHEL Twisted :-D



From eprparadocs at gmail.com  Sat Jun 10 07:19:10 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 10 Jun 2006 09:19:10 -0400
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <200605301513.31116.rudy@goldenhelix.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>	<200605301014.45911.rudy@goldenhelix.com>	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com>
Message-ID: <448AC6CE.1060209@gmail.com>

I have an application that I am converting to Twisted. One of the things
the application does is have three different logs running. Each of the
three does something different.

In normal python logging I figured out how to have the three different
loggers. In Twisted I am not quite sure how to do it. Has someone done
this before?

Thanks,
Chaz.



From moof at metamoof.net  Sat Jun 10 09:16:40 2006
From: moof at metamoof.net (Moof)
Date: Sat, 10 Jun 2006 17:16:40 +0200
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <448AC6CE.1060209@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448AC6CE.1060209@gmail.com>
Message-ID: <bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>

On 6/10/06, Chaz. <eprparadocs at gmail.com> wrote:
> I have an application that I am converting to Twisted. One of the things
> the application does is have three different logs running. Each of the
> three does something different.
>
> In normal python logging I figured out how to have the three different
> loggers. In Twisted I am not quite sure how to do it. Has someone done
> this before?

You want to write a class or function that will receive a dictionary
with 'system', 'message', and possibly 'failure', 'isError', 'debug'
and 'printed', and take appropriate action. You may wish to have a
look at twisted.python.log.FileLogObserver. Once you have the function
or method, you can do a log.addLogObserver(function).

You can pass things on to the eventDict as keywords to log.msg,
log.error, and log.debug (though the last one is deprecated). If you
find that isn't enough for you, it's possible to replace the
LogPublisher with something that can gather more data, I currently use
one that inspects the stack for which module called it, for example.

Moof



From eprparadocs at gmail.com  Sat Jun 10 09:39:48 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 10 Jun 2006 11:39:48 -0400
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>	
	<200605301014.45911.rudy@goldenhelix.com>	
	<1149013182.5737.4.camel@localhost.localdomain>	
	<200605301513.31116.rudy@goldenhelix.com>
	<448AC6CE.1060209@gmail.com>
	<bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>
Message-ID: <448AE7C4.20600@gmail.com>

Thanks but I think that answers the wrong question. In my original
application I have three different named loggers (the original app
is written in Python). I have logOp, logTrace, logDebug each of which
goes somewhere different (for instance logOp messages go to the
operators system, logDebug is sent to a non-rotated file and logTrace
goes to a rotating log file). Through out my application I will log
message to the appropriate logger, for example messages that I want
written out to the debug file I write as logDebug.msg(...). Those that I
want to trace objects moving around I will do logDebug.info(...). etc.

In Twisted.python.log it looks like there is a single logger and I do:
log.startLogging(...). What I need to know is how can I create three
different loggers in my new application. Do I need to subclass some
twisted class?

Chaz.

Moof wrote:
> On 6/10/06, Chaz. <eprparadocs at gmail.com> wrote:
>> I have an application that I am converting to Twisted. One of the things
>> the application does is have three different logs running. Each of the
>> three does something different.
>>
>> In normal python logging I figured out how to have the three different
>> loggers. In Twisted I am not quite sure how to do it. Has someone done
>> this before?
> 
> You want to write a class or function that will receive a dictionary
> with 'system', 'message', and possibly 'failure', 'isError', 'debug'
> and 'printed', and take appropriate action. You may wish to have a
> look at twisted.python.log.FileLogObserver. Once you have the function
> or method, you can do a log.addLogObserver(function).
> 
> You can pass things on to the eventDict as keywords to log.msg,
> log.error, and log.debug (though the last one is deprecated). If you
> find that isn't enough for you, it's possible to replace the
> LogPublisher with something that can gather more data, I currently use
> one that inspects the stack for which module called it, for example.
> 
> Moof
> 




From itamar at itamarst.org  Sat Jun 10 10:09:24 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 10 Jun 2006 12:09:24 -0400
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <448AC6CE.1060209@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448AC6CE.1060209@gmail.com>
Message-ID: <1149955765.5619.1.camel@localhost.localdomain>

On Sat, 2006-06-10 at 09:19 -0400, Chaz. wrote:

> In normal python logging I figured out how to have the three different
> loggers. In Twisted I am not quite sure how to do it. Has someone done
> this before?

I'd suggest continuing using Python's logging module (just don't use its
socket or db backends, as they will block your app).

-- 
Itamar Shtull-Trauring
http://itamarst.org





From manlio_perillo at libero.it  Sat Jun 10 10:24:21 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 14:24:21 -0200
Subject: [Twisted-Python] Writing a New Plug-In for mktap
Message-ID: <448AF235.6060201@libero.it>

What's the current Twisted best practice.?


Thanks and regards  Manlio Perillo



From manlio_perillo at libero.it  Sat Jun 10 10:39:02 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 14:39:02 -0200
Subject: [Twisted-Python] Passing extra arguments to twistd?
In-Reply-To: <20060609221555.31435.2102753837.divmod.quotient.4881@ohm>
References: <20060609221555.31435.2102753837.divmod.quotient.4881@ohm>
Message-ID: <448AF5A6.4050601@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>
> On the other hand, .tac files are far from the final word on configuration.
> They're just the last word Twisted has put in so far ;)  No doubt we'll see
> something better added at some future date.
> 

Maybe just a
--conf=myconfig

argument to twistd that will parse the config file (ini file or a simple
python module) and call makeService(config) as with command line arguments.




Regards  Manlio Perillo



From moof at metamoof.net  Sat Jun 10 10:45:15 2006
From: moof at metamoof.net (Moof)
Date: Sat, 10 Jun 2006 18:45:15 +0200
Subject: [Twisted-Python] Need for multiple loggers...
In-Reply-To: <448AE7C4.20600@gmail.com>
References: <20060530152411.28682.570244690.divmod.quotient.7605@ohm>
	<200605301014.45911.rudy@goldenhelix.com>
	<1149013182.5737.4.camel@localhost.localdomain>
	<200605301513.31116.rudy@goldenhelix.com> <448AC6CE.1060209@gmail.com>
	<bff8eeef0606100816o442b9938le116b76d7abbb876@mail.gmail.com>
	<448AE7C4.20600@gmail.com>
Message-ID: <bff8eeef0606100945j56ac6193kaf77f8db271f8c11@mail.gmail.com>

On 6/10/06, Chaz. <eprparadocs at gmail.com> wrote:
> Thanks but I think that answers the wrong question. In my original
> application I have three different named loggers (the original app
> is written in Python). I have logOp, logTrace, logDebug each of which
> goes somewhere different (for instance logOp messages go to the
> operators system, logDebug is sent to a non-rotated file and logTrace
> goes to a rotating log file). Through out my application I will log
> message to the appropriate logger, for example messages that I want
> written out to the debug file I write as logDebug.msg(...). Those that I
> want to trace objects moving around I will do logDebug.info(...). etc.
>
> In Twisted.python.log it looks like there is a single logger and I do:
> log.startLogging(...). What I need to know is how can I create three
> different loggers in my new application. Do I need to subclass some
> twisted class?

The twisted log system has a single "log publisher", known as
twisted.python.log.theLogPublisher. This publisher will receive all
log messages and add certain essential informaion, and create
something called an eventDict. It then passes all eventDict to every
LogObserver registered with it. This allows for a central location to
receive log messages that decouples potentially slow, blocking, file
writing or network sending of log messages from the rest of the
asynchronous framework.

log.StartLogging(file) literally creates a FileLogObeserver for the
file called flo, and then calls StartLoggignWithObserver(flo.emit).

You want to create an equivalent to a FileLogObserver, or just
subclass it. You can chose to ignore certain messages by checking for
flags in the eventDict, and just returning from the method, or you can
write it to a file, or send it over the network or whatever.

Moof



From nico at tekNico.net  Sat Jun 10 10:47:39 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Sat, 10 Jun 2006 18:47:39 +0200
Subject: [Twisted-Python] Re: Writing a New Plug-In for mktap
In-Reply-To: <448AF235.6060201@libero.it>
References: <448AF235.6060201@libero.it>
Message-ID: <e6et43$50e$1@sea.gmane.org>

Manlio Perillo wrote:
> What's the current Twisted best practice.?

Discussed in depth here:

http://twistedmatrix.com/pipermail/twisted-python/2006-April/012924.html

(Glyph: Quotient *still* does not wrap emails, rendering the archive less
readable via web. This has been going on for years now. :-| )

-- 
Nicola Larosa - http://www.tekNico.net/

First World War poster: Your Chums are Figthing. Why aren't You?
David Icke: Because I have a friggin' mind of my own...
 -- David Icke, February 2006




From manlio_perillo at libero.it  Sat Jun 10 11:13:54 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 15:13:54 -0200
Subject: [Twisted-Python] Re: Writing a New Plug-In for mktap
In-Reply-To: <e6et43$50e$1@sea.gmane.org>
References: <448AF235.6060201@libero.it> <e6et43$50e$1@sea.gmane.org>
Message-ID: <448AFDD2.3070000@libero.it>

Nicola Larosa ha scritto:
> Manlio Perillo wrote:
>> What's the current Twisted best practice.?
> 
> Discussed in depth here:
> 
> http://twistedmatrix.com/pipermail/twisted-python/2006-April/012924.html
> 

So, if I'm right, the main ussue is with application persistence?

The problem is that simple .tap file (started with twistd -y) have no
access to command line arguments.


P.S.
Now I explain myself why my application is not persisted under Windows
and why there is no more a paragraphs on Versioned...



Thanks and regards  Manlio Perillo



From manlio_perillo at libero.it  Sat Jun 10 11:23:31 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 15:23:31 -0200
Subject: [Twisted-Python] how to stop a service
Message-ID: <448B0013.8020504@libero.it>

Just to be sure.

I have written a small application that do some computation, than stop.

I have subclassed twisted.application.service.Service, because the
application do some persistence, and this seems to be the best solution (?).

To stop the application/service I just have to call reactor.stop, "as
usual"?



Thanks and regards  Manlio Perillo



From manlio_perillo at libero.it  Sat Jun 10 11:53:47 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 15:53:47 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B0013.8020504@libero.it>
References: <448B0013.8020504@libero.it>
Message-ID: <448B072B.4090008@libero.it>

Manlio Perillo ha scritto:
> Just to be sure.
> 
> I have written a small application that do some computation, than stop.
> 
> I have subclassed twisted.application.service.Service, because the
> application do some persistence, and this seems to be the best solution (?).
> 
> To stop the application/service I just have to call reactor.stop, "as
> usual"?
> 

Just another question: when running application with twistd, how can I
return error codes from my application to operating system?

That is: where (and how) can I safely call os.exit?



Thanks and regards  Manlio Perillo



From exarkun at divmod.com  Sat Jun 10 12:44:31 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Jun 2006 14:44:31 -0400
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B072B.4090008@libero.it>
Message-ID: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>

On Sat, 10 Jun 2006 15:53:47 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Manlio Perillo ha scritto:
>> Just to be sure.
>>
>> I have written a small application that do some computation, than stop.
>>
>> I have subclassed twisted.application.service.Service, because the
>> application do some persistence, and this seems to be the best solution (?).
>>
>> To stop the application/service I just have to call reactor.stop, "as
>> usual"?
>>

Yep.

>
>Just another question: when running application with twistd, how can I
>return error codes from my application to operating system?
>
>That is: where (and how) can I safely call os.exit?
>

There's no support for this yet.

Jean-Paul



From manlio_perillo at libero.it  Sat Jun 10 13:01:55 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 17:01:55 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>
References: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>
Message-ID: <448B1723.7090603@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>>
>> Just another question: when running application with twistd, how can I
>> return error codes from my application to operating system?
>>
>> That is: where (and how) can I safely call os.exit?
>>
> 
> There's no support for this yet.
> 

What about storing the return code in the application instance and call
os.exit(application.retcode) in an after shutdown system event?



Thanks and regards  Manlio Perillo



From exarkun at divmod.com  Sat Jun 10 13:15:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Jun 2006 15:15:21 -0400
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B1723.7090603@libero.it>
Message-ID: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>

On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> [...]
>>>
>>> Just another question: when running application with twistd, how can I
>>> return error codes from my application to operating system?
>>>
>>> That is: where (and how) can I safely call os.exit?
>>>
>>
>> There's no support for this yet.
>>
>
>What about storing the return code in the application instance and call
>os.exit(application.retcode) in an after shutdown system event?
>

That's probably not a bad idea.  One slight change I would suggest is
having the attribute be specified by the IProcess interface and stored
on that facet of the application componentized.  See tickets #718 and
#761 in the tracker.  If someone contributes patches implementing some
functionality in this area I'll try to get it committed.

Jean-Paul



From manlio_perillo at libero.it  Sat Jun 10 14:17:35 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Jun 2006 18:17:35 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>
References: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>
Message-ID: <448B28DF.40207@libero.it>

Jean-Paul Calderone ha scritto:
> On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> Jean-Paul Calderone ha scritto:
>>> [...]
>>>>
>>>> Just another question: when running application with twistd, how can I
>>>> return error codes from my application to operating system?
>>>>
>>>> That is: where (and how) can I safely call os.exit?
>>>>
>>>
>>> There's no support for this yet.
>>>
>>
>> What about storing the return code in the application instance and call
>> os.exit(application.retcode) in an after shutdown system event?
>>
> 
> That's probably not a bad idea.  One slight change I would suggest is
> having the attribute be specified by the IProcess interface and stored
> on that facet of the application componentized.  

Yes, this is much better.

> See tickets #718 and
> #761 in the tracker.  If someone contributes patches implementing some
> functionality in this area I'll try to get it committed.
> 

By the way, there is no support for installing user defined handlers for
signals?

In this way I can implement this idea in my application.



Thanks and regards   Manlio Perillo




From exarkun at divmod.com  Sat Jun 10 14:52:00 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Jun 2006 16:52:00 -0400
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B28DF.40207@libero.it>
Message-ID: <20060610205200.31435.464381603.divmod.quotient.5612@ohm>

On Sat, 10 Jun 2006 18:17:35 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo
>> <manlio_perillo at libero.it> wrote:
>>> Jean-Paul Calderone ha scritto:
>>>> [...]
>>>>>
>>>>> Just another question: when running application with twistd, how can I
>>>>> return error codes from my application to operating system?
>>>>>
>>>>> That is: where (and how) can I safely call os.exit?
>>>>>
>>>>
>>>> There's no support for this yet.
>>>>
>>>
>>> What about storing the return code in the application instance and call
>>> os.exit(application.retcode) in an after shutdown system event?
>>>
>>
>> That's probably not a bad idea.  One slight change I would suggest is
>> having the attribute be specified by the IProcess interface and stored
>> on that facet of the application componentized.
>
>Yes, this is much better.
>
>> See tickets #718 and
>> #761 in the tracker.  If someone contributes patches implementing some
>> functionality in this area I'll try to get it committed.
>>
>
>By the way, there is no support for installing user defined handlers for
>signals?
>
>In this way I can implement this idea in my application.
>

You can just use the signal module to install whatever handlers you
like.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jun 10 23:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1150002301.72.2115214721@twistedmatrix.com

Bug summary
______________________
Summary for 2006-06-04 through 2006-06-11
Bugs opened: 28    Bugs closed: 32  Total open bugs: 620 (-4)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +1  |Highest:  -6          |Conch:               -1  
|Enhancement:  -4  |High:     -5          |Core:                +0  
|Task:         +1  |Normal:  +11          |Ftp:                 +1  
                   |Low:      -2          |Mail:                -1  
                                          |Names:               +0  
                                          |Pair:                +1  
                                          |Release Management:  +0  
                                          |Trial:               +0  
                                          |Vfs:                 +1  
                                          |Web:                 +1  
                                          |Web2:                -2  
                                          |Website:             +1  
                                          |Words:               -3  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1788] twisted/conch/test/test_filetransfer.py has fragile setUp/tearDown (opened by spiv) (CLOSED, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1788

[#1797] twisted/web/topfiles/setup.py fails during build_scripts (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1797

[#1798] iocpreactor should use GetAcceptExSockaddrs instead of getpeername for incoming connections (opened by ghazel)
    defect          core       http://twistedmatrix.com/trac/ticket/1798

[#1800] twisted.test.test_process.Win32ProcessTestCase.testBadArgs fails on win32er and iocpr (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1800

[#1801] Invalid components.implements (opened by therve) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1801

[#1804] numerous coding standard violations, one potential bug not noted in review of #1775 (opened by glyph) (CLOSED, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1804

[#1809] AdvancedPOP3Client doesn't notice SSL is secure (opened by exarkun) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1809

[#1812] Installation error: "Subprocess exited with result 1 for project web" (opened by edsuom) (CLOSED, duplicate)
    defect          release management http://twistedmatrix.com/trac/ticket/1812

                    ===== Normal =====
[#1786] Twisted VFS SFTP tests can be clearer and have more specific purposes. (opened by spiv) (CLOSED, fixed)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/1786

[#1787] Last line of trial's traceback output is often difficult to read (opened by jml)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1787

[#1789] twisted.conch.test.test_filetransfer.TestOurServerOurClient.testOpenFileAttributes (and perhaps others) leaks file descriptors (opened by exarkun)
    defect          conch      http://twistedmatrix.com/trac/ticket/1789

[#1791] Update FAQ links to point to non-obsolete URLs (opened by exarkun)
    task            website    http://twistedmatrix.com/trac/ticket/1791

[#1792] qt step of reactors build fails due to Xlib spew on stderr (opened by spiv)
    defect          core       http://twistedmatrix.com/trac/ticket/1792

[#1793] Threading guide is unclear on reactor requirements (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1793

[#1794] protocols/ftp.py SenderProtocol doesn't implement IFInishableConsumer even though it claims it does (opened by thor)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1794

[#1795] Trial feature for simulating missing modules for a test run (opened by exarkun)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/1795

[#1796] Flumotion could use an API-stable and approved way of stealing the underlying socket of a transport from the reactor (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1796

[#1799] Remove usage of exec from twisted/names/dns.py (opened by exarkun)
    task            names      http://twistedmatrix.com/trac/ticket/1799

[#1802] No tag in tags/ for release 2.4.0 sumo equivalent (opened by moof) (CLOSED, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1802

[#1803] unittest  using adbapi hang on exit (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1803

[#1805] SFTP adapter doesn't translate deferred errors (opened by spiv)
    defect          vfs        http://twistedmatrix.com/trac/ticket/1805

[#1806] adbapi.ConnectionPool.noisy defaults to True, when it should be False (opened by moof)
    defect          core       http://twistedmatrix.com/trac/ticket/1806

[#1807] Exception handling improvements in web2/dav (opened by troy at osc.edu)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1807

[#1808] Buildbot pyflakes stage (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1808

[#1810] Release Twisted Web2 0.2 (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1810

[#1811] setup.py bdist_rpm fails on FC5 for x86_64 (opened by troy at osc.edu) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1811

                    ===== Low =====
[#1790] Remove obsolete release documentation (opened by exarkun)
    enhancement     web        http://twistedmatrix.com/trac/ticket/1790

[#1813] twisted.pair.tuntap uses t.p.c.implements which no longer exists (opened by exarkun)
    defect          pair       http://twistedmatrix.com/trac/ticket/1813



Closed Bugs
______________________
                    ===== Highest =====
[#1454] test failures during chained methods are not reported well (opened by warner, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1454

[#1788] twisted/conch/test/test_filetransfer.py has fragile setUp/tearDown (opened by spiv, closed by spiv, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1788

[#1440] Remove old cred (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1440

[#1788] twisted/conch/test/test_filetransfer.py has fragile setUp/tearDown (opened by spiv, closed by spiv, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1788

[#1734] twisted.words.service has NameErrors (opened by radix, closed by exarkun, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1734

[#1708] twisted.names shouldn't stop listening when crappy data is sent (opened by radix, closed by exarkun, fixed)
    enhancement     names      http://twistedmatrix.com/trac/ticket/1708

[#1609] Docs on return type for IReactorUNIX, IReactorArbitrary missing (opened by msmith, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1609

[#1800] twisted.test.test_process.Win32ProcessTestCase.testBadArgs fails on win32er and iocpr (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1800

[#1804] numerous coding standard violations, one potential bug not noted in review of #1775 (opened by glyph, closed by wsanchez, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1804

[#1604] Write More Doc Strings (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1604

[#1812] Installation error: "Subprocess exited with result 1 for project web" (opened by edsuom, closed by exarkun, duplicate)
    defect          release management http://twistedmatrix.com/trac/ticket/1812

[#1735] skip twisted.words' msn tests when twisted.web is not available (opened by radix, closed by exarkun, fixed)
    task            words      http://twistedmatrix.com/trac/ticket/1735

[#1801] Invalid components.implements (opened by therve, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1801

[#1809] AdvancedPOP3Client doesn't notice SSL is secure (opened by exarkun, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1809

[#1515] Web2 documentation should not disregard the Documentation Standard (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1515

                    ===== High =====
[#1755] t.w2.twscgi.SCGIClientProtocol causes an exception to be raised in t.w2.log._LogByteCounter (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1755

[#1755] t.w2.twscgi.SCGIClientProtocol causes an exception to be raised in t.w2.log._LogByteCounter (opened by dreid, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1755

[#1778] Need a way to locate another resource on the site (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1778

[#1775] Attach URI to a resource during lookup (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1775

[#926 ] Automatically delete plugin cache at the slightest sign of trouble (BUG: Uninstalled plugins are not uncached) (opened by justinj, closed by glyph, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/926

[#1086] ITCPConnector.disconnect() default implementation (or API?) problem (opened by itamarst, closed by glyph, invalid)
    defect          core       http://twistedmatrix.com/trac/ticket/1086

                    ===== Normal =====
[#1786] Twisted VFS SFTP tests can be clearer and have more specific purposes. (opened by spiv, closed by spiv, fixed)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/1786

[#1648] twisted.mail.imap4.IMAP4Client.append docstring (opened by synapsis, closed by exarkun, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1648

[#1802] No tag in tags/ for release 2.4.0 sumo equivalent (opened by moof, closed by radix, invalid)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1802

[#1441] Support registering adapters by the fully qualified python name of objects involved (opened by exarkun, closed by exarkun, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1441

[#1811] setup.py bdist_rpm fails on FC5 for x86_64 (opened by troy at osc.edu, closed by glyph, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1811

[#1768] Synchronous Task Queue (opened by edsuom, closed by glyph, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1768

[#1324] Cacheable/RemoteCache does not work with new style classes (opened by karlb, closed by glyph, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1324

                    ===== Low =====
[#1610] assertions in pyunit test cases don't show tracebacks (opened by radix, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1610

[#1414] IRCClient.userJoined() argument list (opened by urago, closed by exarkun, invalid)
    enhancement     words      http://twistedmatrix.com/trac/ticket/1414

[#1040] Starting threads in a tac file blocks everything (opened by exarkun, closed by exarkun, wontfix)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/1040

[#845 ] TAGS table creation for Twisted source (opened by ytrewq1, closed by glyph, wontfix)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/845





From manlio_perillo at libero.it  Sun Jun 11 02:43:38 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 06:43:38 -0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <448B1723.7090603@libero.it>
References: <20060610184431.31435.1788790639.divmod.quotient.5533@ohm>
	<448B1723.7090603@libero.it>
Message-ID: <448BD7BA.7000800@libero.it>

Manlio Perillo ha scritto:
> Jean-Paul Calderone ha scritto:
>> [...]
>>> Just another question: when running application with twistd, how can I
>>> return error codes from my application to operating system?
>>>
>>> That is: where (and how) can I safely call os.exit?
>>>
>> There's no support for this yet.
>>
> 
> What about storing the return code in the application instance and call
> os.exit(application.retcode) in an after shutdown system event?
> 

Maybe a better place is inside the reactor:

In twisted.internet.base

# IReactorCore

    def stop(self, exitStatus=0):
        """See twisted.internet.interfaces.IReactorCore.stop.
        """
        if not self.running:
            raise RuntimeError, "can't stop reactor that isn't running"
        self.exitStatus = exitStatus
        self.fireSystemEvent("shutdown")

    def crash(self):
        """See twisted.internet.interfaces.IReactorCore.crash.
        """
        self.exitStatus = ???
        self.running = 0

    def sigInt(self, *args):
        """Handle a SIGINT interrupt.
        """
        log.msg("Received SIGINT, shutting down.")
        self.callFromThread(self.stop, SIGINT)

    def sigBreak(self, *args):
        """Handle a SIGBREAK interrupt.
        """
        log.msg("Received SIGBREAK, shutting down.")
        self.callFromThread(self.stop, SIGBREAK)

    def sigTerm(self, *args):
        """Handle a SIGTERM interrupt.
        """
        log.msg("Received SIGTERM, shutting down.")
        self.callFromThread(self.stop, SIGTERM)



In twisted.scripts.twistd:

def runApp(config):
   ...

   log.msg("Server Shut Down.")

   from twisted.internet import reactor
   os.exit(reactor.exitStatus)




Regards  Manlio Perillo



From manlio_perillo at libero.it  Sun Jun 11 03:48:51 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 07:48:51 -0200
Subject: [Twisted-Python] sub options in twisted applications
Message-ID: <448BE703.2080806@libero.it>

I don't know if this is useful/safe, but I have written a patch that
allow users to pass additional command line arguments to an application
started with twistd -y.

I don't know if this is compatible with mktap, this is why I have posted
the "patch" here and not on the traker.


########## In twisted.scripts.twistd
def runApp(config):
    import sys

    sys.argv = appArgv

    ...


def configHelper(argv):
    idx = 1
    for i, opt in enumerate(argv[1:]):
        if not opt.startswith('-'):
            idx = i + 1
            break

    tmp = argv[idx:]
    if len(argv) > idx:
        del argv[idx + 1:]

    return tmp

appArgv = []

def run():
    global appArgv
    import sys

    appArgv = configHelper(sys.argv)
    app.run(runApp, ServerOptions)

#########

Now if I do
twistd -y myapp -x -y

sys.argv is
["myapp", "-x", "-y"]




Regards  Manlio Perillo



From glyph at divmod.com  Sun Jun 11 05:33:36 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sun, 11 Jun 2006 07:33:36 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448BE703.2080806@libero.it>
Message-ID: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>



On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>I don't know if this is useful/safe, but I have written a patch that
>allow users to pass additional command line arguments to an application
>started with twistd -y.
>
>I don't know if this is compatible with mktap, this is why I have posted
>the "patch" here and not on the traker.

I don't think this is a good idea.

As JP said, .tac files *are* configuration, they don't *take* configuration.  If you want to write some patches that improve the ability to write command-line tools that take arguments, submit a patch that fixes this:

    http://twistedmatrix.com/trac/ticket/1501

:)




From itamar at itamarst.org  Sun Jun 11 09:55:39 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Jun 2006 11:55:39 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
References: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
Message-ID: <1150041339.5404.0.camel@localhost.localdomain>

On Sun, 2006-06-11 at 07:33 -0400, glyph at divmod.com wrote:

> As JP said, .tac files *are* configuration, they don't *take*
> configuration.  If you want to write some patches that improve the
> ability to write command-line tools that take arguments, submit a
> patch that fixes this:
> 
>     http://twistedmatrix.com/trac/ticket/1501

Or http://twistedmatrix.com/trac/ticket/1490 

-- 
Itamar Shtull-Trauring
http://itamarst.org





From manlio_perillo at libero.it  Sun Jun 11 11:47:13 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 15:47:13 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
References: <20060611113336.31435.163526368.divmod.quotient.5945@ohm>
Message-ID: <448C5721.6020905@libero.it>

glyph at divmod.com ha scritto:
> 
> 
> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> I don't know if this is useful/safe, but I have written a patch that
>> allow users to pass additional command line arguments to an application
>> started with twistd -y.
>>
>> I don't know if this is compatible with mktap, this is why I have posted
>> the "patch" here and not on the traker.
> 
> I don't think this is a good idea.
> 
> As JP said, .tac files *are* configuration, they don't *take*
> configuration.  

Ok, but I *can not* move .tac file in /etc/myapp/, as an example.


Regards  Manlio Perillo






From exarkun at divmod.com  Sun Jun 11 11:55:10 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jun 2006 13:55:10 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448C5721.6020905@libero.it>
Message-ID: <20060611175510.31435.1931987870.divmod.quotient.6002@ohm>

On Sun, 11 Jun 2006 15:47:13 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>glyph at divmod.com ha scritto:
>>
>>
>> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
>> <manlio_perillo at libero.it> wrote:
>>> I don't know if this is useful/safe, but I have written a patch that
>>> allow users to pass additional command line arguments to an application
>>> started with twistd -y.
>>>
>>> I don't know if this is compatible with mktap, this is why I have posted
>>> the "patch" here and not on the traker.
>>
>> I don't think this is a good idea.
>>
>> As JP said, .tac files *are* configuration, they don't *take*
>> configuration.
>
>Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>

Why not?  Try this:

  mv myapp.tac /etc/myapp/

HTH,

Jean-Paul



From manlio_perillo at libero.it  Sun Jun 11 12:31:42 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 16:31:42 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611175510.31435.1931987870.divmod.quotient.6002@ohm>
References: <20060611175510.31435.1931987870.divmod.quotient.6002@ohm>
Message-ID: <448C618E.3060706@libero.it>

Jean-Paul Calderone ha scritto:
> On Sun, 11 Jun 2006 15:47:13 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> glyph at divmod.com ha scritto:
>>>
>>>
>>> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
>>> <manlio_perillo at libero.it> wrote:
>>>> I don't know if this is useful/safe, but I have written a patch that
>>>> allow users to pass additional command line arguments to an application
>>>> started with twistd -y.
>>>>
>>>> I don't know if this is compatible with mktap, this is why I have
>>>> posted
>>>> the "patch" here and not on the traker.
>>>
>>> I don't think this is a good idea.
>>>
>>> As JP said, .tac files *are* configuration, they don't *take*
>>> configuration.
>>
>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>
> 
> Why not?  Try this:
> 
>  mv myapp.tac /etc/myapp/
> 


I'm not sure...

Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
How can I handle this?



Regards  Manlio Perillo



From exarkun at divmod.com  Sun Jun 11 13:33:02 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jun 2006 15:33:02 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448C618E.3060706@libero.it>
Message-ID: <20060611193302.31435.681618375.divmod.quotient.6026@ohm>

On Sun, 11 Jun 2006 16:31:42 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> On Sun, 11 Jun 2006 15:47:13 -0200, Manlio Perillo
>> <manlio_perillo at libero.it> wrote:
>>> glyph at divmod.com ha scritto:
>>>>
>>>>
>>>> On Sun, 11 Jun 2006 07:48:51 -0200, Manlio Perillo
>>>> <manlio_perillo at libero.it> wrote:
>>>>> I don't know if this is useful/safe, but I have written a patch that
>>>>> allow users to pass additional command line arguments to an application
>>>>> started with twistd -y.
>>>>>
>>>>> I don't know if this is compatible with mktap, this is why I have
>>>>> posted
>>>>> the "patch" here and not on the traker.
>>>>
>>>> I don't think this is a good idea.
>>>>
>>>> As JP said, .tac files *are* configuration, they don't *take*
>>>> configuration.
>>>
>>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>>
>>
>> Why not?  Try this:
>>
>>  mv myapp.tac /etc/myapp/
>>
>
>
>I'm not sure...
>
>Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
>How can I handle this?
>

I don't understand how the location of the tac file matters.

Jean-Paul



From manlio_perillo at libero.it  Sun Jun 11 14:31:25 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sun, 11 Jun 2006 18:31:25 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611193302.31435.681618375.divmod.quotient.6026@ohm>
References: <20060611193302.31435.681618375.divmod.quotient.6026@ohm>
Message-ID: <448C7D9D.7020308@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>>>>> As JP said, .tac files *are* configuration, they don't *take*
>>>>> configuration.
>>>>
>>>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>>>
>>>
>>> Why not?  Try this:
>>>
>>>  mv myapp.tac /etc/myapp/
>>>
>>
>>
>> I'm not sure...
>>
>> Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
>> How can I handle this?
>>
> 
> I don't understand how the location of the tac file matters.
> 

Well, it does not matters if the application "package" is on the PYTHONPATH.

But I'm not sure about this, how should be installed a Twisted application?



Regards  Manlio Perillo




From exarkun at divmod.com  Sun Jun 11 16:16:41 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Jun 2006 18:16:41 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448C7D9D.7020308@libero.it>
Message-ID: <20060611221641.31435.1632465558.divmod.quotient.6060@ohm>

On Sun, 11 Jun 2006 18:31:25 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Jean-Paul Calderone ha scritto:
>> [...]
>>>>>> As JP said, .tac files *are* configuration, they don't *take*
>>>>>> configuration.
>>>>>
>>>>> Ok, but I *can not* move .tac file in /etc/myapp/, as an example.
>>>>>
>>>>
>>>> Why not?  Try this:
>>>>
>>>>  mv myapp.tac /etc/myapp/
>>>>
>>>
>>>
>>> I'm not sure...
>>>
>>> Usually myapp.tac have to import other (sub)modules, (sub)packages, data.
>>> How can I handle this?
>>>
>>
>> I don't understand how the location of the tac file matters.
>>
>
>Well, it does not matters if the application "package" is on the PYTHONPATH.
>
>But I'm not sure about this, how should be installed a Twisted application?
>

However you generally install software on your preferred platform.  What's
special about Twisted applications?

Jean-Paul



From fairwinds at eastlink.ca  Mon Jun 12 09:25:58 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 12 Jun 2006 12:25:58 -0300
Subject: [Twisted-Python] pb.Broker subclass question
Message-ID: <448D8786.7010507@eastlink.ca>

Hi. I'm interested in subclassing Broker to extend it. I've subclassed 
the PBServerFactory and PBClientFactory. The server starts with the new 
protocol class but the client is unable to communicate. I believe the 
client is not using the correct protocol since it gets it from Broker to 
start. Can someone provide some advice on a way to subclassing the 
client to have it use a subclassed Broker protocol. Many thanks

Regards,
David



From exarkun at divmod.com  Mon Jun 12 09:47:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Jun 2006 11:47:54 -0400
Subject: [Twisted-Python] pb.Broker subclass question
In-Reply-To: <448D8786.7010507@eastlink.ca>
Message-ID: <20060612154754.31435.1844329110.divmod.quotient.6297@ohm>

On Mon, 12 Jun 2006 12:25:58 -0300, David Pratt <fairwinds at eastlink.ca> wrote:
>Hi. I'm interested in subclassing Broker to extend it. I've subclassed the 
>PBServerFactory and PBClientFactory. The server starts with the new protocol 
>class but the client is unable to communicate. I believe the client is not 
>using the correct protocol since it gets it from Broker to start. Can 
>someone provide some advice on a way to subclassing the client to have it 
>use a subclassed Broker protocol. Many thanks

What does your Broker subclass do?

Jean-Paul



From fairwinds at eastlink.ca  Mon Jun 12 10:16:06 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Mon, 12 Jun 2006 13:16:06 -0300
Subject: [Twisted-Python] pb.Broker subclass question
In-Reply-To: <20060612154754.31435.1844329110.divmod.quotient.6297@ohm>
References: <20060612154754.31435.1844329110.divmod.quotient.6297@ohm>
Message-ID: <448D9346.2040606@eastlink.ca>

Hi Jean-Paul. Nothing too special - I have just added a couple of 
attributes for classes the subclassed Broker will use and a couple of 
notification methods back to the factory. Can you advise a method for 
this sort of subclassing that might work so Client and Server are fine 
with the subclassed Broker.

Regard,
David

Jean-Paul Calderone wrote:
> On Mon, 12 Jun 2006 12:25:58 -0300, David Pratt <fairwinds at eastlink.ca> 
> wrote:
>> Hi. I'm interested in subclassing Broker to extend it. I've subclassed 
>> the PBServerFactory and PBClientFactory. The server starts with the 
>> new protocol class but the client is unable to communicate. I believe 
>> the client is not using the correct protocol since it gets it from 
>> Broker to start. Can someone provide some advice on a way to 
>> subclassing the client to have it use a subclassed Broker protocol. 
>> Many thanks
> 
> What does your Broker subclass do?
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From manlio_perillo at libero.it  Mon Jun 12 11:52:22 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Mon, 12 Jun 2006 15:52:22 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060611221641.31435.1632465558.divmod.quotient.6060@ohm>
References: <20060611221641.31435.1632465558.divmod.quotient.6060@ohm>
Message-ID: <448DA9D6.2050403@libero.it>

Jean-Paul Calderone ha scritto:
> [...]
>
>>> I don't understand how the location of the tac file matters.
>>>
>>
>> Well, it does not matters if the application "package" is on the
>> PYTHONPATH.
>>
>> But I'm not sure about this, how should be installed a Twisted
>> application?
>>
> 
> However you generally install software on your preferred platform.  What's
> special about Twisted applications?
> 

In general software (but I have only Windows experience here) all
modules are in the same directory.

So when I run the "main" module, the software directory is in PYTHONPATH.

But what if I want to put pyapp.tac in /etc/myapp/ while the application
is in /usr/lib/myapp?



Thanks and regards  Manlio Perillo



From glyph at divmod.com  Mon Jun 12 18:38:30 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Jun 2006 20:38:30 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448DA9D6.2050403@libero.it>
Message-ID: <20060613003830.31435.1087446195.divmod.quotient.6412@ohm>

On Mon, 12 Jun 2006 15:52:22 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:

>In general software (but I have only Windows experience here) all
>modules are in the same directory.
>
>So when I run the "main" module, the software directory is in PYTHONPATH.
>
>But what if I want to put pyapp.tac in /etc/myapp/ while the application
>is in /usr/lib/myapp?

If there were actually a valid reason to do this, your init script would do something like ...

    PYTHONPATH=/usr/lib/myapp:$PYTHONPATH twistd -y /etc/myapp/myapp.tac

... but there isn't.  Why is your application so special that it can't be installed in the same place as every other python application?  Why shouldn't the regular Python interpreter be able to 'import' your modules?

(If the user wants to put your module somewhere other than site-packages that is certainly their choice, but that is what sitecustomize and PYTHONPATH are for.)

Does anyone else remember commercial UNIX applications that would require installation to a fixed, non-standard location and then require that you set LD_LIBRARY_PATH in some configuration file?  That was gross, and lead to all manner of problems, this is no better.



From twisted at ralphm.ik.nu  Tue Jun 13 01:51:51 2006
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 13 Jun 2006 09:51:51 +0200
Subject: [Twisted-Python] how to stop a service
In-Reply-To: <20060610191521.31435.576089388.divmod.quotient.5552@ohm>
References: <448B1723.7090603@libero.it>
	<20060610191521.31435.576089388.divmod.quotient.5552@ohm>
Message-ID: <20060613075151.GA9631@ik.nu>

On Sat, Jun 10, 2006 at 03:15:21PM -0400, Jean-Paul Calderone wrote:
> On Sat, 10 Jun 2006 17:01:55 -0200, Manlio Perillo 
> <manlio_perillo at libero.it> wrote:
> >Jean-Paul Calderone ha scritto:
> >>[...]
> >>>
> >>>Just another question: when running application with twistd, how can I
> >>>return error codes from my application to operating system?
> >>>
> >>>That is: where (and how) can I safely call os.exit?
> >>>
> >>
> >>There's no support for this yet.
> >>
> >
> >What about storing the return code in the application instance and call
> >os.exit(application.retcode) in an after shutdown system event?
> >
> 
> That's probably not a bad idea.  One slight change I would suggest is
> having the attribute be specified by the IProcess interface and stored
> on that facet of the application componentized.  See tickets #718 and
> #761 in the tracker.  If someone contributes patches implementing some
> functionality in this area I'll try to get it committed.

Wouldn't it be better to have the reactor.run() call to return the exit
code instead of something inside twisted calling os.exit() itself?

-- 
Groetjes,

ralphm



From manlio_perillo at libero.it  Tue Jun 13 02:52:16 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 13 Jun 2006 06:52:16 -0200
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <20060613003830.31435.1087446195.divmod.quotient.6412@ohm>
References: <20060613003830.31435.1087446195.divmod.quotient.6412@ohm>
Message-ID: <448E7CC0.2010805@libero.it>

glyph at divmod.com ha scritto:
> On Mon, 12 Jun 2006 15:52:22 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
> 
>> In general software (but I have only Windows experience here) all
>> modules are in the same directory.
>>
>> So when I run the "main" module, the software directory is in PYTHONPATH.
>>
>> But what if I want to put pyapp.tac in /etc/myapp/ while the application
>> is in /usr/lib/myapp?
> 
> If there were actually a valid reason to do this, your init script would
> do something like ...
> 
>    PYTHONPATH=/usr/lib/myapp:$PYTHONPATH twistd -y /etc/myapp/myapp.tac
> 
> ... but there isn't.  Why is your application so special that it can't
> be installed in the same place as every other python application?  Why
> shouldn't the regular Python interpreter be able to 'import' your modules?
> 

Mailman, as an example, does not install itself in site-package...
GNOME applications written in Python do not install in site-package (non
 100% sure).




Regards  Manlio Perillo



From jcea at argo.es  Tue Jun 13 07:43:45 2006
From: jcea at argo.es (Jesus Cea)
Date: Tue, 13 Jun 2006 15:43:45 +0200
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <448634BA.2050800@comcast.net>
References: <447CA73E.5090705@comcast.net> <4485FE30.3070700@argo.es>
	<448634BA.2050800@comcast.net>
Message-ID: <448EC111.5080406@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stephen Waterbury wrote:
> Pyro's been around for a while.  It's useful for simple things
> but has several deficiencies relative to PB.

Details? :-).

I had have running pyro for ages (patched) and I'm fairly happy. My main
complain is the centralized nameserver, so I privately implemented a
distributed service locator using "spread" :-).

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI7BEZlgi5GaxT1NAQKxDwP/Y+KzO5Ja5dH4DxNkCuo1TVBBGKuRlo8R
9UwlLzjU87wXJaMAyaG4VL2TxKdw2hNSsGDfIFboEfXQW5aTSIITiiJU6KEEBbjM
zalC8Ozj0Lv61fszkRZ8KxFVclR2qn/wNC3FvTa5gppjAUpEQX4eNpheRQYvXJDr
SxNxzyKxu6s=
=0HQc
-----END PGP SIGNATURE-----



From jcea at argo.es  Tue Jun 13 07:48:10 2006
From: jcea at argo.es (Jesus Cea)
Date: Tue, 13 Jun 2006 15:48:10 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <1149761123.24971.120.camel@otto.amantes>
References: <1149761123.24971.120.camel@otto.amantes>
Message-ID: <448EC21A.5010001@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Thomas Vander Stichele wrote:
> - how do persistent object systems typically deal with transactions ?
> Suppose you want to do three operations on three different objects as a
> transaction, is that possible at all ?

I recomend you "durus" (http://www.mems-exchange.org/software/durus/)
and, depending of your usage profile, my storage backend:
<http://www.argo.es/~jcea/programacion/durus-berkeleydbstorage.htm>

Yes, durus supports transactions.

Durus is not async, but wrapping it in a thread should be easy enough.
I'm fairly involved with Durus, so I could help you there.

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI7CGZlgi5GaxT1NAQJHKQQAl+ZB5zjX+n51dandH3q7n1M20qnoEdbI
mkIZ0rKX8BFKcCixp9ZlJf01HszNJ93OqUxlNofwZKRz26JoO+FGjtZrV9QYDWUC
/uOdSinqsrpCgRhYOOnNjut/ks/RpHVsknHPWfxQL9nUDHqLObvy8PmGvhVkl9wk
u6CPJzETaec=
=yaBs
-----END PGP SIGNATURE-----



From terry at jon.es  Tue Jun 13 08:23:43 2006
From: terry at jon.es (Terry Jones)
Date: Tue, 13 Jun 2006 16:23:43 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: Your message at 15:48:10 on Tuesday, 13 June 2006
References: <1149761123.24971.120.camel@otto.amantes>
	<448EC21A.5010001@argo.es>
Message-ID: <17550.51823.969151.444380@terry.jones.tc>

>>>>> "Jesus" == Jesus Cea <jcea at argo.es> writes:

Jesus> I recomend you "durus"
Jesus> (http://www.mems-exchange.org/software/durus/) and, depending of
Jesus> your usage profile, my storage backend:
Jesus> <http://www.argo.es/~jcea/programacion/durus-berkeleydbstorage.htm>

Jesus> Yes, durus supports transactions.
Jesus> Durus is not async, but wrapping it in a thread should be easy enough.
Jesus> I'm fairly involved with Durus, so I could help you there.

Hi Jesus

Thanks for the info.  I think I've seen Durus before, but was not aware
that you had implemented a BSD backend. Does that mean the qualification on
the Durus home page "Durus is best suited to collections of less than a
million instances with relatively stable state." does not apply here?

After looking around at some Pyhon persistence options, I decided to use
ZODB. I'd be happy to hear your thoughts on Durus+BSD versus ZODB. I was
disappointed to see that ZODB had dropped BSD as a backend as BSD is battle
hardened and I wanted to use its secondary DBs. BTW, I had no reply to
email sent to greg at electricrain.com, the maintainer of the Python bsddb
interface. I presume you are using that code? Anyway, I am using the BTrees
provided by ZCatalog in Zope. Apart from things like robustness, speed, and
number of objects I could store, I very much wanted to avoid having
multiple persistence systems. Using ZODB makes this very easy. It sounds
like you have that advantage too.

How well supported is Durus? What about your interface?

Are you in Spain? We can discuss that offline I guess.

Regards,
Terry



From glyph at divmod.com  Tue Jun 13 08:36:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 13 Jun 2006 10:36:21 -0400
Subject: [Twisted-Python] sub options in twisted applications
In-Reply-To: <448E7CC0.2010805@libero.it>
Message-ID: <20060613143621.31435.942337279.divmod.quotient.6509@ohm>

On Tue, 13 Jun 2006 06:52:16 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>glyph at divmod.com ha scritto:

>> Why is your application so special that it can't
>> be installed in the same place as every other python application?  Why
>> shouldn't the regular Python interpreter be able to 'import' your modules?

>Mailman, as an example, does not install itself in site-package...
>GNOME applications written in Python do not install in site-package (non
> 100% sure).

This is really a configuration decision that gets mixed up with an application's packaging.

Some GNOME applications do live in site-packages by default; for example, gnome-blog.  Some, like Quod Libet, are only in their own installation directory because they don't use their own namespace (and this is arguably a bug).  Some, like Straw, have no real reason.

Mailman puts itself into a non-site-packages directory because it wants to be able to install its own versions of the 'email' and 'codecs' packages, regardless of what other versions of those bits of software you have on your system.

Although I'm not a huge fan of the "egg" format as it stands, it does solve the particular problem of per-application version dependencies a bit better than these ad-hoc decisions made on behalf of each application in a platform-specific way.

On a platform like Debian where the package manager is verifying that your package versions match, the additional support is unnecessary unless you have applications which explicitly depend on different, incompatible versions of the same library.

In short: your application should at least be *able* to install itself in site-packages on systems where the package versions line up properly.  In the case where they don't, setting PYTHONPATH in a startup script is perfectly acceptable.

None of this, you'll notice, has anything to do with .tac files :).  If your application requires a particular version of Twisted, for example, the 'twistd' script which your startup script invokes will need to be specifically selected as well; you can't run whatever random twistd is on your PATH and then require a specific version of twistd in the .tac, so it's too late to start manipulating your sys.path there.



From jcea at argo.es  Tue Jun 13 16:56:32 2006
From: jcea at argo.es (Jesus Cea)
Date: Wed, 14 Jun 2006 00:56:32 +0200
Subject: [Twisted-Python] recommended twisted database coding
In-Reply-To: <17550.51823.969151.444380@terry.jones.tc>
References: <1149761123.24971.120.camel@otto.amantes>	<448EC21A.5010001@argo.es>
	<17550.51823.969151.444380@terry.jones.tc>
Message-ID: <448F42A0.8010204@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Terry Jones wrote:
> Thanks for the info.  I think I've seen Durus before, but was not aware
> that you had implemented a BSD backend. Does that mean the qualification on
> the Durus home page "Durus is best suited to collections of less than a
> million instances with relatively stable state." does not apply here?

Right. My storage engine allows multigigabytes repositories, with a lot
of writes. Actually, I use it myself with a 933 gygabytes repository
(mailbox storage) and a couple of days ago a guy reported me his
profile: 16 terabytes storage managing medical scanning images.

> After looking around at some Pyhon persistence options, I decided to use
> ZODB. I'd be happy to hear your thoughts on Durus+BSD versus ZODB. I was
> disappointed to see that ZODB had dropped BSD as a backend as BSD is battle
> hardened and I wanted to use its secondary DBs.

ZODB is fine, but its storage engine is ugly. I miss also the BSD
backend. Without it, ZODB behaviour when you have a lot of writes is not
better than stock Durus. The main advantages of ZODB over Durus is the
distributed caching client (ZEO) and the multithreading support. I'm
working with the Durus guys to improve durus in those areas. Progress is
slow but working on it :-p

For my environment, Durus simplicity (you can keep the entiry durus code
in your head) and performance, plus my storage backend goodies, are my
favourite poisons :).

> BTW, I had no reply to
> email sent to greg at electricrain.com, the maintainer of the Python bsddb
> interface. I presume you are using that code?

Yes I use pybddb. In fact, next release (in python 2.5 beta 1) will
include some patches of mine :-). Greg is a bit slow answering email. I
suffer it myself from time to time :). The inminent Python 2.5 beta
could increase his workload, also, I guess. So, forgiveness...

> Anyway, I am using the BTrees
> provided by ZCatalog in Zope. Apart from things like robustness, speed, and
> number of objects I could store, I very much wanted to avoid having
> multiple persistence systems. Using ZODB makes this very easy. It sounds
> like you have that advantage too.

Durus has a BTree class also :). I also prefer to use a single
persistence system. I'm decommisioning SQL, for example, migrating all
my systems to Durus backends. My Durus preference over ZODB started
because I could understand Durus completely, and its "limitations" were
not important to me. Nowadays Durus was improved a lot and I still see
additional potential to grow.

BTW, I see very few people using ZODB outside ZOPE. Ah, my personal
webserver runs Zope :p

> How well supported is Durus? What about your interface?

My only complain about Durus support is that it is not a open source
proyect in the sense that you can't directly contribute code. This is an
issue I had talked to the coder guys several times in the past. I guess
that if durus could reach a critical mass, the issue would be solved by
itself. Meantime, the difficulty is convincing the coder guys that your
suggestions a) do not hurt their performance and b) are valuable enough
for their workload. Of course, their workload is not your workload. In
any case, I must say that they are smart and recognize a good idea when
they see it. The mailing list is quiet and supportive, also.

About my backend... currently I try to do a monthly release, although
current releases are already production ready. I'm very motivated and
Durus + my backend are top priorities now for me, so... I'm planning for
replication/redundancy also, if Durus guys implement some suggestions I
did recently :).

> Are you in Spain? We can discuss that offline I guess.

Yes. I live in Madrid.

We are getting a bit offtopic. If you use jabber/XMPP, you can contact
me online. See details in my signature.

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea at argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea at jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI9CoJlgi5GaxT1NAQL/pwP+LQQnzJANoDaAjp2/7nAMl1CMcrCgBIrP
WUapc2h6W8SsO4XYRuWd8d/yZAvhG7ZnsGZOHYnn4qvQ9BPBwNDy1z2vej/ZdQpd
KbGOSwW2hNm8burdmHvbVvRAPuuZGS+0u0/YApOQ+XTsiMOxpPHeFdRPncw+J9Lg
uzcnUVXpZC4=
=nhHW
-----END PGP SIGNATURE-----



From sc at linux.it  Wed Jun 14 10:04:14 2006
From: sc at linux.it (Stefano Canepa)
Date: Wed, 14 Jun 2006 18:04:14 +0200
Subject: [Twisted-Python] pb and other protocol
Message-ID: <1150301054.6133.9.camel@localhost>

Hi all,
	I have an application listening on a port that needs to connect to a pb
server. As the reactor is running for the server part, how can I do
somethink like the protocol.ClientCreator I use in other applications
that are pb server and client for other protocols?

TIA
Stefano

-- 
Stefano Canepa aka sc: sc at linux.it  http://www.stefanocanepa.it
Three great virtues of a programmer: laziness, impatience and hubris.
Le tre grandi virtù di un programmatore: pigrizia, impazienza e
arroganza. (Larry Wall)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa è una parte del messaggio	firmata digitalmente
URL: </pipermail/twisted-python/attachments/20060614/a2f9a797/attachment.sig>

From eprparadocs at gmail.com  Wed Jun 14 14:01:35 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 16:01:35 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44906B1F.1060007@gmail.com>

I've written a simple protocol, factory and service and can't seem to
get it to work right. It is so simple that I can't seem to figure out
the problem.

Here is the code:

---------------------------------------------------------

# Import standard python modules
from random import random
from cmath import exp


# Import 3rd party modules
from twisted.internet.protocol import DatagramProtocol, ServerFactory
from twisted.internet import reactor
from twisted.application import internet


class NeedFilesServer(DatagramProtocol) :
    def datagramReceived(self, dgram, sourceIP) :
        if dgram == 'HELPNeedFiles' :
		self.transport.write(IAmHere",sourceIP)

class NeedFilesFactory(ServerFactory):
    protocol = NeedFilesServer

class NeedFilesService(internet.UDPServer):
    def __init__(self,wkp):
        internet.UDPServer.__init__(self,wkp,NeedFilesFactory())

-----------------------------------------------------------------

When I do the standard application thing...

application = service.Application('foo')
srv = service.MultiService()
NeedFilesSrv = NeedFilesService(config['wkp'])
NeedFilesSrv.setServiceParent(srv)
srv.setServiceParent(service.IServiceCollection(application))

I get a the following trace:

Traceback (most recent call last):
2006/06/14 15:23 EDT [-]   File "/usr/bin/twistd", line 25, in ?
2006/06/14 15:23 EDT [-]     run()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/scripts/twistd.py", line
205, in run
2006/06/14 15:23 EDT [-]     app.run(runApp, ServerOptions)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/app.py", line
278, in run
2006/06/14 15:23 EDT [-]     runApp(config)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/scripts/twistd.py", line
196, in runApp
2006/06/14 15:23 EDT [-]     startApplication(config, application)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/scripts/twistd.py", line
173, in startApplication
2006/06/14 15:23 EDT [-]
service.IService(application).privilegedStartService()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/service.py",
line 191, in privilegedStartService
2006/06/14 15:23 EDT [-]     service.privilegedStartService()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/service.py",
line 191, in privilegedStartService
2006/06/14 15:23 EDT [-]     service.privilegedStartService()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/internet.py",
line 68, in privilegedStartService
2006/06/14 15:23 EDT [-]     self._port = self._getPort()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/application/internet.py",
line 86, in _getPort
2006/06/14 15:23 EDT [-]     return getattr(reactor,
'listen'+self.method)(*self.args, **self.kwargs)
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/internet/posixbase.py", line
307, in listenUDP
2006/06/14 15:23 EDT [-]     p.startListening()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/internet/udp.py", line 85,
in startListening
2006/06/14 15:23 EDT [-]     self._connectToProtocol()
2006/06/14 15:23 EDT [-]   File
"/usr/lib64/python2.4/site-packages/twisted/internet/udp.py", line 105,
in _connectToProtocol
2006/06/14 15:23 EDT [-]     self.protocol.makeConnection(self)
2006/06/14 15:23 EDT [-] AttributeError: NeedFilesFactory instance has
no attribute 'makeConnection'


I've looked at the FTP protocol code and I seem to be doing the same
things.

Does anyone know what I am doing wrong?

Thanks in advance,
Chaz.



From exarkun at divmod.com  Wed Jun 14 14:15:48 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Jun 2006 16:15:48 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <44906B1F.1060007@gmail.com>
Message-ID: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>

On Wed, 14 Jun 2006 16:01:35 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I've written a simple protocol, factory and service and can't seem to
>get it to work right. It is so simple that I can't seem to figure out
>the problem.
>
>Here is the code:

UDP servers don't use factories, since there is no network-level
connection for which to maintain state.  Instead, pass an instance
of DatagramProtocol directly to listenUDP.

Jean-Paul



From eprparadocs at gmail.com  Wed Jun 14 14:33:19 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 16:33:19 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>
References: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>
Message-ID: <4490728F.9040603@gmail.com>

How come the Echo server example shows a factory being used?

Chaz.

Jean-Paul Calderone wrote:
> On Wed, 14 Jun 2006 16:01:35 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>> I've written a simple protocol, factory and service and can't seem to
>> get it to work right. It is so simple that I can't seem to figure out
>> the problem.
>>
>> Here is the code:
> 
> UDP servers don't use factories, since there is no network-level
> connection for which to maintain state.  Instead, pass an instance
> of DatagramProtocol directly to listenUDP.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From itamar at itamarst.org  Wed Jun 14 15:02:19 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Jun 2006 17:02:19 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <4490728F.9040603@gmail.com>
References: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>
	<4490728F.9040603@gmail.com>
Message-ID: <1150318939.5617.37.camel@localhost.localdomain>

On Wed, 2006-06-14 at 16:33 -0400, Chaz. wrote:
> How come the Echo server example shows a factory being used?

Doesn't that use TCP, rather than UDP?




From eprparadocs at gmail.com  Wed Jun 14 16:33:01 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 18:33:01 -0400
Subject: [Twisted-Python] Problem and clueless what it is....
In-Reply-To: <1150318939.5617.37.camel@localhost.localdomain>
References: <20060614201548.29014.1687662818.divmod.quotient.222@ohm>	
	<4490728F.9040603@gmail.com>
	<1150318939.5617.37.camel@localhost.localdomain>
Message-ID: <44908E9D.4050605@gmail.com>

I don't know; is protocol a TCP protocol? Here is the example:

class Echo(protocol.Protocol):

    def dataReceived(self, data):
        self.transport.write(data)

class EchoFactory(protocol.ServerFactory):

    protocol = Echo


Chaz.

Itamar Shtull-Trauring wrote:
> On Wed, 2006-06-14 at 16:33 -0400, Chaz. wrote:
>> How come the Echo server example shows a factory being used?
> 
> Doesn't that use TCP, rather than UDP?
> 
> 




From eprparadocs at gmail.com  Wed Jun 14 17:31:40 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 14 Jun 2006 19:31:40 -0400
Subject: [Twisted-Python] Intercepting shutdown ?
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44909C5C.9090508@gmail.com>

I am sorry I keep asking all these questions and hope you can tolerate
at least one more. I have an application that has five services in it;
two are factory based and three are protocol based (UDP).

To shut the system down I need to blast out a couple of messages to one
of the UDP connections. Is there an easy way to do this?


Thanks once again,
Chaz



From exarkun at divmod.com  Wed Jun 14 20:02:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Jun 2006 22:02:44 -0400
Subject: [Twisted-Python] Intercepting shutdown ?
In-Reply-To: <44909C5C.9090508@gmail.com>
Message-ID: <20060615020244.29014.757372852.divmod.quotient.513@ohm>

On Wed, 14 Jun 2006 19:31:40 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I am sorry I keep asking all these questions and hope you can tolerate
>at least one more. I have an application that has five services in it;
>two are factory based and three are protocol based (UDP).
>
>To shut the system down I need to blast out a couple of messages to one
>of the UDP connections. Is there an easy way to do this?
>

See twisted.internet.interfaces.IReactorCore and twisted.application:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorCore.html#twisted.internet.interfaces.IReactorCore.addSystemEventTrigger
http://twistedmatrix.com/documents/current/api/twisted.application.service.Service.html

Jean-Paul



From terry at jon.es  Thu Jun 15 09:09:26 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 17:09:26 +0200
Subject: [Twisted-Python] twisted.plugin question
Message-ID: <17553.30758.121742.323787@terry.jones.tc>

Is the Twisted plugin system described here

  http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

still supported / functional?

I tried implementing the example on that page and couldn't make it
work.  Below is my simplified code from that example, in two files.

BTW, the code on that page in the section Extending an Existing Program is
missing a 'from zope.interface import implements'. Also, the assumption
that code is in a file called imatsim.py, and the curious 'from matsim
import imatsim' could be explained. I guess the later is just a harmless
anachronism?

Regards,
Terry


# -------------------
# Begin plugin.py:
import sys
from zope.interface import Interface
from twisted.plugin import getPlugins

sys.path[:0] = ['./twisted/plugins']

class IMaterial(Interface):
    def yieldStress(temperature):
        """ """
def displayMaterial(m):
    print 'A material with yield stress %s at 500 K' % (m.yieldStress(500),)

def displayAllKnownMaterials():
    for material in getPlugins(IMaterial):
        displayMaterial(material)

if __name__ == '__main__':
    displayAllKnownMaterials()
# End plugin.py:


# -------------------
# Begin ./twisted/plugins/materials.py:
from twisted.plugin import IPlugin
from plugin import IMaterial
from zope.interface import implements

class SimpleMaterial(object):
    implements(IPlugin, IMaterial)

    def __init__(self, yieldStressFactor):
        self._yieldStressFactor = yieldStressFactor

    def yieldStress(self, temperature):
        return self._yieldStressFactory * temperature

steelPlate = SimpleMaterial(2)
brassPlate = SimpleMaterial(1)
# End ./twisted/plugins/materials.py:



When I run plugin.py, I get the error:

$ python plugin.py
Traceback (most recent call last):
  File "plugin.py", line 18, in ?
    displayAllKnownMaterials()
  File "plugin.py", line 14, in displayAllKnownMaterials
    for material in getPlugins(IMaterial):
  File "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/twisted/plugin.py", line 210, in getPlugins
    allDropins = getCache(package)
  File "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/twisted/plugin.py", line 176, in getCache
    newCacheData = pickle.dumps(cache, 2)
cPickle.PicklingError: Can't pickle <InterfaceClass plugin.IMaterial>: attribute lookup plugin.IMaterial failed



From terry at jon.es  Thu Jun 15 09:24:10 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 17:24:10 +0200
Subject: [Twisted-Python] General question on components, interfaces, etc.
Message-ID: <17553.31642.395380.717728@terry.jones.tc>

I've been trying to properly understand components, interfaces, adaptors
etc., as summarized here

  http://twistedmatrix.com/projects/core/documentation/howto/components.html

and elsewhere.

Although I feel like I understand the various bit & pieces, I still don't
feel like I have a good grip on when these things are most useful, or that
I can recognize patterns where they can be best applied. I do have the
feeling that it's important though.

So here's a specific example and question.

Suppose I am implementing some functionality that I want to be able to
easily replace with an alternate implementation, perhaps written by someone
else. I can use some kind of plugin architecture, and I can specify an
Interface that the plugin code is expected to provide. I can look for
plugins (or have twisted.plugin do it for me), import them, allow a user
config file to specify the preferred plugin to use to provide the
functionality, and I can test the loaded plugin to see that it does provide
the Interface.

All that makes sense, but I'm not sure what it really buys me. An
alternative would just be to document the expected interface (perhaps as an
Interface), and then use __import__() to load the desired implementation.

It seems that without needing adapters, the component architecture doesn't
really buy me anything except a formalism (which I do think has value,
though limited).

Is this thinking more or less correct? How would people go about doing what
I outline above?

Regards,
Terry



From exarkun at divmod.com  Thu Jun 15 10:21:24 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jun 2006 12:21:24 -0400
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: <17553.30758.121742.323787@terry.jones.tc>
Message-ID: <20060615162124.29014.1693079773.divmod.quotient.965@ohm>

On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:
>Is the Twisted plugin system described here
>
>  http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>
>still supported / functional?

Yes.

>
>I tried implementing the example on that page and couldn't make it
>work.  Below is my simplified code from that example, in two files.

One problem with the code attached is that it creates a plugin class
which implements plugin.IMaterial but then goes and searches for
plugins which provide __main__.IMaterial.  Since these aren't the same
interface, even without the pickle error no results will be found.

As for the pickle error itself, I'm not sure what's causing it.  I
can't reproduce it myself.  The exception suggests that either
"plugin" cannot be imported, or that it has no attribute IMaterial.
Since the module which defines the object being pickled imports
plugin and uses its IMaterial attribute, this seems unlikely, but
that is what the exception suggests to me.

>
>BTW, the code on that page in the section Extending an Existing Program is
>missing a 'from zope.interface import implements'. Also, the assumption
>that code is in a file called imatsim.py, and the curious 'from matsim
>import imatsim' could be explained. I guess the later is just a harmless
>anachronism?

I've created a ticket in the tracker for expanding the howto to explain
these things.  Thanks for pointing out that they were not well explained.

Jean-Paul



From eprparadocs at gmail.com  Thu Jun 15 11:34:59 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 15 Jun 2006 13:34:59 -0400
Subject: [Twisted-Python] Twistd and command line options...
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44919A43.6090400@gmail.com>

I have built a twistd application and now I want to pass in some
arguments from the command line. The code I use is:

class Options(usage.Options) :
   optParameters = [['wkp','Z','2200','The well known port']]

config = Options()
try :
    config.parseOptions()
except usage.UsageError, e:
    print '%s: %s' % (sys.argv[0],e)
    print '%s: Try --help for usage details.' % (sys.argv[0])
    sys.exit(1)

I've tried running "twistd -ny --wkp=2200 foo.tac" and "twistd -ny
foo.tac --wkp=2000" without success.

I've decided I must not know how to get command line options to foo.tac.
Can someone please enlighten me?

Thanks,
Chaz



From eprparadocs at gmail.com  Thu Jun 15 11:36:53 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 15 Jun 2006 13:36:53 -0400
Subject: [Twisted-Python] Manhole - an example? Anyone?
In-Reply-To: <4479018B.7060503@eepatents.com>
References: <4479018B.7060503@eepatents.com>
Message-ID: <44919AB5.3030208@gmail.com>

Yes, a second question in a row...I am extending my application (that
runs under twistd) to use Manhole. It looks like a great extension.
Unfortunately after doing a google on twisted manhole I came up with zilch.

Does anyone have an example they can pass my way?

Thanks in advance,
Chaz



From thostrup at gmail.com  Thu Jun 15 12:31:06 2006
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 15 Jun 2006 20:31:06 +0200
Subject: [Twisted-Python] Manhole - an example? Anyone?
In-Reply-To: <44919AB5.3030208@gmail.com>
References: <4479018B.7060503@eepatents.com> <44919AB5.3030208@gmail.com>
Message-ID: <f33a4da20606151131h4da5ec7dtc50f4d1e91e27718@mail.gmail.com>

On 6/15/06, Chaz. <eprparadocs at gmail.com> wrote:
>
> Yes, a second question in a row...I am extending my application (that
> runs under twistd) to use Manhole. It looks like a great extension.
> Unfortunately after doing a google on twisted manhole I came up with
> zilch.
>
> Does anyone have an example they can pass my way?


Check out the sample chapter in the Oreilly Twisted Book[1]. It also
includes how to do make it accessible over SSH.

If you like the book, you should of course buy it :-).


1. http://oreilly.com/catalog/twistedadn/

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060615/406b6189/attachment.html>

From glyph at divmod.com  Thu Jun 15 13:08:47 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 15:08:47 -0400
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: <17553.30758.121742.323787@terry.jones.tc>
Message-ID: <20060615190847.29014.2105024162.divmod.quotient.1102@ohm>



On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:

>sys.path[:0] = ['./twisted/plugins']

This line is unnecessary, and probably wrong.  If you look in twisted/plugins/__init__.py, you will notice that it puts any additional entries on sys.path into its __path__; the fact that "." is already on your sys.path is enough for it to recognize this plugin.

>def displayAllKnownMaterials():
>    for material in getPlugins(IMaterial):
>        displayMaterial(material)

This is going to look for plugins in twisted.plugins, which is probably not what you want.  Did you look under the "alternate plugin packages" section of that document?

>from twisted.plugin import IPlugin
>from plugin import IMaterial

There is some vagueness in naming here.  Depending on your working directory (etc) twisted.plugin might be picked up as plugin.  You probably want to change the name of your example module to something unique.

>When I run plugin.py, I get the error:

My analysis of this is the same as JP's; however, generally the file you run with 'python' should look something like this:

    from myapp import main
    main()

Python has the unfortunate habit of creating a special module called "__main__" and putting the code from the file it is passed onto the commandline into that module, rather than into the location where it would go if you imported it; having two copies of your "plugin" module in memory at once (the imported one, and the __main__ one) is probably causing at least some of your problems.




From exarkun at divmod.com  Thu Jun 15 13:14:56 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jun 2006 15:14:56 -0400
Subject: [Twisted-Python] Twistd and command line options...
In-Reply-To: <44919A43.6090400@gmail.com>
Message-ID: <20060615191456.29014.846636409.divmod.quotient.1107@ohm>

On Thu, 15 Jun 2006 13:34:59 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I have built a twistd application and now I want to pass in some
>arguments from the command line. The code I use is:
>
>class Options(usage.Options) :
>   optParameters = [['wkp','Z','2200','The well known port']]
>
>config = Options()
>try :
>    config.parseOptions()
>except usage.UsageError, e:
>    print '%s: %s' % (sys.argv[0],e)
>    print '%s: Try --help for usage details.' % (sys.argv[0])
>    sys.exit(1)
>
>I've tried running "twistd -ny --wkp=2200 foo.tac" and "twistd -ny
>foo.tac --wkp=2000" without success.
>
>I've decided I must not know how to get command line options to foo.tac.
>Can someone please enlighten me?

Check out the following threads:

http://twistedmatrix.com/pipermail/twisted-python/2006-June/013330.html
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010529.html
http://twistedmatrix.com/pipermail/twisted-python/2005-June/010856.html

Jean-Paul



From glyph at divmod.com  Thu Jun 15 13:17:01 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 15:17:01 -0400
Subject: [Twisted-Python] General question on components, interfaces, etc.
In-Reply-To: <17553.31642.395380.717728@terry.jones.tc>
Message-ID: <20060615191701.29014.575537789.divmod.quotient.1111@ohm>

On Thu, 15 Jun 2006 17:24:10 +0200, Terry Jones <terry at jon.es> wrote:

>All that makes sense, but I'm not sure what it really buys me. An
>alternative would just be to document the expected interface (perhaps as an
>Interface), and then use __import__() to load the desired implementation.

That's basically what the plugin system does.  At 156 SLOC, it doesn't have room to do much else :).

>It seems that without needing adapters, the component architecture doesn't
>really buy me anything except a formalism (which I do think has value,
>though limited).

It allows you to use the same language to talk about plugins as you would about any other kind of adapter.  Effectively, the plugin system is a way to adapt your "system environment" to an object which provides a given interface.  If you use the twisted plugin system (or some other system which uses Interface objects) then it is pretty easy to factor your code such that implementations of the desired interface can be obtained implicitly through the environment or explicitly by user code passing in an implementation -- or by passing in an object that is adaptable to that interface, and then doing adaptation.

As Jim Fulton is fond of saying, the whole point of the components system is to allow you to reason about the requirements are for a given bit of code.  It also lets you translate that reasoning to code directly.  "argument x must be adaptable to IFoo" is a nice succinct way of dictating your requirements both in documentation (by giving a link to the fully-qualified name of IFoo which includes lots more documentation) and in code (by adapting to IFoo, or looking for IFoo plugins, at runtime).

>Is this thinking more or less correct? How would people go about doing what
>I outline above?

Mostly yes.  Obviously, I'd personally use twisted.plugin, because that's what I wrote it for :).



From terry at jon.es  Thu Jun 15 14:18:13 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 22:18:13 +0200
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: Your message at 12:21:24 on Thursday, 15 June 2006
References: <17553.30758.121742.323787@terry.jones.tc>
	<20060615162124.29014.1693079773.divmod.quotient.965@ohm>
Message-ID: <17553.49285.671626.314298@terry.jones.tc>

>>>>> "JP" == Jean-Paul Calderone <exarkun at divmod.com> writes:
JP> On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:

JP> One problem with the code attached is that it creates a plugin class
JP> which implements plugin.IMaterial but then goes and searches for
JP> plugins which provide __main__.IMaterial.  Since these aren't the same
JP> interface, even without the pickle error no results will be found.

OK, thanks for the tip. I've fixed things - see next mail.

>> BTW, the code on that page in the section Extending an Existing Program
>> is missing a 'from zope.interface import implements'. Also, the
>> assumption that code is in a file called imatsim.py, and the curious
>> 'from matsim import imatsim' could be explained. I guess the later is
>> just a harmless anachronism?

JP> I've created a ticket in the tracker for expanding the howto to explain
JP> these things.  Thanks for pointing out that they were not well
JP> explained.

Thanks. I should have created the ticket myself. I just added another, but
now see it was a duplicate.

Terry



From terry at jon.es  Thu Jun 15 14:38:52 2006
From: terry at jon.es (Terry Jones)
Date: Thu, 15 Jun 2006 22:38:52 +0200
Subject: [Twisted-Python] twisted.plugin question
In-Reply-To: Your message at 15:08:47 on Thursday, 15 June 2006
References: <17553.30758.121742.323787@terry.jones.tc>
	<20060615190847.29014.2105024162.divmod.quotient.1102@ohm>
Message-ID: <17553.50524.332456.823735@terry.jones.tc>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> On Thu, 15 Jun 2006 17:09:26 +0200, Terry Jones <terry at jon.es> wrote:

>> sys.path[:0] = ['./twisted/plugins']

glyph> This line is unnecessary, and probably wrong.  If you look in
glyph> twisted/plugins/__init__.py, you will notice that it puts any
glyph> additional entries on sys.path into its __path__; the fact that "."
glyph> is already on your sys.path is enough for it to recognize this
glyph> plugin.

OK, I see now how that's working, thanks.

>> def displayAllKnownMaterials():
>> for material in getPlugins(IMaterial):
>> displayMaterial(material)

glyph> This is going to look for plugins in twisted.plugins, which is
glyph> probably not what you want.  Did you look under the "alternate
glyph> plugin packages" section of that document?

I did, and it seemed relevant, but I didn't understand it. The page says
"If passed in, the 2nd argument should be a module or package to be used
instead of twisted.plugins as the plugin meta-package." I had no idea what
such a module or package should do!  Reading the section above seemed to
make it clear that I could mkdir -p twisted/plugins and drop my code in
there.

>> from twisted.plugin import IPlugin
>> from plugin import IMaterial

glyph> There is some vagueness in naming here.  Depending on your working
glyph> directory (etc) twisted.plugin might be picked up as plugin.  You
glyph> probably want to change the name of your example module to something
glyph> unique.

OK, done.

glyph> from myapp import main
glyph> main()

glyph> Python has the unfortunate habit of creating a special module called
glyph> "__main__" and putting the code from the file it is passed onto the
glyph> commandline into that module, rather than into the location where it
glyph> would go if you imported it; having two copies of your "plugin"
glyph> module in memory at once (the imported one, and the __main__ one) is
glyph> probably causing at least some of your problems.

And thanks for this too. I'm very new to python, and I had no idea.

The code is now working.

Terry



From edahl at confmon.com  Thu Jun 15 16:50:11 2006
From: edahl at confmon.com (Erik Dahl)
Date: Thu, 15 Jun 2006 18:50:11 -0400
Subject: [Twisted-Python] ANNOUNCE: Zenoss-0.20.1
Message-ID: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>

Version 0.20.1 of Zenoss is available for download.

This version fixes several issues, upgrades to Twisted-2.4 and adds  
finer grained monitoring control on device components such as:  
IpInterfaces, FileSystems, and HardDisks.

Project Home:
http://www.zenoss.org/

To download:
http://www.zenoss.org/download

Release Notes:
http://dev.zenoss.org/trac/wiki/zenoss-0.20

-----------
Project Blurb:

Zenoss is a GPL licensed enterprise grade monitoring system that  
provides Inventory/Configuration, Event, Performance and Availability  
management in a single integrated package. It is written in Python  
using the Zope web application framework and Twisted network  
programming environment.  Zenoss is designed to be easy to use for a  
beginner yet flexible and powerful enough for the advanced user

Enjoy,

-EAD

Erik Dahl



From eprparadocs at gmail.com  Thu Jun 15 17:32:05 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 15 Jun 2006 19:32:05 -0400
Subject: [Twisted-Python] Running manhole gui...
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <4491EDF5.60101@gmail.com>

With some well directed I got Manhole running in my server. When I run
the manhole GUI and login I get back the following error message:

Invalid Type Byte '\xc4'

I've included the log window contents if anyone can offer a clue on what
I am doing wrong.

Thanks,
Chaz.


>From inside the log window I see:

2006/06/15 19:27 EDT [-] Log opened.
2006/06/15 19:27 EDT [-]
/usr/lib64/python2.4/site-packages/twisted/manhole/ui/gtk2manhole.py:160:
gtk.GtkDeprecationWarning: gtk.idle_add is deprecated, use
gobject.idle_add instead
2006/06/15 19:27 EDT [-] Starting factory
<twisted.spread.pb.PBClientFactory instance at 0x2ab335e2cfc8>
2006/06/15 19:27 EDT [-]
/usr/lib64/python2.4/site-packages/twisted/spread/ui/gtk2util.py:156:
exceptions.DeprecationWarning: Deferred.setTimeout is deprecated.  Look
for timeout support specific to the API you are using instead.
2006/06/15 19:27 EDT [Broker,client] Error In <<class
'twisted.internet.tcp.Client'> to ('localhost', 2204) at 2ab335e2e350>
2006/06/15 19:27 EDT [Broker,client] Traceback (most recent call last):
	  File "/usr/lib64/python2.4/site-packages/twisted/python/log.py", line
53, in callWithLogger
	    return callWithContext({"system": lp}, func, *args, **kw)
	  File "/usr/lib64/python2.4/site-packages/twisted/python/log.py", line
38, in callWithContext
	    return context.call({ILogContext: newCtx}, func, *args, **kw)
	  File "/usr/lib64/python2.4/site-packages/twisted/python/context.py",
line 59, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib64/python2.4/site-packages/twisted/python/context.py",
line 37, in callWithContext
	    return func(*args,**kw)
	--- <exception caught here> ---
	  File
"/usr/lib64/python2.4/site-packages/twisted/internet/gtk2reactor.py",
line 189, in _doReadOrWrite
	    why = source.doRead()
	  File "/usr/lib64/python2.4/site-packages/twisted/internet/tcp.py",
line 348, in doRead
	    return self.protocol.dataReceived(data)
	  File "/usr/lib64/python2.4/site-packages/twisted/spread/banana.py",
line 181, in dataReceived
	    raise NotImplementedError(("Invalid Type Byte %r" % (typebyte,)))
	exceptions.NotImplementedError: Invalid Type Byte '\xc4'
	
2006/06/15 19:27 EDT [Broker,client] Stopping factory
<twisted.spread.pb.PBClientFactory instance at 0x2ab335e2cfc8>
Login FAILED User aborted connection: User hit Cancel..




From wsanchez at wsanchez.net  Thu Jun 15 17:33:39 2006
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Thu, 15 Jun 2006 16:33:39 -0700
Subject: [Twisted-Python] @raise and deferreds
Message-ID: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>

   I'm curious about what conventions we have for documenting  
exceptions that are raised in deferreds, which turn into errbacks.   
Say I have a function which returns a deferred, and several flavors  
of Failure might have been raised.  I'd like to document that thusly:

	def foo():
		"""
		Do something fooey.
		@raise FooError: if it's too fooey.
		@raise BarError: if there is any bar; this is foo, not bar.
		@raise HolyCrapError: if your pants are on fire.
		@return: a deferred containing a Foo.
		"""
		...

   This is a little weird, since the exceptions are actually being  
raised, but are being delivered in errbacks.  The alternative is to  
describe all of the possible exceptions in the @return clause, but  
that is really clunky.  So I'd like to have a convention whereby  
everyone knows that if you have a function that returns a deferred,  
that the exceptions described in the docstring refer to exceptions  
delivered via errbacks rather than via raising.

   Is that making any sense?  Alternatively, we could make up a new  
keyword (@errback?), but I don't know how troublesome doing so is.   
If we do that, maybe another keyword (@callback) makes sense as well.

	-wsv




From wsanchez at wsanchez.net  Thu Jun 15 17:40:59 2006
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Thu, 15 Jun 2006 16:40:59 -0700
Subject: [Twisted-Python] Returning a deferred, maybe
Message-ID: <39C66BC0-3582-49BA-88BB-E9186332B8F5@wsanchez.net>

   We have several functions in the code which return either a  
synchronous value or a deferred.  In these cases, the caller has to  
either inspect the return type and do different things depending  
whether the value is available right then, or call the function using  
meybeDeferred.

   It seems like you can save the caller some grief by ensuring that  
you always return a deferred value (eg. by wrapping a synchronous  
result with defer.succeed(), as suggested in http://twistedmatrix.com/ 
projects/core/documentation/howto/gendefer.html).  Should this be an  
encouraged practice?

	-wsv




From db3l at fitlinxx.com  Thu Jun 15 18:07:58 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 15 Jun 2006 20:07:58 -0400
Subject: [Twisted-Python] Tracking twisted repository post 2.4.0?
Message-ID: <uslm6vu75.fsf@fitlinxx.com>

We've got some locally maintained modifications to Twisted that prior
to 2.4.0 we were tracking by syncing our repository with the Twisted
trunk (as a vendor) at the overall official tags.

But with the tagging changes with 2.4.0 (and without a tag for the
overall trunk), I was wondering if there were suggestions on how to
adjust our setup.

I can understand why there is no single tag for the trunk, since an overall
"Sumo" release of twisted (and even the overall 2.4.0 concept) is really
a combination of different releases of the various subpackages, but I can't
figure out how to use the existing tags to track those pieces we are
interested in.

For example, we really use core and web, so I had thought I could just
export, for example, the twisted-core-2.4.0 and twisted-web-0.6.0 tags
from tags/releases, merge them together and call that our "vendor"
dump for 2.4.0.  But it would appear that the individual project tags
are still based on tags for the complete trunk, and thus contain all
trunk files as of when the subproject was tagged.  Thus, if I try to
use a checkout/export from twisted-web-0.6.0, then depending on when
it was tagged, it may overlay files that came from twisted-core-2.4.0
with different versions that aren't really part of core 2.4.0.

So how (at the subversion tag level) if at all can I isolate those
files from beneath the twisted-web-0.6.0 tag that only apply to
twisted-web, so that I can add them to the files from
twisted-core-2.4.0 to yield my simulated vendor dump?

Is anyone else tracking the repository (but not instant to instant at
the trunk, but rather at release points) and if so, how are you doing
it post 2.4.0?

Thanks.

-- David






From glyph at divmod.com  Thu Jun 15 18:14:15 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 20:14:15 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <39C66BC0-3582-49BA-88BB-E9186332B8F5@wsanchez.net>
Message-ID: <20060616001415.29014.183238890.divmod.quotient.1294@ohm>

On Thu, 15 Jun 2006 16:40:59 -0700, Wilfredo Sánchez Vega <wsanchez at wsanchez.net> wrote:

>   It seems like you can save the caller some grief by ensuring that  you 
>always return a deferred value (eg. by wrapping a synchronous  result with 
>defer.succeed(), as suggested in http://twistedmatrix.com/ 
>projects/core/documentation/howto/gendefer.html).  Should this be an 
>encouraged practice?

There are 2 reasons for this practice.  One is a sort of silly micro-optimization (which vanishes anyway if the caller uses maybeDeferred) and the other is an issue of convenience for the callee.  We should forget about this and just make Deferred faster.

Newer interfaces have tended toward just saying "@return a Deferred which..." rather than "@return a value or a Deferred" unless they are highly public APIs like IResource and forgetting to wrap a 2-byte string return value is a real pain.

In other words: document your interfaces precisely, and decide whose responsibility is to ensure that the value is a Deferred at some point, and you should probably prefer requiring it is a Deferred in most cases -- but I don't think that this is the sort of thing that should be in the coding standard.  It varies from situation to situation.



From glyph at divmod.com  Thu Jun 15 19:04:42 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 21:04:42 -0400
Subject: [Twisted-Python] Tracking twisted repository post 2.4.0?
In-Reply-To: <uslm6vu75.fsf@fitlinxx.com>
Message-ID: <20060616010442.29014.765795977.divmod.quotient.1333@ohm>

On 15 Jun 2006 20:07:58 -0400, David Bolen <db3l at fitlinxx.com> wrote:
>We've got some locally maintained modifications to Twisted that prior
>to 2.4.0 we were tracking by syncing our repository with the Twisted
>trunk (as a vendor) at the overall official tags.

Have you submitted those as patches in the bugtracker?  If so, are we being really sluggish about applying them? :)

As you have unfortunately noticed with this change... we don't currently provide any support for configurations like this.  I'd personally like to discourage it, because long-term local modifications to Twisted indicate a failure of process, either you submitting them or us accepting them.

>But with the tagging changes with 2.4.0 (and without a tag for the
>overall trunk), I was wondering if there were suggestions on how to
>adjust our setup.

>I can understand why there is no single tag for the trunk, since an overall
>"Sumo" release of twisted

To reduce confusion we're trying to remove the word "sumo" everywhere.  If you spot that word still being used somewhere on the site it's a bug, please let us know.

Right now it's just "a release of Twisted".

>So how (at the subversion tag level) if at all can I isolate those
>files from beneath the twisted-web-0.6.0 tag that only apply to
>twisted-web, so that I can add them to the files from
>twisted-core-2.4.0 to yield my simulated vendor dump?

You can't, really.  Hopefully the internal repository structure of Twisted will one day look more like this:

    http://divmod.org/trac/browser/trunk

and the tags will refer to project directories, like this:

    http://divmod.org/trac/browser/tags/releases

but until that happens, the setup.py files for separate projects determine a fairly arbitrary collection of files.  Specifically, ownership of twisted/plugins/ is spread out between all subprojects.  Also, some files are moved around; the "topfiles" directory is pulled out to the root of each subproject as part of the release process.

>Is anyone else tracking the repository (but not instant to instant at
>the trunk, but rather at release points) and if so, how are you doing
>it post 2.4.0?

Divmod doesn't track Twisted releases through SVN; any changes we are in the process of contributing but which haven't been released are kept in our utility package "Epsilon".  Epsilon has a "hotfixes" module which allows us to modify Twisted's behavior in cases where we really need to modify the library rather than just package additional functionality outside it -- you might look at that implementation as an example of a way to formalize monkeypatching and reduce its fragility.



From wsanchez at wsanchez.net  Thu Jun 15 20:24:20 2006
From: wsanchez at wsanchez.net (=?ISO-8859-1?Q?Wilfredo_S=E1nchez_Vega?=)
Date: Thu, 15 Jun 2006 19:24:20 -0700
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <20060616001415.29014.183238890.divmod.quotient.1294@ohm>
References: <20060616001415.29014.183238890.divmod.quotient.1294@ohm>
Message-ID: <3663EE1D-30FF-43A1-9C38-D3C9F4BB5522@wsanchez.net>

   I guess I'm not seeing any justification for returning a deferred  
some of the time other than:

	- the micro-optimization (which your saying is silly) and

	- convenience for the callee (but wrapping a result in defer.succeed 
() is hardly a burden, and you are basically just passed the  
inconvenience down to every caller, which is usually a bad allocation  
of convenience-ness-es).

   The reason I thought it a good idea to require always returning a  
deferred is that I had a lot of code which depended on locateChild()  
to return a non-deferred value, which is clearly broken.  But none of  
the unit tests caught this, because I've never traversed a resource  
which returned a deferred in locateChild().  dreid pointed this out  
to me, so I changed some routines to fix this and had them always  
return a deferred, and sure enough, I ended up having to fix a *lot*  
of code.

   The point being that callers of functions that _usually_ return  
non-deferred values will usually work, enough so that it's hard to  
catch them with unit tests unless you go out of your way to ensure  
that deferreds are tested, which is unlikely if you also wrote the  
offending code.

	-wsv


On Jun 15, 2006, at 5:14 PM, glyph at divmod.com wrote:

> On Thu, 15 Jun 2006 16:40:59 -0700, Wilfredo Sánchez Vega  
> <wsanchez at wsanchez.net> wrote:
>
>>   It seems like you can save the caller some grief by ensuring  
>> that  you always return a deferred value (eg. by wrapping a  
>> synchronous  result with defer.succeed(), as suggested in http:// 
>> twistedmatrix.com/ projects/core/documentation/howto/ 
>> gendefer.html).  Should this be an encouraged practice?
>
> There are 2 reasons for this practice.  One is a sort of silly  
> micro-optimization (which vanishes anyway if the caller uses  
> maybeDeferred) and the other is an issue of convenience for the  
> callee.  We should forget about this and just make Deferred faster.
>
> Newer interfaces have tended toward just saying "@return a Deferred  
> which..." rather than "@return a value or a Deferred" unless they  
> are highly public APIs like IResource and forgetting to wrap a 2- 
> byte string return value is a real pain.
>
> In other words: document your interfaces precisely, and decide  
> whose responsibility is to ensure that the value is a Deferred at  
> some point, and you should probably prefer requiring it is a  
> Deferred in most cases -- but I don't think that this is the sort  
> of thing that should be in the coding standard.  It varies from  
> situation to situation.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at divmod.com  Thu Jun 15 20:53:22 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Jun 2006 22:53:22 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <3663EE1D-30FF-43A1-9C38-D3C9F4BB5522@wsanchez.net>
Message-ID: <20060616025322.29014.1055736251.divmod.quotient.1423@ohm>

On Thu, 15 Jun 2006 19:24:20 -0700, Wilfredo Sánchez Vega <wsanchez at wsanchez.net> wrote:
>   I guess I'm not seeing any justification for returning a deferred  some of 
>the time other than:
>
>         - the micro-optimization (which your saying is silly) and
>
>         - convenience for the callee (but wrapping a result in defer.succeed 
>() is hardly a burden, and you are basically just passed the  inconvenience 
>down to every caller, which is usually a bad allocation  of convenience- 
>ness-es).

In the case of, for example, web1's IResource, callers are in framework code and callees are in application code.  Which means maybe two-dozen callers and like a billion callees.

In the case of the *new* IResource, this might not be the right factoring since you are really supposed to subclass stuff and not implement directly; and in any event, in the long term hopefully most people will be using nevow+web2 and avoiding touching the resource model directly.

>   The point being that callers of functions that _usually_ return  non- 
>deferred values will usually work, enough so that it's hard to  catch them 
>with unit tests unless you go out of your way to ensure  that deferreds are 
>tested, which is unlikely if you also wrote the  offending code.

Which reminds me.  Somebody really *should* be trying to get that C deferred stuff James did into Twisted proper; one Deferred for every locateChild sounds excruciatingly expensive for long URLs, as the code currently stands.



From exarkun at divmod.com  Thu Jun 15 21:01:46 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Jun 2006 23:01:46 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <20060616025322.29014.1055736251.divmod.quotient.1423@ohm>
Message-ID: <20060616030146.29014.738989505.divmod.quotient.1430@ohm>

On Thu, 15 Jun 2006 22:53:22 -0400, glyph at divmod.com wrote:
> [snip]
>
>Which reminds me.  Somebody really *should* be trying to get that C deferred 
>stuff James did into Twisted proper; one Deferred for every locateChild 
>sounds excruciatingly expensive for long URLs, as the code currently stands.
>

FWIW, last I checked, it was an insignificant performance improvement over
the current Deferred implementation, at least for web2.

Jean-Paul



From fairwinds at eastlink.ca  Fri Jun 16 06:36:28 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 09:36:28 -0300
Subject: [Twisted-Python] Bring multi service up gradually
Message-ID: <4492A5CC.1030606@eastlink.ca>

Hi. I have got a number of services that am bringing together at 
startup. In the past, I have added them to a parent and started them up 
all at one time.  But now I am incorporating a service (the main 
service) that may be available from more than one address and I want to 
connect with one of these addresses first before starting the other 
services.

What I am seeking is some general advice on this since I want the 
startup to be as efficient as possible. I was thinking that quickly 
testing the addresses first, before starting any twisted service might 
help increase the odds of a quick startup. But if this fails, I will 
still need to iterate with a backoff through each address to connect the 
main service, then add the other services when the main service is 
running. Many thanks.

Regards,
David



From eprparadocs at gmail.com  Fri Jun 16 06:51:53 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Fri, 16 Jun 2006 08:51:53 -0400
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492A5CC.1030606@eastlink.ca>
References: <4492A5CC.1030606@eastlink.ca>
Message-ID: <4492A969.8040704@gmail.com>

I don't think there is a way to insure you will get the ports you want.
Why bother testing if the port is available before hand? In between the
port being tested and the application using it someone can sneak in and
take it.

I have built a twistd app that uses 5 different services and find the
good old way is the easiest and fastest: just bring them up.

Chaz



From fairwinds at eastlink.ca  Fri Jun 16 07:39:56 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 10:39:56 -0300
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492A969.8040704@gmail.com>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
Message-ID: <4492B4AC.1060100@eastlink.ca>

Chaz. wrote:
> I don't think there is a way to insure you will get the ports you want.
> Why bother testing if the port is available before hand? In between the
> port being tested and the application using it someone can sneak in and
> take it.

Hi Chaz. Thank you for your reply. The reason for the test is that I 
don't want the other services to start at all if a connection cannot be 
found to run the main service. I was thinking of writing a simple tester 
using socket module to determine which addresses are alive first. When 
it finds one it stops so in my logic I give this address to my 
ListenTCP/SSL and attempt to start the main service.

I don't expect the address list to be large. This way no time is lost 
with the client running through a long backoff cycle on an address that 
may not be alive only to have to stop it and try a another until one is 
possibly found.

I am not aware of something in twisted that evaluates addresses like 
this as part of a startup solution. In any case, if I see that an 
address in the list is available, then I would start my main service 
using it.  When a connection is made to the main address, then I want to 
start the remaining services since they are useless without the main 
service.

Regards,
David



From eprparadocs at gmail.com  Fri Jun 16 07:46:15 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Fri, 16 Jun 2006 09:46:15 -0400
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492B4AC.1060100@eastlink.ca>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca>
Message-ID: <4492B627.7030909@gmail.com>

I would know how to do it in C, but I am no twisted expert. The idea
would be to open the socket and hand it off to the service to use. I am
sure there is a way to do it in Twisted (opening a port and using it in
a service).

What you don't want to do is just "test" the port (opening it and
closing it). Once you have it opened, you need to keep it open.

Chaz


David Pratt wrote:
> Chaz. wrote:
>> I don't think there is a way to insure you will get the ports you want.
>> Why bother testing if the port is available before hand? In between the
>> port being tested and the application using it someone can sneak in and
>> take it.
> 
> Hi Chaz. Thank you for your reply. The reason for the test is that I
> don't want the other services to start at all if a connection cannot be
> found to run the main service. I was thinking of writing a simple tester
> using socket module to determine which addresses are alive first. When
> it finds one it stops so in my logic I give this address to my
> ListenTCP/SSL and attempt to start the main service.
> 
> I don't expect the address list to be large. This way no time is lost
> with the client running through a long backoff cycle on an address that
> may not be alive only to have to stop it and try a another until one is
> possibly found.
> 
> I am not aware of something in twisted that evaluates addresses like
> this as part of a startup solution. In any case, if I see that an
> address in the list is available, then I would start my main service
> using it.  When a connection is made to the main address, then I want to
> start the remaining services since they are useless without the main
> service.
> 
> Regards,
> David
> 




From jacob at internet24.de  Fri Jun 16 08:03:00 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Fri, 16 Jun 2006 16:03:00 +0200
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492B4AC.1060100@eastlink.ca>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca>
Message-ID: <1150466580.21486.10.camel@localhost.localdomain>

Why not simply start the additional
services from the startFactory-method of your mainservice'
protocol factory?

i,e,:

class MainServiceFac(ServerFactory):
    def startFactory(self):
           <possibly call parent's startFactory>
           reactor.listenTCP(.... subservice 1)
           reactor.listenTCP(.... subservice 2)....
           



On Fri, 2006-06-16 at 10:39 -0300, David Pratt wrote:
> Chaz. wrote:
> > I don't think there is a way to insure you will get the ports you want.
> > Why bother testing if the port is available before hand? In between the
> > port being tested and the application using it someone can sneak in and
> > take it.
> 
> Hi Chaz. Thank you for your reply. The reason for the test is that I 
> don't want the other services to start at all if a connection cannot be 
> found to run the main service. I was thinking of writing a simple tester 
> using socket module to determine which addresses are alive first. When 
> it finds one it stops so in my logic I give this address to my 
> ListenTCP/SSL and attempt to start the main service.
> 
> I don't expect the address list to be large. This way no time is lost 
> with the client running through a long backoff cycle on an address that 
> may not be alive only to have to stop it and try a another until one is 
> possibly found.
> 
> I am not aware of something in twisted that evaluates addresses like 
> this as part of a startup solution. In any case, if I see that an 
> address in the list is available, then I would start my main service 
> using it.  When a connection is made to the main address, then I want to 
> start the remaining services since they are useless without the main 
> service.
> 
> Regards,
> David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20060616/39f0f46a/attachment.sig>

From fairwinds at eastlink.ca  Fri Jun 16 08:07:20 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 11:07:20 -0300
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <4492B627.7030909@gmail.com>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca> <4492B627.7030909@gmail.com>
Message-ID: <4492BB18.8030702@eastlink.ca>

Hi Chaz. Yes, passing the connection from a test that iterates through 
addresses would be the best solution. I still have authentication that 
is handled by twisted upon connection but the first priority is finding 
something is on the other end so I've got a viable service. If there is 
a way to do something like this directly in twisted I'm hoping for some 
direction. Many thanks.

Regards,
David

Chaz. wrote:
> I would know how to do it in C, but I am no twisted expert. The idea
> would be to open the socket and hand it off to the service to use. I am
> sure there is a way to do it in Twisted (opening a port and using it in
> a service).

> What you don't want to do is just "test" the port (opening it and
> closing it). Once you have it opened, you need to keep it open.
> 
> Chaz
> 
> 
> David Pratt wrote:
>> Chaz. wrote:
>>> I don't think there is a way to insure you will get the ports you want.
>>> Why bother testing if the port is available before hand? In between the
>>> port being tested and the application using it someone can sneak in and
>>> take it.
>> Hi Chaz. Thank you for your reply. The reason for the test is that I
>> don't want the other services to start at all if a connection cannot be
>> found to run the main service. I was thinking of writing a simple tester
>> using socket module to determine which addresses are alive first. When
>> it finds one it stops so in my logic I give this address to my
>> ListenTCP/SSL and attempt to start the main service.
>>
>> I don't expect the address list to be large. This way no time is lost
>> with the client running through a long backoff cycle on an address that
>> may not be alive only to have to stop it and try a another until one is
>> possibly found.
>>
>> I am not aware of something in twisted that evaluates addresses like
>> this as part of a startup solution. In any case, if I see that an
>> address in the list is available, then I would start my main service
>> using it.  When a connection is made to the main address, then I want to
>> start the remaining services since they are useless without the main
>> service.
>>
>> Regards,
>> David
>>
> 



From fairwinds at eastlink.ca  Fri Jun 16 08:23:42 2006
From: fairwinds at eastlink.ca (David Pratt)
Date: Fri, 16 Jun 2006 11:23:42 -0300
Subject: [Twisted-Python] Bring multi service up gradually
In-Reply-To: <1150466580.21486.10.camel@localhost.localdomain>
References: <4492A5CC.1030606@eastlink.ca> <4492A969.8040704@gmail.com>
	<4492B4AC.1060100@eastlink.ca>
	<1150466580.21486.10.camel@localhost.localdomain>
Message-ID: <4492BEEE.9010905@eastlink.ca>

Hi Thomas. Thank you for your reply. Yes, this might be a plan for 
starting services. I'll look at how something like this could work with 
my config since I am not using twisted app in this case but integrated 
with another daemon service. Many thanks.

Regards,
David

Thomas Jacob wrote:
> Why not simply start the additional
> services from the startFactory-method of your mainservice'
> protocol factory?
> 
> i,e,:
> 
> class MainServiceFac(ServerFactory):
>     def startFactory(self):
>            <possibly call parent's startFactory>
>            reactor.listenTCP(.... subservice 1)
>            reactor.listenTCP(.... subservice 2)....
>            
> 
> 
> 
> On Fri, 2006-06-16 at 10:39 -0300, David Pratt wrote:
>> Chaz. wrote:
>>> I don't think there is a way to insure you will get the ports you want.
>>> Why bother testing if the port is available before hand? In between the
>>> port being tested and the application using it someone can sneak in and
>>> take it.
>> Hi Chaz. Thank you for your reply. The reason for the test is that I 
>> don't want the other services to start at all if a connection cannot be 
>> found to run the main service. I was thinking of writing a simple tester 
>> using socket module to determine which addresses are alive first. When 
>> it finds one it stops so in my logic I give this address to my 
>> ListenTCP/SSL and attempt to start the main service.
>>
>> I don't expect the address list to be large. This way no time is lost 
>> with the client running through a long backoff cycle on an address that 
>> may not be alive only to have to stop it and try a another until one is 
>> possibly found.
>>
>> I am not aware of something in twisted that evaluates addresses like 
>> this as part of a startup solution. In any case, if I see that an 
>> address in the list is available, then I would start my main service 
>> using it.  When a connection is made to the main address, then I want to 
>> start the remaining services since they are useless without the main 
>> service.
>>
>> Regards,
>> David
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From foom at fuhm.net  Fri Jun 16 09:19:50 2006
From: foom at fuhm.net (James Y Knight)
Date: Fri, 16 Jun 2006 11:19:50 -0400
Subject: [Twisted-Python] Returning a deferred, maybe
In-Reply-To: <20060616030146.29014.738989505.divmod.quotient.1430@ohm>
References: <20060616030146.29014.738989505.divmod.quotient.1430@ohm>
Message-ID: <B5C97BFC-3C14-454C-8AE7-03ABD390819C@fuhm.net>


On Jun 15, 2006, at 11:01 PM, Jean-Paul Calderone wrote:

> On Thu, 15 Jun 2006 22:53:22 -0400, glyph at divmod.com wrote:
>> [snip]
>>
>> Which reminds me.  Somebody really *should* be trying to get that  
>> C deferred stuff James did into Twisted proper; one Deferred for  
>> every locateChild sounds excruciatingly expensive for long URLs,  
>> as the code currently stands.
>>
>
> FWIW, last I checked, it was an insignificant performance  
> improvement over
> the current Deferred implementation, at least for web2.

Which is not all that surprising, as web2 doesn't make very many  
deferreds. The optimization of not returning a deferred when you have  
an immediate result is not really so minor if you'd otherwise be  
making a ton of them.

However, be careful, it's possible that in some cases the ambiguous  
result is actually slower, as "isinstance" turns out to be quite an  
expensive operation. So if you end up returning the deferred/result  
out multiple levels, testing at each level, at some point all the  
isinstance calls add up to be slower than just always returning a  
deferred.

James




From p.mayers at imperial.ac.uk  Fri Jun 16 10:25:22 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 16 Jun 2006 17:25:22 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus 
Message-ID: <4492DB72.2050903@imperial.ac.uk>

All,

I've run into "this service needs to know about this event from this 
other service" once too often. It's message bus time, baby.

However, many of the daemons I use are locally-written Twisted code, so 
a Twisted-friendly (async api) one would be nice. Note also that other 
non-Twisted code will need to connect to it, so rolling my own (aside 
from it being a bad idea from a NIH perspective) is out.

I could of course wrap the message queue receiver for something 
well-proven like Spread into a thread. Then there's XMPP which is the 
darling of the anti-Java movement - though wrapping Twisteds' XMPP API 
to get a message bus might be annoying.

Suggestions?



From eprparadocs at gmail.com  Fri Jun 16 10:49:23 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Fri, 16 Jun 2006 12:49:23 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <4492E113.2040703@gmail.com>

I do it using "named singleton" classes and callbacks. Anyone that wants
to share the queue merely asks for the class to be instantiated. There
are 3 methods - registerCallback, removeCallback and sendEvent. Whatever
arguments, short of a few, are passed to the callback routines. It is
simple and has worked for me.

I have thought about doing something more sophisticated so the message
bus can extend to other machines, but I haven't done that yet.

Chaz

Phil Mayers wrote:
> All,
> 
> I've run into "this service needs to know about this event from this
> other service" once too often. It's message bus time, baby.
> 
> However, many of the daemons I use are locally-written Twisted code, so
> a Twisted-friendly (async api) one would be nice. Note also that other
> non-Twisted code will need to connect to it, so rolling my own (aside
> from it being a bad idea from a NIH perspective) is out.
> 
> I could of course wrap the message queue receiver for something
> well-proven like Spread into a thread. Then there's XMPP which is the
> darling of the anti-Java movement - though wrapping Twisteds' XMPP API
> to get a message bus might be annoying.
> 
> Suggestions?
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dreid at dreid.org  Fri Jun 16 11:54:21 2006
From: dreid at dreid.org (David Reid)
Date: Fri, 16 Jun 2006 10:54:21 -0700
Subject: [Twisted-Python] @raise and deferreds
In-Reply-To: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>
References: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>
Message-ID: <4492F04D.4010805@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Wilfredo Sánchez Vega wrote:
>   I'm curious about what conventions we have for documenting exceptions
> that are raised in deferreds, which turn into errbacks.  Say I have a
> function which returns a deferred, and several flavors of Failure might
> have been raised.  I'd like to document that thusly:
> 
>     def foo():
>         """
>         Do something fooey.
>         @raise FooError: if it's too fooey.
>         @raise BarError: if there is any bar; this is foo, not bar.
>         @raise HolyCrapError: if your pants are on fire.
>         @return: a deferred containing a Foo.
>         """
>         ...
> 
>   This is a little weird, since the exceptions are actually being
> raised, but are being delivered in errbacks.  The alternative is to
> describe all of the possible exceptions in the @return clause, but that
> is really clunky.  So I'd like to have a convention whereby everyone
> knows that if you have a function that returns a deferred, that the
> exceptions described in the docstring refer to exceptions delivered via
> errbacks rather than via raising.

A couple of quick greps seem to indicate that @raise is used sometimes,
but mostly that the errbacks are documented in @return which may be
unattractive is quite clear.  @raise is very confusing and I had to
check the actual implementations of the interfaces which brought up this
issue to see where the 'raise' actually took place.  So I'm still in
favor of the interfaces being changed to include the errback information
in the @return.  However it can probably be put off until the next web2
release.

>   Is that making any sense?  Alternatively, we could make up a new
> keyword (@errback?), but I don't know how troublesome doing so is.  If
> we do that, maybe another keyword (@callback) makes sense as well.

I think that would be good, we should ask mwh to do that.

- -David


- --
"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEkvBMrsrO6aeULcgRAjkCAJoDsfNOgTd8jM+JPa3jMdIJeX5OMQCeKpyK
hLiNeAHwmKSoOItnX6wC7sA=
=Gn0G
-----END PGP SIGNATURE-----



From db3l at fitlinxx.com  Fri Jun 16 14:24:48 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Jun 2006 16:24:48 -0400
Subject: [Twisted-Python] Re: Tracking twisted repository post 2.4.0?
References: <uslm6vu75.fsf@fitlinxx.com>
	<20060616010442.29014.765795977.divmod.quotient.1333@ohm>
Message-ID: <uirn097cf.fsf@fitlinxx.com>

glyph at divmod.com writes:

> On 15 Jun 2006 20:07:58 -0400, David Bolen <db3l at fitlinxx.com> wrote:
> >We've got some locally maintained modifications to Twisted that prior
> >to 2.4.0 we were tracking by syncing our repository with the Twisted
> >trunk (as a vendor) at the overall official tags.
> 
> Have you submitted those as patches in the bugtracker?  If so, are
> we being really sluggish about applying them? :)

It depends.  There really aren't many of them but a few are changes to
PB to pass some additional types (such as mx.DateTime) that I don't
really see as valid for general incorporation into Twisted, but that
were the simplest way to resolve some issues for ourselves in the
past.  There was also an ongoing email discussion about better passing
of exception objects through PB that we implemented during the
discussion but I am not certain if all the same support got committed
into the core (it wasn't clear at the time what was willing to be
accepted).

Others did get submitted (see ticket 669), but show an example of how
even when a fix does eventually make it in (in this case via a
reworked implementation) there can be a long period of time - across
multiple Twisted "releases" - where we need to maintain it as a local
patch for our own operations before we can retire it.

> As you have unfortunately noticed with this change... we don't
> currently provide any support for configurations like this.  I'd
> personally like to discourage it, because long-term local
> modifications to Twisted indicate a failure of process, either you
> submitting them or us accepting them.

But I think it's somewhat unrealistic to expect there not to be short
term local modifications - certainly I find that to be fairly common
with a large percentage of open source packages I track.  It's not
unexpected - when I fix something locally it's normally to scratch an
immediate itch I have, but there's bound to be some latency before
either it can be cleaned up for a good submission to the package
maintainer and/or it gets accepted/applied.  It's unfortunate that the
recent changes in the Twisted source tree aren't that friendly to
doing this (particularly with generally easy ways to handle such
issues with CVS and/or Subversion).

Long term I'd agree - although I do still see times where some
modifications just won't likely get accepted back and will be
maintained for a while.

> >I can understand why there is no single tag for the trunk, since an overall
> >"Sumo" release of twisted
> 
> To reduce confusion we're trying to remove the word "sumo"
> everywhere.  If you spot that word still being used somewhere on the
> site it's a bug, please let us know.
> 
> Right now it's just "a release of Twisted".

No problem.  Off the top of my head I only remember noticing it on the
web site on the "What is Twisted" page, but I think it was in an older
News entry.

> but until that happens, the setup.py files for separate projects
> determine a fairly arbitrary collection of files.  Specifically,
> ownership of twisted/plugins/ is spread out between all subprojects.
> Also, some files are moved around; the "topfiles" directory is
> pulled out to the root of each subproject as part of the release
> process.

I did notice that but figured I'd ignore the root files when combining
for a vendor dump (since they also existed independently under
topfiles).

I suppose I could try just executing the setup for each sub-project I
am interested in, and using the result of the build directory as the
appropriate collection of files.  At least that way I'm properly in
sync with what is considered part of each sub-project.

> Divmod doesn't track Twisted releases through SVN; any changes we are
> in the process of contributing but which haven't been released are
> kept in our utility package "Epsilon".  Epsilon has a "hotfixes"
> module which allows us to modify Twisted's behavior in cases where we
> really need to modify the library rather than just package additional
> functionality outside it -- you might look at that implementation as
> an example of a way to formalize monkeypatching and reduce its
> fragility.

Perhaps, although to be honest, I'd be contrasting that effort versus
just using the source code system's capabilities, since managing such
local modifications is one of the things it does reasonably well, and
I already do for a number of other projects we use.

But thanks, at least I know I'm not missing something obvious from the
transition to the 2.4.0 tagging approach.

-- David




From db3l at fitlinxx.com  Fri Jun 16 14:38:08 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Jun 2006 16:38:08 -0400
Subject: [Twisted-Python] Re: Twisted-friendly Message bus
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <uejxo96q7.fsf@fitlinxx.com>

Phil Mayers <p.mayers at imperial.ac.uk> writes:

> All,
> 
> I've run into "this service needs to know about this event from this
> other service" once too often. It's message bus time, baby.
(...)
> Suggestions?

You could go with a signal dispatcher mechanism.  PyDispatcher works
well, although the actual signal delivery is synchronous.  But it has
nice features such as weak references to receivers so no need to worry
about cleanup when a receiver disappears.

There's also a package, Louie, based on PyDispatcher which in theory
added support for Twisted among other things.  We're still using
PyDispatcher (I don't recall exactly why I didn't want to move to
Louie - maybe we were still on Python 2.2 at the time) ourselves.

http://pydispatcher.sourceforge.net  (also has a ref to Louie)

-- David





From christian.simms at gmail.com  Fri Jun 16 17:37:48 2006
From: christian.simms at gmail.com (christian simms)
Date: Fri, 16 Jun 2006 19:37:48 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <cd8fa6f90606161637h2bf4bb78te6bfd4a070c40a63@mail.gmail.com>

I like and use XMPP myself.  Since it's a standard, there are multiple
implementation choices, which is nice. And you get queueing for free.
And besides having a bunch of client libraries available in all major
programming languages, for testing you can just manually send messages
using an IM client like GAIM.

The only other major standard I know of is JMS, and that's tied to Java.

Cheers,
Christian


On 6/16/06, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> All,
>
> I've run into "this service needs to know about this event from this
> other service" once too often. It's message bus time, baby.
>
> However, many of the daemons I use are locally-written Twisted code, so
> a Twisted-friendly (async api) one would be nice. Note also that other
> non-Twisted code will need to connect to it, so rolling my own (aside
> from it being a bad idea from a NIH perspective) is out.
>
> I could of course wrap the message queue receiver for something
> well-proven like Spread into a thread. Then there's XMPP which is the
> darling of the anti-Java movement - though wrapping Twisteds' XMPP API
> to get a message bus might be annoying.
>
> Suggestions?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Fri Jun 16 18:23:33 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 16 Jun 2006 20:23:33 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus 
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>

On Fri, 16 Jun 2006 17:25:22 +0100, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>All,
>
>I've run into "this service needs to know about this event from this other 
>service" once too often. It's message bus time, baby.

Could you clarify whether you mean message passing within a single process
or message passing between different processes on the same host or message
passing between multiple hosts?  Different responders in this thread seem
to have assumed different things.

Jean-Paul



From eprparadocs at gmail.com  Sat Jun 17 04:54:00 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sat, 17 Jun 2006 06:54:00 -0400
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <4493DF48.2080604@gmail.com>

I am just about to embark on a SOAP interface to my services. I enjoy
using Twisted and would love to continue using it with SOAP. I have used
ZSI before in a standalone product but don't see much about marrying the
two: twisted and ZSI.

I am sure there is someone out there that has done it, and wonder how to
do it? Are there any examples yet?

Peace,
Chaz



From ldanielburr at mac.com  Sat Jun 17 10:34:50 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Sat, 17 Jun 2006 11:34:50 -0500
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <4493DF48.2080604@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
Message-ID: <op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Sat, 17 Jun 2006 05:54:00 -0500, Chaz. <eprparadocs at gmail.com> wrote:

> I am just about to embark on a SOAP interface to my services. I enjoy
> using Twisted and would love to continue using it with SOAP. I have used
> ZSI before in a standalone product but don't see much about marrying the
> two: twisted and ZSI.
>

That's because SOAP and company suck.  There is always, always, *always* a
better way to accomplish a task than using SOAP.  I've ranted about this
topic before in another thread, to no avail, and I doubt I'll change your
mind either, but someone needs to speak out against this nonsense.

> I am sure there is someone out there that has done it, and wonder how to
> do it? Are there any examples yet?
>

Check out PyGridWare; they've integrated ZSI with twisted for you.  Again,
SOAP is a pure waste of time and effort, so please consider exploring the
other options available to you, before committing to SOAP.

L. Daniel Burr



From foom at fuhm.net  Sat Jun 17 11:47:08 2006
From: foom at fuhm.net (James Y Knight)
Date: Sat, 17 Jun 2006 13:47:08 -0400
Subject: [Twisted-Python] Re: Tracking twisted repository post 2.4.0?
In-Reply-To: <uirn097cf.fsf@fitlinxx.com>
References: <uslm6vu75.fsf@fitlinxx.com>
	<20060616010442.29014.765795977.divmod.quotient.1333@ohm>
	<uirn097cf.fsf@fitlinxx.com>
Message-ID: <92C97205-61F6-4813-9AD3-8F576D4F7A92@fuhm.net>


On Jun 16, 2006, at 4:24 PM, David Bolen wrote:
>> As you have unfortunately noticed with this change... we don't
>> currently provide any support for configurations like this.  I'd
>> personally like to discourage it, because long-term local
>> modifications to Twisted indicate a failure of process, either you
>> submitting them or us accepting them.
>
> But I think it's somewhat unrealistic to expect there not to be short
> term local modifications - certainly I find that to be fairly common
> with a large percentage of open source packages I track.  It's not
> unexpected - when I fix something locally it's normally to scratch an
> immediate itch I have, but there's bound to be some latency before
> either it can be cleaned up for a good submission to the package
> maintainer and/or it gets accepted/applied.  It's unfortunate that the
> recent changes in the Twisted source tree aren't that friendly to
> doing this (particularly with generally easy ways to handle such
> issues with CVS and/or Subversion).
>
> Long term I'd agree - although I do still see times where some
> modifications just won't likely get accepted back and will be
> maintained for a while.

I'm very sympathetic to this, and I'd really like for the SVN source  
tree to be arranged better than it is. The main constraint is keeping  
the ability to run from a svn checkout directly, without an install  
step. I made a branch that did reorganize things by subproject. And  
that pretty much worked fine except that trial gets totally confused  
when running regressions on it. I then also patched trial to make it  
not blow up.

However, that particular way of fixing trial was rejected, and no  
other has been implemented yet. Reorganization is essentially blocked  
until this issue is solved.

James



From mwh at python.net  Sat Jun 17 11:48:14 2006
From: mwh at python.net (Michael Hudson)
Date: Sat, 17 Jun 2006 18:48:14 +0100
Subject: [Twisted-Python] Re: @raise and deferreds
References: <825C0D33-A334-4F1E-8212-48D87B285C8E@wsanchez.net>
	<4492F04D.4010805@dreid.org>
Message-ID: <2m4pyjn069.fsf@starship.python.net>

David Reid <dreid at dreid.org> writes:

>>   Is that making any sense?  Alternatively, we could make up a new
>> keyword (@errback?), but I don't know how troublesome doing so is.  If
>> we do that, maybe another keyword (@callback) makes sense as well.
>
> I think that would be good, we should ask mwh to do that.

This turns out to be fairly easy.  This markup:

    def renderHTTP(req):
        """Return an IResponse or a deferred which will fire an
        IResponse. This response will be written to the web browser
        which initiated the request.

        @errback FooError: if it's too fooey.
        @errback BarError: if there is any bar; this is foo, not bar.
        @errback HolyCrapError: if your pants are on fire.
        """

(function chosen entirely at random) produces this output:

http://starship.python.net/crew/mwh/twisted.web2.iweb.IResource.html

Producing something better than "Unknown Field: errback" is a matter
of a little typing; ideas welcome :)

Cheers,
mwh

-- 
  I believe C++ instills fear in programmers, fear that the
  interaction of some details causes unpredictable results.
                                        -- Erik Naggum, comp.lang.lisp




From golux at comcast.net  Sat Jun 17 13:40:54 2006
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 17 Jun 2006 15:40:54 -0400
Subject: [Twisted-Python] PB and other distributed object protocols
In-Reply-To: <20060608153856.31435.1503123222.divmod.quotient.3918@ohm>
References: <20060608153856.31435.1503123222.divmod.quotient.3918@ohm>
Message-ID: <44945AC6.1050207@comcast.net>

glyph at divmod.com wrote:
> On Thu, 08 Jun 2006 09:30:17 -0400, Stephen Waterbury 
> <golux at comcast.net> wrote:
>> Thomas Vander Stichele wrote:
> 
>>> At the risk of being too obvious, we've been using PB as shipped with
>>> Twisted since 1.3.0, and it's worked very well for us.  Are you saying
>>> there's specific stuff you need from newpb that's not in the current
>>> implementation ?
> 
>> Yes:  forward compatibility.  ;)   I've written PB code, too, and that
>> code doesn't work with newpb.  Not that I would expect it to, given the
>> fairly substantial changes Brian made in developing newpb, nor do I
>> think it would be good to have that as a constraint on newpb.
> 
> I think I actually disagree.  If it's going to be called "PB", it should 
> be compatible, in some way, with the existing "PB" infrastructure.  
> Maybe not if you wrote insanely complex custom side-effecty custom 
> jelliers, but at least you should be able to port fairly easily.

Glyph, thanks for (finally ;) chiming in on this one!
I'm happy to hear that PB1 -> PB2 ports shouldn't be too hard ...
so I'll just shut up and use PB1.  :)

> While wire-level compatibility might be desirable, I think that 
> application-level compatibility should actually become a requirement.  
> As you note, Steve, the only thing that the promise of a PB2 that will 
> be totally incompatible with PB1 is doing is discouraging people from 
> looking at either right now.

Well, it had definitely discouraged me from using PB1, partly because
Brian's commit messages were always so cogent and PB2 sounds so great,
I just thought damn, well I'll wait for that ...

> Other applications are already using PB though, and many are doing it to 
> good effect.

Thanks -- another important thing to know.  (I admit, I'd probably
be more au courant if I'd tune in to irc once in a while!)

> So let me say this as unambiguously as possible:
> 
> PB1 is still supported, and until further notice, it will continue to 
> be.  PB2 is still experimental and is *not* yet supported.  We might not 
> have a lot of development bandwidth to spend on PB1, but bugs are still 
> being fixed, deprecations removed, and APIs updated to reflect the 
> modern state of Twisted.
> 
> It can be updated and fixed incrementally while we wait for the Great 
> Revolution of PB2.  Perhaps we can even start making the various APIs 
> converge, so that the migration process will be smoother.
> 
> This isn't a new decision or announcement, just a statement of the 
> current state of affairs.

Well, it certainly was a much-needed clarification, IMO, and it
helped my decision a great deal.  Thanks!

> ... Brian has been very clear about PB2's 
> experimental status all along.

Agreed.  What I was not obvious was how long it would remain
experimental.  I can bleed for a while, but it's nice to have
some idea of how many pints I'll need ... ;)

> ... Maintenance on PB1 never stopped.  JP, 
> for example, just recently removed a bunch of grotty old-cred stuff 
> (hallelujiah it's gone) from PB1.

Right -- thanks, JP!  I do monitor commits, so I was aware that PB1
was being maintained, which is important for my decision.

> It just seems like because there's 
> this new direction, everyone tacitly assumes that the old stuff will be 
> dropped -- Twisted has an unfortunate history as such things go, but we 
> are getting better about it.

Also agreed -- and I'm very happy to see Twisted continuing its
steady evolution, and now a mainstay among Python libraries.  Kinda
validates my original judgment that it would be -- thanks to the
whole Twisted community for that, especially Glyph and the core
minions (you know who you are :).

Cheers,
Steve




From exarkun at twistedmatrix.com  Sat Jun 17 23:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1150607101.45.32006561@twistedmatrix.com

Bug summary
______________________
Summary for 2006-06-11 through 2006-06-18
Bugs opened: 17    Bugs closed: 20  Total open bugs: 618 (-3)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       -2  |Highest:  -2          |Conch:    -5           
|Enhancement:  +0  |High:     -3          |Core:     -2           
|Task:         +1  |Normal:   +3          |Mail:     -1           
                   |Low:      +1          |Runner:   +1           
                   |Lowest:   +0          |Web:      -1           
                                          |Web2:     +4           
                                          |Website:  +2           
                                          |Words:    +1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1815] Update website documentation for web2 0.2.0 (opened by dreid) (CLOSED, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1815

[#1817] Several methods in web2.dav that should return deferreds do not (opened by wsanchez)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1817

[#1818] connectionLost in examples is omitting reason arg (opened by jerub) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1818

[#1829] Various simple lore errors exist in twisted documentation (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1829

                    ===== High =====
[#1830] Sell the Twisted reference PDF, bound as a physical book (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/1830

                    ===== Normal =====
[#1814] twisted.web2.auth should provide an UnauthorizedResponse (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1814

[#1816] More informative docstring for chainDeferred (opened by edsuom)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1816

[#1819] give permission to update the website to the people who occasionally need to do it (opened by dreid)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1819

[#1820] TwistedRunner 0.2.0 install on Cygwin in build_ext step (-lrpc link statement is missing) (opened by jenisys)
    defect          runner     http://twistedmatrix.com/trac/ticket/1820

[#1821] Turn deferredgenerator wiki page into howto (opened by itamarst)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1821

[#1823] twisted.words.im.tap / proxyui is untested and riddled with bugs. (opened by jerub)
    enhancement     words      http://twistedmatrix.com/trac/ticket/1823

[#1824] typo in plugin howto (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1824

[#1825] web2.dav COPY and MOVE methods fail if root directory of DAV resource is unwritable (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1825

[#1827] web2.auth.wrapper.UnauthenticatedResource does not reply with allowed methods for wrapped resource (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1827

[#1828] DAV server using web2.dav fails several properties tests in Litmus 0.10.5 (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1828

                    ===== Low =====
[#1822] connectTCP should re-resolve domain names on each connection attempt (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1822

                    ===== Lowest =====
[#1826] Typo in twisted.plugin example (opened by terrycojones) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1826



Closed Bugs
______________________
                    ===== Highest =====
[#1818] connectionLost in examples is omitting reason arg (opened by jerub, closed by stephen, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/1818

[#1565] VT102Writer.__str__ method in manhole.py does not check for special case (opened by htj, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1565

[#1629] Unjellyable.unjellyFor does not return self (opened by ml.flex, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1629

[#1817] Several methods in web2.dav that should return deferreds do not (opened by wsanchez, closed by exarkun, )
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1817

[#1815] Update website documentation for web2 0.2.0 (opened by dreid, closed by exarkun, fixed)
    enhancement     website    http://twistedmatrix.com/trac/ticket/1815

[#1829] Various simple lore errors exist in twisted documentation (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1829

[#664 ] use reactor pool instead of internal pool (opened by davep, closed by davep, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/664

                    ===== High =====
[#417 ] Twisted.web deferred handling bug (opened by slyphon, closed by exarkun, invalid)
    defect          web        http://twistedmatrix.com/trac/ticket/417

[#466 ] OSCAR protocol bug (opened by exarkun, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/466

[#427 ] cred backwards compatibility fails for updateApplication (opened by acapnotic, closed by exarkun, wontfix)
    defect          conch      http://twistedmatrix.com/trac/ticket/427

[#1009] Document defgen (opened by hypatia, closed by edsuom, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1009

                    ===== Normal =====
[#405 ] uid/gid related permissions checking methods for t.w.filepath (opened by slyphon, closed by exarkun, invalid)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/405

[#464 ] simple enterprise example (opened by davep, closed by exarkun, invalid)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/464

[#396 ] [PATCH] Maildir folder and courier Maildir++ support (quota) (opened by sirius, closed by exarkun, wontfix)
    enhancement     mail       http://twistedmatrix.com/trac/ticket/396

[#450 ] [PATCH] add --pidfile '' for not creating pidfiles (opened by rgl, closed by exarkun, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/450

[#497 ] client support for SFTP (opened by z3p, closed by exarkun, fixed)
    enhancement     conch      http://twistedmatrix.com/trac/ticket/497

[#1819] give permission to update the website to the people who occasionally need to do it (opened by dreid, closed by tekNico, )
    enhancement     website    http://twistedmatrix.com/trac/ticket/1819

[#1782] web2's WSGIHandler incorrectly advertises twisted as a multiprocess environment (opened by pjenvey, closed by foom, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/1782

[#665 ] extend reactor pool api to handle suggested additional threads (opened by davep, closed by davep, wontfix)
    enhancement     core       http://twistedmatrix.com/trac/ticket/665

                    ===== Lowest =====
[#1826] Typo in twisted.plugin example (opened by terrycojones, closed by mithrandi, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1826





From foom at fuhm.net  Sun Jun 18 21:24:55 2006
From: foom at fuhm.net (James Y Knight)
Date: Sun, 18 Jun 2006 23:24:55 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17259 - Revert 17255 -
	win32 test suit failures
In-Reply-To: <E1Frg2U-0004yk-00@wolfwood>
References: <E1Frg2U-0004yk-00@wolfwood>
Message-ID: <AE587186-A0E7-417B-BA5D-23D23690B0B2@fuhm.net>

On Jun 17, 2006, at 3:00 PM, Jp Calderone wrote:
> Revert 17255 - win32 test suit failures

FYI, the error was:

======================================================================== 
=======
[ERROR]: twisted.web2.dav.test.test_options.OPTIONS.test_DAV1

Traceback (most recent call last):
   File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted 
\web2\dav\test\util.py", line 164, in do_serialize
     r = f(*args)
   File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted 
\web2\dav\test\util.py", line 121, in send
     d = request.locateResource(request.uri)
   File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted 
\web2\server.py", line 408, in locateResource
     assert segments[0] == "", "URL path didn't begin with '/': %s" %  
(path,)
exceptions.AssertionError: URL path didn't begin with '/': %5Cdir2% 
5Ctest_delete.py

James



From jacob at internet24.de  Mon Jun 19 05:19:58 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 19 Jun 2006 13:19:58 +0200
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <1150715998.23944.39.camel@localhost.localdomain>

> That's because SOAP and company suck.  There is always, always, *always* a
> better way to accomplish a task than using SOAP.  I've ranted about this
> topic before in another thread, to no avail, and I doubt I'll change your
> mind either, but someone needs to speak out against this nonsense.

Curious, what would you use if you needed a general remote programming
interface built using python, where you can simply upload new python
codelets, that should be accessible not just from python but from any
major Windows and Unix PL, where you need complex types, and where you
wouldn't know what
kind of tasks you'll be solving with it in a couple of years. 

Corba? XML-RPC?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20060619/577caed9/attachment.sig>

From p.mayers at imperial.ac.uk  Mon Jun 19 05:43:45 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 19 Jun 2006 12:43:45 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>
Message-ID: <44968DF1.1070504@imperial.ac.uk>

Jean-Paul Calderone wrote:
> On Fri, 16 Jun 2006 17:25:22 +0100, Phil Mayers 
> <p.mayers at imperial.ac.uk> wrote:
>> All,
>>
>> I've run into "this service needs to know about this event from this 
>> other service" once too often. It's message bus time, baby.
> 
> Could you clarify whether you mean message passing within a single process
> or message passing between different processes on the same host or message
> passing between multiple hosts?  Different responders in this thread seem
> to have assumed different things.

Yes sorry:

Message passing between different processes on different machines i.e. 
the hard one.

I am thinking something like Spread.



From eprparadocs at gmail.com  Mon Jun 19 08:11:58 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 19 Jun 2006 10:11:58 -0400
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <1150715998.23944.39.camel@localhost.localdomain>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>	<4493DF48.2080604@gmail.com>	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
Message-ID: <4496B0AE.6050609@gmail.com>

Right now I support XML-RPC but people have clamored for SOAP, so SOAP
it is as well.

Personally I think sending stuff in ASCII text is silly, but it is out
there today as (a more or less) standard.

Chaz

Thomas Jacob wrote:
>> That's because SOAP and company suck.  There is always, always, *always* a
>> better way to accomplish a task than using SOAP.  I've ranted about this
>> topic before in another thread, to no avail, and I doubt I'll change your
>> mind either, but someone needs to speak out against this nonsense.
> 
> Curious, what would you use if you needed a general remote programming
> interface built using python, where you can simply upload new python
> codelets, that should be accessible not just from python but from any
> major Windows and Unix PL, where you need complex types, and where you
> wouldn't know what
> kind of tasks you'll be solving with it in a couple of years. 
> 
> Corba? XML-RPC?
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From eprparadocs at gmail.com  Mon Jun 19 08:14:17 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 19 Jun 2006 10:14:17 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <44968DF1.1070504@imperial.ac.uk>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>
	<44968DF1.1070504@imperial.ac.uk>
Message-ID: <4496B139.1070300@gmail.com>

Spread as in Twisted's Spread or the Spread communication package?

Chaz.

Phil Mayers wrote:
> Jean-Paul Calderone wrote:
>> On Fri, 16 Jun 2006 17:25:22 +0100, Phil Mayers
>> <p.mayers at imperial.ac.uk> wrote:
>>> All,
>>>
>>> I've run into "this service needs to know about this event from this
>>> other service" once too often. It's message bus time, baby.
>>
>> Could you clarify whether you mean message passing within a single
>> process
>> or message passing between different processes on the same host or
>> message
>> passing between multiple hosts?  Different responders in this thread seem
>> to have assumed different things.
> 
> Yes sorry:
> 
> Message passing between different processes on different machines i.e.
> the hard one.
> 
> I am thinking something like Spread.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From washort at twistedmatrix.com  Mon Jun 19 08:43:02 2006
From: washort at twistedmatrix.com (washort at twistedmatrix.com)
Date: Mon, 19 Jun 2006 10:43:02 -0400
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <1150715998.23944.39.camel@localhost.localdomain>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
Message-ID: <20060619144302.GY31901@localhost.localdomain>

On Mon, Jun 19, 2006 at 01:19:58PM +0200, Thomas Jacob wrote:
> Curious, what would you use if you needed a general remote programming
> interface built using python, where you can simply upload new python
> codelets, that should be accessible not just from python but from any
> major Windows and Unix PL, where you need complex types, and where you
> wouldn't know what
> kind of tasks you'll be solving with it in a couple of years. 

You're sending new code? SSH and SFTP.



From dekonerding at lbl.gov  Mon Jun 19 08:49:44 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Mon, 19 Jun 2006 07:49:44 -0700
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <4493DF48.2080604@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
Message-ID: <4496B988.8080808@lbl.gov>

Chaz. wrote:
> I am just about to embark on a SOAP interface to my services. I enjoy
> using Twisted and would love to continue using it with SOAP. I have used
> ZSI before in a standalone product but don't see much about marrying the
> two: twisted and ZSI.
>
> I am sure there is someone out there that has done it, and wonder how to
> do it? Are there any examples yet?
>   

The latest versions of ZSI (in subversion) incorporate "Twisted web 
client" support for SOAP.
This means you can start a twisted reactor and do asynchronous SOAP 
requests and get deferreds
returned.

Also, ZSI provides a WSResource you can add to a Site, very easy to make 
web services.

Another poster mentioned pyGridWare.  pyGridWare is nice in that it 
includes an extra
script, 'wsdl2web', which will create a .tac file and a WSResource file 
(you still have
to fill in the web service implementation).

Dave



From jacob at internet24.de  Mon Jun 19 09:02:47 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 19 Jun 2006 17:02:47 +0200
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <4496B0AE.6050609@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
	<4496B0AE.6050609@gmail.com>
Message-ID: <1150729367.23944.73.camel@localhost.localdomain>

On Mon, 2006-06-19 at 10:11 -0400, Chaz. wrote:
> Right now I support XML-RPC but people have clamored for SOAP, so SOAP
> it is as well.

It's really popular, especially among .NET disciples ... ;)

> Personally I think sending stuff in ASCII text is silly, but it is out
> there today as (a more or less) standard.

Well, it's certainly not something that speeds up processing, but
it makes systems much easier to debug, if the underlying messaging
system
doesn't work as it should. Which of course happens far more
often with SOAP than with other systems.

Actually, SOAP would be quite nice, if it 1) were standardised
enough to really allow condition free interoperability, 2) were less
bloated and 3) didn't simply ignore major parts of the actual
RPC/Document
request process in the standard.

The WS-I people (http://www.ws-i.org/)  try to address these things, in
an attempt to "standardise the standard" and by adding additional
stuff like WS-Security (standardised security credentials
handling) and WS-Addressing (actually specifying 
the service endpoint/protocol inside a SOAP message).

Maybe that will improve the situation somewhat, python's ZSI
is at least tracking those developments.

   -Thomas
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20060619/dd286b4b/attachment.sig>

From jacob at internet24.de  Mon Jun 19 09:11:21 2006
From: jacob at internet24.de (Thomas Jacob)
Date: Mon, 19 Jun 2006 17:11:21 +0200
Subject: [Twisted-Python] Twisted and ZSI - any examples/words of wisdom?
In-Reply-To: <20060619144302.GY31901@localhost.localdomain>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<4493DF48.2080604@gmail.com>
	<op.tbatoclg3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<1150715998.23944.39.camel@localhost.localdomain>
	<20060619144302.GY31901@localhost.localdomain>
Message-ID: <1150729881.23944.82.camel@localhost.localdomain>

On Mon, 2006-06-19 at 10:43 -0400, washort at twistedmatrix.com wrote:
> On Mon, Jun 19, 2006 at 01:19:58PM +0200, Thomas Jacob wrote:
> > Curious, what would you use if you needed a general remote programming
> > interface built using python, where you can simply upload new python
> > codelets, that should be accessible not just from python but from any
> > major Windows and Unix PL, where you need complex types, and where you
> > wouldn't know what
> > kind of tasks you'll be solving with it in a couple of years. 

Sure ;) But these codelets are supposed to offer some kind of
RPC-Service, once they are uploaded, several different "rpc functions"
per service, various complex input and output data types, in a multi
platform/OS
environment. And the question was: what is better suited for
that than SOAP.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20060619/aa626834/attachment.sig>

From p.mayers at imperial.ac.uk  Mon Jun 19 15:24:43 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 19 Jun 2006 22:24:43 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4496B139.1070300@gmail.com>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk>
	<4496B139.1070300@gmail.com>
Message-ID: <4497161B.5090709@imperial.ac.uk>

Chaz. wrote:
> Spread as in Twisted's Spread or the Spread communication package?

The latter (sorry, thought it was obvious in the context)



From terry at jon.es  Mon Jun 19 15:59:49 2006
From: terry at jon.es (Terry Jones)
Date: Mon, 19 Jun 2006 23:59:49 +0200
Subject: [Twisted-Python] General question on components, interfaces, etc.
In-Reply-To: Your message at 15:17:01 on Thursday, 15 June 2006
References: <17553.31642.395380.717728@terry.jones.tc>
	<20060615191701.29014.575537789.divmod.quotient.1111@ohm>
Message-ID: <17559.7765.337206.304911@terry.jones.tc>

>>>>> "glyph" == glyph  <glyph at divmod.com> writes:
glyph> It allows you to use the same language to talk about plugins as you
glyph> would about any other kind of adapter.  Effectively, the plugin
glyph> system is a way to adapt your "system environment" to an object
glyph> which provides a given interface.  If you use the twisted plugin
glyph> system (or some other system which uses Interface objects) then it
glyph> is pretty easy to factor your code such that implementations of the
glyph> desired interface can be obtained implicitly through the environment
glyph> or explicitly by user code passing in an implementation -- or by
glyph> passing in an object that is adaptable to that interface, and then
glyph> doing adaptation.

Hi, thanks for the explanation. I have another basic question...

If were not using a component-based approach and instead I simply
implemented the interface I wanted (in, say, myImp.py), then I could
"import myImp" in multiple source files and everything would be fairly
straightforward (if inflexible when it came to using different
implementations).

If I allow a user or sysadmin to specify the implementation to use on the
command line, then my main() in main.py can use some kind of plugin
approach to find and load the right source file. That's presumably going to
use some form of __import__, such as

  myImp = __import__(....)

so I then have a module-level global variable in main.py called myImp. But
my other source files do not yet know what to import.

It seems like an obvious solution is to have other source files that want
to use the implementation refer to main.myImp instead of importing anything
themselves.  Or, equivalently, one could have a plugin.py module with an
init() function that loads all required plugins and makes them accessible
as module-level global variables for others to use to get to classes and
methods in the loaded implementation.

Is that the recommended way to deal with accessing dynamically imported
components?

Regards,
Terry



From eprparadocs at gmail.com  Mon Jun 19 20:26:34 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 19 Jun 2006 22:26:34 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4497161B.5090709@imperial.ac.uk>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk>
	<4496B139.1070300@gmail.com> <4497161B.5090709@imperial.ac.uk>
Message-ID: <44975CDA.8070704@gmail.com>

I've used Spread communication before. While it is a nice system is does
have some shortcomings. First, it is a pretty costly system in terms of
resources. Secondly, it will only support a hundred or so computers (too
small for my application).


Chaz.

Phil Mayers wrote:
> Chaz. wrote:
>> Spread as in Twisted's Spread or the Spread communication package?
> 
> The latter (sorry, thought it was obvious in the context)
> 




From ml.flex at gmail.com  Tue Jun 20 06:32:10 2006
From: ml.flex at gmail.com (Micky Latowicki)
Date: Tue, 20 Jun 2006 14:32:10 +0200
Subject: [Twisted-Python] pb over windows named pipes?
Message-ID: <d27002d90606200532u79b33fb9p3d6845333ff0bf9b@mail.gmail.com>

Hi.

We are interested in running pb using windows named pipes as transport, to
enjoy the OS-level access control they offer.

We seek advice regarding:

1. what must be written to make this happen
2. how hard would it be
3. what existing code can we learn from

Thanks in advance

Micky Latowicki,
Retell Development Laboratories
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060620/8f956909/attachment.html>

From markus at bluegap.ch  Tue Jun 20 07:52:28 2006
From: markus at bluegap.ch (Markus Schiltknecht)
Date: Tue, 20 Jun 2006 15:52:28 +0200
Subject: [Twisted-Python] twisted threads: synchronous function calls
Message-ID: <4497FD9C.1070207@bluegap.ch>

Hi,

I had to use a thread... that thread must also call a function in the 
twisted reactor thread. No problem, I thought, looked up in the fine 
manual and found the reactor.callFromThread(somefunc, someargs...).

Wonderful, so in my separate thread I wrote:

x = reactor.callFromThread(myfunc, myargs...)

..but...

callFromThread returns before myfunc finishes. It seems to be useful for 
async function calls, but not for my case.

I ended up writing something like:

def syncCall():

	waitCond = threading.Condition()
	waitCond.result = 0

	def _process(cond):
		cond.acquire()
		cond.result = ..some function call..
		cond.notify()
		cond.release()

	waitCond.acquire()
	reactor.callFromThread(_process, waitCond)
	waitCond.wait()
	waitCond.release()

	return waitCond.result


Now, I might have missed something, but that's sure functionality which 
Twisted should provide.

In my first attempt I let the function return a Defer. I expected the 
reactor to 'send back' the result to the calling thread only after the 
Defer.callback() was called. IMHO that would be the most elegant and 
intuitively way:


def myfunc(myarg):
	Defer d
	reactor.callLater(10, d.callback)
	return d

# from the separate thread one would write:
reactor.callFromThreadSync(myfunc, args)

Am I facing problems I'm not aware of? Did I miss something?

Regards

Markus



From andrew-twisted at puzzling.org  Tue Jun 20 08:25:41 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 21 Jun 2006 00:25:41 +1000
Subject: [Twisted-Python] twisted threads: synchronous function calls
In-Reply-To: <4497FD9C.1070207@bluegap.ch>
References: <4497FD9C.1070207@bluegap.ch>
Message-ID: <20060620142541.GA4667@steerpike.home.puzzling.org>

On Tue, Jun 20, 2006 at 03:52:28PM +0200, Markus Schiltknecht wrote:
[...]
> 
> Now, I might have missed something, but that's sure functionality which 
> Twisted should provide.

See http://twistedmatrix.com/trac/ticket/1042

It has code for a function that does the same basic thing that yours does, but
with a bit more polish, e.g. if the result is a Deferred, it won't wake the
calling thread until the Deferred has a result, and it handles exceptions.

It just needs someone to write some tests and docs, and then it can be merged.
The function in that issue has actually been used by a few people, so it seems
to do the job.

-Andrew.




From therve at free.fr  Tue Jun 20 08:27:06 2006
From: therve at free.fr (Thomas HERVE)
Date: Tue, 20 Jun 2006 16:27:06 +0200
Subject: [Twisted-Python] twisted threads: synchronous function calls
In-Reply-To: <4497FD9C.1070207@bluegap.ch>
References: <4497FD9C.1070207@bluegap.ch>
Message-ID: <20060620162706.sdltikon4wccg0gg@itchy.wasabout.net>

Quoting Markus Schiltknecht <markus at bluegap.ch>:

> Hi,
>
> callFromThread returns before myfunc finishes. It seems to be useful 
> for async function calls, but not for my case.
>
> [snip]
>
> Am I facing problems I'm not aware of? Did I miss something?

There's a ticket waiting for tests/review/? in the tracker: 
http://twistedmatrix.com/trac/ticket/1042.

You can see that you have an available implementation in web2.wsgi 
called callInReactor which looks similar to yours but uses Queue 
instead.

-- 
Thomas

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.




From glyph at divmod.com  Tue Jun 20 12:03:22 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 20 Jun 2006 14:03:22 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <d27002d90606200532u79b33fb9p3d6845333ff0bf9b@mail.gmail.com>
Message-ID: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>



On Tue, 20 Jun 2006 14:32:10 +0200, Micky Latowicki <ml.flex at gmail.com> wrote:

>We are interested in running pb using windows named pipes as transport, to
>enjoy the OS-level access control they offer.
>
>We seek advice regarding:
>
>1. what must be written to make this happen

A reactor extension like listenNamedPipe/connectNamedPipe probably.

Likely this would be implemented similarly to listenUNIX.

>2. how hard would it be

To do it properly?  You can't select() on named pipes in Windows, so you'd have to work with IOCP, which I unfortunately understand only at a high level.  Hopefully someone who has worked with iocpreactor can answer your questions (hint, hint).

>3. what existing code can we learn from

There is code in twisted.internet._dumbwin32proc which does timed polling of asynchronous anonymous pipes for portable subprocess support, which may be of some use to you.

Please consider contributing the code for this if you implement it :).



From itamar at itamarst.org  Tue Jun 20 12:31:30 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 20 Jun 2006 14:31:30 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
Message-ID: <1150828291.5835.31.camel@localhost.localdomain>

On Tue, 2006-06-20 at 14:03 -0400, glyph at divmod.com wrote:

> >2. how hard would it be
> 
> To do it properly?  You can't select() on named pipes in Windows, so
> you'd have to work with IOCP, which I unfortunately understand only at
> a high level.  Hopefully someone who has worked with iocpreactor can
> answer your questions (hint, hint).

That's not completely accurate. I'm faily certain you can use named
pipes with WaitForMultipleObjects, so you could probably implement this
relatively easily with the win32eventreactor.

If they support non-blocking operations it should be easy to implement
using t.i.abstract.FileDescriptor as a basis; if they don't you can
probably steal most of the code from the win32 process support.





From ml.flex at gmail.com  Tue Jun 20 12:55:36 2006
From: ml.flex at gmail.com (Micky Latowicki)
Date: Tue, 20 Jun 2006 20:55:36 +0200
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <1150828291.5835.31.camel@localhost.localdomain>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<1150828291.5835.31.camel@localhost.localdomain>
Message-ID: <d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>

Thank you glyph and Itamar.

The idea to use named pipes occured to us very late in our dev. process, at
a point where we really have to do things quickly. We think that we should
adopt named pipes nonetheless because they should save us a lot of other
work.

Looking at WaitForMultipleObjects, it doesn't seem like named pipes fit. We
would have to use overlapping IO and events for that.

Since we use wxreactor, we probably can't use win32eventreactor as-is.

What is most accessible to us, we think, it to create threads and block. So
that's what we're going to do, at least until we have time to do something
nicer. We will contribute it, if we think it's good. We probably won't think
it's much good, though. Sorry.

Thanks again.

On 20/06/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>
> On Tue, 2006-06-20 at 14:03 -0400, glyph at divmod.com wrote:
>
> > >2. how hard would it be
> >
> > To do it properly?  You can't select() on named pipes in Windows, so
> > you'd have to work with IOCP, which I unfortunately understand only at
> > a high level.  Hopefully someone who has worked with iocpreactor can
> > answer your questions (hint, hint).
>
> That's not completely accurate. I'm faily certain you can use named
> pipes with WaitForMultipleObjects, so you could probably implement this
> relatively easily with the win32eventreactor.
>
> If they support non-blocking operations it should be easy to implement
> using t.i.abstract.FileDescriptor as a basis; if they don't you can
> probably steal most of the code from the win32 process support.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060620/534298bc/attachment.html>

From itamar at itamarst.org  Tue Jun 20 13:54:22 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 20 Jun 2006 15:54:22 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<1150828291.5835.31.camel@localhost.localdomain>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
Message-ID: <1150833263.5835.33.camel@localhost.localdomain>

On Tue, 2006-06-20 at 20:55 +0200, Micky Latowicki wrote:

> What is most accessible to us, we think, it to create threads and
> block. So that's what we're going to do, at least until we have time
> to do something nicer. We will contribute it, if we think it's good.
> We probably won't think it's much good, though. Sorry.

Take a look at how Twisted 2.4 implements process communication on
Windows; it uses anonymous pipes, so you should be able to just use that
code and change the pipe creation bits.




From general at eepatents.com  Tue Jun 20 14:08:13 2006
From: general at eepatents.com (Ed Suominen)
Date: Tue, 20 Jun 2006 13:08:13 -0700
Subject: [Twisted-Python] twisted threads: synchronous function calls
In-Reply-To: <E1Fsja9-0001pz-02@pyramid.twistedmatrix.com>
References: <E1Fsja9-0001pz-02@pyramid.twistedmatrix.com>
Message-ID: <449855AD.1040101@eepatents.com>

> From: Andrew Bennetts <andrew-twisted at puzzling.org> On Tue, Jun 20,
> 2006 at 03:52:28PM +0200, Markus Schiltknecht wrote: [...]
>> Now, I might have missed something, but that's sure functionality
>> which Twisted should provide.
> 
> See http://twistedmatrix.com/trac/ticket/1042
> 
> It has code for a function that does the same basic thing that yours
> does, but with a bit more polish, e.g. if the result is a Deferred,
> it won't wake the calling thread until the Deferred has a result, and
> it handles exceptions.
> 
> It just needs someone to write some tests and docs, and then it can
> be merged. The function in that issue has actually been used by a few
> people, so it seems to do the job.

I liked Andrew's idea and incorporated the code of his ticket into my
syncbridge module, which I'm using as part of my sAsync package,
http://foss.eepatents.com/sAsync/

In addition to the topic here, the syncbridge module expands
considerably on the theme of queuing up synchronous tasks. It took a
*lot* of work to get the synchronous/asynchronous interface debugged and
free (apparently) of race conditions. And it has a pretty complete suite
of unit tests, although there's just one test for this particular method
right now.

The sAsync package is GPL, but I just re-licensed the syncbridge module
itself to MIT in hopes of getting Glyph to accept it into Twisted. See
ticket http://twistedmatrix.com/trac/ticket/1768.

Best regards, Ed




From teratorn at twistedmatrix.com  Tue Jun 20 18:26:48 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 21 Jun 2006 10:26:48 +1000
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<1150828291.5835.31.camel@localhost.localdomain>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
Message-ID: <op.tbgzgv08y3d107@localhost.localdomain>

On Wed, 21 Jun 2006 04:55:36 +1000, Micky Latowicki <ml.flex at gmail.com>  
wrote:

> Thank you glyph and Itamar.
>
> The idea to use named pipes occured to us very late in our dev. process,  
> at
> a point where we really have to do things quickly. We think that we  
> should
> adopt named pipes nonetheless because they should save us a lot of other
> work.
>
> Looking at WaitForMultipleObjects, it doesn't seem like named pipes fit.  
> We
> would have to use overlapping IO and events for that.

WaitForMultipleObjects can be used with named pipes, and yes, you will  
create Event objects and use overlapping IO with it.

See, for example,  
http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ipc/base/named_pipe_server_using_overlapped_i_o.asp

I don't really have any idea how easily this would fit in  
win32eventreactor... anyone?

>
> Since we use wxreactor, we probably can't use win32eventreactor as-is.
>
> What is most accessible to us, we think, it to create threads and block.  
> So
> that's what we're going to do, at least until we have time to do  
> something
> nicer. We will contribute it, if we think it's good. We probably won't  
> think
> it's much good, though. Sorry.
>
> Thanks again.

Yeah, Twisted doesn't have any real support for combining reactors (and  
maybe it's not really feasible), but that's a topic for another thread :)

> On 20/06/06, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>>
>> On Tue, 2006-06-20 at 14:03 -0400, glyph at divmod.com wrote:
>>
>> > >2. how hard would it be
>> >
>> > To do it properly?  You can't select() on named pipes in Windows, so
>> > you'd have to work with IOCP, which I unfortunately understand only at
>> > a high level.  Hopefully someone who has worked with iocpreactor can
>> > answer your questions (hint, hint).
>>
>> That's not completely accurate. I'm faily certain you can use named
>> pipes with WaitForMultipleObjects, so you could probably implement this
>> relatively easily with the win32eventreactor.
>>
>> If they support non-blocking operations it should be easy to implement
>> using t.i.abstract.FileDescriptor as a basis; if they don't you can
>> probably steal most of the code from the win32 process support.

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows



From tdickenson at devmail.geminidataloggers.co.uk  Wed Jun 21 02:05:43 2006
From: tdickenson at devmail.geminidataloggers.co.uk (Toby Dickenson)
Date: Wed, 21 Jun 2006 09:05:43 +0100
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <op.tbgzgv08y3d107@localhost.localdomain>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
	<op.tbgzgv08y3d107@localhost.localdomain>
Message-ID: <200606210905.43868.tdickenson@devmail.geminidataloggers.co.uk>

On Wednesday 21 June 2006 01:26, Eric Mangold wrote:

> > Since we use wxreactor, we probably can't use win32eventreactor as-is.

Could you use threadedselectreactor in place of wxreactor today? If yes, you 
should be able to use a win32eventreactor/threadedselectreactor hybrid that  
I contributed last year sometime.

(I dont have the URL right now... let me know if you cant find it)

-- 
Toby Dickenson



From eprparadocs at gmail.com  Wed Jun 21 07:28:07 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 21 Jun 2006 09:28:07 -0400
Subject: [Twisted-Python] Manhole - How to support 
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <44994967.9000608@gmail.com>

I've built a 'ManholeFactory' to use with my application (see below).
When I try to connect to it via the 'manhole' client (under Linux) it
asks for Host, port, Name, Password, all of which I provide. But it gets
an error returned.

I was wondering if I need to do anything special (besides what my
manhole support does)?

Peace,
Chaz


(Please forgive the poor formatting...it is the email client doing it).


def ManholeFactory(namespace,**passwords) :
    realm = manhole_ssh.TerminalRealm()
    def getManhole(_): return manhole.Manhole(namespace)
    realm.chainedProtocolFactory.protocolFactory = getManhole
    p = portal.Portal(realm)
    p.registerChecker(
	checkers.InMemoryUsernamePasswordDatabaseDontUse(**passwords))
    f = manhole_ssh.ConchFactory(p)
    return f


class ManholeService(internet.TCPServer):
    def __init__(self,port,namespace,**passwords):
	internet.TCPServer.__init__(self,port,
		ManholeFactory(namespace,**passwords))

ManholeSrv = ManholeService(ivars.ManholePort,
			globals(),admin='whirlwind')

ManholeSrv.setServiceParent(srv)



From exarkun at divmod.com  Wed Jun 21 08:36:51 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 10:36:51 -0400
Subject: [Twisted-Python] Manhole - How to support 
In-Reply-To: <44994967.9000608@gmail.com>
Message-ID: <20060621143651.29014.2056138675.divmod.quotient.5672@ohm>

On Wed, 21 Jun 2006 09:28:07 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I've built a 'ManholeFactory' to use with my application (see below).
>When I try to connect to it via the 'manhole' client (under Linux) it
>asks for Host, port, Name, Password, all of which I provide. But it gets
>an error returned.
>
>I was wondering if I need to do anything special (besides what my
>manhole support does)?

The manhole you set up with the attached code only listens for SSH
connections.  The Gtk2 manhole client that you're running hasn't been
updated to run with the new version of manhole yet.

I've run your code and tried ssh'ing into it and everything seems to
work alright.

Jean-Paul



From eprparadocs at gmail.com  Wed Jun 21 08:48:47 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 21 Jun 2006 10:48:47 -0400
Subject: [Twisted-Python] Manhole - How to support
In-Reply-To: <20060621143651.29014.2056138675.divmod.quotient.5672@ohm>
References: <20060621143651.29014.2056138675.divmod.quotient.5672@ohm>
Message-ID: <44995C4F.8030203@gmail.com>

Yes, the ssh side worked well. I was hoping to give my customer
something more graphical...lol.

Peace,
Chaz

Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 09:28:07 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>> I've built a 'ManholeFactory' to use with my application (see below).
>> When I try to connect to it via the 'manhole' client (under Linux) it
>> asks for Host, port, Name, Password, all of which I provide. But it gets
>> an error returned.
>>
>> I was wondering if I need to do anything special (besides what my
>> manhole support does)?
> 
> The manhole you set up with the attached code only listens for SSH
> connections.  The Gtk2 manhole client that you're running hasn't been
> updated to run with the new version of manhole yet.
> 
> I've run your code and tried ssh'ing into it and everything seems to
> work alright.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dekonerding at lbl.gov  Wed Jun 21 09:09:17 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Wed, 21 Jun 2006 08:09:17 -0700
Subject: [Twisted-Python] How to get at applications in a reactor?
Message-ID: <4499611D.7030901@lbl.gov>

Hi folks,.

I've set up a convenient telnet manhole into my application.  The 
application runs a web site serving up Static files
and some Resources.  What I want to do is telnet into the manhole and 
get access to the application object.
Unfortunately, the useful information is not bound to the local scope of 
the telnet manhole, so
I have to "stash" the application object when it is instantiated in some 
global place (such as sys._myapplication).

I'd much rather just be able to import a reactor and get at the Sites 
which have been added to it.  Browsing around
the reactor, however, hasn't been that illuminating, and none of the 
reference docs seem to point at some global
registry of added Sites/Applications, etc.

Dave



From itamar at itamarst.org  Wed Jun 21 09:21:58 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Jun 2006 11:21:58 -0400
Subject: [Twisted-Python] pb over windows named pipes?
In-Reply-To: <200606210905.43868.tdickenson@devmail.geminidataloggers.co.uk>
References: <20060620180322.29014.1027296541.divmod.quotient.4601@ohm>
	<d27002d90606201155g32dfd097y77d75e55e4c52dc8@mail.gmail.com>
	<op.tbgzgv08y3d107@localhost.localdomain>
	<200606210905.43868.tdickenson@devmail.geminidataloggers.co.uk>
Message-ID: <1150903318.5667.0.camel@localhost.localdomain>

On Wed, 2006-06-21 at 09:05 +0100, Toby Dickenson wrote:
> On Wednesday 21 June 2006 01:26, Eric Mangold wrote:
> 
> > > Since we use wxreactor, we probably can't use win32eventreactor as-is.
> 
> Could you use threadedselectreactor in place of wxreactor today? 

Newer versions of wxreactor are based on threadedselectreactor.





From itamar at itamarst.org  Wed Jun 21 09:23:28 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Jun 2006 11:23:28 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <E1FsvEM-0001Ht-00@wolfwood>
References: <E1FsvEM-0001Ht-00@wolfwood>
Message-ID: <1150903408.5667.2.camel@localhost.localdomain>

On Tue, 2006-06-20 at 23:26 -0600, Stephen Thorne wrote:
> Author: stephen
> Date: Tue Jun 20 23:26:19 2006
> New Revision: 17325
> 
> Modified:
>    trunk/twisted/persisted/sob.py
>    trunk/twisted/test/test_sob.py
> Log:
> merge sob-491, fixes #491

Who reviewed it, and what was #491?




From exarkun at divmod.com  Wed Jun 21 10:15:03 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 12:15:03 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <1150903408.5667.2.camel@localhost.localdomain>
Message-ID: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>

On Wed, 21 Jun 2006 11:23:28 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2006-06-20 at 23:26 -0600, Stephen Thorne wrote:
>> Author: stephen
>> Date: Tue Jun 20 23:26:19 2006
>> New Revision: 17325
>>
>> Modified:
>>    trunk/twisted/persisted/sob.py
>>    trunk/twisted/test/test_sob.py
>> Log:
>> merge sob-491, fixes #491
>
>Who reviewed it, and what was #491?
>

To clarify, all commits to trunk should take on this form:

  <line of 78 or fewer characters summarizing change>

  Author: <names of people who wrote the code>
  Reviewer: <names of people who reviewed the branch>
  Fixes <whatever tickets are being fixed>
  [Re <whatever other tickets are related>]

  <longer description of what changes are taking place>

Jean-Paul




From exarkun at divmod.com  Wed Jun 21 10:19:09 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 12:19:09 -0400
Subject: [Twisted-Python] How to get at applications in a reactor?
In-Reply-To: <4499611D.7030901@lbl.gov>
Message-ID: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>

On Wed, 21 Jun 2006 08:09:17 -0700, "David E. Konerding" <dekonerding at lbl.gov> wrote:
>Hi folks,.
>
>I've set up a convenient telnet manhole into my application.  The 
>application runs a web site serving up Static files
>and some Resources.  What I want to do is telnet into the manhole and get 
>access to the application object.
>Unfortunately, the useful information is not bound to the local scope of the 
>telnet manhole, so
>I have to "stash" the application object when it is instantiated in some 
>global place (such as sys._myapplication).

You can populate the local namespace of the manhole.

twisted.conch.manhole.Manhole takes a namespace argument to its __init__

twisted.manhole.telnet.ShellFactory has a namespace instance attribute
which you can populate after creating one.

The reactor doesn't know anything about sites or applications, so it can't
give you a list of them.  It could give you a list of file descriptors, but
I don't think that would be very useful :)

The gc module is also fairly handy with manhole.  For example,
gc.get_referrers(SomeClass) will give you every instance of the
given class which exists in the process at that time (it will
give you some other stuff too, like a module dictionary, but you
can use isinstance() to filter out just the instances).

Jean-Paul



From corydodt at twistedmatrix.com  Wed Jun 21 10:30:02 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 09:30:02 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
Message-ID: <4499740A.30406@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Oh, for pete's sake.

I'm all for a structured development process, but this is just being pedantic
for the sake of being pedantic.  Please tell me, how does following this rigid
log message structure help speed twisted development?  How does it contribute
to the overall quality of Twisted in any substantive way?

>  <line of 78 or fewer characters summarizing change>

Be serious.  The haranguing about this kind of stuff is getting so tiresome
that I've stopped making any serious attempts to commit to the trunk.  As long
as the necessary information is in there, who the heck cares how it's
formatted?  I see that glyph looked at the bug and pronounced it acceptable.
It was possible to look this up in the bug, which is how I found out, spending
all of 10 seconds on it.

C


Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 11:23:28 -0400, Itamar Shtull-Trauring
> <itamar at itamarst.org> wrote:
>> On Tue, 2006-06-20 at 23:26 -0600, Stephen Thorne wrote:
>>> Author: stephen
>>> Date: Tue Jun 20 23:26:19 2006
>>> New Revision: 17325
>>>
>>> Modified:
>>>    trunk/twisted/persisted/sob.py
>>>    trunk/twisted/test/test_sob.py
>>> Log:
>>> merge sob-491, fixes #491
>>
>> Who reviewed it, and what was #491?
>>
> 
> To clarify, all commits to trunk should take on this form:
> 
>  <line of 78 or fewer characters summarizing change>
> 
>  Author: <names of people who wrote the code>
>  Reviewer: <names of people who reviewed the branch>
>  Fixes <whatever tickets are being fixed>
>  [Re <whatever other tickets are related>]
> 
>  <longer description of what changes are taking place>
> 
> Jean-Paul
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmXQK3A5SrXAiHQcRAjjmAJ96P0FRjVLFiTpE5uWviwx3jrbcMACdE1zB
RJhcljV+ICD9UDvYVuEbNNw=
=M3HX
-----END PGP SIGNATURE-----



From therve at free.fr  Wed Jun 21 10:34:47 2006
From: therve at free.fr (Thomas HERVE)
Date: Wed, 21 Jun 2006 18:34:47 +0200
Subject: [Twisted-Python] Twisters at EuroPython ?
Message-ID: <20060621183447.x3wrj47qv44g8wwg@itchy.wasabout.net>

Hi,

My company should pay me the trip to assist EuroPython at Geneva (which 
is a great thing!). I'd probably be there from the 1st to the 5th of 
July, and was wondering if some folks were motivated by 
discuss/code/whatever, particulary in the pre-conference time. No 
sprint are registered for now in the wiki page : 
http://wiki.python.org/moin/EuroPython2006. I'm interested about nearly 
any topics (code, bug squashing, doc, tutorial, etc).

Among Twisted guys I identify Moshe (I'll definitely go to wuuuuu at 
his talk :)), who didn't say when he'll be there. I suppose there 
should be other mailling-list readers, so please make yourself known!

-- 
Thomas

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.




From mike at mkp.ca  Wed Jun 21 10:38:44 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Wed, 21 Jun 2006 12:38:44 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <4499740A.30406@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com>
Message-ID: <200606211238.45431.mike@mkp.ca>

On Wednesday 21 June 2006 12:30, Cory Dodt wrote:
> As long
> as the necessary information is in there, who the heck cares how it's
> formatted?

Could be wrong, but I think the commit messages need to be machine-readable.  
Hence, strict format guidelines that need to be followed.

Mike.



From corydodt at twistedmatrix.com  Wed Jun 21 10:45:44 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 09:45:44 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <200606211238.45431.mike@mkp.ca>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com> <200606211238.45431.mike@mkp.ca>
Message-ID: <449977B8.6000407@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

If so, this is the first time I've heard about it.  And what are we doing
about the masses of commit messages that aren't?

C


Mike Pelletier wrote:
> On Wednesday 21 June 2006 12:30, Cory Dodt wrote:
>> As long
>> as the necessary information is in there, who the heck cares how it's
>> formatted?
> 
> Could be wrong, but I think the commit messages need to be machine-readable.  
> Hence, strict format guidelines that need to be followed.
> 
> Mike.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmXe43A5SrXAiHQcRAgH7AJ4lzv5V8IsKIxuXsKXF+9O/QUXKogCgg563
9oogCVAHg6fC154dTQ4DL44=
=cpKI
-----END PGP SIGNATURE-----



From mike at mkp.ca  Wed Jun 21 10:41:19 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Wed, 21 Jun 2006 12:41:19 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <449977B8.6000407@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<200606211238.45431.mike@mkp.ca>
	<449977B8.6000407@twistedmatrix.com>
Message-ID: <200606211241.19782.mike@mkp.ca>

On Wednesday 21 June 2006 12:45, Cory Dodt wrote:
> If so, this is the first time I've heard about it.  And what are we doing
> about the masses of commit messages that aren't?

Excuse me, just realised I was thinking of the plone SVN, which scrapes "fixes 
#xxx" an so on.

Mike.



From eprparadocs at gmail.com  Wed Jun 21 10:41:20 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 21 Jun 2006 12:41:20 -0400
Subject: [Twisted-Python] How to get at applications in a reactor?
In-Reply-To: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
References: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
Message-ID: <449976B0.6080404@gmail.com>

Here is some code I use that uses the global() parm in manhole.

from twisted.cred import portal,checkers
from twisted.conch import manhole, manhole_ssh
from twisted.application import internet


def ManholeFactory(namespace,**passwords) :
    realm = manhole_ssh.TerminalRealm()
    def getManhole(_): return manhole.Manhole(namespace)
    realm.chainedProtocolFactory.protocolFactory = getManhole
    p = portal.Portal(realm)

p.registerChecker(checkers.InMemoryUsernamePasswordDatabaseDontUse(**passwords))
    f = manhole_ssh.ConchFactory(p)
    return f


class ManholeService(internet.TCPServer):
    def __init__(self,port,namespace,**passwords):
        internet.TCPServer.__init__(self,port,
			ManholeFactory(namespace,**passwords))

You invoke it like:

    # Maybe start the manhole debugging service
    ManholeSrv = ManholeService(manholePort,
				globals(),admin='acct')
    ManholeSrv.setServiceParent(srv)


This will allow me access to everything in my application.

Chaz


Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 08:09:17 -0700, "David E. Konerding"
> <dekonerding at lbl.gov> wrote:
>> Hi folks,.
>>
>> I've set up a convenient telnet manhole into my application.  The
>> application runs a web site serving up Static files
>> and some Resources.  What I want to do is telnet into the manhole and
>> get access to the application object.
>> Unfortunately, the useful information is not bound to the local scope
>> of the telnet manhole, so
>> I have to "stash" the application object when it is instantiated in
>> some global place (such as sys._myapplication).
> 
> You can populate the local namespace of the manhole.
> 
> twisted.conch.manhole.Manhole takes a namespace argument to its __init__
> 
> twisted.manhole.telnet.ShellFactory has a namespace instance attribute
> which you can populate after creating one.
> 
> The reactor doesn't know anything about sites or applications, so it can't
> give you a list of them.  It could give you a list of file descriptors, but
> I don't think that would be very useful :)
> 
> The gc module is also fairly handy with manhole.  For example,
> gc.get_referrers(SomeClass) will give you every instance of the
> given class which exists in the process at that time (it will
> give you some other stuff too, like a module dictionary, but you
> can use isinstance() to filter out just the instances).
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 




From dekonerding at lbl.gov  Wed Jun 21 10:57:10 2006
From: dekonerding at lbl.gov (David E. Konerding)
Date: Wed, 21 Jun 2006 09:57:10 -0700
Subject: [Twisted-Python] How to get at applications in a reactor?
In-Reply-To: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
References: <20060621161909.29014.1929683276.divmod.quotient.5746@ohm>
Message-ID: <44997A66.4000508@lbl.gov>

Jean-Paul Calderone wrote:
> On Wed, 21 Jun 2006 08:09:17 -0700, "David E. Konerding" 
> <dekonerding at lbl.gov> wrote:
>> Hi folks,.
>>
>> I've set up a convenient telnet manhole into my application.  The 
>> application runs a web site serving up Static files
>> and some Resources.  What I want to do is telnet into the manhole and 
>> get access to the application object.
>> Unfortunately, the useful information is not bound to the local scope 
>> of the telnet manhole, so
>> I have to "stash" the application object when it is instantiated in 
>> some global place (such as sys._myapplication).
>
> You can populate the local namespace of the manhole.
>
> twisted.conch.manhole.Manhole takes a namespace argument to its __init__
>
> twisted.manhole.telnet.ShellFactory has a namespace instance attribute
> which you can populate after creating one.
>
Excellent, thanks!
> The reactor doesn't know anything about sites or applications, so it 
> can't
> give you a list of them.  It could give you a list of file 
> descriptors, but
> I don't think that would be very useful :)
>
Oh, yeah, I expected to get only file descriptors, and hoped that a bit 
of clever gc.get_referrers()
would help me walk back to the Site and Application objects.

Somebody must be keeping references to the Site and Application 
objects-- at least,
the twistd daemon that imported my .tac file, right?

> The gc module is also fairly handy with manhole.  For example,
> gc.get_referrers(SomeClass) will give you every instance of the
> given class which exists in the process at that time (it will
> give you some other stuff too, like a module dictionary, but you
> can use isinstance() to filter out just the instances).
>
Yep, when I played with this *all* I got back were module namespace 
dictionaries.  That's partly why I was so confused...

Dave



From radix at twistedmatrix.com  Wed Jun 21 11:12:10 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jun 2006 13:12:10 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <4499740A.30406@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com>
Message-ID: <60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>

On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> I'm all for a structured development process, but this is just being pedantic
> for the sake of being pedantic.  Please tell me, how does following this rigid
> log message structure help speed twisted development?  How does it contribute
> to the overall quality of Twisted in any substantive way?
>
> >  <line of 78 or fewer characters summarizing change>
>
> Be serious.  The haranguing about this kind of stuff is getting so tiresome
> that I've stopped making any serious attempts to commit to the trunk.  As long
> as the necessary information is in there, who the heck cares how it's
> formatted?  I see that glyph looked at the bug and pronounced it acceptable.
> It was possible to look this up in the bug, which is how I found out, spending
> all of 10 seconds on it.

While I don't care so much  how it's 78 characters, I *do* care about
all the missing information in that commit message, given that I'm one
of the guys who has to read through commit logs while building a NEWS
file for the release. This is a good policy and everyone's been
following it beautifully for a while now.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Wed Jun 21 11:23:38 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 13:23:38 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <200606211241.19782.mike@mkp.ca>
Message-ID: <20060621172338.29014.2084817004.divmod.quotient.5806@ohm>



On Wed, 21 Jun 2006 12:41:19 -0400, Mike Pelletier <mike at mkp.ca> wrote:
>On Wednesday 21 June 2006 12:45, Cory Dodt wrote:
>> If so, this is the first time I've heard about it.  And what are we doing
>> about the masses of commit messages that aren't?

We're posting messages on the mailing list reminding people of the appropriate format, and of other rules related to the development process.  Of course, some people have raised objections to this practice, but I think overall it is a net win that people are finding out.

>Excuse me, just realised I was thinking of the plone SVN, which scrapes "fixes
>#xxx" an so on.

This is a trac feature, and Twisted is using it too.  That's the reason for the required "Fixes #xxx" line.

For an example, see the ticket in question:  http://twistedmatrix.com/trac/ticket/491

Despite lacking the other required bits of the commit message, the merge did include the ticket number.



From corydodt at twistedmatrix.com  Wed Jun 21 12:13:01 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 11:13:01 -0700
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>	<4499740A.30406@twistedmatrix.com>
	<60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>
Message-ID: <44998C2D.2070701@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I don't object to asking for the information to be there.  I don't object to
emailing people to ask them not to leave out important stuff.  I don't even
*necessarily* object to pedantic formatting, although I think it's far more
important that the information be there, not that it be typed in RFC 822*.

I do object to aspects of how this is handled publicly.  For example, why does
the only document I can find on the subject:
<http://twistedmatrix.com/trac/wiki/BranchPolicy> not mention a rigid format
for commit messages?  In fact, it doesn't mention the commit messages at all.
 In fact, the document is labelled "some guy's opinion", although it is in
facted titled "Policy", which is a pretty mixed message.  This page
<http://twistedmatrix.com/trac/wiki/TwistedDevelopment> doesn't mention it
either.  (It also doesn't mention the coding standard, documentation standard,
etc. but that's the subject of another rant.)

If you're going to have an official policy, and you're going to publicly
chastise people on the mailing list, you'd better make sure the whole world
knows what the rules are before you do so.  I do not consider "Re:
[Twisted-commits] r17325 ..." to be the title of an official policy document.

And here's where I'm coming from.  We are creating a higher standard for
committers, I understand that.  We believe we are getting higher quality code
and better turnaround for releases out of it, I understand that.  But the
approach being taken is to just blast people for not doing it right; bad
enough on its own, doubly bad for not having warned them first.  This is
discouraging to those of us who are occasional committers, and it's even more
discouraging to people who love to work in Twisted and hope to get the
"commit" level of trust someday themselves.

I think the correct approach is to discuss the policy on IRC, then to waste NO
TIME posting the contents of the discussion to the Wiki, then to announce the
wiki page on the mailing list.  If anyone objects, and probably very few will,
you might have to revise the policy a bit.  *then* you can ding people, but at
least try to work with them in private first.

C


*(I did know about the trac integration thing, but I consider that to be
almost useless as it's so easy to add this information to the bug manually.)


Christopher Armstrong wrote:
> On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
>> I'm all for a structured development process, but this is just being
>> pedantic
>> for the sake of being pedantic.  Please tell me, how does following
>> this rigid
>> log message structure help speed twisted development?  How does it
>> contribute
>> to the overall quality of Twisted in any substantive way?
>>
>> >  <line of 78 or fewer characters summarizing change>
>>
>> Be serious.  The haranguing about this kind of stuff is getting so
>> tiresome
>> that I've stopped making any serious attempts to commit to the trunk. 
>> As long
>> as the necessary information is in there, who the heck cares how it's
>> formatted?  I see that glyph looked at the bug and pronounced it
>> acceptable.
>> It was possible to look this up in the bug, which is how I found out,
>> spending
>> all of 10 seconds on it.
> 
> While I don't care so much  how it's 78 characters, I *do* care about
> all the missing information in that commit message, given that I'm one
> of the guys who has to read through commit logs while building a NEWS
> file for the release. This is a good policy and everyone's been
> following it beautifully for a while now.
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmYwt3A5SrXAiHQcRAip5AJkB1376KCVWbdyx+ME0JuXqAEPvnQCgouvR
e5N7nCVs6axTM97WR09b4gs=
=s31I
-----END PGP SIGNATURE-----



From radix at twistedmatrix.com  Wed Jun 21 12:15:10 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 21 Jun 2006 14:15:10 -0400
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <44998C2D.2070701@twistedmatrix.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<4499740A.30406@twistedmatrix.com>
	<60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>
	<44998C2D.2070701@twistedmatrix.com>
Message-ID: <60ed19d40606211115h2c6f647m44b9a7e5c07daa3a@mail.gmail.com>

On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
> If you're going to have an official policy, and you're going to publicly
> chastise people on the mailing list, you'd better make sure the whole world
> knows what the rules are before you do so.  I do not consider "Re:
> [Twisted-commits] r17325 ..." to be the title of an official policy document.

"chastise"? You're overreacting, Cory. Nobody has been chastised in
this thread apart from those you chastised for pointing out the commit
format. While you're definitely right about not having much public
documentation about it (please contribute, you are a wiki editor), the
main point of your messages seem to be based on the mistaken
assumption that someone is being *abused*.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Wed Jun 21 12:16:10 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 14:16:10 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <4499740A.30406@twistedmatrix.com>
Message-ID: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>

On Wed, 21 Jun 2006 09:30:02 -0700, Cory Dodt <corydodt at twistedmatrix.com> wrote:

>I'm all for a structured development process, but

I love the way that everyone who objects to a structured development process begins their criticism with "I love a structured development process, but".

>this is just being pedantic for the sake of being pedantic.

Nope, there are good reasons for all of it.  The commit message was incorrectly formatted.  Nobody reverted the commit or anything, and I certainly didn't interpret JP's informative post to be "haranguing" anyone about the process; merely reminding.  "Jerub is such a jackass, he didn't follow the required process for commits, I am reverting everything he's done in the last 3 months" -- now that would be a harangue.

(BTW jerub, you are a jackass: it's rude to the release manager to include helpful information in the commit, and I am already so rude to him that he's going to start killing people if he doesn't get some respect around here :))

Even the 78-characters thing has a purpose.  The commit messages on the IRC channel and commits list are generated from the message.  Some mailer software chokes on >78-character subject lines, and the IRC message will be truncated if it's longer than that, and it will be omitted entirely if the message doesn't appear on the first line.

The format for commit messages, among other things, is documented here:

    http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem

I've written a bit more about the philosophical underpinnings of the constant striving to improve our development process through simple procedures like this one here:

    http://glyf.livejournal.com/58626.html

>Be serious.

We are serious.  What's with the tone of your message?

>It was possible to look this up in the bug, which is how I found out, spending
>all of 10 seconds on it.

It wouldn't have been if he forgot the "fixes" field instead of some other random bits of information from the message.  That field is also required for a reason.

Even if it is literally ten seconds (and I doubt that, it's probably more like 40 seconds, once you've mixed in trac latency) multiply that ten seconds by every change made to trunk in six months, add a few minutes for each relevant message, and that's how long it takes to write the NEWS file.  There's no (reasonable) way to correct commit messages, so it's important to write them correctly the first time.



From corydodt at twistedmatrix.com  Wed Jun 21 12:32:52 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 11:32:52 -0700
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>
References: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>
Message-ID: <449990D4.6040902@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'll start by apologizing for the tone of my message, and I am aware that I
was being chastising.  JP is just doing his job.  JP, I have the utmost
respect for you and what you do for Twisted, which is far more than I have
space to enumerate in this email.

There was a reason for my tone.  This has been accumulating for a while, with
lots of these little dings for this or that on this public mailing list.  It
gets exasperating.  People read this list, and they get a feeling for the
attitude of the developers on it when they do.  I don't think "pedantic twits"
is the feeling we want to project, do you?  This is no single person's fault,
it just felt like the right time to say, "Step back.  Think about the
direction this is going.  We don't want to go there."

It changes the tone of a project when Twisted.Quotes stops being updated but
the list of policy updates keeps growing and growing and growing without warning.

My last email contains suggestions of some better ways to handle this.

C


glyph at divmod.com wrote:
> On Wed, 21 Jun 2006 09:30:02 -0700, Cory Dodt
> <corydodt at twistedmatrix.com> wrote:
> 
>> I'm all for a structured development process, but
>> Be serious.
> 
> We are serious.  What's with the tone of your message?
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmZDU3A5SrXAiHQcRAgE3AKCH0EB2aYpjnoGr0AguEK5pq0hq2wCeO8Ed
o5tSAmEt9ePtPDsJuX1JMaw=
=20FS
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Wed Jun 21 12:37:44 2006
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 21 Jun 2006 11:37:44 -0700
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <60ed19d40606211115h2c6f647m44b9a7e5c07daa3a@mail.gmail.com>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>	<4499740A.30406@twistedmatrix.com>	<60ed19d40606211012i33a865deycb673a286093238@mail.gmail.com>	<44998C2D.2070701@twistedmatrix.com>
	<60ed19d40606211115h2c6f647m44b9a7e5c07daa3a@mail.gmail.com>
Message-ID: <449991F8.4000508@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Christopher Armstrong wrote:
> On 6/21/06, Cory Dodt <corydodt at twistedmatrix.com> wrote:
>> If you're going to have an official policy, and you're going to publicly
>> chastise people on the mailing list, you'd better make sure the whole
>> world
>> knows what the rules are before you do so.  I do not consider "Re:
>> [Twisted-commits] r17325 ..." to be the title of an official policy
>> document.
> 
> "chastise"? You're overreacting, Cory. Nobody has been chastised in
> this thread apart from those you chastised for pointing out the commit
> format. While you're definitely right about not having much public
> documentation about it (please contribute, you are a wiki editor)

Usually I object to this kind of policy change; documents of policy should be
written by a person who holds the majority opinion.  In this case, and in
others, I was not around to discuss it when it was decided on.  (I suspect
this was a Divmod policy that has migrated to Twisted; while this is not
always bad, Divmod is not Twisted, and the communication avenues are not the
same, so I don't assume the same rules apply to both.)


C


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEmZH43A5SrXAiHQcRAgb4AJ0QYoqfAQyS5SyBULJU63+QeTKtiwCgmplI
0JIeQHwUDXavOeQQXV0udHc=
=Psyl
-----END PGP SIGNATURE-----



From ldanielburr at mac.com  Wed Jun 21 12:49:50 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed, 21 Jun 2006 13:49:50 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <449990D4.6040902@twistedmatrix.com>
References: <20060621181610.29014.599554824.divmod.quotient.5856@ohm>
	<449990D4.6040902@twistedmatrix.com>
Message-ID: <op.tbielczn3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Wed, 21 Jun 2006 13:32:52 -0500, Cory Dodt <corydodt at twistedmatrix.com>  
wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> I'll start by apologizing for the tone of my message, and I am aware  
> that I
> was being chastising.  JP is just doing his job.  JP, I have the utmost
> respect for you and what you do for Twisted, which is far more than I  
> have
> space to enumerate in this email.
>

Hear hear.  I don't think anyone really interpreted you as denying JP his
deserved respect, but it never hurts to remind people that you respect
them.

[snip]

> It changes the tone of a project when Twisted.Quotes stops being updated  
> but
> the list of policy updates keeps growing and growing and growing without  
> warning.
>

Well, to me, when a project moves away from frequent updates to the very
amusing Quotes file, and towards policies and procedures, it means that
the project is maturing and recognizing that a broader audience requires
such steps.  The ecosystem may no longer be as fun for many of the people
who were in at the beginning, but I consider this a change for the better,
whereas you see it as a change for the worse.

Different strokes, I guess.

> My last email contains suggestions of some better ways to handle this.
>

Those suggestions look fine to me, as a person who files a ticket now and
again, and once in a great while posts a patch.  That said, I also feel
that as a very minimal contributor, it doesn't behoove me to take offense
when overworked full-time contributors are terse in their communications.

L. Daniel Burr



From glyph at divmod.com  Wed Jun 21 15:48:30 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 17:48:30 -0400
Subject: [Twisted-Python] Project policies Re: Twisted-commits] r17325 ...
In-Reply-To: <44998C2D.2070701@twistedmatrix.com>
Message-ID: <20060621214830.29014.2145866539.divmod.quotient.6054@ohm>

On Wed, 21 Jun 2006 11:13:01 -0700, Cory Dodt <corydodt at twistedmatrix.com> wrote:

>If you're going to have an official policy, and you're going to publicly
>chastise people on the mailing list, you'd better make sure the whole world
>knows what the rules are before you do so.  I do not consider "Re:
>[Twisted-commits] r17325 ..." to be the title of an official policy document.

I do disagree pretty strongly about this particular case being a "chastisement", but I agree with the general problem, so that's not a productive avenue of discussion. :)

The policy is documented, but in fragments, counting just now across the documents *I* happen to know about, spread across 5 different documents on 3 servers and in at least 4 different document-management systems.  The UQDS page, which is probably the best source of information, is only linked (indirectly) at the bottom of the BBD page, which isn't linked from the front page.

Clearly this is a serious issue.  Since we have a place for issues, I have created one:

    http://twistedmatrix.com/trac/ticket/1840

I've assigned the ticket for you, but I feel I should explain why - it's not because I think that, because you have mentioned a problem, you are now responsible for fixing it.  At the very least, you can't do this on your own, I recognize that to really fix the problem you will need to get participation from the people making (me) and enforcing (jp, apparently) the policies.  I've assigned it to you because you obviously care a good deal about this issue and are more likely than anyone else to agitate for it to get done right now.

I've personally known about this for a while, of course, but I am fairly interrupt-driven on Twisted stuff these days; I'm overtaxed and I can't muster the time and energy to fix an issue until it (for example) becomes an interesting thread on the mailing list that I have to deal with as I'm going through my inbox :).

I do check my trac tickets with some frequency though, and I'm always trying to resolve simple stuff.  If you can think of simple tasks that #1840 depends on please feel free to assign tickets to me.

>Usually I object to this kind of policy change; documents of policy should be
>written by a person who holds the majority opinion.  In this case, and in
>others, I was not around to discuss it when it was decided on.  (I suspect
>this was a Divmod policy that has migrated to Twisted; while this is not
>always bad, Divmod is not Twisted, and the communication avenues are not the
>same, so I don't assume the same rules apply to both.)

I'm sorry you weren't available but we did bring it up on IRC numerous times, it was mentioned in a few threads on this list before indirectly, and there was an "official" thread on the mailing list for a while dedicated to this to avoid excluding non-IRC contributors.  I think this particular exclusion may have had more to do with your having less free time available when we were talking about it.

I am, however, sensitive to the fact that it is damn hard to find maintainers for something like Twisted's windows installer (especially those that are interested in adhering to the rather high standards for quality we have been requiring), so we need to communicate requirements and such more clearly and avoid pissing you off any more than necessary. ;-)

I suspect that Twisted.Quotes will be getting more frequent updates once all of our IRC bandwidth is no longer taken up answering undocumented FAQs about unit tests, coding style and commit messages.



From stephen at thorne.id.au  Wed Jun 21 16:58:10 2006
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 22 Jun 2006 08:58:10 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
Message-ID: <20060621225810.29014.262339943.divmod.quotient.6116@ohm>

On Wed, 21 Jun 2006 12:15:03 -0400, Jean-Paul Calderone <exarkun at divmod.com> 
>To clarify, all commits to trunk should take on this form:
>
>  <line of 78 or fewer characters summarizing change>
>
>  Author: <names of people who wrote the code>
>  Reviewer: <names of people who reviewed the branch>
>  Fixes <whatever tickets are being fixed>
>  [Re <whatever other tickets are related>]
>
>  <longer description of what changes are taking place>

Thanks for that, my commits to trunk will take this form from now on.

I had managed to avoid finding and reading http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem - I've read found it now, and hopefully I will make fewer process errors.

Stephen.



From jml at mumak.net  Wed Jun 21 18:21:17 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 22 Jun 2006 10:21:17 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621225810.29014.262339943.divmod.quotient.6116@ohm>
References: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
	<20060621225810.29014.262339943.divmod.quotient.6116@ohm>
Message-ID: <d06a5cd30606211721j2c02e838yc17ed0402000d7d3@mail.gmail.com>

On 6/22/06, Stephen Thorne <stephen at thorne.id.au> wrote:
>
> I had managed to avoid finding and reading http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem

Assisted, no doubt, by the fact that there is no mention of it on the
Twisted website.  Although see #1222, #1697.

jml



From stephen at thorne.id.au  Wed Jun 21 18:53:15 2006
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 22 Jun 2006 10:53:15 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <d06a5cd30606211721j2c02e838yc17ed0402000d7d3@mail.gmail.com>
Message-ID: <20060622005315.29014.176135884.divmod.quotient.6222@ohm>



On Thu, 22 Jun 2006 10:21:17 +1000, Jonathan Lange <jml at mumak.net> wrote:
>On 6/22/06, Stephen Thorne <stephen at thorne.id.au> wrote:
>>
>>I had managed to avoid finding and reading 
>>http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem
>
>Assisted, no doubt, by the fact that there is no mention of it on the
>Twisted website.  Although see #1222, #1697.

There's no mention, but it is linked.

http://twistedmatrix.com/trac/wiki/TwistedDevelopment
links
http://divmod.org/trac/wiki/BranchBasedDevelopment
links
http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem

Stephen.



From exarkun at divmod.com  Wed Jun 21 19:20:39 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Jun 2006 21:20:39 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <20060621225810.29014.262339943.divmod.quotient.6116@ohm>
Message-ID: <20060622012039.29014.444842153.divmod.quotient.6245@ohm>

On Thu, 22 Jun 2006 08:58:10 +1000, Stephen Thorne <stephen at thorne.id.au> wrote:
>On Wed, 21 Jun 2006 12:15:03 -0400, Jean-Paul Calderone <exarkun at divmod.com>
>>To clarify, all commits to trunk should take on this form:
>>
>>  <line of 78 or fewer characters summarizing change>
>>
>>  Author: <names of people who wrote the code>
>>  Reviewer: <names of people who reviewed the branch>
>>  Fixes <whatever tickets are being fixed>
>>  [Re <whatever other tickets are related>]
>>
>>  <longer description of what changes are taking place>
>
>Thanks for that, my commits to trunk will take this form from now on.
>
>I had managed to avoid finding and reading 
>http://divmod.org/trac/wiki/UltimateQualityDevelopmentSystem - I've read 
>found it now, and hopefully I will make fewer process errors.

Thanks :)

>
>Stephen.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From andrew-twisted at puzzling.org  Wed Jun 21 20:31:59 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 22 Jun 2006 12:31:59 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
References: <1150903408.5667.2.camel@localhost.localdomain>
	<20060621161503.29014.1143812781.divmod.quotient.5740@ohm>
Message-ID: <20060622023159.GC5774@steerpike.home.puzzling.org>

On Wed, Jun 21, 2006 at 12:15:03PM -0400, Jean-Paul Calderone wrote:
[...]
> 
> To clarify, all commits to trunk should take on this form:

Here's an idea: can we configure SVN to enforce this?

-Andrew.




From glyph at divmod.com  Wed Jun 21 21:00:05 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 21 Jun 2006 23:00:05 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491, 
	fixes #491
In-Reply-To: <20060622023159.GC5774@steerpike.home.puzzling.org>
Message-ID: <20060622030005.29014.198663675.divmod.quotient.6335@ohm>



On Thu, 22 Jun 2006 12:31:59 +1000, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Wed, Jun 21, 2006 at 12:15:03PM -0400, Jean-Paul Calderone wrote:
>[...]
>>
>> To clarify, all commits to trunk should take on this form:
>
>Here's an idea: can we configure SVN to enforce this?

I've received this suggestion a few times privately and I'm still mulling it over.  On the face of it, it's a good idea, buuuuuut:

 1. I've had a series of disastrous experiences with commit hooks rejecting changes.  The guy who wrote the commit hook goes on vacation for 3 days, there's a bug in it, and nobody can figure out how to merge code or turn it off for 8 hours; meanwhile the guy trying to commit in bangalore goes to sleep, then doesn't show up again for a week, and the changes are lost.  (Having changes on a branch prior to trunk would alleviate this somewhat, I think, but it would be just as much of a pain to be blocked on some stupid merge-script bug.)
 2. The most important thing, really, is a sufficiently descriptive explanation for the change.  Any programmatic attempt to enforce this is sure to drive artificial gaming of the metric; i.e. if we require 3 sentences, "fixed random junk in foo module" will become "Fixed random. Junk in. Foo module."
 3. 99% of the time (e.g. all "normal" commits) should be in this format; however, the underlying tools, to be honest, are still kind of primitive, and we still have to leave a little wiggle room to deal with their foibles.  At least it isn't the masochistic chewing-gum-and-duct-tape perpetual catastrophe of CVS, but SVN still does annoying things like screwing up merges.  If there is a commit with a nice long description and a 'fixes' and everything, which needs to be reverted and reapplied for some dumb technical reason, I'd like to see

  r1234: "author: foo; reviewer: bar; wonderful wonderful description ..."
  r1235: "crap, reverting r1234 because of svn bug #9813741"
  r1236: "reapplying r1234 merged in utterly retarded way to work around svn bug #9813741"

not the entire description of r1234 repeated twice -- or, more realistically, three times, since the revert in the middle would also have to have a conformant commit message.
 4. precommit hooks keep the SVN SSH transport alive to report errors to the client for the duration of the hook.  When I last investigated (although this was in an SVN pre-release, a good 2+ years ago) if the connection drops while you're validating the commit message, it rejects the commit.  This would be especially annoying if you were committing an important fix over some intermittent link, like a GPRS modem.  That's not a common occurrance, but then again, if something were important enough that someone needed to commit code on a *GPRS modem* that is probably the time they would _least_ like something technical to go wrong with the process.


This is basically just the same reason that, despite our hardcore attitude towards tests, we don't have buildbot automatically reject or revert commits based on automated test failures.  The tools (in that case, buildbot, trial, and our test suite) are too primitive to rely on without some level of human judgement.  We've been moving to a stricter model so that the human judgements can be as mechanical and apolitical as possible (e.g. "was this a test failure due to too much load on the buildbot / known intermittent failure", not "is this an important enough area of code to worry about test failures in") but we still need it there.

I am eager to be corrected however; the more work our tools can reliably do for us the better.  Has anybody had a good experience with automatically-rejected commits in another reasonably sized project before?




From jml at mumak.net  Wed Jun 21 21:07:11 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 22 Jun 2006 13:07:11 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060622030005.29014.198663675.divmod.quotient.6335@ohm>
References: <20060622023159.GC5774@steerpike.home.puzzling.org>
	<20060622030005.29014.198663675.divmod.quotient.6335@ohm>
Message-ID: <d06a5cd30606212007u43f28ca9lbac235fcc93d4b91@mail.gmail.com>

On 6/22/06, glyph at divmod.com <glyph at divmod.com> wrote:
> This is basically just the same reason that, despite our hardcore attitude towards tests, we don't haThe tools (in that case, buildbot, trial, and our test suite) are too primitive to rely on without some level of human judgement.

Yeah?! Well your face is primitive!












:)
jml



From andrew-twisted at puzzling.org  Wed Jun 21 22:57:39 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 22 Jun 2006 14:57:39 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r17325 - merge sob-491,
	fixes #491
In-Reply-To: <20060622030005.29014.198663675.divmod.quotient.6335@ohm>
References: <20060622023159.GC5774@steerpike.home.puzzling.org>
	<20060622030005.29014.198663675.divmod.quotient.6335@ohm>
Message-ID: <20060622045739.GD5774@steerpike.home.puzzling.org>

On Wed, Jun 21, 2006 at 11:00:05PM -0400, glyph at divmod.com wrote:
[...]
> 
> I've received this suggestion a few times privately and I'm still mulling 
> it over.  On the face of it, it's a good idea, buuuuuut:
> 
> 1. I've had a series of disastrous experiences with commit hooks rejecting 
> changes.  The guy who wrote the commit hook goes on vacation for 3 days, 
> there's a bug in it, and nobody can figure out how to merge code or turn it 
> off for 8 hours; meanwhile the guy trying to commit in bangalore goes to 
> sleep, then doesn't show up again for a week, and the changes are lost.  
> (Having changes on a branch prior to trunk would alleviate this somewhat, I 
> think, but it would be just as much of a pain to be blocked on some stupid 
> merge-script bug.)

Two things make this a non-issue, hopefully:
  - a script that checks that a commit message matches a regex is pretty damn
    simple.
  - in case of emergency, it shouldn't be hard to just disable the offending
    commit-hook until such time as it can be fixed properly.

> 2. The most important thing, really, is a sufficiently descriptive 
> explanation for the change.  Any programmatic attempt to enforce this is 
> sure to drive artificial gaming of the metric; i.e. if we require 3 
> sentences, "fixed random junk in foo module" will become "Fixed random. 
> Junk in. Foo module."

Well, I was really only suggesting that the presence of mandatory metadata is
checked for, not that we write an AI to check that the text of the messages make
sense :)

> 3. 99% of the time (e.g. all "normal" commits) should be in this format; 
> however, the underlying tools, to be honest, are still kind of primitive, 
> and we still have to leave a little wiggle room to deal with their foibles. 
> At least it isn't the masochistic chewing-gum-and-duct-tape perpetual 
> catastrophe of CVS, but SVN still does annoying things like screwing up 
> merges.  If there is a commit with a nice long description and a 'fixes' 
> and everything, which needs to be reverted and reapplied for some dumb 
> technical reason, I'd like to see
> 
>  r1234: "author: foo; reviewer: bar; wonderful wonderful description ..."
>  r1235: "crap, reverting r1234 because of svn bug #9813741"
>  r1236: "reapplying r1234 merged in utterly retarded way to work around svn 
>  bug #9813741"
> 
> not the entire description of r1234 repeated twice -- or, more 
> realistically, three times, since the revert in the middle would also have 
> to have a conformant commit message.

Good point.  So there either needs to be a way to explicitly flag that this
message is ok despite not being in the usual format, or we need to anticipate
all possible forms of exceptional commits.  Requiring e.g. "[override=reason]"
in the text of the commit message somewhere could do this.  This of course
complicates the checker slightly, which relates to point 1, but not impossibly
so.

> 4. precommit hooks keep the SVN SSH transport alive to report errors to the 
> client for the duration of the hook.  When I last investigated (although 
> this was in an SVN pre-release, a good 2+ years ago) if the connection 
> drops while you're validating the commit message, it rejects the commit.  
> This would be especially annoying if you were committing an important fix 
> over some intermittent link, like a GPRS modem.  That's not a common 
> occurrance, but then again, if something were important enough that someone 
> needed to commit code on a *GPRS modem* that is probably the time they 
> would _least_ like something technical to go wrong with the process.

The time it takes to validate a commit message against a regex should be
negligible.  I doubt this will be a real problem.

> This is basically just the same reason that, despite our hardcore attitude 
> towards tests, we don't have buildbot automatically reject or revert 
> commits based on automated test failures.  The tools (in that case, 
> buildbot, trial, and our test suite) are too primitive to rely on without 
> some level of human judgement.  We've been moving to a stricter model so 
> that the human judgements can be as mechanical and apolitical as possible 
> (e.g. "was this a test failure due to too much load on the buildbot / known 
> intermittent failure", not "is this an important enough area of code to 
> worry about test failures in") but we still need it there.

There are important differences between a commit message checker and our test
suite.  Our test suite gives way too many false positives, and does so
unpredictably.  Our test suite takes many minutes to run, at best.  Our test
suite should be run on multiple platforms for full effectiveness.  Our test
suite is extremely complex.  A simple "does the commit message match this regex"
check has none of these problems, assuming the regex isn't insane.

> I am eager to be corrected however; the more work our tools can reliably do 
> for us the better.  Has anybody had a good experience with 
> automatically-rejected commits in another reasonably sized project before?

Yes, the Launchpad development process automatically rejects commits, both for
malformed commit messages[1] and for test failures.  It's generally worked quite
well.  The test suite takes similar lengths of time to Twisted's to run (but
without the portability concerns, thankfully), but we submit requests to merge
to trunk asynchronously (via gpg-signed email), so this isn't a killer for poor
connections.

We have occasionally had problems where a system upgrade or other supposedly
unrelated change causes the test suite on trunk to start failing, effectively
blocking all merges, requiring admin intervention.  Old processes from previous
test runs can also be an issue.  It's generally worked very well for us, though.
And it means we are forced to have zero tolerance of failing tests.  Developers
get unhappy if there's an intermittently failing test that's blocking their
merges :)

We use PQM ("Patch Queue Manager", bzr branch available here:
http://people.ubuntu.com/~robertc/pqm/trunk/, bugs etc here:
https://launchpad.net/products/pqm) to do this.

-Andrew.

[1] We require either "[trivial]", "[r=reviewer]", or "[rs=approver]" to be in the
    message.  "r=" means "reviewed and approved by" and "rs=" means "rubber
    stamped by", i.e. not closely reviewed by the person (generally a manager)
    approving it anyway is happy with it being merged despite that and is
    responsible for the result.  "trivial" should be obvious ;).  Regardless of
    commit message, the full test suite is always run.




From joe at neosource.com.au  Fri Jun 23 09:12:57 2006
From: joe at neosource.com.au (Joe Cotroneo)
Date: Sat, 24 Jun 2006 01:12:57 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
Message-ID: <9ccaa767ba98be1f1762edc11a65201b@web>

Hi there,

I just downloaded the twisted words package, and tried the ircLogBot.py sample.

It came up with an error on my Win32 box, but worked fine on my linux box.

The error on win32 was due to the following line 512 in twisted/internet/tcp.py:

r, w, e = select.select([], [], [self.fileno()], 0.0)

The select module on Win32 doesn't accept empty read/write handles, so it generated an 'invalid argument' exception.

I changed line 512 to the following, and the sample now works on win32.

r, w, e = select.select([self.fileno()], [self.fileno()], [self.fileno()], 0.0)

P.S: I used Twisted 2.4.0 and twisted words 0.3.0

Hope you find my report useful, even if win32 bugs aren't a priority ;)

Cheers,

Joe








From exarkun at divmod.com  Fri Jun 23 09:32:53 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 Jun 2006 11:32:53 -0400
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
In-Reply-To: <9ccaa767ba98be1f1762edc11a65201b@web>
Message-ID: <20060623153253.29014.1173202936.divmod.quotient.8001@ohm>

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au> wrote:
>Hi there,
>
>I just downloaded the twisted words package, and tried the ircLogBot.py sample.
>
>It came up with an error on my Win32 box, but worked fine on my linux box.
>
>The error on win32 was due to the following line 512 in twisted/internet/tcp.py:
>
>r, w, e = select.select([], [], [self.fileno()], 0.0)
>
>The select module on Win32 doesn't accept empty read/write handles, so it generated an 'invalid argument' exception.
>
>I changed line 512 to the following, and the sample now works on win32.
>
>r, w, e = select.select([self.fileno()], [self.fileno()], [self.fileno()], 0.0)
>
>P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
>Hope you find my report useful, even if win32 bugs aren't a priority ;)

What version of Python and Windows?  I wouldn't expect any Twisted
application to run on a machine where that line unconditionally
raises an exception, but clearly some does.  Does anything else work
for you?

Jean-Paul



From manlio_perillo at libero.it  Fri Jun 23 09:35:55 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 23 Jun 2006 13:35:55 -0200
Subject: [Twisted-Python] Iron Python support
Message-ID: <449C0A5B.60600@libero.it>

Just to know: does Twisted works with Iron Python?



Thanks and regards  Manlio Perillo



From itamar at itamarst.org  Fri Jun 23 09:37:45 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Jun 2006 11:37:45 -0400
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
In-Reply-To: <9ccaa767ba98be1f1762edc11a65201b@web>
References: <9ccaa767ba98be1f1762edc11a65201b@web>
Message-ID: <1151077065.5623.0.camel@localhost.localdomain>

On Sat, 2006-06-24 at 01:12 +1000, Joe Cotroneo wrote:
> Hi there,
> 
> I just downloaded the twisted words package, and tried the ircLogBot.py sample.
> 
> It came up with an error on my Win32 box, but worked fine on my linux box.
...
> Hope you find my report useful, even if win32 bugs aren't a priority ;)

Thanks for the bug report; could you add to our bug tracker please?




From exarkun at divmod.com  Fri Jun 23 09:51:13 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 23 Jun 2006 11:51:13 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <449C0A5B.60600@libero.it>
Message-ID: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>

On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo <manlio_perillo at libero.it> wrote:
>Just to know: does Twisted works with Iron Python?
>

See http://twistedmatrix.com/buildbot/

Jean-Paul



From mike at mkp.ca  Fri Jun 23 10:14:14 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Fri, 23 Jun 2006 12:14:14 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
Message-ID: <200606231214.14695.mike@mkp.ca>

On Friday 23 June 2006 11:51, Jean-Paul Calderone wrote:
> On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo 
<manlio_perillo at libero.it> wrote:
> >Just to know: does Twisted works with Iron Python?
>
> See http://twistedmatrix.com/buildbot/

The question piqued my curiosity, but the answer is unsatisfying.  I don't 
find any of the strings "iron", "clr", or "net" on that page.  Could you 
assist in interpreting buildbot's output WRT the OP?

Thx,
Mike.



From radix at twistedmatrix.com  Fri Jun 23 10:20:13 2006
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 23 Jun 2006 12:20:13 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <200606231214.14695.mike@mkp.ca>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
	<200606231214.14695.mike@mkp.ca>
Message-ID: <60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>

On 6/23/06, Mike Pelletier <mike at mkp.ca> wrote:
> On Friday 23 June 2006 11:51, Jean-Paul Calderone wrote:
> > On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
> > >Just to know: does Twisted works with Iron Python?
> >
> > See http://twistedmatrix.com/buildbot/
>
> The question piqued my curiosity, but the answer is unsatisfying.  I don't
> find any of the strings "iron", "clr", or "net" on that page.  Could you
> assist in interpreting buildbot's output WRT the OP?

What Jp meant to say was "See <url> for the list of support platforms.
As you can see, there is no buildbot running for ironpython, so
Twisted cannot have support for it. However, if you would like to move
things in the direction of Ironpython support, the donation of an
Ironpython buildslave would certainly be appreciated."


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From ldanielburr at mac.com  Fri Jun 23 10:40:09 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 23 Jun 2006 11:40:09 -0500
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <200606231214.14695.mike@mkp.ca>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
	<200606231214.14695.mike@mkp.ca>
Message-ID: <op.tblxw70h3oj628@l-daniel-burrs-powerbook-g4-17.local>

On Fri, 23 Jun 2006 11:14:14 -0500, Mike Pelletier <mike at mkp.ca> wrote:

> On Friday 23 June 2006 11:51, Jean-Paul Calderone wrote:
>> On Fri, 23 Jun 2006 13:35:55 -0200, Manlio Perillo
> <manlio_perillo at libero.it> wrote:
>> >Just to know: does Twisted works with Iron Python?
>>
>> See http://twistedmatrix.com/buildbot/
>
> The question piqued my curiosity, but the answer is unsatisfying.  I  
> don't
> find any of the strings "iron", "clr", or "net" on that page.  Could you
> assist in interpreting buildbot's output WRT the OP?

I believe the answer is "if you don't see it on the buildbot, then the
platform in question is not known to work with twisted".

Anyway, no, twisted does not run on FePy, for the same reasons that it
does not run on jython: None of the core devs have the time or incentive
to make it run, and nobody else has stepped up to the plate.

Hope this helps,

L. Daniel Burr



From manlio_perillo at libero.it  Fri Jun 23 10:46:28 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 23 Jun 2006 14:46:28 -0200
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>	<200606231214.14695.mike@mkp.ca>
	<60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>
Message-ID: <449C1AE4.4070802@libero.it>

Christopher Armstrong ha scritto:
> [...]
> 
> What Jp meant to say was "See <url> for the list of support platforms.
> As you can see, there is no buildbot running for ironpython, so
> Twisted cannot have support for it. 

I also see no Jython support.
What about it?


> However, if you would like to move
> things in the direction of Ironpython support, the donation of an
> Ironpython buildslave would certainly be appreciated."
> 

Do you use one dedicated server for each build slaves?
If you just need a computer with a buildbot I can offer (spare) access
to my PC.

Usually my PC is on from
10:00 to 12:30 and 17:00 to 23:00
(local time in Italy).


Do you use builbot from http://buildbot.sourceforge.net/?
I just downloaded the version 0.7.3.



Regards  Manlio Perillo







From itamar at itamarst.org  Fri Jun 23 11:28:42 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 23 Jun 2006 13:28:42 -0400
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <449C0A5B.60600@libero.it>
References: <449C0A5B.60600@libero.it>
Message-ID: <1151083723.5623.7.camel@localhost.localdomain>

On Fri, 2006-06-23 at 13:35 -0200, Manlio Perillo wrote:
> Just to know: does Twisted works with Iron Python?

If IronPython provides select, socket and errno modules it might work.
Which is to say "probably not".

It could be made to work even if not, but that would probably require
writing a custom reactor.

-- 
Itamar Shtull-Trauring
http://itamarst.org





From manlio_perillo at libero.it  Fri Jun 23 12:36:28 2006
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Fri, 23 Jun 2006 16:36:28 -0200
Subject: [Twisted-Python] Iron Python support
In-Reply-To: <1151083723.5623.7.camel@localhost.localdomain>
References: <449C0A5B.60600@libero.it>
	<1151083723.5623.7.camel@localhost.localdomain>
Message-ID: <449C34AC.2040206@libero.it>

Itamar Shtull-Trauring ha scritto:
> On Fri, 2006-06-23 at 13:35 -0200, Manlio Perillo wrote:
>> Just to know: does Twisted works with Iron Python?
> 
> If IronPython provides select, socket and errno modules it might work.

Here is a list of supplies modules:

_random.cs            codecs.cs                gc.cs
operator.cs
_sre.cs               collections.cs           imp.cs             re.cs
_weakref.cs           cStringIO.cs             IterTools.cs       struct.cs
binascii.cs           datetime.cs              marshal.cs         thread.cs
Builtin.cs            errno.cs                 math.cs            time.cs
Builtin.Generated.cs  Exceptions.cs            math.Generated.cs
clr.cs                Exceptions.Generated.cs  nt.cs


There is a sys module (not listed here), but no os or socket.
Not very useful...



Regards  Manlio Perillo



From joe at neosource.com.au  Fri Jun 23 19:18:34 2006
From: joe at neosource.com.au (Joe Cotroneo)
Date: Sat, 24 Jun 2006 11:18:34 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
Message-ID: <450119024227b585397b0d715c25c9c4@web>

Hi Jean-Paul,

I'm running Python 2.4.1 and Windows XP SP2.

I hadn't really tried any twisted apps on my Windows PC beforehand.

Joe
----------------------------------------
Date: Fri, 23 Jun 2006 11:32:53 -0400
From: Jean-Paul Calderone <exarkun at divmod.com>
Subject: Re: [Twisted-Python] Win32 fix for twisted/internet/tcp.py

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au> wrote:
>Hi there,
>
>I just downloaded the twisted words package, and tried the ircLogBot.py sample.
>
>It came up with an error on my Win32 box, but worked fine on my linux box.
>
>The error on win32 was due to the following line 512 in twisted/internet/tcp.py:
>
>r, w, e = select.select([], [], [self.fileno()], 0.0)
>
>The select module on Win32 doesn't accept empty read/write handles, so it generated an 'invalid argument' exception.
>
>I changed line 512 to the following, and the sample now works on win32.
>
>r, w, e = select.select([self.fileno()], [self.fileno()], [self.fileno()], 0.0)
>
>P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
>Hope you find my report useful, even if win32 bugs aren't a priority ;)

What version of Python and Windows?  I wouldn't expect any Twisted
application to run on a machine where that line unconditionally
raises an exception, but clearly some does.  Does anything else work
for you?

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From teratorn at twistedmatrix.com  Fri Jun 23 21:45:35 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 24 Jun 2006 13:45:35 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
In-Reply-To: <9ccaa767ba98be1f1762edc11a65201b@web>
References: <9ccaa767ba98be1f1762edc11a65201b@web>
Message-ID: <op.tbmsp9eny3d107@localhost.localdomain>

Hi Joe,

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au>  
wrote:

> Hi there,
>
> I just downloaded the twisted words package, and tried the ircLogBot.py  
> sample.
>
> It came up with an error on my Win32 box, but worked fine on my linux  
> box.
>
> The error on win32 was due to the following line 512 in  
> twisted/internet/tcp.py:
>
> r, w, e = select.select([], [], [self.fileno()], 0.0)
>
> The select module on Win32 doesn't accept empty read/write handles, so  
> it generated an 'invalid argument' exception.
>
> I changed line 512 to the following, and the sample now works on win32.
>
> r, w, e = select.select([self.fileno()], [self.fileno()],  
> [self.fileno()], 0.0)
>
> P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
> Hope you find my report useful, even if win32 bugs aren't a priority ;)

I don't want people to get the wrong impression: Win32 *IS* a fully  
supported platform. Our support could be better than it is, but fixing  
win32 bugs in the existing code is just as much of a priority as any other  
platform. Commits that breaks tests on win32 are reverted almost  
immediately. The only issue is that there are simply fewer developers who  
have the desire, expertise, or dev evironments to work on Windows.

> Cheers,
>
> Joe

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows



From joe at neosource.com.au  Fri Jun 23 22:42:43 2006
From: joe at neosource.com.au (Joe Cotroneo)
Date: Sat, 24 Jun 2006 14:42:43 +1000
Subject: [Twisted-Python] Win32 fix for twisted/internet/tcp.py
Message-ID: <930efa53df0a997dbea52df0e899901f@web>

Hi Eric,

Sorry I didn't mean to downplay your level of Windows support. My comment was in jest. The guys on the #twisted channel were helpful, though as you said they had more of a linux background.

Joe

----------------------------------------
Date: Sat, 24 Jun 2006 13:45:35 +1000
From: "Eric Mangold" <teratorn at twistedmatrix.com>
Subject: Re: [Twisted-Python] Win32 fix for twisted/internet/tcp.py

Hi Joe,

On Sat, 24 Jun 2006 01:12:57 +1000, Joe Cotroneo <joe at neosource.com.au>  
wrote:

> Hi there,
>
> I just downloaded the twisted words package, and tried the ircLogBot.py  
> sample.
>
> It came up with an error on my Win32 box, but worked fine on my linux  
> box.
>
> The error on win32 was due to the following line 512 in  
> twisted/internet/tcp.py:
>
> r, w, e = select.select([], [], [self.fileno()], 0.0)
>
> The select module on Win32 doesn't accept empty read/write handles, so  
> it generated an 'invalid argument' exception.
>
> I changed line 512 to the following, and the sample now works on win32.
>
> r, w, e = select.select([self.fileno()], [self.fileno()],  
> [self.fileno()], 0.0)
>
> P.S: I used Twisted 2.4.0 and twisted words 0.3.0
>
> Hope you find my report useful, even if win32 bugs aren't a priority ;)

I don't want people to get the wrong impression: Win32 *IS* a fully  
supported platform. Our support could be better than it is, but fixing  
win32 bugs in the existing code is just as much of a priority as any other  
platform. Commits that breaks tests on win32 are reverted almost  
immediately. The only issue is that there are simply fewer developers who  
have the desire, expertise, or dev evironments to work on Windows.

> Cheers,
>
> Joe

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows





From robert at gravina.com  Sat Jun 24 11:57:56 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 02:57:56 +0900
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
Message-ID: <B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>

This is an old thread, but I am finally tackling the round trip  
editing problem and unfortunately getting nowhere. Basically, I want  
to be able to create some object on one machine, then send it off to  
another (who edits some of the attributes) then when the other  
machine calls a method on the original machine and passes it the  
updated object, I can identify it simply by comparing for quality.  
Think of your basic client/server database application.

The Twisted howtos make the claim that " Copyable objects return  
unchanged from a round trip", and can be compared for quality like  
(obj == obj) but in all my attempts I can get this to work (they are  
never equal). Does someone know of some sample code where this is  
done successfully? It is done successfully with pb.Referenceables in  
the howtos (look for the pb2client.py and pb2server.py listings).
http://twistedmatrix.com/projects/core/documentation/howto/pb-usage.html

Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to  
identify objects that come back to me but the _p_oid is  None even  
after a transaction.commit() (since the object hasn't been persisted  
yet probably).

I could also create my own ID attribute and attempt to generate a  
random ID and compare that, but this is most definately a hack.

I am really having trouble progressing with my application because of  
this problem. I'd really appreciate some insight on how to go about  
solving this. Admittedly I'm not all that experienced with Twisted,  
but I thought this kind of thing was supposed to be straightforward.  
What am I doing wrong?

Thanks,

Robert

On 2006/05/07, at 18:55, Micky Latowicki wrote:

> It's possible to make each element in the set being edited a
> cacheable. If you think that would introduce too much overhead, then
> you can add a method to the "address book" object which updates one of
> the entries in this address book, and uses an id to identify the entry
> within the address book. So the address book is the dict. That's what
> I did in a similar case. I'm no expert though.
>
> HTH
>
> Micky
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From ml.flex at gmail.com  Sat Jun 24 16:13:26 2006
From: ml.flex at gmail.com (Micky Latowicki)
Date: Sun, 25 Jun 2006 00:13:26 +0200
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
Message-ID: <d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>

Only thing I can think of is generate your own id. Doesn't have to be
random, you can simply increament a counter every time you create a new
instance. If you're worried about the id growing too long you can search the
database for unused ids that are lower than the current value of the
counter.

Perhaps somebody else has a better idea.

On 24/06/06, Robert Gravina <robert at gravina.com> wrote:
>
> This is an old thread, but I am finally tackling the round trip
> editing problem and unfortunately getting nowhere. Basically, I want
> to be able to create some object on one machine, then send it off to
> another (who edits some of the attributes) then when the other
> machine calls a method on the original machine and passes it the
> updated object, I can identify it simply by comparing for quality.
> Think of your basic client/server database application.
>
> The Twisted howtos make the claim that " Copyable objects return
> unchanged from a round trip", and can be compared for quality like
> (obj == obj) but in all my attempts I can get this to work (they are
> never equal). Does someone know of some sample code where this is
> done successfully? It is done successfully with pb.Referenceables in
> the howtos (look for the pb2client.py and pb2server.py listings).
> http://twistedmatrix.com/projects/core/documentation/howto/pb-usage.html
>
> Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to
> identify objects that come back to me but the _p_oid is  None even
> after a transaction.commit() (since the object hasn't been persisted
> yet probably).
>
> I could also create my own ID attribute and attempt to generate a
> random ID and compare that, but this is most definately a hack.
>
> I am really having trouble progressing with my application because of
> this problem. I'd really appreciate some insight on how to go about
> solving this. Admittedly I'm not all that experienced with Twisted,
> but I thought this kind of thing was supposed to be straightforward.
> What am I doing wrong?
>
> Thanks,
>
> Robert
>
> On 2006/05/07, at 18:55, Micky Latowicki wrote:
>
> > It's possible to make each element in the set being edited a
> > cacheable. If you think that would introduce too much overhead, then
> > you can add a method to the "address book" object which updates one of
> > the entries in this address book, and uses an id to identify the entry
> > within the address book. So the address book is the dict. That's what
> > I did in a similar case. I'm no expert though.
> >
> > HTH
> >
> > Micky
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060625/15f19b64/attachment.html>

From robert at gravina.com  Sat Jun 24 18:18:43 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 09:18:43 +0900
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
Message-ID: <6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>

> Only thing I can think of is generate your own id. Doesn't have to  
> be random, you can simply increament a counter every time you  
> create a new instance. If you're worried about the id growing too  
> long you can search the database for unused ids that are lower than  
> the current value of the counter.
>

While I appreciate your suggestions, given that PB is really quite  
powerful and pb.Referenceables can be identified after a round trip,  
I figure there must be a better way of doing this. I don't want to  
use pb.Referenceables because I need to access the objects attributes  
and call methods on the remote end. I'm not 100% sure that your  
method is bug-free, although I haven't had a good think about it.  
Thanks anyhow.

> Perhaps somebody else has a better idea.
>

I really hope so. I'm stuck for ideas, short of turning everything  
into pb.Cacheables.

Robert

> On 24/06/06, Robert Gravina <robert at gravina.com> wrote: This is an  
> old thread, but I am finally tackling the round trip
> editing problem and unfortunately getting nowhere. Basically, I want
> to be able to create some object on one machine, then send it off to
> another (who edits some of the attributes) then when the other
> machine calls a method on the original machine and passes it the
> updated object, I can identify it simply by comparing for quality.
> Think of your basic client/server database application.
>
> The Twisted howtos make the claim that " Copyable objects return
> unchanged from a round trip", and can be compared for quality like
> (obj == obj) but in all my attempts I can get this to work (they are
> never equal). Does someone know of some sample code where this is
> done successfully? It is done successfully with pb.Referenceables in
> the howtos (look for the pb2client.py and pb2server.py listings).
> http://twistedmatrix.com/projects/core/documentation/howto/pb- 
> usage.html
>
> Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to
> identify objects that come back to me but the _p_oid is  None even
> after a transaction.commit() (since the object hasn't been persisted
> yet probably).
>
> I could also create my own ID attribute and attempt to generate a
> random ID and compare that, but this is most definately a hack.
>
> I am really having trouble progressing with my application because of
> this problem. I'd really appreciate some insight on how to go about
> solving this. Admittedly I'm not all that experienced with Twisted,
> but I thought this kind of thing was supposed to be straightforward.
> What am I doing wrong?
>
> Thanks,
>
> Robert
>
> On 2006/05/07, at 18:55, Micky Latowicki wrote:
>
> > It's possible to make each element in the set being edited a
> > cacheable. If you think that would introduce too much overhead, then
> > you can add a method to the "address book" object which updates  
> one of
> > the entries in this address book, and uses an id to identify the  
> entry
> > within the address book. So the address book is the dict. That's  
> what
> > I did in a similar case. I'm no expert though.
> >
> > HTH
> >
> > Micky
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From me at kbrooks.ath.cx  Sat Jun 24 15:04:13 2006
From: me at kbrooks.ath.cx (The Wiz)
Date: Sat, 24 Jun 2006 17:04:13 -0400
Subject: [Twisted-Python] Any Twisted tutorial?
Message-ID: <449DA8CD.4060000@kbrooks.ath.cx>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Is there a Twisted tutorial?

Also, can I ask dumb questions (like, what is twisted, etc)?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFEnajNA7t0hsXXeiERAm02AKDKFhYXcWYqqR4RR9U25lp3PO/ThwCbBmhL
Mrca7FI9XHwTnokK0e6IlEg=
=5oDH
-----END PGP SIGNATURE-----



From jml at mumak.net  Sat Jun 24 19:38:51 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 25 Jun 2006 11:38:51 +1000
Subject: [Twisted-Python] Any Twisted tutorial?
In-Reply-To: <449DA8CD.4060000@kbrooks.ath.cx>
References: <449DA8CD.4060000@kbrooks.ath.cx>
Message-ID: <d06a5cd30606241838j52aa3a51t60c4cad39c944b14@mail.gmail.com>

On 6/25/06, The Wiz <me at kbrooks.ath.cx> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Is there a Twisted tutorial?

Yes there is!  It is linked to from
http://twistedmatrix.com/projects/core/documentation/howto/index.html

> Also, can I ask dumb questions (like, what is twisted, etc)?

In general, no.  We'd prefer it if you looked at the documentation and
FAQ available on the website before you ask questions.

If your question is *not* answered by the documentation, then please
feel free to ask it here, or on #twisted.

Hope this helps,
jml



From jadestorm at nc.rr.com  Sat Jun 24 19:48:11 2006
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Sat, 24 Jun 2006 21:48:11 -0400
Subject: [Twisted-Python] Any Twisted tutorial?
In-Reply-To: <449DA8CD.4060000@kbrooks.ath.cx>
References: <449DA8CD.4060000@kbrooks.ath.cx>
Message-ID: <0567084D-CE4D-4631-B96D-FBA36B9BB4DE@nc.rr.com>

This would be a really good start:
http://www.amazon.com/gp/product/0596100329/sr=8-1/qid=1151200014/ 
ref=pd_bbs_1/002-1540570-6626468?ie=UTF8
(if that link doesn't work, it's a book called Twisted Network  
Programming Essentials by Abe Fettig)

=)

Daniel

On Jun 24, 2006, at 5:04 PM, The Wiz wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Is there a Twisted tutorial?
>
> Also, can I ask dumb questions (like, what is twisted, etc)?
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2.2 (GNU/Linux)
>
> iD8DBQFEnajNA7t0hsXXeiERAm02AKDKFhYXcWYqqR4RR9U25lp3PO/ThwCbBmhL
> Mrca7FI9XHwTnokK0e6IlEg=
> =5oDH
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From robert at gravina.com  Sat Jun 24 19:48:47 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 10:48:47 +0900
Subject: [Twisted-Python] Any Twisted tutorial?
In-Reply-To: <449DA8CD.4060000@kbrooks.ath.cx>
References: <449DA8CD.4060000@kbrooks.ath.cx>
Message-ID: <DCC5207C-F741-45E2-9F74-3423472D4CAB@gravina.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> Is there a Twisted tutorial?
>

Yes! These tutorials are really quite good. If you have the time and  
inclination, working through the "Twisted from Scratch" tutorial is  
very useful. Also, I found the section "High-level Twisted" to be  
another good starting place.
http://twistedmatrix.com/projects/core/documentation/howto/index.html

> Also, can I ask dumb questions (like, what is twisted, etc)?

Well I'm just another user like yourself, but most of these basic  
questions are answered on the Twisted wiki <http://twistedmatrix.com/ 
 > and in those tutorials I mentioned. Twisted has great  
documentation. Try that first.

Robert


> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2.2 (GNU/Linux)
>
> iD8DBQFEnajNA7t0hsXXeiERAm02AKDKFhYXcWYqqR4RR9U25lp3PO/ThwCbBmhL
> Mrca7FI9XHwTnokK0e6IlEg=
> =5oDH
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFEneuAUhM5QJJcb3cRAlCfAJ9iRwakn3Wb/ZmyS5+Jm90Frw6ZTgCfeVA+
fRaewCAfDVHKWCfeDu19cf0=
=t4tJ
-----END PGP SIGNATURE-----



From robert at gravina.com  Sat Jun 24 20:21:48 2006
From: robert at gravina.com (Robert Gravina)
Date: Sun, 25 Jun 2006 11:21:48 +0900
Subject: [Twisted-Python] can pb.Copyable objects be compared for equality
	after a round trip?
In-Reply-To: <6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
Message-ID: <E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>

Ah sorry everyone... it seems I've misunderstood a very basic concept:

Copyables are copy-by-value
Referenceables are copy-by-reference

It says so here:
http://www.lothar.com/tech/papers/PyCon-2003/pb-pycon/pb.html

So basically I need to use either Referenceable or Viewable! OK now I  
can get back to work.

Robert

On 2006/06/25, at 9:18, Robert Gravina wrote:

>> Only thing I can think of is generate your own id. Doesn't have to  
>> be random, you can simply increament a counter every time you  
>> create a new instance. If you're worried about the id growing too  
>> long you can search the database for unused ids that are lower  
>> than the current value of the counter.
>>
>
> While I appreciate your suggestions, given that PB is really quite  
> powerful and pb.Referenceables can be identified after a round  
> trip, I figure there must be a better way of doing this. I don't  
> want to use pb.Referenceables because I need to access the objects  
> attributes and call methods on the remote end. I'm not 100% sure  
> that your method is bug-free, although I haven't had a good think  
> about it. Thanks anyhow.
>
>> Perhaps somebody else has a better idea.
>>
>
> I really hope so. I'm stuck for ideas, short of turning everything  
> into pb.Cacheables.
>
> Robert
>
>> On 24/06/06, Robert Gravina <robert at gravina.com> wrote: This is an  
>> old thread, but I am finally tackling the round trip
>> editing problem and unfortunately getting nowhere. Basically, I want
>> to be able to create some object on one machine, then send it off to
>> another (who edits some of the attributes) then when the other
>> machine calls a method on the original machine and passes it the
>> updated object, I can identify it simply by comparing for quality.
>> Think of your basic client/server database application.
>>
>> The Twisted howtos make the claim that " Copyable objects return
>> unchanged from a round trip", and can be compared for quality like
>> (obj == obj) but in all my attempts I can get this to work (they are
>> never equal). Does someone know of some sample code where this is
>> done successfully? It is done successfully with pb.Referenceables in
>> the howtos (look for the pb2client.py and pb2server.py listings).
>> http://twistedmatrix.com/projects/core/documentation/howto/pb- 
>> usage.html
>>
>> Since I'm using the ZODB, I've tried using ZODB's _p_oid attribute to
>> identify objects that come back to me but the _p_oid is  None even
>> after a transaction.commit() (since the object hasn't been persisted
>> yet probably).
>>
>> I could also create my own ID attribute and attempt to generate a
>> random ID and compare that, but this is most definately a hack.
>>
>> I am really having trouble progressing with my application because of
>> this problem. I'd really appreciate some insight on how to go about
>> solving this. Admittedly I'm not all that experienced with Twisted,
>> but I thought this kind of thing was supposed to be straightforward.
>> What am I doing wrong?
>>
>> Thanks,
>>
>> Robert
>>
>> On 2006/05/07, at 18:55, Micky Latowicki wrote:
>>
>> > It's possible to make each element in the set being edited a
>> > cacheable. If you think that would introduce too much overhead,  
>> then
>> > you can add a method to the "address book" object which updates  
>> one of
>> > the entries in this address book, and uses an id to identify the  
>> entry
>> > within the address book. So the address book is the dict. That's  
>> what
>> > I did in a similar case. I'm no expert though.
>> >
>> > HTH
>> >
>> > Micky
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From jfn20 at cam.ac.uk  Sat Jun 24 21:19:22 2006
From: jfn20 at cam.ac.uk (Joseph Newman)
Date: Sun, 25 Jun 2006 04:19:22 +0100
Subject: [Twisted-Python] reset/restart reactor problem
Message-ID: <001815A0-67B5-424B-AB5A-8A6EE3344871@cam.ac.uk>

Hi All,

I am porting an academic middleware project, currently implemented in  
C++ and Java, to python. It extensively uses multicast for  
communicating general events and TCP to communicate with a database.  
The multicast messages that I send out depend on the results that I  
first obtain from the database. I would prefer to serialise each of  
these requests in turn, but its not immediately obvious to me what  
the best way to do this using Twisted is.

If I could reset the reactor after each client/server transaction  
that would be by far the easiest. I have been experimenting with  
threadedselectreactor, but I currently don't have an event loop as  
such that is independent of the reactor event loop. Nearly all the  
examples deal with processes that either act as servers or clients,  
rather than combinations of the two.

Thanks in advance for any help,

Joe Newman




From exarkun at divmod.com  Sat Jun 24 21:47:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 24 Jun 2006 23:47:47 -0400
Subject: [Twisted-Python] reset/restart reactor problem
In-Reply-To: <001815A0-67B5-424B-AB5A-8A6EE3344871@cam.ac.uk>
Message-ID: <20060625034747.29014.1818227858.divmod.quotient.9731@ohm>

On Sun, 25 Jun 2006 04:19:22 +0100, Joseph Newman <jfn20 at cam.ac.uk> wrote:
>Hi All,
>
>I am porting an academic middleware project, currently implemented in  C++ 
>and Java, to python. It extensively uses multicast for  communicating 
>general events and TCP to communicate with a database.  The multicast 
>messages that I send out depend on the results that I  first obtain from the 
>database. I would prefer to serialise each of  these requests in turn, but 
>its not immediately obvious to me what  the best way to do this using 
>Twisted is.

There are quite a few possible techniques to apply here.  One I would
recommend is to keep a list of objects which represent pending tasks
which need to be executed serially.  When each task completes, pop the
next one from the list and begin processing it.  When a new task needs
to be performed, push it onto the list.

>
>If I could reset the reactor after each client/server transaction  that 
>would be by far the easiest.

Twisted does not currently support restartable reactors.  This may be
addressed someday, but I don't think this is actually the best solution
to the problem you are facing.

>I have been experimenting with 
>threadedselectreactor, but I currently don't have an event loop as  such 
>that is independent of the reactor event loop. Nearly all the  examples deal 
>with processes that either act as servers or clients,  rather than 
>combinations of the two.

TSR probably isn't helpful here.  I would suggest something like this:

  class JobList:
      def __init__(self):
          self.jobs = []

      def add(self, job):
          self.jobs.append(job)
          if len(self.jobs) == 1:
              self._doJob()

      def _doJob(self):
          job = self.jobs[0]
          d = job.do()
          d.addErrback(log.err)
          d.addCallback(self._finishedJob)

      def _finishedJob(self, result):
          self.jobs.pop(0)
          if self.jobs:
              self._doJob()

Hope this helps,

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jun 24 23:05:01 2006
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Jun 2006 05:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1151211901.62.1013482434@twistedmatrix.com

Bug summary
______________________
Summary for 2006-06-18 through 2006-06-25
Bugs opened: 27    Bugs closed: 17  Total open bugs: 631 (+10)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +7  |Highest:  -2          |Conch:               -1  
|Enhancement:  +5  |High:     +0          |Core:               +10  
|Task:         +1  |Normal:  +13          |Names:               -1  
                   |Low:      +2          |Pb:                  +1  
                                          |Release Management:  +1  
                                          |Trial:               +1  
                                          |Web2:                +1  
                                          |Website:             +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#1831] Delete twisted.spread.newjelly (opened by exarkun) (CLOSED, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1831

[#1835] make main setup.py work with 'build' subcommand (opened by radix)
    defect          release management http://twistedmatrix.com/trac/ticket/1835

[#1837] trial -e doesn't work with pyunit test cases (opened by radix)
    defect          trial      http://twistedmatrix.com/trac/ticket/1837

[#1847] build error,  svn version 11356 (opened by scmikes) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1847

                    ===== High =====
[#1839] web2.dav.fileop methods should return deferreds also (opened by wsanchez) (CLOSED, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1839

[#1840] clearly, unambiguously, and centrally document development procedures (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1840

[#1855] trial pyunit support mixes up argument order when creating Failures (opened by exarkun) (CLOSED, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1855

[#1856] setup.py broken in SVN? (opened by rikyu) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1856

                    ===== Normal =====
[#1833] Paragraph on CoreFoundation in "Choosing a Reactor" is maybe wrong. (opened by indigo)
    defect          core       http://twistedmatrix.com/trac/ticket/1833

[#1834] Trac spews a RuntimeError when creating a New Ticket under some conditions. (opened by indigo)
    defect          website    http://twistedmatrix.com/trac/ticket/1834

[#1836] _dumbwin32proc.py Process does not have a pid attribute as advertised in the interface (opened by wrstlprmpft)
    defect          core       http://twistedmatrix.com/trac/ticket/1836

[#1838] DAV MKCOL method with body causes uncaught exception (opened by troy at osc.edu)
    defect          web2       http://twistedmatrix.com/trac/ticket/1838

[#1842] Deprecated usage of id in __hash__ methods (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/1842

[#1843] twisted.spread.util.FilePager keeps all sent chunks in memory (opened by ino)
    defect          pb         http://twistedmatrix.com/trac/ticket/1843

[#1844] StringTransport should behave more like a real transport (opened by washort)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1844

[#1845] twisted 2.4 test run on Suse 9, 64 bit, python 2.5b1 (opened by scmikes)
    task            core       http://twistedmatrix.com/trac/ticket/1845

[#1846] Test run python2.4  Twisted 2.4 tarball, Suse 9,  64 bit (opened by scmikes)
    task            core       http://twistedmatrix.com/trac/ticket/1846

[#1848] Python 2.5b1  svn (opened by scmikes)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1848

[#1849] twisted.conch.test.test_cftp.TestOurServerUnixClient._getBatchOutput is a mess (opened by spiv)
    defect          conch      http://twistedmatrix.com/trac/ticket/1849

[#1850] web2 documentation should recommend putChild instead of setattr (opened by marienz)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1850

[#1851] Svn  python 2.4  Suse 9, 64 bit (opened by scmikes)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1851

[#1852] Replace uses of @ivar in interfaces with z.i.Attribute (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/1852

[#1853] Fix/eliminate @cvar in Interfaces. (opened by jknight)
    defect          core       http://twistedmatrix.com/trac/ticket/1853

[#1854] Suse 10,  Python 2.5   32 bit  Twisted SVN (opened by scmikes)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1854

                    ===== Low =====
[#1832] test_threads.ReactorThreadsTestCase is very fragile (opened by therve)
    defect          core       http://twistedmatrix.com/trac/ticket/1832

[#1841] twisted.web2.dav.fileop's handling of symbolic links is untested (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1841

[#1857] Check if admin/book.texinfo is needed (opened by hypatia)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1857



Closed Bugs
______________________
                    ===== Highest =====
[#1817] Several methods in web2.dav that should return deferreds do not (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1817

[#1824] typo in plugin howto (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1824

[#1799] Remove usage of exec from twisted/names/dns.py (opened by exarkun, closed by exarkun, fixed)
    task            names      http://twistedmatrix.com/trac/ticket/1799

[#1486] AttributeError: 'NoneType' object has no attribute 'connectionLost' (opened by miro, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/1486

[#1831] Delete twisted.spread.newjelly (opened by exarkun, closed by exarkun, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/1831

[#1847] build error,  svn version 11356 (opened by scmikes, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1847

                    ===== High =====
[#491 ] [PATCH] persisted.sob buglet (opened by warner, closed by stephen, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/491

[#1839] web2.dav.fileop methods should return deferreds also (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1839

[#1839] web2.dav.fileop methods should return deferreds also (opened by wsanchez, closed by wsanchez, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1839

[#1856] setup.py broken in SVN? (opened by rikyu, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1856

[#1855] trial pyunit support mixes up argument order when creating Failures (opened by exarkun, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1855

                    ===== Normal =====
[#634 ] sandbox/itamar/components.py CannotAdapt when registering adapter to types.ClassType (opened by slyphon, closed by exarkun, )
    enhancement     core       http://twistedmatrix.com/trac/ticket/634

[#1502] call selectreactor._preenDescriptors for WSAENOTSOCK (opened by titty, closed by titty, wontfix)
    defect          core       http://twistedmatrix.com/trac/ticket/1502

[#1816] More informative docstring for chainDeferred (opened by edsuom, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1816

[#1660] using conch plugin, cannot load the namespace (opened by mfeif, closed by exarkun, wontfix)
    defect          conch      http://twistedmatrix.com/trac/ticket/1660

[#1106] [NO PATCH] make example in howto/process.xhtml more clear (opened by headly, closed by hypatia, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1106

                    ===== Low =====
[#1476] Include web2 in main Twisted release (opened by andrea, closed by radix, invalid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/1476





From moof at metamoof.net  Sun Jun 25 05:39:16 2006
From: moof at metamoof.net (Moof)
Date: Sun, 25 Jun 2006 12:39:16 +0100
Subject: [Twisted-Python] reset/restart reactor problem
In-Reply-To: <20060625034747.29014.1818227858.divmod.quotient.9731@ohm>
References: <001815A0-67B5-424B-AB5A-8A6EE3344871@cam.ac.uk>
	<20060625034747.29014.1818227858.divmod.quotient.9731@ohm>
Message-ID: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>

> >I am porting an academic middleware project, currently implemented in  C++
> >and Java, to python. It extensively uses multicast for  communicating
> >general events and TCP to communicate with a database.  The multicast
> >messages that I send out depend on the results that I  first obtain from the
> >database. I would prefer to serialise each of  these requests in turn, but
> >its not immediately obvious to me what  the best way to do this using
> >Twisted is.
>
> There are quite a few possible techniques to apply here.  One I would
> recommend is to keep a list of objects which represent pending tasks
> which need to be executed serially.  When each task completes, pop the
> next one from the list and begin processing it.  When a new task needs
> to be performed, push it onto the list.

[snip code]

This has already been implemented in twisted.

from twisted.internet import defer

requestqueue = defer.DeferredSemaphore(1) # only allow one token to be
in use at a time
d = requestqueue.run(object.method, arg1, arg2, arg3=3)

d is a deferred that will return the result of the method call in the
standard manner. The semaphore will store the function call in a FIFO
queue and run it when a token becomes available, acquiring the lock,
running, and releasing it once run. It allows for multiple tokens, so
it's normally used to run a maximum of, say, 30 things at a time, but
there's no reson not to set a maximum of 1. This guarantees that only
one call in the notional queue will be run at a time, effectively
serialising your requests.

Keep in mind that twisted is inherently single-threaded, and hence, to
an extent, serial in nature anyway, there are very few times in a
twisted programme when it becomes multi-threaded, database access with
twisted.enterprise being one of them. The general strategy would be to
keep only the part of your programme that needs to be transactional in
a queue like this, leaving the rest of the programme (like sending the
multicast data) in twisted's normal asynchronous execution space. In
fact, the only reason to do it this way is if you need to process the
data in the order it's received. If the order is not important, then
you can use your own database's transaction model to solve the
concurrency issues, (see
twisted.enterprise.adbapi.ConnectionPool.runInteraction), and just let
twisted gets on with doing things the way it knows best.

Hope this helps,

Moof



From exarkun at divmod.com  Sun Jun 25 08:12:37 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 25 Jun 2006 10:12:37 -0400
Subject: [Twisted-Python] reset/restart reactor problem
In-Reply-To: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>
Message-ID: <20060625141237.29014.1281644275.divmod.quotient.10162@ohm>

On Sun, 25 Jun 2006 12:39:16 +0100, Moof <moof at metamoof.net> wrote:
>> >I am porting an academic middleware project, currently implemented in  C++
>> >and Java, to python. It extensively uses multicast for  communicating
>> >general events and TCP to communicate with a database.  The multicast
>> >messages that I send out depend on the results that I  first obtain from 
>>the
>> >database. I would prefer to serialise each of  these requests in turn, but
>> >its not immediately obvious to me what  the best way to do this using
>> >Twisted is.
>>
>>There are quite a few possible techniques to apply here.  One I would
>>recommend is to keep a list of objects which represent pending tasks
>>which need to be executed serially.  When each task completes, pop the
>>next one from the list and begin processing it.  When a new task needs
>>to be performed, push it onto the list.
>
>[snip code]
>
>This has already been implemented in twisted.

I know.  I implemented it. ;)

Jean-Paul



From eprparadocs at gmail.com  Sun Jun 25 12:20:25 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Sun, 25 Jun 2006 14:20:25 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
Message-ID: <449ED3E9.40802@gmail.com>

I have a problem to solve: I need to get files from one machine to
another. I had thought about all the obvious solutions (and implemented
some of them); for instance adding an FTP server to my Twisted services
and using a client. I thought about doing the file transfer with XML-RPC
and even SOAP. And I even thought of WebDav.

I started reading about PB and thought it might be useful. I thought
about building a "remote" class that simulates open and all its
functions, like read, write, close, etc.

The more I thought about it the more I thought it cool and the way to do
it. That got me thinking that I must be missing something. I am curious
about what you might think of this approach. Is there another better way?

Peace,
Chaz.



From phil at bubblehouse.org  Sun Jun 25 20:12:42 2006
From: phil at bubblehouse.org (Phil Christensen)
Date: Sun, 25 Jun 2006 22:12:42 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <449ED3E9.40802@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com>
Message-ID: <A7F89B66-E3C5-4456-B14C-E4F5E08242AE@bubblehouse.org>

I'm sure there will be a flood of answers for this (involving using a  
Producer/Consumer)...I'd give a clue, but my PB usage right now is  
only in quick messages...

However, I wanted to ask if you could please create new messages for  
new threads on the list instead of replying to arbitrary old  
messages. When you start new threads by replying, it adds a In-Reply- 
To header that thwarts any attempts to sort by threads.

This is my OCD talking, so please for give me... ;-)

-phil



On Jun 25, 2006, at 2:20 PM, Chaz. wrote:

> I have a problem to solve: I need to get files from one machine to
> another. I had thought about all the obvious solutions (and  
> implemented
> some of them); for instance adding an FTP server to my Twisted  
> services
> and using a client. I thought about doing the file transfer with  
> XML-RPC
> and even SOAP. And I even thought of WebDav.
>
> I started reading about PB and thought it might be useful. I thought
> about building a "remote" class that simulates open and all its
> functions, like read, write, close, etc.
>
> The more I thought about it the more I thought it cool and the way  
> to do
> it. That got me thinking that I must be missing something. I am  
> curious
> about what you might think of this approach. Is there another  
> better way?
>
> Peace,
> Chaz.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at tekNico.net  Mon Jun 26 04:37:42 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Mon, 26 Jun 2006 12:37:42 +0200
Subject: [Twisted-Python] Re: Need words of wisdom regarding PB
In-Reply-To: <449ED3E9.40802@gmail.com>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com>
Message-ID: <e7oddp$i2b$1@sea.gmane.org>

> I have a problem to solve: I need to get files from one machine to
> another. I had thought about all the obvious solutions (and implemented
> some of them); for instance adding an FTP server to my Twisted services
> and using a client. I thought about doing the file transfer with XML-RPC
> and even SOAP. And I even thought of WebDav.
> 
> I started reading about PB and thought it might be useful.

PB, XML-RPC and SOAP introduce serialization and encoding overhead. FTP is
uselessly complicated. WebDav may be too complicated for simple file
transfers. Try plain HTTP, and add authentication and encryption if required.

-- 
Nicola Larosa - http://www.tekNico.net/

We mustn't settle for negotiating "Net Neutrality". We must demand the
basic right to connect and not just an enumerated list of what we are
allowed to do. It's no different from having to negotiate free speech
by listing what is allowed. Having to beg for permission to speak is
offensive. -- Robert Frankston (cited by Doc Searls), March 2006




From eprparadocs at gmail.com  Mon Jun 26 05:04:51 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Mon, 26 Jun 2006 07:04:51 -0400
Subject: [Twisted-Python] Performance of PB, XML-RPC and SOAP (ZSI version)
Message-ID: <449FBF53.3000101@gmail.com>

I was wondering if anyone has performance information for PB, XML-RPC
and/or ZSI's SOAP? I am trying to find out what I should be expecting
for raw performance.

I have done some raw performance of gSOAP doing an echo of 1-byte
messages and get around 500/second. I am trying to figure out the "hit"
I am going to take using Python, Twisted, and the 3 protocols.

Thanks in advance,
Chaz



From lordvan at lordvan.com  Mon Jun 26 06:43:39 2006
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Mon, 26 Jun 2006 13:43:39 +0100
Subject: [Twisted-Python] Re: Performance of PB,
	XML-RPC and SOAP (ZSI version)
References: <449FBF53.3000101@gmail.com>
Message-ID: <pan.2006.06.26.12.43.37.602948@lordvan.com>

On Mon, 26 Jun 2006 07:04:51 -0400, Chaz. wrote:

> I was wondering if anyone has performance information for PB, XML-RPC
> and/or ZSI's SOAP? I am trying to find out what I should be expecting
> for raw performance.
> 
> I have done some raw performance of gSOAP doing an echo of 1-byte
> messages and get around 500/second. I am trying to figure out the "hit"
> I am going to take using Python, Twisted, and the 3 protocols.
> 
> Thanks in advance,
> Chaz

Hi.

interesting question. if you do the tests can you share them with us? :)

Regards


-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z- 
------END GEEK CODE BLOCK------





From lordvan at lordvan.com  Mon Jun 26 06:47:38 2006
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Mon, 26 Jun 2006 13:47:38 +0100
Subject: [Twisted-Python] Re: Iron Python support
References: <20060623155113.29014.2071750144.divmod.quotient.8014@ohm>
	<200606231214.14695.mike@mkp.ca>
	<60ed19d40606230920t2c348f11n2884ac4b55f69e59@mail.gmail.com>
	<449C1AE4.4070802@libero.it>
Message-ID: <pan.2006.06.26.12.47.37.277085@lordvan.com>

On Fri, 23 Jun 2006 14:46:28 -0200, Manlio Perillo wrote:

I think for that to work someone will have to (re-) write some core parts
of twisted using .net (ironpython, python.net, boo)

sounds like an interesting challenge though :) too bad I ain't got time to
play with this atm :)

> Christopher Armstrong ha scritto:
>> [...]
>> 
>> What Jp meant to say was "See <url> for the list of support platforms.
>> As you can see, there is no buildbot running for ironpython, so
>> Twisted cannot have support for it. 
> 
> I also see no Jython support.
> What about it?
> 
> 
>> However, if you would like to move
>> things in the direction of Ironpython support, the donation of an
>> Ironpython buildslave would certainly be appreciated."
>> 
> 
> Do you use one dedicated server for each build slaves?
> If you just need a computer with a buildbot I can offer (spare) access
> to my PC.
> 
> Usually my PC is on from
> 10:00 to 12:30 and 17:00 to 23:00
> (local time in Italy).
> 
> 
> Do you use builbot from http://buildbot.sourceforge.net/?
> I just downloaded the version 0.7.3.
> 
> 
> 
> Regards  Manlio Perillo

-- 
-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z- 
------END GEEK CODE BLOCK------





From itamar at itamarst.org  Mon Jun 26 09:17:37 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jun 2006 11:17:37 -0400
Subject: [Twisted-Python] Re: [Twisted-commits] r17371 - Add roadmap.xhtml
	to index
In-Reply-To: <E1FuI0V-0005qB-00@wolfwood>
References: <E1FuI0V-0005qB-00@wolfwood>
Message-ID: <1151335058.6033.1.camel@localhost.localdomain>

Isn't the roadmap extremely out-of-date? I thought we wrote that back in
1.0.




From db3l at fitlinxx.com  Mon Jun 26 10:56:27 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 26 Jun 2006 12:56:27 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
	<E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>
Message-ID: <ufyhr97pg.fsf@fitlinxx.com>

Robert Gravina <robert at gravina.com> writes:

> Ah sorry everyone... it seems I've misunderstood a very basic concept:
> 
> Copyables are copy-by-value
> Referenceables are copy-by-reference
> 
> It says so here:
> http://www.lothar.com/tech/papers/PyCon-2003/pb-pycon/pb.html
> 
> So basically I need to use either Referenceable or Viewable! OK now I
> can get back to work.

Well, or just define your own comparison semantics in your copyable,
as you might for any other object.  We use copyables all the time for
precisely this pattern (return object remotely, edit it, re-use it in
a subsequent call back to the server) and it works fine as long as you
control the comparison and don't fall back to default Python rules,
which for class instances is effectively just an id() comparison.

As it turns out, we do also embed an "_id" attribute within the
objects (an auto-generated UUID) so we can detect collisions
(two clients attempting to modify the same object), but for general
comparison purposes outside of that collision check, we exclude the
_id attribute.

-- David




From robert at gravina.com  Mon Jun 26 11:55:11 2006
From: robert at gravina.com (Robert Gravina)
Date: Tue, 27 Jun 2006 02:55:11 +0900
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <ufyhr97pg.fsf@fitlinxx.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
	<E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
Message-ID: <44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>


On 2006/06/27, at 1:56, David Bolen wrote:

> Robert Gravina <robert at gravina.com> writes:
>
>> Ah sorry everyone... it seems I've misunderstood a very basic  
>> concept:
>>
>> Copyables are copy-by-value
>> Referenceables are copy-by-reference
>>
>> It says so here:
>> http://www.lothar.com/tech/papers/PyCon-2003/pb-pycon/pb.html
>>
>> So basically I need to use either Referenceable or Viewable! OK now I
>> can get back to work.
>
> Well, or just define your own comparison semantics in your copyable,
> as you might for any other object.  We use copyables all the time for
> precisely this pattern (return object remotely, edit it, re-use it in
> a subsequent call back to the server) and it works fine as long as you
> control the comparison and don't fall back to default Python rules,
> which for class instances is effectively just an id() comparison.
>

Thanks, that is exactly what I am trying to do (return object  
remotely, edit it, re-use it in a subsequent call back to the  
server). What kind of comparison do you do then? Do you compare all  
attributes? By the way, what is an id() comparison? As far as I know  
Python compares to see if the instances (i.e. memory locations) are  
equal.

> As it turns out, we do also embed an "_id" attribute within the
> objects (an auto-generated UUID) so we can detect collisions
> (two clients attempting to modify the same object), but for general
> comparison purposes outside of that collision check, we exclude the
> _id attribute.
>

I've been looking around trying to find some good code for generating  
IDs, but most snippets I can find are accompanied by post after post  
on how that generation technique may fail under certain conditions.

I've been using the ZODB, but for the live of me I can't seem to get  
anything out of the _p_oid attribute (supposedly the object ID, but  
it's always None!). This prompted me today to experiment with Axiom  
(thanks Divmod guys!) and I like what I see so far, but I'm having  
problems with that also (see here if you're interested <http:// 
divmod.org/trac/ticket/1220>).

I'd really like to stick with Copyables and the ZODB if possible.  
What I'm not sure how to do is when I get my copyable back, not screw  
up my references to this object in the ZODB because what I'm really  
getting back is a whole new object.

Thanks for your advice,

Robert

> -- David
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mike at mkp.ca  Mon Jun 26 12:55:06 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Mon, 26 Jun 2006 14:55:06 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
Message-ID: <200606261455.07318.mike@mkp.ca>

On Monday 26 June 2006 13:55, Robert Gravina wrote:
> By the way, what is an id() comparison? As far as I know
> Python compares to see if the instances (i.e. memory locations) are
> equal.

You got your chocolate in my peanutbutter!

An "id()" comparison would be, "id(this) == id(that)".  In most (all?) 
implementations, 'id()' returns the memory location, but this is an 
implementation detail that is not guaranteed and shouldn't be depended on.  
An object's python id is to be treated as an opaque identifier.

Mike.



From robert at gravina.com  Mon Jun 26 13:18:03 2006
From: robert at gravina.com (Robert Gravina)
Date: Tue, 27 Jun 2006 04:18:03 +0900
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <200606261455.07318.mike@mkp.ca>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
	<200606261455.07318.mike@mkp.ca>
Message-ID: <56FF91ED-BC73-4CF0-873B-87252308F726@gravina.com>

Thanks Mike and others.. I just figured out how I can get this to  
work (with a bit of help from the ZODB mailing list too)! I am using  
the ZODB, and up until now I though that the _p_oid (the attribute  
that stores a unique object ID) was None all the time, even after I  
had persisted an object. I tried loading up a persisted object  
iteractively and found:

 >>> p._p_oid
'\x00\x00\x00\x00\x00\x00\x00\x08'
 >>> print p._p_oid
 >>> p._p_oid is None
False

... that it prints out as nothing, but it really is something (hence  
missing it in all my debug printouts)! (Those nutcase Zope  
developers!)... anyhow, it now appears I can compare the _p_oid of a  
Copyable coming back and find the object that represents it on the  
server, update it accordingly, commit the transaction and do a  
victory dance.

Thanks all for you help.

I thought I'd post this so anyone else using Twisted and ZODB won't  
spend days on this like I did.

Robert



On 2006/06/27, at 3:55, Mike Pelletier wrote:

> On Monday 26 June 2006 13:55, Robert Gravina wrote:
>> By the way, what is an id() comparison? As far as I know
>> Python compares to see if the instances (i.e. memory locations) are
>> equal.
>
> You got your chocolate in my peanutbutter!
>
> An "id()" comparison would be, "id(this) == id(that)".  In most (all?)
> implementations, 'id()' returns the memory location, but this is an
> implementation detail that is not guaranteed and shouldn't be  
> depended on.
> An object's python id is to be treated as an opaque identifier.
>
> Mike.




From itamar at itamarst.org  Mon Jun 26 13:38:24 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Jun 2006 15:38:24 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
In-Reply-To: <56FF91ED-BC73-4CF0-873B-87252308F726@gravina.com>
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
	<200606261455.07318.mike@mkp.ca>
	<56FF91ED-BC73-4CF0-873B-87252308F726@gravina.com>
Message-ID: <1151350705.6033.21.camel@localhost.localdomain>

On Tue, 2006-06-27 at 04:18 +0900, Robert Gravina wrote:

> ... that it prints out as nothing, but it really is something (hence  
> missing it in all my debug printouts)! (Those nutcase Zope  
> developers!)... anyhow, it now appears I can compare the _p_oid of a  
> Copyable coming back and find the object that represents it on the  
> server, update it accordingly, commit the transaction and do a  
> victory dance.

There are potential issues with that; I don't think ZODB oids are
guaranteed to be unique across multiple sub-databases. It's been long
enough since I used ZODB that I forget the details.




From terry at jon.es  Mon Jun 26 15:12:34 2006
From: terry at jon.es (Terry Jones)
Date: Mon, 26 Jun 2006 23:12:34 +0200
Subject: [Twisted-Python] Nevow docs typo
Message-ID: <17568.19906.262852.837917@terry.jones.tc>

Should Nevow issues go into the general Twisted tracker?

Line 148 of doc/txt/nevow-rendering.txt in the current (#7314) revision of
Nevow has:

  class Root(page.Page):

s/page/rend/

Terry



From exarkun at divmod.com  Mon Jun 26 15:23:49 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 26 Jun 2006 17:23:49 -0400
Subject: [Twisted-Python] Nevow docs typo
In-Reply-To: <17568.19906.262852.837917@terry.jones.tc>
Message-ID: <20060626212349.29014.297250899.divmod.quotient.11648@ohm>

On Mon, 26 Jun 2006 23:12:34 +0200, Terry Jones <terry at jon.es> wrote:
>Should Nevow issues go into the general Twisted tracker?

Nevow tickets should go into the tracker at <http://divmod.org/>.  There's also a separate mailing list for web-related topics involving Twisted, <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web>.

Jean-Paul



From glyph at divmod.com  Mon Jun 26 16:58:29 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 26 Jun 2006 18:58:29 -0400
Subject: [Twisted-Python] Nevow docs typo
In-Reply-To: <17568.19906.262852.837917@terry.jones.tc>
Message-ID: <20060626225829.29014.1432244521.divmod.quotient.11735@ohm>



On Mon, 26 Jun 2006 23:12:34 +0200, Terry Jones <terry at jon.es> wrote:
>Should Nevow issues go into the general Twisted tracker?

Nope, into the Divmod tracker, thanks: http://divmod.org/trac

Use the "Nevow" component.

And you probably want to talk about it on twisted-web, rather than twisted-python :)



From dreid at dreid.org  Mon Jun 26 17:24:56 2006
From: dreid at dreid.org (David Reid)
Date: Mon, 26 Jun 2006 16:24:56 -0700
Subject: [Twisted-Python] Bay Area Twisted sprint.
Message-ID: <44A06CC8.4040006@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello there,
  I'm attempting to think about possibly organizing a Twisted sprint
(focus on closing bugs) in the San Francisco/Bay Area for mid to late
July.  I know there are quite a few Twisted committers who are in the
area and I've approached some of them to gather preliminary information
regarding availability and interest.  There are also some people in town
for the summer for various reasons who've expressed interest.  So this
is an open invitation to every on twisted-python and twisted-web who is
in the bay area (or willing to travel to the bay area) for a weekend
sprint.  I need a rough approximation of how many people will actually
be able to make it so that I can attempt to locate a place to hold the
sprint.

  So if you're interested email me with your availability for the
weekends of the 15-16, 22-23, 29-30.  Basically I'll take the weekend
with the most available participants and start fishing around for a
location.

  Alternatively if you would like to host the sprint at your large
private estate or successful corporate offices you can contact me as
well with your preference for any of the above dates and some details
about the facilities you can provide.  (Close proximity to a caffeine
dispensary and reliable unrestrictive internet access are a must.  Comfy
chairs a plus.)

- -David Reid

- --
"Usually the protocol is this: I appoint someone for a task,
which they are not qualified to do.  Then, they have to fight
a bear if they don't want to do it." -- Glyph Lefkowitz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.3 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEoGzIrsrO6aeULcgRAlGmAKCfO9zBU/2UV5mIMXfNHRo7jlyXrACfSDbB
+TQMSPD7uwLnSDV1Ou2H/Qc=
=cWIj
-----END PGP SIGNATURE-----



From eprparadocs at gmail.com  Tue Jun 27 06:20:21 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Tue, 27 Jun 2006 08:20:21 -0400
Subject: [Twisted-Python] Performance data?
Message-ID: <44A12285.4060509@gmail.com>

I was wondering if anyone had performance data on using twisted with
XML-RPC, PB and/or SOAP (using ZSI)?

Peace,
Chaz



From stephane_brault at yahoo.fr  Tue Jun 27 10:49:12 2006
From: stephane_brault at yahoo.fr (=?utf-8?q?St=C3=A9phane=20Brault?=)
Date: Tue, 27 Jun 2006 16:49:12 +0000 (GMT)
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>
Message-ID: <20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>

Hi,
 I'm developping servers which communicate with webservices. I need to have
 looping tasks making calls every x (x depends on the task). My communication
 code works well but I'm not sure how to add scheduled tasks. Do I have to add 
 a scheduler service, if so how should i go ? Or is there another way ?
 
 Thanks,
 
 Stéphane




From exarkun at divmod.com  Tue Jun 27 11:04:32 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jun 2006 13:04:32 -0400
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>
Message-ID: <20060627170432.29014.1890156191.divmod.quotient.12566@ohm>

On Tue, 27 Jun 2006 16:49:12 +0000 (GMT), Stéphane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
> I'm developping servers which communicate with webservices. I need to have
> looping tasks making calls every x (x depends on the task). My communication
> code works well but I'm not sure how to add scheduled tasks. Do I have to add
> a scheduler service, if so how should i go ? Or is there another way ?

Whether or not you use a service depends on the structure of your application.
If you don't use a twisted.application.internet.TimerService, you can use a
twisted.internet.task.LoopingCall directly.

Jean-Paul



From moof at metamoof.net  Tue Jun 27 11:13:23 2006
From: moof at metamoof.net (Moof)
Date: Tue, 27 Jun 2006 18:13:23 +0100
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>
References: <bff8eeef0606250439h1aefc9b9v42a79815cf900ab7@mail.gmail.com>
	<20060627164912.51210.qmail@web26506.mail.ukl.yahoo.com>
Message-ID: <bff8eeef0606271013g3e1e5028v92d42646d2e86133@mail.gmail.com>

On 6/27/06, Stéphane Brault <stephane_brault at yahoo.fr> wrote:
> Hi,
>  I'm developping servers which communicate with webservices. I need to have
>  looping tasks making calls every x (x depends on the task). My communication
>  code works well but I'm not sure how to add scheduled tasks. Do I have to add
>  a scheduler service, if so how should i go ? Or is there another way ?

If you just need a function called every x seconds, then you can use a
twisted.internet.service.TimerService attached to your application in
the .tac file.

If you want to do it outside the service architecture, then
twisted.internet.task.LoopingCall is more your sort of thing.

To my knowledge, there is no cron-style scheduler in twisted, which
would allow you to run  at 9:00am every day or second tuesday or
schedules to that effect. You may wish to use cron to do that, running
applications that connect to your daemon using pb or some other
similar mechanism and trigger the action.

That being said, I'm currenly considering writing such a service for
twisted itself, too.

Moof



From stephane_brault at yahoo.fr  Tue Jun 27 11:28:02 2006
From: stephane_brault at yahoo.fr (=?utf-8?q?St=C3=A9phane=20Brault?=)
Date: Tue, 27 Jun 2006 17:28:02 +0000 (GMT)
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <bff8eeef0606271013g3e1e5028v92d42646d2e86133@mail.gmail.com>
Message-ID: <20060627172802.21114.qmail@web26512.mail.ukl.yahoo.com>

Thanks Moof,
  in fact i need to call different functions. I didn't know about the timerservice. For the cron-style scheduler
  you could try googling 'zope twisted integration', there is a link to Stephen Richter's integration with 
  a cron task. My concern was how, inside an application to launch tasks (or a looping call) at the initialization.
  I tried an example but it didn't seem to work.
  
  Thanks again,
  
  Stéphane

----- Message d'origine ----
De : Moof <moof at metamoof.net>
À : Stéphane Brault <stephane_brault at yahoo.fr>; Twisted general discussion <twisted-python at twistedmatrix.com>
Envoyé le : Mardi, 27 Juin 2006, 7h13mn 23s
Objet : Re: [Twisted-Python] Scheduling tasks in twisted

On 6/27/06, Stéphane Brault <stephane_brault at yahoo.fr> wrote:
> Hi,
>  I'm developping servers which communicate with webservices. I need to have
>  looping tasks making calls every x (x depends on the task). My communication
>  code works well but I'm not sure how to add scheduled tasks. Do I have to add
>  a scheduler service, if so how should i go ? Or is there another way ?

If you just need a function called every x seconds, then you can use a
twisted.internet.service.TimerService attached to your application in
the .tac file.

If you want to do it outside the service architecture, then
twisted.internet.task.LoopingCall is more your sort of thing.

To my knowledge, there is no cron-style scheduler in twisted, which
would allow you to run  at 9:00am every day or second tuesday or
schedules to that effect. You may wish to use cron to do that, running
applications that connect to your daemon using pb or some other
similar mechanism and trigger the action.

That being said, I'm currenly considering writing such a service for
twisted itself, too.

Moof






From stephane_brault at yahoo.fr  Tue Jun 27 11:34:07 2006
From: stephane_brault at yahoo.fr (=?utf-8?q?St=C3=A9phane=20Brault?=)
Date: Tue, 27 Jun 2006 17:34:07 +0000 (GMT)
Subject: [Twisted-Python] Scheduling tasks in twisted
In-Reply-To: <20060627170432.29014.1890156191.divmod.quotient.12566@ohm>
Message-ID: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>

Thanks Jean-Paul,
 
 I think I'll try to write my own service, getting inspiration from the TimerService.
 
 Stéphane

----- Message d'origine ----
De : Jean-Paul Calderone <exarkun at divmod.com>
À : twisted-python at twistedmatrix.com
Envoyé le : Mardi, 27 Juin 2006, 7h04mn 32s
Objet : Re: [Twisted-Python] Scheduling tasks in twisted

On Tue, 27 Jun 2006 16:49:12 +0000 (GMT), Stéphane Brault <stephane_brault at yahoo.fr> wrote:
>Hi,
> I'm developping servers which communicate with webservices. I need to have
> looping tasks making calls every x (x depends on the task). My communication
> code works well but I'm not sure how to add scheduled tasks. Do I have to add
> a scheduler service, if so how should i go ? Or is there another way ?

Whether or not you use a service depends on the structure of your application.
If you don't use a twisted.application.internet.TimerService, you can use a
twisted.internet.task.LoopingCall directly.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From robert at gravina.com  Tue Jun 27 12:31:56 2006
From: robert at gravina.com (Robert Gravina)
Date: Wed, 28 Jun 2006 03:31:56 +0900
Subject: [Twisted-Python] A proposal for simple remote object editing
	(Twisted and ZODB integration)
In-Reply-To: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
Message-ID: <63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>

I'd just like to throw out an idea after working with Twisted  
(especially Perspective Broker) getting the early stages of my  
application going over the last few weeks.

I love object databases... I've been using ZODB because it's so  
simple to work with, no SQL, just create your Python classes and all  
their attributes (dictionaries, references to other objects) will be  
pickled for you and saved in a file (or database, never tried it  
though)...

Anyhow, I've started writing my Twisted application, where clients  
contact a server to get objects, edit their details, and send them  
back. Because ZODB works by maintaining references to other objects,  
I can't just replace them with the new Copyables  when they come back  
because they are different instances. So, I compare the _p_oid  
attribute (object ID) with my original objects to locate the one I'm  
looking for, copy the __dict__ across from the Copyable to the  
original object, and commit the transaction. I haven't gotten much  
further than that, but I'm sure I'll have problems with objects which  
refer to other objects etc.

What's great about Referenceables is that Twisted gives you the  
original instance when they come back to you, but the client can't  
access the attributes or run any of it's methods locally. What's  
great about Copyables is that the whole instance is sent down the  
wire and the client can alter it's attributes, call it's methods, and  
send it back...

Back to the ZODB... what would be extremely useful is if clients  
could get an objects from the ZODB sent down to them, edit the  
attributes and call the methods, and sent it back and *have it be the  
original instance again*. Sort of like the best of both words of  
Referenceables and Copyables. Of course, this doesn't have to have  
anything to do with the ZODB, it was just my motivation for this  
idea. Any object could be sent down the wire, edited, and sent back  
having the original instance updated.

My questions are:

1) Is there any way to achieve this using Twisted the way things are?

2) Is my copying-across-the-dict a good enough solution, and I should  
just forget about the whole thing?

3) I hear Zope 3 contains some kind of Twisted integration. For the  
life of me I can't find any information about this on the web, and I  
even bought a book on Zope 3 recently and the only reference to  
Twisted is that you can use Twisted Web instead of Zope's ZServer to  
service web requests.

4) I've been toying with Divmod Axiom, and I see there is Twisted  
Persisted (but can't find much info on it), plus there is Twisted  
Enterprise, but that is too close to relational databases for my  
liking. Do any of these projects have integration like this?

5) Does anyone else think this is a cool idea and like to see it  
implemented?

Robert



From exarkun at divmod.com  Tue Jun 27 12:50:49 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Jun 2006 14:50:49 -0400
Subject: [Twisted-Python] A proposal for simple remote object editing
	(Twisted and ZODB integration)
In-Reply-To: <63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
Message-ID: <20060627185049.29014.927720205.divmod.quotient.12689@ohm>

On Wed, 28 Jun 2006 03:31:56 +0900, Robert Gravina <robert at gravina.com> wrote:
>I'd just like to throw out an idea after working with Twisted  (especially 
>Perspective Broker) getting the early stages of my  application going over 
>the last few weeks.
>
>I love object databases... I've been using ZODB because it's so  simple to 
>work with, no SQL, just create your Python classes and all  their attributes 
>(dictionaries, references to other objects) will be  pickled for you and 
>saved in a file (or database, never tried it  though)...
>
>Anyhow, I've started writing my Twisted application, where clients  contact 
>a server to get objects, edit their details, and send them  back. Because 
>ZODB works by maintaining references to other objects,  I can't just replace 
>them with the new Copyables  when they come back  because they are different 
>instances. So, I compare the _p_oid  attribute (object ID) with my original 
>objects to locate the one I'm  looking for, copy the __dict__ across from 
>the Copyable to the  original object, and commit the transaction. I haven't 
>gotten much  further than that, but I'm sure I'll have problems with objects 
>which  refer to other objects etc.
>
>What's great about Referenceables is that Twisted gives you the  original 
>instance when they come back to you, but the client can't  access the 
>attributes or run any of it's methods locally. What's  great about Copyables 
>is that the whole instance is sent down the  wire and the client can alter 
>it's attributes, call it's methods, and  send it back...
>
>Back to the ZODB... what would be extremely useful is if clients  could get 
>an objects from the ZODB sent down to them, edit the  attributes and call 
>the methods, and sent it back and *have it be the  original instance again*. 
>Sort of like the best of both words of  Referenceables and Copyables. Of 
>course, this doesn't have to have  anything to do with the ZODB, it was just 
>my motivation for this  idea. Any object could be sent down the wire, 
>edited, and sent back  having the original instance updated.
>
>My questions are:
>
>1) Is there any way to achieve this using Twisted the way things are?

It's possible for applications or libraries which use Twisted but aren't
part of Twisted to define new kinds of behavior for PB objects.  You can
define a class which combines the features of Referenceable and Copyable
if you like.

You can find some code which does something somewhat along these lines in
twisted/words/service.py: for example, the PBGroup and PBGroupReference
classes cooperate to make a type which, on the remote side, ends up with
Python methods which make remote PB method calls as well as a single
data attributes copied from the server (the attributes are effectively
read-only, though - you cannot modify them and send the instance back to
the server).

>
>2) Is my copying-across-the-dict a good enough solution, and I should  just 
>forget about the whole thing?

If the possibility for multiple clients to interact with the same objects
simultaneously exists, you will need some kind of conflict resolution.
This is one reason Twisted doesn't include a class like this - different
applications often want different conflict resolution behavior.

>
>3) I hear Zope 3 contains some kind of Twisted integration. For the  life of 
>me I can't find any information about this on the web, and I  even bought a 
>book on Zope 3 recently and the only reference to  Twisted is that you can 
>use Twisted Web instead of Zope's ZServer to  service web requests.

The integration is by way of WSGI.  While this means that Zope3 code may
be running in the same process as a Twisted reactor, you have to go a bit
out of your way to get any benefit from this.

>
>4) I've been toying with Divmod Axiom, and I see there is Twisted  Persisted 
>(but can't find much info on it), plus there is Twisted  Enterprise, but 
>that is too close to relational databases for my  liking. Do any of these 
>projects have integration like this?

None of them do.

>
>5) Does anyone else think this is a cool idea and like to see it 
>implemented?

It might be interesting.  I can't see any use-cases for which it is head
and shoulders above a solution with looser PB coupling, but that doesn't
mean one doesn't exist. :)

Jean-Paul



From ldanielburr at mac.com  Tue Jun 27 13:16:30 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Tue, 27 Jun 2006 14:16:30 -0500
Subject: [Twisted-Python] A proposal for simple remote object
	editing	(Twisted and ZODB integration)
In-Reply-To: <63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
	<63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
Message-ID: <op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>

Robert,

On Tue, 27 Jun 2006 13:31:56 -0500, Robert Gravina <robert at gravina.com>  
wrote:

[snip description of current work]

> Back to the ZODB... what would be extremely useful is if clients could  
> get an objects from the ZODB sent down to them, edit the attributes and  
> call the methods, and sent it back and *have it be the original instance  
> again*. Sort of like the best of both words of Referenceables and  
> Copyables. Of course, this doesn't have to have anything to do with the  
> ZODB, it was just my motivation for this idea. Any object could be sent  
> down the wire, edited, and sent back having the original instance  
> updated.
>

What does "have it be the original instance again" really mean?  It sounds
as though you simply want the distinction between Referenceables and
Copyables to disappear.  I smell security issues in here somewhere.

> My questions are:
>
> 1) Is there any way to achieve this using Twisted the way things are?
>

I don't know for a certainty, but my guess is that there isn't any
out-of-box solution for this.  You'd have to do this yourself, I think.

> 2) Is my copying-across-the-dict a good enough solution, and I should  
> just forget about the whole thing?
>

I think you really want ZEO, but I may be misunderstanding your aims.

> 3) I hear Zope 3 contains some kind of Twisted integration. For the life  
> of me I can't find any information about this on the web, and I even  
> bought a book on Zope 3 recently and the only reference to Twisted is  
> that you can use Twisted Web instead of Zope's ZServer to service web  
> requests.
>

The twisted/zope integration is really just so that zope 3 can start
using twisted as a server (web, ftp, etc.).  I don't think the zope
community has any immediate plans to use twisted as a framework.

Jim Fulton has said he wants to get out of the server business, and
twisted lets him do that.  I don't think he is particularly interested
in using twisted to build his apps, as he already has his own framework.

> 4) I've been toying with Divmod Axiom, and I see there is Twisted  
> Persisted (but can't find much info on it), plus there is Twisted  
> Enterprise, but that is too close to relational databases for my liking.  
> Do any of these projects have integration like this?
>

As a person who uses Axiom for his current project, I say "Use Axiom!".
That said, you can't use Axiom with ZODB, or vice versa.  Axiom is a
really great alternative to ZODB, and one that will work much more
nicely with twisted, hence my endorsement of it.

> 5) Does anyone else think this is a cool idea and like to see it  
> implemented?
>

I don't have any interest in such a thing, personally, but then again,
I don't use ZODB, and hope never to do so ;)

L. Daniel Burr



From robert at gravina.com  Tue Jun 27 14:05:40 2006
From: robert at gravina.com (Robert Gravina)
Date: Wed, 28 Jun 2006 05:05:40 +0900
Subject: [Twisted-Python] A proposal for simple remote object
	editing	(Twisted and ZODB integration)
In-Reply-To: <op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>
	<63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
	<op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <F0581A64-4F40-473A-A1E0-720D9075B7D4@gravina.com>

>> 2) Is my copying-across-the-dict a good enough solution, and I  
>> should just forget about the whole thing?
>>
>
> I think you really want ZEO, but I may be misunderstanding your aims.
>

Actually yes, that's exactly what I want. I've been wishing I had of  
used that but I got the impression it was designed for making Zope  
more scalable, not for writing GUI apps that need to share data.
http://www.zope.org/Products/ZEO/ZEOFactSheet

I need authentication etc. and found Zope too scary and geared  
towards web-development, came across Twisted and decided to go with  
that.

If there's any way I can use ZEO instead of Twisted PB and use  
Twisted for everything else, that would be perfect. I'll have to  
learn more about ZEO to see how this is done, but if anyone has any  
suggestions for this I'd love to hear about them.

[snip]

> As a person who uses Axiom for his current project, I say "Use  
> Axiom!".
> That said, you can't use Axiom with ZODB, or vice versa.  Axiom is a
> really great alternative to ZODB, and one that will work much more
> nicely with twisted, hence my endorsement of it.
>

Ah great... since my app is still in early stages it's not too hard  
to switch back to Axiom (I tried it out for a day, and liked it very  
much. Perhaps it will become Twisted's answer to object  
persistence)...  I wonder if using Axiom would make this problem of  
updating database-stored objects with lots of references to other  
objects after Copyables come back any easier? Or am I just being  
lazy? A good bit of introspecting rich code that traverses the  
__dict__ recursively might be all I need.

Robert



From nico at tekNico.net  Tue Jun 27 16:46:06 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Wed, 28 Jun 2006 00:46:06 +0200
Subject: [Twisted-Python] Re: A proposal for simple remote object editing
 (Twisted and ZODB integration)
In-Reply-To: <op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <20060627173407.46526.qmail@web26513.mail.ukl.yahoo.com>	<63C83F75-FEAF-4882-B775-FFA33A499E18@gravina.com>
	<op.tbtjtsqv3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <44A1B52E.7010507@tekNico.net>

>> 3) I hear Zope 3 contains some kind of Twisted integration. For the
>> life of me I can't find any information about this on the web, and I
>> even bought a book on Zope 3 recently and the only reference to
>> Twisted is that you can use Twisted Web instead of Zope's ZServer to
>> service web requests.

Here are a few references to Twisted and Zope together, found a few months ago.

Diary for itamar - 9 Dec 2002
http://www.advogato.org/person/itamar/diary.html?start=15

TwistedZopeOpenSpaceTalk - PyCon 2004
http://www.zope.org/Members/adytumsolutions/pycon2004/TwistedZopeOpenSpaceTalk

Neckar Sprint - A Zope3 Sprint in Tuebingen, Germany, Oct. 6-9, 2005
http://www.zope.org/Wikis/DevSite/Projects/ComponentArchitecture/NeckarSprint

zasync 1.0: Zope Product + Twisted ZEO client
http://www.zope.org/Members/poster/zasync/zasync_1_0/zasync_1_0_nr

(There would be another one: I have the page in my archive, but it's
unreachable now, and zope.org is excluded from archive.org. That's one of
the niceties of using Firefox' ScrapBook extension, instead of simple
bookmarks. :-) )


> The twisted/zope integration is really just so that zope 3 can start
> using twisted as a server (web, ftp, etc.).  I don't think the zope
> community has any immediate plans to use twisted as a framework.
> 
> Jim Fulton has said he wants to get out of the server business, and
> twisted lets him do that.  I don't think he is particularly interested
> in using twisted to build his apps, as he already has his own framework.

An opinion definitely shared by at least Stephan Richter; see this log of
an exchange between me (tekNico) and him (srichter) on IRC:

IRC log of #zope3-dev for Wednesday, 2005-07-27
http://zope3.pov.lt/irclogs/%23zope3-dev.2005-07-27.log.html


> I don't have any interest in such a thing, personally, but then again,
> I don't use ZODB, and hope never to do so ;)

Some of the reasons why one may not want to use pickle, nor ZODB, are
touched upon in this interesting piece by Glyph:

What Happened to Atop?
http://divmod.org/trac/wiki/WhitherAtop


-- 
Nicola Larosa - http://www.tekNico.net/

Implementation of Microsoft SOAP, a protocol running over HTTP
precisely so it could bypass firewalls, should be withdrawn.
[...] It is exactly this feature-above-security mindset
that needs to go. -- Bruce Schneier, February 2002





From Tzahi.ML at gmail.com  Tue Jun 27 17:51:21 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Wed, 28 Jun 2006 02:51:21 +0300
Subject: [Twisted-Python] Mobile code using PB
Message-ID: <200606280251.22220.Tzahi.ML@gmail.com>

Hi,
I am looking for a way to have a mobile code feature using PB very similar to 
pyro. The idea is like this: There is a server and a client.
The client trust the server completly.
The server does not trust the client.
The client gets arbitrary classes from the server and if a module
of the class is missing it raises an exception that will ultimately
result in downloading the module and injecting it.
If the module exists locally (same ver or something like that)
do not download it.
Basically i can override the security options like so:
pb.globalSecurity.isModuleAllowed=\
        jelly.DummySecurityOptions().isModuleAllowed
    pb.globalSecurity.isClassAllowed=\
        jelly.DummySecurityOptions().isClassAllowed
    pb.globalSecurity.isTypeAllowed=\
        jelly.DummySecurityOptions().isTypeAllowed

If i call a remote method and the returned value is an unknown class,
i recieve importError as "failure" which i can handle and 
send the module to the client 

However, if i send an unknown class as a parameter for a remote
method, the exception at the remote side is handled behind the scene
and i can't seem to trap it. Though, i am getting the importError 
failure message on the calling side (so it is somehow manageable).

Is there something that already exists so i won't have to reinvent the wheel?
using this trust model, do i really need pb.copyable and pb.remotecopy?
I.e. i want to replace these with custom isModuleAllowed isClassAllowed, 
etc...

10x.

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From glyph at divmod.com  Tue Jun 27 18:10:31 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 27 Jun 2006 20:10:31 -0400
Subject: [Twisted-Python] Mobile code using PB
In-Reply-To: <200606280251.22220.Tzahi.ML@gmail.com>
Message-ID: <20060628001031.29014.1836889504.divmod.quotient.13021@ohm>



On Wed, 28 Jun 2006 02:51:21 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>Basically i can override the security options like so:

Why not just do Broker(security=PermitEverything()) on the client?  This is why SecurityOptions is parameterizeable.  You shouldn't have to monkey-patch anything.



From jarrod at vertigrated.com  Tue Jun 27 18:20:24 2006
From: jarrod at vertigrated.com (jarrod roberson)
Date: Tue, 27 Jun 2006 20:20:24 -0400
Subject: [Twisted-Python] Starting POP3 server as an application in a .tac
	file
Message-ID: <2389d4730606271720t47ffa441ue4f1e384ce64dbf1@mail.gmail.com>

anyone have a basic example of how this would look?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060627/c1e8603d/attachment.html>

From moe at divmod.com  Tue Jun 27 19:50:19 2006
From: moe at divmod.com (Moe Aboulkheir)
Date: Wed, 28 Jun 2006 03:50:19 +0200
Subject: [Twisted-Python] Starting POP3 server as an application in a
	.tac file
In-Reply-To: <2389d4730606271720t47ffa441ue4f1e384ce64dbf1@mail.gmail.com>
Message-ID: <20060628015019.29014.1113220064.divmod.quotient.13057@ohm>



On Tue, 27 Jun 2006 20:20:24 -0400, jarrod roberson <jarrod at vertigrated.com> wrote:
>anyone have a basic example of how this would look?
>

This does some stuff you're probably not interesting in doing, but the general idea is the same: 

http://divmod.org/trac/browser/trunk/Quotient/xquotient/benchmarks/pop3server.tac



From Tzahi.ML at gmail.com  Wed Jun 28 02:43:16 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Wed, 28 Jun 2006 11:43:16 +0300
Subject: [Twisted-Python] Mobile code using PB
In-Reply-To: <20060628001031.29014.1836889504.divmod.quotient.13021@ohm>
References: <20060628001031.29014.1836889504.divmod.quotient.13021@ohm>
Message-ID: <200606281143.17408.Tzahi.ML@gmail.com>

On Wednesday 28 June 2006 03:10, glyph at divmod.com wrote:
> On Wed, 28 Jun 2006 02:51:21 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >Basically i can override the security options like so:
>
> Why not just do Broker(security=PermitEverything()) on the client?  This is
> why SecurityOptions is parameterizeable.  You shouldn't have to
> monkey-patch anything.

Thank you for your answer.
I am sorry, but i am fairly new to twisted. I am using the PBClientFactory
but it does not have any parameters.
Do you suggest to use Broker class instead somehow, because it looks
a lot more low level...

Also, the documentation says "RemoteCopy provides the methods that tell the 
Jelly layer how to create the local object from the incoming serialized 
state" and the same thing for copyable.  However, with security off,
i send classes with no pb.copyable and pb.remote. Does this mean they are
being serialized differently? unsecurely in the sense of being pickled instead
of jellied?
What is really the difference in stating the name module.classfoo in the 
isAllowed security options instead of using pb.copyable and pb.remotecopy.

The main problem is that if you want to send objects of classes that are
imports that is from some library then you cannot simply inherit the 
pb.copyable etc...

10x.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From ayuer.python at gmail.com  Wed Jun 28 03:07:14 2006
From: ayuer.python at gmail.com (Jia Liu)
Date: Wed, 28 Jun 2006 17:07:14 +0800
Subject: [Twisted-Python] Naive questions about how to do it twisted way.
Message-ID: <65665c910606280207l23514b4at7068a910492c6103@mail.gmail.com>

Hi,
  I have been follow twisted for like half a year now, I have read the doc
and the oreilly book, but i still cann't do some simple work in the twisted
way. Could someone give me a hint?
  Like today, i write this little code to follow my friends list on my msn
space, and get their friends list, so on and so on, and maybe at last I can
build a social relationship graph with it. The code is actually really
navie, here it goes. Sorry for the ugliness of my code, please help me make
it prettier:)
  Thanks. Appologize for my poor English.
Jia Liu

import re, sys, socket
import urllib
from sets import Set

socket.setdefaulttimeout = 10
re_buddy_pre = re.compile("href=\"(?:http://)?([^\.\"]+)\.spaces.msn.com",
re.IGNORECASE)  # http://nick.spaces.msn.com
re_buddy_post = re.compile("spaces.msn.com/members/([^\"\/]+)",
re.IGNORECASE) # http://spaces.msn.com/members/nick/

all_buddies = Set()
relation_dict = {}

def get_buddy(page, buddy=None):
    #print page
    print buddy
    global all_buddies
    buddies_of_this_page = Set()
    for re_buddy in [re_buddy_pre, re_buddy_post]:
        for m in re_buddy.finditer(page):
            buddies_of_this_page.add(m.group(1))
    relation_dict[buddy] = buddies_of_this_page
    return buddies_of_this_page

def got(url, buddy=None):
    f = urllib.urlopen(url)
    return f.read(), buddy

URL = "http://ayueer.spaces.msn.com/"
(page, buddy) = got(URL, "ayueer")

buddies_of_this_page = get_buddy(page, buddy)
all_buddies.add("ayueer")
next_to_visit = buddies_of_this_page.difference(all_buddies)

try:
    while 1:
        #reactor.run()
        #multi_buddy_factory(buddies_of_this_page)
        for buddy in next_to_visit:
            url = "http://"+buddy+".spaces.msn.com/"
            try:
                (page, buddy) = got(url, buddy)
                buddies_of_this_page.update(get_buddy(page, buddy))
            except:
                pass
        all_buddies.update(next_to_visit)
        next_to_visit = buddies_of_this_page.difference(all_buddies)
except KeyboardInterrupt:
    print all_buddies


-- 
银筝夜久殷勤弄，心怯空房不忍归
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060628/0c2b379b/attachment.html>

From paul-lists at perforge.com  Wed Jun 28 05:50:52 2006
From: paul-lists at perforge.com (Paul G)
Date: Wed, 28 Jun 2006 07:50:52 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com>
Message-ID: <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>


----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Sunday, June 25, 2006 2:20 PM
Subject: [Twisted-Python] Need words of wisdom regarding PB


>I have a problem to solve: I need to get files from one machine to
> another. I had thought about all the obvious solutions (and implemented
> some of them); for instance adding an FTP server to my Twisted services
> and using a client. I thought about doing the file transfer with XML-RPC
> and even SOAP. And I even thought of WebDav.
>
> I started reading about PB and thought it might be useful. I thought
> about building a "remote" class that simulates open and all its
> functions, like read, write, close, etc.
>
> The more I thought about it the more I thought it cool and the way to do
> it. That got me thinking that I must be missing something. I am curious
> about what you might think of this approach. Is there another better way?

i implemented file transfer with an optional intermediate gzip stage using 
pb a long while ago. if you're dealing with fairly low latency, a single pb 
connection is fine; for higher latencies, you'll want to multiplex multiple 
pb connections (this has to do with tcp, not pb). with my quick hack, i was 
able to saturate a fast-e with virtually no significant cpu utilization - 
the disk io and the network were the bottlenecks.

-p 




From eprparadocs at gmail.com  Wed Jun 28 06:03:57 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 28 Jun 2006 08:03:57 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com> <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
Message-ID: <44A2702D.10705@gmail.com>

Paul,

 Thanks for the information. I hadn't thought about multiple pb
connections, but I might even for my low-latency environment. I can have
files that range from very small to very very large and getting them
transferred in a reasonable period of time might might require many
connections at once.

 In your solution did you just allow the client to "divide" up the work
or was there something else you did?

Chaz

Paul G wrote:
> 
> ----- Original Message ----- From: "Chaz." <eprparadocs at gmail.com>
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Sunday, June 25, 2006 2:20 PM
> Subject: [Twisted-Python] Need words of wisdom regarding PB
> 
> 
>> I have a problem to solve: I need to get files from one machine to
>> another. I had thought about all the obvious solutions (and implemented
>> some of them); for instance adding an FTP server to my Twisted services
>> and using a client. I thought about doing the file transfer with XML-RPC
>> and even SOAP. And I even thought of WebDav.
>>
>> I started reading about PB and thought it might be useful. I thought
>> about building a "remote" class that simulates open and all its
>> functions, like read, write, close, etc.
>>
>> The more I thought about it the more I thought it cool and the way to do
>> it. That got me thinking that I must be missing something. I am curious
>> about what you might think of this approach. Is there another better way?
> 
> i implemented file transfer with an optional intermediate gzip stage
> using pb a long while ago. if you're dealing with fairly low latency, a
> single pb connection is fine; for higher latencies, you'll want to
> multiplex multiple pb connections (this has to do with tcp, not pb).
> with my quick hack, i was able to saturate a fast-e with virtually no
> significant cpu utilization - the disk io and the network were the
> bottlenecks.
> 
> -p
> 




From paul-lists at perforge.com  Wed Jun 28 06:11:08 2006
From: paul-lists at perforge.com (Paul G)
Date: Wed, 28 Jun 2006 08:11:08 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk><4496B139.1070300@gmail.com>
	<4497161B.5090709@imperial.ac.uk> <44975CDA.8070704@gmail.com>
Message-ID: <14bbc01c69aab$f07173d0$6302a8c0@dcore>


----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Phil Mayers" <p.mayers at imperial.ac.uk>
Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Monday, June 19, 2006 10:26 PM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


> I've used Spread communication before. While it is a nice system is does
> have some shortcomings. First, it is a pretty costly system in terms of
> resources. Secondly, it will only support a hundred or so computers (too
> small for my application).

can you elaborate on this please? ideally, i'd like to see some reasonably 
hard data for this. not implying that you're wrong, mind you, but i was 
under a completely different impression wrt resource utilization (albeit 
without extensive firsthand experience).

-p 




From Tzahi.ML at gmail.com  Wed Jun 28 06:39:49 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Wed, 28 Jun 2006 15:39:49 +0300
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com> <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
Message-ID: <200606281539.50051.Tzahi.ML@gmail.com>

On Wednesday 28 June 2006 14:50, Paul G wrote:
> i implemented file transfer with an optional intermediate gzip stage using
> pb a long while ago. if you're dealing with fairly low latency, a single pb
> connection is fine; for higher latencies, you'll want to multiplex multiple
> pb connections (this has to do with tcp, not pb). with my quick hack, i was
> able to saturate a fast-e with virtually no significant cpu utilization -
> the disk io and the network were the bottlenecks.

I am also very much interested in compressing the underlying transfers using
PB. Where can we get the hack? :)
I am looking for something that is done after serialization so all features of 
jelly remains. I.e., just before transfer, compress the data. Preferably with 
some control, i.e., with each message i send i want to be able to say
if to compress and to what level of compression.

Currently i have to circumvent jelly by pickle and compress but i can only
do that when server sends to client since the client trusts the server. 
However the server does not trust the client and thus, cannot allow pickled 
objects to be unserialized.

maybe something like callRemoteCompressed...

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From eprparadocs at gmail.com  Wed Jun 28 06:52:22 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Wed, 28 Jun 2006 08:52:22 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <14bbc01c69aab$f07173d0$6302a8c0@dcore>
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk><4496B139.1070300@gmail.com>
	<4497161B.5090709@imperial.ac.uk> <44975CDA.8070704@gmail.com>
	<14bbc01c69aab$f07173d0$6302a8c0@dcore>
Message-ID: <44A27B86.3020706@gmail.com>

If you go to the Spread website and read the documentation and source
code it mentions both the number of computer limitations and the
performance hit. Secondly, the system uses a static file to list the
machines that participate in the communication.

First, it won't support more a 200 computers, or so. It appears that
deep in the bowels of the code is a byte sized field! The code is pretty
convoluted, so I never did manage to find out what specifically was the
field they mentioned. If you are going to build a system that involves a
hundred machines or less you are probably alright.

Secondly, as for the performance a search will point out how costly
reliable group communications are in general. I would suggest you load
the software up and run the demo, tracking the messaging passing with
Ethereal. Once this begins to scalable upwards to hundreds of machines
you will see the problem.

Third, the configuration of a Spread cluster is fixed based on a config
file. This was a problem for me; I wanted my system to scale upward by
just adding a machine to the cluster and not having to change a config
file and rebooting the daemon machines! It doesn't make for a very
reliable approach (after all if IM systems could do it why couldn't
non-IM systems?)

It wasn't until I hit the boundaries of the Spread system did I begin to
think about all that was involved in designing a highly reliable, highly
scalable system. In sketching out the design of a reliable group
communication system similar to Spread did I begin to see the weaknesses
in the solution.

Now if you think Spread is the way to go, and it might be for small
clusters of machines, you should do a little research into things like
the SWIM protocol (of which I am doing a twisted implementation right
now and will be releasing to the community) or other approaches to
group-like communication (do a google of overlay networks, which I will
be also releasing). You will find a lot of relevant information. In fact
they will probably lead you to a group at Cornell (and a few people
there) and some people at the U of I at Champaign.

So, as I said Spread is fine for small clusters of machines with a fixed
deployment. It has tolerable performance and overhead. If you find that
you want to scalable upwards of 200 machines or up to thousands, Spread
won't cut it.

For those of you that like reading academic stuff that is grounded in
reality point your browsers to google and find a copy of:

A Scalable Services Architecture
By Tudor Marian, Ken Birman and Robbert van Renesse
All in the Dept of CS at Cornell

(You might recognize the name Birman as the guy that started a lot of
this stuff...his first system was called Isis)

For what it is worth,
Charles "Chaz" Wegrzyn


Paul G wrote:
> 
> ----- Original Message ----- From: "Chaz." <eprparadocs at gmail.com>
> To: "Phil Mayers" <p.mayers at imperial.ac.uk>
> Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Sent: Monday, June 19, 2006 10:26 PM
> Subject: Re: [Twisted-Python] Twisted-friendly Message bus
> 
> 
>> I've used Spread communication before. While it is a nice system is does
>> have some shortcomings. First, it is a pretty costly system in terms of
>> resources. Secondly, it will only support a hundred or so computers (too
>> small for my application).
> 
> can you elaborate on this please? ideally, i'd like to see some
> reasonably hard data for this. not implying that you're wrong, mind you,
> but i was under a completely different impression wrt resource
> utilization (albeit without extensive firsthand experience).
> 
> -p
> 




From exarkun at divmod.com  Wed Jun 28 07:34:35 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Jun 2006 09:34:35 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <44A27B86.3020706@gmail.com>
Message-ID: <20060628133435.29014.1692196930.divmod.quotient.13705@ohm>

On Wed, 28 Jun 2006 08:52:22 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>If you go to the Spread website and read the documentation and source
>code it mentions both the number of computer limitations and the
>performance hit. Secondly, the system uses a static file to list the
>machines that participate in the communication.

Just to clarify in case anyone is confused, here is the Spread website:

  http://www.spread.org/

This is not related to the twisted.spread package.

Jean-Paul



From bruce at cubik.org  Wed Jun 28 08:56:53 2006
From: bruce at cubik.org (Bruce Mitchener)
Date: Wed, 28 Jun 2006 08:56:53 -0600
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <4492DB72.2050903@imperial.ac.uk>
References: <4492DB72.2050903@imperial.ac.uk>
Message-ID: <44A298B5.3090900@cubik.org>

Phil Mayers wrote:
> I've run into "this service needs to know about this event from this 
> other service" once too often. It's message bus time, baby.

I ran into similar problems at work where we had been using PB but found 
that it did not perform to expectation (or requirement).

I've replaced the bulk of our PB communications with a STOMP[1] protocol 
implementation to talk to with ActiveMQ[2] servers.  This has been great 
and I can easily push over 10000 messages/second now.

And by switching over to ActiveMQ, we got a lot of other interesting 
features (much like what Spread might provide I guess), like topics 
(many to many communication rather than point to point), and their 
reliability and persistence features.

I did have to write my own STOMP protocol implementation as the existing 
one for Python is not up to snuff.  I may be able to release it back to 
the ActiveMQ people, but I'm not entirely sure yet.

And sure .. it meant installing Java.  But it also meant having 
something that worked well, performed beautifully, and gave me new 
features that are letting me re-architect our software to greatly 
simplify it and make it more reliable.

  - Bruce

[1] http://www.activemq.org/site/stomp.html
[2] http://www.activemq.org/site/home.html



From sidius at ucla.edu  Wed Jun 28 12:22:06 2006
From: sidius at ucla.edu (Richard Strong)
Date: Wed, 28 Jun 2006 11:22:06 -0700
Subject: [Twisted-Python] Creating a proxy between a flash client and
	xmlBlaster
Message-ID: <44A2C8CE.40309@ucla.edu>

Hi all,

I am attempting to build a proxy between xmlBlaster and a Flash client 
using an XmlSocket on the client side.
My cludge was going to be the twisted library. Essentially I want to 
have the update function of xmlBlaster
call basic.LineReceiver.sendLine(...) and the lineReceived function of 
twisted to call self.msgPublish.
I have a through line working from the Flash client to xmlBlaster, but 
cannot get a message from
xmlBlaster to Flash (even after a Flash client has successfully logged 
in.). Any help would be
divine.  Here is a copy of the source code for the server that has been 
created:

from const import *
import sys
import os
import time
import signal
import threading
sys.path.insert(0, CLIENTPATH)
import bistBlast
from twisted.protocols import basic
from twisted.internet import reactor, protocol
from twisted.internet.protocol import Protocol

class Proxy(bistBlast.bistBlast,basic.LineReceiver, threading.Thread):
   delimiter = '\0'
   def __init__(self):
             print 
"init======================================================>"
       #bistBlast.bistBlast.__init__(self, 8009)

                     def update(self, sessionId, key, content, qos):
       print """__recieved message__ """
           print "__key__", key
           print "__content__\n", content.data
           print "__qos__", qos
       #print ""
       self.sendLine('<MESSAGE USER="John" TEXT="Hello, my name is 
John!" />')
       #self.message('<MESSAGE USER="John" TEXT="Hello, my name is 
John!" />')
       #self.sendLine(key)
       return ""      
   def lineReceived(self,line):
 
       if line == "<policy-file-request/>":
           print "\t sending policy file"
           self.sendLine("<?xml 
version=\"1.0\"?><cross-domain-policy><allow-access-from domain=\"*\" 
to-ports=\"8007\" /></cross-domain-policy>")
           #bistBlast.bistBlast.__init__(self, 8009)
           #self.msgSubscribe("test")
       else:
                     print "LINE RECEIVED"
           try:
               bistBlast.bistBlast.__init__(self, 8009)
               self.msgSubscribe("test")
           except:
               print "already connected"
           self.msgPublish("<key oid='test' />", "<what />")
           self.sendLine('<MESSAGE USER="John" TEXT="Hello, my name is 
John!" />')

   def sendLine(self, msg):
       print "Sending Message"
       basic.LineReceiver.sendLine(self, msg)
       print "Sent Message"
         def message(self, msg):
       self.transport.write(msg + '\n' + delimiter)
       print msg + '\n'
      # Main
if __name__ == '__main__':

   ProxyFactory = protocol.ServerFactory()
   ProxyFactory.protocol = Proxy
   reactor.listenTCP(8007, ProxyFactory)
   reactor.run()



From me at kbrooks.ath.cx  Wed Jun 28 10:06:45 2006
From: me at kbrooks.ath.cx (The Wiz)
Date: Wed, 28 Jun 2006 12:06:45 -0400
Subject: [Twisted-Python] Twisted - tutorial links
Message-ID: <44A2A915.8040001@kbrooks.ath.cx>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I want to try Twisted. any links to tutorials? and when I say
"tutorials", I mean MORE THAN ONE tutorial.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFEoqkUA7t0hsXXeiERAsu/AKClQF2bHLnBNADznV90+rRV+Ze85ACfULkc
8XphES8v5v4whipvNw5fj5k=
=6XkZ
-----END PGP SIGNATURE-----



From db3l at fitlinxx.com  Wed Jun 28 14:56:49 2006
From: db3l at fitlinxx.com (David Bolen)
Date: 28 Jun 2006 16:56:49 -0400
Subject: [Twisted-Python] Re: can pb.Copyable objects be compared for
	equality after a round trip?
References: <A3670745-9440-473D-A3E8-8246F1EA68A0@gravina.com>
	<20060505134940.GF27715@cs.cmu.edu>
	<949B39E2-44C5-40DF-8E9C-14999D64BFCD@gravina.com>
	<20060505153141.GH27715@cs.cmu.edu>
	<B32E2896-6935-420F-830E-C7C1ACDC10F2@gravina.com>
	<d27002d90605070255y563ed3a5t2237b23c807d5c79@mail.gmail.com>
	<B4FA28D0-B8AE-4898-8417-0F315B2B8F45@gravina.com>
	<d27002d90606241513hc0bd415te0cdb27b4e6ae233@mail.gmail.com>
	<6EC81810-FEF6-40F0-9A96-820374577E8C@gravina.com>
	<E64971C9-32E3-484C-9246-2F9C8AB259D5@gravina.com>
	<ufyhr97pg.fsf@fitlinxx.com>
	<44D84128-61D6-447F-B6F5-AF114234C478@gravina.com>
Message-ID: <uk671gfse.fsf@fitlinxx.com>

Robert Gravina <robert at gravina.com> writes:

> Thanks, that is exactly what I am trying to do (return object
> remotely, edit it, re-use it in a subsequent call back to the
> server). What kind of comparison do you do then? Do you compare all
> attributes? By the way, what is an id() comparison? As far as I know
> Python compares to see if the instances (i.e. memory locations) are
> equal.

Precisely what comparison we do depends on the object in question.
Yes, in many cases it's more or less a straight __dict__ comparison
(sans the "_id" attribute), but in others there are only a few
"identity" attributes that we consider important for comparison
purposes, or that need special processing.  Such as a username object
equality test ignoring case of the username, or an object with date
fields that might round trip through a database so we round to a
precision that we consider equal.

So for example, our Password object contains, for equality testing:

    def __hash__(self):
        return hash(self._lvalue)

    def __eq__(self,other):
        if isinstance(other,Password):
            return self._lvalue == other._lvalue
        elif isinstance(other,types.StringTypes):
            return self._lvalue == other.lower()
        else:
            return False
    def __ne__(self,other):
        return not self.__eq__(other)

(_lvalue is an internally lowercased version of the current value)

Note that we also chose to permit a direct string comparison with a
password object, due to how it is often used to validate input, but most
other objects can only compare equally to others of their type.

A more blind __dict__ comparison (here for a FanClub object of ours)
might go like:

    def __eq__(self,other):
        if isinstance(other,FanClub):
            d1 = self.__dict__.copy()
            d2 = other.__dict__.copy()
            try:
                del d1['_id']
            except:
                pass
            try:
                del d2['_id']
            except:
                pass
            return d1 == d2
        else:
            raise NotImplementedError
    def __ne__(self,other):
        return not self.__eq__(other)

In general, just implement the rules as appropriate for your object.
Don't forget that if you are imposing rules on the equality - such as
our case insensitive username object above - you want to match that
with an appropriate __hash__ too, unless the object will never be used
as a dictionary key.

> > As it turns out, we do also embed an "_id" attribute within the
> > objects (an auto-generated UUID) so we can detect collisions
> > (two clients attempting to modify the same object), but for general
> > comparison purposes outside of that collision check, we exclude the
> > _id attribute.
> >
> 
> I've been looking around trying to find some good code for generating
> IDs, but most snippets I can find are accompanied by post after post
> on how that generation technique may fail under certain conditions.

I ran into a similar issue, and we ended up pretty much rolling our
own that at least had our own acceptable conditions.  It uses ctypes
to wrap either the native Win32 call on Windows or libuuid on *nix
(we've used it under FreeBSD and Linux).  So it needs ctypes, and
libuuid available for *nix.  Note that the Win32 call pre-Win2K
generates an address based UUID, while 2K+ defaults to random.  We've
used it for Python 2.2+.  It falls back to an ASPN-based recipe worst
case, but that generates UUIDs that aren't DCE conforming, so we warn
to stderr in that scenario.  I'll attach the generator class below if
it helps.

Since we wrote ours, there have been some other recent UUID generation
efforts in Python (e.g., http://zesty.ca/python/uuid.py) that seem
quite functional, but we didn't have incentive to move.

In terms of synchronizing the re-transmitted copyable with an existing
ZODB reference though, that still sounds like it may require some
extra work or index keeping, unless you already have a way to locate
the current internal copy of the object on the server side based on
the copy supplied in the client request.  Once you've got the server
copy then the above discussion can be used to determine if a change
has been made.

-- David

          - - - - - - - - - - - - - - - - - - - - - - - - -


class _UUIDGenerator(object):
    """Internal class used to contain state for UUID generation.  Selects
    the appropriate platform specific approach to UUID generation, preferring
    to use appropriate external UUID routines if available, otherwise falling
    back to a non-standard internal mechanism.

    An instance of this class generates UUIDs by being called - returning
    the 16-byte buffer containing the UUID as raw data."""

    def __init__(self):

        # We attempt to reference an appropriate platform routine for
        # UUID generation, and create a generation function to use it,
        # referencing that function as the "_generator" attribute of this
        # instance.  If anything goes wrong during the process, we fall
        # back to a pure Python implementation
        try:
            import ctypes, struct

            if sys.platform == 'win32':
                uuidgen = ctypes.windll.rpcrt4.UuidCreate
            else:
                uuidgen = ctypes.cdll.LoadLibrary('libuuid.so').uuid_generate

            # Both of these platform functions fill in a 16-byte block, so
            # we create a single buffer to be used on each generation.  Keep
            # in the instance so it will be available when accessed by the
            # generator function later.
            self.buffer = ctypes.c_buffer(16)

            # The generation function calls the platform routine to fill in
            # the buffer.  In the Windows case, the buffer is structured as
            # separate fields (the UUID struct) in native byte order, so we
            # use struct to unpack/repack the fields into network order to
            # conform to the opaque buffer UUID will be expecting.
            def _generator():
                uuidgen(self.buffer)
                if sys.platform == 'win32':
                    return struct.pack('>LHH8s',
                                       *struct.unpack('LHH8s',self.buffer))
                else:
                    return self.buffer.raw

        except:
            # If we fallback to this method, generate a warning for now 
            # (which will occur at import time) just as a head's up.
            sys.stderr.write('Warning: '
                             'Falling back to internal UUID generation\n')
            
            def _generator():
                # The following code was borrowed from ASPN, adjusted to not
                # use any additional option arguments.  Note that this does
                # not generate UUIDs conforming to the DCE 1.1 specification.
                import time, random, md5

                t = long( time.time() * 1000 )
                r = long( random.random()*100000000000000000L )
                try:
                    a = socket.gethostbyname( socket.gethostname() )
                except:
                    # if we can't get a network address, just imagine one
                    a = random.random()*100000000000000000L
                data = str(t)+' '+str(r)+' '+str(a)
                return md5.md5(data).digest()

        self._generator = _generator

    def __call__(self):
        """Return a buffer containing a newly generated UUID"""
        return self._generator()




From Tzahi.ML at gmail.com  Wed Jun 28 15:42:41 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 00:42:41 +0300
Subject: [Twisted-Python] Compressing PB communication
Message-ID: <200606290042.42056.Tzahi.ML@gmail.com>


I am interested in compressing the PB objects after serialization and 
unpacking when received at the other side.
I a using the pb.PBClientFactory() and ServerFactory from the documentation. 
Where is the most proper place to hack this?
What is possible?
I need to do this after the object becomes a string so i won't have to pickle
a string.
Is it possible to do something like factory.protocol.serialize=mySerialize
and in mySerialize i use the banana.encode function to encode the list of 
jelly myself and return there a new list that contains the now ziped and 
encoded value and let it go as it were.
This way i am not interfering with the jelly logic.

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From exarkun at divmod.com  Wed Jun 28 17:00:29 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 28 Jun 2006 19:00:29 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606290042.42056.Tzahi.ML@gmail.com>
Message-ID: <20060628230029.29014.61608043.divmod.quotient.14310@ohm>

On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>
>I am interested in compressing the PB objects after serialization and
>unpacking when received at the other side.
>I a using the pb.PBClientFactory() and ServerFactory from the documentation.
>Where is the most proper place to hack this?
>What is possible?
>I need to do this after the object becomes a string so i won't have to pickle
>a string.
>Is it possible to do something like factory.protocol.serialize=mySerialize
>and in mySerialize i use the banana.encode function to encode the list of
>jelly myself and return there a new list that contains the now ziped and
>encoded value and let it go as it were.
>This way i am not interfering with the jelly logic.
>

Attached a demonstration of doing this.

However, I doubt it's actually a useful idea.

Jean-Paul
-------------- next part --------------
A non-text attachment was scrubbed...
Name: zip.py
Type: text/x-python
Size: 2019 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060628/dc4cfb73/attachment-0002.py>

From glyph at divmod.com  Wed Jun 28 17:21:36 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 28 Jun 2006 19:21:36 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606290042.42056.Tzahi.ML@gmail.com>
Message-ID: <20060628232136.29014.1512691590.divmod.quotient.14333@ohm>



On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>I am interested in compressing the PB objects after serialization and
>unpacking when received at the other side.

Have you actually measured the size of the PB data you are thinking about compressing?  PB's serialization tends to be extremely tight.



From teratorn at twistedmatrix.com  Wed Jun 28 23:00:26 2006
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Thu, 29 Jun 2006 15:00:26 +1000
Subject: [Twisted-Python] Twisted - tutorial links
In-Reply-To: <44A2A915.8040001@kbrooks.ath.cx>
References: <44A2A915.8040001@kbrooks.ath.cx>
Message-ID: <op.tbv5i0l3y3d107@localhost.localdomain>

On Thu, 29 Jun 2006 02:06:45 +1000, The Wiz <me at kbrooks.ath.cx> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> I want to try Twisted. any links to tutorials? and when I say
> "tutorials", I mean MORE THAN ONE tutorial.
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2.2 (GNU/Linux)
>
> iD8DBQFEoqkUA7t0hsXXeiERAsu/AKClQF2bHLnBNADznV90+rRV+Ze85ACfULkc
> 8XphES8v5v4whipvNw5fj5k=
> =6XkZ
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

What's with these questions? You already asked essentially the same  
question in another thread, and you received detailed responses. Please  
stop adding noise to the mailing list.

-- 
Eric Mangold - Twisted/Win32 Maintainer
http://twistedmatrix.com/trac/wiki/Windows



From Tzahi.ML at gmail.com  Thu Jun 29 00:41:09 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 09:41:09 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060628232136.29014.1512691590.divmod.quotient.14333@ohm>
References: <20060628232136.29014.1512691590.divmod.quotient.14333@ohm>
Message-ID: <200606290941.10479.Tzahi.ML@gmail.com>

On Thursday 29 June 2006 02:21, glyph at divmod.com wrote:
> On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >I am interested in compressing the PB objects after serialization and
> >unpacking when received at the other side.
>
> Have you actually measured the size of the PB data you are thinking about
> compressing?  PB's serialization tends to be extremely tight.

Yes, it's about 20megabytes of data (~20000 records). 
Although, each client only get this once when they log on
and each time their cache is wiped.
This is one of the reasons i backed off using
a solution like XUL together with XMLRPC solutions and javascript, 
it would not hold (i tried). My only choice is to use pyGTK with
either pyro/twisted and in the end i decided on going with twisted
because of security concerns that are weighted with performance. 
This is why i was very insistent on compressing after serialization, 
so all the security features will be kept intact.
10x.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From Tzahi.ML at gmail.com  Thu Jun 29 02:21:40 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 11:21:40 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060628230029.29014.61608043.divmod.quotient.14310@ohm>
References: <20060628230029.29014.61608043.divmod.quotient.14310@ohm>
Message-ID: <200606291121.40954.Tzahi.ML@gmail.com>

10x!, exactly what i needed
It is useful for very big transfers (around 20mbytes).
The clients have a limited bandwidth of 750kbits or less
so it would be very useful to compress very big messages.

Which leads me to ask if it is possible to associate a .write call
to a specific callRemote or return value? or at least Mark the data
i wish to send, to be compressed after serialization in the callRemote.
Obviously there is no need to compress everything.
More so, it is possible to add meta information per call, like encryption
or tags for tracing etc... or if the server is loaded or, for example,
use a server in between to handle compression by looking at the meta
tag. Could be very useful. I'll need to do some testing to see what
is better.

On Thursday 29 June 2006 02:00, Jean-Paul Calderone wrote:
> On Thu, 29 Jun 2006 00:42:41 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >I am interested in compressing the PB objects after serialization and
>
> Attached a demonstration of doing this.
>
> However, I doubt it's actually a useful idea.
>
> Jean-Paul

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From eprparadocs at gmail.com  Thu Jun 29 08:47:10 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 29 Jun 2006 10:47:10 -0400
Subject: [Twisted-Python] URLLIB under twisted...
Message-ID: <44A3E7EE.905@gmail.com>

I was wondering if anyone knows of a URLLIB like facility under Twisted?

Chaz



From me at kbrooks.ath.cx  Thu Jun 29 06:05:03 2006
From: me at kbrooks.ath.cx (The Wiz)
Date: Thu, 29 Jun 2006 08:05:03 -0400
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <44A3E7EE.905@gmail.com>
References: <44A3E7EE.905@gmail.com>
Message-ID: <44A3C1EF.1090508@kbrooks.ath.cx>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

twisted.web.client.getPage, methinks

Chaz. wrote:
> I was wondering if anyone knows of a URLLIB like facility under Twisted?
> 
> Chaz
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFEo8HuA7t0hsXXeiERApxIAJ0eecHQoTZjTbsiSEkUhOszyARRTgCgxjkb
0GGEktzIVQZh13vHgPACYOE=
=aog7
-----END PGP SIGNATURE-----



From moe at divmod.com  Thu Jun 29 10:43:17 2006
From: moe at divmod.com (Moe Aboulkheir)
Date: Thu, 29 Jun 2006 18:43:17 +0200
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <44A3E7EE.905@gmail.com>
Message-ID: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>

On Thu, 29 Jun 2006 10:47:10 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>I was wondering if anyone knows of a URLLIB like facility under Twisted?

twisted.web.client (see getPage() and HTTPPageGetter)



From eprparadocs at gmail.com  Thu Jun 29 11:25:06 2006
From: eprparadocs at gmail.com (Chaz.)
Date: Thu, 29 Jun 2006 13:25:06 -0400
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>
References: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>
Message-ID: <44A40CF2.6000304@gmail.com>

Moe Aboulkheir wrote:
> On Thu, 29 Jun 2006 10:47:10 -0400, "Chaz." <eprparadocs at gmail.com> wrote:
>> I was wondering if anyone knows of a URLLIB like facility under Twisted?
> 
> twisted.web.client (see getPage() and HTTPPageGetter)
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

twisted.web.client will getPage() pull down files via FTP as well? I
don't see that any where in the documentation, so I am assuming no. Am I
wrong?

Chaz



From glyph at divmod.com  Thu Jun 29 12:33:33 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 14:33:33 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606290941.10479.Tzahi.ML@gmail.com>
Message-ID: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>

On Thu, 29 Jun 2006 09:41:09 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>On Thursday 29 June 2006 02:21, glyph at divmod.com wrote:

>> Have you actually measured the size of the PB data you are thinking about
>> compressing?  PB's serialization tends to be extremely tight.

>Yes, it's about 20megabytes of data (~20000 records).

You are aware that PB has a 640kb-per-message limit, right?  You'll have to be breaking up that data set.



From glyph at divmod.com  Thu Jun 29 12:37:50 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 14:37:50 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606291121.40954.Tzahi.ML@gmail.com>
Message-ID: <20060629183750.29014.400839100.divmod.quotient.15409@ohm>



On Thu, 29 Jun 2006 11:21:40 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>More so, it is possible to add meta information per call, like encryption
>or tags for tracing etc... or if the server is loaded or, for example,
>use a server in between to handle compression by looking at the meta
>tag. Could be very useful. I'll need to do some testing to see what
>is better.

No.  PB doesn't have any facility like that (nor for per-message compression).  It tries to abstract the wire as much as possible; its communication model is between objects witth methods, not byte streams or message processors.

You could probably add a type-byte to jelly to do something like this but I certainly don't have the motivation personally :).  Patches accepted...




From Tzahi.ML at gmail.com  Thu Jun 29 13:01:22 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Thu, 29 Jun 2006 22:01:22 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
Message-ID: <200606292201.22504.Tzahi.ML@gmail.com>

On Thursday 29 June 2006 21:33, glyph at divmod.com wrote:
> On Thu, 29 Jun 2006 09:41:09 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >On Thursday 29 June 2006 02:21, glyph at divmod.com wrote:
> >> Have you actually measured the size of the PB data you are thinking
> >> about compressing?  PB's serialization tends to be extremely tight.
> >
> >Yes, it's about 20megabytes of data (~20000 records).
>
> You are aware that PB has a 640kb-per-message limit, right?  You'll have to
> be breaking up that data set.

No, that is new to me. I cannot break it up. 
can it be done using that writeSequence or Write in the ProtocolWrapper? 
I don't want to handle this on the application/PB level.
I can see though that this is confined to the banana.py and cbanana,
i can change it there as a last resort, right?
640kb looks arbitrary to me, times is changing, what was considered
large in the past is small in the present. At the very least it should be 
configurable.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From itamar at itamarst.org  Thu Jun 29 13:31:17 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 29 Jun 2006 15:31:17 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606292201.22504.Tzahi.ML@gmail.com>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
	<200606292201.22504.Tzahi.ML@gmail.com>
Message-ID: <1151609477.6005.12.camel@localhost.localdomain>

On Thu, 2006-06-29 at 22:01 +0300, Tzahi Fadida wrote:

> I don't want to handle this on the application/PB level.

twisted.spread.util.Pager and subclasses thereof will do it for you.






From Tzahi.ML at gmail.com  Thu Jun 29 15:34:18 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Fri, 30 Jun 2006 00:34:18 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <1151609477.6005.12.camel@localhost.localdomain>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>
	<200606292201.22504.Tzahi.ML@gmail.com>
	<1151609477.6005.12.camel@localhost.localdomain>
Message-ID: <200606300034.19124.Tzahi.ML@gmail.com>

On Thursday 29 June 2006 22:31, Itamar Shtull-Trauring wrote:
> On Thu, 2006-06-29 at 22:01 +0300, Tzahi Fadida wrote:
> > I don't want to handle this on the application/PB level.
>
> twisted.spread.util.Pager and subclasses thereof will do it for you.
First, the objects themselves hold , for a example, a list of records.
The records themselves are probably never going to exceed 640kb.
Looking at banana it looks at the string types per field. I.e. even if the 
message is 1gb but each field in the message, like a list of strings 
[str1,str2,...] does not exceed 640kb then there is no problem, right?

Assumming there is a problem:
I don't see how using Pager, going to not involve circumventing a PB
call. This should be done under the level of performing a call to the other 
side. As i said, i cannot break the arbitrary objects i am sending since i 
cannot predict each and every one of them in advance.
The proper way to do it, looks to me in the underlying communication.
I think that what should have been done was to send the size of the transfer
in advance and only then say "ok, this transfer is going to be over 640kb
don't want it." Or " ok the transmission has exceeded 640kb => error"
And, according to this number and policy i enforce, limiting the size of the 
expanded message, pass a parameter to banana.
For now, i think that i will set the limit parameter for banana.py
pb.banana.SIZE_LIMIT=20*1024*1024 
however, for cBanana i will have to either hardwire it or change it to include
it as a parameter. This is not a variable in cBanana, it just says 640*1024
instead of SIZE_LIMIT.
How can i pass parameters to cBanana (at least at initialization time),
i am not sure if it is even on.
Though i am seeing it in the directory:
/usr/lib/python2.4/site-packages/twisted/spread/cBanana.so
Maybe there should be something like pb.changeMessageSizeLimit(numBytes)

>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From paul-lists at perforge.com  Thu Jun 29 18:15:45 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 20:15:45 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com>
	<449ED3E9.40802@gmail.com> <14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
	<44A2702D.10705@gmail.com>
Message-ID: <1509501c69bda$54e99d90$6302a8c0@dcore>

chaz,

quick note: please don't top post (in replies to me, anyway). just common 
courtesy.

in my context, the solution was meant as a synchronization method with some 
application-level logic to be used instead of rsync (i didn't need 
differencing and needed some complicated candidacy logic). the pb client 
simply opened multiple connections and sent data chunks labelled with chunk 
id and object id, multiplexed over the connection pool, with the chunks 
being pulled out of a queue that a threadpool reading from disk and 
optionally gzipping data was writing to. i didn't need to write logic to 
grow the connection pool to maximize bandwidth (i easily saturated a 
fast-e), but that would be trivial.

note: i do not advocate doing this unless there is a very good reason 
existing tools won't work for your application. reinventing the wheel makes 
baby jesus cry.

-p

----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Paul G" <paul-lists at perforge.com>
Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Wednesday, June 28, 2006 8:03 AM
Subject: Re: [Twisted-Python] Need words of wisdom regarding PB


> Paul,
>
> Thanks for the information. I hadn't thought about multiple pb
> connections, but I might even for my low-latency environment. I can have
> files that range from very small to very very large and getting them
> transferred in a reasonable period of time might might require many
> connections at once.
>
> In your solution did you just allow the client to "divide" up the work
> or was there something else you did?
>
> Chaz
>
> Paul G wrote:
>>
>> ----- Original Message ----- From: "Chaz." <eprparadocs at gmail.com>
>> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
>> Sent: Sunday, June 25, 2006 2:20 PM
>> Subject: [Twisted-Python] Need words of wisdom regarding PB
>>
>>
>>> I have a problem to solve: I need to get files from one machine to
>>> another. I had thought about all the obvious solutions (and implemented
>>> some of them); for instance adding an FTP server to my Twisted services
>>> and using a client. I thought about doing the file transfer with XML-RPC
>>> and even SOAP. And I even thought of WebDav.
>>>
>>> I started reading about PB and thought it might be useful. I thought
>>> about building a "remote" class that simulates open and all its
>>> functions, like read, write, close, etc.
>>>
>>> The more I thought about it the more I thought it cool and the way to do
>>> it. That got me thinking that I must be missing something. I am curious
>>> about what you might think of this approach. Is there another better 
>>> way?
>>
>> i implemented file transfer with an optional intermediate gzip stage
>> using pb a long while ago. if you're dealing with fairly low latency, a
>> single pb connection is fine; for higher latencies, you'll want to
>> multiplex multiple pb connections (this has to do with tcp, not pb).
>> with my quick hack, i was able to saturate a fast-e with virtually no
>> significant cpu utilization - the disk io and the network were the
>> bottlenecks.
>>
>> -p
>>
> 




From paul-lists at perforge.com  Thu Jun 29 18:18:14 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 20:18:14 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <540D2944-35C7-4DEE-BC42-C1B2B1EE7E50@confmon.com><449ED3E9.40802@gmail.com>
	<14b4f01c69aa9$1bf79a00$6302a8c0@dcore>
	<200606281539.50051.Tzahi.ML@gmail.com>
Message-ID: <1509c01c69bda$adf26e80$6302a8c0@dcore>

tzahi,

it saddens me to say that you can't get it. the reason is simple: i can't 
get it either. i'd erroneously thought the code was backed up before i wiped 
a box, but that was not the case :( it is now lost, along with some other 
semi-useful stuff.

with that said, i don't think it would've been useful for what you were 
attempting - i was compressing the data before sending it over pb, while you 
seem to be interested in doing this automagically at the pb or transport 
level.

-p

----- Original Message ----- 
From: "Tzahi Fadida" <Tzahi.ML at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Wednesday, June 28, 2006 8:39 AM
Subject: Re: [Twisted-Python] Need words of wisdom regarding PB


On Wednesday 28 June 2006 14:50, Paul G wrote:
> i implemented file transfer with an optional intermediate gzip stage using
> pb a long while ago. if you're dealing with fairly low latency, a single 
> pb
> connection is fine; for higher latencies, you'll want to multiplex 
> multiple
> pb connections (this has to do with tcp, not pb). with my quick hack, i 
> was
> able to saturate a fast-e with virtually no significant cpu utilization -
> the disk io and the network were the bottlenecks.

I am also very much interested in compressing the underlying transfers using
PB. Where can we get the hack? :)
I am looking for something that is done after serialization so all features 
of
jelly remains. I.e., just before transfer, compress the data. Preferably 
with
some control, i.e., with each message i send i want to be able to say
if to compress and to what level of compression.

Currently i have to circumvent jelly by pickle and compress but i can only
do that when server sends to client since the client trusts the server.
However the server does not trust the client and thus, cannot allow pickled
objects to be unserialized.

maybe something like callRemoteCompressed...

-- 
Regards,
Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS: see at
http://members.lycos.co.uk/my2nis/spamwarning.html

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 




From glyph at divmod.com  Thu Jun 29 18:44:43 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 20:44:43 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606292201.22504.Tzahi.ML@gmail.com>
Message-ID: <20060630004443.29014.1263770469.divmod.quotient.15669@ohm>



On Thu, 29 Jun 2006 22:01:22 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>No, that is new to me. I cannot break it up.
>can it be done using that writeSequence or Write in the ProtocolWrapper?
>I don't want to handle this on the application/PB level.
>I can see though that this is confined to the banana.py and cbanana,
>i can change it there as a last resort, right?
>640kb looks arbitrary to me, times is changing, what was considered
>large in the past is small in the present. At the very least it should be
>configurable.

Not really.  PB is optimized (heavily optimized) for lots of small control-channel messages.  Serializing 20MB of data with Jelly would probably stop your process for a good 30 seconds, and due to the way that the original Jelly was designed, it cannot be processed incrementally; you will end up allocating something like 100MB of memory just to get the data serialized and the packet sent, if you raise the limit.

Feel free to do so; if multi-second messages and multi-hundred-megabyte memory costs are acceptable to you then you can just change the arbitrary limit.  I won't accept patches to make it easily configurable in Twisted though; IMHO that is just bad design.  You should instead be factoring your data to be produced on demand in a series of messages rather than one giant message.  In addition to lower overall memory cost and more immediate feedback, that has the additional advantage of providing you with a way to interleave other messages on the same channel.



From paul-lists at perforge.com  Thu Jun 29 18:46:35 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 20:46:35 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <20060617002333.29014.1688578471.divmod.quotient.2128@ohm>	<44968DF1.1070504@imperial.ac.uk><4496B139.1070300@gmail.com>
	<4497161B.5090709@imperial.ac.uk> <44975CDA.8070704@gmail.com>
	<14bbc01c69aab$f07173d0$6302a8c0@dcore>
	<44A27B86.3020706@gmail.com>
Message-ID: <150a501c69bde$a43b42f0$6302a8c0@dcore>


----- Original Message ----- 
From: "Chaz." <eprparadocs at gmail.com>
To: "Paul G" <paul-lists at perforge.com>
Cc: "Twisted general discussion" <twisted-python at twistedmatrix.com>; "Phil 
Mayers" <p.mayers at imperial.ac.uk>
Sent: Wednesday, June 28, 2006 8:52 AM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


> If you go to the Spread website and read the documentation and source
> code it mentions both the number of computer limitations and the
> performance hit. Secondly, the system uses a static file to list the
> machines that participate in the communication.
>
> First, it won't support more a 200 computers, or so. It appears that
> deep in the bowels of the code is a byte sized field! The code is pretty
> convoluted, so I never did manage to find out what specifically was the
> field they mentioned. If you are going to build a system that involves a
> hundred machines or less you are probably alright.

yes, for my purposes, a small number is perfectly fine.

> Secondly, as for the performance a search will point out how costly
> reliable group communications are in general. I would suggest you load
> the software up and run the demo, tracking the messaging passing with
> Ethereal. Once this begins to scalable upwards to hundreds of machines
> you will see the problem.

there isn't an incredible amount of cost for baseline group communication. 
the incremental cost is attached to several incremental levels of delivery, 
ordering and consistency guarantees. assuming i wanted delivery guarantees, 
but didn't care about ordering or consistency, i imagine the cost wouldn't 
be much higher than plain udp.

with spread specifically, i would imagine there's also extra cost associated 
with handling the WAN case and paritioning, which i wouldn't need. however, 
that's something i could live with if it weren't too great.

> Third, the configuration of a Spread cluster is fixed based on a config
> file. This was a problem for me; I wanted my system to scale upward by
> just adding a machine to the cluster and not having to change a config
> file and rebooting the daemon machines! It doesn't make for a very
> reliable approach (after all if IM systems could do it why couldn't
> non-IM systems?)

there new version (currently in beta) removes this limitation.


> Now if you think Spread is the way to go, and it might be for small
> clusters of machines, you should do a little research into things like
> the SWIM protocol (of which I am doing a twisted implementation right
> now and will be releasing to the community) or other approaches to
> group-like communication (do a google of overlay networks, which I will
> be also releasing). You will find a lot of relevant information. In fact
> they will probably lead you to a group at Cornell (and a few people
> there) and some people at the U of I at Champaign.

although i hadn't seen swim (doesn't help much, in any case), i've done 
quite a bit of digging andread quite a few papers. i've got several use 
cases i'm trying to find the right solutions for:

1. a lightweight message bus (a la mq) for a cluster of machines on a 
low-latency lan; must be fast, light, usable from python, php and c, not 
implemented in java, and perferably have an async api. this would be used to 
implement a cluster-wide event service.
2. same as above, but with much relaxed requirements for use as a log 
message handling service (think sending apache logs through it to logging 
servers).
3. a lightweight group communications framework which would allow me to 
implement multiple finely tuned semantics for consistency and ordering 
guarantees. this would be used to implement distributed data structures. can 
assume low latency lan environments, doesn't need to care about partitions 
(this would eventually run over myrinet/infiniband/friends).

unfortunately, the preponderance of work done in this area centers around 
'overlay networks', p2p and other such beasts; this introduces complexities 
which make the solutions too heavy for my use. it appears that the stuff 
you're interested in is along the same lines; that doesn't mean it (or you) 
suck(s), just that it's not what i'm looking for ;]

moreover, i would ideally like to use something very thin and hackable; 
spread is already too much of a monolithic black box for use case #3 - the 
dds stuff i want to do would allow me to select consistency guarantees from 
none, to modest to very stringent for each specific case, eg i wouldn't want 
to pay for serialization if i were replacing, say, php's session storage 
stuff and intended to store transient data.

the berkley ninja/sedo stuff is the closest i've seen, but it's in java (not 
a huge problem, since i could port it) and the code appears to be 
unavailable (large, some would say insurmountabl, problem).

if anyone's got any ideas, i'm all ears. it looks like i'll be implementing 
#1 on top of twisted (locally, not for twisted project proper) in the near 
future (unless the dev roadmap changes *again*), so i'm definitely eager to 
hear about alternatives to sticking this on top of pb (not the right tool 
for the job, imho) or spread. in this case, java solutions are out (i'm not 
an anti-java zealot, i won't discuss the reasoning here).

-p 




From glyph at divmod.com  Thu Jun 29 18:53:05 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 20:53:05 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <1151609477.6005.12.camel@localhost.localdomain>
Message-ID: <20060630005305.29014.1873368250.divmod.quotient.15677@ohm>



On Thu, 29 Jun 2006 15:31:17 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2006-06-29 at 22:01 +0300, Tzahi Fadida wrote:

>> I don't want to handle this on the application/PB level.

>twisted.spread.util.Pager and subclasses thereof will do it for you.

I should emphasize that not only do these classes help with this sort of functionality; every PB application I'm aware of that had to transfer bulk data over the main channel worked this way.  It's not like you're going to be in any new territory or implementing a large raft of functionality yourself.



From glyph at divmod.com  Thu Jun 29 19:00:21 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 29 Jun 2006 21:00:21 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
In-Reply-To: <1509c01c69bda$adf26e80$6302a8c0@dcore>
Message-ID: <20060630010021.29014.1083855316.divmod.quotient.15687@ohm>

On Thu, 29 Jun 2006 20:18:14 -0400, Paul G <paul-lists at perforge.com> wrote:

>i was compressing the data before sending it over pb, while you 
>seem to be interested in doing this automagically at the pb or transport 
>level.

This is, nevertheless, generally the correct way to compress data in PB.  PB itself is so low-overhead that compression isn't going to buy you much in terms of overhead reduction, and jellying/unjellying something that is already a byte sequence is a waste of time.  compress the data, transfer blocks of compressed data as PB strings - the strings are incredibly low overhead and length-prefixed so there isn't any real parsing overhead.



From paul-lists at perforge.com  Thu Jun 29 19:25:31 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 21:25:31 -0400
Subject: [Twisted-Python] Need words of wisdom regarding PB
References: <20060630010021.29014.1083855316.divmod.quotient.15687@ohm>
Message-ID: <150c901c69be4$14289310$6302a8c0@dcore>


----- Original Message ----- 
From: <glyph at divmod.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Thursday, June 29, 2006 9:00 PM
Subject: Re: [Twisted-Python] Need words of wisdom regarding PB


> On Thu, 29 Jun 2006 20:18:14 -0400, Paul G <paul-lists at perforge.com> 
> wrote:
>
>>i was compressing the data before sending it over pb, while you seem to be 
>>interested in doing this automagically at the pb or transport level.
>
> This is, nevertheless, generally the correct way to compress data in PB. 
> PB itself is so low-overhead that compression isn't going to buy you much 
> in terms of overhead reduction, and jellying/unjellying something that is 
> already a byte sequence is a waste of time.  compress the data, transfer 
> blocks of compressed data as PB strings - the strings are incredibly low 
> overhead and length-prefixed so there isn't any real parsing overhead.

oh, i agree of course, not to mention the fact that compression (and disk 
reads, if you have any) has to be performed in a threadpool. i wasn't 
commenting on the validity of the OP's approach one way or another, since 
one usually needs to have thick skin to handle the resultant acrimony or a 
lot of free time to participate in the ensuing back-and-forth ;]

-p




From paul-lists at perforge.com  Thu Jun 29 19:29:59 2006
From: paul-lists at perforge.com (Paul G)
Date: Thu, 29 Jun 2006 21:29:59 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
Message-ID: <150dc01c69be4$b42ffb50$6302a8c0@dcore>


----- Original Message ----- 
From: "Bruce Mitchener" <bruce at cubik.org>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Wednesday, June 28, 2006 10:56 AM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


> Phil Mayers wrote:
> I did have to write my own STOMP protocol implementation as the existing 
> one for Python is not up to snuff.  I may be able to release it back to 
> the ActiveMQ people, but I'm not entirely sure yet.

what were the problems with the existing implementation? is your 
implementation integrated with twisted? more info (and even... gasp... 
source) would be very sweet, seeing as this looks like my best option for 
certain things at the moment.

-p 




From sflist at ihonk.com  Thu Jun 29 19:41:05 2006
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 29 Jun 2006 18:41:05 -0700
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1128956792.9046.9.camel@localhost.localdomain>
References: <1128956792.9046.9.camel@localhost.localdomain>
Message-ID: <1151631666.6281.29.camel@lothar>

On Mon, 2005-10-10 at 11:06 -0400, Itamar Shtull-Trauring wrote:
> wxreactor in Twisted 2.1 uses threadedselectreactor. This means that wx
> apps ought to use wxreactor, not TSR directly; there are some issues
> with vanilla TSR wx integration that are also present in wxreactor, but
> will be fixed in future versions of wxreactor.
> 
> What's broken (there may be more):
> 1. reactor shutdown events aren't handled correctly (e.g. Deferred
> returned from during-shutdown event).
> 2. Signal handling for e.g. Ctrl-C is caught by wx, not twisted.
> 
> In order to get these fixed I need your help. I have a version of
> wxreactor that *probably* fixes these in Subversion trunk. You can try
> it out by running doc/core/examples/wxdemo.py. Hitting Ctrl-C, choosing
> Exit from the menu or closing the menu all should have the same effect -
> the application logs "shutting down in 0.3 seconds...", "2", "1", "0"
> then exits. In addition, "Hello world" should continue to be printed
> while the dialog box is open or you are holding down a menu.
> 
> Please try this out, and report success or failure at
> <http://twistedmatrix.com/bugs/issue1235>. I'm especially interested to
> hear if it works on Windows or Mac OS X. Please include your OS and
> version of wxPython/wxWidgets when submitting reports.

Hi Itamar,

So, rushing in where, ahh, somebody else fears to tread, I've decided to
use wx and Twisted on a project. Any updates on this I should know
about? Anything I can help you with? I'm noticing my own cheesie hello
world (PythonCard's 'counter' example all cozy snuggly with wxreactor)
doesn't quit on a ctrl-c with Twisted 2.2.0 on Debian unstable -- not
really sure what that means, just thought I'd mention it.

Steve





From bruce at cubik.org  Thu Jun 29 23:57:04 2006
From: bruce at cubik.org (Bruce Mitchener)
Date: Thu, 29 Jun 2006 23:57:04 -0600
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <150dc01c69be4$b42ffb50$6302a8c0@dcore>
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
	<150dc01c69be4$b42ffb50$6302a8c0@dcore>
Message-ID: <44A4BD30.7030308@cubik.org>

Paul G wrote:
> Bruce Mitchener wrote:
>> I did have to write my own STOMP protocol implementation as the 
>> existing one for Python is not up to snuff.  I may be able to release 
>> it back to the ActiveMQ people, but I'm not entirely sure yet.
> 
> what were the problems with the existing implementation? is your 
> implementation integrated with twisted? more info (and even... gasp... 
> source) would be very sweet, seeing as this looks like my best option 
> for certain things at the moment.

I did two sorts of Twisted integration, first, I use it have a Protocol 
subclass.  Secondly, I have it using deferreds for request/reply type stuff.

The main problem that I recall with the existing code was that it 
assumed that it could just do a blocking read and get everything read in 
at once.  This clearly isn't true as a STOMP message may span multiple 
read()s from the network (and happens quite regularly under load).

I need to check with work about releasing it.  I'll try to do that 
tomorrow, but things are pretty crazy, so it might not happen until next 
week after the holiday.

But really, it is a pretty simple protocol.  The main tricks are in 
handling partial messages correctly.

The other way would be to look at the C++ OpenWire and STOMP 
implementations and think about wrapping one of them with SWIG.  I 
didn't go that route yet, but may for performance/features in the future.

  - Bruce



From nico at tekNico.net  Fri Jun 30 00:57:10 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Fri, 30 Jun 2006 08:57:10 +0200
Subject: [Twisted-Python] Re: Compressing PB communication
In-Reply-To: <200606300034.19124.Tzahi.ML@gmail.com>
References: <20060629183333.29014.986272444.divmod.quotient.15408@ohm>	<200606292201.22504.Tzahi.ML@gmail.com>	<1151609477.6005.12.camel@localhost.localdomain>
	<200606300034.19124.Tzahi.ML@gmail.com>
Message-ID: <44A4CB46.5070509@tekNico.net>

> How can i pass parameters to cBanana (at least at initialization time),
> i am not sure if it is even on.

http://twistedmatrix.com/pipermail/twisted-python/2005-September/011343.html
http://twistedmatrix.com/pipermail/twisted-python/2004-December/009158.html

-- 
Nicola Larosa - http://www.tekNico.net/

[Python] insists upon arranging the cupboard into strict rows, but you
stop noticing after a while, and eventually you come to prefer your
shelves organized this way. Your friends think this is weird until
they start dating Python too. -- Meredith L. Patterson, March 2006





From p.mayers at imperial.ac.uk  Fri Jun 30 02:08:59 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Jun 2006 09:08:59 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <150dc01c69be4$b42ffb50$6302a8c0@dcore>
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
	<150dc01c69be4$b42ffb50$6302a8c0@dcore>
Message-ID: <44A4DC1B.8070002@imperial.ac.uk>

>> Phil Mayers wrote:
>> I did have to write my own STOMP protocol implementation as the 
>> existing one for Python is not up to snuff.  I may be able to release 
>> it back to the ActiveMQ people, but I'm not entirely sure yet.

I wrote no such thing!



From p.mayers at imperial.ac.uk  Fri Jun 30 02:11:30 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Jun 2006 09:11:30 +0100
Subject: [Twisted-Python] Twisted-friendly Message bus
In-Reply-To: <44A298B5.3090900@cubik.org>
References: <4492DB72.2050903@imperial.ac.uk> <44A298B5.3090900@cubik.org>
Message-ID: <44A4DCB2.2090706@imperial.ac.uk>

Bruce Mitchener wrote:
> Phil Mayers wrote:
>> I've run into "this service needs to know about this event from this 
>> other service" once too often. It's message bus time, baby.
> 
> I ran into similar problems at work where we had been using PB but found 
> that it did not perform to expectation (or requirement).
> 
> I've replaced the bulk of our PB communications with a STOMP[1] protocol 
> implementation to talk to with ActiveMQ[2] servers.  This has been great 
> and I can easily push over 10000 messages/second now.

Bruce,

Thanks, this is very helpful. STOMP and ActiveMQ were two of the things 
I looked at after sending my original query, though I must admit to 
being turned off by the Java-based servers. But as you say, if it works. 
I'll take a look, thanks.



From p.mayers at imperial.ac.uk  Fri Jun 30 02:15:27 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Jun 2006 09:15:27 +0100
Subject: [Twisted-Python] URLLIB under twisted...
In-Reply-To: <44A40CF2.6000304@gmail.com>
References: <20060629164317.29014.393310013.divmod.quotient.15315@ohm>
	<44A40CF2.6000304@gmail.com>
Message-ID: <44A4DD9F.9080505@imperial.ac.uk>

Chaz. wrote:
> 
> twisted.web.client will getPage() pull down files via FTP as well? I
> don't see that any where in the documentation, so I am assuming no. Am I
> wrong?

No it will not pull down FTP URLs.



From paul-lists at perforge.com  Fri Jun 30 02:30:31 2006
From: paul-lists at perforge.com (Paul G)
Date: Fri, 30 Jun 2006 04:30:31 -0400
Subject: [Twisted-Python] Twisted-friendly Message bus
References: <4492DB72.2050903@imperial.ac.uk>
	<44A298B5.3090900@cubik.org><150dc01c69be4$b42ffb50$6302a8c0@dcore>
	<44A4DC1B.8070002@imperial.ac.uk>
Message-ID: <1516701c69c1f$73686ae0$6302a8c0@dcore>


----- Original Message ----- 
From: "Phil Mayers" <p.mayers at imperial.ac.uk>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Friday, June 30, 2006 4:08 AM
Subject: Re: [Twisted-Python] Twisted-friendly Message bus


>>> Phil Mayers wrote:
>>> I did have to write my own STOMP protocol implementation as the existing 
>>> one for Python is not up to snuff.  I may be able to release it back to 
>>> the ActiveMQ people, but I'm not entirely sure yet.
>
> I wrote no such thing!

apologies, i'm handicapped with outlook express these two weeks and didn't 
check the quotations for sanity. bruce mitchener wrote that of course.

-p 




From Tzahi.ML at gmail.com  Fri Jun 30 03:24:43 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Fri, 30 Jun 2006 12:24:43 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060630004443.29014.1263770469.divmod.quotient.15669@ohm>
References: <20060630004443.29014.1263770469.divmod.quotient.15669@ohm>
Message-ID: <200606301224.43672.Tzahi.ML@gmail.com>

On Friday 30 June 2006 03:44, glyph at divmod.com wrote:
> On Thu, 29 Jun 2006 22:01:22 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
> >No, that is new to me. I cannot break it up.
> >can it be done using that writeSequence or Write in the ProtocolWrapper?
> >I don't want to handle this on the application/PB level.
> >I can see though that this is confined to the banana.py and cbanana,
> >i can change it there as a last resort, right?
> >640kb looks arbitrary to me, times is changing, what was considered
> >large in the past is small in the present. At the very least it should be
> >configurable.
>
> Not really.  PB is optimized (heavily optimized) for lots of small
> control-channel messages.  Serializing 20MB of data with Jelly would
> probably stop your process for a good 30 seconds, and due to the way that
> the original Jelly was designed, it cannot be processed incrementally; you
> will end up allocating something like 100MB of memory just to get the data
> serialized and the packet sent, if you raise the limit.

30 seconds of doing what? serializing?
Let me try something else, what if i want to replace jelly with pickle for
a special Server and Client factory for sending messages from the Server to
the client only. If the client sends a message to the server, they must
be jellied. The idea is that you are consciously saying that the client 
completely trust the server.
I think this is a good idea for some security model that also want performance 
and resource savings. 

>
> Feel free to do so; if multi-second messages and multi-hundred-megabyte
> memory costs are acceptable to you then you can just change the arbitrary
> limit.  I won't accept patches to make it easily configurable in Twisted
> though; IMHO that is just bad design.  You should instead be factoring your
> data to be produced on demand in a series of messages rather than one giant
> message.  In addition to lower overall memory cost and more immediate
> feedback, that has the additional advantage of providing you with a way to
> interleave other messages on the same channel.

I don't understand, you are saying that twisted does not send portions, i.e.
it is blocking? that doesn't sound right to me, even if i send 20mb of data
it should be portioned and let other transfer also get the chance.
I was under the impression that twisted is multiplexing even on the channel 
level. I can, of course, always open 2 channels but this is evil.

>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From schneider at gl-systemhaus.de  Fri Jun 30 04:25:07 2006
From: schneider at gl-systemhaus.de (Christian Schneider)
Date: Fri, 30 Jun 2006 12:25:07 +0200
Subject: [Twisted-Python] LineOnlyReceiver does not notice when connection's
	failing
Message-ID: <C5F18921-9F7B-4AFD-BB45-E9C9A1CDB7FE@gl-systemhaus.de>

Hi all,

I've got a twisted application that uses a LineOnlyReceiver as its  
protocol. All connections between clients and my server are open  
ended so I have to be sure they are working correctly. However, when  
I disrupt the network connection between a client and the server, the  
server happily keeps writing to the connection while the client  
closes its part and re-connects again.

I am using sendLine to send the data but have also tried  
transport.write and transport.writeSomeData but with these no data is  
being sent at all!

So, anyone knows what I have to do to get signalled when writing to a  
connection fails?

Any help would be very welcome.

Thanks,

chris



From general at eepatents.com  Fri Jun 30 09:59:56 2006
From: general at eepatents.com (Ed Suominen)
Date: Fri, 30 Jun 2006 08:59:56 -0700
Subject: [Twisted-Python] sAsync 0.1
In-Reply-To: <1151531286.4932.5.camel@wkv1.zmaxsolutions.com>
References: <e7ugki$pup$1@sea.gmane.org> <e7uieq$10e$1@sea.gmane.org>
	<1151531286.4932.5.camel@wkv1.zmaxsolutions.com>
Message-ID: <44A54A7C.5070804@eepatents.com>

Version 0.1 of sAsync, "SQLAlchemy Done Asynchronously" has been
released at http://foss.eepatents.com/sAsync. It provides a
Twisted-compatible way to use SQLAlchemy.

There are now some usage examples at
http://foss.eepatents.com/sAsync/wiki/Examples thanks to some people who
are apparently already using the package.

"sAsync offers asynchronous access to the outstanding SQLAlchemy package
by Michael Bayer. It is built around an 'access broker' object that
provides a priority-queued asynchronous interface to database accesses.
By wrapping your database-access methods in a @transact decorator, you
can put the underlying method call in a queue with whatever scheduling
priority you designate and immediately obtain a Deferred object that
references the eventual result of the database transaction. The access
broker also includes structure for convenient and integrated table
setup, startup, and shutdown.

"The package also provides higher-level SQLAlchemy enhancements
including persistent item storage with deferred read and write results,
and a persistent dictionary-like object using that storage. Text
indexing and searching, again with deferred 'behind the scenes'
processing, will be included at some point."



From glyph at divmod.com  Fri Jun 30 10:08:03 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 30 Jun 2006 12:08:03 -0400
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <200606301224.43672.Tzahi.ML@gmail.com>
Message-ID: <20060630160803.29014.1273028000.divmod.quotient.16545@ohm>

On Fri, 30 Jun 2006 12:24:43 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:
>On Friday 30 June 2006 03:44, glyph at divmod.com wrote:
>> On Thu, 29 Jun 2006 22:01:22 +0300, Tzahi Fadida <tzahi.ml at gmail.com> wrote:

>> Not really.  PB is optimized (heavily optimized) for lots of small
>> control-channel messages.  Serializing 20MB of data with Jelly would
>> probably stop your process for a good 30 seconds, and due to the way that
>> the original Jelly was designed, it cannot be processed incrementally; you
>> will end up allocating something like 100MB of memory just to get the data
>> serialized and the packet sent, if you raise the limit.
>
>30 seconds of doing what? serializing?

Yeah.  This is just an estimate, of course, but passing 20 megabytes of structured data through jelly is going to be really slow.  It definitely should be faster, but nobody really has the inclination; people with harder performance requirements tend to just go use other protocols rather than improve PB, as Bruce mentioned with STOMP.

>Let me try something else, what if i want to replace jelly with pickle for
>a special Server and Client factory for sending messages from the Server to
>the client only. If the client sends a message to the server, they must
>be jellied. The idea is that you are consciously saying that the client
>completely trust the server.
>I think this is a good idea for some security model that also want performance
>and resource savings.

I don't think this is particularly a good idea, but then, it's an idea that has less and less to do with PB all the time.  You're talking about implementing a new protocol that has about two dozen features that PB does not have: support for pluggable serialization mechanisms, message tagging, on the fly compression, chunked encoding of large messages.  Some of these features would require that you change the way ordering guarantees work in PB and the way concurrency interacts with its API.  Maybe you could use some small portion of PB to build this monster of a protocol, but when you're done, you would not be using PB.

I can't see why you need the protocol machinery to do all of this for you.  If I were building this application I'd certainly just use streaming producers and send PB messages (over an existing, unmodified PB) that were of a reasonable size until all the data had been transferred.

Also, designing a protocol where you "completely trust" the other end of the wire, even if it is the "server", is a bad idea.  You should only trust the other end of the wire if every message that it sends is encrypted and signed with a verified certificate, and even that is a stretch.  Using pickle at the protocol level means that during the verification process, you are vulnerable to attacks that use the pickled signature exchange to send you an exploit.

>I don't understand, you are saying that twisted does not send portions, i.e.
>it is blocking? that doesn't sound right to me, even if i send 20mb of data
>it should be portioned and let other transfer also get the chance.
>I was under the impression that twisted is multiplexing even on the channel
>level. I can, of course, always open 2 channels but this is evil.

If you send 20mb of data in a single write() call, that means you have at least 20mb of data sitting in the outbound write buffer until it can all be written, not to mention that the jelly serialization process is going to copy all of your data at least twice.



From itamar at itamarst.org  Fri Jun 30 10:11:28 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Jun 2006 12:11:28 -0400
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151631666.6281.29.camel@lothar>
References: <1128956792.9046.9.camel@localhost.localdomain>
	<1151631666.6281.29.camel@lothar>
Message-ID: <1151683888.5653.1.camel@localhost.localdomain>

The status is that I never got around to merging those improvements. A
severe bout of RSI has cut my computer hours even further recently, so
I'm only likely to be able to do so if I do some pair programming.




From Tzahi.ML at gmail.com  Fri Jun 30 11:11:21 2006
From: Tzahi.ML at gmail.com (Tzahi Fadida)
Date: Fri, 30 Jun 2006 20:11:21 +0300
Subject: [Twisted-Python] Compressing PB communication
In-Reply-To: <20060630160803.29014.1273028000.divmod.quotient.16545@ohm>
References: <20060630160803.29014.1273028000.divmod.quotient.16545@ohm>
Message-ID: <200606302011.21887.Tzahi.ML@gmail.com>

Well,
Lets reset the discussion.
You have convinced me. I'll move all the complexity to the application level.
You are right about the scalability issue so i am inclined to agree with you.
The idea is this:
First, i will use pickled/jellied strings to send objects to the client, all 
the while, using Pagers. If the pickled/jellied string will be too large i 
will dump it to the disk so it won't be in memory.
The main reason i need to use pickle or jelly is that it is hard to know what 
will be the eventual size of a jellied/pickled object (so message<640kb)
and i can't use Pager on arbitrary objects.
I will portion the big objects using some kind of a series of updating tasks.
A bit of a headache though. this is on the application level, probably will 
need to be specified explicitly. However, i was going to do that anyway,
for after sending the initial huge message for synchronization purposes. 
Sending from client to server will have to be done very explicitly, for 
example, an act for transfering documents, act for sending files, act for
mass update for records, etc...
Another headache.

Is there a very very simple example for a client server using PBServerFactory
and ClientFactory and also uses a Pager to send a big string.
10x.

-- 
Regards,
        Tzahi.
--
Tzahi Fadida
Blog: http://tzahi.blogsite.org | Home Site: http://tzahi.webhop.info
WARNING TO SPAMMERS:  see at 
http://members.lycos.co.uk/my2nis/spamwarning.html



From sflist at ihonk.com  Fri Jun 30 11:38:25 2006
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 30 Jun 2006 10:38:25 -0700
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151683888.5653.1.camel@localhost.localdomain>
References: <1128956792.9046.9.camel@localhost.localdomain>
	<1151631666.6281.29.camel@lothar>
	<1151683888.5653.1.camel@localhost.localdomain>
Message-ID: <1151689105.6281.67.camel@lothar>

I'm sorry to hear that, RSI sure is nasty. I had a bad experience with
it myself recently; it only went away after I broke down and bought a
new chair and one of those funky Kinesis keyboards. (Then I spilled
water in the keyboard, but that's another story. We should all thank our
lucky stars every day for water's low boiling point, don't you think?)

So it's question of merging rather than further bug fixing? I looked at
the feedback on the corresponding bug report
<http://twistedmatrix.com/bugs/issue1235> and it seemed like there was
still an issue on the Mac -- did you find a solution for that?

Steve

On Fri, 2006-06-30 at 12:11 -0400, Itamar Shtull-Trauring wrote:
> The status is that I never got around to merging those improvements. A
> severe bout of RSI has cut my computer hours even further recently, so
> I'm only likely to be able to do so if I do some pair programming.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Fri Jun 30 12:18:41 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Jun 2006 14:18:41 -0400
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151689105.6281.67.camel@lothar>
References: <1128956792.9046.9.camel@localhost.localdomain>
	<1151631666.6281.29.camel@lothar>
	<1151683888.5653.1.camel@localhost.localdomain>
	<1151689105.6281.67.camel@lothar>
Message-ID: <1151691521.5653.5.camel@localhost.localdomain>

On Fri, 2006-06-30 at 10:38 -0700, Steve Freitas wrote:

> So it's question of merging rather than further bug fixing?  

Probably. Maybe I'll get JP to help me with it on the weekend.

> I looked at
> the feedback on the corresponding bug report
> <http://twistedmatrix.com/bugs/issue1235> and it seemed like there was
> still an issue on the Mac -- did you find a solution for that?

I think the current version doesn't work on Mac either, so it's
certainly not worse :)




From exarkun at divmod.com  Fri Jun 30 12:43:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 30 Jun 2006 14:43:21 -0400
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <1151691521.5653.5.camel@localhost.localdomain>
Message-ID: <20060630184321.29014.1745226328.divmod.quotient.16713@ohm>

On Fri, 30 Jun 2006 14:18:41 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Fri, 2006-06-30 at 10:38 -0700, Steve Freitas wrote:
>
>> So it's question of merging rather than further bug fixing?
>
>Probably. Maybe I'll get JP to help me with it on the weekend.
>
>> I looked at
>> the feedback on the corresponding bug report
>> <http://twistedmatrix.com/bugs/issue1235> and it seemed like there was
>> still an issue on the Mac -- did you find a solution for that?
>
>I think the current version doesn't work on Mac either, so it's
>certainly not worse :)
>

This is what wxreactor does for me:

  exarkun at charm:/tmp$ trial --reactor wx twisted
  Using twisted.internet.wxreactor reactor
  Running 2741 tests.
  twisted.conch.test.test_cftp
    TestOurServerBatchFile
      testBatchFile ... 
  Traceback (most recent call last):
    File "/usr/lib/python2.4/site-packages/wx-2.6-gtk2-unicode/wx/_core.py", line 13262, in <lambda>
      lambda event: event.callable(*event.args, **event.kw) )
  StopIteration

Both in trunk and in the branch.  I think it needs some more work.  I'm not
really interested in doing it on my own time.  If someone wants to sponsor
the development I might consider it.

Jean-Paul



From sflist at ihonk.com  Fri Jun 30 14:45:05 2006
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 30 Jun 2006 13:45:05 -0700
Subject: [Twisted-Python] Status of wxPython support in Twisted 2.1:
	use wxreactor
In-Reply-To: <20060630184321.29014.1745226328.divmod.quotient.16713@ohm>
References: <20060630184321.29014.1745226328.divmod.quotient.16713@ohm>
Message-ID: <1151700306.6778.11.camel@lothar>

On Fri, 2006-06-30 at 14:43 -0400, Jean-Paul Calderone wrote:
> This is what wxreactor does for me:
> 
>   exarkun at charm:/tmp$ trial --reactor wx twisted
>   Using twisted.internet.wxreactor reactor
>   Running 2741 tests.
>   twisted.conch.test.test_cftp
>     TestOurServerBatchFile
>       testBatchFile ... 
>   Traceback (most recent call last):
>     File "/usr/lib/python2.4/site-packages/wx-2.6-gtk2-unicode/wx/_core.py", line 13262, in <lambda>
>       lambda event: event.callable(*event.args, **event.kw) )
>   StopIteration
> 
> Both in trunk and in the branch.  I think it needs some more work.  I'm not
> really interested in doing it on my own time.  If someone wants to sponsor
> the development I might consider it.

Lemme see what I've got in my wallet... *rooting around* I've got a $20!

It's too bad this continues to have snags -- PythonCard plus Twisted
sure makes a killer combo for easily building cross-platform networked
client apps, much more worthy of the level of praise Rails is getting
than, say, Rails.

Steve




