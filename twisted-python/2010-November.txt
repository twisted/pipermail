From itamar at itamarst.org  Mon Nov  1 08:49:09 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 01 Nov 2010 08:49:09 -0400
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
Message-ID: <1288615749.1625.4.camel@blake>

On Sun, 2010-10-31 at 00:51 +0000, exarkun at twistedmatrix.com wrote:
> Hello all,
> 
> As reported in <http://twistedmatrix.com/trac/ticket/4652>, some 
> problems have arisen with cfreactor.
> 
> First, recent versions of Pyrex reject the Pyrex source for the support 
> modules.  This makes future development on cfreactor difficult (although 
> Glyph's branch does resolve this problem - or at least appears to).

So, the first problem appears to be fixed.

> Second, the C source files do not build with clang.  This seems likely 
> to become more important on future versions of OS X (the only platform 
> where this code matters).  Even OS X 10.6 makes clang easily available 
> (according to an Ars Technica article, "Clang is the recommended 
> compiler, and the focus of all of Apple's future efforts." 
> <http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/9>)

Have you tried seeing if Cython works with Clang? That ought to be a
very minor change to our code.

> Rather than leaving this to chance, I propose that we remove cfreactor 
> and all supporting code ourselves, immediately (ie, in 10.2 - hi therve, 
> go faster next time ;).

This violates our deprecation policy... so I suggest we only do it if
absolutely must, i.e. if Glyph's fixes + Cython don't fix the problem.




From ste at demaledetti.net  Mon Nov  1 08:42:15 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 01 Nov 2010 13:42:15 +0100
Subject: [Twisted-Python] connectionLost never reached after
 calling	loseConnection: stuck in CLOSE_WAIT forever
References: 4CCDA91B.9060807@demaledetti.net
Message-ID: <4CCEB5A7.3030609@demaledetti.net>

Glyph wrote:
> Stefano, this looks like a great contribution: a serious bug fix in a bit of core functionality, with a test.  Thanks so much!


Thank you! It's a pleasure to have one's code be called by code in
the Twisted framework and to get stuff done with it! And it's an
honor to receive support from such a wonderful community, already
ever so enjoyable and enlightening even when just lurking among it!


> I'll try to do a complete review soon, but my immediate impression is that test_disconnectEvent needs a better docstring.  The word 'correctly' in a docstring is always a clue that the writer gave up and stopped trying to describe what 'correct' behavior is :).


Good point, I totally agree with you. "correctly" is most often the
wrong word and a shortcut which leads to unpleasant consequences
once what is "correct" gets better defined later by explicitly
broken behavior.

BTW that line was actually shamelessly copy-pasted from the previous
test's docstring ;P


> if you could try to rephrase it as "When a transport is (...) and then (...), (...) should be called on (...)".
> 
> (I will have a more concrete suggestion, with fewer "..."s when I have time to go through the ticket history and review the patch in detail.)


OK, take two:

This test checks that a protocol gets notified of a lost connection
when its transport has a registered producer writing more than 64KB
to it and is then asked to stopProducing without any more data being
written to it. This ought to prevent that sockets get stuck in
CLOSE_WAIT state when these peculiar conditions occur. See #4719.


Another thing I'm not too sure about is if TCPClientTestsBuilder
("Builder defining tests relating to L{IReactorTCP.connectTCP}.") is
the right class for holding such a test, which is not very related
to connectTCP.


ciao thanks
ste




From exarkun at twistedmatrix.com  Mon Nov  1 09:26:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 01 Nov 2010 13:26:23 -0000
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <1288615749.1625.4.camel@blake>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
	<1288615749.1625.4.camel@blake>
Message-ID: <20101101132623.2040.847258080.divmod.xquotient.437@localhost.localdomain>

On 12:49 pm, itamar at itamarst.org wrote:
>On Sun, 2010-10-31 at 00:51 +0000, exarkun at twistedmatrix.com wrote:
>>Hello all,
>>
>>As reported in <http://twistedmatrix.com/trac/ticket/4652>, some
>>problems have arisen with cfreactor.
>>
>>First, recent versions of Pyrex reject the Pyrex source for the 
>>support
>>modules.  This makes future development on cfreactor difficult 
>>(although
>>Glyph's branch does resolve this problem - or at least appears to).
>
>So, the first problem appears to be fixed.
>>Second, the C source files do not build with clang.  This seems likely
>>to become more important on future versions of OS X (the only platform
>>where this code matters).  Even OS X 10.6 makes clang easily available
>>(according to an Ars Technica article, "Clang is the recommended
>>compiler, and the focus of all of Apple's future efforts."
>><http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/9>)
>
>Have you tried seeing if Cython works with Clang? That ought to be a
>very minor change to our code.

Here are the complete results for all combinations:

        |       trunk        |         branch
        | gcc      | clang   | gcc         | clang
-------------------------------------------------------
Cython  | FTB pyx  | FTB pyx | runLoop err | runLoop err
-------------------------------------------------------
Pyrex   | segfault | FTB c   | runLoop err | runLoop err



  FTB pyx - Failed to build .pyx into .c
  FTB c - Failed to build .c into .so
  segfault - crash during test suite run
  runLoop err - Fails to start reactor because "could not convert 
runLoop"
>>Rather than leaving this to chance, I propose that we remove cfreactor
>>and all supporting code ourselves, immediately (ie, in 10.2 - hi 
>>therve,
>>go faster next time ;).
>
>This violates our deprecation policy... so I suggest we only do it if
>absolutely must, i.e. if Glyph's fixes + Cython don't fix the problem.

Quite so.  It seems like an okay violation to me, since according to the 
table above the best possible behavior cfreactor is able to provide is 
that sometimes it will build and run for a while before segfaulting.

Jean-Paul


From ste at demaledetti.net  Mon Nov  1 10:34:13 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 01 Nov 2010 15:34:13 +0100
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCDA91B.9060807@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
Message-ID: <4CCECFE5.6060607@demaledetti.net>

Il 31/10/2010 18:36, Stefano Debenedetti ha scritto:
> Il 30/10/2010 18:48, Stefano Debenedetti ha scritto:
>> http://twistedmatrix.com/trac/ticket/4719
> 
> I have attached a 2 lines patch that seems to fix the issue.

err, it seems to fix that issue but it introduces another issue:

  File "my/code.py", line 759, in loseConnection
    proto.transport.unregisterProducer()
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
330, in unregisterProducer
    self.startWriting()
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
290, in startWriting
    self.reactor.addWriter(self)
  File "/home/lala/lib/python/twisted/internet/epollreactor.py",
line 107, in addWriter
    self._add(writer, self._writes, self._reads, self._selectables,
_epoll.OUT, _epoll.IN)
  File "/home/lala/lib/python/twisted/internet/epollreactor.py",
line 88, in _add
    self._poller._control(cmd, fd, flags)
  File "_epoll.pyx", line 125, in _epoll.epoll._control

I just saw this appearing once in the logs of my app after I applied
the patch I suggested:

http://twistedmatrix.com/trac/attachment/ticket/4719/avoid_hang_in_CLOSE_WAIT.patch

I'll try to replicate and to figure out what does
FileDescriptor.unregisterProducer need to do instead of the probably
too dumb lines I added there:

if self.disconnecting:
    self.startWriting()

ciao
ste



From ste at demaledetti.net  Mon Nov  1 12:29:48 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 01 Nov 2010 17:29:48 +0100
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCECFE5.6060607@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
	<4CCECFE5.6060607@demaledetti.net>
Message-ID: <4CCEEAFC.5020609@demaledetti.net>

Il 01/11/2010 15:34, Stefano Debenedetti ha scritto:
> I'll try to replicate and to figure out what does
> FileDescriptor.unregisterProducer need to do instead of the probably
> too dumb lines I added there:
> 
> if self.disconnecting:
>     self.startWriting()

Alright, I added a test case that replicates the new error
introduced by the above change and included it in a new proposed fix:

http://twistedmatrix.com/trac/attachment/ticket/4719/avoid_hang_in_CLOSE_WAIT_take2.patch

if self.connected and self.disconnecting:
    self.startWriting()

This new patch now passes both new unit tests.

Sorry about the noise, if I find any more issues about this I'll
post them to the ticket page instead of polluting the mailing list
with replies to myself.

ciao
ste



From exarkun at twistedmatrix.com  Mon Nov  1 12:31:12 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 01 Nov 2010 16:31:12 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCEEAFC.5020609@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
	<4CCECFE5.6060607@demaledetti.net>
	<4CCEEAFC.5020609@demaledetti.net>
Message-ID: <20101101163112.2040.648231105.divmod.xquotient.480@localhost.localdomain>

On 04:29 pm, ste at demaledetti.net wrote:
>Il 01/11/2010 15:34, Stefano Debenedetti ha scritto:
>>I'll try to replicate and to figure out what does
>>FileDescriptor.unregisterProducer need to do instead of the probably
>>too dumb lines I added there:
>>
>>if self.disconnecting:
>>     self.startWriting()
>
>Alright, I added a test case that replicates the new error
>introduced by the above change and included it in a new proposed fix:
>
>http://twistedmatrix.com/trac/attachment/ticket/4719/avoid_hang_in_CLOSE_WAIT_take2.patch
>
>if self.connected and self.disconnecting:
>    self.startWriting()
>
>This new patch now passes both new unit tests.
>
>Sorry about the noise, if I find any more issues about this I'll
>post them to the ticket page instead of polluting the mailing list
>with replies to myself.

This is really awesome.  Thank you very much. :)

Jean-Paul


From glyph at twistedmatrix.com  Mon Nov  1 16:19:24 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 1 Nov 2010 16:19:24 -0400
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <20101101132623.2040.847258080.divmod.xquotient.437@localhost.localdomain>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
	<1288615749.1625.4.camel@blake>
	<20101101132623.2040.847258080.divmod.xquotient.437@localhost.localdomain>
Message-ID: <0C8CF9DC-A11A-441A-9819-81E4C5588E8E@twistedmatrix.com>


On Nov 1, 2010, at 9:26 AM, exarkun at twistedmatrix.com wrote:

> Quite so.  It seems like an okay violation to me, since according to the 
> table above the best possible behavior cfreactor is able to provide is 
> that sometimes it will build and run for a while before segfaulting.

That table is also non-deterministic.  I've seen different behavior on different machines, which then changed again when I went back to look again.

In no case was I able to get anywhere close to completing a test suite run, though.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101101/ddc6e21d/attachment.htm 

From hijinks at gmail.com  Tue Nov  2 16:11:06 2010
From: hijinks at gmail.com (Mike Zupan)
Date: Tue, 2 Nov 2010 16:11:06 -0400
Subject: [Twisted-Python] Twisted with callInThread
Message-ID: <AANLkTik_RW-YEVy+GbReriWrx7ZYBXSJWJ+5BReqMjV2@mail.gmail.com>

I stripped down my app but this should give you an example of what i'm doing

def run_app(f):
    p = Popen(['/usr/bin/app'],stdout=PIPE)
    while True:
        o = p.stdout.readline()
        if o == '' and p.poll() != None: break

        reactor.callFromThread(f, o)

class Echo(Protocol):
    def connectionMade(self):

        reactor.callInThread(run_app, self.appDataReceived)

    def dataReceived(self, data):
        data = data.strip()
        if data == "getmore":
            print "getmore"

    def appDataReceived(self, u):
        print u

def main():
    factory = Factory()
    factory.protocol = Echo
    reactor.listenTCP(3646, factory)
    reactor.run()

if __name__ == "__main__":
    main()


I have an app which I want to connect in and run a app that
continually spits out data to stdout. Right now my app works but the
issue is when the client exits the socket connection the /usr/bin/app
still continues to run. The more socket connections made the more this
app is still running.

Is there anyway from the Echo Procool to kill the run_app() function?


From itamar at itamarst.org  Tue Nov  2 17:16:20 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 2 Nov 2010 17:16:20 -0400
Subject: [Twisted-Python] Twisted with callInThread
In-Reply-To: <AANLkTik_RW-YEVy+GbReriWrx7ZYBXSJWJ+5BReqMjV2@mail.gmail.com>
References: <AANLkTik_RW-YEVy+GbReriWrx7ZYBXSJWJ+5BReqMjV2@mail.gmail.com>
Message-ID: <a0182cd87bab8d5cb88f95eb8f7496be.squirrel@webmail.zoteca.com>

> I have an app which I want to connect in and run a app that
> continually spits out data to stdout. Right now my app works but the
> issue is when the client exits the socket connection the /usr/bin/app
> still continues to run. The more socket connections made the more this
> app is still running.
>
> Is there anyway from the Echo Procool to kill the run_app() function?

Instead of using run_app (which I assume is in run in a thread?), using
reactor.spawnProcess will let you have the process management integrated
with Twisted:
http://twistedmatrix.com/documents/current/core/howto/process.html



From albert.brandl at weiermayer.com  Wed Nov  3 08:01:14 2010
From: albert.brandl at weiermayer.com (Brandl, Albert)
Date: Wed, 03 Nov 2010 13:01:14 +0100
Subject: [Twisted-Python] Inconsistency in ReconnectingClientFactory
Message-ID: <1288785674.4cd14f0a4e68b@xhost3.wss>

Hi!

The ReconnectingClientFactory class allows to define the instance
variable maxDelay. Its documentation is "Maximum number of seconds
between connection attempts."

maxDelay is used in the retry() method to bound self.delay. But this        
happens in the _first_ step of the calculation of self.delay.
Afterwards, the bounded value is modified again by applying
random.normalvariate to allow for the jitter. This can result in a value
that is considerably bigger than maxDelay.

Is there any reason that maxDelay is not used for bounding the final
result of the calculation of self.delay? If not, the calculation should
be fixed - I'd be happy to file an issue ;-).

Best regards,

Albert
--
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From exarkun at twistedmatrix.com  Wed Nov  3 10:10:59 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 03 Nov 2010 14:10:59 -0000
Subject: [Twisted-Python] Inconsistency in ReconnectingClientFactory
In-Reply-To: <1288785674.4cd14f0a4e68b@xhost3.wss>
References: <1288785674.4cd14f0a4e68b@xhost3.wss>
Message-ID: <20101103141059.2040.393387553.divmod.xquotient.518@localhost.localdomain>

On 12:01 pm, albert.brandl at weiermayer.com wrote:
>Hi!
>
>The ReconnectingClientFactory class allows to define the instance
>variable maxDelay. Its documentation is "Maximum number of seconds
>between connection attempts."
>
>maxDelay is used in the retry() method to bound self.delay. But this
>happens in the _first_ step of the calculation of self.delay.
>Afterwards, the bounded value is modified again by applying
>random.normalvariate to allow for the jitter. This can result in a 
>value
>that is considerably bigger than maxDelay.
>
>Is there any reason that maxDelay is not used for bounding the final
>result of the calculation of self.delay? If not, the calculation should
>be fixed - I'd be happy to file an issue ;-).

One reason to prefer not to have a fixed value as maxDelay is that 
always picking a random values ensures that you'll never have a stampede 
of clients all attempting connections at once.  It might be best to just 
correct the documentation for maxDelay to point out that it's not 
actually a hard maximum, just the average value the maximums will 
cluster around.  That's certainly worth a ticket.

Jean-Paul


From ndbecker2 at gmail.com  Wed Nov  3 21:45:39 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 03 Nov 2010 21:45:39 -0400
Subject: [Twisted-Python] signalfd
Message-ID: <iat383$uqo$1@dough.gmane.org>

On modern linux, signalfd can be used to convert sigchld into an event on a 
file descriptor.  Looks like just what is wanted for processProtocol.

There is also a python interface here:
https://launchpad.net/python-signalfd/+download

This test seems to work for me:

import signalfd
import signal
import subprocess
import select

signalfd.sigprocmask (signalfd.SIG_BLOCK, [signal.SIGCHLD])
fd = signalfd.signalfd (-1, [signal.SIGCHLD])

child = subprocess.Popen (['sleep', '5'])
while True:
    a,b,c, = select.select ([fd], [], [])
    print 'a:', a, 'b:', b, 'c:', c
    if child.poll() != None:
        break




From exarkun at twistedmatrix.com  Wed Nov  3 22:23:38 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 04 Nov 2010 02:23:38 -0000
Subject: [Twisted-Python] signalfd
In-Reply-To: <iat383$uqo$1@dough.gmane.org>
References: <iat383$uqo$1@dough.gmane.org>
Message-ID: <20101104022338.2040.892926715.divmod.xquotient.534@localhost.localdomain>

On 01:45 am, ndbecker2 at gmail.com wrote:
>On modern linux, signalfd can be used to convert sigchld into an event 
>on a
>file descriptor.  Looks like just what is wanted for processProtocol.

It does, indeed.  I'm not sure it's really worth bothering though.  Here 
are the drawbacks of using signalfd():

   - It only works on Linux
   - It works differently on older versions of Linux than on newer 
versions
   - You still can't have another SIGCHLD handler installed that will 
called (so it's not any more cooperative with other library code)

As compared to using SA_RESTART with a normal SIGCHLD handler, this is 
two extra drawbacks.  The advantages of signalfd() are:

    - It's just another fd, so the reactor doesn't need as much special 
support code

But this advantage is negated by the fact that we still need the special 
support code for older versions of Linux and for other platforms.

If anyone's aware of other advantages or drawbacks of one approach or 
the other, it would be interesting to hear about them.  Otherwise, it 
doesn't seem like it's worth changing.

Thanks for the suggestion! :)

Jean-Paul


From foom at fuhm.net  Wed Nov  3 23:51:02 2010
From: foom at fuhm.net (James Y Knight)
Date: Wed, 3 Nov 2010 23:51:02 -0400
Subject: [Twisted-Python] signalfd
In-Reply-To: <20101104022338.2040.892926715.divmod.xquotient.534@localhost.localdomain>
References: <iat383$uqo$1@dough.gmane.org>
	<20101104022338.2040.892926715.divmod.xquotient.534@localhost.localdomain>
Message-ID: <522AFDC2-A343-46B1-BFE4-C15F4725C9C2@fuhm.net>

On Nov 3, 2010, at 10:23 PM, exarkun at twistedmatrix.com wrote:
> On 01:45 am, ndbecker2 at gmail.com wrote:
>> On modern linux, signalfd can be used to convert sigchld into an event 
>> on a
>> file descriptor.  Looks like just what is wanted for processProtocol.
> 
> It does, indeed.  I'm not sure it's really worth bothering though.  Here 
> are the drawbacks of using signalfd():
> 
>   - It only works on Linux
>   - It works differently on older versions of Linux than on newer 
> versions
>   - You still can't have another SIGCHLD handler installed that will 
> called (so it's not any more cooperative with other library code)

Another drawback is that spawned subprocesses will start with SIGCHLD blocked (because the sigprocmask is inherited across fork/exec, like SIG_IGN is, but unlike signal handlers), unless twisted adds a pthread_atfork handler (which there is no way to do from Python, so that'd have to be more custom C code). And even with that, system() would still remain broken, because system() inexplicably doesn't call atfork handlers on linux/glibc (notabug according to glibc maintainers).

Of course, the Twisted process API could unblock SIGCHLD itself before calling exec, but this would leave spawning a process with any other API (subprocess/etc) broken. Many programs will not react well to starting with SIGCHLD blocked.

Since Twisted just recently managed to make spawning subprocesses with non-Twisted APIs actually work right, it'd be quite poor to break that again.

James

From ndbecker2 at gmail.com  Fri Nov  5 13:40:24 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Fri, 05 Nov 2010 13:40:24 -0400
Subject: [Twisted-Python] [newb] daemon question
Message-ID: <ib1fi8$h8p$1@dough.gmane.org>

I have put together a simple twisted server using xmlrpc and process.  I 
want to run this server as a unix daemon.

Specifically, detach from controlling terminal, and redirect stdout, stderr 
to a log file.

What is the easiest approach, and where to look for documentation on this?



From jrennie at gmail.com  Fri Nov  5 13:57:10 2010
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 5 Nov 2010 13:57:10 -0400
Subject: [Twisted-Python] [newb] daemon question
In-Reply-To: <ib1fi8$h8p$1@dough.gmane.org>
References: <ib1fi8$h8p$1@dough.gmane.org>
Message-ID: <AANLkTikjsN+u5HPjnuCPnSaf11nnOYaVrVA9SyQJZzSN@mail.gmail.com>

I often use "nohup" for this sort of thing.  An alternative would be to add
it to /etc/init.d and /etc/rc?.d

Cheers,

Jason

On Fri, Nov 5, 2010 at 1:40 PM, Neal Becker <ndbecker2 at gmail.com> wrote:

> I have put together a simple twisted server using xmlrpc and process.  I
> want to run this server as a unix daemon.
>
> Specifically, detach from controlling terminal, and redirect stdout, stderr
> to a log file.
>
> What is the easiest approach, and where to look for documentation on this?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101105/3040725f/attachment.htm 

From glyph at twistedmatrix.com  Fri Nov  5 14:01:13 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 5 Nov 2010 14:01:13 -0400
Subject: [Twisted-Python] [newb] daemon question
In-Reply-To: <ib1fi8$h8p$1@dough.gmane.org>
References: <ib1fi8$h8p$1@dough.gmane.org>
Message-ID: <190E4712-EDD5-4D75-A115-0FB0189C8AB9@twistedmatrix.com>


On Nov 5, 2010, at 1:40 PM, Neal Becker wrote:

> I have put together a simple twisted server using xmlrpc and process.  I 
> want to run this server as a unix daemon.
> 
> Specifically, detach from controlling terminal, and redirect stdout, stderr 
> to a log file.
> 
> What is the easiest approach, and where to look for documentation on this?

Write your server as a .tac file or twistd plugin, and then run twistd without -n.

See:

<http://twistedmatrix.com/documents/10.1.0/core/howto/application.html>
<http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html>



From superdupont at gmail.com  Fri Nov  5 15:18:07 2010
From: superdupont at gmail.com (Carlos Valiente)
Date: Fri, 5 Nov 2010 19:18:07 +0000
Subject: [Twisted-Python] [newb] daemon question
In-Reply-To: <ib1fi8$h8p$1@dough.gmane.org>
References: <ib1fi8$h8p$1@dough.gmane.org>
Message-ID: <AANLkTinU-CkhhsYgKYes97HB33J74qESec7TB32rNS+C@mail.gmail.com>

On Fri, Nov 5, 2010 at 17:40, Neal Becker <ndbecker2 at gmail.com> wrote:
> I have put together a simple twisted server using xmlrpc and process. ?I
> want to run this server as a unix daemon.

You might want to have a look at daemontools
(http://cr.yp.to/daemontools.html). It will also take care of
restarting your daemons if they die.

C


From erik at letterror.com  Fri Nov  5 18:46:49 2010
From: erik at letterror.com (Erik van Blokland)
Date: Fri, 5 Nov 2010 23:46:49 +0100
Subject: [Twisted-Python] More daemonize() / OSX API /
	USING_FORK_WITHOUT_EXEC_etc.
In-Reply-To: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
Message-ID: <1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>

Hi,

A while back on Oct 13, 2010, at 7:20 PM, James Y Knight wrote:

> You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]
> 
> Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

Deferring OSX API's until after daemonisation was the solution. My test script, fixed by James, works on macbook, but when I run it on a remote OSX server mini, it doesn't. It crashes as before with USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER) . Both machines run the same versions of python, pyobjc, twisted.  Some digging showed that on the mini twisted.application.reactors imports zope.interface, which in turn runs this:
	__import__('pkg_resources').declare_namespace(__name__)
and this causes Carbon to be loaded, before daemonisation. I can't defer loading reactor because I need it to make things tick, so I'm stuck.

Could this be related to http://twistedmatrix.com/trac/ticket/4644 ?
Any clues to why pkg_resources would cause Carbon to load on one machine, but not on another?
Any clues to prevent it these modules from loading?

Local:
  System Version:	Mac OS X 10.6.4 (10F569)
  Kernel Version:	Darwin 10.4.0

Remote:
 System Version:	Mac OS X Server 10.6.4 (10F569)
  Kernel Version:	Darwin 10.4.0

Thanks,
Erik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101105/5b7f829e/attachment.htm 

From ndbecker2 at gmail.com  Fri Nov  5 19:28:24 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Fri, 05 Nov 2010 19:28:24 -0400
Subject: [Twisted-Python] [newb] another process question
Message-ID: <ib23up$e1m$1@dough.gmane.org>

Using this code:
...
    def processEnded(self, reason):
        print "processEnded, task %s, status %s" % (self.task, 
reason.value.exitCode,)

Here is what I get from a normally terminated process
processEnded, task ['sleep', '4']31662, status 0

But now I kill the subprocess, with SIGTERM, and I get:

processEnded, task ['sleep', '15']31663, status None

This seems to disagree with the twisted process doc.
Instead of an exitCode, I seem to have gotten 'None'

.processEnded(status): This is called when the child process has been 
reaped, and receives information about the process' exit status. The status 
is passed in the form of a Failure instance, created with a .value that 
either holds a ProcessDone object if the process terminated normally (it 
died of natural causes instead of receiving a signal, and if the exit code 
was 0), or a ProcessTerminated object (with an .exitCode attribute) if 
something went wrong. This scheme may seem a bit weird, but I trust that it 
proves useful when dealing with exceptions that occur in asynchronous code.





From screwtape at froup.com  Fri Nov  5 21:19:05 2010
From: screwtape at froup.com (Tim Allen)
Date: Sat, 6 Nov 2010 12:19:05 +1100
Subject: [Twisted-Python] [newb] another process question
In-Reply-To: <ib23up$e1m$1@dough.gmane.org>
References: <ib23up$e1m$1@dough.gmane.org>
Message-ID: <20101106011905.GL28416@boombah.thristian.org>

On Fri, Nov 05, 2010 at 07:28:24PM -0400, Neal Becker wrote:
> The status 
> is passed in the form of a Failure instance, created with a .value that 
> either holds a ProcessDone object if the process terminated normally (it 
> died of natural causes instead of receiving a signal, and if the exit code 
> was 0), or a ProcessTerminated object (with an .exitCode attribute) if 
> something went wrong.

The deal is, there are multiple kinds of 'went wrong' in the Unix
process model. One kind (described the documentation you quote above) is
a non-zero exit code; you can test this by running "/bin/false" rather
than "sleep 15" as your test command. Another kind is 'killed by
a signal', in which case the value "returned" by the process encodes the
number of the signal that killed it, rather than a process-defined error
code.

Looking at the source of the ProcessTerminated class mentioned:

    http://twistedmatrix.com/trac/browser/trunk/twisted/internet/error.py#L268

...it looks like killing a process with a signal puts 'None' in the
.exitCode property, and the signal number in the .signal property. The
instance also has a useful str() representation if you just want to log
a sensible error message.


From lvh at laurensvh.be  Fri Nov  5 21:28:55 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 6 Nov 2010 02:28:55 +0100
Subject: [Twisted-Python] Conch as a file transfer server
Message-ID: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>

Hi!


I've figured out vaguely how to use Conch as a file transfer client
thanks to the cftp script. I'm currently trying to adapt the simple
SSH server script example (link below) to do file *serving*. I can't
find any example code that actually does this or documentation on this
subject.

There's conch's test_filetransfer which indeed does have some server
parts, but being unit tests they gloss over a lot of the things I
think I need to know to get this working for an actual file server.
For example, what's the difference between SSHSession and ISession?
They both appear to be 'sessions' in the SSH sense. Why does ISession
not do anything about subsystems? Do I need one if I'm just using a
subsystem and not opening a shell? If so: is it just a stub, or does
it need to implement behavior? I would guess it's just stubs, since
invoking subsystems does not mean opening a shell.

link to the example:
http://twistedmatrix.com/documents/current/conch/examples/index.html#auto0

Ideally, does anyone have any code somewhere that actually serves a file?

thanks in advance,
lvh


From jml at mumak.net  Sat Nov  6 04:55:46 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 6 Nov 2010 08:55:46 +0000
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
Message-ID: <AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>

On Sat, Nov 6, 2010 at 1:28 AM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
...
>
> Ideally, does anyone have any code somewhere that actually serves a file?
>

I don't have minimal code, but in the Launchpad tree there are two
SFTP servers, written with Conch.

$ bzr co lp:launchpad
Look in lib/lp/services/sshserver for the common code;
lib/lp/codehosting/sshserver for one implementation; lib/lp/poppy for
another.

Alternatively:
  http://bazaar.launchpad.net/~launchpad-pqm/launchpad/db-devel/files/head:/lib/lp/codehosting/sshserver/
  http://bazaar.launchpad.net/~launchpad-pqm/launchpad/db-devel/files/head:/lib/lp/services/

Hope this helps,
jml


From erik at letterror.com  Sat Nov  6 07:38:22 2010
From: erik at letterror.com (Erik van Blokland)
Date: Sat, 6 Nov 2010 12:38:22 +0100
Subject: [Twisted-Python] More daemonize() / OSX API /
	USING_FORK_WITHOUT_EXEC_etc.
In-Reply-To: <1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>
Message-ID: <7160792C-008C-4175-B653-0214CED216DD@letterror.com>


On Nov 5, 2010, at 11:46 PM, Erik van Blokland wrote:

> Any clues to why pkg_resources would cause Carbon to load on one machine, but not on another?
> Any clues to prevent it these modules from loading?

FWIW, I found a workaround. The remote machine had setuptools-0.6c11-py2.6.egg, the local machine setuptools-0.6c9-py2.6.egg. Reverting to c9 prevents Carbon to be loaded with pkg_resources, which in turn enables daemonisation. The child happily runs twisted and quartz.

I'd still be interested to see how twisted / daemon / OSX API  is supposed to work with setuptools c11. But I'm happy I can continue.

thanks,
Erik

From facundobatista at gmail.com  Sat Nov  6 14:00:05 2010
From: facundobatista at gmail.com (Facundo Batista)
Date: Sat, 6 Nov 2010 15:00:05 -0300
Subject: [Twisted-Python] Catching all the exceptions in a Twisted
	program
In-Reply-To: <20101025122958.1927.629458651.divmod.xquotient.68@localhost.localdomain>
References: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>
	<20101025122958.1927.629458651.divmod.xquotient.68@localhost.localdomain>
Message-ID: <AANLkTinTDMakiVjD0ZtO6s7YFcabswzXq4f+LUZNUCH-@mail.gmail.com>

On Mon, Oct 25, 2010 at 9:29 AM,  <exarkun at twistedmatrix.com> wrote:

>> ?Is there a better way to do this? ?Actually, this is working correctly,
>> ?but I don't know if it's the right way to do it, and don't want to
>> ?depend of DebugInfo() being called always in this case.
>
> You should add a log observer that watches for errors.
>
> http://twistedmatrix.com/documents/9.0.0/core/howto/logging.html

Thanks Jean-Paul!

Regards,

-- 
.? ? Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/


From glyph at twistedmatrix.com  Sat Nov  6 19:51:08 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 6 Nov 2010 19:51:08 -0400
Subject: [Twisted-Python] More daemonize() / OSX API /
	USING_FORK_WITHOUT_EXEC_etc.
In-Reply-To: <7160792C-008C-4175-B653-0214CED216DD@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>
	<7160792C-008C-4175-B653-0214CED216DD@letterror.com>
Message-ID: <A996A257-D4E9-40A5-A750-355EABC6E2A1@twistedmatrix.com>


On Nov 6, 2010, at 7:38 AM, Erik van Blokland wrote:

> 
> On Nov 5, 2010, at 11:46 PM, Erik van Blokland wrote:
> 
>> Any clues to why pkg_resources would cause Carbon to load on one machine, but not on another?
>> Any clues to prevent it these modules from loading?
> 
> FWIW, I found a workaround. The remote machine had setuptools-0.6c11-py2.6.egg, the local machine setuptools-0.6c9-py2.6.egg. Reverting to c9 prevents Carbon to be loaded with pkg_resources, which in turn enables daemonisation. The child happily runs twisted and quartz.
> 
> I'd still be interested to see how twisted / daemon / OSX API  is supposed to work with setuptools c11. But I'm happy I can continue.

Well, clearly it doesn't work :).

Please feel free to open another ticket.  You are correct in saying that this is related to <http://tm.tl/4644>, but that ticket is specifically about a test, and the proposed solution there is to make the test sensitive.

<http://bugs.python.org/issue7895> was the bug in Python that causes this, which has since been fixed. Although apparently the fix was not quite in time for 2.7, it looks to me like it has been committed to the 2.7 (and 2.6) branches, so perhaps we will see some point-releases which fix it.  So in future versions of Python, Twisted will not be affected by this issue.

However, it may be good to get a workaround in Twisted anyway, for those who have to deal with the combination of older Python / newer Setuptools, or a better fix, like changing the order of daemonization.  So a ticket is definitely worthwhile.



From exarkun at twistedmatrix.com  Sun Nov  7 00:05:22 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Nov 2010 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1289102722.06.1169107615@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101107/7243a753/attachment.htm 

From lvh at laurensvh.be  Sun Nov  7 07:09:28 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 7 Nov 2010 13:09:28 +0100
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
Message-ID: <AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>

Okay, tried to learn something out of that. If I understand correctly
SSHSession is the low-level thing that actually handles SSH-specific
gunk, and ISession is the customizable thing. File transfer was
implemented separately. When something wants file transfer, Conch
tries to adapt the avatar to ISFTPServer instead of ISession. Is that
right?

I've found code that does both (adaptation of a ConchUser
implementation to ISFTPServer and ISession) in unix.py.

thanks
lvh


From jml at mumak.net  Sun Nov  7 07:12:17 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 7 Nov 2010 12:12:17 +0000
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
	<AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
Message-ID: <AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>

On Sun, Nov 7, 2010 at 12:09 PM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> Okay, tried to learn something out of that. If I understand correctly
> SSHSession is the low-level thing that actually handles SSH-specific
> gunk, and ISession is the customizable thing. File transfer was
> implemented separately. When something wants file transfer, Conch
> tries to adapt the avatar to ISFTPServer instead of ISession. Is that
> right?
>

Yeah, that sounds right, although I'm not going to look up the code to
double check.

You want the ISession around to handle non-SFTP connections: shell
requests, command exec etc.

jml


From andrew at bemusement.org  Sun Nov  7 15:55:12 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 8 Nov 2010 07:55:12 +1100
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
	<AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
	<AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>
Message-ID: <20101107205512.GI2463@aihal.home.puzzling.org>

Jonathan Lange wrote:
> On Sun, Nov 7, 2010 at 12:09 PM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> > Okay, tried to learn something out of that. If I understand correctly
> > SSHSession is the low-level thing that actually handles SSH-specific
> > gunk, and ISession is the customizable thing. File transfer was
> > implemented separately. When something wants file transfer, Conch
> > tries to adapt the avatar to ISFTPServer instead of ISession. Is that
> > right?
> >
> 
> Yeah, that sounds right, although I'm not going to look up the code to
> double check.
> 
> You want the ISession around to handle non-SFTP connections: shell
> requests, command exec etc.

...and opening of subsystems, like SFTP, IIRC?

-Andrew.



From lvh at laurensvh.be  Sun Nov  7 16:23:13 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 7 Nov 2010 22:23:13 +0100
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <20101107205512.GI2463@aihal.home.puzzling.org>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
	<AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
	<AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>
	<20101107205512.GI2463@aihal.home.puzzling.org>
Message-ID: <AANLkTi=+iDRzNpHFAL6qQqS9HJ8WFGRsHaZvpraKfBR3@mail.gmail.com>

If I understand correctly, the avatar knows about requestable
subsystems, and SSHSession is the low-level magic required to make
them work.

lvh


From ndbecker2 at gmail.com  Mon Nov  8 08:53:01 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Mon, 08 Nov 2010 08:53:01 -0500
Subject: [Twisted-Python] twisted daemonize problem
Message-ID: <ib8vbu$emb$1@dough.gmane.org>

I try to daemonize twisted, but it uses 100% cpu.

The problem occurs in this code:

def daemonize(log_stdout=False, out_name=None, log_stderr=False, 
err_name=None):
    """
    Turn current process into a daemon
    """
    pid = os.fork()
    if (pid == 0):
##        os.chdir (workdir)
        os.setsid()
        maxfd = os.sysconf("SC_OPEN_MAX")
        for fd in range(0, maxfd):
            try:
                os.close(fd)
            except OSError:   # ERROR (ignore)
                pass

        # Redirect the standard file descriptors to /dev/null.  <<<< HERE's 
THE PROBLEM
        os.open("/dev/null", os.O_RDONLY)    # standard input (0)
        os.open("/dev/null", os.O_RDWR)       # standard output (1)
        os.open("/dev/null", os.O_RDWR)       # standard error (2)


        if (not out_name):
            out_name = gen_name() + '.out'
        if (not err_name):
            err_name = gen_name() + '.err'
        if (log_stdout):
            sys.stdout = logger.logger (out_name)
        if (log_stderr):
            sys.stderr = logger.logger (err_name)
    else:
        print "forked pid", pid
        sys.exit (0)


If I comment out the lines that open /dev/null, everything is OK, but with 
those lines the process uses 100% cpu.

The actual twisted code (not shown) is 
class Spawner(xmlrpc.XMLRPC):
...
    r = Spawner()
    reactor.listenTCP(7080, server.Site(r))
    reactor.run()

This is on linux.



From itamar at itamarst.org  Mon Nov  8 09:08:09 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 08 Nov 2010 09:08:09 -0500
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ib8vbu$emb$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org>
Message-ID: <1289225289.1611.1.camel@blake>

On Mon, 2010-11-08 at 08:53 -0500, Neal Becker wrote:
> I try to daemonize twisted, but it uses 100% cpu.
> 
> The problem occurs in this code:

Why not use twistd, which does all this for you already? E.g. 
http://twistedmatrix.com/documents/10.1.0/core/howto/application.html

or the more sophisticated

http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html



From ndbecker2 at gmail.com  Mon Nov  8 09:49:44 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Mon, 08 Nov 2010 09:49:44 -0500
Subject: [Twisted-Python] twisted daemonize problem
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
Message-ID: <ib92ma$v2l$1@dough.gmane.org>

Itamar Turner-Trauring wrote:

> On Mon, 2010-11-08 at 08:53 -0500, Neal Becker wrote:
>> I try to daemonize twisted, but it uses 100% cpu.
>> 
>> The problem occurs in this code:
> 
> Why not use twistd, which does all this for you already? E.g.
> http://twistedmatrix.com/documents/10.1.0/core/howto/application.html
> 
> or the more sophisticated
> 
> http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html

Because it looks like I need to learn a lot more to use it.  But I'll try.



From marco.giusti at gmail.com  Mon Nov  8 10:18:25 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 8 Nov 2010 16:18:25 +0100
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ib92ma$v2l$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org>
Message-ID: <20101108151825.GC2829@murdoc>

On Mon, Nov 08, 2010 at 09:49:44AM -0500, Neal Becker wrote:
> Itamar Turner-Trauring wrote:
>
>> On Mon, 2010-11-08 at 08:53 -0500, Neal Becker wrote:
>>> I try to daemonize twisted, but it uses 100% cpu.
>>> 
>>> The problem occurs in this code:
>> 
>> Why not use twistd, which does all this for you already? E.g.
>> http://twistedmatrix.com/documents/10.1.0/core/howto/application.html
>> 
>> or the more sophisticated
>> 
>> http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html
>
> Because it looks like I need to learn a lot more to use it.  But I'll try.

It's not difficult or long at all, at least you could read this[1]
thread of few days ago.

[1] http://twistedmatrix.com/pipermail/twisted-python/2010-November/023114.html

m.

-- 
La vera terra dei barbari non ? quella che non ha mai conosciuto
l'arte, ma quella che, disseminata di capolavori, non sa n?
apprezzarli n? conservarli.
		-- Marcel Proust


From ndbecker2 at gmail.com  Mon Nov  8 13:50:38 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Mon, 08 Nov 2010 13:50:38 -0500
Subject: [Twisted-Python] twisted daemonize problem
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
Message-ID: <ib9gq0$c8m$1@dough.gmane.org>

I seem to have things working OK with twistd.

My app is a batch scheduling system that listens for commands via xmlrpc.  
It is very simple at this point, and I'm attaching it.  I would welcome any 
suggestions for improvement, since I'm a newb to twisted, and a lot of this 
was guesswork.

task.py is a seperate file because otherwise pickle doesn't work.  t6.tac is 
the server, and a toy client is client4.py.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: client4.py
Type: text/x-python
Size: 574 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101108/af4f12d8/attachment.py 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: t6.tac
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101108/af4f12d8/attachment.txt 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: task.py
Type: text/x-python
Size: 176 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101108/af4f12d8/attachment-0001.py 

From marco.giusti at gmail.com  Mon Nov  8 15:08:08 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 8 Nov 2010 21:08:08 +0100
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ib9gq0$c8m$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
	<ib9gq0$c8m$1@dough.gmane.org>
Message-ID: <20101108200808.GE2829@murdoc>

On Mon, Nov 08, 2010 at 01:50:38PM -0500, Neal Becker wrote:
> I seem to have things working OK with twistd.
> 
> My app is a batch scheduling system that listens for commands via xmlrpc.  
> It is very simple at this point, and I'm attaching it.  I would welcome any 
> suggestions for improvement, since I'm a newb to twisted, and a lot of this 
> was guesswork.
> 
> task.py is a seperate file because otherwise pickle doesn't work.  t6.tac is 
> the server, and a toy client is client4.py.

If I could you give a suggestion on how to structure the server side of
your program:

The ``Task`` class in a separate file, this is fine, clients could
import the file without the need to import the non useful, for the
client, server code.

All the server logic in a file and a third file for the tap, here a
possible structure:

	procxmlrpc/
		|- client.py
		|- server.py
		`- task.py
	twisted/
		`- plugins/
			`- procxmlrpc_plugin.py

Here the simplified code, all the remaining code goes into ``server.py``

	from procxmlrpc.server import Spawner

	from twisted.web import server
	from twisted.application import service, internet

	application = service.Application("Demo application")
	spawn_server = server.Site(Spawner())
	service = internet.TCPServer(7080, spawn_server)
	service.setServiceParent(application)

m.


-- 
Nessuno come me si ? creato una societ? reale evocando delle ombre; al
punto che la vita dei miei ricordi assorbe il sentimento della mia
vita reale.
				-- Ren? de Chateaubriand, M?moires d'Outre-tombe


From albert.brandl at weiermayer.com  Tue Nov  9 06:49:02 2010
From: albert.brandl at weiermayer.com (Brandl, Albert)
Date: Tue, 09 Nov 2010 12:49:02 +0100
Subject: [Twisted-Python] Inconsistency in ReconnectingClientFactory
Message-ID: <1289303342.4cd9352e3f830@xhost3.wss>

Hi!

Am Mittwoch, den 03-11-2010 um 15:10 schrieb exarkun at twistedmatrix.com:
> One reason to prefer not to have a fixed value as maxDelay is that 
> always picking a random values ensures that you'll never have a stampede 
> of clients all attempting connections at once. 

This should of course be avoided. On the other hand, it is convenient to
have the ability to define a maximum delay (and the name of the variable
suggests that the delay won't be any bigger).

> It might be best to just correct the documentation for maxDelay to point 
> out that it's not actually a hard maximum, just the average value the
> maximums will cluster around.

Maybe it's better to change the calculation such that the random value
is always below maxDelay. If the first parameter to random.normalvariate
is adapted in the right way, the result should always be lower than 
maxDelay.

>  That's certainly worth a ticket.

I'll create one, but leave open how to solve the inconsistency.

Best regards,

Albert

-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



From ndbecker2 at gmail.com  Tue Nov  9 06:58:05 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Tue, 09 Nov 2010 06:58:05 -0500
Subject: [Twisted-Python] twisted daemonize problem
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
	<ib9gq0$c8m$1@dough.gmane.org> <20101108200808.GE2829@murdoc>
Message-ID: <ibbd0d$b28$1@dough.gmane.org>

Thanks for the suggestions.

I'd also like to add authentication, but it seems rather daunting.

Maybe I could just restrict the xmlrpc to listen only on connection from the 
local host?



From marco.giusti at gmail.com  Tue Nov  9 07:53:26 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Tue, 9 Nov 2010 13:53:26 +0100
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ibbd0d$b28$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
	<ib9gq0$c8m$1@dough.gmane.org> <20101108200808.GE2829@murdoc>
	<ibbd0d$b28$1@dough.gmane.org>
Message-ID: <20101109125326.GH2829@murdoc>

On Tue, Nov 09, 2010 at 06:58:05AM -0500, Neal Becker wrote:
> Thanks for the suggestions.
> 
> I'd also like to add authentication, but it seems rather daunting.

You should not. Add basic or digest authentication is really easy. Take
a look at Calderone's Twisted Web in 60 seconds: HTTP authentication[1],
I read the series time ago and I don't remember exactly the content but
the serie is really well written, the best 60 seconds (per episode)
spent to learn the bases of twisted web.

> Maybe I could just restrict the xmlrpc to listen only on connection from the 
> local host?

yes, you could and twisted tap plugin system helps you on this. Just
create a tap plugin with the options you need. An simple example:


	from twisted.python import usage
	from twisted.plugin import IPlugin
    from twisted.application import strports, service

	class Options(usage.Options):

		optParameters = [
				['port', 'p', '80', 'Listen port.', int],
				['interface', 'i', None, 'Interface to which to bind.'],
				]


	class ProcessXMLRPCServiceMaker(object):
		implements(service.IServiceMaker, IPlugin)
		tapname = "processxmlrpc"
		description = "Remote process control in xmlrpc"
		options = Options

		def makeService(self, options):
			factory = ... # XXX
			description = 'tcp:' + str(config['port'])
			if config['interface']:
				description += ':interface=' + config['interface']
			return strports.service(description, factory)


You can setup the server to listen to localhost and prepare a reverse
proxy that require authentication and that accept connections from all
interfaces, as example.

m.

-- 
Dalle virt? che si esigono in un domestico, l'Eccellenza Vostra conosce molti
padroni degni d'esser servitori?
		-- Pierre Augustin Caron de Beaumarchais


From no-reply at rolex.com  Thu Nov 11 20:56:38 2010
From: no-reply at rolex.com (Rolex.com)
Date: Fri, 12 Nov 2010 01:56:38 -0000
Subject: [Twisted-Python] twisted-python@twistedmatrix.com Rolex For You -50%
Message-ID: <mailman.3.1289526999.11746.twisted-python@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101112/9f6675a2/attachment.htm 

From ndbecker2 at gmail.com  Fri Nov 12 15:25:51 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Fri, 12 Nov 2010 15:25:51 -0500
Subject: [Twisted-Python] my batch queue code
Message-ID: <ibk7sf$ogi$1@dough.gmane.org>

My simple batch processing system is moved here:

http://code.google.com/p/batch-queue/

Seems to be reasonably functional.  Any suggestions/contributions 
appreciated.

One thing todo is to add some authentication.  For now the server listens 
for xmlrpc requests and will run any command without authentication.  In my 
current environment (single user system, firewalled), that's not a fatal 
flaw.



From rsgames at inbox.com  Sat Nov 13 22:56:16 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sat, 13 Nov 2010 19:56:16 -0800
Subject: [Twisted-Python] wxReactor Issues
Message-ID: <183F75F0C38.00000278rsgames@inbox.com>

Hello,
My Twisted Python application with wxReactor crashes every time the user exits the application. The OnClose event calls a method that does reactor.stop(). I've ran this through gdb, and have noticed that this is because 2 threads aren't getting closed. What I find strange though, that is if the server closes the connection to the user, the 2 threads exit, and you are able to close the application our properly. I have tried running reactor.disconnectAll() before the reactor.stop() in my OnClose event, with no luck. The client closes the connection to the server, but the threads do not exit. I have also this patch found here (http://twistedmatrix.com/trac/ticket/3948):
if wxreactor.WxReactor.callFromThread is not None:
    oldStop = wxreactor.WxReactor.stop
    def stopFromThread(self):
        reactor.callFromThread(oldStop)
    wxreactor.WxReactor.stop = stopFromThread

This problem occurs when I do and don't call the MainLoop() on the wx.App(). If you all could provide some insight on this, I would be very grateful.
Thank you.

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE


From itamar at itamarst.org  Sat Nov 13 23:21:42 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 13 Nov 2010 23:21:42 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <183F75F0C38.00000278rsgames@inbox.com>
References: <183F75F0C38.00000278rsgames@inbox.com>
Message-ID: <1289708502.1653.1.camel@blake>

On Sat, 2010-11-13 at 19:56 -0800, RSGames Support wrote:
> if wxreactor.WxReactor.callFromThread is not None:
>     oldStop = wxreactor.WxReactor.stop
>     def stopFromThread(self):
>         reactor.callFromThread(oldStop)
>     wxreactor.WxReactor.stop = stopFromThread

Did you try the patch?



From rsgames at inbox.com  Sat Nov 13 23:34:01 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sat, 13 Nov 2010 20:34:01 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289708502.1653.1.camel@blake>
References: <183f75f0c38.00000278rsgames@inbox.com>
Message-ID: <1893DBBAEAC.000002A7rsgames@inbox.com>

Hi,
Yes, I tried the code below with no luck.
The OnClose() event calls this:
def KillSock():
 if wxreactor.WxReactor.callFromThread is not None:
    oldStop = wxreactor.WxReactor.stop
    def stopFromThread(self):
        reactor.callFromThread(oldStop)
    wxreactor.WxReactor.stop = stopFromThread
 reactor.stop()

When I ran this code in gdb, it did not say the two threads exited like they should do.

Thank you.
-Ryan
> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Sat, 13 Nov 2010 23:21:42 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Sat, 2010-11-13 at 19:56 -0800, RSGames Support wrote:
>> if wxreactor.WxReactor.callFromThread is not None:
>>     oldStop = wxreactor.WxReactor.stop
>>     def stopFromThread(self):
>>         reactor.callFromThread(oldStop)
>>     wxreactor.WxReactor.stop = stopFromThread
> 
> Did you try the patch?

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE


From exarkun at twistedmatrix.com  Sun Nov 14 00:05:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Nov 2010 05:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1289711124.44.708059937@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101114/ffaf4910/attachment.htm 

From exarkun at twistedmatrix.com  Sun Nov 14 00:29:45 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Nov 2010 05:29:45 -0000
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <183F75F0C38.00000278rsgames@inbox.com>
References: <183F75F0C38.00000278rsgames@inbox.com>
Message-ID: <20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>

On 03:56 am, rsgames at inbox.com wrote:
>Hello,
>My Twisted Python application with wxReactor crashes every time the 
>user exits the application.

What do you mean when you say "crashes"?  A SIGSEGV is probably due to a 
bug in CPython or (more likely) wxPython.

Jean-Paul
>The OnClose event calls a method that does reactor.stop(). I've ran 
>this through gdb, and have noticed that this is because 2 threads 
>aren't getting closed. What I find strange though, that is if the 
>server closes the connection to the user, the 2 threads exit, and you 
>are able to close the application our properly. I have tried running 
>reactor.disconnectAll() before the reactor.stop() in my OnClose event, 
>with no luck. The client closes the connection to the server, but the 
>threads do not exit. I have also this patch found here 
>(http://twistedmatrix.com/trac/ticket/3948):
>if wxreactor.WxReactor.callFromThread is not None:
>    oldStop = wxreactor.WxReactor.stop
>    def stopFromThread(self):
>        reactor.callFromThread(oldStop)
>    wxreactor.WxReactor.stop = stopFromThread
>
>This problem occurs when I do and don't call the MainLoop() on the 
>wx.App(). If you all could provide some insight on this, I would be 
>very grateful.
>Thank you.
>
>____________________________________________________________
>Send any screenshot to your friends in seconds...
>Works in all emails, instant messengers, blogs, forums and social 
>networks.
>TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for 
>FREE
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From dominic at baudvine.net  Sun Nov 14 10:07:18 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Sun, 14 Nov 2010 16:07:18 +0100
Subject: [Twisted-Python] ProcessProtocol stdin/stdout loop
Message-ID: <4CDFFB26.5050905@baudvine.net>

Hi all,

It appears that I have managed to loop a ProcessProtocol subclass's
transport.write() right back into its outReceived.  It's not directly
called, which leads me to believe that somehow stdin and stdout got tied
up.  Anything thrown at transport.write() doesn't appear to reach the
actual process.  I checked by running `cat > log` through it, the file
'log' is created but remains empty.

I am baffled, but will continue to poke at it.  In the meantime, I'd
love to hear if anyone has a clue as to what I might have messed up.

Thanks,
-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 260 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101114/2724b207/attachment.pgp 

From dominic at baudvine.net  Sun Nov 14 10:09:00 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Sun, 14 Nov 2010 16:09:00 +0100
Subject: [Twisted-Python] ProcessProtocol stdin/stdout loop
In-Reply-To: <4CDFFB26.5050905@baudvine.net>
References: <4CDFFB26.5050905@baudvine.net>
Message-ID: <4CDFFB8C.5060002@baudvine.net>

On 14-11-2010 16:07, Dominic van Berkel wrote:
> Hi all,
> 
> It appears that I have managed to loop a ProcessProtocol subclass's
> transport.write() right back into its outReceived.  It's not directly
> called, which leads me to believe that somehow stdin and stdout got tied
> up.  Anything thrown at transport.write() doesn't appear to reach the
> actual process.  I checked by running `cat > log` through it, the file
> 'log' is created but remains empty.
> 
> I am baffled, but will continue to poke at it.  In the meantime, I'd
> love to hear if anyone has a clue as to what I might have messed up.
> 
> Thanks,

Forgot to mention that the ProcessProtocol instance does receive
whatever the process sends my way.

-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 260 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101114/b7581e9b/attachment-0001.pgp 

From itamar at itamarst.org  Sun Nov 14 10:47:31 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Nov 2010 10:47:31 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>
References: <183F75F0C38.00000278rsgames@inbox.com>
	<20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>
Message-ID: <1289749651.1897.0.camel@blake>

On Sun, 2010-11-14 at 05:29 +0000, exarkun at twistedmatrix.com wrote:
> On 03:56 am, rsgames at inbox.com wrote:
> >Hello,
> >My Twisted Python application with wxReactor crashes every time the 
> >user exits the application.
> 
> What do you mean when you say "crashes"?  A SIGSEGV is probably due to a 
> bug in CPython or (more likely) wxPython.

setDaemon(True) threads often crash on exit...



From itamar at itamarst.org  Sun Nov 14 10:50:01 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Nov 2010 10:50:01 -0500
Subject: [Twisted-Python] ProcessProtocol stdin/stdout loop
In-Reply-To: <4CDFFB26.5050905@baudvine.net>
References: <4CDFFB26.5050905@baudvine.net>
Message-ID: <1289749801.1897.2.camel@blake>

On Sun, 2010-11-14 at 16:07 +0100, Dominic van Berkel wrote:
> Hi all,
> 
> It appears that I have managed to loop a ProcessProtocol subclass's
> transport.write() right back into its outReceived.  It's not directly
> called, which leads me to believe that somehow stdin and stdout got tied
> up.

Can you provide a minimal, self-contained code example demonstrating
this?



From rsgames at inbox.com  Sun Nov 14 12:28:18 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 09:28:18 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>
References: <183f75f0c38.00000278rsgames@inbox.com>
Message-ID: <1F5684815E0.000005B1rsgames@inbox.com>

Hi,
Well, I close the application (by clicking the X). Then a few seconds later, Ubuntu comes up with a dialog asking me if I want to force quit the application. gdb reports the following when I force quit: Program terminated with signal SIGKILL, Killed.

As far as to why it is crashing, I'm almost positive it is because there are two threads that aren't getting stopped properly.
Thank you.

> -----Original Message-----
> From: exarkun at twistedmatrix.com
> Sent: Sun, 14 Nov 2010 05:29:45 -0000
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On 03:56 am, rsgames at inbox.com wrote:
> >Hello,
> >My Twisted Python application with wxReactor crashes every time the
> >user exits the application.
> 
> What do you mean when you say "crashes"?  A SIGSEGV is probably due to a
> bug in CPython or (more likely) wxPython.
> 
> Jean-Paul
> >The OnClose event calls a method that does reactor.stop(). I've ran
> >this through gdb, and have noticed that this is because 2 threads
> >aren't getting closed. What I find strange though, that is if the
> >server closes the connection to the user, the 2 threads exit, and you
> >are able to close the application our properly. I have tried running
> >reactor.disconnectAll() before the reactor.stop() in my OnClose event,
> >with no luck. The client closes the connection to the server, but the
> >threads do not exit. I have also this patch found here
> >(http://twistedmatrix.com/trac/ticket/3948):
> >if wxreactor.WxReactor.callFromThread is not None:
>>    oldStop = wxreactor.WxReactor.stop
>>    def stopFromThread(self):
>>        reactor.callFromThread(oldStop)
>>    wxreactor.WxReactor.stop = stopFromThread
>> 
> >This problem occurs when I do and don't call the MainLoop() on the
> >wx.App(). If you all could provide some insight on this, I would be
> >very grateful.
> >Thank you.
>> 
> >____________________________________________________________
> >Send any screenshot to your friends in seconds...
> >Works in all emails, instant messengers, blogs, forums and social
> >networks.
> >TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for
> >FREE
>> 
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE


From itamar at itamarst.org  Sun Nov 14 14:02:56 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Nov 2010 14:02:56 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1F5684815E0.000005B1rsgames@inbox.com>
References: <183f75f0c38.00000278rsgames@inbox.com>
	<1F5684815E0.000005B1rsgames@inbox.com>
Message-ID: <1289761376.1897.4.camel@blake>

On Sun, 2010-11-14 at 09:28 -0800, RSGames Support wrote:
> Hi,
> Well, I close the application (by clicking the X). Then a few seconds later, Ubuntu comes up with a dialog asking me if I want to force quit the application. gdb reports the following when I force quit: Program terminated with signal SIGKILL, Killed.

That's *not* "crashing", that's "not exiting". The SIGKILL is coming
from the forced kill. So the real issue is, it's not exiting, and it's
not exiting because, as you say, there's still threads running. Does
your program start/use any threads itself?



From rsgames at inbox.com  Sun Nov 14 14:36:13 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 11:36:13 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289761376.1897.4.camel@blake>
References: <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <20746E8FE52.00000663rsgames@inbox.com>

Hi,
Yes, it uses the speechd module on Linux (which uses a thread). The speechd module provided speech output for our visually impaired users. However, when I run the program without speechd at all, I still have this problem. I'm pretty sure it is wxreactor and not speechd that is causing this problem.
Thank you.

> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Sun, 14 Nov 2010 14:02:56 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Sun, 2010-11-14 at 09:28 -0800, RSGames Support wrote:
>> Hi,
>> Well, I close the application (by clicking the X). Then a few seconds
>> later, Ubuntu comes up with a dialog asking me if I want to force quit
>> the application. gdb reports the following when I force quit: Program
>> terminated with signal SIGKILL, Killed.
> 
> That's *not* "crashing", that's "not exiting". The SIGKILL is coming
> from the forced kill. So the real issue is, it's not exiting, and it's
> not exiting because, as you say, there's still threads running. Does
> your program start/use any threads itself?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
FREE 3D MARINE AQUARIUM SCREENSAVER - Watch dolphins, sharks & orcas on your desktop!
Check it out at http://www.inbox.com/marineaquarium


From rsgames at inbox.com  Sun Nov 14 18:12:18 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 15:12:18 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289761376.1897.4.camel@blake>
References: <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <22576880040.00000754rsgames@inbox.com>

Hi,
I think the best way to debug this is to give you all the source code. You can find it here: http://bit.ly/doEiEJ

To give you all some background on this project: It is a freeware client that uses sockets to connect to a multiplayer game server (currently plays Monopoly and Uno). You will immediately notice there are no graphics. That is because this client only provides audio feedback through speech synthesis and sound effects. The target audience of this project is visually impaired gamers. 

To test the issue, run python rsg.py (which can be found in the src folder. In case you need to know, I use Python 2.6.5). In a terminal, you will see the output the program produces (which is mostly what the server sends to our client). Once you see the line "Connection Made" (which should print very shortly after running), try closing the program (by clicking the X). The client will hang for a few seconds, and then you will need to force quit the application (on Ubuntu, it comes up asking if I want to force quit the application). say

It should be noted that this issue does not occur on Windows, only on Linux (I've tested with Ubuntu) and Mac. 

Thank you.
> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Sun, 14 Nov 2010 14:02:56 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Sun, 2010-11-14 at 09:28 -0800, RSGames Support wrote:
>> Hi,
>> Well, I close the application (by clicking the X). Then a few seconds
>> later, Ubuntu comes up with a dialog asking me if I want to force quit
>> the application. gdb reports the following when I force quit: Program
>> terminated with signal SIGKILL, Killed.
> 
> That's *not* "crashing", that's "not exiting". The SIGKILL is coming
> from the forced kill. So the real issue is, it's not exiting, and it's
> not exiting because, as you say, there's still threads running. Does
> your program start/use any threads itself?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if5
Capture screenshots, upload images, edit and send them to your friends
through IMs, post on Twitter?, Facebook?, MySpace?, LinkedIn? ? FAST!


From rsgames at inbox.com  Sun Nov 14 18:34:44 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 15:34:44 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <22576880040.00000754rsgames@inbox.com>
References: <1289761376.1897.4.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <22898DFFDB6.00000769rsgames@inbox.com>

Hi,
I made a mistake in my previous message, this issue is on Windows, Linux and Mac. One of my testers gave me incorrect information.
I apologize.
Thank you.
> -----Original Message-----
> From: rsgames at inbox.com
> Sent: Sun, 14 Nov 2010 15:12:18 -0800
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> Hi,
> I think the best way to debug this is to give you all the source code.
> You can find it here: http://bit.ly/doEiEJ
> 
> To give you all some background on this project: It is a freeware client
> that uses sockets to connect to a multiplayer game server (currently
> plays Monopoly and Uno). You will immediately notice there are no
> graphics. That is because this client only provides audio feedback
> through speech synthesis and sound effects. The target audience of this
> project is visually impaired gamers.
> 
> To test the issue, run python rsg.py (which can be found in the src
> folder. In case you need to know, I use Python 2.6.5). In a terminal, you
> will see the output the program produces (which is mostly what the server
> sends to our client). Once you see the line "Connection Made" (which
> should print very shortly after running), try closing the program (by
> clicking the X). The client will hang for a few seconds, and then you
> will need to force quit the application (on Ubuntu, it comes up asking if
> I want to force quit the application). say
> 
> It should be noted that this issue does not occur on Windows, only on
> Linux (I've tested with Ubuntu) and Mac.
> 
> Thank you.

____________________________________________________________
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if5
Capture screenshots, upload images, edit and send them to your friends
through IMs, post on Twitter?, Facebook?, MySpace?, LinkedIn? ? FAST!


From no-reply at rolex.com  Mon Nov 15 01:13:06 2010
From: no-reply at rolex.com (Rolex.com)
Date: Mon, 15 Nov 2010 06:13:06 -0000
Subject: [Twisted-Python] twisted-python@twistedmatrix.com Rolex For You -50%
Message-ID: <mailman.4.1289801588.11746.twisted-python@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101115/d0424c62/attachment.htm 

From gtvrreddy at gmail.com  Mon Nov 15 12:55:48 2010
From: gtvrreddy at gmail.com (Ramana Reddy)
Date: Mon, 15 Nov 2010 23:25:48 +0530
Subject: [Twisted-Python] Error in twisted-python while running nox-core
Message-ID: <AANLkTi=tqnv1ZG7yzf8dXFKB3afZG98nTBChxTT8oSS=@mail.gmail.com>

Hi Everyone,
I got the following error after running the following command:
./nox_core -i ptcp:6633 switch switch_management hostip hosttracker
monitoring jsonmessenger

NOX 0.9.0(zaku)~full~beta (nox_core), compiled Nov 15 2010 21:36:36
Compiled with OpenFlow 0x01
00001|nox|ERR:Cannot change the state of 'python' to INSTALLED:
'python' ran into an error:
    Unable to construct a Python component:
    Traceback (most recent call last):
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 364, in instance
        return pyoxidereactor(ctxt)
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 133, in __init__
        signal.signal(signal.SIGCHLD, self._handleSigchld)
    AttributeError: 'pyoxidereactor' object has no attribute
'_handleSigchld'

Thanks,
Ramana
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101115/e9cd3fa8/attachment.htm 

From gtvrreddy at gmail.com  Mon Nov 15 12:55:49 2010
From: gtvrreddy at gmail.com (Ramana Reddy)
Date: Mon, 15 Nov 2010 23:25:49 +0530
Subject: [Twisted-Python] Error in twisted-python while running nox-core
Message-ID: <AANLkTinnuGyNn5DKhtD9iX-X0S+5+-immc0-T1DZx9Ts@mail.gmail.com>

Hi Everyone,
I got the following error after running the following command:
./nox_core -i ptcp:6633 switch switch_management hostip hosttracker
monitoring jsonmessenger

NOX 0.9.0(zaku)~full~beta (nox_core), compiled Nov 15 2010 21:36:36
Compiled with OpenFlow 0x01
00001|nox|ERR:Cannot change the state of 'python' to INSTALLED:
'python' ran into an error:
    Unable to construct a Python component:
    Traceback (most recent call last):
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 364, in instance
        return pyoxidereactor(ctxt)
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 133, in __init__
        signal.signal(signal.SIGCHLD, self._handleSigchld)
    AttributeError: 'pyoxidereactor' object has no attribute
'_handleSigchld'

Thanks,
Ramana
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101115/59729f05/attachment.htm 

From exarkun at twistedmatrix.com  Mon Nov 15 13:10:09 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 15 Nov 2010 18:10:09 -0000
Subject: [Twisted-Python] Error in twisted-python while running nox-core
In-Reply-To: <AANLkTi=tqnv1ZG7yzf8dXFKB3afZG98nTBChxTT8oSS=@mail.gmail.com>
References: <AANLkTi=tqnv1ZG7yzf8dXFKB3afZG98nTBChxTT8oSS=@mail.gmail.com>
Message-ID: <20101115181009.2040.445938651.divmod.xquotient.876@localhost.localdomain>

On 05:55 pm, gtvrreddy at gmail.com wrote:
>Hi Everyone,
>I got the following error after running the following command:
>./nox_core -i ptcp:6633 switch switch_management hostip hosttracker
>monitoring jsonmessenger
>
>NOX 0.9.0(zaku)~full~beta (nox_core), compiled Nov 15 2010 21:36:36
>Compiled with OpenFlow 0x01
>00001|nox|ERR:Cannot change the state of 'python' to INSTALLED:
>'python' ran into an error:
>    Unable to construct a Python component:
>    Traceback (most recent call last):
>      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 364, in 
>instance
>        return pyoxidereactor(ctxt)
>      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 133, in 
>__init__
>        signal.signal(signal.SIGCHLD, self._handleSigchld)
>    AttributeError: 'pyoxidereactor' object has no attribute
>'_handleSigchld'

This appears to be caused by nox's use of private Twisted APIs which no 
longer exist.  You can try installing an older version of Twisted or 
updating nox to work with the version you're using now.

Jean-Paul
>Thanks,
>Ramana


From rsgames at inbox.com  Mon Nov 15 22:28:33 2010
From: rsgames at inbox.com (RSGames Support)
Date: Mon, 15 Nov 2010 19:28:33 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <22898DFFDB6.00000769rsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<1289761376.1897.4.camel@blake> <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <3126CE5CFE8.000001FCrsgames@inbox.com>

Hi,
I have created a simple demo (one .py file) to show the problem without the entire application. You can download it here: http://bit.ly/a2TTlT

Thank you for any help in advance.

> -----Original Message-----
> From: rsgames at inbox.com
> Sent: Sun, 14 Nov 2010 15:34:44 -0800
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> Hi,
> I made a mistake in my previous message, this issue is on Windows, Linux
> and Mac. One of my testers gave me incorrect information.
> I apologize.
> Thank you.

____________________________________________________________
Send your photos by email in seconds...
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if3
Works in all emails, instant messengers, blogs, forums and social networks.


From exarkun at twistedmatrix.com  Mon Nov 15 22:58:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 16 Nov 2010 03:58:31 -0000
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <3126CE5CFE8.000001FCrsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<1289761376.1897.4.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
	<3126CE5CFE8.000001FCrsgames@inbox.com>
Message-ID: <20101116035831.2040.161046233.divmod.xquotient.880@localhost.localdomain>

On 03:28 am, rsgames at inbox.com wrote:
>Hi,
>I have created a simple demo (one .py file) to show the problem without 
>the entire application. You can download it here: http://bit.ly/a2TTlT
>
>Thank you for any help in advance.

Linux (Ubuntu 9.10)
Python 2.6.4
Twisted trunk at 30276
wxPython 2.8.10.1-0ubuntu1

The demo exits quickly when I click the window-manager provided close 
window button.

Jean-Paul


From itamar at itamarst.org  Mon Nov 15 23:12:09 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 15 Nov 2010 23:12:09 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <3126CE5CFE8.000001FCrsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<1289761376.1897.4.camel@blake> <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
	<3126CE5CFE8.000001FCrsgames@inbox.com>
Message-ID: <1289880729.1787.0.camel@blake>

On Mon, 2010-11-15 at 19:28 -0800, RSGames Support wrote:
> Hi,
> I have created a simple demo (one .py file) to show the problem without the entire application. You can download it here: http://bit.ly/a2TTlT

And, if you switch reactor.stop() with
reactor.callFromThread(reactor.stop) you still have the problem? What
OS/wx/python/twisted version exhibits the issue for you?



From anuhacks at gmail.com  Tue Nov 16 06:59:48 2010
From: anuhacks at gmail.com (anusha k)
Date: Tue, 16 Nov 2010 17:29:48 +0530
Subject: [Twisted-Python] sample unit testing for xml-rpc's
Message-ID: <AANLkTim92hG+LeZr+XicZ3wuFv28ck0QFx1Ht_=GkDic@mail.gmail.com>

Hello all,

I want to know how to test xml-rpc functions written using python-twisted. I
came across trial framework. But cant find proper information regarding
that.

Can anyone provide info regarding this or sample unit test-case how to test
that.

Thanks in advance



--

Njoy the share of Freedom :)
Anusha Kadambala
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101116/0a4f9911/attachment.htm 

From itamar at itamarst.org  Tue Nov 16 08:25:27 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 16 Nov 2010 08:25:27 -0500
Subject: [Twisted-Python] sample unit testing for xml-rpc's
In-Reply-To: <AANLkTim92hG+LeZr+XicZ3wuFv28ck0QFx1Ht_=GkDic@mail.gmail.com>
References: <AANLkTim92hG+LeZr+XicZ3wuFv28ck0QFx1Ht_=GkDic@mail.gmail.com>
Message-ID: <1289913927.1658.0.camel@blake>

On Tue, 2010-11-16 at 17:29 +0530, anusha k wrote:

> Can anyone provide info regarding this or sample unit test-case how to
> test that.

http://twistedmatrix.com/trac/browser/trunk/twisted/web/test/test_xmlrpc.py may provide some useful examples.



From rsgames at inbox.com  Tue Nov 16 13:00:50 2010
From: rsgames at inbox.com (RSGames Support)
Date: Tue, 16 Nov 2010 10:00:50 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289880729.1787.0.camel@blake>
References: <22576880040.00000754rsgames@inbox.com>
	<3126ce5cfe8.000001fcrsgames@inbox.com>
	<183f75f0c38.00000278rsgames@inbox.com> <1289761376.1897.4.camel@blake>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <38C4899883A.000006E5rsgames@inbox.com>

Hi,
Thank you for the suggestion. Unfortunately, I still have this problem when I call the reactor.callFromThread(reactor.stop). I have this problem with:
OS: Ubuntu 10.04
WX (python-wxgtk2.8): 2.8.10.1-0ubuntu1.2
Twisted: 10.0.0-2ubuntu2
Python: 2.6.5
Here is some output from gdb:
-----------------------------
(gdb) run test.py
Starting program: /usr/bin/python test.py
[Thread debugging using libthread_db enabled]
Started to connect.
[New Thread 0x7fffe8dc1710 (LWP 31902)]
[New Thread 0x7fffe85c0710 (LWP 31903)]
-Output from the server here
-At this time, I try to close the program. It just sits there, and after a few seconds, Ubuntu prompts me to force quit.
[Thread 0x7fffe85c0710 (LWP 31903) exited]
[Thread 0x7fffe8dc1710 (LWP 31902) exited]

Program terminated with signal SIGKILL, Killed.
The program no longer exists.
-----------------------------

Thank you.

> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Mon, 15 Nov 2010 23:12:09 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Mon, 2010-11-15 at 19:28 -0800, RSGames Support wrote:
>> Hi,
>> I have created a simple demo (one .py file) to show the problem without
>> the entire application. You can download it here: http://bit.ly/a2TTlT
> 
> And, if you switch reactor.stop() with
> reactor.callFromThread(reactor.stop) you still have the problem? What

____________________________________________________________
FREE 3D EARTH SCREENSAVER - Watch the Earth right on your desktop!
Check it out at http://www.inbox.com/earth


From rsgames at inbox.com  Tue Nov 16 19:29:49 2010
From: rsgames at inbox.com (RSGames Support)
Date: Tue, 16 Nov 2010 16:29:49 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <38C4899883A.000006E5rsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<3126ce5cfe8.000001fcrsgames@inbox.com> <1289880729.1787.0.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com> <1289761376.1897.4.camel@blake>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <3C29F562CF6.000008B5rsgames@inbox.com>

Hi,
I have found something interesting. When I do not call sys.exit(), and just call this:  reactor.callFromThread(reactor.stop), the program exits properly. I was wondering if it was safe to not call sys.exit()? If so I think the problem is fixed.
Thank you.

> -----Original Message-----
> From: rsgames at inbox.com
> Sent: Tue, 16 Nov 2010 10:00:50 -0800
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> Hi,
> Thank you for the suggestion. Unfortunately, I still have this problem
> when I call the reactor.callFromThread(reactor.stop). I have this problem
> with:
> OS: Ubuntu 10.04
> WX (python-wxgtk2.8): 2.8.10.1-0ubuntu1.2
> Twisted: 10.0.0-2ubuntu2
> Python: 2.6.5
> Here is some output from gdb:
> -----------------------------
> (gdb) run test.py
> Starting program: /usr/bin/python test.py
> [Thread debugging using libthread_db enabled]
> Started to connect.
> [New Thread 0x7fffe8dc1710 (LWP 31902)]
> [New Thread 0x7fffe85c0710 (LWP 31903)]
> -Output from the server here
> -At this time, I try to close the program. It just sits there, and after
> a few seconds, Ubuntu prompts me to force quit.
> [Thread 0x7fffe85c0710 (LWP 31903) exited]
> [Thread 0x7fffe8dc1710 (LWP 31902) exited]
> 
> Program terminated with signal SIGKILL, Killed.
> The program no longer exists.
> -----------------------------
> 
> Thank you.
> 
>> -----Original Message-----
>> From: itamar at itamarst.org
>> Sent: Mon, 15 Nov 2010 23:12:09 -0500
>> To: twisted-python at twistedmatrix.com
>> Subject: Re: [Twisted-Python] wxReactor Issues
>> 
>> On Mon, 2010-11-15 at 19:28 -0800, RSGames Support wrote:
>>> Hi,
>>> I have created a simple demo (one .py file) to show the problem without
>>> the entire application. You can download it here: http://bit.ly/a2TTlT
>> 
>> And, if you switch reactor.stop() with
>> reactor.callFromThread(reactor.stop) you still have the problem? What
> 
> ____________________________________________________________
> FREE 3D EARTH SCREENSAVER - Watch the Earth right on your desktop!
> Check it out at http://www.inbox.com/earth
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
Publish your photos in seconds for FREE
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if4


From itamar at itamarst.org  Tue Nov 16 22:39:26 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 16 Nov 2010 22:39:26 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <3C29F562CF6.000008B5rsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<3126ce5cfe8.000001fcrsgames@inbox.com> <1289880729.1787.0.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com> <1289761376.1897.4.camel@blake>
	<1f5684815e0.000005b1rsgames@inbox.com>
	<3C29F562CF6.000008B5rsgames@inbox.com>
Message-ID: <1289965166.1615.1.camel@blake>

On Tue, 2010-11-16 at 16:29 -0800, RSGames Support wrote:
> Hi,
> I have found something interesting. When I do not call sys.exit(), and just call this:  reactor.callFromThread(reactor.stop), the program exits properly. I was wondering if it was safe to not call sys.exit()? If so I think the problem is fixed.

sys.exit() will raise an exception, SystemExit. It's certainly possible
that raising it will cause problems, though I wouldn't expect it to keep
threads from exiting. It's possible there's some race condition involved
that is less likely to happen due to this change. Regardless, You should
not call it if you're using Twisted (or if you do, it should be called
after reactor.run()).



From ndbecker2 at gmail.com  Wed Nov 17 10:40:10 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 17 Nov 2010 10:40:10 -0500
Subject: [Twisted-Python] signalfd
References: <iat383$uqo$1@dough.gmane.org>
Message-ID: <ic0t0r$c75$1@dough.gmane.org>

One more piece seems available:

http://code.google.com/p/python-atfork/



From foom at fuhm.net  Wed Nov 17 12:10:01 2010
From: foom at fuhm.net (James Y Knight)
Date: Wed, 17 Nov 2010 12:10:01 -0500
Subject: [Twisted-Python] signalfd
In-Reply-To: <ic0t0r$c75$1@dough.gmane.org>
References: <iat383$uqo$1@dough.gmane.org> <ic0t0r$c75$1@dough.gmane.org>
Message-ID: <11342305-7897-43F5-AA0F-74DE7B36DDD7@fuhm.net>

On Nov 17, 2010, at 10:40 AM, Neal Becker wrote:
> One more piece seems available:
> 
> http://code.google.com/p/python-atfork/


Nope, that's not a "real" atfork: it only monkey-patches python's os.fork() function, so it doesn't catch any fork done by C code. So it's not good enough. (but of course, as mentioned previously, pthread_atfork itself isn't good enough either).

See also a comment I wrote on lwn.net recently:
http://lwn.net/Articles/415684/

James

From rsgames at inbox.com  Wed Nov 17 16:56:12 2010
From: rsgames at inbox.com (RSGames Support)
Date: Wed, 17 Nov 2010 13:56:12 -0800
Subject: [Twisted-Python] TextEntry
Message-ID: <476545CB486.000001A2rsgames@inbox.com>

Hi,
I have been using the following code to show the user a TextEntryDialog, that would allow users to enter data in, and press return. Since I've started using Twisted, this doesn't work on Mac OS X. The dialog pops up okay, but you can't actually enter any data into the box. The cursor does not appear. When I click inside the box to try to make it appear, it quickly disappears again.
def handle_input(data):
 prompt=data.replace("+INPUT ","")
 new=wx.TextEntryDialog(global_vars.frame, "", prompt)
 new.Raise()
 if new.ShowModal() == wx.ID_OK:
  socks.sockObj.sendData(new.GetValue())
 else:
  socks.sockObj.sendData("+~!?CANCEL?!~")
  new.Destroy()

Thank you.

____________________________________________________________
Send your photos by email in seconds...
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if3
Works in all emails, instant messengers, blogs, forums and social networks.


From exarkun at twistedmatrix.com  Thu Nov 18 00:00:45 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 18 Nov 2010 05:00:45 -0000
Subject: [Twisted-Python] TextEntry
In-Reply-To: <476545CB486.000001A2rsgames@inbox.com>
References: <476545CB486.000001A2rsgames@inbox.com>
Message-ID: <20101118050045.2040.1837717498.divmod.xquotient.943@localhost.localdomain>

On 17 Nov, 09:56 pm, rsgames at inbox.com wrote:
>Hi,
>I have been using the following code to show the user a 
>TextEntryDialog, that would allow users to enter data in, and press 
>return. Since I've started using Twisted, this doesn't work on Mac OS 
>X. The dialog pops up okay, but you can't actually enter any data into 
>the box. The cursor does not appear. When I click inside the box to try 
>to make it appear, it quickly disappears again.
>def handle_input(data):
>prompt=data.replace("+INPUT ","")
>new=wx.TextEntryDialog(global_vars.frame, "", prompt)
>new.Raise()
>if new.ShowModal() == wx.ID_OK:
>  socks.sockObj.sendData(new.GetValue())
>else:
>  socks.sockObj.sendData("+~!?CANCEL?!~")
>  new.Destroy()

You probably want to avoid modal dialogs (in any toolkit) when 
integrating with Twisted.  The require a reentrant mainloop to 
implement, and no Twisted reactor (ie, mainloop) is reentrant.

Whether or not the fact that this is a modal dialog is actually causing 
this particular problem, I don't know.

Jean-Paul


From rsgames at inbox.com  Thu Nov 18 18:10:24 2010
From: rsgames at inbox.com (RSGames Support)
Date: Thu, 18 Nov 2010 15:10:24 -0800
Subject: [Twisted-Python] TextEntry
In-Reply-To: <20101118050045.2040.1837717498.divmod.xquotient.943@localhost.localdomain>
References: <476545cb486.000001a2rsgames@inbox.com>
Message-ID: <549DC078784.000004CArsgames@inbox.com>

Hi,
Okay. Well that's not so great - these TextEntryDialogs are quite important to the program. Anyway on Windows and Linux, ShowModal() seems to work really well with wxreactor, and it is only Mac OS X that is the problem.
Thank you.
> -----Original Message-----
> From: exarkun at twistedmatrix.com
> Sent: Thu, 18 Nov 2010 05:00:45 -0000
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] TextEntry
> 
> On 17 Nov, 09:56 pm, rsgames at inbox.com wrote:
> >Hi,
> >I have been using the following code to show the user a
> >TextEntryDialog, that would allow users to enter data in, and press
> >return. Since I've started using Twisted, this doesn't work on Mac OS
> >X. The dialog pops up okay, but you can't actually enter any data into
> >the box. The cursor does not appear. When I click inside the box to try
> >to make it appear, it quickly disappears again.
> >def handle_input(data):
> >prompt=data.replace("+INPUT ","")
> >new=wx.TextEntryDialog(global_vars.frame, "", prompt)
> >new.Raise()
> >if new.ShowModal() == wx.ID_OK:
>>  socks.sockObj.sendData(new.GetValue())
> >else:
>>  socks.sockObj.sendData("+~!?CANCEL?!~")
>>  new.Destroy()
> 
> You probably want to avoid modal dialogs (in any toolkit) when
> integrating with Twisted.  The require a reentrant mainloop to
> implement, and no Twisted reactor (ie, mainloop) is reentrant.
> 
> Whether or not the fact that this is a modal dialog is actually causing
> this particular problem, I don't know.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE


From glyph at twistedmatrix.com  Fri Nov 19 09:25:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 19 Nov 2010 09:25:40 -0500
Subject: [Twisted-Python] TextEntry
In-Reply-To: <549DC078784.000004CArsgames@inbox.com>
References: <476545cb486.000001a2rsgames@inbox.com>
	<549DC078784.000004CArsgames@inbox.com>
Message-ID: <CDA7CA4D-D8D8-4127-80DC-1D9490841E40@twistedmatrix.com>

On Nov 18, 2010, at 6:10 PM, RSGames Support wrote:

> Okay. Well that's not so great - these TextEntryDialogs are quite important to the program. Anyway on Windows and Linux, ShowModal() seems to work really well with wxreactor, and it is only Mac OS X that is the problem.

The key word here is "seems".  You will get weird errors on those platforms eventually, you just haven't yet.

Anyway, it's fine to use dialogs with Twisted.  The issue is APIs like ShowModal(), which expect to be able to block.  Instead you should be using Show(), and make your own API that returns a Deferred from your dialog.

Other toolkits allow you to show a modal dialog without blocking your whole program: for example, with GTK, you can pass the gtk.DIALOG_MODAL flag to gtk.Dialog, and then simply call gtk.Dialog.show_all() instead of gtk.Dialog.run().  wxwindows appears to incorrectly conflate the idea of a modal dialog with a particular type of control flow.

(In my personal opinion, modal dialogs are terrible UI anyway, and should be avoided.  You should be able to prompt the user without interrupting everything else they're doing in the program.)



From dripton at ripton.net  Sat Nov 20 10:41:58 2010
From: dripton at ripton.net (David Ripton)
Date: Sat, 20 Nov 2010 10:41:58 -0500
Subject: [Twisted-Python] TextEntry
In-Reply-To: <CDA7CA4D-D8D8-4127-80DC-1D9490841E40@twistedmatrix.com>
References: <476545cb486.000001a2rsgames@inbox.com>	<549DC078784.000004CArsgames@inbox.com>
	<CDA7CA4D-D8D8-4127-80DC-1D9490841E40@twistedmatrix.com>
Message-ID: <4CE7EC46.9080600@ripton.net>

On 11/19/10 09:25, Glyph Lefkowitz wrote:

> (In my personal opinion, modal dialogs are terrible UI anyway, and
> should be avoided.  You should be able to prompt the user without
> interrupting everything else they're doing in the program.)

I agree for 99% of dialogs, but modal dialogs actually make sense for a 
few things.  For example, the "Do you really want to quit the program 
without saving?" dialog in many editors.

-- 
David Ripton    dripton at ripton.net


From exarkun at twistedmatrix.com  Sun Nov 21 00:05:21 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Nov 2010 05:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1290315921.13.1616633412@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101121/72ff8b72/attachment.htm 

From glyph at twistedmatrix.com  Tue Nov 23 00:05:33 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Nov 2010 00:05:33 -0500
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
Message-ID: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>

Despite a brief and unsuccessful attempt by Canadian forces to wrest control
of the Twisted release process, it continues.  The francophone domination of
North America may be inevitable, but it won't happen today.  Coming to you
from an ominous tower above Cambridge, Massachusetts, Twisted 10.2.0,
pre-release 3, is here!

You may - and should! - retrieve it from <
http://twistedmatrix.com/users/glyph/10.2.0pre3/>.

To avoid any further delays in getting this release out, we will be keeping
to a tight schedule.  Unless there are any undiscovered, unfixed regressions
from 10.1.0,* the final release of Twisted 10.2.0 will be made on November
29, 2010.  That is **one week from today.*

**Developers, please install the release now and test with your
applications, so you won't be caught off guard when the final release is
made.

This new pre-release includes important bugfixes and several exciting new
features.  Just since the previous prerelease:

   - A new, simpler, *substantially* more robust CoreFoundation reactor.
   http://tm.tl/1833
   - A plug-in API for adding new types of endpoint descriptions.
   http://tm.tl/4695

Other highlights, since the 10.1 release:

   - Improvements to the implementation of Deferred which should both
   improve performance and fix certain runtime errors with long callback
   chains. http://tm.tl/411
   - Deferred.setTimeout is (finally) gone.  http://tm.tl/1702
   - NetstringReceiver is substantially faster. http://tm.tl/4378

Thanks to everyone who worked on the release automation tools, for making
this release possible.  I can guarantee that if I had to spend a moment
longer on it, it wouldn't have gotten done.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101123/56f9f807/attachment.htm 

From eric.faurot at gmail.com  Wed Nov 24 04:58:25 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 10:58:25 +0100
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
References: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
Message-ID: <AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>

Hi,

I am trying to package it on OpenBSD, and there are quite a number of
regression tests that don't pass there: failures, errors, busy loops,
... 10.0.0 was almost ok in this regard (I slacked on 10.1.0...)
I'm looking into these issues, and I will create tickets for those.

Starting now: http://twistedmatrix.com/trac/ticket/4747

Eric.


From eric.faurot at gmail.com  Wed Nov 24 09:56:46 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 15:56:46 +0100
Subject: [Twisted-Python] [Twisted] #4747:
 tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is broken in many
 ways
In-Reply-To: <055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
References: <046.891948c7fe2b532f0e679106aa0d4d3c@twistedmatrix.com>
	<055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
Message-ID: <AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>

On Wed, Nov 24, 2010 at 3:28 PM, Twisted <trac at twistedmatrix.com> wrote:
> #4747: tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is broken in many
> ways
> ----------------------------+-----------------------------------------------
> ? ? Reporter: ?soyt ? ? ? ?| ? ? ? ? ? Owner: ?soyt
> ? ? ? ? Type: ?regression ?| ? ? ? ? ?Status: ?new
> ? ? Priority: ?normal ? ? ?| ? ? ? Milestone: ?Twisted 10.2
> ? ?Component: ?core ? ? ? ?| ? ? ? ?Keywords:
> ? ? ? Branch: ? ? ? ? ? ? ?| ? Branch_author:
> Launchpad_bug: ? ? ? ? ? ? ?|
> ----------------------------+-----------------------------------------------
> Changes (by exarkun):
>
> ?* owner: ?glyph => soyt
> ?* keywords: ?review =>
>
>
> Comment:
>
> ?Thanks very much for the patch. ?We don't have any OpenBSD machines for
> ?testing, or I suppose we would have noticed this sooner. :)
>
> ?To answer the question of what functionality it provides that's worth
> ?testing... ?`_listOpenFDs` is used by the `reactor.spawnProcess` support
> ?to find out which file descriptors need to be closed so that they aren't
> ?inherited by the child process. ?So, it must work right otherwise the
> ?child may inherit file descriptors you did not want it to inherit. ?This
> ?is an optimization over trying to close (roughly) every integer in the
> ?range (3, RLIMIT_NFILES), where RLIMIT_NFILES is often around 1024.

So in my opinion, the function should really return the list of actually
opened files in all cases, and not fallback to a list of possible
list, otherwise
the test case makes no sense. Of course this means trying all fds as last resort
on platforms that don't provide a simpler way to do it.  Doing it there or
doing it by ignoring EBADF on close() later would be the same, as far as
"suboptimization" is concerned.

Another (nicer?) possibility to achieve the "close non standard fds" would be
to use closefrom().

> ?I don't think the patch is quite correct, since ''at most'' the one extra
> ?`os.listdir` file descriptor should be in the result set. ?Anything more
> ?than that indicates the desired functionality isn't being provided. ?The
> ?more correct test assertion would be that the output is ''either''
> ?range(3) or range(4). ?However, I'm not sure what you mean by the "uses a
> ?pair of interconnected pipes" comment. ?Uses it for what? ?To implement
> ?`os.listdir`?

No, it's much worse :)
While trying to fix the issue, I was surpised to notice that python had 5 opened
fds by default here... After digging a bit further, I found out it is
actually due to
python being linked with libpthread, which installs a pair of pipe at init...

> ?It would be nice if we didn't have to scan and close all of
> ?range(RLIMIT_NFILES) on OpenBSD though. ?Do you know if there is any way
> ?to get this information on that platform?

For the general case no, but for the intended purpose I'd say use closefrom()

Eric.


From exarkun at twistedmatrix.com  Wed Nov 24 10:17:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 24 Nov 2010 15:17:56 -0000
Subject: [Twisted-Python] [Twisted]
	#4747:	tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors
	is broken in	many ways
In-Reply-To: <AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>
References: <046.891948c7fe2b532f0e679106aa0d4d3c@twistedmatrix.com>
	<055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
	<AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>
Message-ID: <20101124151756.2109.2108288771.divmod.xquotient.212@localhost.localdomain>

On 02:56 pm, eric.faurot at gmail.com wrote:
>On Wed, Nov 24, 2010 at 3:28 PM, Twisted <trac at twistedmatrix.com> 
>wrote:
>>#4747: tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is 
>>broken in many
>>ways
>>----------------------------+-----------------------------------------------
>>? ? Reporter: ?soyt ? ? ? ?| ? ? ? ? ? Owner: ?soyt
>>? ? ? ? Type: ?regression ?| ? ? ? ? ?Status: ?new
>>? ? Priority: ?normal ? ? ?| ? ? ? Milestone: ?Twisted 10.2
>>? ?Component: ?core ? ? ? ?| ? ? ? ?Keywords:
>>? ? ? Branch: ? ? ? ? ? ? ?| ? Branch_author:
>>Launchpad_bug: ? ? ? ? ? ? ?|
>>----------------------------+-----------------------------------------------
>>Changes (by exarkun):
>>
>>?* owner: ?glyph => soyt
>>?* keywords: ?review =>
>>
>>
>>Comment:
>>
>>?Thanks very much for the patch. ?We don't have any OpenBSD machines 
>>for
>>?testing, or I suppose we would have noticed this sooner. :)
>>
>>?To answer the question of what functionality it provides that's worth
>>?testing... ?`_listOpenFDs` is used by the `reactor.spawnProcess` 
>>support
>>?to find out which file descriptors need to be closed so that they 
>>aren't
>>?inherited by the child process. ?So, it must work right otherwise the
>>?child may inherit file descriptors you did not want it to inherit. 
>>This
>>?is an optimization over trying to close (roughly) every integer in 
>>the
>>?range (3, RLIMIT_NFILES), where RLIMIT_NFILES is often around 1024.
>
>So in my opinion, the function should really return the list of 
>actually
>opened files in all cases, and not fallback to a list of possible
>list, otherwise
>the test case makes no sense.

Maybe so.  Fortunately the problem really seems only to be with the 
_test_, right?  On OpenBSD the fallback case will really be used, and 
the file descriptors we want to close will be closed?
>Of course this means trying all fds as last resort
>on platforms that don't provide a simpler way to do it.  Doing it there 
>or
>doing it by ignoring EBADF on close() later would be the same, as far 
>as
>"suboptimization" is concerned.

Right, and this is just what should happen on OpenBSD now.
>
>Another (nicer?) possibility to achieve the "close non standard fds" 
>would be
>to use closefrom().
>>?I don't think the patch is quite correct, since ''at most'' the one 
>>extra
>>?`os.listdir` file descriptor should be in the result set. ?Anything 
>>more
>>?than that indicates the desired functionality isn't being provided. 
>>The
>>?more correct test assertion would be that the output is ''either''
>>?range(3) or range(4). ?However, I'm not sure what you mean by the 
>>"uses a
>>?pair of interconnected pipes" comment. ?Uses it for what? ?To 
>>implement
>>?`os.listdir`?
>
>No, it's much worse :)
>While trying to fix the issue, I was surpised to notice that python had 
>5 opened
>fds by default here... After digging a bit further, I found out it is
>actually due to
>python being linked with libpthread, which installs a pair of pipe at 
>init...

Hopefully these are already marked as CLOEXEC, or lots of people would 
already be having lots of problems with them.  Despite that, they should 
be closed by `reactor.spawnProcess` (because that doesn't hurt and it's 
simpler than checking for CLOEXEC).  Then the only problem is that they 
are recreated in the child process and mess up the test's assumptions.

Perhaps another approach to testing this function would be to create a 
file descriptor and assert that:

  - That file descriptor is not open in the child process
  - stdin, stdout, and sterr are open in the child process

Only, without some care, one of the pthread pipe fds might end up 
looking like the probe descriptor, so maybe that can't really work.
>>?It would be nice if we didn't have to scan and close all of
>>?range(RLIMIT_NFILES) on OpenBSD though. ?Do you know if there is any 
>>way
>>?to get this information on that platform?
>
>For the general case no, but for the intended purpose I'd say use 
>closefrom()

closefrom() doesn't appear to help.  Descriptors intended to be kept 
open may be mixed together with descriptors which must be closed.  This 
is because of the `childFDs` parameter to `reactor.spawnProcess`, which 
allows arbitrary file descriptors to be passed to the child.

Jean-Paul


From eric.faurot at gmail.com  Wed Nov 24 12:17:39 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 18:17:39 +0100
Subject: [Twisted-Python] [Twisted] #4747:
 tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is broken in many
 ways
In-Reply-To: <20101124151756.2109.2108288771.divmod.xquotient.212@localhost.localdomain>
References: <046.891948c7fe2b532f0e679106aa0d4d3c@twistedmatrix.com>
	<055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
	<AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>
	<20101124151756.2109.2108288771.divmod.xquotient.212@localhost.localdomain>
Message-ID: <AANLkTikwm_BbFGinhTkmVcg6hhm6rJsPGSy06EPdYsnR@mail.gmail.com>

On Wed, Nov 24, 2010 at 4:17 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:56 pm, eric.faurot at gmail.com wrote:
>> So in my opinion, the function should really return the list of actually
>> opened files in all cases, and not fallback to a list of possible
>> list, otherwise the test case makes no sense.
>
> Maybe so. ?Fortunately the problem really seems only to be with the _test_,
> right? ?On OpenBSD the fallback case will really be used, and the file
> descriptors we want to close will be closed?

Well, actually no... On bsd, the /dev/* files are statically created. So as it
is now, it picks the 64 existing /dev/fd/* files, which is not correct
since higher
fd with a higher number will never be found. This is getting tricky. So if one
can't trust /dev/fd/ on some platform, maybe it should not be tried at all,
or we need to find a way to know at runtime/configure time if this is safe...

>> Of course this means trying all fds as last resort
>> on platforms that don't provide a simpler way to do it. ?Doing it there or
>> doing it by ignoring EBADF on close() later would be the same, as far as
>> "suboptimization" is concerned.
>
> Right, and this is just what should happen on OpenBSD now.

Except for the problem above.

> Hopefully these are already marked as CLOEXEC, or lots of people would
> already be having lots of problems with them. ?Despite that, they should be
> closed by `reactor.spawnProcess` (because that doesn't hurt and it's simpler
> than checking for CLOEXEC). ?Then the only problem is that they are
> recreated in the child process and mess up the test's assumptions.
>
> Perhaps another approach to testing this function would be to create a file
> descriptor and assert that:
>
> ?- That file descriptor is not open in the child process
> ?- stdin, stdout, and sterr are open in the child process
>
> Only, without some care, one of the pthread pipe fds might end up looking
> like the probe descriptor, so maybe that can't really work.

That is closer to what the test is really about : spawnProcess don't leave
an undesired fd opened.

> closefrom() doesn't appear to help. ?Descriptors intended to be kept open
> may be mixed together with descriptors which must be closed. ?This is
> because of the `childFDs` parameter to `reactor.spawnProcess`, which allows
> arbitrary file descriptors to be passed to the child.

Right, I overlooked that.

Oh, I have just thought of another way to test all opened fds in just
one syscall.
It goes like this:

import resource
import select

_poll = [ 0, None ]

def listOpenFDs():
        maxfd = resource.getrlimit(resource.RLIMIT_NOFILE)[0]
        if maxfd != _poll[0]:
                _poll[0] = maxfd
                _poll[1] = select.poll()
                for fd in xrange(maxfd):
                        _poll[1].register(fd)
        return [ d for (d, r) in _poll[1].poll() if r != select.POLLNVAL ]


Eric.


From glyph at twistedmatrix.com  Wed Nov 24 15:28:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 24 Nov 2010 15:28:40 -0500
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>
References: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
	<AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>
Message-ID: <FB0B7A0E-F1B0-4EBD-86D1-9E5FAB588CDD@twistedmatrix.com>

On Nov 24, 2010, at 4:58 AM, Eric Faurot wrote:

> Hi,
> 
> I am trying to package it on OpenBSD, and there are quite a number of
> regression tests that don't pass there: failures, errors, busy loops,
> ... 10.0.0 was almost ok in this regard (I slacked on 10.1.0...)
> I'm looking into these issues, and I will create tickets for those.
> 
> Starting now: http://twistedmatrix.com/trac/ticket/4747
> 
> Eric.

Hi Eric,

Thanks for participating in the release process!  It's very satisfying to actually get some feedback in response to a prerelease ;).

If OpenBSD were a supported platform, a bug like this would cause the release process to stop until it could be addressed; as it is, we will try to merge a bugfix into the release branch if it is available and reviewed in time (before next Monday).  Being a supported platform means that there's a buildbot, and that it shows up on this page: <http://buildbot.twistedmatrix.com/boxes-supported>.  Of course, if OpenBSD were a supported platform, this bug never would have been introduced in the first place, because we would have noticed failing tests immediately!

Does anyone feel like contributing an OpenBSD buildslave, and hopefully also some more expertise for fixing bugs on that platform?  Or, for that matter, any other *BSDs?

-glyph



From eric.faurot at gmail.com  Wed Nov 24 17:57:21 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 23:57:21 +0100
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <FB0B7A0E-F1B0-4EBD-86D1-9E5FAB588CDD@twistedmatrix.com>
References: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
	<AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>
	<FB0B7A0E-F1B0-4EBD-86D1-9E5FAB588CDD@twistedmatrix.com>
Message-ID: <AANLkTim8ALbB6=GSJUkHv9gB0u9czF70Fsj6UbUv8=-h@mail.gmail.com>

On Wed, Nov 24, 2010 at 9:28 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:

> Hi Eric,
>
> Thanks for participating in the release process!  It's very
>  satisfying to actually get some feedback in response to a prerelease
>  ;).
>
> If OpenBSD were a supported platform, a bug like this would cause
> the release process to stop until it could be addressed; as it is,
> we will try to merge a bugfix into the release branch if it is
> available and reviewed in time (before next Monday).  Being a
> supported platform means that there's a buildbot, and that it shows
> up on this page:
> <http://buildbot.twistedmatrix.com/boxes-supported>.  Of course, if
> OpenBSD were a supported platform, this bug never would have been
> introduced in the first place, because we would have noticed failing
> tests immediately!
>
> Does anyone feel like contributing an OpenBSD buildslave, and
> hopefully also some more expertise for fixing bugs on that platform?
> Or, for that matter, any other *BSDs?

Sure. I have a couple of test machines for OpenBSD (amd64 and sparc64)
that are mostly idling, and that could be used for that. I just need
to know the procedure for setting up a buildbot, and I'll see what I
can do.  That would surely help me with the port maintainance.

Eric.


From exarkun at twistedmatrix.com  Thu Nov 25 08:33:39 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 25 Nov 2010 13:33:39 -0000
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
Message-ID: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>

On 24 Nov, 10:57 pm, eric.faurot at gmail.com wrote:
>On Wed, Nov 24, 2010 at 9:28 PM, Glyph Lefkowitz
><glyph at twistedmatrix.com> wrote:
>>Hi Eric,
>>
>>Thanks for participating in the release process!  It's very
>>  satisfying to actually get some feedback in response to a prerelease
>>  ;).
>>
>>If OpenBSD were a supported platform, a bug like this would cause
>>the release process to stop until it could be addressed; as it is,
>>we will try to merge a bugfix into the release branch if it is
>>available and reviewed in time (before next Monday).  Being a
>>supported platform means that there's a buildbot, and that it shows
>>up on this page:
>><http://buildbot.twistedmatrix.com/boxes-supported>.  Of course, if
>>OpenBSD were a supported platform, this bug never would have been
>>introduced in the first place, because we would have noticed failing
>>tests immediately!
>>
>>Does anyone feel like contributing an OpenBSD buildslave, and
>>hopefully also some more expertise for fixing bugs on that platform?
>>Or, for that matter, any other *BSDs?
>
>Sure. I have a couple of test machines for OpenBSD (amd64 and sparc64)
>that are mostly idling, and that could be used for that. I just need
>to know the procedure for setting up a buildbot, and I'll see what I
>can do.  That would surely help me with the port maintainance.

That'd be great.  The machines need to be online basically 100% of the 
time, and be able to make an outgoing TCP connection.  Other than that, 
they'll stay idle except when someone commits to trunk or wants to try 
out a branch before merging.  You can find more detailed instructions on 
the wiki:

  http://twistedmatrix.com/trac/wiki/ContinuousIntegration

Jean-Paul


From eric.faurot at gmail.com  Sat Nov 27 05:58:53 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Sat, 27 Nov 2010 11:58:53 +0100
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>
References: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>
Message-ID: <AANLkTik3bCcHXHY2A-eAKTJZ8PGbdvZVSmwC77hYNYXV@mail.gmail.com>

> That'd be great. ?The machines need to be online basically 100% of the
> time, and be able to make an outgoing TCP connection. ?Other than that,
> they'll stay idle except when someone commits to trunk or wants to try
> out a branch before merging. ?You can find more detailed instructions on
> the wiki:
>
> ?http://twistedmatrix.com/trac/wiki/ContinuousIntegration

I have started setting things up. I would need credentials for
my buildslave. Thanks.

Eric.


From exarkun at twistedmatrix.com  Sun Nov 28 00:05:22 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Nov 2010 05:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1290920722.44.1524529546@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101128/1ddcc7a8/attachment.htm 

From zooko at zooko.com  Mon Nov 29 02:30:07 2010
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Mon, 29 Nov 2010 00:30:07 -0700
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.8.1
Message-ID: <AANLkTinU=MMyMFP+aOeC8aA05QsOt0v8R6FvEoX0Sk6v@mail.gmail.com>

Folks:

Tahoe-LAFS uses Twisted extensively, and we try to contribute a few
patches back to Twisted itself when we can.

Regards,

Zooko


ANNOUNCING Tahoe, the Least-Authority File System, v1.8.1

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.8.1 of Tahoe-LAFS, an extremely
reliable distributed storage system. Get it here:

http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" ? meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.8.0, which was
released September 23, 2010 [1].

v1.8.1 is a stable bugfix release correcting a number of minor
issues. It also includes a modest performance improvement in
downloading, and a fix for a security issue involving HTTP
proxies. See the NEWS file [2] for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.rst file [4].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the twelfth release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports.

Google, Inc. sponsored Tahoe-LAFS development as part of the
Google Summer of Code 2010. They awarded four sponsorships to
students from around the world to hack on Tahoe-LAFS that
summer.

Thank you to Allmydata and Google for their generous and
public-spirited support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that we feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the sixth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

David-Sarah Hopwood and Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

November 28, 2010
Rainhill, Merseyside, UK and Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4747
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=4854
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.rst
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=4797
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/


From exarkun at twistedmatrix.com  Mon Nov 29 09:10:00 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 29 Nov 2010 14:10:00 -0000
Subject: [Twisted-Python] OpenBSD build slave (was Re: Announcing
	Twisted	10.2.0pre3!)
In-Reply-To: <AANLkTik3bCcHXHY2A-eAKTJZ8PGbdvZVSmwC77hYNYXV@mail.gmail.com>
References: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>
	<AANLkTik3bCcHXHY2A-eAKTJZ8PGbdvZVSmwC77hYNYXV@mail.gmail.com>
Message-ID: <20101129141000.2109.1618233059.divmod.xquotient.1687@localhost.localdomain>

On 27 Nov, 10:58 am, eric.faurot at gmail.com wrote:
>>That'd be great. ?The machines need to be online basically 100% of the
>>time, and be able to make an outgoing TCP connection. ?Other than 
>>that,
>>they'll stay idle except when someone commits to trunk or wants to try
>>out a branch before merging. ?You can find more detailed instructions 
>>on
>>the wiki:
>>
>>?http://twistedmatrix.com/trac/wiki/ContinuousIntegration
>
>I have started setting things up. I would need credentials for
>my buildslave. Thanks.

I'll mail these to you off-list.

Jean-Paul


From exarkun at twistedmatrix.com  Mon Nov 29 09:10:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 29 Nov 2010 14:10:24 -0000
Subject: [Twisted-Python] ANNOUNCING Tahoe,
	the Least-Authority File System, v1.8.1
In-Reply-To: <AANLkTinU=MMyMFP+aOeC8aA05QsOt0v8R6FvEoX0Sk6v@mail.gmail.com>
References: <AANLkTinU=MMyMFP+aOeC8aA05QsOt0v8R6FvEoX0Sk6v@mail.gmail.com>
Message-ID: <20101129141024.2109.1252928043.divmod.xquotient.1688@localhost.localdomain>

On 07:30 am, zooko at zooko.com wrote:
>
>ANNOUNCING Tahoe, the Least-Authority File System, v1.8.1
>
>The Tahoe-LAFS team is pleased to announce the immediate
>availability of version 1.8.1 of Tahoe-LAFS, an extremely
>reliable distributed storage system. Get it here:


Congrats!

Jean-Paul


From david at silveregg.co.jp  Tue Nov 30 01:07:17 2010
From: david at silveregg.co.jp (David)
Date: Tue, 30 Nov 2010 15:07:17 +0900
Subject: [Twisted-Python] twisted.web,
	url -> resource mapping and isLeaf questions
Message-ID: <4CF49495.502@silveregg.co.jp>

Hi,

I am following "twisted in 60sec" series, but even the simple examples 
are a bit unclear to me, especially w.r.t. url mapping. For example:

# assume the right imports...
class MainPage(Resource):
     isLeaf = True
     def render_GET(self, request):
         return "somestring"

resource = MainPage()
factory = Site(resource)
reactor.listenTCP(8880, factory)
reactor.run()

I was expecting that accessing any other 'path' besides the main url 
would cause 404, e.g. "http://localhost:8880/foo/bar", and I get the 
same page instead.

I gather this is a consequence of the isLeaf setting set to be True, 
because twisted.web stops as soon as it encounters MainPage in the 
hierarchy and use that for rendering. Setting it to False seems to avoid 
the page to be available at all. The solution I got instead is something 
like:

class RootPage(Resource):
     isLeaf = False
     def render(self, request):
         return "somestring"

     def getChild(self, path, request):
         if path:
             return NoResource()
         else:
             return self

and adding new resources through putChild. Isn't there a more natural 
way of doing things ?

cheers,

David


From glyph at twistedmatrix.com  Tue Nov 30 01:07:57 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 30 Nov 2010 01:07:57 -0500
Subject: [Twisted-Python] [ANNOUNCE] Twisted 10.2.0 Released
Message-ID: <48EF5F73-CAE0-43CC-89A9-FD273C334E79@twistedmatrix.com>

Twisted 10.2.0, the third Twisted release of 2010, has emerged from the mysterious depths of Twisted Matrix Labs, as so many releases before it.  Survivors of the release process - what few there were of them - have been heard to claim that this version is "awesome", "even more robust", "fun-sized" and "oven fresh".

Crossing several things that shouldn't ought to be, including the streams and the rubicon, I have assumed the triple responsibilities of feature author, project leader, *and* release manager for 10.2: with this dark and terrible power - a power which no man ought to wield alone - I have wrought a release which contains many exciting new features, including:

    - A plug-in API for adding new types of endpoint descriptions. <http://tm.tl/4695>
    - A new, simpler, substantially more robust CoreFoundation reactor.  <http://tm.tl/1833>
    - Improvements to the implementation of Deferred which should both improve performance
      and fix certain runtime errors with long callback chains. <http://tm.tl/411>
    - Deferred.setTimeout is (finally) gone.  To quote the author of this change:
      "A new era of peace has started."  <http://tm.tl/1702>
    - NetstringReceiver is substantially faster. <http://tm.tl/4378>

And, of course, nearly one hundred smaller bug fixes, documentation updates, and general improvements.  See the NEWS file included in the release for more details.

Look upon our Twisted, ye mighty, and make your network applications event-driven: get it now, from:

    <http://twistedmatrix.com/>

... or simply install the 'Twisted' package from PyPI.

Many thanks to Christopher Armstrong, for his work on release-automation tools that made this possible; to Jonathan Lange, for thoroughly documenting the process and thereby making my ascent to the throne of release manager possible, and to Jean-Paul Calderone for his tireless maintenance of our build and test infrastructure as well as his help with the release.

Most of all, thanks to everyone who contributed a patch, reported a bug or reviewed a ticket for 10.2.  Not including those already thanked, there are 41 of you, so it would be a bit tedious to go through everyone, but you know who you are and we absolutely couldn't do it without you!  Thanks a ton!



From glyph at twistedmatrix.com  Tue Nov 30 03:42:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 30 Nov 2010 03:42:40 -0500
Subject: [Twisted-Python] twisted.web,
	url -> resource mapping and isLeaf questions
In-Reply-To: <4CF49495.502@silveregg.co.jp>
References: <4CF49495.502@silveregg.co.jp>
Message-ID: <442A40AD-45A6-4B0F-9D19-A1662C5B57D9@twistedmatrix.com>


On Nov 30, 2010, at 1:07 AM, David wrote:

> Isn't there a more natural way of doing things ?

No.

I'm not sure what you're asking here; it seems like you've figured out the resource model.  It has some rough edges, which we are trying to eventually fix (see, for example, <http://tm.tl/3621>).  But the things you're talking about are just how it works; <http://example.com/> is a collection, just like <http://example.com/foo/>, so it behaves in a consistent way.

(This message may be more appropriate for the twisted-web list.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101130/14c73e4f/attachment.htm 

From jml at mumak.net  Tue Nov 30 04:30:50 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 30 Nov 2010 09:30:50 +0000
Subject: [Twisted-Python] [ANNOUNCE] Twisted 10.2.0 Released
In-Reply-To: <48EF5F73-CAE0-43CC-89A9-FD273C334E79@twistedmatrix.com>
References: <48EF5F73-CAE0-43CC-89A9-FD273C334E79@twistedmatrix.com>
Message-ID: <AANLkTikaet2s=AFqHjuA=MzcSSQUcOQBsrpdzh-_NzBH@mail.gmail.com>

On Tue, Nov 30, 2010 at 6:07 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> Twisted 10.2.0, the third Twisted release of 2010, has emerged from the mysterious depths of Twisted Matrix Labs, as so many releases before it. ?Survivors of the release process - what few there were of them - have been heard to claim that this version is "awesome", "even more robust", "fun-sized" and "oven fresh".
>

Grats!

jml


From david at silveregg.co.jp  Tue Nov 30 04:41:37 2010
From: david at silveregg.co.jp (David)
Date: Tue, 30 Nov 2010 18:41:37 +0900
Subject: [Twisted-Python] twisted.web,
	url -> resource mapping and isLeaf questions
In-Reply-To: <442A40AD-45A6-4B0F-9D19-A1662C5B57D9@twistedmatrix.com>
References: <4CF49495.502@silveregg.co.jp>
	<442A40AD-45A6-4B0F-9D19-A1662C5B57D9@twistedmatrix.com>
Message-ID: <4CF4C6D1.1060809@silveregg.co.jp>

On 11/30/2010 05:42 PM, Glyph Lefkowitz wrote:

> I'm not sure what you're asking here; it seems like you've figured out
> the resource model.

It was not obvious to me I figured it out, I guess :)

> It has some rough edges, which we are trying to
> eventually fix (see, for example, <http://tm.tl/3621>). But the things
> you're talking about are just how it works; <http://example.com/> is a
> collection, just like <http://example.com/foo/>, so it behaves in a
> consistent way.
>
> (This message may be more appropriate for the twisted-web list.)

I did not know there was a twisted.web specific list - will refer to 
that list from now on,

cheers,

David


From mckenzig at optonline.net  Tue Nov 30 07:39:48 2010
From: mckenzig at optonline.net (Grant Mckenzie)
Date: Tue, 30 Nov 2010 07:39:48 -0500
Subject: [Twisted-Python] Missing connections with Perspective Broker (
	newbie alert )
Message-ID: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>

Hi,

I am using a Perspective Broker to service requests from a client on the same machine ( Windows XP ). This works fine most of the time however occasionally I see strange behaviour. The client uses connectTCP and provides a timeout of 5 seconds. Logging indicates that the client attempts to make a connection to the server, server logging in the remote methods indicates that the method is not called. Also my error callback on the client is not invoked after the timeout period. Unfotunately this is part of a large system, sporadic behaviour and difficult to generate a test case for.

Also commonly requests a few seconds before and after the issue are handled correctly so the behaviour seems transient. We are using a older version ot twisted 8.x. Any pointers?

Regards.



From peter.westlake at pobox.com  Tue Nov 30 08:07:23 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 30 Nov 2010 13:07:23 +0000
Subject: [Twisted-Python] Missing connections with Perspective Broker (
 newbie alert )
In-Reply-To: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>
References: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>
Message-ID: <1291122443.6501.1407871005@webmail.messagingengine.com>

On Tue, 30 Nov 2010 07:39 -0500, "Grant Mckenzie"
<mckenzig at optonline.net> wrote:
> Hi,
> 
> I am using a Perspective Broker to service requests from a client on the
> same machine ( Windows XP ). This works fine most of the time however
> occasionally I see strange behaviour. The client uses connectTCP and
> provides a timeout of 5 seconds. Logging indicates that the client
> attempts to make a connection to the server, server logging in the remote
> methods indicates that the method is not called. Also my error callback
> on the client is not invoked after the timeout period. Unfotunately this
> is part of a large system, sporadic behaviour and difficult to generate a
> test case for.
> 
> Also commonly requests a few seconds before and after the issue are
> handled correctly so the behaviour seems transient. We are using a older
> version ot twisted 8.x. Any pointers?

I've seen strange sporadic errors with networking in 8.x that weren't
there in 2.5.0, so would you be able to test it with 2.5.0?

Peter.


From glyph at twistedmatrix.com  Tue Nov 30 15:30:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 30 Nov 2010 15:30:25 -0500
Subject: [Twisted-Python] Missing connections with Perspective Broker (
	newbie alert )
In-Reply-To: <1291122443.6501.1407871005@webmail.messagingengine.com>
References: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>
	<1291122443.6501.1407871005@webmail.messagingengine.com>
Message-ID: <885CD616-FD25-4BB2-9025-18382C5BA53C@twistedmatrix.com>


On Nov 30, 2010, at 8:07 AM, Peter Westlake wrote:

> On Tue, 30 Nov 2010 07:39 -0500, "Grant Mckenzie"
> <mckenzig at optonline.net> wrote:
>> Hi,
>> 
>> I am using a Perspective Broker to service requests from a client on the
>> same machine ( Windows XP ). This works fine most of the time however
>> occasionally I see strange behaviour. The client uses connectTCP and
>> provides a timeout of 5 seconds. Logging indicates that the client
>> attempts to make a connection to the server, server logging in the remote
>> methods indicates that the method is not called. Also my error callback
>> on the client is not invoked after the timeout period. Unfotunately this
>> is part of a large system, sporadic behaviour and difficult to generate a
>> test case for.
>> 
>> Also commonly requests a few seconds before and after the issue are
>> handled correctly so the behaviour seems transient. We are using a older
>> version ot twisted 8.x. Any pointers?
> 
> I've seen strange sporadic errors with networking in 8.x that weren't
> there in 2.5.0, so would you be able to test it with 2.5.0?

Better yet, why not test with a recent release?  Something that starts with '10'?  There's a reason we keep doing new releases, you know: bugs get fixed :).



From albert.brandl at weiermayer.com  Mon Nov 29 07:01:49 2010
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Mon, 29 Nov 2010 13:01:49 +0100
Subject: [Twisted-Python] Handling of NMEA messages
Message-ID: <20101129120148.GB11887@weiermayer.com>

Hi!

We are working on a project that has to extract weather information from 
an NMEA stream. There is a NMEAReceiver class, but it only extracts GPS 
information - as expected, since the class is defined in t.p.gps.nmea.

We intend to add the NMEA-0183 messages necessary for my purposes. The
question is: should we just extend the NMEAReceiver? Weather information
is not exactly what one would expect in a class below t.p.gps...

On the other hand, it would be strange to create a different kind of
NMEAReceiver which knows how to handle the messages dealing with
weather data.

Best regards,

Albert

-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistra?e 12, A-4813 Altm?nster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com


From sasmekoll at gmail.com  Wed Nov 24 16:45:11 2010
From: sasmekoll at gmail.com (Vovan)
Date: Thu, 25 Nov 2010 00:45:11 +0300
Subject: [Twisted-Python] =?utf-8?b?0J/QuNC60LDQvw==?=
Message-ID: <4cf7b453.4189cc0a.32c8.2595@mx.google.com>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101125/1bb789a8/attachment.htm 

From sasmekoll at gmail.com  Wed Nov 24 16:44:18 2010
From: sasmekoll at gmail.com (Vovan)
Date: Thu, 25 Nov 2010 00:44:18 +0300
Subject: [Twisted-Python] =?utf-8?b?0J/QuNC60LDQvw==?=
Message-ID: <4cf7b425.db97cc0a.047b.2558@mx.google.com>

?????????? ????????  ???????? ???? ???????????? ?????????????????????????? ???????????? ?? ?? ??????????????, ?????????????? ???????????????? ???????????????? ?? ???????? ???????????????? ???? ???????????? ?? ?????????????????????? ?????????? ???????? ???????????? ???? ???????????? ?????? ?????????????????????????? ?? ????????????????? , ?? ???????????? ?????????????????? ??????????????, ?????????? ???????????? ?????????????? ?????????????? ?????? ?????????? ???????????????????? ??????????????????!!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101125/25b80482/attachment.htm 

From sasmekoll at gmail.com  Wed Nov 24 20:22:20 2010
From: sasmekoll at gmail.com (Vovan)
Date: Thu, 25 Nov 2010 04:22:20 +0300
Subject: [Twisted-Python] =?utf-8?b?0JbQtdC90YHQutCw0Y8g0LvQvtCz0LjQutCw?=
Message-ID: <4cf7e8bb.948fcc0a.5118.34f4@mx.google.com>

???????????? ???????????????? ????????????? ?????????? ???????????????? ???? ??????????, ?????????? ?????? ???????????????? ???????????????? ???? ???? ???????????????????? ???????????????????????? ????????????? ???? ???????????????????????? ?????????????????? ???????????????? ?????????????????? ???? ?? ???????????????? ???????????????? ?????????????????? ???????? ?????????????????????????????????? ?? ???????????????????? ???????????????? ?????? ????????????.
http://samec.org.ua/?p=202
???? ????????????? ????????????????????, ?????? ????????????????????. ?????????? ?????? ?????????????? ?????????????? ??????????????.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101125/0f0dc3a7/attachment.htm 

From itamar at itamarst.org  Mon Nov  1 06:49:09 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 01 Nov 2010 08:49:09 -0400
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
Message-ID: <1288615749.1625.4.camel@blake>

On Sun, 2010-10-31 at 00:51 +0000, exarkun at twistedmatrix.com wrote:
> Hello all,
> 
> As reported in <http://twistedmatrix.com/trac/ticket/4652>, some 
> problems have arisen with cfreactor.
> 
> First, recent versions of Pyrex reject the Pyrex source for the support 
> modules.  This makes future development on cfreactor difficult (although 
> Glyph's branch does resolve this problem - or at least appears to).

So, the first problem appears to be fixed.

> Second, the C source files do not build with clang.  This seems likely 
> to become more important on future versions of OS X (the only platform 
> where this code matters).  Even OS X 10.6 makes clang easily available 
> (according to an Ars Technica article, "Clang is the recommended 
> compiler, and the focus of all of Apple's future efforts." 
> <http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/9>)

Have you tried seeing if Cython works with Clang? That ought to be a
very minor change to our code.

> Rather than leaving this to chance, I propose that we remove cfreactor 
> and all supporting code ourselves, immediately (ie, in 10.2 - hi therve, 
> go faster next time ;).

This violates our deprecation policy... so I suggest we only do it if
absolutely must, i.e. if Glyph's fixes + Cython don't fix the problem.





From ste at demaledetti.net  Mon Nov  1 06:42:15 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 01 Nov 2010 13:42:15 +0100
Subject: [Twisted-Python] connectionLost never reached after
 calling	loseConnection: stuck in CLOSE_WAIT forever
References: 4CCDA91B.9060807@demaledetti.net
Message-ID: <4CCEB5A7.3030609@demaledetti.net>

Glyph wrote:
> Stefano, this looks like a great contribution: a serious bug fix in a bit of core functionality, with a test.  Thanks so much!


Thank you! It's a pleasure to have one's code be called by code in
the Twisted framework and to get stuff done with it! And it's an
honor to receive support from such a wonderful community, already
ever so enjoyable and enlightening even when just lurking among it!


> I'll try to do a complete review soon, but my immediate impression is that test_disconnectEvent needs a better docstring.  The word 'correctly' in a docstring is always a clue that the writer gave up and stopped trying to describe what 'correct' behavior is :).


Good point, I totally agree with you. "correctly" is most often the
wrong word and a shortcut which leads to unpleasant consequences
once what is "correct" gets better defined later by explicitly
broken behavior.

BTW that line was actually shamelessly copy-pasted from the previous
test's docstring ;P


> if you could try to rephrase it as "When a transport is (...) and then (...), (...) should be called on (...)".
> 
> (I will have a more concrete suggestion, with fewer "..."s when I have time to go through the ticket history and review the patch in detail.)


OK, take two:

This test checks that a protocol gets notified of a lost connection
when its transport has a registered producer writing more than 64KB
to it and is then asked to stopProducing without any more data being
written to it. This ought to prevent that sockets get stuck in
CLOSE_WAIT state when these peculiar conditions occur. See #4719.


Another thing I'm not too sure about is if TCPClientTestsBuilder
("Builder defining tests relating to L{IReactorTCP.connectTCP}.") is
the right class for holding such a test, which is not very related
to connectTCP.


ciao thanks
ste





From exarkun at twistedmatrix.com  Mon Nov  1 07:26:23 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 01 Nov 2010 13:26:23 -0000
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <1288615749.1625.4.camel@blake>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
	<1288615749.1625.4.camel@blake>
Message-ID: <20101101132623.2040.847258080.divmod.xquotient.437@localhost.localdomain>

On 12:49 pm, itamar at itamarst.org wrote:
>On Sun, 2010-10-31 at 00:51 +0000, exarkun at twistedmatrix.com wrote:
>>Hello all,
>>
>>As reported in <http://twistedmatrix.com/trac/ticket/4652>, some
>>problems have arisen with cfreactor.
>>
>>First, recent versions of Pyrex reject the Pyrex source for the 
>>support
>>modules.  This makes future development on cfreactor difficult 
>>(although
>>Glyph's branch does resolve this problem - or at least appears to).
>
>So, the first problem appears to be fixed.
>>Second, the C source files do not build with clang.  This seems likely
>>to become more important on future versions of OS X (the only platform
>>where this code matters).  Even OS X 10.6 makes clang easily available
>>(according to an Ars Technica article, "Clang is the recommended
>>compiler, and the focus of all of Apple's future efforts."
>><http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/9>)
>
>Have you tried seeing if Cython works with Clang? That ought to be a
>very minor change to our code.

Here are the complete results for all combinations:

        |       trunk        |         branch
        | gcc      | clang   | gcc         | clang
-------------------------------------------------------
Cython  | FTB pyx  | FTB pyx | runLoop err | runLoop err
-------------------------------------------------------
Pyrex   | segfault | FTB c   | runLoop err | runLoop err



  FTB pyx - Failed to build .pyx into .c
  FTB c - Failed to build .c into .so
  segfault - crash during test suite run
  runLoop err - Fails to start reactor because "could not convert 
runLoop"
>>Rather than leaving this to chance, I propose that we remove cfreactor
>>and all supporting code ourselves, immediately (ie, in 10.2 - hi 
>>therve,
>>go faster next time ;).
>
>This violates our deprecation policy... so I suggest we only do it if
>absolutely must, i.e. if Glyph's fixes + Cython don't fix the problem.

Quite so.  It seems like an okay violation to me, since according to the 
table above the best possible behavior cfreactor is able to provide is 
that sometimes it will build and run for a while before segfaulting.

Jean-Paul



From ste at demaledetti.net  Mon Nov  1 08:34:13 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 01 Nov 2010 15:34:13 +0100
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCDA91B.9060807@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
Message-ID: <4CCECFE5.6060607@demaledetti.net>

Il 31/10/2010 18:36, Stefano Debenedetti ha scritto:
> Il 30/10/2010 18:48, Stefano Debenedetti ha scritto:
>> http://twistedmatrix.com/trac/ticket/4719
> 
> I have attached a 2 lines patch that seems to fix the issue.

err, it seems to fix that issue but it introduces another issue:

  File "my/code.py", line 759, in loseConnection
    proto.transport.unregisterProducer()
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
330, in unregisterProducer
    self.startWriting()
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
290, in startWriting
    self.reactor.addWriter(self)
  File "/home/lala/lib/python/twisted/internet/epollreactor.py",
line 107, in addWriter
    self._add(writer, self._writes, self._reads, self._selectables,
_epoll.OUT, _epoll.IN)
  File "/home/lala/lib/python/twisted/internet/epollreactor.py",
line 88, in _add
    self._poller._control(cmd, fd, flags)
  File "_epoll.pyx", line 125, in _epoll.epoll._control

I just saw this appearing once in the logs of my app after I applied
the patch I suggested:

http://twistedmatrix.com/trac/attachment/ticket/4719/avoid_hang_in_CLOSE_WAIT.patch

I'll try to replicate and to figure out what does
FileDescriptor.unregisterProducer need to do instead of the probably
too dumb lines I added there:

if self.disconnecting:
    self.startWriting()

ciao
ste




From ste at demaledetti.net  Mon Nov  1 10:29:48 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 01 Nov 2010 17:29:48 +0100
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCECFE5.6060607@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
	<4CCECFE5.6060607@demaledetti.net>
Message-ID: <4CCEEAFC.5020609@demaledetti.net>

Il 01/11/2010 15:34, Stefano Debenedetti ha scritto:
> I'll try to replicate and to figure out what does
> FileDescriptor.unregisterProducer need to do instead of the probably
> too dumb lines I added there:
> 
> if self.disconnecting:
>     self.startWriting()

Alright, I added a test case that replicates the new error
introduced by the above change and included it in a new proposed fix:

http://twistedmatrix.com/trac/attachment/ticket/4719/avoid_hang_in_CLOSE_WAIT_take2.patch

if self.connected and self.disconnecting:
    self.startWriting()

This new patch now passes both new unit tests.

Sorry about the noise, if I find any more issues about this I'll
post them to the ticket page instead of polluting the mailing list
with replies to myself.

ciao
ste




From exarkun at twistedmatrix.com  Mon Nov  1 10:31:12 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 01 Nov 2010 16:31:12 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCEEAFC.5020609@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
	<4CCECFE5.6060607@demaledetti.net>
	<4CCEEAFC.5020609@demaledetti.net>
Message-ID: <20101101163112.2040.648231105.divmod.xquotient.480@localhost.localdomain>

On 04:29 pm, ste at demaledetti.net wrote:
>Il 01/11/2010 15:34, Stefano Debenedetti ha scritto:
>>I'll try to replicate and to figure out what does
>>FileDescriptor.unregisterProducer need to do instead of the probably
>>too dumb lines I added there:
>>
>>if self.disconnecting:
>>     self.startWriting()
>
>Alright, I added a test case that replicates the new error
>introduced by the above change and included it in a new proposed fix:
>
>http://twistedmatrix.com/trac/attachment/ticket/4719/avoid_hang_in_CLOSE_WAIT_take2.patch
>
>if self.connected and self.disconnecting:
>    self.startWriting()
>
>This new patch now passes both new unit tests.
>
>Sorry about the noise, if I find any more issues about this I'll
>post them to the ticket page instead of polluting the mailing list
>with replies to myself.

This is really awesome.  Thank you very much. :)

Jean-Paul



From glyph at twistedmatrix.com  Mon Nov  1 14:19:24 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 1 Nov 2010 16:19:24 -0400
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <20101101132623.2040.847258080.divmod.xquotient.437@localhost.localdomain>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
	<1288615749.1625.4.camel@blake>
	<20101101132623.2040.847258080.divmod.xquotient.437@localhost.localdomain>
Message-ID: <0C8CF9DC-A11A-441A-9819-81E4C5588E8E@twistedmatrix.com>


On Nov 1, 2010, at 9:26 AM, exarkun at twistedmatrix.com wrote:

> Quite so.  It seems like an okay violation to me, since according to the 
> table above the best possible behavior cfreactor is able to provide is 
> that sometimes it will build and run for a while before segfaulting.

That table is also non-deterministic.  I've seen different behavior on different machines, which then changed again when I went back to look again.

In no case was I able to get anywhere close to completing a test suite run, though.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101101/ddc6e21d/attachment-0001.html>

From hijinks at gmail.com  Tue Nov  2 14:11:06 2010
From: hijinks at gmail.com (Mike Zupan)
Date: Tue, 2 Nov 2010 16:11:06 -0400
Subject: [Twisted-Python] Twisted with callInThread
Message-ID: <AANLkTik_RW-YEVy+GbReriWrx7ZYBXSJWJ+5BReqMjV2@mail.gmail.com>

I stripped down my app but this should give you an example of what i'm doing

def run_app(f):
    p = Popen(['/usr/bin/app'],stdout=PIPE)
    while True:
        o = p.stdout.readline()
        if o == '' and p.poll() != None: break

        reactor.callFromThread(f, o)

class Echo(Protocol):
    def connectionMade(self):

        reactor.callInThread(run_app, self.appDataReceived)

    def dataReceived(self, data):
        data = data.strip()
        if data == "getmore":
            print "getmore"

    def appDataReceived(self, u):
        print u

def main():
    factory = Factory()
    factory.protocol = Echo
    reactor.listenTCP(3646, factory)
    reactor.run()

if __name__ == "__main__":
    main()


I have an app which I want to connect in and run a app that
continually spits out data to stdout. Right now my app works but the
issue is when the client exits the socket connection the /usr/bin/app
still continues to run. The more socket connections made the more this
app is still running.

Is there anyway from the Echo Procool to kill the run_app() function?



From itamar at itamarst.org  Tue Nov  2 15:16:20 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 2 Nov 2010 17:16:20 -0400
Subject: [Twisted-Python] Twisted with callInThread
In-Reply-To: <AANLkTik_RW-YEVy+GbReriWrx7ZYBXSJWJ+5BReqMjV2@mail.gmail.com>
References: <AANLkTik_RW-YEVy+GbReriWrx7ZYBXSJWJ+5BReqMjV2@mail.gmail.com>
Message-ID: <a0182cd87bab8d5cb88f95eb8f7496be.squirrel@webmail.zoteca.com>

> I have an app which I want to connect in and run a app that
> continually spits out data to stdout. Right now my app works but the
> issue is when the client exits the socket connection the /usr/bin/app
> still continues to run. The more socket connections made the more this
> app is still running.
>
> Is there anyway from the Echo Procool to kill the run_app() function?

Instead of using run_app (which I assume is in run in a thread?), using
reactor.spawnProcess will let you have the process management integrated
with Twisted:
http://twistedmatrix.com/documents/current/core/howto/process.html




From albert.brandl at weiermayer.com  Wed Nov  3 06:01:14 2010
From: albert.brandl at weiermayer.com (Brandl, Albert)
Date: Wed, 03 Nov 2010 13:01:14 +0100
Subject: [Twisted-Python] Inconsistency in ReconnectingClientFactory
Message-ID: <1288785674.4cd14f0a4e68b@xhost3.wss>

Hi!

The ReconnectingClientFactory class allows to define the instance
variable maxDelay. Its documentation is "Maximum number of seconds
between connection attempts."

maxDelay is used in the retry() method to bound self.delay. But this        
happens in the _first_ step of the calculation of self.delay.
Afterwards, the bounded value is modified again by applying
random.normalvariate to allow for the jitter. This can result in a value
that is considerably bigger than maxDelay.

Is there any reason that maxDelay is not used for bounding the final
result of the calculation of self.delay? If not, the calculation should
be fixed - I'd be happy to file an issue ;-).

Best regards,

Albert
--
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com




From exarkun at twistedmatrix.com  Wed Nov  3 08:10:59 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 03 Nov 2010 14:10:59 -0000
Subject: [Twisted-Python] Inconsistency in ReconnectingClientFactory
In-Reply-To: <1288785674.4cd14f0a4e68b@xhost3.wss>
References: <1288785674.4cd14f0a4e68b@xhost3.wss>
Message-ID: <20101103141059.2040.393387553.divmod.xquotient.518@localhost.localdomain>

On 12:01 pm, albert.brandl at weiermayer.com wrote:
>Hi!
>
>The ReconnectingClientFactory class allows to define the instance
>variable maxDelay. Its documentation is "Maximum number of seconds
>between connection attempts."
>
>maxDelay is used in the retry() method to bound self.delay. But this
>happens in the _first_ step of the calculation of self.delay.
>Afterwards, the bounded value is modified again by applying
>random.normalvariate to allow for the jitter. This can result in a 
>value
>that is considerably bigger than maxDelay.
>
>Is there any reason that maxDelay is not used for bounding the final
>result of the calculation of self.delay? If not, the calculation should
>be fixed - I'd be happy to file an issue ;-).

One reason to prefer not to have a fixed value as maxDelay is that 
always picking a random values ensures that you'll never have a stampede 
of clients all attempting connections at once.  It might be best to just 
correct the documentation for maxDelay to point out that it's not 
actually a hard maximum, just the average value the maximums will 
cluster around.  That's certainly worth a ticket.

Jean-Paul



From ndbecker2 at gmail.com  Wed Nov  3 19:45:39 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 03 Nov 2010 21:45:39 -0400
Subject: [Twisted-Python] signalfd
Message-ID: <iat383$uqo$1@dough.gmane.org>

On modern linux, signalfd can be used to convert sigchld into an event on a 
file descriptor.  Looks like just what is wanted for processProtocol.

There is also a python interface here:
https://launchpad.net/python-signalfd/+download

This test seems to work for me:

import signalfd
import signal
import subprocess
import select

signalfd.sigprocmask (signalfd.SIG_BLOCK, [signal.SIGCHLD])
fd = signalfd.signalfd (-1, [signal.SIGCHLD])

child = subprocess.Popen (['sleep', '5'])
while True:
    a,b,c, = select.select ([fd], [], [])
    print 'a:', a, 'b:', b, 'c:', c
    if child.poll() != None:
        break





From exarkun at twistedmatrix.com  Wed Nov  3 20:23:38 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 04 Nov 2010 02:23:38 -0000
Subject: [Twisted-Python] signalfd
In-Reply-To: <iat383$uqo$1@dough.gmane.org>
References: <iat383$uqo$1@dough.gmane.org>
Message-ID: <20101104022338.2040.892926715.divmod.xquotient.534@localhost.localdomain>

On 01:45 am, ndbecker2 at gmail.com wrote:
>On modern linux, signalfd can be used to convert sigchld into an event 
>on a
>file descriptor.  Looks like just what is wanted for processProtocol.

It does, indeed.  I'm not sure it's really worth bothering though.  Here 
are the drawbacks of using signalfd():

   - It only works on Linux
   - It works differently on older versions of Linux than on newer 
versions
   - You still can't have another SIGCHLD handler installed that will 
called (so it's not any more cooperative with other library code)

As compared to using SA_RESTART with a normal SIGCHLD handler, this is 
two extra drawbacks.  The advantages of signalfd() are:

    - It's just another fd, so the reactor doesn't need as much special 
support code

But this advantage is negated by the fact that we still need the special 
support code for older versions of Linux and for other platforms.

If anyone's aware of other advantages or drawbacks of one approach or 
the other, it would be interesting to hear about them.  Otherwise, it 
doesn't seem like it's worth changing.

Thanks for the suggestion! :)

Jean-Paul



From foom at fuhm.net  Wed Nov  3 21:51:02 2010
From: foom at fuhm.net (James Y Knight)
Date: Wed, 3 Nov 2010 23:51:02 -0400
Subject: [Twisted-Python] signalfd
In-Reply-To: <20101104022338.2040.892926715.divmod.xquotient.534@localhost.localdomain>
References: <iat383$uqo$1@dough.gmane.org>
	<20101104022338.2040.892926715.divmod.xquotient.534@localhost.localdomain>
Message-ID: <522AFDC2-A343-46B1-BFE4-C15F4725C9C2@fuhm.net>

On Nov 3, 2010, at 10:23 PM, exarkun at twistedmatrix.com wrote:
> On 01:45 am, ndbecker2 at gmail.com wrote:
>> On modern linux, signalfd can be used to convert sigchld into an event 
>> on a
>> file descriptor.  Looks like just what is wanted for processProtocol.
> 
> It does, indeed.  I'm not sure it's really worth bothering though.  Here 
> are the drawbacks of using signalfd():
> 
>   - It only works on Linux
>   - It works differently on older versions of Linux than on newer 
> versions
>   - You still can't have another SIGCHLD handler installed that will 
> called (so it's not any more cooperative with other library code)

Another drawback is that spawned subprocesses will start with SIGCHLD blocked (because the sigprocmask is inherited across fork/exec, like SIG_IGN is, but unlike signal handlers), unless twisted adds a pthread_atfork handler (which there is no way to do from Python, so that'd have to be more custom C code). And even with that, system() would still remain broken, because system() inexplicably doesn't call atfork handlers on linux/glibc (notabug according to glibc maintainers).

Of course, the Twisted process API could unblock SIGCHLD itself before calling exec, but this would leave spawning a process with any other API (subprocess/etc) broken. Many programs will not react well to starting with SIGCHLD blocked.

Since Twisted just recently managed to make spawning subprocesses with non-Twisted APIs actually work right, it'd be quite poor to break that again.

James


From ndbecker2 at gmail.com  Fri Nov  5 11:40:24 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Fri, 05 Nov 2010 13:40:24 -0400
Subject: [Twisted-Python] [newb] daemon question
Message-ID: <ib1fi8$h8p$1@dough.gmane.org>

I have put together a simple twisted server using xmlrpc and process.  I 
want to run this server as a unix daemon.

Specifically, detach from controlling terminal, and redirect stdout, stderr 
to a log file.

What is the easiest approach, and where to look for documentation on this?




From jrennie at gmail.com  Fri Nov  5 11:57:10 2010
From: jrennie at gmail.com (Jason Rennie)
Date: Fri, 5 Nov 2010 13:57:10 -0400
Subject: [Twisted-Python] [newb] daemon question
In-Reply-To: <ib1fi8$h8p$1@dough.gmane.org>
References: <ib1fi8$h8p$1@dough.gmane.org>
Message-ID: <AANLkTikjsN+u5HPjnuCPnSaf11nnOYaVrVA9SyQJZzSN@mail.gmail.com>

I often use "nohup" for this sort of thing.  An alternative would be to add
it to /etc/init.d and /etc/rc?.d

Cheers,

Jason

On Fri, Nov 5, 2010 at 1:40 PM, Neal Becker <ndbecker2 at gmail.com> wrote:

> I have put together a simple twisted server using xmlrpc and process.  I
> want to run this server as a unix daemon.
>
> Specifically, detach from controlling terminal, and redirect stdout, stderr
> to a log file.
>
> What is the easiest approach, and where to look for documentation on this?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Jason Rennie
Research Scientist, ITA Software
617-714-2645
http://www.itasoftware.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101105/3040725f/attachment.html>

From glyph at twistedmatrix.com  Fri Nov  5 12:01:13 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 5 Nov 2010 14:01:13 -0400
Subject: [Twisted-Python] [newb] daemon question
In-Reply-To: <ib1fi8$h8p$1@dough.gmane.org>
References: <ib1fi8$h8p$1@dough.gmane.org>
Message-ID: <190E4712-EDD5-4D75-A115-0FB0189C8AB9@twistedmatrix.com>


On Nov 5, 2010, at 1:40 PM, Neal Becker wrote:

> I have put together a simple twisted server using xmlrpc and process.  I 
> want to run this server as a unix daemon.
> 
> Specifically, detach from controlling terminal, and redirect stdout, stderr 
> to a log file.
> 
> What is the easiest approach, and where to look for documentation on this?

Write your server as a .tac file or twistd plugin, and then run twistd without -n.

See:

<http://twistedmatrix.com/documents/10.1.0/core/howto/application.html>
<http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html>




From superdupont at gmail.com  Fri Nov  5 13:18:07 2010
From: superdupont at gmail.com (Carlos Valiente)
Date: Fri, 5 Nov 2010 19:18:07 +0000
Subject: [Twisted-Python] [newb] daemon question
In-Reply-To: <ib1fi8$h8p$1@dough.gmane.org>
References: <ib1fi8$h8p$1@dough.gmane.org>
Message-ID: <AANLkTinU-CkhhsYgKYes97HB33J74qESec7TB32rNS+C@mail.gmail.com>

On Fri, Nov 5, 2010 at 17:40, Neal Becker <ndbecker2 at gmail.com> wrote:
> I have put together a simple twisted server using xmlrpc and process.  I
> want to run this server as a unix daemon.

You might want to have a look at daemontools
(http://cr.yp.to/daemontools.html). It will also take care of
restarting your daemons if they die.

C



From erik at letterror.com  Fri Nov  5 16:46:49 2010
From: erik at letterror.com (Erik van Blokland)
Date: Fri, 5 Nov 2010 23:46:49 +0100
Subject: [Twisted-Python] More daemonize() / OSX API /
	USING_FORK_WITHOUT_EXEC_etc.
In-Reply-To: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
Message-ID: <1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>

Hi,

A while back on Oct 13, 2010, at 7:20 PM, James Y Knight wrote:

> You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]
> 
> Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

Deferring OSX API's until after daemonisation was the solution. My test script, fixed by James, works on macbook, but when I run it on a remote OSX server mini, it doesn't. It crashes as before with USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER) . Both machines run the same versions of python, pyobjc, twisted.  Some digging showed that on the mini twisted.application.reactors imports zope.interface, which in turn runs this:
	__import__('pkg_resources').declare_namespace(__name__)
and this causes Carbon to be loaded, before daemonisation. I can't defer loading reactor because I need it to make things tick, so I'm stuck.

Could this be related to http://twistedmatrix.com/trac/ticket/4644 ?
Any clues to why pkg_resources would cause Carbon to load on one machine, but not on another?
Any clues to prevent it these modules from loading?

Local:
  System Version:	Mac OS X 10.6.4 (10F569)
  Kernel Version:	Darwin 10.4.0

Remote:
 System Version:	Mac OS X Server 10.6.4 (10F569)
  Kernel Version:	Darwin 10.4.0

Thanks,
Erik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101105/5b7f829e/attachment.html>

From ndbecker2 at gmail.com  Fri Nov  5 17:28:24 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Fri, 05 Nov 2010 19:28:24 -0400
Subject: [Twisted-Python] [newb] another process question
Message-ID: <ib23up$e1m$1@dough.gmane.org>

Using this code:
...
    def processEnded(self, reason):
        print "processEnded, task %s, status %s" % (self.task, 
reason.value.exitCode,)

Here is what I get from a normally terminated process
processEnded, task ['sleep', '4']31662, status 0

But now I kill the subprocess, with SIGTERM, and I get:

processEnded, task ['sleep', '15']31663, status None

This seems to disagree with the twisted process doc.
Instead of an exitCode, I seem to have gotten 'None'

.processEnded(status): This is called when the child process has been 
reaped, and receives information about the process' exit status. The status 
is passed in the form of a Failure instance, created with a .value that 
either holds a ProcessDone object if the process terminated normally (it 
died of natural causes instead of receiving a signal, and if the exit code 
was 0), or a ProcessTerminated object (with an .exitCode attribute) if 
something went wrong. This scheme may seem a bit weird, but I trust that it 
proves useful when dealing with exceptions that occur in asynchronous code.






From screwtape at froup.com  Fri Nov  5 19:19:05 2010
From: screwtape at froup.com (Tim Allen)
Date: Sat, 6 Nov 2010 12:19:05 +1100
Subject: [Twisted-Python] [newb] another process question
In-Reply-To: <ib23up$e1m$1@dough.gmane.org>
References: <ib23up$e1m$1@dough.gmane.org>
Message-ID: <20101106011905.GL28416@boombah.thristian.org>

On Fri, Nov 05, 2010 at 07:28:24PM -0400, Neal Becker wrote:
> The status 
> is passed in the form of a Failure instance, created with a .value that 
> either holds a ProcessDone object if the process terminated normally (it 
> died of natural causes instead of receiving a signal, and if the exit code 
> was 0), or a ProcessTerminated object (with an .exitCode attribute) if 
> something went wrong.

The deal is, there are multiple kinds of 'went wrong' in the Unix
process model. One kind (described the documentation you quote above) is
a non-zero exit code; you can test this by running "/bin/false" rather
than "sleep 15" as your test command. Another kind is 'killed by
a signal', in which case the value "returned" by the process encodes the
number of the signal that killed it, rather than a process-defined error
code.

Looking at the source of the ProcessTerminated class mentioned:

    http://twistedmatrix.com/trac/browser/trunk/twisted/internet/error.py#L268

...it looks like killing a process with a signal puts 'None' in the
.exitCode property, and the signal number in the .signal property. The
instance also has a useful str() representation if you just want to log
a sensible error message.



From lvh at laurensvh.be  Fri Nov  5 19:28:55 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sat, 6 Nov 2010 02:28:55 +0100
Subject: [Twisted-Python] Conch as a file transfer server
Message-ID: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>

Hi!


I've figured out vaguely how to use Conch as a file transfer client
thanks to the cftp script. I'm currently trying to adapt the simple
SSH server script example (link below) to do file *serving*. I can't
find any example code that actually does this or documentation on this
subject.

There's conch's test_filetransfer which indeed does have some server
parts, but being unit tests they gloss over a lot of the things I
think I need to know to get this working for an actual file server.
For example, what's the difference between SSHSession and ISession?
They both appear to be 'sessions' in the SSH sense. Why does ISession
not do anything about subsystems? Do I need one if I'm just using a
subsystem and not opening a shell? If so: is it just a stub, or does
it need to implement behavior? I would guess it's just stubs, since
invoking subsystems does not mean opening a shell.

link to the example:
http://twistedmatrix.com/documents/current/conch/examples/index.html#auto0

Ideally, does anyone have any code somewhere that actually serves a file?

thanks in advance,
lvh



From jml at mumak.net  Sat Nov  6 02:55:46 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 6 Nov 2010 08:55:46 +0000
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
Message-ID: <AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>

On Sat, Nov 6, 2010 at 1:28 AM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
...
>
> Ideally, does anyone have any code somewhere that actually serves a file?
>

I don't have minimal code, but in the Launchpad tree there are two
SFTP servers, written with Conch.

$ bzr co lp:launchpad
Look in lib/lp/services/sshserver for the common code;
lib/lp/codehosting/sshserver for one implementation; lib/lp/poppy for
another.

Alternatively:
  http://bazaar.launchpad.net/~launchpad-pqm/launchpad/db-devel/files/head:/lib/lp/codehosting/sshserver/
  http://bazaar.launchpad.net/~launchpad-pqm/launchpad/db-devel/files/head:/lib/lp/services/

Hope this helps,
jml



From erik at letterror.com  Sat Nov  6 05:38:22 2010
From: erik at letterror.com (Erik van Blokland)
Date: Sat, 6 Nov 2010 12:38:22 +0100
Subject: [Twisted-Python] More daemonize() / OSX API /
	USING_FORK_WITHOUT_EXEC_etc.
In-Reply-To: <1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>
Message-ID: <7160792C-008C-4175-B653-0214CED216DD@letterror.com>


On Nov 5, 2010, at 11:46 PM, Erik van Blokland wrote:

> Any clues to why pkg_resources would cause Carbon to load on one machine, but not on another?
> Any clues to prevent it these modules from loading?

FWIW, I found a workaround. The remote machine had setuptools-0.6c11-py2.6.egg, the local machine setuptools-0.6c9-py2.6.egg. Reverting to c9 prevents Carbon to be loaded with pkg_resources, which in turn enables daemonisation. The child happily runs twisted and quartz.

I'd still be interested to see how twisted / daemon / OSX API  is supposed to work with setuptools c11. But I'm happy I can continue.

thanks,
Erik


From facundobatista at gmail.com  Sat Nov  6 12:00:05 2010
From: facundobatista at gmail.com (Facundo Batista)
Date: Sat, 6 Nov 2010 15:00:05 -0300
Subject: [Twisted-Python] Catching all the exceptions in a Twisted
	program
In-Reply-To: <20101025122958.1927.629458651.divmod.xquotient.68@localhost.localdomain>
References: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>
	<20101025122958.1927.629458651.divmod.xquotient.68@localhost.localdomain>
Message-ID: <AANLkTinTDMakiVjD0ZtO6s7YFcabswzXq4f+LUZNUCH-@mail.gmail.com>

On Mon, Oct 25, 2010 at 9:29 AM,  <exarkun at twistedmatrix.com> wrote:

>>  Is there a better way to do this?  Actually, this is working correctly,
>>  but I don't know if it's the right way to do it, and don't want to
>>  depend of DebugInfo() being called always in this case.
>
> You should add a log observer that watches for errors.
>
> http://twistedmatrix.com/documents/9.0.0/core/howto/logging.html

Thanks Jean-Paul!

Regards,

-- 
.    Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/



From glyph at twistedmatrix.com  Sat Nov  6 17:51:08 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 6 Nov 2010 19:51:08 -0400
Subject: [Twisted-Python] More daemonize() / OSX API /
	USING_FORK_WITHOUT_EXEC_etc.
In-Reply-To: <7160792C-008C-4175-B653-0214CED216DD@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<1C902B8E-E3BD-40B5-B8E1-DF68F575A4B4@letterror.com>
	<7160792C-008C-4175-B653-0214CED216DD@letterror.com>
Message-ID: <A996A257-D4E9-40A5-A750-355EABC6E2A1@twistedmatrix.com>


On Nov 6, 2010, at 7:38 AM, Erik van Blokland wrote:

> 
> On Nov 5, 2010, at 11:46 PM, Erik van Blokland wrote:
> 
>> Any clues to why pkg_resources would cause Carbon to load on one machine, but not on another?
>> Any clues to prevent it these modules from loading?
> 
> FWIW, I found a workaround. The remote machine had setuptools-0.6c11-py2.6.egg, the local machine setuptools-0.6c9-py2.6.egg. Reverting to c9 prevents Carbon to be loaded with pkg_resources, which in turn enables daemonisation. The child happily runs twisted and quartz.
> 
> I'd still be interested to see how twisted / daemon / OSX API  is supposed to work with setuptools c11. But I'm happy I can continue.

Well, clearly it doesn't work :).

Please feel free to open another ticket.  You are correct in saying that this is related to <http://tm.tl/4644>, but that ticket is specifically about a test, and the proposed solution there is to make the test sensitive.

<http://bugs.python.org/issue7895> was the bug in Python that causes this, which has since been fixed. Although apparently the fix was not quite in time for 2.7, it looks to me like it has been committed to the 2.7 (and 2.6) branches, so perhaps we will see some point-releases which fix it.  So in future versions of Python, Twisted will not be affected by this issue.

However, it may be good to get a workaround in Twisted anyway, for those who have to deal with the combination of older Python / newer Setuptools, or a better fix, like changing the order of daemonization.  So a ticket is definitely worthwhile.




From exarkun at twistedmatrix.com  Sat Nov  6 22:05:22 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Nov 2010 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1289102722.06.1169107615@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101107/7243a753/attachment-0001.html>

From lvh at laurensvh.be  Sun Nov  7 05:09:28 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 7 Nov 2010 13:09:28 +0100
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
Message-ID: <AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>

Okay, tried to learn something out of that. If I understand correctly
SSHSession is the low-level thing that actually handles SSH-specific
gunk, and ISession is the customizable thing. File transfer was
implemented separately. When something wants file transfer, Conch
tries to adapt the avatar to ISFTPServer instead of ISession. Is that
right?

I've found code that does both (adaptation of a ConchUser
implementation to ISFTPServer and ISession) in unix.py.

thanks
lvh



From jml at mumak.net  Sun Nov  7 05:12:17 2010
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 7 Nov 2010 12:12:17 +0000
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
	<AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
Message-ID: <AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>

On Sun, Nov 7, 2010 at 12:09 PM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> Okay, tried to learn something out of that. If I understand correctly
> SSHSession is the low-level thing that actually handles SSH-specific
> gunk, and ISession is the customizable thing. File transfer was
> implemented separately. When something wants file transfer, Conch
> tries to adapt the avatar to ISFTPServer instead of ISession. Is that
> right?
>

Yeah, that sounds right, although I'm not going to look up the code to
double check.

You want the ISession around to handle non-SFTP connections: shell
requests, command exec etc.

jml



From andrew at bemusement.org  Sun Nov  7 13:55:12 2010
From: andrew at bemusement.org (Andrew Bennetts)
Date: Mon, 8 Nov 2010 07:55:12 +1100
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
	<AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
	<AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>
Message-ID: <20101107205512.GI2463@aihal.home.puzzling.org>

Jonathan Lange wrote:
> On Sun, Nov 7, 2010 at 12:09 PM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> > Okay, tried to learn something out of that. If I understand correctly
> > SSHSession is the low-level thing that actually handles SSH-specific
> > gunk, and ISession is the customizable thing. File transfer was
> > implemented separately. When something wants file transfer, Conch
> > tries to adapt the avatar to ISFTPServer instead of ISession. Is that
> > right?
> >
> 
> Yeah, that sounds right, although I'm not going to look up the code to
> double check.
> 
> You want the ISession around to handle non-SFTP connections: shell
> requests, command exec etc.

...and opening of subsystems, like SFTP, IIRC?

-Andrew.




From lvh at laurensvh.be  Sun Nov  7 14:23:13 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 7 Nov 2010 22:23:13 +0100
Subject: [Twisted-Python] Conch as a file transfer server
In-Reply-To: <20101107205512.GI2463@aihal.home.puzzling.org>
References: <AANLkTi=LieWCiKz37OWw=r01b8OOSqLD1xCWXu-=PT1_@mail.gmail.com>
	<AANLkTi=1Tj4AtFAgwRAxn3QLq574spBmqsC8mELtBLYV@mail.gmail.com>
	<AANLkTinDzH4nZqyo4TvidM2NL5vqxrooYUqA+Yh_hWJ4@mail.gmail.com>
	<AANLkTi=Wao+ttsmgX8bKtQH-hbZFdUFsSAf9AU2-8NW2@mail.gmail.com>
	<20101107205512.GI2463@aihal.home.puzzling.org>
Message-ID: <AANLkTi=+iDRzNpHFAL6qQqS9HJ8WFGRsHaZvpraKfBR3@mail.gmail.com>

If I understand correctly, the avatar knows about requestable
subsystems, and SSHSession is the low-level magic required to make
them work.

lvh



From ndbecker2 at gmail.com  Mon Nov  8 06:53:01 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Mon, 08 Nov 2010 08:53:01 -0500
Subject: [Twisted-Python] twisted daemonize problem
Message-ID: <ib8vbu$emb$1@dough.gmane.org>

I try to daemonize twisted, but it uses 100% cpu.

The problem occurs in this code:

def daemonize(log_stdout=False, out_name=None, log_stderr=False, 
err_name=None):
    """
    Turn current process into a daemon
    """
    pid = os.fork()
    if (pid == 0):
##        os.chdir (workdir)
        os.setsid()
        maxfd = os.sysconf("SC_OPEN_MAX")
        for fd in range(0, maxfd):
            try:
                os.close(fd)
            except OSError:   # ERROR (ignore)
                pass

        # Redirect the standard file descriptors to /dev/null.  <<<< HERE's 
THE PROBLEM
        os.open("/dev/null", os.O_RDONLY)    # standard input (0)
        os.open("/dev/null", os.O_RDWR)       # standard output (1)
        os.open("/dev/null", os.O_RDWR)       # standard error (2)


        if (not out_name):
            out_name = gen_name() + '.out'
        if (not err_name):
            err_name = gen_name() + '.err'
        if (log_stdout):
            sys.stdout = logger.logger (out_name)
        if (log_stderr):
            sys.stderr = logger.logger (err_name)
    else:
        print "forked pid", pid
        sys.exit (0)


If I comment out the lines that open /dev/null, everything is OK, but with 
those lines the process uses 100% cpu.

The actual twisted code (not shown) is 
class Spawner(xmlrpc.XMLRPC):
...
    r = Spawner()
    reactor.listenTCP(7080, server.Site(r))
    reactor.run()

This is on linux.




From itamar at itamarst.org  Mon Nov  8 07:08:09 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 08 Nov 2010 09:08:09 -0500
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ib8vbu$emb$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org>
Message-ID: <1289225289.1611.1.camel@blake>

On Mon, 2010-11-08 at 08:53 -0500, Neal Becker wrote:
> I try to daemonize twisted, but it uses 100% cpu.
> 
> The problem occurs in this code:

Why not use twistd, which does all this for you already? E.g. 
http://twistedmatrix.com/documents/10.1.0/core/howto/application.html

or the more sophisticated

http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html




From ndbecker2 at gmail.com  Mon Nov  8 07:49:44 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Mon, 08 Nov 2010 09:49:44 -0500
Subject: [Twisted-Python] twisted daemonize problem
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
Message-ID: <ib92ma$v2l$1@dough.gmane.org>

Itamar Turner-Trauring wrote:

> On Mon, 2010-11-08 at 08:53 -0500, Neal Becker wrote:
>> I try to daemonize twisted, but it uses 100% cpu.
>> 
>> The problem occurs in this code:
> 
> Why not use twistd, which does all this for you already? E.g.
> http://twistedmatrix.com/documents/10.1.0/core/howto/application.html
> 
> or the more sophisticated
> 
> http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html

Because it looks like I need to learn a lot more to use it.  But I'll try.




From marco.giusti at gmail.com  Mon Nov  8 08:18:25 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 8 Nov 2010 16:18:25 +0100
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ib92ma$v2l$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org>
Message-ID: <20101108151825.GC2829@murdoc>

On Mon, Nov 08, 2010 at 09:49:44AM -0500, Neal Becker wrote:
> Itamar Turner-Trauring wrote:
>
>> On Mon, 2010-11-08 at 08:53 -0500, Neal Becker wrote:
>>> I try to daemonize twisted, but it uses 100% cpu.
>>> 
>>> The problem occurs in this code:
>> 
>> Why not use twistd, which does all this for you already? E.g.
>> http://twistedmatrix.com/documents/10.1.0/core/howto/application.html
>> 
>> or the more sophisticated
>> 
>> http://twistedmatrix.com/documents/10.1.0/core/howto/tap.html
>
> Because it looks like I need to learn a lot more to use it.  But I'll try.

It's not difficult or long at all, at least you could read this[1]
thread of few days ago.

[1] http://twistedmatrix.com/pipermail/twisted-python/2010-November/023114.html

m.

-- 
La vera terra dei barbari non è quella che non ha mai conosciuto
l'arte, ma quella che, disseminata di capolavori, non sa nè
apprezzarli nè conservarli.
		-- Marcel Proust



From ndbecker2 at gmail.com  Mon Nov  8 11:50:38 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Mon, 08 Nov 2010 13:50:38 -0500
Subject: [Twisted-Python] twisted daemonize problem
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
Message-ID: <ib9gq0$c8m$1@dough.gmane.org>

I seem to have things working OK with twistd.

My app is a batch scheduling system that listens for commands via xmlrpc.  
It is very simple at this point, and I'm attaching it.  I would welcome any 
suggestions for improvement, since I'm a newb to twisted, and a lot of this 
was guesswork.

task.py is a seperate file because otherwise pickle doesn't work.  t6.tac is 
the server, and a toy client is client4.py.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: client4.py
Type: text/x-python
Size: 574 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101108/af4f12d8/attachment-0004.py>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: t6.tac
URL: </pipermail/twisted-python/attachments/20101108/af4f12d8/attachment.ksh>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: task.py
Type: text/x-python
Size: 176 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101108/af4f12d8/attachment-0005.py>

From marco.giusti at gmail.com  Mon Nov  8 13:08:08 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Mon, 8 Nov 2010 21:08:08 +0100
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ib9gq0$c8m$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
	<ib9gq0$c8m$1@dough.gmane.org>
Message-ID: <20101108200808.GE2829@murdoc>

On Mon, Nov 08, 2010 at 01:50:38PM -0500, Neal Becker wrote:
> I seem to have things working OK with twistd.
> 
> My app is a batch scheduling system that listens for commands via xmlrpc.  
> It is very simple at this point, and I'm attaching it.  I would welcome any 
> suggestions for improvement, since I'm a newb to twisted, and a lot of this 
> was guesswork.
> 
> task.py is a seperate file because otherwise pickle doesn't work.  t6.tac is 
> the server, and a toy client is client4.py.

If I could you give a suggestion on how to structure the server side of
your program:

The ``Task`` class in a separate file, this is fine, clients could
import the file without the need to import the non useful, for the
client, server code.

All the server logic in a file and a third file for the tap, here a
possible structure:

	procxmlrpc/
		|- client.py
		|- server.py
		`- task.py
	twisted/
		`- plugins/
			`- procxmlrpc_plugin.py

Here the simplified code, all the remaining code goes into ``server.py``

	from procxmlrpc.server import Spawner

	from twisted.web import server
	from twisted.application import service, internet

	application = service.Application("Demo application")
	spawn_server = server.Site(Spawner())
	service = internet.TCPServer(7080, spawn_server)
	service.setServiceParent(application)

m.


-- 
Nessuno come me si è creato una società reale evocando delle ombre; al
punto che la vita dei miei ricordi assorbe il sentimento della mia
vita reale.
				-- René de Chateaubriand, Mémoires d'Outre-tombe



From albert.brandl at weiermayer.com  Tue Nov  9 04:49:02 2010
From: albert.brandl at weiermayer.com (Brandl, Albert)
Date: Tue, 09 Nov 2010 12:49:02 +0100
Subject: [Twisted-Python] Inconsistency in ReconnectingClientFactory
Message-ID: <1289303342.4cd9352e3f830@xhost3.wss>

Hi!

Am Mittwoch, den 03-11-2010 um 15:10 schrieb exarkun at twistedmatrix.com:
> One reason to prefer not to have a fixed value as maxDelay is that 
> always picking a random values ensures that you'll never have a stampede 
> of clients all attempting connections at once. 

This should of course be avoided. On the other hand, it is convenient to
have the ability to define a maximum delay (and the name of the variable
suggests that the delay won't be any bigger).

> It might be best to just correct the documentation for maxDelay to point 
> out that it's not actually a hard maximum, just the average value the
> maximums will cluster around.

Maybe it's better to change the calculation such that the random value
is always below maxDelay. If the first parameter to random.normalvariate
is adapted in the right way, the result should always be lower than 
maxDelay.

>  That's certainly worth a ticket.

I'll create one, but leave open how to solve the inconsistency.

Best regards,

Albert

-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com




From ndbecker2 at gmail.com  Tue Nov  9 04:58:05 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Tue, 09 Nov 2010 06:58:05 -0500
Subject: [Twisted-Python] twisted daemonize problem
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
	<ib9gq0$c8m$1@dough.gmane.org> <20101108200808.GE2829@murdoc>
Message-ID: <ibbd0d$b28$1@dough.gmane.org>

Thanks for the suggestions.

I'd also like to add authentication, but it seems rather daunting.

Maybe I could just restrict the xmlrpc to listen only on connection from the 
local host?




From marco.giusti at gmail.com  Tue Nov  9 05:53:26 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Tue, 9 Nov 2010 13:53:26 +0100
Subject: [Twisted-Python] twisted daemonize problem
In-Reply-To: <ibbd0d$b28$1@dough.gmane.org>
References: <ib8vbu$emb$1@dough.gmane.org> <1289225289.1611.1.camel@blake>
	<ib92ma$v2l$1@dough.gmane.org> <20101108151825.GC2829@murdoc>
	<ib9gq0$c8m$1@dough.gmane.org> <20101108200808.GE2829@murdoc>
	<ibbd0d$b28$1@dough.gmane.org>
Message-ID: <20101109125326.GH2829@murdoc>

On Tue, Nov 09, 2010 at 06:58:05AM -0500, Neal Becker wrote:
> Thanks for the suggestions.
> 
> I'd also like to add authentication, but it seems rather daunting.

You should not. Add basic or digest authentication is really easy. Take
a look at Calderone's Twisted Web in 60 seconds: HTTP authentication[1],
I read the series time ago and I don't remember exactly the content but
the serie is really well written, the best 60 seconds (per episode)
spent to learn the bases of twisted web.

> Maybe I could just restrict the xmlrpc to listen only on connection from the 
> local host?

yes, you could and twisted tap plugin system helps you on this. Just
create a tap plugin with the options you need. An simple example:


	from twisted.python import usage
	from twisted.plugin import IPlugin
    from twisted.application import strports, service

	class Options(usage.Options):

		optParameters = [
				['port', 'p', '80', 'Listen port.', int],
				['interface', 'i', None, 'Interface to which to bind.'],
				]


	class ProcessXMLRPCServiceMaker(object):
		implements(service.IServiceMaker, IPlugin)
		tapname = "processxmlrpc"
		description = "Remote process control in xmlrpc"
		options = Options

		def makeService(self, options):
			factory = ... # XXX
			description = 'tcp:' + str(config['port'])
			if config['interface']:
				description += ':interface=' + config['interface']
			return strports.service(description, factory)


You can setup the server to listen to localhost and prepare a reverse
proxy that require authentication and that accept connections from all
interfaces, as example.

m.

-- 
Dalle virtù che si esigono in un domestico, l'Eccellenza Vostra conosce molti
padroni degni d'esser servitori?
		-- Pierre Augustin Caron de Beaumarchais



From no-reply at rolex.com  Thu Nov 11 18:56:38 2010
From: no-reply at rolex.com (Rolex.com)
Date: Fri, 12 Nov 2010 01:56:38 -0000
Subject: [Twisted-Python] twisted-python@twistedmatrix.com Rolex For You -50%
Message-ID: <mailman.10.1574573466.12674.twisted-python@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101112/8541df62/attachment.html>

From ndbecker2 at gmail.com  Fri Nov 12 13:25:51 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Fri, 12 Nov 2010 15:25:51 -0500
Subject: [Twisted-Python] my batch queue code
Message-ID: <ibk7sf$ogi$1@dough.gmane.org>

My simple batch processing system is moved here:

http://code.google.com/p/batch-queue/

Seems to be reasonably functional.  Any suggestions/contributions 
appreciated.

One thing todo is to add some authentication.  For now the server listens 
for xmlrpc requests and will run any command without authentication.  In my 
current environment (single user system, firewalled), that's not a fatal 
flaw.




From rsgames at inbox.com  Sat Nov 13 20:56:16 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sat, 13 Nov 2010 19:56:16 -0800
Subject: [Twisted-Python] wxReactor Issues
Message-ID: <183F75F0C38.00000278rsgames@inbox.com>

Hello,
My Twisted Python application with wxReactor crashes every time the user exits the application. The OnClose event calls a method that does reactor.stop(). I've ran this through gdb, and have noticed that this is because 2 threads aren't getting closed. What I find strange though, that is if the server closes the connection to the user, the 2 threads exit, and you are able to close the application our properly. I have tried running reactor.disconnectAll() before the reactor.stop() in my OnClose event, with no luck. The client closes the connection to the server, but the threads do not exit. I have also this patch found here (http://twistedmatrix.com/trac/ticket/3948):
if wxreactor.WxReactor.callFromThread is not None:
    oldStop = wxreactor.WxReactor.stop
    def stopFromThread(self):
        reactor.callFromThread(oldStop)
    wxreactor.WxReactor.stop = stopFromThread

This problem occurs when I do and don't call the MainLoop() on the wx.App(). If you all could provide some insight on this, I would be very grateful.
Thank you.

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE



From itamar at itamarst.org  Sat Nov 13 21:21:42 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 13 Nov 2010 23:21:42 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <183F75F0C38.00000278rsgames@inbox.com>
References: <183F75F0C38.00000278rsgames@inbox.com>
Message-ID: <1289708502.1653.1.camel@blake>

On Sat, 2010-11-13 at 19:56 -0800, RSGames Support wrote:
> if wxreactor.WxReactor.callFromThread is not None:
>     oldStop = wxreactor.WxReactor.stop
>     def stopFromThread(self):
>         reactor.callFromThread(oldStop)
>     wxreactor.WxReactor.stop = stopFromThread

Did you try the patch?




From rsgames at inbox.com  Sat Nov 13 21:34:01 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sat, 13 Nov 2010 20:34:01 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289708502.1653.1.camel@blake>
References: <183f75f0c38.00000278rsgames@inbox.com>
Message-ID: <1893DBBAEAC.000002A7rsgames@inbox.com>

Hi,
Yes, I tried the code below with no luck.
The OnClose() event calls this:
def KillSock():
 if wxreactor.WxReactor.callFromThread is not None:
    oldStop = wxreactor.WxReactor.stop
    def stopFromThread(self):
        reactor.callFromThread(oldStop)
    wxreactor.WxReactor.stop = stopFromThread
 reactor.stop()

When I ran this code in gdb, it did not say the two threads exited like they should do.

Thank you.
-Ryan
> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Sat, 13 Nov 2010 23:21:42 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Sat, 2010-11-13 at 19:56 -0800, RSGames Support wrote:
>> if wxreactor.WxReactor.callFromThread is not None:
>>     oldStop = wxreactor.WxReactor.stop
>>     def stopFromThread(self):
>>         reactor.callFromThread(oldStop)
>>     wxreactor.WxReactor.stop = stopFromThread
> 
> Did you try the patch?

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE



From exarkun at twistedmatrix.com  Sat Nov 13 22:05:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Nov 2010 05:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1289711124.44.708059937@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101114/ffaf4910/attachment.html>

From exarkun at twistedmatrix.com  Sat Nov 13 22:29:45 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Nov 2010 05:29:45 -0000
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <183F75F0C38.00000278rsgames@inbox.com>
References: <183F75F0C38.00000278rsgames@inbox.com>
Message-ID: <20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>

On 03:56 am, rsgames at inbox.com wrote:
>Hello,
>My Twisted Python application with wxReactor crashes every time the 
>user exits the application.

What do you mean when you say "crashes"?  A SIGSEGV is probably due to a 
bug in CPython or (more likely) wxPython.

Jean-Paul
>The OnClose event calls a method that does reactor.stop(). I've ran 
>this through gdb, and have noticed that this is because 2 threads 
>aren't getting closed. What I find strange though, that is if the 
>server closes the connection to the user, the 2 threads exit, and you 
>are able to close the application our properly. I have tried running 
>reactor.disconnectAll() before the reactor.stop() in my OnClose event, 
>with no luck. The client closes the connection to the server, but the 
>threads do not exit. I have also this patch found here 
>(http://twistedmatrix.com/trac/ticket/3948):
>if wxreactor.WxReactor.callFromThread is not None:
>    oldStop = wxreactor.WxReactor.stop
>    def stopFromThread(self):
>        reactor.callFromThread(oldStop)
>    wxreactor.WxReactor.stop = stopFromThread
>
>This problem occurs when I do and don't call the MainLoop() on the 
>wx.App(). If you all could provide some insight on this, I would be 
>very grateful.
>Thank you.
>
>____________________________________________________________
>Send any screenshot to your friends in seconds...
>Works in all emails, instant messengers, blogs, forums and social 
>networks.
>TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for 
>FREE
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dominic at baudvine.net  Sun Nov 14 08:07:18 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Sun, 14 Nov 2010 16:07:18 +0100
Subject: [Twisted-Python] ProcessProtocol stdin/stdout loop
Message-ID: <4CDFFB26.5050905@baudvine.net>

Hi all,

It appears that I have managed to loop a ProcessProtocol subclass's
transport.write() right back into its outReceived.  It's not directly
called, which leads me to believe that somehow stdin and stdout got tied
up.  Anything thrown at transport.write() doesn't appear to reach the
actual process.  I checked by running `cat > log` through it, the file
'log' is created but remains empty.

I am baffled, but will continue to poke at it.  In the meantime, I'd
love to hear if anyone has a clue as to what I might have messed up.

Thanks,
-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 260 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20101114/2724b207/attachment.sig>

From dominic at baudvine.net  Sun Nov 14 08:09:00 2010
From: dominic at baudvine.net (Dominic van Berkel)
Date: Sun, 14 Nov 2010 16:09:00 +0100
Subject: [Twisted-Python] ProcessProtocol stdin/stdout loop
In-Reply-To: <4CDFFB26.5050905@baudvine.net>
References: <4CDFFB26.5050905@baudvine.net>
Message-ID: <4CDFFB8C.5060002@baudvine.net>

On 14-11-2010 16:07, Dominic van Berkel wrote:
> Hi all,
> 
> It appears that I have managed to loop a ProcessProtocol subclass's
> transport.write() right back into its outReceived.  It's not directly
> called, which leads me to believe that somehow stdin and stdout got tied
> up.  Anything thrown at transport.write() doesn't appear to reach the
> actual process.  I checked by running `cat > log` through it, the file
> 'log' is created but remains empty.
> 
> I am baffled, but will continue to poke at it.  In the meantime, I'd
> love to hear if anyone has a clue as to what I might have messed up.
> 
> Thanks,

Forgot to mention that the ProcessProtocol instance does receive
whatever the process sends my way.

-- 
Dominic van Berkel
"You don't have conversations with microprocessors. You tell them what
to do, then helplessly watch the disaster when they take you literally."
- David Brin, Startide Rising

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 260 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20101114/b7581e9b/attachment.sig>

From itamar at itamarst.org  Sun Nov 14 08:47:31 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Nov 2010 10:47:31 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>
References: <183F75F0C38.00000278rsgames@inbox.com>
	<20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>
Message-ID: <1289749651.1897.0.camel@blake>

On Sun, 2010-11-14 at 05:29 +0000, exarkun at twistedmatrix.com wrote:
> On 03:56 am, rsgames at inbox.com wrote:
> >Hello,
> >My Twisted Python application with wxReactor crashes every time the 
> >user exits the application.
> 
> What do you mean when you say "crashes"?  A SIGSEGV is probably due to a 
> bug in CPython or (more likely) wxPython.

setDaemon(True) threads often crash on exit...




From itamar at itamarst.org  Sun Nov 14 08:50:01 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Nov 2010 10:50:01 -0500
Subject: [Twisted-Python] ProcessProtocol stdin/stdout loop
In-Reply-To: <4CDFFB26.5050905@baudvine.net>
References: <4CDFFB26.5050905@baudvine.net>
Message-ID: <1289749801.1897.2.camel@blake>

On Sun, 2010-11-14 at 16:07 +0100, Dominic van Berkel wrote:
> Hi all,
> 
> It appears that I have managed to loop a ProcessProtocol subclass's
> transport.write() right back into its outReceived.  It's not directly
> called, which leads me to believe that somehow stdin and stdout got tied
> up.

Can you provide a minimal, self-contained code example demonstrating
this?




From rsgames at inbox.com  Sun Nov 14 10:28:18 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 09:28:18 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <20101114052945.2040.301555.divmod.xquotient.865@localhost.localdomain>
References: <183f75f0c38.00000278rsgames@inbox.com>
Message-ID: <1F5684815E0.000005B1rsgames@inbox.com>

Hi,
Well, I close the application (by clicking the X). Then a few seconds later, Ubuntu comes up with a dialog asking me if I want to force quit the application. gdb reports the following when I force quit: Program terminated with signal SIGKILL, Killed.

As far as to why it is crashing, I'm almost positive it is because there are two threads that aren't getting stopped properly.
Thank you.

> -----Original Message-----
> From: exarkun at twistedmatrix.com
> Sent: Sun, 14 Nov 2010 05:29:45 -0000
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On 03:56 am, rsgames at inbox.com wrote:
> >Hello,
> >My Twisted Python application with wxReactor crashes every time the
> >user exits the application.
> 
> What do you mean when you say "crashes"?  A SIGSEGV is probably due to a
> bug in CPython or (more likely) wxPython.
> 
> Jean-Paul
> >The OnClose event calls a method that does reactor.stop(). I've ran
> >this through gdb, and have noticed that this is because 2 threads
> >aren't getting closed. What I find strange though, that is if the
> >server closes the connection to the user, the 2 threads exit, and you
> >are able to close the application our properly. I have tried running
> >reactor.disconnectAll() before the reactor.stop() in my OnClose event,
> >with no luck. The client closes the connection to the server, but the
> >threads do not exit. I have also this patch found here
> >(http://twistedmatrix.com/trac/ticket/3948):
> >if wxreactor.WxReactor.callFromThread is not None:
>>    oldStop = wxreactor.WxReactor.stop
>>    def stopFromThread(self):
>>        reactor.callFromThread(oldStop)
>>    wxreactor.WxReactor.stop = stopFromThread
>> 
> >This problem occurs when I do and don't call the MainLoop() on the
> >wx.App(). If you all could provide some insight on this, I would be
> >very grateful.
> >Thank you.
>> 
> >____________________________________________________________
> >Send any screenshot to your friends in seconds...
> >Works in all emails, instant messengers, blogs, forums and social
> >networks.
> >TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for
> >FREE
>> 
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE



From itamar at itamarst.org  Sun Nov 14 12:02:56 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sun, 14 Nov 2010 14:02:56 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1F5684815E0.000005B1rsgames@inbox.com>
References: <183f75f0c38.00000278rsgames@inbox.com>
	<1F5684815E0.000005B1rsgames@inbox.com>
Message-ID: <1289761376.1897.4.camel@blake>

On Sun, 2010-11-14 at 09:28 -0800, RSGames Support wrote:
> Hi,
> Well, I close the application (by clicking the X). Then a few seconds later, Ubuntu comes up with a dialog asking me if I want to force quit the application. gdb reports the following when I force quit: Program terminated with signal SIGKILL, Killed.

That's *not* "crashing", that's "not exiting". The SIGKILL is coming
from the forced kill. So the real issue is, it's not exiting, and it's
not exiting because, as you say, there's still threads running. Does
your program start/use any threads itself?




From rsgames at inbox.com  Sun Nov 14 12:36:13 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 11:36:13 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289761376.1897.4.camel@blake>
References: <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <20746E8FE52.00000663rsgames@inbox.com>

Hi,
Yes, it uses the speechd module on Linux (which uses a thread). The speechd module provided speech output for our visually impaired users. However, when I run the program without speechd at all, I still have this problem. I'm pretty sure it is wxreactor and not speechd that is causing this problem.
Thank you.

> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Sun, 14 Nov 2010 14:02:56 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Sun, 2010-11-14 at 09:28 -0800, RSGames Support wrote:
>> Hi,
>> Well, I close the application (by clicking the X). Then a few seconds
>> later, Ubuntu comes up with a dialog asking me if I want to force quit
>> the application. gdb reports the following when I force quit: Program
>> terminated with signal SIGKILL, Killed.
> 
> That's *not* "crashing", that's "not exiting". The SIGKILL is coming
> from the forced kill. So the real issue is, it's not exiting, and it's
> not exiting because, as you say, there's still threads running. Does
> your program start/use any threads itself?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
FREE 3D MARINE AQUARIUM SCREENSAVER - Watch dolphins, sharks & orcas on your desktop!
Check it out at http://www.inbox.com/marineaquarium



From rsgames at inbox.com  Sun Nov 14 16:12:18 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 15:12:18 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289761376.1897.4.camel@blake>
References: <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <22576880040.00000754rsgames@inbox.com>

Hi,
I think the best way to debug this is to give you all the source code. You can find it here: http://bit.ly/doEiEJ

To give you all some background on this project: It is a freeware client that uses sockets to connect to a multiplayer game server (currently plays Monopoly and Uno). You will immediately notice there are no graphics. That is because this client only provides audio feedback through speech synthesis and sound effects. The target audience of this project is visually impaired gamers. 

To test the issue, run python rsg.py (which can be found in the src folder. In case you need to know, I use Python 2.6.5). In a terminal, you will see the output the program produces (which is mostly what the server sends to our client). Once you see the line "Connection Made" (which should print very shortly after running), try closing the program (by clicking the X). The client will hang for a few seconds, and then you will need to force quit the application (on Ubuntu, it comes up asking if I want to force quit the application). say

It should be noted that this issue does not occur on Windows, only on Linux (I've tested with Ubuntu) and Mac. 

Thank you.
> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Sun, 14 Nov 2010 14:02:56 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Sun, 2010-11-14 at 09:28 -0800, RSGames Support wrote:
>> Hi,
>> Well, I close the application (by clicking the X). Then a few seconds
>> later, Ubuntu comes up with a dialog asking me if I want to force quit
>> the application. gdb reports the following when I force quit: Program
>> terminated with signal SIGKILL, Killed.
> 
> That's *not* "crashing", that's "not exiting". The SIGKILL is coming
> from the forced kill. So the real issue is, it's not exiting, and it's
> not exiting because, as you say, there's still threads running. Does
> your program start/use any threads itself?
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if5
Capture screenshots, upload images, edit and send them to your friends
through IMs, post on Twitter®, Facebook®, MySpace™, LinkedIn® – FAST!



From rsgames at inbox.com  Sun Nov 14 16:34:44 2010
From: rsgames at inbox.com (RSGames Support)
Date: Sun, 14 Nov 2010 15:34:44 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <22576880040.00000754rsgames@inbox.com>
References: <1289761376.1897.4.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <22898DFFDB6.00000769rsgames@inbox.com>

Hi,
I made a mistake in my previous message, this issue is on Windows, Linux and Mac. One of my testers gave me incorrect information.
I apologize.
Thank you.
> -----Original Message-----
> From: rsgames at inbox.com
> Sent: Sun, 14 Nov 2010 15:12:18 -0800
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> Hi,
> I think the best way to debug this is to give you all the source code.
> You can find it here: http://bit.ly/doEiEJ
> 
> To give you all some background on this project: It is a freeware client
> that uses sockets to connect to a multiplayer game server (currently
> plays Monopoly and Uno). You will immediately notice there are no
> graphics. That is because this client only provides audio feedback
> through speech synthesis and sound effects. The target audience of this
> project is visually impaired gamers.
> 
> To test the issue, run python rsg.py (which can be found in the src
> folder. In case you need to know, I use Python 2.6.5). In a terminal, you
> will see the output the program produces (which is mostly what the server
> sends to our client). Once you see the line "Connection Made" (which
> should print very shortly after running), try closing the program (by
> clicking the X). The client will hang for a few seconds, and then you
> will need to force quit the application (on Ubuntu, it comes up asking if
> I want to force quit the application). say
> 
> It should be noted that this issue does not occur on Windows, only on
> Linux (I've tested with Ubuntu) and Mac.
> 
> Thank you.

____________________________________________________________
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if5
Capture screenshots, upload images, edit and send them to your friends
through IMs, post on Twitter®, Facebook®, MySpace™, LinkedIn® – FAST!



From no-reply at rolex.com  Sun Nov 14 23:13:06 2010
From: no-reply at rolex.com (Rolex.com)
Date: Mon, 15 Nov 2010 06:13:06 -0000
Subject: [Twisted-Python] twisted-python@twistedmatrix.com Rolex For You -50%
Message-ID: <mailman.11.1574573466.12674.twisted-python@twistedmatrix.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101115/52b65bc7/attachment.html>

From gtvrreddy at gmail.com  Mon Nov 15 10:55:48 2010
From: gtvrreddy at gmail.com (Ramana Reddy)
Date: Mon, 15 Nov 2010 23:25:48 +0530
Subject: [Twisted-Python] Error in twisted-python while running nox-core
Message-ID: <AANLkTi=tqnv1ZG7yzf8dXFKB3afZG98nTBChxTT8oSS=@mail.gmail.com>

Hi Everyone,
I got the following error after running the following command:
./nox_core -i ptcp:6633 switch switch_management hostip hosttracker
monitoring jsonmessenger

NOX 0.9.0(zaku)~full~beta (nox_core), compiled Nov 15 2010 21:36:36
Compiled with OpenFlow 0x01
00001|nox|ERR:Cannot change the state of 'python' to INSTALLED:
'python' ran into an error:
    Unable to construct a Python component:
    Traceback (most recent call last):
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 364, in instance
        return pyoxidereactor(ctxt)
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 133, in __init__
        signal.signal(signal.SIGCHLD, self._handleSigchld)
    AttributeError: 'pyoxidereactor' object has no attribute
'_handleSigchld'

Thanks,
Ramana
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101115/e9cd3fa8/attachment-0001.html>

From gtvrreddy at gmail.com  Mon Nov 15 10:55:49 2010
From: gtvrreddy at gmail.com (Ramana Reddy)
Date: Mon, 15 Nov 2010 23:25:49 +0530
Subject: [Twisted-Python] Error in twisted-python while running nox-core
Message-ID: <AANLkTinnuGyNn5DKhtD9iX-X0S+5+-immc0-T1DZx9Ts@mail.gmail.com>

Hi Everyone,
I got the following error after running the following command:
./nox_core -i ptcp:6633 switch switch_management hostip hosttracker
monitoring jsonmessenger

NOX 0.9.0(zaku)~full~beta (nox_core), compiled Nov 15 2010 21:36:36
Compiled with OpenFlow 0x01
00001|nox|ERR:Cannot change the state of 'python' to INSTALLED:
'python' ran into an error:
    Unable to construct a Python component:
    Traceback (most recent call last):
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 364, in instance
        return pyoxidereactor(ctxt)
      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 133, in __init__
        signal.signal(signal.SIGCHLD, self._handleSigchld)
    AttributeError: 'pyoxidereactor' object has no attribute
'_handleSigchld'

Thanks,
Ramana
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101115/59729f05/attachment.html>

From exarkun at twistedmatrix.com  Mon Nov 15 11:10:09 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 15 Nov 2010 18:10:09 -0000
Subject: [Twisted-Python] Error in twisted-python while running nox-core
In-Reply-To: <AANLkTi=tqnv1ZG7yzf8dXFKB3afZG98nTBChxTT8oSS=@mail.gmail.com>
References: <AANLkTi=tqnv1ZG7yzf8dXFKB3afZG98nTBChxTT8oSS=@mail.gmail.com>
Message-ID: <20101115181009.2040.445938651.divmod.xquotient.876@localhost.localdomain>

On 05:55 pm, gtvrreddy at gmail.com wrote:
>Hi Everyone,
>I got the following error after running the following command:
>./nox_core -i ptcp:6633 switch switch_management hostip hosttracker
>monitoring jsonmessenger
>
>NOX 0.9.0(zaku)~full~beta (nox_core), compiled Nov 15 2010 21:36:36
>Compiled with OpenFlow 0x01
>00001|nox|ERR:Cannot change the state of 'python' to INSTALLED:
>'python' ran into an error:
>    Unable to construct a Python component:
>    Traceback (most recent call last):
>      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 364, in 
>instance
>        return pyoxidereactor(ctxt)
>      File "./nox/coreapps/pyrt/pyoxidereactor.py", line 133, in 
>__init__
>        signal.signal(signal.SIGCHLD, self._handleSigchld)
>    AttributeError: 'pyoxidereactor' object has no attribute
>'_handleSigchld'

This appears to be caused by nox's use of private Twisted APIs which no 
longer exist.  You can try installing an older version of Twisted or 
updating nox to work with the version you're using now.

Jean-Paul
>Thanks,
>Ramana



From rsgames at inbox.com  Mon Nov 15 20:28:33 2010
From: rsgames at inbox.com (RSGames Support)
Date: Mon, 15 Nov 2010 19:28:33 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <22898DFFDB6.00000769rsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<1289761376.1897.4.camel@blake> <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <3126CE5CFE8.000001FCrsgames@inbox.com>

Hi,
I have created a simple demo (one .py file) to show the problem without the entire application. You can download it here: http://bit.ly/a2TTlT

Thank you for any help in advance.

> -----Original Message-----
> From: rsgames at inbox.com
> Sent: Sun, 14 Nov 2010 15:34:44 -0800
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> Hi,
> I made a mistake in my previous message, this issue is on Windows, Linux
> and Mac. One of my testers gave me incorrect information.
> I apologize.
> Thank you.

____________________________________________________________
Send your photos by email in seconds...
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if3
Works in all emails, instant messengers, blogs, forums and social networks.



From exarkun at twistedmatrix.com  Mon Nov 15 20:58:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 16 Nov 2010 03:58:31 -0000
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <3126CE5CFE8.000001FCrsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<1289761376.1897.4.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
	<3126CE5CFE8.000001FCrsgames@inbox.com>
Message-ID: <20101116035831.2040.161046233.divmod.xquotient.880@localhost.localdomain>

On 03:28 am, rsgames at inbox.com wrote:
>Hi,
>I have created a simple demo (one .py file) to show the problem without 
>the entire application. You can download it here: http://bit.ly/a2TTlT
>
>Thank you for any help in advance.

Linux (Ubuntu 9.10)
Python 2.6.4
Twisted trunk at 30276
wxPython 2.8.10.1-0ubuntu1

The demo exits quickly when I click the window-manager provided close 
window button.

Jean-Paul



From itamar at itamarst.org  Mon Nov 15 21:12:09 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 15 Nov 2010 23:12:09 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <3126CE5CFE8.000001FCrsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<1289761376.1897.4.camel@blake> <183f75f0c38.00000278rsgames@inbox.com>
	<1f5684815e0.000005b1rsgames@inbox.com>
	<3126CE5CFE8.000001FCrsgames@inbox.com>
Message-ID: <1289880729.1787.0.camel@blake>

On Mon, 2010-11-15 at 19:28 -0800, RSGames Support wrote:
> Hi,
> I have created a simple demo (one .py file) to show the problem without the entire application. You can download it here: http://bit.ly/a2TTlT

And, if you switch reactor.stop() with
reactor.callFromThread(reactor.stop) you still have the problem? What
OS/wx/python/twisted version exhibits the issue for you?




From anuhacks at gmail.com  Tue Nov 16 04:59:48 2010
From: anuhacks at gmail.com (anusha k)
Date: Tue, 16 Nov 2010 17:29:48 +0530
Subject: [Twisted-Python] sample unit testing for xml-rpc's
Message-ID: <AANLkTim92hG+LeZr+XicZ3wuFv28ck0QFx1Ht_=GkDic@mail.gmail.com>

Hello all,

I want to know how to test xml-rpc functions written using python-twisted. I
came across trial framework. But cant find proper information regarding
that.

Can anyone provide info regarding this or sample unit test-case how to test
that.

Thanks in advance



--

Njoy the share of Freedom :)
Anusha Kadambala
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101116/0a4f9911/attachment.html>

From itamar at itamarst.org  Tue Nov 16 06:25:27 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 16 Nov 2010 08:25:27 -0500
Subject: [Twisted-Python] sample unit testing for xml-rpc's
In-Reply-To: <AANLkTim92hG+LeZr+XicZ3wuFv28ck0QFx1Ht_=GkDic@mail.gmail.com>
References: <AANLkTim92hG+LeZr+XicZ3wuFv28ck0QFx1Ht_=GkDic@mail.gmail.com>
Message-ID: <1289913927.1658.0.camel@blake>

On Tue, 2010-11-16 at 17:29 +0530, anusha k wrote:

> Can anyone provide info regarding this or sample unit test-case how to
> test that.

http://twistedmatrix.com/trac/browser/trunk/twisted/web/test/test_xmlrpc.py may provide some useful examples.




From rsgames at inbox.com  Tue Nov 16 11:00:50 2010
From: rsgames at inbox.com (RSGames Support)
Date: Tue, 16 Nov 2010 10:00:50 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <1289880729.1787.0.camel@blake>
References: <22576880040.00000754rsgames@inbox.com>
	<3126ce5cfe8.000001fcrsgames@inbox.com>
	<183f75f0c38.00000278rsgames@inbox.com> <1289761376.1897.4.camel@blake>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <38C4899883A.000006E5rsgames@inbox.com>

Hi,
Thank you for the suggestion. Unfortunately, I still have this problem when I call the reactor.callFromThread(reactor.stop). I have this problem with:
OS: Ubuntu 10.04
WX (python-wxgtk2.8): 2.8.10.1-0ubuntu1.2
Twisted: 10.0.0-2ubuntu2
Python: 2.6.5
Here is some output from gdb:
-----------------------------
(gdb) run test.py
Starting program: /usr/bin/python test.py
[Thread debugging using libthread_db enabled]
Started to connect.
[New Thread 0x7fffe8dc1710 (LWP 31902)]
[New Thread 0x7fffe85c0710 (LWP 31903)]
-Output from the server here
-At this time, I try to close the program. It just sits there, and after a few seconds, Ubuntu prompts me to force quit.
[Thread 0x7fffe85c0710 (LWP 31903) exited]
[Thread 0x7fffe8dc1710 (LWP 31902) exited]

Program terminated with signal SIGKILL, Killed.
The program no longer exists.
-----------------------------

Thank you.

> -----Original Message-----
> From: itamar at itamarst.org
> Sent: Mon, 15 Nov 2010 23:12:09 -0500
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> On Mon, 2010-11-15 at 19:28 -0800, RSGames Support wrote:
>> Hi,
>> I have created a simple demo (one .py file) to show the problem without
>> the entire application. You can download it here: http://bit.ly/a2TTlT
> 
> And, if you switch reactor.stop() with
> reactor.callFromThread(reactor.stop) you still have the problem? What

____________________________________________________________
FREE 3D EARTH SCREENSAVER - Watch the Earth right on your desktop!
Check it out at http://www.inbox.com/earth



From rsgames at inbox.com  Tue Nov 16 17:29:49 2010
From: rsgames at inbox.com (RSGames Support)
Date: Tue, 16 Nov 2010 16:29:49 -0800
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <38C4899883A.000006E5rsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<3126ce5cfe8.000001fcrsgames@inbox.com> <1289880729.1787.0.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com> <1289761376.1897.4.camel@blake>
	<1f5684815e0.000005b1rsgames@inbox.com>
Message-ID: <3C29F562CF6.000008B5rsgames@inbox.com>

Hi,
I have found something interesting. When I do not call sys.exit(), and just call this:  reactor.callFromThread(reactor.stop), the program exits properly. I was wondering if it was safe to not call sys.exit()? If so I think the problem is fixed.
Thank you.

> -----Original Message-----
> From: rsgames at inbox.com
> Sent: Tue, 16 Nov 2010 10:00:50 -0800
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] wxReactor Issues
> 
> Hi,
> Thank you for the suggestion. Unfortunately, I still have this problem
> when I call the reactor.callFromThread(reactor.stop). I have this problem
> with:
> OS: Ubuntu 10.04
> WX (python-wxgtk2.8): 2.8.10.1-0ubuntu1.2
> Twisted: 10.0.0-2ubuntu2
> Python: 2.6.5
> Here is some output from gdb:
> -----------------------------
> (gdb) run test.py
> Starting program: /usr/bin/python test.py
> [Thread debugging using libthread_db enabled]
> Started to connect.
> [New Thread 0x7fffe8dc1710 (LWP 31902)]
> [New Thread 0x7fffe85c0710 (LWP 31903)]
> -Output from the server here
> -At this time, I try to close the program. It just sits there, and after
> a few seconds, Ubuntu prompts me to force quit.
> [Thread 0x7fffe85c0710 (LWP 31903) exited]
> [Thread 0x7fffe8dc1710 (LWP 31902) exited]
> 
> Program terminated with signal SIGKILL, Killed.
> The program no longer exists.
> -----------------------------
> 
> Thank you.
> 
>> -----Original Message-----
>> From: itamar at itamarst.org
>> Sent: Mon, 15 Nov 2010 23:12:09 -0500
>> To: twisted-python at twistedmatrix.com
>> Subject: Re: [Twisted-Python] wxReactor Issues
>> 
>> On Mon, 2010-11-15 at 19:28 -0800, RSGames Support wrote:
>>> Hi,
>>> I have created a simple demo (one .py file) to show the problem without
>>> the entire application. You can download it here: http://bit.ly/a2TTlT
>> 
>> And, if you switch reactor.stop() with
>> reactor.callFromThread(reactor.stop) you still have the problem? What
> 
> ____________________________________________________________
> FREE 3D EARTH SCREENSAVER - Watch the Earth right on your desktop!
> Check it out at http://www.inbox.com/earth
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
Publish your photos in seconds for FREE
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if4



From itamar at itamarst.org  Tue Nov 16 20:39:26 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Tue, 16 Nov 2010 22:39:26 -0500
Subject: [Twisted-Python] wxReactor Issues
In-Reply-To: <3C29F562CF6.000008B5rsgames@inbox.com>
References: <22576880040.00000754rsgames@inbox.com>
	<3126ce5cfe8.000001fcrsgames@inbox.com> <1289880729.1787.0.camel@blake>
	<183f75f0c38.00000278rsgames@inbox.com> <1289761376.1897.4.camel@blake>
	<1f5684815e0.000005b1rsgames@inbox.com>
	<3C29F562CF6.000008B5rsgames@inbox.com>
Message-ID: <1289965166.1615.1.camel@blake>

On Tue, 2010-11-16 at 16:29 -0800, RSGames Support wrote:
> Hi,
> I have found something interesting. When I do not call sys.exit(), and just call this:  reactor.callFromThread(reactor.stop), the program exits properly. I was wondering if it was safe to not call sys.exit()? If so I think the problem is fixed.

sys.exit() will raise an exception, SystemExit. It's certainly possible
that raising it will cause problems, though I wouldn't expect it to keep
threads from exiting. It's possible there's some race condition involved
that is less likely to happen due to this change. Regardless, You should
not call it if you're using Twisted (or if you do, it should be called
after reactor.run()).




From ndbecker2 at gmail.com  Wed Nov 17 08:40:10 2010
From: ndbecker2 at gmail.com (Neal Becker)
Date: Wed, 17 Nov 2010 10:40:10 -0500
Subject: [Twisted-Python] signalfd
References: <iat383$uqo$1@dough.gmane.org>
Message-ID: <ic0t0r$c75$1@dough.gmane.org>

One more piece seems available:

http://code.google.com/p/python-atfork/




From foom at fuhm.net  Wed Nov 17 10:10:01 2010
From: foom at fuhm.net (James Y Knight)
Date: Wed, 17 Nov 2010 12:10:01 -0500
Subject: [Twisted-Python] signalfd
In-Reply-To: <ic0t0r$c75$1@dough.gmane.org>
References: <iat383$uqo$1@dough.gmane.org> <ic0t0r$c75$1@dough.gmane.org>
Message-ID: <11342305-7897-43F5-AA0F-74DE7B36DDD7@fuhm.net>

On Nov 17, 2010, at 10:40 AM, Neal Becker wrote:
> One more piece seems available:
> 
> http://code.google.com/p/python-atfork/


Nope, that's not a "real" atfork: it only monkey-patches python's os.fork() function, so it doesn't catch any fork done by C code. So it's not good enough. (but of course, as mentioned previously, pthread_atfork itself isn't good enough either).

See also a comment I wrote on lwn.net recently:
http://lwn.net/Articles/415684/

James


From rsgames at inbox.com  Wed Nov 17 14:56:12 2010
From: rsgames at inbox.com (RSGames Support)
Date: Wed, 17 Nov 2010 13:56:12 -0800
Subject: [Twisted-Python] TextEntry
Message-ID: <476545CB486.000001A2rsgames@inbox.com>

Hi,
I have been using the following code to show the user a TextEntryDialog, that would allow users to enter data in, and press return. Since I've started using Twisted, this doesn't work on Mac OS X. The dialog pops up okay, but you can't actually enter any data into the box. The cursor does not appear. When I click inside the box to try to make it appear, it quickly disappears again.
def handle_input(data):
 prompt=data.replace("+INPUT ","")
 new=wx.TextEntryDialog(global_vars.frame, "", prompt)
 new.Raise()
 if new.ShowModal() == wx.ID_OK:
  socks.sockObj.sendData(new.GetValue())
 else:
  socks.sockObj.sendData("+~!?CANCEL?!~")
  new.Destroy()

Thank you.

____________________________________________________________
Send your photos by email in seconds...
TRY FREE IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if3
Works in all emails, instant messengers, blogs, forums and social networks.



From exarkun at twistedmatrix.com  Wed Nov 17 22:00:45 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 18 Nov 2010 05:00:45 -0000
Subject: [Twisted-Python] TextEntry
In-Reply-To: <476545CB486.000001A2rsgames@inbox.com>
References: <476545CB486.000001A2rsgames@inbox.com>
Message-ID: <20101118050045.2040.1837717498.divmod.xquotient.943@localhost.localdomain>

On 17 Nov, 09:56 pm, rsgames at inbox.com wrote:
>Hi,
>I have been using the following code to show the user a 
>TextEntryDialog, that would allow users to enter data in, and press 
>return. Since I've started using Twisted, this doesn't work on Mac OS 
>X. The dialog pops up okay, but you can't actually enter any data into 
>the box. The cursor does not appear. When I click inside the box to try 
>to make it appear, it quickly disappears again.
>def handle_input(data):
>prompt=data.replace("+INPUT ","")
>new=wx.TextEntryDialog(global_vars.frame, "", prompt)
>new.Raise()
>if new.ShowModal() == wx.ID_OK:
>  socks.sockObj.sendData(new.GetValue())
>else:
>  socks.sockObj.sendData("+~!?CANCEL?!~")
>  new.Destroy()

You probably want to avoid modal dialogs (in any toolkit) when 
integrating with Twisted.  The require a reentrant mainloop to 
implement, and no Twisted reactor (ie, mainloop) is reentrant.

Whether or not the fact that this is a modal dialog is actually causing 
this particular problem, I don't know.

Jean-Paul



From rsgames at inbox.com  Thu Nov 18 16:10:24 2010
From: rsgames at inbox.com (RSGames Support)
Date: Thu, 18 Nov 2010 15:10:24 -0800
Subject: [Twisted-Python] TextEntry
In-Reply-To: <20101118050045.2040.1837717498.divmod.xquotient.943@localhost.localdomain>
References: <476545cb486.000001a2rsgames@inbox.com>
Message-ID: <549DC078784.000004CArsgames@inbox.com>

Hi,
Okay. Well that's not so great - these TextEntryDialogs are quite important to the program. Anyway on Windows and Linux, ShowModal() seems to work really well with wxreactor, and it is only Mac OS X that is the problem.
Thank you.
> -----Original Message-----
> From: exarkun at twistedmatrix.com
> Sent: Thu, 18 Nov 2010 05:00:45 -0000
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] TextEntry
> 
> On 17 Nov, 09:56 pm, rsgames at inbox.com wrote:
> >Hi,
> >I have been using the following code to show the user a
> >TextEntryDialog, that would allow users to enter data in, and press
> >return. Since I've started using Twisted, this doesn't work on Mac OS
> >X. The dialog pops up okay, but you can't actually enter any data into
> >the box. The cursor does not appear. When I click inside the box to try
> >to make it appear, it quickly disappears again.
> >def handle_input(data):
> >prompt=data.replace("+INPUT ","")
> >new=wx.TextEntryDialog(global_vars.frame, "", prompt)
> >new.Raise()
> >if new.ShowModal() == wx.ID_OK:
>>  socks.sockObj.sendData(new.GetValue())
> >else:
>>  socks.sockObj.sendData("+~!?CANCEL?!~")
>>  new.Destroy()
> 
> You probably want to avoid modal dialogs (in any toolkit) when
> integrating with Twisted.  The require a reentrant mainloop to
> implement, and no Twisted reactor (ie, mainloop) is reentrant.
> 
> Whether or not the fact that this is a modal dialog is actually causing
> this particular problem, I don't know.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

____________________________________________________________
Send any screenshot to your friends in seconds...
Works in all emails, instant messengers, blogs, forums and social networks.
TRY IM TOOLPACK at http://www.imtoolpack.com/default.aspx?rc=if2 for FREE



From glyph at twistedmatrix.com  Fri Nov 19 07:25:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 19 Nov 2010 09:25:40 -0500
Subject: [Twisted-Python] TextEntry
In-Reply-To: <549DC078784.000004CArsgames@inbox.com>
References: <476545cb486.000001a2rsgames@inbox.com>
	<549DC078784.000004CArsgames@inbox.com>
Message-ID: <CDA7CA4D-D8D8-4127-80DC-1D9490841E40@twistedmatrix.com>

On Nov 18, 2010, at 6:10 PM, RSGames Support wrote:

> Okay. Well that's not so great - these TextEntryDialogs are quite important to the program. Anyway on Windows and Linux, ShowModal() seems to work really well with wxreactor, and it is only Mac OS X that is the problem.

The key word here is "seems".  You will get weird errors on those platforms eventually, you just haven't yet.

Anyway, it's fine to use dialogs with Twisted.  The issue is APIs like ShowModal(), which expect to be able to block.  Instead you should be using Show(), and make your own API that returns a Deferred from your dialog.

Other toolkits allow you to show a modal dialog without blocking your whole program: for example, with GTK, you can pass the gtk.DIALOG_MODAL flag to gtk.Dialog, and then simply call gtk.Dialog.show_all() instead of gtk.Dialog.run().  wxwindows appears to incorrectly conflate the idea of a modal dialog with a particular type of control flow.

(In my personal opinion, modal dialogs are terrible UI anyway, and should be avoided.  You should be able to prompt the user without interrupting everything else they're doing in the program.)




From dripton at ripton.net  Sat Nov 20 08:41:58 2010
From: dripton at ripton.net (David Ripton)
Date: Sat, 20 Nov 2010 10:41:58 -0500
Subject: [Twisted-Python] TextEntry
In-Reply-To: <CDA7CA4D-D8D8-4127-80DC-1D9490841E40@twistedmatrix.com>
References: <476545cb486.000001a2rsgames@inbox.com>	<549DC078784.000004CArsgames@inbox.com>
	<CDA7CA4D-D8D8-4127-80DC-1D9490841E40@twistedmatrix.com>
Message-ID: <4CE7EC46.9080600@ripton.net>

On 11/19/10 09:25, Glyph Lefkowitz wrote:

> (In my personal opinion, modal dialogs are terrible UI anyway, and
> should be avoided.  You should be able to prompt the user without
> interrupting everything else they're doing in the program.)

I agree for 99% of dialogs, but modal dialogs actually make sense for a 
few things.  For example, the "Do you really want to quit the program 
without saving?" dialog in many editors.

-- 
David Ripton    dripton at ripton.net



From exarkun at twistedmatrix.com  Sat Nov 20 22:05:21 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Nov 2010 05:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1290315921.13.1616633412@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101121/72ff8b72/attachment-0001.html>

From glyph at twistedmatrix.com  Mon Nov 22 22:05:33 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Nov 2010 00:05:33 -0500
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
Message-ID: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>

Despite a brief and unsuccessful attempt by Canadian forces to wrest control
of the Twisted release process, it continues.  The francophone domination of
North America may be inevitable, but it won't happen today.  Coming to you
from an ominous tower above Cambridge, Massachusetts, Twisted 10.2.0,
pre-release 3, is here!

You may - and should! - retrieve it from <
http://twistedmatrix.com/users/glyph/10.2.0pre3/>.

To avoid any further delays in getting this release out, we will be keeping
to a tight schedule.  Unless there are any undiscovered, unfixed regressions
from 10.1.0,* the final release of Twisted 10.2.0 will be made on November
29, 2010.  That is **one week from today.*

**Developers, please install the release now and test with your
applications, so you won't be caught off guard when the final release is
made.

This new pre-release includes important bugfixes and several exciting new
features.  Just since the previous prerelease:

   - A new, simpler, *substantially* more robust CoreFoundation reactor.
   http://tm.tl/1833
   - A plug-in API for adding new types of endpoint descriptions.
   http://tm.tl/4695

Other highlights, since the 10.1 release:

   - Improvements to the implementation of Deferred which should both
   improve performance and fix certain runtime errors with long callback
   chains. http://tm.tl/411
   - Deferred.setTimeout is (finally) gone.  http://tm.tl/1702
   - NetstringReceiver is substantially faster. http://tm.tl/4378

Thanks to everyone who worked on the release automation tools, for making
this release possible.  I can guarantee that if I had to spend a moment
longer on it, it wouldn't have gotten done.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101123/56f9f807/attachment-0001.html>

From eric.faurot at gmail.com  Wed Nov 24 02:58:25 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 10:58:25 +0100
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
References: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
Message-ID: <AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>

Hi,

I am trying to package it on OpenBSD, and there are quite a number of
regression tests that don't pass there: failures, errors, busy loops,
... 10.0.0 was almost ok in this regard (I slacked on 10.1.0...)
I'm looking into these issues, and I will create tickets for those.

Starting now: http://twistedmatrix.com/trac/ticket/4747

Eric.



From eric.faurot at gmail.com  Wed Nov 24 07:56:46 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 15:56:46 +0100
Subject: [Twisted-Python] [Twisted] #4747:
 tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is broken in many
 ways
In-Reply-To: <055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
References: <046.891948c7fe2b532f0e679106aa0d4d3c@twistedmatrix.com>
	<055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
Message-ID: <AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>

On Wed, Nov 24, 2010 at 3:28 PM, Twisted <trac at twistedmatrix.com> wrote:
> #4747: tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is broken in many
> ways
> ----------------------------+-----------------------------------------------
>     Reporter:  soyt        |           Owner:  soyt
>         Type:  regression  |          Status:  new
>     Priority:  normal      |       Milestone:  Twisted 10.2
>    Component:  core        |        Keywords:
>       Branch:              |   Branch_author:
> Launchpad_bug:              |
> ----------------------------+-----------------------------------------------
> Changes (by exarkun):
>
>  * owner:  glyph => soyt
>  * keywords:  review =>
>
>
> Comment:
>
>  Thanks very much for the patch.  We don't have any OpenBSD machines for
>  testing, or I suppose we would have noticed this sooner. :)
>
>  To answer the question of what functionality it provides that's worth
>  testing...  `_listOpenFDs` is used by the `reactor.spawnProcess` support
>  to find out which file descriptors need to be closed so that they aren't
>  inherited by the child process.  So, it must work right otherwise the
>  child may inherit file descriptors you did not want it to inherit.  This
>  is an optimization over trying to close (roughly) every integer in the
>  range (3, RLIMIT_NFILES), where RLIMIT_NFILES is often around 1024.

So in my opinion, the function should really return the list of actually
opened files in all cases, and not fallback to a list of possible
list, otherwise
the test case makes no sense. Of course this means trying all fds as last resort
on platforms that don't provide a simpler way to do it.  Doing it there or
doing it by ignoring EBADF on close() later would be the same, as far as
"suboptimization" is concerned.

Another (nicer?) possibility to achieve the "close non standard fds" would be
to use closefrom().

>  I don't think the patch is quite correct, since ''at most'' the one extra
>  `os.listdir` file descriptor should be in the result set.  Anything more
>  than that indicates the desired functionality isn't being provided.  The
>  more correct test assertion would be that the output is ''either''
>  range(3) or range(4).  However, I'm not sure what you mean by the "uses a
>  pair of interconnected pipes" comment.  Uses it for what?  To implement
>  `os.listdir`?

No, it's much worse :)
While trying to fix the issue, I was surpised to notice that python had 5 opened
fds by default here... After digging a bit further, I found out it is
actually due to
python being linked with libpthread, which installs a pair of pipe at init...

>  It would be nice if we didn't have to scan and close all of
>  range(RLIMIT_NFILES) on OpenBSD though.  Do you know if there is any way
>  to get this information on that platform?

For the general case no, but for the intended purpose I'd say use closefrom()

Eric.



From exarkun at twistedmatrix.com  Wed Nov 24 08:17:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 24 Nov 2010 15:17:56 -0000
Subject: [Twisted-Python] [Twisted]
	#4747:	tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors
	is broken in	many ways
In-Reply-To: <AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>
References: <046.891948c7fe2b532f0e679106aa0d4d3c@twistedmatrix.com>
	<055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
	<AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>
Message-ID: <20101124151756.2109.2108288771.divmod.xquotient.212@localhost.localdomain>

On 02:56 pm, eric.faurot at gmail.com wrote:
>On Wed, Nov 24, 2010 at 3:28 PM, Twisted <trac at twistedmatrix.com> 
>wrote:
>>#4747: tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is 
>>broken in many
>>ways
>>----------------------------+-----------------------------------------------
>>� � Reporter: �soyt � � � �| � � � � � Owner: �soyt
>>� � � � Type: �regression �| � � � � �Status: �new
>>� � Priority: �normal � � �| � � � Milestone: �Twisted 10.2
>>� �Component: �core � � � �| � � � �Keywords:
>>� � � Branch: � � � � � � �| � Branch_author:
>>Launchpad_bug: � � � � � � �|
>>----------------------------+-----------------------------------------------
>>Changes (by exarkun):
>>
>>�* owner: �glyph => soyt
>>�* keywords: �review =>
>>
>>
>>Comment:
>>
>>�Thanks very much for the patch. �We don't have any OpenBSD machines 
>>for
>>�testing, or I suppose we would have noticed this sooner. :)
>>
>>�To answer the question of what functionality it provides that's worth
>>�testing... �`_listOpenFDs` is used by the `reactor.spawnProcess` 
>>support
>>�to find out which file descriptors need to be closed so that they 
>>aren't
>>�inherited by the child process. �So, it must work right otherwise the
>>�child may inherit file descriptors you did not want it to inherit. 
>>This
>>�is an optimization over trying to close (roughly) every integer in 
>>the
>>�range (3, RLIMIT_NFILES), where RLIMIT_NFILES is often around 1024.
>
>So in my opinion, the function should really return the list of 
>actually
>opened files in all cases, and not fallback to a list of possible
>list, otherwise
>the test case makes no sense.

Maybe so.  Fortunately the problem really seems only to be with the 
_test_, right?  On OpenBSD the fallback case will really be used, and 
the file descriptors we want to close will be closed?
>Of course this means trying all fds as last resort
>on platforms that don't provide a simpler way to do it.  Doing it there 
>or
>doing it by ignoring EBADF on close() later would be the same, as far 
>as
>"suboptimization" is concerned.

Right, and this is just what should happen on OpenBSD now.
>
>Another (nicer?) possibility to achieve the "close non standard fds" 
>would be
>to use closefrom().
>>�I don't think the patch is quite correct, since ''at most'' the one 
>>extra
>>�`os.listdir` file descriptor should be in the result set. �Anything 
>>more
>>�than that indicates the desired functionality isn't being provided. 
>>The
>>�more correct test assertion would be that the output is ''either''
>>�range(3) or range(4). �However, I'm not sure what you mean by the 
>>"uses a
>>�pair of interconnected pipes" comment. �Uses it for what? �To 
>>implement
>>�`os.listdir`?
>
>No, it's much worse :)
>While trying to fix the issue, I was surpised to notice that python had 
>5 opened
>fds by default here... After digging a bit further, I found out it is
>actually due to
>python being linked with libpthread, which installs a pair of pipe at 
>init...

Hopefully these are already marked as CLOEXEC, or lots of people would 
already be having lots of problems with them.  Despite that, they should 
be closed by `reactor.spawnProcess` (because that doesn't hurt and it's 
simpler than checking for CLOEXEC).  Then the only problem is that they 
are recreated in the child process and mess up the test's assumptions.

Perhaps another approach to testing this function would be to create a 
file descriptor and assert that:

  - That file descriptor is not open in the child process
  - stdin, stdout, and sterr are open in the child process

Only, without some care, one of the pthread pipe fds might end up 
looking like the probe descriptor, so maybe that can't really work.
>>�It would be nice if we didn't have to scan and close all of
>>�range(RLIMIT_NFILES) on OpenBSD though. �Do you know if there is any 
>>way
>>�to get this information on that platform?
>
>For the general case no, but for the intended purpose I'd say use 
>closefrom()

closefrom() doesn't appear to help.  Descriptors intended to be kept 
open may be mixed together with descriptors which must be closed.  This 
is because of the `childFDs` parameter to `reactor.spawnProcess`, which 
allows arbitrary file descriptors to be passed to the child.

Jean-Paul



From eric.faurot at gmail.com  Wed Nov 24 10:17:39 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 18:17:39 +0100
Subject: [Twisted-Python] [Twisted] #4747:
 tw.inet.test.ProcessTestsBuilder.test_openFileDescriptors is broken in many
 ways
In-Reply-To: <20101124151756.2109.2108288771.divmod.xquotient.212@localhost.localdomain>
References: <046.891948c7fe2b532f0e679106aa0d4d3c@twistedmatrix.com>
	<055.5a49c2a5553f8beb8306b19dba240c01@twistedmatrix.com>
	<AANLkTikR2AjbyiDsG968mKWzWdrnRHYARDNiL8kscApi@mail.gmail.com>
	<20101124151756.2109.2108288771.divmod.xquotient.212@localhost.localdomain>
Message-ID: <AANLkTikwm_BbFGinhTkmVcg6hhm6rJsPGSy06EPdYsnR@mail.gmail.com>

On Wed, Nov 24, 2010 at 4:17 PM,  <exarkun at twistedmatrix.com> wrote:
> On 02:56 pm, eric.faurot at gmail.com wrote:
>> So in my opinion, the function should really return the list of actually
>> opened files in all cases, and not fallback to a list of possible
>> list, otherwise the test case makes no sense.
>
> Maybe so.  Fortunately the problem really seems only to be with the _test_,
> right?  On OpenBSD the fallback case will really be used, and the file
> descriptors we want to close will be closed?

Well, actually no... On bsd, the /dev/* files are statically created. So as it
is now, it picks the 64 existing /dev/fd/* files, which is not correct
since higher
fd with a higher number will never be found. This is getting tricky. So if one
can't trust /dev/fd/ on some platform, maybe it should not be tried at all,
or we need to find a way to know at runtime/configure time if this is safe...

>> Of course this means trying all fds as last resort
>> on platforms that don't provide a simpler way to do it.  Doing it there or
>> doing it by ignoring EBADF on close() later would be the same, as far as
>> "suboptimization" is concerned.
>
> Right, and this is just what should happen on OpenBSD now.

Except for the problem above.

> Hopefully these are already marked as CLOEXEC, or lots of people would
> already be having lots of problems with them.  Despite that, they should be
> closed by `reactor.spawnProcess` (because that doesn't hurt and it's simpler
> than checking for CLOEXEC).  Then the only problem is that they are
> recreated in the child process and mess up the test's assumptions.
>
> Perhaps another approach to testing this function would be to create a file
> descriptor and assert that:
>
>  - That file descriptor is not open in the child process
>  - stdin, stdout, and sterr are open in the child process
>
> Only, without some care, one of the pthread pipe fds might end up looking
> like the probe descriptor, so maybe that can't really work.

That is closer to what the test is really about : spawnProcess don't leave
an undesired fd opened.

> closefrom() doesn't appear to help.  Descriptors intended to be kept open
> may be mixed together with descriptors which must be closed.  This is
> because of the `childFDs` parameter to `reactor.spawnProcess`, which allows
> arbitrary file descriptors to be passed to the child.

Right, I overlooked that.

Oh, I have just thought of another way to test all opened fds in just
one syscall.
It goes like this:

import resource
import select

_poll = [ 0, None ]

def listOpenFDs():
        maxfd = resource.getrlimit(resource.RLIMIT_NOFILE)[0]
        if maxfd != _poll[0]:
                _poll[0] = maxfd
                _poll[1] = select.poll()
                for fd in xrange(maxfd):
                        _poll[1].register(fd)
        return [ d for (d, r) in _poll[1].poll() if r != select.POLLNVAL ]


Eric.



From glyph at twistedmatrix.com  Wed Nov 24 13:28:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 24 Nov 2010 15:28:40 -0500
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>
References: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
	<AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>
Message-ID: <FB0B7A0E-F1B0-4EBD-86D1-9E5FAB588CDD@twistedmatrix.com>

On Nov 24, 2010, at 4:58 AM, Eric Faurot wrote:

> Hi,
> 
> I am trying to package it on OpenBSD, and there are quite a number of
> regression tests that don't pass there: failures, errors, busy loops,
> ... 10.0.0 was almost ok in this regard (I slacked on 10.1.0...)
> I'm looking into these issues, and I will create tickets for those.
> 
> Starting now: http://twistedmatrix.com/trac/ticket/4747
> 
> Eric.

Hi Eric,

Thanks for participating in the release process!  It's very satisfying to actually get some feedback in response to a prerelease ;).

If OpenBSD were a supported platform, a bug like this would cause the release process to stop until it could be addressed; as it is, we will try to merge a bugfix into the release branch if it is available and reviewed in time (before next Monday).  Being a supported platform means that there's a buildbot, and that it shows up on this page: <http://buildbot.twistedmatrix.com/boxes-supported>.  Of course, if OpenBSD were a supported platform, this bug never would have been introduced in the first place, because we would have noticed failing tests immediately!

Does anyone feel like contributing an OpenBSD buildslave, and hopefully also some more expertise for fixing bugs on that platform?  Or, for that matter, any other *BSDs?

-glyph




From eric.faurot at gmail.com  Wed Nov 24 15:57:21 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Wed, 24 Nov 2010 23:57:21 +0100
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <FB0B7A0E-F1B0-4EBD-86D1-9E5FAB588CDD@twistedmatrix.com>
References: <AANLkTimVEkQ7LZ90HC3KgrgiH3_pKPbmAKGjKrp4BBG8@mail.gmail.com>
	<AANLkTik0GSieUKmJjLMCoRgZdFaBUKO0Qfox9esMRMLN@mail.gmail.com>
	<FB0B7A0E-F1B0-4EBD-86D1-9E5FAB588CDD@twistedmatrix.com>
Message-ID: <AANLkTim8ALbB6=GSJUkHv9gB0u9czF70Fsj6UbUv8=-h@mail.gmail.com>

On Wed, Nov 24, 2010 at 9:28 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:

> Hi Eric,
>
> Thanks for participating in the release process!  It's very
>  satisfying to actually get some feedback in response to a prerelease
>  ;).
>
> If OpenBSD were a supported platform, a bug like this would cause
> the release process to stop until it could be addressed; as it is,
> we will try to merge a bugfix into the release branch if it is
> available and reviewed in time (before next Monday).  Being a
> supported platform means that there's a buildbot, and that it shows
> up on this page:
> <http://buildbot.twistedmatrix.com/boxes-supported>.  Of course, if
> OpenBSD were a supported platform, this bug never would have been
> introduced in the first place, because we would have noticed failing
> tests immediately!
>
> Does anyone feel like contributing an OpenBSD buildslave, and
> hopefully also some more expertise for fixing bugs on that platform?
> Or, for that matter, any other *BSDs?

Sure. I have a couple of test machines for OpenBSD (amd64 and sparc64)
that are mostly idling, and that could be used for that. I just need
to know the procedure for setting up a buildbot, and I'll see what I
can do.  That would surely help me with the port maintainance.

Eric.



From exarkun at twistedmatrix.com  Thu Nov 25 06:33:39 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 25 Nov 2010 13:33:39 -0000
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
Message-ID: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>

On 24 Nov, 10:57 pm, eric.faurot at gmail.com wrote:
>On Wed, Nov 24, 2010 at 9:28 PM, Glyph Lefkowitz
><glyph at twistedmatrix.com> wrote:
>>Hi Eric,
>>
>>Thanks for participating in the release process!  It's very
>>  satisfying to actually get some feedback in response to a prerelease
>>  ;).
>>
>>If OpenBSD were a supported platform, a bug like this would cause
>>the release process to stop until it could be addressed; as it is,
>>we will try to merge a bugfix into the release branch if it is
>>available and reviewed in time (before next Monday).  Being a
>>supported platform means that there's a buildbot, and that it shows
>>up on this page:
>><http://buildbot.twistedmatrix.com/boxes-supported>.  Of course, if
>>OpenBSD were a supported platform, this bug never would have been
>>introduced in the first place, because we would have noticed failing
>>tests immediately!
>>
>>Does anyone feel like contributing an OpenBSD buildslave, and
>>hopefully also some more expertise for fixing bugs on that platform?
>>Or, for that matter, any other *BSDs?
>
>Sure. I have a couple of test machines for OpenBSD (amd64 and sparc64)
>that are mostly idling, and that could be used for that. I just need
>to know the procedure for setting up a buildbot, and I'll see what I
>can do.  That would surely help me with the port maintainance.

That'd be great.  The machines need to be online basically 100% of the 
time, and be able to make an outgoing TCP connection.  Other than that, 
they'll stay idle except when someone commits to trunk or wants to try 
out a branch before merging.  You can find more detailed instructions on 
the wiki:

  http://twistedmatrix.com/trac/wiki/ContinuousIntegration

Jean-Paul



From eric.faurot at gmail.com  Sat Nov 27 03:58:53 2010
From: eric.faurot at gmail.com (Eric Faurot)
Date: Sat, 27 Nov 2010 11:58:53 +0100
Subject: [Twisted-Python] Announcing Twisted 10.2.0pre3!
In-Reply-To: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>
References: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>
Message-ID: <AANLkTik3bCcHXHY2A-eAKTJZ8PGbdvZVSmwC77hYNYXV@mail.gmail.com>

> That'd be great.  The machines need to be online basically 100% of the
> time, and be able to make an outgoing TCP connection.  Other than that,
> they'll stay idle except when someone commits to trunk or wants to try
> out a branch before merging.  You can find more detailed instructions on
> the wiki:
>
>  http://twistedmatrix.com/trac/wiki/ContinuousIntegration

I have started setting things up. I would need credentials for
my buildslave. Thanks.

Eric.



From exarkun at twistedmatrix.com  Sat Nov 27 22:05:22 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Nov 2010 05:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1290920722.44.1524529546@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101128/1ddcc7a8/attachment-0001.html>

From zooko at zooko.com  Mon Nov 29 00:30:07 2010
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Mon, 29 Nov 2010 00:30:07 -0700
Subject: [Twisted-Python] ANNOUNCING Tahoe, the Least-Authority File System,
	v1.8.1
Message-ID: <AANLkTinU=MMyMFP+aOeC8aA05QsOt0v8R6FvEoX0Sk6v@mail.gmail.com>

Folks:

Tahoe-LAFS uses Twisted extensively, and we try to contribute a few
patches back to Twisted itself when we can.

Regards,

Zooko


ANNOUNCING Tahoe, the Least-Authority File System, v1.8.1

The Tahoe-LAFS team is pleased to announce the immediate
availability of version 1.8.1 of Tahoe-LAFS, an extremely
reliable distributed storage system. Get it here:

http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" — meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.8.0, which was
released September 23, 2010 [1].

v1.8.1 is a stable bugfix release correcting a number of minor
issues. It also includes a modest performance improvement in
downloading, and a fix for a security issue involving HTTP
proxies. See the NEWS file [2] for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [3].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.rst file [4].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the twelfth release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Tahoe-LAFS was originally developed by Allmydata, Inc., a
provider of commercial backup services. After discontinuing
funding of Tahoe-LAFS R&D in early 2009, they continued
to provide servers, bandwidth, small personal gifts as tokens
of appreciation, and bug reports.

Google, Inc. sponsored Tahoe-LAFS development as part of the
Google Summer of Code 2010. They awarded four sponsorships to
students from around the world to hack on Tahoe-LAFS that
summer.

Thank you to Allmydata and Google for their generous and
public-spirited support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that we feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the sixth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

David-Sarah Hopwood and Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

November 28, 2010
Rainhill, Merseyside, UK and Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=4747
[2] http://tahoe-lafs.org/trac/tahoe/browser/NEWS?rev=4854
[3] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[4] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.rst
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe/browser/CREDITS?rev=4797
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/



From exarkun at twistedmatrix.com  Mon Nov 29 07:10:00 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 29 Nov 2010 14:10:00 -0000
Subject: [Twisted-Python] OpenBSD build slave (was Re: Announcing
	Twisted	10.2.0pre3!)
In-Reply-To: <AANLkTik3bCcHXHY2A-eAKTJZ8PGbdvZVSmwC77hYNYXV@mail.gmail.com>
References: <20101125133339.2109.1657645436.divmod.xquotient.1678@localhost.localdomain>
	<AANLkTik3bCcHXHY2A-eAKTJZ8PGbdvZVSmwC77hYNYXV@mail.gmail.com>
Message-ID: <20101129141000.2109.1618233059.divmod.xquotient.1687@localhost.localdomain>

On 27 Nov, 10:58 am, eric.faurot at gmail.com wrote:
>>That'd be great. �The machines need to be online basically 100% of the
>>time, and be able to make an outgoing TCP connection. �Other than 
>>that,
>>they'll stay idle except when someone commits to trunk or wants to try
>>out a branch before merging. �You can find more detailed instructions 
>>on
>>the wiki:
>>
>>�http://twistedmatrix.com/trac/wiki/ContinuousIntegration
>
>I have started setting things up. I would need credentials for
>my buildslave. Thanks.

I'll mail these to you off-list.

Jean-Paul



From exarkun at twistedmatrix.com  Mon Nov 29 07:10:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 29 Nov 2010 14:10:24 -0000
Subject: [Twisted-Python] ANNOUNCING Tahoe,
	the Least-Authority File System, v1.8.1
In-Reply-To: <AANLkTinU=MMyMFP+aOeC8aA05QsOt0v8R6FvEoX0Sk6v@mail.gmail.com>
References: <AANLkTinU=MMyMFP+aOeC8aA05QsOt0v8R6FvEoX0Sk6v@mail.gmail.com>
Message-ID: <20101129141024.2109.1252928043.divmod.xquotient.1688@localhost.localdomain>

On 07:30 am, zooko at zooko.com wrote:
>
>ANNOUNCING Tahoe, the Least-Authority File System, v1.8.1
>
>The Tahoe-LAFS team is pleased to announce the immediate
>availability of version 1.8.1 of Tahoe-LAFS, an extremely
>reliable distributed storage system. Get it here:


Congrats!

Jean-Paul



From david at silveregg.co.jp  Mon Nov 29 23:07:17 2010
From: david at silveregg.co.jp (David)
Date: Tue, 30 Nov 2010 15:07:17 +0900
Subject: [Twisted-Python] twisted.web,
	url -> resource mapping and isLeaf questions
Message-ID: <4CF49495.502@silveregg.co.jp>

Hi,

I am following "twisted in 60sec" series, but even the simple examples 
are a bit unclear to me, especially w.r.t. url mapping. For example:

# assume the right imports...
class MainPage(Resource):
     isLeaf = True
     def render_GET(self, request):
         return "somestring"

resource = MainPage()
factory = Site(resource)
reactor.listenTCP(8880, factory)
reactor.run()

I was expecting that accessing any other 'path' besides the main url 
would cause 404, e.g. "http://localhost:8880/foo/bar", and I get the 
same page instead.

I gather this is a consequence of the isLeaf setting set to be True, 
because twisted.web stops as soon as it encounters MainPage in the 
hierarchy and use that for rendering. Setting it to False seems to avoid 
the page to be available at all. The solution I got instead is something 
like:

class RootPage(Resource):
     isLeaf = False
     def render(self, request):
         return "somestring"

     def getChild(self, path, request):
         if path:
             return NoResource()
         else:
             return self

and adding new resources through putChild. Isn't there a more natural 
way of doing things ?

cheers,

David



From glyph at twistedmatrix.com  Mon Nov 29 23:07:57 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 30 Nov 2010 01:07:57 -0500
Subject: [Twisted-Python] [ANNOUNCE] Twisted 10.2.0 Released
Message-ID: <48EF5F73-CAE0-43CC-89A9-FD273C334E79@twistedmatrix.com>

Twisted 10.2.0, the third Twisted release of 2010, has emerged from the mysterious depths of Twisted Matrix Labs, as so many releases before it.  Survivors of the release process - what few there were of them - have been heard to claim that this version is "awesome", "even more robust", "fun-sized" and "oven fresh".

Crossing several things that shouldn't ought to be, including the streams and the rubicon, I have assumed the triple responsibilities of feature author, project leader, *and* release manager for 10.2: with this dark and terrible power - a power which no man ought to wield alone - I have wrought a release which contains many exciting new features, including:

    - A plug-in API for adding new types of endpoint descriptions. <http://tm.tl/4695>
    - A new, simpler, substantially more robust CoreFoundation reactor.  <http://tm.tl/1833>
    - Improvements to the implementation of Deferred which should both improve performance
      and fix certain runtime errors with long callback chains. <http://tm.tl/411>
    - Deferred.setTimeout is (finally) gone.  To quote the author of this change:
      "A new era of peace has started."  <http://tm.tl/1702>
    - NetstringReceiver is substantially faster. <http://tm.tl/4378>

And, of course, nearly one hundred smaller bug fixes, documentation updates, and general improvements.  See the NEWS file included in the release for more details.

Look upon our Twisted, ye mighty, and make your network applications event-driven: get it now, from:

    <http://twistedmatrix.com/>

... or simply install the 'Twisted' package from PyPI.

Many thanks to Christopher Armstrong, for his work on release-automation tools that made this possible; to Jonathan Lange, for thoroughly documenting the process and thereby making my ascent to the throne of release manager possible, and to Jean-Paul Calderone for his tireless maintenance of our build and test infrastructure as well as his help with the release.

Most of all, thanks to everyone who contributed a patch, reported a bug or reviewed a ticket for 10.2.  Not including those already thanked, there are 41 of you, so it would be a bit tedious to go through everyone, but you know who you are and we absolutely couldn't do it without you!  Thanks a ton!




From glyph at twistedmatrix.com  Tue Nov 30 01:42:40 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 30 Nov 2010 03:42:40 -0500
Subject: [Twisted-Python] twisted.web,
	url -> resource mapping and isLeaf questions
In-Reply-To: <4CF49495.502@silveregg.co.jp>
References: <4CF49495.502@silveregg.co.jp>
Message-ID: <442A40AD-45A6-4B0F-9D19-A1662C5B57D9@twistedmatrix.com>


On Nov 30, 2010, at 1:07 AM, David wrote:

> Isn't there a more natural way of doing things ?

No.

I'm not sure what you're asking here; it seems like you've figured out the resource model.  It has some rough edges, which we are trying to eventually fix (see, for example, <http://tm.tl/3621>).  But the things you're talking about are just how it works; <http://example.com/> is a collection, just like <http://example.com/foo/>, so it behaves in a consistent way.

(This message may be more appropriate for the twisted-web list.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101130/14c73e4f/attachment-0001.html>

From jml at mumak.net  Tue Nov 30 02:30:50 2010
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 30 Nov 2010 09:30:50 +0000
Subject: [Twisted-Python] [ANNOUNCE] Twisted 10.2.0 Released
In-Reply-To: <48EF5F73-CAE0-43CC-89A9-FD273C334E79@twistedmatrix.com>
References: <48EF5F73-CAE0-43CC-89A9-FD273C334E79@twistedmatrix.com>
Message-ID: <AANLkTikaet2s=AFqHjuA=MzcSSQUcOQBsrpdzh-_NzBH@mail.gmail.com>

On Tue, Nov 30, 2010 at 6:07 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
> Twisted 10.2.0, the third Twisted release of 2010, has emerged from the mysterious depths of Twisted Matrix Labs, as so many releases before it.  Survivors of the release process - what few there were of them - have been heard to claim that this version is "awesome", "even more robust", "fun-sized" and "oven fresh".
>

Grats!

jml



From david at silveregg.co.jp  Tue Nov 30 02:41:37 2010
From: david at silveregg.co.jp (David)
Date: Tue, 30 Nov 2010 18:41:37 +0900
Subject: [Twisted-Python] twisted.web,
	url -> resource mapping and isLeaf questions
In-Reply-To: <442A40AD-45A6-4B0F-9D19-A1662C5B57D9@twistedmatrix.com>
References: <4CF49495.502@silveregg.co.jp>
	<442A40AD-45A6-4B0F-9D19-A1662C5B57D9@twistedmatrix.com>
Message-ID: <4CF4C6D1.1060809@silveregg.co.jp>

On 11/30/2010 05:42 PM, Glyph Lefkowitz wrote:

> I'm not sure what you're asking here; it seems like you've figured out
> the resource model.

It was not obvious to me I figured it out, I guess :)

> It has some rough edges, which we are trying to
> eventually fix (see, for example, <http://tm.tl/3621>). But the things
> you're talking about are just how it works; <http://example.com/> is a
> collection, just like <http://example.com/foo/>, so it behaves in a
> consistent way.
>
> (This message may be more appropriate for the twisted-web list.)

I did not know there was a twisted.web specific list - will refer to 
that list from now on,

cheers,

David



From mckenzig at optonline.net  Tue Nov 30 05:39:48 2010
From: mckenzig at optonline.net (Grant Mckenzie)
Date: Tue, 30 Nov 2010 07:39:48 -0500
Subject: [Twisted-Python] Missing connections with Perspective Broker (
	newbie alert )
Message-ID: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>

Hi,

I am using a Perspective Broker to service requests from a client on the same machine ( Windows XP ). This works fine most of the time however occasionally I see strange behaviour. The client uses connectTCP and provides a timeout of 5 seconds. Logging indicates that the client attempts to make a connection to the server, server logging in the remote methods indicates that the method is not called. Also my error callback on the client is not invoked after the timeout period. Unfotunately this is part of a large system, sporadic behaviour and difficult to generate a test case for.

Also commonly requests a few seconds before and after the issue are handled correctly so the behaviour seems transient. We are using a older version ot twisted 8.x. Any pointers?

Regards.




From peter.westlake at pobox.com  Tue Nov 30 06:07:23 2010
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 30 Nov 2010 13:07:23 +0000
Subject: [Twisted-Python] Missing connections with Perspective Broker (
 newbie alert )
In-Reply-To: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>
References: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>
Message-ID: <1291122443.6501.1407871005@webmail.messagingengine.com>

On Tue, 30 Nov 2010 07:39 -0500, "Grant Mckenzie"
<mckenzig at optonline.net> wrote:
> Hi,
> 
> I am using a Perspective Broker to service requests from a client on the
> same machine ( Windows XP ). This works fine most of the time however
> occasionally I see strange behaviour. The client uses connectTCP and
> provides a timeout of 5 seconds. Logging indicates that the client
> attempts to make a connection to the server, server logging in the remote
> methods indicates that the method is not called. Also my error callback
> on the client is not invoked after the timeout period. Unfotunately this
> is part of a large system, sporadic behaviour and difficult to generate a
> test case for.
> 
> Also commonly requests a few seconds before and after the issue are
> handled correctly so the behaviour seems transient. We are using a older
> version ot twisted 8.x. Any pointers?

I've seen strange sporadic errors with networking in 8.x that weren't
there in 2.5.0, so would you be able to test it with 2.5.0?

Peter.



From glyph at twistedmatrix.com  Tue Nov 30 13:30:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 30 Nov 2010 15:30:25 -0500
Subject: [Twisted-Python] Missing connections with Perspective Broker (
	newbie alert )
In-Reply-To: <1291122443.6501.1407871005@webmail.messagingengine.com>
References: <BA36A84D-8DEC-4D45-9834-B02157B3AAAF@optonline.net>
	<1291122443.6501.1407871005@webmail.messagingengine.com>
Message-ID: <885CD616-FD25-4BB2-9025-18382C5BA53C@twistedmatrix.com>


On Nov 30, 2010, at 8:07 AM, Peter Westlake wrote:

> On Tue, 30 Nov 2010 07:39 -0500, "Grant Mckenzie"
> <mckenzig at optonline.net> wrote:
>> Hi,
>> 
>> I am using a Perspective Broker to service requests from a client on the
>> same machine ( Windows XP ). This works fine most of the time however
>> occasionally I see strange behaviour. The client uses connectTCP and
>> provides a timeout of 5 seconds. Logging indicates that the client
>> attempts to make a connection to the server, server logging in the remote
>> methods indicates that the method is not called. Also my error callback
>> on the client is not invoked after the timeout period. Unfotunately this
>> is part of a large system, sporadic behaviour and difficult to generate a
>> test case for.
>> 
>> Also commonly requests a few seconds before and after the issue are
>> handled correctly so the behaviour seems transient. We are using a older
>> version ot twisted 8.x. Any pointers?
> 
> I've seen strange sporadic errors with networking in 8.x that weren't
> there in 2.5.0, so would you be able to test it with 2.5.0?

Better yet, why not test with a recent release?  Something that starts with '10'?  There's a reason we keep doing new releases, you know: bugs get fixed :).




From albert.brandl at weiermayer.com  Mon Nov 29 05:01:49 2010
From: albert.brandl at weiermayer.com (Albert Brandl)
Date: Mon, 29 Nov 2010 13:01:49 +0100
Subject: [Twisted-Python] Handling of NMEA messages
Message-ID: <20101129120148.GB11887@weiermayer.com>

Hi!

We are working on a project that has to extract weather information from 
an NMEA stream. There is a NMEAReceiver class, but it only extracts GPS 
information - as expected, since the class is defined in t.p.gps.nmea.

We intend to add the NMEA-0183 messages necessary for my purposes. The
question is: should we just extend the NMEAReceiver? Weather information
is not exactly what one would expect in a class below t.p.gps...

On the other hand, it would be strange to create a different kind of
NMEAReceiver which knows how to handle the messages dealing with
weather data.

Best regards,

Albert

-- 
Albert Brandl
Weiermayer Solutions GmbH      | Abteistraße 12, A-4813 Altmünster
phone: +43 (0) 720 70 30 14    | fax: +43 (0) 7612 20 3 56
web: http://www.weiermayer.com



