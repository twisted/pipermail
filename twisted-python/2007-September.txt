From beau at subobscur.us  Sat Sep  1 03:27:11 2007
From: beau at subobscur.us (Beau Hargis)
Date: Sat, 1 Sep 2007 00:27:11 -0700 (PDT)
Subject: [Twisted-Python] Possible to delay connectTCP?
Message-ID: <703537.45741.qm@web701.biz.mail.mud.yahoo.com>

That is what I had thought. I had come up with a couple of possible options, some of them complex, but I wanted to make sure there wasn't anything hiding in twisted that was not obvious. Thanks.

----- Original Message ----
From: Christopher Armstrong <radix at twistedmatrix.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Friday, August 31, 2007 4:56:02 PM
Subject: Re: [Twisted-Python] Possible to delay connectTCP?

On 8/31/07, Beau Hargis <beau at subobscur.us> wrote:
I have an application which connects to a machine which has 50-60 ports open on it to receive data (each for a different region). It acts like a switch. Problem is that when I make all those connection requests at the same time the server falls over trying to handle all the connections requests from my application. I cannot control or change the behaviour of the server I am connecting to, however, I am also unable to find a way to easily to add a delay between connection requests in twisted (without blocking the reactor), so that only 2 or 3 start up at a time.


Is there an elegant and clean way to do such a thing? Twisted has worked beautifully for everything else, but I can't replace this one server for a while until I can duplicate the rest of its functionality, so I am dependant on it providing the data.

The way to delay (that is, schedule) function calls until a later point in time is reactor.callLater(seconds, callable, *args, **kwargs).



-- 
Christopher Armstrong
International Man of Twistery

http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070901/665ba200/attachment.htm 

From exarkun at twistedmatrix.com  Sun Sep  2 00:05:09 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Sep 2007 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1188705909.76.342746716@twistedmatrix.com

Bug summary
______________________
Summary for 2007-08-26 through 2007-09-02
Bugs opened: 7    Bugs closed: 3  Total open bugs: 1024 (+4)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  +2          |Core:      +4          
|Enhancement:  +0  |High:     +2          |Names:     +1          
                   |Normal:   +1          |Pydoctor:  -1          
                                          |Web:       +1          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2808] AMP should raise MissingArgument (or other) if a callRemote is called with wrong arguments (opened by Lacrymology)
    defect          core       http://twistedmatrix.com/trac/ticket/2808

[#2808] AMP should raise MissingArgument (or other) if a callRemote is called with wrong arguments (opened by Lacrymology)
    defect          core       http://twistedmatrix.com/trac/ticket/2808

                    ===== High =====
[#2807] twisted.mail.relaymanager.MXCalculator._cbMX raises unhandled IndexError for response with no answers (opened by exarkun)
    defect          names      http://twistedmatrix.com/trac/ticket/2807

[#2809] 99.9% cpu load when using the epoll reactor (opened by mvw)
    defect          core       http://twistedmatrix.com/trac/ticket/2809

                    ===== Normal =====
[#2805] Cooperator adds a callback to iterated deferreds which does not pass on the original result (opened by rwall)
    defect          core       http://twistedmatrix.com/trac/ticket/2805

[#2806] Twisted web client should support HTTPS URL hostname verification (opened by radix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2806

[#2810] AMP command-handling and protocol-parsing should be on separate objects (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2810



Closed Bugs
______________________
                    ===== Highest =====
[#2808] AMP should raise MissingArgument (or other) if a callRemote is called with wrong arguments (opened by Lacrymology, closed by Lacrymology, )
    defect          core       http://twistedmatrix.com/trac/ticket/2808

                    ===== Normal =====
[#1639] Full package and class hierarchy pages. (opened by jknight, closed by exarkun, fixed)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/1639

[#2473] make twistd more usable (opened by itamarst, closed by glyph, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2473



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2810] AMP command-handling and protocol-parsing should be on separate objects (since 2007-08-31 14:21:32).

Mean open ticket age: 511 days, 15:26:23.405046.
Median: 406 days, 14:01:43.587664.
Standard deviation: 398 days, 11:41:57.222639.
Interquartile range: 496 days, 3:03:16.

Mean time between ticket creation and ticket resolution: 120 days, 15:02:59.593481.
Median: 14 days, 8:13:35.
Standard deviation is 224 days, 10:25:04.257292.
The interquartile range is 127 days, 2:25:56.

Mean time spent in review: 63 days, 14:54:37.734422.
Median: 4 days, 4:50:20.
Standard deviation: 138 days, 15:21:07.206937.
Interquartile range: 30 days, 7:05:01.

Mean number of times a ticket is reviewed: 1.91366906475.
Median: 1
Standard deviation: 1.55081172087.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    19 unique ticket reporters
    7 unique ticket reviewers
    6 unique ticket resolvers
In the last 24 weeks,
    80 unique ticket reporters
    14 unique ticket reviewers
    16 unique ticket resolvers
In the last 48 weeks,
    155 unique ticket reporters
    20 unique ticket reviewers
    27 unique ticket resolvers




From warner at lothar.com  Sun Sep  2 18:14:44 2007
From: warner at lothar.com (Brian Warner)
Date: Sun, 02 Sep 2007 15:14:44 -0700 (PDT)
Subject: [Twisted-Python] Foolscap-0.1.6 released
Message-ID: <20070902.151444.189397701.warner@lothar.com>


I've released Foolscap-0.1.6, with a few minor bugfixes. The new release can
be downloaded from PyPI or directly from the Foolscap home page:

  http://foolscap.lothar.com/releases/foolscap-0.1.6.tar.gz

This release fixes the debian packaging problems that prevented 0.1.5 from
being able to create .deb packages. It also fixes a problem with the ChoiceOf
constraint, and fixes a couple of problems in the documentation. Foolscap
versions 0.1.3 through 0.1.6 (inclusive) are fully wire-compatible with each
other. Wire-compatibility-breaking changes are still anticipated in the
future.

Foolscap is a next-generation RPC/RMI/remote-object protocol, intended to
eventually replace Perspective Broker. It offers remote object-capability
facilities for Python programs using Twisted's event loop, based upon
concepts and patterns from the E language (http://www.erights.org/). For more
information and bug reporting, please visit the Foolscap home page at:

  http://foolscap.lothar.com/


cheers,
 -Brian



From pasci.bach at gmail.com  Mon Sep  3 16:27:36 2007
From: pasci.bach at gmail.com (Pascal Bach)
Date: Mon, 3 Sep 2007 22:27:36 +0200
Subject: [Twisted-Python] SMS Protocol UCP /EMI
Message-ID: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>

I think it is best if I publish my UCP/EMI implementation somewhere, I'm
currently thinking about a common API for different SMSC communication API.
I currently know about SMPP, UCP/EMI and CIMD from Nokia.

Is there any other protocol, maybe with some specialties that should be
considered in the Interface.

Is there actually an interest in such protocols in twisted?

Pascal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070903/32768c03/attachment.htm 

From pbastov at gmail.com  Tue Sep  4 00:12:49 2007
From: pbastov at gmail.com (Pavel Bastov)
Date: Tue, 4 Sep 2007 10:12:49 +0600
Subject: [Twisted-Python] Processing reload event
Message-ID: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>

Hi all,

how do I process the reload event (service <myservice> reload) in my
Twisted application?

TIA

-- 
Good luck,

Pavel Bastov
xooChat Evangelist and Team Leader
http://www.xoochat.com/



From langford.d at gmail.com  Tue Sep  4 00:57:05 2007
From: langford.d at gmail.com (David Langford)
Date: Tue, 4 Sep 2007 14:57:05 +1000
Subject: [Twisted-Python] twistd doesn't work
Message-ID: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>

Hey everyone

  I'm going through the finger tutorial ->
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/intro.html.
And at the end of the first section it talks about using the twistd
command. Now it just plain doesn't work for me, telling me the command is
not found. I'm using a macbook pro and i type the command into terminal.

  Can anyone tell me what i'm doing wrong. Because the next section doesn't
work (i'm assuming its related to my lack of twistd-ness)

  I know this a n00bish question, and i've been searching for an answer, but
everyone else seems to be able to get it working and no one mentions having
problems. Then i thought maybee i have to download something extra for
twisted, but a search of the site only returned tickets (bug tickets)
instead of an actual search of the site.

  Any help would be greatly appreciated

 Lango
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070904/f69ed7a7/attachment.htm 

From rasjidw at gmail.com  Tue Sep  4 01:22:37 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Tue, 4 Sep 2007 15:22:37 +1000
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with a
	blocking API
Message-ID: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>

Hi everyone.

I've done some reading, and it seems that there have been several
attempts by new twisted users to get Perspective Broker to function
more like Corba or DCOM.  Despite having read
http://twistedmatrix.com/pipermail/twisted-python/2007-April/thread.html#15121
on why this does not work, I have had a go and have got something that
seems to work well, at least for my test case.

Server side it is pretty standard.  Client side I run the twisted
reactor in a separate (non-main) thread, and use threading.Event()
objects placed into a 'pass through' callback to emulate blocking
until the required deferred has its result.

I have attached a simple server and client, with callback
functionality illustrated.

I have not really looked into the thread safety issues yet, but have
been looking into reactor.callFromThread and whether it is required
here.

If the entire approach is inherently broken for some reason, I'd like
to know so I can look at alternatives.

Cheers,

Rasjid.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simple-client.py
Type: text/x-python
Size: 2376 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070904/b0f57998/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simple-server.py
Type: text/x-python
Size: 1228 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070904/b0f57998/attachment-0001.py 

From trustaldo at gmail.com  Tue Sep  4 02:19:37 2007
From: trustaldo at gmail.com (Trust Mutemasango)
Date: Tue, 4 Sep 2007 08:19:37 +0200
Subject: [Twisted-Python] SMS Protocol UCP /EMI
In-Reply-To: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>
References: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>
Message-ID: <21d530bf0709032319o23bf04a1seb781ab725df760a@mail.gmail.com>

hey man I a am learning python and only started learning python when i was
told about twisted. I am very intrested in the protocols you have just
mentioned done a bit in vb6 and vb.net.

regards

Trust

On 03/09/07, Pascal Bach <pasci.bach at gmail.com> wrote:
>
> I think it is best if I publish my UCP/EMI implementation somewhere, I'm
> currently thinking about a common API for different SMSC communication API.
> I currently know about SMPP, UCP/EMI and CIMD from Nokia.
>
> Is there any other protocol, maybe with some specialties that should be
> considered in the Interface.
>
> Is there actually an interest in such protocols in twisted?
>
> Pascal
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070904/3064648b/attachment.htm 

From simon at hedberg.net  Tue Sep  4 03:13:12 2007
From: simon at hedberg.net (Simon Hedberg)
Date: Tue, 4 Sep 2007 09:13:12 +0200
Subject: [Twisted-Python] SMS Protocol UCP /EMI
In-Reply-To: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>
Message-ID: <000001c7eec3$0e0ffa30$630fa8c0@hp>


> I think it is best if I publish my UCP/EMI implementation somewhere,
I'm currently thinking about a common API 
> for different SMSC communication API.
> I currently know about SMPP, UCP/EMI and CIMD from Nokia.
>
> Is there any other protocol, maybe with some specialties that should
be considered in the Interface. 
>
> Is there actually an interest in such protocols in twisted?
>
> Pascal

I'm currently using another proprietary protocol for SMS traffic but
especially SMPP would be of interest to me.

/Simon




From miles.chris at gmail.com  Tue Sep  4 03:36:21 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Tue, 4 Sep 2007 08:36:21 +0100
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
Message-ID: <C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>

Hi David,

Have you installed the Twisted 2.5.0 tarball from http:// 
twistedmatrix.com/trac/ ?

If so, you should find the twistd command in the OS X Python bin dir,  
which will usually be:
   /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
or
   /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd

Cheers,
Chris

On 4 Sep 2007, at 05:57, David Langford wrote:

> Hey everyone
>
>   I'm going through the finger tutorial -> http://twistedmatrix.com/ 
> projects/core/documentation/howto/tutorial/intro.html . And at the  
> end of the first section it talks about using the twistd command.  
> Now it just plain doesn't work for me, telling me the command is  
> not found. I'm using a macbook pro and i type the command into  
> terminal.
>
>   Can anyone tell me what i'm doing wrong. Because the next section  
> doesn't work (i'm assuming its related to my lack of twistd-ness)
>
>   I know this a n00bish question, and i've been searching for an  
> answer, but everyone else seems to be able to get it working and no  
> one mentions having problems. Then i thought maybee i have to  
> download something extra for twisted, but a search of the site only  
> returned tickets (bug tickets) instead of an actual search of the  
> site.
>
>   Any help would be greatly appreciated
>
>  Lango
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From p.mayers at imperial.ac.uk  Tue Sep  4 05:20:43 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 04 Sep 2007 10:20:43 +0100
Subject: [Twisted-Python] Processing reload event
In-Reply-To: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>
References: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>
Message-ID: <1188897643.4708.6.camel@localhost.localdomain>

On Tue, 2007-09-04 at 10:12 +0600, Pavel Bastov wrote:
> Hi all,
> 
> how do I process the reload event (service <myservice> reload) in my
> Twisted application?

It's application dependent. There are probably hundreds of ways you
could do it.

Or do you mean "how do I receive a HUP", which is different; an init
script need not implement reload via HUP.

> 
> TIA
> 




From pbastov at gmail.com  Tue Sep  4 09:36:16 2007
From: pbastov at gmail.com (Pavel Bastov)
Date: Tue, 4 Sep 2007 19:36:16 +0600
Subject: [Twisted-Python] Processing reload event
In-Reply-To: <1188897643.4708.6.camel@localhost.localdomain>
References: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>
	<1188897643.4708.6.camel@localhost.localdomain>
Message-ID: <eaf39e680709040636r7bc10a94je8dc41d633ea3355@mail.gmail.com>

Actually, I don't care if it's HUP or whatever. I need to reload
configuration, and I want to do it the usual way, i.e. service
<myservice> reload

I need just one way of doing this that works.

On 9/4/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On Tue, 2007-09-04 at 10:12 +0600, Pavel Bastov wrote:
> > Hi all,
> >
> > how do I process the reload event (service <myservice> reload) in my
> > Twisted application?
>
> It's application dependent. There are probably hundreds of ways you
> could do it.
>
> Or do you mean "how do I receive a HUP", which is different; an init
> script need not implement reload via HUP.
>
> >
> > TIA
> >
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Good luck,

Pavel Bastov
xooChat Evangelist and Team Leader
http://www.xoochat.com/



From exarkun at divmod.com  Tue Sep  4 09:58:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Sep 2007 09:58:20 -0400
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object
	with a blocking API
In-Reply-To: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>
Message-ID: <20070904135820.8162.1106919495.divmod.quotient.3591@ohm>

On Tue, 4 Sep 2007 15:22:37 +1000, Rasjid Wilcox <rasjidw at gmail.com> wrote:
>Hi everyone.
>
> [snip]
>
>Server side it is pretty standard.  Client side I run the twisted
>reactor in a separate (non-main) thread, and use threading.Event()
>objects placed into a 'pass through' callback to emulate blocking
>until the required deferred has its result.
>
>I have attached a simple server and client, with callback
>functionality illustrated.

The example code doesn't do anything with Events, and I'm not sure I
understand what you're describing above, so I don't know if that part
of your code is correct or not.

>
>I have not really looked into the thread safety issues yet, but have
>been looking into reactor.callFromThread and whether it is required
>here.

Yes, it is.  As your code is now, it calls APIs which are not threadsafe
from a non-reactor thread.  This isn't allowed and will definitely result
in incorrect behavior sometimes.

>
>If the entire approach is inherently broken for some reason, I'd like
>to know so I can look at alternatives.

I'm not sure why you're trying to do this at all, instead of just using
Twisted in a single-threaded manner.

Jean-Paul



From rodsenra at gpr.com.br  Tue Sep  4 10:12:36 2007
From: rodsenra at gpr.com.br (Rodrigo Senra)
Date: Tue, 4 Sep 2007 11:12:36 -0300
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32 IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <20070904111236.01c4a336@Fenix>


[ Itamar Shtull-Trauring ]:
-----------------------------
|Anyway, since this is bringing users out into the open - I'm sure we'd
|all like to hear what Twisted is being used for in different companies,
|and under which platforms. Do tell!
|
|My company uses Twisted for a variety of uses, including reliable
|multicast data distribution, messaging, monitoring and managing complex
|processes, in the airline industry. (http://itasoftware.com)
|
|How about you all?

We did several things with this great great great tool, but the biggest
one was to implement an MRCP [1] server that binds with a Text-To-Speech
(TTS) engine for Brazilian Portuguese. It runs on Linux, Windows and Solaris.

Unfortunately the company [2] that commissioned the project from me did not
gave me permission to open up the code. Nevertheless, I am available to 
comment about it and help any endeavour to make a open version of it.

Sorry about the time warp.

[1] http://en.wikipedia.org/wiki/Media_Resource_Control_Protocol
[2] http://www.cpqd.com.br/site/ContentView.php?cd=3774

cheers,
Rod Senra
---
http://rodrigo.senra.nom.br



From rodsenra at gpr.com.br  Tue Sep  4 10:31:50 2007
From: rodsenra at gpr.com.br (Rodrigo Senra)
Date: Tue, 4 Sep 2007 11:31:50 -0300
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <464DF708.7090907@llaisdy.com>
References: <464DF708.7090907@llaisdy.com>
Message-ID: <20070904113150.26fb853b@Fenix>


[ Ivan Uemlianin ]:
-----------------------------
|Dear All
|
|I am interested in writing an MRCP (Media Resource Control Protocol
|[1]) server. 

Great. I did that for a Brazilian company. It was not a full MRCP
server, just enough to cope with their TTS needs. But I will be glad
to give advice and help.

| In particular I want to write an MRCP speech recognition
|resource server as part of my trefnydd [2] project.

That is about the opposite of what I have explored (synthesis) ;o)

|  I am posting here to ask for advice about the network programming part.

My MRCP server followed [1], and was based on RTSP for session handling,
instead of SIP.

|I shall also be writing an MRCP client (if only to test the server).
|All the code will be GPL'd.

That is great. I hope I can contribute with that. The project we 
(me and Jo?o Chaves Jr) have worked on was proprietary software.
That was an imposition from the client, and a source of great frustration
for me. :o(

|As far as I understand it, an overview of the networking would go like
|this:
|
|An MRCP session between client and server is initiated using the
|Session Initiation Protocol (SIP).

The version I worked on, was based in RTSP not SIP.
From the spec:
"""
  This protocol is designed to work with streaming
  protocols like RTSP (Real Time Streaming Protocol) 
  or SIP (Session Initiation Protocol)
"""

So if you need a MRCP server that is SIP-based for doing ASR,
then I cannot help much since I have experience with a
RTSP-based for doing TTS ;o)
That does not mean I won't give advice if I have any worth giving! 

|Client and server negotiate using
|SIP messages containing SDP message bodies to define the participants
|and the resources required in the session.

Correct.

|After session initiation, two channels are launched: a media channel 
| using RTP to carry binary audio (i.e., speech) data,

Right. I used a wrapper over JRTPLIB to handle RTP and RTCP. 

| and a control channel using TCP (control
|channel messages are text-based and in MRCP format).

Well, the RTSP-based verison used the same RTSP channel to
tunnel session initiation (pure RTSP) and media control
(MRCP payloads embedded in RTSP announce messages).
I do not know how this is handled with SIP.


|It seems to me that both client and server software would have to cope
|with SIP, SDP, RTP, MRCP (message format) and plain old TCP (for the
|SIP/SDP and MRCP control channel messages).

Sounds about right.


|Here are my questions:
|
|- Does anyone know of a FOSS project to write an MRCP server?
|preferably in python. I know of mrcp4j [3].

Not that I know of.

|- My first plan would be to make the MRCP client/server a subclass of
|an SIP client/server, as SIP is used to set up (and tear down) the
|session.  Does that sound sensible?

I used Twisted HTTP handling implementation as a starting point for
the RTSP implementation since both protocols are very much alike.

I wish you luck and success.

best regards,
Rod Senra

[1] http://tools.ietf.org/html/rfc4463

----
Rodrigo Dias Arruda Senra
http://rodrigo.senra.nom.br



From jarek.zgoda at sensisoft.com  Tue Sep  4 10:38:10 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Tue, 04 Sep 2007 16:38:10 +0200
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <46DD6DD2.4010601@sensisoft.com>

Itamar Shtull-Trauring napisa?(a):

> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
> 
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
> 
> How about you all?

In Sensisoft we use Twisted to build webservice (REST) parts of systems
we sell, i.e. full-text search/document indexing servers.

-- 
Jarek Zgoda
Skype: jzgoda | GTalk: zgoda at jabber.aster.pl | voice: +48228430101

"We read Knuth so you don't have to." (Tim Peters)



From ellisonbg.net at gmail.com  Tue Sep  4 11:38:12 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 09:38:12 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
References: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>
	<20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
Message-ID: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>

> I'm not sure why you're trying to do this at all, instead of just using
> Twisted in a single-threaded manner.
>

This is a usage case that we run into regularly.  We have a lot of PB
based servers, but sometimes people want to use a client to them from
an interactive Python or IPython prompt.  At that point you have to
run the reactor in a different thread.  But, I have never seen a
method of putting a blocking API on top of such a client that was
_really_ thread safe.  I have seen a few approaches that seem to work,
but that are clearly non-thread safe.  I would love to see a robust
solution for this problem though - one that could be fully trusted.

Brian


> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Tue Sep  4 12:08:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Sep 2007 12:08:28 -0400
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object
	with a blocking API
In-Reply-To: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
Message-ID: <20070904160828.8162.1303691561.divmod.quotient.3617@ohm>

On Tue, 4 Sep 2007 09:38:12 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>> I'm not sure why you're trying to do this at all, instead of just using
>> Twisted in a single-threaded manner.
>>
>
>This is a usage case that we run into regularly.  We have a lot of PB
>based servers, but sometimes people want to use a client to them from
>an interactive Python or IPython prompt.  At that point you have to
>run the reactor in a different thread.

Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
what the Twisted/IPython integration code ended up looking like (or if it
was ever taken to a satisfactory "completion" point) but I don't think it
is necessary to have multiple threads for that use case, either.

>But, I have never seen a
>method of putting a blocking API on top of such a client that was
>_really_ thread safe.  I have seen a few approaches that seem to work,
>but that are clearly non-thread safe.  I would love to see a robust
>solution for this problem though - one that could be fully trusted.

Why isn't a solution based on Twisted's thread-safe event-posting API 
(reactor.callFromThread) and the thread-safe event-posting API of whatever
other thing is being integrated with "really" thread-safe?  Sure, you can
write programs which will deadlock as a result of application-level bugs
where one thread is blocked on a request and the other thread needs some
information from it before the request can be satisfied, but this is inherent
to wanting to drive an asynchronous API synchronously.  Aside from it, I
don't think there are any problems with what I described above.

Jean-Paul



From a.poisel at acat.cc  Tue Sep  4 12:29:19 2007
From: a.poisel at acat.cc (Andreas Poisel)
Date: Tue, 4 Sep 2007 18:29:19 +0200
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <46DD6DD2.4010601@sensisoft.com>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
	<46DD6DD2.4010601@sensisoft.com>
Message-ID: <20070904162919.GJ11857@trude>

Hi!

We (Acat) use Twisted to implement interfaces to hotel PMSs (Property
Management Systems).

Great tool, thanks a lot.

-- 
Bye, Andreas



From ellisonbg.net at gmail.com  Tue Sep  4 14:45:17 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 12:45:17 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
References: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
	<20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
Message-ID: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>

> >This is a usage case that we run into regularly.  We have a lot of PB
> >based servers, but sometimes people want to use a client to them from
> >an interactive Python or IPython prompt.  At that point you have to
> >run the reactor in a different thread.
>
> Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
> what the Twisted/IPython integration code ended up looking like (or if it
> was ever taken to a satisfactory "completion" point) but I don't think it
> is necessary to have multiple threads for that use case, either.

I have, but this doesn't solve the problem as I recall.  First, these
users want to be able to use PB clients from vanilla python
interpreters and IPython out of the box - not from within some other
process doing the tricks that are in conch/stdio.py.  Am I not correct
that threads are needed in this case?  Second, what this module does
is actually make the terminal asynchronous, which is exactly the
opposite of what these users want.  They *want* a synchronous terminal
and a blocking PB clients.  I hope I am not coming across as angry
about this - I'm not.  To me the lesson is that as long as everything
is really asynchronous anything is possible within the constraints of
this asynchronous universe.  It's the multiple universe things that
makes life complicated (asyn + syn).

> >But, I have never seen a
> >method of putting a blocking API on top of such a client that was
> >_really_ thread safe.  I have seen a few approaches that seem to work,
> >but that are clearly non-thread safe.  I would love to see a robust
> >solution for this problem though - one that could be fully trusted.
>
> Why isn't a solution based on Twisted's thread-safe event-posting API
> (reactor.callFromThread) and the thread-safe event-posting API of whatever
> other thing is being integrated with "really" thread-safe?  Sure, you can
> write programs which will deadlock as a result of application-level bugs
> where one thread is blocked on a request and the other thread needs some
> information from it before the request can be satisfied, but this is inherent
> to wanting to drive an asynchronous API synchronously.  Aside from it, I
> don't think there are any problems with what I described above.

It probably is, but I have never seen an implementation that actually
does this.  Do you know of one?  The ones that I have seen - even
those which use callFromThread have not filled me with thoughts of
robustness, stability and thread safety.  I should look at this again
though.

Also, I should mention that in IPython this is not a show stopper for
us, but it does mean that we currently don't use PB in all of the
places we might otherwise.

Brian



> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ellisonbg.net at gmail.com  Tue Sep  4 15:03:57 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 13:03:57 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
References: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
	<20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
	<6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
Message-ID: <6ce0ac130709041203i1bf09465gd7d7733e055467c9@mail.gmail.com>

I take most of this back.  I just saw that in twisted.internet.threads
there is now a

blockingCallFromThread

function that does this exactly.  Last time I looked at the ticket
that led to this, there were still some things being worked out.  This
look very nice though!

Brian

On 9/4/07, Brian Granger <ellisonbg.net at gmail.com> wrote:
> > >This is a usage case that we run into regularly.  We have a lot of PB
> > >based servers, but sometimes people want to use a client to them from
> > >an interactive Python or IPython prompt.  At that point you have to
> > >run the reactor in a different thread.
> >
> > Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
> > what the Twisted/IPython integration code ended up looking like (or if it
> > was ever taken to a satisfactory "completion" point) but I don't think it
> > is necessary to have multiple threads for that use case, either.
>
> I have, but this doesn't solve the problem as I recall.  First, these
> users want to be able to use PB clients from vanilla python
> interpreters and IPython out of the box - not from within some other
> process doing the tricks that are in conch/stdio.py.  Am I not correct
> that threads are needed in this case?  Second, what this module does
> is actually make the terminal asynchronous, which is exactly the
> opposite of what these users want.  They *want* a synchronous terminal
> and a blocking PB clients.  I hope I am not coming across as angry
> about this - I'm not.  To me the lesson is that as long as everything
> is really asynchronous anything is possible within the constraints of
> this asynchronous universe.  It's the multiple universe things that
> makes life complicated (asyn + syn).
>
> > >But, I have never seen a
> > >method of putting a blocking API on top of such a client that was
> > >_really_ thread safe.  I have seen a few approaches that seem to work,
> > >but that are clearly non-thread safe.  I would love to see a robust
> > >solution for this problem though - one that could be fully trusted.
> >
> > Why isn't a solution based on Twisted's thread-safe event-posting API
> > (reactor.callFromThread) and the thread-safe event-posting API of whatever
> > other thing is being integrated with "really" thread-safe?  Sure, you can
> > write programs which will deadlock as a result of application-level bugs
> > where one thread is blocked on a request and the other thread needs some
> > information from it before the request can be satisfied, but this is inherent
> > to wanting to drive an asynchronous API synchronously.  Aside from it, I
> > don't think there are any problems with what I described above.
>
> It probably is, but I have never seen an implementation that actually
> does this.  Do you know of one?  The ones that I have seen - even
> those which use callFromThread have not filled me with thoughts of
> robustness, stability and thread safety.  I should look at this again
> though.
>
> Also, I should mention that in IPython this is not a show stopper for
> us, but it does mean that we currently don't use PB in all of the
> places we might otherwise.
>
> Brian
>
>
>
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From ellisonbg.net at gmail.com  Tue Sep  4 15:04:31 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 13:04:31 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
References: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
	<20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
	<6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
Message-ID: <6ce0ac130709041204i357d7c02v6aad2f9b89cb960d@mail.gmail.com>

I take most of this back.  I just saw that in twisted.internet.threads
there is now a

blockingCallFromThread

function that does this exactly.  Last time I looked at the ticket
that led to this, there were still some things being worked out.  This
look very nice though!

Brian

On 9/4/07, Brian Granger <ellisonbg.net at gmail.com> wrote:
> > >This is a usage case that we run into regularly.  We have a lot of PB
> > >based servers, but sometimes people want to use a client to them from
> > >an interactive Python or IPython prompt.  At that point you have to
> > >run the reactor in a different thread.
> >
> > Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
> > what the Twisted/IPython integration code ended up looking like (or if it
> > was ever taken to a satisfactory "completion" point) but I don't think it
> > is necessary to have multiple threads for that use case, either.
>
> I have, but this doesn't solve the problem as I recall.  First, these
> users want to be able to use PB clients from vanilla python
> interpreters and IPython out of the box - not from within some other
> process doing the tricks that are in conch/stdio.py.  Am I not correct
> that threads are needed in this case?  Second, what this module does
> is actually make the terminal asynchronous, which is exactly the
> opposite of what these users want.  They *want* a synchronous terminal
> and a blocking PB clients.  I hope I am not coming across as angry
> about this - I'm not.  To me the lesson is that as long as everything
> is really asynchronous anything is possible within the constraints of
> this asynchronous universe.  It's the multiple universe things that
> makes life complicated (asyn + syn).
>
> > >But, I have never seen a
> > >method of putting a blocking API on top of such a client that was
> > >_really_ thread safe.  I have seen a few approaches that seem to work,
> > >but that are clearly non-thread safe.  I would love to see a robust
> > >solution for this problem though - one that could be fully trusted.
> >
> > Why isn't a solution based on Twisted's thread-safe event-posting API
> > (reactor.callFromThread) and the thread-safe event-posting API of whatever
> > other thing is being integrated with "really" thread-safe?  Sure, you can
> > write programs which will deadlock as a result of application-level bugs
> > where one thread is blocked on a request and the other thread needs some
> > information from it before the request can be satisfied, but this is inherent
> > to wanting to drive an asynchronous API synchronously.  Aside from it, I
> > don't think there are any problems with what I described above.
>
> It probably is, but I have never seen an implementation that actually
> does this.  Do you know of one?  The ones that I have seen - even
> those which use callFromThread have not filled me with thoughts of
> robustness, stability and thread safety.  I should look at this again
> though.
>
> Also, I should mention that in IPython this is not a show stopper for
> us, but it does mean that we currently don't use PB in all of the
> places we might otherwise.
>
> Brian
>
>
>
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From exarkun at divmod.com  Tue Sep  4 15:06:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Sep 2007 15:06:45 -0400
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object
	with a blocking API
In-Reply-To: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
Message-ID: <20070904190645.8162.17398181.divmod.quotient.3669@ohm>

On Tue, 4 Sep 2007 12:45:17 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>> >This is a usage case that we run into regularly.  We have a lot of PB
>> >based servers, but sometimes people want to use a client to them from
>> >an interactive Python or IPython prompt.  At that point you have to
>> >run the reactor in a different thread.
>>
>> Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
>> what the Twisted/IPython integration code ended up looking like (or if it
>> was ever taken to a satisfactory "completion" point) but I don't think it
>> is necessary to have multiple threads for that use case, either.
>
>I have, but this doesn't solve the problem as I recall.

There are definitely some problems it doesn't solve.  Maybe I'm not getting
the problem you have in mind.

>First, these
>users want to be able to use PB clients from vanilla python
>interpreters and IPython out of the box - not from within some other
>process doing the tricks that are in conch/stdio.py.

stdio.py doesn't do anything with multiple processes (as I think you see,
based on what you said a couple sentences later, but just to be clear).

Another point to clarify - there is a difference between having a blocking
user interface and a blocking API.  In fact, they're different things
entirely - they don't relate to each other in any significant way.

Keeping this in mind, there's no reason either the standard CPython REPL or
IPython couldn't provide a blocking user interface to an asynchronous API,
without resorting to multiple processes or threads.  The implementation is
asynchronous, the user interface blocks.

Of course, actually implementing this for the CPython REPL poses some
challenges.  However, an API does exist which would allow it to poll Twisted
at regular intervals in order to allow Twisted to take care of any event
processing it needed to take care of.  Whether this would yield a high-
quality implementation or not, I'm not sure, but something should be possible.
The reason I wrote stdio.py instead of doing this is that I'd rather have
a REPL implemented in Python without having to jump through libreadline
hoops.  Plus I didn't know about the CPython polling feature at the time. ;)

IPython could do this even more easily, since I think some IPython developers
are actively interested in the feature, and there might be a chance of there
being some changes made to IPython in order to facilitate this.

I hope I have understood properly the use-case you have in mind and that the
above makes some sense.

>Am I not correct
>that threads are needed in this case?  Second, what this module does
>is actually make the terminal asynchronous, which is exactly the
>opposite of what these users want.

stdio.py keeps everything asynchronous and throws Deferreds right in the
user's face.  But it does this because I'm a crazy guy and I love Deferreds.
It's equally possible to implement something like stdio.py, without using
threads or multiple processes, where the user experiences the interface
blocking until a result is available each time he would have otherwise seen
a Deferred.

>They *want* a synchronous terminal
>and a blocking PB clients.  I hope I am not coming across as angry
>about this - I'm not.

Not at all. :)

>To me the lesson is that as long as everything
>is really asynchronous anything is possible within the constraints of
>this asynchronous universe.  It's the multiple universe things that
>makes life complicated (asyn + syn).

Does the notion of dividing things up so that user interface concerns are
dealt with separately from API concerns clear this up at all?  Do you still
think there's something here which can't be solved without threads?

(To be sure, there is something - if you have a blocking API and you want to
use it inside an event loop, then you may need to resort to threads, but I
don't *think* that's the case you're interested in here - correct me if I'm
wrong.)

>> >But, I have never seen a
>> >method of putting a blocking API on top of such a client that was
>> >_really_ thread safe.  I have seen a few approaches that seem to work,
>> >but that are clearly non-thread safe.  I would love to see a robust
>> >solution for this problem though - one that could be fully trusted.
>>
>> Why isn't a solution based on Twisted's thread-safe event-posting API
>> (reactor.callFromThread) and the thread-safe event-posting API of whatever
>> other thing is being integrated with "really" thread-safe?  Sure, you can
>> write programs which will deadlock as a result of application-level bugs
>> where one thread is blocked on a request and the other thread needs some
>> information from it before the request can be satisfied, but this is inherent
>> to wanting to drive an asynchronous API synchronously.  Aside from it, I
>> don't think there are any problems with what I described above.
>
>It probably is, but I have never seen an implementation that actually
>does this.  Do you know of one?  The ones that I have seen - even
>those which use callFromThread have not filled me with thoughts of
>robustness, stability and thread safety.  I should look at this again
>though.

Ah, well, I don't have any that I can point too and claim are robust and
bug free (or even bug lite).  But hey, the *idea* is simple enough. >:)

>
>Also, I should mention that in IPython this is not a show stopper for
>us, but it does mean that we currently don't use PB in all of the
>places we might otherwise.
>

Is this because you want to have blocking APIs in order to implement
features in IPython or is it because you want to present an interface
to users which behaves in a blocking manner? (Sorry if this is beginning
to sound repetitive)

Jean-Paul



From rasjidw at gmail.com  Tue Sep  4 22:43:01 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Wed, 5 Sep 2007 12:43:01 +1000
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
References: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>
	<20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
Message-ID: <bf82ea70709041943t5527d414rdd08c7c879cf1b02@mail.gmail.com>

On 9/4/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> The example code doesn't do anything with Events, and I'm not sure I
> understand what you're describing above, so I don't know if that part
> of your code is correct or not.

>From simple-client.py

def wait_factory():
    "Returns a callback to apply to a deffered, and event to wait on"
    evt = threading.Event()
    def set_event(result):
        evt.set()
        return result
    return set_event, evt

> >I have not really looked into the thread safety issues yet, but have
> >been looking into reactor.callFromThread and whether it is required
> >here.
>
> Yes, it is.  As your code is now, it calls APIs which are not threadsafe
> from a non-reactor thread.  This isn't allowed and will definitely result
> in incorrect behavior sometimes.

I figured that was the case.  I was planning to fix this after getting
some feedback.  Which has been worthwhile, since I now know about
twisted.internet.blockingCallFromThread which would appear to do what
I want.

> >If the entire approach is inherently broken for some reason, I'd like
> >to know so I can look at alternatives.
>
> I'm not sure why you're trying to do this at all, instead of just using
> Twisted in a single-threaded manner.

Because the ultimate 'user' of the remote object will be a Visual Basic program.

My vision is as follows:
The Visual Basic program will talk to a python com server.
The python com server will run a PB client that will talk to a PB server.
The PB server will start a windows com component.
Everything gets relayed in a fairly transparent manner, and as far as
the VB program is concerned, it is just talking to a local com
component.

Standard DCOM does not really do what I want, since it assumes a
fairly fixed Client-Server model, whereas I want a peer-to-peer setup
where each node could be a client and a server.  PB would allow me to
do exactly that.

It might be possible to create a new twisted reactor that integrates
into the python com server event loop.  That would presumably be the
correct way to deal with this. But that would seem like far more work
that I have time to devote to this problem at this time.

So my question really is:
What are the problems / brawbacks with running the twisted reactor in
a non-main thread, provided all calls to the reactor are done through
twisted.internet.blockingCallFromThread?

Cheers,

Rasjid.



From pbastov at gmail.com  Tue Sep  4 22:53:25 2007
From: pbastov at gmail.com (Pavel Bastov)
Date: Wed, 5 Sep 2007 08:53:25 +0600
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <20070904162919.GJ11857@trude>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@192.168.24.210>
	<1179750893.7838.10.camel@localhost.localdomain>
	<46DD6DD2.4010601@sensisoft.com> <20070904162919.GJ11857@trude>
Message-ID: <eaf39e680709041953k671a28f7xa9db30cbf050e356@mail.gmail.com>

I'm building xooChat live help service and it uses Twisted as the backend.

On 9/4/07, Andreas Poisel <a.poisel at acat.cc> wrote:
> Hi!
>
> We (Acat) use Twisted to implement interfaces to hotel PMSs (Property
> Management Systems).
>
> Great tool, thanks a lot.
>
> --
> Bye, Andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Good luck,

Pavel Bastov
xooChat Evangelist and Team Leader
http://www.xoochat.com/



From lacrymology at gmail.com  Wed Sep  5 08:01:01 2007
From: lacrymology at gmail.com (Tomas Neme)
Date: Wed, 5 Sep 2007 09:01:01 -0300
Subject: [Twisted-Python] Re: Tell us how you're using Twisted
Message-ID: <2e6659dd0709050501k79922da2x482efa52ee05fed7@mail.gmail.com>

We use twisted to make the networking platform for a number of MMO
games that our client will be releasing sometime next year

Tomas

-- 
|_|0|_|
|_|_|0|
|0|0|0|

 (\__/)
(='.'=)This is Bunny. Copy and paste bunny
(")_(") to help him gain world domination.



From andrewfr_ice at yahoo.com  Wed Sep  5 13:54:34 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 5 Sep 2007 10:54:34 -0700 (PDT)
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
Message-ID: <166356.42572.qm@web34203.mail.mud.yahoo.com>

Hi Rasjid:

> It might be possible to create a new twisted reactor
> that integrates into the python com server event
>loop. That would presumably be the correct way to
>deal with this. But that would seem like far more
work
> that I have time to devote to this problem at this
> time.

Hopefully, I understood your problem correctly...
 
If you are willing to use Stackless Python, I would
recommend you use Christopher Armstrong's
threadlesss.py blockOn function. This would allow
Twisted calls to block. A few months ago, I posted a
solution that would work, but it would be overkill. 

I am also curious why you can't use inline callbacks?

If I can find the time, I will post an example.

> So my question really is:
> What are the problems / brawbacks with running the
> twisted reactor in
> a non-main thread, provided all calls to the reactor
> are done through
> twisted.internet.blockingCallFromThread?

I have used threads with Twisted and Stackless and
found I took a performance hit. Also I found it
prudent to heed the advice and try not to mix threads
with Twisted (or Stackless)

Cheers,
Andrew



      ____________________________________________________________________________________
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us. http://surveylink.yahoo.com/gmrs/yahoo_panel_invite.asp?a=7 




From beau at subobscur.us  Wed Sep  5 15:24:35 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 5 Sep 2007 12:24:35 -0700 (PDT)
Subject: [Twisted-Python] Properly handling Connection Refused
Message-ID: <747249.91202.qm@web714.biz.mail.mud.yahoo.com>

I have this application built in twisted that is pretty robust save for one thing. The server reconnects when it falters or fails for any reason EXCEPT a refused connection, which happens when connecting to services on the Windows servers we have where particular services have not yet been started, which is normal. Every other failure is handled gracefully, including the database disappearing suddenly. I print out the reason in the log and I get this error: 

[Uninitialized]  Reason:  [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionRefusedError'>: Connection was refused by other side: 111: Connection refused.
[Uninitialized] ]
[Uninitialized] Stopping factory <SomeFactory instance at 0x88b77ac>

And the whole thing stops processing and does not restart the connection.

I am running on Ubuntu 7.04 with the twisted packages therein: python-twisted 2.5.0-0ubuntu3

Is this a bug that others have seen? Should I use the tarball from twisted Matrix or use the gutsy packages?





From exarkun at divmod.com  Wed Sep  5 15:29:15 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 5 Sep 2007 15:29:15 -0400
Subject: [Twisted-Python] Properly handling Connection Refused
In-Reply-To: <747249.91202.qm@web714.biz.mail.mud.yahoo.com>
Message-ID: <20070905192915.8162.616090640.divmod.quotient.4128@ohm>

On Wed, 5 Sep 2007 12:24:35 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I have this application built in twisted that is pretty robust save for one thing. The server reconnects when it falters or fails for any reason EXCEPT a refused connection, which happens when connecting to services on the Windows servers we have where particular services have not yet been started, which is normal. Every other failure is handled gracefully, including the database disappearing suddenly. I print out the reason in the log and I get this error:
>
>[Uninitialized]  Reason:  [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionRefusedError'>: Connection was refused by other side: 111: Connection refused.
>[Uninitialized] ]
>[Uninitialized] Stopping factory <SomeFactory instance at 0x88b77ac>
>
>And the whole thing stops processing and does not restart the connection.

How did you implement reconnection?

Jean-Paul



From beau at subobscur.us  Wed Sep  5 15:37:16 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 5 Sep 2007 12:37:16 -0700 (PDT)
Subject: [Twisted-Python] Properly handling Connection Refused
Message-ID: <509588.36597.qm@web715.biz.mail.mud.yahoo.com>

Well, it subclasses 'protocol.ClientFactory'. I did not try 'ReconnectingClientFactory' yet as I wanted a little bit more control of the reconnecting process at some point. In any case, these functions are defined in the class as such:

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason: ', reason
        reactor.callLater(random.randint(10,91), connector.connect)

    def clientConnectionLost(self, connector, reason):
        print 'Connection Lost. Reason: ', reason
        reactor.callLater(random.randint(10,91), connector.connect)

Works ok for every other problem except Connection Refused. When I first started testing reconnect, the seconds argument to callLater was constant like 3 or 4 seconds and it did the same thing.  Even immediate reconnection caused the same problem with Connection Refused: 111.

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 5, 2007 12:29:15 PM
Subject: Re: [Twisted-Python] Properly handling Connection Refused

On Wed, 5 Sep 2007 12:24:35 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I have this application built in twisted that is pretty robust save for one thing. The server reconnects when it falters or fails for any reason EXCEPT a refused connection, which happens when connecting to services on the Windows servers we have where particular services have not yet been started, which is normal. Every other failure is handled gracefully, including the database disappearing suddenly. I print out the reason in the log and I get this error:
>
>[Uninitialized]  Reason:  [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionRefusedError'>: Connection was refused by other side: 111: Connection refused.
>[Uninitialized] ]
>[Uninitialized] Stopping factory <SomeFactory instance at 0x88b77ac>
>
>And the whole thing stops processing and does not restart the connection.

How did you implement reconnection?

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From exarkun at divmod.com  Wed Sep  5 15:54:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 5 Sep 2007 15:54:31 -0400
Subject: [Twisted-Python] Properly handling Connection Refused
In-Reply-To: <509588.36597.qm@web715.biz.mail.mud.yahoo.com>
Message-ID: <20070905195431.8162.677414154.divmod.quotient.4142@ohm>

On Wed, 5 Sep 2007 12:37:16 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>Well, it subclasses 'protocol.ClientFactory'. I did not try 'ReconnectingClientFactory' yet as I wanted a little bit more control of the reconnecting process at some point. In any case, these functions are defined in the class as such:
>
>    def clientConnectionFailed(self, connector, reason):
>        print 'Connection failed. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>    def clientConnectionLost(self, connector, reason):
>        print 'Connection Lost. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>Works ok for every other problem except Connection Refused. When I first started testing reconnect, the seconds argument to callLater was constant like 3 or 4 seconds and it did the same thing.  Even immediate reconnection caused the same problem with Connection Refused: 111.

This looks as though it should work.  If I run a similar test program, like
this:

  from twisted.internet.protocol import ClientFactory, Protocol
  from twisted.internet import reactor

  class Reconnecter(ClientFactory):
      def clientConnectionFailed(self, connector, reason):
          print reason
          reactor.callLater(5, connector.connect)

  reactor.connectTCP('localhost', 12345, Reconnecter())
  reactor.run()

where nothing is bound to localhost:12345, then I see a connection refused
message every five seconds for as long as I allow it to run.

Can you see if this simple program exhibits the same behavior as your
application?

It would also be worth determining if your application is receiving the
clientConnectionFailed notification but then failing to attempt another
connection (ie, some problem with the callLater), if it is attempting the
next connection but that is never happening (ie, some problem with the
connector.connect), or if clientConnectionFailed isn't even being called
for the connection which is failing (some problem inside the reactor with
failed connection detection/notification).

If you can, it would also be useful to know what the operating system thinks
the state of the socket used for the connection attempt is.  On Linux, you
can get this with a tool like netstat.

Jean-Paul



From beau at subobscur.us  Wed Sep  5 16:24:44 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 5 Sep 2007 13:24:44 -0700 (PDT)
Subject: [Twisted-Python] Properly handling Connection Refused
Message-ID: <235579.52404.qm@web712.biz.mail.mud.yahoo.com>

That small script worked as it should. The traceback is exactly the same as in my application. I just wonder where the '[Uninitialized]' is coming from. How is it ending up like that? Is it getting garbage collected for some reason? I can't catch the state of the port fast enough to see if it's anything else in the stack. I am using the poll reactor. I will change it back to the default select reactor and see if I see a problem with it again and see what other tracing I can do.

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 5, 2007 12:54:31 PM
Subject: Re: [Twisted-Python] Properly handling Connection Refused

On Wed, 5 Sep 2007 12:37:16 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>Well, it subclasses 'protocol.ClientFactory'. I did not try 'ReconnectingClientFactory' yet as I wanted a little bit more control of the reconnecting process at some point. In any case, these functions are defined in the class as such:
>
>    def clientConnectionFailed(self, connector, reason):
>        print 'Connection failed. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>    def clientConnectionLost(self, connector, reason):
>        print 'Connection Lost. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>Works ok for every other problem except Connection Refused. When I first started testing reconnect, the seconds argument to callLater was constant like 3 or 4 seconds and it did the same thing.  Even immediate reconnection caused the same problem with Connection Refused: 111.

This looks as though it should work.  If I run a similar test program, like
this:

  from twisted.internet.protocol import ClientFactory, Protocol
  from twisted.internet import reactor

  class Reconnecter(ClientFactory):
      def clientConnectionFailed(self, connector, reason):
          print reason
          reactor.callLater(5, connector.connect)

  reactor.connectTCP('localhost', 12345, Reconnecter())
  reactor.run()

where nothing is bound to localhost:12345, then I see a connection refused
message every five seconds for as long as I allow it to run.

Can you see if this simple program exhibits the same behavior as your
application?

It would also be worth determining if your application is receiving the
clientConnectionFailed notification but then failing to attempt another
connection (ie, some problem with the callLater), if it is attempting the
next connection but that is never happening (ie, some problem with the
connector.connect), or if clientConnectionFailed isn't even being called
for the connection which is failing (some problem inside the reactor with
failed connection detection/notification).

If you can, it would also be useful to know what the operating system thinks
the state of the socket used for the connection attempt is.  On Linux, you
can get this with a tool like netstat.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From exarkun at divmod.com  Wed Sep  5 17:26:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 5 Sep 2007 17:26:50 -0400
Subject: [Twisted-Python] Properly handling Connection Refused
In-Reply-To: <235579.52404.qm@web712.biz.mail.mud.yahoo.com>
Message-ID: <20070905212650.8162.675187231.divmod.quotient.4162@ohm>

On Wed, 5 Sep 2007 13:24:44 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>That small script worked as it should. The traceback is exactly the same as in my application. I just wonder where the '[Uninitialized]' is coming from. How is it ending up like that? Is it getting garbage collected for some reason? I can't catch the state of the port fast enough to see if it's anything else in the stack. I am using the poll reactor. I will change it back to the default select reactor and see if I see a problem with it again and see what other tracing I can do.

The "Uninitialized" probably isn't something to worry about.  It's just the
Twisted logging system noticing no one has given it a name for the event
source producing log messages.  I think someone even filed a ticket today
to fix one case which results in this.  In any case, it's just the logging
system, it shouldn't affect anything else.

Jean-Paul



From rasjidw at gmail.com  Wed Sep  5 22:10:39 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Thu, 6 Sep 2007 12:10:39 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <166356.42572.qm@web34203.mail.mud.yahoo.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
Message-ID: <bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>

On 9/6/07, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
> If you are willing to use Stackless Python, I would
> recommend you use Christopher Armstrong's
> threadlesss.py blockOn function. This would allow
> Twisted calls to block. A few months ago, I posted a
> solution that would work, but it would be overkill.

I have read about Stackless, and it looks like it would be really fun
to play with.  But I don't think my employer would be keen to go as
'fringe' as Stackless.

> I am also curious why you can't use inline callbacks?

I've only been playing with Twisted seriously for a couple of weeks,
but as far as I understand inline callbacks, they just make the code
'look' synchronous, but the end result is still a deferred.  In my
playing with them, they make twisted code much more succinct and
generally easier to read, but it is all still really just deferreds
underneath and there is no actual blocking going on.

I want to have my python code being called from an external process
via COM, and the external process will expect to be calling a class
method that will do something (blocking as long as required) and then
return the result. Rewriting the external app to deal with everything
being async is not an option.

I'd love to be shown that I'm wrong on this, but can't see how inline
callbacks solve my problem.

> > So my question really is:
> > What are the problems / brawbacks with running the
> > twisted reactor in
> > a non-main thread, provided all calls to the reactor
> > are done through
> > twisted.internet.blockingCallFromThread?
>
> I have used threads with Twisted and Stackless and
> found I took a performance hit. Also I found it
> prudent to heed the advice and try not to mix threads
> with Twisted (or Stackless)

The other option I have thought about is using the Python processing
module (http://pypi.python.org/pypi/processing), which would have the
com server and the twisted client each in their own python process
(and thus Twisted would then be single threaded), although it is
unclear to me if this is making the situation better or worse in
reality.

Cheers,

Rasjid.



From stefan.arentz at gmail.com  Thu Sep  6 05:48:05 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Thu, 6 Sep 2007 11:48:05 +0200
Subject: [Twisted-Python] Cometd?
Message-ID: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>

Has anyone done any work in the area of cometd? I'm interested in
using twisted for a cometd load tester. If there is already code that
I can build on that would be great.

 S.



From mwl at point45.com  Thu Sep  6 06:18:26 2007
From: mwl at point45.com (Mark Leonard)
Date: Thu, 06 Sep 2007 12:18:26 +0200
Subject: [Twisted-Python] Cometd?
In-Reply-To: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>
References: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>
Message-ID: <46DFD3F2.4010002@point45.com>

Stefan Arentz wrote:
 > Has anyone done any work in the area of cometd? I'm interested in
 > using twisted for a cometd load tester. If there is already code that
 > I can build on that would be great.

I don't know if you've seen this yet:
http://svn.xantus.org/shortbus/trunk/cometd-twisted/

Cometd server and client using Twisted. I've only glanced at it thus 
far, but the client is something you might be able to build on.

-Mark



From p.mayers at imperial.ac.uk  Thu Sep  6 06:51:13 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 06 Sep 2007 11:51:13 +0100
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
Message-ID: <1189075873.8730.15.camel@doorstop.net.ic.ac.uk>


> I've only been playing with Twisted seriously for a couple of weeks,
> but as far as I understand inline callbacks, they just make the code
> 'look' synchronous, but the end result is still a deferred.  In my
> playing with them, they make twisted code much more succinct and
> generally easier to read, but it is all still really just deferreds
> underneath and there is no actual blocking going on.

Correct. Effectively, it uses python generators to make the code "nice";
state variables can be kept as function-locals, and flow control can be
somewhat easier to visualise.

> 
> I want to have my python code being called from an external process
> via COM, and the external process will expect to be calling a class
> method that will do something (blocking as long as required) and then
> return the result. Rewriting the external app to deal with everything
> being async is not an option.

I suggest you abandon Perspective Broker; it's a fully async protocol,
and by trying to call it in a sync/blocking manner you're going to get
nowhere fast.

Use something easy like XMLRPC. Twisted can implement that as a server
with full deferred-capable semantics, it'll run over HTTPS, it's got
authentication, it's got .net bindings etc.






From radix at twistedmatrix.com  Thu Sep  6 10:05:21 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 6 Sep 2007 10:05:21 -0400
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
Message-ID: <60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>

On 9/6/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> > I want to have my python code being called from an external process
> > via COM, and the external process will expect to be calling a class
> > method that will do something (blocking as long as required) and then
> > return the result. Rewriting the external app to deal with everything
> > being async is not an option.
>
> I suggest you abandon Perspective Broker; it's a fully async protocol,
> and by trying to call it in a sync/blocking manner you're going to get
> nowhere fast.
>
> Use something easy like XMLRPC. Twisted can implement that as a server
> with full deferred-capable semantics, it'll run over HTTPS, it's got
> authentication, it's got .net bindings etc.



That doesn't make any sense: XMLRPC can  be used asynchronously, as PB can.
Switching to XMLRPC won't change anything about his situation, the biggest
problem being that his COM interface doesn't support callbacks (?).

Rasjid: Being asynchronous on the server does not require being asynchronous
on the client. Communication boundaries let you do that. You should check to
see if the "being a COM server" interface allows you to accept a call, and
then later asynchronously trigger the response. Ideally, it would allow
this, and the client would be none the wiser about whether the
implementation of the server is blocking or not, while it's waiting for the
response to its request.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070906/cc9fddf9/attachment.htm 

From p.mayers at imperial.ac.uk  Thu Sep  6 19:15:03 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Sep 2007 00:15:03 +0100
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
Message-ID: <1189120503.2493.18.camel@localhost.localdomain>


> 
> That doesn't make any sense: XMLRPC can  be used asynchronously, as PB
> can. Switching to XMLRPC won't change anything about his situation,
> the biggest problem being that his COM interface doesn't support
> callbacks (?). 

I read the OPs problem is precisely the opposite; they are wanting to
use PB sync (which involves horrible reactor tricks).






From langford.d at gmail.com  Fri Sep  7 01:36:45 2007
From: langford.d at gmail.com (David Langford)
Date: Fri, 7 Sep 2007 15:36:45 +1000
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
Message-ID: <6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>

Hey

  I did have the latest Twisted 2.5.0 installed. But I don't think i had the
latest python installed. I installed that and now python doesnt see twisted.
I downloaded the latest tarball again and when i tried to install it (using
python setup.py install) it tells me i need zope (which it didn't last
time).

So i've downloaded the latest stable zope but it wont let me install because
it isn't supported by the latest version of python.

And now i'm stuck, in worse position than before because now i don't even
have twisted. I feel like these are extremely basic things i should now, is
there a webpage or something that answers these problems i'im having?

Cheers

David

On 9/4/07, Chris Miles <miles.chris at gmail.com> wrote:
>
> Hi David,
>
> Have you installed the Twisted 2.5.0 tarball from http://
> twistedmatrix.com/trac/ ?
>
> If so, you should find the twistd command in the OS X Python bin dir,
> which will usually be:
>    /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
> or
>    /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd
>
> Cheers,
> Chris
>
> On 4 Sep 2007, at 05:57, David Langford wrote:
>
> > Hey everyone
> >
> >   I'm going through the finger tutorial -> http://twistedmatrix.com/
> > projects/core/documentation/howto/tutorial/intro.html . And at the
> > end of the first section it talks about using the twistd command.
> > Now it just plain doesn't work for me, telling me the command is
> > not found. I'm using a macbook pro and i type the command into
> > terminal.
> >
> >   Can anyone tell me what i'm doing wrong. Because the next section
> > doesn't work (i'm assuming its related to my lack of twistd-ness)
> >
> >   I know this a n00bish question, and i've been searching for an
> > answer, but everyone else seems to be able to get it working and no
> > one mentions having problems. Then i thought maybee i have to
> > download something extra for twisted, but a search of the site only
> > returned tickets (bug tickets) instead of an actual search of the
> > site.
> >
> >   Any help would be greatly appreciated
> >
> >  Lango
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070907/7795346d/attachment.htm 

From db3l.net at gmail.com  Fri Sep  7 02:01:15 2007
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 07 Sep 2007 02:01:15 -0400
Subject: [Twisted-Python] Re: twistd doesn't work
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
Message-ID: <m2tzq7dnf8.fsf@valheru.db3l.homeip.net>

"David Langford" <langford.d at gmail.com> writes:

>   I did have the latest Twisted 2.5.0 installed. But I don't think i had the
> latest python installed. I installed that and now python doesnt see twisted.
> I downloaded the latest tarball again and when i tried to install it (using
> python setup.py install) it tells me i need zope (which it didn't last
> time).

You're most likely just getting caught mixing different python
installations, which can be easy to do when you have multiple
interpreters on a system.

You just need to ensure you're installing against the right Python
runtime when you install the Twisted package.  In particular, make
sure you are running the Python executable you think you are when
running setup.py since it will install into the library location for
that Python executable.

Assuming you install the latest Python (say, Python 2.5.1 from the OS
X DMG image).  It will place its installation by default into the
paths mentioned earlier (but with 2.5 rather than 2.4) - e.g.:

/Library/Frameworks/Python.framework/Versions/2.5   or
/Library/Frameworks/Python.framework/Versions/Current

(Current is normally a symbolic link to a specific version)

If you've installed more than one Python release, you'll have multiple
versioned directories (e.g., 2.4 and 2.5) and Current will link to
one, probably the last you installed.

The python executable is in the "bin" directory beneath that root
(which also holds external library scripts), and external library
python code will end up beneath lib/python2.5/site-packages from that
root.

So the first thing to be absolutely sure about is that when you want
to install packages like Twisted (or any distutils based package) into
your python 2.5.1 installation, you must be sure to run the python
2.5.1 executable.  You can do that by making sure the above paths are
in your default shell path, adding them temporarily, explicitly using
the full path to the executable or whatever you are comfortable with.

When in doubt, start python by whatever method you choose, and verify the
version number in the startup banner.

Once you are sure of your python executable, simplest is to start with
a full Twisted 2.5.0 archive (such as Twisted-2.5.0.tar.bz2).  Unpack
that into a convenient directory.

Twisted does depend on the zope.interface package.  It includes an
appropriate copy of that package in the archive, but you need to
install it yourself.  So switch into the zope.interface-3.3.0
directory, and from within there run "sudo python setup.py install",
again making sure that the python you are running are the one you want
to install into.

After you do that you can do the same "sudo python setup.py install"
from the top level of the unpacked archive and it will install all the
Twisted projects.  Or if you just want some (say TwistedCore and
TwistedWeb), you can switch individually into each of those project
directories and run setup.py from there manually.

That should be all there is to it.

-- David




From glyph at divmod.com  Fri Sep  7 02:02:21 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 07 Sep 2007 06:02:21 -0000
Subject: Twisted does NOT require Zope!!! (Re: [Twisted-Python] twistd doesn't
	work)
In-Reply-To: <6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
Message-ID: <20070907060221.5579.147950179.divmod.xquotient.419@joule.divmod.com>

On 05:36 am, langford.d at gmail.com wrote:
>  I did have the latest Twisted 2.5.0 installed. But I don't think i had 
>the
>latest python installed. I installed that and now python doesnt see 
>twisted.
>I downloaded the latest tarball again and when i tried to install it 
>(using
>python setup.py install) it tells me i need zope (which it didn't last
>time).

Twisted does not, has never, and *will* never require Zope.  It requires 
Zope Interface, which is a separate, isolated library used by, and 
developed for, Zope.  Get it here:

http://www.zope.org/Products/ZopeInterface

This is not the first time I've heard this misunderstanding.  How could 
we have more clearly worded the error message that you saw so that you'd 
notice that Zope Interface is not Zope?
>So i've downloaded the latest stable zope but it wont let me install 
>because
>it isn't supported by the latest version of python.

Download the latest Zope Interface from the URL above.  It's supported 
by Python 2.5, and it works fine.



From wthie at thiengineering.ch  Fri Sep  7 02:06:05 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 07 Sep 2007 08:06:05 +0200
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
Message-ID: <46E0EA4D.8090901@thiengineering.ch>

David

No need to install a full blown Zope, just install the interface package

http://www.zope.org/Products/ZopeInterface

On the Mac also make sure that you're path is set to the correct 
directories where twistd resides (usually in your Python installation in 
the Scripts subdirectory)

If you want to find 'something' on your machine, use find in a terminal 
window like

find / -name 'twistd' -print

If you want to look at your PATH variable

use $PATH or env

if you want to change your path, open a fresh terminal an enter

open .bash_profile

which should open the file with one of the text editors available

HTH, Werner



David Langford wrote:
> Hey
> 
>   I did have the latest Twisted 2.5.0 installed. But I don't think i had the
> latest python installed. I installed that and now python doesnt see twisted.
> I downloaded the latest tarball again and when i tried to install it (using
> python setup.py install) it tells me i need zope (which it didn't last
> time).
> 
> So i've downloaded the latest stable zope but it wont let me install because
> it isn't supported by the latest version of python.
> 
> And now i'm stuck, in worse position than before because now i don't even
> have twisted. I feel like these are extremely basic things i should now, is
> there a webpage or something that answers these problems i'im having?
> 
> Cheers
> 
> David
> 
> On 9/4/07, Chris Miles <miles.chris at gmail.com> wrote:
>> Hi David,
>>
>> Have you installed the Twisted 2.5.0 tarball from http://
>> twistedmatrix.com/trac/ ?
>>
>> If so, you should find the twistd command in the OS X Python bin dir,
>> which will usually be:
>>    /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
>> or
>>    /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd
>>
>> Cheers,
>> Chris
>>
>> On 4 Sep 2007, at 05:57, David Langford wrote:
>>
>>> Hey everyone
>>>
>>>   I'm going through the finger tutorial -> http://twistedmatrix.com/
>>> projects/core/documentation/howto/tutorial/intro.html . And at the
>>> end of the first section it talks about using the twistd command.
>>> Now it just plain doesn't work for me, telling me the command is
>>> not found. I'm using a macbook pro and i type the command into
>>> terminal.
>>>
>>>   Can anyone tell me what i'm doing wrong. Because the next section
>>> doesn't work (i'm assuming its related to my lack of twistd-ness)
>>>
>>>   I know this a n00bish question, and i've been searching for an
>>> answer, but everyone else seems to be able to get it working and no
>>> one mentions having problems. Then i thought maybee i have to
>>> download something extra for twisted, but a search of the site only
>>> returned tickets (bug tickets) instead of an actual search of the
>>> site.
>>>
>>>   Any help would be greatly appreciated
>>>
>>>  Lango
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From rasjidw at gmail.com  Fri Sep  7 03:21:59 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Fri, 7 Sep 2007 17:21:59 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
Message-ID: <bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>

On 9/6/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I suggest you abandon Perspective Broker; it's a fully async protocol,
> and by trying to call it in a sync/blocking manner you're going to get
> nowhere fast.
>
> Use something easy like XMLRPC. Twisted can implement that as a server
> with full deferred-capable semantics, it'll run over HTTPS, it's got
> authentication, it's got .net bindings etc.

I have used XMLRPC in the past (until recently it was my main use of
Twisted), but it does not support complex objects, nor callbacks.  PB
does both, but just in an async manner.

I could use CORBA instead of PB, but then I'm likely to be in the
position where I want to learn Twisted and CORBA - I'd rather just
learn Twisted, as long as I can get it to play with Windows COM in the
way that I want.



From p.mayers at imperial.ac.uk  Fri Sep  7 05:34:45 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Sep 2007 10:34:45 +0100
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>
Message-ID: <1189157685.3460.10.camel@localhost.localdomain>

On Fri, 2007-09-07 at 17:21 +1000, Rasjid Wilcox wrote:
> On 9/6/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> > I suggest you abandon Perspective Broker; it's a fully async protocol,
> > and by trying to call it in a sync/blocking manner you're going to get
> > nowhere fast.
> >
> > Use something easy like XMLRPC. Twisted can implement that as a server
> > with full deferred-capable semantics, it'll run over HTTPS, it's got
> > authentication, it's got .net bindings etc.
> 
> I have used XMLRPC in the past (until recently it was my main use of
> Twisted), but it does not support complex objects, 

Well, it an pass arrays and dictionaries; how much more complex can
objects actually get, unless you want callbacks?

> nor callbacks.  PB does both, but just in an async manner.

Ah. You want callbacks. ;o)

So, let me be be sure I've understood what you want:

windows client
 |
 \- VB process
    |
  <COM>
    |
    \- python COM component
            |
  <maybe Twisted in a thread>
            |
  <some kind of complex object/callback capable RMI>
            |
     /- Python object ----> another COM object
     |
 /- Twisted Process
 |
windows server

I have a hard time seeing why you wouldn't just use DCOM for this, but
anyway...

Is the python COM component on the client in-process or out of process?

I assume you have no issues creating and talking to the COM object on
the server?

Christopher Armstrong has already suggested looking at COM to see if it
can support "async" components; it's been a while, but I seem to recall
it can.

You'll still need to run the reactor in a thread of course.

> I could use CORBA instead of PB, but then I'm likely to be in the

I don't see how that would help you.

> position where I want to learn Twisted and CORBA - I'd rather just
> learn Twisted, as long as I can get it to play with Windows COM in the
> way that I want.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From rasjidw at gmail.com  Fri Sep  7 08:01:16 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Fri, 7 Sep 2007 22:01:16 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <1189157685.3460.10.camel@localhost.localdomain>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>
	<1189157685.3460.10.camel@localhost.localdomain>
Message-ID: <bf82ea70709070501s10a92ad0g2f216fd2c7668c92@mail.gmail.com>

On 9/7/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> So, let me be be sure I've understood what you want:
>
> windows client
>  |
>  \- VB process
>     |
>   <COM>
>     |
>     \- python COM component
>             |
>   <maybe Twisted in a thread>
>             |
>   <some kind of complex object/callback capable RMI>
>             |
>      /- Python object ----> another COM object
>      |
>  /- Twisted Process
>  |
> windows server

That is pretty much it exactly!  :-)

> I have a hard time seeing why you wouldn't just use DCOM for this, but
> anyway...

Primarily because DCOM seems pretty fixed client -> server, whereas I
want to be able to send out a UDP multicast packet, discover which PCs
I wish to talk to, query a number of them, and then run some remote
methods.  And as indicated in your diagram above, the remote python
object may or may not be a COM object. The above arrangement also
allows the remote object to be running on a Linux box for example,
which is trickier (or at least more expensive) with DCOM.  I would
also consider running PB over SSL across the public internet, whereas
DCOM would have to be via a VPN.

The very long term goal is the gradual migration from VB to Python.
That is, gradually more all core code into Python, wraping Python code
up as COM objects so it can be used within the current program.  At
some point (might take a year or two) the VB program is nothing but a
front-end to Python code, at which point we could migrate the
front-end to wxPython or similar.  And at that point a migration from
Windows to Linux at least becomes a feasible option to contemplate.
Thus I have a long term motivation to avoid DCOM even if it was easier
in the first instance.

> Is the python COM component on the client in-process or out of process?

I have not decided that yet.  I have a feeling that out-of-process is
probably better in this case, but I'm still doing a fair bit of
research and learning on all this.

> I assume you have no issues creating and talking to the COM object on
> the server?

At the moment the 'server side' object in question is a Python object
that wraps up several COM objects and presents a much simpler
interface.

> Christopher Armstrong has already suggested looking at COM to see if it
> can support "async" components; it's been a while, but I seem to recall
> it can.

I believe it can, but the examples in win32com are a bit terse.

> You'll still need to run the reactor in a thread of course.

Yes!  And this is the part where I want some advice.  What are the
do's and don't of doing this?  And what are the most important things
I need to read / research?

Cheers,

Rasjid.



From andrewfr_ice at yahoo.com  Fri Sep  7 13:16:12 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 7 Sep 2007 10:16:12 -0700 (PDT)
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <E1ITDyB-0000u6-W7@cube.twistedmatrix.com>
Message-ID: <295264.16669.qm@web34214.mail.mud.yahoo.com>

Hi Rasjid:

>I have read about Stackless, and it looks like it
>would be really fun to play with.  But I don't think
my employer would be keen to go as 'fringe' as
Stackless.

Once you get the swing of it, Stackless Python is
pretty fun... and powerful. Even more fun when one
figures out how to properly integrate Stackless Python
with Twisted. 

Anyhow I haven't played with the Perspective Broker
before. So I read the Bruce Eckel "Grokking Twisted"
article and wrote a simple example to illustrate how
to make Twisted inter-operate with Stackless. 

The essense of the solution is the approach Armstrong
takes in threadless.py.  I provide a bit more
syntactic sugaring: 

1) Use a proxy that slightly modifies the method
calls, mainly to hide the underlying deferred.

2) trigger a "TwistedException." 

example fragment:

   def execute(self, host, port):
        global flag
        
        factory = pb.PBClientFactory()
        log.msg("connecting")
        reactor.connectTCP(host, port, factory)
        log.msg("connected")
        
        try:
           perspective =
self.processor.getRootObject(factory)
           print "=>",
processor.calculate(perspective, 10, 20)
           flag = False
        
        except TwistedException:
            log.msg("A Twisted Exception was thrown")
            log.msg(sys.exc_info())

One of my long term goals is to standardise the
approach and auto generate proxies and exceptions as
to make Twisted safe for the average Stackless Python
programmer.

Cheers,
Andrew

P.S - reference
http://www.artima.com/weblogs/viewpost.jsp?thread=156396

PBServer.py - is Bruce Eckel's server slightly
modified.



       
____________________________________________________________________________________
Got a little couch potato? 
Check out fun summer activities for kids.
http://search.yahoo.com/search?fr=oni_on_mail&p=summer+activities+for+kids&cs=bz 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBExample.py
Type: text/x-python
Size: 2589 bytes
Desc: pat706081052
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070907/063141da/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBServer.py
Type: text/x-python
Size: 662 bytes
Desc: 2825570039-PBServer.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070907/063141da/attachment-0001.py 

From konrads.smelkovs at gmail.com  Sat Sep  8 10:12:25 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sat, 8 Sep 2007 17:12:25 +0300
Subject: [Twisted-Python] How to ... in Conch?
Message-ID: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>

1) I want to invoke(exec) a command with arguments from a SSH Conch client.
The example suggests that arguments should be passed along with command, so
to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
arguments that have spaces? Should I slash-escape them?
2) How to obtain the retcode from an exec'ed command?

-- 
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070908/79403931/attachment.htm 

From paulswartz at gmail.com  Sat Sep  8 10:39:58 2007
From: paulswartz at gmail.com (Paul Swartz)
Date: Sat, 8 Sep 2007 10:39:58 -0400
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
Message-ID: <324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>

On 9/8/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
> 1) I want to invoke(exec) a command with arguments from a SSH Conch client.
> The example suggests that arguments should be passed along with command, so
> to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
> arguments that have spaces? Should I slash-escape them?

Commands are executed with the -e argument of your shell.  You can
slash-escape spaces or quote them; either one should work.

> 2) How to obtain the retcode from an exec'ed command?

If the server supports it, it sends a 'exit-status' request to the
channel with a uint32 encoded exit code.  If it exits with a signal,
an 'exit-signal' message is sent with format:
    string signal name
    bool core dumped
    string error message
    string language

HTH,
-p



From exarkun at twistedmatrix.com  Sun Sep  9 00:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Sep 2007 04:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1189310704.06.692639214@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-02 through 2007-09-09
Bugs opened: 19    Bugs closed: 7  Total open bugs: 1036 (+12)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +7  |Highest:  +1          |Core:   +7             
|Enhancement:  +7  |High:     +0          |Ftp:    -1             
|Task:         +1  |Normal:  +14          |Trial:  +3             
                                          |Vfs:    +6             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2811] eliminate shared mutable state from reactor implementations (opened by exarkun) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2811

[#2821] create twistd plugin for vfs (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2821

[#1264] twisted.vfs.test.test_ftp is enough to drive a sane man mad (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1264

                    ===== High =====
[#2822] deprecate twisted.python.reflect.filenameToModuleName so that it can be removed (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2822

                    ===== Normal =====
[#2812] cfreactor replacement using threadedselectreactor (opened by termie)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2812

[#2813] logstr initialization should happen before calling makeConnection in tcp.BaseClient (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2813

[#2814] bugfix in epollreactor.py: sometime event cann't be identified when connection is lost (opened by huyx) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2814

[#2815] Update VFS backends to an async interface (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2815

[#2816] Port the vfs ftp adapter to new async backends (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2816

[#2817] Port the vfs sftp adapter to new async backends (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2817

[#2818] Port the vfs stream adapter to new async backends (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2818

[#2819] Delete old sync vfs code and cleanup (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2819

[#2820] trial warning reporting uses print to stdout (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2820

[#2823] trial path/to/package// fails immediately with AssertionError (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2823

[#2824] spawnProcess and screen -D -m not getting along (opened by TTimo)
    defect          core       http://twistedmatrix.com/trac/ticket/2824

[#2825] reactors handle case where socket.fileno() returns -1 (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2825

[#2826] twisted.internet.tcp.Server.repstr wrong when listening on port 0 (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2826

[#2188] Trial catches exceptions during import (opened by jdahlin)
    defect          trial      http://twistedmatrix.com/trac/ticket/2188

[#2735] twisted.vfs.adapters.ftp._FileToConsumerAdapter doesn't fully implement IConsumer (opened by therve)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2735



Closed Bugs
______________________
                    ===== Highest =====
[#1904] Passive port ranges are not settable in t.p.ftp (opened by krp, closed by therve, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1904

[#2811] eliminate shared mutable state from reactor implementations (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2811

[#1264] twisted.vfs.test.test_ftp is enough to drive a sane man mad (opened by exarkun, closed by therve, )
    defect          core       http://twistedmatrix.com/trac/ticket/1264

                    ===== High =====
[#1223] vfs methods should always return deferreds (opened by cablehead, closed by cablehead, duplicate)
    defect          vfs        http://twistedmatrix.com/trac/ticket/1223

                    ===== Normal =====
[#2188] Trial catches exceptions during import (opened by jdahlin, closed by exarkun, )
    defect          trial      http://twistedmatrix.com/trac/ticket/2188

[#2814] bugfix in epollreactor.py: sometime event cann't be identified when connection is lost (opened by huyx, closed by therve, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2814

[#2735] twisted.vfs.adapters.ftp._FileToConsumerAdapter doesn't fully implement IConsumer (opened by therve, closed by therve, )
    defect          vfs        http://twistedmatrix.com/trac/ticket/2735



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2826] twisted.internet.tcp.Server.repstr wrong when listening on port 0 (since 2007-09-08 18:59:55).

Mean open ticket age: 511 days, 13:38:27.598094.
Median: 408 days, 23:27:57.886705.
Standard deviation: 400 days, 13:51:14.700782.
Interquartile range: 502 days, 7:38:45.

Mean time between ticket creation and ticket resolution: 120 days, 23:56:32.985168.
Median: 14 days, 8:13:35.
Standard deviation is 224 days, 18:24:36.530891.
The interquartile range is 127 days, 8:11:35.

Mean time spent in review: 64 days, 0:26:37.767588.
Median: 4 days, 0:03:10.
Standard deviation: 140 days, 6:05:08.850661.
Interquartile range: 29 days, 11:02:35.

Mean number of times a ticket is reviewed: 1.93571428571.
Median: 1
Standard deviation: 1.57000476623.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    18 unique ticket reporters
    6 unique ticket reviewers
    6 unique ticket resolvers
In the last 24 weeks,
    81 unique ticket reporters
    14 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    157 unique ticket reporters
    19 unique ticket reviewers
    27 unique ticket resolvers




From langford.d at gmail.com  Sun Sep  9 02:15:03 2007
From: langford.d at gmail.com (David Langford)
Date: Sun, 9 Sep 2007 16:15:03 +1000
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <46E0EA4D.8090901@thiengineering.ch>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
	<46E0EA4D.8090901@thiengineering.ch>
Message-ID: <6b88fa900709082315p27ad078bifa623bfea800bf55@mail.gmail.com>

Thanks everyone for your help.

I have correctly reinstalled it and everything is working fine, including
the twistd command.

Thanks again for everyones help.

Cheers

David

On 9/7/07, Werner Thie <wthie at thiengineering.ch> wrote:
>
> David
>
> No need to install a full blown Zope, just install the interface package
>
> http://www.zope.org/Products/ZopeInterface
>
> On the Mac also make sure that you're path is set to the correct
> directories where twistd resides (usually in your Python installation in
> the Scripts subdirectory)
>
> If you want to find 'something' on your machine, use find in a terminal
> window like
>
> find / -name 'twistd' -print
>
> If you want to look at your PATH variable
>
> use $PATH or env
>
> if you want to change your path, open a fresh terminal an enter
>
> open .bash_profile
>
> which should open the file with one of the text editors available
>
> HTH, Werner
>
>
>
> David Langford wrote:
> > Hey
> >
> >   I did have the latest Twisted 2.5.0 installed. But I don't think i had
> the
> > latest python installed. I installed that and now python doesnt see
> twisted.
> > I downloaded the latest tarball again and when i tried to install it
> (using
> > python setup.py install) it tells me i need zope (which it didn't last
> > time).
> >
> > So i've downloaded the latest stable zope but it wont let me install
> because
> > it isn't supported by the latest version of python.
> >
> > And now i'm stuck, in worse position than before because now i don't
> even
> > have twisted. I feel like these are extremely basic things i should now,
> is
> > there a webpage or something that answers these problems i'im having?
> >
> > Cheers
> >
> > David
> >
> > On 9/4/07, Chris Miles <miles.chris at gmail.com> wrote:
> >> Hi David,
> >>
> >> Have you installed the Twisted 2.5.0 tarball from http://
> >> twistedmatrix.com/trac/ ?
> >>
> >> If so, you should find the twistd command in the OS X Python bin dir,
> >> which will usually be:
> >>    /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
> >> or
> >>    /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd
> >>
> >> Cheers,
> >> Chris
> >>
> >> On 4 Sep 2007, at 05:57, David Langford wrote:
> >>
> >>> Hey everyone
> >>>
> >>>   I'm going through the finger tutorial -> http://twistedmatrix.com/
> >>> projects/core/documentation/howto/tutorial/intro.html . And at the
> >>> end of the first section it talks about using the twistd command.
> >>> Now it just plain doesn't work for me, telling me the command is
> >>> not found. I'm using a macbook pro and i type the command into
> >>> terminal.
> >>>
> >>>   Can anyone tell me what i'm doing wrong. Because the next section
> >>> doesn't work (i'm assuming its related to my lack of twistd-ness)
> >>>
> >>>   I know this a n00bish question, and i've been searching for an
> >>> answer, but everyone else seems to be able to get it working and no
> >>> one mentions having problems. Then i thought maybee i have to
> >>> download something extra for twisted, but a search of the site only
> >>> returned tickets (bug tickets) instead of an actual search of the
> >>> site.
> >>>
> >>>   Any help would be greatly appreciated
> >>>
> >>>  Lango
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070909/e6b9e240/attachment.htm 

From langford.d at gmail.com  Sun Sep  9 05:06:14 2007
From: langford.d at gmail.com (David Langford)
Date: Sun, 9 Sep 2007 19:06:14 +1000
Subject: Twisted does NOT require Zope!!! (Re: [Twisted-Python] twistd
	doesn't work)
In-Reply-To: <20070907060221.5579.147950179.divmod.xquotient.419@joule.divmod.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
	<20070907060221.5579.147950179.divmod.xquotient.419@joule.divmod.com>
Message-ID: <6b88fa900709090206g365dcda8gd77b9d828e0a8b3c@mail.gmail.com>

Hey

 I can't actually remember what the error message said. Maybee if you just
say, 'zope interface (this is different from zope)' . I think i was just
assuming the zope inferface came with the zope package.

Sorry i couldn't be more specific but i hope this helps.

Cheers

David

On 9/7/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 05:36 am, langford.d at gmail.com wrote:
> >  I did have the latest Twisted 2.5.0 installed. But I don't think i had
> >the
> >latest python installed. I installed that and now python doesnt see
> >twisted.
> >I downloaded the latest tarball again and when i tried to install it
> >(using
> >python setup.py install) it tells me i need zope (which it didn't last
> >time).
>
> Twisted does not, has never, and *will* never require Zope.  It requires
> Zope Interface, which is a separate, isolated library used by, and
> developed for, Zope.  Get it here:
>
> http://www.zope.org/Products/ZopeInterface
>
> This is not the first time I've heard this misunderstanding.  How could
> we have more clearly worded the error message that you saw so that you'd
> notice that Zope Interface is not Zope?
> >So i've downloaded the latest stable zope but it wont let me install
> >because
> >it isn't supported by the latest version of python.
>
> Download the latest Zope Interface from the URL above.  It's supported
> by Python 2.5, and it works fine.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070909/77667cbd/attachment.htm 

From konrads.smelkovs at gmail.com  Sun Sep  9 08:08:43 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sun, 9 Sep 2007 15:08:43 +0300
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
	<324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
Message-ID: <d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>

Hello,

How to obtain the stderror?
chanel.SSHChannel has an interesting method extReceived, is it that?

On 9/8/07, Paul Swartz <paulswartz at gmail.com> wrote:
>
> On 9/8/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
> > 1) I want to invoke(exec) a command with arguments from a SSH Conch
> client.
> > The example suggests that arguments should be passed along with command,
> so
> > to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
> > arguments that have spaces? Should I slash-escape them?
>
> Commands are executed with the -e argument of your shell.  You can
> slash-escape spaces or quote them; either one should work.
>
> > 2) How to obtain the retcode from an exec'ed command?
>
> If the server supports it, it sends a 'exit-status' request to the
> channel with a uint32 encoded exit code.  If it exits with a signal,
> an 'exit-signal' message is sent with format:
>     string signal name
>     bool core dumped
>     string error message
>     string language
>
> HTH,
> -p
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070909/321e7a27/attachment.htm 

From konrads.smelkovs at gmail.com  Sun Sep  9 08:53:53 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sun, 9 Sep 2007 15:53:53 +0300
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
	<324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
	<d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>
Message-ID: <d79700b90709090553x558da571s478783df1a5f6a57@mail.gmail.com>

I seem to have figured it out. Attached is a module with function
executeCommand that executes a single command, gathers input, output and
error code and returns it.
Comment at will.


On 9/9/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
>
> Hello,
>
> How to obtain the stderror?
> chanel.SSHChannel has an interesting method extReceived, is it that?
>
> On 9/8/07, Paul Swartz <paulswartz at gmail.com > wrote:
> >
> > On 9/8/07, Konrads Smelkovs < konrads.smelkovs at gmail.com> wrote:
> > > 1) I want to invoke(exec) a command with arguments from a SSH Conch
> > client.
> > > The example suggests that arguments should be passed along with
> > command, so
> > > to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
> > > arguments that have spaces? Should I slash-escape them?
> >
> > Commands are executed with the -e argument of your shell.  You can
> > slash-escape spaces or quote them; either one should work.
> >
> > > 2) How to obtain the retcode from an exec'ed command?
> >
> > If the server supports it, it sends a 'exit-status' request to the
> > channel with a uint32 encoded exit code.  If it exits with a signal,
> > an 'exit-signal' message is sent with format:
> >     string signal name
> >     bool core dumped
> >     string error message
> >     string language
> >
> > HTH,
> > -p
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Konrads Smelkovs
> Applied IT sorcery.
>



-- 
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070909/e55282ed/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sshcommand.py
Type: text/x-python
Size: 3921 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070909/e55282ed/attachment.py 

From paulswartz at gmail.com  Sun Sep  9 10:12:20 2007
From: paulswartz at gmail.com (Paul Swartz)
Date: Sun, 9 Sep 2007 10:12:20 -0400
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <d79700b90709090553x558da571s478783df1a5f6a57@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
	<324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
	<d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>
	<d79700b90709090553x558da571s478783df1a5f6a57@mail.gmail.com>
Message-ID: <324cfb540709090712j72a12c38qfeae2256e91fc5b1@mail.gmail.com>

On 9/9/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
> I seem to have figured it out. Attached is a module with function
> executeCommand that executes a single command, gathers input, output and
> error code and returns it.
> Comment at will.

A couple comments:
 * extReceived() should probably check that the data type is correct
(connection.EXTENDED_DATA_STDERR) and append the extended data rather
than overwriting the previous data.
 * closed() should check that self.exitcode is present.  Like I
mentioned earlier, if the process ends with a signal, the server will
send exit-signal.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.livejournal.com/
AIM: z3penguin



From adelagon at gmail.com  Sun Sep  9 22:28:58 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 10 Sep 2007 10:28:58 +0800
Subject: [Twisted-Python] epoll reactor in Twisted 2.50 tarball
Message-ID: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>

Hello guys,

I have to install Twisted 2.50 on our Ubuntu Dapper servers. The problem is
that I have to use the Twisted 2.50 tarball since Dapper apt repositories
only have Twisted 2.40. The installation went smoothly and my twisted
applications works except that when I try to run my scripts using the epoll
reactor (twistd -ny ./myscript -r epoll) I get this error.

Traceback (most recent call last):
  File "/usr/bin/twistd", line 21, in ?
    run()
  File "/usr/lib/python2.4/site-packages/twisted/scripts/twistd.py", line
27, in run
    app.run(runApp, ServerOptions)
  File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
374, in run
    config.parseOptions()
  File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
354, in parseOptions
    usage.Options.parseOptions(self, options)
  File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line 177,
in parseOptions
    self.__dispatch[optMangled](optMangled, arg)
  File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line 333,
in <lambda>
    fn = lambda name, value, m=method: m(value)
  File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
276, in opt_reactor
    installReactor(shortName)
  File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
line 80, in installReactor
    installer.install()
  File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
line 60, in install
    namedAny(self.moduleName).install()
  File "/usr/lib/python2.4/site-packages/twisted/python/reflect.py", line
357, in namedAny
    topLevelPackage = __import__(trialname)
  File "/usr/lib/python2.4/site-packages/twisted/internet/epollreactor.py",
line 22, in ?
    from twisted.python import _epoll
ImportError: cannot import name _epoll


On my workstation (LinuxMint 3.0), the epoll reactor works fine. The
difference is that I installed Twisted via apt-get. Thanks in advance for
anyone who can point me to the right way.

---
Alvin Delagon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070910/55302a46/attachment.htm 

From adelagon at gmail.com  Mon Sep 10 04:53:39 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 10 Sep 2007 16:53:39 +0800
Subject: [Twisted-Python] Re: epoll reactor in Twisted 2.50 tarball
In-Reply-To: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>
References: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>
Message-ID: <7a01f6c00709100153j6d326909tce11e2ab32bf4d2d@mail.gmail.com>

Just fixed it guys. Forgot to install python-dev first. ^_^


On 9/10/07, Alvin Delagon <adelagon at gmail.com> wrote:
>
> Hello guys,
>
> I have to install Twisted 2.50 on our Ubuntu Dapper servers. The problem
> is that I have to use the Twisted 2.50 tarball since Dapper apt
> repositories only have Twisted 2.40. The installation went smoothly and my
> twisted applications works except that when I try to run my scripts using
> the epoll reactor (twistd -ny ./myscript -r epoll) I get this error.
>
> Traceback (most recent call last):
>   File "/usr/bin/twistd", line 21, in ?
>     run()
>   File "/usr/lib/python2.4/site-packages/twisted/scripts/twistd.py", line
> 27, in run
>     app.run (runApp, ServerOptions)
>   File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
> 374, in run
>     config.parseOptions()
>   File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
> 354, in parseOptions
>     usage.Options.parseOptions(self, options)
>   File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line
> 177, in parseOptions
>     self.__dispatch[optMangled](optMangled, arg)
>   File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line
> 333, in <lambda>
>     fn = lambda name, value, m=method: m(value)
>   File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
> 276, in opt_reactor
>     installReactor(shortName)
>   File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
> line 80, in installReactor
>     installer.install()
>   File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
> line 60, in install
>     namedAny(self.moduleName).install()
>   File "/usr/lib/python2.4/site-packages/twisted/python/reflect.py", line
> 357, in namedAny
>     topLevelPackage = __import__(trialname)
>   File
> "/usr/lib/python2.4/site-packages/twisted/internet/epollreactor.py", line
> 22, in ?
>     from twisted.python import _epoll
> ImportError: cannot import name _epoll
>
>
> On my workstation (LinuxMint 3.0), the epoll reactor works fine. The
> difference is that I installed Twisted via apt-get. Thanks in advance for
> anyone who can point me to the right way.
>
> ---
> Alvin Delagon
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070910/c3adf129/attachment.htm 

From db3l.net at gmail.com  Mon Sep 10 03:39:32 2007
From: db3l.net at gmail.com (David Bolen)
Date: Mon, 10 Sep 2007 03:39:32 -0400
Subject: [Twisted-Python] Re: epoll reactor in Twisted 2.50 tarball
References: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>
Message-ID: <m2abrvq897.fsf@valheru.db3l.homeip.net>

"Alvin Delagon" <adelagon at gmail.com> writes:

> I have to install Twisted 2.50 on our Ubuntu Dapper servers. The problem is
> that I have to use the Twisted 2.50 tarball since Dapper apt repositories
> only have Twisted 2.40. The installation went smoothly and my twisted
> applications works except that when I try to run my scripts using the epoll
> reactor (twistd -ny ./myscript -r epoll) I get this error.
> (...)

When you built Twisted (through the setup.py script) it will build the
epoll reactor if it can find the /usr/include/sys/epoll.h header file.
So you might check if that is present on the system where you built
Twisted.  If not, you're probably missing some development packages.

On my Ubuntu feisty system the file comes as part of the libc6-dev
package.

-- David




From rasjidw at gmail.com  Tue Sep 11 03:24:37 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Tue, 11 Sep 2007 17:24:37 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
Message-ID: <bf82ea70709110024x10327122j1ebfd3b2b89f56f@mail.gmail.com>

On 9/7/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> Switching to XMLRPC won't change anything about his situation, the biggest
> problem being that his COM interface doesn't support callbacks (?).

Actually, on further research it looks like the Python COM
implementation does support callbacks, although it looks somewhat
complex.

> Rasjid: Being asynchronous on the server does not require being asynchronous
> on the client. Communication boundaries let you do that.

Got it.  :-)

I think I'm beginning to understand where the risks with threads are.
With threads, you can accidentally bypass the communication
boundaries, and code may mostly appear to work but randomly fail at
times.

Thanks to all for the responses.

Cheers,

Rasjid.



From natester at gmail.com  Tue Sep 11 19:51:51 2007
From: natester at gmail.com (Nathaniel Haggard)
Date: Tue, 11 Sep 2007 17:51:51 -0600
Subject: [Twisted-Python] trial on specific directory
Message-ID: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>

How do I tell trial to test the code in /mydir with the
/mydir/test/test_class1 instead testing the code from /lib/site-packages
like it does by default.

Thanks,
Nate
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070911/c21f2c4d/attachment.htm 

From jml at mumak.net  Tue Sep 11 19:56:39 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 12 Sep 2007 09:56:39 +1000
Subject: [Twisted-Python] trial on specific directory
In-Reply-To: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
References: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
Message-ID: <d06a5cd30709111656q7d8626fcr8e3145354d7923c9@mail.gmail.com>

On 9/12/07, Nathaniel Haggard <natester at gmail.com> wrote:
> How do I tell trial to test the code in /mydir with the
> /mydir/test/test_class1 instead testing the code from /lib/site-packages
> like it does by default.
>

When given a module name, Trial looks in the Python path for that
module. You have two options:

1. Put mydir in the Python path before site-packages.
2. Give Trial a path to a directory, rather than a module.

jml



From wthie at thiengineering.ch  Wed Sep 12 02:28:38 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 12 Sep 2007 08:28:38 +0200
Subject: [Twisted-Python] trial on specific directory
In-Reply-To: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
References: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
Message-ID: <46E78716.6060107@thiengineering.ch>

Usually I do it with a .pth file (appropirately named) in 
Lib/site-packages. Say for twisted I work with the svn checkout in
/home/proj/twisted while having a file called twisted.pth in 
Lib/site-packages with the single line content of

/home/proj/twisted

This way I do not have to install twisted every time I do a svn update.

For other path/package hacks see site.py in your local python installation.

HTH, Werner

Nathaniel Haggard wrote:
> How do I tell trial to test the code in /mydir with the
> /mydir/test/test_class1 instead testing the code from /lib/site-packages
> like it does by default.
> 
> Thanks,
> Nate
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From robert at gravina.com  Wed Sep 12 03:37:12 2007
From: robert at gravina.com (Robert Gravina)
Date: Wed, 12 Sep 2007 17:37:12 +1000
Subject: [Twisted-Python] Reconnecting PB Client
In-Reply-To: <24f63c200607131140v2706f24s673c3ccdbcbf4b1e@mail.gmail.com>
References: <24f63c200607131140v2706f24s673c3ccdbcbf4b1e@mail.gmail.com>
Message-ID: <89CDB3EE-F3C1-4B08-AFFC-2B72715154D9@gravina.com>


On Jul 14, 2006, at 4:40 AM, Don Smith wrote:

> Does anyone have some example code for building a reconnecting PB  
> client?


I'm trying to do something similar, and not sure where to begin.

The docs show how to make a reconnecting client when you define your  
own protocol, which might help as a starting point:
http://twistedmatrix.com/projects/core/documentation/howto/clients.html

Does anyone else have any idea how to do this with Perspective Broker?

Robert




From terry at jon.es  Wed Sep 12 05:50:15 2007
From: terry at jon.es (Terry Jones)
Date: Wed, 12 Sep 2007 11:50:15 +0200
Subject: [Twisted-Python] The Reactor
Message-ID: <18151.46679.301674.910659@terry.local>

Word leaks that the Google Reader coders call their back-end "Reactor".

  http://blogoscoped.com/archive/2007-09-11-n21.html

One wonders.

Terry



From bboerner at rgmadvisors.com  Wed Sep 12 10:03:04 2007
From: bboerner at rgmadvisors.com (Brendan Boerner)
Date: Wed, 12 Sep 2007 09:03:04 -0500
Subject: [Twisted-Python] Reconnecting PB Client
In-Reply-To: <89CDB3EE-F3C1-4B08-AFFC-2B72715154D9@gravina.com>
References: <24f63c200607131140v2706f24s673c3ccdbcbf4b1e@mail.gmail.com>
	<89CDB3EE-F3C1-4B08-AFFC-2B72715154D9@gravina.com>
Message-ID: <BE1BE911-D6E8-4E96-9CA6-4F04F20198EC@rgmadvisors.com>

On Jul 14, 2006, at 4:40 AM, Don Smith wrote:

 > Does anyone have some example code for building a reconnecting PB  
client?

I do something like this:

class Foo(object):

     # ...

     def connect(self):
         factory = FooMgrFactory()
         reactor.connectTCP(host, port, factory)
         return factory.getRootObject().addCallback 
(self._connected).addErrback(
             self._catchFailure)

     def _connected(self, rootObj):
         self.rootObj = rootObj
         rootObj.notifyOnDisconnect(self._disconnected)

     def _disconnected(self, rootObj):
         self.rootObj = None
         self.connected = False
	self.timer = reactor.callLater(defaultTimerDelay, self.connect)

     def doRemoteOp(self):
	try:
	    if self.rootObj: self.rootObj.callRemote("foo", arg).addCallback 
(self.fooreturn)
	    else: self.timer = reactor.callLater(defaultTimerDelay,  
self.connect)

	except pb.DeadReferenceError, e:
	    self.rootObj = None
	    self.timer = reactor.callLater(defaultTimerDelay, self.connect)

Please advise if this is not a preferred method.

Regards,
Brendan




From beau at subobscur.us  Wed Sep 12 17:06:50 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 12 Sep 2007 14:06:50 -0700 (PDT)
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
Message-ID: <388765.94865.qm@web707.biz.mail.mud.yahoo.com>

I started creating my services as twisted application plugins. When adding a second service as a plugin in the same directory as the first I get an error that the reactor was already installed. If I comment out the import of the reactor in one then I can start the other application. Neither the tutorial nor the source indicate what is going on except that it checks to see if a reactor is already installed at some point. What is the nuance here? Should I just go back to .tac files for these apps?





From exarkun at divmod.com  Wed Sep 12 17:26:29 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 12 Sep 2007 17:26:29 -0400
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the
	same directory?
In-Reply-To: <388765.94865.qm@web707.biz.mail.mud.yahoo.com>
Message-ID: <20070912212629.8162.1814446690.divmod.quotient.7831@ohm>

On Wed, 12 Sep 2007 14:06:50 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I started creating my services as twisted application plugins. When adding a second service as a plugin in the same directory as the first I get an error that the reactor was already installed. If I comment out the import of the reactor in one then I can start the other application. Neither the tutorial nor the source indicate what is going on except that it checks to see if a reactor is already installed at some point. What is the nuance here? Should I just go back to .tac files for these apps?

Could you describe what you're trying in a little more detail?  In particular,
I'm not sure if you're using mktap to create a tap file with multiple services,
if you're using the original plugin system (using tml files) or if you're using
the new plugin system (twisted.plugin).

Generally speaking, there's no problem running more than one service in a
single process.  A service is just an object which receives startup and
shutdown notification.  Anything beyond that is an application-specific
thing.

Jean-Paul



From beau at subobscur.us  Wed Sep 12 19:37:56 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 12 Sep 2007 16:37:56 -0700 (PDT)
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
Message-ID: <990407.67002.qm@web711.biz.mail.mud.yahoo.com>

I am using the new twisted/plugin setup. I am not using mktap. So, in my project directory (which is included in the syspath) I have a dir 'twisted/plugins' into which I am going to put each of the services/applications. I do not want them running in the same process because I want to be able to stop one without affecting the others. Some of the services process a lot of data from 80-100 simultaneous connections so I need to be able to use multiple processors on the machine. The directory structure looks something like this:

Project\
...project.py
...Processors\
......ProcessorX.py
......ProcessorY.py
...twisted\
......plugins\
.........Service1.py
.........Service2.py

For one of the services I want to use pollreactor or epollreactor, so each of the Services has only 4 lines in it:

from twisted.internet import pollreactor
pollreactor.install()
import Project.Processors.ProcessorX
theService = Project.Processors.ProcessorX.ProcXServiceMaker()

This all works great until I want to add a second service in the same manner. When I add the second service I get the error about the reactor already being installed. So 'twistd --help' will only list one of the services and scrolling up the screen one can see the error it spits out when it attempts to evaluate the second Service. If I start the first service, it finds it and then I comment out any reference to importing the reactor, then it will successfully evaluate the first AND second Service and allow me to start the second one.

This is the error that it spits out:

  File "/usr/lib/python2.5/site-packages/twisted/internet/pollreactor.py", line 183, in install
    main.installReactor(p)
  File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line 24, in installReactor
    "reactor already installed"
exceptions.AssertionError: reactor already installed

And sometimes it will be a random failure (which is probably a cache interaction). It seems to be the combination of reactors. If I install the pollreactor in one and the epollreactor in the other then it works, but only one time. Then I check again and it fails. It seems to be loading up all the plugins in the same context.

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 12, 2007 2:26:29 PM
Subject: Re: [Twisted-Python] Multiple Twisted Application Plugins in the same directory?

On Wed, 12 Sep 2007 14:06:50 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I started creating my services as twisted application plugins. When adding a second service as a plugin in the same directory as the first I get an error that the reactor was already installed. If I comment out the import of the reactor in one then I can start the other application. Neither the tutorial nor the source indicate what is going on except that it checks to see if a reactor is already installed at some point. What is the nuance here? Should I just go back to .tac files for these apps?

Could you describe what you're trying in a little more detail?  In particular,
I'm not sure if you're using mktap to create a tap file with multiple services,
if you're using the original plugin system (using tml files) or if you're using
the new plugin system (twisted.plugin).

Generally speaking, there's no problem running more than one service in a
single process.  A service is just an object which receives startup and
shutdown notification.  Anything beyond that is an application-specific
thing.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From radix at twistedmatrix.com  Wed Sep 12 20:15:53 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 12 Sep 2007 20:15:53 -0400
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
In-Reply-To: <990407.67002.qm@web711.biz.mail.mud.yahoo.com>
References: <990407.67002.qm@web711.biz.mail.mud.yahoo.com>
Message-ID: <60ed19d40709121715v55449575gd877fc8c4536c1fc@mail.gmail.com>

On 9/12/07, Beau Hargis <beau at subobscur.us> wrote:
> For one of the services I want to use pollreactor or epollreactor, so each of the Services has only 4 lines in it:
>
> from twisted.internet import pollreactor
> pollreactor.install()
> import Project.Processors.ProcessorX
> theService = Project.Processors.ProcessorX.ProcXServiceMaker()

Don't install a reactor in the plugin: in fact, don't import the
reactor at all. The correct way to choose the reactor is by passing
the "-r" or "--reactor" argument to 'twistd', like 'twistd -r poll
myplugin'

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From beau at subobscur.us  Wed Sep 12 21:29:19 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 12 Sep 2007 18:29:19 -0700 (PDT)
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
Message-ID: <959724.76794.qm@web706.biz.mail.mud.yahoo.com>

That indeed worked. It did occur to me for a fleeting moment when I looked at the man page; however, when I ran 'twistd --help-reactors' it spit out nothing so I was not sure of exactly what it wanted or if it worked at all.

----- Original Message ----
From: Christopher Armstrong <radix at twistedmatrix.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 12, 2007 5:15:53 PM
Subject: Re: [Twisted-Python] Multiple Twisted Application Plugins in the same directory?

On 9/12/07, Beau Hargis <beau at subobscur.us> wrote:
> For one of the services I want to use pollreactor or epollreactor, so each of the Services has only 4 lines in it:
>
> from twisted.internet import pollreactor
> pollreactor.install()
> import Project.Processors.ProcessorX
> theService = Project.Processors.ProcessorX.ProcXServiceMaker()

Don't install a reactor in the plugin: in fact, don't import the
reactor at all. The correct way to choose the reactor is by passing
the "-r" or "--reactor" argument to 'twistd', like 'twistd -r poll
myplugin'

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From nadav at MIT.EDU  Fri Sep 14 00:58:12 2007
From: nadav at MIT.EDU (Nadav Aharony)
Date: Fri, 14 Sep 2007 00:58:12 -0400
Subject: [Twisted-Python] Transmit queue - how would I go at it?
Message-ID: <46EA14E4.8060408@mit.edu>

Hi,

I am working on an application where clients request files, and since 
each file is very large, the server ACKs the requests and then queues 
them to be served later, one at a time.
I am relatively new to Twisted and was wondering what would be the best 
way to approach this.

Here is what I came up with so far:

1) Use Deferred callbacks, and string together callbacks to a "file 
sender" function - once a file is sent, the function is called back with 
a pointer to the next file in line.
If I do so - is there some automatic garbage collection of the callbacks 
that have already been handled? (there may eventually be hundreds of 
files to be sent)
In this approach, would there be a natural way to check if a new request 
is actually a repeat of a previous request already queued?

2) Use some type of queue - where each new file request is queued, and 
some single function handles them one at at time (I guess with 
asynchronous callbacks to itself every time the transport layer is free 
to send another file and the queue is not empty).
Is there some queue structure like this in Twisted? I saw something 
called a DefferedQueue but could not find many examples or documentation 
about it and about its usage.

I mainly want to understand, from the "Twisted mindset"  which would be 
the the right way to go?
Also, say in the future I would want to implement priority queuing and 
handling of the requests rather than a FIFO - how would I do that in 
Twisted?

Any thoughts and/or code examples would be greatly appreciated
Thanks!
Nadav





-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070914/3ea09a9c/attachment.htm 

From pablo at minimoesfuerzo.org  Fri Sep 14 03:37:31 2007
From: pablo at minimoesfuerzo.org (Pablo =?ISO-8859-1?Q?Mart=ED?=)
Date: Fri, 14 Sep 2007 09:37:31 +0200
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46EA14E4.8060408@mit.edu>
References: <46EA14E4.8060408@mit.edu>
Message-ID: <1189755451.12076.16.camel@satellite>


On Fri, 2007-09-14 at 00:58 -0400, Nadav Aharony wrote:
> Hi, 
> 
> I am working on an application where clients request files, and since
> each file is very large, the server ACKs the requests and then queues
> them to be served later, one at a time. 
> I am relatively new to Twisted and was wondering what would be the
> best way to approach this.

Hi Nadav,

I had a similar requirement with my application. You must offer an
asynchronous interface while dealing with each request synchronously. I
think that you should push your requests to a
twisted.internet.defer.DeferredQueue and process one at a time with the
aid of twisted.internet.defer.DeferredLock.
> 

If we consider that each of your petitions has an associated deferred
that will be called back when its finished:
(I haven't run this)

from twisted.internet import defer

class OneAtATime(object):
    def __init__(self):
        super(OneAtATime, self).__init__()
        self.queue = defer.DeferredQueue()
        self.lock = defer.DeferredLock()
        self.check_queue()

    def check_queue(self):
        self.queue.get().addCallback(self._process_one)
    
    def _process_one(self, petition):

        def acquire_cb(_):
            # do whatever with your petition
            # make sure that when you're done you call
            # self.lock.release() and self.check_queue()
            # on a state machine, this would be while transitioning
            # to the "idle" state
            pass

        self.lock.acquire().addCallback(acquire_cb)

    def queue_petition(self, petition):
        self.queue.put(petition)
        return petition.deferred

Regards,
Pablo
> 





From general at eepatents.com  Fri Sep 14 09:16:19 2007
From: general at eepatents.com (Ed Suominen)
Date: Fri, 14 Sep 2007 06:16:19 -0700
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46EA14E4.8060408@mit.edu>
References: <46EA14E4.8060408@mit.edu>
Message-ID: <46EA89A3.8050509@eepatents.com>

http://foss.eepatents.com/AsynQueue

Nadav Aharony wrote:
> Hi,
> 
> I am working on an application where clients request files, and since
> each file is very large, the server ACKs the requests and then queues
> them to be served later, one at a time.
> I am relatively new to Twisted and was wondering what would be the best
> way to approach this.




From stefan.arentz at gmail.com  Sat Sep 15 08:41:34 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Sat, 15 Sep 2007 14:41:34 +0200
Subject: [Twisted-Python] XML-RPC Service with Database Access
Message-ID: <adf34c300709150541t6592caf9sba6354844da02b60@mail.gmail.com>

I'm interested in using Twisted for a simple XML-RPC service that
needs to talk to either PostgreSQL or MySQL. (I would prefer PG).

I've got the XML-RPC part under control, that is fairly simple with
Twisted Web. But what would I use for the database part? What is
generally the easy way to do database access with Twisted?

Are there ORM solutions that are compatible with Twisted? It would be
nice if I could use something like SQLObject instead of raw queries.

I'm not looking for a complete solution here. Just trying to
understand what is usually done in Twisted land.

 S.



From stefan.arentz at gmail.com  Sat Sep 15 08:42:11 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Sat, 15 Sep 2007 14:42:11 +0200
Subject: [Twisted-Python] Cometd?
In-Reply-To: <46DFD3F2.4010002@point45.com>
References: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>
	<46DFD3F2.4010002@point45.com>
Message-ID: <adf34c300709150542t1eae798dvd83ef5507af8d6e3@mail.gmail.com>

On 9/6/07, Mark Leonard <mwl at point45.com> wrote:
> Stefan Arentz wrote:
>  > Has anyone done any work in the area of cometd? I'm interested in
>  > using twisted for a cometd load tester. If there is already code that
>  > I can build on that would be great.
>
> I don't know if you've seen this yet:
> http://svn.xantus.org/shortbus/trunk/cometd-twisted/
>
> Cometd server and client using Twisted. I've only glanced at it thus
> far, but the client is something you might be able to build on.

Thanks for that link Mark. It looks promising and I will hack on that
code soon. Probably both client and server.

 S.



From exarkun at divmod.com  Sat Sep 15 09:12:33 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 15 Sep 2007 09:12:33 -0400
Subject: [Twisted-Python] XML-RPC Service with Database Access
In-Reply-To: <adf34c300709150541t6592caf9sba6354844da02b60@mail.gmail.com>
Message-ID: <20070915131233.8162.1015941086.divmod.quotient.9093@ohm>

On Sat, 15 Sep 2007 14:41:34 +0200, Stefan Arentz <stefan.arentz at gmail.com> wrote:
>I'm interested in using Twisted for a simple XML-RPC service that
>needs to talk to either PostgreSQL or MySQL. (I would prefer PG).
>
>I've got the XML-RPC part under control, that is fairly simple with
>Twisted Web. But what would I use for the database part? What is
>generally the easy way to do database access with Twisted?
>
>Are there ORM solutions that are compatible with Twisted? It would be
>nice if I could use something like SQLObject instead of raw queries.
>
>I'm not looking for a complete solution here. Just trying to
>understand what is usually done in Twisted land.
>

The only solution bundled with Twisted is twisted.enterprise.adbapi (well,
you might see some other stuff in twisted.enterprise, but I wouldn't suggest
using any of it).  adbapi is a very simple asynchronous interpretation of
DB-API.

This isn't anything like the ORM solution you were hoping for, though.
So far as I understand it, the typical API presented by an ORM is quite
unfriendly toward integration with a Twisted-style application.  Someone
else may know of some work which has been done to address this.

For what it's worth, I do use an ORM with Twisted applications (Axiom) -
but I use it only with SQLite: it presents a synchronous API, blocking for
as long as necessary to satisfy a query, which is typically not long enough
to be problematic for my applications.

Jean-Paul



From Andy at NewWorldElectric.com  Sat Sep 15 10:58:57 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sat, 15 Sep 2007 10:58:57 -0400
Subject: [Twisted-Python] XML-RPC Service with Database Access
In-Reply-To: <20070915131233.8162.1015941086.divmod.quotient.9093@ohm>
References: <adf34c300709150541t6592caf9sba6354844da02b60@mail.gmail.com>
	<20070915131233.8162.1015941086.divmod.quotient.9093@ohm>
Message-ID: <37d49ed40709150758uce780d5l1ea074ea7064c054@mail.gmail.com>

I've been having some luck with sAsync(http://foss.eepatents.com/sAsync/)
which gives a limited subset of the SQL Alchemy API with a twisted
compatible interface.

Andy Fundinger

On 9/15/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Sat, 15 Sep 2007 14:41:34 +0200, Stefan Arentz <stefan.arentz at gmail.com>
> wrote:
> >I'm interested in using Twisted for a simple XML-RPC service that
> >needs to talk to either PostgreSQL or MySQL. (I would prefer PG).
> >
> >I've got the XML-RPC part under control, that is fairly simple with
> >Twisted Web. But what would I use for the database part? What is
> >generally the easy way to do database access with Twisted?
> >
> >Are there ORM solutions that are compatible with Twisted? It would be
> >nice if I could use something like SQLObject instead of raw queries.
> >
> >I'm not looking for a complete solution here. Just trying to
> >understand what is usually done in Twisted land.
> >
>
> The only solution bundled with Twisted is twisted.enterprise.adbapi (well,
> you might see some other stuff in twisted.enterprise, but I wouldn't
> suggest
> using any of it).  adbapi is a very simple asynchronous interpretation of
> DB-API.
>
> This isn't anything like the ORM solution you were hoping for, though.
> So far as I understand it, the typical API presented by an ORM is quite
> unfriendly toward integration with a Twisted-style application.  Someone
> else may know of some work which has been done to address this.
>
> For what it's worth, I do use an ORM with Twisted applications (Axiom) -
> but I use it only with SQLite: it presents a synchronous API, blocking for
> as long as necessary to satisfy a query, which is typically not long
> enough
> to be problematic for my applications.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070915/385a219b/attachment.htm 

From nadav at MIT.EDU  Sat Sep 15 23:41:27 2007
From: nadav at MIT.EDU (Nadav Aharony)
Date: Sat, 15 Sep 2007 23:41:27 -0400
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46EA89A3.8050509@eepatents.com>
References: <46EA14E4.8060408@mit.edu> <46EA89A3.8050509@eepatents.com>
Message-ID: <46ECA5E7.8000405@mit.edu>

Thanks Ed!

This could be relevant to several places in the code I'm working on.

Regards,
Nadav

Ed Suominen wrote:
> http://foss.eepatents.com/AsynQueue
>
> Nadav Aharony wrote:
>   
>> Hi,
>>
>> I am working on an application where clients request files, and since
>> each file is very large, the server ACKs the requests and then queues
>> them to be served later, one at a time.
>> I am relatively new to Twisted and was wondering what would be the best
>> way to approach this.
>>     
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070915/9f772977/attachment.htm 

From nadav at MIT.EDU  Sat Sep 15 23:36:37 2007
From: nadav at MIT.EDU (Nadav Aharony)
Date: Sat, 15 Sep 2007 23:36:37 -0400
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <1189755451.12076.16.camel@satellite>
References: <46EA14E4.8060408@mit.edu> <1189755451.12076.16.camel@satellite>
Message-ID: <46ECA4C5.7080801@mit.edu>

Thanks Pablo!
this looks pretty clear and neat, I'll try it out.

Just one newbie question - is the "_"  in "acquire_cb(_)"  just a 
placeholder for my own parameters, or does it have an actual meaning?
I've never seen this done in python before, and couldn't find other 
examples for it online...

Cheers,
Nadav


Pablo Mart? wrote:
> On Fri, 2007-09-14 at 00:58 -0400, Nadav Aharony wrote:
>   
>> Hi, 
>>
>> I am working on an application where clients request files, and since
>> each file is very large, the server ACKs the requests and then queues
>> them to be served later, one at a time. 
>> I am relatively new to Twisted and was wondering what would be the
>> best way to approach this.
>>     
>
> Hi Nadav,
>
> I had a similar requirement with my application. You must offer an
> asynchronous interface while dealing with each request synchronously. I
> think that you should push your requests to a
> twisted.internet.defer.DeferredQueue and process one at a time with the
> aid of twisted.internet.defer.DeferredLock.
>   
>
> If we consider that each of your petitions has an associated deferred
> that will be called back when its finished:
> (I haven't run this)
>
> from twisted.internet import defer
>
> class OneAtATime(object):
>     def __init__(self):
>         super(OneAtATime, self).__init__()
>         self.queue = defer.DeferredQueue()
>         self.lock = defer.DeferredLock()
>         self.check_queue()
>
>     def check_queue(self):
>         self.queue.get().addCallback(self._process_one)
>     
>     def _process_one(self, petition):
>
>         def acquire_cb(_):
>             # do whatever with your petition
>             # make sure that when you're done you call
>             # self.lock.release() and self.check_queue()
>             # on a state machine, this would be while transitioning
>             # to the "idle" state
>             pass
>
>         self.lock.acquire().addCallback(acquire_cb)
>
>     def queue_petition(self, petition):
>         self.queue.put(petition)
>         return petition.deferred
>
> Regards,
> Pablo
>   
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070915/4e81d145/attachment.htm 

From exarkun at twistedmatrix.com  Sun Sep 16 00:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Sep 2007 04:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1189915503.41.1179702994@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-09 through 2007-09-16
Bugs opened: 6    Bugs closed: 5  Total open bugs: 1037 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:  +1       |Highest:  -2          |Core:   +0             
                   |Normal:   +3          |Mail:   +1             
                                          |Names:  -1             
                                          |Web2:   +0             
                                          |Words:  +1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2830] string exc_value special case in Failure.__init__ misses cases (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2830

[#2831] twisted.test.test_tcp.AddressTestCase.testBuildProtocol is buggy and overly complex (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2831

                    ===== Normal =====
[#2827] calling IConnector.disconnect() from a connectSSL does not disconnect if remote end is silent (opened by matthubb)
    defect          core       http://twistedmatrix.com/trac/ticket/2827

[#2828] xmlstream.IQ shouldn't create timeout deferreds for every IQ (opened by jack)
    defect          words      http://twistedmatrix.com/trac/ticket/2828

[#2829] twisted.web2.client.http, fixed (opened by synx) (CLOSED, invalid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2829

[#2832] twisted.mail.test.test_smtp.TimeoutTestCase.testSMTPClient fails intermittently due to timing issues (opened by exarkun)
    defect          mail       http://twistedmatrix.com/trac/ticket/2832



Closed Bugs
______________________
                    ===== Highest =====
[#1730] twisted.test.test_tcp.HalfClose3TestCase.testReadNotificationRaises fails intermittently (opened by radix, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1730

[#2831] twisted.test.test_tcp.AddressTestCase.testBuildProtocol is buggy and overly complex (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2831

[#2807] twisted.mail.relaymanager.MXCalculator._cbMX raises unhandled IndexError for response with no answers (opened by exarkun, closed by exarkun, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/2807

[#2830] string exc_value special case in Failure.__init__ misses cases (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2830

                    ===== Normal =====
[#2829] twisted.web2.client.http, fixed (opened by synx, closed by glyph, invalid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2829



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2832] twisted.mail.test.test_smtp.TimeoutTestCase.testSMTPClient fails intermittently due to timing issues (since 2007-09-12 10:55:56).

Mean open ticket age: 517 days, 14:21:27.445920.
Median: 415 days, 23:27:03.233770.
Standard deviation: 401 days, 0:49:47.008297.
Interquartile range: 502 days, 16:56:16.

Mean time between ticket creation and ticket resolution: 120 days, 22:26:58.101251.
Median: 14 days, 8:13:35.
Standard deviation is 224 days, 16:16:14.995707.
The interquartile range is 127 days, 2:42:46.

Mean time spent in review: 64 days, 4:15:36.993554.
Median: 4 days, 0:03:10.
Standard deviation: 141 days, 14:18:03.262941.
Interquartile range: 29 days, 2:08:35.

Mean number of times a ticket is reviewed: 1.93882352941.
Median: 1
Standard deviation: 1.56762046109.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    20 unique ticket reporters
    4 unique ticket reviewers
    5 unique ticket resolvers
In the last 24 weeks,
    82 unique ticket reporters
    13 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    157 unique ticket reporters
    18 unique ticket reviewers
    26 unique ticket resolvers




From pablo at minimoesfuerzo.org  Sun Sep 16 06:27:10 2007
From: pablo at minimoesfuerzo.org (Pablo =?ISO-8859-1?Q?Mart=ED?=)
Date: Sun, 16 Sep 2007 12:27:10 +0200
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46ECA4C5.7080801@mit.edu>
References: <46EA14E4.8060408@mit.edu> <1189755451.12076.16.camel@satellite>
	<46ECA4C5.7080801@mit.edu>
Message-ID: <1189938430.6467.2.camel@satellite>


On Sat, 2007-09-15 at 23:36 -0400, Nadav Aharony wrote:
> Thanks Pablo!
> this looks pretty clear and neat, I'll try it out.
> 
> Just one newbie question - is the "_"  in "acquire_cb(_)"  just a
> placeholder for my own parameters, or does it have an actual meaning?
> I've never seen this done in python before, and couldn't find other
> examples for it online...

It is just a convention for cases where you're not interested in the
argument ( DeferredLock.release() returns a reference of the lock )

Regards,
Pablo
> 
> 
> Pablo Mart? wrote: 
> > On Fri, 2007-09-14 at 00:58 -0400, Nadav Aharony wrote:
> >   
> > > Hi, 
> > > 
> > > I am working on an application where clients request files, and since
> > > each file is very large, the server ACKs the requests and then queues
> > > them to be served later, one at a time. 
> > > I am relatively new to Twisted and was wondering what would be the
> > > best way to approach this.
> > >     
> > 
> > Hi Nadav,
> > 
> > I had a similar requirement with my application. You must offer an
> > asynchronous interface while dealing with each request synchronously. I
> > think that you should push your requests to a
> > twisted.internet.defer.DeferredQueue and process one at a time with the
> > aid of twisted.internet.defer.DeferredLock.
> >   
> > 
> > If we consider that each of your petitions has an associated deferred
> > that will be called back when its finished:
> > (I haven't run this)
> > 
> > from twisted.internet import defer
> > 
> > class OneAtATime(object):
> >     def __init__(self):
> >         super(OneAtATime, self).__init__()
> >         self.queue = defer.DeferredQueue()
> >         self.lock = defer.DeferredLock()
> >         self.check_queue()
> > 
> >     def check_queue(self):
> >         self.queue.get().addCallback(self._process_one)
> >     
> >     def _process_one(self, petition):
> > 
> >         def acquire_cb(_):
> >             # do whatever with your petition
> >             # make sure that when you're done you call
> >             # self.lock.release() and self.check_queue()
> >             # on a state machine, this would be while transitioning
> >             # to the "idle" state
> >             pass
> > 
> >         self.lock.acquire().addCallback(acquire_cb)
> > 
> >     def queue_petition(self, petition):
> >         self.queue.put(petition)
> >         return petition.deferred
> > 
> > Regards,
> > Pablo
> >   
> > 
> > 
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >   
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sun Sep 16 11:25:27 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 16 Sep 2007 11:25:27 -0400
Subject: [Twisted-Python] Who's using Gtk reactor?
In-Reply-To: 0
Message-ID: <20070916152527.8162.2038325160.divmod.quotient.9644@ohm>

Greetings,

As part of the work I've been doing to fix a bug in epoll reactor's handling
of "unclean" tcp disconnection (the case which gives ConnectionLost instead
of ConnectionDone), I've noticed that gtk reactor also doesn't handle this
case correctly.  Anyone who has looked at gtkreactor.py probably knows this
(there's a big comment in _readAndWrite, so whoever wrote it in the first
place realized what they were doing).

Before I fixed epoll reactor, I added a test for this case.  Gtk reactor
won't be able to pass this test, since it doesn't provide the correct
functionality.  I'm not going to fix gtk reactor, since glib2 or gtk2
reactor is really what people should be using these days.  However, if
someone else is interested in fixing gtk reactor, the fix would be happily
accepted (the hard part is done, since the unit test is written already ;).
If no one is interested in fixing it, though, then I think this is a good
time to start thinking about deprecating gtk reactor and eventually removing
it.

Anyone have any thoughts on this?

Jean-Paul



From itamar at itamarst.org  Mon Sep 17 09:23:22 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 17 Sep 2007 09:23:22 -0400
Subject: [Twisted-Python] Who's using Gtk reactor? (Gtk 1.x reactor)
In-Reply-To: <20070916152527.8162.2038325160.divmod.quotient.9644@ohm>
References: <20070916152527.8162.2038325160.divmod.quotient.9644@ohm>
Message-ID: <1190035402.28172.9.camel@localhost.localdomain>

On Sun, 2007-09-16 at 11:25 -0400, Jean-Paul Calderone wrote:
> Greetings,
> 
> As part of the work I've been doing to fix a bug in epoll reactor's handling
> of "unclean" tcp disconnection (the case which gives ConnectionLost instead
> of ConnectionDone), I've noticed that gtk reactor also doesn't handle this
> case correctly.

Just to clarify, JP is talking about the reactor for the long
unmaintained Gtk 1.x library, last released in 2001. Modern Gtk and
Gnome programs use Gtk 2.x for which Twisted provides the gtk2 and glib2
reactors.




From nicholas.mattiello at gmail.com  Tue Sep 18 15:03:11 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Tue, 18 Sep 2007 15:03:11 -0400
Subject: [Twisted-Python] cannot access svn repo
Message-ID: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>

hello,

I am trying to check out from the svn repository, but it keeps refusing me,
even when i run the svn co command on the downloads page.

svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk


svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused

any help would be appreciated, thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070918/42c0105c/attachment.htm 

From exarkun at divmod.com  Tue Sep 18 17:41:00 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 18 Sep 2007 17:41:00 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
Message-ID: <20070918214100.8162.1206813516.divmod.quotient.11013@ohm>

On Tue, 18 Sep 2007 15:03:11 -0400, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>hello,
>
>I am trying to check out from the svn repository, but it keeps refusing me,
>even when i run the svn co command on the downloads page.
>
>svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk
>
>
>svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
>
>any help would be appreciated, thanks.
>

Seems to be working now, for me:

$ telnet svn.twistedmatrix.com 3690
Trying 198.49.126.131...
Connected to svn.twistedmatrix.com.
Escape character is '^]'.
( success ( 1 2 ( ANONYMOUS ) ( edit-pipeline svndiff1 absent-entries ) ) ) ^]c

telnet> c
Connection closed.

Jean-Paul



From fred.trotter at gmail.com  Tue Sep 18 18:35:24 2007
From: fred.trotter at gmail.com (Fred Trotter)
Date: Tue, 18 Sep 2007 18:35:24 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a day
Message-ID: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>

Hello,
         I am new to python and I am potentially interested in writing
a new protocol with Twisted.  However I wanted to start with a simpler
problem that I have been working on, so that I can understand better
how twisted works.

        A particular client wants to enforce a home page for the first
internet connection each day. They have a intranet portal that gives
messages to employees and they want to be sure that each employee, no
matter how they have their homepage set, will see the messages the
first time they connect. After the first connection they want the
proxy to simply forward requests to the internet without filtering.

        Since I need to understand this issue for my other project
too, how do I get the python loop do one thing based on a "new day"
for an IP address and then do something else after that action has
been completed. Example code that addresses my problem would be great,
but I would be happy to have links to examples that do this...

Thanks!!

-- 
Fred Trotter
http://www.fredtrotter.com



From Andy at NewWorldElectric.com  Tue Sep 18 22:00:01 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Tue, 18 Sep 2007 22:00:01 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a
	day
In-Reply-To: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
Message-ID: <37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.com>

I'm not sure if this is the level you need an answer on, but I would put a
dictionary in the proxy keyed by IP address and with a value of the last
time that user was forced to the intranet site.  Check that against the
current time and a 16 hour offset and send a redirect message if it's out of
date.  Hoping someone else chimes in with how to stick a redirect into a
proxy, glancing at the code I'm not sure how to tell you to do that, though
it's clearly possible.

Andy Fundinger

On 9/18/07, Fred Trotter <fred.trotter at gmail.com> wrote:
>
> Hello,
>          I am new to python and I am potentially interested in writing
> a new protocol with Twisted.  However I wanted to start with a simpler
> problem that I have been working on, so that I can understand better
> how twisted works.
>
>         A particular client wants to enforce a home page for the first
> internet connection each day. They have a intranet portal that gives
> messages to employees and they want to be sure that each employee, no
> matter how they have their homepage set, will see the messages the
> first time they connect. After the first connection they want the
> proxy to simply forward requests to the internet without filtering.
>
>         Since I need to understand this issue for my other project
> too, how do I get the python loop do one thing based on a "new day"
> for an IP address and then do something else after that action has
> been completed. Example code that addresses my problem would be great,
> but I would be happy to have links to examples that do this...
>
> Thanks!!
>
> --
> Fred Trotter
> http://www.fredtrotter.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070918/8d04620a/attachment.htm 

From drew.smathers at gmail.com  Wed Sep 19 00:12:45 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 19 Sep 2007 00:12:45 -0400
Subject: [Twisted-Python] twisted.trial and test discovery
Message-ID: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>

Maybe a dead horse, but there was some prior discussion on nose vs.
trial in Feb:

http://twistedmatrix.com/pipermail/twisted-python/2007-February/014771.html

I like trial a lot (both for Twisted and non-Twisted applications -
heck I've even tested [gasp] Java applications with it).  The only
somewhat interesting feature of nose (vs. trial) I've found is test
discovery.  Is test discovery a planned feature for trial?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From jml at mumak.net  Wed Sep 19 02:02:27 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 19 Sep 2007 16:02:27 +1000
Subject: [Twisted-Python] twisted.trial and test discovery
In-Reply-To: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
References: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
Message-ID: <d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>

On 9/19/07, Drew Smathers <drew.smathers at gmail.com> wrote:
> Maybe a dead horse, but there was some prior discussion on nose vs.
> trial in Feb:
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-February/014771.html
>
> I like trial a lot (both for Twisted and non-Twisted applications -
> heck I've even tested [gasp] Java applications with it).  The only
> somewhat interesting feature of nose (vs. trial) I've found is test
> discovery.  Is test discovery a planned feature for trial?
>

I'm not sure I understand. Trial already does test discovery. "trial
yourpackage" will find all the test cases in your package.

jml



From daniel.cuesta at iavante.es  Wed Sep 19 06:26:22 2007
From: daniel.cuesta at iavante.es (Daniel de la Cuesta)
Date: Wed, 19 Sep 2007 12:26:22 +0200
Subject: [Twisted-Python] Control the number of parallel system calls
Message-ID: <46F0F94E.5040104@iavante.es>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/a54f2a7d/attachment.htm 

From miles.chris at gmail.com  Wed Sep 19 06:57:26 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Wed, 19 Sep 2007 11:57:26 +0100
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <B2D0FF98-A3C1-4E67-97BC-656A1F9360F2@gmail.com>

I've done something very similar.  I control the number of concurrent  
child processes by simply keeping a counter of how many are active at  
any one time.  The main loop that polls a queue will only accept new  
jobs if the counter is less than the configuration-defined limit.

I didn't find anything Twisted-specific to limit the number of forked  
processes, but it was easy to implement in my own logic.

Cheers,
Chris

On 19 Sep 2007, at 11:26, Daniel de la Cuesta wrote:

> Hi,
>
> I am developing a video conversion server. To process the video  
> conversion I use the method "getProcessOutput" to call "ffmpeg".
>
> The user upload the video using a HTTP POST and each video must be  
> converted to 8 or 10 output formats.
>
> Currently, all the conversions for each video are processed in  
> parallel, what I want to do is to control the number of parallel  
> system calls to "ffmpeg". For example I only want 2 processes at  
> the same time and when one of them finishes the next process start.
>
> How can I do that?
>
> Is there any function in Twisted that implements that?
>
> Thank you
>



From andrew-twisted at puzzling.org  Wed Sep 19 07:20:23 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Sep 2007 21:20:23 +1000
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <20070919112023.GC13607@steerpike.home.puzzling.org>

Daniel de la Cuesta wrote:
> Hi,
> 
> I am developing a video conversion server. To process the video conversion I
> use the method "getProcessOutput" to call "ffmpeg".
> 
> The user upload the video using a HTTP POST and each video must be converted to
> 8 or 10 output formats.
> 
> Currently, all the conversions for each video are processed in parallel, what I
> want to do is to control the number of parallel system calls to "ffmpeg". For
> example I only want 2 processes at the same time and when one of them finishes
> the next process start.
> 
> How can I do that?
> 
> Is there any function in Twisted that implements that?

The obvious way to do that would be using a
twisted.internet.defer.DeferredSemaphore.

-Andrew.




From miles.chris at gmail.com  Wed Sep 19 07:44:50 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Wed, 19 Sep 2007 12:44:50 +0100
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <B2D0FF98-A3C1-4E67-97BC-656A1F9360F2@gmail.com>
References: <46F0F94E.5040104@iavante.es>
	<B2D0FF98-A3C1-4E67-97BC-656A1F9360F2@gmail.com>
Message-ID: <AF13894C-5107-43DD-98AE-7735172CA5F1@gmail.com>

In fact the code I use to perform concurrent processing from a disk- 
based request queue is available here,
http://www.psychofx.com/directory_queue_service/

Feedback welcome.

Cheers,
Chris Miles

On 19 Sep 2007, at 11:57, Chris Miles wrote:

> I've done something very similar.  I control the number of  
> concurrent child processes by simply keeping a counter of how many  
> are active at any one time.  The main loop that polls a queue will  
> only accept new jobs if the counter is less than the configuration- 
> defined limit.
>
> I didn't find anything Twisted-specific to limit the number of  
> forked processes, but it was easy to implement in my own logic.
>
> Cheers,
> Chris
>
> On 19 Sep 2007, at 11:26, Daniel de la Cuesta wrote:
>
>> Hi,
>>
>> I am developing a video conversion server. To process the video  
>> conversion I use the method "getProcessOutput" to call "ffmpeg".
>>
>> The user upload the video using a HTTP POST and each video must be  
>> converted to 8 or 10 output formats.
>>
>> Currently, all the conversions for each video are processed in  
>> parallel, what I want to do is to control the number of parallel  
>> system calls to "ffmpeg". For example I only want 2 processes at  
>> the same time and when one of them finishes the next process start.
>>
>> How can I do that?
>>
>> Is there any function in Twisted that implements that?
>>
>> Thank you
>>




From nicholas.mattiello at gmail.com  Wed Sep 19 10:04:34 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 10:04:34 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
Message-ID: <26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>

[nmattiello at megatron ~]$ svn co
svn://svn.twistedmatrix.com/svn/Twisted/trunk
svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
[nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
Trying 198.49.126.131...
telnet: connect to address 198.49.126.131: Connection refused
telnet: Unable to connect to remote host: Connection refused

what could be wrong?

On 9/18/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Tue, 18 Sep 2007 15:03:11 -0400, Nicholas Mattiello <
> nicholas.mattiello at gmail.com> wrote:
> >hello,
> >
> >I am trying to check out from the svn repository, but it keeps refusing
> me,
> >even when i run the svn co command on the downloads page.
> >
> >svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk
> >
> >
> >svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
> >
> >any help would be appreciated, thanks.
> >
>
> Seems to be working now, for me:
>
> $ telnet svn.twistedmatrix.com 3690
> Trying 198.49.126.131...
> Connected to svn.twistedmatrix.com.
> Escape character is '^]'.
> ( success ( 1 2 ( ANONYMOUS ) ( edit-pipeline svndiff1 absent-entries ) )
> ) ^]c
>
> telnet> c
> Connection closed.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/2beb0f3b/attachment.htm 

From terry at jon.es  Wed Sep 19 10:21:08 2007
From: terry at jon.es (Terry Jones)
Date: Wed, 19 Sep 2007 16:21:08 +0200
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: Your message at 10:04:34 on Wednesday, 19 September 2007
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
Message-ID: <18161.12372.917774.925390@terry.local>

Hi Nicholas

| [nmattiello at megatron ~]$ svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk

This works fine for me too.

| svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
| [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
| Trying 198.49.126.131...
| telnet: connect to address 198.49.126.131: Connection refused
| telnet: Unable to connect to remote host: Connection refused
| 
| what could be wrong?

Firewall?

Terry



From exarkun at divmod.com  Wed Sep 19 10:22:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 19 Sep 2007 10:22:20 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
Message-ID: <20070919142220.8162.2110983728.divmod.quotient.11374@ohm>

On Wed, 19 Sep 2007 10:04:34 -0400, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>[nmattiello at megatron ~]$ svn co
>svn://svn.twistedmatrix.com/svn/Twisted/trunk
>svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
>[nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
>Trying 198.49.126.131...
>telnet: connect to address 198.49.126.131: Connection refused
>telnet: Unable to connect to remote host: Connection refused
>
>what could be wrong?
>

Could your ISP be blocking outgoing connections?

Jean-Paul



From ldanielburr at mac.com  Wed Sep 19 10:31:29 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed, 19 Sep 2007 09:31:29 -0500
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
Message-ID: <op.tywnyrjg3oj628@l-daniel-burrs-computer.local>

On Wed, 19 Sep 2007 09:04:34 -0500, Nicholas Mattiello  
<nicholas.mattiello at gmail.com> wrote:

> [nmattiello at megatron ~]$ svn co
> svn://svn.twistedmatrix.com/svn/Twisted/trunk
> svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
> [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> Trying 198.49.126.131...
> telnet: connect to address 198.49.126.131: Connection refused
> telnet: Unable to connect to remote host: Connection refused
>
> what could be wrong?

I just tried to connect, and I get this:

svn checkout svn://svn.twistedmatrix.com/svn/Twisted/trunk foobar

[long list of files omitted]

Checked out revision 21295.

So things appear to be fine over on the svn server; do you have a firewall  
running?

L. Daniel Burr




From nicholas.mattiello at gmail.com  Wed Sep 19 10:51:03 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 10:51:03 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <18161.12372.917774.925390@terry.local>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
Message-ID: <26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>

im seeing that packets arrive and are sent back from 198.49.126.131, which
is the svn server.  if its a firewall issue, why would the server actively
refuse my connection?  wouldnt the packets not even make it through to the
server if it was a firewall issue?

On 9/19/07, Terry Jones <terry at jon.es> wrote:
>
> Hi Nicholas
>
> | [nmattiello at megatron ~]$ svn co
> svn://svn.twistedmatrix.com/svn/Twisted/trunk
>
> This works fine for me too.
>
> | svn: Can't connect to host 'svn.twistedmatrix.com ': Connection refused
> | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> | Trying 198.49.126.131...
> | telnet: connect to address 198.49.126.131: Connection refused
> | telnet: Unable to connect to remote host: Connection refused
> |
> | what could be wrong?
>
> Firewall?
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/ace1447a/attachment.htm 

From nicholas.mattiello at gmail.com  Wed Sep 19 10:52:23 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 10:52:23 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
Message-ID: <26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>

either way ill check out the network configuration here at my company, see
if ports are closed or whatever.

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> im seeing that packets arrive and are sent back from 198.49.126.131, which
> is the svn server.  if its a firewall issue, why would the server actively
> refuse my connection?  wouldnt the packets not even make it through to the
> server if it was a firewall issue?
>
> On 9/19/07, Terry Jones <terry at jon.es> wrote:
> >
> > Hi Nicholas
> >
> > | [nmattiello at megatron ~]$ svn co
> > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> >
> > This works fine for me too.
> >
> > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > refused
> > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > | Trying 198.49.126.131...
> > | telnet: connect to address 198.49.126.131: Connection refused
> > | telnet: Unable to connect to remote host: Connection refused
> > |
> > | what could be wrong?
> >
> > Firewall?
> >
> > Terry
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/e732d5cc/attachment.htm 

From nicholas.mattiello at gmail.com  Wed Sep 19 11:03:57 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 11:03:57 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
	<26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
Message-ID: <26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>

just realized the url scheme is svn://  firewall might actually be an issue,
most svn repos we use are http://

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> either way ill check out the network configuration here at my company, see
> if ports are closed or whatever.
>
> On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> >
> > im seeing that packets arrive and are sent back from 198.49.126.131,
> > which is the svn server.  if its a firewall issue, why would the server
> > actively refuse my connection?  wouldnt the packets not even make it through
> > to the server if it was a firewall issue?
> >
> > On 9/19/07, Terry Jones <terry at jon.es> wrote:
> > >
> > > Hi Nicholas
> > >
> > > | [nmattiello at megatron ~]$ svn co
> > > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> > >
> > > This works fine for me too.
> > >
> > > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > > refused
> > > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > > | Trying 198.49.126.131...
> > > | telnet: connect to address 198.49.126.131: Connection refused
> > > | telnet: Unable to connect to remote host: Connection refused
> > > |
> > > | what could be wrong?
> > >
> > > Firewall?
> > >
> > > Terry
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/3467dabc/attachment.htm 

From nicholas.mattiello at gmail.com  Wed Sep 19 11:03:57 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 11:03:57 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
	<26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
Message-ID: <26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>

just realized the url scheme is svn://  firewall might actually be an issue,
most svn repos we use are http://

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> either way ill check out the network configuration here at my company, see
> if ports are closed or whatever.
>
> On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> >
> > im seeing that packets arrive and are sent back from 198.49.126.131,
> > which is the svn server.  if its a firewall issue, why would the server
> > actively refuse my connection?  wouldnt the packets not even make it through
> > to the server if it was a firewall issue?
> >
> > On 9/19/07, Terry Jones <terry at jon.es> wrote:
> > >
> > > Hi Nicholas
> > >
> > > | [nmattiello at megatron ~]$ svn co
> > > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> > >
> > > This works fine for me too.
> > >
> > > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > > refused
> > > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > > | Trying 198.49.126.131...
> > > | telnet: connect to address 198.49.126.131: Connection refused
> > > | telnet: Unable to connect to remote host: Connection refused
> > > |
> > > | what could be wrong?
> > >
> > > Firewall?
> > >
> > > Terry
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/3467dabc/attachment-0001.htm 

From drew.smathers at gmail.com  Wed Sep 19 11:44:34 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 19 Sep 2007 11:44:34 -0400
Subject: [Twisted-Python] twisted.trial and test discovery
In-Reply-To: <d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>
References: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
	<d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>
Message-ID: <368574aa0709190844xf9cb833y672c55a29f8e2285@mail.gmail.com>

> I'm not sure I understand. Trial already does test discovery. "trial
> yourpackage" will find all the test cases in your package.

Yes, I know.  It will not pick up doctests defined in plain text files
(mymod.txt - like you see frequently in zope projects) or in doc
strings from my experiments.  Of course, this is just me being lazy  -
especially for doctests inside of modules where I can make a trivial
test_doc module to collect these:

from myproject import web, auth, i18n
__doctests__ = [ web, auth, i18n ]

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From nicholas.mattiello at gmail.com  Wed Sep 19 12:11:20 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 12:11:20 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
	<26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
	<26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>
Message-ID: <26c6d6b10709190911ra64a5dbqb2374e6ae1b74c3f@mail.gmail.com>

ok i went into a conference room that had an unfiltered t1 and it worked.
sorry for bothering, thanks.

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> just realized the url scheme is svn://  firewall might actually be an
> issue, most svn repos we use are http://
>
> On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> >
> > either way ill check out the network configuration here at my company,
> > see if ports are closed or whatever.
> >
> > On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> > >
> > > im seeing that packets arrive and are sent back from 198.49.126.131,
> > > which is the svn server.  if its a firewall issue, why would the server
> > > actively refuse my connection?  wouldnt the packets not even make it through
> > > to the server if it was a firewall issue?
> > >
> > > On 9/19/07, Terry Jones <terry at jon.es> wrote:
> > > >
> > > > Hi Nicholas
> > > >
> > > > | [nmattiello at megatron ~]$ svn co
> > > > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> > > >
> > > > This works fine for me too.
> > > >
> > > > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > > > refused
> > > > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > > > | Trying 198.49.126.131...
> > > > | telnet: connect to address 198.49.126.131: Connection refused
> > > > | telnet: Unable to connect to remote host: Connection refused
> > > > |
> > > > | what could be wrong?
> > > >
> > > > Firewall?
> > > >
> > > > Terry
> > > >
> > > > _______________________________________________
> > > > Twisted-Python mailing list
> > > > Twisted-Python at twistedmatrix.com
> > > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > > >
> > >
> > >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/e1437977/attachment.htm 

From matt at pollenation.net  Wed Sep 19 13:42:20 2007
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 19 Sep 2007 18:42:20 +0100
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <46F15F7C.6090906@pollenation.net>

Daniel de la Cuesta wrote:
> Hi,
> 
> I am developing a video conversion server. To process the video
> conversion I use the method "getProcessOutput" to call "ffmpeg".
> 
> The user upload the video using a HTTP POST and each video must be
> converted to 8 or 10 output formats.
> 
> Currently, all the conversions for each video are processed in parallel,
> what I want to do is to control the number of parallel system calls to
> "ffmpeg". For example I only want 2 processes at the same time and when
> one of them finishes the next process start.
> 
> How can I do that?
> 
> Is there any function in Twisted that implements that?
> 
> Thank you


I wrote something similar to what you want some time ago, although I
don't think I ever actually used it in the end. See attached module.

I included a __main__ section in the module that hopefully demonstrates
its use. Note that it was written as a Service so it needs starting,
hence the strange delayed call to startService before the reactor is run.

Basically, the thing is a service that makes the normal getProcessOutput
and getProcessValue utilities available. However, the execution requests
are queued and the maximum number of processes allowed to run is limited.

Hope it helps.

- Matt
-------------- next part --------------
A non-text attachment was scrubbed...
Name: service.py
Type: text/x-python
Size: 1656 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070919/c3bd9ae0/attachment.py 

From andy at thecablelounge.com  Wed Sep 19 14:05:06 2007
From: andy at thecablelounge.com (Andy Gayton)
Date: Wed, 19 Sep 2007 11:05:06 -0700
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <46F164D2.7040901@thecablelounge.com>

Daniel de la Cuesta wrote:
> Hi,
> 
> I am developing a video conversion server. To process the video 
> conversion I use the method "getProcessOutput" to call "ffmpeg".
> 
> The user upload the video using a HTTP POST and each video must be 
> converted to 8 or 10 output formats.
> 
> Currently, all the conversions for each video are processed in parallel, 
> what I want to do is to control the number of parallel system calls to 
> "ffmpeg". For example I only want 2 processes at the same time and when 
> one of them finishes the next process start.
> 
> How can I do that?
> 
> Is there any function in Twisted that implements that?

Hey Daniel,

There's a semaphore convenience in twisted.internet.defer - which can be 
used to control the number of things which have concurrent access to .. 
something.

You could make that something your function which launches a system 
call, with something like:

     s = defer.DeferredSemaphore(2)
     dlist = [
         s.run(encodeToFormat, video, format)
             for format in formats]
     d = defer.gatherResults(dlist)
     return d

cheers,
Andy.






From general at eepatents.com  Wed Sep 19 14:50:38 2007
From: general at eepatents.com (Ed Suominen)
Date: Wed, 19 Sep 2007 11:50:38 -0700
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <20070919112023.GC13607@steerpike.home.puzzling.org>
References: <46F0F94E.5040104@iavante.es>
	<20070919112023.GC13607@steerpike.home.puzzling.org>
Message-ID: <46F16F7E.10303@eepatents.com>

Andrew Bennetts wrote:
> Daniel de la Cuesta wrote:
>> Hi,
>>
>> I am developing a video conversion server. To process the video conversion I
>> use the method "getProcessOutput" to call "ffmpeg".
>>
>> The user upload the video using a HTTP POST and each video must be converted to
>> 8 or 10 output formats.
>>
>> Currently, all the conversions for each video are processed in parallel, what I
>> want to do is to control the number of parallel system calls to "ffmpeg". For
>> example I only want 2 processes at the same time and when one of them finishes
>> the next process start.
>>
>> How can I do that?
>>
>> Is there any function in Twisted that implements that?
> 
> The obvious way to do that would be using a
> twisted.internet.defer.DeferredSemaphore.

Or http://foss.eepatents.com/AsynQueue ... :-)



From jml at mumak.net  Wed Sep 19 19:50:50 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 20 Sep 2007 09:50:50 +1000
Subject: [Twisted-Python] twisted.trial and test discovery
In-Reply-To: <368574aa0709190844xf9cb833y672c55a29f8e2285@mail.gmail.com>
References: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
	<d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>
	<368574aa0709190844xf9cb833y672c55a29f8e2285@mail.gmail.com>
Message-ID: <d06a5cd30709191650t478d9d75o68545c3ad747c84a@mail.gmail.com>

On 9/20/07, Drew Smathers <drew.smathers at gmail.com> wrote:
> > I'm not sure I understand. Trial already does test discovery. "trial
> > yourpackage" will find all the test cases in your package.
>
> Yes, I know.  It will not pick up doctests defined in plain text files
> (mymod.txt - like you see frequently in zope projects) or in doc
> strings from my experiments.  Of course, this is just me being lazy  -
> especially for doctests inside of modules where I can make a trivial
> test_doc module to collect these:
>
> from myproject import web, auth, i18n
> __doctests__ = [ web, auth, i18n ]
>

In this case, Trial follows the principle that "explicit is better
than implicit". Rather than treating every random snippet of text as a
potential doctest, it's reasonable that documents have be *declared*
as executable.

If you want to do something a little more automated than assigning
things to __doctest__, Trial lets you hook into the test discovery
system by defining a 'test_suite' method in your module. This allows
you to customize your test discovery for your project.

jml



From wthie at thiengineering.ch  Thu Sep 20 07:39:58 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 20 Sep 2007 13:39:58 +0200
Subject: [Twisted-Python] 2006, 'MySQL server has gone away' 
Message-ID: <46F25C0E.90101@thiengineering.ch>

Hi all

While using mySQL V 5.0.33 and MySQL-python-1.2.2 with twisted/adbapi 
with the following connection params

DB_DRIVER = "MySQLdb"
DB_ARGS = {
     'host': 'xxx.xxx.xxx.xxx',
     'db': 'db',
     'user': 'dbuser',
     'passwd': 'dbpasswd'
     }

I noticed (2006, 'MySQL server has gone away') errors, which seem to be 
not recoverable from an adbapi standpoint.

Further analysis and reading the mySQL manual showed, that the mySQL 
server in versions > 5 seems to close open connections after (default) 8 
hours. The reconnect feature of the db is disabled by default and there 
is no parameter to preset it via MySQL-python.

Further digging brought up this link

http://sourceforge.net/tracker/index.php?func=detail&aid=1483074&group_id=22307&atid=374934

which patches the (also 1.2.2) version such, that a reconnect keyword is 
introduced in the DB_ARGS.

Questions:
- are there any adverse effects in applying this patch and setting 
reconnect: 1 in DB_ARGS?

- is there a better, safer way to avoid this nasty error?

Thxs, Werner



From exarkun at divmod.com  Thu Sep 20 08:11:06 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Sep 2007 08:11:06 -0400
Subject: [Twisted-Python] Who's using Gtk reactor? (Gtk 1.x reactor)
In-Reply-To: <1190035402.28172.9.camel@localhost.localdomain>
Message-ID: <20070920121106.8162.950096718.divmod.quotient.11833@ohm>

On Mon, 17 Sep 2007 09:23:22 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Sun, 2007-09-16 at 11:25 -0400, Jean-Paul Calderone wrote:
>> Greetings,
>>
>> As part of the work I've been doing to fix a bug in epoll reactor's handling
>> of "unclean" tcp disconnection (the case which gives ConnectionLost instead
>> of ConnectionDone), I've noticed that gtk reactor also doesn't handle this
>> case correctly.
>
>Just to clarify, JP is talking about the reactor for the long
>unmaintained Gtk 1.x library, last released in 2001. Modern Gtk and
>Gnome programs use Gtk 2.x for which Twisted provides the gtk2 and glib2
>reactors.
>

Thanks for that clarification.  Since there's been no response thus far, I've
created a ticket to deprecate the reactor - #2833.  This will probably happen
before Twisted 2.6.  Any other discussion should probably be directed at that
ticket.

Jean-Paul



From m.hubbard at imperial.ac.uk  Thu Sep 20 09:08:54 2007
From: m.hubbard at imperial.ac.uk (Matt Hubbard)
Date: Thu, 20 Sep 2007 14:08:54 +0100
Subject: [Twisted-Python] Web Proxy that does something different once
	a day
In-Reply-To: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
Message-ID: <46F270E6.2040209@imperial.ac.uk>

Fred Trotter wrote:
> Hello,
>          I am new to python and I am potentially interested in writing
> a new protocol with Twisted.  However I wanted to start with a simpler
> problem that I have been working on, so that I can understand better
> how twisted works.
> 
>         A particular client wants to enforce a home page for the first
> internet connection each day. They have a intranet portal that gives
> messages to employees and they want to be sure that each employee, no
> matter how they have their homepage set, will see the messages the
> first time they connect. After the first connection they want the
> proxy to simply forward requests to the internet without filtering.
> 
>         Since I need to understand this issue for my other project
> too, how do I get the python loop do one thing based on a "new day"
> for an IP address and then do something else after that action has
> been completed. Example code that addresses my problem would be great,
> but I would be happy to have links to examples that do this...

Fred,

To effectively achieve what you've outlined is really quite involved, and the answer to your question is heavily tied to the implementation.

You will be controlling access by clients to the internet. You will make that decision based essentially three factors:
- Client IP Address making access request.
- When the client IP address last accessed what version of the Required Reading.
- What is the current version of the Required Reading / when did it renew.

In order to provide some example code, the frame work of the implementation needs to be known.

Cheers,
Matt.



From phil at bubblehouse.org  Thu Sep 20 10:01:17 2007
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 20 Sep 2007 10:01:17 -0400
Subject: [Twisted-Python] 2006, 'MySQL server has gone away' 
In-Reply-To: <46F25C0E.90101@thiengineering.ch>
References: <46F25C0E.90101@thiengineering.ch>
Message-ID: <0E0A5677-408F-4A77-A257-C543FF70C6B0@bubblehouse.org>

On Sep 20, 2007, at 7:39 AM, Werner Thie wrote:

> Hi all
>
> While using mySQL V 5.0.33 and MySQL-python-1.2.2 with twisted/ 
> adbapi with the following connection params
[snip snip snip]
> I noticed (2006, 'MySQL server has gone away') errors, which seem  
> to be not recoverable from an adbapi standpoint.
[snip snip snip]
> Questions:
> - are there any adverse effects in applying this patch and setting  
> reconnect: 1 in DB_ARGS?
>
> - is there a better, safer way to avoid this nasty error?
>
> Thxs, Werner

I believe this is what the 'cp_reconnect' keyword argument to the  
ConnectionPool constructor does.

I'm currently using this feature with MySQL 5 in a long-running  
webapp, with much success.

-phil



From Geraldjohn.M.Manipon at jpl.nasa.gov  Thu Sep 20 12:14:11 2007
From: Geraldjohn.M.Manipon at jpl.nasa.gov (Gerald John M. Manipon)
Date: Thu, 20 Sep 2007 09:14:11 -0700
Subject: [Twisted-Python] Can a deferred catch a segmentation fault?
Message-ID: <46F29C53.1050406@jpl.nasa.gov>

Hi,

I'm using deferToThread to run some python code which may or may not
be safe.  In particular, the code may load some modules that could
seg fault.  In this case, deferToThread won't work and the python
process will bomb so I was wondering what Defer strategy I could
use to handle this situation:

from twisted.internet import threads, reactor

def segFaultFunc():
     import binning #this will seg fault
     return True

def myCb(res):
     print "Got", res
     reactor.stop()

d = threads.deferToThread(segFaultFunc)
d.addCallback(myCb)

reactor.run()

Any help on this is greatly appreciated.

Thanks,

Gerald




From exarkun at divmod.com  Thu Sep 20 12:28:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Sep 2007 12:28:31 -0400
Subject: [Twisted-Python] Can a deferred catch a segmentation fault?
In-Reply-To: <46F29C53.1050406@jpl.nasa.gov>
Message-ID: <20070920162831.8162.422442884.divmod.quotient.11901@ohm>

On Thu, 20 Sep 2007 09:14:11 -0700, "Gerald John M. Manipon" <geraldjohn.m.manipon at jpl.nasa.gov> wrote:
>Hi,
>
>I'm using deferToThread to run some python code which may or may not
>be safe.  In particular, the code may load some modules that could
>seg fault.  In this case, deferToThread won't work and the python
>process will bomb so I was wondering what Defer strategy I could
>use to handle this situation:

Deferreds don't do anything which will directly help in this situation.
If your process receives a signal for which the action is to exit, then
it will exit.  If you want, you can change the action associated with
certain signals (even SIGSEGV).  What action you *do* cause to happen
in such a case is independent of Deferreds.  You could, conceivably,
turn a segfault into an exception and then errback a Deferred.  However,
I wouldn't actually recommend this.  I would recommend not using software
which segfaults, fixing segfault bugs you find in software you are
using, and having comprehensive unit tests so that if something is
going to segfault, it does so during the course of development, not
on whatever server or client machines your software is deployed to.

Jean-Paul



From andreas at kostyrka.org  Thu Sep 20 13:50:44 2007
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Thu, 20 Sep 2007 19:50:44 +0200
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation fault ?
Message-ID: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>

Setting up such signal handler wouldn't be trivial (as in unsafe). The "normal" thing in such a situation is to longjmp (in C) or to let the process to die (which is the safe thing to do),

Now presuming that you cannot fix the segfaults (which as sad it sounds is quite common when using commercial 3rd party DLLs. Practice shows that being even a huge customer often get a quick turn around on bugs especially if its a hard to reproduce random crash. Driver DLLs for hardware costing $10K upwards come to mind, *shudder*), your only safe way is to isolate the driver usage into a seperate process. (If you are unlucky not even that is enough because some hardware gets stuck in a state that needs manual cold reseting, but let's be optimistic here).

With a seperate process, you can restart it should it die.

Andreas  

-- Urspr?ngl. Mitteil. --
Betreff:	Re: [Twisted-Python] Can a deferred catch a segmentation fault?
Von:	Jean-Paul Calderone <exarkun at divmod.com>
Datum:		20.09.2007 16:34

On Thu, 20 Sep 2007 09:14:11 -0700, "Gerald John M. Manipon" <geraldjohn.m.manipon at jpl.nasa.gov> wrote:
>Hi,
>
>I'm using deferToThread to run some python code which may or may not
>be safe.  In particular, the code may load some modules that could
>seg fault.  In this case, deferToThread won't work and the python
>process will bomb so I was wondering what Defer strategy I could
>use to handle this situation:

Deferreds don't do anything which will directly help in this situation.
If your process receives a signal for which the action is to exit, then
it will exit.  If you want, you can change the action associated with
certain signals (even SIGSEGV).  What action you *do* cause to happen
in such a case is independent of Deferreds.  You could, conceivably,
turn a segfault into an exception and then errback a Deferred.  However,
I wouldn't actually recommend this.  I would recommend not using software
which segfaults, fixing segfault bugs you find in software you are
using, and having comprehensive unit tests so that if something is
going to segfault, it does so during the course of development, not
on whatever server or client machines your software is deployed to.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From general at eepatents.com  Thu Sep 20 14:26:05 2007
From: general at eepatents.com (Ed Suominen)
Date: Thu, 20 Sep 2007 11:26:05 -0700
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation
	fault ?
In-Reply-To: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
References: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
Message-ID: <46F2BB3D.3070008@eepatents.com>

Here I go again touting my AsynQueue package. Sorry, but it just seems
to be a very appropriate solution to many of the problems being raised
recently.

I've recently added a "processworker" module that does just what it
sounds like. You can now queue up jobs to be run on a separate Python
interpreter. If the interpreter crashes due to a segfault or anything
else, you just construct a new worker instance and attach it to the
queue, and the jobs continue merrily along.

In addition to deferred-based priority queuing, the queue object has
powerful capabilities for hiring and firing workers, letting workers
resign when they can't perform their duties any more, assigning tasks to
appropriate workers, and re-assigning tasks from terminated workers.

See http://tinyurl.com/349k2o
(http://foss.eepatents.com/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py)

By the way, AsynQueue (without the new processworker stuff) is now
available in Debian testing, thanks to efforts of Eric Evans. Just
apt-get install python-asynqueue.

Best regards, Ed




From Geraldjohn.M.Manipon at jpl.nasa.gov  Thu Sep 20 15:30:09 2007
From: Geraldjohn.M.Manipon at jpl.nasa.gov (Gerald John M. Manipon)
Date: Thu, 20 Sep 2007 12:30:09 -0700
Subject: [Twisted-Python] Re: Can a deferred catch a segmentation fault?
In-Reply-To: <46F29C53.1050406@jpl.nasa.gov>
References: <46F29C53.1050406@jpl.nasa.gov>
Message-ID: <46F2CA41.4020907@jpl.nasa.gov>

Thanks for the responses.

Ed, AsynQueue is exactly what I'm looking for!  Is it possible
for me to test it out?

Gerald

Gerald John M. Manipon wrote:
> Hi,
> 
> I'm using deferToThread to run some python code which may or may not
> be safe.  In particular, the code may load some modules that could
> seg fault.  In this case, deferToThread won't work and the python
> process will bomb so I was wondering what Defer strategy I could
> use to handle this situation:
> 
> from twisted.internet import threads, reactor
> 
> def segFaultFunc():
>     import binning #this will seg fault
>     return True
> 
> def myCb(res):
>     print "Got", res
>     reactor.stop()
> 
> d = threads.deferToThread(segFaultFunc)
> d.addCallback(myCb)
> 
> reactor.run()
> 
> Any help on this is greatly appreciated.
> 
> Thanks,
> 
> Gerald
> 
> 



From stefan.arentz at gmail.com  Thu Sep 20 16:19:29 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Thu, 20 Sep 2007 22:19:29 +0200
Subject: [Twisted-Python] Twisted Server and Objective-C Client
Message-ID: <adf34c300709201319s245c00ecr290d46052e00f134@mail.gmail.com>

I need to let Objective-C (OS X / Cocoa) clients speak to a Twisted
server. The protocol needs to be a pretty simple request/response
style protocol on a persistent TCP connection. Possible over SSL.

Before I start inventing a wheel, does anyone know if there is
something simple available already? Would the Perspective Broker be a
good start? I haven't looked at the internals but maybe it is not too
difficult to create a non-python client for it?

Just thinking out loud :)

 S.



From p.mayers at imperial.ac.uk  Fri Sep 21 05:24:48 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Sep 2007 10:24:48 +0100
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation
	fault ?
In-Reply-To: <46F2BB3D.3070008@eepatents.com>
References: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
	<46F2BB3D.3070008@eepatents.com>
Message-ID: <1190366689.3453.4.camel@localhost.localdomain>

On Thu, 2007-09-20 at 11:26 -0700, Ed Suominen wrote:
> Here I go again touting my AsynQueue package. Sorry, but it just seems
> to be a very appropriate solution to many of the problems being raised
> recently.

Well, to be fair it's an excellent bit of code.

> 
> I've recently added a "processworker" module that does just what it
> sounds like. You can now queue up jobs to be run on a separate Python
> interpreter. If the interpreter crashes due to a segfault or anything
> else, you just construct a new worker instance and attach it to the
> queue, and the jobs continue merrily along.

Interesting. I see for the process worker jobs you pass in a python
string. One of the conceptual difficulties I've always had with creating
a farm of subprocesses is ensuring the module import status would be
valid, so that you could pass a function and class instances across the
pickle boundary (or whatever)

Did you consider this approach?

> 
> In addition to deferred-based priority queuing, the queue object has
> powerful capabilities for hiring and firing workers, letting workers
> resign when they can't perform their duties any more, assigning tasks to
> appropriate workers, and re-assigning tasks from terminated workers.
> 
> See http://tinyurl.com/349k2o
> (http://foss.eepatents.com/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py)
> 
> By the way, AsynQueue (without the new processworker stuff) is now
> available in Debian testing, thanks to efforts of Eric Evans. Just
> apt-get install python-asynqueue.
> 
> Best regards, Ed
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From p.mayers at imperial.ac.uk  Fri Sep 21 05:29:25 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Sep 2007 10:29:25 +0100
Subject: [Twisted-Python] Twisted Server and Objective-C Client
In-Reply-To: <adf34c300709201319s245c00ecr290d46052e00f134@mail.gmail.com>
References: <adf34c300709201319s245c00ecr290d46052e00f134@mail.gmail.com>
Message-ID: <1190366965.3453.10.camel@localhost.localdomain>

On Thu, 2007-09-20 at 22:19 +0200, Stefan Arentz wrote:
> I need to let Objective-C (OS X / Cocoa) clients speak to a Twisted
> server. The protocol needs to be a pretty simple request/response
> style protocol on a persistent TCP connection. Possible over SSL.
> 
> Before I start inventing a wheel, does anyone know if there is
> something simple available already? Would the Perspective Broker be a
> good start? I haven't looked at the internals but maybe it is not too
> difficult to create a non-python client for it?
> 

This is sort of an FAQ.

The PB wire protocol assumes full asynchronous and symmetry; either side
of the connection can issue any callRemote at any time. The responses
may take milliseconds, minutes or days to come back.

Effectively, the PB wire protocol *is* deferreds. If your client-side
environment can support that, then it'll work. If (as seems likely) it
can't, then it won't.

If you only need simple RPC-like semantics (no callbacks from server to
client) with simple objects (strings, ints, list, dicts) XMLRPC is an
option.

Or, you could run a Twisted reactor in a thread on the client side, and
call from the main/gui thread into Twisted, let it do the PB and call
you back when it's done.

Or you could write the client in Python ;o)






From fred.trotter at gmail.com  Fri Sep 21 10:46:09 2007
From: fred.trotter at gmail.com (Fred Trotter)
Date: Fri, 21 Sep 2007 10:46:09 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a
	day
In-Reply-To: <46F270E6.2040209@imperial.ac.uk>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
	<46F270E6.2040209@imperial.ac.uk>
Message-ID: <b317600c0709210746w5a885740tb8db702532523a81@mail.gmail.com>

Matt
       thanks for replying. Obviously I am interested in using Python
and Twisted for this. But otherwise I have no implementation
requirements. As for your summary of what I wanted...

        * Yes, we would have to track per IP address.
        * Yes, we would have to track when an IP last accessed the
required reading..
        * No we do not need to worry about what "version" they read of
the required reading. So the required reading is just a website whose
content can change without worrying about this application.
        * We want them to go the "homepage" for more than just
required reading. These are low level information workers who need the
links on the home page to do their jobs, but might still set their
personal homepage to yahoo. Since they tend to waste time at yahoo,
but tend to work at the websites linked from my "required reading"
forcing them to go there to start the day is a gentle reminder that
they need to work. So the point of the process is not to enforce the
required reading, but to enforce a "start-the-work-day homepage" for
the computers on the network.

Which means the problem is only about half as complex!!

-FT





>
> Fred,
>
> To effectively achieve what you've outlined is really quite involved, and the answer to your question is heavily tied to the implementation.
>
> You will be controlling access by clients to the internet. You will make that decision based essentially three factors:
> - Client IP Address making access request.
> - When the client IP address last accessed what version of the Required Reading.
> - What is the current version of the Required Reading / when did it renew.
>
> In order to provide some example code, the frame work of the implementation needs to be known.
>
> Cheers,
> Matt.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Fred Trotter
http://www.fredtrotter.com



From george at ringdevelopment.com  Fri Sep 21 14:52:31 2007
From: george at ringdevelopment.com (George Pauly)
Date: Fri, 21 Sep 2007 14:52:31 -0400
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation
	fault ?
In-Reply-To: <1190366689.3453.4.camel@localhost.localdomain>
References: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
	<46F2BB3D.3070008@eepatents.com>
	<1190366689.3453.4.camel@localhost.localdomain>
Message-ID: <1190400751.2602.51.camel@localhost.localdomain>

On Fri, 2007-09-21 at 10:24 +0100, Phil Mayers wrote:
> On Thu, 2007-09-20 at 11:26 -0700, Ed Suominen wrote:
> > Here I go again touting my AsynQueue package. Sorry, but it just seems
> > to be a very appropriate solution to many of the problems being raised
> > recently.
> 
> Well, to be fair it's an excellent bit of code.
> 
> > 
> > I've recently added a "processworker" module that does just what it
> > sounds like. You can now queue up jobs to be run on a separate Python
> > interpreter. If the interpreter crashes due to a segfault or anything
> > else, you just construct a new worker instance and attach it to the
> > queue, and the jobs continue merrily along.
> 
> Interesting. I see for the process worker jobs you pass in a python
> string. One of the conceptual difficulties I've always had with creating
> a farm of subprocesses is ensuring the module import status would be
> valid, so that you could pass a function and class instances across the
> pickle boundary (or whatever)
> 
> Did you consider this approach?
> 
> > 
> > In addition to deferred-based priority queuing, the queue object has
> > powerful capabilities for hiring and firing workers, letting workers
> > resign when they can't perform their duties any more, assigning tasks to
> > appropriate workers, and re-assigning tasks from terminated workers.
> > 
> > See http://tinyurl.com/349k2o
> > (http://foss.eepatents.com/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py)
> > 
> > By the way, AsynQueue (without the new processworker stuff) is now
> > available in Debian testing, thanks to efforts of Eric Evans. Just
> > apt-get install python-asynqueue.
> > 
> > Best regards, Ed
> > 
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From sam at spinwardstars.com  Fri Sep 21 15:45:09 2007
From: sam at spinwardstars.com (Samuel Reynolds)
Date: Fri, 21 Sep 2007 13:45:09 -0600
Subject: [Twisted-Python] Web Proxy that does something different
	once a day
In-Reply-To: <37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.co
 m>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
	<37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.com>
Message-ID: <mailman.0.1246826542.728.twisted-python@twistedmatrix.com>


>Hoping someone else chimes in with how to stick a redirect into a proxy,

Nothing to do with Twisted, per se.
A proxy is a two-way conduit:
1. Receive a request from A
2. Massage and/or log the request as necessary
3. Make a request to B.
4. Receive the response from B.
5. Massage and/or log the response as necessary
6. Return the response to A.

It looks like this is just for the web browsers
(i.e., HTTP protocol). If so, then at step 2
you would make your test. If you decide A should
go to the "required reading" URL instead of the
requested URL, simply skip steps 3-5 and return
a valid HTTP document with a "moved temporarily"
code (30x, I think). The browser will then request
the other URL. The one catch is that, depending on
the browser, the user may get the same page if they
request the original URL again in the same browser
window/session. If that's the case, they would need
to open a new window to get to the original URL.

- Sam 





From fred.trotter at gmail.com  Fri Sep 21 16:34:35 2007
From: fred.trotter at gmail.com (Fred Trotter)
Date: Fri, 21 Sep 2007 16:34:35 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a
	day
In-Reply-To: <E1IYoYP-00027u-Um@cube.twistedmatrix.com>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
	<37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.com>
	<E1IYoYP-00027u-Um@cube.twistedmatrix.com>
Message-ID: <b317600c0709211334sc1d79dfh4426397c324f6e31@mail.gmail.com>

> It looks like this is just for the web browsers
> (i.e., HTTP protocol). If so, then at step 2
> you would make your test. If you decide A should
> go to the "required reading" URL instead of the
> requested URL, simply skip steps 3-5 and return
> a valid HTTP document with a "moved temporarily"
> code (30x, I think). The browser will then request
> the other URL. The one catch is that, depending on
> the browser, the user may get the same page if they
> request the original URL again in the same browser
> window/session. If that's the case, they would need
> to open a new window to get to the original URL.

That sounds reasonable and good. Any clue how you would implement that
in Twisted?

-FT

-- 
Fred Trotter
http://www.fredtrotter.com



From exarkun at twistedmatrix.com  Sun Sep 23 00:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Sep 2007 04:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1190520304.11.259766035@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-16 through 2007-09-23
Bugs opened: 3    Bugs closed: 5  Total open bugs: 1035 (-2)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:  -2       |Highest:  -3          |Conch:  -2             
|Task:    +0       |Normal:   +1          |Core:   +1             
                                          |Words:  -1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2835] _pollingfile calls pauseProducing on registered Pull producers (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2835

                    ===== Normal =====
[#2833] deprecate twisted.internet.gtkreactor (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2833

[#2834] Logging should deal nicely with problems logging Failures (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2834



Closed Bugs
______________________
                    ===== Highest =====
[#1884] Document adjustment to review policy (opened by exarkun, closed by exarkun, invalid)
    task            core       http://twistedmatrix.com/trac/ticket/1884

[#2099] manhole telnet server broken (opened by exarkun, closed by exarkun, invalid)
    defect          conch      http://twistedmatrix.com/trac/ticket/2099

[#1967] twisted.conch.telnet dies in conjunction with PuTTY (opened by sam, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/1967

[#2809] 99.9% cpu load when using the epoll reactor (opened by mvw, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2809

                    ===== Normal =====
[#2828] xmlstream.IQ shouldn't create timeout deferreds for every IQ (opened by jack, closed by ralphm, invalid)
    defect          words      http://twistedmatrix.com/trac/ticket/2828



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2835] _pollingfile calls pauseProducing on registered Pull producers (since 2007-09-22 00:36:54).

Mean open ticket age: 524 days, 9:14:54.799999.
Median: 422 days, 23:27:03.859903.
Standard deviation: 401 days, 17:45:04.268446.
Interquartile range: 503 days, 18:33:50.

Mean time between ticket creation and ticket resolution: 121 days, 7:14:56.715258.
Median: 14 days, 10:59:04.
Standard deviation is 224 days, 16:56:44.223591.
The interquartile range is 127 days, 8:25:41.

Mean time spent in review: 65 days, 4:49:15.983357.
Median: 4 days, 5:45:01.
Standard deviation: 143 days, 15:51:23.365689.
Interquartile range: 29 days, 10:44:36.

Mean number of times a ticket is reviewed: 1.94600938967.
Median: 1
Standard deviation: 1.58466700636.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    16 unique ticket reporters
    5 unique ticket reviewers
    3 unique ticket resolvers
In the last 24 weeks,
    78 unique ticket reporters
    14 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    155 unique ticket reporters
    19 unique ticket reviewers
    26 unique ticket resolvers




From a.poisel at acat.cc  Tue Sep 25 14:27:06 2007
From: a.poisel at acat.cc (Andreas Poisel)
Date: Tue, 25 Sep 2007 20:27:06 +0200
Subject: [Twisted-Python] waiting for data before shutdown
Message-ID: <20070925182706.GT25667@trude>

Hi!

My client is supposed to wait for two seconds to receive data when a
shutdown event is triggered.  In buildProtocol() the trigger is added:

    self.sdt= reactor.addSystemEventTrigger('before', 'shutdown', protocol.shutdown)

The method shutdown() is supposed to wait for 2 seconds before closing
the connection:

    def shutdown(self):
        self.doSomeCleanup() # works
        self.sendSomeData()  # works
        d= defer.Deferred()
        reactor.callLater(2.0, d.callback, None)
        return d

The shutdown() method gets called, cleanup and sending of data work as
expected.  But the connection is closed by my client _before_ the two
seconds are over.  Isn't the shutdown process supposed to be halted
until the deferred returned by shutdown() is fired?

Thank you!
-- 
Bye, Andreas



From sroberts at uniserve.com  Tue Sep 25 15:45:07 2007
From: sroberts at uniserve.com (Sam Roberts)
Date: Tue, 25 Sep 2007 12:45:07 -0700
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
Message-ID: <20070925194507.GB10184@sam-desktop>


I have unittests where each test:

  def test_this
     .. setup
     reactor.run() # ... when test is done reactor.stop() will be called

  def test_that
     .. same as above


does some setup, runs the reactor until test is complete, then stops the
reactor, asserting all went as intended.

However, second call to reactor.stop() doesn't stop the reactor. strace
shows reactor going back into select(), blocking forever, but killable
with sigquit.

Is this really intentional?

Example code and testrun follow.

~/w/engine % python t_reactor_stop.py
2.5.1 (r251:54863, May  2 2007, 16:27:44)
[GCC 4.1.2 (Ubuntu 4.1.2-0ubuntu4)]
[twisted, version 2.5.0]
<twisted.internet.selectreactor.SelectReactor object at 0x2b684344a310>
stopping reactor running? 1
reactor stopped
stopping reactor running? 1
zsh: quit (core dumped)  python t_reactor_stop.py



~/w/engine % cat t_reactor_stop.py
import sys

print sys.version

from twisted.internet import reactor

import twisted

print twisted._version.version
print reactor

def stop_reactor():
    print "stopping reactor running? " + repr(reactor.running)
    try:
        reactor.stop()
    except:
        print "stop died!"

reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
# Unreachable, why?
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"





From exarkun at divmod.com  Tue Sep 25 15:51:24 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 25 Sep 2007 15:51:24 -0400
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <20070925194507.GB10184@sam-desktop>
Message-ID: <20070925195124.8162.2048368291.divmod.quotient.14053@ohm>

On Tue, 25 Sep 2007 12:45:07 -0700, Sam Roberts <sroberts at uniserve.com> wrote:
>
>I have unittests where each test:
>
>  def test_this
>     .. setup
>     reactor.run() # ... when test is done reactor.stop() will be called
>
>  def test_that
>     .. same as above
>
>
>does some setup, runs the reactor until test is complete, then stops the
>reactor, asserting all went as intended.

None of the reactors implemented in Twisted are restartable.  You can call
each of start and stop at most once.

If you are writing unit tests which require the reactor to run, then you
can either use trial and twisted.trial.unittest.TestCase or you can write
tests which cover smaller units of functionality (and hence do not require
the reactor to be running).  I'd suggest the latter as better general unit
testing practice.

Jean-Paul



From bhenry at pacecocorp.com  Tue Sep 25 15:52:35 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Tue, 25 Sep 2007 15:52:35 -0400
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <20070925194507.GB10184@sam-desktop>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>

This response won't be as elegant as some, but you can't start the
reactor twice in the same process.  You can stop the reactor when the
service is ended (client or server), but with twistd, it starts and
stops itself.  

So, is it necessary that you start and stop the reactor to run the tests
in your code?  Why not make each test a callback?

Ben Henry
-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Sam
Roberts
Sent: Tuesday, September 25, 2007 12:45 PM
To: twisted
Subject: [Twisted-Python] reactor.stop() doesn't stop the select
reactor?


I have unittests where each test:

  def test_this
     .. setup
     reactor.run() # ... when test is done reactor.stop() will be called

  def test_that
     .. same as above


does some setup, runs the reactor until test is complete, then stops the
reactor, asserting all went as intended.

However, second call to reactor.stop() doesn't stop the reactor. strace
shows reactor going back into select(), blocking forever, but killable
with sigquit.

Is this really intentional?

Example code and testrun follow.

~/w/engine % python t_reactor_stop.py
2.5.1 (r251:54863, May  2 2007, 16:27:44)
[GCC 4.1.2 (Ubuntu 4.1.2-0ubuntu4)]
[twisted, version 2.5.0]
<twisted.internet.selectreactor.SelectReactor object at 0x2b684344a310>
stopping reactor running? 1
reactor stopped
stopping reactor running? 1
zsh: quit (core dumped)  python t_reactor_stop.py



~/w/engine % cat t_reactor_stop.py
import sys

print sys.version

from twisted.internet import reactor

import twisted

print twisted._version.version
print reactor

def stop_reactor():
    print "stopping reactor running? " + repr(reactor.running)
    try:
        reactor.stop()
    except:
        print "stop died!"

reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
# Unreachable, why?
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From sroberts at uniserve.com  Tue Sep 25 17:11:47 2007
From: sroberts at uniserve.com (Sam Roberts)
Date: Tue, 25 Sep 2007 14:11:47 -0700
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>
	<20070925195124.8162.2048368291.divmod.quotient.14053@ohm>
References: <20070925194507.GB10184@sam-desktop>
	<F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>
	<20070925194507.GB10184@sam-desktop>
	<20070925195124.8162.2048368291.divmod.quotient.14053@ohm>
Message-ID: <20070925211147.GA10331@sam-desktop>

Thank you both for your prompt help.

On Tue, Sep 25, 2007 at 03:51:24PM -0400, Jean-Paul Calderone wrote:
> On Tue, 25 Sep 2007 12:45:07 -0700, Sam Roberts <sroberts at uniserve.com> 
> None of the reactors implemented in Twisted are restartable.  You can call
> each of start and stop at most once.

Ok. Sorry to gripe, but it would have saved me some time had this rather
significant and non-obvious limitation been mentioned in the docs.

> If you are writing unit tests which require the reactor to run, then you
> can either use trial and twisted.trial.unittest.TestCase or you can write

Can you point me to any examples of using trial? The api is fairly
opaque, I'm baffled as to where to start, though the description sounds
like it was built to help with this problem.

> tests which cover smaller units of functionality (and hence do not require
> the reactor to be running).  I'd suggest the latter as better general unit
> testing practice.

I have unittests for the low-level code.  The purpose of these unit
tests is explicitly to ensure my implementation of the IWriteDescriptor
interfaces correctly interworks with the reactor.

For example, implementors of the IWriteDescriptor interface are required
to implement logPrefix(). This is not documented, and I am happy to have
discovered it now in my unit tests, rather than during later system tests
with the entire application.

On Tue, Sep 25, 2007 at 03:52:35PM -0400, Benjamin Henry wrote:
> So, is it necessary that you start and stop the reactor to run the tests
> in your code?  Why not make each test a callback?

No, not necessary. I am manually chaining my tests together as you
suggest.

It works OK, but from unittest's perspective, I now have only one
testcase, with everything bundled into a single reactor.run(). There are
some nice things about having multiple tests inside a unittest.TestCase,
such as not having every test that uses the reactor coupled together,
but I can do without this niceties.

Cheers,
Sam




From sroberts at uniserve.com  Tue Sep 25 17:24:13 2007
From: sroberts at uniserve.com (Sam Roberts)
Date: Tue, 25 Sep 2007 14:24:13 -0700
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <20070925211147.GA10331@sam-desktop>
References: <20070925194507.GB10184@sam-desktop>
	<F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>
	<20070925194507.GB10184@sam-desktop>
	<20070925195124.8162.2048368291.divmod.quotient.14053@ohm>
	<20070925211147.GA10331@sam-desktop>
Message-ID: <20070925212413.GA10553@sam-desktop>

On Tue, Sep 25, 2007 at 02:11:47PM -0700, Sam Roberts wrote:
> > If you are writing unit tests which require the reactor to run, then you
> > can either use trial and twisted.trial.unittest.TestCase or you can write
> 
> Can you point me to any examples of using trial? The api is fairly
> opaque, I'm baffled as to where to start, though the description sounds
> like it was built to help with this problem.

Sorry, I was looking at

  http://twistedmatrix.com/documents/current/api/twisted.trial.html

but I just found

  http://twistedmatrix.com/trac/wiki/TwistedTrial

which has pointers to usage examples.

Sam




From paul at paulperez.net  Tue Sep 25 22:04:10 2007
From: paul at paulperez.net (Paul Perez)
Date: Tue, 25 Sep 2007 19:04:10 -0700
Subject: [Twisted-Python] tracebacks in twisted web2
Message-ID: <82767f010709251904w20c3af47j30a7cf3f540fd6bb@mail.gmail.com>

Dear List:

I am having a heck of a time trying to figure out why this traceback is
happening, and I was hoping that you could shed some light on the situation.
I am sorry for bothering you with this simple thing, but I can't seem to
figure it out!

The code and traceback are below. The traceback only happens when I call
httprequest.writeResponse(httpresponse) from a callback. When the same code
is called inline and not in a deferred, it works just fine. Even stranger is
that the response is written to the client even though the traceback occurs.


An explanation of what I am trying to do:

A consumer requests data. If there is data in the queue when the consumer
first checks, return the result right away. If there is no data present,
return a deferred and wait. When the producer inserts data into the queue,
check if there is a consumer waiting. If so, begin callback chain on
consumer.

The code works fine (no traceback) in the case where there is no deferred
needed (in QueueCache.maybedefer). When there is a deferred, the traceback
happens during the callback (in QueueCache.put). Again, the consumer
actually gets the correct result, but the traceback still occurs!

Any ideas?

Thanks in advance!

~P


from twisted.internet import reactor, defer
from twisted.web2     import http, responsecode
import Queue

TIMEOUT = 10

def respond(result, httprequest):
    httpresponse = http.Response(responsecode.OK, {}, stream=result)
    httprequest.writeResponse(httpresponse)

class QueueCache(object):
    def __init__(self):
        self.queue = {}
        self.defer = {}

    def get_data(self, xSig):
        return self.get_queue(xSig).get_nowait()

    def push_data(self, xSig, value):
        self.get_queue(xSig).put(value)

    def get_queue(self, xSig):
        try:
            return self.queue[xSig]
        except KeyError:
            q = Queue.Queue()
            self.queue[xSig] = q
            return q

    def defer_request(self, xSig, httprequest):
        if self.defer.has_key(xSig):
            raise Exception("Client %s already has a deferred request!"
%(xSig))

        def timeout(deferred, request):
            xSig = request.args['X-Signature'][0]
            try:
                self.defer.pop(xSig)
            except KeyError:
                print 'Timeout called and xSig `%s` was not in cache!' %
xSig
            respond('ACK',request)

        d = defer.Deferred()
        d.addCallback(respond, httprequest)
        d.setTimeout(TIMEOUT, timeout, httprequest)
        self.defer[xSig] = d
        return d

    def put(self, data):
        xSig = data['X-Signature']
        try:
            d = self.defer.pop(xSig)
            d.callback(data['message'])
        except KeyError:
            self.push_data(xSig,data)

    def maybedefer(self, httprequest):
        xSig = httprequest.args['X-Signature'][0]
        try:
            data = self.get_data(xSig)
            result = http.Response(
                responsecode.OK,
                {},
                stream=data['message']
                )
        except Queue.Empty:
            result = self.defer_request(xSig, httprequest)
        return result

-----------------------------------------------------------------------------------------------------
2007-09-25 18:38:38-0700 [-] Original exception:
2007-09-25 18:38:38-0700 [-] Unhandled Error
        Traceback (most recent call last):
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 304,
in _startRunCallbacks

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 281,
in _continue

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 277,
in unpause

        --- <exception caught here> ---
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\web2\server.py", line 518, in
_cbFinishRender

        exceptions.TypeError: html is not a resource or a response

2007-09-25 18:38:39-0700 [-] Unhandled error in Deferred:
2007-09-25 18:38:39-0700 [-] Unhandled Error
        Traceback (most recent call last):
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\web2\server.py", line 476, in
_processingFailed

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 200,
in addErrback

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 182,
in addCallbacks

        --- <exception caught here> ---
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\web2\server.py", line 492, in
_processingReallyFailed

          File "C:\Python24\lib\site-packages\twisted\web2\http.py", line
446, in writeResponse
            self.chanRequest.writeHeaders(response.code, response.headers)
          File "C:\Projects\PyServer\twisted\web2\channel\http.py", line
431, in writeHeaders

          File "C:\Projects\PyServer\twisted\web2\channel\http.py", line
466, in _writeHeaders

        exceptions.AttributeError: 'HTTPChannelRequest' object has no
attribute 'transport'
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070925/0424e51c/attachment.htm 

From thoma.hauc at gmail.com  Thu Sep 27 06:25:02 2007
From: thoma.hauc at gmail.com (Steve MULLER)
Date: Thu, 27 Sep 2007 12:25:02 +0200
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
Message-ID: <a76b56f70709270325m3acb8232qba8638c42a1aa77c@mail.gmail.com>

Hello,

I discovered Python recently and even more recently the Twisted module.

I have a problem with the Twisted reactor and I would like to understand for
which reason my program freezes.

Here the code which should loop forever :

from twisted.internet import reactor
from twisted.internet import task

class reactorProb(object):
    def __init__(self):
        self.count = 5
        self._callback = task.LoopingCall(self.Heartbeat)
        self._callback.start(1, now = False)
    def Heartbeat(self):
        print "Top"
        self.count -= 1
        if (self.count == 0):
            print "Exit"
            self._callback.stop()
            del self._callback
            reactor.stop()

while (True):
    rp = reactorProb()
    print "Enter into reactor.run()"
    reactor.run()
    print "Leave from reactor.run()"


I got this:

Enter into reactor.run()
Top
Top
Top
Top
Top
Exit
Leave from reactor.run()
Enter into reactor.run()
Top
Top
Top
Top
Top
Exit

Thus I start first once the reactor, I stop it then I start again and it
freezes instead of stopping it the reactor.

Could somebody explain me it why?

Thank you in advance.

smu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070927/a47f9899/attachment.htm 

From exarkun at divmod.com  Thu Sep 27 06:45:54 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Sep 2007 06:45:54 -0400
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
In-Reply-To: <a76b56f70709270325m3acb8232qba8638c42a1aa77c@mail.gmail.com>
Message-ID: <20070927104554.8162.744876670.divmod.quotient.14812@ohm>

On Thu, 27 Sep 2007 12:25:02 +0200, Steve MULLER <thoma.hauc at gmail.com> wrote:
>Hello,
>
>I discovered Python recently and even more recently the Twisted module.
>
>I have a problem with the Twisted reactor and I would like to understand for
>which reason my program freezes.
>
> [snip]
>
>
>Thus I start first once the reactor, I stop it then I start again and it
>freezes instead of stopping it the reactor.
>
>Could somebody explain me it why?
>

None of the reactors implemented in Twisted are restartable.  You can call
each of start and stop at most once.

Jean-Paul



From schettino72 at gmail.com  Thu Sep 27 07:39:21 2007
From: schettino72 at gmail.com (Eduardo Schettino)
Date: Thu, 27 Sep 2007 17:09:21 +0530
Subject: [Twisted-Python] tests for web2/channel/http
Message-ID: <e24a65c90709270439m2c53e91cp50f498ab0e01abef@mail.gmail.com>

Hello all,

  I am trying to learn trial... I am looking for examples of trial
testing web2 code.

  I could not find tests for web2/channel/http.py
  They exist?

Regards,
  Eduardo



From exarkun at divmod.com  Thu Sep 27 07:57:04 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Sep 2007 07:57:04 -0400
Subject: [Twisted-Python] tests for web2/channel/http
In-Reply-To: <e24a65c90709270439m2c53e91cp50f498ab0e01abef@mail.gmail.com>
Message-ID: <20070927115704.8162.1242864394.divmod.quotient.14850@ohm>

On Thu, 27 Sep 2007 17:09:21 +0530, Eduardo Schettino <schettino72 at gmail.com> wrote:
>Hello all,
>
>  I am trying to learn trial... I am looking for examples of trial
>testing web2 code.
>
>  I could not find tests for web2/channel/http.py
>  They exist?

They seem to be in twisted/web2/test/test_http.py.  HTTPFactory is imported
from twisted.web2.channel.http into twisted.web2.channel, and then test_http
imports it from there.  Many of the web2 tests are end-to-end tests, rather
than unit tests: test_http mostly sets up connections, issues requests to them,
then checks the generated response.

Jean-Paul



From thoma.hauc at gmail.com  Thu Sep 27 08:37:53 2007
From: thoma.hauc at gmail.com (Steve MULLER)
Date: Thu, 27 Sep 2007 14:37:53 +0200
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
In-Reply-To: <20070927104554.8162.744876670.divmod.quotient.14812@ohm>
References: <a76b56f70709270325m3acb8232qba8638c42a1aa77c@mail.gmail.com>
	<20070927104554.8162.744876670.divmod.quotient.14812@ohm>
Message-ID: <a76b56f70709270537x431c0d95h31b40b444add0e89@mail.gmail.com>

2007/9/27, Jean-Paul Calderone <exarkun at divmod.com>:
>
> On Thu, 27 Sep 2007 12:25:02 +0200, Steve MULLER <thoma.hauc at gmail.com>
> wrote:
> >Hello,
> >
> >I discovered Python recently and even more recently the Twisted module.
> >
> >I have a problem with the Twisted reactor and I would like to understand
> for
> >which reason my program freezes.
> >
> > [snip]
> >
> >
> >Thus I start first once the reactor, I stop it then I start again and it
> >freezes instead of stopping it the reactor.
> >
> >Could somebody explain me it why?
> >
>
> None of the reactors implemented in Twisted are restartable.  You can call
> each of start and stop at most once.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Is there any other way to do so kind of job ?

smu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070927/c1966a53/attachment.htm 

From exarkun at divmod.com  Thu Sep 27 08:58:00 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Sep 2007 08:58:00 -0400
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
In-Reply-To: <a76b56f70709270537x431c0d95h31b40b444add0e89@mail.gmail.com>
Message-ID: <20070927125800.8162.2058440172.divmod.quotient.14879@ohm>

On Thu, 27 Sep 2007 14:37:53 +0200, Steve MULLER <thoma.hauc at gmail.com> wrote:
> [snip]
>
>Is there any other way to do so kind of job ?
>

The only interesting thing your example did was try to start the reactor
more than once.  There's no way to do that. ;)

If you want to do more than one thing, then just do more than one thing.
You don't need to stop the reactor until the entire program has completed
and you are ready for the process to exit.

If you're trying to figure out how to organize your code so that you can
do one thing after another thing has finished, then you should look at
Deferreds, since that is precisely what they are good for.  Your example
included a Deferred, in fact - LoopingCall.start() returns one which is
called back when the stop() method is called on that LoopingCall instance.

Jean-Paul



From Paul_S_Johnson at mnb.uscourts.gov  Thu Sep 27 16:00:14 2007
From: Paul_S_Johnson at mnb.uscourts.gov (Paul_S_Johnson at mnb.uscourts.gov)
Date: Thu, 27 Sep 2007 15:00:14 -0500
Subject: [Twisted-Python] How to switch users in SSH session.
In-Reply-To: <20070927125800.8162.2058440172.divmod.quotient.14879@ohm>
Message-ID: <OF805FD359.073506AB-ON86257363.006CD902-86257363.006DDACA@uscmail.uscourts.gov>

After much wrangling and a small miracle I have managed to write an object 
that fetches the output of three commands in the order given through an 
SSH connection. How come I cannot switch users? Some of the information I 
need can only be fetched through a root account and security is such that 
I cannot log in remotely from a root account but must switch once logged 
in from an account with less than root privileges.

Here's the line that instaniates my SSH object (also repeated at the end 
of my code):

myssh = SSH("my.host.com", "myusername", "mypasswd", ["id; su - root; 
myrootpasswd; id", "pwd", "ls -l"])

The last argument above is a  list of three commands. Inside one command 
";" separates the piece parts.
I am not even able to su to accounts that don't require a password.

###========= CODE STARTS ================###
from twisted.conch import error
from twisted.conch.ssh import transport, connection, keys, userauth, 
channel, common
from twisted.internet import defer, protocol, reactor
import sys, getpass, os, string

class ClientCommandTransport(transport.SSHClientTransport):
    def __init__(self, username, password, cmds, caller):
        self.username = username
        self.password = password
        self.cmds = cmds
        self.caller = caller
 
    def verifyHostKey(self, pubKey, fingerprint):
        # in a real app, you should verify that the fingerprint matches
        # the one you expected to get from this server
        return defer.succeed(True)

    def connectionSecure(self):
        self.requestService(PasswordAuth(self.username, self.password, 
ClientConnection(self.cmds, self.caller)))

class PasswordAuth(userauth.SSHUserAuthClient):
    def __init__(self, user, password, connection):
        userauth.SSHUserAuthClient.__init__(self, user, connection)
        self.password = password
 
    def getPassword(self, prompt=None):
        return defer.succeed(self.password)

class ClientConnection(connection.SSHConnection):
    def __init__(self, cmds, caller, *args, **kwargs):
        connection.SSHConnection.__init__(self)
        self.cmds = cmds
        self.caller = caller

    #======================
    def serviceStarted(self):
        self.d = defer.Deferred()
        self.d.addCallback(self._cbFirst)
        self.d.addErrback(self._ebFirst)
        self.openChannel(CommandChannel(self.cmds[0], lastcmd=0, 
conn=self))

    def _cbFirst(self, result):
        #print 'CALLBACK Result 1:', result
        self.caller.responses.append(result.rstrip())
        self.d = defer.Deferred()
        self.d.addCallback(self._cbSecond)
        self.d.addErrback(self._ebSecond)
        self.openChannel(CommandChannel(self.cmds[1], lastcmd=0, 
conn=self))

    def _ebFirst(self, f):
        self.caller.responses.append(None)
        print "Error 1"
        self.d = defer.Deferred()
        self.d.addCallback(self._cbSecond)
        self.d.addErrback(self._ebSecond)
        self.openChannel(CommandChannel(self.cmds[1], lastcmd=0, 
conn=self))
        #log.err()

    def _cbSecond(self, result):
        #print 'CALLBACK Result 2:', result
        self.caller.responses.append(result.rstrip())
        self.d = defer.Deferred()
        self.d.addCallback(self._cbThird)
        self.d.addErrback(self._ebThird)
        self.openChannel(CommandChannel(self.cmds[2], lastcmd=1, 
conn=self))

    def _ebSecond(self, f):
        self.caller.responses.append(None)
        self.d = defer.Deferred()
        self.d.addCallback(self._cbThird)
        self.d.addErrback(self._ebThird)
        self.openChannel(CommandChannel(self.cmds[2], lastcmd=1, 
conn=self))
        #log.err()

    def _cbThird(self, result):
        self.caller.responses.append(result.rstrip())
        #print 'CALLBACK Result 3:', result
        reactor.stop()

    def _ebThird(self, f):
        self.caller.responses.append(None)
        log.err()
        reactor.stop()
    #======================

class CommandChannel(channel.SSHChannel):
    name = 'session'
 
    def __init__(self, command, lastcmd, *args, **kwargs):
        channel.SSHChannel.__init__(self, *args, **kwargs)
        self.command = command
        self.lastcmd = lastcmd
        self.data = ""

    def channelOpen(self, data):
        self.conn.sendRequest(self, 'exec', common.NS(self.command), 
wantReply=True).addCallback(self._gotResponse)

    def _gotResponse(self, _):
        #print "RESPONSE"
        self.conn.sendEOF(self)

    def dataReceived(self, data):
        #print "Data Received:", data
        self.data += data

    def closed(self):
        self.conn.d.callback(self.data)
        self.loseConnection()
        ##        if self.lastcmd:
        ##            print "closing reactor."
        ##            reactor.stop()

class ClientCommandFactory(protocol.ClientFactory):
    def __init__(self, username, password, cmds, caller):
        self.username = username
        self.password = password
        self.cmds = cmds
        self.caller = caller

    def buildProtocol(self, addr):
        protocol = ClientCommandTransport(self.username, self.password, 
self.cmds, self.caller)
        return protocol

 
class SSH():
    """ Contains a SSH connection, runs commands, and stores results. """
    def __init__(self, host, username, password, cmds):
        self.host = host
        self.username = username
        self.password = password
        self.cmds = cmds
        self.responses = []
        self.run_commands()

    def run_commands(self):
        factory = ClientCommandFactory(self.username, self.password, 
self.cmds, self)
        reactor.connectTCP(self.host, 22, factory)
        reactor.run()

myssh = SSH("my.host.com", "myacct", "mypasswd", ["id; su - root; 
myrootpasswd; id", "pwd", "ls -l"])

print "=" * 25
for i, response in enumerate(myssh.responses):
    print i, response
    print "=" * 25

print "\nDone."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070927/1ab7670f/attachment.htm 

From exarkun at divmod.com  Fri Sep 28 07:34:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Sep 2007 07:34:22 -0400
Subject: [Twisted-Python] How to switch users in SSH session.
In-Reply-To: <OF805FD359.073506AB-ON86257363.006CD902-86257363.006DDACA@uscmail.uscourts.gov>
Message-ID: <20070928113422.8162.2102237877.divmod.quotient.15372@ohm>

On Thu, 27 Sep 2007 15:00:14 -0500, paul_s_johnson at mnb.uscourts.gov wrote:
>After much wrangling and a small miracle I have managed to write an object
>that fetches the output of three commands in the order given through an
>SSH connection. How come I cannot switch users? Some of the information I
>need can only be fetched through a root account and security is such that
>I cannot log in remotely from a root account but must switch once logged
>in from an account with less than root privileges.
>
>Here's the line that instaniates my SSH object (also repeated at the end
>of my code):
>
>myssh = SSH("my.host.com", "myusername", "mypasswd", ["id; su - root;
>myrootpasswd; id", "pwd", "ls -l"])

I suspect the list element which includes "su - root; myrootpasswd;"
won't achieve the desired affect.  Even if su weren't careful to try
to read from a pty, "myrootpasswd" won't be sent to its stdin, it'll
be executed by the shell after "su - root" exits, which it probably
won't since nothing is going to write a password to it.

Instead, you probably need to send the password over the connection
after "su - root" has started and is waiting for the password.  I'm
not exactly sure what the steps to this in detail are, though.

Jean-Paul



From Andy at NewWorldElectric.com  Fri Sep 28 11:13:49 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Fri, 28 Sep 2007 11:13:49 -0400
Subject: [Twisted-Python] Aborting callback chain with an errback
In-Reply-To: <37d49ed40709280808h49421fd4s9cd60a48ca731347@mail.gmail.com>
References: <37d49ed40709280808h49421fd4s9cd60a48ca731347@mail.gmail.com>
Message-ID: <37d49ed40709280813j3bb47ed7s22b974fc377c05a@mail.gmail.com>

What is the proper way to handle an uncorrectable error?  I have code
that looks like:

def callXMLRPC(self,stringValue,intValue):
   return(xmlProxy.callRemote("myFunc",{...}) \

.addCallback(self.rpcSuccess).addErrback(self.rpcFailure))

and in a derived class:

def specificQuery(self):
    return self.callXMLRPC("Ask Thing", 3).addCallback(self.handleResult)

what I'd like to have happen is if an error is raised in callRemote,
rpcFailure does some cleanup and no further callbacks are executed.  I
can't fix the failure, but I don't want a message logged into my error
log everytime, it's not unhandled, just that there's nothing to be
done and callbacks won't have the data to run.  If I want to deal with
it further I'd want to do it in the base class.  How can I do that?
Am I doing something nonsensical here?

Andy Fundinger


--
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff



From jtdeng at gmail.com  Sat Sep 29 13:08:52 2007
From: jtdeng at gmail.com (James Deng)
Date: Sun, 30 Sep 2007 01:08:52 +0800
Subject: [Twisted-Python] How to stop reactor when execution finishes on
	more than one ssh server?
Message-ID: <61b5ff350709291008h607c5467paba9d625e6307af3@mail.gmail.com>

Hi,
in the sample sshsimpleclient.py, it demostrated how to connect to a ssh
server and issue a command. my question is what should I do if I want to
connect to more than one ssh server.

I did try to create more than one SimpleTransport by using the following
code

HOSTS=[host1, host2, host3]
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host1, 22)
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host2, 22)
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host3, 22)
reactor.run()

this really behaves as what i expected, and executed the command on all
remote hosts, but after it finishes, i just hangs there, I know I need a
place to call something like reactor.stop() when all transport finishes the
execution. but i do not know where to call it,  need some deffereds? and
how?

thanks very much!

James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070930/ba0a6eb7/attachment.htm 

From exarkun at divmod.com  Sat Sep 29 14:54:29 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 29 Sep 2007 14:54:29 -0400
Subject: [Twisted-Python] How to stop reactor when execution finishes on
	more than one ssh server?
In-Reply-To: <61b5ff350709291008h607c5467paba9d625e6307af3@mail.gmail.com>
Message-ID: <20070929185429.8162.1242645935.divmod.quotient.15945@ohm>

On Sun, 30 Sep 2007 01:08:52 +0800, James Deng <jtdeng at gmail.com> wrote:
>Hi,
>in the sample sshsimpleclient.py, it demostrated how to connect to a ssh
>server and issue a command. my question is what should I do if I want to
>connect to more than one ssh server.
>
>I did try to create more than one SimpleTransport by using the following
>code
>
>HOSTS=[host1, host2, host3]
>protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host1, 22)
>protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host2, 22)
>protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host3, 22)
>reactor.run()
>
>this really behaves as what i expected, and executed the command on all
>remote hosts, but after it finishes, i just hangs there, I know I need a
>place to call something like reactor.stop() when all transport finishes the
>execution. but i do not know where to call it,  need some deffereds? and
>how?

First, you need to know when a single connection is finished.  If what you
are interested in is a channel being closed, then the appropriate callback
is SSHChannel.closed, as sshsimpleclient.py demonstrates.

Then you need for that information to be relayed to the code which is
responsible for knowing that at some point the reactor should be stopped.
sshsimpleclient.py is not a good example of this, since with its approach
to this, when a CatChannel is disconnected, the reactor will always be
stopped.  This makes CatChannel inappropriate for use in any real program.
Instead, you may want to callback a Deferred in your closed implementation.
The Deferred might be one which was supplied to your channel's constructor
and was ultimately created by the same code which knows that the reactor
needs to be stopped.

Finally, you need to aggregate multiple Deferreds into one.  You can do this
using twisted.internet.defer.gatherResults, which takes a list of Deferreds
and returns a Deferred which will be called back when all of the inputs have
been called back.  You can pass the Deferred for each of your channels to
gatherResults and add a callback to the returned Deferred which stops the
reactor.

So, for example (not runnable):

    hosts = [host1, host2, host3]
    closedDeferreds = []
    for host in hosts:
        d = Deferred()
        closedDeferreds.append(d)
        ClientCreator(reactor, SimpleTransport, d).connectTCP(host, 22)
    gatherResults(closedDeferreds).addCallback(lambda ignored: reactor.stop())
    reactor.run()

Jean-Paul



From exarkun at twistedmatrix.com  Sun Sep 30 00:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Sep 2007 04:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1191125103.38.382592547@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-23 through 2007-09-30
Bugs opened: 4    Bugs closed: 4  Total open bugs: 1035 (+0)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +2  |Highest:  -1          |Core:   -2             
|Enhancement:  -2  |High:     +1          |Trial:  +1             
                   |Normal:   +0          |Web2:   +1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2836] limits of web2.resource.PostableResource can't be customized (opened by therve)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2836

                    ===== High =====
[#2837] TreeReporter setup/teardown error handling broke (opened by pjd)
    defect          trial      http://twistedmatrix.com/trac/ticket/2837

                    ===== Normal =====
[#2838] _dumbwin32proc does not IProcessTransport make (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2838

[#2839] _pollingfile fails to call stopProducing when connection is lost (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2839



Closed Bugs
______________________
                    ===== Highest =====
[#2684] t.p.t.ThreadPool.dispatch should be deprecated (opened by indigo, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2684

[#2216] Coding Standard update: Lines should not have trailing whitespace (opened by jml, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2216

                    ===== Normal =====
[#2636] stdio.StandardIO breaks, readhack code in process.py to blame (opened by gtalvola, closed by therve, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2636

[#2101] Coding standard should fallback to PEP 8 (opened by jml, closed by therve, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2101



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2839] _pollingfile fails to call stopProducing when connection is lost (since 2007-09-25 12:50:46).

Mean open ticket age: 530 days, 11:12:33.587451.
Median: 429 days, 23:27:03.200978.
Standard deviation: 402 days, 14:36:13.748171.
Interquartile range: 504 days, 22:01:06.

Mean time between ticket creation and ticket resolution: 121 days, 13:43:11.437464.
Median: 14 days, 13:40:23.
Standard deviation is 224 days, 14:04:54.647686.
The interquartile range is 128 days, 3:43:59.

Mean time spent in review: 65 days, 18:18:25.859556.
Median: 4 days, 5:45:01.
Standard deviation: 145 days, 4:55:30.540939.
Interquartile range: 29 days, 10:44:36.

Mean number of times a ticket is reviewed: 1.95081967213.
Median: 1
Standard deviation: 1.58592108825.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    12 unique ticket reporters
    6 unique ticket reviewers
    2 unique ticket resolvers
In the last 24 weeks,
    76 unique ticket reporters
    15 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    155 unique ticket reporters
    19 unique ticket reviewers
    26 unique ticket resolvers




From beau at subobscur.us  Sat Sep  1 01:27:11 2007
From: beau at subobscur.us (Beau Hargis)
Date: Sat, 1 Sep 2007 00:27:11 -0700 (PDT)
Subject: [Twisted-Python] Possible to delay connectTCP?
Message-ID: <703537.45741.qm@web701.biz.mail.mud.yahoo.com>

That is what I had thought. I had come up with a couple of possible options, some of them complex, but I wanted to make sure there wasn't anything hiding in twisted that was not obvious. Thanks.

----- Original Message ----
From: Christopher Armstrong <radix at twistedmatrix.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Friday, August 31, 2007 4:56:02 PM
Subject: Re: [Twisted-Python] Possible to delay connectTCP?

On 8/31/07, Beau Hargis <beau at subobscur.us> wrote:
I have an application which connects to a machine which has 50-60 ports open on it to receive data (each for a different region). It acts like a switch. Problem is that when I make all those connection requests at the same time the server falls over trying to handle all the connections requests from my application. I cannot control or change the behaviour of the server I am connecting to, however, I am also unable to find a way to easily to add a delay between connection requests in twisted (without blocking the reactor), so that only 2 or 3 start up at a time.


Is there an elegant and clean way to do such a thing? Twisted has worked beautifully for everything else, but I can't replace this one server for a while until I can duplicate the rest of its functionality, so I am dependant on it providing the data.

The way to delay (that is, schedule) function calls until a later point in time is reactor.callLater(seconds, callable, *args, **kwargs).



-- 
Christopher Armstrong
International Man of Twistery

http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/




-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070901/665ba200/attachment.html>

From exarkun at twistedmatrix.com  Sat Sep  1 22:05:09 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 02 Sep 2007 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1188705909.76.342746716@twistedmatrix.com

Bug summary
______________________
Summary for 2007-08-26 through 2007-09-02
Bugs opened: 7    Bugs closed: 3  Total open bugs: 1024 (+4)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +5  |Highest:  +2          |Core:      +4          
|Enhancement:  +0  |High:     +2          |Names:     +1          
                   |Normal:   +1          |Pydoctor:  -1          
                                          |Web:       +1          


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2808] AMP should raise MissingArgument (or other) if a callRemote is called with wrong arguments (opened by Lacrymology)
    defect          core       http://twistedmatrix.com/trac/ticket/2808

[#2808] AMP should raise MissingArgument (or other) if a callRemote is called with wrong arguments (opened by Lacrymology)
    defect          core       http://twistedmatrix.com/trac/ticket/2808

                    ===== High =====
[#2807] twisted.mail.relaymanager.MXCalculator._cbMX raises unhandled IndexError for response with no answers (opened by exarkun)
    defect          names      http://twistedmatrix.com/trac/ticket/2807

[#2809] 99.9% cpu load when using the epoll reactor (opened by mvw)
    defect          core       http://twistedmatrix.com/trac/ticket/2809

                    ===== Normal =====
[#2805] Cooperator adds a callback to iterated deferreds which does not pass on the original result (opened by rwall)
    defect          core       http://twistedmatrix.com/trac/ticket/2805

[#2806] Twisted web client should support HTTPS URL hostname verification (opened by radix)
    enhancement     web        http://twistedmatrix.com/trac/ticket/2806

[#2810] AMP command-handling and protocol-parsing should be on separate objects (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2810



Closed Bugs
______________________
                    ===== Highest =====
[#2808] AMP should raise MissingArgument (or other) if a callRemote is called with wrong arguments (opened by Lacrymology, closed by Lacrymology, )
    defect          core       http://twistedmatrix.com/trac/ticket/2808

                    ===== Normal =====
[#1639] Full package and class hierarchy pages. (opened by jknight, closed by exarkun, fixed)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/1639

[#2473] make twistd more usable (opened by itamarst, closed by glyph, invalid)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2473



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2810] AMP command-handling and protocol-parsing should be on separate objects (since 2007-08-31 14:21:32).

Mean open ticket age: 511 days, 15:26:23.405046.
Median: 406 days, 14:01:43.587664.
Standard deviation: 398 days, 11:41:57.222639.
Interquartile range: 496 days, 3:03:16.

Mean time between ticket creation and ticket resolution: 120 days, 15:02:59.593481.
Median: 14 days, 8:13:35.
Standard deviation is 224 days, 10:25:04.257292.
The interquartile range is 127 days, 2:25:56.

Mean time spent in review: 63 days, 14:54:37.734422.
Median: 4 days, 4:50:20.
Standard deviation: 138 days, 15:21:07.206937.
Interquartile range: 30 days, 7:05:01.

Mean number of times a ticket is reviewed: 1.91366906475.
Median: 1
Standard deviation: 1.55081172087.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    19 unique ticket reporters
    7 unique ticket reviewers
    6 unique ticket resolvers
In the last 24 weeks,
    80 unique ticket reporters
    14 unique ticket reviewers
    16 unique ticket resolvers
In the last 48 weeks,
    155 unique ticket reporters
    20 unique ticket reviewers
    27 unique ticket resolvers




From warner at lothar.com  Sun Sep  2 16:14:44 2007
From: warner at lothar.com (Brian Warner)
Date: Sun, 02 Sep 2007 15:14:44 -0700 (PDT)
Subject: [Twisted-Python] Foolscap-0.1.6 released
Message-ID: <20070902.151444.189397701.warner@lothar.com>


I've released Foolscap-0.1.6, with a few minor bugfixes. The new release can
be downloaded from PyPI or directly from the Foolscap home page:

  http://foolscap.lothar.com/releases/foolscap-0.1.6.tar.gz

This release fixes the debian packaging problems that prevented 0.1.5 from
being able to create .deb packages. It also fixes a problem with the ChoiceOf
constraint, and fixes a couple of problems in the documentation. Foolscap
versions 0.1.3 through 0.1.6 (inclusive) are fully wire-compatible with each
other. Wire-compatibility-breaking changes are still anticipated in the
future.

Foolscap is a next-generation RPC/RMI/remote-object protocol, intended to
eventually replace Perspective Broker. It offers remote object-capability
facilities for Python programs using Twisted's event loop, based upon
concepts and patterns from the E language (http://www.erights.org/). For more
information and bug reporting, please visit the Foolscap home page at:

  http://foolscap.lothar.com/


cheers,
 -Brian



From pasci.bach at gmail.com  Mon Sep  3 14:27:36 2007
From: pasci.bach at gmail.com (Pascal Bach)
Date: Mon, 3 Sep 2007 22:27:36 +0200
Subject: [Twisted-Python] SMS Protocol UCP /EMI
Message-ID: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>

I think it is best if I publish my UCP/EMI implementation somewhere, I'm
currently thinking about a common API for different SMSC communication API.
I currently know about SMPP, UCP/EMI and CIMD from Nokia.

Is there any other protocol, maybe with some specialties that should be
considered in the Interface.

Is there actually an interest in such protocols in twisted?

Pascal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070903/32768c03/attachment.html>

From pbastov at gmail.com  Mon Sep  3 22:12:49 2007
From: pbastov at gmail.com (Pavel Bastov)
Date: Tue, 4 Sep 2007 10:12:49 +0600
Subject: [Twisted-Python] Processing reload event
Message-ID: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>

Hi all,

how do I process the reload event (service <myservice> reload) in my
Twisted application?

TIA

-- 
Good luck,

Pavel Bastov
xooChat Evangelist and Team Leader
http://www.xoochat.com/



From langford.d at gmail.com  Mon Sep  3 22:57:05 2007
From: langford.d at gmail.com (David Langford)
Date: Tue, 4 Sep 2007 14:57:05 +1000
Subject: [Twisted-Python] twistd doesn't work
Message-ID: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>

Hey everyone

  I'm going through the finger tutorial ->
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/intro.html.
And at the end of the first section it talks about using the twistd
command. Now it just plain doesn't work for me, telling me the command is
not found. I'm using a macbook pro and i type the command into terminal.

  Can anyone tell me what i'm doing wrong. Because the next section doesn't
work (i'm assuming its related to my lack of twistd-ness)

  I know this a n00bish question, and i've been searching for an answer, but
everyone else seems to be able to get it working and no one mentions having
problems. Then i thought maybee i have to download something extra for
twisted, but a search of the site only returned tickets (bug tickets)
instead of an actual search of the site.

  Any help would be greatly appreciated

 Lango
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070904/f69ed7a7/attachment.html>

From rasjidw at gmail.com  Mon Sep  3 23:22:37 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Tue, 4 Sep 2007 15:22:37 +1000
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with a
	blocking API
Message-ID: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>

Hi everyone.

I've done some reading, and it seems that there have been several
attempts by new twisted users to get Perspective Broker to function
more like Corba or DCOM.  Despite having read
http://twistedmatrix.com/pipermail/twisted-python/2007-April/thread.html#15121
on why this does not work, I have had a go and have got something that
seems to work well, at least for my test case.

Server side it is pretty standard.  Client side I run the twisted
reactor in a separate (non-main) thread, and use threading.Event()
objects placed into a 'pass through' callback to emulate blocking
until the required deferred has its result.

I have attached a simple server and client, with callback
functionality illustrated.

I have not really looked into the thread safety issues yet, but have
been looking into reactor.callFromThread and whether it is required
here.

If the entire approach is inherently broken for some reason, I'd like
to know so I can look at alternatives.

Cheers,

Rasjid.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simple-client.py
Type: text/x-python
Size: 2377 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070904/b0f57998/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simple-server.py
Type: text/x-python
Size: 1229 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070904/b0f57998/attachment-0005.py>

From trustaldo at gmail.com  Tue Sep  4 00:19:37 2007
From: trustaldo at gmail.com (Trust Mutemasango)
Date: Tue, 4 Sep 2007 08:19:37 +0200
Subject: [Twisted-Python] SMS Protocol UCP /EMI
In-Reply-To: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>
References: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>
Message-ID: <21d530bf0709032319o23bf04a1seb781ab725df760a@mail.gmail.com>

hey man I a am learning python and only started learning python when i was
told about twisted. I am very intrested in the protocols you have just
mentioned done a bit in vb6 and vb.net.

regards

Trust

On 03/09/07, Pascal Bach <pasci.bach at gmail.com> wrote:
>
> I think it is best if I publish my UCP/EMI implementation somewhere, I'm
> currently thinking about a common API for different SMSC communication API.
> I currently know about SMPP, UCP/EMI and CIMD from Nokia.
>
> Is there any other protocol, maybe with some specialties that should be
> considered in the Interface.
>
> Is there actually an interest in such protocols in twisted?
>
> Pascal
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070904/3064648b/attachment.html>

From simon at hedberg.net  Tue Sep  4 01:13:12 2007
From: simon at hedberg.net (Simon Hedberg)
Date: Tue, 4 Sep 2007 09:13:12 +0200
Subject: [Twisted-Python] SMS Protocol UCP /EMI
In-Reply-To: <74363ffb0709031327l95a2f86mbec0479d8eb1cb8a@mail.gmail.com>
Message-ID: <000001c7eec3$0e0ffa30$630fa8c0@hp>


> I think it is best if I publish my UCP/EMI implementation somewhere,
I'm currently thinking about a common API 
> for different SMSC communication API.
> I currently know about SMPP, UCP/EMI and CIMD from Nokia.
>
> Is there any other protocol, maybe with some specialties that should
be considered in the Interface. 
>
> Is there actually an interest in such protocols in twisted?
>
> Pascal

I'm currently using another proprietary protocol for SMS traffic but
especially SMPP would be of interest to me.

/Simon




From miles.chris at gmail.com  Tue Sep  4 01:36:21 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Tue, 4 Sep 2007 08:36:21 +0100
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
Message-ID: <C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>

Hi David,

Have you installed the Twisted 2.5.0 tarball from http:// 
twistedmatrix.com/trac/ ?

If so, you should find the twistd command in the OS X Python bin dir,  
which will usually be:
   /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
or
   /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd

Cheers,
Chris

On 4 Sep 2007, at 05:57, David Langford wrote:

> Hey everyone
>
>   I'm going through the finger tutorial -> http://twistedmatrix.com/ 
> projects/core/documentation/howto/tutorial/intro.html . And at the  
> end of the first section it talks about using the twistd command.  
> Now it just plain doesn't work for me, telling me the command is  
> not found. I'm using a macbook pro and i type the command into  
> terminal.
>
>   Can anyone tell me what i'm doing wrong. Because the next section  
> doesn't work (i'm assuming its related to my lack of twistd-ness)
>
>   I know this a n00bish question, and i've been searching for an  
> answer, but everyone else seems to be able to get it working and no  
> one mentions having problems. Then i thought maybee i have to  
> download something extra for twisted, but a search of the site only  
> returned tickets (bug tickets) instead of an actual search of the  
> site.
>
>   Any help would be greatly appreciated
>
>  Lango
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From p.mayers at imperial.ac.uk  Tue Sep  4 03:20:43 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 04 Sep 2007 10:20:43 +0100
Subject: [Twisted-Python] Processing reload event
In-Reply-To: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>
References: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>
Message-ID: <1188897643.4708.6.camel@localhost.localdomain>

On Tue, 2007-09-04 at 10:12 +0600, Pavel Bastov wrote:
> Hi all,
> 
> how do I process the reload event (service <myservice> reload) in my
> Twisted application?

It's application dependent. There are probably hundreds of ways you
could do it.

Or do you mean "how do I receive a HUP", which is different; an init
script need not implement reload via HUP.

> 
> TIA
> 




From pbastov at gmail.com  Tue Sep  4 07:36:16 2007
From: pbastov at gmail.com (Pavel Bastov)
Date: Tue, 4 Sep 2007 19:36:16 +0600
Subject: [Twisted-Python] Processing reload event
In-Reply-To: <1188897643.4708.6.camel@localhost.localdomain>
References: <eaf39e680709032112w5893839ck3ca5900ff83a7cc9@mail.gmail.com>
	<1188897643.4708.6.camel@localhost.localdomain>
Message-ID: <eaf39e680709040636r7bc10a94je8dc41d633ea3355@mail.gmail.com>

Actually, I don't care if it's HUP or whatever. I need to reload
configuration, and I want to do it the usual way, i.e. service
<myservice> reload

I need just one way of doing this that works.

On 9/4/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On Tue, 2007-09-04 at 10:12 +0600, Pavel Bastov wrote:
> > Hi all,
> >
> > how do I process the reload event (service <myservice> reload) in my
> > Twisted application?
>
> It's application dependent. There are probably hundreds of ways you
> could do it.
>
> Or do you mean "how do I receive a HUP", which is different; an init
> script need not implement reload via HUP.
>
> >
> > TIA
> >
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Good luck,

Pavel Bastov
xooChat Evangelist and Team Leader
http://www.xoochat.com/



From exarkun at divmod.com  Tue Sep  4 07:58:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Sep 2007 09:58:20 -0400
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object
	with a blocking API
In-Reply-To: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>
Message-ID: <20070904135820.8162.1106919495.divmod.quotient.3591@ohm>

On Tue, 4 Sep 2007 15:22:37 +1000, Rasjid Wilcox <rasjidw at gmail.com> wrote:
>Hi everyone.
>
> [snip]
>
>Server side it is pretty standard.  Client side I run the twisted
>reactor in a separate (non-main) thread, and use threading.Event()
>objects placed into a 'pass through' callback to emulate blocking
>until the required deferred has its result.
>
>I have attached a simple server and client, with callback
>functionality illustrated.

The example code doesn't do anything with Events, and I'm not sure I
understand what you're describing above, so I don't know if that part
of your code is correct or not.

>
>I have not really looked into the thread safety issues yet, but have
>been looking into reactor.callFromThread and whether it is required
>here.

Yes, it is.  As your code is now, it calls APIs which are not threadsafe
from a non-reactor thread.  This isn't allowed and will definitely result
in incorrect behavior sometimes.

>
>If the entire approach is inherently broken for some reason, I'd like
>to know so I can look at alternatives.

I'm not sure why you're trying to do this at all, instead of just using
Twisted in a single-threaded manner.

Jean-Paul



From rodsenra at gpr.com.br  Tue Sep  4 08:12:36 2007
From: rodsenra at gpr.com.br (Rodrigo Senra)
Date: Tue, 4 Sep 2007 11:12:36 -0300
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python]
	Win32 IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <20070904111236.01c4a336@Fenix>


[ Itamar Shtull-Trauring ]:
-----------------------------
|Anyway, since this is bringing users out into the open - I'm sure we'd
|all like to hear what Twisted is being used for in different companies,
|and under which platforms. Do tell!
|
|My company uses Twisted for a variety of uses, including reliable
|multicast data distribution, messaging, monitoring and managing complex
|processes, in the airline industry. (http://itasoftware.com)
|
|How about you all?

We did several things with this great great great tool, but the biggest
one was to implement an MRCP [1] server that binds with a Text-To-Speech
(TTS) engine for Brazilian Portuguese. It runs on Linux, Windows and Solaris.

Unfortunately the company [2] that commissioned the project from me did not
gave me permission to open up the code. Nevertheless, I am available to 
comment about it and help any endeavour to make a open version of it.

Sorry about the time warp.

[1] http://en.wikipedia.org/wiki/Media_Resource_Control_Protocol
[2] http://www.cpqd.com.br/site/ContentView.php?cd=3774

cheers,
Rod Senra
---
http://rodrigo.senra.nom.br



From rodsenra at gpr.com.br  Tue Sep  4 08:31:50 2007
From: rodsenra at gpr.com.br (Rodrigo Senra)
Date: Tue, 4 Sep 2007 11:31:50 -0300
Subject: [Twisted-Python] Media Resource Control Protocol (MRCP)
In-Reply-To: <464DF708.7090907@llaisdy.com>
References: <464DF708.7090907@llaisdy.com>
Message-ID: <20070904113150.26fb853b@Fenix>


[ Ivan Uemlianin ]:
-----------------------------
|Dear All
|
|I am interested in writing an MRCP (Media Resource Control Protocol
|[1]) server. 

Great. I did that for a Brazilian company. It was not a full MRCP
server, just enough to cope with their TTS needs. But I will be glad
to give advice and help.

| In particular I want to write an MRCP speech recognition
|resource server as part of my trefnydd [2] project.

That is about the opposite of what I have explored (synthesis) ;o)

|  I am posting here to ask for advice about the network programming part.

My MRCP server followed [1], and was based on RTSP for session handling,
instead of SIP.

|I shall also be writing an MRCP client (if only to test the server).
|All the code will be GPL'd.

That is great. I hope I can contribute with that. The project we 
(me and João Chaves Jr) have worked on was proprietary software.
That was an imposition from the client, and a source of great frustration
for me. :o(

|As far as I understand it, an overview of the networking would go like
|this:
|
|An MRCP session between client and server is initiated using the
|Session Initiation Protocol (SIP).

The version I worked on, was based in RTSP not SIP.
From the spec:
"""
  This protocol is designed to work with streaming
  protocols like RTSP (Real Time Streaming Protocol) 
  or SIP (Session Initiation Protocol)
"""

So if you need a MRCP server that is SIP-based for doing ASR,
then I cannot help much since I have experience with a
RTSP-based for doing TTS ;o)
That does not mean I won't give advice if I have any worth giving! 

|Client and server negotiate using
|SIP messages containing SDP message bodies to define the participants
|and the resources required in the session.

Correct.

|After session initiation, two channels are launched: a media channel 
| using RTP to carry binary audio (i.e., speech) data,

Right. I used a wrapper over JRTPLIB to handle RTP and RTCP. 

| and a control channel using TCP (control
|channel messages are text-based and in MRCP format).

Well, the RTSP-based verison used the same RTSP channel to
tunnel session initiation (pure RTSP) and media control
(MRCP payloads embedded in RTSP announce messages).
I do not know how this is handled with SIP.


|It seems to me that both client and server software would have to cope
|with SIP, SDP, RTP, MRCP (message format) and plain old TCP (for the
|SIP/SDP and MRCP control channel messages).

Sounds about right.


|Here are my questions:
|
|- Does anyone know of a FOSS project to write an MRCP server?
|preferably in python. I know of mrcp4j [3].

Not that I know of.

|- My first plan would be to make the MRCP client/server a subclass of
|an SIP client/server, as SIP is used to set up (and tear down) the
|session.  Does that sound sensible?

I used Twisted HTTP handling implementation as a starting point for
the RTSP implementation since both protocols are very much alike.

I wish you luck and success.

best regards,
Rod Senra

[1] http://tools.ietf.org/html/rfc4463

----
Rodrigo Dias Arruda Senra
http://rodrigo.senra.nom.br



From jarek.zgoda at sensisoft.com  Tue Sep  4 08:38:10 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Tue, 04 Sep 2007 16:38:10 +0200
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <1179750893.7838.10.camel@localhost.localdomain>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>	<001b01c79a58$94921670$0400000a@spooge>	<1179611703.26686.4.camel@localhost.localdomain>	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
Message-ID: <46DD6DD2.4010601@sensisoft.com>

Itamar Shtull-Trauring napisał(a):

> Anyway, since this is bringing users out into the open - I'm sure we'd
> all like to hear what Twisted is being used for in different companies,
> and under which platforms. Do tell!
> 
> My company uses Twisted for a variety of uses, including reliable
> multicast data distribution, messaging, monitoring and managing complex
> processes, in the airline industry. (http://itasoftware.com)
> 
> How about you all?

In Sensisoft we use Twisted to build webservice (REST) parts of systems
we sell, i.e. full-text search/document indexing servers.

-- 
Jarek Zgoda
Skype: jzgoda | GTalk: zgoda at jabber.aster.pl | voice: +48228430101

"We read Knuth so you don't have to." (Tim Peters)



From ellisonbg.net at gmail.com  Tue Sep  4 09:38:12 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 09:38:12 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
References: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>
	<20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
Message-ID: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>

> I'm not sure why you're trying to do this at all, instead of just using
> Twisted in a single-threaded manner.
>

This is a usage case that we run into regularly.  We have a lot of PB
based servers, but sometimes people want to use a client to them from
an interactive Python or IPython prompt.  At that point you have to
run the reactor in a different thread.  But, I have never seen a
method of putting a blocking API on top of such a client that was
_really_ thread safe.  I have seen a few approaches that seem to work,
but that are clearly non-thread safe.  I would love to see a robust
solution for this problem though - one that could be fully trusted.

Brian


> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at divmod.com  Tue Sep  4 10:08:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Sep 2007 12:08:28 -0400
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object
	with a blocking API
In-Reply-To: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
Message-ID: <20070904160828.8162.1303691561.divmod.quotient.3617@ohm>

On Tue, 4 Sep 2007 09:38:12 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>> I'm not sure why you're trying to do this at all, instead of just using
>> Twisted in a single-threaded manner.
>>
>
>This is a usage case that we run into regularly.  We have a lot of PB
>based servers, but sometimes people want to use a client to them from
>an interactive Python or IPython prompt.  At that point you have to
>run the reactor in a different thread.

Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
what the Twisted/IPython integration code ended up looking like (or if it
was ever taken to a satisfactory "completion" point) but I don't think it
is necessary to have multiple threads for that use case, either.

>But, I have never seen a
>method of putting a blocking API on top of such a client that was
>_really_ thread safe.  I have seen a few approaches that seem to work,
>but that are clearly non-thread safe.  I would love to see a robust
>solution for this problem though - one that could be fully trusted.

Why isn't a solution based on Twisted's thread-safe event-posting API 
(reactor.callFromThread) and the thread-safe event-posting API of whatever
other thing is being integrated with "really" thread-safe?  Sure, you can
write programs which will deadlock as a result of application-level bugs
where one thread is blocked on a request and the other thread needs some
information from it before the request can be satisfied, but this is inherent
to wanting to drive an asynchronous API synchronously.  Aside from it, I
don't think there are any problems with what I described above.

Jean-Paul



From a.poisel at acat.cc  Tue Sep  4 10:29:19 2007
From: a.poisel at acat.cc (Andreas Poisel)
Date: Tue, 4 Sep 2007 18:29:19 +0200
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <46DD6DD2.4010601@sensisoft.com>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@[192.168.24.210]>
	<1179750893.7838.10.camel@localhost.localdomain>
	<46DD6DD2.4010601@sensisoft.com>
Message-ID: <20070904162919.GJ11857@trude>

Hi!

We (Acat) use Twisted to implement interfaces to hotel PMSs (Property
Management Systems).

Great tool, thanks a lot.

-- 
Bye, Andreas



From ellisonbg.net at gmail.com  Tue Sep  4 12:45:17 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 12:45:17 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
References: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
	<20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
Message-ID: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>

> >This is a usage case that we run into regularly.  We have a lot of PB
> >based servers, but sometimes people want to use a client to them from
> >an interactive Python or IPython prompt.  At that point you have to
> >run the reactor in a different thread.
>
> Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
> what the Twisted/IPython integration code ended up looking like (or if it
> was ever taken to a satisfactory "completion" point) but I don't think it
> is necessary to have multiple threads for that use case, either.

I have, but this doesn't solve the problem as I recall.  First, these
users want to be able to use PB clients from vanilla python
interpreters and IPython out of the box - not from within some other
process doing the tricks that are in conch/stdio.py.  Am I not correct
that threads are needed in this case?  Second, what this module does
is actually make the terminal asynchronous, which is exactly the
opposite of what these users want.  They *want* a synchronous terminal
and a blocking PB clients.  I hope I am not coming across as angry
about this - I'm not.  To me the lesson is that as long as everything
is really asynchronous anything is possible within the constraints of
this asynchronous universe.  It's the multiple universe things that
makes life complicated (asyn + syn).

> >But, I have never seen a
> >method of putting a blocking API on top of such a client that was
> >_really_ thread safe.  I have seen a few approaches that seem to work,
> >but that are clearly non-thread safe.  I would love to see a robust
> >solution for this problem though - one that could be fully trusted.
>
> Why isn't a solution based on Twisted's thread-safe event-posting API
> (reactor.callFromThread) and the thread-safe event-posting API of whatever
> other thing is being integrated with "really" thread-safe?  Sure, you can
> write programs which will deadlock as a result of application-level bugs
> where one thread is blocked on a request and the other thread needs some
> information from it before the request can be satisfied, but this is inherent
> to wanting to drive an asynchronous API synchronously.  Aside from it, I
> don't think there are any problems with what I described above.

It probably is, but I have never seen an implementation that actually
does this.  Do you know of one?  The ones that I have seen - even
those which use callFromThread have not filled me with thoughts of
robustness, stability and thread safety.  I should look at this again
though.

Also, I should mention that in IPython this is not a show stopper for
us, but it does mean that we currently don't use PB in all of the
places we might otherwise.

Brian



> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From ellisonbg.net at gmail.com  Tue Sep  4 13:03:57 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 13:03:57 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
References: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
	<20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
	<6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
Message-ID: <6ce0ac130709041203i1bf09465gd7d7733e055467c9@mail.gmail.com>

I take most of this back.  I just saw that in twisted.internet.threads
there is now a

blockingCallFromThread

function that does this exactly.  Last time I looked at the ticket
that led to this, there were still some things being worked out.  This
look very nice though!

Brian

On 9/4/07, Brian Granger <ellisonbg.net at gmail.com> wrote:
> > >This is a usage case that we run into regularly.  We have a lot of PB
> > >based servers, but sometimes people want to use a client to them from
> > >an interactive Python or IPython prompt.  At that point you have to
> > >run the reactor in a different thread.
> >
> > Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
> > what the Twisted/IPython integration code ended up looking like (or if it
> > was ever taken to a satisfactory "completion" point) but I don't think it
> > is necessary to have multiple threads for that use case, either.
>
> I have, but this doesn't solve the problem as I recall.  First, these
> users want to be able to use PB clients from vanilla python
> interpreters and IPython out of the box - not from within some other
> process doing the tricks that are in conch/stdio.py.  Am I not correct
> that threads are needed in this case?  Second, what this module does
> is actually make the terminal asynchronous, which is exactly the
> opposite of what these users want.  They *want* a synchronous terminal
> and a blocking PB clients.  I hope I am not coming across as angry
> about this - I'm not.  To me the lesson is that as long as everything
> is really asynchronous anything is possible within the constraints of
> this asynchronous universe.  It's the multiple universe things that
> makes life complicated (asyn + syn).
>
> > >But, I have never seen a
> > >method of putting a blocking API on top of such a client that was
> > >_really_ thread safe.  I have seen a few approaches that seem to work,
> > >but that are clearly non-thread safe.  I would love to see a robust
> > >solution for this problem though - one that could be fully trusted.
> >
> > Why isn't a solution based on Twisted's thread-safe event-posting API
> > (reactor.callFromThread) and the thread-safe event-posting API of whatever
> > other thing is being integrated with "really" thread-safe?  Sure, you can
> > write programs which will deadlock as a result of application-level bugs
> > where one thread is blocked on a request and the other thread needs some
> > information from it before the request can be satisfied, but this is inherent
> > to wanting to drive an asynchronous API synchronously.  Aside from it, I
> > don't think there are any problems with what I described above.
>
> It probably is, but I have never seen an implementation that actually
> does this.  Do you know of one?  The ones that I have seen - even
> those which use callFromThread have not filled me with thoughts of
> robustness, stability and thread safety.  I should look at this again
> though.
>
> Also, I should mention that in IPython this is not a show stopper for
> us, but it does mean that we currently don't use PB in all of the
> places we might otherwise.
>
> Brian
>
>
>
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From ellisonbg.net at gmail.com  Tue Sep  4 13:04:31 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 4 Sep 2007 13:04:31 -0600
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
References: <6ce0ac130709040838n616d66b6o914009e918b20c2c@mail.gmail.com>
	<20070904160828.8162.1303691561.divmod.quotient.3617@ohm>
	<6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
Message-ID: <6ce0ac130709041204i357d7c02v6aad2f9b89cb960d@mail.gmail.com>

I take most of this back.  I just saw that in twisted.internet.threads
there is now a

blockingCallFromThread

function that does this exactly.  Last time I looked at the ticket
that led to this, there were still some things being worked out.  This
look very nice though!

Brian

On 9/4/07, Brian Granger <ellisonbg.net at gmail.com> wrote:
> > >This is a usage case that we run into regularly.  We have a lot of PB
> > >based servers, but sometimes people want to use a client to them from
> > >an interactive Python or IPython prompt.  At that point you have to
> > >run the reactor in a different thread.
> >
> > Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
> > what the Twisted/IPython integration code ended up looking like (or if it
> > was ever taken to a satisfactory "completion" point) but I don't think it
> > is necessary to have multiple threads for that use case, either.
>
> I have, but this doesn't solve the problem as I recall.  First, these
> users want to be able to use PB clients from vanilla python
> interpreters and IPython out of the box - not from within some other
> process doing the tricks that are in conch/stdio.py.  Am I not correct
> that threads are needed in this case?  Second, what this module does
> is actually make the terminal asynchronous, which is exactly the
> opposite of what these users want.  They *want* a synchronous terminal
> and a blocking PB clients.  I hope I am not coming across as angry
> about this - I'm not.  To me the lesson is that as long as everything
> is really asynchronous anything is possible within the constraints of
> this asynchronous universe.  It's the multiple universe things that
> makes life complicated (asyn + syn).
>
> > >But, I have never seen a
> > >method of putting a blocking API on top of such a client that was
> > >_really_ thread safe.  I have seen a few approaches that seem to work,
> > >but that are clearly non-thread safe.  I would love to see a robust
> > >solution for this problem though - one that could be fully trusted.
> >
> > Why isn't a solution based on Twisted's thread-safe event-posting API
> > (reactor.callFromThread) and the thread-safe event-posting API of whatever
> > other thing is being integrated with "really" thread-safe?  Sure, you can
> > write programs which will deadlock as a result of application-level bugs
> > where one thread is blocked on a request and the other thread needs some
> > information from it before the request can be satisfied, but this is inherent
> > to wanting to drive an asynchronous API synchronously.  Aside from it, I
> > don't think there are any problems with what I described above.
>
> It probably is, but I have never seen an implementation that actually
> does this.  Do you know of one?  The ones that I have seen - even
> those which use callFromThread have not filled me with thoughts of
> robustness, stability and thread safety.  I should look at this again
> though.
>
> Also, I should mention that in IPython this is not a show stopper for
> us, but it does mean that we currently don't use PB in all of the
> places we might otherwise.
>
> Brian
>
>
>
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From exarkun at divmod.com  Tue Sep  4 13:06:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 4 Sep 2007 15:06:45 -0400
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object
	with a blocking API
In-Reply-To: <6ce0ac130709041145l3c633588ob5cfbe016b8f91dd@mail.gmail.com>
Message-ID: <20070904190645.8162.17398181.divmod.quotient.3669@ohm>

On Tue, 4 Sep 2007 12:45:17 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>> >This is a usage case that we run into regularly.  We have a lot of PB
>> >based servers, but sometimes people want to use a client to them from
>> >an interactive Python or IPython prompt.  At that point you have to
>> >run the reactor in a different thread.
>>
>> Not true, in fact.  See twisted/conch/stdio.py, for example.  I don't know
>> what the Twisted/IPython integration code ended up looking like (or if it
>> was ever taken to a satisfactory "completion" point) but I don't think it
>> is necessary to have multiple threads for that use case, either.
>
>I have, but this doesn't solve the problem as I recall.

There are definitely some problems it doesn't solve.  Maybe I'm not getting
the problem you have in mind.

>First, these
>users want to be able to use PB clients from vanilla python
>interpreters and IPython out of the box - not from within some other
>process doing the tricks that are in conch/stdio.py.

stdio.py doesn't do anything with multiple processes (as I think you see,
based on what you said a couple sentences later, but just to be clear).

Another point to clarify - there is a difference between having a blocking
user interface and a blocking API.  In fact, they're different things
entirely - they don't relate to each other in any significant way.

Keeping this in mind, there's no reason either the standard CPython REPL or
IPython couldn't provide a blocking user interface to an asynchronous API,
without resorting to multiple processes or threads.  The implementation is
asynchronous, the user interface blocks.

Of course, actually implementing this for the CPython REPL poses some
challenges.  However, an API does exist which would allow it to poll Twisted
at regular intervals in order to allow Twisted to take care of any event
processing it needed to take care of.  Whether this would yield a high-
quality implementation or not, I'm not sure, but something should be possible.
The reason I wrote stdio.py instead of doing this is that I'd rather have
a REPL implemented in Python without having to jump through libreadline
hoops.  Plus I didn't know about the CPython polling feature at the time. ;)

IPython could do this even more easily, since I think some IPython developers
are actively interested in the feature, and there might be a chance of there
being some changes made to IPython in order to facilitate this.

I hope I have understood properly the use-case you have in mind and that the
above makes some sense.

>Am I not correct
>that threads are needed in this case?  Second, what this module does
>is actually make the terminal asynchronous, which is exactly the
>opposite of what these users want.

stdio.py keeps everything asynchronous and throws Deferreds right in the
user's face.  But it does this because I'm a crazy guy and I love Deferreds.
It's equally possible to implement something like stdio.py, without using
threads or multiple processes, where the user experiences the interface
blocking until a result is available each time he would have otherwise seen
a Deferred.

>They *want* a synchronous terminal
>and a blocking PB clients.  I hope I am not coming across as angry
>about this - I'm not.

Not at all. :)

>To me the lesson is that as long as everything
>is really asynchronous anything is possible within the constraints of
>this asynchronous universe.  It's the multiple universe things that
>makes life complicated (asyn + syn).

Does the notion of dividing things up so that user interface concerns are
dealt with separately from API concerns clear this up at all?  Do you still
think there's something here which can't be solved without threads?

(To be sure, there is something - if you have a blocking API and you want to
use it inside an event loop, then you may need to resort to threads, but I
don't *think* that's the case you're interested in here - correct me if I'm
wrong.)

>> >But, I have never seen a
>> >method of putting a blocking API on top of such a client that was
>> >_really_ thread safe.  I have seen a few approaches that seem to work,
>> >but that are clearly non-thread safe.  I would love to see a robust
>> >solution for this problem though - one that could be fully trusted.
>>
>> Why isn't a solution based on Twisted's thread-safe event-posting API
>> (reactor.callFromThread) and the thread-safe event-posting API of whatever
>> other thing is being integrated with "really" thread-safe?  Sure, you can
>> write programs which will deadlock as a result of application-level bugs
>> where one thread is blocked on a request and the other thread needs some
>> information from it before the request can be satisfied, but this is inherent
>> to wanting to drive an asynchronous API synchronously.  Aside from it, I
>> don't think there are any problems with what I described above.
>
>It probably is, but I have never seen an implementation that actually
>does this.  Do you know of one?  The ones that I have seen - even
>those which use callFromThread have not filled me with thoughts of
>robustness, stability and thread safety.  I should look at this again
>though.

Ah, well, I don't have any that I can point too and claim are robust and
bug free (or even bug lite).  But hey, the *idea* is simple enough. >:)

>
>Also, I should mention that in IPython this is not a show stopper for
>us, but it does mean that we currently don't use PB in all of the
>places we might otherwise.
>

Is this because you want to have blocking APIs in order to implement
features in IPython or is it because you want to present an interface
to users which behaves in a blocking manner? (Sorry if this is beginning
to sound repetitive)

Jean-Paul



From rasjidw at gmail.com  Tue Sep  4 20:43:01 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Wed, 5 Sep 2007 12:43:01 +1000
Subject: [Twisted-Python] Wrapping a Perspective Broker remote object with
	a blocking API
In-Reply-To: <20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
References: <bf82ea70709032222w27682046ne03528dfb0efbfeb@mail.gmail.com>
	<20070904135820.8162.1106919495.divmod.quotient.3591@ohm>
Message-ID: <bf82ea70709041943t5527d414rdd08c7c879cf1b02@mail.gmail.com>

On 9/4/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> The example code doesn't do anything with Events, and I'm not sure I
> understand what you're describing above, so I don't know if that part
> of your code is correct or not.

>From simple-client.py

def wait_factory():
    "Returns a callback to apply to a deffered, and event to wait on"
    evt = threading.Event()
    def set_event(result):
        evt.set()
        return result
    return set_event, evt

> >I have not really looked into the thread safety issues yet, but have
> >been looking into reactor.callFromThread and whether it is required
> >here.
>
> Yes, it is.  As your code is now, it calls APIs which are not threadsafe
> from a non-reactor thread.  This isn't allowed and will definitely result
> in incorrect behavior sometimes.

I figured that was the case.  I was planning to fix this after getting
some feedback.  Which has been worthwhile, since I now know about
twisted.internet.blockingCallFromThread which would appear to do what
I want.

> >If the entire approach is inherently broken for some reason, I'd like
> >to know so I can look at alternatives.
>
> I'm not sure why you're trying to do this at all, instead of just using
> Twisted in a single-threaded manner.

Because the ultimate 'user' of the remote object will be a Visual Basic program.

My vision is as follows:
The Visual Basic program will talk to a python com server.
The python com server will run a PB client that will talk to a PB server.
The PB server will start a windows com component.
Everything gets relayed in a fairly transparent manner, and as far as
the VB program is concerned, it is just talking to a local com
component.

Standard DCOM does not really do what I want, since it assumes a
fairly fixed Client-Server model, whereas I want a peer-to-peer setup
where each node could be a client and a server.  PB would allow me to
do exactly that.

It might be possible to create a new twisted reactor that integrates
into the python com server event loop.  That would presumably be the
correct way to deal with this. But that would seem like far more work
that I have time to devote to this problem at this time.

So my question really is:
What are the problems / brawbacks with running the twisted reactor in
a non-main thread, provided all calls to the reactor are done through
twisted.internet.blockingCallFromThread?

Cheers,

Rasjid.



From pbastov at gmail.com  Tue Sep  4 20:53:25 2007
From: pbastov at gmail.com (Pavel Bastov)
Date: Wed, 5 Sep 2007 08:53:25 +0600
Subject: Tell us how you're using Twisted (was Re: [Twisted-Python] Win32
	IOCPReactor?)
In-Reply-To: <20070904162919.GJ11857@trude>
References: <AB1BB4CF81B9214682079EB55A7125ED01D6994C@mapibe05.exchange.xchg>
	<4629.71.42.153.50.1179511117.squirrel@www.world-net.net>
	<001b01c79a58$94921670$0400000a@spooge>
	<1179611703.26686.4.camel@localhost.localdomain>
	<a0624087ec2773c5d92f0@192.168.24.210>
	<1179750893.7838.10.camel@localhost.localdomain>
	<46DD6DD2.4010601@sensisoft.com> <20070904162919.GJ11857@trude>
Message-ID: <eaf39e680709041953k671a28f7xa9db30cbf050e356@mail.gmail.com>

I'm building xooChat live help service and it uses Twisted as the backend.

On 9/4/07, Andreas Poisel <a.poisel at acat.cc> wrote:
> Hi!
>
> We (Acat) use Twisted to implement interfaces to hotel PMSs (Property
> Management Systems).
>
> Great tool, thanks a lot.
>
> --
> Bye, Andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Good luck,

Pavel Bastov
xooChat Evangelist and Team Leader
http://www.xoochat.com/



From lacrymology at gmail.com  Wed Sep  5 06:01:01 2007
From: lacrymology at gmail.com (Tomas Neme)
Date: Wed, 5 Sep 2007 09:01:01 -0300
Subject: [Twisted-Python] Re: Tell us how you're using Twisted
Message-ID: <2e6659dd0709050501k79922da2x482efa52ee05fed7@mail.gmail.com>

We use twisted to make the networking platform for a number of MMO
games that our client will be releasing sometime next year

Tomas

-- 
|_|0|_|
|_|_|0|
|0|0|0|

 (\__/)
(='.'=)This is Bunny. Copy and paste bunny
(")_(") to help him gain world domination.



From andrewfr_ice at yahoo.com  Wed Sep  5 11:54:34 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 5 Sep 2007 10:54:34 -0700 (PDT)
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
Message-ID: <166356.42572.qm@web34203.mail.mud.yahoo.com>

Hi Rasjid:

> It might be possible to create a new twisted reactor
> that integrates into the python com server event
>loop. That would presumably be the correct way to
>deal with this. But that would seem like far more
work
> that I have time to devote to this problem at this
> time.

Hopefully, I understood your problem correctly...
 
If you are willing to use Stackless Python, I would
recommend you use Christopher Armstrong's
threadlesss.py blockOn function. This would allow
Twisted calls to block. A few months ago, I posted a
solution that would work, but it would be overkill. 

I am also curious why you can't use inline callbacks?

If I can find the time, I will post an example.

> So my question really is:
> What are the problems / brawbacks with running the
> twisted reactor in
> a non-main thread, provided all calls to the reactor
> are done through
> twisted.internet.blockingCallFromThread?

I have used threads with Twisted and Stackless and
found I took a performance hit. Also I found it
prudent to heed the advice and try not to mix threads
with Twisted (or Stackless)

Cheers,
Andrew



      ____________________________________________________________________________________
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us. http://surveylink.yahoo.com/gmrs/yahoo_panel_invite.asp?a=7 




From beau at subobscur.us  Wed Sep  5 13:24:35 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 5 Sep 2007 12:24:35 -0700 (PDT)
Subject: [Twisted-Python] Properly handling Connection Refused
Message-ID: <747249.91202.qm@web714.biz.mail.mud.yahoo.com>

I have this application built in twisted that is pretty robust save for one thing. The server reconnects when it falters or fails for any reason EXCEPT a refused connection, which happens when connecting to services on the Windows servers we have where particular services have not yet been started, which is normal. Every other failure is handled gracefully, including the database disappearing suddenly. I print out the reason in the log and I get this error: 

[Uninitialized]  Reason:  [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionRefusedError'>: Connection was refused by other side: 111: Connection refused.
[Uninitialized] ]
[Uninitialized] Stopping factory <SomeFactory instance at 0x88b77ac>

And the whole thing stops processing and does not restart the connection.

I am running on Ubuntu 7.04 with the twisted packages therein: python-twisted 2.5.0-0ubuntu3

Is this a bug that others have seen? Should I use the tarball from twisted Matrix or use the gutsy packages?





From exarkun at divmod.com  Wed Sep  5 13:29:15 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 5 Sep 2007 15:29:15 -0400
Subject: [Twisted-Python] Properly handling Connection Refused
In-Reply-To: <747249.91202.qm@web714.biz.mail.mud.yahoo.com>
Message-ID: <20070905192915.8162.616090640.divmod.quotient.4128@ohm>

On Wed, 5 Sep 2007 12:24:35 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I have this application built in twisted that is pretty robust save for one thing. The server reconnects when it falters or fails for any reason EXCEPT a refused connection, which happens when connecting to services on the Windows servers we have where particular services have not yet been started, which is normal. Every other failure is handled gracefully, including the database disappearing suddenly. I print out the reason in the log and I get this error:
>
>[Uninitialized]  Reason:  [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionRefusedError'>: Connection was refused by other side: 111: Connection refused.
>[Uninitialized] ]
>[Uninitialized] Stopping factory <SomeFactory instance at 0x88b77ac>
>
>And the whole thing stops processing and does not restart the connection.

How did you implement reconnection?

Jean-Paul



From beau at subobscur.us  Wed Sep  5 13:37:16 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 5 Sep 2007 12:37:16 -0700 (PDT)
Subject: [Twisted-Python] Properly handling Connection Refused
Message-ID: <509588.36597.qm@web715.biz.mail.mud.yahoo.com>

Well, it subclasses 'protocol.ClientFactory'. I did not try 'ReconnectingClientFactory' yet as I wanted a little bit more control of the reconnecting process at some point. In any case, these functions are defined in the class as such:

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason: ', reason
        reactor.callLater(random.randint(10,91), connector.connect)

    def clientConnectionLost(self, connector, reason):
        print 'Connection Lost. Reason: ', reason
        reactor.callLater(random.randint(10,91), connector.connect)

Works ok for every other problem except Connection Refused. When I first started testing reconnect, the seconds argument to callLater was constant like 3 or 4 seconds and it did the same thing.  Even immediate reconnection caused the same problem with Connection Refused: 111.

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 5, 2007 12:29:15 PM
Subject: Re: [Twisted-Python] Properly handling Connection Refused

On Wed, 5 Sep 2007 12:24:35 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I have this application built in twisted that is pretty robust save for one thing. The server reconnects when it falters or fails for any reason EXCEPT a refused connection, which happens when connecting to services on the Windows servers we have where particular services have not yet been started, which is normal. Every other failure is handled gracefully, including the database disappearing suddenly. I print out the reason in the log and I get this error:
>
>[Uninitialized]  Reason:  [Failure instance: Traceback (failure with no frames): <class 'twisted.internet.error.ConnectionRefusedError'>: Connection was refused by other side: 111: Connection refused.
>[Uninitialized] ]
>[Uninitialized] Stopping factory <SomeFactory instance at 0x88b77ac>
>
>And the whole thing stops processing and does not restart the connection.

How did you implement reconnection?

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From exarkun at divmod.com  Wed Sep  5 13:54:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 5 Sep 2007 15:54:31 -0400
Subject: [Twisted-Python] Properly handling Connection Refused
In-Reply-To: <509588.36597.qm@web715.biz.mail.mud.yahoo.com>
Message-ID: <20070905195431.8162.677414154.divmod.quotient.4142@ohm>

On Wed, 5 Sep 2007 12:37:16 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>Well, it subclasses 'protocol.ClientFactory'. I did not try 'ReconnectingClientFactory' yet as I wanted a little bit more control of the reconnecting process at some point. In any case, these functions are defined in the class as such:
>
>    def clientConnectionFailed(self, connector, reason):
>        print 'Connection failed. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>    def clientConnectionLost(self, connector, reason):
>        print 'Connection Lost. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>Works ok for every other problem except Connection Refused. When I first started testing reconnect, the seconds argument to callLater was constant like 3 or 4 seconds and it did the same thing.  Even immediate reconnection caused the same problem with Connection Refused: 111.

This looks as though it should work.  If I run a similar test program, like
this:

  from twisted.internet.protocol import ClientFactory, Protocol
  from twisted.internet import reactor

  class Reconnecter(ClientFactory):
      def clientConnectionFailed(self, connector, reason):
          print reason
          reactor.callLater(5, connector.connect)

  reactor.connectTCP('localhost', 12345, Reconnecter())
  reactor.run()

where nothing is bound to localhost:12345, then I see a connection refused
message every five seconds for as long as I allow it to run.

Can you see if this simple program exhibits the same behavior as your
application?

It would also be worth determining if your application is receiving the
clientConnectionFailed notification but then failing to attempt another
connection (ie, some problem with the callLater), if it is attempting the
next connection but that is never happening (ie, some problem with the
connector.connect), or if clientConnectionFailed isn't even being called
for the connection which is failing (some problem inside the reactor with
failed connection detection/notification).

If you can, it would also be useful to know what the operating system thinks
the state of the socket used for the connection attempt is.  On Linux, you
can get this with a tool like netstat.

Jean-Paul



From beau at subobscur.us  Wed Sep  5 14:24:44 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 5 Sep 2007 13:24:44 -0700 (PDT)
Subject: [Twisted-Python] Properly handling Connection Refused
Message-ID: <235579.52404.qm@web712.biz.mail.mud.yahoo.com>

That small script worked as it should. The traceback is exactly the same as in my application. I just wonder where the '[Uninitialized]' is coming from. How is it ending up like that? Is it getting garbage collected for some reason? I can't catch the state of the port fast enough to see if it's anything else in the stack. I am using the poll reactor. I will change it back to the default select reactor and see if I see a problem with it again and see what other tracing I can do.

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 5, 2007 12:54:31 PM
Subject: Re: [Twisted-Python] Properly handling Connection Refused

On Wed, 5 Sep 2007 12:37:16 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>Well, it subclasses 'protocol.ClientFactory'. I did not try 'ReconnectingClientFactory' yet as I wanted a little bit more control of the reconnecting process at some point. In any case, these functions are defined in the class as such:
>
>    def clientConnectionFailed(self, connector, reason):
>        print 'Connection failed. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>    def clientConnectionLost(self, connector, reason):
>        print 'Connection Lost. Reason: ', reason
>        reactor.callLater(random.randint(10,91), connector.connect)
>
>Works ok for every other problem except Connection Refused. When I first started testing reconnect, the seconds argument to callLater was constant like 3 or 4 seconds and it did the same thing.  Even immediate reconnection caused the same problem with Connection Refused: 111.

This looks as though it should work.  If I run a similar test program, like
this:

  from twisted.internet.protocol import ClientFactory, Protocol
  from twisted.internet import reactor

  class Reconnecter(ClientFactory):
      def clientConnectionFailed(self, connector, reason):
          print reason
          reactor.callLater(5, connector.connect)

  reactor.connectTCP('localhost', 12345, Reconnecter())
  reactor.run()

where nothing is bound to localhost:12345, then I see a connection refused
message every five seconds for as long as I allow it to run.

Can you see if this simple program exhibits the same behavior as your
application?

It would also be worth determining if your application is receiving the
clientConnectionFailed notification but then failing to attempt another
connection (ie, some problem with the callLater), if it is attempting the
next connection but that is never happening (ie, some problem with the
connector.connect), or if clientConnectionFailed isn't even being called
for the connection which is failing (some problem inside the reactor with
failed connection detection/notification).

If you can, it would also be useful to know what the operating system thinks
the state of the socket used for the connection attempt is.  On Linux, you
can get this with a tool like netstat.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From exarkun at divmod.com  Wed Sep  5 15:26:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 5 Sep 2007 17:26:50 -0400
Subject: [Twisted-Python] Properly handling Connection Refused
In-Reply-To: <235579.52404.qm@web712.biz.mail.mud.yahoo.com>
Message-ID: <20070905212650.8162.675187231.divmod.quotient.4162@ohm>

On Wed, 5 Sep 2007 13:24:44 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>That small script worked as it should. The traceback is exactly the same as in my application. I just wonder where the '[Uninitialized]' is coming from. How is it ending up like that? Is it getting garbage collected for some reason? I can't catch the state of the port fast enough to see if it's anything else in the stack. I am using the poll reactor. I will change it back to the default select reactor and see if I see a problem with it again and see what other tracing I can do.

The "Uninitialized" probably isn't something to worry about.  It's just the
Twisted logging system noticing no one has given it a name for the event
source producing log messages.  I think someone even filed a ticket today
to fix one case which results in this.  In any case, it's just the logging
system, it shouldn't affect anything else.

Jean-Paul



From rasjidw at gmail.com  Wed Sep  5 20:10:39 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Thu, 6 Sep 2007 12:10:39 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <166356.42572.qm@web34203.mail.mud.yahoo.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
Message-ID: <bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>

On 9/6/07, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
> If you are willing to use Stackless Python, I would
> recommend you use Christopher Armstrong's
> threadlesss.py blockOn function. This would allow
> Twisted calls to block. A few months ago, I posted a
> solution that would work, but it would be overkill.

I have read about Stackless, and it looks like it would be really fun
to play with.  But I don't think my employer would be keen to go as
'fringe' as Stackless.

> I am also curious why you can't use inline callbacks?

I've only been playing with Twisted seriously for a couple of weeks,
but as far as I understand inline callbacks, they just make the code
'look' synchronous, but the end result is still a deferred.  In my
playing with them, they make twisted code much more succinct and
generally easier to read, but it is all still really just deferreds
underneath and there is no actual blocking going on.

I want to have my python code being called from an external process
via COM, and the external process will expect to be calling a class
method that will do something (blocking as long as required) and then
return the result. Rewriting the external app to deal with everything
being async is not an option.

I'd love to be shown that I'm wrong on this, but can't see how inline
callbacks solve my problem.

> > So my question really is:
> > What are the problems / brawbacks with running the
> > twisted reactor in
> > a non-main thread, provided all calls to the reactor
> > are done through
> > twisted.internet.blockingCallFromThread?
>
> I have used threads with Twisted and Stackless and
> found I took a performance hit. Also I found it
> prudent to heed the advice and try not to mix threads
> with Twisted (or Stackless)

The other option I have thought about is using the Python processing
module (http://pypi.python.org/pypi/processing), which would have the
com server and the twisted client each in their own python process
(and thus Twisted would then be single threaded), although it is
unclear to me if this is making the situation better or worse in
reality.

Cheers,

Rasjid.



From stefan.arentz at gmail.com  Thu Sep  6 03:48:05 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Thu, 6 Sep 2007 11:48:05 +0200
Subject: [Twisted-Python] Cometd?
Message-ID: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>

Has anyone done any work in the area of cometd? I'm interested in
using twisted for a cometd load tester. If there is already code that
I can build on that would be great.

 S.



From mwl at point45.com  Thu Sep  6 04:18:26 2007
From: mwl at point45.com (Mark Leonard)
Date: Thu, 06 Sep 2007 12:18:26 +0200
Subject: [Twisted-Python] Cometd?
In-Reply-To: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>
References: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>
Message-ID: <46DFD3F2.4010002@point45.com>

Stefan Arentz wrote:
 > Has anyone done any work in the area of cometd? I'm interested in
 > using twisted for a cometd load tester. If there is already code that
 > I can build on that would be great.

I don't know if you've seen this yet:
http://svn.xantus.org/shortbus/trunk/cometd-twisted/

Cometd server and client using Twisted. I've only glanced at it thus 
far, but the client is something you might be able to build on.

-Mark



From p.mayers at imperial.ac.uk  Thu Sep  6 04:51:13 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 06 Sep 2007 11:51:13 +0100
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
Message-ID: <1189075873.8730.15.camel@doorstop.net.ic.ac.uk>


> I've only been playing with Twisted seriously for a couple of weeks,
> but as far as I understand inline callbacks, they just make the code
> 'look' synchronous, but the end result is still a deferred.  In my
> playing with them, they make twisted code much more succinct and
> generally easier to read, but it is all still really just deferreds
> underneath and there is no actual blocking going on.

Correct. Effectively, it uses python generators to make the code "nice";
state variables can be kept as function-locals, and flow control can be
somewhat easier to visualise.

> 
> I want to have my python code being called from an external process
> via COM, and the external process will expect to be calling a class
> method that will do something (blocking as long as required) and then
> return the result. Rewriting the external app to deal with everything
> being async is not an option.

I suggest you abandon Perspective Broker; it's a fully async protocol,
and by trying to call it in a sync/blocking manner you're going to get
nowhere fast.

Use something easy like XMLRPC. Twisted can implement that as a server
with full deferred-capable semantics, it'll run over HTTPS, it's got
authentication, it's got .net bindings etc.






From radix at twistedmatrix.com  Thu Sep  6 08:05:21 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 6 Sep 2007 10:05:21 -0400
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
Message-ID: <60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>

On 9/6/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:

> > I want to have my python code being called from an external process
> > via COM, and the external process will expect to be calling a class
> > method that will do something (blocking as long as required) and then
> > return the result. Rewriting the external app to deal with everything
> > being async is not an option.
>
> I suggest you abandon Perspective Broker; it's a fully async protocol,
> and by trying to call it in a sync/blocking manner you're going to get
> nowhere fast.
>
> Use something easy like XMLRPC. Twisted can implement that as a server
> with full deferred-capable semantics, it'll run over HTTPS, it's got
> authentication, it's got .net bindings etc.



That doesn't make any sense: XMLRPC can  be used asynchronously, as PB can.
Switching to XMLRPC won't change anything about his situation, the biggest
problem being that his COM interface doesn't support callbacks (?).

Rasjid: Being asynchronous on the server does not require being asynchronous
on the client. Communication boundaries let you do that. You should check to
see if the "being a COM server" interface allows you to accept a call, and
then later asynchronously trigger the response. Ideally, it would allow
this, and the client would be none the wiser about whether the
implementation of the server is blocking or not, while it's waiting for the
response to its request.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070906/cc9fddf9/attachment.html>

From p.mayers at imperial.ac.uk  Thu Sep  6 17:15:03 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Sep 2007 00:15:03 +0100
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
Message-ID: <1189120503.2493.18.camel@localhost.localdomain>


> 
> That doesn't make any sense: XMLRPC can  be used asynchronously, as PB
> can. Switching to XMLRPC won't change anything about his situation,
> the biggest problem being that his COM interface doesn't support
> callbacks (?). 

I read the OPs problem is precisely the opposite; they are wanting to
use PB sync (which involves horrible reactor tricks).






From langford.d at gmail.com  Thu Sep  6 23:36:45 2007
From: langford.d at gmail.com (David Langford)
Date: Fri, 7 Sep 2007 15:36:45 +1000
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
Message-ID: <6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>

Hey

  I did have the latest Twisted 2.5.0 installed. But I don't think i had the
latest python installed. I installed that and now python doesnt see twisted.
I downloaded the latest tarball again and when i tried to install it (using
python setup.py install) it tells me i need zope (which it didn't last
time).

So i've downloaded the latest stable zope but it wont let me install because
it isn't supported by the latest version of python.

And now i'm stuck, in worse position than before because now i don't even
have twisted. I feel like these are extremely basic things i should now, is
there a webpage or something that answers these problems i'im having?

Cheers

David

On 9/4/07, Chris Miles <miles.chris at gmail.com> wrote:
>
> Hi David,
>
> Have you installed the Twisted 2.5.0 tarball from http://
> twistedmatrix.com/trac/ ?
>
> If so, you should find the twistd command in the OS X Python bin dir,
> which will usually be:
>    /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
> or
>    /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd
>
> Cheers,
> Chris
>
> On 4 Sep 2007, at 05:57, David Langford wrote:
>
> > Hey everyone
> >
> >   I'm going through the finger tutorial -> http://twistedmatrix.com/
> > projects/core/documentation/howto/tutorial/intro.html . And at the
> > end of the first section it talks about using the twistd command.
> > Now it just plain doesn't work for me, telling me the command is
> > not found. I'm using a macbook pro and i type the command into
> > terminal.
> >
> >   Can anyone tell me what i'm doing wrong. Because the next section
> > doesn't work (i'm assuming its related to my lack of twistd-ness)
> >
> >   I know this a n00bish question, and i've been searching for an
> > answer, but everyone else seems to be able to get it working and no
> > one mentions having problems. Then i thought maybee i have to
> > download something extra for twisted, but a search of the site only
> > returned tickets (bug tickets) instead of an actual search of the
> > site.
> >
> >   Any help would be greatly appreciated
> >
> >  Lango
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070907/7795346d/attachment.html>

From db3l.net at gmail.com  Fri Sep  7 00:01:15 2007
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 07 Sep 2007 02:01:15 -0400
Subject: [Twisted-Python] Re: twistd doesn't work
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
Message-ID: <m2tzq7dnf8.fsf@valheru.db3l.homeip.net>

"David Langford" <langford.d at gmail.com> writes:

>   I did have the latest Twisted 2.5.0 installed. But I don't think i had the
> latest python installed. I installed that and now python doesnt see twisted.
> I downloaded the latest tarball again and when i tried to install it (using
> python setup.py install) it tells me i need zope (which it didn't last
> time).

You're most likely just getting caught mixing different python
installations, which can be easy to do when you have multiple
interpreters on a system.

You just need to ensure you're installing against the right Python
runtime when you install the Twisted package.  In particular, make
sure you are running the Python executable you think you are when
running setup.py since it will install into the library location for
that Python executable.

Assuming you install the latest Python (say, Python 2.5.1 from the OS
X DMG image).  It will place its installation by default into the
paths mentioned earlier (but with 2.5 rather than 2.4) - e.g.:

/Library/Frameworks/Python.framework/Versions/2.5   or
/Library/Frameworks/Python.framework/Versions/Current

(Current is normally a symbolic link to a specific version)

If you've installed more than one Python release, you'll have multiple
versioned directories (e.g., 2.4 and 2.5) and Current will link to
one, probably the last you installed.

The python executable is in the "bin" directory beneath that root
(which also holds external library scripts), and external library
python code will end up beneath lib/python2.5/site-packages from that
root.

So the first thing to be absolutely sure about is that when you want
to install packages like Twisted (or any distutils based package) into
your python 2.5.1 installation, you must be sure to run the python
2.5.1 executable.  You can do that by making sure the above paths are
in your default shell path, adding them temporarily, explicitly using
the full path to the executable or whatever you are comfortable with.

When in doubt, start python by whatever method you choose, and verify the
version number in the startup banner.

Once you are sure of your python executable, simplest is to start with
a full Twisted 2.5.0 archive (such as Twisted-2.5.0.tar.bz2).  Unpack
that into a convenient directory.

Twisted does depend on the zope.interface package.  It includes an
appropriate copy of that package in the archive, but you need to
install it yourself.  So switch into the zope.interface-3.3.0
directory, and from within there run "sudo python setup.py install",
again making sure that the python you are running are the one you want
to install into.

After you do that you can do the same "sudo python setup.py install"
from the top level of the unpacked archive and it will install all the
Twisted projects.  Or if you just want some (say TwistedCore and
TwistedWeb), you can switch individually into each of those project
directories and run setup.py from there manually.

That should be all there is to it.

-- David




From glyph at divmod.com  Fri Sep  7 00:02:21 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 07 Sep 2007 06:02:21 -0000
Subject: Twisted does NOT require Zope!!! (Re: [Twisted-Python] twistd doesn't
	work)
In-Reply-To: <6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
Message-ID: <20070907060221.5579.147950179.divmod.xquotient.419@joule.divmod.com>

On 05:36 am, langford.d at gmail.com wrote:
>  I did have the latest Twisted 2.5.0 installed. But I don't think i had 
>the
>latest python installed. I installed that and now python doesnt see 
>twisted.
>I downloaded the latest tarball again and when i tried to install it 
>(using
>python setup.py install) it tells me i need zope (which it didn't last
>time).

Twisted does not, has never, and *will* never require Zope.  It requires 
Zope Interface, which is a separate, isolated library used by, and 
developed for, Zope.  Get it here:

http://www.zope.org/Products/ZopeInterface

This is not the first time I've heard this misunderstanding.  How could 
we have more clearly worded the error message that you saw so that you'd 
notice that Zope Interface is not Zope?
>So i've downloaded the latest stable zope but it wont let me install 
>because
>it isn't supported by the latest version of python.

Download the latest Zope Interface from the URL above.  It's supported 
by Python 2.5, and it works fine.



From wthie at thiengineering.ch  Fri Sep  7 00:06:05 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Fri, 07 Sep 2007 08:06:05 +0200
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
Message-ID: <46E0EA4D.8090901@thiengineering.ch>

David

No need to install a full blown Zope, just install the interface package

http://www.zope.org/Products/ZopeInterface

On the Mac also make sure that you're path is set to the correct 
directories where twistd resides (usually in your Python installation in 
the Scripts subdirectory)

If you want to find 'something' on your machine, use find in a terminal 
window like

find / -name 'twistd' -print

If you want to look at your PATH variable

use $PATH or env

if you want to change your path, open a fresh terminal an enter

open .bash_profile

which should open the file with one of the text editors available

HTH, Werner



David Langford wrote:
> Hey
> 
>   I did have the latest Twisted 2.5.0 installed. But I don't think i had the
> latest python installed. I installed that and now python doesnt see twisted.
> I downloaded the latest tarball again and when i tried to install it (using
> python setup.py install) it tells me i need zope (which it didn't last
> time).
> 
> So i've downloaded the latest stable zope but it wont let me install because
> it isn't supported by the latest version of python.
> 
> And now i'm stuck, in worse position than before because now i don't even
> have twisted. I feel like these are extremely basic things i should now, is
> there a webpage or something that answers these problems i'im having?
> 
> Cheers
> 
> David
> 
> On 9/4/07, Chris Miles <miles.chris at gmail.com> wrote:
>> Hi David,
>>
>> Have you installed the Twisted 2.5.0 tarball from http://
>> twistedmatrix.com/trac/ ?
>>
>> If so, you should find the twistd command in the OS X Python bin dir,
>> which will usually be:
>>    /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
>> or
>>    /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd
>>
>> Cheers,
>> Chris
>>
>> On 4 Sep 2007, at 05:57, David Langford wrote:
>>
>>> Hey everyone
>>>
>>>   I'm going through the finger tutorial -> http://twistedmatrix.com/
>>> projects/core/documentation/howto/tutorial/intro.html . And at the
>>> end of the first section it talks about using the twistd command.
>>> Now it just plain doesn't work for me, telling me the command is
>>> not found. I'm using a macbook pro and i type the command into
>>> terminal.
>>>
>>>   Can anyone tell me what i'm doing wrong. Because the next section
>>> doesn't work (i'm assuming its related to my lack of twistd-ness)
>>>
>>>   I know this a n00bish question, and i've been searching for an
>>> answer, but everyone else seems to be able to get it working and no
>>> one mentions having problems. Then i thought maybee i have to
>>> download something extra for twisted, but a search of the site only
>>> returned tickets (bug tickets) instead of an actual search of the
>>> site.
>>>
>>>   Any help would be greatly appreciated
>>>
>>>  Lango
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From rasjidw at gmail.com  Fri Sep  7 01:21:59 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Fri, 7 Sep 2007 17:21:59 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
Message-ID: <bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>

On 9/6/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> I suggest you abandon Perspective Broker; it's a fully async protocol,
> and by trying to call it in a sync/blocking manner you're going to get
> nowhere fast.
>
> Use something easy like XMLRPC. Twisted can implement that as a server
> with full deferred-capable semantics, it'll run over HTTPS, it's got
> authentication, it's got .net bindings etc.

I have used XMLRPC in the past (until recently it was my main use of
Twisted), but it does not support complex objects, nor callbacks.  PB
does both, but just in an async manner.

I could use CORBA instead of PB, but then I'm likely to be in the
position where I want to learn Twisted and CORBA - I'd rather just
learn Twisted, as long as I can get it to play with Windows COM in the
way that I want.



From p.mayers at imperial.ac.uk  Fri Sep  7 03:34:45 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 07 Sep 2007 10:34:45 +0100
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>
Message-ID: <1189157685.3460.10.camel@localhost.localdomain>

On Fri, 2007-09-07 at 17:21 +1000, Rasjid Wilcox wrote:
> On 9/6/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> > I suggest you abandon Perspective Broker; it's a fully async protocol,
> > and by trying to call it in a sync/blocking manner you're going to get
> > nowhere fast.
> >
> > Use something easy like XMLRPC. Twisted can implement that as a server
> > with full deferred-capable semantics, it'll run over HTTPS, it's got
> > authentication, it's got .net bindings etc.
> 
> I have used XMLRPC in the past (until recently it was my main use of
> Twisted), but it does not support complex objects, 

Well, it an pass arrays and dictionaries; how much more complex can
objects actually get, unless you want callbacks?

> nor callbacks.  PB does both, but just in an async manner.

Ah. You want callbacks. ;o)

So, let me be be sure I've understood what you want:

windows client
 |
 \- VB process
    |
  <COM>
    |
    \- python COM component
            |
  <maybe Twisted in a thread>
            |
  <some kind of complex object/callback capable RMI>
            |
     /- Python object ----> another COM object
     |
 /- Twisted Process
 |
windows server

I have a hard time seeing why you wouldn't just use DCOM for this, but
anyway...

Is the python COM component on the client in-process or out of process?

I assume you have no issues creating and talking to the COM object on
the server?

Christopher Armstrong has already suggested looking at COM to see if it
can support "async" components; it's been a while, but I seem to recall
it can.

You'll still need to run the reactor in a thread of course.

> I could use CORBA instead of PB, but then I'm likely to be in the

I don't see how that would help you.

> position where I want to learn Twisted and CORBA - I'd rather just
> learn Twisted, as long as I can get it to play with Windows COM in the
> way that I want.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From rasjidw at gmail.com  Fri Sep  7 06:01:16 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Fri, 7 Sep 2007 22:01:16 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <1189157685.3460.10.camel@localhost.localdomain>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<bf82ea70709070021t6d04885cqc66df28e6456f608@mail.gmail.com>
	<1189157685.3460.10.camel@localhost.localdomain>
Message-ID: <bf82ea70709070501s10a92ad0g2f216fd2c7668c92@mail.gmail.com>

On 9/7/07, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> So, let me be be sure I've understood what you want:
>
> windows client
>  |
>  \- VB process
>     |
>   <COM>
>     |
>     \- python COM component
>             |
>   <maybe Twisted in a thread>
>             |
>   <some kind of complex object/callback capable RMI>
>             |
>      /- Python object ----> another COM object
>      |
>  /- Twisted Process
>  |
> windows server

That is pretty much it exactly!  :-)

> I have a hard time seeing why you wouldn't just use DCOM for this, but
> anyway...

Primarily because DCOM seems pretty fixed client -> server, whereas I
want to be able to send out a UDP multicast packet, discover which PCs
I wish to talk to, query a number of them, and then run some remote
methods.  And as indicated in your diagram above, the remote python
object may or may not be a COM object. The above arrangement also
allows the remote object to be running on a Linux box for example,
which is trickier (or at least more expensive) with DCOM.  I would
also consider running PB over SSL across the public internet, whereas
DCOM would have to be via a VPN.

The very long term goal is the gradual migration from VB to Python.
That is, gradually more all core code into Python, wraping Python code
up as COM objects so it can be used within the current program.  At
some point (might take a year or two) the VB program is nothing but a
front-end to Python code, at which point we could migrate the
front-end to wxPython or similar.  And at that point a migration from
Windows to Linux at least becomes a feasible option to contemplate.
Thus I have a long term motivation to avoid DCOM even if it was easier
in the first instance.

> Is the python COM component on the client in-process or out of process?

I have not decided that yet.  I have a feeling that out-of-process is
probably better in this case, but I'm still doing a fair bit of
research and learning on all this.

> I assume you have no issues creating and talking to the COM object on
> the server?

At the moment the 'server side' object in question is a Python object
that wraps up several COM objects and presents a much simpler
interface.

> Christopher Armstrong has already suggested looking at COM to see if it
> can support "async" components; it's been a while, but I seem to recall
> it can.

I believe it can, but the examples in win32com are a bit terse.

> You'll still need to run the reactor in a thread of course.

Yes!  And this is the part where I want some advice.  What are the
do's and don't of doing this?  And what are the most important things
I need to read / research?

Cheers,

Rasjid.



From andrewfr_ice at yahoo.com  Fri Sep  7 11:16:12 2007
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 7 Sep 2007 10:16:12 -0700 (PDT)
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <E1ITDyB-0000u6-W7@cube.twistedmatrix.com>
Message-ID: <295264.16669.qm@web34214.mail.mud.yahoo.com>

Hi Rasjid:

>I have read about Stackless, and it looks like it
>would be really fun to play with.  But I don't think
my employer would be keen to go as 'fringe' as
Stackless.

Once you get the swing of it, Stackless Python is
pretty fun... and powerful. Even more fun when one
figures out how to properly integrate Stackless Python
with Twisted. 

Anyhow I haven't played with the Perspective Broker
before. So I read the Bruce Eckel "Grokking Twisted"
article and wrote a simple example to illustrate how
to make Twisted inter-operate with Stackless. 

The essense of the solution is the approach Armstrong
takes in threadless.py.  I provide a bit more
syntactic sugaring: 

1) Use a proxy that slightly modifies the method
calls, mainly to hide the underlying deferred.

2) trigger a "TwistedException." 

example fragment:

   def execute(self, host, port):
        global flag
        
        factory = pb.PBClientFactory()
        log.msg("connecting")
        reactor.connectTCP(host, port, factory)
        log.msg("connected")
        
        try:
           perspective =
self.processor.getRootObject(factory)
           print "=>",
processor.calculate(perspective, 10, 20)
           flag = False
        
        except TwistedException:
            log.msg("A Twisted Exception was thrown")
            log.msg(sys.exc_info())

One of my long term goals is to standardise the
approach and auto generate proxies and exceptions as
to make Twisted safe for the average Stackless Python
programmer.

Cheers,
Andrew

P.S - reference
http://www.artima.com/weblogs/viewpost.jsp?thread=156396

PBServer.py - is Bruce Eckel's server slightly
modified.



       
____________________________________________________________________________________
Got a little couch potato? 
Check out fun summer activities for kids.
http://search.yahoo.com/search?fr=oni_on_mail&p=summer+activities+for+kids&cs=bz 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBExample.py
Type: text/x-python
Size: 2589 bytes
Desc: pat706081052
URL: </pipermail/twisted-python/attachments/20070907/063141da/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PBServer.py
Type: text/x-python
Size: 662 bytes
Desc: 2825570039-PBServer.py
URL: </pipermail/twisted-python/attachments/20070907/063141da/attachment-0005.py>

From konrads.smelkovs at gmail.com  Sat Sep  8 08:12:25 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sat, 8 Sep 2007 17:12:25 +0300
Subject: [Twisted-Python] How to ... in Conch?
Message-ID: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>

1) I want to invoke(exec) a command with arguments from a SSH Conch client.
The example suggests that arguments should be passed along with command, so
to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
arguments that have spaces? Should I slash-escape them?
2) How to obtain the retcode from an exec'ed command?

-- 
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070908/79403931/attachment.html>

From paulswartz at gmail.com  Sat Sep  8 08:39:58 2007
From: paulswartz at gmail.com (Paul Swartz)
Date: Sat, 8 Sep 2007 10:39:58 -0400
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
Message-ID: <324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>

On 9/8/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
> 1) I want to invoke(exec) a command with arguments from a SSH Conch client.
> The example suggests that arguments should be passed along with command, so
> to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
> arguments that have spaces? Should I slash-escape them?

Commands are executed with the -e argument of your shell.  You can
slash-escape spaces or quote them; either one should work.

> 2) How to obtain the retcode from an exec'ed command?

If the server supports it, it sends a 'exit-status' request to the
channel with a uint32 encoded exit code.  If it exits with a signal,
an 'exit-signal' message is sent with format:
    string signal name
    bool core dumped
    string error message
    string language

HTH,
-p



From exarkun at twistedmatrix.com  Sat Sep  8 22:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 09 Sep 2007 04:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1189310704.06.692639214@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-02 through 2007-09-09
Bugs opened: 19    Bugs closed: 7  Total open bugs: 1036 (+12)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +7  |Highest:  +1          |Core:   +7             
|Enhancement:  +7  |High:     +0          |Ftp:    -1             
|Task:         +1  |Normal:  +14          |Trial:  +3             
                                          |Vfs:    +6             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2811] eliminate shared mutable state from reactor implementations (opened by exarkun) (CLOSED, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2811

[#2821] create twistd plugin for vfs (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2821

[#1264] twisted.vfs.test.test_ftp is enough to drive a sane man mad (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/1264

                    ===== High =====
[#2822] deprecate twisted.python.reflect.filenameToModuleName so that it can be removed (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2822

                    ===== Normal =====
[#2812] cfreactor replacement using threadedselectreactor (opened by termie)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2812

[#2813] logstr initialization should happen before calling makeConnection in tcp.BaseClient (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2813

[#2814] bugfix in epollreactor.py: sometime event cann't be identified when connection is lost (opened by huyx) (CLOSED, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2814

[#2815] Update VFS backends to an async interface (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2815

[#2816] Port the vfs ftp adapter to new async backends (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2816

[#2817] Port the vfs sftp adapter to new async backends (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2817

[#2818] Port the vfs stream adapter to new async backends (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2818

[#2819] Delete old sync vfs code and cleanup (opened by cablehead)
    enhancement     vfs        http://twistedmatrix.com/trac/ticket/2819

[#2820] trial warning reporting uses print to stdout (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2820

[#2823] trial path/to/package// fails immediately with AssertionError (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2823

[#2824] spawnProcess and screen -D -m not getting along (opened by TTimo)
    defect          core       http://twistedmatrix.com/trac/ticket/2824

[#2825] reactors handle case where socket.fileno() returns -1 (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2825

[#2826] twisted.internet.tcp.Server.repstr wrong when listening on port 0 (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2826

[#2188] Trial catches exceptions during import (opened by jdahlin)
    defect          trial      http://twistedmatrix.com/trac/ticket/2188

[#2735] twisted.vfs.adapters.ftp._FileToConsumerAdapter doesn't fully implement IConsumer (opened by therve)
    defect          vfs        http://twistedmatrix.com/trac/ticket/2735



Closed Bugs
______________________
                    ===== Highest =====
[#1904] Passive port ranges are not settable in t.p.ftp (opened by krp, closed by therve, fixed)
    enhancement     ftp        http://twistedmatrix.com/trac/ticket/1904

[#2811] eliminate shared mutable state from reactor implementations (opened by exarkun, closed by exarkun, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2811

[#1264] twisted.vfs.test.test_ftp is enough to drive a sane man mad (opened by exarkun, closed by therve, )
    defect          core       http://twistedmatrix.com/trac/ticket/1264

                    ===== High =====
[#1223] vfs methods should always return deferreds (opened by cablehead, closed by cablehead, duplicate)
    defect          vfs        http://twistedmatrix.com/trac/ticket/1223

                    ===== Normal =====
[#2188] Trial catches exceptions during import (opened by jdahlin, closed by exarkun, )
    defect          trial      http://twistedmatrix.com/trac/ticket/2188

[#2814] bugfix in epollreactor.py: sometime event cann't be identified when connection is lost (opened by huyx, closed by therve, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2814

[#2735] twisted.vfs.adapters.ftp._FileToConsumerAdapter doesn't fully implement IConsumer (opened by therve, closed by therve, )
    defect          vfs        http://twistedmatrix.com/trac/ticket/2735



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2826] twisted.internet.tcp.Server.repstr wrong when listening on port 0 (since 2007-09-08 18:59:55).

Mean open ticket age: 511 days, 13:38:27.598094.
Median: 408 days, 23:27:57.886705.
Standard deviation: 400 days, 13:51:14.700782.
Interquartile range: 502 days, 7:38:45.

Mean time between ticket creation and ticket resolution: 120 days, 23:56:32.985168.
Median: 14 days, 8:13:35.
Standard deviation is 224 days, 18:24:36.530891.
The interquartile range is 127 days, 8:11:35.

Mean time spent in review: 64 days, 0:26:37.767588.
Median: 4 days, 0:03:10.
Standard deviation: 140 days, 6:05:08.850661.
Interquartile range: 29 days, 11:02:35.

Mean number of times a ticket is reviewed: 1.93571428571.
Median: 1
Standard deviation: 1.57000476623.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    18 unique ticket reporters
    6 unique ticket reviewers
    6 unique ticket resolvers
In the last 24 weeks,
    81 unique ticket reporters
    14 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    157 unique ticket reporters
    19 unique ticket reviewers
    27 unique ticket resolvers




From langford.d at gmail.com  Sun Sep  9 00:15:03 2007
From: langford.d at gmail.com (David Langford)
Date: Sun, 9 Sep 2007 16:15:03 +1000
Subject: [Twisted-Python] twistd doesn't work
In-Reply-To: <46E0EA4D.8090901@thiengineering.ch>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
	<46E0EA4D.8090901@thiengineering.ch>
Message-ID: <6b88fa900709082315p27ad078bifa623bfea800bf55@mail.gmail.com>

Thanks everyone for your help.

I have correctly reinstalled it and everything is working fine, including
the twistd command.

Thanks again for everyones help.

Cheers

David

On 9/7/07, Werner Thie <wthie at thiengineering.ch> wrote:
>
> David
>
> No need to install a full blown Zope, just install the interface package
>
> http://www.zope.org/Products/ZopeInterface
>
> On the Mac also make sure that you're path is set to the correct
> directories where twistd resides (usually in your Python installation in
> the Scripts subdirectory)
>
> If you want to find 'something' on your machine, use find in a terminal
> window like
>
> find / -name 'twistd' -print
>
> If you want to look at your PATH variable
>
> use $PATH or env
>
> if you want to change your path, open a fresh terminal an enter
>
> open .bash_profile
>
> which should open the file with one of the text editors available
>
> HTH, Werner
>
>
>
> David Langford wrote:
> > Hey
> >
> >   I did have the latest Twisted 2.5.0 installed. But I don't think i had
> the
> > latest python installed. I installed that and now python doesnt see
> twisted.
> > I downloaded the latest tarball again and when i tried to install it
> (using
> > python setup.py install) it tells me i need zope (which it didn't last
> > time).
> >
> > So i've downloaded the latest stable zope but it wont let me install
> because
> > it isn't supported by the latest version of python.
> >
> > And now i'm stuck, in worse position than before because now i don't
> even
> > have twisted. I feel like these are extremely basic things i should now,
> is
> > there a webpage or something that answers these problems i'im having?
> >
> > Cheers
> >
> > David
> >
> > On 9/4/07, Chris Miles <miles.chris at gmail.com> wrote:
> >> Hi David,
> >>
> >> Have you installed the Twisted 2.5.0 tarball from http://
> >> twistedmatrix.com/trac/ ?
> >>
> >> If so, you should find the twistd command in the OS X Python bin dir,
> >> which will usually be:
> >>    /Library/Frameworks/Python.framework/Versions/Current/bin/twistd
> >> or
> >>    /Library/Frameworks/Python.framework/Versions/2.4/bin/twistd
> >>
> >> Cheers,
> >> Chris
> >>
> >> On 4 Sep 2007, at 05:57, David Langford wrote:
> >>
> >>> Hey everyone
> >>>
> >>>   I'm going through the finger tutorial -> http://twistedmatrix.com/
> >>> projects/core/documentation/howto/tutorial/intro.html . And at the
> >>> end of the first section it talks about using the twistd command.
> >>> Now it just plain doesn't work for me, telling me the command is
> >>> not found. I'm using a macbook pro and i type the command into
> >>> terminal.
> >>>
> >>>   Can anyone tell me what i'm doing wrong. Because the next section
> >>> doesn't work (i'm assuming its related to my lack of twistd-ness)
> >>>
> >>>   I know this a n00bish question, and i've been searching for an
> >>> answer, but everyone else seems to be able to get it working and no
> >>> one mentions having problems. Then i thought maybee i have to
> >>> download something extra for twisted, but a search of the site only
> >>> returned tickets (bug tickets) instead of an actual search of the
> >>> site.
> >>>
> >>>   Any help would be greatly appreciated
> >>>
> >>>  Lango
> >>> _______________________________________________
> >>> Twisted-Python mailing list
> >>> Twisted-Python at twistedmatrix.com
> >>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070909/e6b9e240/attachment.html>

From langford.d at gmail.com  Sun Sep  9 03:06:14 2007
From: langford.d at gmail.com (David Langford)
Date: Sun, 9 Sep 2007 19:06:14 +1000
Subject: Twisted does NOT require Zope!!! (Re: [Twisted-Python] twistd
	doesn't work)
In-Reply-To: <20070907060221.5579.147950179.divmod.xquotient.419@joule.divmod.com>
References: <6b88fa900709032157s6a973b5byf4feab89c001bce0@mail.gmail.com>
	<C03EF834-F653-4F60-92C3-AAE20854788E@gmail.com>
	<6b88fa900709062236i12bb8227t17c095fc1f2f4009@mail.gmail.com>
	<20070907060221.5579.147950179.divmod.xquotient.419@joule.divmod.com>
Message-ID: <6b88fa900709090206g365dcda8gd77b9d828e0a8b3c@mail.gmail.com>

Hey

 I can't actually remember what the error message said. Maybee if you just
say, 'zope interface (this is different from zope)' . I think i was just
assuming the zope inferface came with the zope package.

Sorry i couldn't be more specific but i hope this helps.

Cheers

David

On 9/7/07, glyph at divmod.com <glyph at divmod.com> wrote:
>
> On 05:36 am, langford.d at gmail.com wrote:
> >  I did have the latest Twisted 2.5.0 installed. But I don't think i had
> >the
> >latest python installed. I installed that and now python doesnt see
> >twisted.
> >I downloaded the latest tarball again and when i tried to install it
> >(using
> >python setup.py install) it tells me i need zope (which it didn't last
> >time).
>
> Twisted does not, has never, and *will* never require Zope.  It requires
> Zope Interface, which is a separate, isolated library used by, and
> developed for, Zope.  Get it here:
>
> http://www.zope.org/Products/ZopeInterface
>
> This is not the first time I've heard this misunderstanding.  How could
> we have more clearly worded the error message that you saw so that you'd
> notice that Zope Interface is not Zope?
> >So i've downloaded the latest stable zope but it wont let me install
> >because
> >it isn't supported by the latest version of python.
>
> Download the latest Zope Interface from the URL above.  It's supported
> by Python 2.5, and it works fine.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070909/77667cbd/attachment.html>

From konrads.smelkovs at gmail.com  Sun Sep  9 06:08:43 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sun, 9 Sep 2007 15:08:43 +0300
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
	<324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
Message-ID: <d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>

Hello,

How to obtain the stderror?
chanel.SSHChannel has an interesting method extReceived, is it that?

On 9/8/07, Paul Swartz <paulswartz at gmail.com> wrote:
>
> On 9/8/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
> > 1) I want to invoke(exec) a command with arguments from a SSH Conch
> client.
> > The example suggests that arguments should be passed along with command,
> so
> > to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
> > arguments that have spaces? Should I slash-escape them?
>
> Commands are executed with the -e argument of your shell.  You can
> slash-escape spaces or quote them; either one should work.
>
> > 2) How to obtain the retcode from an exec'ed command?
>
> If the server supports it, it sends a 'exit-status' request to the
> channel with a uint32 encoded exit code.  If it exits with a signal,
> an 'exit-signal' message is sent with format:
>     string signal name
>     bool core dumped
>     string error message
>     string language
>
> HTH,
> -p
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070909/321e7a27/attachment.html>

From konrads.smelkovs at gmail.com  Sun Sep  9 06:53:53 2007
From: konrads.smelkovs at gmail.com (Konrads Smelkovs)
Date: Sun, 9 Sep 2007 15:53:53 +0300
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
	<324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
	<d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>
Message-ID: <d79700b90709090553x558da571s478783df1a5f6a57@mail.gmail.com>

I seem to have figured it out. Attached is a module with function
executeCommand that executes a single command, gathers input, output and
error code and returns it.
Comment at will.


On 9/9/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
>
> Hello,
>
> How to obtain the stderror?
> chanel.SSHChannel has an interesting method extReceived, is it that?
>
> On 9/8/07, Paul Swartz <paulswartz at gmail.com > wrote:
> >
> > On 9/8/07, Konrads Smelkovs < konrads.smelkovs at gmail.com> wrote:
> > > 1) I want to invoke(exec) a command with arguments from a SSH Conch
> > client.
> > > The example suggests that arguments should be passed along with
> > command, so
> > > to invoke 'ls -l', one would pass common.NS('ls -l'). What to do about
> > > arguments that have spaces? Should I slash-escape them?
> >
> > Commands are executed with the -e argument of your shell.  You can
> > slash-escape spaces or quote them; either one should work.
> >
> > > 2) How to obtain the retcode from an exec'ed command?
> >
> > If the server supports it, it sends a 'exit-status' request to the
> > channel with a uint32 encoded exit code.  If it exits with a signal,
> > an 'exit-signal' message is sent with format:
> >     string signal name
> >     bool core dumped
> >     string error message
> >     string language
> >
> > HTH,
> > -p
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Konrads Smelkovs
> Applied IT sorcery.
>



-- 
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070909/e55282ed/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sshcommand.py
Type: text/x-python
Size: 3921 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070909/e55282ed/attachment-0002.py>

From paulswartz at gmail.com  Sun Sep  9 08:12:20 2007
From: paulswartz at gmail.com (Paul Swartz)
Date: Sun, 9 Sep 2007 10:12:20 -0400
Subject: [Twisted-Python] How to ... in Conch?
In-Reply-To: <d79700b90709090553x558da571s478783df1a5f6a57@mail.gmail.com>
References: <d79700b90709080712h2d7ffac4jde5dc6b347cabeb9@mail.gmail.com>
	<324cfb540709080739k1cc93f4coa913948108ba0ff2@mail.gmail.com>
	<d79700b90709090508if0aac7g2843eb1ecdc1b83e@mail.gmail.com>
	<d79700b90709090553x558da571s478783df1a5f6a57@mail.gmail.com>
Message-ID: <324cfb540709090712j72a12c38qfeae2256e91fc5b1@mail.gmail.com>

On 9/9/07, Konrads Smelkovs <konrads.smelkovs at gmail.com> wrote:
> I seem to have figured it out. Attached is a module with function
> executeCommand that executes a single command, gathers input, output and
> error code and returns it.
> Comment at will.

A couple comments:
 * extReceived() should probably check that the data type is correct
(connection.EXTENDED_DATA_STDERR) and append the extended data rather
than overwriting the previous data.
 * closed() should check that self.exitcode is present.  Like I
mentioned earlier, if the process ends with a signal, the server will
send exit-signal.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.livejournal.com/
AIM: z3penguin



From adelagon at gmail.com  Sun Sep  9 20:28:58 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 10 Sep 2007 10:28:58 +0800
Subject: [Twisted-Python] epoll reactor in Twisted 2.50 tarball
Message-ID: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>

Hello guys,

I have to install Twisted 2.50 on our Ubuntu Dapper servers. The problem is
that I have to use the Twisted 2.50 tarball since Dapper apt repositories
only have Twisted 2.40. The installation went smoothly and my twisted
applications works except that when I try to run my scripts using the epoll
reactor (twistd -ny ./myscript -r epoll) I get this error.

Traceback (most recent call last):
  File "/usr/bin/twistd", line 21, in ?
    run()
  File "/usr/lib/python2.4/site-packages/twisted/scripts/twistd.py", line
27, in run
    app.run(runApp, ServerOptions)
  File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
374, in run
    config.parseOptions()
  File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
354, in parseOptions
    usage.Options.parseOptions(self, options)
  File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line 177,
in parseOptions
    self.__dispatch[optMangled](optMangled, arg)
  File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line 333,
in <lambda>
    fn = lambda name, value, m=method: m(value)
  File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
276, in opt_reactor
    installReactor(shortName)
  File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
line 80, in installReactor
    installer.install()
  File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
line 60, in install
    namedAny(self.moduleName).install()
  File "/usr/lib/python2.4/site-packages/twisted/python/reflect.py", line
357, in namedAny
    topLevelPackage = __import__(trialname)
  File "/usr/lib/python2.4/site-packages/twisted/internet/epollreactor.py",
line 22, in ?
    from twisted.python import _epoll
ImportError: cannot import name _epoll


On my workstation (LinuxMint 3.0), the epoll reactor works fine. The
difference is that I installed Twisted via apt-get. Thanks in advance for
anyone who can point me to the right way.

---
Alvin Delagon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070910/55302a46/attachment.html>

From adelagon at gmail.com  Mon Sep 10 02:53:39 2007
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 10 Sep 2007 16:53:39 +0800
Subject: [Twisted-Python] Re: epoll reactor in Twisted 2.50 tarball
In-Reply-To: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>
References: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>
Message-ID: <7a01f6c00709100153j6d326909tce11e2ab32bf4d2d@mail.gmail.com>

Just fixed it guys. Forgot to install python-dev first. ^_^


On 9/10/07, Alvin Delagon <adelagon at gmail.com> wrote:
>
> Hello guys,
>
> I have to install Twisted 2.50 on our Ubuntu Dapper servers. The problem
> is that I have to use the Twisted 2.50 tarball since Dapper apt
> repositories only have Twisted 2.40. The installation went smoothly and my
> twisted applications works except that when I try to run my scripts using
> the epoll reactor (twistd -ny ./myscript -r epoll) I get this error.
>
> Traceback (most recent call last):
>   File "/usr/bin/twistd", line 21, in ?
>     run()
>   File "/usr/lib/python2.4/site-packages/twisted/scripts/twistd.py", line
> 27, in run
>     app.run (runApp, ServerOptions)
>   File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
> 374, in run
>     config.parseOptions()
>   File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
> 354, in parseOptions
>     usage.Options.parseOptions(self, options)
>   File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line
> 177, in parseOptions
>     self.__dispatch[optMangled](optMangled, arg)
>   File "/usr/lib/python2.4/site-packages/twisted/python/usage.py", line
> 333, in <lambda>
>     fn = lambda name, value, m=method: m(value)
>   File "/usr/lib/python2.4/site-packages/twisted/application/app.py", line
> 276, in opt_reactor
>     installReactor(shortName)
>   File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
> line 80, in installReactor
>     installer.install()
>   File "/usr/lib/python2.4/site-packages/twisted/application/reactors.py",
> line 60, in install
>     namedAny(self.moduleName).install()
>   File "/usr/lib/python2.4/site-packages/twisted/python/reflect.py", line
> 357, in namedAny
>     topLevelPackage = __import__(trialname)
>   File
> "/usr/lib/python2.4/site-packages/twisted/internet/epollreactor.py", line
> 22, in ?
>     from twisted.python import _epoll
> ImportError: cannot import name _epoll
>
>
> On my workstation (LinuxMint 3.0), the epoll reactor works fine. The
> difference is that I installed Twisted via apt-get. Thanks in advance for
> anyone who can point me to the right way.
>
> ---
> Alvin Delagon
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070910/c3adf129/attachment.html>

From db3l.net at gmail.com  Mon Sep 10 01:39:32 2007
From: db3l.net at gmail.com (David Bolen)
Date: Mon, 10 Sep 2007 03:39:32 -0400
Subject: [Twisted-Python] Re: epoll reactor in Twisted 2.50 tarball
References: <7a01f6c00709091928t2d3282bl9094e2da0363a782@mail.gmail.com>
Message-ID: <m2abrvq897.fsf@valheru.db3l.homeip.net>

"Alvin Delagon" <adelagon at gmail.com> writes:

> I have to install Twisted 2.50 on our Ubuntu Dapper servers. The problem is
> that I have to use the Twisted 2.50 tarball since Dapper apt repositories
> only have Twisted 2.40. The installation went smoothly and my twisted
> applications works except that when I try to run my scripts using the epoll
> reactor (twistd -ny ./myscript -r epoll) I get this error.
> (...)

When you built Twisted (through the setup.py script) it will build the
epoll reactor if it can find the /usr/include/sys/epoll.h header file.
So you might check if that is present on the system where you built
Twisted.  If not, you're probably missing some development packages.

On my Ubuntu feisty system the file comes as part of the libc6-dev
package.

-- David




From rasjidw at gmail.com  Tue Sep 11 01:24:37 2007
From: rasjidw at gmail.com (Rasjid Wilcox)
Date: Tue, 11 Sep 2007 17:24:37 +1000
Subject: [Twisted-Python] Wrapping a Perspective
In-Reply-To: <60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
References: <E1ISxIR-00072k-TT@cube.twistedmatrix.com>
	<166356.42572.qm@web34203.mail.mud.yahoo.com>
	<bf82ea70709051910p7fcfb579p8abb51acc242268f@mail.gmail.com>
	<1189075873.8730.15.camel@doorstop.net.ic.ac.uk>
	<60ed19d40709060705oebd915fv12e7ffec8eb90d18@mail.gmail.com>
Message-ID: <bf82ea70709110024x10327122j1ebfd3b2b89f56f@mail.gmail.com>

On 9/7/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> Switching to XMLRPC won't change anything about his situation, the biggest
> problem being that his COM interface doesn't support callbacks (?).

Actually, on further research it looks like the Python COM
implementation does support callbacks, although it looks somewhat
complex.

> Rasjid: Being asynchronous on the server does not require being asynchronous
> on the client. Communication boundaries let you do that.

Got it.  :-)

I think I'm beginning to understand where the risks with threads are.
With threads, you can accidentally bypass the communication
boundaries, and code may mostly appear to work but randomly fail at
times.

Thanks to all for the responses.

Cheers,

Rasjid.



From natester at gmail.com  Tue Sep 11 17:51:51 2007
From: natester at gmail.com (Nathaniel Haggard)
Date: Tue, 11 Sep 2007 17:51:51 -0600
Subject: [Twisted-Python] trial on specific directory
Message-ID: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>

How do I tell trial to test the code in /mydir with the
/mydir/test/test_class1 instead testing the code from /lib/site-packages
like it does by default.

Thanks,
Nate
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070911/c21f2c4d/attachment.html>

From jml at mumak.net  Tue Sep 11 17:56:39 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 12 Sep 2007 09:56:39 +1000
Subject: [Twisted-Python] trial on specific directory
In-Reply-To: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
References: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
Message-ID: <d06a5cd30709111656q7d8626fcr8e3145354d7923c9@mail.gmail.com>

On 9/12/07, Nathaniel Haggard <natester at gmail.com> wrote:
> How do I tell trial to test the code in /mydir with the
> /mydir/test/test_class1 instead testing the code from /lib/site-packages
> like it does by default.
>

When given a module name, Trial looks in the Python path for that
module. You have two options:

1. Put mydir in the Python path before site-packages.
2. Give Trial a path to a directory, rather than a module.

jml



From wthie at thiengineering.ch  Wed Sep 12 00:28:38 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Wed, 12 Sep 2007 08:28:38 +0200
Subject: [Twisted-Python] trial on specific directory
In-Reply-To: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
References: <4adac7a30709111651u33d45eaayd98817a301902ae4@mail.gmail.com>
Message-ID: <46E78716.6060107@thiengineering.ch>

Usually I do it with a .pth file (appropirately named) in 
Lib/site-packages. Say for twisted I work with the svn checkout in
/home/proj/twisted while having a file called twisted.pth in 
Lib/site-packages with the single line content of

/home/proj/twisted

This way I do not have to install twisted every time I do a svn update.

For other path/package hacks see site.py in your local python installation.

HTH, Werner

Nathaniel Haggard wrote:
> How do I tell trial to test the code in /mydir with the
> /mydir/test/test_class1 instead testing the code from /lib/site-packages
> like it does by default.
> 
> Thanks,
> Nate
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From robert at gravina.com  Wed Sep 12 01:37:12 2007
From: robert at gravina.com (Robert Gravina)
Date: Wed, 12 Sep 2007 17:37:12 +1000
Subject: [Twisted-Python] Reconnecting PB Client
In-Reply-To: <24f63c200607131140v2706f24s673c3ccdbcbf4b1e@mail.gmail.com>
References: <24f63c200607131140v2706f24s673c3ccdbcbf4b1e@mail.gmail.com>
Message-ID: <89CDB3EE-F3C1-4B08-AFFC-2B72715154D9@gravina.com>


On Jul 14, 2006, at 4:40 AM, Don Smith wrote:

> Does anyone have some example code for building a reconnecting PB  
> client?


I'm trying to do something similar, and not sure where to begin.

The docs show how to make a reconnecting client when you define your  
own protocol, which might help as a starting point:
http://twistedmatrix.com/projects/core/documentation/howto/clients.html

Does anyone else have any idea how to do this with Perspective Broker?

Robert




From terry at jon.es  Wed Sep 12 03:50:15 2007
From: terry at jon.es (Terry Jones)
Date: Wed, 12 Sep 2007 11:50:15 +0200
Subject: [Twisted-Python] The Reactor
Message-ID: <18151.46679.301674.910659@terry.local>

Word leaks that the Google Reader coders call their back-end "Reactor".

  http://blogoscoped.com/archive/2007-09-11-n21.html

One wonders.

Terry



From bboerner at rgmadvisors.com  Wed Sep 12 08:03:04 2007
From: bboerner at rgmadvisors.com (Brendan Boerner)
Date: Wed, 12 Sep 2007 09:03:04 -0500
Subject: [Twisted-Python] Reconnecting PB Client
In-Reply-To: <89CDB3EE-F3C1-4B08-AFFC-2B72715154D9@gravina.com>
References: <24f63c200607131140v2706f24s673c3ccdbcbf4b1e@mail.gmail.com>
	<89CDB3EE-F3C1-4B08-AFFC-2B72715154D9@gravina.com>
Message-ID: <BE1BE911-D6E8-4E96-9CA6-4F04F20198EC@rgmadvisors.com>

On Jul 14, 2006, at 4:40 AM, Don Smith wrote:

 > Does anyone have some example code for building a reconnecting PB  
client?

I do something like this:

class Foo(object):

     # ...

     def connect(self):
         factory = FooMgrFactory()
         reactor.connectTCP(host, port, factory)
         return factory.getRootObject().addCallback 
(self._connected).addErrback(
             self._catchFailure)

     def _connected(self, rootObj):
         self.rootObj = rootObj
         rootObj.notifyOnDisconnect(self._disconnected)

     def _disconnected(self, rootObj):
         self.rootObj = None
         self.connected = False
	self.timer = reactor.callLater(defaultTimerDelay, self.connect)

     def doRemoteOp(self):
	try:
	    if self.rootObj: self.rootObj.callRemote("foo", arg).addCallback 
(self.fooreturn)
	    else: self.timer = reactor.callLater(defaultTimerDelay,  
self.connect)

	except pb.DeadReferenceError, e:
	    self.rootObj = None
	    self.timer = reactor.callLater(defaultTimerDelay, self.connect)

Please advise if this is not a preferred method.

Regards,
Brendan




From beau at subobscur.us  Wed Sep 12 15:06:50 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 12 Sep 2007 14:06:50 -0700 (PDT)
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
Message-ID: <388765.94865.qm@web707.biz.mail.mud.yahoo.com>

I started creating my services as twisted application plugins. When adding a second service as a plugin in the same directory as the first I get an error that the reactor was already installed. If I comment out the import of the reactor in one then I can start the other application. Neither the tutorial nor the source indicate what is going on except that it checks to see if a reactor is already installed at some point. What is the nuance here? Should I just go back to .tac files for these apps?





From exarkun at divmod.com  Wed Sep 12 15:26:29 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 12 Sep 2007 17:26:29 -0400
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the
	same directory?
In-Reply-To: <388765.94865.qm@web707.biz.mail.mud.yahoo.com>
Message-ID: <20070912212629.8162.1814446690.divmod.quotient.7831@ohm>

On Wed, 12 Sep 2007 14:06:50 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I started creating my services as twisted application plugins. When adding a second service as a plugin in the same directory as the first I get an error that the reactor was already installed. If I comment out the import of the reactor in one then I can start the other application. Neither the tutorial nor the source indicate what is going on except that it checks to see if a reactor is already installed at some point. What is the nuance here? Should I just go back to .tac files for these apps?

Could you describe what you're trying in a little more detail?  In particular,
I'm not sure if you're using mktap to create a tap file with multiple services,
if you're using the original plugin system (using tml files) or if you're using
the new plugin system (twisted.plugin).

Generally speaking, there's no problem running more than one service in a
single process.  A service is just an object which receives startup and
shutdown notification.  Anything beyond that is an application-specific
thing.

Jean-Paul



From beau at subobscur.us  Wed Sep 12 17:37:56 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 12 Sep 2007 16:37:56 -0700 (PDT)
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
Message-ID: <990407.67002.qm@web711.biz.mail.mud.yahoo.com>

I am using the new twisted/plugin setup. I am not using mktap. So, in my project directory (which is included in the syspath) I have a dir 'twisted/plugins' into which I am going to put each of the services/applications. I do not want them running in the same process because I want to be able to stop one without affecting the others. Some of the services process a lot of data from 80-100 simultaneous connections so I need to be able to use multiple processors on the machine. The directory structure looks something like this:

Project\
...project.py
...Processors\
......ProcessorX.py
......ProcessorY.py
...twisted\
......plugins\
.........Service1.py
.........Service2.py

For one of the services I want to use pollreactor or epollreactor, so each of the Services has only 4 lines in it:

from twisted.internet import pollreactor
pollreactor.install()
import Project.Processors.ProcessorX
theService = Project.Processors.ProcessorX.ProcXServiceMaker()

This all works great until I want to add a second service in the same manner. When I add the second service I get the error about the reactor already being installed. So 'twistd --help' will only list one of the services and scrolling up the screen one can see the error it spits out when it attempts to evaluate the second Service. If I start the first service, it finds it and then I comment out any reference to importing the reactor, then it will successfully evaluate the first AND second Service and allow me to start the second one.

This is the error that it spits out:

  File "/usr/lib/python2.5/site-packages/twisted/internet/pollreactor.py", line 183, in install
    main.installReactor(p)
  File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line 24, in installReactor
    "reactor already installed"
exceptions.AssertionError: reactor already installed

And sometimes it will be a random failure (which is probably a cache interaction). It seems to be the combination of reactors. If I install the pollreactor in one and the epollreactor in the other then it works, but only one time. Then I check again and it fails. It seems to be loading up all the plugins in the same context.

----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 12, 2007 2:26:29 PM
Subject: Re: [Twisted-Python] Multiple Twisted Application Plugins in the same directory?

On Wed, 12 Sep 2007 14:06:50 -0700 (PDT), Beau Hargis <beau at subobscur.us> wrote:
>I started creating my services as twisted application plugins. When adding a second service as a plugin in the same directory as the first I get an error that the reactor was already installed. If I comment out the import of the reactor in one then I can start the other application. Neither the tutorial nor the source indicate what is going on except that it checks to see if a reactor is already installed at some point. What is the nuance here? Should I just go back to .tac files for these apps?

Could you describe what you're trying in a little more detail?  In particular,
I'm not sure if you're using mktap to create a tap file with multiple services,
if you're using the original plugin system (using tml files) or if you're using
the new plugin system (twisted.plugin).

Generally speaking, there's no problem running more than one service in a
single process.  A service is just an object which receives startup and
shutdown notification.  Anything beyond that is an application-specific
thing.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From radix at twistedmatrix.com  Wed Sep 12 18:15:53 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 12 Sep 2007 20:15:53 -0400
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
In-Reply-To: <990407.67002.qm@web711.biz.mail.mud.yahoo.com>
References: <990407.67002.qm@web711.biz.mail.mud.yahoo.com>
Message-ID: <60ed19d40709121715v55449575gd877fc8c4536c1fc@mail.gmail.com>

On 9/12/07, Beau Hargis <beau at subobscur.us> wrote:
> For one of the services I want to use pollreactor or epollreactor, so each of the Services has only 4 lines in it:
>
> from twisted.internet import pollreactor
> pollreactor.install()
> import Project.Processors.ProcessorX
> theService = Project.Processors.ProcessorX.ProcXServiceMaker()

Don't install a reactor in the plugin: in fact, don't import the
reactor at all. The correct way to choose the reactor is by passing
the "-r" or "--reactor" argument to 'twistd', like 'twistd -r poll
myplugin'

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From beau at subobscur.us  Wed Sep 12 19:29:19 2007
From: beau at subobscur.us (Beau Hargis)
Date: Wed, 12 Sep 2007 18:29:19 -0700 (PDT)
Subject: [Twisted-Python] Multiple Twisted Application Plugins in the same
	directory?
Message-ID: <959724.76794.qm@web706.biz.mail.mud.yahoo.com>

That indeed worked. It did occur to me for a fleeting moment when I looked at the man page; however, when I ran 'twistd --help-reactors' it spit out nothing so I was not sure of exactly what it wanted or if it worked at all.

----- Original Message ----
From: Christopher Armstrong <radix at twistedmatrix.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, September 12, 2007 5:15:53 PM
Subject: Re: [Twisted-Python] Multiple Twisted Application Plugins in the same directory?

On 9/12/07, Beau Hargis <beau at subobscur.us> wrote:
> For one of the services I want to use pollreactor or epollreactor, so each of the Services has only 4 lines in it:
>
> from twisted.internet import pollreactor
> pollreactor.install()
> import Project.Processors.ProcessorX
> theService = Project.Processors.ProcessorX.ProcXServiceMaker()

Don't install a reactor in the plugin: in fact, don't import the
reactor at all. The correct way to choose the reactor is by passing
the "-r" or "--reactor" argument to 'twistd', like 'twistd -r poll
myplugin'

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python






From nadav at MIT.EDU  Thu Sep 13 22:58:12 2007
From: nadav at MIT.EDU (Nadav Aharony)
Date: Fri, 14 Sep 2007 00:58:12 -0400
Subject: [Twisted-Python] Transmit queue - how would I go at it?
Message-ID: <46EA14E4.8060408@mit.edu>

Hi,

I am working on an application where clients request files, and since 
each file is very large, the server ACKs the requests and then queues 
them to be served later, one at a time.
I am relatively new to Twisted and was wondering what would be the best 
way to approach this.

Here is what I came up with so far:

1) Use Deferred callbacks, and string together callbacks to a "file 
sender" function - once a file is sent, the function is called back with 
a pointer to the next file in line.
If I do so - is there some automatic garbage collection of the callbacks 
that have already been handled? (there may eventually be hundreds of 
files to be sent)
In this approach, would there be a natural way to check if a new request 
is actually a repeat of a previous request already queued?

2) Use some type of queue - where each new file request is queued, and 
some single function handles them one at at time (I guess with 
asynchronous callbacks to itself every time the transport layer is free 
to send another file and the queue is not empty).
Is there some queue structure like this in Twisted? I saw something 
called a DefferedQueue but could not find many examples or documentation 
about it and about its usage.

I mainly want to understand, from the "Twisted mindset"  which would be 
the the right way to go?
Also, say in the future I would want to implement priority queuing and 
handling of the requests rather than a FIFO - how would I do that in 
Twisted?

Any thoughts and/or code examples would be greatly appreciated
Thanks!
Nadav





-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070914/3ea09a9c/attachment.html>

From pablo at minimoesfuerzo.org  Fri Sep 14 01:37:31 2007
From: pablo at minimoesfuerzo.org (Pablo =?ISO-8859-1?Q?Mart=ED?=)
Date: Fri, 14 Sep 2007 09:37:31 +0200
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46EA14E4.8060408@mit.edu>
References: <46EA14E4.8060408@mit.edu>
Message-ID: <1189755451.12076.16.camel@satellite>


On Fri, 2007-09-14 at 00:58 -0400, Nadav Aharony wrote:
> Hi, 
> 
> I am working on an application where clients request files, and since
> each file is very large, the server ACKs the requests and then queues
> them to be served later, one at a time. 
> I am relatively new to Twisted and was wondering what would be the
> best way to approach this.

Hi Nadav,

I had a similar requirement with my application. You must offer an
asynchronous interface while dealing with each request synchronously. I
think that you should push your requests to a
twisted.internet.defer.DeferredQueue and process one at a time with the
aid of twisted.internet.defer.DeferredLock.
> 

If we consider that each of your petitions has an associated deferred
that will be called back when its finished:
(I haven't run this)

from twisted.internet import defer

class OneAtATime(object):
    def __init__(self):
        super(OneAtATime, self).__init__()
        self.queue = defer.DeferredQueue()
        self.lock = defer.DeferredLock()
        self.check_queue()

    def check_queue(self):
        self.queue.get().addCallback(self._process_one)
    
    def _process_one(self, petition):

        def acquire_cb(_):
            # do whatever with your petition
            # make sure that when you're done you call
            # self.lock.release() and self.check_queue()
            # on a state machine, this would be while transitioning
            # to the "idle" state
            pass

        self.lock.acquire().addCallback(acquire_cb)

    def queue_petition(self, petition):
        self.queue.put(petition)
        return petition.deferred

Regards,
Pablo
> 





From general at eepatents.com  Fri Sep 14 07:16:19 2007
From: general at eepatents.com (Ed Suominen)
Date: Fri, 14 Sep 2007 06:16:19 -0700
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46EA14E4.8060408@mit.edu>
References: <46EA14E4.8060408@mit.edu>
Message-ID: <46EA89A3.8050509@eepatents.com>

http://foss.eepatents.com/AsynQueue

Nadav Aharony wrote:
> Hi,
> 
> I am working on an application where clients request files, and since
> each file is very large, the server ACKs the requests and then queues
> them to be served later, one at a time.
> I am relatively new to Twisted and was wondering what would be the best
> way to approach this.




From stefan.arentz at gmail.com  Sat Sep 15 06:41:34 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Sat, 15 Sep 2007 14:41:34 +0200
Subject: [Twisted-Python] XML-RPC Service with Database Access
Message-ID: <adf34c300709150541t6592caf9sba6354844da02b60@mail.gmail.com>

I'm interested in using Twisted for a simple XML-RPC service that
needs to talk to either PostgreSQL or MySQL. (I would prefer PG).

I've got the XML-RPC part under control, that is fairly simple with
Twisted Web. But what would I use for the database part? What is
generally the easy way to do database access with Twisted?

Are there ORM solutions that are compatible with Twisted? It would be
nice if I could use something like SQLObject instead of raw queries.

I'm not looking for a complete solution here. Just trying to
understand what is usually done in Twisted land.

 S.



From stefan.arentz at gmail.com  Sat Sep 15 06:42:11 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Sat, 15 Sep 2007 14:42:11 +0200
Subject: [Twisted-Python] Cometd?
In-Reply-To: <46DFD3F2.4010002@point45.com>
References: <adf34c300709060248g34464947sf5b9a6aafc2fc6ea@mail.gmail.com>
	<46DFD3F2.4010002@point45.com>
Message-ID: <adf34c300709150542t1eae798dvd83ef5507af8d6e3@mail.gmail.com>

On 9/6/07, Mark Leonard <mwl at point45.com> wrote:
> Stefan Arentz wrote:
>  > Has anyone done any work in the area of cometd? I'm interested in
>  > using twisted for a cometd load tester. If there is already code that
>  > I can build on that would be great.
>
> I don't know if you've seen this yet:
> http://svn.xantus.org/shortbus/trunk/cometd-twisted/
>
> Cometd server and client using Twisted. I've only glanced at it thus
> far, but the client is something you might be able to build on.

Thanks for that link Mark. It looks promising and I will hack on that
code soon. Probably both client and server.

 S.



From exarkun at divmod.com  Sat Sep 15 07:12:33 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 15 Sep 2007 09:12:33 -0400
Subject: [Twisted-Python] XML-RPC Service with Database Access
In-Reply-To: <adf34c300709150541t6592caf9sba6354844da02b60@mail.gmail.com>
Message-ID: <20070915131233.8162.1015941086.divmod.quotient.9093@ohm>

On Sat, 15 Sep 2007 14:41:34 +0200, Stefan Arentz <stefan.arentz at gmail.com> wrote:
>I'm interested in using Twisted for a simple XML-RPC service that
>needs to talk to either PostgreSQL or MySQL. (I would prefer PG).
>
>I've got the XML-RPC part under control, that is fairly simple with
>Twisted Web. But what would I use for the database part? What is
>generally the easy way to do database access with Twisted?
>
>Are there ORM solutions that are compatible with Twisted? It would be
>nice if I could use something like SQLObject instead of raw queries.
>
>I'm not looking for a complete solution here. Just trying to
>understand what is usually done in Twisted land.
>

The only solution bundled with Twisted is twisted.enterprise.adbapi (well,
you might see some other stuff in twisted.enterprise, but I wouldn't suggest
using any of it).  adbapi is a very simple asynchronous interpretation of
DB-API.

This isn't anything like the ORM solution you were hoping for, though.
So far as I understand it, the typical API presented by an ORM is quite
unfriendly toward integration with a Twisted-style application.  Someone
else may know of some work which has been done to address this.

For what it's worth, I do use an ORM with Twisted applications (Axiom) -
but I use it only with SQLite: it presents a synchronous API, blocking for
as long as necessary to satisfy a query, which is typically not long enough
to be problematic for my applications.

Jean-Paul



From Andy at NewWorldElectric.com  Sat Sep 15 08:58:57 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Sat, 15 Sep 2007 10:58:57 -0400
Subject: [Twisted-Python] XML-RPC Service with Database Access
In-Reply-To: <20070915131233.8162.1015941086.divmod.quotient.9093@ohm>
References: <adf34c300709150541t6592caf9sba6354844da02b60@mail.gmail.com>
	<20070915131233.8162.1015941086.divmod.quotient.9093@ohm>
Message-ID: <37d49ed40709150758uce780d5l1ea074ea7064c054@mail.gmail.com>

I've been having some luck with sAsync(http://foss.eepatents.com/sAsync/)
which gives a limited subset of the SQL Alchemy API with a twisted
compatible interface.

Andy Fundinger

On 9/15/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Sat, 15 Sep 2007 14:41:34 +0200, Stefan Arentz <stefan.arentz at gmail.com>
> wrote:
> >I'm interested in using Twisted for a simple XML-RPC service that
> >needs to talk to either PostgreSQL or MySQL. (I would prefer PG).
> >
> >I've got the XML-RPC part under control, that is fairly simple with
> >Twisted Web. But what would I use for the database part? What is
> >generally the easy way to do database access with Twisted?
> >
> >Are there ORM solutions that are compatible with Twisted? It would be
> >nice if I could use something like SQLObject instead of raw queries.
> >
> >I'm not looking for a complete solution here. Just trying to
> >understand what is usually done in Twisted land.
> >
>
> The only solution bundled with Twisted is twisted.enterprise.adbapi (well,
> you might see some other stuff in twisted.enterprise, but I wouldn't
> suggest
> using any of it).  adbapi is a very simple asynchronous interpretation of
> DB-API.
>
> This isn't anything like the ORM solution you were hoping for, though.
> So far as I understand it, the typical API presented by an ORM is quite
> unfriendly toward integration with a Twisted-style application.  Someone
> else may know of some work which has been done to address this.
>
> For what it's worth, I do use an ORM with Twisted applications (Axiom) -
> but I use it only with SQLite: it presents a synchronous API, blocking for
> as long as necessary to satisfy a query, which is typically not long
> enough
> to be problematic for my applications.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070915/385a219b/attachment.html>

From nadav at MIT.EDU  Sat Sep 15 21:41:27 2007
From: nadav at MIT.EDU (Nadav Aharony)
Date: Sat, 15 Sep 2007 23:41:27 -0400
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46EA89A3.8050509@eepatents.com>
References: <46EA14E4.8060408@mit.edu> <46EA89A3.8050509@eepatents.com>
Message-ID: <46ECA5E7.8000405@mit.edu>

Thanks Ed!

This could be relevant to several places in the code I'm working on.

Regards,
Nadav

Ed Suominen wrote:
> http://foss.eepatents.com/AsynQueue
>
> Nadav Aharony wrote:
>   
>> Hi,
>>
>> I am working on an application where clients request files, and since
>> each file is very large, the server ACKs the requests and then queues
>> them to be served later, one at a time.
>> I am relatively new to Twisted and was wondering what would be the best
>> way to approach this.
>>     
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070915/9f772977/attachment.html>

From nadav at MIT.EDU  Sat Sep 15 21:36:37 2007
From: nadav at MIT.EDU (Nadav Aharony)
Date: Sat, 15 Sep 2007 23:36:37 -0400
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <1189755451.12076.16.camel@satellite>
References: <46EA14E4.8060408@mit.edu> <1189755451.12076.16.camel@satellite>
Message-ID: <46ECA4C5.7080801@mit.edu>

Thanks Pablo!
this looks pretty clear and neat, I'll try it out.

Just one newbie question - is the "_"  in "acquire_cb(_)"  just a 
placeholder for my own parameters, or does it have an actual meaning?
I've never seen this done in python before, and couldn't find other 
examples for it online...

Cheers,
Nadav


Pablo Martí wrote:
> On Fri, 2007-09-14 at 00:58 -0400, Nadav Aharony wrote:
>   
>> Hi, 
>>
>> I am working on an application where clients request files, and since
>> each file is very large, the server ACKs the requests and then queues
>> them to be served later, one at a time. 
>> I am relatively new to Twisted and was wondering what would be the
>> best way to approach this.
>>     
>
> Hi Nadav,
>
> I had a similar requirement with my application. You must offer an
> asynchronous interface while dealing with each request synchronously. I
> think that you should push your requests to a
> twisted.internet.defer.DeferredQueue and process one at a time with the
> aid of twisted.internet.defer.DeferredLock.
>   
>
> If we consider that each of your petitions has an associated deferred
> that will be called back when its finished:
> (I haven't run this)
>
> from twisted.internet import defer
>
> class OneAtATime(object):
>     def __init__(self):
>         super(OneAtATime, self).__init__()
>         self.queue = defer.DeferredQueue()
>         self.lock = defer.DeferredLock()
>         self.check_queue()
>
>     def check_queue(self):
>         self.queue.get().addCallback(self._process_one)
>     
>     def _process_one(self, petition):
>
>         def acquire_cb(_):
>             # do whatever with your petition
>             # make sure that when you're done you call
>             # self.lock.release() and self.check_queue()
>             # on a state machine, this would be while transitioning
>             # to the "idle" state
>             pass
>
>         self.lock.acquire().addCallback(acquire_cb)
>
>     def queue_petition(self, petition):
>         self.queue.put(petition)
>         return petition.deferred
>
> Regards,
> Pablo
>   
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070915/4e81d145/attachment.html>

From exarkun at twistedmatrix.com  Sat Sep 15 22:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Sep 2007 04:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1189915503.41.1179702994@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-09 through 2007-09-16
Bugs opened: 6    Bugs closed: 5  Total open bugs: 1037 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:  +1       |Highest:  -2          |Core:   +0             
                   |Normal:   +3          |Mail:   +1             
                                          |Names:  -1             
                                          |Web2:   +0             
                                          |Words:  +1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2830] string exc_value special case in Failure.__init__ misses cases (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2830

[#2831] twisted.test.test_tcp.AddressTestCase.testBuildProtocol is buggy and overly complex (opened by exarkun) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2831

                    ===== Normal =====
[#2827] calling IConnector.disconnect() from a connectSSL does not disconnect if remote end is silent (opened by matthubb)
    defect          core       http://twistedmatrix.com/trac/ticket/2827

[#2828] xmlstream.IQ shouldn't create timeout deferreds for every IQ (opened by jack)
    defect          words      http://twistedmatrix.com/trac/ticket/2828

[#2829] twisted.web2.client.http, fixed (opened by synx) (CLOSED, invalid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2829

[#2832] twisted.mail.test.test_smtp.TimeoutTestCase.testSMTPClient fails intermittently due to timing issues (opened by exarkun)
    defect          mail       http://twistedmatrix.com/trac/ticket/2832



Closed Bugs
______________________
                    ===== Highest =====
[#1730] twisted.test.test_tcp.HalfClose3TestCase.testReadNotificationRaises fails intermittently (opened by radix, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1730

[#2831] twisted.test.test_tcp.AddressTestCase.testBuildProtocol is buggy and overly complex (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2831

[#2807] twisted.mail.relaymanager.MXCalculator._cbMX raises unhandled IndexError for response with no answers (opened by exarkun, closed by exarkun, fixed)
    defect          names      http://twistedmatrix.com/trac/ticket/2807

[#2830] string exc_value special case in Failure.__init__ misses cases (opened by exarkun, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2830

                    ===== Normal =====
[#2829] twisted.web2.client.http, fixed (opened by synx, closed by glyph, invalid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2829



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2832] twisted.mail.test.test_smtp.TimeoutTestCase.testSMTPClient fails intermittently due to timing issues (since 2007-09-12 10:55:56).

Mean open ticket age: 517 days, 14:21:27.445920.
Median: 415 days, 23:27:03.233770.
Standard deviation: 401 days, 0:49:47.008297.
Interquartile range: 502 days, 16:56:16.

Mean time between ticket creation and ticket resolution: 120 days, 22:26:58.101251.
Median: 14 days, 8:13:35.
Standard deviation is 224 days, 16:16:14.995707.
The interquartile range is 127 days, 2:42:46.

Mean time spent in review: 64 days, 4:15:36.993554.
Median: 4 days, 0:03:10.
Standard deviation: 141 days, 14:18:03.262941.
Interquartile range: 29 days, 2:08:35.

Mean number of times a ticket is reviewed: 1.93882352941.
Median: 1
Standard deviation: 1.56762046109.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    20 unique ticket reporters
    4 unique ticket reviewers
    5 unique ticket resolvers
In the last 24 weeks,
    82 unique ticket reporters
    13 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    157 unique ticket reporters
    18 unique ticket reviewers
    26 unique ticket resolvers




From pablo at minimoesfuerzo.org  Sun Sep 16 04:27:10 2007
From: pablo at minimoesfuerzo.org (Pablo =?ISO-8859-1?Q?Mart=ED?=)
Date: Sun, 16 Sep 2007 12:27:10 +0200
Subject: [Twisted-Python] Transmit queue - how would I go at it?
In-Reply-To: <46ECA4C5.7080801@mit.edu>
References: <46EA14E4.8060408@mit.edu> <1189755451.12076.16.camel@satellite>
	<46ECA4C5.7080801@mit.edu>
Message-ID: <1189938430.6467.2.camel@satellite>


On Sat, 2007-09-15 at 23:36 -0400, Nadav Aharony wrote:
> Thanks Pablo!
> this looks pretty clear and neat, I'll try it out.
> 
> Just one newbie question - is the "_"  in "acquire_cb(_)"  just a
> placeholder for my own parameters, or does it have an actual meaning?
> I've never seen this done in python before, and couldn't find other
> examples for it online...

It is just a convention for cases where you're not interested in the
argument ( DeferredLock.release() returns a reference of the lock )

Regards,
Pablo
> 
> 
> Pablo Martí wrote: 
> > On Fri, 2007-09-14 at 00:58 -0400, Nadav Aharony wrote:
> >   
> > > Hi, 
> > > 
> > > I am working on an application where clients request files, and since
> > > each file is very large, the server ACKs the requests and then queues
> > > them to be served later, one at a time. 
> > > I am relatively new to Twisted and was wondering what would be the
> > > best way to approach this.
> > >     
> > 
> > Hi Nadav,
> > 
> > I had a similar requirement with my application. You must offer an
> > asynchronous interface while dealing with each request synchronously. I
> > think that you should push your requests to a
> > twisted.internet.defer.DeferredQueue and process one at a time with the
> > aid of twisted.internet.defer.DeferredLock.
> >   
> > 
> > If we consider that each of your petitions has an associated deferred
> > that will be called back when its finished:
> > (I haven't run this)
> > 
> > from twisted.internet import defer
> > 
> > class OneAtATime(object):
> >     def __init__(self):
> >         super(OneAtATime, self).__init__()
> >         self.queue = defer.DeferredQueue()
> >         self.lock = defer.DeferredLock()
> >         self.check_queue()
> > 
> >     def check_queue(self):
> >         self.queue.get().addCallback(self._process_one)
> >     
> >     def _process_one(self, petition):
> > 
> >         def acquire_cb(_):
> >             # do whatever with your petition
> >             # make sure that when you're done you call
> >             # self.lock.release() and self.check_queue()
> >             # on a state machine, this would be while transitioning
> >             # to the "idle" state
> >             pass
> > 
> >         self.lock.acquire().addCallback(acquire_cb)
> > 
> >     def queue_petition(self, petition):
> >         self.queue.put(petition)
> >         return petition.deferred
> > 
> > Regards,
> > Pablo
> >   
> > 
> > 
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >   
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sun Sep 16 09:25:27 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 16 Sep 2007 11:25:27 -0400
Subject: [Twisted-Python] Who's using Gtk reactor?
In-Reply-To: 0
Message-ID: <20070916152527.8162.2038325160.divmod.quotient.9644@ohm>

Greetings,

As part of the work I've been doing to fix a bug in epoll reactor's handling
of "unclean" tcp disconnection (the case which gives ConnectionLost instead
of ConnectionDone), I've noticed that gtk reactor also doesn't handle this
case correctly.  Anyone who has looked at gtkreactor.py probably knows this
(there's a big comment in _readAndWrite, so whoever wrote it in the first
place realized what they were doing).

Before I fixed epoll reactor, I added a test for this case.  Gtk reactor
won't be able to pass this test, since it doesn't provide the correct
functionality.  I'm not going to fix gtk reactor, since glib2 or gtk2
reactor is really what people should be using these days.  However, if
someone else is interested in fixing gtk reactor, the fix would be happily
accepted (the hard part is done, since the unit test is written already ;).
If no one is interested in fixing it, though, then I think this is a good
time to start thinking about deprecating gtk reactor and eventually removing
it.

Anyone have any thoughts on this?

Jean-Paul



From itamar at itamarst.org  Mon Sep 17 07:23:22 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 17 Sep 2007 09:23:22 -0400
Subject: [Twisted-Python] Who's using Gtk reactor? (Gtk 1.x reactor)
In-Reply-To: <20070916152527.8162.2038325160.divmod.quotient.9644@ohm>
References: <20070916152527.8162.2038325160.divmod.quotient.9644@ohm>
Message-ID: <1190035402.28172.9.camel@localhost.localdomain>

On Sun, 2007-09-16 at 11:25 -0400, Jean-Paul Calderone wrote:
> Greetings,
> 
> As part of the work I've been doing to fix a bug in epoll reactor's handling
> of "unclean" tcp disconnection (the case which gives ConnectionLost instead
> of ConnectionDone), I've noticed that gtk reactor also doesn't handle this
> case correctly.

Just to clarify, JP is talking about the reactor for the long
unmaintained Gtk 1.x library, last released in 2001. Modern Gtk and
Gnome programs use Gtk 2.x for which Twisted provides the gtk2 and glib2
reactors.




From nicholas.mattiello at gmail.com  Tue Sep 18 13:03:11 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Tue, 18 Sep 2007 15:03:11 -0400
Subject: [Twisted-Python] cannot access svn repo
Message-ID: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>

hello,

I am trying to check out from the svn repository, but it keeps refusing me,
even when i run the svn co command on the downloads page.

svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk


svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused

any help would be appreciated, thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070918/42c0105c/attachment.html>

From exarkun at divmod.com  Tue Sep 18 15:41:00 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 18 Sep 2007 17:41:00 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
Message-ID: <20070918214100.8162.1206813516.divmod.quotient.11013@ohm>

On Tue, 18 Sep 2007 15:03:11 -0400, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>hello,
>
>I am trying to check out from the svn repository, but it keeps refusing me,
>even when i run the svn co command on the downloads page.
>
>svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk
>
>
>svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
>
>any help would be appreciated, thanks.
>

Seems to be working now, for me:

$ telnet svn.twistedmatrix.com 3690
Trying 198.49.126.131...
Connected to svn.twistedmatrix.com.
Escape character is '^]'.
( success ( 1 2 ( ANONYMOUS ) ( edit-pipeline svndiff1 absent-entries ) ) ) ^]c

telnet> c
Connection closed.

Jean-Paul



From fred.trotter at gmail.com  Tue Sep 18 16:35:24 2007
From: fred.trotter at gmail.com (Fred Trotter)
Date: Tue, 18 Sep 2007 18:35:24 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a day
Message-ID: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>

Hello,
         I am new to python and I am potentially interested in writing
a new protocol with Twisted.  However I wanted to start with a simpler
problem that I have been working on, so that I can understand better
how twisted works.

        A particular client wants to enforce a home page for the first
internet connection each day. They have a intranet portal that gives
messages to employees and they want to be sure that each employee, no
matter how they have their homepage set, will see the messages the
first time they connect. After the first connection they want the
proxy to simply forward requests to the internet without filtering.

        Since I need to understand this issue for my other project
too, how do I get the python loop do one thing based on a "new day"
for an IP address and then do something else after that action has
been completed. Example code that addresses my problem would be great,
but I would be happy to have links to examples that do this...

Thanks!!

-- 
Fred Trotter
http://www.fredtrotter.com



From Andy at NewWorldElectric.com  Tue Sep 18 20:00:01 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Tue, 18 Sep 2007 22:00:01 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a
	day
In-Reply-To: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
Message-ID: <37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.com>

I'm not sure if this is the level you need an answer on, but I would put a
dictionary in the proxy keyed by IP address and with a value of the last
time that user was forced to the intranet site.  Check that against the
current time and a 16 hour offset and send a redirect message if it's out of
date.  Hoping someone else chimes in with how to stick a redirect into a
proxy, glancing at the code I'm not sure how to tell you to do that, though
it's clearly possible.

Andy Fundinger

On 9/18/07, Fred Trotter <fred.trotter at gmail.com> wrote:
>
> Hello,
>          I am new to python and I am potentially interested in writing
> a new protocol with Twisted.  However I wanted to start with a simpler
> problem that I have been working on, so that I can understand better
> how twisted works.
>
>         A particular client wants to enforce a home page for the first
> internet connection each day. They have a intranet portal that gives
> messages to employees and they want to be sure that each employee, no
> matter how they have their homepage set, will see the messages the
> first time they connect. After the first connection they want the
> proxy to simply forward requests to the internet without filtering.
>
>         Since I need to understand this issue for my other project
> too, how do I get the python loop do one thing based on a "new day"
> for an IP address and then do something else after that action has
> been completed. Example code that addresses my problem would be great,
> but I would be happy to have links to examples that do this...
>
> Thanks!!
>
> --
> Fred Trotter
> http://www.fredtrotter.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070918/8d04620a/attachment.html>

From drew.smathers at gmail.com  Tue Sep 18 22:12:45 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 19 Sep 2007 00:12:45 -0400
Subject: [Twisted-Python] twisted.trial and test discovery
Message-ID: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>

Maybe a dead horse, but there was some prior discussion on nose vs.
trial in Feb:

http://twistedmatrix.com/pipermail/twisted-python/2007-February/014771.html

I like trial a lot (both for Twisted and non-Twisted applications -
heck I've even tested [gasp] Java applications with it).  The only
somewhat interesting feature of nose (vs. trial) I've found is test
discovery.  Is test discovery a planned feature for trial?

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From jml at mumak.net  Wed Sep 19 00:02:27 2007
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 19 Sep 2007 16:02:27 +1000
Subject: [Twisted-Python] twisted.trial and test discovery
In-Reply-To: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
References: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
Message-ID: <d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>

On 9/19/07, Drew Smathers <drew.smathers at gmail.com> wrote:
> Maybe a dead horse, but there was some prior discussion on nose vs.
> trial in Feb:
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-February/014771.html
>
> I like trial a lot (both for Twisted and non-Twisted applications -
> heck I've even tested [gasp] Java applications with it).  The only
> somewhat interesting feature of nose (vs. trial) I've found is test
> discovery.  Is test discovery a planned feature for trial?
>

I'm not sure I understand. Trial already does test discovery. "trial
yourpackage" will find all the test cases in your package.

jml



From daniel.cuesta at iavante.es  Wed Sep 19 04:26:22 2007
From: daniel.cuesta at iavante.es (Daniel de la Cuesta)
Date: Wed, 19 Sep 2007 12:26:22 +0200
Subject: [Twisted-Python] Control the number of parallel system calls
Message-ID: <46F0F94E.5040104@iavante.es>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070919/a54f2a7d/attachment.html>

From miles.chris at gmail.com  Wed Sep 19 04:57:26 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Wed, 19 Sep 2007 11:57:26 +0100
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <B2D0FF98-A3C1-4E67-97BC-656A1F9360F2@gmail.com>

I've done something very similar.  I control the number of concurrent  
child processes by simply keeping a counter of how many are active at  
any one time.  The main loop that polls a queue will only accept new  
jobs if the counter is less than the configuration-defined limit.

I didn't find anything Twisted-specific to limit the number of forked  
processes, but it was easy to implement in my own logic.

Cheers,
Chris

On 19 Sep 2007, at 11:26, Daniel de la Cuesta wrote:

> Hi,
>
> I am developing a video conversion server. To process the video  
> conversion I use the method "getProcessOutput" to call "ffmpeg".
>
> The user upload the video using a HTTP POST and each video must be  
> converted to 8 or 10 output formats.
>
> Currently, all the conversions for each video are processed in  
> parallel, what I want to do is to control the number of parallel  
> system calls to "ffmpeg". For example I only want 2 processes at  
> the same time and when one of them finishes the next process start.
>
> How can I do that?
>
> Is there any function in Twisted that implements that?
>
> Thank you
>



From andrew-twisted at puzzling.org  Wed Sep 19 05:20:23 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 19 Sep 2007 21:20:23 +1000
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <20070919112023.GC13607@steerpike.home.puzzling.org>

Daniel de la Cuesta wrote:
> Hi,
> 
> I am developing a video conversion server. To process the video conversion I
> use the method "getProcessOutput" to call "ffmpeg".
> 
> The user upload the video using a HTTP POST and each video must be converted to
> 8 or 10 output formats.
> 
> Currently, all the conversions for each video are processed in parallel, what I
> want to do is to control the number of parallel system calls to "ffmpeg". For
> example I only want 2 processes at the same time and when one of them finishes
> the next process start.
> 
> How can I do that?
> 
> Is there any function in Twisted that implements that?

The obvious way to do that would be using a
twisted.internet.defer.DeferredSemaphore.

-Andrew.




From miles.chris at gmail.com  Wed Sep 19 05:44:50 2007
From: miles.chris at gmail.com (Chris Miles)
Date: Wed, 19 Sep 2007 12:44:50 +0100
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <B2D0FF98-A3C1-4E67-97BC-656A1F9360F2@gmail.com>
References: <46F0F94E.5040104@iavante.es>
	<B2D0FF98-A3C1-4E67-97BC-656A1F9360F2@gmail.com>
Message-ID: <AF13894C-5107-43DD-98AE-7735172CA5F1@gmail.com>

In fact the code I use to perform concurrent processing from a disk- 
based request queue is available here,
http://www.psychofx.com/directory_queue_service/

Feedback welcome.

Cheers,
Chris Miles

On 19 Sep 2007, at 11:57, Chris Miles wrote:

> I've done something very similar.  I control the number of  
> concurrent child processes by simply keeping a counter of how many  
> are active at any one time.  The main loop that polls a queue will  
> only accept new jobs if the counter is less than the configuration- 
> defined limit.
>
> I didn't find anything Twisted-specific to limit the number of  
> forked processes, but it was easy to implement in my own logic.
>
> Cheers,
> Chris
>
> On 19 Sep 2007, at 11:26, Daniel de la Cuesta wrote:
>
>> Hi,
>>
>> I am developing a video conversion server. To process the video  
>> conversion I use the method "getProcessOutput" to call "ffmpeg".
>>
>> The user upload the video using a HTTP POST and each video must be  
>> converted to 8 or 10 output formats.
>>
>> Currently, all the conversions for each video are processed in  
>> parallel, what I want to do is to control the number of parallel  
>> system calls to "ffmpeg". For example I only want 2 processes at  
>> the same time and when one of them finishes the next process start.
>>
>> How can I do that?
>>
>> Is there any function in Twisted that implements that?
>>
>> Thank you
>>




From nicholas.mattiello at gmail.com  Wed Sep 19 08:04:34 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 10:04:34 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
Message-ID: <26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>

[nmattiello at megatron ~]$ svn co
svn://svn.twistedmatrix.com/svn/Twisted/trunk
svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
[nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
Trying 198.49.126.131...
telnet: connect to address 198.49.126.131: Connection refused
telnet: Unable to connect to remote host: Connection refused

what could be wrong?

On 9/18/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Tue, 18 Sep 2007 15:03:11 -0400, Nicholas Mattiello <
> nicholas.mattiello at gmail.com> wrote:
> >hello,
> >
> >I am trying to check out from the svn repository, but it keeps refusing
> me,
> >even when i run the svn co command on the downloads page.
> >
> >svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk
> >
> >
> >svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
> >
> >any help would be appreciated, thanks.
> >
>
> Seems to be working now, for me:
>
> $ telnet svn.twistedmatrix.com 3690
> Trying 198.49.126.131...
> Connected to svn.twistedmatrix.com.
> Escape character is '^]'.
> ( success ( 1 2 ( ANONYMOUS ) ( edit-pipeline svndiff1 absent-entries ) )
> ) ^]c
>
> telnet> c
> Connection closed.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070919/2beb0f3b/attachment.html>

From terry at jon.es  Wed Sep 19 08:21:08 2007
From: terry at jon.es (Terry Jones)
Date: Wed, 19 Sep 2007 16:21:08 +0200
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: Your message at 10:04:34 on Wednesday, 19 September 2007
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
Message-ID: <18161.12372.917774.925390@terry.local>

Hi Nicholas

| [nmattiello at megatron ~]$ svn co svn://svn.twistedmatrix.com/svn/Twisted/trunk

This works fine for me too.

| svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
| [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
| Trying 198.49.126.131...
| telnet: connect to address 198.49.126.131: Connection refused
| telnet: Unable to connect to remote host: Connection refused
| 
| what could be wrong?

Firewall?

Terry



From exarkun at divmod.com  Wed Sep 19 08:22:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 19 Sep 2007 10:22:20 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
Message-ID: <20070919142220.8162.2110983728.divmod.quotient.11374@ohm>

On Wed, 19 Sep 2007 10:04:34 -0400, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>[nmattiello at megatron ~]$ svn co
>svn://svn.twistedmatrix.com/svn/Twisted/trunk
>svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
>[nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
>Trying 198.49.126.131...
>telnet: connect to address 198.49.126.131: Connection refused
>telnet: Unable to connect to remote host: Connection refused
>
>what could be wrong?
>

Could your ISP be blocking outgoing connections?

Jean-Paul



From ldanielburr at mac.com  Wed Sep 19 08:31:29 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Wed, 19 Sep 2007 09:31:29 -0500
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
Message-ID: <op.tywnyrjg3oj628@l-daniel-burrs-computer.local>

On Wed, 19 Sep 2007 09:04:34 -0500, Nicholas Mattiello  
<nicholas.mattiello at gmail.com> wrote:

> [nmattiello at megatron ~]$ svn co
> svn://svn.twistedmatrix.com/svn/Twisted/trunk
> svn: Can't connect to host 'svn.twistedmatrix.com': Connection refused
> [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> Trying 198.49.126.131...
> telnet: connect to address 198.49.126.131: Connection refused
> telnet: Unable to connect to remote host: Connection refused
>
> what could be wrong?

I just tried to connect, and I get this:

svn checkout svn://svn.twistedmatrix.com/svn/Twisted/trunk foobar

[long list of files omitted]

Checked out revision 21295.

So things appear to be fine over on the svn server; do you have a firewall  
running?

L. Daniel Burr




From nicholas.mattiello at gmail.com  Wed Sep 19 08:51:03 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 10:51:03 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <18161.12372.917774.925390@terry.local>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
Message-ID: <26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>

im seeing that packets arrive and are sent back from 198.49.126.131, which
is the svn server.  if its a firewall issue, why would the server actively
refuse my connection?  wouldnt the packets not even make it through to the
server if it was a firewall issue?

On 9/19/07, Terry Jones <terry at jon.es> wrote:
>
> Hi Nicholas
>
> | [nmattiello at megatron ~]$ svn co
> svn://svn.twistedmatrix.com/svn/Twisted/trunk
>
> This works fine for me too.
>
> | svn: Can't connect to host 'svn.twistedmatrix.com ': Connection refused
> | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> | Trying 198.49.126.131...
> | telnet: connect to address 198.49.126.131: Connection refused
> | telnet: Unable to connect to remote host: Connection refused
> |
> | what could be wrong?
>
> Firewall?
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070919/ace1447a/attachment.html>

From nicholas.mattiello at gmail.com  Wed Sep 19 08:52:23 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 10:52:23 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
Message-ID: <26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>

either way ill check out the network configuration here at my company, see
if ports are closed or whatever.

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> im seeing that packets arrive and are sent back from 198.49.126.131, which
> is the svn server.  if its a firewall issue, why would the server actively
> refuse my connection?  wouldnt the packets not even make it through to the
> server if it was a firewall issue?
>
> On 9/19/07, Terry Jones <terry at jon.es> wrote:
> >
> > Hi Nicholas
> >
> > | [nmattiello at megatron ~]$ svn co
> > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> >
> > This works fine for me too.
> >
> > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > refused
> > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > | Trying 198.49.126.131...
> > | telnet: connect to address 198.49.126.131: Connection refused
> > | telnet: Unable to connect to remote host: Connection refused
> > |
> > | what could be wrong?
> >
> > Firewall?
> >
> > Terry
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070919/e732d5cc/attachment.html>

From nicholas.mattiello at gmail.com  Wed Sep 19 09:03:57 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 11:03:57 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
	<26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
Message-ID: <26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>

just realized the url scheme is svn://  firewall might actually be an issue,
most svn repos we use are http://

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> either way ill check out the network configuration here at my company, see
> if ports are closed or whatever.
>
> On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> >
> > im seeing that packets arrive and are sent back from 198.49.126.131,
> > which is the svn server.  if its a firewall issue, why would the server
> > actively refuse my connection?  wouldnt the packets not even make it through
> > to the server if it was a firewall issue?
> >
> > On 9/19/07, Terry Jones <terry at jon.es> wrote:
> > >
> > > Hi Nicholas
> > >
> > > | [nmattiello at megatron ~]$ svn co
> > > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> > >
> > > This works fine for me too.
> > >
> > > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > > refused
> > > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > > | Trying 198.49.126.131...
> > > | telnet: connect to address 198.49.126.131: Connection refused
> > > | telnet: Unable to connect to remote host: Connection refused
> > > |
> > > | what could be wrong?
> > >
> > > Firewall?
> > >
> > > Terry
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070919/3467dabc/attachment.html>

From nicholas.mattiello at gmail.com  Wed Sep 19 09:03:57 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 11:03:57 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
	<26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
Message-ID: <26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>

just realized the url scheme is svn://  firewall might actually be an issue,
most svn repos we use are http://

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> either way ill check out the network configuration here at my company, see
> if ports are closed or whatever.
>
> On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> >
> > im seeing that packets arrive and are sent back from 198.49.126.131,
> > which is the svn server.  if its a firewall issue, why would the server
> > actively refuse my connection?  wouldnt the packets not even make it through
> > to the server if it was a firewall issue?
> >
> > On 9/19/07, Terry Jones <terry at jon.es> wrote:
> > >
> > > Hi Nicholas
> > >
> > > | [nmattiello at megatron ~]$ svn co
> > > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> > >
> > > This works fine for me too.
> > >
> > > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > > refused
> > > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > > | Trying 198.49.126.131...
> > > | telnet: connect to address 198.49.126.131: Connection refused
> > > | telnet: Unable to connect to remote host: Connection refused
> > > |
> > > | what could be wrong?
> > >
> > > Firewall?
> > >
> > > Terry
> > >
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070919/3467dabc/attachment-0001.html>

From drew.smathers at gmail.com  Wed Sep 19 09:44:34 2007
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 19 Sep 2007 11:44:34 -0400
Subject: [Twisted-Python] twisted.trial and test discovery
In-Reply-To: <d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>
References: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
	<d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>
Message-ID: <368574aa0709190844xf9cb833y672c55a29f8e2285@mail.gmail.com>

> I'm not sure I understand. Trial already does test discovery. "trial
> yourpackage" will find all the test cases in your package.

Yes, I know.  It will not pick up doctests defined in plain text files
(mymod.txt - like you see frequently in zope projects) or in doc
strings from my experiments.  Of course, this is just me being lazy  -
especially for doctests inside of modules where I can make a trivial
test_doc module to collect these:

from myproject import web, auth, i18n
__doctests__ = [ web, auth, i18n ]

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
               d.p.s



From nicholas.mattiello at gmail.com  Wed Sep 19 10:11:20 2007
From: nicholas.mattiello at gmail.com (Nicholas Mattiello)
Date: Wed, 19 Sep 2007 12:11:20 -0400
Subject: [Twisted-Python] cannot access svn repo
In-Reply-To: <26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>
References: <26c6d6b10709181203m75fdd2c7nd198b862b59d5ad1@mail.gmail.com>
	<20070918214100.8162.1206813516.divmod.quotient.11013@ohm>
	<26c6d6b10709190704i2920cfci24cec316f5ce467e@mail.gmail.com>
	<18161.12372.917774.925390@terry.local>
	<26c6d6b10709190751v6b5beda5ge7b38c68cbbe545b@mail.gmail.com>
	<26c6d6b10709190752h50999cer1c237ef7a7f5d670@mail.gmail.com>
	<26c6d6b10709190803u7e9ba537wc808bf6401d3571b@mail.gmail.com>
Message-ID: <26c6d6b10709190911ra64a5dbqb2374e6ae1b74c3f@mail.gmail.com>

ok i went into a conference room that had an unfiltered t1 and it worked.
sorry for bothering, thanks.

On 9/19/07, Nicholas Mattiello <nicholas.mattiello at gmail.com> wrote:
>
> just realized the url scheme is svn://  firewall might actually be an
> issue, most svn repos we use are http://
>
> On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> >
> > either way ill check out the network configuration here at my company,
> > see if ports are closed or whatever.
> >
> > On 9/19/07, Nicholas Mattiello < nicholas.mattiello at gmail.com> wrote:
> > >
> > > im seeing that packets arrive and are sent back from 198.49.126.131,
> > > which is the svn server.  if its a firewall issue, why would the server
> > > actively refuse my connection?  wouldnt the packets not even make it through
> > > to the server if it was a firewall issue?
> > >
> > > On 9/19/07, Terry Jones <terry at jon.es> wrote:
> > > >
> > > > Hi Nicholas
> > > >
> > > > | [nmattiello at megatron ~]$ svn co
> > > > svn://svn.twistedmatrix.com/svn/Twisted/trunk
> > > >
> > > > This works fine for me too.
> > > >
> > > > | svn: Can't connect to host ' svn.twistedmatrix.com ': Connection
> > > > refused
> > > > | [nmattiello at megatron ~]$ telnet svn.twistedmatrix.com 3690
> > > > | Trying 198.49.126.131...
> > > > | telnet: connect to address 198.49.126.131: Connection refused
> > > > | telnet: Unable to connect to remote host: Connection refused
> > > > |
> > > > | what could be wrong?
> > > >
> > > > Firewall?
> > > >
> > > > Terry
> > > >
> > > > _______________________________________________
> > > > Twisted-Python mailing list
> > > > Twisted-Python at twistedmatrix.com
> > > > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > > >
> > >
> > >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070919/e1437977/attachment.html>

From matt at pollenation.net  Wed Sep 19 11:42:20 2007
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 19 Sep 2007 18:42:20 +0100
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <46F15F7C.6090906@pollenation.net>

Daniel de la Cuesta wrote:
> Hi,
> 
> I am developing a video conversion server. To process the video
> conversion I use the method "getProcessOutput" to call "ffmpeg".
> 
> The user upload the video using a HTTP POST and each video must be
> converted to 8 or 10 output formats.
> 
> Currently, all the conversions for each video are processed in parallel,
> what I want to do is to control the number of parallel system calls to
> "ffmpeg". For example I only want 2 processes at the same time and when
> one of them finishes the next process start.
> 
> How can I do that?
> 
> Is there any function in Twisted that implements that?
> 
> Thank you


I wrote something similar to what you want some time ago, although I
don't think I ever actually used it in the end. See attached module.

I included a __main__ section in the module that hopefully demonstrates
its use. Note that it was written as a Service so it needs starting,
hence the strange delayed call to startService before the reactor is run.

Basically, the thing is a service that makes the normal getProcessOutput
and getProcessValue utilities available. However, the execution requests
are queued and the maximum number of processes allowed to run is limited.

Hope it helps.

- Matt
-------------- next part --------------
A non-text attachment was scrubbed...
Name: service.py
Type: text/x-python
Size: 1656 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20070919/c3bd9ae0/attachment-0002.py>

From andy at thecablelounge.com  Wed Sep 19 12:05:06 2007
From: andy at thecablelounge.com (Andy Gayton)
Date: Wed, 19 Sep 2007 11:05:06 -0700
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <46F0F94E.5040104@iavante.es>
References: <46F0F94E.5040104@iavante.es>
Message-ID: <46F164D2.7040901@thecablelounge.com>

Daniel de la Cuesta wrote:
> Hi,
> 
> I am developing a video conversion server. To process the video 
> conversion I use the method "getProcessOutput" to call "ffmpeg".
> 
> The user upload the video using a HTTP POST and each video must be 
> converted to 8 or 10 output formats.
> 
> Currently, all the conversions for each video are processed in parallel, 
> what I want to do is to control the number of parallel system calls to 
> "ffmpeg". For example I only want 2 processes at the same time and when 
> one of them finishes the next process start.
> 
> How can I do that?
> 
> Is there any function in Twisted that implements that?

Hey Daniel,

There's a semaphore convenience in twisted.internet.defer - which can be 
used to control the number of things which have concurrent access to .. 
something.

You could make that something your function which launches a system 
call, with something like:

     s = defer.DeferredSemaphore(2)
     dlist = [
         s.run(encodeToFormat, video, format)
             for format in formats]
     d = defer.gatherResults(dlist)
     return d

cheers,
Andy.






From general at eepatents.com  Wed Sep 19 12:50:38 2007
From: general at eepatents.com (Ed Suominen)
Date: Wed, 19 Sep 2007 11:50:38 -0700
Subject: [Twisted-Python] Control the number of parallel system calls
In-Reply-To: <20070919112023.GC13607@steerpike.home.puzzling.org>
References: <46F0F94E.5040104@iavante.es>
	<20070919112023.GC13607@steerpike.home.puzzling.org>
Message-ID: <46F16F7E.10303@eepatents.com>

Andrew Bennetts wrote:
> Daniel de la Cuesta wrote:
>> Hi,
>>
>> I am developing a video conversion server. To process the video conversion I
>> use the method "getProcessOutput" to call "ffmpeg".
>>
>> The user upload the video using a HTTP POST and each video must be converted to
>> 8 or 10 output formats.
>>
>> Currently, all the conversions for each video are processed in parallel, what I
>> want to do is to control the number of parallel system calls to "ffmpeg". For
>> example I only want 2 processes at the same time and when one of them finishes
>> the next process start.
>>
>> How can I do that?
>>
>> Is there any function in Twisted that implements that?
> 
> The obvious way to do that would be using a
> twisted.internet.defer.DeferredSemaphore.

Or http://foss.eepatents.com/AsynQueue ... :-)



From jml at mumak.net  Wed Sep 19 17:50:50 2007
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 20 Sep 2007 09:50:50 +1000
Subject: [Twisted-Python] twisted.trial and test discovery
In-Reply-To: <368574aa0709190844xf9cb833y672c55a29f8e2285@mail.gmail.com>
References: <368574aa0709182112g74a125e5ob9c3c3c5400dcd7f@mail.gmail.com>
	<d06a5cd30709182302o1ea455a5l1259a7e02fc78f5d@mail.gmail.com>
	<368574aa0709190844xf9cb833y672c55a29f8e2285@mail.gmail.com>
Message-ID: <d06a5cd30709191650t478d9d75o68545c3ad747c84a@mail.gmail.com>

On 9/20/07, Drew Smathers <drew.smathers at gmail.com> wrote:
> > I'm not sure I understand. Trial already does test discovery. "trial
> > yourpackage" will find all the test cases in your package.
>
> Yes, I know.  It will not pick up doctests defined in plain text files
> (mymod.txt - like you see frequently in zope projects) or in doc
> strings from my experiments.  Of course, this is just me being lazy  -
> especially for doctests inside of modules where I can make a trivial
> test_doc module to collect these:
>
> from myproject import web, auth, i18n
> __doctests__ = [ web, auth, i18n ]
>

In this case, Trial follows the principle that "explicit is better
than implicit". Rather than treating every random snippet of text as a
potential doctest, it's reasonable that documents have be *declared*
as executable.

If you want to do something a little more automated than assigning
things to __doctest__, Trial lets you hook into the test discovery
system by defining a 'test_suite' method in your module. This allows
you to customize your test discovery for your project.

jml



From wthie at thiengineering.ch  Thu Sep 20 05:39:58 2007
From: wthie at thiengineering.ch (Werner Thie)
Date: Thu, 20 Sep 2007 13:39:58 +0200
Subject: [Twisted-Python] 2006, 'MySQL server has gone away' 
Message-ID: <46F25C0E.90101@thiengineering.ch>

Hi all

While using mySQL V 5.0.33 and MySQL-python-1.2.2 with twisted/adbapi 
with the following connection params

DB_DRIVER = "MySQLdb"
DB_ARGS = {
     'host': 'xxx.xxx.xxx.xxx',
     'db': 'db',
     'user': 'dbuser',
     'passwd': 'dbpasswd'
     }

I noticed (2006, 'MySQL server has gone away') errors, which seem to be 
not recoverable from an adbapi standpoint.

Further analysis and reading the mySQL manual showed, that the mySQL 
server in versions > 5 seems to close open connections after (default) 8 
hours. The reconnect feature of the db is disabled by default and there 
is no parameter to preset it via MySQL-python.

Further digging brought up this link

http://sourceforge.net/tracker/index.php?func=detail&aid=1483074&group_id=22307&atid=374934

which patches the (also 1.2.2) version such, that a reconnect keyword is 
introduced in the DB_ARGS.

Questions:
- are there any adverse effects in applying this patch and setting 
reconnect: 1 in DB_ARGS?

- is there a better, safer way to avoid this nasty error?

Thxs, Werner



From exarkun at divmod.com  Thu Sep 20 06:11:06 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Sep 2007 08:11:06 -0400
Subject: [Twisted-Python] Who's using Gtk reactor? (Gtk 1.x reactor)
In-Reply-To: <1190035402.28172.9.camel@localhost.localdomain>
Message-ID: <20070920121106.8162.950096718.divmod.quotient.11833@ohm>

On Mon, 17 Sep 2007 09:23:22 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Sun, 2007-09-16 at 11:25 -0400, Jean-Paul Calderone wrote:
>> Greetings,
>>
>> As part of the work I've been doing to fix a bug in epoll reactor's handling
>> of "unclean" tcp disconnection (the case which gives ConnectionLost instead
>> of ConnectionDone), I've noticed that gtk reactor also doesn't handle this
>> case correctly.
>
>Just to clarify, JP is talking about the reactor for the long
>unmaintained Gtk 1.x library, last released in 2001. Modern Gtk and
>Gnome programs use Gtk 2.x for which Twisted provides the gtk2 and glib2
>reactors.
>

Thanks for that clarification.  Since there's been no response thus far, I've
created a ticket to deprecate the reactor - #2833.  This will probably happen
before Twisted 2.6.  Any other discussion should probably be directed at that
ticket.

Jean-Paul



From m.hubbard at imperial.ac.uk  Thu Sep 20 07:08:54 2007
From: m.hubbard at imperial.ac.uk (Matt Hubbard)
Date: Thu, 20 Sep 2007 14:08:54 +0100
Subject: [Twisted-Python] Web Proxy that does something different once
	a day
In-Reply-To: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
Message-ID: <46F270E6.2040209@imperial.ac.uk>

Fred Trotter wrote:
> Hello,
>          I am new to python and I am potentially interested in writing
> a new protocol with Twisted.  However I wanted to start with a simpler
> problem that I have been working on, so that I can understand better
> how twisted works.
> 
>         A particular client wants to enforce a home page for the first
> internet connection each day. They have a intranet portal that gives
> messages to employees and they want to be sure that each employee, no
> matter how they have their homepage set, will see the messages the
> first time they connect. After the first connection they want the
> proxy to simply forward requests to the internet without filtering.
> 
>         Since I need to understand this issue for my other project
> too, how do I get the python loop do one thing based on a "new day"
> for an IP address and then do something else after that action has
> been completed. Example code that addresses my problem would be great,
> but I would be happy to have links to examples that do this...

Fred,

To effectively achieve what you've outlined is really quite involved, and the answer to your question is heavily tied to the implementation.

You will be controlling access by clients to the internet. You will make that decision based essentially three factors:
- Client IP Address making access request.
- When the client IP address last accessed what version of the Required Reading.
- What is the current version of the Required Reading / when did it renew.

In order to provide some example code, the frame work of the implementation needs to be known.

Cheers,
Matt.



From phil at bubblehouse.org  Thu Sep 20 08:01:17 2007
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 20 Sep 2007 10:01:17 -0400
Subject: [Twisted-Python] 2006, 'MySQL server has gone away' 
In-Reply-To: <46F25C0E.90101@thiengineering.ch>
References: <46F25C0E.90101@thiengineering.ch>
Message-ID: <0E0A5677-408F-4A77-A257-C543FF70C6B0@bubblehouse.org>

On Sep 20, 2007, at 7:39 AM, Werner Thie wrote:

> Hi all
>
> While using mySQL V 5.0.33 and MySQL-python-1.2.2 with twisted/ 
> adbapi with the following connection params
[snip snip snip]
> I noticed (2006, 'MySQL server has gone away') errors, which seem  
> to be not recoverable from an adbapi standpoint.
[snip snip snip]
> Questions:
> - are there any adverse effects in applying this patch and setting  
> reconnect: 1 in DB_ARGS?
>
> - is there a better, safer way to avoid this nasty error?
>
> Thxs, Werner

I believe this is what the 'cp_reconnect' keyword argument to the  
ConnectionPool constructor does.

I'm currently using this feature with MySQL 5 in a long-running  
webapp, with much success.

-phil



From Geraldjohn.M.Manipon at jpl.nasa.gov  Thu Sep 20 10:14:11 2007
From: Geraldjohn.M.Manipon at jpl.nasa.gov (Gerald John M. Manipon)
Date: Thu, 20 Sep 2007 09:14:11 -0700
Subject: [Twisted-Python] Can a deferred catch a segmentation fault?
Message-ID: <46F29C53.1050406@jpl.nasa.gov>

Hi,

I'm using deferToThread to run some python code which may or may not
be safe.  In particular, the code may load some modules that could
seg fault.  In this case, deferToThread won't work and the python
process will bomb so I was wondering what Defer strategy I could
use to handle this situation:

from twisted.internet import threads, reactor

def segFaultFunc():
     import binning #this will seg fault
     return True

def myCb(res):
     print "Got", res
     reactor.stop()

d = threads.deferToThread(segFaultFunc)
d.addCallback(myCb)

reactor.run()

Any help on this is greatly appreciated.

Thanks,

Gerald




From exarkun at divmod.com  Thu Sep 20 10:28:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 20 Sep 2007 12:28:31 -0400
Subject: [Twisted-Python] Can a deferred catch a segmentation fault?
In-Reply-To: <46F29C53.1050406@jpl.nasa.gov>
Message-ID: <20070920162831.8162.422442884.divmod.quotient.11901@ohm>

On Thu, 20 Sep 2007 09:14:11 -0700, "Gerald John M. Manipon" <geraldjohn.m.manipon at jpl.nasa.gov> wrote:
>Hi,
>
>I'm using deferToThread to run some python code which may or may not
>be safe.  In particular, the code may load some modules that could
>seg fault.  In this case, deferToThread won't work and the python
>process will bomb so I was wondering what Defer strategy I could
>use to handle this situation:

Deferreds don't do anything which will directly help in this situation.
If your process receives a signal for which the action is to exit, then
it will exit.  If you want, you can change the action associated with
certain signals (even SIGSEGV).  What action you *do* cause to happen
in such a case is independent of Deferreds.  You could, conceivably,
turn a segfault into an exception and then errback a Deferred.  However,
I wouldn't actually recommend this.  I would recommend not using software
which segfaults, fixing segfault bugs you find in software you are
using, and having comprehensive unit tests so that if something is
going to segfault, it does so during the course of development, not
on whatever server or client machines your software is deployed to.

Jean-Paul



From andreas at kostyrka.org  Thu Sep 20 11:50:44 2007
From: andreas at kostyrka.org (Andreas Kostyrka)
Date: Thu, 20 Sep 2007 19:50:44 +0200
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation fault ?
Message-ID: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>

Setting up such signal handler wouldn't be trivial (as in unsafe). The "normal" thing in such a situation is to longjmp (in C) or to let the process to die (which is the safe thing to do),

Now presuming that you cannot fix the segfaults (which as sad it sounds is quite common when using commercial 3rd party DLLs. Practice shows that being even a huge customer often get a quick turn around on bugs especially if its a hard to reproduce random crash. Driver DLLs for hardware costing $10K upwards come to mind, *shudder*), your only safe way is to isolate the driver usage into a seperate process. (If you are unlucky not even that is enough because some hardware gets stuck in a state that needs manual cold reseting, but let's be optimistic here).

With a seperate process, you can restart it should it die.

Andreas  

-- Ursprüngl. Mitteil. --
Betreff:	Re: [Twisted-Python] Can a deferred catch a segmentation fault?
Von:	Jean-Paul Calderone <exarkun at divmod.com>
Datum:		20.09.2007 16:34

On Thu, 20 Sep 2007 09:14:11 -0700, "Gerald John M. Manipon" <geraldjohn.m.manipon at jpl.nasa.gov> wrote:
>Hi,
>
>I'm using deferToThread to run some python code which may or may not
>be safe.  In particular, the code may load some modules that could
>seg fault.  In this case, deferToThread won't work and the python
>process will bomb so I was wondering what Defer strategy I could
>use to handle this situation:

Deferreds don't do anything which will directly help in this situation.
If your process receives a signal for which the action is to exit, then
it will exit.  If you want, you can change the action associated with
certain signals (even SIGSEGV).  What action you *do* cause to happen
in such a case is independent of Deferreds.  You could, conceivably,
turn a segfault into an exception and then errback a Deferred.  However,
I wouldn't actually recommend this.  I would recommend not using software
which segfaults, fixing segfault bugs you find in software you are
using, and having comprehensive unit tests so that if something is
going to segfault, it does so during the course of development, not
on whatever server or client machines your software is deployed to.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From general at eepatents.com  Thu Sep 20 12:26:05 2007
From: general at eepatents.com (Ed Suominen)
Date: Thu, 20 Sep 2007 11:26:05 -0700
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation
	fault ?
In-Reply-To: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
References: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
Message-ID: <46F2BB3D.3070008@eepatents.com>

Here I go again touting my AsynQueue package. Sorry, but it just seems
to be a very appropriate solution to many of the problems being raised
recently.

I've recently added a "processworker" module that does just what it
sounds like. You can now queue up jobs to be run on a separate Python
interpreter. If the interpreter crashes due to a segfault or anything
else, you just construct a new worker instance and attach it to the
queue, and the jobs continue merrily along.

In addition to deferred-based priority queuing, the queue object has
powerful capabilities for hiring and firing workers, letting workers
resign when they can't perform their duties any more, assigning tasks to
appropriate workers, and re-assigning tasks from terminated workers.

See http://tinyurl.com/349k2o
(http://foss.eepatents.com/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py)

By the way, AsynQueue (without the new processworker stuff) is now
available in Debian testing, thanks to efforts of Eric Evans. Just
apt-get install python-asynqueue.

Best regards, Ed




From Geraldjohn.M.Manipon at jpl.nasa.gov  Thu Sep 20 13:30:09 2007
From: Geraldjohn.M.Manipon at jpl.nasa.gov (Gerald John M. Manipon)
Date: Thu, 20 Sep 2007 12:30:09 -0700
Subject: [Twisted-Python] Re: Can a deferred catch a segmentation fault?
In-Reply-To: <46F29C53.1050406@jpl.nasa.gov>
References: <46F29C53.1050406@jpl.nasa.gov>
Message-ID: <46F2CA41.4020907@jpl.nasa.gov>

Thanks for the responses.

Ed, AsynQueue is exactly what I'm looking for!  Is it possible
for me to test it out?

Gerald

Gerald John M. Manipon wrote:
> Hi,
> 
> I'm using deferToThread to run some python code which may or may not
> be safe.  In particular, the code may load some modules that could
> seg fault.  In this case, deferToThread won't work and the python
> process will bomb so I was wondering what Defer strategy I could
> use to handle this situation:
> 
> from twisted.internet import threads, reactor
> 
> def segFaultFunc():
>     import binning #this will seg fault
>     return True
> 
> def myCb(res):
>     print "Got", res
>     reactor.stop()
> 
> d = threads.deferToThread(segFaultFunc)
> d.addCallback(myCb)
> 
> reactor.run()
> 
> Any help on this is greatly appreciated.
> 
> Thanks,
> 
> Gerald
> 
> 



From stefan.arentz at gmail.com  Thu Sep 20 14:19:29 2007
From: stefan.arentz at gmail.com (Stefan Arentz)
Date: Thu, 20 Sep 2007 22:19:29 +0200
Subject: [Twisted-Python] Twisted Server and Objective-C Client
Message-ID: <adf34c300709201319s245c00ecr290d46052e00f134@mail.gmail.com>

I need to let Objective-C (OS X / Cocoa) clients speak to a Twisted
server. The protocol needs to be a pretty simple request/response
style protocol on a persistent TCP connection. Possible over SSL.

Before I start inventing a wheel, does anyone know if there is
something simple available already? Would the Perspective Broker be a
good start? I haven't looked at the internals but maybe it is not too
difficult to create a non-python client for it?

Just thinking out loud :)

 S.



From p.mayers at imperial.ac.uk  Fri Sep 21 03:24:48 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Sep 2007 10:24:48 +0100
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation
	fault ?
In-Reply-To: <46F2BB3D.3070008@eepatents.com>
References: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
	<46F2BB3D.3070008@eepatents.com>
Message-ID: <1190366689.3453.4.camel@localhost.localdomain>

On Thu, 2007-09-20 at 11:26 -0700, Ed Suominen wrote:
> Here I go again touting my AsynQueue package. Sorry, but it just seems
> to be a very appropriate solution to many of the problems being raised
> recently.

Well, to be fair it's an excellent bit of code.

> 
> I've recently added a "processworker" module that does just what it
> sounds like. You can now queue up jobs to be run on a separate Python
> interpreter. If the interpreter crashes due to a segfault or anything
> else, you just construct a new worker instance and attach it to the
> queue, and the jobs continue merrily along.

Interesting. I see for the process worker jobs you pass in a python
string. One of the conceptual difficulties I've always had with creating
a farm of subprocesses is ensuring the module import status would be
valid, so that you could pass a function and class instances across the
pickle boundary (or whatever)

Did you consider this approach?

> 
> In addition to deferred-based priority queuing, the queue object has
> powerful capabilities for hiring and firing workers, letting workers
> resign when they can't perform their duties any more, assigning tasks to
> appropriate workers, and re-assigning tasks from terminated workers.
> 
> See http://tinyurl.com/349k2o
> (http://foss.eepatents.com/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py)
> 
> By the way, AsynQueue (without the new processworker stuff) is now
> available in Debian testing, thanks to efforts of Eric Evans. Just
> apt-get install python-asynqueue.
> 
> Best regards, Ed
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From p.mayers at imperial.ac.uk  Fri Sep 21 03:29:25 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 21 Sep 2007 10:29:25 +0100
Subject: [Twisted-Python] Twisted Server and Objective-C Client
In-Reply-To: <adf34c300709201319s245c00ecr290d46052e00f134@mail.gmail.com>
References: <adf34c300709201319s245c00ecr290d46052e00f134@mail.gmail.com>
Message-ID: <1190366965.3453.10.camel@localhost.localdomain>

On Thu, 2007-09-20 at 22:19 +0200, Stefan Arentz wrote:
> I need to let Objective-C (OS X / Cocoa) clients speak to a Twisted
> server. The protocol needs to be a pretty simple request/response
> style protocol on a persistent TCP connection. Possible over SSL.
> 
> Before I start inventing a wheel, does anyone know if there is
> something simple available already? Would the Perspective Broker be a
> good start? I haven't looked at the internals but maybe it is not too
> difficult to create a non-python client for it?
> 

This is sort of an FAQ.

The PB wire protocol assumes full asynchronous and symmetry; either side
of the connection can issue any callRemote at any time. The responses
may take milliseconds, minutes or days to come back.

Effectively, the PB wire protocol *is* deferreds. If your client-side
environment can support that, then it'll work. If (as seems likely) it
can't, then it won't.

If you only need simple RPC-like semantics (no callbacks from server to
client) with simple objects (strings, ints, list, dicts) XMLRPC is an
option.

Or, you could run a Twisted reactor in a thread on the client side, and
call from the main/gui thread into Twisted, let it do the PB and call
you back when it's done.

Or you could write the client in Python ;o)






From fred.trotter at gmail.com  Fri Sep 21 08:46:09 2007
From: fred.trotter at gmail.com (Fred Trotter)
Date: Fri, 21 Sep 2007 10:46:09 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a
	day
In-Reply-To: <46F270E6.2040209@imperial.ac.uk>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
	<46F270E6.2040209@imperial.ac.uk>
Message-ID: <b317600c0709210746w5a885740tb8db702532523a81@mail.gmail.com>

Matt
       thanks for replying. Obviously I am interested in using Python
and Twisted for this. But otherwise I have no implementation
requirements. As for your summary of what I wanted...

        * Yes, we would have to track per IP address.
        * Yes, we would have to track when an IP last accessed the
required reading..
        * No we do not need to worry about what "version" they read of
the required reading. So the required reading is just a website whose
content can change without worrying about this application.
        * We want them to go the "homepage" for more than just
required reading. These are low level information workers who need the
links on the home page to do their jobs, but might still set their
personal homepage to yahoo. Since they tend to waste time at yahoo,
but tend to work at the websites linked from my "required reading"
forcing them to go there to start the day is a gentle reminder that
they need to work. So the point of the process is not to enforce the
required reading, but to enforce a "start-the-work-day homepage" for
the computers on the network.

Which means the problem is only about half as complex!!

-FT





>
> Fred,
>
> To effectively achieve what you've outlined is really quite involved, and the answer to your question is heavily tied to the implementation.
>
> You will be controlling access by clients to the internet. You will make that decision based essentially three factors:
> - Client IP Address making access request.
> - When the client IP address last accessed what version of the Required Reading.
> - What is the current version of the Required Reading / when did it renew.
>
> In order to provide some example code, the frame work of the implementation needs to be known.
>
> Cheers,
> Matt.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Fred Trotter
http://www.fredtrotter.com



From george at ringdevelopment.com  Fri Sep 21 12:52:31 2007
From: george at ringdevelopment.com (George Pauly)
Date: Fri, 21 Sep 2007 14:52:31 -0400
Subject: AW: Re: [Twisted-Python] Can a deferred catch a segmentation
	fault ?
In-Reply-To: <1190366689.3453.4.camel@localhost.localdomain>
References: <qYqzsfKGNzfd.PjXfVYhf@heaven.kostyrka.org>
	<46F2BB3D.3070008@eepatents.com>
	<1190366689.3453.4.camel@localhost.localdomain>
Message-ID: <1190400751.2602.51.camel@localhost.localdomain>

On Fri, 2007-09-21 at 10:24 +0100, Phil Mayers wrote:
> On Thu, 2007-09-20 at 11:26 -0700, Ed Suominen wrote:
> > Here I go again touting my AsynQueue package. Sorry, but it just seems
> > to be a very appropriate solution to many of the problems being raised
> > recently.
> 
> Well, to be fair it's an excellent bit of code.
> 
> > 
> > I've recently added a "processworker" module that does just what it
> > sounds like. You can now queue up jobs to be run on a separate Python
> > interpreter. If the interpreter crashes due to a segfault or anything
> > else, you just construct a new worker instance and attach it to the
> > queue, and the jobs continue merrily along.
> 
> Interesting. I see for the process worker jobs you pass in a python
> string. One of the conceptual difficulties I've always had with creating
> a farm of subprocesses is ensuring the module import status would be
> valid, so that you could pass a function and class instances across the
> pickle boundary (or whatever)
> 
> Did you consider this approach?
> 
> > 
> > In addition to deferred-based priority queuing, the queue object has
> > powerful capabilities for hiring and firing workers, letting workers
> > resign when they can't perform their duties any more, assigning tasks to
> > appropriate workers, and re-assigning tasks from terminated workers.
> > 
> > See http://tinyurl.com/349k2o
> > (http://foss.eepatents.com/AsynQueue/browser/projects/AsynQueue/trunk/asynqueue/processworker.py)
> > 
> > By the way, AsynQueue (without the new processworker stuff) is now
> > available in Debian testing, thanks to efforts of Eric Evans. Just
> > apt-get install python-asynqueue.
> > 
> > Best regards, Ed
> > 
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From sam at spinwardstars.com  Fri Sep 21 13:45:09 2007
From: sam at spinwardstars.com (Samuel Reynolds)
Date: Fri, 21 Sep 2007 13:45:09 -0600
Subject: [Twisted-Python] Web Proxy that does something different
	once a day
In-Reply-To: <37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.co
 m>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
	<37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.com>
Message-ID: <mailman.0.1574573390.12674.twisted-python@twistedmatrix.com>


>Hoping someone else chimes in with how to stick a redirect into a proxy,

Nothing to do with Twisted, per se.
A proxy is a two-way conduit:
1. Receive a request from A
2. Massage and/or log the request as necessary
3. Make a request to B.
4. Receive the response from B.
5. Massage and/or log the response as necessary
6. Return the response to A.

It looks like this is just for the web browsers
(i.e., HTTP protocol). If so, then at step 2
you would make your test. If you decide A should
go to the "required reading" URL instead of the
requested URL, simply skip steps 3-5 and return
a valid HTTP document with a "moved temporarily"
code (30x, I think). The browser will then request
the other URL. The one catch is that, depending on
the browser, the user may get the same page if they
request the original URL again in the same browser
window/session. If that's the case, they would need
to open a new window to get to the original URL.

- Sam 





From fred.trotter at gmail.com  Fri Sep 21 14:34:35 2007
From: fred.trotter at gmail.com (Fred Trotter)
Date: Fri, 21 Sep 2007 16:34:35 -0400
Subject: [Twisted-Python] Web Proxy that does something different once a
	day
In-Reply-To: <E1IYoYP-00027u-Um@cube.twistedmatrix.com>
References: <b317600c0709181535h6c3a48fau29c13541b4d0bb58@mail.gmail.com>
	<37d49ed40709181900l5f2e8bacs6072a7c2d05b04d0@mail.gmail.com>
	<E1IYoYP-00027u-Um@cube.twistedmatrix.com>
Message-ID: <b317600c0709211334sc1d79dfh4426397c324f6e31@mail.gmail.com>

> It looks like this is just for the web browsers
> (i.e., HTTP protocol). If so, then at step 2
> you would make your test. If you decide A should
> go to the "required reading" URL instead of the
> requested URL, simply skip steps 3-5 and return
> a valid HTTP document with a "moved temporarily"
> code (30x, I think). The browser will then request
> the other URL. The one catch is that, depending on
> the browser, the user may get the same page if they
> request the original URL again in the same browser
> window/session. If that's the case, they would need
> to open a new window to get to the original URL.

That sounds reasonable and good. Any clue how you would implement that
in Twisted?

-FT

-- 
Fred Trotter
http://www.fredtrotter.com



From exarkun at twistedmatrix.com  Sat Sep 22 22:05:04 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Sep 2007 04:05:04 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1190520304.11.259766035@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-16 through 2007-09-23
Bugs opened: 3    Bugs closed: 5  Total open bugs: 1035 (-2)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:  -2       |Highest:  -3          |Conch:  -2             
|Task:    +0       |Normal:   +1          |Core:   +1             
                                          |Words:  -1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2835] _pollingfile calls pauseProducing on registered Pull producers (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2835

                    ===== Normal =====
[#2833] deprecate twisted.internet.gtkreactor (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2833

[#2834] Logging should deal nicely with problems logging Failures (opened by itamarst)
    defect          core       http://twistedmatrix.com/trac/ticket/2834



Closed Bugs
______________________
                    ===== Highest =====
[#1884] Document adjustment to review policy (opened by exarkun, closed by exarkun, invalid)
    task            core       http://twistedmatrix.com/trac/ticket/1884

[#2099] manhole telnet server broken (opened by exarkun, closed by exarkun, invalid)
    defect          conch      http://twistedmatrix.com/trac/ticket/2099

[#1967] twisted.conch.telnet dies in conjunction with PuTTY (opened by sam, closed by exarkun, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/1967

[#2809] 99.9% cpu load when using the epoll reactor (opened by mvw, closed by exarkun, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2809

                    ===== Normal =====
[#2828] xmlstream.IQ shouldn't create timeout deferreds for every IQ (opened by jack, closed by ralphm, invalid)
    defect          words      http://twistedmatrix.com/trac/ticket/2828



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2835] _pollingfile calls pauseProducing on registered Pull producers (since 2007-09-22 00:36:54).

Mean open ticket age: 524 days, 9:14:54.799999.
Median: 422 days, 23:27:03.859903.
Standard deviation: 401 days, 17:45:04.268446.
Interquartile range: 503 days, 18:33:50.

Mean time between ticket creation and ticket resolution: 121 days, 7:14:56.715258.
Median: 14 days, 10:59:04.
Standard deviation is 224 days, 16:56:44.223591.
The interquartile range is 127 days, 8:25:41.

Mean time spent in review: 65 days, 4:49:15.983357.
Median: 4 days, 5:45:01.
Standard deviation: 143 days, 15:51:23.365689.
Interquartile range: 29 days, 10:44:36.

Mean number of times a ticket is reviewed: 1.94600938967.
Median: 1
Standard deviation: 1.58466700636.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    16 unique ticket reporters
    5 unique ticket reviewers
    3 unique ticket resolvers
In the last 24 weeks,
    78 unique ticket reporters
    14 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    155 unique ticket reporters
    19 unique ticket reviewers
    26 unique ticket resolvers




From a.poisel at acat.cc  Tue Sep 25 12:27:06 2007
From: a.poisel at acat.cc (Andreas Poisel)
Date: Tue, 25 Sep 2007 20:27:06 +0200
Subject: [Twisted-Python] waiting for data before shutdown
Message-ID: <20070925182706.GT25667@trude>

Hi!

My client is supposed to wait for two seconds to receive data when a
shutdown event is triggered.  In buildProtocol() the trigger is added:

    self.sdt= reactor.addSystemEventTrigger('before', 'shutdown', protocol.shutdown)

The method shutdown() is supposed to wait for 2 seconds before closing
the connection:

    def shutdown(self):
        self.doSomeCleanup() # works
        self.sendSomeData()  # works
        d= defer.Deferred()
        reactor.callLater(2.0, d.callback, None)
        return d

The shutdown() method gets called, cleanup and sending of data work as
expected.  But the connection is closed by my client _before_ the two
seconds are over.  Isn't the shutdown process supposed to be halted
until the deferred returned by shutdown() is fired?

Thank you!
-- 
Bye, Andreas



From sroberts at uniserve.com  Tue Sep 25 13:45:07 2007
From: sroberts at uniserve.com (Sam Roberts)
Date: Tue, 25 Sep 2007 12:45:07 -0700
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
Message-ID: <20070925194507.GB10184@sam-desktop>


I have unittests where each test:

  def test_this
     .. setup
     reactor.run() # ... when test is done reactor.stop() will be called

  def test_that
     .. same as above


does some setup, runs the reactor until test is complete, then stops the
reactor, asserting all went as intended.

However, second call to reactor.stop() doesn't stop the reactor. strace
shows reactor going back into select(), blocking forever, but killable
with sigquit.

Is this really intentional?

Example code and testrun follow.

~/w/engine % python t_reactor_stop.py
2.5.1 (r251:54863, May  2 2007, 16:27:44)
[GCC 4.1.2 (Ubuntu 4.1.2-0ubuntu4)]
[twisted, version 2.5.0]
<twisted.internet.selectreactor.SelectReactor object at 0x2b684344a310>
stopping reactor running? 1
reactor stopped
stopping reactor running? 1
zsh: quit (core dumped)  python t_reactor_stop.py



~/w/engine % cat t_reactor_stop.py
import sys

print sys.version

from twisted.internet import reactor

import twisted

print twisted._version.version
print reactor

def stop_reactor():
    print "stopping reactor running? " + repr(reactor.running)
    try:
        reactor.stop()
    except:
        print "stop died!"

reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
# Unreachable, why?
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"





From exarkun at divmod.com  Tue Sep 25 13:51:24 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 25 Sep 2007 15:51:24 -0400
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <20070925194507.GB10184@sam-desktop>
Message-ID: <20070925195124.8162.2048368291.divmod.quotient.14053@ohm>

On Tue, 25 Sep 2007 12:45:07 -0700, Sam Roberts <sroberts at uniserve.com> wrote:
>
>I have unittests where each test:
>
>  def test_this
>     .. setup
>     reactor.run() # ... when test is done reactor.stop() will be called
>
>  def test_that
>     .. same as above
>
>
>does some setup, runs the reactor until test is complete, then stops the
>reactor, asserting all went as intended.

None of the reactors implemented in Twisted are restartable.  You can call
each of start and stop at most once.

If you are writing unit tests which require the reactor to run, then you
can either use trial and twisted.trial.unittest.TestCase or you can write
tests which cover smaller units of functionality (and hence do not require
the reactor to be running).  I'd suggest the latter as better general unit
testing practice.

Jean-Paul



From bhenry at pacecocorp.com  Tue Sep 25 13:52:35 2007
From: bhenry at pacecocorp.com (Benjamin Henry)
Date: Tue, 25 Sep 2007 15:52:35 -0400
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <20070925194507.GB10184@sam-desktop>
Message-ID: <F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>

This response won't be as elegant as some, but you can't start the
reactor twice in the same process.  You can stop the reactor when the
service is ended (client or server), but with twistd, it starts and
stops itself.  

So, is it necessary that you start and stop the reactor to run the tests
in your code?  Why not make each test a callback?

Ben Henry
-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Sam
Roberts
Sent: Tuesday, September 25, 2007 12:45 PM
To: twisted
Subject: [Twisted-Python] reactor.stop() doesn't stop the select
reactor?


I have unittests where each test:

  def test_this
     .. setup
     reactor.run() # ... when test is done reactor.stop() will be called

  def test_that
     .. same as above


does some setup, runs the reactor until test is complete, then stops the
reactor, asserting all went as intended.

However, second call to reactor.stop() doesn't stop the reactor. strace
shows reactor going back into select(), blocking forever, but killable
with sigquit.

Is this really intentional?

Example code and testrun follow.

~/w/engine % python t_reactor_stop.py
2.5.1 (r251:54863, May  2 2007, 16:27:44)
[GCC 4.1.2 (Ubuntu 4.1.2-0ubuntu4)]
[twisted, version 2.5.0]
<twisted.internet.selectreactor.SelectReactor object at 0x2b684344a310>
stopping reactor running? 1
reactor stopped
stopping reactor running? 1
zsh: quit (core dumped)  python t_reactor_stop.py



~/w/engine % cat t_reactor_stop.py
import sys

print sys.version

from twisted.internet import reactor

import twisted

print twisted._version.version
print reactor

def stop_reactor():
    print "stopping reactor running? " + repr(reactor.running)
    try:
        reactor.stop()
    except:
        print "stop died!"

reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
# Unreachable, why?
print "reactor stopped"
reactor.callWhenRunning(stop_reactor)
reactor.run()
print "reactor stopped"



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From sroberts at uniserve.com  Tue Sep 25 15:11:47 2007
From: sroberts at uniserve.com (Sam Roberts)
Date: Tue, 25 Sep 2007 14:11:47 -0700
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>
	<20070925195124.8162.2048368291.divmod.quotient.14053@ohm>
References: <20070925194507.GB10184@sam-desktop>
	<F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>
	<20070925194507.GB10184@sam-desktop>
	<20070925195124.8162.2048368291.divmod.quotient.14053@ohm>
Message-ID: <20070925211147.GA10331@sam-desktop>

Thank you both for your prompt help.

On Tue, Sep 25, 2007 at 03:51:24PM -0400, Jean-Paul Calderone wrote:
> On Tue, 25 Sep 2007 12:45:07 -0700, Sam Roberts <sroberts at uniserve.com> 
> None of the reactors implemented in Twisted are restartable.  You can call
> each of start and stop at most once.

Ok. Sorry to gripe, but it would have saved me some time had this rather
significant and non-obvious limitation been mentioned in the docs.

> If you are writing unit tests which require the reactor to run, then you
> can either use trial and twisted.trial.unittest.TestCase or you can write

Can you point me to any examples of using trial? The api is fairly
opaque, I'm baffled as to where to start, though the description sounds
like it was built to help with this problem.

> tests which cover smaller units of functionality (and hence do not require
> the reactor to be running).  I'd suggest the latter as better general unit
> testing practice.

I have unittests for the low-level code.  The purpose of these unit
tests is explicitly to ensure my implementation of the IWriteDescriptor
interfaces correctly interworks with the reactor.

For example, implementors of the IWriteDescriptor interface are required
to implement logPrefix(). This is not documented, and I am happy to have
discovered it now in my unit tests, rather than during later system tests
with the entire application.

On Tue, Sep 25, 2007 at 03:52:35PM -0400, Benjamin Henry wrote:
> So, is it necessary that you start and stop the reactor to run the tests
> in your code?  Why not make each test a callback?

No, not necessary. I am manually chaining my tests together as you
suggest.

It works OK, but from unittest's perspective, I now have only one
testcase, with everything bundled into a single reactor.run(). There are
some nice things about having multiple tests inside a unittest.TestCase,
such as not having every test that uses the reactor coupled together,
but I can do without this niceties.

Cheers,
Sam




From sroberts at uniserve.com  Tue Sep 25 15:24:13 2007
From: sroberts at uniserve.com (Sam Roberts)
Date: Tue, 25 Sep 2007 14:24:13 -0700
Subject: [Twisted-Python] reactor.stop() doesn't stop the select reactor?
In-Reply-To: <20070925211147.GA10331@sam-desktop>
References: <20070925194507.GB10184@sam-desktop>
	<F8D3784FE4E93C4AA66BE8C551EBB5D1B5534E@ntxbeus12.exchange.xchg>
	<20070925194507.GB10184@sam-desktop>
	<20070925195124.8162.2048368291.divmod.quotient.14053@ohm>
	<20070925211147.GA10331@sam-desktop>
Message-ID: <20070925212413.GA10553@sam-desktop>

On Tue, Sep 25, 2007 at 02:11:47PM -0700, Sam Roberts wrote:
> > If you are writing unit tests which require the reactor to run, then you
> > can either use trial and twisted.trial.unittest.TestCase or you can write
> 
> Can you point me to any examples of using trial? The api is fairly
> opaque, I'm baffled as to where to start, though the description sounds
> like it was built to help with this problem.

Sorry, I was looking at

  http://twistedmatrix.com/documents/current/api/twisted.trial.html

but I just found

  http://twistedmatrix.com/trac/wiki/TwistedTrial

which has pointers to usage examples.

Sam




From paul at paulperez.net  Tue Sep 25 20:04:10 2007
From: paul at paulperez.net (Paul Perez)
Date: Tue, 25 Sep 2007 19:04:10 -0700
Subject: [Twisted-Python] tracebacks in twisted web2
Message-ID: <82767f010709251904w20c3af47j30a7cf3f540fd6bb@mail.gmail.com>

Dear List:

I am having a heck of a time trying to figure out why this traceback is
happening, and I was hoping that you could shed some light on the situation.
I am sorry for bothering you with this simple thing, but I can't seem to
figure it out!

The code and traceback are below. The traceback only happens when I call
httprequest.writeResponse(httpresponse) from a callback. When the same code
is called inline and not in a deferred, it works just fine. Even stranger is
that the response is written to the client even though the traceback occurs.


An explanation of what I am trying to do:

A consumer requests data. If there is data in the queue when the consumer
first checks, return the result right away. If there is no data present,
return a deferred and wait. When the producer inserts data into the queue,
check if there is a consumer waiting. If so, begin callback chain on
consumer.

The code works fine (no traceback) in the case where there is no deferred
needed (in QueueCache.maybedefer). When there is a deferred, the traceback
happens during the callback (in QueueCache.put). Again, the consumer
actually gets the correct result, but the traceback still occurs!

Any ideas?

Thanks in advance!

~P


from twisted.internet import reactor, defer
from twisted.web2     import http, responsecode
import Queue

TIMEOUT = 10

def respond(result, httprequest):
    httpresponse = http.Response(responsecode.OK, {}, stream=result)
    httprequest.writeResponse(httpresponse)

class QueueCache(object):
    def __init__(self):
        self.queue = {}
        self.defer = {}

    def get_data(self, xSig):
        return self.get_queue(xSig).get_nowait()

    def push_data(self, xSig, value):
        self.get_queue(xSig).put(value)

    def get_queue(self, xSig):
        try:
            return self.queue[xSig]
        except KeyError:
            q = Queue.Queue()
            self.queue[xSig] = q
            return q

    def defer_request(self, xSig, httprequest):
        if self.defer.has_key(xSig):
            raise Exception("Client %s already has a deferred request!"
%(xSig))

        def timeout(deferred, request):
            xSig = request.args['X-Signature'][0]
            try:
                self.defer.pop(xSig)
            except KeyError:
                print 'Timeout called and xSig `%s` was not in cache!' %
xSig
            respond('ACK',request)

        d = defer.Deferred()
        d.addCallback(respond, httprequest)
        d.setTimeout(TIMEOUT, timeout, httprequest)
        self.defer[xSig] = d
        return d

    def put(self, data):
        xSig = data['X-Signature']
        try:
            d = self.defer.pop(xSig)
            d.callback(data['message'])
        except KeyError:
            self.push_data(xSig,data)

    def maybedefer(self, httprequest):
        xSig = httprequest.args['X-Signature'][0]
        try:
            data = self.get_data(xSig)
            result = http.Response(
                responsecode.OK,
                {},
                stream=data['message']
                )
        except Queue.Empty:
            result = self.defer_request(xSig, httprequest)
        return result

-----------------------------------------------------------------------------------------------------
2007-09-25 18:38:38-0700 [-] Original exception:
2007-09-25 18:38:38-0700 [-] Unhandled Error
        Traceback (most recent call last):
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 304,
in _startRunCallbacks

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 281,
in _continue

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 277,
in unpause

        --- <exception caught here> ---
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\web2\server.py", line 518, in
_cbFinishRender

        exceptions.TypeError: html is not a resource or a response

2007-09-25 18:38:39-0700 [-] Unhandled error in Deferred:
2007-09-25 18:38:39-0700 [-] Unhandled Error
        Traceback (most recent call last):
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\web2\server.py", line 476, in
_processingFailed

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 200,
in addErrback

          File "C:\Projects\PyServer\twisted\internet\defer.py", line 182,
in addCallbacks

        --- <exception caught here> ---
          File "C:\Projects\PyServer\twisted\internet\defer.py", line 317,
in _runCallbacks

          File "C:\Projects\PyServer\twisted\web2\server.py", line 492, in
_processingReallyFailed

          File "C:\Python24\lib\site-packages\twisted\web2\http.py", line
446, in writeResponse
            self.chanRequest.writeHeaders(response.code, response.headers)
          File "C:\Projects\PyServer\twisted\web2\channel\http.py", line
431, in writeHeaders

          File "C:\Projects\PyServer\twisted\web2\channel\http.py", line
466, in _writeHeaders

        exceptions.AttributeError: 'HTTPChannelRequest' object has no
attribute 'transport'
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070925/0424e51c/attachment.html>

From thoma.hauc at gmail.com  Thu Sep 27 04:25:02 2007
From: thoma.hauc at gmail.com (Steve MULLER)
Date: Thu, 27 Sep 2007 12:25:02 +0200
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
Message-ID: <a76b56f70709270325m3acb8232qba8638c42a1aa77c@mail.gmail.com>

Hello,

I discovered Python recently and even more recently the Twisted module.

I have a problem with the Twisted reactor and I would like to understand for
which reason my program freezes.

Here the code which should loop forever :

from twisted.internet import reactor
from twisted.internet import task

class reactorProb(object):
    def __init__(self):
        self.count = 5
        self._callback = task.LoopingCall(self.Heartbeat)
        self._callback.start(1, now = False)
    def Heartbeat(self):
        print "Top"
        self.count -= 1
        if (self.count == 0):
            print "Exit"
            self._callback.stop()
            del self._callback
            reactor.stop()

while (True):
    rp = reactorProb()
    print "Enter into reactor.run()"
    reactor.run()
    print "Leave from reactor.run()"


I got this:

Enter into reactor.run()
Top
Top
Top
Top
Top
Exit
Leave from reactor.run()
Enter into reactor.run()
Top
Top
Top
Top
Top
Exit

Thus I start first once the reactor, I stop it then I start again and it
freezes instead of stopping it the reactor.

Could somebody explain me it why?

Thank you in advance.

smu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070927/a47f9899/attachment.html>

From exarkun at divmod.com  Thu Sep 27 04:45:54 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Sep 2007 06:45:54 -0400
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
In-Reply-To: <a76b56f70709270325m3acb8232qba8638c42a1aa77c@mail.gmail.com>
Message-ID: <20070927104554.8162.744876670.divmod.quotient.14812@ohm>

On Thu, 27 Sep 2007 12:25:02 +0200, Steve MULLER <thoma.hauc at gmail.com> wrote:
>Hello,
>
>I discovered Python recently and even more recently the Twisted module.
>
>I have a problem with the Twisted reactor and I would like to understand for
>which reason my program freezes.
>
> [snip]
>
>
>Thus I start first once the reactor, I stop it then I start again and it
>freezes instead of stopping it the reactor.
>
>Could somebody explain me it why?
>

None of the reactors implemented in Twisted are restartable.  You can call
each of start and stop at most once.

Jean-Paul



From schettino72 at gmail.com  Thu Sep 27 05:39:21 2007
From: schettino72 at gmail.com (Eduardo Schettino)
Date: Thu, 27 Sep 2007 17:09:21 +0530
Subject: [Twisted-Python] tests for web2/channel/http
Message-ID: <e24a65c90709270439m2c53e91cp50f498ab0e01abef@mail.gmail.com>

Hello all,

  I am trying to learn trial... I am looking for examples of trial
testing web2 code.

  I could not find tests for web2/channel/http.py
  They exist?

Regards,
  Eduardo



From exarkun at divmod.com  Thu Sep 27 05:57:04 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Sep 2007 07:57:04 -0400
Subject: [Twisted-Python] tests for web2/channel/http
In-Reply-To: <e24a65c90709270439m2c53e91cp50f498ab0e01abef@mail.gmail.com>
Message-ID: <20070927115704.8162.1242864394.divmod.quotient.14850@ohm>

On Thu, 27 Sep 2007 17:09:21 +0530, Eduardo Schettino <schettino72 at gmail.com> wrote:
>Hello all,
>
>  I am trying to learn trial... I am looking for examples of trial
>testing web2 code.
>
>  I could not find tests for web2/channel/http.py
>  They exist?

They seem to be in twisted/web2/test/test_http.py.  HTTPFactory is imported
from twisted.web2.channel.http into twisted.web2.channel, and then test_http
imports it from there.  Many of the web2 tests are end-to-end tests, rather
than unit tests: test_http mostly sets up connections, issues requests to them,
then checks the generated response.

Jean-Paul



From thoma.hauc at gmail.com  Thu Sep 27 06:37:53 2007
From: thoma.hauc at gmail.com (Steve MULLER)
Date: Thu, 27 Sep 2007 14:37:53 +0200
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
In-Reply-To: <20070927104554.8162.744876670.divmod.quotient.14812@ohm>
References: <a76b56f70709270325m3acb8232qba8638c42a1aa77c@mail.gmail.com>
	<20070927104554.8162.744876670.divmod.quotient.14812@ohm>
Message-ID: <a76b56f70709270537x431c0d95h31b40b444add0e89@mail.gmail.com>

2007/9/27, Jean-Paul Calderone <exarkun at divmod.com>:
>
> On Thu, 27 Sep 2007 12:25:02 +0200, Steve MULLER <thoma.hauc at gmail.com>
> wrote:
> >Hello,
> >
> >I discovered Python recently and even more recently the Twisted module.
> >
> >I have a problem with the Twisted reactor and I would like to understand
> for
> >which reason my program freezes.
> >
> > [snip]
> >
> >
> >Thus I start first once the reactor, I stop it then I start again and it
> >freezes instead of stopping it the reactor.
> >
> >Could somebody explain me it why?
> >
>
> None of the reactors implemented in Twisted are restartable.  You can call
> each of start and stop at most once.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


Is there any other way to do so kind of job ?

smu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070927/c1966a53/attachment.html>

From exarkun at divmod.com  Thu Sep 27 06:58:00 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 27 Sep 2007 08:58:00 -0400
Subject: [Twisted-Python] Discovering Twisted : reactor.stop()
In-Reply-To: <a76b56f70709270537x431c0d95h31b40b444add0e89@mail.gmail.com>
Message-ID: <20070927125800.8162.2058440172.divmod.quotient.14879@ohm>

On Thu, 27 Sep 2007 14:37:53 +0200, Steve MULLER <thoma.hauc at gmail.com> wrote:
> [snip]
>
>Is there any other way to do so kind of job ?
>

The only interesting thing your example did was try to start the reactor
more than once.  There's no way to do that. ;)

If you want to do more than one thing, then just do more than one thing.
You don't need to stop the reactor until the entire program has completed
and you are ready for the process to exit.

If you're trying to figure out how to organize your code so that you can
do one thing after another thing has finished, then you should look at
Deferreds, since that is precisely what they are good for.  Your example
included a Deferred, in fact - LoopingCall.start() returns one which is
called back when the stop() method is called on that LoopingCall instance.

Jean-Paul



From Paul_S_Johnson at mnb.uscourts.gov  Thu Sep 27 14:00:14 2007
From: Paul_S_Johnson at mnb.uscourts.gov (Paul_S_Johnson at mnb.uscourts.gov)
Date: Thu, 27 Sep 2007 15:00:14 -0500
Subject: [Twisted-Python] How to switch users in SSH session.
In-Reply-To: <20070927125800.8162.2058440172.divmod.quotient.14879@ohm>
Message-ID: <OF805FD359.073506AB-ON86257363.006CD902-86257363.006DDACA@uscmail.uscourts.gov>

After much wrangling and a small miracle I have managed to write an object 
that fetches the output of three commands in the order given through an 
SSH connection. How come I cannot switch users? Some of the information I 
need can only be fetched through a root account and security is such that 
I cannot log in remotely from a root account but must switch once logged 
in from an account with less than root privileges.

Here's the line that instaniates my SSH object (also repeated at the end 
of my code):

myssh = SSH("my.host.com", "myusername", "mypasswd", ["id; su - root; 
myrootpasswd; id", "pwd", "ls -l"])

The last argument above is a  list of three commands. Inside one command 
";" separates the piece parts.
I am not even able to su to accounts that don't require a password.

###========= CODE STARTS ================###
from twisted.conch import error
from twisted.conch.ssh import transport, connection, keys, userauth, 
channel, common
from twisted.internet import defer, protocol, reactor
import sys, getpass, os, string

class ClientCommandTransport(transport.SSHClientTransport):
    def __init__(self, username, password, cmds, caller):
        self.username = username
        self.password = password
        self.cmds = cmds
        self.caller = caller
 
    def verifyHostKey(self, pubKey, fingerprint):
        # in a real app, you should verify that the fingerprint matches
        # the one you expected to get from this server
        return defer.succeed(True)

    def connectionSecure(self):
        self.requestService(PasswordAuth(self.username, self.password, 
ClientConnection(self.cmds, self.caller)))

class PasswordAuth(userauth.SSHUserAuthClient):
    def __init__(self, user, password, connection):
        userauth.SSHUserAuthClient.__init__(self, user, connection)
        self.password = password
 
    def getPassword(self, prompt=None):
        return defer.succeed(self.password)

class ClientConnection(connection.SSHConnection):
    def __init__(self, cmds, caller, *args, **kwargs):
        connection.SSHConnection.__init__(self)
        self.cmds = cmds
        self.caller = caller

    #======================
    def serviceStarted(self):
        self.d = defer.Deferred()
        self.d.addCallback(self._cbFirst)
        self.d.addErrback(self._ebFirst)
        self.openChannel(CommandChannel(self.cmds[0], lastcmd=0, 
conn=self))

    def _cbFirst(self, result):
        #print 'CALLBACK Result 1:', result
        self.caller.responses.append(result.rstrip())
        self.d = defer.Deferred()
        self.d.addCallback(self._cbSecond)
        self.d.addErrback(self._ebSecond)
        self.openChannel(CommandChannel(self.cmds[1], lastcmd=0, 
conn=self))

    def _ebFirst(self, f):
        self.caller.responses.append(None)
        print "Error 1"
        self.d = defer.Deferred()
        self.d.addCallback(self._cbSecond)
        self.d.addErrback(self._ebSecond)
        self.openChannel(CommandChannel(self.cmds[1], lastcmd=0, 
conn=self))
        #log.err()

    def _cbSecond(self, result):
        #print 'CALLBACK Result 2:', result
        self.caller.responses.append(result.rstrip())
        self.d = defer.Deferred()
        self.d.addCallback(self._cbThird)
        self.d.addErrback(self._ebThird)
        self.openChannel(CommandChannel(self.cmds[2], lastcmd=1, 
conn=self))

    def _ebSecond(self, f):
        self.caller.responses.append(None)
        self.d = defer.Deferred()
        self.d.addCallback(self._cbThird)
        self.d.addErrback(self._ebThird)
        self.openChannel(CommandChannel(self.cmds[2], lastcmd=1, 
conn=self))
        #log.err()

    def _cbThird(self, result):
        self.caller.responses.append(result.rstrip())
        #print 'CALLBACK Result 3:', result
        reactor.stop()

    def _ebThird(self, f):
        self.caller.responses.append(None)
        log.err()
        reactor.stop()
    #======================

class CommandChannel(channel.SSHChannel):
    name = 'session'
 
    def __init__(self, command, lastcmd, *args, **kwargs):
        channel.SSHChannel.__init__(self, *args, **kwargs)
        self.command = command
        self.lastcmd = lastcmd
        self.data = ""

    def channelOpen(self, data):
        self.conn.sendRequest(self, 'exec', common.NS(self.command), 
wantReply=True).addCallback(self._gotResponse)

    def _gotResponse(self, _):
        #print "RESPONSE"
        self.conn.sendEOF(self)

    def dataReceived(self, data):
        #print "Data Received:", data
        self.data += data

    def closed(self):
        self.conn.d.callback(self.data)
        self.loseConnection()
        ##        if self.lastcmd:
        ##            print "closing reactor."
        ##            reactor.stop()

class ClientCommandFactory(protocol.ClientFactory):
    def __init__(self, username, password, cmds, caller):
        self.username = username
        self.password = password
        self.cmds = cmds
        self.caller = caller

    def buildProtocol(self, addr):
        protocol = ClientCommandTransport(self.username, self.password, 
self.cmds, self.caller)
        return protocol

 
class SSH():
    """ Contains a SSH connection, runs commands, and stores results. """
    def __init__(self, host, username, password, cmds):
        self.host = host
        self.username = username
        self.password = password
        self.cmds = cmds
        self.responses = []
        self.run_commands()

    def run_commands(self):
        factory = ClientCommandFactory(self.username, self.password, 
self.cmds, self)
        reactor.connectTCP(self.host, 22, factory)
        reactor.run()

myssh = SSH("my.host.com", "myacct", "mypasswd", ["id; su - root; 
myrootpasswd; id", "pwd", "ls -l"])

print "=" * 25
for i, response in enumerate(myssh.responses):
    print i, response
    print "=" * 25

print "\nDone."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070927/1ab7670f/attachment.html>

From exarkun at divmod.com  Fri Sep 28 05:34:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 28 Sep 2007 07:34:22 -0400
Subject: [Twisted-Python] How to switch users in SSH session.
In-Reply-To: <OF805FD359.073506AB-ON86257363.006CD902-86257363.006DDACA@uscmail.uscourts.gov>
Message-ID: <20070928113422.8162.2102237877.divmod.quotient.15372@ohm>

On Thu, 27 Sep 2007 15:00:14 -0500, paul_s_johnson at mnb.uscourts.gov wrote:
>After much wrangling and a small miracle I have managed to write an object
>that fetches the output of three commands in the order given through an
>SSH connection. How come I cannot switch users? Some of the information I
>need can only be fetched through a root account and security is such that
>I cannot log in remotely from a root account but must switch once logged
>in from an account with less than root privileges.
>
>Here's the line that instaniates my SSH object (also repeated at the end
>of my code):
>
>myssh = SSH("my.host.com", "myusername", "mypasswd", ["id; su - root;
>myrootpasswd; id", "pwd", "ls -l"])

I suspect the list element which includes "su - root; myrootpasswd;"
won't achieve the desired affect.  Even if su weren't careful to try
to read from a pty, "myrootpasswd" won't be sent to its stdin, it'll
be executed by the shell after "su - root" exits, which it probably
won't since nothing is going to write a password to it.

Instead, you probably need to send the password over the connection
after "su - root" has started and is waiting for the password.  I'm
not exactly sure what the steps to this in detail are, though.

Jean-Paul



From Andy at NewWorldElectric.com  Fri Sep 28 09:13:49 2007
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Fri, 28 Sep 2007 11:13:49 -0400
Subject: [Twisted-Python] Aborting callback chain with an errback
In-Reply-To: <37d49ed40709280808h49421fd4s9cd60a48ca731347@mail.gmail.com>
References: <37d49ed40709280808h49421fd4s9cd60a48ca731347@mail.gmail.com>
Message-ID: <37d49ed40709280813j3bb47ed7s22b974fc377c05a@mail.gmail.com>

What is the proper way to handle an uncorrectable error?  I have code
that looks like:

def callXMLRPC(self,stringValue,intValue):
   return(xmlProxy.callRemote("myFunc",{...}) \

.addCallback(self.rpcSuccess).addErrback(self.rpcFailure))

and in a derived class:

def specificQuery(self):
    return self.callXMLRPC("Ask Thing", 3).addCallback(self.handleResult)

what I'd like to have happen is if an error is raised in callRemote,
rpcFailure does some cleanup and no further callbacks are executed.  I
can't fix the failure, but I don't want a message logged into my error
log everytime, it's not unhandled, just that there's nothing to be
done and callbacks won't have the data to run.  If I want to deal with
it further I'd want to do it in the base class.  How can I do that?
Am I doing something nonsensical here?

Andy Fundinger


--
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff



From jtdeng at gmail.com  Sat Sep 29 11:08:52 2007
From: jtdeng at gmail.com (James Deng)
Date: Sun, 30 Sep 2007 01:08:52 +0800
Subject: [Twisted-Python] How to stop reactor when execution finishes on
	more than one ssh server?
Message-ID: <61b5ff350709291008h607c5467paba9d625e6307af3@mail.gmail.com>

Hi,
in the sample sshsimpleclient.py, it demostrated how to connect to a ssh
server and issue a command. my question is what should I do if I want to
connect to more than one ssh server.

I did try to create more than one SimpleTransport by using the following
code

HOSTS=[host1, host2, host3]
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host1, 22)
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host2, 22)
protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host3, 22)
reactor.run()

this really behaves as what i expected, and executed the command on all
remote hosts, but after it finishes, i just hangs there, I know I need a
place to call something like reactor.stop() when all transport finishes the
execution. but i do not know where to call it,  need some deffereds? and
how?

thanks very much!

James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070930/ba0a6eb7/attachment.html>

From exarkun at divmod.com  Sat Sep 29 12:54:29 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 29 Sep 2007 14:54:29 -0400
Subject: [Twisted-Python] How to stop reactor when execution finishes on
	more than one ssh server?
In-Reply-To: <61b5ff350709291008h607c5467paba9d625e6307af3@mail.gmail.com>
Message-ID: <20070929185429.8162.1242645935.divmod.quotient.15945@ohm>

On Sun, 30 Sep 2007 01:08:52 +0800, James Deng <jtdeng at gmail.com> wrote:
>Hi,
>in the sample sshsimpleclient.py, it demostrated how to connect to a ssh
>server and issue a command. my question is what should I do if I want to
>connect to more than one ssh server.
>
>I did try to create more than one SimpleTransport by using the following
>code
>
>HOSTS=[host1, host2, host3]
>protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host1, 22)
>protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host2, 22)
>protocol.ClientCreator(reactor, SimpleTransport).connectTCP(host3, 22)
>reactor.run()
>
>this really behaves as what i expected, and executed the command on all
>remote hosts, but after it finishes, i just hangs there, I know I need a
>place to call something like reactor.stop() when all transport finishes the
>execution. but i do not know where to call it,  need some deffereds? and
>how?

First, you need to know when a single connection is finished.  If what you
are interested in is a channel being closed, then the appropriate callback
is SSHChannel.closed, as sshsimpleclient.py demonstrates.

Then you need for that information to be relayed to the code which is
responsible for knowing that at some point the reactor should be stopped.
sshsimpleclient.py is not a good example of this, since with its approach
to this, when a CatChannel is disconnected, the reactor will always be
stopped.  This makes CatChannel inappropriate for use in any real program.
Instead, you may want to callback a Deferred in your closed implementation.
The Deferred might be one which was supplied to your channel's constructor
and was ultimately created by the same code which knows that the reactor
needs to be stopped.

Finally, you need to aggregate multiple Deferreds into one.  You can do this
using twisted.internet.defer.gatherResults, which takes a list of Deferreds
and returns a Deferred which will be called back when all of the inputs have
been called back.  You can pass the Deferred for each of your channels to
gatherResults and add a callback to the returned Deferred which stops the
reactor.

So, for example (not runnable):

    hosts = [host1, host2, host3]
    closedDeferreds = []
    for host in hosts:
        d = Deferred()
        closedDeferreds.append(d)
        ClientCreator(reactor, SimpleTransport, d).connectTCP(host, 22)
    gatherResults(closedDeferreds).addCallback(lambda ignored: reactor.stop())
    reactor.run()

Jean-Paul



From exarkun at twistedmatrix.com  Sat Sep 29 22:05:03 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 30 Sep 2007 04:05:03 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1191125103.38.382592547@twistedmatrix.com

Bug summary
______________________
Summary for 2007-09-23 through 2007-09-30
Bugs opened: 4    Bugs closed: 4  Total open bugs: 1035 (+0)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +2  |Highest:  -1          |Core:   -2             
|Enhancement:  -2  |High:     +1          |Trial:  +1             
                   |Normal:   +0          |Web2:   +1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2836] limits of web2.resource.PostableResource can't be customized (opened by therve)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2836

                    ===== High =====
[#2837] TreeReporter setup/teardown error handling broke (opened by pjd)
    defect          trial      http://twistedmatrix.com/trac/ticket/2837

                    ===== Normal =====
[#2838] _dumbwin32proc does not IProcessTransport make (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2838

[#2839] _pollingfile fails to call stopProducing when connection is lost (opened by Peaker)
    defect          core       http://twistedmatrix.com/trac/ticket/2839



Closed Bugs
______________________
                    ===== Highest =====
[#2684] t.p.t.ThreadPool.dispatch should be deprecated (opened by indigo, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2684

[#2216] Coding Standard update: Lines should not have trailing whitespace (opened by jml, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2216

                    ===== Normal =====
[#2636] stdio.StandardIO breaks, readhack code in process.py to blame (opened by gtalvola, closed by therve, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/2636

[#2101] Coding standard should fallback to PEP 8 (opened by jml, closed by therve, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2101



Ticket Lifetime Stats
______________________
Oldest open ticket - [#38] Should be a way to create documentation aliases (since 2003-07-12 16:08:03).
Newest open ticket - [#2839] _pollingfile fails to call stopProducing when connection is lost (since 2007-09-25 12:50:46).

Mean open ticket age: 530 days, 11:12:33.587451.
Median: 429 days, 23:27:03.200978.
Standard deviation: 402 days, 14:36:13.748171.
Interquartile range: 504 days, 22:01:06.

Mean time between ticket creation and ticket resolution: 121 days, 13:43:11.437464.
Median: 14 days, 13:40:23.
Standard deviation is 224 days, 14:04:54.647686.
The interquartile range is 128 days, 3:43:59.

Mean time spent in review: 65 days, 18:18:25.859556.
Median: 4 days, 5:45:01.
Standard deviation: 145 days, 4:55:30.540939.
Interquartile range: 29 days, 10:44:36.

Mean number of times a ticket is reviewed: 1.95081967213.
Median: 1
Standard deviation: 1.58592108825.
Interquartile range: 1.


Contributor Stats
______________________
In the last 4 weeks,
    12 unique ticket reporters
    6 unique ticket reviewers
    2 unique ticket resolvers
In the last 24 weeks,
    76 unique ticket reporters
    15 unique ticket reviewers
    14 unique ticket resolvers
In the last 48 weeks,
    155 unique ticket reporters
    19 unique ticket reviewers
    26 unique ticket resolvers




