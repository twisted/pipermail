From glyph at twistedmatrix.com  Wed Aug  1 17:03:21 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Aug 2001 16:03:21 -0500 (CDT)
Subject: [Twisted-Python] ch-ch-ch-changes
Message-ID: <Pine.LNX.4.21.0108011558330.5137-100000@zaibach.twistedmatrix.com>

In my personal repository, I'm making a change to pb that I want to
mention before I commit.

Previously, there was no notion of a reference back to the "client", in a
PB service.  A perspective could provide an 'observe' method or similiar,
to allow the user to see what was going on.

However, given that this is such a frequent request, I'll be adding an
optinonal argument to requestPerspective that specifies a client-side
object that represents the "inverse perspective"; a direct reference to
something that represents the client's connection.  This works quite well
for twisted.reality and twisted.words (the new chat framework I'm working
on).

This will break pb services on tm.com yet again when I check it in, due to
protocol changes that support this (sorry guys!), but this time it should
be nothing more than a server restart for those of you who are running web
subservers.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From chrish at mincom.com  Wed Aug  1 18:33:23 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Thu, 2 Aug 2001 08:33:23 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0107312240060.5089-100000@zaibach.twistedmatrix.com>
Message-ID: <003c01c11ad9$f9649af0$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

> A command like 'gnusto build_map x.rpl mapcopy.py' in one of the
> Inheritance or TRDemo directories will create 'x.rpl' which you can use
> with mkrealityserver.  HTH.

This does help, actually.

If anyone is interested, I can write up some notes on how to get various
aspects of TM working on Windows platforms.

Once I put the Inheritance and TRDemo directories in the right places, I was
able to create a .spl file for both Inheritance and TRDemo. There was a
problem with TRDemo - twisted.library is missing. Is this library available
anywhere or has it been superseded? I ran the Inheritance module, and after
going through some code to find the username and password, I was able to run
this successfully. I am now able to move around in the inheritance game, but
that's about it.

Again, if anyone is interested in docs for running any of this, I will be
happy to produce some.

Does anyone know the status of reality servers?

I'm really enjoying playing around with all of this stuff.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From jasbahr at crash.org  Wed Aug  1 19:05:26 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Wed, 1 Aug 2001 18:05:26 -0500
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <003c01c11ad9$f9649af0$ad7711ac@pikachu>
Message-ID: <EIEFLCFECLLBKGPNJJIMMEFLHBAA.jasbahr@crash.org>

Chris, documentation on running Twisted under Windows would
be an extremely valuable addition to the Twisted community.  :-)

Cheers,

Jason




-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Chris Hadgis
Sent: Wednesday, August 01, 2001 5:33 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Reality Servers


From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

> A command like 'gnusto build_map x.rpl mapcopy.py' in one of the
> Inheritance or TRDemo directories will create 'x.rpl' which you can use
> with mkrealityserver.  HTH.

This does help, actually.

If anyone is interested, I can write up some notes on how to get various
aspects of TM working on Windows platforms.

Once I put the Inheritance and TRDemo directories in the right places, I was
able to create a .spl file for both Inheritance and TRDemo. There was a
problem with TRDemo - twisted.library is missing. Is this library available
anywhere or has it been superseded? I ran the Inheritance module, and after
going through some code to find the username and password, I was able to run
this successfully. I am now able to move around in the inheritance game, but
that's about it.

Again, if anyone is interested in docs for running any of this, I will be
happy to produce some.

Does anyone know the status of reality servers?

I'm really enjoying playing around with all of this stuff.

Cheers,
ChrisH





--
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From CARMSTRO at TWISTEDMATRIX.COM  Wed Aug  1 19:01:10 2001
From: CARMSTRO at TWISTEDMATRIX.COM (POKEY THE PENGUIN)
Date: Wed, 1 Aug 2001 19:01:10 -0400
Subject: [Twisted-Python] CODE RED WORM IMPACT ON TWISTED.WEB.
Message-ID: <20010801190110.A10183@Fookidla.org>

YOUR CHINESE WEAPONS ARE INFERIOR!!

HOORAY FOR TWISTED!

--
POKEY THE PENGUIN
MY UNTERNET HOME SITE IS AT HTTP://YELLOW5.COM/POKEY/ARCHIVE
POKEY LOVES TO READ YOUR MAIL!




From glyph at twistedmatrix.com  Wed Aug  1 20:03:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Aug 2001 19:03:26 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <EIEFLCFECLLBKGPNJJIMMEFLHBAA.jasbahr@crash.org>
Message-ID: <Pine.LNX.4.21.0108011855550.7795-100000@zaibach.twistedmatrix.com>

I'd like to emphatically second Jason's comment here!

Documentation is a serious sore point of many Python projects, including
Twisted, and I'd like to encourage anyone who has the time to do so to
write and maintain documentation, especially HOWTOs and tutorials.  (The
API documentation is passable as reference material, although it too needs
work.)

In addition to the Windows documentation, it might be nice to have a
slightly more GUI frontend to Twisted for windows users, who don't have a
very good command line interface.  I really don't know where to start with
such a tool though, because the GUI seems so open-ended to me, but if you
can think of an easier process while you're writing documentation, please
suggest that to the list.

More comments interspersed below...

On Wed, 1 Aug 2001, Jason L. Asbahr wrote:

> Chris, documentation on running Twisted under Windows would
> be an extremely valuable addition to the Twisted community.  :-)
> 
> Cheers,
> 
> Jason

and Chris Hadgis wrote:

> This does help, actually.
> 
> If anyone is interested, I can write up some notes on how to get various
> aspects of TM working on Windows platforms.
> 
> Once I put the Inheritance and TRDemo directories in the right places, I was
> able to create a .spl file for both Inheritance and TRDemo. There was a
> problem with TRDemo - twisted.library is missing. Is this library available
> anywhere or has it been superseded? I ran the Inheritance module, and after
> going through some code to find the username and password, I was able to run
> this successfully. I am now able to move around in the inheritance game, but
> that's about it.

Unfortunately, that's about as far as we got.  You can put things in
things, and if you read author.py you should get a few hints as to "verbs"
you can use to create things... hopefully some of the ex-reality authors
can chime in here...

> Again, if anyone is interested in docs for running any of this, I will be
> happy to produce some.

Seconding Jason's opinion, as above.

> Does anyone know the status of reality servers?

What do you mean by Status?

> I'm really enjoying playing around with all of this stuff.

Great to hear it! :)
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Wed Aug  1 20:07:19 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Aug 2001 19:07:19 -0500 (CDT)
Subject: [Twisted-Python] CODE RED WORM IMPACT ON TWISTED.WEB.
In-Reply-To: <20010801190110.A10183@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0108011903290.7795-100000@zaibach.twistedmatrix.com>

YES.

On Wed, 1 Aug 2001, POKEY THE PENGUIN wrote:

> YOUR CHINESE WEAPONS ARE INFERIOR!!
> 
> HOORAY FOR TWISTED!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From mjmstahl at one.net  Thu Aug  2 01:00:56 2001
From: mjmstahl at one.net (M.J. Stahl)
Date: Thu, 2 Aug 2001 01:00:56 -0400
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <Pine.LNX.4.21.0108011855550.7795-100000@zaibach.twistedmatrix.com>
Message-ID: <E15SAgs-0002QA-00@zaibach.twistedmatrix.com>


> Documentation is a serious sore point of many Python projects, including
> Twisted, and I'd like to encourage anyone who has the time to do so to
> write and maintain documentation, especially HOWTOs and tutorials.  (The
> API documentation is passable as reference material, although it too 
> needs
> work.)
>
I currently operate on the MacOS X architecture and if I can get Twisted 
working on its platform I will be more than happy to document it for 
further use.

> In addition to the Windows documentation, it might be nice to have a
> slightly more GUI frontend to Twisted for windows users, who don't 
> have a
> very good command line interface.  I really don't know where to start 
> with
> such a tool though, because the GUI seems so open-ended to me, but if 
> you
> can think of an easier process while you're writing documentation, 
> please
> suggest that to the list.

What about the use of Wx Windows, since it has the WxPython API 
extensions, that way one wouldn't have to worry about reinventing the 
wheel used to work with X or Windows.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1164 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010802/667aca28/attachment.bin 

From m at moshez.org  Thu Aug  2 01:10:12 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu, 02 Aug 2001 08:10:12 +0300
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <E15SAgs-0002QA-00@zaibach.twistedmatrix.com>
References: <E15SAgs-0002QA-00@zaibach.twistedmatrix.com>
Message-ID: <E15SAkO-000570-00@darjeeling>

On Thu, 2 Aug 2001, M.J.  Stahl <mjmstahl at one.net> wrote:

> What about the use of Wx Windows, since it has the WxPython API 
> extensions, that way one wouldn't have to worry about reinventing the 
> wheel used to work with X or Windows.

I hardly think Glyph's problem was the widget sets.
-- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy




From acapnotic at twistedmatrix.com  Thu Aug  2 04:30:43 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 2 Aug 2001 01:30:43 -0700
Subject: [Twisted-Python] [spread] "We're walking, we're walking, we're walking..."
Message-ID: <20010802013043.A3406@troglodyte.menefee>

[Yes, I do intend to spend some more time digesting this and working it
into code and perhaps more english, but that won't get done tonight...
So for now, Share and Enjoy!]

IRC log started Thu Aug 02 00:06:16 2001 (PDT -0700)

* Acapnotic pokes glyph

<glyph> Acapnotic: sorry, did you answer before?

<Acapnotic> glyph: Ok, I started the log ten minutes ago for
            you, and so far it mainly consists of descriptions of
            thirmite's van =)

<dash> haha

<thirmite> my van is awsome

<dash> "ph34r my l33t v4n"

<thirmite> heh

<glyph> Acapnotic: OK.  Let's get started then. :)
<glyph> Acapnotic: What do you want to do with PB?

<Acapnotic> glyph: whiteboard, say.  client -> server ->
            many-clients.  but we can start with just half of that.

<glyph> Acapnotic: OK.  First thing you need is a whiteboard
        service on the server.
<glyph> Acapnotic: by "service" I literally mean a subclass
        of pb.Service

<Acapnotic> a pb.Service, okay.  That doesn't have many methods 

<glyph> Acapnotic: crap.  I think I may have changed some naming here
	:-).  Does your version say anything about getPerspectiveNamed?

<Acapnotic> glyph: yes, getPerspectiveNamed(self,name) is
            the only method

<glyph> Acapnotic: Ok, cool.
<glyph> Acapnotic: So you have to implement that method to
        retrieve something that represents a viewer of whiteboards

<glyph> Acapnotic: twisted.reality.plumbing can provide an
        example for this.
<glyph> uh, actually twisted.reality.reality.Reality, now
        that I think of it :)

<dash> reality, reality, REALITY! (ta-daa!)
<dash> glyph: you have such a way with names

<Acapnotic> "a viewer" probably being a front-end?  or the client
            that's got a display attached?

<glyph> dash: everybody has a bad day sometimes :-\

<dash> glyph: no, i like it
<dash> it's a as subtle as a jackhammer :)

<glyph> Acapnotic: It's the back-end, not the front-end.  We're still
        on the server.

<glyph> Acapnotic: whatever you return is the thing that the
        authenticated user is going to be able to call methods on; it
        should be a subclass of pb.Perspective

<Acapnotic> ah, okay, I was derailed for a moment there getting stuck
            on "viewer".  but this isn't just a passive thing, it's
            what we call on to modify the whiteboard as well, ja?

<glyph> yes 
<glyph> hmm, maybe we should do this tomorrow, *AFTER* I check in
        these changes

<Acapnotic> no two days the same, eh?
<Acapnotic> glyph: Ok, then don't give me specifics on every method I
            need to override.  Big picture -- what classes go on which
            end, what talks to what?

<glyph> Acapnotic: welll, after hte handshake we just described,
        you've got a Perspective on the server
<glyph> the client has a Reference to that Perspective
<glyph> so when the client says perspective.foo(bar, baz), the
        server's perspective gets x.perspective_foo(bar, baz) called
        on it

<Acapnotic> glyph: Okay.  And is this one of your "there are no return
            values" areas?
<Acapnotic> yes, because calls are asyncronyous... crap, I can't spell
            these days.

<glyph> Acapnotic: Yes.  There are no return values; if the client
        wants to get a callback when the return value's ready, it
        calls p.foo(bar, baz, pbcallback=qux)

<Acapnotic> glyph: So now I can do whiteboard_author_client->server.
            To do server->whiteboard_audience_client, will I flip this
            around and put a "server" in each client?  (a la X)

<glyph> Acapnotic: No need.
<glyph> Acapnotic: You can just have each interested "listener" pass a
        subclass of "pb.Referenced" into a remote callback, which
        defines a method that the server will call.

<Acapnotic> glyph: so I'm just going to stash a bunch of these
            Referenced callbacks in some private attribute, and then
            run through them whenever I want to talk at them?

<glyph> Acapnotic: essentially, yes.

<Acapnotic> glyph: now you said these subclasses_of(pb.Referenced)
            defined a method to call.  Does that mean I should have
            them __call__able?  Or will I call their methods?  Or is
            that entirely up to me?

<glyph> Acapnotic: Subclasess of pb.Referenced define methods named
        remote_XXX; remoteobj.XXX() on the other side will invoke
        those methods.

<Acapnotic> glyph: and I missed a piece of the handshaking.  Where did
            the client/server connection happen?

<glyph> Acapnotic: that's irrelevant :)
<glyph> the way that happens is just you instantiate a tcp.Client with
        a Broker as the protocol
<glyph> all fo these interactions happen through the pb.Broker
<glyph> (requestPerspective, to be precise)

<Acapnotic> ok, that's good to know, I wouldn't call that irrelevant =)

-- 
"...we're stopped."




From acapnotic at twistedmatrix.com  Thu Aug  2 19:00:42 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 2 Aug 2001 16:00:42 -0700
Subject: [Twisted-Python] Hip-bone's connected to the...
In-Reply-To: <20010802013043.A3406@troglodyte.menefee>
Message-ID: <20010802160042.A621@troglodyte.menefee>

Abstract: Trace the construction of a PB-using application from the top,
    to the side, to the inside-out.

[XXX: Add "why the gleep you should actually care about PB
     introduction-hook here."]

Disclaimer: I wrote this before writing any code, and reading only a
    little.  So the possibility remains open that I am horribly,
    tragically wrong.

 ----

Application (twisted.internet.main.Application):

The overall container and entry point for your program as a whole.  The
answer to the question "Uh, okay, now how do I start it?".  In addition
to starting, it also handles shutdown, typically pickling itself to disk
in the process.  And yes, that means that when you pickle.load an object
from a twisted .spl file, an Application is what you are getting.

An Application has a name (first argument to the constructor), a string
which it uses in naming logfiles, shutdown pickles, etc.

When Applications are running, they typically have at least one Port
(see below) listening for connections, as internet..Applications which
don't communicate with anyone are less fun than dead puppies.  Ports
are added with the .addPort() method, and the Application has them
startListening as soon as it is run().

 - -

Port (twisted.internet.tcp.Port):

The class of much-debated naming, an open "server port" or "listener
port".  Constructed of two arguments (port, factory): the first is
either a TCP port number or the filename of a unix socket, the second is
an instance of a protocol.Factory -- typically a pb.BrokerFactory()

So when a Port gets a connection, it has the factory pop out a new
Protocol (in this case, a Broker), and hooks it up to the connection
with a Transport.

 - -

Broker (twisted.spread.pb.Broker)

Typically created by a pb.BrokerFactory, these broker between a
connection (from the Port) and a pb.Service.  The services available to
the broker are those which have been added to the BrokerFactory with its
addService method.

 - -

Service (twisted.spread.pb.Service)

The service you are providing (XXX: a less vauge, circular description?)
is defined as a subclass of pb.Service (ex: web.ResourcePublisher).
I expect the common usage is to only have no more than one instance
of a given Service class, as it defines the service *as a whole*,
and generally does not bother itself with the details of a request.
Instead, Services are asked (through the broker) for Perspectives,
through the getPerspectiveNamed method.

 - -

Perspective (twisted.spread.pb.Perspective)

Well, it's called "Perspective Broker", and that's what all the
excitement is about, right?  That's probably why my clarity has been
dropping as I near it...  Let me see if I can explain this.  Then
someone will have to jump in and tell me if I explained the right thing.

The reason the client is asking the server to perform a service is
because the server is able to see and do things the client does not
have access to.  That is, from the client's perspective, these things
are not visible, but from the server's perspective, they're perfectly
accessible.

Enter one Perspective Broker.  Through the Perspective Broker, clients
may have actions performed from the perspective of an object on the
server.

These objects are instances of classes descended from pb.Perspective.
If a client runs a method .foo() on a reference to such an object, the
server will run the method .perspective_foo() on the instance on the
server side.

XXX: Examples would help loads.

Note: Since all commands over the broker happen asynchronously, the
client cannot receive return values from a perspective_foo() method.

 - - 

Referenced (twisted.spread.pb.Referenced)

Since a Perspective object cannot pass data back to the client through
return values, how does the client ever learn anything about what
it's done through the broker?  If the client passes an object that is
Referenced through to the perspective, then the perspective on the
server side will be able to pass data to methods of the Referenced
object.  A call to .foo() on the server's side will call .remote_foo()
on the object in the client.  This works in much the same way as clients
calling methods of Perspective objects.

 ----

Ports get added to Applications
(a BrokerFactory is attached to the port)
Services get added to BrokerFactories
Perspectives are issued by Services

 ----

How does error notification work?
What naming conventions should application authors use?
Any other must-have pb classes?





From m at moshez.org  Fri Aug  3 04:12:32 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 03 Aug 2001 11:12:32 +0300
Subject: [Twisted-Python] mail is now working (CVS)
Message-ID: <E15Sa4O-0008Qt-00@darjeeling>

Here's a short example:

./bin/mktap mail --domain foo.bar=dump --user postmaster=password --bounce_to_postmaster
run twistd -f mail.tap
telnet localhost 8025, send mail to someone at foo.bar
retreive e-mail from 8110, connect as "postmaster at foo.bar", "password"

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Fri Aug  3 14:05:56 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 3 Aug 2001 13:05:56 -0500 (CDT)
Subject: [Twisted-Python] Hip-bone's connected to the...
In-Reply-To: <20010802160042.A621@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108031239060.25302-100000@zaibach.twistedmatrix.com>

Thank you, kevin, for doing this write-up... I hope this feedback enables
you to keep going with it.

I'd highly encourage you to write some code though :)

On Thu, 2 Aug 2001, Kevin Turner wrote:

> Application (twisted.internet.main.Application):
> 
> The overall container and entry point for your program as a whole.  The
> answer to the question "Uh, okay, now how do I start it?".  In addition
> to starting, it also handles shutdown, typically pickling itself to disk
> in the process.  And yes, that means that when you pickle.load an object
> from a twisted .spl file, an Application is what you are getting.

Now .tap file...

> When Applications are running, they typically have at least one Port
> (see below) listening for connections, as internet..Applications which
> don't communicate with anyone are less fun than dead puppies.  Ports
> are added with the .addPort() method, and the Application has them
> startListening as soon as it is run().

You may want to add the fact that they'll often have a Delayed as well.

> Port (twisted.internet.tcp.Port):

Your description of Ports is fairly accurate.

> Broker (twisted.spread.pb.Broker)
> 
> Typically created by a pb.BrokerFactory, these broker between a

Or manually instantiated for use with a tcp.Client!

> connection (from the Port) and a pb.Service.  The services available to
> the broker are those which have been added to the BrokerFactory with its
> addService method.

> Service (twisted.spread.pb.Service)
> 
> The service you are providing (XXX: a less vauge, circular description?)

No, sounds good -- I want to reinforce that these classes are what they
sound like :)

> is defined as a subclass of pb.Service (ex: web.ResourcePublisher).
> I expect the common usage is to only have no more than one instance
> of a given Service class, as it defines the service *as a whole*,
> and generally does not bother itself with the details of a request.
> Instead, Services are asked (through the broker) for Perspectives,
> through the getPerspectiveNamed method.

Might want to be a little clearer about the service doing the
authentication here...

> Perspective (twisted.spread.pb.Perspective)

> The reason the client is asking the server to perform a service is
> because the server is able to see and do things the client does not
> have access to.  That is, from the client's perspective, these things
> are not visible, but from the server's perspective, they're perfectly
> accessible.
>
> Enter one Perspective Broker.  Through the Perspective Broker, clients
> may have actions performed from the perspective of an object on the
> server.

I think it would make sense to explain references first, even though you
can't get to them without perspectives (because on the client, you have a
reference to a perspective); the notion of translating calls on references
into 'special' calls on instances is important for Perspective, Proxied,
Referenced, and Cached...

Also don't talk so much about "client" and "server" when referring to the
perspective; this is objects-to-objects.

> These objects are instances of classes descended from pb.Perspective.
> If a client runs a method .foo() on a reference to such an object, the
> server will run the method .perspective_foo() on the instance on the
> server side.

Yep.

> XXX: Examples would help loads.

# Here's one to get you started.
class Foo(pb.Perspective):
  def perspective_bar(self, baz):
    print 'received remote method call'

> Note: Since all commands over the broker happen asynchronously, the
> client cannot receive return values from a perspective_foo() method.

Yes it can, actually.  If you pass a keyword parameter 'pbcallback', that
callback will be invoked on the client when the return value is
received.  However, you can't get that as a return value from the .foo
call on the client (obviously).

> Referenced (twisted.spread.pb.Referenced)
> 
> Since a Perspective object cannot pass data back to the client through
> return values, how does the client ever learn anything about what
> it's done through the broker?  If the client passes an object that is
> Referenced through to the perspective, then the perspective on the
> server side will be able to pass data to methods of the Referenced
> object.  A call to .foo() on the server's side will call .remote_foo()
> on the object in the client.  This works in much the same way as clients
> calling methods of Perspective objects.

Speaking in terms of client and server still doesn't make sense.  The
server can send Referenced instances to the client too.  And the lead-in
sentence is wrong anyway :)

Additionally, you can pass a reference in to the requestPerspective method
now, to provide an analogue for the "client" object that you'd send
messages to in many other protocols.

> Ports get added to Applications
> (a BrokerFactory is attached to the port)
> Services get added to BrokerFactories
> Perspectives are issued by Services

Proxies are issued by returning Proxied instances from Perspective methods
(or from Proxied methods)

Copies are made    [ditto]      Copied  [ditto]

Caches are like copies, but they maintain identity rather than being
re-sent each time. (optional)

> How does error notification work?

Similiarly to return-value notification.

  myReference.do(arg,arg,pbcallback=myCallback, pberrback=myErrorCallback)

All you get as an argument to the error callback is is a traceback or
error message string though.

> What naming conventions should application authors use?

Just stick to the Twisted coding standard and you'll be fine.

> Any other must-have pb classes?

Copied and Proxied are worth explaining.  Reference is crucial.  Cached is
interesting, but complex and you'll know if you need it.  Other things are
peripheral.


Hope this helps.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Fri Aug  3 15:06:13 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 3 Aug 2001 14:06:13 -0500 (CDT)
Subject: [Twisted-Python] I am Jack's complete lack of software release discipline.
Message-ID: <Pine.LNX.4.21.0108031353300.25302-100000@zaibach.twistedmatrix.com>

So, after a flurry of 3 releases, one after the other, and then a week of
silence, I'm putting together another release (0.9.4), this one with a big
pile of new functionality.

A sampler:

 * C implementation of banana's decoding method

 * some small enhancements to PB

 * new twisted.words chat service and Instance Messenger client.

 * more robust IRC service integrated with twisted.words

 * twisted.mail re-integrated

On the documentation front, I've written a few more examples, a few more
docstrings, and a several people (namely Kevin Turner, David Creswick, and
David Sturgis) seem to be focusing on documenting PB and Twisted.Web;
again I'd like to emphasize that anyone else wanting to write
documentation should do so! :)

I've also put a TODO into CVS, so if you think of something you'd like to
see done, even if it's pie in the sky, I'll put it in so that incoming
developers have something to look at.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Fri Aug  3 15:23:06 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 3 Aug 2001 12:23:06 -0700
Subject: [Twisted-Python] Hip-bone's connected to the...
In-Reply-To: <Pine.LNX.4.21.0108031239060.25302-100000@zaibach.twistedmatrix.com>
Message-ID: <20010803122306.B1058@troglodyte.menefee>

On Fri, Aug 03, 2001 at 01:05:56PM -0500, Glyph Lefkowitz wrote:
> On Thu, 2 Aug 2001, Kevin Turner wrote:
> > Application (twisted.internet.main.Application):
>
> You may want to add the fact that they'll often have a Delayed as well.

Yeah, I noticed that, but left it out for the first pass as it wasn't
necessary to get the network connection up and running...

> > Service (twisted.spread.pb.Service)
>
> Might want to be a little clearer about the service doing the
> authentication here...

That sounds like an excellent idea.  However, it's an area I remain
entirely ignorant of...

> > Perspective (twisted.spread.pb.Perspective)
> 
> Also don't talk so much about "client" and "server" when referring to the
> perspective; this is objects-to-objects.

Well, I've got to have some terms other than "this" and "that" to keep
straight what I'm talking about.  Would you rather I called them "Alice"
and "Bob"?

Besides, if we are talking about this in the context of Services, (which
we are, as that text isn't general enough to be used as all-purpose
docstrings) I would think it makes sense to refer to one side as a
server, does it not?

> > Note: Since all commands over the broker happen asynchronously, the
> > client cannot receive return values from a perspective_foo() method.
> 
> Yes it can, actually.  If you pass a keyword parameter 'pbcallback', that
> callback will be invoked on the client when the return value is
> received.  

And "The callback will be called with a single argument, the return
value."

> > How does error notification work?
> 
> Similiarly to return-value notification.
> 
>   myReference.do(arg,arg,pbcallback=myCallback, pberrback=myErrorCallback)
> 
> All you get as an argument to the error callback is is a traceback or
> error message string though.

This means including the pberrback parameter on every call?  What
happens if you don't?  Is there a catch-all error handler you can set?
Why the sometimes strings/sometimes traceback inconsistancy?

> > What naming conventions should application authors use?
> 
> Just stick to the Twisted coding standard and you'll be fine.

CodingStandard.html does not have the adverb prefixes like perspective_,
remote_, etc.

> Cached is interesting, but complex and you'll know if you need it.  

Yeah, """It's like a Copy, but way, *WAY* worse!"""

> I'd highly encourage you to write some code though :)

ah'm workin on that =)




From mjmstahl at one.net  Fri Aug  3 21:52:56 2001
From: mjmstahl at one.net (M.J. Stahl)
Date: Fri, 3 Aug 2001 21:52:56 -0400
Subject: [Twisted-Python] Working with Reality
Message-ID: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com>

I would like to work towards developing Reality into a more mature 
environment, but (laughably) I am having trouble even getting the 
environment started (ie, I am recieving a traceback).

Can someone please give me a general breakdown on getting TRDemo or 
Inheritance started.

Mark




From glyph at twistedmatrix.com  Sat Aug  4 00:32:47 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 3 Aug 2001 23:32:47 -0500 (CDT)
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0108032330550.23374-100000@zaibach.twistedmatrix.com>

On Fri, 3 Aug 2001, M.J.  Stahl wrote:

> I would like to work towards developing Reality into a more mature 
> environment, but (laughably) I am having trouble even getting the 
> environment started (ie, I am recieving a traceback).

What's the traceback?  If you email it we'll probably be able to figure
out the problem a lot faster :)

> Can someone please give me a general breakdown on getting TRDemo or 
> Inheritance started.

Make sure you have all the latest stuff; 0.9.4 fixes some minor problems
with reality and there are new .tar.gz files in the 'reality' directory on
the website.  If you do that and things are still broken, please send the
traceback so I see what's happening, at least.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Sat Aug  4 03:40:24 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 4 Aug 2001 00:40:24 -0700
Subject: [Twisted-Python] more pb words, and I don't mean "Instance Messenger"
In-Reply-To: <Pine.LNX.4.21.0108031239060.25302-100000@zaibach.twistedmatrix.com>
Message-ID: <20010804004024.A1045@troglodyte.menefee>

Ok, my mind is shutting down, but I want to throw something at the list
tonight so I don't forget what I was thinking on.

Now, I know you've put a lot of effort into naming things so you can say
"it is what it says it is", but no matter how common you think the words
you use are, there's going to be *someone* who isn't familiar.  That's
why I was trying to give a non-circular definition of "Service" the
other day.

And today, The Word Of The Day is: Serializable!

It might even be kinda a real word, but it's sure not one in my
vocabulary.  So while it appears that the docstring for Perspective goes
to great length to make a very reasoned explanation, I'm having a
difficult time deciphering it.

twisted.spread.pb.Perspective.__doc__ reads:
> A perspective on a service.
>
> I want to it to be *possible* to be able to call remote methods on
> this.  I also want it to *normally* be serialized as a Proxy, becuase
> if users want references to each other they've got to be able to see
> each others' perspective.  (I can *see* your perspective, but I can't
> see *from* your perspective.)
>
> So why does it have to be referenced?  It just has to implement
> remoteMessageReceived.  In fact, it should not implement remote_; it
> should implement perspective_ or somesuch.  Normally, they're not
> serializable anwyay!

See, I *think* that answers the question I was going to ask, "How is a
Perspective different than a Referenced object," but I don't know how to
read it.  In addition to uncomprehension through non-deep-grokking of
the lingo, the phrase "I can *see* your perspective, but I can't see
*from* your perspective," is a riddle I can't say I have, uh, untwisted.

Ok, hopefully that's enough to get you talking a bit.  I'm going to go
have myself a sleep.

...the thing about writing code is, some of us have to understand what
tools and components are available to us *before* we can do so.  ;)

-- 
The moon is full (99.96%), 14.6 days old, phase: 0.493524
Angular diameter as seen from the earth: 0.4926 degrees.




From m at moshez.org  Sat Aug  4 08:51:23 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 04 Aug 2001 15:51:23 +0300
Subject: [Twisted-Python] Man Pages Project
Message-ID: <E15T0tn-00066g-00@darjeeling>

As twisted's Debian maintainer, it bothers me greately that there
are no man pages. I've started to write manpages for some of the utilities,
available in doc/man/*.1.

Please help me, and write a manpage for a utility today. I am strongly
considering to package only things in bin/ with a manpage for twisted 0.9.5

Here is the list of utilities with a man page so far:
faucet gnusto mktap twistd

Here is the list of utilities without a man page
malyon im mapeditor runtests twistd-debug

Thanks for your co-operation
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Sat Aug  4 08:57:56 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 04 Aug 2001 15:57:56 +0300
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <E15T0tn-00066g-00@darjeeling>
References: <E15T0tn-00066g-00@darjeeling>
Message-ID: <E15T108-000692-00@darjeeling>

On Sat, 04 Aug 2001, Moshe Zadka <m at moshez.org> wrote:

> Here is the list of utilities with a man page so far:
> faucet gnusto mktap twistd
+im
 
> Here is the list of utilities without a man page
> malyon im mapeditor runtests twistd-debug
-im

BTW: There are some which plain don't make sense to include, IMHO:
+ runtests (if you want to hack on twisted, apt-get source)
+ twistd-debug (ditto)
+ mapeditor ("this doesn't edit maps yet", wtf?)
+ malyon (is the inheritance game included)

Glyph, any comment?
If you agree that these go, then our man-page work is done.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Sat Aug  4 09:42:45 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 04 Aug 2001 16:42:45 +0300
Subject: [Twisted-Python] Toplevel .cvsignore
Message-ID: <E15T1hV-0006PR-00@darjeeling>

How about adding 

*.tap
twisted.log

To our toplevel .cvsignore?
Glyph?
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Sun Aug  5 01:40:33 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 00:40:33 -0500 (CDT)
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <E15T108-000692-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108050039040.4148-100000@zaibach.twistedmatrix.com>

On Sat, 4 Aug 2001, Moshe Zadka wrote:

> On Sat, 04 Aug 2001, Moshe Zadka <m at moshez.org> wrote:
> 
> > Here is the list of utilities with a man page so far:
> > faucet gnusto mktap twistd
> +im

Looks good.

> > Here is the list of utilities without a man page
> > malyon im mapeditor runtests twistd-debug
> -im

Yeah, I've been thinking that these (except for runtests) might be removed
from the standard distribution too, actually...

> Glyph, any comment?
> If you agree that these go, then our man-page work is done.

Your manpage work is done.

Ship it. :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Sun Aug  5 01:44:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 00:44:04 -0500 (CDT)
Subject: [Twisted-Python] Toplevel .cvsignore
In-Reply-To: <E15T1hV-0006PR-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108050041090.4148-100000@zaibach.twistedmatrix.com>

On Sat, 4 Aug 2001, Moshe Zadka wrote:

> How about adding 
> 
> *.tap
> twisted.log
> 
> To our toplevel .cvsignore?
> Glyph?

I made a couple of errors last time 'round when those things were part of
the TwistedPython .cvsignore; I'd prefer to leave them in.  I can't
remember exactly what now, but I do want to have as few things as possible
in .cvsignore :)

I always run my servers out of a different directory anyway
(~/Projects/Twisted is where my code lives, ~/Applications/Network is
where my .taps live).

Given the way the things in bin/ work, this is pretty easy.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Sun Aug  5 02:56:38 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 05 Aug 2001 09:56:38 +0300
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <Pine.LNX.4.21.0108050039040.4148-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108050039040.4148-100000@zaibach.twistedmatrix.com>
Message-ID: <E15THq2-0001Mk-00@darjeeling>

On Sun, 5 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Yeah, I've been thinking that these (except for runtests) might be removed
> from the standard distribution too, actually...

runtests doesn't run, becuase pyunit is packaged differently in twisted and
Debian.

> Your manpage work is done.
> 
> Ship it. :)

Any date on .5?
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Sun Aug  5 05:36:11 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 04:36:11 -0500 (CDT)
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <E15THq2-0001Mk-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108050349001.4119-100000@zaibach.twistedmatrix.com>

On Sun, 5 Aug 2001, Moshe Zadka wrote:

> runtests doesn't run, becuase pyunit is packaged differently in twisted and
> Debian.

Yep.  Shouldn't be in the package.

> > Ship it. :)
> 
> Any date on .5?

Chris Armstrong is (should be!) working on a PB interaction tool, which
Kevin Turner has cleverly (though tentatively) named "Manhole".  I'd like
to see that become marginally useful before pushing out a new v.; however,
this next update will mostly be documentation.

If Chris's stuff isn't ready within the next 3 days I'll push without it.

Travis also mentioned that he wants to do some updates to
twisted.web; I'll wait on those as well if they're going to be out within
the next 3 days.




                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Sun Aug  5 06:15:43 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 05:15:43 -0500 (CDT)
Subject: [Twisted-Python] more pb words, and I don't mean "Instance
 Messenger"
In-Reply-To: <20010804004024.A1045@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108050437590.4119-100000@zaibach.twistedmatrix.com>

On Sat, 4 Aug 2001, Kevin Turner wrote:

> And today, The Word Of The Day is: Serializable!

Serializable, Perspective, and a few other things are now documented in
CVS.  Let me know if they answer some of your questions, and what you
think I should document next.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Sun Aug  5 08:36:21 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 05 Aug 2001 15:36:21 +0300
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <Pine.LNX.4.21.0108050349001.4119-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108050349001.4119-100000@zaibach.twistedmatrix.com>
Message-ID: <E15TN8n-0001sm-00@darjeeling>

On Sun, 5 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> > Any date on .5?
...
> ...3 days...
...
> within
> the next 3 days.
...

OK, 3 days is not long enough that it's worth my time to have a
Debian-only twisted release
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Sun Aug  5 15:52:00 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 05 Aug 2001 22:52:00 +0300
Subject: [Twisted-Python] fwd: twisted_0.9.4-1_i386.changes INSTALLED
Message-ID: <E15TTwO-0002tM-00@darjeeling>

Enjoy!

To: Moshe Zadka <moshez at debian.org>
From: Debian Installer <installer at ftp-master.debian.org>
Subject: twisted_0.9.4-1_i386.changes INSTALLED


Installing:
twisted_0.9.4-1_i386.deb
  to pool/main/t/twisted/twisted_0.9.4-1_i386.deb
twisted_0.9.4-1.diff.gz
  to pool/main/t/twisted/twisted_0.9.4-1.diff.gz
twisted_0.9.4-1.dsc
  to pool/main/t/twisted/twisted_0.9.4-1.dsc
twisted_0.9.4.orig.tar.gz
  to pool/main/t/twisted/twisted_0.9.4.orig.tar.gz
Announcing to debian-devel-changes at lists.debian.org
Closing bugs: 105843 


Thank you for your contribution to Debian.

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Sun Aug  5 17:24:52 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 5 Aug 2001 14:24:52 -0700
Subject: [Twisted-Python] Napkin
Message-ID: <20010805142452.A1825@troglodyte.menefee>

Napkin is a whiteboard service over PB.  The server is nominally
functional, and there's a pygame client which serves as proof of
concept, though be warned it's hella ugly.  The code, that is, as
there isn't a GUI to insult ;)

1 is freehand-tool
2 is lines-tool (click some points, and then mouse2-click to send)
T is text-tool (click, type, <ENTER> sends)

I've only played with it over loopback so far.

You can ooggle the code at ~acapnotic/src/napkin or
http://twistedmatrix.com/users/acapnotic/src/napkin/

It goes without saying that this isn't release quality, I'm just letting
you brave folks poke around in it since some have expressed curiosity.





From davidc at sat.net  Sun Aug  5 18:24:03 2001
From: davidc at sat.net (David C)
Date: Sun, 5 Aug 2001 17:24:03 -0500 (CDT)
Subject: [Twisted-Python] Napkin
In-Reply-To: <20010805142452.A1825@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108051716020.31580-100000@multivac.localhost>

radix asked me to post urls to the list.

a simple pb chat server
http://braznet.com/david/files/chatclient.py
a simple pb chat client
http://braznet.com/david/files/chatclient.py


name:       David Creswick
website:    http://braznet.com/david
jabber id:  davec at jabber.org





From carmstro at twistedmatrix.com  Sun Aug  5 18:48:31 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 5 Aug 2001 18:48:31 -0400
Subject: [Twisted-Python] Napkin
In-Reply-To: <Pine.LNX.4.21.0108051716020.31580-100000@multivac.localhost>
Message-ID: <20010805184831.A969@Fookidla.org>

On Sun, Aug 05, 2001 at 05:24:03PM -0500, David C wrote:
> a simple pb chat server
> http://braznet.com/david/files/chatclient.py

I'm pretty sure this first URL is supposed to be just 'chat.py', not 
'chatclient.py' :-)

> a simple pb chat client
> http://braznet.com/david/files/chatclient.py

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From davidc at sat.net  Sun Aug  5 19:29:18 2001
From: davidc at sat.net (David C)
Date: Sun, 5 Aug 2001 18:29:18 -0500 (CDT)
Subject: [Twisted-Python] Napkin
In-Reply-To: <20010805184831.A969@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0108051828560.31638-100000@multivac.localhost>

On Sun, 5 Aug 2001, Chris Armstrong wrote:

> On Sun, Aug 05, 2001 at 05:24:03PM -0500, David C wrote:
> > a simple pb chat server
> > http://braznet.com/david/files/chatclient.py
> 
> I'm pretty sure this first URL is supposed to be just 'chat.py', not 
> 'chatclient.py' :-)
> 
> > a simple pb chat client
> > http://braznet.com/david/files/chatclient.py
> 
> -- 
> Chris Armstrong                        carmstro at twistedmatrix.com
> http://twistedmatrix.com/~carmstro     carmstro at dynup.net
> 
> 
yeah. and also the topic is supposed to be something else.

name:       David Creswick
website:    http://braznet.com/david
jabber id:  davec at jabber.org





From chrish at mincom.com  Sun Aug  5 20:42:35 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 6 Aug 2001 10:42:35 +1000
Subject: [Twisted-Python] Working with Reality
References: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com>
Message-ID: <008301c11e10$afc3a870$ad7711ac@pikachu>

From: "M.J. Stahl" <mjmstahl at one.net>

> I would like to work towards developing Reality into a more mature
> environment, but (laughably) I am having trouble even getting the
> environment started (ie, I am recieving a traceback).
>
> Can someone please give me a general breakdown on getting TRDemo or
> Inheritance started.

I got Inheritance running, eventually, under Windows 98. If you'd like the
details of how, I will post them tomorrow as it is my home machine. I am at
work now, so I will most likely post in another 24 hours. I am in Australia
(GMT +1000). The Inheritance demo lets you go to lots of places which need a
description :) but entry of verbs is not available yet.

I couldn't get TRDemo going at all because it was looking for module
"library.box", which did not come with 0.9.3.

This is the area that got me interested in Twisted in the first place.

Good luck with your efforts.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From chrish at mincom.com  Sun Aug  5 20:51:02 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 6 Aug 2001 10:51:02 +1000
Subject: [Twisted-Python] runtests on Windows 98
References: <Pine.LNX.4.21.0108032330550.23374-100000@zaibach.twistedmatrix.com>
Message-ID: <008701c11e11$ddc950c0$ad7711ac@pikachu>

While doing up some documentation for Twisted on Windows, I found a small
problem with runtests. The test for DirDbm fails when the script tries to
create the file "/tmp/dirdbm". The creation of this file is handled by calls
to the os and os.path modules. Under Windows, an error occurs when trying to
create this directory.

There are a number of solutions to this problem but I don't know how similar
os and os.path conflicts have been resolved. Glyph, is there a standard way
to handle this? I don't know how prevalent the use of these modules is. It
may be that Twisted can not be ported to Windows. I don't think this will be
the case as I did build and run a static server.

A bigger concern as far as runtests goes is it does not shut down cleanly on
Windows. I have not tried to track this problem down yet, but I suspect it
has something to do with the os and os.path modules - such as the use of
fork(), for example. This is also a problem with running twistd to get the
static server going, but I think a wrapper Python script could fix this.

I'll post my Windows documentation when I get it finished.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Sun Aug  5 21:39:02 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 20:39:02 -0500 (CDT)
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <008301c11e10$afc3a870$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0108052037590.32115-100000@zaibach.twistedmatrix.com>

On Mon, 6 Aug 2001, Chris Hadgis wrote:

> I couldn't get TRDemo going at all because it was looking for module
> "library.box", which did not come with 0.9.3.

As I mentioned before, please upgrade.  0.9.4 is out, and the TRDemo
.tar.gz has been updated to fix this problem.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Sun Aug  5 22:02:33 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 21:02:33 -0500 (CDT)
Subject: [Twisted-Python] a - a cursed -1 pipe named .twistd-web-pb (weapon in hand)
Message-ID: <Pine.LNX.4.21.0108052053540.32115-100000@zaibach.twistedmatrix.com>

I know that I'm probably the most familiar one with this code, but if
anyone can figure out why it is that unix pipes often appear to hang
forever when you try to connect to them, and generally behave incorrectly
with twisted.internet, I'd like to know.

The code all appears to work just fine even with numeric unix sockets.  
As soon as I can I'll sit down with a W. Richard Stevens book and figure
out what's going on, but until then it's a constant annoyance to have to
be manually fixing up twistedmatrix.com's user directory when unix sockets
don't do what they're supposed to; so any help with this bug would be
appreciated.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From acapnotic at twistedmatrix.com  Mon Aug  6 04:39:01 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 6 Aug 2001 01:39:01 -0700
Subject: [Twisted-Python] Napkin on the Web
In-Reply-To: <20010805142452.A1825@troglodyte.menefee>
Message-ID: <20010806013901.A3634@troglodyte.menefee>

On Sun, Aug 05, 2001 at 02:24:52PM -0700, Kevin Turner wrote:
> Napkin is a whiteboard service over PB.  The server is nominally
> functional, and [...]

and now there's a twisted.web.Resource napkin viewer, which relies on a
PIL renderer.  These modules (napkin.webkin and napkin.pil_viewer) are
really much cleaner than the pygame_client is at the moment, so if
you're interested in writing a napkin client, look there.  Many of the
finer details aren't implemented, but the bulk of it is there.

However, the pygame_client is still the only thing available you can use
to *draw* on the napkin, aside from typing in commands to send blots
across the wire yourself.  I'll likely try to clean up this code, but
I'm not sure how far it will advance, due to a couple reasons.  One
being that if it's going to get a UI, I'd like a toolkit (roll-your-own
pygame widget set just isn't as fun as it used to be), and pyui says it
requires Python 2.1.  Another point is that some of the drawing
functions I want (e.g. ellipse) aren't available in the current pygame
release 1.1, but are in pygame CVS, so it might be better to wait for a
release there.

It would probably make a lot of sense to write a napkin client on a
canvas widget like Tk's or gnome's...

> You can ooggle the code at ~acapnotic/src/napkin or
> http://twistedmatrix.com/users/acapnotic/src/napkin/

There may be a napkin server running on twistedmatrix.com as well,
and a viewer to that server at
http://twistedmatrix.com/users/acapnotic.twistd/napkin

-- 
I would have called it "BackOfAnEnvelope", but it seemed a bit unwieldy.




From glyph at twistedmatrix.com  Mon Aug  6 04:55:13 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 6 Aug 2001 03:55:13 -0500 (CDT)
Subject: [Twisted-Python] Napkin on the Web
In-Reply-To: <20010806013901.A3634@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108060353540.19219-100000@zaibach.twistedmatrix.com>

Awesome work, kevin.  I'm excited to see the more functional clients for
this thing; I think we could probably use it as a development tool
(especially given how nice it would be to have box-and-line diagrams
describing PB object graphs)

On Mon, 6 Aug 2001, Kevin Turner wrote:

> I would have called it "BackOfAnEnvelope", but it seemed a bit unwieldy.

On the contrary, I think that 'napkin' goes quite well with the food
metaphor of twisted.spread ;-)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From carmstro at twistedmatrix.com  Mon Aug  6 10:17:36 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 6 Aug 2001 09:17:36 -0500
Subject: [Twisted-Python] TWN #5!
Message-ID: <20010806091736.A9762@twistedmatrix.com>


The Twisted Weekly News
=======================

#5th Issue. Monday, August 6, 2001

QOTW: (since this TWN covers two weeks, here are two quotes for your enjoyment!
hooray!)

  <Acapnotic> garble.  if I don't find a twisted.spread example soon, I
  might try to figure out what .spread is supposed to do by looking at the
  source directly
  <Acapnotic> which would probably be unhealthy
  <dash> Acapnotic: hey! i've been reading the source for the past month!
  didididididn't bother me at all!
  * dash giggles
  %
  <glyph> HELP ME SMALL CHILD I HAVE ATTEMPTED TO CREATE A WEB SERVER BUT I
  HAVE BECOME LOST

(for those of you who don't get the pokey reference in the second one, see
http://yellow5.com/pokey/archive.)

Welcome to the 5th issue of the Twisted Weekly News! Sorry that this one's a
week late - the editor actually had *real work* to do at work. This TWN is
packed with info, Twisted has seen a sudden growth spurt in users and in code,
and we're all very excited about that.

Progress
--------

OK, like I said, we have tons of stuff going on recently. Lots and lots of code
changes, here they are:

* Twisted 0.9.4: yes, another Twisted release[1] happened this week. This was a
  pretty full release, with bug fixes, new features, and general cleanup.
  twisted.spread.banana was ported to C, thus yielding a large increase in
  speed (optionally, of course!), PB was made incompatible with old versions
  when glyph added the option for passing a "reverse Perspective" to a server
  in requestPerspective, since this was such a commonly asked-about problem.
  Twisted.Words, the cool new IRC/IM killer was introduced, Twisted.Mail was
  re-integrated, and SPLs were renamed to TAPs.

* Chris Armstrong wrote an initial "mkserver" utility that replaced all the
  mess of mk*server utilities that were a part of Twisted. This was later
  renamed to 'mktap', to reflect the name change from "Server Pickles" to
  "Twisted APplications".

* Twisted.Words! This is the Cool Thing Of the Week, see below.

* cBanana: Glyph ported banana to C. Don't worry though, we will still be 100%
  pure-python for the foreseeable future, with C extensions just being
  optional. C code in Twisted should *never* be touched before coding in Python
  first, and only translating directly to C.

* Twisted.Mail: Moshez is back and better than ever, doing more work on the
  mail services in Twisted.

* Debian: Twisted 0.9.4 is in Debian Sid, the unstable branch. A
  million thank yous go out to Moshe Zadka, who is the Debian maintainer for
  Twisted.

* manpages: Moshe (what a guy!) also wrote manpages for all the utilities in
  Twisted, mainly so he could get the Debian package to pass lintian. Thanks
  again!

* More examples: check out the doc/examples/ directory for some snazzy PB demos
  and more.

* Kevin Turner wrote a Whiteboard app, "Napkin", which he just recently got
  into a usable state. It's not in Twisted CVS yet, but it should be soon. This
  is a pretty cool app for Twisted, and it's also Kevin's first significant
  contribution to Twisted. Hooray for Kevin! A round of applause for him!


Other Stuff
-----------

There has been lots going on involving Twisted even outside of progress in the
codebase. There's been a sudden growth-spurt in Twisted's popularity, and a lot
of people are starting to use it for their own projects. Tv, a now-regular of
#Python, reimplemented his mc-foo[2] program using PB. It's basically a super-
advanced MP3 player/list manager, that used to use XML-RPC. It took him 5 hours
to figure out PB and reimplement the entire thing using it.

DavidC_ implemented a simple chat server/client for a game that he's making. We
all want him to use Words, but it's cool that he's using PB anyway. :-) In the
process of doing this, he implemented a neat little STDIO Protocol that will
probably be assimilated by Twisted soon.

There was a whole lot of conversing on the mailing list this week, a summary of
it follows.

Kevin Turner started a thread[3] on Configuration, Persistence and Version
Control. A conversation followed in which Glyph pointed out that configuring
Twisted really can be as flexible as configuring other things, through version
controlling your TAP files as well as your initial start-up configuration
scripts.

Chris Armstrong posted a flaming[4] message about the naming of 'tcp.Port'. He
proposed "Listener" instead, and a rather long thread resulted. But, so far
this has resulted in nothing. (Let's all go egg Glyph's house!)

Pokey the Penguin sent a comforting message[5] to the list, informing us that the
Chinese weapons used in Code Red are inferior. Glyph agreed with a resounding
"YES!". Ironically, it was later found that when a Twisted Web server got hit
by Code Red, it was actually causing an exception to occur, although harmless.
The reason for this is that Code Red does not specify a HOST header, which
makes it an invalid HTTP request. Oh well, no harm done.

Kevin Turner started a very informative thread[6] in which Glyph taught him about
PB. Anyone who wants to learn it and is annoyed by the lack of documentation
should probably go read it, as well as looking at the simple examples in doc/
examples/.

M.J. Stahl showed some interest[7] in working on Reality. He had a problem getting
it working, and Glyph and Chris Hadgis helped him out a little bit, but he
hasn't replied since. Come on, M.J.! We'll help you however we can! :-)

Cool Thing Of the Week
----------------------
Twisted Words

Twisted Words is the coolest new addition to Twisted. It's basically an IRC/IM
killer, which uses spread.pb. Glyph's been working hard on this, and has
already interfaced the IRC service to it, as well as started on a web
administration interface. He also started writing InstanceMessenger, the GTK
user interface to twisted.words, and it has basic buddy list and messaging
functionality. Other than the obvious use for Words (normal every-day
conversations), another plus that is inherent in it's use of PB is that it is
well-integrated with other PB-using programs. One could start both a game
service and a Words service on the same port, and the game client could utilize
both through the same connection, allowing for in-game chat, as an example.
Thanks a whole lot Glyph!

Ok, that's it for this week. Thanks for reading!

Chris Armstrong <carmstro at twistedmatrix.com>

References
----------
[1] http://twistedmatrix.com/downloads
[2] http://mc-foo.sourceforge.net
[3] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000140.html
[4] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000145.html
[5] http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000161.html
[6] http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000166.html
[7] http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000172.html





From acapnotic at twistedmatrix.com  Mon Aug  6 17:16:47 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 6 Aug 2001 14:16:47 -0700
Subject: [Twisted-Python] [bug] spread/ui/gtkutil.Login, bad errback
Message-ID: <20010806141647.A2036@troglodyte.menefee>

Try logging on (with words or gtkmanhole) to a host which doesn't accept
your connection, and you get:

Traceback (innermost last):
  File "/home/kevint/cvs/zaibach/Twisted/twisted/spread/pb.py", line
972, in connectionLost
    errback()
TypeError: call of non-function (type tuple)

but browsing the source does not reveal any obvious flaws.




From chrish at mincom.com  Mon Aug  6 18:53:25 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Tue, 7 Aug 2001 08:53:25 +1000
Subject: [Twisted-Python] 0.9.5???
References: <20010806091736.A9762@twistedmatrix.com>
Message-ID: <00ce01c11eca$99a578b0$ad7711ac@pikachu>

I was expecting to download 0.9.4 today. I forgot my disk yesterday - bad
Hadgis. I was pleasantly surprised to see 0.9.5. I have copied this and will
install it tonight, time permitting. However, the link on the main page to
"Most Recent Version" is still pointing to 0.9.4 and is thus broken.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From chrish at mincom.com  Mon Aug  6 19:26:20 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Tue, 7 Aug 2001 09:26:20 +1000
Subject: [Twisted-Python] Working with Reality
References: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com> <008301c11e10$afc3a870$ad7711ac@pikachu>
Message-ID: <00d401c11ecf$33151dd0$ad7711ac@pikachu>

> From: "M.J. Stahl" <mjmstahl at one.net>

> > Can someone please give me a general breakdown on getting TRDemo or
> > Inheritance started.
>
> I got Inheritance running, eventually, under Windows 98. If you'd like the
> details of how, I will post them tomorrow as it is my home machine. I am
at
> work now, so I will most likely post in another 24 hours. I am in
Australia
> (GMT +1000). The Inheritance demo lets you go to lots of places which need
a
> description :) but entry of verbs is not available yet.

Okay, here it goes...

Note: these are the instructions for getting inheritance going on 0.9.3. I
imagine the instructions will be fairly similar for 0.9.4 and 0.9.5. Hmm,
except for the fact that spl files have been renamed to tap files and
mkserver is replacing mk*server. Anyhow, here is what I did.

* unzip inheritance.tar.gz into Twisted-0.9.3

This places build_map and the inheritance directory in Twisted-0.9.3. If you
plan on creating more than one reality server, you may want to rename
build_map to build_map_inherit to distinguish the build_map files of each
server

* gnusto build_map inherit.rpl mapcopy.py

This creates two files - inherit.rpl and mapcopy.py - from the build_map
file. inherit.rpl can then be used for...

* mkrealityserver inherit.rpl

This creates a file called reality.spl. This can be renamed if you are going
to run more than one world on the reality server. In fact, I would argue for
the case of using the rpl filename as the filename for the spl file, ie
inherit.rpl produces inherit.spl.

* twistd -f reality.spl

This starts the server with the reality.spl file. Start your browser and
point it to 127.0.0.1/8080 and you will see a login screen. The username is
"Damien" and the password is "admin".

If this doesn't get you going, let me know and I'll try and help you some
more.

Thanks to Glyph for the leg-up to get as far as I did.

If I get time tonight to look at 0.9.5, I will amend the instructions and
repost them.

Also, if the person or people responsible for creating the reality server
and the reality worlds is still on this list, I would like to hear from the
re: how they originally saw this project going when it was set aside. For
instance, was this meant to be a Python web-based version of an Inform
Z-machine or TADS interpreter? Something similar? Something different?

I hope this helps somewhat.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From m at moshez.org  Tue Aug  7 04:56:00 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue, 07 Aug 2001 11:56:00 +0300
Subject: [Twisted-Python] new function for t.i.main
Message-ID: <E15U2ee-0008C6-00@darjeeling>

daemonize() is cool, useful and should really be refactored out
of twistd
I really see no harm in providing more functionality in t.i.main
Flamewars re: correct debian packaging will be left for later.

def daemonize():
    if os.fork():
        os._exit(0)
    os.setsid()
    os.close(0)
    os.close(1)
    os.close(2)
    if os.fork():
        os._exit(0)
    os.umask(0)

Here's a quick thought about Debian packaging:
add a script to ./bin "debianize".
This script will take a .tap file and create a package named the same
as the .tap file which relevant /etc/init.d/package and 
/var/lib/package/package.tap
Perhaps even add it as a generic argument to mktap, so
mktap --debian web --static /var/www
will create the debian package.
One caveat: version numbers.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Tue Aug  7 06:19:26 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Tue, 7 Aug 2001 03:19:26 -0700
Subject: [Twisted-Python] [bug] web.resource.Resource.render.__doc__
Message-ID: <20010807031926.A3977@troglodyte.menefee>

My, that was annoying.
Resource.render.__doc__ says:

> Render a given resource.  
> 
> The return value of this method will be the rendered page, unless the
> return value is None, in which case it is this class's responsability
> to write the results to request.write(data), then call
> request.finish().

however, the magic value is not 'None', but web.server.NOT_DONE_YET,
a constant which is *NOT* defined as None.

So, which'll it be, boys?  Is the docstring wrong, or is the code?




From glyph at twistedmatrix.com  Tue Aug  7 18:14:34 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 7 Aug 2001 17:14:34 -0500 (CDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <E15U2ee-0008C6-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108071537510.15349-100000@zaibach.twistedmatrix.com>

On Tue, 7 Aug 2001, Moshe Zadka wrote:

> daemonize() is cool, useful and should really be refactored out
> of twistd
> I really see no harm in providing more functionality in t.i.main
> Flamewars re: correct debian packaging will be left for later.

[snip]

Daemonize's functionality is probably useful, however, there are a few
things it doesn't take into account.  Insofar as it's useful, most of
twistd should probably be incorporated into it; any less is offering
incomplete functionality.

After all, this is about as platform specific as you get.  If we have
daemonize, then we probably want to have a similiar function for starting
a Windows Service.  Moreover, it would be good if we could detect which
platform we're on, then do the appropriate thing for creating a daemon on
that platform.

This implies logging.  "daemonize" won't work if you're still writing to
standard output after you call it.

So I'd say daemonize should at least take a logfile, and a function +
varargs, and never return.

> Here's a quick thought about Debian packaging:
> add a script to ./bin "debianize".
> This script will take a .tap file and create a package named the same
> as the .tap file which relevant /etc/init.d/package and 
> /var/lib/package/package.tap
> Perhaps even add it as a generic argument to mktap, so
> mktap --debian web --static /var/www
> will create the debian package.
> One caveat: version numbers.

This sounds cool, with one minor caveat.

I don't want to give windows users the impression that they're totally
unsupported, especially any more than they already are.

We should make plans to have similiar windows-ize scripts, and even if we
don't have them, make it clear that we're not trying to make a
debian-specific server infrastructure.

Also, wouldn't this "debian" functionality be very similiar for redhat,
mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
name for it.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Tue Aug  7 18:28:50 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 7 Aug 2001 17:28:50 -0500 (CDT)
Subject: [Twisted-Python] [bug] web.resource.Resource.render.__doc__
In-Reply-To: <20010807031926.A3977@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108071726460.16353-100000@zaibach.twistedmatrix.com>

On Tue, 7 Aug 2001, Kevin Turner wrote:

> Resource.render.__doc__ says:
> > Render a given resource.  
> > ... unless the return value is None
> So, which'll it be, boys?  Is the docstring wrong, or is the code?

The docstring is wrong; I've just corrected it.  Sorry for the confusion.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Wed Aug  8 03:53:47 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 8 Aug 2001 00:53:47 -0700
Subject: [Twisted-Python] Multiplex
Message-ID: <20010808005347.A3740@troglodyte.menefee>

Preface:

Currently, Napkin blots (the things that get drawn on the napkin) are
immutable (in practice, if not in name).  They go out over the wire and
they're forgotten, presumably having been rendered on the other end.
But this evening, dash asked me to revisit the idea of moving around
objects which had been previously placed on the napkin.  

The following is what I would like to have to implement that goal -- but
I believe it will be useful for far more than just Napkin.  Even now,
the core Napkin service has practically nothing to do with the idea of
"whiteboards", and is just concerned with the far more general task of
distributing information.

What I've done with Napkin so far has taught me enough about PB that I
can see that this can be done.  Of course, there's a possibility that
Twisted already does this, and I have not yet uncovered it.  If that's
the case, speak up!

----

Dramatis personae:

Bob -- runs a PB.Multiplex service on twistedmatrix.com.

Alec, Amy, and Angus -- are each "Leaf nodes" of the service.
    They might be called peers, subscribers, listeners, or observers,
    although the last three terms, describing passive occupations, are
    probably not most appropriate.

kermit -- don't look for him in the dramatis personae, he's just an
    instance of a Frog.

----

The Goal:
is quite simple.  When Amy moves the red circle, it moves on Alec and
Angus's napkins as well.  When Angus hits the "change artist" button,
Amy and Alec's players switch tunes too.  When Alec clicks on the frog,
all three workstations croak.  Get the idea?


Example:

Alec has a Frog object (referred to as 'kermit') from Bob's multiplex
service.  

Alec invokes kermit.shout_croak().  The 'shout_' prefix indicates that
this action does not take place locally, but rather it happens
world-wide over the multiplexer.  Somewhere in kermit's private parts,
there is a Proxy referring to kermit's counterpart in Bob's service.
kermit does getattr(self._proxy, 'croak'), and a short time later...

...kermit and his other avatars on Amy and Angus's machines get their
.remote_croak() methods invoked.  Amy and Alec happen to be running the
same client, one which provides an audio environment, and a giant
"Ribbit" echos through each of their rooms.  Angus is running a
minimalistic text client on his Wyse 85 terminal, and sees a discrete
"kermit: *croak*" message.  Somewhere on the far side of the galaxy, a
Sirius Cybernetics Genuine People Personality Prototype gets the
message, promptly self-terminates, and falls to the floor.

----

As you can see, while kermit's interface is the same in each of the
clients, the local implementation of the rendering methods differs.
(This is why I thought I might want a Referenced class object I could
descend Frog from in each of the clients, but I'm not sure it's
practical to broker classes.)  This can be achieved through a mechanism
very similar to that used for Copied/Copy, there's a tag identifing the
copied serialized Frog, and the Copy is constructed with a local
implementation of Frog, one of Amy's choosing.

On Amy's end, the difference between MultiplexLeaf and Copy is that
kermit must retain a link back to Bob's place, where his spreadable self
resides in a form resembling Proxied.

On Bob's end, the difference between Multiplexed and Proxied is that
the Multiplexed kermit must retain references to all the nodes/leaves of
himself, so that when someone shout_s at him, he can tell all his selves
to do the same.  That also means that aside from the construction, a
MultiplexLeaf behaves much more like a Referenced object than a Copy.

----

So now we have an object which when we wiggle its toe here, it wiggles
its toe there.  That's pretty good, but the exciting part is when we use
it as a container or a vechile.  Say my Napkin is Multiplexed.  Now I
say napkin.shout_draw(blot), with the Blot class being Multiplexed as
well.  When the blot gets passed from Bob to Alec and friends, leaves of
the blot are constructed in their clients -- and references to those
leaves are held in the Multiplexed blot.  Now, when I say
blot.shout_rotate(90)...  Isn't this fun?

----

Questions answered:

Q1. Why does Alec have to use the shout_ prefix?  Don't the adverb
prefixes usually go where the method is defined, on the receiving end?

A1. Remember, Alec's Frog is not just a Proxy or a Reference.  kermit was
constructed an instance of a class defined on Alec's side, a class that
likely has methods of its own, which Alec's program would like to use
locally.

Say Angus has a blot.  He'll want that blot drawn in his view locally,
while he positions/sizes it, before he commits it to the world.  Having
an interface to manipulate the blot locally (rather than through the
multiplexer) is essential here, as I'm making no distinction between
the-local-object-on-my-foo-canvas and the network-object.


Issues not addressed here (but not showstoppers):

1) Subscription -- how do you join ranks with Alec, Amy, and Angus?
This is closely related to the question of

2) Construction -- do multiplex objects have to be issued by Bob's
service, or do they just spring into being whenever someone passes a
MultiplexLeaf through the serializer?  Just what role *is* Bob's service
playing, anyway?

But you know something?  Bob's service doesn't really have to know
anything about Blots or Frogs or Napkins in particular...  it just has
to pass along the right copyTags, so that compatible objects are
constructed in each of the peers.

Another cool-thing point: I've found no reason why you shouldn't be able
to chain Multiplexed objects.  Just have it look like Angus's peer on
one side, and one of Bob's multiplexed objects on the other, and it
should function in both directions.  This lets you build more
interesting network-topologies if you don't want all the peers connected
to one point.


That's all I've got for tonight, boys and girls.  Hope you found reading
this worthwhile.  So tell me, whaddya think?  Will it work?





From m at moshez.org  Wed Aug  8 04:03:11 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 11:03:11 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
Message-ID: <20010808080311.D74663941@darjeeling>

On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Daemonize's functionality is probably useful, however, there are a few
> things it doesn't take into account.  Insofar as it's useful, most of
> twistd should probably be incorporated into it; any less is offering
> incomplete functionality.

No it isn't. It's offering *just* the daemonize functionality. You
can have a higher-level wrapper *on top* of that which is portable,
but daemonize() is useful.

> After all, this is about as platform specific as you get.

Yes it is. I firmly believe in platform-specific APIs which are then
wrapped in platform independent APIs. I don't want anything to restrict
my access to the OS

> If we have
> daemonize, then we probably want to have a similiar function for starting
> a Windows Service.

Yes, it would. This isn't an argument against daemonize.

> Moreover, it would be good if we could detect which
> platform we're on, then do the appropriate thing for creating a daemon on
> that platform.

Agreed.
But not with daemonize() -- with startService(....) which would call
daemonize() on UNIX.

> This implies logging.  "daemonize" won't work if you're still writing to
> standard output after you call it.

Well, it closes FD 1, so it works well enough for that.
Logging is left for a higher level API. As is writing PID files (which
must be done after daemonizing but before getting into the main loop)

> So I'd say daemonize should at least take a logfile, and a function +
> varargs, and never return.

No, that's startService, another useful API. 

> This sounds cool, with one minor caveat.
> 
> I don't want to give windows users the impression that they're totally
> unsupported, especially any more than they already are.

Fine, support them ;-)

> We should make plans to have similiar windows-ize scripts, and even if we
> don't have them, make it clear that we're not trying to make a
> debian-specific server infrastructure.

*I* don't care if my server infrastructure is Debian specific.

> Also, wouldn't this "debian" functionality be very similiar for redhat,
> mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
> name for it.

No. Debian uses .deb packages. Maybe whoever does RPM chooses to redhatize
or rpmize (I'm not sure: would she support SuSE? Mandrake?) Solaris
uses its own unique wonderful format, as does MacOS X and AIX.
I would be happy to put my /etc/init.d/ templates where everyone can use
them. Everything else is distribution specific. It's not hard to have
a hand install of a .tap if you have the /etc/init.d template.

I want the Debian packages to be good enough that I'll feel good enough
about uploading them to the official Debian archive, as well as maintainig
a huge apt source on tm.com. 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Tue Aug  7 13:55:43 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue,  7 Aug 2001 20:55:43 +0300 (IDT)
Subject: [Twisted-Python] CVS Sync Mails
Message-ID: <20010807175543.F3CBF393D@darjeeling>

Can we e-mail twisted-python instead of acapnotic?
*Please?*
Or at least have a twisted-python-checkins at tm.com for that.

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Tue Aug  7 13:15:17 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue,  7 Aug 2001 20:15:17 +0300 (IDT)
Subject: [Twisted-Python] fwd: Re: [Python-Dev] Zope porting to jython
Message-ID: <20010807171517.697B73939@darjeeling>

Other then the interesting thread, note the description of
the way Zope does "safe python".
Glyph, should I start adding Depends: python-bytecodehacks? ;-)

To: "Samuele Pedroni" <pedroni at inf.ethz.ch>
From: Jeremy Hylton <jeremy at zope.com>
Cc: <python-dev at python.org>
Subject: Re: [Python-Dev] Zope porting to jython

>>>>> "SP" == Samuele Pedroni <pedroni at inf.ethz.ch> writes:

  SP> my personal position is to help them as all other jython users,
  SP> fixing incompatibilities with CPython and answering to
  SP> questions. Nothing special. I can imagine that one of the big
  SP> problem could be restricted execution (if Zope uses that),
  SP> admitted that any C code functionality can be rewritten in Java.

Zope doesn't use restricted execution.  In Zope 2.4, the
RestrictedPython project uses the compiler package to generate safe
bytecode from Python source code.  I presume something similar could
be achieved using jythonc, but don't know how hard that would be.

  SP> If the PythonLabs have an "official" position/opinion on this
  SP> and in particular on the last quite speculative message (from
  SP> Joseph Grace) in the thread, they may post something. I can say
  SP> something about technical aspects, but I don't feel that I
  SP> should channel/or invent PythonLabs opinions.

I don't think there's an official PythonLabs opinion on this in
general.  If we have one its this:

The project(s) -- including the just announced phabric
effort -- are worthwhile.  We are happy to give advice and make
changes to help the projects where we can.  I expect the same holds
true for the rest of Zope Corp.

If there are genuine CPython/Jython incompatibilities that hinder the
project, there's no reason not to fix them.  The project may also
serve as a vehicle to further explore what metaobject protocols should
be exported by Jython.

Jeremy


_______________________________________________
Python-Dev mailing list
Python-Dev at python.org
http://mail.python.org/mailman/listinfo/python-dev

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Tue Aug  7 13:51:07 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue,  7 Aug 2001 20:51:07 +0300 (IDT)
Subject: [Twisted-Python] Another Change to Factory.buildProtocol
Message-ID: <20010807175107.2B849393B@darjeeling>

    def buildProtocol(self, connection):
        """Create an instance of a subclass of Protocol.

        The returned instance will handle input on an incoming server
        connection, and an attribute "factory" pointing to the creating
        factory.  Override this method to alter how Protocol instances get
        created.
        """
        p = self.protocol()
        p.factory = self
+       p.connection = connection
        return p


-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Wed Aug  8 03:53:17 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 10:53:17 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
Message-ID: <20010808075317.57A423940@darjeeling>

On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Daemonize's functionality is probably useful, however, there are a few
> things it doesn't take into account.  Insofar as it's useful, most of
> twistd should probably be incorporated into it; any less is offering
> incomplete functionality.

No it isn't. It's offering *just* the daemonize functionality. You
can have a higher-level wrapper *on top* of that which is portable,
but daemonize() is useful.

> After all, this is about as platform specific as you get.

Yes it is. I firmly believe in platform-specific APIs which are then
wrapped in platform independent APIs. I don't want anything to restrict
my access to the OS

> If we have
> daemonize, then we probably want to have a similiar function for starting
> a Windows Service.

Yes, it would. This isn't an argument against daemonize.

> Moreover, it would be good if we could detect which
> platform we're on, then do the appropriate thing for creating a daemon on
> that platform.

Agreed.
But not with daemonize() -- with startService(....) which would call
daemonize() on UNIX.

> This implies logging.  "daemonize" won't work if you're still writing to
> standard output after you call it.

Well, it closes FD 1, so it works well enough for that.
Logging is left for a higher level API. As is writing PID files (which
must be done after daemonizing but before getting into the main loop)

> So I'd say daemonize should at least take a logfile, and a function +
> varargs, and never return.

No, that's startService, another useful API. 

> This sounds cool, with one minor caveat.
> 
> I don't want to give windows users the impression that they're totally
> unsupported, especially any more than they already are.

Fine, support them ;-)

> We should make plans to have similiar windows-ize scripts, and even if we
> don't have them, make it clear that we're not trying to make a
> debian-specific server infrastructure.

*I* don't care if my server infrastructure is Debian specific.

> Also, wouldn't this "debian" functionality be very similiar for redhat,
> mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
> name for it.

No. Debian uses .deb packages. Maybe whoever does RPM chooses to redhatize
or rpmize (I'm not sure: would she support SuSE? Mandrake?) Solaris
uses its own unique wonderful format, as does MacOS X and AIX.
I would be happy to put my /etc/init.d/ templates where everyone can use
them. Everything else is distribution specific. It's not hard to have
a hand install of a .tap if you have the /etc/init.d template.

I want the Debian packages to be good enough that I'll feel good enough
about uploading them to the official Debian archive, as well as maintainig
a huge apt source on tm.com. 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Wed Aug  8 04:31:36 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 8 Aug 2001 01:31:36 -0700
Subject: [Twisted-Python] Multiplex
In-Reply-To: <20010808005347.A3740@troglodyte.menefee>
Message-ID: <20010808013136.A3911@troglodyte.menefee>

Ok, Glyph is givin' me funny looks.

The idea that hooked me in to that whole mess was the bit about the peer
getting a single object which has both locally-defined properties *and*
can still act as a Reference.

again, the idea analogous to subclassing.  Python checks the subclass
for the attribute first, and then checks its base classes.  I want to
have the object search its local class first, and then fall back to
being a Reference.  I dunno how to do that currently.

The two-way aspect is important to me as well, but that's already
covered.




From m at moshez.org  Wed Aug  8 02:09:49 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 09:09:49 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <Pine.LNX.4.21.0108071537510.15349-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108071537510.15349-100000@zaibach.twistedmatrix.com>
Message-ID: <20010808060949.913F6393F@darjeeling>

On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Daemonize's functionality is probably useful, however, there are a few
> things it doesn't take into account.  Insofar as it's useful, most of
> twistd should probably be incorporated into it; any less is offering
> incomplete functionality.

No it isn't. It's offering *just* the daemonize functionality. You
can have a higher-level wrapper *on top* of that which is portable,
but daemonize() is useful.

> After all, this is about as platform specific as you get.

Yes it is. I firmly believe in platform-specific APIs which are then
wrapped in platform independent APIs. I don't want anything to restrict
my access to the OS

> If we have
> daemonize, then we probably want to have a similiar function for starting
> a Windows Service.

Yes, it would. This isn't an argument against daemonize.

> Moreover, it would be good if we could detect which
> platform we're on, then do the appropriate thing for creating a daemon on
> that platform.

Agreed.
But not with daemonize() -- with startService(....) which would call
daemonize() on UNIX.

> This implies logging.  "daemonize" won't work if you're still writing to
> standard output after you call it.

Well, it closes FD 1, so it works well enough for that.
Logging is left for a higher level API. As is writing PID files (which
must be done after daemonizing but before getting into the main loop)

> So I'd say daemonize should at least take a logfile, and a function +
> varargs, and never return.

No, that's startService, another useful API. 

> This sounds cool, with one minor caveat.
> 
> I don't want to give windows users the impression that they're totally
> unsupported, especially any more than they already are.

Fine, support them ;-)

> We should make plans to have similiar windows-ize scripts, and even if we
> don't have them, make it clear that we're not trying to make a
> debian-specific server infrastructure.

*I* don't care if my server infrastructure is Debian specific.

> Also, wouldn't this "debian" functionality be very similiar for redhat,
> mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
> name for it.

No. Debian uses .deb packages. Maybe whoever does RPM chooses to redhatize
or rpmize (I'm not sure: would she support SuSE? Mandrake?) Solaris
uses its own unique wonderful format, as does MacOS X and AIX.
I would be happy to put my /etc/init.d/ templates where everyone can use
them. Everything else is distribution specific. It's not hard to have
a hand install of a .tap if you have the /etc/init.d template.

I want the Debian packages to be good enough that I'll feel good enough
about uploading them to the official Debian archive, as well as maintainig
a huge apt source on tm.com. 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Wed Aug  8 05:27:44 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 8 Aug 2001 02:27:44 -0700
Subject: [Twisted-Python] CVS Sync Mails
In-Reply-To: <20010807175543.F3CBF393D@darjeeling>
Message-ID: <20010808022744.A4040@troglodyte.menefee>

On Tue, Aug 07, 2001 at 08:55:43PM +0300, Moshe Zadka wrote:
> Can we e-mail twisted-python instead of acapnotic?
> *Please?*
> Or at least have a twisted-python-checkins at tm.com for that.

When glyph sets up cvs-spam list, just put the address where 'acapnotic'
is now in CVSROOT/loginfo.  

Or, lacking a cvs-spam list, you can append your address to the end of
that same line...

(you can check out CVSROOT as you would any other module, ditto for
committing the loginfo changes.)




From m at moshez.org  Wed Aug  8 05:40:35 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 12:40:35 +0300 (IDT)
Subject: [Twisted-Python] CVS Sync Mails
In-Reply-To: <20010808022744.A4040@troglodyte.menefee>
References: <20010808022744.A4040@troglodyte.menefee>
Message-ID: <20010808094035.AA4C63937@darjeeling>

On Wed, 8 Aug 2001, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> Or, lacking a cvs-spam list, you can append your address to the end of
> that same line...
 
I will...
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From itamar at zoteca.com  Wed Aug  8 07:41:30 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Wed, 08 Aug 2001 14:41:30 +0300
Subject: [Twisted-Python] twisted.internet.ssl
Message-ID: <3B71256A.20602@zoteca.com>

1) You'll need pyopenssl from pyopenssl.sf.net.

2) This is totally untested.

Hint: pyopenssl 0.3 segfaults if you try to write to an SSL connection 
before you connect().

-- 
itamar(at)shtull-trauring.org  ||  itamar(at)zoteca.com
http://itamarst.org            ||  http://www.zoteca.com
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ssl.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20010808/89152695/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: server.pem
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20010808/89152695/attachment-0001.txt 

From glyph at twistedmatrix.com  Wed Aug  8 07:44:08 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 06:44:08 -0500 (CDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <20010808080311.D74663941@darjeeling>
Message-ID: <Pine.LNX.4.21.0108080314310.17585-100000@zaibach.twistedmatrix.com>

On Wed, 8 Aug 2001, Moshe Zadka wrote:

> On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> > any less is offering incomplete functionality.

> No it isn't. It's offering *just* the daemonize functionality. You can
> have a higher-level wrapper *on top* of that which is portable, but
> daemonize() is useful.

Sorry, no.  If you don't redirect stdout properly, your daemon is broken,
unix or no.

> > Moreover, it would be good if we could detect [...]

> Agreed.
> But not with daemonize() -- with startService(....) which would call
> daemonize() on UNIX.

Yes.  And it should be strongly deprecated to call daemonize directly.

> > So I'd say daemonize should at least take a logfile, and a function +
> > varargs, and never return.
> 
> No, that's startService, another useful API. 

I would argue that daemonize is not useful without this API.  It's
sufficiently small that everyone who wants to write UNIX-specific servers
has to know about it anyway; and if they don't want to know about those
sorts of things they ought to use the cross-platform API.

> *I* don't care if my server infrastructure is Debian specific.

Yes, and it's people like you that I'm trying to protect users from :-)

What additional _semantics_ does unix 'daemonize' provide that a
cross-platform startBackgroundServer() doesn't?  Do you really need the
extra 40-odd bytes of stack space for the Python frame that you're losing
by having a call-through approach rather than returning?

All it really lets you do is write servers that require a programmer to
run on Windows.  If there's no good reason for that, it's silly.

For example, although the 'process' object doesn't currently run on
Windows, its external API just relies on the notion of a process which can
be written to and read from as a file.  Once J?rgen finally writes that
cgi-for-nt implementation he was talking about many months ago, I'm sure
it'll work fine on that platform ;-).

> I want the Debian packages to be good enough that I'll feel good enough
> about uploading them to the official Debian archive, as well as maintainig
> a huge apt source on tm.com. 

Well, I definitely support your desire for high quality.  However, what's
this about a "huge apt source on tm.com"?

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Wed Aug  8 07:48:59 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 06:48:59 -0500 (CDT)
Subject: [Twisted-Python] Multiplex
In-Reply-To: <20010808013136.A3911@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108080644230.29078-100000@zaibach.twistedmatrix.com>

This is what Cached was designed for :-).

You do realize, however, that even in a Copied, you may return something
like {'foo': self.foo, 'remote', Proxy(perspective, self)} from
YourCopied.getStateToCopyFor, right?

Then you can copy your cake and proxy it too...

On Wed, 8 Aug 2001, Kevin Turner wrote:

> Ok, Glyph is givin' me funny looks.
> 
> The idea that hooked me in to that whole mess was the bit about the peer
> getting a single object which has both locally-defined properties *and*
> can still act as a Reference.
> 
> again, the idea analogous to subclassing.  Python checks the subclass
> for the attribute first, and then checks its base classes.  I want to
> have the object search its local class first, and then fall back to
> being a Reference.  I dunno how to do that currently.
> 
> The two-way aspect is important to me as well, but that's already
> covered.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Wed Aug  8 10:24:35 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 17:24:35 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <Pine.LNX.4.21.0108080314310.17585-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108080314310.17585-100000@zaibach.twistedmatrix.com>
Message-ID: <20010808142435.5D4553937@darjeeling>

On Wed, 8 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Sorry, no.  If you don't redirect stdout properly, your daemon is broken,
> unix or no.

I'm willing to compromise on the stdout issue.
The loop issue isn't about stack space - it's about doing stuff between
the daemonizing and the looping without writing another function.
The classical example is 

daemonize(logfile)
open(pidfile, 'w').write(str(os.getpid()))
app.run()
 
> Yes.  And it should be strongly deprecated to call daemonize directly.

Why? Even if I'm writing something UNIX specific?

> I would argue that daemonize is not useful without this API.  

And that would be akin to argue that fork() is not useful without
spawn(). The fork/exec in UNIX has been shown to be very powerful.

> It's
> sufficiently small that everyone who wants to write UNIX-specific servers
> has to know about it anyway; and if they don't want to know about those
> sorts of things they ought to use the cross-platform API.

But knowing and "writing it 10 times" is different.
Especially, "and the 8th time, use stdout.close() instead of os.close(1)".

> > *I* don't care if my server infrastructure is Debian specific.
> 
> Yes, and it's people like you that I'm trying to protect users from :-)

I'm not writing unportable code intentionally. I just don't care
about more portability which degrades quality. Like not using
fork() because it's not portable.

That sentence was written about why I want a --debianize option to 
mktap. You took it out of context.

> All it really lets you do is write servers that require a programmer to
> run on Windows.  If there's no good reason for that, it's silly.

It lets me have convenience in return for portability to a system 
nobody I really care about runs.

> For example, although the 'process' object doesn't currently run on
> Windows, its external API just relies on the notion of a process which can
> be written to and read from as a file.  Once J=FCrgen finally writes that
> cgi-for-nt implementation he was talking about many months ago, I'm sure
> it'll work fine on that platform ;-).

Sure, and that's a great abstraction -- for those who want to use it.
You would not argue that this means that twisted programs cannot use
fork(), right?

> Well, I definitely support your desire for high quality.  However, what's
> this about a "huge apt source on tm.com"?

PArtly a joke, partly a vision for a world where everybody uploads
packages into tm.com/apt, and then just

"apt-get install integrated-web-and-mail-server"

will work.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Wed Aug  8 13:08:15 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 20:08:15 +0300 (IDT)
Subject: [Twisted-Python] Daemonize...trying to reach a compromise.
Message-ID: <20010808170815.795293937@darjeeling>

OK, here's where I think we stand:

I add to daemonize another argument, a logfile to log to,
and it is ok to check it in. Correct?

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Wed Aug  8 17:33:21 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu,  9 Aug 2001 00:33:21 +0300 (IDT)
Subject: [Twisted-Python] [URGENT] Missing packages in setup.py
Message-ID: <20010808213321.EEA933937@darjeeling>

People, the following packages are missing from setup.py

twisted.tap
twisted.mail

Please insert them ASAP.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Wed Aug  8 17:53:09 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 16:53:09 -0500 (CDT)
Subject: [Twisted-Python] [URGENT] Missing packages in setup.py
In-Reply-To: <20010808213321.EEA933937@darjeeling>
Message-ID: <Pine.LNX.4.21.0108081653010.2756-100000@zaibach.twistedmatrix.com>

fix it, please.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph

On Thu, 9 Aug 2001, Moshe Zadka wrote:

> People, the following packages are missing from setup.py
> 
> twisted.tap
> twisted.mail
> 
> Please insert them ASAP.
> -- 
> Moshe Zadka - http://moshez.geek
> (if you're not cool, http://moshez.org is still working)
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 





From m at moshez.org  Wed Aug  8 18:39:22 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu,  9 Aug 2001 01:39:22 +0300 (IDT)
Subject: [Twisted-Python] [URGENT] Missing packages in setup.py
In-Reply-To: <Pine.LNX.4.21.0108081653010.2756-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108081653010.2756-100000@zaibach.twistedmatrix.com>
Message-ID: <20010808223922.58D863937@darjeeling>

On Wed, 8 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> fix it, please.

Fixed.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From carmstro at twistedmatrix.com  Wed Aug  8 21:03:30 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 8 Aug 2001 21:03:30 -0400
Subject: [Twisted-Python] twisted.internet.ssl
In-Reply-To: <3B71256A.20602@zoteca.com>
Message-ID: <20010808210330.A3923@Fookidla.org>

So how hard would it be too hook this up to twisted.spread? It'd be cool
if there was a really transparent way to use PB over SSL.

On Wed, Aug 08, 2001 at 02:41:30PM +0300, Itamar Shtull-Trauring wrote:
> 1) You'll need pyopenssl from pyopenssl.sf.net.
> 
> 2) This is totally untested.
> 
> Hint: pyopenssl 0.3 segfaults if you try to write to an SSL connection 
> before you connect().
> 
> -- 
> itamar(at)shtull-trauring.org  ||  itamar(at)zoteca.com
> http://itamarst.org            ||  http://www.zoteca.com

> # System imports
> from OpenSSL import SSL
> 
> # sibling imports
> import tcp
> 
> class Client(tcp.Client):
>     """I am an SSL client.
>     """
>     def createContext(self):
>         """
>         Create a SSL context. Subclasses may want to override.
>         """
>         self.ctx = SSL.Context(SSL.SSLv23_METHOD)
> 
>     def createInternetSocket(self):
>         """(internal) create an SSL socket
>         """
>         sock = tcp.Client.createInternetSocket(self)
>         return SSL.Connection(self.ctx, sock)
> 
> class Port(tcp.Port):
>     """I am an SSL server.
>     """
>     def createContext(self):
>         """
>         Create a SSL context. Subclasses may want to override.
>         """
>         self.ctx = SSL.Context(SSL.SSLv23_METHOD)
>         self.ctx.use_certificate_file('server.pem')
>         self.ctx.use_privatekey_file('server.pem')
>     
>     def createInternetSocket(self):
>         """(internal) create an SSL socket
>         """
>         sock = tcp.Port.createInternetSocket(self)
>         return SSL.Connection(self.ctx, sock)

> -----BEGIN CERTIFICATE-----
> MIIDBjCCAm+gAwIBAgIBATANBgkqhkiG9w0BAQQFADB7MQswCQYDVQQGEwJTRzER
> MA8GA1UEChMITTJDcnlwdG8xFDASBgNVBAsTC00yQ3J5cHRvIENBMSQwIgYDVQQD
> ExtNMkNyeXB0byBDZXJ0aWZpY2F0ZSBNYXN0ZXIxHTAbBgkqhkiG9w0BCQEWDm5n
> cHNAcG9zdDEuY29tMB4XDTAwMDkxMDA5NTEzMFoXDTAyMDkxMDA5NTEzMFowUzEL
> MAkGA1UEBhMCU0cxETAPBgNVBAoTCE0yQ3J5cHRvMRIwEAYDVQQDEwlsb2NhbGhv
> c3QxHTAbBgkqhkiG9w0BCQEWDm5ncHNAcG9zdDEuY29tMFwwDQYJKoZIhvcNAQEB
> BQADSwAwSAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh
> 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAaOCAQQwggEAMAkGA1UdEwQC
> MAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRl
> MB0GA1UdDgQWBBTPhIKSvnsmYsBVNWjj0m3M2z0qVTCBpQYDVR0jBIGdMIGagBT7
> hyNp65w6kxXlxb8pUU/+7Sg4AaF/pH0wezELMAkGA1UEBhMCU0cxETAPBgNVBAoT
> CE0yQ3J5cHRvMRQwEgYDVQQLEwtNMkNyeXB0byBDQTEkMCIGA1UEAxMbTTJDcnlw
> dG8gQ2VydGlmaWNhdGUgTWFzdGVyMR0wGwYJKoZIhvcNAQkBFg5uZ3BzQHBvc3Qx
> LmNvbYIBADANBgkqhkiG9w0BAQQFAAOBgQA7/CqT6PoHycTdhEStWNZde7M/2Yc6
> BoJuVwnW8YxGO8Sn6UJ4FeffZNcYZddSDKosw8LtPOeWoK3JINjAk5jiPQ2cww++
> 7QGG/g5NDjxFZNDJP1dGiLAxPW6JXwov4v0FmdzfLOZ01jDcgQQZqEpYlgpuI5JE
> WUQ9Ho4EzbYCOQ==
> -----END CERTIFICATE-----
> -----BEGIN RSA PRIVATE KEY-----
> MIIBPAIBAAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh
> 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAQJBAIqm/bz4NA1H++Vx5Ewx
> OcKp3w19QSaZAwlGRtsUxrP7436QjnREM3Bm8ygU11BjkPVmtrKm6AayQfCHqJoT
> ZIECIQDW0BoMoL0HOYM/mrTLhaykYAVqgIeJsPjvkEhTFXWBuQIhAM3deFAvWNu4
> nklUQ37XsCT2c9tmNt1LAT+slG2JOTTRAiAuXDtC/m3NYVwyHfFm+zKHRzHkClk2
> HjubeEgjpj32AQIhAJqMGTaZVOwevTXvvHwNEH+vRWsAYU/gbx+OQB+7VOcBAiEA
> oolb6NMg/R3enNPvS1O4UU1H8wpaF77L4yiSWlE0p4w=
> -----END RSA PRIVATE KEY-----
> -----BEGIN CERTIFICATE REQUEST-----
> MIIBDTCBuAIBADBTMQswCQYDVQQGEwJTRzERMA8GA1UEChMITTJDcnlwdG8xEjAQ
> BgNVBAMTCWxvY2FsaG9zdDEdMBsGCSqGSIb3DQEJARYObmdwc0Bwb3N0MS5jb20w
> XDANBgkqhkiG9w0BAQEFAANLADBIAkEArL57d26W9fNXvOhNlZzlPOACmvwOZ5Ad
> NgLzJ1/MfsQQJ7hHVeHmTAjM664V+fXvwUGJLziCeBo1ysWLRnl8CQIDAQABoAAw
> DQYJKoZIhvcNAQEEBQADQQA7uqbrNTjVWpF6By5ZNPvhZ4YdFgkeXFVWi5ao/TaP
> Vq4BG021fJ9nlHRtr4rotpgHDX1rr+iWeHKsx4+5DRSy
> -----END CERTIFICATE REQUEST-----


-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Wed Aug  8 21:10:13 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 20:10:13 -0500 (CDT)
Subject: [Twisted-Python] twisted.internet.ssl
In-Reply-To: <20010808210330.A3923@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0108082009020.20476-100000@zaibach.twistedmatrix.com>

On Wed, 8 Aug 2001, Chris Armstrong wrote:

> So how hard would it be too hook this up to twisted.spread? It'd be cool
> if there was a really transparent way to use PB over SSL.

Assuming it works,

 1) pb does not require anything but a reliable byte stream

 2) tcp provides a reliable byte stream

 3) ssl provides a reliable byte stream

from pb's level, this should be totally undetectable.
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From chrish at mincom.com  Thu Aug  9 01:40:47 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Thu, 9 Aug 2001 15:40:47 +1000
Subject: [Twisted-Python] Working with Reality
References: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com> <008301c11e10$afc3a870$ad7711ac@pikachu> <00d401c11ecf$33151dd0$ad7711ac@pikachu>
Message-ID: <01b601c12095$d79d9810$ad7711ac@pikachu>

I loaded Twisted-0.9.5 on my Win98 machine yesterday.

The instructions in the readme files for the inheritance and trdemo worlds
were very good. I built both worlds and was able to run them successfully -
up to a point.

I was able to use the same DOS session up to and including the instrucition
to run twistd with the reality.tap. At this point I opened up Internet
Explorer, went to \\localhost\8080, and saw the login screen. After entering
the username and password I was able to navigate around both worlds okay.
The problem came with running faucet. I could not get faucet to communicate
with twistd or Internet Explorer. I *think* faucet is where the player would
be able to enter commands for the game. I saw some of the other comments on
the list earlier re: Windows and its lack of a fork() call, and I suspect
this is the problem. If Twisted is to become portable across platforms, then
this problem will need to be addressed at some stage.

I really would like to help with the reality part of the Twisted project,
but unless I get access to a Unix OS or Twisted works 100% under Windows, I
don't know how much I can do :( I am still keen to hear what visions the
original reality developers had (or have) for the future.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From m at moshez.org  Thu Aug  9 05:05:17 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu,  9 Aug 2001 12:05:17 +0300 (IDT)
Subject: [Twisted-Python] Debian Packaging
Message-ID: <20010809090517.45E833937@darjeeling>

First of all, let me share with you a script I use to check
whether the current CVS will generate a correct Debian package.
Keep in mind that this is a test script, and is far from production
quality.

---------- cut here -----
#!/bin/sh
name=`dpkg-parsechangelog |grep Source | awk -F: '{print $2}'|tr -d ' '`
version=`dpkg-parsechangelog |grep Version | awk -F: '{print $2}'|awk -F- '{print $1}'|tr -d ' '`
build=../debian-build
dir=$build/$name-$version
mkdir $dir
cp -ar * $dir
cd $build
find . -name CVS | xargs rm -rf
tar czf ${name}_$version.orig.tar.gz $name-$version
cd $dir
dpkg-buildpackage -rfakeroot -uc -us
cd ..
rm -rf $name-$version
---------- cut here -----

Now, to have a well installed twisted.web server, just
use this script (run it when the current directory is the toplevel CVS
directory, and make sure there's a directory called "debian-build" as
a sister directory)

Now, go into ../debian-build
install the generated twisted_*.deb
Now, run /usr/bin/mktap web, or use your favourite tap file.
use /usr/bin/tap2deb -t file.tap -m 'Your Name <email at example.com>'
Go into .build, and install the generated .deb
This will start your web server, and make sure it gets restarted 
on reboots.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Thu Aug  9 12:27:14 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Aug 2001 11:27:14 -0500 (CDT)
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <01b601c12095$d79d9810$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0108091110470.1302-100000@zaibach.twistedmatrix.com>

On Thu, 9 Aug 2001, Chris Hadgis wrote:

> I loaded Twisted-0.9.5 on my Win98 machine yesterday.

Yay!

> The instructions in the readme files for the inheritance and trdemo worlds
> were very good. I built both worlds and was able to run them successfully -
> up to a point.

Do not despair!  There's only one minor error.

> The problem came with running faucet.

Here's the answer to your problem: you're probably logging in to the
'reality' service.  Unfortunately login error reporting is not the various
PB clients' strong point (bug noted...).  Change the "reality" field on
your login dialog to be 'twisted.reality' and it should work.

> I *think* faucet is where the player would be able to enter commands
> for the game.

Indeed it is.

> I saw some of the other comments on the list earlier re: Windows and
> its lack of a fork() call, and I suspect this is the problem. If
> Twisted is to become portable across platforms, then this problem will
> need to be addressed at some stage.

This deficiency of Windows only affects CGI in Twisted.Web.  Given that
the audience for Twisted on Windows is small, and the audience for Twisted
+ CGI is even smaller, I think that this problem will remain unaddressed
until someone who cares about both of these things devotes some time to
fixing it.  So far, J?rgen Hermann is the only person I can think of who
exists in that intersection :-).

> I really would like to help with the reality part of the Twisted
> project, but unless I get access to a Unix OS or Twisted works 100%
> under Windows, I don't know how much I can do :( I am still keen to
> hear what visions the original reality developers had (or have) for
> the future.

Let me know if this solution fixes your problem.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From j.her at t-online.de  Thu Aug  9 14:07:06 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Thu, 09 Aug 2001 20:07:06 +0200
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <Pine.LNX.4.21.0108091110470.1302-100000@zaibach.twistedmatrix.com>
Message-ID: <15UuD7-1lQ5aqC@fwd03.sul.t-online.com>

On Thu, 9 Aug 2001 11:27:14 -0500 (CDT), Glyph Lefkowitz wrote:

>fixing it.  So far, J?rgen Hermann is the only person I can think of who
>exists in that intersection :-).

I'm disjunctive to the time thingie. ;)

Ciao, J?rgen







From carmstro at twistedmatrix.com  Thu Aug  9 19:34:35 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 9 Aug 2001 19:34:35 -0400
Subject: [Twisted-Python] manhole
Message-ID: <20010809193434.A4890@Fookidla.org>

Glyph and I have talked about editing code from within manhole before.
I'm not sure if he agrees with the following ideas, but they're related.

I think it'd be really cool if we somehow kept a source representation of
*all* of Twisted for dynamic editing at runtime (sounds cool, eh?).. Of
course, this is probably far off, but here's a list of things that need to
be done to accomplish this ridiculous goal.

* At startup, read all of the source code from the .py files into an
internal datastructure somewhere

* whenever someone hacks new code from within manhole (or the telnet server
(blech)), we save this too. (I actually had this idea in another context,
when I wished for a special python interactive interpreter which would
remember what I typed to save the code to modules later).

* when we shut down the process, we must save all of this source code into
the pickle as well.

* offer a "source" functionality like reality's 'source' command to write
out all changes to the source we've made.

Yeah, I know, this seems really disgusting and memory-hogging, but it
shouldn't be that bad. Actually, now that I think of it, this could be
optimized some. Like, only actually retrieving source code when it's called
for (that's probably the biggest optimization we can do). 

Now, this whole source code editing thing brings up more issues, like what
do we edit source code with. Manhole is ok for some hacks, but it is of this
hacker's opinion that we just call up external editors from the twisted
process and pass it a temp file with a chunk of code in it. (glyph: "eggs"?)

Another issue this brings up is the "stability of modifying a running
process". I'd imagine only real twisted hackers would be screwing with the
deep internals at runtime, but for regular "end-users" (hah), they'll
probably stay close to the "edges" (very high level code). 

Now, this whole idea can really lead on into some crazy stuff.. Like, say,
version controlling these "eggs" from *within* Twisted itself.. 

Thank you for listening to my crazy ramblings,
-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From twisted at itamarst.org  Thu Aug  9 20:11:00 2001
From: twisted at itamarst.org (Itamar)
Date: Thu, 09 Aug 2001 20:11:00 -0400
Subject: [Twisted-Python] Some suggestions
Message-ID: <3B732694.9000906@itamarst.org>

Hi all,

I spent some time on my 11 hour flight to the US porting my servers to 
twisted, and here's what I've come up with so far:

0) Twisted is very cool.

1) Pickle on save should be optional.
One of my objects is unpicklable, so every time I shutdown I get an 
exception. You could say I should rewrite, but I feel developing a 
server should not have to support all kinds of extra features that 
twisted provides. Obviously it'd be nice to have them, but it's one more 
thing you have to learn up front that isn't really necessary.

2) Why is the number of clients that socket.listen() queues hard-coded 
to 5? this should be an option.

3) If writing to a connection and closing a connection are thread safe 
then writing threaded servers is trivial. I'll try to write some patches 
that don't slow down the default non-threaded code tommorow.  Again, 
rewriting my code from scratch as event driven is a waste of a time - I 
might do it someday, but I want working code now.

4) I'll submit a working twisted.internet.ssl after I do (3).

5) More docstrings!

And if this an HTML email it's Mozilla's fault, not mine.





From m at moshez.org  Fri Aug 10 01:42:44 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 10 Aug 2001 08:42:44 +0300 (IDT)
Subject: [Twisted-Python] Some suggestions
In-Reply-To: <3B732694.9000906@itamarst.org>
References: <3B732694.9000906@itamarst.org>
Message-ID: <20010810054244.E00BC3937@darjeeling>

On Thu, 09 Aug 2001, Itamar <twisted at itamarst.org> wrote:

> 0) Twisted is very cool.

Great!

> 1) Pickle on save should be optional.

Check out the newly added -o/--no_save option

> 2) Why is the number of clients that socket.listen() queues hard-coded 
> to 5? this should be an option.

This is now settable, but mktap doesn't expose the functionality.
You can go into your pickles post-hoc and set the .backlog attribute.
Check out the new Application.listenOn and Port.__init__

> 5) More docstrings!

Next time, specific places where you would find docstrings most helpful
would be nice. I don't have infinite time, but I wouldn't mind going through
5-10 functions adding docstrings.

> And if this an HTML email it's Mozilla's fault, not mine.

It wasn't.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From twisted at itamarst.org  Fri Aug 10 08:08:14 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 08:08:14 -0400
Subject: [Twisted-Python] Some suggestions
References: <3B732694.9000906@itamarst.org> <20010810054244.E00BC3937@darjeeling>
Message-ID: <3B73CEAE.1040008@itamarst.org>

Moshe Zadka wrote:

>>5) More docstrings!
>>
>
>Next time, specific places where you would find docstrings most helpful
>would be nice. I don't have infinite time, but I wouldn't mind going through
>5-10 functions adding docstrings.
>

Well,  it was more of a general suggestion than a "Get moshez to 
document everything" request. Thanks for the other patches :)






From twisted at itamarst.org  Fri Aug 10 14:12:52 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 14:12:52 -0400
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
Message-ID: <3B742424.8010204@itamarst.org>

First, my threaded server works great when using threaded mode. However, 
having a lock on every write call seems excessive, especially since some 
of my servers aren't threaded, so I tried rewriting 
abstract.FileDescriptor so that the write() and doWrite() methods are 
thread-safe without using locks.

The issues:

1) It doesn't actually work - if I turn of the threadble.synchronize() 
call at the end of the module then the server gets deadlocks.

2) How can I make the FileDescriptor backwards compatible? Add a custom
__getstate__ that adds the unsentChunks list? If writeable 
FileDescriptors are never pickled,
which makes sense to me, then this is not issue.

3) Will this slow things down?


I may just give up and write a ThreadSafeFileDescriptor class, allowigng 
threaded servers to use it while non-threaded servers can use the 
regular FileDescriptor.


Index: abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.2
diff -r1.2 abstract.py
1d0
<
3c2
< import types
---
 > import types, operator, string
22c21,24
<
---
 >
 >     def __init__(self):
 >         self.unsentChunks = []
 >
53a56,63
 >         numChunks = len(self.unsentChunks)
 >         if numChunks:
 >             chunks = [self.unsent,]
 >             for i in range(numChunks):
 >                 chunks.append(self.unsentChunks.pop(0))
 >
 >             self.unsent = string.join(chunks, '')
 >
80a91,92
 >
 >         This method is thread-safe.
86c98
<             self.unsent = self.unsent + data
---
 >             self.unsentChunks.append(data)
88c100
<                 if len(self.unsent) > self.bufferSize:
---
 >                 if len(self.unsent)  + reduce(operator.add, map(len, 
self.unsentChunks)) > self.bufferSize:
Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.10
diff -r1.10 tcp.py
41a42
 >         abstract.FileDescriptor.__init__(self)
228,229c229,230
< 	self.factory = factory
< 	self.backlog = backlog
---
 >         self.factory = factory
 >         self.backlog = backlog





From m at moshez.org  Fri Aug 10 14:17:02 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 10 Aug 2001 21:17:02 +0300 (IDT)
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
In-Reply-To: <3B742424.8010204@itamarst.org>
References: <3B742424.8010204@itamarst.org>
Message-ID: <20010810181702.11D67392C@darjeeling>

On Fri, 10 Aug 2001 14:12:52 -0400, Itamar <twisted at itamarst.org> wrote:

<lots of interesting stuff I have to contemplate>
> Index: abstract.py
> ===================================================================
> RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
> retrieving revision 1.2
> diff -r1.2 abstract.py

Itamar!
Please, please, use either diff -u or diff -c.
Plain diff is simply unreadable

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From twisted at itamarst.org  Fri Aug 10 14:40:19 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 14:40:19 -0400
Subject: [Twisted-Python] Checking in SSL support
Message-ID: <3B742A93.3000409@itamarst.org>

Ok, I have basic working SSL support. I also made an echoserv-ssl.py so 
I could test the code. I can telnet-ssl in and get data echoed back.

May I checkin the following?
1) twisted.internet.ssl
2) docs/examples/echoserv-ssl.py
3) docs/examples/server.pem (a SSL ceritificate so echoserv-ssl can run).

SSL contexts are created per socket and not stored in the 
ssl.Port/ssl.Client instances, since they are not picklable.





From itamar at zoteca.com  Fri Aug 10 14:46:28 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Fri, 10 Aug 2001 14:46:28 -0400
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
References: <3B742424.8010204@itamarst.org> <20010810181702.11D67392C@darjeeling>
Message-ID: <3B742C04.4060909@zoteca.com>

Moshe Zadka wrote:


 > Please, please, use either diff -u or diff -c. Plain diff is simply
 > unreadable

D'oh. I must've never set it up on my laptop.


Index: abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.2
diff -c -r1.2 abstract.py
*** abstract.py	2001/07/09 19:59:34	1.2
--- abstract.py	2001/08/10 18:47:46
***************
*** 1,6 ****
-
   # System Imports
! import types

   # Twisted Imports
   from twisted.python import threadable, log
--- 1,5 ----
   # System Imports
! import types, operator, string

   # Twisted Imports
   from twisted.python import threadable, log
***************
*** 19,25 ****
       producer = None
       disconnected = 0
       __reap = 0
!
       def connectionLost(self):
           """The connection was lost.

--- 18,27 ----
       producer = None
       disconnected = 0
       __reap = 0
!
!     def __init__(self):
!         self.unsentChunks = []
!
       def connectionLost(self):
           """The connection was lost.

***************
*** 51,56 ****
--- 53,66 ----
       def doWrite(self):
           """Called when data is available for writing.
           """
+         numChunks = len(self.unsentChunks)
+         if numChunks:
+             chunks = [self.unsent,]
+             for i in range(numChunks):
+                 chunks.append(self.unsentChunks.pop(0))
+
+             self.unsent = string.join(chunks, '')
+
           # Send as much data as you can.
           l = self.writeSomeData(self.unsent)
           if l < 0:
***************
*** 78,91 ****
           ready for writing.  If necessary, it will wake up the I/O
thread to add
           this FileDescriptor for writing, that the write will happen as
soon as
           possible.
           """
           assert type(data) == types.StringType, "Data must be a string."
           if not self.connected:
               return
           if data:
!             self.unsent = self.unsent + data
               if self.producer is not None:
!                 if len(self.unsent) > self.bufferSize:
                       self.producerPaused = 1
                       self.producer.pauseProducing()
               self.startWriting()
--- 88,103 ----
           ready for writing.  If necessary, it will wake up the I/O
thread to add
           this FileDescriptor for writing, that the write will happen as
soon as
           possible.
+
+         This method is thread-safe.
           """
           assert type(data) == types.StringType, "Data must be a string."
           if not self.connected:
               return
           if data:
!             self.unsentChunks.append(data)
               if self.producer is not None:
!                 if len(self.unsent)  + reduce(operator.add, map(len,
self.unsentChunks)) > self.bufferSize:
                       self.producerPaused = 1
                       self.producer.pauseProducing()
               self.startWriting()

Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.10
diff -c -r1.10 tcp.py
*** tcp.py	2001/08/10 06:18:11	1.10
--- tcp.py	2001/08/10 18:47:46
***************
*** 39,44 ****
--- 39,45 ----
       selectable (those that use a TCP/IP or similiar socket).
       """
       def __init__(self, skt, protocol):
+         abstract.FileDescriptor.__init__(self)
           self.socket = skt
           self.socket.setblocking(0)
           self.fileno = skt.fileno
***************
*** 225,232 ****
           """Initialize with a numeric port to listen on.
           """
           self.port = port
! 	self.factory = factory
! 	self.backlog = backlog

       def __repr__(self):
           return "<%s on %s>" % (self.factory.__class__, self.port)
--- 226,233 ----
           """Initialize with a numeric port to listen on.
           """
           self.port = port
!         self.factory = factory
!         self.backlog = backlog

       def __repr__(self):
           return "<%s on %s>" % (self.factory.__class__, self.port)





From m at moshez.org  Fri Aug 10 15:04:20 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 10 Aug 2001 22:04:20 +0300 (IDT)
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
In-Reply-To: <3B742C04.4060909@zoteca.com>
References: <3B742C04.4060909@zoteca.com>, <3B742424.8010204@itamarst.org> <20010810181702.11D67392C@darjeeling>
Message-ID: <20010810190420.DE3F5392C@darjeeling>

On Fri, 10 Aug 2001, Itamar Shtull-Trauring <itamar at zoteca.com> wrote:

>  > Please, please, use either diff -u or diff -c. Plain diff is simply
>  > unreadable
> 
> D'oh. I must've never set it up on my laptop.

I am not at all certain this is thread safe....

Let us say one thread calls .write and another .doWrite
Then if the .write thread modifies the unsentChunks after the
.doWrite finished summing up the chunks but before it does the
self.unsent =  then whatever it has written will be lost, no?

Personally, I think you should write a ThreadSafe descriptor
which uses the thread-safe Queue class to Queue data to write in .write
and takes out stuff from the Queue in .doWrite until it had its fill.
 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From twisted at itamarst.org  Fri Aug 10 16:23:19 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 16:23:19 -0400
Subject: [Twisted-Python] Wierd Error
Message-ID: <3B7442B7.3000303@itamarst.org>

Might this is be the result of a connection being closed by a thread, implying that this is not thread safe?
If so (even if the error resulted from something else, actually) I think the FileDescriptor.loseConnection() method should also be synchronized.


Unexpected error in Selector.run.
Traceback (most recent call last):
   File "twisted/internet/main.py", line 277, in run
     doSelect(timeout)
   File "twisted/internet/main.py", line 191, in doSelect
     [], timeout)
   File "twisted/internet/abstract.py", line 232, in fileno
     raise NotImplementedError(str(self.__class__)+' has no fileno method')
NotImplementedError: twisted.internet.tcp.Server has no fileno method





From glyph at twistedmatrix.com  Fri Aug 10 18:49:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 17:49:04 -0500 (CDT)
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
In-Reply-To: <3B742424.8010204@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101722560.29917-100000@zaibach.twistedmatrix.com>

On Fri, 10 Aug 2001, Itamar wrote:

> First, my threaded server works great when using threaded mode.

HOORAY FOR TWISTED

> However, having a lock on every write call seems excessive, especially
> since some of my servers aren't threaded, so I tried rewriting
> abstract.FileDescriptor so that the write() and doWrite() methods are
> thread-safe without using locks.

This is an admirable goal.

However, from what I understand of Python's threading facilities, even
attribute access is somewhat suspect (as it may invoke a method call).  
At a somewhat fundamental level, what we are doing is manipulating an
internal data structure from one of several different threads.  There is
time spent within a system call that alters this data structure when the
main interpreter lock may not be held.

I think that even theoretically, this requires a lock.  (below I describe
an approach that may reduce the amount of locking...)

> 1) It doesn't actually work - if I turn of the threadble.synchronize()
> call at the end of the module then the server gets deadlocks.

Yeah, that's probably the biggest problem with this approach :)

> 2) How can I make the FileDescriptor backwards compatible? Add a custom
> __getstate__ that adds the unsentChunks list? If writeable 
> FileDescriptors are never pickled,
> which makes sense to me, then this is not issue.

They shouldn't ever be pickled.  In fact, I think that most of them mix in
styles.Ephemeral.

> 3) Will this slow things down?

Possibly, possibly not.  Difficult to say without profiling data (and
profiling MT applications is notoriously hard...)

> I may just give up and write a ThreadSafeFileDescriptor class,
> allowigng threaded servers to use it while non-threaded servers can
> use the regular FileDescriptor.

One alternative to reduce the number of locks and amount of locking going
on is to establish a different method for writing to a socket from a
thread.  Have the thread-safe version acquire a global lock on writing,
add some data (writer, string) to a global list, and relinquish it.  Then,
at the beginning of each select iteration, acquire that lock once: 

  lock.acquire()
  for writer, data in globalList:
    writer.write(data)
  lock.release()

and then keep all the actual write() calls happening in the one thread.

Another is to have the threaded implementation of write() actually call
socket.makefile('w').write(data); does anyone know the thread safety
implications of that?

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Fri Aug 10 18:50:31 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 17:50:31 -0500 (CDT)
Subject: [Twisted-Python] Wierd Error
In-Reply-To: <3B7442B7.3000303@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101750240.29917-100000@zaibach.twistedmatrix.com>

Yes, you are correct, it should be.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph

On Fri, 10 Aug 2001, Itamar wrote:

> Might this is be the result of a connection being closed by a thread, implying that this is not thread safe?
> If so (even if the error resulted from something else, actually) I think the FileDescriptor.loseConnection() method should also be synchronized.
> 
> 
> Unexpected error in Selector.run.
> Traceback (most recent call last):
>    File "twisted/internet/main.py", line 277, in run
>      doSelect(timeout)
>    File "twisted/internet/main.py", line 191, in doSelect
>      [], timeout)
>    File "twisted/internet/abstract.py", line 232, in fileno
>      raise NotImplementedError(str(self.__class__)+' has no fileno method')
> NotImplementedError: twisted.internet.tcp.Server has no fileno method
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 





From glyph at twistedmatrix.com  Fri Aug 10 18:53:01 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 17:53:01 -0500 (CDT)
Subject: [Twisted-Python] Checking in SSL support
In-Reply-To: <3B742A93.3000409@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101750350.29917-100000@zaibach.twistedmatrix.com>

On Fri, 10 Aug 2001, Itamar wrote:

> Ok, I have basic working SSL support. I also made an echoserv-ssl.py so 
> I could test the code. I can telnet-ssl in and get data echoed back.

Nifty.

If you could, would you add autodetection code in twisted/tap/web.py that
will make an SSL webserver on port 443 if SSL is available?

> May I checkin the following?
> 1) twisted.internet.ssl

Yes.

> 2) docs/examples/echoserv-ssl.py

Yes.

> 3) docs/examples/server.pem (a SSL ceritificate so echoserv-ssl can run).

Is there any copyright concern over this?  How is it generated?

> SSL contexts are created per socket and not stored in the 
> ssl.Port/ssl.Client instances, since they are not picklable.

Cool.  Are they regenerated on login?


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Fri Aug 10 19:05:20 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 18:05:20 -0500 (CDT)
Subject: [Twisted-Python] Some suggestions
In-Reply-To: <3B732694.9000906@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101753160.29917-100000@zaibach.twistedmatrix.com>

On Thu, 9 Aug 2001, Itamar wrote:

> Hi all,
> 
> I spent some time on my 11 hour flight to the US porting my servers to 
> twisted, and here's what I've come up with so far:
> 
> 0) Twisted is very cool.

We know, of course, but glad to hear it anyway :)

> 1) Pickle on save should be optional.
> One of my objects is unpicklable, so every time I shutdown I get an 
> exception. You could say I should rewrite, but I feel developing a 
> server should not have to support all kinds of extra features that 
> twisted provides. Obviously it'd be nice to have them, but it's one more 
> thing you have to learn up front that isn't really necessary.

I think moshe has already added this, does his patch resolve your
concerns?

> 2) Why is the number of clients that socket.listen() queues hard-coded 
> to 5? this should be an option.

Frankly I can't imagine why anyone would care.  5 is supposed to be a
reasonable and recommended maximum.  But it's an option now :-)

> 3) If writing to a connection and closing a connection are thread safe 
> then writing threaded servers is trivial. I'll try to write some patches 
> that don't slow down the default non-threaded code tommorow.  Again, 
> rewriting my code from scratch as event driven is a waste of a time - I 
> might do it someday, but I want working code now.

OK, I already responded to this in a later email, but I have 2 more things
to add:

  * If your server is multithreaded, it will be *significantly* slower
    than if it is not.  This is a well-documented fact even for servers 
    in C, and context switching + resource contention on the main
    interpreter thread is going to kill you well before you get into
    problems with contention for individual write locks. 

  * _That is okay_.  Don't start worrying too much about the performance
   of Twisted's threading until you've got some significant benchmarking
   problem; and when you discover that threading is slow, you can always
   optimize by making it asynchronous instead :)  Chances are, however,
   that your app can afford the speed hit if it's at all a typical server.

  * There are some interesting ideas in this half/sync half/async pattern
    that may be useful for your app, available at:

	http://www.cs.wustl.edu/~schmidt/PDF/PLoP-95.pdf

> 4) I'll submit a working twisted.internet.ssl after I do (3).

See that this has already been done.  Impressive turnaround time ;)

> 5) More docstrings!

As always.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From twisted at itamarst.org  Sat Aug 11 12:13:52 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 12:13:52 -0400
Subject: [Twisted-Python] Alternative method for thread-safe transport code
Message-ID: <3B7559C0.60803@itamarst.org>

The scheduler is integrated into twisted's event loop I presume. So, 
instead of making FileDescriptor thread-safe, how abou making the 
scheduler htread safe, and then threads that want to write or close a 
socket can add this operation to the scheduler?





From twisted at itamarst.org  Sat Aug 11 12:15:03 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 12:15:03 -0400
Subject: [Twisted-Python] Checking in SSL support
References: <Pine.LNX.4.21.0108101750350.29917-100000@zaibach.twistedmatrix.com>
Message-ID: <3B755A07.5080008@itamarst.org>

Glyph Lefkowitz wrote

>If you could, would you add autodetection code in twisted/tap/web.py that
>will make an SSL webserver on port 443 if SSL is available?
>
I'll let someone else do it, I've got lots of work to do.

>>3) docs/examples/server.pem (a SSL ceritificate so echoserv-ssl can run).
>>
>
>Is there any copyright concern over this?  How is it generated?
>
I stole it from m2crypto, so it shouldn't be an issue. It's generated by 
OpenSSL using an arcane process I never ever mange to remember.

>>SSL contexts are created per socket and not stored in the 
>>ssl.Port/ssl.Client instances, since they are not picklable.
>>
>
>Cool.  Are they regenerated on login?
>
Yeah, they are regenrated in createInternetSocket using a function that 
can be changed in subclasses.

Anyay, I will checkin sometime next week.





From twisted at itamarst.org  Sat Aug 11 12:24:25 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 12:24:25 -0400
Subject: [Twisted-Python] Some suggestions
References: <Pine.LNX.4.21.0108101753160.29917-100000@zaibach.twistedmatrix.com>
Message-ID: <3B755C39.4050409@itamarst.org>

Glyph Lefkowitz wrote:

>
>  * _That is okay_.  Don't start worrying too much about the performance
>   of Twisted's threading until you've got some significant benchmarking
>   problem; and when you discover that threading is slow, you can always
>   optimize by making it asynchronous instead :)  Chances are, however,
>   that your app can afford the speed hit if it's at all a typical server.
>
My main concern is *safety*. For example, I'm pretty sure making 
connectionLose() synchronized is not enough to make it thread safe. 
 Speed is good of course - and notice that synchronizing stuff slows 
down any non-threaded protocols I may be using along with my threaded one.

>
>  * There are some interesting ideas in this half/sync half/async pattern
>    that may be useful for your app, available at:
>
>	http://www.cs.wustl.edu/~schmidt/PDF/PLoP-95.pdf
>
I'll check it out.






From glyph at twistedmatrix.com  Sat Aug 11 14:28:34 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 11 Aug 2001 13:28:34 -0500 (CDT)
Subject: [Twisted-Python] Some suggestions
In-Reply-To: <3B755C39.4050409@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com>

On Sat, 11 Aug 2001, Itamar wrote:

> My main concern is *safety*. For example, I'm pretty sure making 
> connectionLose() synchronized is not enough to make it thread safe. 

Why not? If it's synchronized, and doWrite is synchronized, then I can't
figure out what the safety issue is.  Did you try, and experience some, or
do you know of some potential ones from reading it?

> Speed is good of course - and notice that synchronizing stuff slows
> down any non-threaded protocols I may be using along with my threaded
> one.

Yes.  Actually the simple statement 'import thread' will slow down
everything that your application does by approximately 5-20% (depending on
OS and #of CPUs mainly), even if you never start a thread.  That's why
there's all of that careful dancing around import statements when you look
at modules like threadable ;)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From sean at twistedmatrix.com  Sat Aug 11 20:11:25 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Sat, 11 Aug 2001 19:11:25 -0500
Subject: [Twisted-Python] twisted enterprise
In-Reply-To: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGAECICBAA.sean@twistedmatrix.com>

Hi all,

As some people may have noticed, something was checked into CVS recently as
twisted.enterprise. This is the beginnings of a relational database backend
interface for twisted. Currently it is comprised of a multithreaded database
request processing service that can handle multiple database connections. It
is not quite all hooked up yet, pending Glyph's work on asynchronous
authentication and callbacks.  The initial plan is to have it be able to do
user authentication into a relational database, and add further
functionality from there.

My first implementation was against Sybase, but the port to Postgres/PoPy
required changing less than 10 lines of code. Building PoPy (the
postgres/python interface module) took way more time than changing the code.
The python DB-API is a good thing. If anyone else has any other database
engines available to them, then adding support for those would be welcome
also.

There is even a unit test suit in twisted.enterprise.testdb.py. Hooray for
unit tests.

So, feedback welcome! Does this seem useful? Useful for what? Any objections
to the multithreaded implementation (i know twisted is not fond of threads)?

I am tempted to implement a shopping cart application ontop of it...





From twisted at itamarst.org  Sat Aug 11 20:47:56 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 20:47:56 -0400
Subject: [Twisted-Python] twisted enterprise
References: <HOEEKPCOKELHCNIJNMAGAECICBAA.sean@twistedmatrix.com>
Message-ID: <3B75D23C.8070003@itamarst.org>

BTW, I noticed a class in there that seems to be basically identical to 
Python's built-in Queue. Any difference in functionality?






From acapnotic at twistedmatrix.com  Sun Aug 12 06:05:09 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 12 Aug 2001 03:05:09 -0700
Subject: [Twisted-Python] "Eww...  Here, smell this!"  (was Re: Multiplex)
In-Reply-To: <Pine.LNX.4.21.0108080644230.29078-100000@zaibach.twistedmatrix.com>
References: <20010808013136.A3911@troglodyte.menefee> <Pine.LNX.4.21.0108080644230.29078-100000@zaibach.twistedmatrix.com>
Message-ID: <20010812030509.A1052@troglodyte.menefee>

On Wed, Aug 08, 2001 at 06:48:59AM -0500, Glyph Lefkowitz wrote:
> 
> This is what Cached was designed for :-).

I must be missin' something.  Here's my attempt.  Problems include not
being sure if I can really talk in the Cache -> Cached direction, and
the transparent automatic repeater creation alchemy doesn't even come
close.

(no, it doesn't run.  yes, the names suck.  but none of that matters if
it doesn't work at all.)

class PlexPerspective(Perspective):
    """This is the perspective given by Bob's repeater service."""
    
    def perspective_setPlexTag(self, tag):
        """Register a copytag as being a plexed class."""
        
        # Do some sanity checking, make sure tag has a safe prefix
        # like "PLEX_" or somesuch.
        pb.setCopyTags(tag, PlexRepeater)
    

class PlexBase(Copied):
    """Plex base class -- always returns a consistant copytag

    (even if it's been through a repeater, where everything is a
    PlexRepeater, no matter what the tag.)
    """
    
    def getStateToCopy(self):
        # Make sure _copytag gets into our state, which it otherwise
        # wouldn't do if our _copytag refers to the class attribute.
        state = pb.Copied.getStateToCopy(self)
        state['_copytag'] = self._copytag
        return state

    def getTypeToCopy(self):
        return self._copytag
        

class PlexRepeater(PlexBase, Cached, Copy):
    """This is how 'plexes look in the repeater.

    Repeaters don't have unique properties as they're all instances
    of this class, but they must remember the copytag to give to
    their children."""
    
    def setCopiedState(self, state):
        """Leaf -> Repeater alchemy.

        This is so new plexed objects may be created transparently, if
        a peer just passes through an instance of their leaf-class."""
        
        # XXX: How do I find out which broker I arrived through?
        # There isn't a setCopiedStateFor()

        moms_perspective = moms_broker.getPerspective()

        # I need to convince that broker that Mom is really a
        # remote cache of me.
        puid = self.ProcessUniqueID()
        moms_broker.remotelyCachedLUIDs[puid] = moms_luid
        moms_broker.remotelyCachedObjects[moms_luid] = Local(self)

        # Add Mom as an Observer
        observer = CacheObserver(moms_broker, self, moms_perspective)
        
        # Don't need to get the state, actually, but that is the
        # method that keeps my observer list healthy.
        self.getStateToCacheAndObserveFor(moms_perspective, observer)

        # XXX: Now I have to convince Mom's broker on her end to make
        # a CacheProxy for me, with Mom as the cNotProxy.

        state['_receive_daughter'](self) 
        
        pb.Copy.setCopiedState(self, state)

    def remoteMessageReceived(self, broker, message, args, kw):
        """Pass the word along to all the kids."""
        
        # ??? Do I receive remote messages?
        # Or do I have to pass this method as part of my cached state?

        for o in self.observers:
            self.remoteCacheDo(bla, bla, args, kw)

    def getStateToCacheAndObserveFor(self, perspective, observer):
        """keep a list of my kids."""

        self.observerlist.append(observer)

        return self.getStateToCopyFor(self, perspective)


class PlexLeaf(PlexBase, Cache):
    """This is subclassed by Alec, Amy, and Angus.

    it will be the setCopierForClass for a PLEX_ copytag, and thus
    created whenever a peer (most likely the repeater) passes a plex to
    us.  

    It receives updates from the plex object it caches,
    and can talk back to that object as well (causing it to broadcast,
    if it is a repeater).

    My subclass should define a _copytag attribute to identify me when
    I'm passed to my peer if I was initialized locally, and not by the
    broker as a Cache.
    """

    def __getattr__(self, key):

        # Shout out through the plex
        if key[:6] == "shout_":
            return getattr(self.cached, key[6:])
        




From m at moshez.org  Sun Aug 12 08:15:37 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 12 Aug 2001 15:15:37 +0300 (IDT)
Subject: [Twisted-Python] Mail Relaying
Message-ID: <20010812121537.BE220392B@darjeeling>

Don't get your panties in a knot, this isn't ISP-class mail relaying
yet, just simple localhost-to-smarthost mail relaying. These classes
are supposed to work in tandem with a DomainPickler which leaves messages
for them to relay.

Without further ado, here it is:

from twisted.python import delayed
from twisted.mail import relay

class SMTPManagedRelay(relay.SMTPRelay):

    def __init__(self, messages, manager):
        SMTPRelay.__init__(self, messages)
        self.manager = manager

    def sentMail(self, addresses):
        SMTPRelay.sentMail(self, addresses)
	if addresses: 
	    self.manager.notifySuccess(self, self.messages[0][0])
	if addresses: 
	    self.manager.notifyFailure(self, self.messages[0][0])

    def connectionLost(self):
        self.manager.notifyDone(self)


class SmartHostSMTPRelayingManager:

    def __init__(self, directory, smartHostIP, maxConnections=1, 
                 maxMessagesPerConnection=10):
        self.directory = directory
	self.maxConnections = maxConnections
	self.maxMessagesPerConnection = maxMessagesPerConnection
	self.delayed = smartHostIP
	self.managed = {}
	self.relayingMessages = {}
	self.readDirectory()

    def notifySuccess(self, relay, message):
        message = os.path.basename(message)
	self.managed[relay].remove(message)
	self.messages[message] = 1
	del self.relayingMessages[message]

    notifyFailure = no.tifySuccess

    def notifyDone(self, relay):
        for message in self.managed[relay]:
	    self.notifyFailure(relay, message)
        del self.managed[relay]

    def __getstate__(self):
        dct = self.__dict__.copy()
	del dct['managed'], dct['relayingMessages'], dct['messages']
	return dct

    def __setstate__(self, state):
        self.__dict__.update(state)
	self.relayingMessages = {}
	self.managed = {}
	self.readDirectory()

    def readDirectory(self):
	self.messages = {}
	for message in os.listdir(self.directory):
	    if not self.relayingMessages.has_key(message):
	        self.messages[message] = 1

    def checkState(self):
	self.readDirectory() 
	if self.messages:
	    return
        if len(self.managed) >= self.maxConnections:
	    return
	nextMessages = self.messages.keys()[:self.maxMessagesPerConnection]
        toRelay = []
	for message in nextMessages:
	    self.relayingMessages[message] = 1
	    del self.messages[message]
	    toRelay.append(os.path.join(self.directory, message))
        protocol = SMTPManagedRelay(toRelay, self)
	self.managed[protocol] = nextMessages
	transport = tcp.Client(smartHostIP, 25, protocol)


# It's difficult to pickle methods
# So just have a function call the method
def checkState(manager):
    manager.checkState()

def attachManagerToDelay(manager, delay, time):
    loop = delayed.Loop(delay, time, checkState, manager)
    loop.loop()



-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Mon Aug 13 02:47:28 2001
From: m at moshez.org (Moshe Zadka)
Date: Mon, 13 Aug 2001 09:47:28 +0300 (IDT)
Subject: [Twisted-Python] Setting Up Us The Bomb^H^H^H^HMail server
Message-ID: <20010813064728.F130B392B@darjeeling>

Hi!
I am happy to say the relaying stuff works, but there is
still plenty to fix. However, I actually tested "smart host"
relaying and it worked. That means, twisted.mail is a real
mail server, if a bit young.

I'll be writing a tutorial about setting up a twisted.mail server
soon enough.

-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From chrish at mincom.com  Mon Aug 13 03:05:58 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 13 Aug 2001 17:05:58 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0108011855550.7795-100000@zaibach.twistedmatrix.com>
Message-ID: <000301c123c6$67a073f0$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

[snip]

> > ... I ran the Inheritance module, and after
> > going through some code to find the username and password, I was able to
run
> > this successfully. I am now able to move around in the inheritance game,
but
> > that's about it.
>
> Unfortunately, that's about as far as we got.  You can put things in
> things, and if you read author.py you should get a few hints as to "verbs"
> you can use to create things... hopefully some of the ex-reality authors
> can chime in here...

I'll have a look at author.py tonight (hopefully).

By the way, your suggestion of changing "reality" to "twisted.reality" when
running faucet did the trick. I can now proceed through the game via the tk
interface. How does this mesh with the web browser interface? Or is it
something separate?

> > Does anyone know the status of reality servers?
>
> What do you mean by Status?

Is anyone actively working on them? Are there any long-range plans for them?

I think I asked before if they were supposed to be like TADS interpreters or
Z-machines, or are they to be something different.

It's going to take some time to go through the various modules and find out
how they fit together, and how the reality server interprets and processes
sentences. If there are docs on how to create a reality world they would be
helpful.

> > I'm really enjoying playing around with all of this stuff.
>
> Great to hear it! :)

I'll reply to the list when I get some more information together, or when I
get some more questions :)

In our city we get a public holiday on Wednesday but I think most of the day
is already taken up by family plans. If only I had discovered these sorts of
projects 10 to 15 years ago...

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From twisted at itamarst.org  Mon Aug 13 11:28:51 2001
From: twisted at itamarst.org (Itamar)
Date: Mon, 13 Aug 2001 11:28:51 -0400
Subject: [Twisted-Python] Some suggestions
References: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com>
Message-ID: <3B77F233.40208@itamarst.org>

Glyph Lefkowitz wrote:


>>My main concern is *safety*. For example, I'm pretty sure making 
>>connectionLose() synchronized is not enough to make it thread safe. 
>>
> 
> Why not? If it's synchronized, and doWrite is synchronized, then I can't
> figure out what the safety issue is.  Did you try, and experience some, or
> do you know of some potential ones from reading it?

It is not thread-safe. This is because the whole addReader / addWriter / 
doSelect etc. code in internet.main isn't thread safe, so even if the 
FileDescriptor is internally thread safe its interactions with the list 
of readers and writers aren't.

For adding writers/readers this is less of an issue, although still 
potentially buggy. Removing on the other hand can lead to select() calls 
on already closed FilEDescriptors (as in the traceback I emailed the list.)

For example, look at the select.select(readers.keys()....) call. If the 
FileDescriptor is closed by a thread right after the .keys() call then 
select() will run on a closed descriptor and barf.

Now, messing around with this so it's thread safe starts getting way too 
icky. I would like therefore to redo the Scheduler so that it is thread 
safe, and use it to schedule closing and writing to transports.

I think the way this should work is that each thread should have an 
associated Task to which it adds methods to be called. That way a single 
thread can't monopolize the scheduler. This means however that it should 
be possible to add works to tasks after they've been added to the scheduler.

I think the best way to do this is to use python's built-in Queue class. 
In order to not slow down non-threaded apps, I will implement a 
non-thread safe Queue class with the same interface (or the non-blocking 
parts of the interface, anyway) so that you can do:

	from threadable import Queue

And get the appropriate Queue class. Make sense?





From twisted at itamarst.org  Mon Aug 13 12:04:00 2001
From: twisted at itamarst.org (Itamar)
Date: Mon, 13 Aug 2001 12:04:00 -0400
Subject: [Twisted-Python] Some suggestions
References: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com> <3B77F233.40208@itamarst.org>
Message-ID: <3B77FA70.5000009@itamarst.org>

Itamar wrote:


> I think the best way to do this is to use python's built-in Queue class. 


Actually there is no need for using this class. And perhaps an 
additional scheduler module for threads only may be better than altering 
the existing one.







From itamar at zoteca.com  Mon Aug 13 13:23:41 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Mon, 13 Aug 2001 13:23:41 -0400
Subject: [Twisted-Python] Suggested new module: twisted.internet.threadtask
References: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com> <3B77F233.40208@itamarst.org> <3B77FA70.5000009@itamarst.org>
Message-ID: <3B780D1D.2060804@zoteca.com>

> Actually there is no need for using this class. And perhaps an 
> additional scheduler module for threads only may be better than altering 
> the existing one.

Okay, attached is a first shot at a task scheduler for threads. 
Basically, tasks that are not thread safe should be added to this 
scheduler, and then they will be called by the event loop.

I tested this by shutting off the synchronization in FileDescriptor, and 
having my threaded server add all writes and closes to this scheduler 
instead of calling them directly. It seemed to work fine, though CPU 
usage seemed to be higher.


Future improvements:
1) Make locking more fine-grained.
2) Just like classes can have a synchronized property with a list of 
functions to be synchrnoized, I think there can be a scheduled property 
as well, which would automate the following idiom for making thread-safe 
operations using the scheduler:


def write(self, msg):
     if not threadable.isInIOThread():
         threadtask.schedule(self.write, (msg, ))
         return

     # regular write functionality goes here
     ...


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: threadtask.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20010813/924a5148/attachment.txt 

From twisted at itamarst.org  Mon Aug 13 14:11:06 2001
From: twisted at itamarst.org (Itamar)
Date: Mon, 13 Aug 2001 14:11:06 -0400
Subject: [Twisted-Python] Patch to internet.main
Message-ID: <3B78183A.2070603@itamarst.org>

This makes the threaded scheduler work, if we are running in threaded mode:

Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.13
diff -c -r1.13 main.py
*** twisted/internet/main.py	2001/08/10 06:38:06	1.13
--- twisted/internet/main.py	2001/08/13 18:13:00
***************
*** 22,28 ****

   # Sibling Imports

! import task, tcp

   class Application(log.Logger):
       running = 0
--- 22,28 ----

   # Sibling Imports

! import task, threadtask, tcp

   class Application(log.Logger):
       running = 0
***************
*** 135,140 ****
--- 135,142 ----
   writes = {}
   running = None
   delayeds = [task.theScheduler]
+ if threadable.threaded:
+     delayeds.append(threadtask.theScheduler)
   shutdowns = []

   def shutDown(a=None, b=None):





From carmstro at twistedmatrix.com  Wed Aug 15 09:19:42 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 15 Aug 2001 08:19:42 -0500
Subject: [Twisted-Python] TWN #6
Message-ID: <20010815081942.A1675@twistedmatrix.com>

The new TWN is at http://twistedmatrix.com/page.epy/twn-6.html 

I'm terribly sorry for not making a text version this week, but I've been
busy. I'm starting school soon, so I doubt I'm going to get less busy.
Please see my "plea for help" in this weeks TWN.

I'm going to go try to write some PB docs now.




From carmstro at twistedmatrix.com  Wed Aug 15 13:31:50 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 15 Aug 2001 12:31:50 -0500
Subject: [Twisted-Python] TWN #6, Text version!
Message-ID: <20010815123150.A25701@twistedmatrix.com>

(Someone pointed out that lynx -dump produces nice text output with
references. So here's the text version of TWN #6!)


                            The Twisted Weekly News
                                       
   6th Issue. Wednesday, August 15, 2001
   
   QOTW:
<Inhibitor> this is commercial software - there are no security holes
<Inhibitor> not like your crappy open source - written by students - stuff
<glyph> right, I had forgotten

   Welcome to the 6th issue of the Twisted Weekly News! Last week I
   mentioned how much Twisted had grown in developers and users -- well,
   obviously I'm not a psychic. This week has seen a much larger
   growth-spurt. Rock on, Twisted!
   
  Progress
  
   Here's what's been happening this week in the code base.
     * Twisted 0.9.5: We made another [1]release. This one was mainly bug
       fixes, code cleanup, and documentation. The cool thing about this
       release is that we put [2]publicly available Twisted Words and
       Twisted Reality servers up on twistedmatrix.com. Get ready for a
       new release, though, Twisted 0.9.6 is planned to be out soon!
     * Twisted Manhole: Chris Armstrong got sick and tired of the telnet
       interface to Twisted, so he wrote a nice PB service as a
       replacement for it, with cooler features. The GTK+ interface
       supports coloured output, command history, and editing of full
       blocks of code before executing them. Glyph also helped out a lot
       when he cleaned up Chris' mess of code, and made the GUI much
       prettier. ;-)
     * Docs: Well, people have been responding to repeated requests for
       documentation. Acapnotic has been on a rampage through docstrings,
       and moshez wrote a [3]page on writing low-level protocol
       implementations for Twisted.
     * Mail: Moshez is still working hard on twisted.mail - the latest
       checkin comments show that he has implemented relaying
       successfully! (So when is twistedmatrix.com going to switch to
       twisted.mail? ;-))
     * Twisted.Words: There's a lot of interest in this little package
       lately: the IRC interface is becoming more robust, and the
       InstanceMessenger client has been getting a lot better (there is
       now a Tk version, too).
     * utilities: Moshez hacked a little on the utility scripts included
       with Twisted -- he made a neato utility for generating
       policy-conformant Debian packages, added a --python parameter to
       twistd for reading from plain python files instead of .taps, and
       added --append to mktap, which adds another server to an existing
       twisted application. from tap files.
     * Twisted TOC: z3p's been hacking more on Twisted TOC. He made a
       client for it, but unfortunately had to pull it due to a nasty
       copyright on some widget library he was using. Instead of creating
       a separate client, z3p now plans on adding TOC support to Instance
       Messenger (right, z3p? ;-))
     * Twisted SSL: Itamar implemented a really cool SSL layer for
       Twisted. All that is required to use it is to basically change one
       line of code in the typical Twisted server. This will be really
       cool for manhole, so passwords and code will be able to be
       encrypted. Thanks a lot Itamar, we've had lots of requests for SSL
       support. :-)
       
  Other Stuff
  
   Here are summaries of some of the more significant mailing list
   threads.
   
   Moshe [4]suggested refactoring the daemonize() function into a
   separate module, only to start somewhat of a holy war with glyph which
   later moved to IRC. I can't really explain why glyph was against it
   myself, but I know it had something to do with philosophy. ;-)
   
   Kevin Turner made a very confusing [5]attempt at proposing a new
   "Multiplexing" feature for Perspective Broker. The gist of it was that
   there can be an object shared between many hosts, and whenever the
   object is updated by anyone, the changes propagate to everyone else.
   The discussion must've been half on IRC, though, because I couldn't
   really make out what the conclusion was. It seems that what Acapnotic
   wants is in the Cached class..
   
   Itamar had [6]Some suggestions for Twisted after he read a lot of the
   source while he was on a plane trip. He thought that 0) Twisted was
   cool, 1) Pickling on server shutdown should be optional (he has
   servers which aren't pickleable), 2) number of clients which
   socket.listen() queues shouldn't be hard-coded to 5, 3) threadable
   servers should be faster, and 4) more docstrings should be put in.
   Moshe Zadka replied that Most of these things had been solved or are
   being worked on. The thread quickly changed topic to one about
   [7]threading, and Itamar [8]implementing some more threading
   capabilities for Twisted.
   
  Cool Thing Of the Week:
  Twisted Enterprise
  
   Twisted Enterprise is the new database interface for Twisted, written
   by Sean Riley. This was an especially interesting problem, because
   most (all?) database servers are blocking beasts, so servers talking
   to it must be multi-threaded. The Twisted solution was to have a
   separate multi-threaded Twisted process which talks to the database in
   the background and listens and answers for requests from other (thread
   or not) Twisted processes. This way you do not have to deal with
   threads in your own application if you don't want to, even if you want
   it to talk to a database.
   
   Enterprise is going to be a big thing in Twisted -- Glyph is working
   on a great authentication system that uses this new package. Get ready
   for enterprise b2b internet solution!!
   
  Plea for help from the pathetic editor
  
   I've been very busy lately, and I haven't even started school yet. So,
   I'll probably be even more busy very soon -- If anyone is willing to
   help me out with TWN on a weekly basis (maybe only half an hour every
   week) It would be *incredibly* helpful. The two areas where I need it
   the most are the mailing list summaries and the conversion to text
   format for the mailing list (if you know of some software that will do
   this and nicely generate references for links at the bottom, that'd
   help *tons*). But even if you can just summarise a new feature in
   Twisted, it'd still help. Thanks!
   
   Ok, that's it for this week. Thanks for reading!
   [9]Chris Armstrong

References

   1. http://www.twistedmatrix.com/downloads/
   2. http://www.twistedmatrix.com/users/pb.twistd
   3. http://www.twistedmatrix.com/page.epy/docs/writing-serves.html
   4. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000199.html
   5. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000203.html
   6. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000228.html
   7. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000240.html
   8. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000231.html
   9. mailto:carmstro at twistedmatrix.com




From carmstro at twistedmatrix.com  Thu Aug 16 08:22:32 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 16 Aug 2001 07:22:32 -0500
Subject: [Twisted-Python] Security of PB
Message-ID: <20010816072231.A32054@twistedmatrix.com>

The other day, I think it was Sopwith, was asking about how jelly handles
security in certain situations.. I think this brought up a good point
for something I could put into the PB docs (which I'm working on), so I'd
like to ask for someone to just give me a general overview of the security
in twisted.spread. Could a PB application be attacked on a low-level?

Thanks a lot,
Chris Armstrong





From glyph at twistedmatrix.com  Thu Aug 16 18:33:24 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 17:33:24 -0500 (CDT)
Subject: [Twisted-Python] Security of PB
In-Reply-To: <20010816072231.A32054@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0108161717590.26416-100000@zaibach.twistedmatrix.com>

On Thu, 16 Aug 2001, Chris Armstrong wrote:

> I'd like to ask for someone to just give me a general overview of the
> security in twisted.spread.

Everything is an object, and you can only get references to other objects
through calling methods on them.  To get a loose idea of why this is an
adequate security solution, take a look at http://www.cap-lore.com.

Of course, the initial objects you're allowed to request have to do with
the presentation of certain credentials.  In the upcoming 'passport'
system, you provide a challenge/response authentication as your
credentials, but the notion of 'credentials' is somewhat pluggable.  

Hopefully by the time pb is reaching its final iteration we'll have public
key exchange rather than shared secret.  Of course, for compatibility with
old protocols, we may have to provide other authentication techniques.  
Maybe even (bleh) htpasswd files or somesuch.  Those will probably only
let you have access to a particular service.  For example, plaintext
password authentication is done with the IRC service, in CVS.

The general idea is that you go through some process where you provide
credentials; how secure the server is directly corresponds to what
credentials it will allow users to present for the services they access.

> Could a PB application be attacked on a low-level?

Of course.  And so can eBay and amazon.com, as DDOSs in recent years have
shown.  PB is a *high* level infrastructure :)

There are certain buffer size maximums in Banana which make it slightly
resistant to random cracking; I don't know if these are sufficient for
real DOS though.

As far as illegally gaining access to objects you're not supposed to have
access to, or executing arbitrary code, I don't think that it's possible
with the current implementation of PB.  I may be wrong, of course, and I'd
love for a security expert to audit my code -- but twisted walks a fine
line between security and convenience.  If they say "Don't use passwords,
they're insecure" or "don't support regular HTTP, it's insecure", there's
nothing I can do about that right now.

I think that it might be nice to increase or decrease the 'security
rating' of a particular Application instance depending on some statistics
of its Authorizer.  I'm not sure what would ever _increase_ it though :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From twisted at itamarst.org  Thu Aug 16 18:49:41 2001
From: twisted at itamarst.org (Itamar)
Date: Thu, 16 Aug 2001 18:49:41 -0400
Subject: [Twisted-Python] Synchronized FileDescriptor is bad
Message-ID: <3B7C4E05.30103@itamarst.org>

The fact that FileDescriptor is synchronized may lead people to think 
it's thread safe, and it's not (connectionLose not being thread safe 
even when syncrhonized isn't based not only on conjecture but on actual 
observed errors.)

I think no code should be synchronized in threaded mode unless you 
absolutely know that it will thereby be made thread safe. Otherwise, 
what's the point? It's the equivalent of wrong documentation, and it 
slows things down.

Since there is now a generic mechanism for running non-thread safe code 
from threads (the threadtask module), there is no problem with this.





From glyph at twistedmatrix.com  Thu Aug 16 22:08:41 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 21:08:41 -0500 (CDT)
Subject: [Twisted-Python] Synchronized FileDescriptor is bad
In-Reply-To: <3B7C4E05.30103@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108162053490.12541-100000@zaibach.twistedmatrix.com>

On Thu, 16 Aug 2001, Itamar wrote:

> The fact that FileDescriptor is synchronized may lead people to think 
> it's thread safe, and it's not (connectionLose not being thread safe 
> even when syncrhonized isn't based not only on conjecture but on actual 
> observed errors.)
> 
> I think no code should be synchronized in threaded mode unless you 
> absolutely know that it will thereby be made thread safe. Otherwise, 
> what's the point? It's the equivalent of wrong documentation, and it 
> slows things down.
> 
> Since there is now a generic mechanism for running non-thread safe code 
> from threads (the threadtask module), there is no problem with this.


Itamar,

Sorry for neglecting this thread safety stuff, but I've been very busy
with other changes (which, somewhat ironically, will need to be thread
safe).  I should have given you the go-ahead to fix it completely much
earlier.

I assume you're talking about connectionLost, and yes, it's misleading and
wrong.  It should never be called from user code, and always happen in the
main thread.

I apologize for the state of the threading code; as you can probably tell,
it was written when I was fresh from Java and still recursive-mutex happy.  
Please integrate your changes when it's next convenient, including the
removal of any synchronization that you find inappropriate, and
alternative implementations of various currently-synchronized classes.  I
recommend you take a look at threadable.dispatchOS as well... it could
probably use the threadtask mechanism.

If you're feeling _especially_ generous, feel free to write a document
entitled "threaded programming with twisted" that gives a nice overview of
what's appropriate to use threads for, and what things they can and can't
do using your thread safety scheme :-).


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Thu Aug 16 22:16:47 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 21:16:47 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <000301c123c6$67a073f0$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0108162109470.12541-100000@zaibach.twistedmatrix.com>

On Mon, 13 Aug 2001, Chris Hadgis wrote:

[snip]

> By the way, your suggestion of changing "reality" to "twisted.reality" when
> running faucet did the trick. I can now proceed through the game via the tk
> interface. How does this mesh with the web browser interface? Or is it
> something separate?

The web browser interface is still proof-of-concept.  There is no way to
interact with the game using actions; keepalive HTTP connections and
other such nightmares prevented me from doing so.  It'll probably
eventually be most useful as an authoring interface.

> > > Does anyone know the status of reality servers?
> >
> > What do you mean by Status?
> 
> Is anyone actively working on them? Are there any long-range plans for them?

Not "actively", although I use the Reality service as a testing ground for
most of my changes, since it is a simple and typical application of the
Twisted framework.  So, it remains up to date but does not accumulate any
significant new functionality over time.  Unless, of course, some
enterprising hacker were to come along and contribute some... :-)

> I think I asked before if they were supposed to be like TADS
> interpreters or Z-machines, or are they to be something different.

It inherits much from that culture, but it's designed to be an online
environment as well as single-player, and the single-player component runs
mostly in realtime (but can optionally be turn-based).  So I'd have to say
it's something different, and I don't know of any similiar projects.

> It's going to take some time to go through the various modules and
> find out how they fit together, and how the reality server interprets
> and processes sentences. If there are docs on how to create a reality
> world they would be helpful.

Most of the documentation for Twisted Reality was written several years
ago, and referred to the Java version of TR.  It is obviously no longer
accurate or relevant :).  Documentation is a known sore point and you're
encouraged to document your experiences; keep in mind that asking
questions on the mailing list means that at least we'll have somewhere to
refer other people asking the same questions to, so it does help!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Thu Aug 16 22:23:18 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 21:23:18 -0500 (CDT)
Subject: [Twisted-Python] "Eww...  Here, smell this!"  (was Re: Multiplex)
In-Reply-To: <20010812030509.A1052@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108162118330.12541-100000@zaibach.twistedmatrix.com>

On Sun, 12 Aug 2001, Kevin Turner wrote:

> On Wed, Aug 08, 2001 at 06:48:59AM -0500, Glyph Lefkowitz wrote:
> > 
> > This is what Cached was designed for :-).
> 
> I must be missin' something.  Here's my attempt.  Problems include not
> being sure if I can really talk in the Cache -> Cached direction, and
> the transparent automatic repeater creation alchemy doesn't even come
> close.

Yes, you can.  See the (woefully incomplete, I know) docs for

	twisted.spread.pb.Cached.getStateToCacheAndObserveFor

and let me know if it makes sense...

> (no, it doesn't run.  yes, the names suck.  but none of that matters if
> it doesn't work at all.)

Still not sure if I understand, though I'll give the code a more thorough
read-through later...  Is there a single object that you're replicating,
or do you want *any* client to be able to publish a repeater to the server
that any other client can observe?



                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Sat Aug 18 03:31:13 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 18 Aug 2001 10:31:13 +0300 (IDT)
Subject: [Twisted-Python] Testing Debian Packages
Message-ID: <20010818073113.49F803940@darjeeling>

Glyph thought that others would want to build Debian packages out
of CVS, so I checked in a small script, build-deb, which assumes
a sibling directory "debian-build" and builds the twisted package
there. 

For testing it, I use the following script:

>>>>>>>>>>>>> cut here <<<<<<<<<<<<<<<<<<<<<<<<<
#!/bin/sh
rm -rf ../debian-build
mkdir ../debian-build
fakeroot debian/rules clean
bin/build-deb
cd ../debian-build
sudo dpkg -i *.deb
/usr/bin/mktap --uid 33 --gid 33 web --port 80 --static /var/www
/usr/bin/tap2deb -t web.tap -m 'Moshe Zadka <moshez at debian.org>' -u
sudo dpkg -i .build/*.deb
lynx localhost
sudo dpkg --purge twisted-web
sudo dpkg --remove twisted
>>>>>>>>>>>>> cut here <<<<<<<<<<<<<<<<<<<<<<<<<

Have fun!
-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From chrish at mincom.com  Sun Aug 19 18:39:31 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 20 Aug 2001 08:39:31 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0108162109470.12541-100000@zaibach.twistedmatrix.com>
Message-ID: <003301c128ff$d077fae0$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

> The web browser interface is still proof-of-concept.  There is no way to
> interact with the game using actions; keepalive HTTP connections and
> other such nightmares prevented me from doing so.  It'll probably
> eventually be most useful as an authoring interface.

Okay, I won't worry too much about it then :)

> > Is anyone actively working on them? Are there any long-range plans for
them?
>
> Not "actively", although I use the Reality service as a testing ground for
> most of my changes, since it is a simple and typical application of the
> Twisted framework.  So, it remains up to date but does not accumulate any
> significant new functionality over time.  Unless, of course, some
> enterprising hacker were to come along and contribute some... :-)

I use the tk interface from faucet. I take it this is the Windows, or
non-Unix version of the interface. I notice the gtk interface is more
advanced than the tk interface. This is something I will be fixing in the
near future. I even made my first TR chage -- the text in the two major
windows (the description and the item list) now wraps. When I make a few
more changes I will try and create a diff file so the changes can be added
to the CVS. Is there an official change log, or revision history, or
something similar?

> > I think I asked before if they were supposed to be like TADS
> > interpreters or Z-machines, or are they to be something different.
>
> It inherits much from that culture, but it's designed to be an online
> environment as well as single-player, and the single-player component runs
> mostly in realtime (but can optionally be turn-based).  So I'd have to say
> it's something different, and I don't know of any similiar projects.

Okay. I will look at getting it to work the way the other IF systems do for
a single player, then see how multi-player IF might look. I actually did try
to start two faucets to connect to TRdemo. A crash on the second faucet told
me the address was already in use. Is it possible, in theory, for me to be
able to run two faucets for the one demo? If it is, I will add this to my
to-do list for the tk interface.

> > It's going to take some time to go through the various modules and
> > find out how they fit together, and how the reality server interprets
> > and processes sentences. If there are docs on how to create a reality
> > world they would be helpful.
>
> Most of the documentation for Twisted Reality was written several years
> ago, and referred to the Java version of TR.  It is obviously no longer
> accurate or relevant :).  Documentation is a known sore point and you're
> encouraged to document your experiences; keep in mind that asking
> questions on the mailing list means that at least we'll have somewhere to
> refer other people asking the same questions to, so it does help!

I will try and document the functions as I get around to finding out what
they all do and making changes to them. The next change I want to make is to
get the tk interface to recognise 'n' as a valid command (go north). I know
the gtk interface does this so I will copy what I can.

I will post about my progress with this as I make some :)

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Mon Aug 20 09:34:46 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Aug 2001 08:34:46 -0500 (CDT)
Subject: [Twisted-Python] ANN: Sunny Days
Message-ID: <Pine.LNX.4.21.0108200807350.5764-100000@zaibach.twistedmatrix.com>

AUSTIN, TEXAS (AP): Firmly ensconced in his menacing 12-story "fortress of
doom", Glyph today released Twisted, version 0.10.0.  After the
sun-destroying repercussions of a recent previous release, industry
pundits were cautious with their predictions, standing by their ready
escape pods.

The "fortress of doom", rumored to be carved from a single, giant block of
basalt is one of the outlying offices of Ninjaneering.  Mr. Lefkowitz was
available for a brief press conference.

Beaming, Glyph proclaimed "With the power of the Ninjas to aid us, there
is no way we can possibly fail!".  Although he displayed his
characteristic vaguarity about what those goals actually are, he may have
actually meant something this time.

As promised, Twisted 0.10.0 comes with both "enterprise" and the ability
to repair the sun.  Gavin "Skreech" Cooper, immediately after mirroring
the Twisted repository, perfunctorily restored the sun to its former light
and heat providing glory, while Glyph made sure that the Twisted Matrix
Labs website was in working order.  While everything appeared to go
smoothly, Chris Armstrong, press agent for Twisted Matrix, could not be
reached for comment, and sources say that he has fled the country,
possibly to avoid fallout from the 0.10 series of releases.



                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From glyph at twistedmatrix.com  Mon Aug 20 10:06:10 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Aug 2001 09:06:10 -0500 (CDT)
Subject: [Twisted-Python] Remember the thing about Jack and the releasing and the software?
 Yeah.
Message-ID: <Pine.LNX.4.21.0108200834480.5764-100000@zaibach.twistedmatrix.com>

So, I finally managed to kick 0.10.0 out the door, and it didn't even bite
me on the way out (yet).  However, I think that this release indicates the
need for a more defined release process.  (This one's for you, Moshe.)

As part of the release this time, I wrote some automated acceptance tests
to help me run the gauntlet of testing web/reality/tap
building/words/manhole/telnet... these were really helpful, and helped
dash & I squash at least one bug that we probably wouldn't have known
about otherwise :-).

So, here's a proposal for a test-and-release plan:

---

Step 1: discuss features and declard dates

Mailing list discussion of what features are going in to the next release.  
People give estimates for the associated tasks, and a release date is set.

Step 2: ensure compatibility

3 days away from the release date, development should be finishing on all
features desired.  In cases where it's not, those features will be omitted
from the release (and hopefully the developers responsible for them
haven't broken anything in CVS).  At this point, we will take 1 day to
make sure that older versions of data still load properly. (more on this
in a later email) If possible (fingers crossed here) we handle out-of-date
documentation.

This step can be skipped if we don't have any data format changes.

Step 3: acceptance testing

2 days before the release date, we enter a code freeze and everybody runs
the acceptance tests to make sure that everything still works.  If unit
tests run and 3 people sign off on the acceptance tests working (in posts
to the mailing list) this step is over.

Step 4: covering my ass

One day before the release date, we make a release of the software and
upgrade twistedmatrix.com to use it.  This step lasts as long as it takes
to run the site for a 24 hrs with no problems :)

Step 5: release!

With the website (and various other publicly acessible things) in order,
publish the release to Freshmeat.

---

The 3 goals of this strategy are to follow the XP "always have working
code" rule, try to prevent releases from getting held up by a particular
feature if there are other things worth releasing, and give ourselves
confidence and give the world at large a really positive impression of how
robust Twisted is.

Feedback appreciated.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From glyph at twistedmatrix.com  Tue Aug 21 15:03:17 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Aug 2001 14:03:17 -0500
Subject: [Twisted-Python] Proposed change to API for threadtask.
Message-ID: <20010821140317.A21110@twistedmatrix.com>

I'd like to change twisted.internet.threadtask.schedule from

    def schedule(function, args=[], kwargs={}):

to be

    def schedule(function, *args, **kwargs):

Any objections?

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From twisted at itamarst.org  Tue Aug 21 15:28:35 2001
From: twisted at itamarst.org (Itamar)
Date: Tue, 21 Aug 2001 15:28:35 -0400
Subject: [Twisted-Python] Proposed change to API for threadtask.
References: <20010821140317.A21110@twistedmatrix.com>
Message-ID: <3B82B663.7070208@itamarst.org>

Glyph Lefkowitz wrote:

> I'd like to change twisted.internet.threadtask.schedule from
> 
>     def schedule(function, args=[], kwargs={}):
> 
> to be
> 
>     def schedule(function, *args, **kwargs):


Fine by me - Python 2.0 makes them almost interchangeable anyway.

Anyone else have suggested API changes? this is the time to do it since 
right now only I am using this code :)








From sean at twistedmatrix.com  Tue Aug 21 16:23:28 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 21 Aug 2001 15:23:28 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <3B82B663.7070208@itamarst.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGOEGNCBAA.sean@twistedmatrix.com>

I am trying to get a threaded twisted server to run on windows (Windows2000
SP3) and having some issues.

There is an assert in threadable.py in init():

def init(with_threads):
    global threaded, _to_be_synched, dispatcher, dispatch, Waiter,
dispatchOS
    print "Threadable init", with_threads
    if threaded == with_threads:
        return
    assert threaded is None
    threaded = with_threads

that always asserts whether I pass "-t" to twistd or not.  It seems that
requireInit() gets called before init() so the code:

def requireInit():
    global threaded
    if threaded is None:
        init(0)

is always run to initialize the global "threaded" to zero.

If i take out that "assert threaded in None" it seems to initialize
correctly on the "second" time through.

But, in internet.main the global "waker" is never initialized as
installWaker() is never called. I think that is because threadable.threaded
was initialized as 0 the "first" time through when it was called by
requireInit() and the code:

if threadable.threaded:
    installWaker()

in internet.main.py skips the installWaker() call.

Anyone else tried running a threaded server on windows?






From m at moshez.org  Tue Aug 21 17:33:59 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed, 22 Aug 2001 00:33:59 +0300 (IDT)
Subject: [Twisted-Python] Logging Framework
Message-ID: <20010821213359.2CFA73874@darjeeling>

Or: How to do logging the proper way.

Disclaimer: I have not profiled the ideas described here yet.

twisted.python.log:

DEBUG, WARNING, NORMAL, IMPORTANT, CRITICAL = range(5)
priorities = 'DEBUG', 'WARNING', 'NORMAL', 'IMPORTANT', 'CRITICAL'

class FileLogsink:

    def __init__(self, fp):
        self.fp = fp

    def log(msg, category, priority):
        now = time.ctime(time.time())
        priority = priorities[priority]
        self.fp.write('[%(now)s] - %(priority)s - [%(category)s] %(msg)s' % 
                      vars())


class SysLogsink:
    ...

sink = None
min_priority = WARNING
min_priorities = {}

def msg(msg, category=None, priority=NORMAL):
    if priority >= min_priorities.get(category, min_priority):
        sink.log(msg, category, priority)

def startLogging(newSink):
    import sys
    global sink
    sink = newSink
    sys.stdout = SinkFileWrapper('stdout')
    sys.stderr = SinkFileWrapper('stderr')

def startLoggingFile(name):
    startLogging(open(name, 'ab+'))

class SinkFilewrapper:

    queued = ''

    def __init__(self, name):
        self.name = name

    def write(self, data):
        data = string.split(self.queued+data, '\n')
        self.queued = data[-1]
        for line in data[:-1]:
            msg(line, self.name, DEBUG)
            

class Logsource:

    '''mixin for classes wanting to log.

    Usage:

    class MyLoggingClass(Logsource):
        logCategory = 'MyThing'

        def someMethod(self, foo, bar):
            if foo==bar:
                self.log("foo should not be the same as bar", WARNING)
    '''
    logCategory = None

    def log(message, priority=NORMAL):
        msg(message, self.logCategory, priority)



-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From sean at twistedmatrix.com  Tue Aug 21 18:08:34 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 21 Aug 2001 17:08:34 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEGNCBAA.sean@twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGCEHACBAA.sean@twistedmatrix.com>

threaded initialization stuff twisted.internet.main.py is not working for me
on windows.

I propose we put all threaded initialization into a method of
twisted.internet.main and have it called from threadable.init() in one
place.

This would include:
	installWaker()
	delayeds.append(threadtask.theScheduler)

how about internet.main.enableThreading() which would do the work that is
currently in installWaker and set up the delayed scheduler?

On my machine with that change and some minor changes to threading.init() I
can run both threaded and non-threaded code on windows.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Sean Riley
Sent: Tuesday, August 21, 2001 3:23 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] threading on windows?


I am trying to get a threaded twisted server to run on windows (Windows2000
SP3) and having some issues.

There is an assert in threadable.py in init():

def init(with_threads):
    global threaded, _to_be_synched, dispatcher, dispatch, Waiter,
dispatchOS
    print "Threadable init", with_threads
    if threaded == with_threads:
        return
    assert threaded is None
    threaded = with_threads

that always asserts whether I pass "-t" to twistd or not.  It seems that
requireInit() gets called before init() so the code:

def requireInit():
    global threaded
    if threaded is None:
        init(0)

is always run to initialize the global "threaded" to zero.

If i take out that "assert threaded in None" it seems to initialize
correctly on the "second" time through.

But, in internet.main the global "waker" is never initialized as
installWaker() is never called. I think that is because threadable.threaded
was initialized as 0 the "first" time through when it was called by
requireInit() and the code:

if threadable.threaded:
    installWaker()

in internet.main.py skips the installWaker() call.

Anyone else tried running a threaded server on windows?




_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From twisted at itamarst.org  Tue Aug 21 18:14:16 2001
From: twisted at itamarst.org (Itamar)
Date: Tue, 21 Aug 2001 18:14:16 -0400
Subject: [Twisted-Python] threading on windows?
References: <HOEEKPCOKELHCNIJNMAGCEHACBAA.sean@twistedmatrix.com>
Message-ID: <3B82DD38.7020703@itamarst.org>

Sean Riley wrote:

> threaded initialization stuff twisted.internet.main.py is not working for me
> on windows.
> 
> I propose we put all threaded initialization into a method of
> twisted.internet.main and have it called from threadable.init() in one
> place.



Yes, but threaded can be used without internet.main's event loop, so it shouldn't depend on it.


 
> This would include:
> 	installWaker()
> 	delayeds.append(threadtask.theScheduler)
> 
> how about internet.main.enableThreading() which would do the work that is
> currently in installWaker and set up the delayed scheduler?


note that threading has to be initialized before threadtask is imported, 
so that it will be synchronized.


Can you explain why the current code doesn't work in Windows?





From sean at twistedmatrix.com  Tue Aug 21 18:40:26 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 21 Aug 2001 17:40:26 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <3B82DD38.7020703@itamarst.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com>

actually i have a counter question that is "how the hell does this work on
Linux at all?"

during startup, threadable.init() is called twice - once by internet.main
calling requireInit() which passes zero and once by twistd which passes zero
or one if "-t" was specified.

the first time through, the global threaded is set to zero.
the second time through, the "assert threaded is None" in threadable.init()
should always fail as threaded is not None, it is now zero. This assert
failing causes threadable.threaded to get left as zero and the
initialization of installing the waker and scheduler never gets done.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Sent: Tuesday, August 21, 2001 5:14 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] threading on windows?


Sean Riley wrote:

> threaded initialization stuff twisted.internet.main.py is not working for
me
> on windows.
>
> I propose we put all threaded initialization into a method of
> twisted.internet.main and have it called from threadable.init() in one
> place.



Yes, but threaded can be used without internet.main's event loop, so it
shouldn't depend on it.



> This would include:
> 	installWaker()
> 	delayeds.append(threadtask.theScheduler)
>
> how about internet.main.enableThreading() which would do the work that is
> currently in installWaker and set up the delayed scheduler?


note that threading has to be initialized before threadtask is imported,
so that it will be synchronized.


Can you explain why the current code doesn't work in Windows?



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From glyph at twistedmatrix.com  Tue Aug 21 22:51:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Aug 2001 21:51:04 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com>; from sean@twistedmatrix.com on Tue, Aug 21, 2001 at 05:40:26PM -0500
References: <3B82DD38.7020703@itamarst.org> <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com>
Message-ID: <20010821215104.A1065@twistedmatrix.com>

On Tue, Aug 21, 2001 at 05:40:26PM -0500, Sean Riley wrote:
> actually i have a counter question that is "how the hell does this work on
> Linux at all?"

It doesn't, far as I can tell.  Mea culpa -- I added an 'import main' to the
top of twistd as part of the addition of twisted.persisted.styles.Versioned,
but it should not be imported until _after_ the initial threadable.init.  I
will check in a fix in a few minutes.

I think we need some acceptance tests that test threading agressively.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From itamar at zoteca.com  Wed Aug 22 09:01:13 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Wed, 22 Aug 2001 09:01:13 -0400
Subject: [Twisted-Python] threading on windows?
References: <3B82DD38.7020703@itamarst.org> <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com> <20010821215104.A1065@twistedmatrix.com>
Message-ID: <3B83AD19.6090300@zoteca.com>

Glyph Lefkowitz wrote:

> On Tue, Aug 21, 2001 at 05:40:26PM -0500, Sean Riley wrote:
> 
>>actually i have a counter question that is "how the hell does this work on
>>Linux at all?"
>>
> 
> It doesn't, far as I can tell.


And I never encountered this since I don't use twistd.  Maybe write a 
test that uses a client that sends data and expects to get it back, and 
then test by using it against echoserv and echoserv_threaded?







From jasbahr at crash.org  Wed Aug 22 09:19:40 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Wed, 22 Aug 2001 08:19:40 -0500
Subject: [Twisted-Python] UML Whiteboard Concept
Message-ID: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>

(You may see this email twice.  It's been 24 hours since I
 mailed the original message, but it hasn't made it to the
 list yet...)


Twisted people,

I wanted to share some thoughts on a UML Whiteboard concept
I've been kicking around.  BUT FIRST, some ravings:

I just got back from SIGGRAPH, which was mind blowing.  Some
amazing art projects and emerging technology projects both
simple and complex.  There was also the expo area, which was
more of the usual trade show style, but all neat.  :-)  One
cool type of product on display in the expo was the 3D object
printer.  There were two companies, one using a silica powder
and "sugar water" solution to create 3D objects, the other
using what appeared to be liquefied plastic of some sort.
Given a detailed mesh, these machines can create objects which
have internal moving parts (no gears shown yet, but they did
have spheres within spheres and an item which had one ring
inside another with ball bearings between them, done in a
single printing process...)  And the silica powder models
will absorb liquid, which they use to change the physical
properties of the resulting object.  By soaking the object
in a glue-like liquid, it becomes very rigid and strong
(one piece supporting the weight of the salesman demonstrating
it), and by soaking it in a rubber-like liquid it becomes
somewhat flexible and squishy (kinda like Nerf material).

Cool stuff!  Anyway....

I'm thinking of designing a new UML diagramming tool because
I'm really unsatisfied with the existing ones.  This future
tool would be client-server, a collaborative UML diagramming
whiteboard, with versioning.  I'm thinking of an "extreme
programming" version of a UML diagramming tool, if you can
imagine that, something very lightweight but damn useful
for design collaboration and brainstorming sessions.

Interoperability with Rational Rose or TogetherJ (using XMI,
the XML standard for UML) would be an important later goal.

Components that would be used to assemble the tool:

- Server and remote object protocol:
          Twisted, http://www.twistedmatrix.com (natch :-)

- Client: wxPython, http://www.wxpython.org, and
          wxOGL, the wxWindows version of the
          Object Graphics Library canvas library

Of course, multiple client implementations could exist using
other toolkits.

I'm imagining that the whiteboard would support multiple documents
open at the same time, allowing users to cut and paste and to compare
documents.  (Not being able to have multiple documents open on my
desktop was something that frustrated me when I was using Rational
Rose...)

I want to avoid an explicit hand-off of editing control, turn taking
seems like an additional burden on remote collaboration -- one that
should emerge from the interaction of the participants rather than
being forced on them by the tool.  Instead, I imagine that users
will be granted an implicit lock on objects they select for editing
(a text field, a class, a method-invocation line).

Perhaps the tool should have two selection modes -- select-for-
highlighting and select-for-editing.  The first mode would be
for drawing attention to an element, say left click to highlight
and the graphic gets emphasized on everyone's display.  The
second mode would be the implicit lock mode, achieved by double
clicking or right-clicking.

Additionally, many of the systems which the UML tool would use
would also be useful for other applications.  Multiuser object
manipulation, the locking mechanism, object versioning, partial
object transmission, and so on.

In the foggy, distant future I'd love to have a design tool
that actually worked seamlessly with my code development.
New classes and methods typed into an editor would be added
to the design model as I typed them, and new methods and
classes created in code as I drew them in the tool.  Source
files per se would be the exported data of the tool, internally
code would be represented in a structured format at various
levels of granularity (package, class, method).  Smalltalky.

Resonant with the manhole concept, definitely.

Here is my current list of references for this project, FYI:

[ References ]

UML Specs
http://www.celigent.com/omg/umlrtf/artifacts.htm

A kick-ass collection of resources on object oriented programming:
http://www.eecs.lehigh.edu/~glennb/oose/oose.htm

FreeCase project
http://www.freecase.seul.org/
Client / server, documents of concepts to borrow

UML Pad
http://web.tiscali.it/ggbhome/umlpad/umlpad.htm
(maybe dead)

Dia
http://www.lysator.liu.se/~alla/dia/
Viseo-like drawing tool

OpenThorn
http://members.nbci.com/openthorn/
wxWindows Rose Clone (closed source?)

CLIP-based UML Patterns extractor:
http://www.geocities.com/ResearchTriangle/Node/2005/

UML Tool Survey Report Summary:
http://www.unicorn.cz/lat/distribution/_downloads/es-srovnani_case_nastroju-
yphise.pdf

---

And here's a quick brainstorm of a list of use cases:

[ Use Cases ]

Application Management:
- User launches diagramming client
- Client connects to Twisted server
- Client connects to Twisted service

Document Management:
- User creates new diagram
  - User creates new state diagram
  - User creates new sequence diagram
  - ...
- User saves diagram
  - Diagram automatically saved on edit?
  - Diagram automatically versioned?
- User opens diagram

Document Editing:
- User drags new glyph instance onto
  diagram
- User selects an existing glyph instance
  - NOTE: this implicitly locks the object
- User moves glyph instance
- User deletes glyph instance
- User drags connection between two
  glyph instances

Utility:
- Client requests index of documents
- Client requests document
- Server transmits index of documents to client
- Server transmits document to client

Thoughts?

Jason





From shae.erisson at widian.fi  Wed Aug 22 09:36:17 2001
From: shae.erisson at widian.fi (Shae Erisson)
Date: Wed, 22 Aug 2001 16:36:17 +0300 (EEST)
Subject: [Twisted-Python] UML Whiteboard Concept
In-Reply-To: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>
References: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>
Message-ID: <20010822.163617.28807792.shae.erisson@widian.fi>

From: "Jason L. Asbahr" <jasbahr at crash.org>
Subject: [Twisted-Python] UML Whiteboard Concept
Date: Wed, 22 Aug 2001 08:19:40 -0500

my random thoughts:

> I'm thinking of designing a new UML diagramming tool because
> I'm really unsatisfied with the existing ones.  This future
> tool would be client-server, a collaborative UML diagramming
> whiteboard, with versioning.  I'm thinking of an "extreme
> programming" version of a UML diagramming tool, if you can
> imagine that, something very lightweight but damn useful
> for design collaboration and brainstorming sessions.

This part makes me think of a collaborative refactoring browser.
<big snip>

> In the foggy, distant future I'd love to have a design tool
> that actually worked seamlessly with my code development.
> New classes and methods typed into an editor would be added
> to the design model as I typed them, and new methods and
> classes created in code as I drew them in the tool.  Source
> files per se would be the exported data of the tool, internally
> code would be represented in a structured format at various
> levels of granularity (package, class, method).  Smalltalky.

Yah, makes me think of Morphic, or whatever you really call the graphical editing bit that started {with,is part of} Self/Smalltalk/Squeak.
Also makes connections with intentional programming and everything else in that area.

> Thoughts?

Twisted.Morphic? Where every object has __repr2d__ and __repr3d__ as well?

This sounds like something in the same direction as the Refactoring Browser and Intentional Programming, because you're trying to organize a program in the next most computer readable format past the actual source. In this case it's UML, whereas RB and IP use an actual AST.

I suspect there's another abstraction above this that will make all of these tools fit into the same category.
or maybe I've just had too much sugar and caffeine :-)
----
shae at webwitches.com




From j.her at t-online.de  Wed Aug 22 14:39:07 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Wed, 22 Aug 2001 20:39:07 +0200
Subject: [Twisted-Python] Logging Framework
In-Reply-To: <20010821213359.2CFA73874@darjeeling>
Message-ID: <15Zcu5-01O4J6C@fwd06.sul.t-online.com>

On Wed, 22 Aug 2001 00:33:59 +0300 (IDT), Moshe Zadka wrote:

>twisted.python.log:
>
>DEBUG, WARNING, NORMAL, IMPORTANT, CRITICAL = range(5)
>priorities = 'DEBUG', 'WARNING', 'NORMAL', 'IMPORTANT', 'CRITICAL'

INFO - ignorable
DEBUG - only important to programmers
WARNING - MIGHT be bad
ERROR - IS bad, but can work around it
FATAL - unrecoverable, must kill myself

Don't have too much time, but the main prob in the class hierarchy is
that you mix event formatting and event sinks ==> you need a pluggable
LogFormatter. And consider log filtering to several sinks (all events
to a file, AND all >= ERROR to syslog).

Another very useful addition is log contexts (a pattern, I think
they're in PLoP3).

We have a similar log system in C++ with a Py/C binding, can tell you
more if you want.
Ciao, J?rgen






From sean at twistedmatrix.com  Thu Aug 23 17:34:11 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Thu, 23 Aug 2001 16:34:11 -0500
Subject: [Twisted-Python] twisted network objects diagram
In-Reply-To: <20010821215104.A1065@twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGEEIFCBAA.sean@twistedmatrix.com>

I drew a picture!

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pb.dia
Type: application/octet-stream
Size: 3652 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010823/86a645bf/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pbout.png
Type: image/png
Size: 24283 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010823/86a645bf/attachment.png 

From jasbahr at crash.org  Thu Aug 23 19:02:37 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Thu, 23 Aug 2001 18:02:37 -0500
Subject: [Twisted-Python] twisted network objects diagram
In-Reply-To: <HOEEKPCOKELHCNIJNMAGEEIFCBAA.sean@twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMIEGEHDAA.jasbahr@crash.org>

Yay!  We like pictures.  :-)

Jason

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Sean Riley
Sent: Thursday, August 23, 2001 4:34 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] twisted network objects diagram


I drew a picture!






From Glenn.Rieger at mincom.com  Sun Aug 26 20:45:57 2001
From: Glenn.Rieger at mincom.com (Glenn.Rieger at mincom.com)
Date: Mon, 27 Aug 2001 10:45:57 +1000
Subject: [Twisted-Python] Reality Servers
Message-ID: <OF3BDAFEF9.ADEB352E-ON4A256AB5.0002E4B5@mincom.oz.au>

I downloaded Twisted 0.10.0 along with Inheritance and TRDemo to continue 
looking at the .reality side of things.

There is bad news and good news...

The bad news is the username/password for TRDemo no longer seems to be 
guest/guest

The good news is this does not kill faucet, but results in a cute "oops, 
unauthorized" message. Hmm, I may look at getting that to appear as a 
pop-up tk message-box.

Am I using the wrong username and password for TRDemo or is something 
missing somewhere else? The Inheritance demo runs okay.

Is anyone currently working on the gtkfaucet? If not, then I would like to 
know if I can make changes to the core reality product. I will try where 
possible not to break the gtkfaucet functionality, but since I can't test 
it I won't make promises :) If there is someone using gtkfaucet, I would 
appreciate hearing from you to work out some arrangement when I feel I 
need to change or add to the existing reality scripts.

I have created DOS bat files as wrappers for building a reality tap and 
for running the tap with twistd. It contains the required commands plus a 
few house-keeping details like removing log and pid files before running.

Currently, I have (1) modified the tkfaucet to word-wrap the description 
and item frames, (2) display them at a reasonable width and height, (3) 
added the shortcut code from gtkfaucet. I'm not entirely happy about the 
shortcuts, as I believe the "go north" command should have "n" as a 
synonym. However, I will leave it as is until I get around to looking at 
these commands.

I don't like the idea that when you "look at" something, like the Colt 
pistol for example, your location changes to Colt pistol. That is, you 
have to perform a "look" command before you can move to another location.

This is all I have to report at the moment. I would have had more but I 
got side-tracked playing the IF game Moist (written in TADS). Now *that* 
would have some interesting possibilities in a multi-player environment :)

Cheers,
ChrisH



-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Mon Aug 27 02:05:33 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Aug 2001 01:05:33 -0500
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <OF3BDAFEF9.ADEB352E-ON4A256AB5.0002E4B5@mincom.oz.au>; from Glenn.Rieger@mincom.com on Mon, Aug 27, 2001 at 10:45:57AM +1000
References: <OF3BDAFEF9.ADEB352E-ON4A256AB5.0002E4B5@mincom.oz.au>
Message-ID: <20010827010533.A24320@twistedmatrix.com>

On Mon, Aug 27, 2001 at 10:45:57AM +1000, Glenn.Rieger at mincom.com wrote:
> The bad news is the username/password for TRDemo no longer seems to be 
> guest/guest

Hmm.  It seems to work here.  What configuration are you running on?

> The good news is this does not kill faucet, but results in a cute "oops, 
> unauthorized" message. Hmm, I may look at getting that to appear as a 
> pop-up tk message-box.

Cool :)

> Am I using the wrong username and password for TRDemo or is something 
> missing somewhere else? The Inheritance demo runs okay.

As I said, it works fine here.  Are you using the latest TRDemo.tar.gz from the
website?  There were a few changes... (I suppose we should be doing versioned
releases of both games, too, though so few things are changing it didn't seem
worth it)

> Is anyone currently working on the gtkfaucet? If not, then I would like to 
> know if I can make changes to the core reality product. I will try where 
> possible not to break the gtkfaucet functionality, but since I can't test 
> it I won't make promises :) If there is someone using gtkfaucet, I would 
> appreciate hearing from you to work out some arrangement when I feel I 
> need to change or add to the existing reality scripts.

Explain "core reality product"?  What functionality, specifically, do you want
to change?

The gtkfaucet is part of our acceptance tests.  If you're going to check
something in to CVS that breaks those tests, you need to find a way to test or
find someone else who will test for you.  If you're not going to do anything
with CVS, feel free to send a patch!  I'll test it before I integrate it :)

> I have created DOS bat files as wrappers for building a reality tap and 
> for running the tap with twistd. It contains the required commands plus a 
> few house-keeping details like removing log and pid files before running.

Cool, I'd like to see those.

> Currently, I have (1) modified the tkfaucet to word-wrap the description 
> and item frames, (2) display them at a reasonable width and height, (3) 

Hmm.  Does 'reasonable width and height' work cross-platform?

> added the shortcut code from gtkfaucet. I'm not entirely happy about the 
> shortcuts, as I believe the "go north" command should have "n" as a 
> synonym. However, I will leave it as is until I get around to looking at 
> these commands.

The shortcut code I'm *VERY* happy to hear about, I've been hoping that someone
would fix that for a while!  'n' is a synonym for 'go north' in gtkfaucet, so
I'm not sure what you're talking about...

> I don't like the idea that when you "look at" something, like the Colt 
> pistol for example, your location changes to Colt pistol. That is, you 
> have to perform a "look" command before you can move to another location.

Your location does not change.

It changes your _focus_, the object you're looking at.  The "obvious exits"
thing is sort of broken, and I apologise for that.  However, you do not need to
issue another 'look' command before you can move.

> This is all I have to report at the moment. I would have had more but I 
> got side-tracked playing the IF game Moist (written in TADS). Now *that* 
> would have some interesting possibilities in a multi-player environment :)

Wonderful!  It's good to hear a report of any progress at all, so don't feel
bad!  Also, don't consider playing IF a waste of time.  It's "market research".
:-)


-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From Chris.Hadgis at mincom.com  Mon Aug 27 19:04:43 2001
From: Chris.Hadgis at mincom.com (Chris.Hadgis at mincom.com)
Date: Tue, 28 Aug 2001 09:04:43 +1000
Subject: [Twisted-Python] Reality Servers
Message-ID: <OFC6EA5916.F07AA1E9-ON4A256AB5.007B70B3@mincom.oz.au>

Glyph Lefkowitz <glyph at twistedmatrix.com>
Sent by: twisted-python-admin at twistedmatrix.com
27/08/2001 04:05 PM
Please respond to twisted-python

 
        To:     twisted-python at twistedmatrix.com
        cc: 
        Fax to: 
        Subject:        Re: [Twisted-Python] Reality Servers


> On Mon, Aug 27, 2001 at 10:45:57AM +1000, Glenn.Rieger at mincom.com wrote:
> > The bad news is the username/password for TRDemo no longer seems to be 

> > guest/guest

> Hmm.  It seems to work here.  What configuration are you running on?

I am running on Win98. The date on the zip file is August 21st. I don't 
have any problems running the Inheritance demo.

> > The good news is this does not kill faucet, but results in a cute 
"oops, 
> > unauthorized" message. Hmm, I may look at getting that to appear as a 
> > pop-up tk message-box.

> Cool :)

I am glad to say it works. You get the printed message as well as a 
tkMessageBox. I will send you (Glyph) a zip file containing the code I 
refer to in this e-mail.

> > Am I using the wrong username and password for TRDemo or is something 
> > missing somewhere else? The Inheritance demo runs okay.

> As I said, it works fine here.  Are you using the latest TRDemo.tar.gz 
from the
> website?  There were a few changes... (I suppose we should be doing 
versioned
> releases of both games, too, though so few things are changing it didn't 
seem
> worth it)

Maybe they should be versions of the games. When I get around to writing 
one, after playing with faucet for a while, it will be kept under version 
control. How old are these games? When were they written?

> > Is anyone currently working on the gtkfaucet? If not, then I would 
like to 
> > know if I can make changes to the core reality product. I will try 
where 
> > possible not to break the gtkfaucet functionality, but since I can't 
test 
> > it I won't make promises :) If there is someone using gtkfaucet, I 
would 
> > appreciate hearing from you to work out some arrangement when I feel I 

> > need to change or add to the existing reality scripts.

> Explain "core reality product"?  What functionality, specifically, do 
you want
> to change?

Sorry, that's Mincom-speak coming out :) I meant the scripts in 
twisted\reality. If I change tkfaucet, gtkfaucet will still run quite 
happily. If I happen to change "thing.py", then that will affect gtkfaucet 
too. I am not looking at changing anything specific right now, but as I 
get more comfortable with the code, there may be changes I wish to make. 
For example, I may implement an "examine" command, which is the same as 
"look at", but is only one word and can be short-cut to "x" (see TADS).

> The gtkfaucet is part of our acceptance tests.  If you're going to check
> something in to CVS that breaks those tests, you need to find a way to 
test or
> find someone else who will test for you.  If you're not going to do 
anything
> with CVS, feel free to send a patch!  I'll test it before I integrate it 
:)

I would love to be able to test gtkfaucet myself, but I do not have 
"gtk.py". Is it available for Windows? If so, I would like to get a copy. 
It would make it easier to compare tkfaucet and gtkfaucet and it would 
make sure I didn't break anything.

I don't know if I would be able to access CVS from where I am, at least 
for now. If it is okay, I'd like to send patches to you. What form would 
you like the patch in?

> > I have created DOS bat files as wrappers for building a reality tap 
and 
> > for running the tap with twistd. It contains the required commands 
plus a 
> > few house-keeping details like removing log and pid files before 
running.

> Cool, I'd like to see those.

See zip file I will send you soon after posting this message.

> > Currently, I have (1) modified the tkfaucet to word-wrap the 
description 
> > and item frames, (2) display them at a reasonable width and height, 
(3) 

> Hmm.  Does 'reasonable width and height' work cross-platform?

Yes, I just meant I changed the number of characters displayed in the 
frames. The description frame is 72w x 12h, the item frame is 36w x 12h, 
and the happenings frame is 6h. This fits okay on a 800x600 screen, and 
even on a 640x480 :)

> > added the shortcut code from gtkfaucet. I'm not entirely happy about 
the 
> > shortcuts, as I believe the "go north" command should have "n" as a 
> > synonym. However, I will leave it as is until I get around to looking 
at 
> > these commands.

> The shortcut code I'm *VERY* happy to hear about, I've been hoping that 
someone
> would fix that for a while!  'n' is a synonym for 'go north' in 
gtkfaucet, so
> I'm not sure what you're talking about...

See zip file I will send you soon after posting this message.

In the system I am familiar with a travel verb is defined - nVerb - whose 
verbs (synonyms) are 'n', 'north', and 'go north'. The travel verb has an 
associated action which moves the player north. This is the distinction I 
make between a synonym and a shortcut. I admit the shortcut code is small, 
neat, and efficient, so I almost certainly won't change it.

If there are other changes you wish to see made in tkfaucet, let me know 
and I will add them to my list.

> > I don't like the idea that when you "look at" something, like the Colt 

> > pistol for example, your location changes to Colt pistol. That is, you 

> > have to perform a "look" command before you can move to another 
location.

> Your location does not change.

> It changes your _focus_, the object you're looking at.  The "obvious 
exits"
> thing is sort of broken, and I apologise for that.  However, you do not 
need to
> issue another 'look' command before you can move.

I tried that last night and it works as you said. I think the next thing I 
will look at is the 'Obvious Exits' code. I like this feature. In a TADS 
game, I would implement a verb called "exits" which would display the 
exits the player knows about.

> > This is all I have to report at the moment. I would have had more but 
I 
> > got side-tracked playing the IF game Moist (written in TADS). Now 
*that* 
> > would have some interesting possibilities in a multi-player 
environment :)

> Wonderful!  It's good to hear a report of any progress at all, so don't 
feel
> bad!  Also, don't consider playing IF a waste of time.  It's "market 
research".
> :-)

See zip file I will send you soon after posting this message.

Cheers,
ChrisH




-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From Chris.Hadgis at mincom.com  Tue Aug 28 19:24:33 2001
From: Chris.Hadgis at mincom.com (Chris.Hadgis at mincom.com)
Date: Wed, 29 Aug 2001 09:24:33 +1000
Subject: [Twisted-Python] Reality Servers
Message-ID: <OFE79C8DD0.16E43CB0-ON4A256AB6.007FF58F@mincom.oz.au>

I downloaded the TRDemo zip file yesterday and everything works okay 
now...

I have identified three problems I will look at as time permits

(1) 'pull string' of the John Romero action figure results in the 
broadcast messages appearing twice. Calls to broadcastToPair() appear but 
calls to broadcast() do not. I don't know why. I changed the function so 
the John Romero messages actually appear now. I don't know why broadcast() 
won't work from the 'pull string' function.

(2) obvious exits should always show the obvious exits from the player's 
room even when you are looking at an object. Glyph mentioned this 
yesterday.

(3) add an 'examine' verb, which is the same as 'look at'. I want to use 
'x' as a short-cut for examine, but the code for direction short-cuts 
won't work in this case - direction short-cuts replace the whole sentence 
with the full command.

If ANYONE has problems with tkfaucet, please add them to the list and I 
will see what I can do about fixing them.

Cheers,
ChrisH



-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Wed Aug 29 04:19:21 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Aug 2001 03:19:21 -0500
Subject: [Twisted-Python] UML Whiteboard Concept
In-Reply-To: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>; from jasbahr@crash.org on Wed, Aug 22, 2001 at 08:19:40AM -0500
References: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>
Message-ID: <20010829031921.A14359@twistedmatrix.com>

On Wed, Aug 22, 2001 at 08:19:40AM -0500, Jason L. Asbahr wrote:

> I'm imagining that the whiteboard would support multiple documents
> open at the same time, allowing users to cut and paste and to compare
> documents.  (Not being able to have multiple documents open on my
> desktop was something that frustrated me when I was using Rational
> Rose...)

I would hesitate to think of this in a "document"-based model.  These aren't
documents, they're models; "documents" only seem to get involved in the
discussion when the model-is-a-file implementation detail is made too explicit.

> Interoperability with Rational Rose or TogetherJ (using XMI,
> the XML standard for UML) would be an important later goal.
> [...]
> In the foggy, distant future I'd love to have a design tool
> that actually worked seamlessly with my code development.

I think this is a more important design aim than interoperability with current
UML-generating tools...

> New classes and methods typed into an editor would be added
> to the design model as I typed them, and new methods and
> classes created in code as I drew them in the tool.  Source
> files per se would be the exported data of the tool, internally
> code would be represented in a structured format at various
> levels of granularity (package, class, method).  Smalltalky.

This really shouldn't be that hard.  Python already has support for
representing ASTs as objects, and going back and forth to source code should be
no more difficult than any other load/save procedure.

This should also emphasize the differences between capabilities of different
programming languages -- C++ might be a little harder to parse, but it's still
no herculean challenge, and it would be nice to work with it alongside python
code if this "editor" understood them both; a small addition to UML (perhaps
even just a color) to delineate what language a class is from would be highly
useful in hybrid systems.

(As you can see, I'm more inclined to think of this project as "smalltalk
browser with UML display style" rather than "UML diagramming tool with optional
smalltalky hooks" ^_^)

> Resonant with the manhole concept, definitely.

In *my* foggy, distant future, manhole would integrate directly with this, and
you could browse multiple *versions and branches* of classes and their
interactions, selecting known-to-be-stable ones and loading them into the
server process graphically; perhaps even loading them into every node of a
cluster.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From glyph at twistedmatrix.com  Wed Aug 29 04:27:46 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Aug 2001 03:27:46 -0500
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <OFE79C8DD0.16E43CB0-ON4A256AB6.007FF58F@mincom.oz.au>; from Chris.Hadgis@mincom.com on Wed, Aug 29, 2001 at 09:24:33AM +1000
References: <OFE79C8DD0.16E43CB0-ON4A256AB6.007FF58F@mincom.oz.au>
Message-ID: <20010829032746.C14359@twistedmatrix.com>

On Wed, Aug 29, 2001 at 09:24:33AM +1000, Chris.Hadgis at mincom.com wrote:
> I downloaded the TRDemo zip file yesterday and everything works okay 
> now...

Cool.  Yeah, we need to start versioning those releases.

(There will be another one shortly, as I'm introducing a convention for Twisted
packages.)

> I have identified three problems I will look at as time permits

> (1) 'pull string' of the John Romero action figure results in the 
> broadcast messages appearing twice. Calls to broadcastToPair() appear but 
> calls to broadcast() do not. I don't know why. I changed the function so 
> the John Romero messages actually appear now. I don't know why broadcast() 
> won't work from the 'pull string' function.

Interesting.  I'll look into it.

> (2) obvious exits should always show the obvious exits from the player's 
> room even when you are looking at an object. Glyph mentioned this 
> yesterday.

Yep.  I'm still not sure how to handle this...

> (3) add an 'examine' verb, which is the same as 'look at'. I want to use 
> 'x' as a short-cut for examine, but the code for direction short-cuts 
> won't work in this case - direction short-cuts replace the whole sentence 
> with the full command.

Hopefully this will be really simple.  It should be a 3-line addition to
twisted/reality/player.py ;)

> If ANYONE has problems with tkfaucet, please add them to the list and I 
> will see what I can do about fixing them.

This sounds like good stuff.  When you have patches to contribute, assuming
they're less than 40k or so, send them to the list in diff -u format.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From m at moshez.org  Wed Aug 29 14:49:59 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed, 29 Aug 2001 21:49:59 +0300 (IDT)
Subject: [Twisted-Python] Current Working Directory - Just say no
Message-ID: <20010829184959.C21D63929@darjeeling>

Glyph, please, please remove the currentDirectory from the plugins
list. This is a security hole waiting to happen.

This is your brain.
This is your brain in the current working directory.

-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From glyph at twistedmatrix.com  Wed Aug 29 18:23:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Aug 2001 17:23:04 -0500
Subject: [Twisted-Python] Current Working Directory - Just say no
In-Reply-To: <20010829184959.C21D63929@darjeeling>; from m@moshez.org on Wed, Aug 29, 2001 at 09:49:59PM +0300
References: <20010829184959.C21D63929@darjeeling>
Message-ID: <20010829172304.A20274@twistedmatrix.com>

OK, I'll remove it because it seems redundant (Twisted directory + your home
directory seems like a fairly complete default set...) However, I don't really
agree... how is the current working directory more or less "secure" than the
contents of the environment variable $HOME?  We're importing python modules
with __import__ anyway; it's a pretty massive security hole if hostile users
can write to your current directory already (as it is normally on sys.path)

On Wed, Aug 29, 2001 at 09:49:59PM +0300, Moshe Zadka wrote:
> Glyph, please, please remove the currentDirectory from the plugins
> list. This is a security hole waiting to happen.
> 
> This is your brain.
> This is your brain in the current working directory.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From Chris.Hadgis at mincom.com  Thu Aug 30 20:07:23 2001
From: Chris.Hadgis at mincom.com (Chris.Hadgis at mincom.com)
Date: Fri, 31 Aug 2001 10:07:23 +1000
Subject: [Twisted-Python] reality server vs PUB
Message-ID: <OF2381FF76.F17BAF44-ON4A256AB9.00004333@mincom.oz.au>

Is it my imagination, or is twisted.reality somewhat similar to Python 
Universe Builder? I have just discovered this after reading through the 
i-f newsgroups this morning.  I plan on downloading it and taking it home 
to look at.

Does anyone else know anything about this?

Btw, how do I go about getting a TM home-page?

Cheers,
ChrisH


-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From carmstro at twistedmatrix.com  Fri Aug 31 10:56:05 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Fri, 31 Aug 2001 10:56:05 -0400
Subject: [Twisted-Python] I am not my freaking khakis.
Message-ID: <20010831105605.A573@Fookidla.org>

Hey everybody. I just wanted to drop a note that I haven't died, but rather
school has started, and with work and a girlfriend on top of that, I've
had very little time to come around on IRC, let alone hack Twisted or any
related projects. I really can't see myself continuing with TWN, so I hope
some kind soul might pick that up. I can help out, but the problem is
committing to a consistent schedule for TWN.

I really can't help but feel like I'm letting you guys down, but I'm going
to do my best to actually get around to doing some work here and there.

Anyways, it's really exciting to see what everyone's been doing, Twisted
just keeps blowing me away, both with it's functionality and it's
popularity. Keep up the good work, guys. I'm proud of you. :>

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From twisted at itamarst.org  Fri Aug 31 13:15:16 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 13:15:16 -0400
Subject: [Twisted-Python] What the hell?
Message-ID: <3B8FC624.6040404@itamarst.org>

 From tcp.py:

============
class Client(Connection):
     """A client for TCP (and similiar) sockets.
     """
     def __init__(self, host, port, protocol):
         """Initialize the client, setting up its socket, and request to
         connect.
         """
         if host == 'unix':
             # "port" in this case is really a filename
...
============

That is sooo wrong. What if my computer is named 'unix'? Why does the 
TCP code deal with files?






From shae at webwitches.com  Fri Aug 31 13:40:03 2001
From: shae at webwitches.com (Shae Erisson)
Date: Fri, 31 Aug 2001 20:40:03 +0300 (EEST)
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831.204003.607956277.shae@webwitches.com>

From: Itamar <twisted at itamarst.org>
Subject: [Twisted-Python] What the hell?
Date: Fri, 31 Aug 2001 13:15:16 -0400

>  From tcp.py:
> 
> ============
> class Client(Connection):
>      """A client for TCP (and similiar) sockets.
>      """
>      def __init__(self, host, port, protocol):
>          """Initialize the client, setting up its socket, and request to
>          connect.
>          """
>          if host == 'unix':
>              # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?

if you're adding xfstt to your fontpath, the url to use is unix:7101/
xfs is at unix:7100/

so I'd assume is specific to some kind of IPC.
Therefore, I bet yer system will act strangely if you make your hostname 'unix'
----
Shae Matijs Erisson - http://www.webwitches.com/~shae/
bRing mE fIve sQuirrels aNd nO oNe wIll gEt hUrt 
13:00pm up 1 season, 1 squirrel, load average: 1+1j 0.5+2j 0.2+0.5j




From twisted at itamarst.org  Fri Aug 31 13:47:06 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 13:47:06 -0400
Subject: [Twisted-Python] Another tcp.Client question
Message-ID: <3B8FCD9A.1090606@itamarst.org>

Another question - shouldn't we return when getting a EWOULDBLOK or 
friends, since we haven't yet connected?

========================
class Client(Connection):
     #...

     def doConnect(self):
         """I connect the socket.

         Then, call the protocol's makeConnection, and start waiting for
         data.
         """
         try:
             self.socket.connect(self.addr)
         except socket.error, se:
             if se.args[0] in (EWOULDBLOCK, EALREADY, EINPROGRESS):
                 pass ###########  XXX shouldn't this be "return"? XXX
             else:
                 self.protocol.connectionFailed()
                 return CONNECTION_LOST
         # If I have reached this point without raising or returning,
         # that means that the socket is connected.





From twisted at itamarst.org  Fri Aug 31 14:37:41 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 14:37:41 -0400
Subject: [Twisted-Python] Another tcp.Client question
References: <3B8FCD9A.1090606@itamarst.org>
Message-ID: <3B8FD975.8080306@itamarst.org>

Itamar wrote:
> Another question - shouldn't we return when getting a EWOULDBLOK or 
> friends, since we haven't yet connected?

Well, maybe not. But I am having problems - when connecting to a server 
that is not running using a tcp.Client, instead of getting 
connectionFailed I'm getting connectionMade and then an immediate 
connectionLost.





From twisted at itamarst.org  Fri Aug 31 14:44:01 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 14:44:01 -0400
Subject: [Twisted-Python] Another tcp.Client question
References: <3B8FCD9A.1090606@itamarst.org>
Message-ID: <3B8FDAF1.5070006@itamarst.org>

OK, the following patch seems to solve the problem. It is based on the 
fact doWrite is set to equal doConnect - I assume that this patch 
implements what was intended in the first place.


Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.16
diff -c -r1.16 tcp.py
*** tcp.py	2001/08/29 10:13:55	1.16
--- tcp.py	2001/08/31 18:46:49
***************
*** 159,168 ****
               self.socket.connect(self.addr)
           except socket.error, se:
               if se.args[0] in (EWOULDBLOCK, EALREADY, EINPROGRESS):
!                 pass
               else:
                   self.protocol.connectionFailed()
                   return CONNECTION_LOST
           # If I have reached this point without raising or returning, 
that means
           # that the socket is connected.
           del self.doWrite
--- 159,170 ----
               self.socket.connect(self.addr)
           except socket.error, se:
               if se.args[0] in (EWOULDBLOCK, EALREADY, EINPROGRESS):
!                 self.startWriting()
!                 return
               else:
                   self.protocol.connectionFailed()
                   return CONNECTION_LOST
+
           # If I have reached this point without raising or returning, 
that means
           # that the socket is connected.
           del self.doWrite






From twisted at itamarst.org  Fri Aug 31 14:46:01 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 14:46:01 -0400
Subject: [Twisted-Python] Another tcp.Client question
References: <3B8FCD9A.1090606@itamarst.org>
Message-ID: <3B8FDB69.5080200@itamarst.org>

One problem with my patch - both connectionFailed and connectionLost are 
called on the protocol, instead of just connectionFailed.





From chris at detriment.org  Fri Aug 31 14:51:45 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:51:45 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831115145.A993@det.ddts.net>

I agree.  The transport for a client or server should probally not be
generalized to a socket at all.  Maybe this calls for the creation of
twisted.transport ?  I am not familiar much with the twisted codebase, so
don't kill me if something like this already exists :)

On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> From tcp.py:
> 
> ============
> class Client(Connection):
>     """A client for TCP (and similiar) sockets.
>     """
>     def __init__(self, host, port, protocol):
>         """Initialize the client, setting up its socket, and request to
>         connect.
>         """
>         if host == 'unix':
>             # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010831/a4dccc6c/attachment.pgp 

From chris at detriment.org  Fri Aug 31 14:43:38 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:43:38 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831114338.A958@det.ddts.net>

I agree.  The transport for a client or server should probally not be
generalized to a socket at all.  Maybe this calls for the creation of
twisted.transport ?  I am not familiar much with the twisted codebase, so
please dont flame me if something like this already exists :)

On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> From tcp.py:
> 
> ============
> class Client(Connection):
>     """A client for TCP (and similiar) sockets.
>     """
>     def __init__(self, host, port, protocol):
>         """Initialize the client, setting up its socket, and request to
>         connect.
>         """
>         if host == 'unix':
>             # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010831/babb83c9/attachment.pgp 

From chris at detriment.org  Fri Aug 31 14:37:46 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:37:46 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831113735.A807@det.ddts.net>

I agree.  The transport for a client or server should probally not be
generalized to a socket at all.  Maybe this call for the creation of
twisted.transport ?  I am not familiar much with the twisted codebase, so
excuse me if something like this already exists :)

On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> From tcp.py:
> 
> ============
> class Client(Connection):
>     """A client for TCP (and similiar) sockets.
>     """
>     def __init__(self, host, port, protocol):
>         """Initialize the client, setting up its socket, and request to
>         connect.
>         """
>         if host == 'unix':
>             # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010831/a8266d5c/attachment.pgp 

From chris at detriment.org  Fri Aug 31 14:57:15 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:57:15 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <20010831115145.A993@det.ddts.net>
References: <3B8FC624.6040404@itamarst.org> <20010831115145.A993@det.ddts.net>
Message-ID: <20010831115712.A1013@det.ddts.net>

OOPS! I just switched ISPs and was figuring out my mail relay and the
message got sent three times! /me curses exim.

On Fri, Aug 31, 2001 at 11:51:45AM -0700, Chris Clearwater wrote:
> I agree.  The transport for a client or server should probally not be
> generalized to a socket at all.  Maybe this calls for the creation of
> twisted.transport ?  I am not familiar much with the twisted codebase, so
> don't kill me if something like this already exists :)
> 
> On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> > From tcp.py:
> > 
> > ============
> > class Client(Connection):
> >     """A client for TCP (and similiar) sockets.
> >     """
> >     def __init__(self, host, port, protocol):
> >         """Initialize the client, setting up its socket, and request to
> >         connect.
> >         """
> >         if host == 'unix':
> >             # "port" in this case is really a filename
> > ...
> > ============
> > 
> > That is sooo wrong. What if my computer is named 'unix'? Why does the 
> > TCP code deal with files?
> > 
> > 
> > 
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> -- 
> python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
> 36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"



-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010831/35b1b36c/attachment.pgp 

From glyph at twistedmatrix.com  Wed Aug  1 15:03:21 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Aug 2001 16:03:21 -0500 (CDT)
Subject: [Twisted-Python] ch-ch-ch-changes
Message-ID: <Pine.LNX.4.21.0108011558330.5137-100000@zaibach.twistedmatrix.com>

In my personal repository, I'm making a change to pb that I want to
mention before I commit.

Previously, there was no notion of a reference back to the "client", in a
PB service.  A perspective could provide an 'observe' method or similiar,
to allow the user to see what was going on.

However, given that this is such a frequent request, I'll be adding an
optinonal argument to requestPerspective that specifies a client-side
object that represents the "inverse perspective"; a direct reference to
something that represents the client's connection.  This works quite well
for twisted.reality and twisted.words (the new chat framework I'm working
on).

This will break pb services on tm.com yet again when I check it in, due to
protocol changes that support this (sorry guys!), but this time it should
be nothing more than a server restart for those of you who are running web
subservers.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From chrish at mincom.com  Wed Aug  1 16:33:23 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Thu, 2 Aug 2001 08:33:23 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0107312240060.5089-100000@zaibach.twistedmatrix.com>
Message-ID: <003c01c11ad9$f9649af0$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

> A command like 'gnusto build_map x.rpl mapcopy.py' in one of the
> Inheritance or TRDemo directories will create 'x.rpl' which you can use
> with mkrealityserver.  HTH.

This does help, actually.

If anyone is interested, I can write up some notes on how to get various
aspects of TM working on Windows platforms.

Once I put the Inheritance and TRDemo directories in the right places, I was
able to create a .spl file for both Inheritance and TRDemo. There was a
problem with TRDemo - twisted.library is missing. Is this library available
anywhere or has it been superseded? I ran the Inheritance module, and after
going through some code to find the username and password, I was able to run
this successfully. I am now able to move around in the inheritance game, but
that's about it.

Again, if anyone is interested in docs for running any of this, I will be
happy to produce some.

Does anyone know the status of reality servers?

I'm really enjoying playing around with all of this stuff.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From jasbahr at crash.org  Wed Aug  1 17:05:26 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Wed, 1 Aug 2001 18:05:26 -0500
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <003c01c11ad9$f9649af0$ad7711ac@pikachu>
Message-ID: <EIEFLCFECLLBKGPNJJIMMEFLHBAA.jasbahr@crash.org>

Chris, documentation on running Twisted under Windows would
be an extremely valuable addition to the Twisted community.  :-)

Cheers,

Jason




-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Chris Hadgis
Sent: Wednesday, August 01, 2001 5:33 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Reality Servers


From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

> A command like 'gnusto build_map x.rpl mapcopy.py' in one of the
> Inheritance or TRDemo directories will create 'x.rpl' which you can use
> with mkrealityserver.  HTH.

This does help, actually.

If anyone is interested, I can write up some notes on how to get various
aspects of TM working on Windows platforms.

Once I put the Inheritance and TRDemo directories in the right places, I was
able to create a .spl file for both Inheritance and TRDemo. There was a
problem with TRDemo - twisted.library is missing. Is this library available
anywhere or has it been superseded? I ran the Inheritance module, and after
going through some code to find the username and password, I was able to run
this successfully. I am now able to move around in the inheritance game, but
that's about it.

Again, if anyone is interested in docs for running any of this, I will be
happy to produce some.

Does anyone know the status of reality servers?

I'm really enjoying playing around with all of this stuff.

Cheers,
ChrisH





--
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From CARMSTRO at TWISTEDMATRIX.COM  Wed Aug  1 17:01:10 2001
From: CARMSTRO at TWISTEDMATRIX.COM (POKEY THE PENGUIN)
Date: Wed, 1 Aug 2001 19:01:10 -0400
Subject: [Twisted-Python] CODE RED WORM IMPACT ON TWISTED.WEB.
Message-ID: <20010801190110.A10183@Fookidla.org>

YOUR CHINESE WEAPONS ARE INFERIOR!!

HOORAY FOR TWISTED!

--
POKEY THE PENGUIN
MY UNTERNET HOME SITE IS AT HTTP://YELLOW5.COM/POKEY/ARCHIVE
POKEY LOVES TO READ YOUR MAIL!




From glyph at twistedmatrix.com  Wed Aug  1 18:03:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Aug 2001 19:03:26 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <EIEFLCFECLLBKGPNJJIMMEFLHBAA.jasbahr@crash.org>
Message-ID: <Pine.LNX.4.21.0108011855550.7795-100000@zaibach.twistedmatrix.com>

I'd like to emphatically second Jason's comment here!

Documentation is a serious sore point of many Python projects, including
Twisted, and I'd like to encourage anyone who has the time to do so to
write and maintain documentation, especially HOWTOs and tutorials.  (The
API documentation is passable as reference material, although it too needs
work.)

In addition to the Windows documentation, it might be nice to have a
slightly more GUI frontend to Twisted for windows users, who don't have a
very good command line interface.  I really don't know where to start with
such a tool though, because the GUI seems so open-ended to me, but if you
can think of an easier process while you're writing documentation, please
suggest that to the list.

More comments interspersed below...

On Wed, 1 Aug 2001, Jason L. Asbahr wrote:

> Chris, documentation on running Twisted under Windows would
> be an extremely valuable addition to the Twisted community.  :-)
> 
> Cheers,
> 
> Jason

and Chris Hadgis wrote:

> This does help, actually.
> 
> If anyone is interested, I can write up some notes on how to get various
> aspects of TM working on Windows platforms.
> 
> Once I put the Inheritance and TRDemo directories in the right places, I was
> able to create a .spl file for both Inheritance and TRDemo. There was a
> problem with TRDemo - twisted.library is missing. Is this library available
> anywhere or has it been superseded? I ran the Inheritance module, and after
> going through some code to find the username and password, I was able to run
> this successfully. I am now able to move around in the inheritance game, but
> that's about it.

Unfortunately, that's about as far as we got.  You can put things in
things, and if you read author.py you should get a few hints as to "verbs"
you can use to create things... hopefully some of the ex-reality authors
can chime in here...

> Again, if anyone is interested in docs for running any of this, I will be
> happy to produce some.

Seconding Jason's opinion, as above.

> Does anyone know the status of reality servers?

What do you mean by Status?

> I'm really enjoying playing around with all of this stuff.

Great to hear it! :)
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Wed Aug  1 18:07:19 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 1 Aug 2001 19:07:19 -0500 (CDT)
Subject: [Twisted-Python] CODE RED WORM IMPACT ON TWISTED.WEB.
In-Reply-To: <20010801190110.A10183@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0108011903290.7795-100000@zaibach.twistedmatrix.com>

YES.

On Wed, 1 Aug 2001, POKEY THE PENGUIN wrote:

> YOUR CHINESE WEAPONS ARE INFERIOR!!
> 
> HOORAY FOR TWISTED!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From mjmstahl at one.net  Wed Aug  1 23:00:56 2001
From: mjmstahl at one.net (M.J. Stahl)
Date: Thu, 2 Aug 2001 01:00:56 -0400
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <Pine.LNX.4.21.0108011855550.7795-100000@zaibach.twistedmatrix.com>
Message-ID: <E15SAgs-0002QA-00@zaibach.twistedmatrix.com>


> Documentation is a serious sore point of many Python projects, including
> Twisted, and I'd like to encourage anyone who has the time to do so to
> write and maintain documentation, especially HOWTOs and tutorials.  (The
> API documentation is passable as reference material, although it too 
> needs
> work.)
>
I currently operate on the MacOS X architecture and if I can get Twisted 
working on its platform I will be more than happy to document it for 
further use.

> In addition to the Windows documentation, it might be nice to have a
> slightly more GUI frontend to Twisted for windows users, who don't 
> have a
> very good command line interface.  I really don't know where to start 
> with
> such a tool though, because the GUI seems so open-ended to me, but if 
> you
> can think of an easier process while you're writing documentation, 
> please
> suggest that to the list.

What about the use of Wx Windows, since it has the WxPython API 
extensions, that way one wouldn't have to worry about reinventing the 
wheel used to work with X or Windows.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1164 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010802/667aca28/attachment-0002.bin>

From m at moshez.org  Wed Aug  1 23:10:12 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu, 02 Aug 2001 08:10:12 +0300
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <E15SAgs-0002QA-00@zaibach.twistedmatrix.com>
References: <E15SAgs-0002QA-00@zaibach.twistedmatrix.com>
Message-ID: <E15SAkO-000570-00@darjeeling>

On Thu, 2 Aug 2001, M.J.  Stahl <mjmstahl at one.net> wrote:

> What about the use of Wx Windows, since it has the WxPython API 
> extensions, that way one wouldn't have to worry about reinventing the 
> wheel used to work with X or Windows.

I hardly think Glyph's problem was the widget sets.
-- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy




From acapnotic at twistedmatrix.com  Thu Aug  2 02:30:43 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 2 Aug 2001 01:30:43 -0700
Subject: [Twisted-Python] [spread] "We're walking, we're walking, we're walking..."
Message-ID: <20010802013043.A3406@troglodyte.menefee>

[Yes, I do intend to spend some more time digesting this and working it
into code and perhaps more english, but that won't get done tonight...
So for now, Share and Enjoy!]

IRC log started Thu Aug 02 00:06:16 2001 (PDT -0700)

* Acapnotic pokes glyph

<glyph> Acapnotic: sorry, did you answer before?

<Acapnotic> glyph: Ok, I started the log ten minutes ago for
            you, and so far it mainly consists of descriptions of
            thirmite's van =)

<dash> haha

<thirmite> my van is awsome

<dash> "ph34r my l33t v4n"

<thirmite> heh

<glyph> Acapnotic: OK.  Let's get started then. :)
<glyph> Acapnotic: What do you want to do with PB?

<Acapnotic> glyph: whiteboard, say.  client -> server ->
            many-clients.  but we can start with just half of that.

<glyph> Acapnotic: OK.  First thing you need is a whiteboard
        service on the server.
<glyph> Acapnotic: by "service" I literally mean a subclass
        of pb.Service

<Acapnotic> a pb.Service, okay.  That doesn't have many methods 

<glyph> Acapnotic: crap.  I think I may have changed some naming here
	:-).  Does your version say anything about getPerspectiveNamed?

<Acapnotic> glyph: yes, getPerspectiveNamed(self,name) is
            the only method

<glyph> Acapnotic: Ok, cool.
<glyph> Acapnotic: So you have to implement that method to
        retrieve something that represents a viewer of whiteboards

<glyph> Acapnotic: twisted.reality.plumbing can provide an
        example for this.
<glyph> uh, actually twisted.reality.reality.Reality, now
        that I think of it :)

<dash> reality, reality, REALITY! (ta-daa!)
<dash> glyph: you have such a way with names

<Acapnotic> "a viewer" probably being a front-end?  or the client
            that's got a display attached?

<glyph> dash: everybody has a bad day sometimes :-\

<dash> glyph: no, i like it
<dash> it's a as subtle as a jackhammer :)

<glyph> Acapnotic: It's the back-end, not the front-end.  We're still
        on the server.

<glyph> Acapnotic: whatever you return is the thing that the
        authenticated user is going to be able to call methods on; it
        should be a subclass of pb.Perspective

<Acapnotic> ah, okay, I was derailed for a moment there getting stuck
            on "viewer".  but this isn't just a passive thing, it's
            what we call on to modify the whiteboard as well, ja?

<glyph> yes 
<glyph> hmm, maybe we should do this tomorrow, *AFTER* I check in
        these changes

<Acapnotic> no two days the same, eh?
<Acapnotic> glyph: Ok, then don't give me specifics on every method I
            need to override.  Big picture -- what classes go on which
            end, what talks to what?

<glyph> Acapnotic: welll, after hte handshake we just described,
        you've got a Perspective on the server
<glyph> the client has a Reference to that Perspective
<glyph> so when the client says perspective.foo(bar, baz), the
        server's perspective gets x.perspective_foo(bar, baz) called
        on it

<Acapnotic> glyph: Okay.  And is this one of your "there are no return
            values" areas?
<Acapnotic> yes, because calls are asyncronyous... crap, I can't spell
            these days.

<glyph> Acapnotic: Yes.  There are no return values; if the client
        wants to get a callback when the return value's ready, it
        calls p.foo(bar, baz, pbcallback=qux)

<Acapnotic> glyph: So now I can do whiteboard_author_client->server.
            To do server->whiteboard_audience_client, will I flip this
            around and put a "server" in each client?  (a la X)

<glyph> Acapnotic: No need.
<glyph> Acapnotic: You can just have each interested "listener" pass a
        subclass of "pb.Referenced" into a remote callback, which
        defines a method that the server will call.

<Acapnotic> glyph: so I'm just going to stash a bunch of these
            Referenced callbacks in some private attribute, and then
            run through them whenever I want to talk at them?

<glyph> Acapnotic: essentially, yes.

<Acapnotic> glyph: now you said these subclasses_of(pb.Referenced)
            defined a method to call.  Does that mean I should have
            them __call__able?  Or will I call their methods?  Or is
            that entirely up to me?

<glyph> Acapnotic: Subclasess of pb.Referenced define methods named
        remote_XXX; remoteobj.XXX() on the other side will invoke
        those methods.

<Acapnotic> glyph: and I missed a piece of the handshaking.  Where did
            the client/server connection happen?

<glyph> Acapnotic: that's irrelevant :)
<glyph> the way that happens is just you instantiate a tcp.Client with
        a Broker as the protocol
<glyph> all fo these interactions happen through the pb.Broker
<glyph> (requestPerspective, to be precise)

<Acapnotic> ok, that's good to know, I wouldn't call that irrelevant =)

-- 
"...we're stopped."




From acapnotic at twistedmatrix.com  Thu Aug  2 17:00:42 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 2 Aug 2001 16:00:42 -0700
Subject: [Twisted-Python] Hip-bone's connected to the...
In-Reply-To: <20010802013043.A3406@troglodyte.menefee>
Message-ID: <20010802160042.A621@troglodyte.menefee>

Abstract: Trace the construction of a PB-using application from the top,
    to the side, to the inside-out.

[XXX: Add "why the gleep you should actually care about PB
     introduction-hook here."]

Disclaimer: I wrote this before writing any code, and reading only a
    little.  So the possibility remains open that I am horribly,
    tragically wrong.

 ----

Application (twisted.internet.main.Application):

The overall container and entry point for your program as a whole.  The
answer to the question "Uh, okay, now how do I start it?".  In addition
to starting, it also handles shutdown, typically pickling itself to disk
in the process.  And yes, that means that when you pickle.load an object
from a twisted .spl file, an Application is what you are getting.

An Application has a name (first argument to the constructor), a string
which it uses in naming logfiles, shutdown pickles, etc.

When Applications are running, they typically have at least one Port
(see below) listening for connections, as internet..Applications which
don't communicate with anyone are less fun than dead puppies.  Ports
are added with the .addPort() method, and the Application has them
startListening as soon as it is run().

 - -

Port (twisted.internet.tcp.Port):

The class of much-debated naming, an open "server port" or "listener
port".  Constructed of two arguments (port, factory): the first is
either a TCP port number or the filename of a unix socket, the second is
an instance of a protocol.Factory -- typically a pb.BrokerFactory()

So when a Port gets a connection, it has the factory pop out a new
Protocol (in this case, a Broker), and hooks it up to the connection
with a Transport.

 - -

Broker (twisted.spread.pb.Broker)

Typically created by a pb.BrokerFactory, these broker between a
connection (from the Port) and a pb.Service.  The services available to
the broker are those which have been added to the BrokerFactory with its
addService method.

 - -

Service (twisted.spread.pb.Service)

The service you are providing (XXX: a less vauge, circular description?)
is defined as a subclass of pb.Service (ex: web.ResourcePublisher).
I expect the common usage is to only have no more than one instance
of a given Service class, as it defines the service *as a whole*,
and generally does not bother itself with the details of a request.
Instead, Services are asked (through the broker) for Perspectives,
through the getPerspectiveNamed method.

 - -

Perspective (twisted.spread.pb.Perspective)

Well, it's called "Perspective Broker", and that's what all the
excitement is about, right?  That's probably why my clarity has been
dropping as I near it...  Let me see if I can explain this.  Then
someone will have to jump in and tell me if I explained the right thing.

The reason the client is asking the server to perform a service is
because the server is able to see and do things the client does not
have access to.  That is, from the client's perspective, these things
are not visible, but from the server's perspective, they're perfectly
accessible.

Enter one Perspective Broker.  Through the Perspective Broker, clients
may have actions performed from the perspective of an object on the
server.

These objects are instances of classes descended from pb.Perspective.
If a client runs a method .foo() on a reference to such an object, the
server will run the method .perspective_foo() on the instance on the
server side.

XXX: Examples would help loads.

Note: Since all commands over the broker happen asynchronously, the
client cannot receive return values from a perspective_foo() method.

 - - 

Referenced (twisted.spread.pb.Referenced)

Since a Perspective object cannot pass data back to the client through
return values, how does the client ever learn anything about what
it's done through the broker?  If the client passes an object that is
Referenced through to the perspective, then the perspective on the
server side will be able to pass data to methods of the Referenced
object.  A call to .foo() on the server's side will call .remote_foo()
on the object in the client.  This works in much the same way as clients
calling methods of Perspective objects.

 ----

Ports get added to Applications
(a BrokerFactory is attached to the port)
Services get added to BrokerFactories
Perspectives are issued by Services

 ----

How does error notification work?
What naming conventions should application authors use?
Any other must-have pb classes?





From m at moshez.org  Fri Aug  3 02:12:32 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 03 Aug 2001 11:12:32 +0300
Subject: [Twisted-Python] mail is now working (CVS)
Message-ID: <E15Sa4O-0008Qt-00@darjeeling>

Here's a short example:

./bin/mktap mail --domain foo.bar=dump --user postmaster=password --bounce_to_postmaster
run twistd -f mail.tap
telnet localhost 8025, send mail to someone at foo.bar
retreive e-mail from 8110, connect as "postmaster at foo.bar", "password"

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Fri Aug  3 12:05:56 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 3 Aug 2001 13:05:56 -0500 (CDT)
Subject: [Twisted-Python] Hip-bone's connected to the...
In-Reply-To: <20010802160042.A621@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108031239060.25302-100000@zaibach.twistedmatrix.com>

Thank you, kevin, for doing this write-up... I hope this feedback enables
you to keep going with it.

I'd highly encourage you to write some code though :)

On Thu, 2 Aug 2001, Kevin Turner wrote:

> Application (twisted.internet.main.Application):
> 
> The overall container and entry point for your program as a whole.  The
> answer to the question "Uh, okay, now how do I start it?".  In addition
> to starting, it also handles shutdown, typically pickling itself to disk
> in the process.  And yes, that means that when you pickle.load an object
> from a twisted .spl file, an Application is what you are getting.

Now .tap file...

> When Applications are running, they typically have at least one Port
> (see below) listening for connections, as internet..Applications which
> don't communicate with anyone are less fun than dead puppies.  Ports
> are added with the .addPort() method, and the Application has them
> startListening as soon as it is run().

You may want to add the fact that they'll often have a Delayed as well.

> Port (twisted.internet.tcp.Port):

Your description of Ports is fairly accurate.

> Broker (twisted.spread.pb.Broker)
> 
> Typically created by a pb.BrokerFactory, these broker between a

Or manually instantiated for use with a tcp.Client!

> connection (from the Port) and a pb.Service.  The services available to
> the broker are those which have been added to the BrokerFactory with its
> addService method.

> Service (twisted.spread.pb.Service)
> 
> The service you are providing (XXX: a less vauge, circular description?)

No, sounds good -- I want to reinforce that these classes are what they
sound like :)

> is defined as a subclass of pb.Service (ex: web.ResourcePublisher).
> I expect the common usage is to only have no more than one instance
> of a given Service class, as it defines the service *as a whole*,
> and generally does not bother itself with the details of a request.
> Instead, Services are asked (through the broker) for Perspectives,
> through the getPerspectiveNamed method.

Might want to be a little clearer about the service doing the
authentication here...

> Perspective (twisted.spread.pb.Perspective)

> The reason the client is asking the server to perform a service is
> because the server is able to see and do things the client does not
> have access to.  That is, from the client's perspective, these things
> are not visible, but from the server's perspective, they're perfectly
> accessible.
>
> Enter one Perspective Broker.  Through the Perspective Broker, clients
> may have actions performed from the perspective of an object on the
> server.

I think it would make sense to explain references first, even though you
can't get to them without perspectives (because on the client, you have a
reference to a perspective); the notion of translating calls on references
into 'special' calls on instances is important for Perspective, Proxied,
Referenced, and Cached...

Also don't talk so much about "client" and "server" when referring to the
perspective; this is objects-to-objects.

> These objects are instances of classes descended from pb.Perspective.
> If a client runs a method .foo() on a reference to such an object, the
> server will run the method .perspective_foo() on the instance on the
> server side.

Yep.

> XXX: Examples would help loads.

# Here's one to get you started.
class Foo(pb.Perspective):
  def perspective_bar(self, baz):
    print 'received remote method call'

> Note: Since all commands over the broker happen asynchronously, the
> client cannot receive return values from a perspective_foo() method.

Yes it can, actually.  If you pass a keyword parameter 'pbcallback', that
callback will be invoked on the client when the return value is
received.  However, you can't get that as a return value from the .foo
call on the client (obviously).

> Referenced (twisted.spread.pb.Referenced)
> 
> Since a Perspective object cannot pass data back to the client through
> return values, how does the client ever learn anything about what
> it's done through the broker?  If the client passes an object that is
> Referenced through to the perspective, then the perspective on the
> server side will be able to pass data to methods of the Referenced
> object.  A call to .foo() on the server's side will call .remote_foo()
> on the object in the client.  This works in much the same way as clients
> calling methods of Perspective objects.

Speaking in terms of client and server still doesn't make sense.  The
server can send Referenced instances to the client too.  And the lead-in
sentence is wrong anyway :)

Additionally, you can pass a reference in to the requestPerspective method
now, to provide an analogue for the "client" object that you'd send
messages to in many other protocols.

> Ports get added to Applications
> (a BrokerFactory is attached to the port)
> Services get added to BrokerFactories
> Perspectives are issued by Services

Proxies are issued by returning Proxied instances from Perspective methods
(or from Proxied methods)

Copies are made    [ditto]      Copied  [ditto]

Caches are like copies, but they maintain identity rather than being
re-sent each time. (optional)

> How does error notification work?

Similiarly to return-value notification.

  myReference.do(arg,arg,pbcallback=myCallback, pberrback=myErrorCallback)

All you get as an argument to the error callback is is a traceback or
error message string though.

> What naming conventions should application authors use?

Just stick to the Twisted coding standard and you'll be fine.

> Any other must-have pb classes?

Copied and Proxied are worth explaining.  Reference is crucial.  Cached is
interesting, but complex and you'll know if you need it.  Other things are
peripheral.


Hope this helps.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Fri Aug  3 13:06:13 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 3 Aug 2001 14:06:13 -0500 (CDT)
Subject: [Twisted-Python] I am Jack's complete lack of software release discipline.
Message-ID: <Pine.LNX.4.21.0108031353300.25302-100000@zaibach.twistedmatrix.com>

So, after a flurry of 3 releases, one after the other, and then a week of
silence, I'm putting together another release (0.9.4), this one with a big
pile of new functionality.

A sampler:

 * C implementation of banana's decoding method

 * some small enhancements to PB

 * new twisted.words chat service and Instance Messenger client.

 * more robust IRC service integrated with twisted.words

 * twisted.mail re-integrated

On the documentation front, I've written a few more examples, a few more
docstrings, and a several people (namely Kevin Turner, David Creswick, and
David Sturgis) seem to be focusing on documenting PB and Twisted.Web;
again I'd like to emphasize that anyone else wanting to write
documentation should do so! :)

I've also put a TODO into CVS, so if you think of something you'd like to
see done, even if it's pie in the sky, I'll put it in so that incoming
developers have something to look at.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Fri Aug  3 13:23:06 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 3 Aug 2001 12:23:06 -0700
Subject: [Twisted-Python] Hip-bone's connected to the...
In-Reply-To: <Pine.LNX.4.21.0108031239060.25302-100000@zaibach.twistedmatrix.com>
Message-ID: <20010803122306.B1058@troglodyte.menefee>

On Fri, Aug 03, 2001 at 01:05:56PM -0500, Glyph Lefkowitz wrote:
> On Thu, 2 Aug 2001, Kevin Turner wrote:
> > Application (twisted.internet.main.Application):
>
> You may want to add the fact that they'll often have a Delayed as well.

Yeah, I noticed that, but left it out for the first pass as it wasn't
necessary to get the network connection up and running...

> > Service (twisted.spread.pb.Service)
>
> Might want to be a little clearer about the service doing the
> authentication here...

That sounds like an excellent idea.  However, it's an area I remain
entirely ignorant of...

> > Perspective (twisted.spread.pb.Perspective)
> 
> Also don't talk so much about "client" and "server" when referring to the
> perspective; this is objects-to-objects.

Well, I've got to have some terms other than "this" and "that" to keep
straight what I'm talking about.  Would you rather I called them "Alice"
and "Bob"?

Besides, if we are talking about this in the context of Services, (which
we are, as that text isn't general enough to be used as all-purpose
docstrings) I would think it makes sense to refer to one side as a
server, does it not?

> > Note: Since all commands over the broker happen asynchronously, the
> > client cannot receive return values from a perspective_foo() method.
> 
> Yes it can, actually.  If you pass a keyword parameter 'pbcallback', that
> callback will be invoked on the client when the return value is
> received.  

And "The callback will be called with a single argument, the return
value."

> > How does error notification work?
> 
> Similiarly to return-value notification.
> 
>   myReference.do(arg,arg,pbcallback=myCallback, pberrback=myErrorCallback)
> 
> All you get as an argument to the error callback is is a traceback or
> error message string though.

This means including the pberrback parameter on every call?  What
happens if you don't?  Is there a catch-all error handler you can set?
Why the sometimes strings/sometimes traceback inconsistancy?

> > What naming conventions should application authors use?
> 
> Just stick to the Twisted coding standard and you'll be fine.

CodingStandard.html does not have the adverb prefixes like perspective_,
remote_, etc.

> Cached is interesting, but complex and you'll know if you need it.  

Yeah, """It's like a Copy, but way, *WAY* worse!"""

> I'd highly encourage you to write some code though :)

ah'm workin on that =)




From mjmstahl at one.net  Fri Aug  3 19:52:56 2001
From: mjmstahl at one.net (M.J. Stahl)
Date: Fri, 3 Aug 2001 21:52:56 -0400
Subject: [Twisted-Python] Working with Reality
Message-ID: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com>

I would like to work towards developing Reality into a more mature 
environment, but (laughably) I am having trouble even getting the 
environment started (ie, I am recieving a traceback).

Can someone please give me a general breakdown on getting TRDemo or 
Inheritance started.

Mark




From glyph at twistedmatrix.com  Fri Aug  3 22:32:47 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 3 Aug 2001 23:32:47 -0500 (CDT)
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0108032330550.23374-100000@zaibach.twistedmatrix.com>

On Fri, 3 Aug 2001, M.J.  Stahl wrote:

> I would like to work towards developing Reality into a more mature 
> environment, but (laughably) I am having trouble even getting the 
> environment started (ie, I am recieving a traceback).

What's the traceback?  If you email it we'll probably be able to figure
out the problem a lot faster :)

> Can someone please give me a general breakdown on getting TRDemo or 
> Inheritance started.

Make sure you have all the latest stuff; 0.9.4 fixes some minor problems
with reality and there are new .tar.gz files in the 'reality' directory on
the website.  If you do that and things are still broken, please send the
traceback so I see what's happening, at least.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Sat Aug  4 01:40:24 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 4 Aug 2001 00:40:24 -0700
Subject: [Twisted-Python] more pb words, and I don't mean "Instance Messenger"
In-Reply-To: <Pine.LNX.4.21.0108031239060.25302-100000@zaibach.twistedmatrix.com>
Message-ID: <20010804004024.A1045@troglodyte.menefee>

Ok, my mind is shutting down, but I want to throw something at the list
tonight so I don't forget what I was thinking on.

Now, I know you've put a lot of effort into naming things so you can say
"it is what it says it is", but no matter how common you think the words
you use are, there's going to be *someone* who isn't familiar.  That's
why I was trying to give a non-circular definition of "Service" the
other day.

And today, The Word Of The Day is: Serializable!

It might even be kinda a real word, but it's sure not one in my
vocabulary.  So while it appears that the docstring for Perspective goes
to great length to make a very reasoned explanation, I'm having a
difficult time deciphering it.

twisted.spread.pb.Perspective.__doc__ reads:
> A perspective on a service.
>
> I want to it to be *possible* to be able to call remote methods on
> this.  I also want it to *normally* be serialized as a Proxy, becuase
> if users want references to each other they've got to be able to see
> each others' perspective.  (I can *see* your perspective, but I can't
> see *from* your perspective.)
>
> So why does it have to be referenced?  It just has to implement
> remoteMessageReceived.  In fact, it should not implement remote_; it
> should implement perspective_ or somesuch.  Normally, they're not
> serializable anwyay!

See, I *think* that answers the question I was going to ask, "How is a
Perspective different than a Referenced object," but I don't know how to
read it.  In addition to uncomprehension through non-deep-grokking of
the lingo, the phrase "I can *see* your perspective, but I can't see
*from* your perspective," is a riddle I can't say I have, uh, untwisted.

Ok, hopefully that's enough to get you talking a bit.  I'm going to go
have myself a sleep.

...the thing about writing code is, some of us have to understand what
tools and components are available to us *before* we can do so.  ;)

-- 
The moon is full (99.96%), 14.6 days old, phase: 0.493524
Angular diameter as seen from the earth: 0.4926 degrees.




From m at moshez.org  Sat Aug  4 06:51:23 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 04 Aug 2001 15:51:23 +0300
Subject: [Twisted-Python] Man Pages Project
Message-ID: <E15T0tn-00066g-00@darjeeling>

As twisted's Debian maintainer, it bothers me greately that there
are no man pages. I've started to write manpages for some of the utilities,
available in doc/man/*.1.

Please help me, and write a manpage for a utility today. I am strongly
considering to package only things in bin/ with a manpage for twisted 0.9.5

Here is the list of utilities with a man page so far:
faucet gnusto mktap twistd

Here is the list of utilities without a man page
malyon im mapeditor runtests twistd-debug

Thanks for your co-operation
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Sat Aug  4 06:57:56 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 04 Aug 2001 15:57:56 +0300
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <E15T0tn-00066g-00@darjeeling>
References: <E15T0tn-00066g-00@darjeeling>
Message-ID: <E15T108-000692-00@darjeeling>

On Sat, 04 Aug 2001, Moshe Zadka <m at moshez.org> wrote:

> Here is the list of utilities with a man page so far:
> faucet gnusto mktap twistd
+im
 
> Here is the list of utilities without a man page
> malyon im mapeditor runtests twistd-debug
-im

BTW: There are some which plain don't make sense to include, IMHO:
+ runtests (if you want to hack on twisted, apt-get source)
+ twistd-debug (ditto)
+ mapeditor ("this doesn't edit maps yet", wtf?)
+ malyon (is the inheritance game included)

Glyph, any comment?
If you agree that these go, then our man-page work is done.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Sat Aug  4 07:42:45 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 04 Aug 2001 16:42:45 +0300
Subject: [Twisted-Python] Toplevel .cvsignore
Message-ID: <E15T1hV-0006PR-00@darjeeling>

How about adding 

*.tap
twisted.log

To our toplevel .cvsignore?
Glyph?
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Sat Aug  4 23:40:33 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 00:40:33 -0500 (CDT)
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <E15T108-000692-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108050039040.4148-100000@zaibach.twistedmatrix.com>

On Sat, 4 Aug 2001, Moshe Zadka wrote:

> On Sat, 04 Aug 2001, Moshe Zadka <m at moshez.org> wrote:
> 
> > Here is the list of utilities with a man page so far:
> > faucet gnusto mktap twistd
> +im

Looks good.

> > Here is the list of utilities without a man page
> > malyon im mapeditor runtests twistd-debug
> -im

Yeah, I've been thinking that these (except for runtests) might be removed
from the standard distribution too, actually...

> Glyph, any comment?
> If you agree that these go, then our man-page work is done.

Your manpage work is done.

Ship it. :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Sat Aug  4 23:44:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 00:44:04 -0500 (CDT)
Subject: [Twisted-Python] Toplevel .cvsignore
In-Reply-To: <E15T1hV-0006PR-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108050041090.4148-100000@zaibach.twistedmatrix.com>

On Sat, 4 Aug 2001, Moshe Zadka wrote:

> How about adding 
> 
> *.tap
> twisted.log
> 
> To our toplevel .cvsignore?
> Glyph?

I made a couple of errors last time 'round when those things were part of
the TwistedPython .cvsignore; I'd prefer to leave them in.  I can't
remember exactly what now, but I do want to have as few things as possible
in .cvsignore :)

I always run my servers out of a different directory anyway
(~/Projects/Twisted is where my code lives, ~/Applications/Network is
where my .taps live).

Given the way the things in bin/ work, this is pretty easy.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Sun Aug  5 00:56:38 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 05 Aug 2001 09:56:38 +0300
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <Pine.LNX.4.21.0108050039040.4148-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108050039040.4148-100000@zaibach.twistedmatrix.com>
Message-ID: <E15THq2-0001Mk-00@darjeeling>

On Sun, 5 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Yeah, I've been thinking that these (except for runtests) might be removed
> from the standard distribution too, actually...

runtests doesn't run, becuase pyunit is packaged differently in twisted and
Debian.

> Your manpage work is done.
> 
> Ship it. :)

Any date on .5?
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Sun Aug  5 03:36:11 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 04:36:11 -0500 (CDT)
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <E15THq2-0001Mk-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108050349001.4119-100000@zaibach.twistedmatrix.com>

On Sun, 5 Aug 2001, Moshe Zadka wrote:

> runtests doesn't run, becuase pyunit is packaged differently in twisted and
> Debian.

Yep.  Shouldn't be in the package.

> > Ship it. :)
> 
> Any date on .5?

Chris Armstrong is (should be!) working on a PB interaction tool, which
Kevin Turner has cleverly (though tentatively) named "Manhole".  I'd like
to see that become marginally useful before pushing out a new v.; however,
this next update will mostly be documentation.

If Chris's stuff isn't ready within the next 3 days I'll push without it.

Travis also mentioned that he wants to do some updates to
twisted.web; I'll wait on those as well if they're going to be out within
the next 3 days.




                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Sun Aug  5 04:15:43 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 05:15:43 -0500 (CDT)
Subject: [Twisted-Python] more pb words, and I don't mean "Instance
 Messenger"
In-Reply-To: <20010804004024.A1045@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108050437590.4119-100000@zaibach.twistedmatrix.com>

On Sat, 4 Aug 2001, Kevin Turner wrote:

> And today, The Word Of The Day is: Serializable!

Serializable, Perspective, and a few other things are now documented in
CVS.  Let me know if they answer some of your questions, and what you
think I should document next.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Sun Aug  5 06:36:21 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 05 Aug 2001 15:36:21 +0300
Subject: [Twisted-Python] Man Pages Project
In-Reply-To: <Pine.LNX.4.21.0108050349001.4119-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108050349001.4119-100000@zaibach.twistedmatrix.com>
Message-ID: <E15TN8n-0001sm-00@darjeeling>

On Sun, 5 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> > Any date on .5?
...
> ...3 days...
...
> within
> the next 3 days.
...

OK, 3 days is not long enough that it's worth my time to have a
Debian-only twisted release
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Sun Aug  5 13:52:00 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 05 Aug 2001 22:52:00 +0300
Subject: [Twisted-Python] fwd: twisted_0.9.4-1_i386.changes INSTALLED
Message-ID: <E15TTwO-0002tM-00@darjeeling>

Enjoy!

To: Moshe Zadka <moshez at debian.org>
From: Debian Installer <installer at ftp-master.debian.org>
Subject: twisted_0.9.4-1_i386.changes INSTALLED


Installing:
twisted_0.9.4-1_i386.deb
  to pool/main/t/twisted/twisted_0.9.4-1_i386.deb
twisted_0.9.4-1.diff.gz
  to pool/main/t/twisted/twisted_0.9.4-1.diff.gz
twisted_0.9.4-1.dsc
  to pool/main/t/twisted/twisted_0.9.4-1.dsc
twisted_0.9.4.orig.tar.gz
  to pool/main/t/twisted/twisted_0.9.4.orig.tar.gz
Announcing to debian-devel-changes at lists.debian.org
Closing bugs: 105843 


Thank you for your contribution to Debian.

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Sun Aug  5 15:24:52 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 5 Aug 2001 14:24:52 -0700
Subject: [Twisted-Python] Napkin
Message-ID: <20010805142452.A1825@troglodyte.menefee>

Napkin is a whiteboard service over PB.  The server is nominally
functional, and there's a pygame client which serves as proof of
concept, though be warned it's hella ugly.  The code, that is, as
there isn't a GUI to insult ;)

1 is freehand-tool
2 is lines-tool (click some points, and then mouse2-click to send)
T is text-tool (click, type, <ENTER> sends)

I've only played with it over loopback so far.

You can ooggle the code at ~acapnotic/src/napkin or
http://twistedmatrix.com/users/acapnotic/src/napkin/

It goes without saying that this isn't release quality, I'm just letting
you brave folks poke around in it since some have expressed curiosity.





From davidc at sat.net  Sun Aug  5 16:24:03 2001
From: davidc at sat.net (David C)
Date: Sun, 5 Aug 2001 17:24:03 -0500 (CDT)
Subject: [Twisted-Python] Napkin
In-Reply-To: <20010805142452.A1825@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108051716020.31580-100000@multivac.localhost>

radix asked me to post urls to the list.

a simple pb chat server
http://braznet.com/david/files/chatclient.py
a simple pb chat client
http://braznet.com/david/files/chatclient.py


name:       David Creswick
website:    http://braznet.com/david
jabber id:  davec at jabber.org





From carmstro at twistedmatrix.com  Sun Aug  5 16:48:31 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 5 Aug 2001 18:48:31 -0400
Subject: [Twisted-Python] Napkin
In-Reply-To: <Pine.LNX.4.21.0108051716020.31580-100000@multivac.localhost>
Message-ID: <20010805184831.A969@Fookidla.org>

On Sun, Aug 05, 2001 at 05:24:03PM -0500, David C wrote:
> a simple pb chat server
> http://braznet.com/david/files/chatclient.py

I'm pretty sure this first URL is supposed to be just 'chat.py', not 
'chatclient.py' :-)

> a simple pb chat client
> http://braznet.com/david/files/chatclient.py

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From davidc at sat.net  Sun Aug  5 17:29:18 2001
From: davidc at sat.net (David C)
Date: Sun, 5 Aug 2001 18:29:18 -0500 (CDT)
Subject: [Twisted-Python] Napkin
In-Reply-To: <20010805184831.A969@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0108051828560.31638-100000@multivac.localhost>

On Sun, 5 Aug 2001, Chris Armstrong wrote:

> On Sun, Aug 05, 2001 at 05:24:03PM -0500, David C wrote:
> > a simple pb chat server
> > http://braznet.com/david/files/chatclient.py
> 
> I'm pretty sure this first URL is supposed to be just 'chat.py', not 
> 'chatclient.py' :-)
> 
> > a simple pb chat client
> > http://braznet.com/david/files/chatclient.py
> 
> -- 
> Chris Armstrong                        carmstro at twistedmatrix.com
> http://twistedmatrix.com/~carmstro     carmstro at dynup.net
> 
> 
yeah. and also the topic is supposed to be something else.

name:       David Creswick
website:    http://braznet.com/david
jabber id:  davec at jabber.org





From chrish at mincom.com  Sun Aug  5 18:42:35 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 6 Aug 2001 10:42:35 +1000
Subject: [Twisted-Python] Working with Reality
References: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com>
Message-ID: <008301c11e10$afc3a870$ad7711ac@pikachu>

From: "M.J. Stahl" <mjmstahl at one.net>

> I would like to work towards developing Reality into a more mature
> environment, but (laughably) I am having trouble even getting the
> environment started (ie, I am recieving a traceback).
>
> Can someone please give me a general breakdown on getting TRDemo or
> Inheritance started.

I got Inheritance running, eventually, under Windows 98. If you'd like the
details of how, I will post them tomorrow as it is my home machine. I am at
work now, so I will most likely post in another 24 hours. I am in Australia
(GMT +1000). The Inheritance demo lets you go to lots of places which need a
description :) but entry of verbs is not available yet.

I couldn't get TRDemo going at all because it was looking for module
"library.box", which did not come with 0.9.3.

This is the area that got me interested in Twisted in the first place.

Good luck with your efforts.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From chrish at mincom.com  Sun Aug  5 18:51:02 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 6 Aug 2001 10:51:02 +1000
Subject: [Twisted-Python] runtests on Windows 98
References: <Pine.LNX.4.21.0108032330550.23374-100000@zaibach.twistedmatrix.com>
Message-ID: <008701c11e11$ddc950c0$ad7711ac@pikachu>

While doing up some documentation for Twisted on Windows, I found a small
problem with runtests. The test for DirDbm fails when the script tries to
create the file "/tmp/dirdbm". The creation of this file is handled by calls
to the os and os.path modules. Under Windows, an error occurs when trying to
create this directory.

There are a number of solutions to this problem but I don't know how similar
os and os.path conflicts have been resolved. Glyph, is there a standard way
to handle this? I don't know how prevalent the use of these modules is. It
may be that Twisted can not be ported to Windows. I don't think this will be
the case as I did build and run a static server.

A bigger concern as far as runtests goes is it does not shut down cleanly on
Windows. I have not tried to track this problem down yet, but I suspect it
has something to do with the os and os.path modules - such as the use of
fork(), for example. This is also a problem with running twistd to get the
static server going, but I think a wrapper Python script could fix this.

I'll post my Windows documentation when I get it finished.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Sun Aug  5 19:39:02 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 20:39:02 -0500 (CDT)
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <008301c11e10$afc3a870$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0108052037590.32115-100000@zaibach.twistedmatrix.com>

On Mon, 6 Aug 2001, Chris Hadgis wrote:

> I couldn't get TRDemo going at all because it was looking for module
> "library.box", which did not come with 0.9.3.

As I mentioned before, please upgrade.  0.9.4 is out, and the TRDemo
.tar.gz has been updated to fix this problem.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Sun Aug  5 20:02:33 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 5 Aug 2001 21:02:33 -0500 (CDT)
Subject: [Twisted-Python] a - a cursed -1 pipe named .twistd-web-pb (weapon in hand)
Message-ID: <Pine.LNX.4.21.0108052053540.32115-100000@zaibach.twistedmatrix.com>

I know that I'm probably the most familiar one with this code, but if
anyone can figure out why it is that unix pipes often appear to hang
forever when you try to connect to them, and generally behave incorrectly
with twisted.internet, I'd like to know.

The code all appears to work just fine even with numeric unix sockets.  
As soon as I can I'll sit down with a W. Richard Stevens book and figure
out what's going on, but until then it's a constant annoyance to have to
be manually fixing up twistedmatrix.com's user directory when unix sockets
don't do what they're supposed to; so any help with this bug would be
appreciated.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From acapnotic at twistedmatrix.com  Mon Aug  6 02:39:01 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 6 Aug 2001 01:39:01 -0700
Subject: [Twisted-Python] Napkin on the Web
In-Reply-To: <20010805142452.A1825@troglodyte.menefee>
Message-ID: <20010806013901.A3634@troglodyte.menefee>

On Sun, Aug 05, 2001 at 02:24:52PM -0700, Kevin Turner wrote:
> Napkin is a whiteboard service over PB.  The server is nominally
> functional, and [...]

and now there's a twisted.web.Resource napkin viewer, which relies on a
PIL renderer.  These modules (napkin.webkin and napkin.pil_viewer) are
really much cleaner than the pygame_client is at the moment, so if
you're interested in writing a napkin client, look there.  Many of the
finer details aren't implemented, but the bulk of it is there.

However, the pygame_client is still the only thing available you can use
to *draw* on the napkin, aside from typing in commands to send blots
across the wire yourself.  I'll likely try to clean up this code, but
I'm not sure how far it will advance, due to a couple reasons.  One
being that if it's going to get a UI, I'd like a toolkit (roll-your-own
pygame widget set just isn't as fun as it used to be), and pyui says it
requires Python 2.1.  Another point is that some of the drawing
functions I want (e.g. ellipse) aren't available in the current pygame
release 1.1, but are in pygame CVS, so it might be better to wait for a
release there.

It would probably make a lot of sense to write a napkin client on a
canvas widget like Tk's or gnome's...

> You can ooggle the code at ~acapnotic/src/napkin or
> http://twistedmatrix.com/users/acapnotic/src/napkin/

There may be a napkin server running on twistedmatrix.com as well,
and a viewer to that server at
http://twistedmatrix.com/users/acapnotic.twistd/napkin

-- 
I would have called it "BackOfAnEnvelope", but it seemed a bit unwieldy.




From glyph at twistedmatrix.com  Mon Aug  6 02:55:13 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 6 Aug 2001 03:55:13 -0500 (CDT)
Subject: [Twisted-Python] Napkin on the Web
In-Reply-To: <20010806013901.A3634@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108060353540.19219-100000@zaibach.twistedmatrix.com>

Awesome work, kevin.  I'm excited to see the more functional clients for
this thing; I think we could probably use it as a development tool
(especially given how nice it would be to have box-and-line diagrams
describing PB object graphs)

On Mon, 6 Aug 2001, Kevin Turner wrote:

> I would have called it "BackOfAnEnvelope", but it seemed a bit unwieldy.

On the contrary, I think that 'napkin' goes quite well with the food
metaphor of twisted.spread ;-)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From carmstro at twistedmatrix.com  Mon Aug  6 08:17:36 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 6 Aug 2001 09:17:36 -0500
Subject: [Twisted-Python] TWN #5!
Message-ID: <20010806091736.A9762@twistedmatrix.com>


The Twisted Weekly News
=======================

#5th Issue. Monday, August 6, 2001

QOTW: (since this TWN covers two weeks, here are two quotes for your enjoyment!
hooray!)

  <Acapnotic> garble.  if I don't find a twisted.spread example soon, I
  might try to figure out what .spread is supposed to do by looking at the
  source directly
  <Acapnotic> which would probably be unhealthy
  <dash> Acapnotic: hey! i've been reading the source for the past month!
  didididididn't bother me at all!
  * dash giggles
  %
  <glyph> HELP ME SMALL CHILD I HAVE ATTEMPTED TO CREATE A WEB SERVER BUT I
  HAVE BECOME LOST

(for those of you who don't get the pokey reference in the second one, see
http://yellow5.com/pokey/archive.)

Welcome to the 5th issue of the Twisted Weekly News! Sorry that this one's a
week late - the editor actually had *real work* to do at work. This TWN is
packed with info, Twisted has seen a sudden growth spurt in users and in code,
and we're all very excited about that.

Progress
--------

OK, like I said, we have tons of stuff going on recently. Lots and lots of code
changes, here they are:

* Twisted 0.9.4: yes, another Twisted release[1] happened this week. This was a
  pretty full release, with bug fixes, new features, and general cleanup.
  twisted.spread.banana was ported to C, thus yielding a large increase in
  speed (optionally, of course!), PB was made incompatible with old versions
  when glyph added the option for passing a "reverse Perspective" to a server
  in requestPerspective, since this was such a commonly asked-about problem.
  Twisted.Words, the cool new IRC/IM killer was introduced, Twisted.Mail was
  re-integrated, and SPLs were renamed to TAPs.

* Chris Armstrong wrote an initial "mkserver" utility that replaced all the
  mess of mk*server utilities that were a part of Twisted. This was later
  renamed to 'mktap', to reflect the name change from "Server Pickles" to
  "Twisted APplications".

* Twisted.Words! This is the Cool Thing Of the Week, see below.

* cBanana: Glyph ported banana to C. Don't worry though, we will still be 100%
  pure-python for the foreseeable future, with C extensions just being
  optional. C code in Twisted should *never* be touched before coding in Python
  first, and only translating directly to C.

* Twisted.Mail: Moshez is back and better than ever, doing more work on the
  mail services in Twisted.

* Debian: Twisted 0.9.4 is in Debian Sid, the unstable branch. A
  million thank yous go out to Moshe Zadka, who is the Debian maintainer for
  Twisted.

* manpages: Moshe (what a guy!) also wrote manpages for all the utilities in
  Twisted, mainly so he could get the Debian package to pass lintian. Thanks
  again!

* More examples: check out the doc/examples/ directory for some snazzy PB demos
  and more.

* Kevin Turner wrote a Whiteboard app, "Napkin", which he just recently got
  into a usable state. It's not in Twisted CVS yet, but it should be soon. This
  is a pretty cool app for Twisted, and it's also Kevin's first significant
  contribution to Twisted. Hooray for Kevin! A round of applause for him!


Other Stuff
-----------

There has been lots going on involving Twisted even outside of progress in the
codebase. There's been a sudden growth-spurt in Twisted's popularity, and a lot
of people are starting to use it for their own projects. Tv, a now-regular of
#Python, reimplemented his mc-foo[2] program using PB. It's basically a super-
advanced MP3 player/list manager, that used to use XML-RPC. It took him 5 hours
to figure out PB and reimplement the entire thing using it.

DavidC_ implemented a simple chat server/client for a game that he's making. We
all want him to use Words, but it's cool that he's using PB anyway. :-) In the
process of doing this, he implemented a neat little STDIO Protocol that will
probably be assimilated by Twisted soon.

There was a whole lot of conversing on the mailing list this week, a summary of
it follows.

Kevin Turner started a thread[3] on Configuration, Persistence and Version
Control. A conversation followed in which Glyph pointed out that configuring
Twisted really can be as flexible as configuring other things, through version
controlling your TAP files as well as your initial start-up configuration
scripts.

Chris Armstrong posted a flaming[4] message about the naming of 'tcp.Port'. He
proposed "Listener" instead, and a rather long thread resulted. But, so far
this has resulted in nothing. (Let's all go egg Glyph's house!)

Pokey the Penguin sent a comforting message[5] to the list, informing us that the
Chinese weapons used in Code Red are inferior. Glyph agreed with a resounding
"YES!". Ironically, it was later found that when a Twisted Web server got hit
by Code Red, it was actually causing an exception to occur, although harmless.
The reason for this is that Code Red does not specify a HOST header, which
makes it an invalid HTTP request. Oh well, no harm done.

Kevin Turner started a very informative thread[6] in which Glyph taught him about
PB. Anyone who wants to learn it and is annoyed by the lack of documentation
should probably go read it, as well as looking at the simple examples in doc/
examples/.

M.J. Stahl showed some interest[7] in working on Reality. He had a problem getting
it working, and Glyph and Chris Hadgis helped him out a little bit, but he
hasn't replied since. Come on, M.J.! We'll help you however we can! :-)

Cool Thing Of the Week
----------------------
Twisted Words

Twisted Words is the coolest new addition to Twisted. It's basically an IRC/IM
killer, which uses spread.pb. Glyph's been working hard on this, and has
already interfaced the IRC service to it, as well as started on a web
administration interface. He also started writing InstanceMessenger, the GTK
user interface to twisted.words, and it has basic buddy list and messaging
functionality. Other than the obvious use for Words (normal every-day
conversations), another plus that is inherent in it's use of PB is that it is
well-integrated with other PB-using programs. One could start both a game
service and a Words service on the same port, and the game client could utilize
both through the same connection, allowing for in-game chat, as an example.
Thanks a whole lot Glyph!

Ok, that's it for this week. Thanks for reading!

Chris Armstrong <carmstro at twistedmatrix.com>

References
----------
[1] http://twistedmatrix.com/downloads
[2] http://mc-foo.sourceforge.net
[3] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000140.html
[4] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000145.html
[5] http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000161.html
[6] http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000166.html
[7] http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000172.html





From acapnotic at twistedmatrix.com  Mon Aug  6 15:16:47 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 6 Aug 2001 14:16:47 -0700
Subject: [Twisted-Python] [bug] spread/ui/gtkutil.Login, bad errback
Message-ID: <20010806141647.A2036@troglodyte.menefee>

Try logging on (with words or gtkmanhole) to a host which doesn't accept
your connection, and you get:

Traceback (innermost last):
  File "/home/kevint/cvs/zaibach/Twisted/twisted/spread/pb.py", line
972, in connectionLost
    errback()
TypeError: call of non-function (type tuple)

but browsing the source does not reveal any obvious flaws.




From chrish at mincom.com  Mon Aug  6 16:53:25 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Tue, 7 Aug 2001 08:53:25 +1000
Subject: [Twisted-Python] 0.9.5???
References: <20010806091736.A9762@twistedmatrix.com>
Message-ID: <00ce01c11eca$99a578b0$ad7711ac@pikachu>

I was expecting to download 0.9.4 today. I forgot my disk yesterday - bad
Hadgis. I was pleasantly surprised to see 0.9.5. I have copied this and will
install it tonight, time permitting. However, the link on the main page to
"Most Recent Version" is still pointing to 0.9.4 and is thus broken.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From chrish at mincom.com  Mon Aug  6 17:26:20 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Tue, 7 Aug 2001 09:26:20 +1000
Subject: [Twisted-Python] Working with Reality
References: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com> <008301c11e10$afc3a870$ad7711ac@pikachu>
Message-ID: <00d401c11ecf$33151dd0$ad7711ac@pikachu>

> From: "M.J. Stahl" <mjmstahl at one.net>

> > Can someone please give me a general breakdown on getting TRDemo or
> > Inheritance started.
>
> I got Inheritance running, eventually, under Windows 98. If you'd like the
> details of how, I will post them tomorrow as it is my home machine. I am
at
> work now, so I will most likely post in another 24 hours. I am in
Australia
> (GMT +1000). The Inheritance demo lets you go to lots of places which need
a
> description :) but entry of verbs is not available yet.

Okay, here it goes...

Note: these are the instructions for getting inheritance going on 0.9.3. I
imagine the instructions will be fairly similar for 0.9.4 and 0.9.5. Hmm,
except for the fact that spl files have been renamed to tap files and
mkserver is replacing mk*server. Anyhow, here is what I did.

* unzip inheritance.tar.gz into Twisted-0.9.3

This places build_map and the inheritance directory in Twisted-0.9.3. If you
plan on creating more than one reality server, you may want to rename
build_map to build_map_inherit to distinguish the build_map files of each
server

* gnusto build_map inherit.rpl mapcopy.py

This creates two files - inherit.rpl and mapcopy.py - from the build_map
file. inherit.rpl can then be used for...

* mkrealityserver inherit.rpl

This creates a file called reality.spl. This can be renamed if you are going
to run more than one world on the reality server. In fact, I would argue for
the case of using the rpl filename as the filename for the spl file, ie
inherit.rpl produces inherit.spl.

* twistd -f reality.spl

This starts the server with the reality.spl file. Start your browser and
point it to 127.0.0.1/8080 and you will see a login screen. The username is
"Damien" and the password is "admin".

If this doesn't get you going, let me know and I'll try and help you some
more.

Thanks to Glyph for the leg-up to get as far as I did.

If I get time tonight to look at 0.9.5, I will amend the instructions and
repost them.

Also, if the person or people responsible for creating the reality server
and the reality worlds is still on this list, I would like to hear from the
re: how they originally saw this project going when it was set aside. For
instance, was this meant to be a Python web-based version of an Inform
Z-machine or TADS interpreter? Something similar? Something different?

I hope this helps somewhat.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From m at moshez.org  Tue Aug  7 02:56:00 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue, 07 Aug 2001 11:56:00 +0300
Subject: [Twisted-Python] new function for t.i.main
Message-ID: <E15U2ee-0008C6-00@darjeeling>

daemonize() is cool, useful and should really be refactored out
of twistd
I really see no harm in providing more functionality in t.i.main
Flamewars re: correct debian packaging will be left for later.

def daemonize():
    if os.fork():
        os._exit(0)
    os.setsid()
    os.close(0)
    os.close(1)
    os.close(2)
    if os.fork():
        os._exit(0)
    os.umask(0)

Here's a quick thought about Debian packaging:
add a script to ./bin "debianize".
This script will take a .tap file and create a package named the same
as the .tap file which relevant /etc/init.d/package and 
/var/lib/package/package.tap
Perhaps even add it as a generic argument to mktap, so
mktap --debian web --static /var/www
will create the debian package.
One caveat: version numbers.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Tue Aug  7 04:19:26 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Tue, 7 Aug 2001 03:19:26 -0700
Subject: [Twisted-Python] [bug] web.resource.Resource.render.__doc__
Message-ID: <20010807031926.A3977@troglodyte.menefee>

My, that was annoying.
Resource.render.__doc__ says:

> Render a given resource.  
> 
> The return value of this method will be the rendered page, unless the
> return value is None, in which case it is this class's responsability
> to write the results to request.write(data), then call
> request.finish().

however, the magic value is not 'None', but web.server.NOT_DONE_YET,
a constant which is *NOT* defined as None.

So, which'll it be, boys?  Is the docstring wrong, or is the code?




From glyph at twistedmatrix.com  Tue Aug  7 16:14:34 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 7 Aug 2001 17:14:34 -0500 (CDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <E15U2ee-0008C6-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0108071537510.15349-100000@zaibach.twistedmatrix.com>

On Tue, 7 Aug 2001, Moshe Zadka wrote:

> daemonize() is cool, useful and should really be refactored out
> of twistd
> I really see no harm in providing more functionality in t.i.main
> Flamewars re: correct debian packaging will be left for later.

[snip]

Daemonize's functionality is probably useful, however, there are a few
things it doesn't take into account.  Insofar as it's useful, most of
twistd should probably be incorporated into it; any less is offering
incomplete functionality.

After all, this is about as platform specific as you get.  If we have
daemonize, then we probably want to have a similiar function for starting
a Windows Service.  Moreover, it would be good if we could detect which
platform we're on, then do the appropriate thing for creating a daemon on
that platform.

This implies logging.  "daemonize" won't work if you're still writing to
standard output after you call it.

So I'd say daemonize should at least take a logfile, and a function +
varargs, and never return.

> Here's a quick thought about Debian packaging:
> add a script to ./bin "debianize".
> This script will take a .tap file and create a package named the same
> as the .tap file which relevant /etc/init.d/package and 
> /var/lib/package/package.tap
> Perhaps even add it as a generic argument to mktap, so
> mktap --debian web --static /var/www
> will create the debian package.
> One caveat: version numbers.

This sounds cool, with one minor caveat.

I don't want to give windows users the impression that they're totally
unsupported, especially any more than they already are.

We should make plans to have similiar windows-ize scripts, and even if we
don't have them, make it clear that we're not trying to make a
debian-specific server infrastructure.

Also, wouldn't this "debian" functionality be very similiar for redhat,
mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
name for it.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Tue Aug  7 16:28:50 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 7 Aug 2001 17:28:50 -0500 (CDT)
Subject: [Twisted-Python] [bug] web.resource.Resource.render.__doc__
In-Reply-To: <20010807031926.A3977@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108071726460.16353-100000@zaibach.twistedmatrix.com>

On Tue, 7 Aug 2001, Kevin Turner wrote:

> Resource.render.__doc__ says:
> > Render a given resource.  
> > ... unless the return value is None
> So, which'll it be, boys?  Is the docstring wrong, or is the code?

The docstring is wrong; I've just corrected it.  Sorry for the confusion.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Wed Aug  8 01:53:47 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 8 Aug 2001 00:53:47 -0700
Subject: [Twisted-Python] Multiplex
Message-ID: <20010808005347.A3740@troglodyte.menefee>

Preface:

Currently, Napkin blots (the things that get drawn on the napkin) are
immutable (in practice, if not in name).  They go out over the wire and
they're forgotten, presumably having been rendered on the other end.
But this evening, dash asked me to revisit the idea of moving around
objects which had been previously placed on the napkin.  

The following is what I would like to have to implement that goal -- but
I believe it will be useful for far more than just Napkin.  Even now,
the core Napkin service has practically nothing to do with the idea of
"whiteboards", and is just concerned with the far more general task of
distributing information.

What I've done with Napkin so far has taught me enough about PB that I
can see that this can be done.  Of course, there's a possibility that
Twisted already does this, and I have not yet uncovered it.  If that's
the case, speak up!

----

Dramatis personae:

Bob -- runs a PB.Multiplex service on twistedmatrix.com.

Alec, Amy, and Angus -- are each "Leaf nodes" of the service.
    They might be called peers, subscribers, listeners, or observers,
    although the last three terms, describing passive occupations, are
    probably not most appropriate.

kermit -- don't look for him in the dramatis personae, he's just an
    instance of a Frog.

----

The Goal:
is quite simple.  When Amy moves the red circle, it moves on Alec and
Angus's napkins as well.  When Angus hits the "change artist" button,
Amy and Alec's players switch tunes too.  When Alec clicks on the frog,
all three workstations croak.  Get the idea?


Example:

Alec has a Frog object (referred to as 'kermit') from Bob's multiplex
service.  

Alec invokes kermit.shout_croak().  The 'shout_' prefix indicates that
this action does not take place locally, but rather it happens
world-wide over the multiplexer.  Somewhere in kermit's private parts,
there is a Proxy referring to kermit's counterpart in Bob's service.
kermit does getattr(self._proxy, 'croak'), and a short time later...

...kermit and his other avatars on Amy and Angus's machines get their
.remote_croak() methods invoked.  Amy and Alec happen to be running the
same client, one which provides an audio environment, and a giant
"Ribbit" echos through each of their rooms.  Angus is running a
minimalistic text client on his Wyse 85 terminal, and sees a discrete
"kermit: *croak*" message.  Somewhere on the far side of the galaxy, a
Sirius Cybernetics Genuine People Personality Prototype gets the
message, promptly self-terminates, and falls to the floor.

----

As you can see, while kermit's interface is the same in each of the
clients, the local implementation of the rendering methods differs.
(This is why I thought I might want a Referenced class object I could
descend Frog from in each of the clients, but I'm not sure it's
practical to broker classes.)  This can be achieved through a mechanism
very similar to that used for Copied/Copy, there's a tag identifing the
copied serialized Frog, and the Copy is constructed with a local
implementation of Frog, one of Amy's choosing.

On Amy's end, the difference between MultiplexLeaf and Copy is that
kermit must retain a link back to Bob's place, where his spreadable self
resides in a form resembling Proxied.

On Bob's end, the difference between Multiplexed and Proxied is that
the Multiplexed kermit must retain references to all the nodes/leaves of
himself, so that when someone shout_s at him, he can tell all his selves
to do the same.  That also means that aside from the construction, a
MultiplexLeaf behaves much more like a Referenced object than a Copy.

----

So now we have an object which when we wiggle its toe here, it wiggles
its toe there.  That's pretty good, but the exciting part is when we use
it as a container or a vechile.  Say my Napkin is Multiplexed.  Now I
say napkin.shout_draw(blot), with the Blot class being Multiplexed as
well.  When the blot gets passed from Bob to Alec and friends, leaves of
the blot are constructed in their clients -- and references to those
leaves are held in the Multiplexed blot.  Now, when I say
blot.shout_rotate(90)...  Isn't this fun?

----

Questions answered:

Q1. Why does Alec have to use the shout_ prefix?  Don't the adverb
prefixes usually go where the method is defined, on the receiving end?

A1. Remember, Alec's Frog is not just a Proxy or a Reference.  kermit was
constructed an instance of a class defined on Alec's side, a class that
likely has methods of its own, which Alec's program would like to use
locally.

Say Angus has a blot.  He'll want that blot drawn in his view locally,
while he positions/sizes it, before he commits it to the world.  Having
an interface to manipulate the blot locally (rather than through the
multiplexer) is essential here, as I'm making no distinction between
the-local-object-on-my-foo-canvas and the network-object.


Issues not addressed here (but not showstoppers):

1) Subscription -- how do you join ranks with Alec, Amy, and Angus?
This is closely related to the question of

2) Construction -- do multiplex objects have to be issued by Bob's
service, or do they just spring into being whenever someone passes a
MultiplexLeaf through the serializer?  Just what role *is* Bob's service
playing, anyway?

But you know something?  Bob's service doesn't really have to know
anything about Blots or Frogs or Napkins in particular...  it just has
to pass along the right copyTags, so that compatible objects are
constructed in each of the peers.

Another cool-thing point: I've found no reason why you shouldn't be able
to chain Multiplexed objects.  Just have it look like Angus's peer on
one side, and one of Bob's multiplexed objects on the other, and it
should function in both directions.  This lets you build more
interesting network-topologies if you don't want all the peers connected
to one point.


That's all I've got for tonight, boys and girls.  Hope you found reading
this worthwhile.  So tell me, whaddya think?  Will it work?





From m at moshez.org  Wed Aug  8 02:03:11 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 11:03:11 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
Message-ID: <20010808080311.D74663941@darjeeling>

On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Daemonize's functionality is probably useful, however, there are a few
> things it doesn't take into account.  Insofar as it's useful, most of
> twistd should probably be incorporated into it; any less is offering
> incomplete functionality.

No it isn't. It's offering *just* the daemonize functionality. You
can have a higher-level wrapper *on top* of that which is portable,
but daemonize() is useful.

> After all, this is about as platform specific as you get.

Yes it is. I firmly believe in platform-specific APIs which are then
wrapped in platform independent APIs. I don't want anything to restrict
my access to the OS

> If we have
> daemonize, then we probably want to have a similiar function for starting
> a Windows Service.

Yes, it would. This isn't an argument against daemonize.

> Moreover, it would be good if we could detect which
> platform we're on, then do the appropriate thing for creating a daemon on
> that platform.

Agreed.
But not with daemonize() -- with startService(....) which would call
daemonize() on UNIX.

> This implies logging.  "daemonize" won't work if you're still writing to
> standard output after you call it.

Well, it closes FD 1, so it works well enough for that.
Logging is left for a higher level API. As is writing PID files (which
must be done after daemonizing but before getting into the main loop)

> So I'd say daemonize should at least take a logfile, and a function +
> varargs, and never return.

No, that's startService, another useful API. 

> This sounds cool, with one minor caveat.
> 
> I don't want to give windows users the impression that they're totally
> unsupported, especially any more than they already are.

Fine, support them ;-)

> We should make plans to have similiar windows-ize scripts, and even if we
> don't have them, make it clear that we're not trying to make a
> debian-specific server infrastructure.

*I* don't care if my server infrastructure is Debian specific.

> Also, wouldn't this "debian" functionality be very similiar for redhat,
> mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
> name for it.

No. Debian uses .deb packages. Maybe whoever does RPM chooses to redhatize
or rpmize (I'm not sure: would she support SuSE? Mandrake?) Solaris
uses its own unique wonderful format, as does MacOS X and AIX.
I would be happy to put my /etc/init.d/ templates where everyone can use
them. Everything else is distribution specific. It's not hard to have
a hand install of a .tap if you have the /etc/init.d template.

I want the Debian packages to be good enough that I'll feel good enough
about uploading them to the official Debian archive, as well as maintainig
a huge apt source on tm.com. 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Tue Aug  7 11:55:43 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue,  7 Aug 2001 20:55:43 +0300 (IDT)
Subject: [Twisted-Python] CVS Sync Mails
Message-ID: <20010807175543.F3CBF393D@darjeeling>

Can we e-mail twisted-python instead of acapnotic?
*Please?*
Or at least have a twisted-python-checkins at tm.com for that.

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Tue Aug  7 11:15:17 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue,  7 Aug 2001 20:15:17 +0300 (IDT)
Subject: [Twisted-Python] fwd: Re: [Python-Dev] Zope porting to jython
Message-ID: <20010807171517.697B73939@darjeeling>

Other then the interesting thread, note the description of
the way Zope does "safe python".
Glyph, should I start adding Depends: python-bytecodehacks? ;-)

To: "Samuele Pedroni" <pedroni at inf.ethz.ch>
From: Jeremy Hylton <jeremy at zope.com>
Cc: <python-dev at python.org>
Subject: Re: [Python-Dev] Zope porting to jython

>>>>> "SP" == Samuele Pedroni <pedroni at inf.ethz.ch> writes:

  SP> my personal position is to help them as all other jython users,
  SP> fixing incompatibilities with CPython and answering to
  SP> questions. Nothing special. I can imagine that one of the big
  SP> problem could be restricted execution (if Zope uses that),
  SP> admitted that any C code functionality can be rewritten in Java.

Zope doesn't use restricted execution.  In Zope 2.4, the
RestrictedPython project uses the compiler package to generate safe
bytecode from Python source code.  I presume something similar could
be achieved using jythonc, but don't know how hard that would be.

  SP> If the PythonLabs have an "official" position/opinion on this
  SP> and in particular on the last quite speculative message (from
  SP> Joseph Grace) in the thread, they may post something. I can say
  SP> something about technical aspects, but I don't feel that I
  SP> should channel/or invent PythonLabs opinions.

I don't think there's an official PythonLabs opinion on this in
general.  If we have one its this:

The project(s) -- including the just announced phabric
effort -- are worthwhile.  We are happy to give advice and make
changes to help the projects where we can.  I expect the same holds
true for the rest of Zope Corp.

If there are genuine CPython/Jython incompatibilities that hinder the
project, there's no reason not to fix them.  The project may also
serve as a vehicle to further explore what metaobject protocols should
be exported by Jython.

Jeremy


_______________________________________________
Python-Dev mailing list
Python-Dev at python.org
http://mail.python.org/mailman/listinfo/python-dev

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Tue Aug  7 11:51:07 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue,  7 Aug 2001 20:51:07 +0300 (IDT)
Subject: [Twisted-Python] Another Change to Factory.buildProtocol
Message-ID: <20010807175107.2B849393B@darjeeling>

    def buildProtocol(self, connection):
        """Create an instance of a subclass of Protocol.

        The returned instance will handle input on an incoming server
        connection, and an attribute "factory" pointing to the creating
        factory.  Override this method to alter how Protocol instances get
        created.
        """
        p = self.protocol()
        p.factory = self
+       p.connection = connection
        return p


-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Wed Aug  8 01:53:17 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 10:53:17 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
Message-ID: <20010808075317.57A423940@darjeeling>

On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Daemonize's functionality is probably useful, however, there are a few
> things it doesn't take into account.  Insofar as it's useful, most of
> twistd should probably be incorporated into it; any less is offering
> incomplete functionality.

No it isn't. It's offering *just* the daemonize functionality. You
can have a higher-level wrapper *on top* of that which is portable,
but daemonize() is useful.

> After all, this is about as platform specific as you get.

Yes it is. I firmly believe in platform-specific APIs which are then
wrapped in platform independent APIs. I don't want anything to restrict
my access to the OS

> If we have
> daemonize, then we probably want to have a similiar function for starting
> a Windows Service.

Yes, it would. This isn't an argument against daemonize.

> Moreover, it would be good if we could detect which
> platform we're on, then do the appropriate thing for creating a daemon on
> that platform.

Agreed.
But not with daemonize() -- with startService(....) which would call
daemonize() on UNIX.

> This implies logging.  "daemonize" won't work if you're still writing to
> standard output after you call it.

Well, it closes FD 1, so it works well enough for that.
Logging is left for a higher level API. As is writing PID files (which
must be done after daemonizing but before getting into the main loop)

> So I'd say daemonize should at least take a logfile, and a function +
> varargs, and never return.

No, that's startService, another useful API. 

> This sounds cool, with one minor caveat.
> 
> I don't want to give windows users the impression that they're totally
> unsupported, especially any more than they already are.

Fine, support them ;-)

> We should make plans to have similiar windows-ize scripts, and even if we
> don't have them, make it clear that we're not trying to make a
> debian-specific server infrastructure.

*I* don't care if my server infrastructure is Debian specific.

> Also, wouldn't this "debian" functionality be very similiar for redhat,
> mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
> name for it.

No. Debian uses .deb packages. Maybe whoever does RPM chooses to redhatize
or rpmize (I'm not sure: would she support SuSE? Mandrake?) Solaris
uses its own unique wonderful format, as does MacOS X and AIX.
I would be happy to put my /etc/init.d/ templates where everyone can use
them. Everything else is distribution specific. It's not hard to have
a hand install of a .tap if you have the /etc/init.d template.

I want the Debian packages to be good enough that I'll feel good enough
about uploading them to the official Debian archive, as well as maintainig
a huge apt source on tm.com. 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Wed Aug  8 02:31:36 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 8 Aug 2001 01:31:36 -0700
Subject: [Twisted-Python] Multiplex
In-Reply-To: <20010808005347.A3740@troglodyte.menefee>
Message-ID: <20010808013136.A3911@troglodyte.menefee>

Ok, Glyph is givin' me funny looks.

The idea that hooked me in to that whole mess was the bit about the peer
getting a single object which has both locally-defined properties *and*
can still act as a Reference.

again, the idea analogous to subclassing.  Python checks the subclass
for the attribute first, and then checks its base classes.  I want to
have the object search its local class first, and then fall back to
being a Reference.  I dunno how to do that currently.

The two-way aspect is important to me as well, but that's already
covered.




From m at moshez.org  Wed Aug  8 00:09:49 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 09:09:49 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <Pine.LNX.4.21.0108071537510.15349-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108071537510.15349-100000@zaibach.twistedmatrix.com>
Message-ID: <20010808060949.913F6393F@darjeeling>

On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Daemonize's functionality is probably useful, however, there are a few
> things it doesn't take into account.  Insofar as it's useful, most of
> twistd should probably be incorporated into it; any less is offering
> incomplete functionality.

No it isn't. It's offering *just* the daemonize functionality. You
can have a higher-level wrapper *on top* of that which is portable,
but daemonize() is useful.

> After all, this is about as platform specific as you get.

Yes it is. I firmly believe in platform-specific APIs which are then
wrapped in platform independent APIs. I don't want anything to restrict
my access to the OS

> If we have
> daemonize, then we probably want to have a similiar function for starting
> a Windows Service.

Yes, it would. This isn't an argument against daemonize.

> Moreover, it would be good if we could detect which
> platform we're on, then do the appropriate thing for creating a daemon on
> that platform.

Agreed.
But not with daemonize() -- with startService(....) which would call
daemonize() on UNIX.

> This implies logging.  "daemonize" won't work if you're still writing to
> standard output after you call it.

Well, it closes FD 1, so it works well enough for that.
Logging is left for a higher level API. As is writing PID files (which
must be done after daemonizing but before getting into the main loop)

> So I'd say daemonize should at least take a logfile, and a function +
> varargs, and never return.

No, that's startService, another useful API. 

> This sounds cool, with one minor caveat.
> 
> I don't want to give windows users the impression that they're totally
> unsupported, especially any more than they already are.

Fine, support them ;-)

> We should make plans to have similiar windows-ize scripts, and even if we
> don't have them, make it clear that we're not trying to make a
> debian-specific server infrastructure.

*I* don't care if my server infrastructure is Debian specific.

> Also, wouldn't this "debian" functionality be very similiar for redhat,
> mandrake, etc?  Even solaris and MacOS X?  "unixize" might be a better
> name for it.

No. Debian uses .deb packages. Maybe whoever does RPM chooses to redhatize
or rpmize (I'm not sure: would she support SuSE? Mandrake?) Solaris
uses its own unique wonderful format, as does MacOS X and AIX.
I would be happy to put my /etc/init.d/ templates where everyone can use
them. Everything else is distribution specific. It's not hard to have
a hand install of a .tap if you have the /etc/init.d template.

I want the Debian packages to be good enough that I'll feel good enough
about uploading them to the official Debian archive, as well as maintainig
a huge apt source on tm.com. 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From acapnotic at twistedmatrix.com  Wed Aug  8 03:27:44 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 8 Aug 2001 02:27:44 -0700
Subject: [Twisted-Python] CVS Sync Mails
In-Reply-To: <20010807175543.F3CBF393D@darjeeling>
Message-ID: <20010808022744.A4040@troglodyte.menefee>

On Tue, Aug 07, 2001 at 08:55:43PM +0300, Moshe Zadka wrote:
> Can we e-mail twisted-python instead of acapnotic?
> *Please?*
> Or at least have a twisted-python-checkins at tm.com for that.

When glyph sets up cvs-spam list, just put the address where 'acapnotic'
is now in CVSROOT/loginfo.  

Or, lacking a cvs-spam list, you can append your address to the end of
that same line...

(you can check out CVSROOT as you would any other module, ditto for
committing the loginfo changes.)




From m at moshez.org  Wed Aug  8 03:40:35 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 12:40:35 +0300 (IDT)
Subject: [Twisted-Python] CVS Sync Mails
In-Reply-To: <20010808022744.A4040@troglodyte.menefee>
References: <20010808022744.A4040@troglodyte.menefee>
Message-ID: <20010808094035.AA4C63937@darjeeling>

On Wed, 8 Aug 2001, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> Or, lacking a cvs-spam list, you can append your address to the end of
> that same line...
 
I will...
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From itamar at zoteca.com  Wed Aug  8 05:41:30 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Wed, 08 Aug 2001 14:41:30 +0300
Subject: [Twisted-Python] twisted.internet.ssl
Message-ID: <3B71256A.20602@zoteca.com>

1) You'll need pyopenssl from pyopenssl.sf.net.

2) This is totally untested.

Hint: pyopenssl 0.3 segfaults if you try to write to an SSL connection 
before you connect().

-- 
itamar(at)shtull-trauring.org  ||  itamar(at)zoteca.com
http://itamarst.org            ||  http://www.zoteca.com
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ssl.py
URL: </pipermail/twisted-python/attachments/20010808/89152695/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: server.pem
URL: </pipermail/twisted-python/attachments/20010808/89152695/attachment-0001.ksh>

From glyph at twistedmatrix.com  Wed Aug  8 05:44:08 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 06:44:08 -0500 (CDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <20010808080311.D74663941@darjeeling>
Message-ID: <Pine.LNX.4.21.0108080314310.17585-100000@zaibach.twistedmatrix.com>

On Wed, 8 Aug 2001, Moshe Zadka wrote:

> On Tue, 7 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> > any less is offering incomplete functionality.

> No it isn't. It's offering *just* the daemonize functionality. You can
> have a higher-level wrapper *on top* of that which is portable, but
> daemonize() is useful.

Sorry, no.  If you don't redirect stdout properly, your daemon is broken,
unix or no.

> > Moreover, it would be good if we could detect [...]

> Agreed.
> But not with daemonize() -- with startService(....) which would call
> daemonize() on UNIX.

Yes.  And it should be strongly deprecated to call daemonize directly.

> > So I'd say daemonize should at least take a logfile, and a function +
> > varargs, and never return.
> 
> No, that's startService, another useful API. 

I would argue that daemonize is not useful without this API.  It's
sufficiently small that everyone who wants to write UNIX-specific servers
has to know about it anyway; and if they don't want to know about those
sorts of things they ought to use the cross-platform API.

> *I* don't care if my server infrastructure is Debian specific.

Yes, and it's people like you that I'm trying to protect users from :-)

What additional _semantics_ does unix 'daemonize' provide that a
cross-platform startBackgroundServer() doesn't?  Do you really need the
extra 40-odd bytes of stack space for the Python frame that you're losing
by having a call-through approach rather than returning?

All it really lets you do is write servers that require a programmer to
run on Windows.  If there's no good reason for that, it's silly.

For example, although the 'process' object doesn't currently run on
Windows, its external API just relies on the notion of a process which can
be written to and read from as a file.  Once Jürgen finally writes that
cgi-for-nt implementation he was talking about many months ago, I'm sure
it'll work fine on that platform ;-).

> I want the Debian packages to be good enough that I'll feel good enough
> about uploading them to the official Debian archive, as well as maintainig
> a huge apt source on tm.com. 

Well, I definitely support your desire for high quality.  However, what's
this about a "huge apt source on tm.com"?

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Wed Aug  8 05:48:59 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 06:48:59 -0500 (CDT)
Subject: [Twisted-Python] Multiplex
In-Reply-To: <20010808013136.A3911@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108080644230.29078-100000@zaibach.twistedmatrix.com>

This is what Cached was designed for :-).

You do realize, however, that even in a Copied, you may return something
like {'foo': self.foo, 'remote', Proxy(perspective, self)} from
YourCopied.getStateToCopyFor, right?

Then you can copy your cake and proxy it too...

On Wed, 8 Aug 2001, Kevin Turner wrote:

> Ok, Glyph is givin' me funny looks.
> 
> The idea that hooked me in to that whole mess was the bit about the peer
> getting a single object which has both locally-defined properties *and*
> can still act as a Reference.
> 
> again, the idea analogous to subclassing.  Python checks the subclass
> for the attribute first, and then checks its base classes.  I want to
> have the object search its local class first, and then fall back to
> being a Reference.  I dunno how to do that currently.
> 
> The two-way aspect is important to me as well, but that's already
> covered.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Wed Aug  8 08:24:35 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 17:24:35 +0300 (IDT)
Subject: [Twisted-Python] new function for t.i.main
In-Reply-To: <Pine.LNX.4.21.0108080314310.17585-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108080314310.17585-100000@zaibach.twistedmatrix.com>
Message-ID: <20010808142435.5D4553937@darjeeling>

On Wed, 8 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Sorry, no.  If you don't redirect stdout properly, your daemon is broken,
> unix or no.

I'm willing to compromise on the stdout issue.
The loop issue isn't about stack space - it's about doing stuff between
the daemonizing and the looping without writing another function.
The classical example is 

daemonize(logfile)
open(pidfile, 'w').write(str(os.getpid()))
app.run()
 
> Yes.  And it should be strongly deprecated to call daemonize directly.

Why? Even if I'm writing something UNIX specific?

> I would argue that daemonize is not useful without this API.  

And that would be akin to argue that fork() is not useful without
spawn(). The fork/exec in UNIX has been shown to be very powerful.

> It's
> sufficiently small that everyone who wants to write UNIX-specific servers
> has to know about it anyway; and if they don't want to know about those
> sorts of things they ought to use the cross-platform API.

But knowing and "writing it 10 times" is different.
Especially, "and the 8th time, use stdout.close() instead of os.close(1)".

> > *I* don't care if my server infrastructure is Debian specific.
> 
> Yes, and it's people like you that I'm trying to protect users from :-)

I'm not writing unportable code intentionally. I just don't care
about more portability which degrades quality. Like not using
fork() because it's not portable.

That sentence was written about why I want a --debianize option to 
mktap. You took it out of context.

> All it really lets you do is write servers that require a programmer to
> run on Windows.  If there's no good reason for that, it's silly.

It lets me have convenience in return for portability to a system 
nobody I really care about runs.

> For example, although the 'process' object doesn't currently run on
> Windows, its external API just relies on the notion of a process which can
> be written to and read from as a file.  Once J=FCrgen finally writes that
> cgi-for-nt implementation he was talking about many months ago, I'm sure
> it'll work fine on that platform ;-).

Sure, and that's a great abstraction -- for those who want to use it.
You would not argue that this means that twisted programs cannot use
fork(), right?

> Well, I definitely support your desire for high quality.  However, what's
> this about a "huge apt source on tm.com"?

PArtly a joke, partly a vision for a world where everybody uploads
packages into tm.com/apt, and then just

"apt-get install integrated-web-and-mail-server"

will work.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Wed Aug  8 11:08:15 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed,  8 Aug 2001 20:08:15 +0300 (IDT)
Subject: [Twisted-Python] Daemonize...trying to reach a compromise.
Message-ID: <20010808170815.795293937@darjeeling>

OK, here's where I think we stand:

I add to daemonize another argument, a logfile to log to,
and it is ok to check it in. Correct?

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Wed Aug  8 15:33:21 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu,  9 Aug 2001 00:33:21 +0300 (IDT)
Subject: [Twisted-Python] [URGENT] Missing packages in setup.py
Message-ID: <20010808213321.EEA933937@darjeeling>

People, the following packages are missing from setup.py

twisted.tap
twisted.mail

Please insert them ASAP.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Wed Aug  8 15:53:09 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 16:53:09 -0500 (CDT)
Subject: [Twisted-Python] [URGENT] Missing packages in setup.py
In-Reply-To: <20010808213321.EEA933937@darjeeling>
Message-ID: <Pine.LNX.4.21.0108081653010.2756-100000@zaibach.twistedmatrix.com>

fix it, please.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph

On Thu, 9 Aug 2001, Moshe Zadka wrote:

> People, the following packages are missing from setup.py
> 
> twisted.tap
> twisted.mail
> 
> Please insert them ASAP.
> -- 
> Moshe Zadka - http://moshez.geek
> (if you're not cool, http://moshez.org is still working)
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 





From m at moshez.org  Wed Aug  8 16:39:22 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu,  9 Aug 2001 01:39:22 +0300 (IDT)
Subject: [Twisted-Python] [URGENT] Missing packages in setup.py
In-Reply-To: <Pine.LNX.4.21.0108081653010.2756-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0108081653010.2756-100000@zaibach.twistedmatrix.com>
Message-ID: <20010808223922.58D863937@darjeeling>

On Wed, 8 Aug 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> fix it, please.

Fixed.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From carmstro at twistedmatrix.com  Wed Aug  8 19:03:30 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 8 Aug 2001 21:03:30 -0400
Subject: [Twisted-Python] twisted.internet.ssl
In-Reply-To: <3B71256A.20602@zoteca.com>
Message-ID: <20010808210330.A3923@Fookidla.org>

So how hard would it be too hook this up to twisted.spread? It'd be cool
if there was a really transparent way to use PB over SSL.

On Wed, Aug 08, 2001 at 02:41:30PM +0300, Itamar Shtull-Trauring wrote:
> 1) You'll need pyopenssl from pyopenssl.sf.net.
> 
> 2) This is totally untested.
> 
> Hint: pyopenssl 0.3 segfaults if you try to write to an SSL connection 
> before you connect().
> 
> -- 
> itamar(at)shtull-trauring.org  ||  itamar(at)zoteca.com
> http://itamarst.org            ||  http://www.zoteca.com

> # System imports
> from OpenSSL import SSL
> 
> # sibling imports
> import tcp
> 
> class Client(tcp.Client):
>     """I am an SSL client.
>     """
>     def createContext(self):
>         """
>         Create a SSL context. Subclasses may want to override.
>         """
>         self.ctx = SSL.Context(SSL.SSLv23_METHOD)
> 
>     def createInternetSocket(self):
>         """(internal) create an SSL socket
>         """
>         sock = tcp.Client.createInternetSocket(self)
>         return SSL.Connection(self.ctx, sock)
> 
> class Port(tcp.Port):
>     """I am an SSL server.
>     """
>     def createContext(self):
>         """
>         Create a SSL context. Subclasses may want to override.
>         """
>         self.ctx = SSL.Context(SSL.SSLv23_METHOD)
>         self.ctx.use_certificate_file('server.pem')
>         self.ctx.use_privatekey_file('server.pem')
>     
>     def createInternetSocket(self):
>         """(internal) create an SSL socket
>         """
>         sock = tcp.Port.createInternetSocket(self)
>         return SSL.Connection(self.ctx, sock)

> -----BEGIN CERTIFICATE-----
> MIIDBjCCAm+gAwIBAgIBATANBgkqhkiG9w0BAQQFADB7MQswCQYDVQQGEwJTRzER
> MA8GA1UEChMITTJDcnlwdG8xFDASBgNVBAsTC00yQ3J5cHRvIENBMSQwIgYDVQQD
> ExtNMkNyeXB0byBDZXJ0aWZpY2F0ZSBNYXN0ZXIxHTAbBgkqhkiG9w0BCQEWDm5n
> cHNAcG9zdDEuY29tMB4XDTAwMDkxMDA5NTEzMFoXDTAyMDkxMDA5NTEzMFowUzEL
> MAkGA1UEBhMCU0cxETAPBgNVBAoTCE0yQ3J5cHRvMRIwEAYDVQQDEwlsb2NhbGhv
> c3QxHTAbBgkqhkiG9w0BCQEWDm5ncHNAcG9zdDEuY29tMFwwDQYJKoZIhvcNAQEB
> BQADSwAwSAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh
> 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAaOCAQQwggEAMAkGA1UdEwQC
> MAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRl
> MB0GA1UdDgQWBBTPhIKSvnsmYsBVNWjj0m3M2z0qVTCBpQYDVR0jBIGdMIGagBT7
> hyNp65w6kxXlxb8pUU/+7Sg4AaF/pH0wezELMAkGA1UEBhMCU0cxETAPBgNVBAoT
> CE0yQ3J5cHRvMRQwEgYDVQQLEwtNMkNyeXB0byBDQTEkMCIGA1UEAxMbTTJDcnlw
> dG8gQ2VydGlmaWNhdGUgTWFzdGVyMR0wGwYJKoZIhvcNAQkBFg5uZ3BzQHBvc3Qx
> LmNvbYIBADANBgkqhkiG9w0BAQQFAAOBgQA7/CqT6PoHycTdhEStWNZde7M/2Yc6
> BoJuVwnW8YxGO8Sn6UJ4FeffZNcYZddSDKosw8LtPOeWoK3JINjAk5jiPQ2cww++
> 7QGG/g5NDjxFZNDJP1dGiLAxPW6JXwov4v0FmdzfLOZ01jDcgQQZqEpYlgpuI5JE
> WUQ9Ho4EzbYCOQ==
> -----END CERTIFICATE-----
> -----BEGIN RSA PRIVATE KEY-----
> MIIBPAIBAAJBAKy+e3dulvXzV7zoTZWc5TzgApr8DmeQHTYC8ydfzH7EECe4R1Xh
> 5kwIzOuuFfn178FBiS84gngaNcrFi0Z5fAkCAwEAAQJBAIqm/bz4NA1H++Vx5Ewx
> OcKp3w19QSaZAwlGRtsUxrP7436QjnREM3Bm8ygU11BjkPVmtrKm6AayQfCHqJoT
> ZIECIQDW0BoMoL0HOYM/mrTLhaykYAVqgIeJsPjvkEhTFXWBuQIhAM3deFAvWNu4
> nklUQ37XsCT2c9tmNt1LAT+slG2JOTTRAiAuXDtC/m3NYVwyHfFm+zKHRzHkClk2
> HjubeEgjpj32AQIhAJqMGTaZVOwevTXvvHwNEH+vRWsAYU/gbx+OQB+7VOcBAiEA
> oolb6NMg/R3enNPvS1O4UU1H8wpaF77L4yiSWlE0p4w=
> -----END RSA PRIVATE KEY-----
> -----BEGIN CERTIFICATE REQUEST-----
> MIIBDTCBuAIBADBTMQswCQYDVQQGEwJTRzERMA8GA1UEChMITTJDcnlwdG8xEjAQ
> BgNVBAMTCWxvY2FsaG9zdDEdMBsGCSqGSIb3DQEJARYObmdwc0Bwb3N0MS5jb20w
> XDANBgkqhkiG9w0BAQEFAANLADBIAkEArL57d26W9fNXvOhNlZzlPOACmvwOZ5Ad
> NgLzJ1/MfsQQJ7hHVeHmTAjM664V+fXvwUGJLziCeBo1ysWLRnl8CQIDAQABoAAw
> DQYJKoZIhvcNAQEEBQADQQA7uqbrNTjVWpF6By5ZNPvhZ4YdFgkeXFVWi5ao/TaP
> Vq4BG021fJ9nlHRtr4rotpgHDX1rr+iWeHKsx4+5DRSy
> -----END CERTIFICATE REQUEST-----


-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Wed Aug  8 19:10:13 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 8 Aug 2001 20:10:13 -0500 (CDT)
Subject: [Twisted-Python] twisted.internet.ssl
In-Reply-To: <20010808210330.A3923@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0108082009020.20476-100000@zaibach.twistedmatrix.com>

On Wed, 8 Aug 2001, Chris Armstrong wrote:

> So how hard would it be too hook this up to twisted.spread? It'd be cool
> if there was a really transparent way to use PB over SSL.

Assuming it works,

 1) pb does not require anything but a reliable byte stream

 2) tcp provides a reliable byte stream

 3) ssl provides a reliable byte stream

from pb's level, this should be totally undetectable.
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From chrish at mincom.com  Wed Aug  8 23:40:47 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Thu, 9 Aug 2001 15:40:47 +1000
Subject: [Twisted-Python] Working with Reality
References: <E15Sqgj-0005dy-00@zaibach.twistedmatrix.com> <008301c11e10$afc3a870$ad7711ac@pikachu> <00d401c11ecf$33151dd0$ad7711ac@pikachu>
Message-ID: <01b601c12095$d79d9810$ad7711ac@pikachu>

I loaded Twisted-0.9.5 on my Win98 machine yesterday.

The instructions in the readme files for the inheritance and trdemo worlds
were very good. I built both worlds and was able to run them successfully -
up to a point.

I was able to use the same DOS session up to and including the instrucition
to run twistd with the reality.tap. At this point I opened up Internet
Explorer, went to \\localhost\8080, and saw the login screen. After entering
the username and password I was able to navigate around both worlds okay.
The problem came with running faucet. I could not get faucet to communicate
with twistd or Internet Explorer. I *think* faucet is where the player would
be able to enter commands for the game. I saw some of the other comments on
the list earlier re: Windows and its lack of a fork() call, and I suspect
this is the problem. If Twisted is to become portable across platforms, then
this problem will need to be addressed at some stage.

I really would like to help with the reality part of the Twisted project,
but unless I get access to a Unix OS or Twisted works 100% under Windows, I
don't know how much I can do :( I am still keen to hear what visions the
original reality developers had (or have) for the future.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From m at moshez.org  Thu Aug  9 03:05:17 2001
From: m at moshez.org (Moshe Zadka)
Date: Thu,  9 Aug 2001 12:05:17 +0300 (IDT)
Subject: [Twisted-Python] Debian Packaging
Message-ID: <20010809090517.45E833937@darjeeling>

First of all, let me share with you a script I use to check
whether the current CVS will generate a correct Debian package.
Keep in mind that this is a test script, and is far from production
quality.

---------- cut here -----
#!/bin/sh
name=`dpkg-parsechangelog |grep Source | awk -F: '{print $2}'|tr -d ' '`
version=`dpkg-parsechangelog |grep Version | awk -F: '{print $2}'|awk -F- '{print $1}'|tr -d ' '`
build=../debian-build
dir=$build/$name-$version
mkdir $dir
cp -ar * $dir
cd $build
find . -name CVS | xargs rm -rf
tar czf ${name}_$version.orig.tar.gz $name-$version
cd $dir
dpkg-buildpackage -rfakeroot -uc -us
cd ..
rm -rf $name-$version
---------- cut here -----

Now, to have a well installed twisted.web server, just
use this script (run it when the current directory is the toplevel CVS
directory, and make sure there's a directory called "debian-build" as
a sister directory)

Now, go into ../debian-build
install the generated twisted_*.deb
Now, run /usr/bin/mktap web, or use your favourite tap file.
use /usr/bin/tap2deb -t file.tap -m 'Your Name <email at example.com>'
Go into .build, and install the generated .deb
This will start your web server, and make sure it gets restarted 
on reboots.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From glyph at twistedmatrix.com  Thu Aug  9 10:27:14 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 9 Aug 2001 11:27:14 -0500 (CDT)
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <01b601c12095$d79d9810$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0108091110470.1302-100000@zaibach.twistedmatrix.com>

On Thu, 9 Aug 2001, Chris Hadgis wrote:

> I loaded Twisted-0.9.5 on my Win98 machine yesterday.

Yay!

> The instructions in the readme files for the inheritance and trdemo worlds
> were very good. I built both worlds and was able to run them successfully -
> up to a point.

Do not despair!  There's only one minor error.

> The problem came with running faucet.

Here's the answer to your problem: you're probably logging in to the
'reality' service.  Unfortunately login error reporting is not the various
PB clients' strong point (bug noted...).  Change the "reality" field on
your login dialog to be 'twisted.reality' and it should work.

> I *think* faucet is where the player would be able to enter commands
> for the game.

Indeed it is.

> I saw some of the other comments on the list earlier re: Windows and
> its lack of a fork() call, and I suspect this is the problem. If
> Twisted is to become portable across platforms, then this problem will
> need to be addressed at some stage.

This deficiency of Windows only affects CGI in Twisted.Web.  Given that
the audience for Twisted on Windows is small, and the audience for Twisted
+ CGI is even smaller, I think that this problem will remain unaddressed
until someone who cares about both of these things devotes some time to
fixing it.  So far, Jürgen Hermann is the only person I can think of who
exists in that intersection :-).

> I really would like to help with the reality part of the Twisted
> project, but unless I get access to a Unix OS or Twisted works 100%
> under Windows, I don't know how much I can do :( I am still keen to
> hear what visions the original reality developers had (or have) for
> the future.

Let me know if this solution fixes your problem.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From j.her at t-online.de  Thu Aug  9 12:07:06 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Thu, 09 Aug 2001 20:07:06 +0200
Subject: [Twisted-Python] Working with Reality
In-Reply-To: <Pine.LNX.4.21.0108091110470.1302-100000@zaibach.twistedmatrix.com>
Message-ID: <15UuD7-1lQ5aqC@fwd03.sul.t-online.com>

On Thu, 9 Aug 2001 11:27:14 -0500 (CDT), Glyph Lefkowitz wrote:

>fixing it.  So far, Jürgen Hermann is the only person I can think of who
>exists in that intersection :-).

I'm disjunctive to the time thingie. ;)

Ciao, Jürgen







From carmstro at twistedmatrix.com  Thu Aug  9 17:34:35 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 9 Aug 2001 19:34:35 -0400
Subject: [Twisted-Python] manhole
Message-ID: <20010809193434.A4890@Fookidla.org>

Glyph and I have talked about editing code from within manhole before.
I'm not sure if he agrees with the following ideas, but they're related.

I think it'd be really cool if we somehow kept a source representation of
*all* of Twisted for dynamic editing at runtime (sounds cool, eh?).. Of
course, this is probably far off, but here's a list of things that need to
be done to accomplish this ridiculous goal.

* At startup, read all of the source code from the .py files into an
internal datastructure somewhere

* whenever someone hacks new code from within manhole (or the telnet server
(blech)), we save this too. (I actually had this idea in another context,
when I wished for a special python interactive interpreter which would
remember what I typed to save the code to modules later).

* when we shut down the process, we must save all of this source code into
the pickle as well.

* offer a "source" functionality like reality's 'source' command to write
out all changes to the source we've made.

Yeah, I know, this seems really disgusting and memory-hogging, but it
shouldn't be that bad. Actually, now that I think of it, this could be
optimized some. Like, only actually retrieving source code when it's called
for (that's probably the biggest optimization we can do). 

Now, this whole source code editing thing brings up more issues, like what
do we edit source code with. Manhole is ok for some hacks, but it is of this
hacker's opinion that we just call up external editors from the twisted
process and pass it a temp file with a chunk of code in it. (glyph: "eggs"?)

Another issue this brings up is the "stability of modifying a running
process". I'd imagine only real twisted hackers would be screwing with the
deep internals at runtime, but for regular "end-users" (hah), they'll
probably stay close to the "edges" (very high level code). 

Now, this whole idea can really lead on into some crazy stuff.. Like, say,
version controlling these "eggs" from *within* Twisted itself.. 

Thank you for listening to my crazy ramblings,
-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From twisted at itamarst.org  Thu Aug  9 18:11:00 2001
From: twisted at itamarst.org (Itamar)
Date: Thu, 09 Aug 2001 20:11:00 -0400
Subject: [Twisted-Python] Some suggestions
Message-ID: <3B732694.9000906@itamarst.org>

Hi all,

I spent some time on my 11 hour flight to the US porting my servers to 
twisted, and here's what I've come up with so far:

0) Twisted is very cool.

1) Pickle on save should be optional.
One of my objects is unpicklable, so every time I shutdown I get an 
exception. You could say I should rewrite, but I feel developing a 
server should not have to support all kinds of extra features that 
twisted provides. Obviously it'd be nice to have them, but it's one more 
thing you have to learn up front that isn't really necessary.

2) Why is the number of clients that socket.listen() queues hard-coded 
to 5? this should be an option.

3) If writing to a connection and closing a connection are thread safe 
then writing threaded servers is trivial. I'll try to write some patches 
that don't slow down the default non-threaded code tommorow.  Again, 
rewriting my code from scratch as event driven is a waste of a time - I 
might do it someday, but I want working code now.

4) I'll submit a working twisted.internet.ssl after I do (3).

5) More docstrings!

And if this an HTML email it's Mozilla's fault, not mine.





From m at moshez.org  Thu Aug  9 23:42:44 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 10 Aug 2001 08:42:44 +0300 (IDT)
Subject: [Twisted-Python] Some suggestions
In-Reply-To: <3B732694.9000906@itamarst.org>
References: <3B732694.9000906@itamarst.org>
Message-ID: <20010810054244.E00BC3937@darjeeling>

On Thu, 09 Aug 2001, Itamar <twisted at itamarst.org> wrote:

> 0) Twisted is very cool.

Great!

> 1) Pickle on save should be optional.

Check out the newly added -o/--no_save option

> 2) Why is the number of clients that socket.listen() queues hard-coded 
> to 5? this should be an option.

This is now settable, but mktap doesn't expose the functionality.
You can go into your pickles post-hoc and set the .backlog attribute.
Check out the new Application.listenOn and Port.__init__

> 5) More docstrings!

Next time, specific places where you would find docstrings most helpful
would be nice. I don't have infinite time, but I wouldn't mind going through
5-10 functions adding docstrings.

> And if this an HTML email it's Mozilla's fault, not mine.

It wasn't.
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From twisted at itamarst.org  Fri Aug 10 06:08:14 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 08:08:14 -0400
Subject: [Twisted-Python] Some suggestions
References: <3B732694.9000906@itamarst.org> <20010810054244.E00BC3937@darjeeling>
Message-ID: <3B73CEAE.1040008@itamarst.org>

Moshe Zadka wrote:

>>5) More docstrings!
>>
>
>Next time, specific places where you would find docstrings most helpful
>would be nice. I don't have infinite time, but I wouldn't mind going through
>5-10 functions adding docstrings.
>

Well,  it was more of a general suggestion than a "Get moshez to 
document everything" request. Thanks for the other patches :)






From twisted at itamarst.org  Fri Aug 10 12:12:52 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 14:12:52 -0400
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
Message-ID: <3B742424.8010204@itamarst.org>

First, my threaded server works great when using threaded mode. However, 
having a lock on every write call seems excessive, especially since some 
of my servers aren't threaded, so I tried rewriting 
abstract.FileDescriptor so that the write() and doWrite() methods are 
thread-safe without using locks.

The issues:

1) It doesn't actually work - if I turn of the threadble.synchronize() 
call at the end of the module then the server gets deadlocks.

2) How can I make the FileDescriptor backwards compatible? Add a custom
__getstate__ that adds the unsentChunks list? If writeable 
FileDescriptors are never pickled,
which makes sense to me, then this is not issue.

3) Will this slow things down?


I may just give up and write a ThreadSafeFileDescriptor class, allowigng 
threaded servers to use it while non-threaded servers can use the 
regular FileDescriptor.


Index: abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.2
diff -r1.2 abstract.py
1d0
<
3c2
< import types
---
 > import types, operator, string
22c21,24
<
---
 >
 >     def __init__(self):
 >         self.unsentChunks = []
 >
53a56,63
 >         numChunks = len(self.unsentChunks)
 >         if numChunks:
 >             chunks = [self.unsent,]
 >             for i in range(numChunks):
 >                 chunks.append(self.unsentChunks.pop(0))
 >
 >             self.unsent = string.join(chunks, '')
 >
80a91,92
 >
 >         This method is thread-safe.
86c98
<             self.unsent = self.unsent + data
---
 >             self.unsentChunks.append(data)
88c100
<                 if len(self.unsent) > self.bufferSize:
---
 >                 if len(self.unsent)  + reduce(operator.add, map(len, 
self.unsentChunks)) > self.bufferSize:
Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.10
diff -r1.10 tcp.py
41a42
 >         abstract.FileDescriptor.__init__(self)
228,229c229,230
< 	self.factory = factory
< 	self.backlog = backlog
---
 >         self.factory = factory
 >         self.backlog = backlog





From m at moshez.org  Fri Aug 10 12:17:02 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 10 Aug 2001 21:17:02 +0300 (IDT)
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
In-Reply-To: <3B742424.8010204@itamarst.org>
References: <3B742424.8010204@itamarst.org>
Message-ID: <20010810181702.11D67392C@darjeeling>

On Fri, 10 Aug 2001 14:12:52 -0400, Itamar <twisted at itamarst.org> wrote:

<lots of interesting stuff I have to contemplate>
> Index: abstract.py
> ===================================================================
> RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
> retrieving revision 1.2
> diff -r1.2 abstract.py

Itamar!
Please, please, use either diff -u or diff -c.
Plain diff is simply unreadable

-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From twisted at itamarst.org  Fri Aug 10 12:40:19 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 14:40:19 -0400
Subject: [Twisted-Python] Checking in SSL support
Message-ID: <3B742A93.3000409@itamarst.org>

Ok, I have basic working SSL support. I also made an echoserv-ssl.py so 
I could test the code. I can telnet-ssl in and get data echoed back.

May I checkin the following?
1) twisted.internet.ssl
2) docs/examples/echoserv-ssl.py
3) docs/examples/server.pem (a SSL ceritificate so echoserv-ssl can run).

SSL contexts are created per socket and not stored in the 
ssl.Port/ssl.Client instances, since they are not picklable.





From itamar at zoteca.com  Fri Aug 10 12:46:28 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Fri, 10 Aug 2001 14:46:28 -0400
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
References: <3B742424.8010204@itamarst.org> <20010810181702.11D67392C@darjeeling>
Message-ID: <3B742C04.4060909@zoteca.com>

Moshe Zadka wrote:


 > Please, please, use either diff -u or diff -c. Plain diff is simply
 > unreadable

D'oh. I must've never set it up on my laptop.


Index: abstract.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/abstract.py,v
retrieving revision 1.2
diff -c -r1.2 abstract.py
*** abstract.py	2001/07/09 19:59:34	1.2
--- abstract.py	2001/08/10 18:47:46
***************
*** 1,6 ****
-
   # System Imports
! import types

   # Twisted Imports
   from twisted.python import threadable, log
--- 1,5 ----
   # System Imports
! import types, operator, string

   # Twisted Imports
   from twisted.python import threadable, log
***************
*** 19,25 ****
       producer = None
       disconnected = 0
       __reap = 0
!
       def connectionLost(self):
           """The connection was lost.

--- 18,27 ----
       producer = None
       disconnected = 0
       __reap = 0
!
!     def __init__(self):
!         self.unsentChunks = []
!
       def connectionLost(self):
           """The connection was lost.

***************
*** 51,56 ****
--- 53,66 ----
       def doWrite(self):
           """Called when data is available for writing.
           """
+         numChunks = len(self.unsentChunks)
+         if numChunks:
+             chunks = [self.unsent,]
+             for i in range(numChunks):
+                 chunks.append(self.unsentChunks.pop(0))
+
+             self.unsent = string.join(chunks, '')
+
           # Send as much data as you can.
           l = self.writeSomeData(self.unsent)
           if l < 0:
***************
*** 78,91 ****
           ready for writing.  If necessary, it will wake up the I/O
thread to add
           this FileDescriptor for writing, that the write will happen as
soon as
           possible.
           """
           assert type(data) == types.StringType, "Data must be a string."
           if not self.connected:
               return
           if data:
!             self.unsent = self.unsent + data
               if self.producer is not None:
!                 if len(self.unsent) > self.bufferSize:
                       self.producerPaused = 1
                       self.producer.pauseProducing()
               self.startWriting()
--- 88,103 ----
           ready for writing.  If necessary, it will wake up the I/O
thread to add
           this FileDescriptor for writing, that the write will happen as
soon as
           possible.
+
+         This method is thread-safe.
           """
           assert type(data) == types.StringType, "Data must be a string."
           if not self.connected:
               return
           if data:
!             self.unsentChunks.append(data)
               if self.producer is not None:
!                 if len(self.unsent)  + reduce(operator.add, map(len,
self.unsentChunks)) > self.bufferSize:
                       self.producerPaused = 1
                       self.producer.pauseProducing()
               self.startWriting()

Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.10
diff -c -r1.10 tcp.py
*** tcp.py	2001/08/10 06:18:11	1.10
--- tcp.py	2001/08/10 18:47:46
***************
*** 39,44 ****
--- 39,45 ----
       selectable (those that use a TCP/IP or similiar socket).
       """
       def __init__(self, skt, protocol):
+         abstract.FileDescriptor.__init__(self)
           self.socket = skt
           self.socket.setblocking(0)
           self.fileno = skt.fileno
***************
*** 225,232 ****
           """Initialize with a numeric port to listen on.
           """
           self.port = port
! 	self.factory = factory
! 	self.backlog = backlog

       def __repr__(self):
           return "<%s on %s>" % (self.factory.__class__, self.port)
--- 226,233 ----
           """Initialize with a numeric port to listen on.
           """
           self.port = port
!         self.factory = factory
!         self.backlog = backlog

       def __repr__(self):
           return "<%s on %s>" % (self.factory.__class__, self.port)





From m at moshez.org  Fri Aug 10 13:04:20 2001
From: m at moshez.org (Moshe Zadka)
Date: Fri, 10 Aug 2001 22:04:20 +0300 (IDT)
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
In-Reply-To: <3B742C04.4060909@zoteca.com>
References: <3B742C04.4060909@zoteca.com>, <3B742424.8010204@itamarst.org> <20010810181702.11D67392C@darjeeling>
Message-ID: <20010810190420.DE3F5392C@darjeeling>

On Fri, 10 Aug 2001, Itamar Shtull-Trauring <itamar at zoteca.com> wrote:

>  > Please, please, use either diff -u or diff -c. Plain diff is simply
>  > unreadable
> 
> D'oh. I must've never set it up on my laptop.

I am not at all certain this is thread safe....

Let us say one thread calls .write and another .doWrite
Then if the .write thread modifies the unsentChunks after the
.doWrite finished summing up the chunks but before it does the
self.unsent =  then whatever it has written will be lost, no?

Personally, I think you should write a ThreadSafe descriptor
which uses the thread-safe Queue class to Queue data to write in .write
and takes out stuff from the Queue in .doWrite until it had its fill.
 
-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From twisted at itamarst.org  Fri Aug 10 14:23:19 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 10 Aug 2001 16:23:19 -0400
Subject: [Twisted-Python] Wierd Error
Message-ID: <3B7442B7.3000303@itamarst.org>

Might this is be the result of a connection being closed by a thread, implying that this is not thread safe?
If so (even if the error resulted from something else, actually) I think the FileDescriptor.loseConnection() method should also be synchronized.


Unexpected error in Selector.run.
Traceback (most recent call last):
   File "twisted/internet/main.py", line 277, in run
     doSelect(timeout)
   File "twisted/internet/main.py", line 191, in doSelect
     [], timeout)
   File "twisted/internet/abstract.py", line 232, in fileno
     raise NotImplementedError(str(self.__class__)+' has no fileno method')
NotImplementedError: twisted.internet.tcp.Server has no fileno method





From glyph at twistedmatrix.com  Fri Aug 10 16:49:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 17:49:04 -0500 (CDT)
Subject: [Twisted-Python] First try at thread-safe FileDescriptor
In-Reply-To: <3B742424.8010204@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101722560.29917-100000@zaibach.twistedmatrix.com>

On Fri, 10 Aug 2001, Itamar wrote:

> First, my threaded server works great when using threaded mode.

HOORAY FOR TWISTED

> However, having a lock on every write call seems excessive, especially
> since some of my servers aren't threaded, so I tried rewriting
> abstract.FileDescriptor so that the write() and doWrite() methods are
> thread-safe without using locks.

This is an admirable goal.

However, from what I understand of Python's threading facilities, even
attribute access is somewhat suspect (as it may invoke a method call).  
At a somewhat fundamental level, what we are doing is manipulating an
internal data structure from one of several different threads.  There is
time spent within a system call that alters this data structure when the
main interpreter lock may not be held.

I think that even theoretically, this requires a lock.  (below I describe
an approach that may reduce the amount of locking...)

> 1) It doesn't actually work - if I turn of the threadble.synchronize()
> call at the end of the module then the server gets deadlocks.

Yeah, that's probably the biggest problem with this approach :)

> 2) How can I make the FileDescriptor backwards compatible? Add a custom
> __getstate__ that adds the unsentChunks list? If writeable 
> FileDescriptors are never pickled,
> which makes sense to me, then this is not issue.

They shouldn't ever be pickled.  In fact, I think that most of them mix in
styles.Ephemeral.

> 3) Will this slow things down?

Possibly, possibly not.  Difficult to say without profiling data (and
profiling MT applications is notoriously hard...)

> I may just give up and write a ThreadSafeFileDescriptor class,
> allowigng threaded servers to use it while non-threaded servers can
> use the regular FileDescriptor.

One alternative to reduce the number of locks and amount of locking going
on is to establish a different method for writing to a socket from a
thread.  Have the thread-safe version acquire a global lock on writing,
add some data (writer, string) to a global list, and relinquish it.  Then,
at the beginning of each select iteration, acquire that lock once: 

  lock.acquire()
  for writer, data in globalList:
    writer.write(data)
  lock.release()

and then keep all the actual write() calls happening in the one thread.

Another is to have the threaded implementation of write() actually call
socket.makefile('w').write(data); does anyone know the thread safety
implications of that?

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Fri Aug 10 16:50:31 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 17:50:31 -0500 (CDT)
Subject: [Twisted-Python] Wierd Error
In-Reply-To: <3B7442B7.3000303@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101750240.29917-100000@zaibach.twistedmatrix.com>

Yes, you are correct, it should be.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph

On Fri, 10 Aug 2001, Itamar wrote:

> Might this is be the result of a connection being closed by a thread, implying that this is not thread safe?
> If so (even if the error resulted from something else, actually) I think the FileDescriptor.loseConnection() method should also be synchronized.
> 
> 
> Unexpected error in Selector.run.
> Traceback (most recent call last):
>    File "twisted/internet/main.py", line 277, in run
>      doSelect(timeout)
>    File "twisted/internet/main.py", line 191, in doSelect
>      [], timeout)
>    File "twisted/internet/abstract.py", line 232, in fileno
>      raise NotImplementedError(str(self.__class__)+' has no fileno method')
> NotImplementedError: twisted.internet.tcp.Server has no fileno method
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 





From glyph at twistedmatrix.com  Fri Aug 10 16:53:01 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 17:53:01 -0500 (CDT)
Subject: [Twisted-Python] Checking in SSL support
In-Reply-To: <3B742A93.3000409@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101750350.29917-100000@zaibach.twistedmatrix.com>

On Fri, 10 Aug 2001, Itamar wrote:

> Ok, I have basic working SSL support. I also made an echoserv-ssl.py so 
> I could test the code. I can telnet-ssl in and get data echoed back.

Nifty.

If you could, would you add autodetection code in twisted/tap/web.py that
will make an SSL webserver on port 443 if SSL is available?

> May I checkin the following?
> 1) twisted.internet.ssl

Yes.

> 2) docs/examples/echoserv-ssl.py

Yes.

> 3) docs/examples/server.pem (a SSL ceritificate so echoserv-ssl can run).

Is there any copyright concern over this?  How is it generated?

> SSL contexts are created per socket and not stored in the 
> ssl.Port/ssl.Client instances, since they are not picklable.

Cool.  Are they regenerated on login?


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Fri Aug 10 17:05:20 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 10 Aug 2001 18:05:20 -0500 (CDT)
Subject: [Twisted-Python] Some suggestions
In-Reply-To: <3B732694.9000906@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108101753160.29917-100000@zaibach.twistedmatrix.com>

On Thu, 9 Aug 2001, Itamar wrote:

> Hi all,
> 
> I spent some time on my 11 hour flight to the US porting my servers to 
> twisted, and here's what I've come up with so far:
> 
> 0) Twisted is very cool.

We know, of course, but glad to hear it anyway :)

> 1) Pickle on save should be optional.
> One of my objects is unpicklable, so every time I shutdown I get an 
> exception. You could say I should rewrite, but I feel developing a 
> server should not have to support all kinds of extra features that 
> twisted provides. Obviously it'd be nice to have them, but it's one more 
> thing you have to learn up front that isn't really necessary.

I think moshe has already added this, does his patch resolve your
concerns?

> 2) Why is the number of clients that socket.listen() queues hard-coded 
> to 5? this should be an option.

Frankly I can't imagine why anyone would care.  5 is supposed to be a
reasonable and recommended maximum.  But it's an option now :-)

> 3) If writing to a connection and closing a connection are thread safe 
> then writing threaded servers is trivial. I'll try to write some patches 
> that don't slow down the default non-threaded code tommorow.  Again, 
> rewriting my code from scratch as event driven is a waste of a time - I 
> might do it someday, but I want working code now.

OK, I already responded to this in a later email, but I have 2 more things
to add:

  * If your server is multithreaded, it will be *significantly* slower
    than if it is not.  This is a well-documented fact even for servers 
    in C, and context switching + resource contention on the main
    interpreter thread is going to kill you well before you get into
    problems with contention for individual write locks. 

  * _That is okay_.  Don't start worrying too much about the performance
   of Twisted's threading until you've got some significant benchmarking
   problem; and when you discover that threading is slow, you can always
   optimize by making it asynchronous instead :)  Chances are, however,
   that your app can afford the speed hit if it's at all a typical server.

  * There are some interesting ideas in this half/sync half/async pattern
    that may be useful for your app, available at:

	http://www.cs.wustl.edu/~schmidt/PDF/PLoP-95.pdf

> 4) I'll submit a working twisted.internet.ssl after I do (3).

See that this has already been done.  Impressive turnaround time ;)

> 5) More docstrings!

As always.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From twisted at itamarst.org  Sat Aug 11 10:13:52 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 12:13:52 -0400
Subject: [Twisted-Python] Alternative method for thread-safe transport code
Message-ID: <3B7559C0.60803@itamarst.org>

The scheduler is integrated into twisted's event loop I presume. So, 
instead of making FileDescriptor thread-safe, how abou making the 
scheduler htread safe, and then threads that want to write or close a 
socket can add this operation to the scheduler?





From twisted at itamarst.org  Sat Aug 11 10:15:03 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 12:15:03 -0400
Subject: [Twisted-Python] Checking in SSL support
References: <Pine.LNX.4.21.0108101750350.29917-100000@zaibach.twistedmatrix.com>
Message-ID: <3B755A07.5080008@itamarst.org>

Glyph Lefkowitz wrote

>If you could, would you add autodetection code in twisted/tap/web.py that
>will make an SSL webserver on port 443 if SSL is available?
>
I'll let someone else do it, I've got lots of work to do.

>>3) docs/examples/server.pem (a SSL ceritificate so echoserv-ssl can run).
>>
>
>Is there any copyright concern over this?  How is it generated?
>
I stole it from m2crypto, so it shouldn't be an issue. It's generated by 
OpenSSL using an arcane process I never ever mange to remember.

>>SSL contexts are created per socket and not stored in the 
>>ssl.Port/ssl.Client instances, since they are not picklable.
>>
>
>Cool.  Are they regenerated on login?
>
Yeah, they are regenrated in createInternetSocket using a function that 
can be changed in subclasses.

Anyay, I will checkin sometime next week.





From twisted at itamarst.org  Sat Aug 11 10:24:25 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 12:24:25 -0400
Subject: [Twisted-Python] Some suggestions
References: <Pine.LNX.4.21.0108101753160.29917-100000@zaibach.twistedmatrix.com>
Message-ID: <3B755C39.4050409@itamarst.org>

Glyph Lefkowitz wrote:

>
>  * _That is okay_.  Don't start worrying too much about the performance
>   of Twisted's threading until you've got some significant benchmarking
>   problem; and when you discover that threading is slow, you can always
>   optimize by making it asynchronous instead :)  Chances are, however,
>   that your app can afford the speed hit if it's at all a typical server.
>
My main concern is *safety*. For example, I'm pretty sure making 
connectionLose() synchronized is not enough to make it thread safe. 
 Speed is good of course - and notice that synchronizing stuff slows 
down any non-threaded protocols I may be using along with my threaded one.

>
>  * There are some interesting ideas in this half/sync half/async pattern
>    that may be useful for your app, available at:
>
>	http://www.cs.wustl.edu/~schmidt/PDF/PLoP-95.pdf
>
I'll check it out.






From glyph at twistedmatrix.com  Sat Aug 11 12:28:34 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 11 Aug 2001 13:28:34 -0500 (CDT)
Subject: [Twisted-Python] Some suggestions
In-Reply-To: <3B755C39.4050409@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com>

On Sat, 11 Aug 2001, Itamar wrote:

> My main concern is *safety*. For example, I'm pretty sure making 
> connectionLose() synchronized is not enough to make it thread safe. 

Why not? If it's synchronized, and doWrite is synchronized, then I can't
figure out what the safety issue is.  Did you try, and experience some, or
do you know of some potential ones from reading it?

> Speed is good of course - and notice that synchronizing stuff slows
> down any non-threaded protocols I may be using along with my threaded
> one.

Yes.  Actually the simple statement 'import thread' will slow down
everything that your application does by approximately 5-20% (depending on
OS and #of CPUs mainly), even if you never start a thread.  That's why
there's all of that careful dancing around import statements when you look
at modules like threadable ;)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From sean at twistedmatrix.com  Sat Aug 11 18:11:25 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Sat, 11 Aug 2001 19:11:25 -0500
Subject: [Twisted-Python] twisted enterprise
In-Reply-To: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGAECICBAA.sean@twistedmatrix.com>

Hi all,

As some people may have noticed, something was checked into CVS recently as
twisted.enterprise. This is the beginnings of a relational database backend
interface for twisted. Currently it is comprised of a multithreaded database
request processing service that can handle multiple database connections. It
is not quite all hooked up yet, pending Glyph's work on asynchronous
authentication and callbacks.  The initial plan is to have it be able to do
user authentication into a relational database, and add further
functionality from there.

My first implementation was against Sybase, but the port to Postgres/PoPy
required changing less than 10 lines of code. Building PoPy (the
postgres/python interface module) took way more time than changing the code.
The python DB-API is a good thing. If anyone else has any other database
engines available to them, then adding support for those would be welcome
also.

There is even a unit test suit in twisted.enterprise.testdb.py. Hooray for
unit tests.

So, feedback welcome! Does this seem useful? Useful for what? Any objections
to the multithreaded implementation (i know twisted is not fond of threads)?

I am tempted to implement a shopping cart application ontop of it...





From twisted at itamarst.org  Sat Aug 11 18:47:56 2001
From: twisted at itamarst.org (Itamar)
Date: Sat, 11 Aug 2001 20:47:56 -0400
Subject: [Twisted-Python] twisted enterprise
References: <HOEEKPCOKELHCNIJNMAGAECICBAA.sean@twistedmatrix.com>
Message-ID: <3B75D23C.8070003@itamarst.org>

BTW, I noticed a class in there that seems to be basically identical to 
Python's built-in Queue. Any difference in functionality?






From acapnotic at twistedmatrix.com  Sun Aug 12 04:05:09 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sun, 12 Aug 2001 03:05:09 -0700
Subject: [Twisted-Python] "Eww...  Here, smell this!"  (was Re: Multiplex)
In-Reply-To: <Pine.LNX.4.21.0108080644230.29078-100000@zaibach.twistedmatrix.com>
References: <20010808013136.A3911@troglodyte.menefee> <Pine.LNX.4.21.0108080644230.29078-100000@zaibach.twistedmatrix.com>
Message-ID: <20010812030509.A1052@troglodyte.menefee>

On Wed, Aug 08, 2001 at 06:48:59AM -0500, Glyph Lefkowitz wrote:
> 
> This is what Cached was designed for :-).

I must be missin' something.  Here's my attempt.  Problems include not
being sure if I can really talk in the Cache -> Cached direction, and
the transparent automatic repeater creation alchemy doesn't even come
close.

(no, it doesn't run.  yes, the names suck.  but none of that matters if
it doesn't work at all.)

class PlexPerspective(Perspective):
    """This is the perspective given by Bob's repeater service."""
    
    def perspective_setPlexTag(self, tag):
        """Register a copytag as being a plexed class."""
        
        # Do some sanity checking, make sure tag has a safe prefix
        # like "PLEX_" or somesuch.
        pb.setCopyTags(tag, PlexRepeater)
    

class PlexBase(Copied):
    """Plex base class -- always returns a consistant copytag

    (even if it's been through a repeater, where everything is a
    PlexRepeater, no matter what the tag.)
    """
    
    def getStateToCopy(self):
        # Make sure _copytag gets into our state, which it otherwise
        # wouldn't do if our _copytag refers to the class attribute.
        state = pb.Copied.getStateToCopy(self)
        state['_copytag'] = self._copytag
        return state

    def getTypeToCopy(self):
        return self._copytag
        

class PlexRepeater(PlexBase, Cached, Copy):
    """This is how 'plexes look in the repeater.

    Repeaters don't have unique properties as they're all instances
    of this class, but they must remember the copytag to give to
    their children."""
    
    def setCopiedState(self, state):
        """Leaf -> Repeater alchemy.

        This is so new plexed objects may be created transparently, if
        a peer just passes through an instance of their leaf-class."""
        
        # XXX: How do I find out which broker I arrived through?
        # There isn't a setCopiedStateFor()

        moms_perspective = moms_broker.getPerspective()

        # I need to convince that broker that Mom is really a
        # remote cache of me.
        puid = self.ProcessUniqueID()
        moms_broker.remotelyCachedLUIDs[puid] = moms_luid
        moms_broker.remotelyCachedObjects[moms_luid] = Local(self)

        # Add Mom as an Observer
        observer = CacheObserver(moms_broker, self, moms_perspective)
        
        # Don't need to get the state, actually, but that is the
        # method that keeps my observer list healthy.
        self.getStateToCacheAndObserveFor(moms_perspective, observer)

        # XXX: Now I have to convince Mom's broker on her end to make
        # a CacheProxy for me, with Mom as the cNotProxy.

        state['_receive_daughter'](self) 
        
        pb.Copy.setCopiedState(self, state)

    def remoteMessageReceived(self, broker, message, args, kw):
        """Pass the word along to all the kids."""
        
        # ??? Do I receive remote messages?
        # Or do I have to pass this method as part of my cached state?

        for o in self.observers:
            self.remoteCacheDo(bla, bla, args, kw)

    def getStateToCacheAndObserveFor(self, perspective, observer):
        """keep a list of my kids."""

        self.observerlist.append(observer)

        return self.getStateToCopyFor(self, perspective)


class PlexLeaf(PlexBase, Cache):
    """This is subclassed by Alec, Amy, and Angus.

    it will be the setCopierForClass for a PLEX_ copytag, and thus
    created whenever a peer (most likely the repeater) passes a plex to
    us.  

    It receives updates from the plex object it caches,
    and can talk back to that object as well (causing it to broadcast,
    if it is a repeater).

    My subclass should define a _copytag attribute to identify me when
    I'm passed to my peer if I was initialized locally, and not by the
    broker as a Cache.
    """

    def __getattr__(self, key):

        # Shout out through the plex
        if key[:6] == "shout_":
            return getattr(self.cached, key[6:])
        




From m at moshez.org  Sun Aug 12 06:15:37 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 12 Aug 2001 15:15:37 +0300 (IDT)
Subject: [Twisted-Python] Mail Relaying
Message-ID: <20010812121537.BE220392B@darjeeling>

Don't get your panties in a knot, this isn't ISP-class mail relaying
yet, just simple localhost-to-smarthost mail relaying. These classes
are supposed to work in tandem with a DomainPickler which leaves messages
for them to relay.

Without further ado, here it is:

from twisted.python import delayed
from twisted.mail import relay

class SMTPManagedRelay(relay.SMTPRelay):

    def __init__(self, messages, manager):
        SMTPRelay.__init__(self, messages)
        self.manager = manager

    def sentMail(self, addresses):
        SMTPRelay.sentMail(self, addresses)
	if addresses: 
	    self.manager.notifySuccess(self, self.messages[0][0])
	if addresses: 
	    self.manager.notifyFailure(self, self.messages[0][0])

    def connectionLost(self):
        self.manager.notifyDone(self)


class SmartHostSMTPRelayingManager:

    def __init__(self, directory, smartHostIP, maxConnections=1, 
                 maxMessagesPerConnection=10):
        self.directory = directory
	self.maxConnections = maxConnections
	self.maxMessagesPerConnection = maxMessagesPerConnection
	self.delayed = smartHostIP
	self.managed = {}
	self.relayingMessages = {}
	self.readDirectory()

    def notifySuccess(self, relay, message):
        message = os.path.basename(message)
	self.managed[relay].remove(message)
	self.messages[message] = 1
	del self.relayingMessages[message]

    notifyFailure = no.tifySuccess

    def notifyDone(self, relay):
        for message in self.managed[relay]:
	    self.notifyFailure(relay, message)
        del self.managed[relay]

    def __getstate__(self):
        dct = self.__dict__.copy()
	del dct['managed'], dct['relayingMessages'], dct['messages']
	return dct

    def __setstate__(self, state):
        self.__dict__.update(state)
	self.relayingMessages = {}
	self.managed = {}
	self.readDirectory()

    def readDirectory(self):
	self.messages = {}
	for message in os.listdir(self.directory):
	    if not self.relayingMessages.has_key(message):
	        self.messages[message] = 1

    def checkState(self):
	self.readDirectory() 
	if self.messages:
	    return
        if len(self.managed) >= self.maxConnections:
	    return
	nextMessages = self.messages.keys()[:self.maxMessagesPerConnection]
        toRelay = []
	for message in nextMessages:
	    self.relayingMessages[message] = 1
	    del self.messages[message]
	    toRelay.append(os.path.join(self.directory, message))
        protocol = SMTPManagedRelay(toRelay, self)
	self.managed[protocol] = nextMessages
	transport = tcp.Client(smartHostIP, 25, protocol)


# It's difficult to pickle methods
# So just have a function call the method
def checkState(manager):
    manager.checkState()

def attachManagerToDelay(manager, delay, time):
    loop = delayed.Loop(delay, time, checkState, manager)
    loop.loop()



-- 
Moshe Zadka - http://moshez.geek
(if you're not cool, http://moshez.org is still working)




From m at moshez.org  Mon Aug 13 00:47:28 2001
From: m at moshez.org (Moshe Zadka)
Date: Mon, 13 Aug 2001 09:47:28 +0300 (IDT)
Subject: [Twisted-Python] Setting Up Us The Bomb^H^H^H^HMail server
Message-ID: <20010813064728.F130B392B@darjeeling>

Hi!
I am happy to say the relaying stuff works, but there is
still plenty to fix. However, I actually tested "smart host"
relaying and it worked. That means, twisted.mail is a real
mail server, if a bit young.

I'll be writing a tutorial about setting up a twisted.mail server
soon enough.

-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From chrish at mincom.com  Mon Aug 13 01:05:58 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 13 Aug 2001 17:05:58 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0108011855550.7795-100000@zaibach.twistedmatrix.com>
Message-ID: <000301c123c6$67a073f0$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

[snip]

> > ... I ran the Inheritance module, and after
> > going through some code to find the username and password, I was able to
run
> > this successfully. I am now able to move around in the inheritance game,
but
> > that's about it.
>
> Unfortunately, that's about as far as we got.  You can put things in
> things, and if you read author.py you should get a few hints as to "verbs"
> you can use to create things... hopefully some of the ex-reality authors
> can chime in here...

I'll have a look at author.py tonight (hopefully).

By the way, your suggestion of changing "reality" to "twisted.reality" when
running faucet did the trick. I can now proceed through the game via the tk
interface. How does this mesh with the web browser interface? Or is it
something separate?

> > Does anyone know the status of reality servers?
>
> What do you mean by Status?

Is anyone actively working on them? Are there any long-range plans for them?

I think I asked before if they were supposed to be like TADS interpreters or
Z-machines, or are they to be something different.

It's going to take some time to go through the various modules and find out
how they fit together, and how the reality server interprets and processes
sentences. If there are docs on how to create a reality world they would be
helpful.

> > I'm really enjoying playing around with all of this stuff.
>
> Great to hear it! :)

I'll reply to the list when I get some more information together, or when I
get some more questions :)

In our city we get a public holiday on Wednesday but I think most of the day
is already taken up by family plans. If only I had discovered these sorts of
projects 10 to 15 years ago...

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From twisted at itamarst.org  Mon Aug 13 09:28:51 2001
From: twisted at itamarst.org (Itamar)
Date: Mon, 13 Aug 2001 11:28:51 -0400
Subject: [Twisted-Python] Some suggestions
References: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com>
Message-ID: <3B77F233.40208@itamarst.org>

Glyph Lefkowitz wrote:


>>My main concern is *safety*. For example, I'm pretty sure making 
>>connectionLose() synchronized is not enough to make it thread safe. 
>>
> 
> Why not? If it's synchronized, and doWrite is synchronized, then I can't
> figure out what the safety issue is.  Did you try, and experience some, or
> do you know of some potential ones from reading it?

It is not thread-safe. This is because the whole addReader / addWriter / 
doSelect etc. code in internet.main isn't thread safe, so even if the 
FileDescriptor is internally thread safe its interactions with the list 
of readers and writers aren't.

For adding writers/readers this is less of an issue, although still 
potentially buggy. Removing on the other hand can lead to select() calls 
on already closed FilEDescriptors (as in the traceback I emailed the list.)

For example, look at the select.select(readers.keys()....) call. If the 
FileDescriptor is closed by a thread right after the .keys() call then 
select() will run on a closed descriptor and barf.

Now, messing around with this so it's thread safe starts getting way too 
icky. I would like therefore to redo the Scheduler so that it is thread 
safe, and use it to schedule closing and writing to transports.

I think the way this should work is that each thread should have an 
associated Task to which it adds methods to be called. That way a single 
thread can't monopolize the scheduler. This means however that it should 
be possible to add works to tasks after they've been added to the scheduler.

I think the best way to do this is to use python's built-in Queue class. 
In order to not slow down non-threaded apps, I will implement a 
non-thread safe Queue class with the same interface (or the non-blocking 
parts of the interface, anyway) so that you can do:

	from threadable import Queue

And get the appropriate Queue class. Make sense?





From twisted at itamarst.org  Mon Aug 13 10:04:00 2001
From: twisted at itamarst.org (Itamar)
Date: Mon, 13 Aug 2001 12:04:00 -0400
Subject: [Twisted-Python] Some suggestions
References: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com> <3B77F233.40208@itamarst.org>
Message-ID: <3B77FA70.5000009@itamarst.org>

Itamar wrote:


> I think the best way to do this is to use python's built-in Queue class. 


Actually there is no need for using this class. And perhaps an 
additional scheduler module for threads only may be better than altering 
the existing one.







From itamar at zoteca.com  Mon Aug 13 11:23:41 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Mon, 13 Aug 2001 13:23:41 -0400
Subject: [Twisted-Python] Suggested new module: twisted.internet.threadtask
References: <Pine.LNX.4.21.0108111317530.6081-100000@zaibach.twistedmatrix.com> <3B77F233.40208@itamarst.org> <3B77FA70.5000009@itamarst.org>
Message-ID: <3B780D1D.2060804@zoteca.com>

> Actually there is no need for using this class. And perhaps an 
> additional scheduler module for threads only may be better than altering 
> the existing one.

Okay, attached is a first shot at a task scheduler for threads. 
Basically, tasks that are not thread safe should be added to this 
scheduler, and then they will be called by the event loop.

I tested this by shutting off the synchronization in FileDescriptor, and 
having my threaded server add all writes and closes to this scheduler 
instead of calling them directly. It seemed to work fine, though CPU 
usage seemed to be higher.


Future improvements:
1) Make locking more fine-grained.
2) Just like classes can have a synchronized property with a list of 
functions to be synchrnoized, I think there can be a scheduled property 
as well, which would automate the following idiom for making thread-safe 
operations using the scheduler:


def write(self, msg):
     if not threadable.isInIOThread():
         threadtask.schedule(self.write, (msg, ))
         return

     # regular write functionality goes here
     ...


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: threadtask.py
URL: </pipermail/twisted-python/attachments/20010813/924a5148/attachment.ksh>

From twisted at itamarst.org  Mon Aug 13 12:11:06 2001
From: twisted at itamarst.org (Itamar)
Date: Mon, 13 Aug 2001 14:11:06 -0400
Subject: [Twisted-Python] Patch to internet.main
Message-ID: <3B78183A.2070603@itamarst.org>

This makes the threaded scheduler work, if we are running in threaded mode:

Index: twisted/internet/main.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/main.py,v
retrieving revision 1.13
diff -c -r1.13 main.py
*** twisted/internet/main.py	2001/08/10 06:38:06	1.13
--- twisted/internet/main.py	2001/08/13 18:13:00
***************
*** 22,28 ****

   # Sibling Imports

! import task, tcp

   class Application(log.Logger):
       running = 0
--- 22,28 ----

   # Sibling Imports

! import task, threadtask, tcp

   class Application(log.Logger):
       running = 0
***************
*** 135,140 ****
--- 135,142 ----
   writes = {}
   running = None
   delayeds = [task.theScheduler]
+ if threadable.threaded:
+     delayeds.append(threadtask.theScheduler)
   shutdowns = []

   def shutDown(a=None, b=None):





From carmstro at twistedmatrix.com  Wed Aug 15 07:19:42 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 15 Aug 2001 08:19:42 -0500
Subject: [Twisted-Python] TWN #6
Message-ID: <20010815081942.A1675@twistedmatrix.com>

The new TWN is at http://twistedmatrix.com/page.epy/twn-6.html 

I'm terribly sorry for not making a text version this week, but I've been
busy. I'm starting school soon, so I doubt I'm going to get less busy.
Please see my "plea for help" in this weeks TWN.

I'm going to go try to write some PB docs now.




From carmstro at twistedmatrix.com  Wed Aug 15 11:31:50 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 15 Aug 2001 12:31:50 -0500
Subject: [Twisted-Python] TWN #6, Text version!
Message-ID: <20010815123150.A25701@twistedmatrix.com>

(Someone pointed out that lynx -dump produces nice text output with
references. So here's the text version of TWN #6!)


                            The Twisted Weekly News
                                       
   6th Issue. Wednesday, August 15, 2001
   
   QOTW:
<Inhibitor> this is commercial software - there are no security holes
<Inhibitor> not like your crappy open source - written by students - stuff
<glyph> right, I had forgotten

   Welcome to the 6th issue of the Twisted Weekly News! Last week I
   mentioned how much Twisted had grown in developers and users -- well,
   obviously I'm not a psychic. This week has seen a much larger
   growth-spurt. Rock on, Twisted!
   
  Progress
  
   Here's what's been happening this week in the code base.
     * Twisted 0.9.5: We made another [1]release. This one was mainly bug
       fixes, code cleanup, and documentation. The cool thing about this
       release is that we put [2]publicly available Twisted Words and
       Twisted Reality servers up on twistedmatrix.com. Get ready for a
       new release, though, Twisted 0.9.6 is planned to be out soon!
     * Twisted Manhole: Chris Armstrong got sick and tired of the telnet
       interface to Twisted, so he wrote a nice PB service as a
       replacement for it, with cooler features. The GTK+ interface
       supports coloured output, command history, and editing of full
       blocks of code before executing them. Glyph also helped out a lot
       when he cleaned up Chris' mess of code, and made the GUI much
       prettier. ;-)
     * Docs: Well, people have been responding to repeated requests for
       documentation. Acapnotic has been on a rampage through docstrings,
       and moshez wrote a [3]page on writing low-level protocol
       implementations for Twisted.
     * Mail: Moshez is still working hard on twisted.mail - the latest
       checkin comments show that he has implemented relaying
       successfully! (So when is twistedmatrix.com going to switch to
       twisted.mail? ;-))
     * Twisted.Words: There's a lot of interest in this little package
       lately: the IRC interface is becoming more robust, and the
       InstanceMessenger client has been getting a lot better (there is
       now a Tk version, too).
     * utilities: Moshez hacked a little on the utility scripts included
       with Twisted -- he made a neato utility for generating
       policy-conformant Debian packages, added a --python parameter to
       twistd for reading from plain python files instead of .taps, and
       added --append to mktap, which adds another server to an existing
       twisted application. from tap files.
     * Twisted TOC: z3p's been hacking more on Twisted TOC. He made a
       client for it, but unfortunately had to pull it due to a nasty
       copyright on some widget library he was using. Instead of creating
       a separate client, z3p now plans on adding TOC support to Instance
       Messenger (right, z3p? ;-))
     * Twisted SSL: Itamar implemented a really cool SSL layer for
       Twisted. All that is required to use it is to basically change one
       line of code in the typical Twisted server. This will be really
       cool for manhole, so passwords and code will be able to be
       encrypted. Thanks a lot Itamar, we've had lots of requests for SSL
       support. :-)
       
  Other Stuff
  
   Here are summaries of some of the more significant mailing list
   threads.
   
   Moshe [4]suggested refactoring the daemonize() function into a
   separate module, only to start somewhat of a holy war with glyph which
   later moved to IRC. I can't really explain why glyph was against it
   myself, but I know it had something to do with philosophy. ;-)
   
   Kevin Turner made a very confusing [5]attempt at proposing a new
   "Multiplexing" feature for Perspective Broker. The gist of it was that
   there can be an object shared between many hosts, and whenever the
   object is updated by anyone, the changes propagate to everyone else.
   The discussion must've been half on IRC, though, because I couldn't
   really make out what the conclusion was. It seems that what Acapnotic
   wants is in the Cached class..
   
   Itamar had [6]Some suggestions for Twisted after he read a lot of the
   source while he was on a plane trip. He thought that 0) Twisted was
   cool, 1) Pickling on server shutdown should be optional (he has
   servers which aren't pickleable), 2) number of clients which
   socket.listen() queues shouldn't be hard-coded to 5, 3) threadable
   servers should be faster, and 4) more docstrings should be put in.
   Moshe Zadka replied that Most of these things had been solved or are
   being worked on. The thread quickly changed topic to one about
   [7]threading, and Itamar [8]implementing some more threading
   capabilities for Twisted.
   
  Cool Thing Of the Week:
  Twisted Enterprise
  
   Twisted Enterprise is the new database interface for Twisted, written
   by Sean Riley. This was an especially interesting problem, because
   most (all?) database servers are blocking beasts, so servers talking
   to it must be multi-threaded. The Twisted solution was to have a
   separate multi-threaded Twisted process which talks to the database in
   the background and listens and answers for requests from other (thread
   or not) Twisted processes. This way you do not have to deal with
   threads in your own application if you don't want to, even if you want
   it to talk to a database.
   
   Enterprise is going to be a big thing in Twisted -- Glyph is working
   on a great authentication system that uses this new package. Get ready
   for enterprise b2b internet solution!!
   
  Plea for help from the pathetic editor
  
   I've been very busy lately, and I haven't even started school yet. So,
   I'll probably be even more busy very soon -- If anyone is willing to
   help me out with TWN on a weekly basis (maybe only half an hour every
   week) It would be *incredibly* helpful. The two areas where I need it
   the most are the mailing list summaries and the conversion to text
   format for the mailing list (if you know of some software that will do
   this and nicely generate references for links at the bottom, that'd
   help *tons*). But even if you can just summarise a new feature in
   Twisted, it'd still help. Thanks!
   
   Ok, that's it for this week. Thanks for reading!
   [9]Chris Armstrong

References

   1. http://www.twistedmatrix.com/downloads/
   2. http://www.twistedmatrix.com/users/pb.twistd
   3. http://www.twistedmatrix.com/page.epy/docs/writing-serves.html
   4. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000199.html
   5. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000203.html
   6. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000228.html
   7. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000240.html
   8. http://www.twistedmatrix.com/pipermail/twisted-python/2001-August/000231.html
   9. mailto:carmstro at twistedmatrix.com




From carmstro at twistedmatrix.com  Thu Aug 16 06:22:32 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Thu, 16 Aug 2001 07:22:32 -0500
Subject: [Twisted-Python] Security of PB
Message-ID: <20010816072231.A32054@twistedmatrix.com>

The other day, I think it was Sopwith, was asking about how jelly handles
security in certain situations.. I think this brought up a good point
for something I could put into the PB docs (which I'm working on), so I'd
like to ask for someone to just give me a general overview of the security
in twisted.spread. Could a PB application be attacked on a low-level?

Thanks a lot,
Chris Armstrong





From glyph at twistedmatrix.com  Thu Aug 16 16:33:24 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 17:33:24 -0500 (CDT)
Subject: [Twisted-Python] Security of PB
In-Reply-To: <20010816072231.A32054@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0108161717590.26416-100000@zaibach.twistedmatrix.com>

On Thu, 16 Aug 2001, Chris Armstrong wrote:

> I'd like to ask for someone to just give me a general overview of the
> security in twisted.spread.

Everything is an object, and you can only get references to other objects
through calling methods on them.  To get a loose idea of why this is an
adequate security solution, take a look at http://www.cap-lore.com.

Of course, the initial objects you're allowed to request have to do with
the presentation of certain credentials.  In the upcoming 'passport'
system, you provide a challenge/response authentication as your
credentials, but the notion of 'credentials' is somewhat pluggable.  

Hopefully by the time pb is reaching its final iteration we'll have public
key exchange rather than shared secret.  Of course, for compatibility with
old protocols, we may have to provide other authentication techniques.  
Maybe even (bleh) htpasswd files or somesuch.  Those will probably only
let you have access to a particular service.  For example, plaintext
password authentication is done with the IRC service, in CVS.

The general idea is that you go through some process where you provide
credentials; how secure the server is directly corresponds to what
credentials it will allow users to present for the services they access.

> Could a PB application be attacked on a low-level?

Of course.  And so can eBay and amazon.com, as DDOSs in recent years have
shown.  PB is a *high* level infrastructure :)

There are certain buffer size maximums in Banana which make it slightly
resistant to random cracking; I don't know if these are sufficient for
real DOS though.

As far as illegally gaining access to objects you're not supposed to have
access to, or executing arbitrary code, I don't think that it's possible
with the current implementation of PB.  I may be wrong, of course, and I'd
love for a security expert to audit my code -- but twisted walks a fine
line between security and convenience.  If they say "Don't use passwords,
they're insecure" or "don't support regular HTTP, it's insecure", there's
nothing I can do about that right now.

I think that it might be nice to increase or decrease the 'security
rating' of a particular Application instance depending on some statistics
of its Authorizer.  I'm not sure what would ever _increase_ it though :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From twisted at itamarst.org  Thu Aug 16 16:49:41 2001
From: twisted at itamarst.org (Itamar)
Date: Thu, 16 Aug 2001 18:49:41 -0400
Subject: [Twisted-Python] Synchronized FileDescriptor is bad
Message-ID: <3B7C4E05.30103@itamarst.org>

The fact that FileDescriptor is synchronized may lead people to think 
it's thread safe, and it's not (connectionLose not being thread safe 
even when syncrhonized isn't based not only on conjecture but on actual 
observed errors.)

I think no code should be synchronized in threaded mode unless you 
absolutely know that it will thereby be made thread safe. Otherwise, 
what's the point? It's the equivalent of wrong documentation, and it 
slows things down.

Since there is now a generic mechanism for running non-thread safe code 
from threads (the threadtask module), there is no problem with this.





From glyph at twistedmatrix.com  Thu Aug 16 20:08:41 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 21:08:41 -0500 (CDT)
Subject: [Twisted-Python] Synchronized FileDescriptor is bad
In-Reply-To: <3B7C4E05.30103@itamarst.org>
Message-ID: <Pine.LNX.4.21.0108162053490.12541-100000@zaibach.twistedmatrix.com>

On Thu, 16 Aug 2001, Itamar wrote:

> The fact that FileDescriptor is synchronized may lead people to think 
> it's thread safe, and it's not (connectionLose not being thread safe 
> even when syncrhonized isn't based not only on conjecture but on actual 
> observed errors.)
> 
> I think no code should be synchronized in threaded mode unless you 
> absolutely know that it will thereby be made thread safe. Otherwise, 
> what's the point? It's the equivalent of wrong documentation, and it 
> slows things down.
> 
> Since there is now a generic mechanism for running non-thread safe code 
> from threads (the threadtask module), there is no problem with this.


Itamar,

Sorry for neglecting this thread safety stuff, but I've been very busy
with other changes (which, somewhat ironically, will need to be thread
safe).  I should have given you the go-ahead to fix it completely much
earlier.

I assume you're talking about connectionLost, and yes, it's misleading and
wrong.  It should never be called from user code, and always happen in the
main thread.

I apologize for the state of the threading code; as you can probably tell,
it was written when I was fresh from Java and still recursive-mutex happy.  
Please integrate your changes when it's next convenient, including the
removal of any synchronization that you find inappropriate, and
alternative implementations of various currently-synchronized classes.  I
recommend you take a look at threadable.dispatchOS as well... it could
probably use the threadtask mechanism.

If you're feeling _especially_ generous, feel free to write a document
entitled "threaded programming with twisted" that gives a nice overview of
what's appropriate to use threads for, and what things they can and can't
do using your thread safety scheme :-).


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Thu Aug 16 20:16:47 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 21:16:47 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <000301c123c6$67a073f0$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0108162109470.12541-100000@zaibach.twistedmatrix.com>

On Mon, 13 Aug 2001, Chris Hadgis wrote:

[snip]

> By the way, your suggestion of changing "reality" to "twisted.reality" when
> running faucet did the trick. I can now proceed through the game via the tk
> interface. How does this mesh with the web browser interface? Or is it
> something separate?

The web browser interface is still proof-of-concept.  There is no way to
interact with the game using actions; keepalive HTTP connections and
other such nightmares prevented me from doing so.  It'll probably
eventually be most useful as an authoring interface.

> > > Does anyone know the status of reality servers?
> >
> > What do you mean by Status?
> 
> Is anyone actively working on them? Are there any long-range plans for them?

Not "actively", although I use the Reality service as a testing ground for
most of my changes, since it is a simple and typical application of the
Twisted framework.  So, it remains up to date but does not accumulate any
significant new functionality over time.  Unless, of course, some
enterprising hacker were to come along and contribute some... :-)

> I think I asked before if they were supposed to be like TADS
> interpreters or Z-machines, or are they to be something different.

It inherits much from that culture, but it's designed to be an online
environment as well as single-player, and the single-player component runs
mostly in realtime (but can optionally be turn-based).  So I'd have to say
it's something different, and I don't know of any similiar projects.

> It's going to take some time to go through the various modules and
> find out how they fit together, and how the reality server interprets
> and processes sentences. If there are docs on how to create a reality
> world they would be helpful.

Most of the documentation for Twisted Reality was written several years
ago, and referred to the Java version of TR.  It is obviously no longer
accurate or relevant :).  Documentation is a known sore point and you're
encouraged to document your experiences; keep in mind that asking
questions on the mailing list means that at least we'll have somewhere to
refer other people asking the same questions to, so it does help!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Thu Aug 16 20:23:18 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 16 Aug 2001 21:23:18 -0500 (CDT)
Subject: [Twisted-Python] "Eww...  Here, smell this!"  (was Re: Multiplex)
In-Reply-To: <20010812030509.A1052@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0108162118330.12541-100000@zaibach.twistedmatrix.com>

On Sun, 12 Aug 2001, Kevin Turner wrote:

> On Wed, Aug 08, 2001 at 06:48:59AM -0500, Glyph Lefkowitz wrote:
> > 
> > This is what Cached was designed for :-).
> 
> I must be missin' something.  Here's my attempt.  Problems include not
> being sure if I can really talk in the Cache -> Cached direction, and
> the transparent automatic repeater creation alchemy doesn't even come
> close.

Yes, you can.  See the (woefully incomplete, I know) docs for

	twisted.spread.pb.Cached.getStateToCacheAndObserveFor

and let me know if it makes sense...

> (no, it doesn't run.  yes, the names suck.  but none of that matters if
> it doesn't work at all.)

Still not sure if I understand, though I'll give the code a more thorough
read-through later...  Is there a single object that you're replicating,
or do you want *any* client to be able to publish a repeater to the server
that any other client can observe?



                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From m at moshez.org  Sat Aug 18 01:31:13 2001
From: m at moshez.org (Moshe Zadka)
Date: Sat, 18 Aug 2001 10:31:13 +0300 (IDT)
Subject: [Twisted-Python] Testing Debian Packages
Message-ID: <20010818073113.49F803940@darjeeling>

Glyph thought that others would want to build Debian packages out
of CVS, so I checked in a small script, build-deb, which assumes
a sibling directory "debian-build" and builds the twisted package
there. 

For testing it, I use the following script:

>>>>>>>>>>>>> cut here <<<<<<<<<<<<<<<<<<<<<<<<<
#!/bin/sh
rm -rf ../debian-build
mkdir ../debian-build
fakeroot debian/rules clean
bin/build-deb
cd ../debian-build
sudo dpkg -i *.deb
/usr/bin/mktap --uid 33 --gid 33 web --port 80 --static /var/www
/usr/bin/tap2deb -t web.tap -m 'Moshe Zadka <moshez at debian.org>' -u
sudo dpkg -i .build/*.deb
lynx localhost
sudo dpkg --purge twisted-web
sudo dpkg --remove twisted
>>>>>>>>>>>>> cut here <<<<<<<<<<<<<<<<<<<<<<<<<

Have fun!
-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From chrish at mincom.com  Sun Aug 19 16:39:31 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Mon, 20 Aug 2001 08:39:31 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0108162109470.12541-100000@zaibach.twistedmatrix.com>
Message-ID: <003301c128ff$d077fae0$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

> The web browser interface is still proof-of-concept.  There is no way to
> interact with the game using actions; keepalive HTTP connections and
> other such nightmares prevented me from doing so.  It'll probably
> eventually be most useful as an authoring interface.

Okay, I won't worry too much about it then :)

> > Is anyone actively working on them? Are there any long-range plans for
them?
>
> Not "actively", although I use the Reality service as a testing ground for
> most of my changes, since it is a simple and typical application of the
> Twisted framework.  So, it remains up to date but does not accumulate any
> significant new functionality over time.  Unless, of course, some
> enterprising hacker were to come along and contribute some... :-)

I use the tk interface from faucet. I take it this is the Windows, or
non-Unix version of the interface. I notice the gtk interface is more
advanced than the tk interface. This is something I will be fixing in the
near future. I even made my first TR chage -- the text in the two major
windows (the description and the item list) now wraps. When I make a few
more changes I will try and create a diff file so the changes can be added
to the CVS. Is there an official change log, or revision history, or
something similar?

> > I think I asked before if they were supposed to be like TADS
> > interpreters or Z-machines, or are they to be something different.
>
> It inherits much from that culture, but it's designed to be an online
> environment as well as single-player, and the single-player component runs
> mostly in realtime (but can optionally be turn-based).  So I'd have to say
> it's something different, and I don't know of any similiar projects.

Okay. I will look at getting it to work the way the other IF systems do for
a single player, then see how multi-player IF might look. I actually did try
to start two faucets to connect to TRdemo. A crash on the second faucet told
me the address was already in use. Is it possible, in theory, for me to be
able to run two faucets for the one demo? If it is, I will add this to my
to-do list for the tk interface.

> > It's going to take some time to go through the various modules and
> > find out how they fit together, and how the reality server interprets
> > and processes sentences. If there are docs on how to create a reality
> > world they would be helpful.
>
> Most of the documentation for Twisted Reality was written several years
> ago, and referred to the Java version of TR.  It is obviously no longer
> accurate or relevant :).  Documentation is a known sore point and you're
> encouraged to document your experiences; keep in mind that asking
> questions on the mailing list means that at least we'll have somewhere to
> refer other people asking the same questions to, so it does help!

I will try and document the functions as I get around to finding out what
they all do and making changes to them. The next change I want to make is to
get the tk interface to recognise 'n' as a valid command (go north). I know
the gtk interface does this so I will copy what I can.

I will post about my progress with this as I make some :)

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Mon Aug 20 07:34:46 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Aug 2001 08:34:46 -0500 (CDT)
Subject: [Twisted-Python] ANN: Sunny Days
Message-ID: <Pine.LNX.4.21.0108200807350.5764-100000@zaibach.twistedmatrix.com>

AUSTIN, TEXAS (AP): Firmly ensconced in his menacing 12-story "fortress of
doom", Glyph today released Twisted, version 0.10.0.  After the
sun-destroying repercussions of a recent previous release, industry
pundits were cautious with their predictions, standing by their ready
escape pods.

The "fortress of doom", rumored to be carved from a single, giant block of
basalt is one of the outlying offices of Ninjaneering.  Mr. Lefkowitz was
available for a brief press conference.

Beaming, Glyph proclaimed "With the power of the Ninjas to aid us, there
is no way we can possibly fail!".  Although he displayed his
characteristic vaguarity about what those goals actually are, he may have
actually meant something this time.

As promised, Twisted 0.10.0 comes with both "enterprise" and the ability
to repair the sun.  Gavin "Skreech" Cooper, immediately after mirroring
the Twisted repository, perfunctorily restored the sun to its former light
and heat providing glory, while Glyph made sure that the Twisted Matrix
Labs website was in working order.  While everything appeared to go
smoothly, Chris Armstrong, press agent for Twisted Matrix, could not be
reached for comment, and sources say that he has fled the country,
possibly to avoid fallout from the 0.10 series of releases.



                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From glyph at twistedmatrix.com  Mon Aug 20 08:06:10 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Aug 2001 09:06:10 -0500 (CDT)
Subject: [Twisted-Python] Remember the thing about Jack and the releasing and the software?
 Yeah.
Message-ID: <Pine.LNX.4.21.0108200834480.5764-100000@zaibach.twistedmatrix.com>

So, I finally managed to kick 0.10.0 out the door, and it didn't even bite
me on the way out (yet).  However, I think that this release indicates the
need for a more defined release process.  (This one's for you, Moshe.)

As part of the release this time, I wrote some automated acceptance tests
to help me run the gauntlet of testing web/reality/tap
building/words/manhole/telnet... these were really helpful, and helped
dash & I squash at least one bug that we probably wouldn't have known
about otherwise :-).

So, here's a proposal for a test-and-release plan:

---

Step 1: discuss features and declard dates

Mailing list discussion of what features are going in to the next release.  
People give estimates for the associated tasks, and a release date is set.

Step 2: ensure compatibility

3 days away from the release date, development should be finishing on all
features desired.  In cases where it's not, those features will be omitted
from the release (and hopefully the developers responsible for them
haven't broken anything in CVS).  At this point, we will take 1 day to
make sure that older versions of data still load properly. (more on this
in a later email) If possible (fingers crossed here) we handle out-of-date
documentation.

This step can be skipped if we don't have any data format changes.

Step 3: acceptance testing

2 days before the release date, we enter a code freeze and everybody runs
the acceptance tests to make sure that everything still works.  If unit
tests run and 3 people sign off on the acceptance tests working (in posts
to the mailing list) this step is over.

Step 4: covering my ass

One day before the release date, we make a release of the software and
upgrade twistedmatrix.com to use it.  This step lasts as long as it takes
to run the site for a 24 hrs with no problems :)

Step 5: release!

With the website (and various other publicly acessible things) in order,
publish the release to Freshmeat.

---

The 3 goals of this strategy are to follow the XP "always have working
code" rule, try to prevent releases from getting held up by a particular
feature if there are other things worth releasing, and give ourselves
confidence and give the world at large a really positive impression of how
robust Twisted is.

Feedback appreciated.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From glyph at twistedmatrix.com  Tue Aug 21 13:03:17 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Aug 2001 14:03:17 -0500
Subject: [Twisted-Python] Proposed change to API for threadtask.
Message-ID: <20010821140317.A21110@twistedmatrix.com>

I'd like to change twisted.internet.threadtask.schedule from

    def schedule(function, args=[], kwargs={}):

to be

    def schedule(function, *args, **kwargs):

Any objections?

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From twisted at itamarst.org  Tue Aug 21 13:28:35 2001
From: twisted at itamarst.org (Itamar)
Date: Tue, 21 Aug 2001 15:28:35 -0400
Subject: [Twisted-Python] Proposed change to API for threadtask.
References: <20010821140317.A21110@twistedmatrix.com>
Message-ID: <3B82B663.7070208@itamarst.org>

Glyph Lefkowitz wrote:

> I'd like to change twisted.internet.threadtask.schedule from
> 
>     def schedule(function, args=[], kwargs={}):
> 
> to be
> 
>     def schedule(function, *args, **kwargs):


Fine by me - Python 2.0 makes them almost interchangeable anyway.

Anyone else have suggested API changes? this is the time to do it since 
right now only I am using this code :)








From sean at twistedmatrix.com  Tue Aug 21 14:23:28 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 21 Aug 2001 15:23:28 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <3B82B663.7070208@itamarst.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGOEGNCBAA.sean@twistedmatrix.com>

I am trying to get a threaded twisted server to run on windows (Windows2000
SP3) and having some issues.

There is an assert in threadable.py in init():

def init(with_threads):
    global threaded, _to_be_synched, dispatcher, dispatch, Waiter,
dispatchOS
    print "Threadable init", with_threads
    if threaded == with_threads:
        return
    assert threaded is None
    threaded = with_threads

that always asserts whether I pass "-t" to twistd or not.  It seems that
requireInit() gets called before init() so the code:

def requireInit():
    global threaded
    if threaded is None:
        init(0)

is always run to initialize the global "threaded" to zero.

If i take out that "assert threaded in None" it seems to initialize
correctly on the "second" time through.

But, in internet.main the global "waker" is never initialized as
installWaker() is never called. I think that is because threadable.threaded
was initialized as 0 the "first" time through when it was called by
requireInit() and the code:

if threadable.threaded:
    installWaker()

in internet.main.py skips the installWaker() call.

Anyone else tried running a threaded server on windows?






From m at moshez.org  Tue Aug 21 15:33:59 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed, 22 Aug 2001 00:33:59 +0300 (IDT)
Subject: [Twisted-Python] Logging Framework
Message-ID: <20010821213359.2CFA73874@darjeeling>

Or: How to do logging the proper way.

Disclaimer: I have not profiled the ideas described here yet.

twisted.python.log:

DEBUG, WARNING, NORMAL, IMPORTANT, CRITICAL = range(5)
priorities = 'DEBUG', 'WARNING', 'NORMAL', 'IMPORTANT', 'CRITICAL'

class FileLogsink:

    def __init__(self, fp):
        self.fp = fp

    def log(msg, category, priority):
        now = time.ctime(time.time())
        priority = priorities[priority]
        self.fp.write('[%(now)s] - %(priority)s - [%(category)s] %(msg)s' % 
                      vars())


class SysLogsink:
    ...

sink = None
min_priority = WARNING
min_priorities = {}

def msg(msg, category=None, priority=NORMAL):
    if priority >= min_priorities.get(category, min_priority):
        sink.log(msg, category, priority)

def startLogging(newSink):
    import sys
    global sink
    sink = newSink
    sys.stdout = SinkFileWrapper('stdout')
    sys.stderr = SinkFileWrapper('stderr')

def startLoggingFile(name):
    startLogging(open(name, 'ab+'))

class SinkFilewrapper:

    queued = ''

    def __init__(self, name):
        self.name = name

    def write(self, data):
        data = string.split(self.queued+data, '\n')
        self.queued = data[-1]
        for line in data[:-1]:
            msg(line, self.name, DEBUG)
            

class Logsource:

    '''mixin for classes wanting to log.

    Usage:

    class MyLoggingClass(Logsource):
        logCategory = 'MyThing'

        def someMethod(self, foo, bar):
            if foo==bar:
                self.log("foo should not be the same as bar", WARNING)
    '''
    logCategory = None

    def log(message, priority=NORMAL):
        msg(message, self.logCategory, priority)



-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From sean at twistedmatrix.com  Tue Aug 21 16:08:34 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 21 Aug 2001 17:08:34 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEGNCBAA.sean@twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGCEHACBAA.sean@twistedmatrix.com>

threaded initialization stuff twisted.internet.main.py is not working for me
on windows.

I propose we put all threaded initialization into a method of
twisted.internet.main and have it called from threadable.init() in one
place.

This would include:
	installWaker()
	delayeds.append(threadtask.theScheduler)

how about internet.main.enableThreading() which would do the work that is
currently in installWaker and set up the delayed scheduler?

On my machine with that change and some minor changes to threading.init() I
can run both threaded and non-threaded code on windows.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Sean Riley
Sent: Tuesday, August 21, 2001 3:23 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] threading on windows?


I am trying to get a threaded twisted server to run on windows (Windows2000
SP3) and having some issues.

There is an assert in threadable.py in init():

def init(with_threads):
    global threaded, _to_be_synched, dispatcher, dispatch, Waiter,
dispatchOS
    print "Threadable init", with_threads
    if threaded == with_threads:
        return
    assert threaded is None
    threaded = with_threads

that always asserts whether I pass "-t" to twistd or not.  It seems that
requireInit() gets called before init() so the code:

def requireInit():
    global threaded
    if threaded is None:
        init(0)

is always run to initialize the global "threaded" to zero.

If i take out that "assert threaded in None" it seems to initialize
correctly on the "second" time through.

But, in internet.main the global "waker" is never initialized as
installWaker() is never called. I think that is because threadable.threaded
was initialized as 0 the "first" time through when it was called by
requireInit() and the code:

if threadable.threaded:
    installWaker()

in internet.main.py skips the installWaker() call.

Anyone else tried running a threaded server on windows?




_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From twisted at itamarst.org  Tue Aug 21 16:14:16 2001
From: twisted at itamarst.org (Itamar)
Date: Tue, 21 Aug 2001 18:14:16 -0400
Subject: [Twisted-Python] threading on windows?
References: <HOEEKPCOKELHCNIJNMAGCEHACBAA.sean@twistedmatrix.com>
Message-ID: <3B82DD38.7020703@itamarst.org>

Sean Riley wrote:

> threaded initialization stuff twisted.internet.main.py is not working for me
> on windows.
> 
> I propose we put all threaded initialization into a method of
> twisted.internet.main and have it called from threadable.init() in one
> place.



Yes, but threaded can be used without internet.main's event loop, so it shouldn't depend on it.


 
> This would include:
> 	installWaker()
> 	delayeds.append(threadtask.theScheduler)
> 
> how about internet.main.enableThreading() which would do the work that is
> currently in installWaker and set up the delayed scheduler?


note that threading has to be initialized before threadtask is imported, 
so that it will be synchronized.


Can you explain why the current code doesn't work in Windows?





From sean at twistedmatrix.com  Tue Aug 21 16:40:26 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 21 Aug 2001 17:40:26 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <3B82DD38.7020703@itamarst.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com>

actually i have a counter question that is "how the hell does this work on
Linux at all?"

during startup, threadable.init() is called twice - once by internet.main
calling requireInit() which passes zero and once by twistd which passes zero
or one if "-t" was specified.

the first time through, the global threaded is set to zero.
the second time through, the "assert threaded is None" in threadable.init()
should always fail as threaded is not None, it is now zero. This assert
failing causes threadable.threaded to get left as zero and the
initialization of installing the waker and scheduler never gets done.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Sent: Tuesday, August 21, 2001 5:14 PM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] threading on windows?


Sean Riley wrote:

> threaded initialization stuff twisted.internet.main.py is not working for
me
> on windows.
>
> I propose we put all threaded initialization into a method of
> twisted.internet.main and have it called from threadable.init() in one
> place.



Yes, but threaded can be used without internet.main's event loop, so it
shouldn't depend on it.



> This would include:
> 	installWaker()
> 	delayeds.append(threadtask.theScheduler)
>
> how about internet.main.enableThreading() which would do the work that is
> currently in installWaker and set up the delayed scheduler?


note that threading has to be initialized before threadtask is imported,
so that it will be synchronized.


Can you explain why the current code doesn't work in Windows?



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From glyph at twistedmatrix.com  Tue Aug 21 20:51:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Aug 2001 21:51:04 -0500
Subject: [Twisted-Python] threading on windows?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com>; from sean@twistedmatrix.com on Tue, Aug 21, 2001 at 05:40:26PM -0500
References: <3B82DD38.7020703@itamarst.org> <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com>
Message-ID: <20010821215104.A1065@twistedmatrix.com>

On Tue, Aug 21, 2001 at 05:40:26PM -0500, Sean Riley wrote:
> actually i have a counter question that is "how the hell does this work on
> Linux at all?"

It doesn't, far as I can tell.  Mea culpa -- I added an 'import main' to the
top of twistd as part of the addition of twisted.persisted.styles.Versioned,
but it should not be imported until _after_ the initial threadable.init.  I
will check in a fix in a few minutes.

I think we need some acceptance tests that test threading agressively.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From itamar at zoteca.com  Wed Aug 22 07:01:13 2001
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Wed, 22 Aug 2001 09:01:13 -0400
Subject: [Twisted-Python] threading on windows?
References: <3B82DD38.7020703@itamarst.org> <HOEEKPCOKELHCNIJNMAGIEHBCBAA.sean@twistedmatrix.com> <20010821215104.A1065@twistedmatrix.com>
Message-ID: <3B83AD19.6090300@zoteca.com>

Glyph Lefkowitz wrote:

> On Tue, Aug 21, 2001 at 05:40:26PM -0500, Sean Riley wrote:
> 
>>actually i have a counter question that is "how the hell does this work on
>>Linux at all?"
>>
> 
> It doesn't, far as I can tell.


And I never encountered this since I don't use twistd.  Maybe write a 
test that uses a client that sends data and expects to get it back, and 
then test by using it against echoserv and echoserv_threaded?







From jasbahr at crash.org  Wed Aug 22 07:19:40 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Wed, 22 Aug 2001 08:19:40 -0500
Subject: [Twisted-Python] UML Whiteboard Concept
Message-ID: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>

(You may see this email twice.  It's been 24 hours since I
 mailed the original message, but it hasn't made it to the
 list yet...)


Twisted people,

I wanted to share some thoughts on a UML Whiteboard concept
I've been kicking around.  BUT FIRST, some ravings:

I just got back from SIGGRAPH, which was mind blowing.  Some
amazing art projects and emerging technology projects both
simple and complex.  There was also the expo area, which was
more of the usual trade show style, but all neat.  :-)  One
cool type of product on display in the expo was the 3D object
printer.  There were two companies, one using a silica powder
and "sugar water" solution to create 3D objects, the other
using what appeared to be liquefied plastic of some sort.
Given a detailed mesh, these machines can create objects which
have internal moving parts (no gears shown yet, but they did
have spheres within spheres and an item which had one ring
inside another with ball bearings between them, done in a
single printing process...)  And the silica powder models
will absorb liquid, which they use to change the physical
properties of the resulting object.  By soaking the object
in a glue-like liquid, it becomes very rigid and strong
(one piece supporting the weight of the salesman demonstrating
it), and by soaking it in a rubber-like liquid it becomes
somewhat flexible and squishy (kinda like Nerf material).

Cool stuff!  Anyway....

I'm thinking of designing a new UML diagramming tool because
I'm really unsatisfied with the existing ones.  This future
tool would be client-server, a collaborative UML diagramming
whiteboard, with versioning.  I'm thinking of an "extreme
programming" version of a UML diagramming tool, if you can
imagine that, something very lightweight but damn useful
for design collaboration and brainstorming sessions.

Interoperability with Rational Rose or TogetherJ (using XMI,
the XML standard for UML) would be an important later goal.

Components that would be used to assemble the tool:

- Server and remote object protocol:
          Twisted, http://www.twistedmatrix.com (natch :-)

- Client: wxPython, http://www.wxpython.org, and
          wxOGL, the wxWindows version of the
          Object Graphics Library canvas library

Of course, multiple client implementations could exist using
other toolkits.

I'm imagining that the whiteboard would support multiple documents
open at the same time, allowing users to cut and paste and to compare
documents.  (Not being able to have multiple documents open on my
desktop was something that frustrated me when I was using Rational
Rose...)

I want to avoid an explicit hand-off of editing control, turn taking
seems like an additional burden on remote collaboration -- one that
should emerge from the interaction of the participants rather than
being forced on them by the tool.  Instead, I imagine that users
will be granted an implicit lock on objects they select for editing
(a text field, a class, a method-invocation line).

Perhaps the tool should have two selection modes -- select-for-
highlighting and select-for-editing.  The first mode would be
for drawing attention to an element, say left click to highlight
and the graphic gets emphasized on everyone's display.  The
second mode would be the implicit lock mode, achieved by double
clicking or right-clicking.

Additionally, many of the systems which the UML tool would use
would also be useful for other applications.  Multiuser object
manipulation, the locking mechanism, object versioning, partial
object transmission, and so on.

In the foggy, distant future I'd love to have a design tool
that actually worked seamlessly with my code development.
New classes and methods typed into an editor would be added
to the design model as I typed them, and new methods and
classes created in code as I drew them in the tool.  Source
files per se would be the exported data of the tool, internally
code would be represented in a structured format at various
levels of granularity (package, class, method).  Smalltalky.

Resonant with the manhole concept, definitely.

Here is my current list of references for this project, FYI:

[ References ]

UML Specs
http://www.celigent.com/omg/umlrtf/artifacts.htm

A kick-ass collection of resources on object oriented programming:
http://www.eecs.lehigh.edu/~glennb/oose/oose.htm

FreeCase project
http://www.freecase.seul.org/
Client / server, documents of concepts to borrow

UML Pad
http://web.tiscali.it/ggbhome/umlpad/umlpad.htm
(maybe dead)

Dia
http://www.lysator.liu.se/~alla/dia/
Viseo-like drawing tool

OpenThorn
http://members.nbci.com/openthorn/
wxWindows Rose Clone (closed source?)

CLIP-based UML Patterns extractor:
http://www.geocities.com/ResearchTriangle/Node/2005/

UML Tool Survey Report Summary:
http://www.unicorn.cz/lat/distribution/_downloads/es-srovnani_case_nastroju-
yphise.pdf

---

And here's a quick brainstorm of a list of use cases:

[ Use Cases ]

Application Management:
- User launches diagramming client
- Client connects to Twisted server
- Client connects to Twisted service

Document Management:
- User creates new diagram
  - User creates new state diagram
  - User creates new sequence diagram
  - ...
- User saves diagram
  - Diagram automatically saved on edit?
  - Diagram automatically versioned?
- User opens diagram

Document Editing:
- User drags new glyph instance onto
  diagram
- User selects an existing glyph instance
  - NOTE: this implicitly locks the object
- User moves glyph instance
- User deletes glyph instance
- User drags connection between two
  glyph instances

Utility:
- Client requests index of documents
- Client requests document
- Server transmits index of documents to client
- Server transmits document to client

Thoughts?

Jason





From shae.erisson at widian.fi  Wed Aug 22 07:36:17 2001
From: shae.erisson at widian.fi (Shae Erisson)
Date: Wed, 22 Aug 2001 16:36:17 +0300 (EEST)
Subject: [Twisted-Python] UML Whiteboard Concept
In-Reply-To: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>
References: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>
Message-ID: <20010822.163617.28807792.shae.erisson@widian.fi>

From: "Jason L. Asbahr" <jasbahr at crash.org>
Subject: [Twisted-Python] UML Whiteboard Concept
Date: Wed, 22 Aug 2001 08:19:40 -0500

my random thoughts:

> I'm thinking of designing a new UML diagramming tool because
> I'm really unsatisfied with the existing ones.  This future
> tool would be client-server, a collaborative UML diagramming
> whiteboard, with versioning.  I'm thinking of an "extreme
> programming" version of a UML diagramming tool, if you can
> imagine that, something very lightweight but damn useful
> for design collaboration and brainstorming sessions.

This part makes me think of a collaborative refactoring browser.
<big snip>

> In the foggy, distant future I'd love to have a design tool
> that actually worked seamlessly with my code development.
> New classes and methods typed into an editor would be added
> to the design model as I typed them, and new methods and
> classes created in code as I drew them in the tool.  Source
> files per se would be the exported data of the tool, internally
> code would be represented in a structured format at various
> levels of granularity (package, class, method).  Smalltalky.

Yah, makes me think of Morphic, or whatever you really call the graphical editing bit that started {with,is part of} Self/Smalltalk/Squeak.
Also makes connections with intentional programming and everything else in that area.

> Thoughts?

Twisted.Morphic? Where every object has __repr2d__ and __repr3d__ as well?

This sounds like something in the same direction as the Refactoring Browser and Intentional Programming, because you're trying to organize a program in the next most computer readable format past the actual source. In this case it's UML, whereas RB and IP use an actual AST.

I suspect there's another abstraction above this that will make all of these tools fit into the same category.
or maybe I've just had too much sugar and caffeine :-)
----
shae at webwitches.com




From j.her at t-online.de  Wed Aug 22 12:39:07 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Wed, 22 Aug 2001 20:39:07 +0200
Subject: [Twisted-Python] Logging Framework
In-Reply-To: <20010821213359.2CFA73874@darjeeling>
Message-ID: <15Zcu5-01O4J6C@fwd06.sul.t-online.com>

On Wed, 22 Aug 2001 00:33:59 +0300 (IDT), Moshe Zadka wrote:

>twisted.python.log:
>
>DEBUG, WARNING, NORMAL, IMPORTANT, CRITICAL = range(5)
>priorities = 'DEBUG', 'WARNING', 'NORMAL', 'IMPORTANT', 'CRITICAL'

INFO - ignorable
DEBUG - only important to programmers
WARNING - MIGHT be bad
ERROR - IS bad, but can work around it
FATAL - unrecoverable, must kill myself

Don't have too much time, but the main prob in the class hierarchy is
that you mix event formatting and event sinks ==> you need a pluggable
LogFormatter. And consider log filtering to several sinks (all events
to a file, AND all >= ERROR to syslog).

Another very useful addition is log contexts (a pattern, I think
they're in PLoP3).

We have a similar log system in C++ with a Py/C binding, can tell you
more if you want.
Ciao, Jürgen






From sean at twistedmatrix.com  Thu Aug 23 15:34:11 2001
From: sean at twistedmatrix.com (Sean Riley)
Date: Thu, 23 Aug 2001 16:34:11 -0500
Subject: [Twisted-Python] twisted network objects diagram
In-Reply-To: <20010821215104.A1065@twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGEEIFCBAA.sean@twistedmatrix.com>

I drew a picture!

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pb.dia
Type: application/octet-stream
Size: 3652 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010823/86a645bf/attachment-0002.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pbout.png
Type: image/png
Size: 24283 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010823/86a645bf/attachment-0002.png>

From jasbahr at crash.org  Thu Aug 23 17:02:37 2001
From: jasbahr at crash.org (Jason L. Asbahr)
Date: Thu, 23 Aug 2001 18:02:37 -0500
Subject: [Twisted-Python] twisted network objects diagram
In-Reply-To: <HOEEKPCOKELHCNIJNMAGEEIFCBAA.sean@twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMIEGEHDAA.jasbahr@crash.org>

Yay!  We like pictures.  :-)

Jason

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Sean Riley
Sent: Thursday, August 23, 2001 4:34 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] twisted network objects diagram


I drew a picture!






From Glenn.Rieger at mincom.com  Sun Aug 26 18:45:57 2001
From: Glenn.Rieger at mincom.com (Glenn.Rieger at mincom.com)
Date: Mon, 27 Aug 2001 10:45:57 +1000
Subject: [Twisted-Python] Reality Servers
Message-ID: <OF3BDAFEF9.ADEB352E-ON4A256AB5.0002E4B5@mincom.oz.au>

I downloaded Twisted 0.10.0 along with Inheritance and TRDemo to continue 
looking at the .reality side of things.

There is bad news and good news...

The bad news is the username/password for TRDemo no longer seems to be 
guest/guest

The good news is this does not kill faucet, but results in a cute "oops, 
unauthorized" message. Hmm, I may look at getting that to appear as a 
pop-up tk message-box.

Am I using the wrong username and password for TRDemo or is something 
missing somewhere else? The Inheritance demo runs okay.

Is anyone currently working on the gtkfaucet? If not, then I would like to 
know if I can make changes to the core reality product. I will try where 
possible not to break the gtkfaucet functionality, but since I can't test 
it I won't make promises :) If there is someone using gtkfaucet, I would 
appreciate hearing from you to work out some arrangement when I feel I 
need to change or add to the existing reality scripts.

I have created DOS bat files as wrappers for building a reality tap and 
for running the tap with twistd. It contains the required commands plus a 
few house-keeping details like removing log and pid files before running.

Currently, I have (1) modified the tkfaucet to word-wrap the description 
and item frames, (2) display them at a reasonable width and height, (3) 
added the shortcut code from gtkfaucet. I'm not entirely happy about the 
shortcuts, as I believe the "go north" command should have "n" as a 
synonym. However, I will leave it as is until I get around to looking at 
these commands.

I don't like the idea that when you "look at" something, like the Colt 
pistol for example, your location changes to Colt pistol. That is, you 
have to perform a "look" command before you can move to another location.

This is all I have to report at the moment. I would have had more but I 
got side-tracked playing the IF game Moist (written in TADS). Now *that* 
would have some interesting possibilities in a multi-player environment :)

Cheers,
ChrisH



-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Mon Aug 27 00:05:33 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Aug 2001 01:05:33 -0500
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <OF3BDAFEF9.ADEB352E-ON4A256AB5.0002E4B5@mincom.oz.au>; from Glenn.Rieger@mincom.com on Mon, Aug 27, 2001 at 10:45:57AM +1000
References: <OF3BDAFEF9.ADEB352E-ON4A256AB5.0002E4B5@mincom.oz.au>
Message-ID: <20010827010533.A24320@twistedmatrix.com>

On Mon, Aug 27, 2001 at 10:45:57AM +1000, Glenn.Rieger at mincom.com wrote:
> The bad news is the username/password for TRDemo no longer seems to be 
> guest/guest

Hmm.  It seems to work here.  What configuration are you running on?

> The good news is this does not kill faucet, but results in a cute "oops, 
> unauthorized" message. Hmm, I may look at getting that to appear as a 
> pop-up tk message-box.

Cool :)

> Am I using the wrong username and password for TRDemo or is something 
> missing somewhere else? The Inheritance demo runs okay.

As I said, it works fine here.  Are you using the latest TRDemo.tar.gz from the
website?  There were a few changes... (I suppose we should be doing versioned
releases of both games, too, though so few things are changing it didn't seem
worth it)

> Is anyone currently working on the gtkfaucet? If not, then I would like to 
> know if I can make changes to the core reality product. I will try where 
> possible not to break the gtkfaucet functionality, but since I can't test 
> it I won't make promises :) If there is someone using gtkfaucet, I would 
> appreciate hearing from you to work out some arrangement when I feel I 
> need to change or add to the existing reality scripts.

Explain "core reality product"?  What functionality, specifically, do you want
to change?

The gtkfaucet is part of our acceptance tests.  If you're going to check
something in to CVS that breaks those tests, you need to find a way to test or
find someone else who will test for you.  If you're not going to do anything
with CVS, feel free to send a patch!  I'll test it before I integrate it :)

> I have created DOS bat files as wrappers for building a reality tap and 
> for running the tap with twistd. It contains the required commands plus a 
> few house-keeping details like removing log and pid files before running.

Cool, I'd like to see those.

> Currently, I have (1) modified the tkfaucet to word-wrap the description 
> and item frames, (2) display them at a reasonable width and height, (3) 

Hmm.  Does 'reasonable width and height' work cross-platform?

> added the shortcut code from gtkfaucet. I'm not entirely happy about the 
> shortcuts, as I believe the "go north" command should have "n" as a 
> synonym. However, I will leave it as is until I get around to looking at 
> these commands.

The shortcut code I'm *VERY* happy to hear about, I've been hoping that someone
would fix that for a while!  'n' is a synonym for 'go north' in gtkfaucet, so
I'm not sure what you're talking about...

> I don't like the idea that when you "look at" something, like the Colt 
> pistol for example, your location changes to Colt pistol. That is, you 
> have to perform a "look" command before you can move to another location.

Your location does not change.

It changes your _focus_, the object you're looking at.  The "obvious exits"
thing is sort of broken, and I apologise for that.  However, you do not need to
issue another 'look' command before you can move.

> This is all I have to report at the moment. I would have had more but I 
> got side-tracked playing the IF game Moist (written in TADS). Now *that* 
> would have some interesting possibilities in a multi-player environment :)

Wonderful!  It's good to hear a report of any progress at all, so don't feel
bad!  Also, don't consider playing IF a waste of time.  It's "market research".
:-)


-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From Chris.Hadgis at mincom.com  Mon Aug 27 17:04:43 2001
From: Chris.Hadgis at mincom.com (Chris.Hadgis at mincom.com)
Date: Tue, 28 Aug 2001 09:04:43 +1000
Subject: [Twisted-Python] Reality Servers
Message-ID: <OFC6EA5916.F07AA1E9-ON4A256AB5.007B70B3@mincom.oz.au>

Glyph Lefkowitz <glyph at twistedmatrix.com>
Sent by: twisted-python-admin at twistedmatrix.com
27/08/2001 04:05 PM
Please respond to twisted-python

 
        To:     twisted-python at twistedmatrix.com
        cc: 
        Fax to: 
        Subject:        Re: [Twisted-Python] Reality Servers


> On Mon, Aug 27, 2001 at 10:45:57AM +1000, Glenn.Rieger at mincom.com wrote:
> > The bad news is the username/password for TRDemo no longer seems to be 

> > guest/guest

> Hmm.  It seems to work here.  What configuration are you running on?

I am running on Win98. The date on the zip file is August 21st. I don't 
have any problems running the Inheritance demo.

> > The good news is this does not kill faucet, but results in a cute 
"oops, 
> > unauthorized" message. Hmm, I may look at getting that to appear as a 
> > pop-up tk message-box.

> Cool :)

I am glad to say it works. You get the printed message as well as a 
tkMessageBox. I will send you (Glyph) a zip file containing the code I 
refer to in this e-mail.

> > Am I using the wrong username and password for TRDemo or is something 
> > missing somewhere else? The Inheritance demo runs okay.

> As I said, it works fine here.  Are you using the latest TRDemo.tar.gz 
from the
> website?  There were a few changes... (I suppose we should be doing 
versioned
> releases of both games, too, though so few things are changing it didn't 
seem
> worth it)

Maybe they should be versions of the games. When I get around to writing 
one, after playing with faucet for a while, it will be kept under version 
control. How old are these games? When were they written?

> > Is anyone currently working on the gtkfaucet? If not, then I would 
like to 
> > know if I can make changes to the core reality product. I will try 
where 
> > possible not to break the gtkfaucet functionality, but since I can't 
test 
> > it I won't make promises :) If there is someone using gtkfaucet, I 
would 
> > appreciate hearing from you to work out some arrangement when I feel I 

> > need to change or add to the existing reality scripts.

> Explain "core reality product"?  What functionality, specifically, do 
you want
> to change?

Sorry, that's Mincom-speak coming out :) I meant the scripts in 
twisted\reality. If I change tkfaucet, gtkfaucet will still run quite 
happily. If I happen to change "thing.py", then that will affect gtkfaucet 
too. I am not looking at changing anything specific right now, but as I 
get more comfortable with the code, there may be changes I wish to make. 
For example, I may implement an "examine" command, which is the same as 
"look at", but is only one word and can be short-cut to "x" (see TADS).

> The gtkfaucet is part of our acceptance tests.  If you're going to check
> something in to CVS that breaks those tests, you need to find a way to 
test or
> find someone else who will test for you.  If you're not going to do 
anything
> with CVS, feel free to send a patch!  I'll test it before I integrate it 
:)

I would love to be able to test gtkfaucet myself, but I do not have 
"gtk.py". Is it available for Windows? If so, I would like to get a copy. 
It would make it easier to compare tkfaucet and gtkfaucet and it would 
make sure I didn't break anything.

I don't know if I would be able to access CVS from where I am, at least 
for now. If it is okay, I'd like to send patches to you. What form would 
you like the patch in?

> > I have created DOS bat files as wrappers for building a reality tap 
and 
> > for running the tap with twistd. It contains the required commands 
plus a 
> > few house-keeping details like removing log and pid files before 
running.

> Cool, I'd like to see those.

See zip file I will send you soon after posting this message.

> > Currently, I have (1) modified the tkfaucet to word-wrap the 
description 
> > and item frames, (2) display them at a reasonable width and height, 
(3) 

> Hmm.  Does 'reasonable width and height' work cross-platform?

Yes, I just meant I changed the number of characters displayed in the 
frames. The description frame is 72w x 12h, the item frame is 36w x 12h, 
and the happenings frame is 6h. This fits okay on a 800x600 screen, and 
even on a 640x480 :)

> > added the shortcut code from gtkfaucet. I'm not entirely happy about 
the 
> > shortcuts, as I believe the "go north" command should have "n" as a 
> > synonym. However, I will leave it as is until I get around to looking 
at 
> > these commands.

> The shortcut code I'm *VERY* happy to hear about, I've been hoping that 
someone
> would fix that for a while!  'n' is a synonym for 'go north' in 
gtkfaucet, so
> I'm not sure what you're talking about...

See zip file I will send you soon after posting this message.

In the system I am familiar with a travel verb is defined - nVerb - whose 
verbs (synonyms) are 'n', 'north', and 'go north'. The travel verb has an 
associated action which moves the player north. This is the distinction I 
make between a synonym and a shortcut. I admit the shortcut code is small, 
neat, and efficient, so I almost certainly won't change it.

If there are other changes you wish to see made in tkfaucet, let me know 
and I will add them to my list.

> > I don't like the idea that when you "look at" something, like the Colt 

> > pistol for example, your location changes to Colt pistol. That is, you 

> > have to perform a "look" command before you can move to another 
location.

> Your location does not change.

> It changes your _focus_, the object you're looking at.  The "obvious 
exits"
> thing is sort of broken, and I apologise for that.  However, you do not 
need to
> issue another 'look' command before you can move.

I tried that last night and it works as you said. I think the next thing I 
will look at is the 'Obvious Exits' code. I like this feature. In a TADS 
game, I would implement a verb called "exits" which would display the 
exits the player knows about.

> > This is all I have to report at the moment. I would have had more but 
I 
> > got side-tracked playing the IF game Moist (written in TADS). Now 
*that* 
> > would have some interesting possibilities in a multi-player 
environment :)

> Wonderful!  It's good to hear a report of any progress at all, so don't 
feel
> bad!  Also, don't consider playing IF a waste of time.  It's "market 
research".
> :-)

See zip file I will send you soon after posting this message.

Cheers,
ChrisH




-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From Chris.Hadgis at mincom.com  Tue Aug 28 17:24:33 2001
From: Chris.Hadgis at mincom.com (Chris.Hadgis at mincom.com)
Date: Wed, 29 Aug 2001 09:24:33 +1000
Subject: [Twisted-Python] Reality Servers
Message-ID: <OFE79C8DD0.16E43CB0-ON4A256AB6.007FF58F@mincom.oz.au>

I downloaded the TRDemo zip file yesterday and everything works okay 
now...

I have identified three problems I will look at as time permits

(1) 'pull string' of the John Romero action figure results in the 
broadcast messages appearing twice. Calls to broadcastToPair() appear but 
calls to broadcast() do not. I don't know why. I changed the function so 
the John Romero messages actually appear now. I don't know why broadcast() 
won't work from the 'pull string' function.

(2) obvious exits should always show the obvious exits from the player's 
room even when you are looking at an object. Glyph mentioned this 
yesterday.

(3) add an 'examine' verb, which is the same as 'look at'. I want to use 
'x' as a short-cut for examine, but the code for direction short-cuts 
won't work in this case - direction short-cuts replace the whole sentence 
with the full command.

If ANYONE has problems with tkfaucet, please add them to the list and I 
will see what I can do about fixing them.

Cheers,
ChrisH



-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Wed Aug 29 02:19:21 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Aug 2001 03:19:21 -0500
Subject: [Twisted-Python] UML Whiteboard Concept
In-Reply-To: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>; from jasbahr@crash.org on Wed, Aug 22, 2001 at 08:19:40AM -0500
References: <EIEFLCFECLLBKGPNJJIMMEDKHDAA.jasbahr@crash.org>
Message-ID: <20010829031921.A14359@twistedmatrix.com>

On Wed, Aug 22, 2001 at 08:19:40AM -0500, Jason L. Asbahr wrote:

> I'm imagining that the whiteboard would support multiple documents
> open at the same time, allowing users to cut and paste and to compare
> documents.  (Not being able to have multiple documents open on my
> desktop was something that frustrated me when I was using Rational
> Rose...)

I would hesitate to think of this in a "document"-based model.  These aren't
documents, they're models; "documents" only seem to get involved in the
discussion when the model-is-a-file implementation detail is made too explicit.

> Interoperability with Rational Rose or TogetherJ (using XMI,
> the XML standard for UML) would be an important later goal.
> [...]
> In the foggy, distant future I'd love to have a design tool
> that actually worked seamlessly with my code development.

I think this is a more important design aim than interoperability with current
UML-generating tools...

> New classes and methods typed into an editor would be added
> to the design model as I typed them, and new methods and
> classes created in code as I drew them in the tool.  Source
> files per se would be the exported data of the tool, internally
> code would be represented in a structured format at various
> levels of granularity (package, class, method).  Smalltalky.

This really shouldn't be that hard.  Python already has support for
representing ASTs as objects, and going back and forth to source code should be
no more difficult than any other load/save procedure.

This should also emphasize the differences between capabilities of different
programming languages -- C++ might be a little harder to parse, but it's still
no herculean challenge, and it would be nice to work with it alongside python
code if this "editor" understood them both; a small addition to UML (perhaps
even just a color) to delineate what language a class is from would be highly
useful in hybrid systems.

(As you can see, I'm more inclined to think of this project as "smalltalk
browser with UML display style" rather than "UML diagramming tool with optional
smalltalky hooks" ^_^)

> Resonant with the manhole concept, definitely.

In *my* foggy, distant future, manhole would integrate directly with this, and
you could browse multiple *versions and branches* of classes and their
interactions, selecting known-to-be-stable ones and loading them into the
server process graphically; perhaps even loading them into every node of a
cluster.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From glyph at twistedmatrix.com  Wed Aug 29 02:27:46 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Aug 2001 03:27:46 -0500
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <OFE79C8DD0.16E43CB0-ON4A256AB6.007FF58F@mincom.oz.au>; from Chris.Hadgis@mincom.com on Wed, Aug 29, 2001 at 09:24:33AM +1000
References: <OFE79C8DD0.16E43CB0-ON4A256AB6.007FF58F@mincom.oz.au>
Message-ID: <20010829032746.C14359@twistedmatrix.com>

On Wed, Aug 29, 2001 at 09:24:33AM +1000, Chris.Hadgis at mincom.com wrote:
> I downloaded the TRDemo zip file yesterday and everything works okay 
> now...

Cool.  Yeah, we need to start versioning those releases.

(There will be another one shortly, as I'm introducing a convention for Twisted
packages.)

> I have identified three problems I will look at as time permits

> (1) 'pull string' of the John Romero action figure results in the 
> broadcast messages appearing twice. Calls to broadcastToPair() appear but 
> calls to broadcast() do not. I don't know why. I changed the function so 
> the John Romero messages actually appear now. I don't know why broadcast() 
> won't work from the 'pull string' function.

Interesting.  I'll look into it.

> (2) obvious exits should always show the obvious exits from the player's 
> room even when you are looking at an object. Glyph mentioned this 
> yesterday.

Yep.  I'm still not sure how to handle this...

> (3) add an 'examine' verb, which is the same as 'look at'. I want to use 
> 'x' as a short-cut for examine, but the code for direction short-cuts 
> won't work in this case - direction short-cuts replace the whole sentence 
> with the full command.

Hopefully this will be really simple.  It should be a 3-line addition to
twisted/reality/player.py ;)

> If ANYONE has problems with tkfaucet, please add them to the list and I 
> will see what I can do about fixing them.

This sounds like good stuff.  When you have patches to contribute, assuming
they're less than 40k or so, send them to the list in diff -u format.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From m at moshez.org  Wed Aug 29 12:49:59 2001
From: m at moshez.org (Moshe Zadka)
Date: Wed, 29 Aug 2001 21:49:59 +0300 (IDT)
Subject: [Twisted-Python] Current Working Directory - Just say no
Message-ID: <20010829184959.C21D63929@darjeeling>

Glyph, please, please remove the currentDirectory from the plugins
list. This is a security hole waiting to happen.

This is your brain.
This is your brain in the current working directory.

-- 
The Official Moshe Zadka FAQ: http://moshez.geek
The Official Moshe Zadka FAQ For Dummies: http://moshez.org
Read the FAQ




From glyph at twistedmatrix.com  Wed Aug 29 16:23:04 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Aug 2001 17:23:04 -0500
Subject: [Twisted-Python] Current Working Directory - Just say no
In-Reply-To: <20010829184959.C21D63929@darjeeling>; from m@moshez.org on Wed, Aug 29, 2001 at 09:49:59PM +0300
References: <20010829184959.C21D63929@darjeeling>
Message-ID: <20010829172304.A20274@twistedmatrix.com>

OK, I'll remove it because it seems redundant (Twisted directory + your home
directory seems like a fairly complete default set...) However, I don't really
agree... how is the current working directory more or less "secure" than the
contents of the environment variable $HOME?  We're importing python modules
with __import__ anyway; it's a pretty massive security hole if hostile users
can write to your current directory already (as it is normally on sys.path)

On Wed, Aug 29, 2001 at 09:49:59PM +0300, Moshe Zadka wrote:
> Glyph, please, please remove the currentDirectory from the plugins
> list. This is a security hole waiting to happen.
> 
> This is your brain.
> This is your brain in the current working directory.

-- 
                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph




From Chris.Hadgis at mincom.com  Thu Aug 30 18:07:23 2001
From: Chris.Hadgis at mincom.com (Chris.Hadgis at mincom.com)
Date: Fri, 31 Aug 2001 10:07:23 +1000
Subject: [Twisted-Python] reality server vs PUB
Message-ID: <OF2381FF76.F17BAF44-ON4A256AB9.00004333@mincom.oz.au>

Is it my imagination, or is twisted.reality somewhat similar to Python 
Universe Builder? I have just discovered this after reading through the 
i-f newsgroups this morning.  I plan on downloading it and taking it home 
to look at.

Does anyone else know anything about this?

Btw, how do I go about getting a TM home-page?

Cheers,
ChrisH


-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From carmstro at twistedmatrix.com  Fri Aug 31 08:56:05 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Fri, 31 Aug 2001 10:56:05 -0400
Subject: [Twisted-Python] I am not my freaking khakis.
Message-ID: <20010831105605.A573@Fookidla.org>

Hey everybody. I just wanted to drop a note that I haven't died, but rather
school has started, and with work and a girlfriend on top of that, I've
had very little time to come around on IRC, let alone hack Twisted or any
related projects. I really can't see myself continuing with TWN, so I hope
some kind soul might pick that up. I can help out, but the problem is
committing to a consistent schedule for TWN.

I really can't help but feel like I'm letting you guys down, but I'm going
to do my best to actually get around to doing some work here and there.

Anyways, it's really exciting to see what everyone's been doing, Twisted
just keeps blowing me away, both with it's functionality and it's
popularity. Keep up the good work, guys. I'm proud of you. :>

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From twisted at itamarst.org  Fri Aug 31 11:15:16 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 13:15:16 -0400
Subject: [Twisted-Python] What the hell?
Message-ID: <3B8FC624.6040404@itamarst.org>

 From tcp.py:

============
class Client(Connection):
     """A client for TCP (and similiar) sockets.
     """
     def __init__(self, host, port, protocol):
         """Initialize the client, setting up its socket, and request to
         connect.
         """
         if host == 'unix':
             # "port" in this case is really a filename
...
============

That is sooo wrong. What if my computer is named 'unix'? Why does the 
TCP code deal with files?






From shae at webwitches.com  Fri Aug 31 11:40:03 2001
From: shae at webwitches.com (Shae Erisson)
Date: Fri, 31 Aug 2001 20:40:03 +0300 (EEST)
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831.204003.607956277.shae@webwitches.com>

From: Itamar <twisted at itamarst.org>
Subject: [Twisted-Python] What the hell?
Date: Fri, 31 Aug 2001 13:15:16 -0400

>  From tcp.py:
> 
> ============
> class Client(Connection):
>      """A client for TCP (and similiar) sockets.
>      """
>      def __init__(self, host, port, protocol):
>          """Initialize the client, setting up its socket, and request to
>          connect.
>          """
>          if host == 'unix':
>              # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?

if you're adding xfstt to your fontpath, the url to use is unix:7101/
xfs is at unix:7100/

so I'd assume is specific to some kind of IPC.
Therefore, I bet yer system will act strangely if you make your hostname 'unix'
----
Shae Matijs Erisson - http://www.webwitches.com/~shae/
bRing mE fIve sQuirrels aNd nO oNe wIll gEt hUrt 
13:00pm up 1 season, 1 squirrel, load average: 1+1j 0.5+2j 0.2+0.5j




From twisted at itamarst.org  Fri Aug 31 11:47:06 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 13:47:06 -0400
Subject: [Twisted-Python] Another tcp.Client question
Message-ID: <3B8FCD9A.1090606@itamarst.org>

Another question - shouldn't we return when getting a EWOULDBLOK or 
friends, since we haven't yet connected?

========================
class Client(Connection):
     #...

     def doConnect(self):
         """I connect the socket.

         Then, call the protocol's makeConnection, and start waiting for
         data.
         """
         try:
             self.socket.connect(self.addr)
         except socket.error, se:
             if se.args[0] in (EWOULDBLOCK, EALREADY, EINPROGRESS):
                 pass ###########  XXX shouldn't this be "return"? XXX
             else:
                 self.protocol.connectionFailed()
                 return CONNECTION_LOST
         # If I have reached this point without raising or returning,
         # that means that the socket is connected.





From twisted at itamarst.org  Fri Aug 31 12:37:41 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 14:37:41 -0400
Subject: [Twisted-Python] Another tcp.Client question
References: <3B8FCD9A.1090606@itamarst.org>
Message-ID: <3B8FD975.8080306@itamarst.org>

Itamar wrote:
> Another question - shouldn't we return when getting a EWOULDBLOK or 
> friends, since we haven't yet connected?

Well, maybe not. But I am having problems - when connecting to a server 
that is not running using a tcp.Client, instead of getting 
connectionFailed I'm getting connectionMade and then an immediate 
connectionLost.





From twisted at itamarst.org  Fri Aug 31 12:44:01 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 14:44:01 -0400
Subject: [Twisted-Python] Another tcp.Client question
References: <3B8FCD9A.1090606@itamarst.org>
Message-ID: <3B8FDAF1.5070006@itamarst.org>

OK, the following patch seems to solve the problem. It is based on the 
fact doWrite is set to equal doConnect - I assume that this patch 
implements what was intended in the first place.


Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.16
diff -c -r1.16 tcp.py
*** tcp.py	2001/08/29 10:13:55	1.16
--- tcp.py	2001/08/31 18:46:49
***************
*** 159,168 ****
               self.socket.connect(self.addr)
           except socket.error, se:
               if se.args[0] in (EWOULDBLOCK, EALREADY, EINPROGRESS):
!                 pass
               else:
                   self.protocol.connectionFailed()
                   return CONNECTION_LOST
           # If I have reached this point without raising or returning, 
that means
           # that the socket is connected.
           del self.doWrite
--- 159,170 ----
               self.socket.connect(self.addr)
           except socket.error, se:
               if se.args[0] in (EWOULDBLOCK, EALREADY, EINPROGRESS):
!                 self.startWriting()
!                 return
               else:
                   self.protocol.connectionFailed()
                   return CONNECTION_LOST
+
           # If I have reached this point without raising or returning, 
that means
           # that the socket is connected.
           del self.doWrite






From twisted at itamarst.org  Fri Aug 31 12:46:01 2001
From: twisted at itamarst.org (Itamar)
Date: Fri, 31 Aug 2001 14:46:01 -0400
Subject: [Twisted-Python] Another tcp.Client question
References: <3B8FCD9A.1090606@itamarst.org>
Message-ID: <3B8FDB69.5080200@itamarst.org>

One problem with my patch - both connectionFailed and connectionLost are 
called on the protocol, instead of just connectionFailed.





From chris at detriment.org  Fri Aug 31 12:51:45 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:51:45 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831115145.A993@det.ddts.net>

I agree.  The transport for a client or server should probally not be
generalized to a socket at all.  Maybe this calls for the creation of
twisted.transport ?  I am not familiar much with the twisted codebase, so
don't kill me if something like this already exists :)

On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> From tcp.py:
> 
> ============
> class Client(Connection):
>     """A client for TCP (and similiar) sockets.
>     """
>     def __init__(self, host, port, protocol):
>         """Initialize the client, setting up its socket, and request to
>         connect.
>         """
>         if host == 'unix':
>             # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010831/a4dccc6c/attachment.sig>

From chris at detriment.org  Fri Aug 31 12:43:38 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:43:38 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831114338.A958@det.ddts.net>

I agree.  The transport for a client or server should probally not be
generalized to a socket at all.  Maybe this calls for the creation of
twisted.transport ?  I am not familiar much with the twisted codebase, so
please dont flame me if something like this already exists :)

On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> From tcp.py:
> 
> ============
> class Client(Connection):
>     """A client for TCP (and similiar) sockets.
>     """
>     def __init__(self, host, port, protocol):
>         """Initialize the client, setting up its socket, and request to
>         connect.
>         """
>         if host == 'unix':
>             # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010831/babb83c9/attachment.sig>

From chris at detriment.org  Fri Aug 31 12:37:46 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:37:46 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <3B8FC624.6040404@itamarst.org>
References: <3B8FC624.6040404@itamarst.org>
Message-ID: <20010831113735.A807@det.ddts.net>

I agree.  The transport for a client or server should probally not be
generalized to a socket at all.  Maybe this call for the creation of
twisted.transport ?  I am not familiar much with the twisted codebase, so
excuse me if something like this already exists :)

On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> From tcp.py:
> 
> ============
> class Client(Connection):
>     """A client for TCP (and similiar) sockets.
>     """
>     def __init__(self, host, port, protocol):
>         """Initialize the client, setting up its socket, and request to
>         connect.
>         """
>         if host == 'unix':
>             # "port" in this case is really a filename
> ...
> ============
> 
> That is sooo wrong. What if my computer is named 'unix'? Why does the 
> TCP code deal with files?
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010831/a8266d5c/attachment.sig>

From chris at detriment.org  Fri Aug 31 12:57:15 2001
From: chris at detriment.org (Chris Clearwater)
Date: Fri, 31 Aug 2001 11:57:15 -0700
Subject: [Twisted-Python] What the hell?
In-Reply-To: <20010831115145.A993@det.ddts.net>
References: <3B8FC624.6040404@itamarst.org> <20010831115145.A993@det.ddts.net>
Message-ID: <20010831115712.A1013@det.ddts.net>

OOPS! I just switched ISPs and was figuring out my mail relay and the
message got sent three times! /me curses exim.

On Fri, Aug 31, 2001 at 11:51:45AM -0700, Chris Clearwater wrote:
> I agree.  The transport for a client or server should probally not be
> generalized to a socket at all.  Maybe this calls for the creation of
> twisted.transport ?  I am not familiar much with the twisted codebase, so
> don't kill me if something like this already exists :)
> 
> On Fri, Aug 31, 2001 at 01:15:16PM -0400, Itamar wrote:
> > From tcp.py:
> > 
> > ============
> > class Client(Connection):
> >     """A client for TCP (and similiar) sockets.
> >     """
> >     def __init__(self, host, port, protocol):
> >         """Initialize the client, setting up its socket, and request to
> >         connect.
> >         """
> >         if host == 'unix':
> >             # "port" in this case is really a filename
> > ...
> > ============
> > 
> > That is sooo wrong. What if my computer is named 'unix'? Why does the 
> > TCP code deal with files?
> > 
> > 
> > 
> > 
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> -- 
> python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
> 36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"



-- 
python -c "print reduce(lambda x,y: x+y,map(lambda x: chr((23069453891\
36636418523668102630431981680355427L>>(x*8))&0xFF),xrange(0,19)))"
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010831/35b1b36c/attachment.sig>

