From zuhaib at hipchat.com  Tue Sep  1 00:48:50 2015
From: zuhaib at hipchat.com (Zuhaib Siddique)
Date: Mon, 31 Aug 2015 23:48:50 -0700
Subject: [Twisted-Python] HAProxy and twisted TCP/IP support
Message-ID: <CALWC=NAQL57CSpBSLqARmkZjKzbiHdYTLp275Rc4q1HHuWQNRw@mail.gmail.com>

Hey all,

I am looking at using HAProxy in front of Twisted for TCP connection and
need to pass the source IP along.  We are currently looking at hacking
tcp.py to add support for this:
http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt but wondering if
this is something someone is already working on for twisted or maybe I dont
need to hack tcp.py.

Thanks
Zuhaib
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150831/ca2881ca/attachment.html>

From adi at roiban.ro  Wed Sep  2 04:38:52 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 2 Sep 2015 13:38:52 +0300
Subject: [Twisted-Python] Converting str to bytes in Py3 port
Message-ID: <CAFycZ9fkkV3nRmE9D7wOXu6oik04GKuGwAH5pW41rMGK5rjHOg@mail.gmail.com>

Hi,

While reviewing the latest patch related to porting Twisted to py3 I
saw that many values which were supposed to hold just text were ported
as bytes.

The argument for this conversion was that Twisted is a low level
framework and that other high level framworks like Treq or Klein
should implement the required code so that end user can just use text.

For example the HTTP response messages are not bytes, even if the RFC
specified that they should only contain text with a single encoding.

I have little experience with twisted.web, so maybe there are many
users of twisted.web which use binary data for response messages or
maybe there is a good use case for putting random bytes in the HTTP
response message.

-------

If for twisted.web there are Treq or Klein to implement the user
friendly interfaces, I don't know what can be used for twisted.conch

In the ticket for porting twisted.conch.ssh.key to py3 [1] the name of
the ssh key algorithms like 'ssh-rsa' or 'ssh-dsa', encryption
algorithm names like AES-128-CBC and ssh key components like p, q, y,
x, n, e are now all bytes.

Do you think that this is ok?
Why allow or encourage people to use random bytes for fields which
should contain human readable text?

For HTTP response line and response headers I think that all values
should be text and encoded in ISO-8859-1.

RFC 4819 [2] only talks about using US-ASCII for all names used in the
SSH public key subsystem.
Why use bytes to represent these names?

RFC 4716 specifies that header tags must be US-ASCII while header
value UTF-8 ... while all IANA names are US-ASCII.... and names in the
private namespace (name at domain) should also be US-ASCII.

As a reviewer I don't know that is the degin/architecture choose by
Twisted and how to review such changes.

As a developer I prefer to have as much text as possible so that I can
do text manipulation operation on these values and directly include
them in logs or error messages.

I assume that all the people involved in writing the RFC had a good
reason to require those fields to be text rather than any bytes.

Thanks for your feedback!

[1] https://github.com/twisted/twisted/compare/trunk...conch-ssh-keys-py3-7998
[2] https://www.ietf.org/rfc/rfc4819.txt
-- 
Adi Roiban


From wangliyu at dhcc.com.cn  Wed Sep  2 04:43:21 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Wed, 02 Sep 2015 18:43:21 +0800
Subject: [Twisted-Python] Auto-Re:  Converting str to bytes in Py3 port
Message-ID: <1509021843218d64eba830f9363451a88ab14ecc1b9c@dhcc.com.cn>

??????????????????

----
--------------------------
Best Regards,

???

--------------------------

DHC Software Co.,Ltd.

????????

Add?11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

??????????????3????????11?

?? 100190   ???18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150902/db10bc74/attachment.html>

From cherian.rosh at gmail.com  Wed Sep  2 19:08:16 2015
From: cherian.rosh at gmail.com (Roshan Cherian)
Date: Wed, 2 Sep 2015 18:08:16 -0700
Subject: [Twisted-Python] understanding IConsumer
Message-ID: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>

Hi Team,

I am sorry if this is coming off as a newbie question. Its probably because
I don't understand it enough.

I would like to:

1. connectTCP to a host, port
2. use the transport to write
3. Use consumer to read from the transport what the tcp server has written
to

I wasn't able to find information on consumer and how it gets triggered
when data is available especially in the case I have

Thanks,
-Roshan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150902/a82b7051/attachment.html>

From dstainton415 at gmail.com  Thu Sep  3 05:28:03 2015
From: dstainton415 at gmail.com (David Stainton)
Date: Thu, 3 Sep 2015 13:28:03 +0200
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
Message-ID: <CAFN1edq9j=phfdsRFOJeWp927o0XS=V-FXyNx9Ad9G=D3xG=Dg@mail.gmail.com>

I'm not the best person to respond here but I think you should not
want or need to implement your own consumer... Twisted transports and
protocols are implemented using producers and consumers.

On Thu, Sep 3, 2015 at 3:08 AM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
> Hi Team,
>
> I am sorry if this is coming off as a newbie question. Its probably because
> I don't understand it enough.
>
> I would like to:
>
> 1. connectTCP to a host, port
> 2. use the transport to write
> 3. Use consumer to read from the transport what the tcp server has written
> to
>
> I wasn't able to find information on consumer and how it gets triggered when
> data is available especially in the case I have
>
> Thanks,
> -Roshan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From snailcoder at 163.com  Thu Sep  3 08:55:12 2015
From: snailcoder at 163.com (Wang Yan)
Date: Thu, 3 Sep 2015 22:55:12 +0800 (CST)
Subject: [Twisted-Python] twisted.mail.imap4.IMAP4Client.fetchMessage always
	throws exception
Message-ID: <1c9557cc.9170.14f93b4527b.Coremail.snailcoder@163.com>

Hi,

I've installed Twisted 15.3.0 on Ubuntu 14.04LTS. Excellent work but there's one problem bothering me for a long time: twisted.mail.imap4.IMAP4Client.fetchMessage always throws exception and the exception occured at random, e.g. somtimes the exception occured when the program read the 120th mail, sometimes it occured at the 150th or 200th mail. The traceback of the exception is as follows:

Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/log.py", line 101, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/log.py", line 84, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/internet/posixbase.py", line 597, in _doReadOrWrite
    why = selectable.doRead()
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/internet/tcp.py", line 209, in doRead
    return self._dataReceived(data)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/internet/tcp.py", line 215, in _dataReceived
    rval = self.protocol.dataReceived(data)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/protocols/basic.py", line 571, in dataReceived
    why = self.lineReceived(line)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/mail/imap4.py", line 2356, in lineReceived
    self._regularDispatch(line)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/mail/imap4.py", line 2383, in _regularDispatch
    tag, rest = parts
exceptions.ValueError: need more than 1 value to unpack

My code is as simple as possible and the exception is thrown by the following codes:

dlist = []
for msg in messages:    # use message number, not UID
    d = self.fetchMessage(msg, uid=False)
    d.addCallback(cbGetAttachment)
    dlist.append(d)
dl = defer.DeferredList(dlist)
return dl.addCallback(cbLogout)

Is there anybody know about this issue?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150903/8a09845b/attachment.html>

From hawkowl at atleastfornow.net  Fri Sep  4 02:04:09 2015
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Fri, 4 Sep 2015 16:04:09 +0800
Subject: [Twisted-Python] Twisted 15.4.0 Release Announcement
Message-ID: <536D8798-44E2-4C75-AB8F-C6F422ADD32D@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.4, codenamed "Trial By Fire".

Twisted is continuing to forge ahead, with the highlights of this release being:

- twisted.positioning, the rest of twisted.internet.endpoints, KQueueReactor (for real this time), and twisted.web.proxy/guard have all been ported to Python 3.
- Trial has been ported to Python 3! This was made possible by a Python Software Foundation grant.
- Twisted officially supports several more platforms: Py3.4 on FreeBSD, Py2.7/Py3.4 on Fedora 21/22, and Py2.7 on RHEL7.
- Python 2.6 is no longer supported, and support for Debian 6, and RHEL6 has been removed because of this.
- Support for the EOL'd platforms of Fedora 17/18/19 has been removed.
- Twisted has moved to requiring setuptools for installation.
- twisted.python.failure.Failure's __repr__ now includes the exception message.
- 19 tickets in total closed!

You can find the downloads at https://pypi.python.org/pypi/Twisted (or alternatively http://twistedmatrix.com/trac/wiki/Downloads). The NEWS file can be found at https://github.com/twisted/twisted/blob/trunk/NEWS .

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Amber "Hawkie" Brown
GPG: https://keybase.io/hawkowl
hawkowl at atleastfornow.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150904/f91527ed/attachment.pgp>

From wangliyu at dhcc.com.cn  Fri Sep  4 02:07:34 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Fri, 04 Sep 2015 16:07:34 +0800
Subject: [Twisted-Python] Auto-Re:  Twisted 15.4.0 Release Announcement
Message-ID: <150904160734a207dfa147c2c7ec76ee85fcaf70e5e9@dhcc.com.cn>

??????????????????

----
--------------------------
Best Regards,

???

--------------------------

DHC Software Co.,Ltd.

????????

Add?11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

??????????????3????????11?

?? 100190   ???18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150904/7b6e3bcd/attachment.html>

From mark at tearle.com  Fri Sep  4 08:33:13 2015
From: mark at tearle.com (Mark Tearle)
Date: Fri, 04 Sep 2015 22:33:13 +0800
Subject: [Twisted-Python] npyscreen Twisted Reactor
Message-ID: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>

Hi folks

A quick email to alert folks to an updated version of the Twisted
Reactor that I wrote for use with npyscreen.

Npyscreen is a python widget library and application framework for
programming terminal or console applications. It is built on top of
ncurses, which is part of the standard library.   It is written by
Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)


Current version includes:
        Bug fixes (Thanks to Adam Pokora)
        Example Server
        Example Client (NEW)

The reactor and examples can be found at:

https://github.com/mtearle/twisted-reactor-npyscreen


Patches, bug reports, etc welcome...


Mark

--
Mark Tearle <mark at tearle.com>

Everyone thinks of changing the world, but no one thinks of changing
himself. - Tolstoy
-- 
Mark Tearle <mark at tearle.com>

Everyone thinks of changing the world, but no one thinks of changing
himself. - Tolstoy


From wangliyu at dhcc.com.cn  Fri Sep  4 08:37:19 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Fri, 04 Sep 2015 22:37:19 +0800
Subject: [Twisted-Python] Auto-Re:  npyscreen Twisted Reactor
Message-ID: <1509042237198395a3aeafef39fdd7bc2d8c7cacc680@dhcc.com.cn>

??????????????????

----
--------------------------
Best Regards,

???

--------------------------

DHC Software Co.,Ltd.

????????

Add?11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

??????????????3????????11?

?? 100190   ???18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150904/f9d87cfe/attachment.html>

From nicholas.cole at gmail.com  Fri Sep  4 09:47:08 2015
From: nicholas.cole at gmail.com (Nicholas Cole)
Date: Fri, 4 Sep 2015 16:47:08 +0100
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
References: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
Message-ID: <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>

Well, this is excellent news, and exactly why I added the event system
to npyscren.

Thank you, Mark, and thank you for hooking in to the system as I intended!

Best wishes,

Nicholas

On Fri, Sep 4, 2015 at 3:33 PM, Mark Tearle <mark at tearle.com> wrote:
> Hi folks
>
> A quick email to alert folks to an updated version of the Twisted
> Reactor that I wrote for use with npyscreen.
>
> Npyscreen is a python widget library and application framework for
> programming terminal or console applications. It is built on top of
> ncurses, which is part of the standard library.   It is written by
> Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)
>
>
> Current version includes:
>         Bug fixes (Thanks to Adam Pokora)
>         Example Server
>         Example Client (NEW)
>
> The reactor and examples can be found at:
>
> https://github.com/mtearle/twisted-reactor-npyscreen
>
>
> Patches, bug reports, etc welcome...
>
>
> Mark
>
> --
> Mark Tearle <mark at tearle.com>
>
> Everyone thinks of changing the world, but no one thinks of changing
> himself. - Tolstoy
> --
> Mark Tearle <mark at tearle.com>
>
> Everyone thinks of changing the world, but no one thinks of changing
> himself. - Tolstoy
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Fri Sep  4 23:58:17 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 4 Sep 2015 22:58:17 -0700
Subject: [Twisted-Python] [Twisted-web] Twisted 15.4.0 Release
	Announcement
In-Reply-To: <536D8798-44E2-4C75-AB8F-C6F422ADD32D@atleastfornow.net>
References: <536D8798-44E2-4C75-AB8F-C6F422ADD32D@atleastfornow.net>
Message-ID: <41C4C5A6-AF3B-41BC-9D02-9F11DB1CBB4C@twistedmatrix.com>

> On Sep 4, 2015, at 01:04, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.4, codenamed "Trial By Fire".

Hooray Twisted!  Hooray Amber!

This release is a particularly big deal, because:

> - Trial has been ported to Python 3! This was made possible by a Python Software Foundation grant.

If you've been wanting to port portions of Twisted over to Python 3 but have been stymied by primitive tooling and weird special cases, the fact that the full test runner is now available is a big deal.  It should be a lot easier to onboard new contributors to help with porting tickets now, and I expect the rate of porting of Python 3 modules to accelerate considerably as a result.  Thanks to everyone who made this happen.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150904/a4695278/attachment.html>

From glyph at twistedmatrix.com  Sat Sep  5 00:23:03 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 4 Sep 2015 23:23:03 -0700
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>
References: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
 <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>
Message-ID: <9AC66ADA-10D1-4EE5-89A4-63A15C68BAC3@twistedmatrix.com>

This is certainly a pretty cool announcement.  Thanks for sharing!

I have two suggestions:

It would be nice if this could be `pip install?ed, which would mean adding a `setup.py? and uploading something to PyPI.
We generally try to reserve the word "Twisted" for packages actually within Twisted to avoid confusion.  Would you consider adopting the community naming conventions for packages ("tx")?  As a bonus, this might shorten the name a bit.  Perhaps "ntxscreen", or "txnpyscreen"?

Thanks!

-glyph

> On Sep 4, 2015, at 08:47, Nicholas Cole <nicholas.cole at gmail.com> wrote:
> 
> Well, this is excellent news, and exactly why I added the event system
> to npyscren.
> 
> Thank you, Mark, and thank you for hooking in to the system as I intended!
> 
> Best wishes,
> 
> Nicholas
> 
> On Fri, Sep 4, 2015 at 3:33 PM, Mark Tearle <mark at tearle.com> wrote:
>> Hi folks
>> 
>> A quick email to alert folks to an updated version of the Twisted
>> Reactor that I wrote for use with npyscreen.
>> 
>> Npyscreen is a python widget library and application framework for
>> programming terminal or console applications. It is built on top of
>> ncurses, which is part of the standard library.   It is written by
>> Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)
>> 
>> 
>> Current version includes:
>>        Bug fixes (Thanks to Adam Pokora)
>>        Example Server
>>        Example Client (NEW)
>> 
>> The reactor and examples can be found at:
>> 
>> https://github.com/mtearle/twisted-reactor-npyscreen
>> 
>> 
>> Patches, bug reports, etc welcome...
>> 
>> 
>> Mark
>> 
>> --
>> Mark Tearle <mark at tearle.com>
>> 
>> Everyone thinks of changing the world, but no one thinks of changing
>> himself. - Tolstoy
>> --
>> Mark Tearle <mark at tearle.com>
>> 
>> Everyone thinks of changing the world, but no one thinks of changing
>> himself. - Tolstoy
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150904/533cd6da/attachment.html>

From hawkowl at atleastfornow.net  Sat Sep  5 02:03:32 2015
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sat, 5 Sep 2015 16:03:32 +0800
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
Message-ID: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>

We just ran into an issue in Autobahn|Python where a log message that tried to use the message attribute an Exception subclass (twisted.internet.error.ProcessTerminated). The message attribute was deprecated in Python 2.6, and removed in Python 3 -- but it still "works" in Python 2.7.

So, this needs the question: Is this breaking Twisted's backwards compat (that .message isn't there on Python 3)? Should we go through and look at our exception subclasses, and look at what makes sense to have a .message attribute (for example, I'd say it makes sense on ProcessTerminated) and then add it? Or is it just a 2/3 change that should be expected during porting? It seems like an interesting edge case (and another example of "Don't use subclassing, kids" ;) ).

The Autobahn ticket (which we're fixing as I write this email) is here https://github.com/tavendo/AutobahnPython/issues/479 .

Regards,

Amber "Hawkie" Brown
GPG: https://keybase.io/hawkowl
hawkowl at atleastfornow.net


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150905/4cdb6af3/attachment.pgp>

From wangliyu at dhcc.com.cn  Sat Sep  5 02:07:07 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Sat, 05 Sep 2015 16:07:07 +0800
Subject: [Twisted-Python] Auto-Re:  Exception's Implicit Public API,
	and Python 3
Message-ID: <1509051607076d87936be763c480894699d79b8a3707@dhcc.com.cn>

??????????????????

----
--------------------------
Best Regards,

???

--------------------------

DHC Software Co.,Ltd.

????????

Add?11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

??????????????3????????11?

?? 100190   ???18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150905/04bdc67d/attachment.html>

From mark at tearle.com  Sat Sep  5 04:34:04 2015
From: mark at tearle.com (Mark Tearle)
Date: Sat, 05 Sep 2015 18:34:04 +0800
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <9AC66ADA-10D1-4EE5-89A4-63A15C68BAC3@twistedmatrix.com>
References: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
 <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>
 <9AC66ADA-10D1-4EE5-89A4-63A15C68BAC3@twistedmatrix.com>
Message-ID: <1441449244.2936003.375455545.74155C9D@webmail.messagingengine.com>

Thanks, positive feedback is appreciated. ?:)

Will work on both your suggestions, and hopefully do an update soon.

Mark

-- 
Mark Tearle <mark at tearle.com>
 
Everyone thinks of changing the world, but no one thinks of changing himself. - Tolstoy
 
 
On Sat, Sep 5, 2015, at 02:23 PM, Glyph wrote:
> This is certainly a pretty cool announcement. ?Thanks for sharing!
>  
> I have two suggestions:
>  
>  1. It would be nice if this could be `pip install?ed, which would mean adding a `setup.py? and uploading something to PyPI.
>  2. We generally try to reserve the word "Twisted" for packages actually within Twisted to avoid confusion. ?Would you consider adopting the community naming conventions for packages ("tx")? ?As a bonus, this might shorten the name a bit. ?Perhaps "ntxscreen", or "txnpyscreen"?
>  
> Thanks!
>  
> -glyph
>  
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150905/c89ffd4a/attachment.html>

From glyph at twistedmatrix.com  Sat Sep  5 21:07:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 5 Sep 2015 23:07:06 -0400
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
Message-ID: <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>


> On Sep 5, 2015, at 04:03, Amber Hawkie Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> We just ran into an issue in Autobahn|Python where a log message that tried to use the message attribute an Exception subclass (twisted.internet.error.ProcessTerminated). The message attribute was deprecated in Python 2.6, and removed in Python 3 -- but it still "works" in Python 2.7.
> 
> So, this needs the question: Is this breaking Twisted's backwards compat (that .message isn't there on Python 3)? Should we go through and look at our exception subclasses, and look at what makes sense to have a .message attribute (for example, I'd say it makes sense on ProcessTerminated) and then add it? Or is it just a 2/3 change that should be expected during porting? It seems like an interesting edge case (and another example of "Don't use subclassing, kids" ;) ).

It's Python's API which has changed here, so I don't think that it's Twisted's responsibility to replicate this behavior.  Subclassing is bad, and Python's changes of public attributes to such a core language-feature level class as Exception is extra bad, but I think that attempting to simultaneously support every version of Python's public API via Twisted would be a mistake.

For a different example, consider the case of the implicit base of "object".  We could faithfully replicate the semantics of old-style classes for all of Twisted's old-style classes, but instead, they remain old-style on py2 (for now) and new-style on py3.  The "message" attribute seems the same to me, so I think we should say this is a 2/3 change you have to make when porting your own code, and the onus is on Autobahn in this case.

Put differently, Twisted's "the first one's free" policy applies to upgrading Twisted itself, and not to upgrading Python (or any other dependency).  If you upgrade Python and you need to update your code for that, Twisted won't create any additional problems but it won't go out of its way to solve the ones you normally have to deal with.

Sound good?

-glyph

> The Autobahn ticket (which we're fixing as I write this email) is here https://github.com/tavendo/AutobahnPython/issues/479 <https://github.com/tavendo/AutobahnPython/issues/479> .


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150905/31c853da/attachment.html>

From trac at twistedmatrix.com  Sun Sep  6 00:05:28 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 06 Sep 2015 06:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1441519528.61.7856443706311942375@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150906/eaaccec9/attachment.html>

From wangliyu at dhcc.com.cn  Sun Sep  6 03:07:25 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Sun, 06 Sep 2015 17:07:25 +0800
Subject: [Twisted-Python] Auto-Re:  Weekly Bug Summary
Message-ID: <150906170725b53e189abd5a8b956d47a51db5d6d1cd@dhcc.com.cn>

??????????????????

----
--------------------------
Best Regards,

???

--------------------------

DHC Software Co.,Ltd.

????????

Add?11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

??????????????3????????11?

?? 100190   ???18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150906/5ded62eb/attachment.html>

From tobias.oberstein at tavendo.de  Sun Sep  6 14:20:02 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 6 Sep 2015 22:20:02 +0200
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
Message-ID: <55EC9FF2.2080008@tavendo.de>

> Put differently, Twisted's "the first one's free" policy applies to
> upgrading Twisted itself, and /not/ to upgrading Python (or any other
> dependency).  If you upgrade Python and you need to update your code for
> that, Twisted won't create any additional problems but it won't go out
> of its way to solve the ones you normally have to deal with.
>
> Sound good?

Sounds good. We're fine.

FWIW, we need to guard for even more cases

.message there
.args there _and_ a tuple _and_ of length > 0

https://github.com/tavendo/AutobahnPython/commit/303d289de4993b5ffa9bf90c6fed71364f3521e7#diff-ced6a7641cc1e78205bd85d77b484c03R111

/Tobias



From tobias.oberstein at tavendo.de  Mon Sep  7 14:31:48 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 7 Sep 2015 22:31:48 +0200
Subject: [Twisted-Python] Crossbar.io 0.11.0
Message-ID: <55EDF434.60803@tavendo.de>


Hi all,

I am pleased to announce Crossbar.io 0.11.0

https://github.com/crossbario/crossbar#crossbario
https://pypi.python.org/pypi/crossbar/0.11.0

Crossbar.io is an open-source WAMP application router that allows to 
build advanced applications from loosely-coupled components that can 
talk in real-time with each other.

This is a big release:

- Python 3 support! Yes, that's right. Crossbar.io now runs on Py3.
- Node, worker and component start/stop/failure behavior improved a lot
- new File Upload Service
- new Web Hook Service
- Complete new logging system (structured logging + color!)
- Improved both Crossbar's own logging, and logging from user components
- Lots of issues and corner-cases fixed
- Automated testing / CI on 8 platform combinations
- Much improved unit test coverage

A big chunk of the credits for this go to Crossbar.io core devs

Amber "hawkie" / http://atleastfornow.net/
Mike "meejah" / https://meejah.ca/

Both are working on CB under Tavendo contract. This release simply 
wouldn't be as awesome as it is without them! Period. hawkie and meejah 
are experienced, creative, precise and just cool Python devs, can't say 
how happy we are to work with them;)

Then the "File Upload Service" was contributed by

Marko (Record Evolution)
https://www.record-evolution.com/

Record Evolution is using Crossbar.io and Autobahn throughout their 
RE.base and RE.porter products. Happy users make new contributors!

You can find the docs for the new user visible features here:

http://crossbar.io/docs/File-Upload-Service/
http://crossbar.io/docs/HTTP-Bridge-Services-Webhook/
http://crossbar.io/docs/Logging-in-Crossbar.io/
http://crossbar.io/docs/Configuring-Crossbar.io's-Logging/

Ah, speaking of docs. Yeah, needs to improve, we know. And it's coming! 
We have a complete new launch of the Crossbar.io Web site including docs 
in the cooking. Stay tuned!

Cheers,
/Tobias






From tommost at gmail.com  Mon Sep  7 22:44:54 2015
From: tommost at gmail.com (Tom Most)
Date: Mon, 7 Sep 2015 21:44:54 -0700
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <55EC9FF2.2080008@tavendo.de>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
 <55EC9FF2.2080008@tavendo.de>
Message-ID: <55EE67C6.6060707@gmail.com>

Would str(failure.value) work?  It should be stable from 2.x to 3.x,
barring Unicode differences:

https://docs.python.org/2/library/exceptions.html#exceptions.BaseException
https://docs.python.org/3.5/library/exceptions.html#BaseException

(This convention is quite handy when you want to defer formatting of a
fancy exception message.  Just pass args to the constructor and override
__str__ to do the expensive formatting.)

---Tom

On 09/06/2015 01:20 PM, Tobias Oberstein wrote:
>> Put differently, Twisted's "the first one's free" policy applies to
>> upgrading Twisted itself, and /not/ to upgrading Python (or any other
>> dependency).  If you upgrade Python and you need to update your code for
>> that, Twisted won't create any additional problems but it won't go out
>> of its way to solve the ones you normally have to deal with.
>>
>> Sound good?
>
> Sounds good. We're fine.
>
> FWIW, we need to guard for even more cases
>
> .message there
> .args there _and_ a tuple _and_ of length > 0
>
> https://github.com/tavendo/AutobahnPython/commit/303d289de4993b5ffa9bf90c6fed71364f3521e7#diff-ced6a7641cc1e78205bd85d77b484c03R111
>
>
> /Tobias
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From adi at roiban.ro  Mon Sep  7 23:55:42 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 8 Sep 2015 08:55:42 +0300
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
Message-ID: <CAFycZ9fn08zt856J5Y088-+UeJAr+=DgzC2inaSMA_B4Xkb5LQ@mail.gmail.com>

On 6 September 2015 at 06:07, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Sep 5, 2015, at 04:03, Amber Hawkie Brown <hawkowl at atleastfornow.net>
> wrote:
>
snip

> It's Python's API which has changed here, so I don't think that it's
> Twisted's responsibility to replicate this behavior.  Subclassing is bad,
> and Python's changes of public attributes to such a core language-feature
> level class as Exception is extra bad, but I think that attempting to
> simultaneously support every version of Python's public API via Twisted
> would be a mistake.

What harmed is done if the twisted.internet.error.ProcessTerminated
exception has an explicit message attribute?

Thanks!

-- 
Adi Roiban


From glyph at twistedmatrix.com  Tue Sep  8 00:37:07 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 7 Sep 2015 23:37:07 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
Message-ID: <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>


> On Sep 2, 2015, at 6:08 PM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
> 
> Hi Team,

Hi Roshan!

Sorry it took a while to get back to you.  Busy week.

> I am sorry if this is coming off as a newbie question. Its probably because I don't understand it enough.

Newbie questions are fine, no need to apologize :).

> I would like to:
> 
> 1. connectTCP to a host, port

You should not use connectTCP directly.  Use Endpoints: <https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html <https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html>>.  (But this doesn't affect the rest of your question.)

> 2. use the transport to write

Should be easy enough; `self.transport.write?.

> 3. Use consumer to read from the transport what the tcp server has written to

You don't need to use the producer / consumer API just to read from the transport.  The transport does this automatically, and calls your protocol's dataReceived method every time data is received from the transport.

> I wasn't able to find information on consumer and how it gets triggered when data is available especially in the case I have

I'm not sure what you mean about "how it gets triggered"; the producer and consumer APIs are documented here: <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html>> but it would help if you could explain what exactly you're trying to achieve with them.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150907/c02d7b00/attachment.html>

From dynamicgl at gmail.com  Tue Sep  8 00:48:52 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Tue, 8 Sep 2015 14:48:52 +0800
Subject: [Twisted-Python] error on log module (twisted python 3)
Message-ID: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>

Hi All

    I just noticed my app raised an exception such as

Traceback (most recent call last):

  File "/home/m/py343/lib/python3.4/runpy.py", line 170, in
_run_module_as_main

    "__main__", mod_spec)

  File "/home/m/py343/lib/python3.4/runpy.py", line 85, in _run_code

    exec(code, run_globals)

  File "gw_go.zip/__main__.py", line 8, in <module>

  File "gw_go.zip/gw_server2/gw_go.py", line 87, in main

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
48, in fromFullPath

    os.path.dirname(logPath), *args, **kwargs)

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
40, in __init__

    self._openFile()

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
238, in _openFile

    BaseLogFile._openFile(self)

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
75, in _openFile

    self._file = file(self.path, "w+", 1)

NameError: name 'file' is not defined


     I used python 3.4 and twisted 15.40 (from pip) under ubuntu 14.04.


Regards


gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/a4194e95/attachment.html>

From wangliyu at dhcc.com.cn  Tue Sep  8 00:51:39 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Tue, 08 Sep 2015 14:51:39 +0800
Subject: [Twisted-Python] Auto-Re:  error on log module (twisted python 3)
Message-ID: <150908145139095c6d5eeb3e25cc362bd320853388b9@dhcc.com.cn>

??????????????????

----
--------------------------
Best Regards,

???

--------------------------

DHC Software Co.,Ltd.

????????

Add?11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

??????????????3????????11?

?? 100190   ???18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/14d51cad/attachment.html>

From glyph at twistedmatrix.com  Tue Sep  8 00:51:14 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 7 Sep 2015 23:51:14 -0700
Subject: [Twisted-Python] HAProxy and twisted TCP/IP support
In-Reply-To: <CALWC=NAQL57CSpBSLqARmkZjKzbiHdYTLp275Rc4q1HHuWQNRw@mail.gmail.com>
References: <CALWC=NAQL57CSpBSLqARmkZjKzbiHdYTLp275Rc4q1HHuWQNRw@mail.gmail.com>
Message-ID: <A26CF3BB-3692-4B65-B3FC-FDA633514E18@twistedmatrix.com>


> On Aug 31, 2015, at 11:48 PM, Zuhaib Siddique <zuhaib at hipchat.com> wrote:
> 
> Hey all,

Hi Zuhaib!  Thanks for writing.

> I am looking at using HAProxy in front of Twisted for TCP connection and need to pass the source IP along.  We are currently looking at hacking tcp.py to add support for this: http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt but wondering if this is something someone is already working on for twisted or maybe I dont need to hack tcp.py.

I am not aware of an implementation of this protocol, but it looks very interesting!  The usual argument I hear for load-balancing HTTP rather than TCP is that you lose information about the network protocol you're speaking that would be preserved by the "Forwarded" or "X-Forwarded-For" header.  But if Twisted supported this protocol then it could live behind haproxy with no loss of information, regardless of protocol!  And if it had a server-side version of this it could load-balance other similarly equipped software.  Exciting possibilities all around.

Hacking tcp.py is definitely the wrong way to go about implementing it, though.

The right way to go about this would be to implement a transceiver: something that implements a protocol for its transport, and implements a transport for another protocol.  The best example of this within Twisted right now is twisted.protocols.tls, the OpenSSL integration that superseded our much grosser, less flexible hacking of tcp.py.

So for this proxy protocol, you'd have a protocol that waited until it received the full PROXY protocol header (whether text-based or binary) and implement ITCPTransport to have values in getHost() and getPeer() that correspond to the values received from the PROXY message.

Does that make sense?

If I have an idle moment I might try my hand at an implementation myself, but I am not always super reliable ;-).

> Thanks
> Zuhaib

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150907/2a0d45c8/attachment-0001.html>

From glyph at twistedmatrix.com  Tue Sep  8 00:57:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 7 Sep 2015 23:57:18 -0700
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <CAFycZ9fn08zt856J5Y088-+UeJAr+=DgzC2inaSMA_B4Xkb5LQ@mail.gmail.com>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
 <CAFycZ9fn08zt856J5Y088-+UeJAr+=DgzC2inaSMA_B4Xkb5LQ@mail.gmail.com>
Message-ID: <F8911FF3-C9EF-4BB3-B998-4F7CA74A6027@twistedmatrix.com>


> On Sep 7, 2015, at 10:55 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> It's Python's API which has changed here, so I don't think that it's
>> Twisted's responsibility to replicate this behavior.  Subclassing is bad,
>> and Python's changes of public attributes to such a core language-feature
>> level class as Exception is extra bad, but I think that attempting to
>> simultaneously support every version of Python's public API via Twisted
>> would be a mistake.
> 
> What harmed is done if the twisted.internet.error.ProcessTerminated
> exception has an explicit message attribute?

I don't like the precedent it sets; this is not part of the compatibility contract we provide, and we already spend tons of energy on compatibility :-).  Maintaining stuff like this - and like old-style classes - would be a ton of additional work for no real benefit.
`.message? and `.args? are implementation accidents, not things that anyone should be relying on in a public API.  If we wanted to provide some structured information for programs to use from ProcessTerminated, let's actually give it a good API that documents what it means, and not just stick a random string or some tuples on an object.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150907/2e7d5f8e/attachment.html>

From glyph at twistedmatrix.com  Tue Sep  8 01:16:45 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 8 Sep 2015 00:16:45 -0700
Subject: [Twisted-Python] error on log module (twisted python 3)
In-Reply-To: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>
References: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>
Message-ID: <F117E5E1-568F-4F61-B849-A606ECB235CE@twistedmatrix.com>



> On Sep 7, 2015, at 11:48 PM, Gelin Yan <dynamicgl at gmail.com> wrote:
> 
> Hi All
> 
>     I just noticed my app raised an exception such as
> 
> Traceback (most recent call last):
> 
>   File "/home/m/py343/lib/python3.4/runpy.py", line 170, in _run_module_as_main
> 
>     "__main__", mod_spec)
> 
>   File "/home/m/py343/lib/python3.4/runpy.py", line 85, in _run_code
> 
>     exec(code, run_globals)
> 
>   File "gw_go.zip/__main__.py", line 8, in <module>
> 
>   File "gw_go.zip/gw_server2/gw_go.py", line 87, in main
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 48, in fromFullPath
> 
>     os.path.dirname(logPath), *args, **kwargs)
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 40, in __init__
> 
>     self._openFile()
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 238, in _openFile
> 
>     BaseLogFile._openFile(self)
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 75, in _openFile
> 
>     self._file = file(self.path, "w+", 1)
> 
> NameError: name 'file' is not defined
> 
> 
> 
>      I used python 3.4 and twisted 15.40 (from pip) under ubuntu 14.04.
> 

twisted.python.logfile was not fully ported as of Twisted 15.4; just the syntax.  So this error is expected.  However, you may be pleased to hear that the fix landed last week: https://twistedmatrix.com/trac/ticket/6749 <https://twistedmatrix.com/trac/ticket/6749> and will be in 15.5.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/3889293f/attachment.html>

From glyph at twistedmatrix.com  Tue Sep  8 01:44:17 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 8 Sep 2015 00:44:17 -0700
Subject: [Twisted-Python] Converting str to bytes in Py3 port
In-Reply-To: <CAFycZ9fkkV3nRmE9D7wOXu6oik04GKuGwAH5pW41rMGK5rjHOg@mail.gmail.com>
References: <CAFycZ9fkkV3nRmE9D7wOXu6oik04GKuGwAH5pW41rMGK5rjHOg@mail.gmail.com>
Message-ID: <04F5FB77-45F5-4721-ACEE-89C3F04E7035@twistedmatrix.com>


> On Sep 2, 2015, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> While reviewing the latest patch related to porting Twisted to py3 I
> saw that many values which were supposed to hold just text were ported
> as bytes.

This is fairly ambiguous, since it depends quite closely on what exact values they were.

> The argument for this conversion was that Twisted is a low level
> framework and that other high level framworks like Treq or Klein
> should implement the required code so that end user can just use text.

When high-level 

> For example the HTTP response messages are not bytes, even if the RFC
> specified that they should only contain text with a single encoding.

By "response messages" do you mean

response headers (which are ASCII-punned bytes, or text with a restricted character set, depending on your philosophical disposition)
response bodies (which are unambiguously bytes, unless you interpret them according to their content-type, in which case they are arbitrary objects, one type of which may be text)
response status codes (which are sort of like headers, except not, except maybe they're integers)
response status text (which are arguably text, but do not feature an encoding, and are therefore in the same grey area as headers)

?

> I have little experience with twisted.web, so maybe there are many
> users of twisted.web which use binary data for response messages or
> maybe there is a good use case for putting random bytes in the HTTP
> response message.

The main use-case is the Python zen, "refuse the temptation to guess".  Treq and Klein can provide good default ways to interpret things, but some applications will need to get underneath those defaults and treat things differently.

> If for twisted.web there are Treq or Klein to implement the user
> friendly interfaces, I don't know what can be used for twisted.conch

Clearly we need to write some new code.

> In the ticket for porting twisted.conch.ssh.key to py3 [1] the name of
> the ssh key algorithms like 'ssh-rsa' or 'ssh-dsa', encryption
> algorithm names like AES-128-CBC and ssh key components like p, q, y,
> x, n, e are now all bytes.
> 
> Do you think that this is ok?

Yes, and here's why: those values are all enumerated constants.  They come off the wire as bytes, in no particular encoding (these happen to be ASCII, but is there a guarantee that all future algorithm names will also be?), and then they have to be treated specially.  A good, high-level API for this would use twisted.python.constants, and not bother application code with bytes or text.  Given that what is implemented is all pretty low-level, bytes make sense.

That said, if there were a good case for ASCII being the declared encoding and having some authoritative sense that that's what we should use, then we should use it.  Except that the 2.x types already use bytes, and so we'd have to either go with "native str" (which is a very problematic type, and should be avoided for everything except Python identifiers and docstrings, or things that need to be processed into them.)

> Why allow or encourage people to use random bytes for fields which
> should contain human readable text?

If you encounter an entity that can read the string "ssh-rsa" and truly comprehend it, chances are good you are not dealing with a human.

> For HTTP response line and response headers I think that all values should be text and encoded in ISO-8859-1.

> RFC 4819 [2] only talks about using US-ASCII for all names used in the
> SSH public key subsystem.
> Why use bytes to represent these names?

You might be correct according to the specification (although it remains to be seen if you're right as far as implementations are concerned); however, why would it be useful to decode these values into bytes?  Should we be processing them as text?  In what context?

> RFC 4716 specifies that header tags must be US-ASCII while header
> value UTF-8 ... while all IANA names are US-ASCII.... and names in the
> private namespace (name at domain) should also be US-ASCII.

> As a reviewer I don't know that is the degin/architecture choose by
> Twisted and how to review such changes.

It is not necessarily possible to rationalize every decision that has been made thus far as being part of one grand plan.  For one thing, many of them have been taken by different people.  For another, we learn things as we go along, and so some of the decisions made thus far are now recognized as mistakes.  So at this point I think it is best that you just state your preferred design and we discuss the pros and cons of that.

To the extent that there has been a conscious design strategy, it's something like this: every API needs one layer at which it needs to treat most of its data as bytes.  (Sadly) few Twisted APIs have nice, discrete higher layers with objects that represent meaningful user actions rather than protocol trivia.  So the existing strategy has been around making the lower levels consistently manipulate bytes everywhere, in the hope that we will promote these objects to more high-level types in a different layer later (hence the "well, in klein and treq..." answers).

> As a developer I prefer to have as much text as possible so that I can
> do text manipulation operation on these values and directly include
> them in logs or error messages.

OK, so the main utility of treating them as text is being able to concatenate them into diagnostic messages?  Can this not be done with bytes equally well?  This is the main thing to focus on, I think: concrete useful things you could do with text in these places where bytes are sub-optimal.

> I assume that all the people involved in writing the RFC had a good
> reason to require those fields to be text rather than any bytes.
> 
> Thanks for your feedback!

Thank you for prompting this conversation, adi, we do need a better communicated strategy around how we handle text and encodings when protocols stipulate that the things they're dealing with are text.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/2fcb45f3/attachment-0001.html>

From dynamicgl at gmail.com  Tue Sep  8 01:57:27 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Tue, 8 Sep 2015 15:57:27 +0800
Subject: [Twisted-Python] error on log module (twisted python 3)
In-Reply-To: <F117E5E1-568F-4F61-B849-A606ECB235CE@twistedmatrix.com>
References: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>
 <F117E5E1-568F-4F61-B849-A606ECB235CE@twistedmatrix.com>
Message-ID: <CABkOF6TtXigzdgDg_qRzC0fAZQPGnxYLviyAmV8DJBBTg7kQkA@mail.gmail.com>

On Tue, Sep 8, 2015 at 3:16 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Sep 7, 2015, at 11:48 PM, Gelin Yan <dynamicgl at gmail.com> wrote:
>
> Hi All
>
>     I just noticed my app raised an exception such as
>
> Traceback (most recent call last):
>
>   File "/home/m/py343/lib/python3.4/runpy.py", line 170, in
> _run_module_as_main
>
>     "__main__", mod_spec)
>
>   File "/home/m/py343/lib/python3.4/runpy.py", line 85, in _run_code
>
>     exec(code, run_globals)
>
>   File "gw_go.zip/__main__.py", line 8, in <module>
>
>   File "gw_go.zip/gw_server2/gw_go.py", line 87, in main
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 48, in fromFullPath
>
>     os.path.dirname(logPath), *args, **kwargs)
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 40, in __init__
>
>     self._openFile()
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 238, in _openFile
>
>     BaseLogFile._openFile(self)
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 75, in _openFile
>
>     self._file = file(self.path, "w+", 1)
>
> NameError: name 'file' is not defined
>
>
>      I used python 3.4 and twisted 15.40 (from pip) under ubuntu 14.04.
>
>
> twisted.python.logfile was not fully ported as of Twisted 15.4; just the
> syntax.  So this error is expected.  However, you may be pleased to hear
> that the fix landed last week: https://twistedmatrix.com/trac/ticket/6749 and
> will be in 15.5.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Glyph

    I just found out the ticket you mentioned. It looks like 15.4 doesn't
include it. I am waiting for the next release. For now, I have to use the
standard logging system.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/fd9f9c52/attachment.html>

From bra at fsn.hu  Tue Sep  8 08:51:04 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Tue, 8 Sep 2015 16:51:04 +0200
Subject: [Twisted-Python] Asynchronously initializing objects in twisted.web?
Message-ID: <55EEF5D8.7020709@fsn.hu>

Hi,

I wonder, if I have this example program:
https://twistedmatrix.com/documents/current/web/howto/using-twistedweb.html#site-objects

how do I initialize an external resource (like a dictionary, which is 
fetched from a database) with asynchronous twisted tools, but before the 
HTTP server starts listening on its port?
The goal here is that the HTTP server shouldn't start until it can fetch 
the desired data. Of course I can do this in a synchronous way, but it 
feels so unnatural and bad practice to fetch the same stuff 
synchronously on initialization and asynchronously when the 
program/reactor is running (often with different libraries).

Thanks,


From p.mayers at imperial.ac.uk  Tue Sep  8 10:07:15 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 8 Sep 2015 17:07:15 +0100
Subject: [Twisted-Python] Asynchronously initializing objects in
 twisted.web?
In-Reply-To: <55EEF5D8.7020709@fsn.hu>
References: <55EEF5D8.7020709@fsn.hu>
Message-ID: <55EF07B3.6010104@imperial.ac.uk>

On 08/09/15 15:51, Nagy, Attila wrote:

> The goal here is that the HTTP server shouldn't start until it can fetch
> the desired data. Of course I can do this in a synchronous way, but it
> feels so unnatural and bad practice to fetch the same stuff

Load the resources in a callback using "reactor.callWhenRunning" and 
only then call reactor.listenTCP or whatever.


From a at runtel.ru  Tue Sep  8 12:41:06 2015
From: a at runtel.ru (Alexey Panyovin)
Date: Tue, 8 Sep 2015 21:41:06 +0300
Subject: [Twisted-Python] Asynchronously initializing objects in
 twisted.web?
In-Reply-To: <55EEF5D8.7020709@fsn.hu>
References: <55EEF5D8.7020709@fsn.hu>
Message-ID: <55EF2BC2.8000701@runtel.ru>

from twisted.webimport server, resource
from twisted.internetimport reactor, defer

class Simple(resource.Resource):
     isLeaf =True def render_GET(self, request):
         return "<html>Hello, world!</html>" def call_me():
     d = defer.Deferred()
     print "Get something" d.callback("success")
     return d

def run_web(_):
     print "run_web" site = server.Site(Simple())
     reactor.listenTCP(8080, site)

d = call_me()
d.addCallback(run_web)
reactor.run()

--
Alex

08.09.15 17:51, Nagy, Attila ?????:

> Hi,
>
> I wonder, if I have this example program:
> https://twistedmatrix.com/documents/current/web/howto/using-twistedweb.html#site-objects 
>
>
> how do I initialize an external resource (like a dictionary, which is 
> fetched from a database) with asynchronous twisted tools, but before 
> the HTTP server starts listening on its port?
> The goal here is that the HTTP server shouldn't start until it can 
> fetch the desired data. Of course I can do this in a synchronous way, 
> but it feels so unnatural and bad practice to fetch the same stuff 
> synchronously on initialization and asynchronously when the 
> program/reactor is running (often with different libraries).
>
> Thanks,
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/f200ba5d/attachment.html>

From glyph at twistedmatrix.com  Tue Sep  8 16:21:01 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 8 Sep 2015 15:21:01 -0700
Subject: [Twisted-Python] Asynchronously initializing objects in
	twisted.web?
In-Reply-To: <55EF07B3.6010104@imperial.ac.uk>
References: <55EEF5D8.7020709@fsn.hu> <55EF07B3.6010104@imperial.ac.uk>
Message-ID: <4DFEC71E-E0C5-4921-B0F4-E70AD6E704B7@twistedmatrix.com>


> On Sep 8, 2015, at 9:07 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> Load the resources in a callback using "reactor.callWhenRunning" and only then call reactor.listenTCP or whatever.

Just trying to use every opportunity I can to say this: don't use listenTCP, use endpoints: https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html <https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html>

:)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/351d33c2/attachment.html>

From cherian.rosh at gmail.com  Wed Sep  9 00:24:26 2015
From: cherian.rosh at gmail.com (Roshan Cherian)
Date: Tue, 8 Sep 2015 23:24:26 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
Message-ID: <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>

Hi Glyph and David,

Thanks for your answers and thanks for taking time to answer. It was indeed
my wrong understanding. I was trying to understand what
HTTPClientChannelRequest does in terms of producer and consumer (Its a lot
deep considering me being relatively new at this). Looking further at the
code I do understand that we have a producer which generates the necessary
data which can be written out using the transport and we have a consumer
which works of the data from the dataReceived (I hope my understanding is
correct and I don't know how it is buffered and I don't know how the flow
tells the consumer that there is data for use).

I understand there is
https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html,
however I was hoping if there is an example of a simple consumer which
could be written using the data from dataReceived (that is assuming
whatever I understood above is correct). I didn't find enough information
on how to create a consumer.

Thanks,
-Roshan


On Mon, Sep 7, 2015 at 11:37 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Sep 2, 2015, at 6:08 PM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
>
> Hi Team,
>
>
> Hi Roshan!
>
> Sorry it took a while to get back to you.  Busy week.
>
> I am sorry if this is coming off as a newbie question. Its probably
> because I don't understand it enough.
>
>
> Newbie questions are fine, no need to apologize :).
>
> I would like to:
>
> 1. connectTCP to a host, port
>
>
> You should not use connectTCP directly.  Use Endpoints: <
> https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html>.
>  (But this doesn't affect the rest of your question.)
>
> 2. use the transport to write
>
>
> Should be easy enough; `self.transport.write?.
>
> 3. Use consumer to read from the transport what the tcp server has written
> to
>
>
> You don't need to use the producer / consumer API just to read from the
> transport.  The transport does this automatically, and calls your
> protocol's dataReceived method every time data is received from the
> transport.
>
> I wasn't able to find information on consumer and how it gets triggered
> when data is available especially in the case I have
>
>
> I'm not sure what you mean about "how it gets triggered"; the producer and
> consumer APIs are documented here: <
> https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html> but
> it would help if you could explain what *exactly* you're trying to
> achieve with them.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150908/eff32201/attachment.html>

From bra at fsn.hu  Wed Sep  9 01:27:46 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Wed, 9 Sep 2015 09:27:46 +0200
Subject: [Twisted-Python] Asynchronously initializing objects in
 twisted.web?
In-Reply-To: <55EF2BC2.8000701@runtel.ru>
References: <55EEF5D8.7020709@fsn.hu> <55EF2BC2.8000701@runtel.ru>
Message-ID: <55EFDF72.7010903@fsn.hu>

Ah, I was under the impression that listenTCP() can only be called 
before reactor.run().
I don't now where it came from.

Thanks,

On 09/08/15 20:41, Alexey Panyovin wrote:
> from twisted.webimport server, resource
> from twisted.internetimport reactor, defer
>
> class Simple(resource.Resource):
>      isLeaf =True def render_GET(self, request):
>          return "<html>Hello, world!</html>" def call_me():
>      d = defer.Deferred()
>      print "Get something" d.callback("success")
>      return d
>
> def run_web(_):
>      print "run_web" site = server.Site(Simple())
>      reactor.listenTCP(8080, site)
>
> d = call_me()
> d.addCallback(run_web)
> reactor.run()
>
> --
> Alex
>
> 08.09.15 17:51, Nagy, Attila ?????:
>> Hi,
>>
>> I wonder, if I have this example program:
>> https://twistedmatrix.com/documents/current/web/howto/using-twistedweb.html#site-objects 
>>
>>
>> how do I initialize an external resource (like a dictionary, which is 
>> fetched from a database) with asynchronous twisted tools, but before 
>> the HTTP server starts listening on its port?
>> The goal here is that the HTTP server shouldn't start until it can 
>> fetch the desired data. Of course I can do this in a synchronous way, 
>> but it feels so unnatural and bad practice to fetch the same stuff 
>> synchronously on initialization and asynchronously when the 
>> program/reactor is running (often with different libraries).
>>
>> Thanks,
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150909/3da67879/attachment-0001.html>

From adi at roiban.ro  Wed Sep  9 08:51:48 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 9 Sep 2015 17:51:48 +0300
Subject: [Twisted-Python] Usage of diffresource in Twisted's Trac
Message-ID: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>

Is there anybody still using the diffresource links in Trac tickets?

If you are still using it, do you think you can use the GitHub diff instead?

Can we remove it from Trac?

I prefer the GitHub diff as I can use side-by-side view and expand the
diff or go to full file.

Here is the associated ticket https://github.com/twisted-infra/braid/issues/102

Thanks!
-- 
Adi Roiban


From wangliyu at dhcc.com.cn  Wed Sep  9 08:55:40 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Wed, 09 Sep 2015 22:55:40 +0800
Subject: [Twisted-Python] Auto-Re: Usage of diffresource in Twisted's Trac
Message-ID: <150909225540ffc6fcef908ca3f377a6425d0e94174d@dhcc.com.cn>

??????????????????

----
--------------------------
Best Regards,

???

--------------------------

DHC Software Co.,Ltd.

????????

Add?11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

??????????????3????????11?

?? 100190   ???18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150909/6a218a87/attachment.html>

From glyph at twistedmatrix.com  Wed Sep  9 12:31:27 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Sep 2015 11:31:27 -0700
Subject: [Twisted-Python] Usage of diffresource in Twisted's Trac
In-Reply-To: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>
References: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>
Message-ID: <F18BB42F-DA53-41C2-B679-670FBE763431@twistedmatrix.com>


> On Sep 9, 2015, at 7:51 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Is there anybody still using the diffresource links in Trac tickets?
> 
> If you are still using it, do you think you can use the GitHub diff instead?
> 
> Can we remove it from Trac?
> 
> I prefer the GitHub diff as I can use side-by-side view and expand the
> diff or go to full file.
> 
> Here is the associated ticket https://github.com/twisted-infra/braid/issues/102 <https://github.com/twisted-infra/braid/issues/102>

I still use it sometimes to apply the current patch to a working copy: quicker to type the URL.

That said I think that removing it is an acceptable regression for the git migration; it should be trivial to re-implement using git if anyone (including me) cares enough, and it should be substantially faster.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150909/8f82609b/attachment.html>

From glyph at twistedmatrix.com  Wed Sep  9 12:40:14 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Sep 2015 11:40:14 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
 <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
Message-ID: <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>


> On Sep 8, 2015, at 11:24 PM, Roshan Cherian <cherian.rosh at gmail.com <mailto:cherian.rosh at gmail.com>> wrote:
> 
> I understand there is https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html>, however I was hoping if there is an example of a simple consumer which could be written using the data from dataReceived (that is assuming whatever I understood above is correct). I didn't find enough information on how to create a consumer.

What do you mean by "create a consumer"?  You already have an IConsumer created for you: your transport.  Do you want to implement your own?  For what reason?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150909/b4c26b02/attachment.html>

From radix at twistedmatrix.com  Wed Sep  9 12:59:12 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 9 Sep 2015 13:59:12 -0500
Subject: [Twisted-Python] Usage of diffresource in Twisted's Trac
In-Reply-To: <F18BB42F-DA53-41C2-B679-670FBE763431@twistedmatrix.com>
References: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>
 <F18BB42F-DA53-41C2-B679-670FBE763431@twistedmatrix.com>
Message-ID: <BC694424-A625-4620-B04F-C1C68B60C45A@twistedmatrix.com>


> On Sep 9, 2015, at 1:31 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Sep 9, 2015, at 7:51 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Is there anybody still using the diffresource links in Trac tickets?
>> 
>> If you are still using it, do you think you can use the GitHub diff instead?
>> 
>> Can we remove it from Trac?
>> 
>> I prefer the GitHub diff as I can use side-by-side view and expand the
>> diff or go to full file.
>> 
>> Here is the associated ticket https://github.com/twisted-infra/braid/issues/102 <https://github.com/twisted-infra/braid/issues/102>
> 
> I still use it sometimes to apply the current patch to a working copy: quicker to type the URL.
> 

Not sure if you know this, but if you click the ?github? link under the branch name, and then add ?.patch? to the end of a URL, you get a patch file that you can apply to a working copy.


> That said I think that removing it is an acceptable regression for the git migration; it should be trivial to re-implement using git if anyone (including me) cares enough, and it should be substantially faster.
> 

-radix
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150909/00b9391a/attachment.html>

From cherian.rosh at gmail.com  Wed Sep  9 20:36:11 2015
From: cherian.rosh at gmail.com (Roshan Cherian)
Date: Wed, 9 Sep 2015 19:36:11 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
 <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
 <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>
Message-ID: <CAHL69gE5S4_wA87oVEB3-unP405CFebwEQJUSJVH=cP023F-CA@mail.gmail.com>

Thanks Glyph for setting my understanding right on this. By create a
consumer I meant having to write one purely to understand the concept and
have one running example so that when looking at consumers like
ProducerStream it will make my understanding more clear.

Thanks,
-Roshan

On Wed, Sep 9, 2015 at 11:40 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Sep 8, 2015, at 11:24 PM, Roshan Cherian <cherian.rosh at gmail.com>
> wrote:
>
> I understand there is
> https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html,
> however I was hoping if there is an example of a simple consumer which
> could be written using the data from dataReceived (that is assuming
> whatever I understood above is correct). I didn't find enough information
> on how to create a consumer.
>
>
> What do you mean by "create a consumer"?  You already have an IConsumer
> created for you: your transport.  Do you want to implement your own?  For
> what reason?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150909/0b747964/attachment.html>

From glyph at twistedmatrix.com  Wed Sep  9 21:15:25 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Sep 2015 20:15:25 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gE5S4_wA87oVEB3-unP405CFebwEQJUSJVH=cP023F-CA@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
 <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
 <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>
 <CAHL69gE5S4_wA87oVEB3-unP405CFebwEQJUSJVH=cP023F-CA@mail.gmail.com>
Message-ID: <22AE9AAE-2D63-4059-8307-04327B6AB75A@twistedmatrix.com>

The best way to come to a good understanding of IConsumer and IProducer is to write something that transfers large amounts of data over a slow, or heavily asymmetric link, and make sure its memory usage stays consistent; just implementing the methods on IConsumer won't be that illuminating.

> On Sep 9, 2015, at 7:36 PM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
> 
> Thanks Glyph for setting my understanding right on this. By create a consumer I meant having to write one purely to understand the concept and have one running example so that when looking at consumers like ProducerStream it will make my understanding more clear.
> 
> Thanks,
> -Roshan
> 
> On Wed, Sep 9, 2015 at 11:40 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Sep 8, 2015, at 11:24 PM, Roshan Cherian <cherian.rosh at gmail.com <mailto:cherian.rosh at gmail.com>> wrote:
>> 
>> I understand there is https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html>, however I was hoping if there is an example of a simple consumer which could be written using the data from dataReceived (that is assuming whatever I understood above is correct). I didn't find enough information on how to create a consumer.
> 
> What do you mean by "create a consumer"?  You already have an IConsumer created for you: your transport.  Do you want to implement your own?  For what reason?
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150909/3bf27315/attachment-0001.html>

From glyph at twistedmatrix.com  Fri Sep 11 16:16:31 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Sep 2015 15:16:31 -0700
Subject: [Twisted-Python] call for volunteers: fundraising
Message-ID: <8408F70B-8483-4835-A696-DC7952014F86@twistedmatrix.com>

Hi all,

The Twisted project needs volunteers to help us with fundraising.

Although we have several sponsor logos on the front page of our website, all but only one of them, Variomedia (thanks Variomedia!) is actually current; every other sponsor has expired, and we just haven't gotten around to removing them yet.  (So if you work at Dyn, Olark, or CritSend please remind your employer to renew!)

As you may know, Twisted is a member project of the Software Freedom Conservancy https://sfconservancy.org <https://sfconservancy.org/>, so that you can donate to the project as a tax-deductable 501(c)3 donation in the United States.

Unfortunately, the project leadership committee who interfaces with the SFC - including myself - is a very busy group of people who don't have a lot of time to dedicate to the nuts and bolts of working with a non-profit.  The SFC itself provides basic support for our sponsorship program, helping us write ad copy, updating the logos on the website, and reminding sponsors when their sponsorships have expired - but they can't do all of our fundraising for us.  We need someone to find potential sponsors, speak on behalf of the project, and generally be good at following up email requests and answering questions about the program, and to work with the SFC on the Twisted project's behalf.

In the past we've had a lot of success with sponsoring development; you can see our history of sponsored development on http://labs.twistedmatrix.com <http://labs.twistedmatrix.com/>.  Dedicated reviewers and focused effort on specific problems have made the project much more long-term viable.  But if we run out of sponsors completely we will no longer be able to do that.

Would anyone like to volunteer to do some fundraising, and in the process, possibly save Twisted? :-)

Thanks in advance,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150911/e4ca1b64/attachment.html>

From trac at twistedmatrix.com  Sun Sep 13 00:05:29 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 13 Sep 2015 06:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1442124329.32.490962463044573562@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150913/be2b6852/attachment.html>

From mark at tearle.com  Wed Sep 16 10:26:39 2015
From: mark at tearle.com (Mark Tearle)
Date: Thu, 17 Sep 2015 00:26:39 +0800
Subject: [Twisted-Python] Fwd: Re:  npyscreen Twisted Reactor
Message-ID: <1442420799.2934367.385438057.29167ECF@webmail.messagingengine.com>

Hi folks

A quick email to alert folks to an updated version of the Twisted
Reactor that I wrote for use with npyscreen.

Npyscreen is a python widget library and application framework for
programming terminal or console applications. It is built on top of
ncurses, which is part of the standard library.   It is written by
Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)


Updates include:
* Addition of setuptools config
* Registered on PyPI
* Change of repository name

It can now be installed via pip.

The reactor and examples can be found at:

https://github.com/mtearle/npyscreenreactor


Patches, bug reports, etc welcome...


Mark

-- 
Mark Tearle <mtearle at tearle.com>

Everyone thinks of changing the world, but no one thinks of changing
himself. - Tolstoy




From glyph at twistedmatrix.com  Wed Sep 16 13:42:12 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 16 Sep 2015 12:42:12 -0700
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <1442420799.2934367.385438057.29167ECF@webmail.messagingengine.com>
References: <1442420799.2934367.385438057.29167ECF@webmail.messagingengine.com>
Message-ID: <0A4D5C9F-0DE5-4F3B-AF24-811DB0844389@twistedmatrix.com>


> On Sep 16, 2015, at 9:26 AM, Mark Tearle <mark at tearle.com> wrote:
> 
> Hi folks
> 
> A quick email to alert folks to an updated version of the Twisted
> Reactor that I wrote for use with npyscreen.

Thanks for the update, Mark!  Always great to see Twisted-aligned projects like this making progress.

And thanks also for the name change!

-glyph

From jerryguitarist at gmail.com  Thu Sep 17 18:41:24 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Thu, 17 Sep 2015 22:11:24 -0230
Subject: [Twisted-Python] Paid summer work for the Twisted Software
	Foundation
Message-ID: <CA+2gYipiivcC2efPQD9H6rdbtQVZy-74JgoEo1vZgasGNrS++w@mail.gmail.com>

Hello!

I recently moved to St. John's, NL, Canada to study at the Memorial
University of Newfoundland. And I was wondering if I can do some paid
summer work for Twisted next summer? It would be a great learning
experience for me, and not to mention that it would also help me pay my
tuition.

The reason I am asking this question now is because I think it will give me
some time to prepare and get some guidance from Twisted developers
regarding potential project ideas and what to work on, should you choose to
consider me as a worthy candidate for a paid summer work position for the
Twisted Software Foundation.

Let me know what you think! Eagerly waiting for your reply! :-)

Thanks & regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150917/6ff11114/attachment.html>

From glyph at twistedmatrix.com  Thu Sep 17 23:11:46 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 17 Sep 2015 22:11:46 -0700
Subject: [Twisted-Python] Paid summer work for the Twisted Software
	Foundation
In-Reply-To: <CA+2gYipiivcC2efPQD9H6rdbtQVZy-74JgoEo1vZgasGNrS++w@mail.gmail.com>
References: <CA+2gYipiivcC2efPQD9H6rdbtQVZy-74JgoEo1vZgasGNrS++w@mail.gmail.com>
Message-ID: <43A47322-AFE4-4538-AA04-A9EFCF45A637@twistedmatrix.com>

> On Sep 17, 2015, at 5:41 PM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hello!

Hi Eeshan!

> I recently moved to St. John's, NL, Canada to study at the Memorial University of Newfoundland. And I was wondering if I can do some paid summer work for Twisted next summer? It would be a great learning experience for me, and not to mention that it would also help me pay my tuition.

As it stands right now, we have approved another round of fellowships which will just about exhaust our current budget.  (Hence the call for help with fundraising.)  Hopefully we'll receive lots more sponsors in the coming year, but it's probably best not to count on it.

> The reason I am asking this question now is because I think it will give me some time to prepare and get some guidance from Twisted developers regarding potential project ideas and what to work on, should you choose to consider me as a worthy candidate for a paid summer work position for the Twisted Software Foundation.

Your best bet would be to ensure that there are enough mentors to have Twisted participate in the Google Summer of Code 2016, so you can submit an application to that :-).

I think any area of focus is probably fine, but you should probably pick one specific area to become familiar with in the coming months.  At random, let me pick... twisted.mail?  If you have another focus area feel free to switch, but the important thing is just to pick one and start becoming familiar with it, so that you can evaluate what kinds of larger projects might be possible.

> Let me know what you think! Eagerly waiting for your reply! :-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150917/86b829e1/attachment.html>

From trac at twistedmatrix.com  Sun Sep 20 00:05:37 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 20 Sep 2015 06:05:37 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1442729137.53.42010902309182666@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20150920/130daf21/attachment.html>

From Timothy.Allen at optiver.com.au  Thu Sep 24 22:30:50 2015
From: Timothy.Allen at optiver.com.au (Timothy Allen)
Date: Fri, 25 Sep 2015 14:30:50 +1000
Subject: [Twisted-Python] inlineCallbacks eating unhandled exceptions?
Message-ID: <3925E79A0E74A8438C83BF14914196B46A7C0971F5@OPSYWNSR0152.comp.optiver.com>

The other day I was experimenting with the inlineCallbacks decorator in Twisted 15.4, and occasionally when I'd typo a variable name or similar, I'd  get an "unhandled error" in the log without a traceback, which was rather unhelpful. Eventually, I managed to produce the following test-case:

    https://gist.github.com/OptiverTimAll/43263a7a4cf5a298e8f5

If I run it as-is, I get the following unhelpful output:

    CRITICAL:twisted:Unhandled error in Deferred:
    CRITICAL:twisted:

If I comment out the line that redirects Twisted's logging to the standard library's logging system, I get much more helpful output:

    Unhandled error in Deferred:


    Traceback (most recent call last):
      File "./ic-test.py", line 20, in <module>
        bogus_callback()
      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1274, in unwindGenerator
        return _inlineCallbacks(None, gen, Deferred())
    --- <exception caught here> ---
      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1128, in _inlineCallbacks
        result = g.send(result)
      File "./ic-test.py", line 17, in bogus_callback
        yield does_not_exist()
    exceptions.NameError: global name 'does_not_exist' is not defined

I expected that changing the destination of log messages wouldn't change their content, but apparently I was wrong. I got the incantation for re-routing Twisted's logging system into the Python one by stitching together code-snippets from http://twistedmatrix.com/documents/current/core/howto/logger.html#starting-the-global-log-publisher Is there some better way, or some other thing I should be doing?

--
Timothy Allen
Tools Developer

39 Hunter Street, Sydney NSW 2000
T: +61 2 9275 6000 ? F: +61 2 9275 6150
W: http://www.optiver.com/sydney
We're hiring (lots)!

Information contained in this communication (including any attachments) is confidential and may be privileged or subject to copyright.  If you have received this communication in error you are not authorised to use the information in any way and Optiver requests that you notify the sender by return email, destroy all copies and delete the information from your system.  Optiver does not represent, warrant or guarantee that this communication is free from computer viruses or other defects or that the integrity of this communication has been maintained.  Any views expressed in this communication are those of the individual sender.  Optiver does not accept liability for any loss or damage caused directly or indirectly by this communication or its use.

Please consider the environment before printing this email.


From meejah at meejah.ca  Sun Sep 27 00:26:16 2015
From: meejah at meejah.ca (meejah)
Date: Sun, 27 Sep 2015 10:26:16 +0400
Subject: [Twisted-Python] txtorcon 0.14.0
Message-ID: <86wpvcbcon.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm happy to announce txtorcon 0.14.0. Changes:

 * IStreamAttacher handling was missing None and DO_NOT_ATTACH cases if a Deferred was returned.
 * add .is_built Deferred to txtorcon.Circuit that gets callback()'d when the circuit becomes BUILT
 * David Stainton ported his "tor:" endpoint parser so now both client
   and server endpoints are supported. This means **any** Twisted
   program using endpoints can use Tor as a client. For example, to
   connect to txtorcon's Web site: ep =
   clientFromString("tor:timaq4ygg2iegci7.onion:80").  (In the future,
   I'd like to automatically launch Tor if required, too).
 * Python3 fixes from Isis Lovecruft (note: needs Twisted 15.4.0+)

You can download the release from PyPI or GitHub (or of course "pip
install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.14.0
   https://github.com/meejah/txtorcon/releases/tag/v0.14.0

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0.tar.gz.asc
   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0-py2-none-any.whl
   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0-py2-none-any.whl.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
d44be978dd9521f22333edea49789fe7e19c4bea9a02d63e6ec826d08fb571d1  dist/txtorcon-0.14.0-py2-none-any.whl
a2d0fae65da015840bb392ffc4fd63918168edb6b634941f6b8aa843b338edbf  dist/txtorcon-0.14.0.tar.gz
EOF

thanks,
meejah
-----BEGIN PGP SIGNATURE-----

iQEcBAEBAgAGBQJWB3FqAAoJEMJgKAMSgGmn1fsIAOcqJdIFIO5cIvj7TRv9rxFP
aEW/Vb0UGN2/A2skWxajzYJLeZ0geZaOmYGFyscs+fguIzRaGRX4G8+7xRuIzzim
GqjPd+my2+h79hDpH/RntwQvNmW9K50UCKOH5TiW5fGnjbO0ZkqoK8ln+aGz7WCC
HjRmNTJb7iI/vVs6h66evBHjkgib4lBpZSEnJR6H+c1ZC5hJ0uYt1SFch5IF/UsA
QeISGyc2SE5wuwjLuiHDyPoFC/Q5IEhDWABFgs3Z6LB/2yfnUFEjrtEla1Uq454H
YJ5mWsgxx/apGDXbACQ3p8N5ISA/WDOWHm2Rg+XgZo758KyMyOQIfSy1RrGBld4=
=Wffv
-----END PGP SIGNATURE-----


From glyph at twistedmatrix.com  Mon Sep 28 22:01:04 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 28 Sep 2015 21:01:04 -0700
Subject: [Twisted-Python] inlineCallbacks eating unhandled exceptions?
In-Reply-To: <3925E79A0E74A8438C83BF14914196B46A7C0971F5@OPSYWNSR0152.comp.optiver.com>
References: <3925E79A0E74A8438C83BF14914196B46A7C0971F5@OPSYWNSR0152.comp.optiver.com>
Message-ID: <E64D13AF-A21E-4D5B-84A1-4FFF867411A7@twistedmatrix.com>


> On Sep 24, 2015, at 9:30 PM, Timothy Allen <Timothy.Allen at optiver.com.au> wrote:
> 
> The other day I was experimenting with the inlineCallbacks decorator in Twisted 15.4, and occasionally when I'd typo a variable name or similar, I'd  get an "unhandled error" in the log without a traceback, which was rather unhelpful. Eventually, I managed to produce the following test-case:
> 
>    https://gist.github.com/OptiverTimAll/43263a7a4cf5a298e8f5
> 
> If I run it as-is, I get the following unhelpful output:
> 
>    CRITICAL:twisted:Unhandled error in Deferred:
>    CRITICAL:twisted:
> 
> If I comment out the line that redirects Twisted's logging to the standard library's logging system, I get much more helpful output:
> 
>    Unhandled error in Deferred:
> 
> 
>    Traceback (most recent call last):
>      File "./ic-test.py", line 20, in <module>
>        bogus_callback()
>      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1274, in unwindGenerator
>        return _inlineCallbacks(None, gen, Deferred())
>    --- <exception caught here> ---
>      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1128, in _inlineCallbacks
>        result = g.send(result)
>      File "./ic-test.py", line 17, in bogus_callback
>        yield does_not_exist()
>    exceptions.NameError: global name 'does_not_exist' is not defined
> 
> I expected that changing the destination of log messages wouldn't change their content, but apparently I was wrong. I got the incantation for re-routing Twisted's logging system into the Python one by stitching together code-snippets from http://twistedmatrix.com/documents/current/core/howto/logger.html#starting-the-global-log-publisher Is there some better way, or some other thing I should be doing?

Your setup sounds basically correct, and I think you've just discovered a bug here.  Could you report it in the tracker?  I haven't fully diagnosed it yet, but in attempting to do so, I've found a few other odd edge cases in traceback printing.

-glyph

From glyph at twistedmatrix.com  Mon Sep 28 22:04:33 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 28 Sep 2015 21:04:33 -0700
Subject: [Twisted-Python] txtorcon 0.14.0
In-Reply-To: <86wpvcbcon.fsf@atlantis.meejah.ca>
References: <86wpvcbcon.fsf@atlantis.meejah.ca>
Message-ID: <715AEEE9-AE99-4E34-B4F1-BF3EBCCC668B@twistedmatrix.com>


> On Sep 26, 2015, at 11:26 PM, meejah <meejah at meejah.ca> wrote:
> 
> * David Stainton ported his "tor:" endpoint parser so now both client
>    and server endpoints are supported. This means **any** Twisted
>    program using endpoints can use Tor as a client. For example, to
>    connect to txtorcon's Web site: ep =
>    clientFromString("tor:timaq4ygg2iegci7.onion:80").  (In the future,
>    I'd like to automatically launch Tor if required, too).

Hooray!  Once again, txtorcon blazes the trail in making use of Twisted's extensibility :-).  Thanks for setting this example!

Could you use any help auto-launching Tor?

-glyph

From meejah at meejah.ca  Mon Sep 28 23:20:11 2015
From: meejah at meejah.ca (meejah)
Date: Tue, 29 Sep 2015 09:20:11 +0400
Subject: [Twisted-Python] txtorcon 0.14.0
In-Reply-To: <715AEEE9-AE99-4E34-B4F1-BF3EBCCC668B@twistedmatrix.com> (Glyph
 Lefkowitz's message of "Mon, 28 Sep 2015 21:04:33 -0700")
References: <86wpvcbcon.fsf@atlantis.meejah.ca>
 <715AEEE9-AE99-4E34-B4F1-BF3EBCCC668B@twistedmatrix.com>
Message-ID: <86612tby44.fsf@atlantis.meejah.ca>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> Could you use any help auto-launching Tor?

This would actually be a fairly straightforward bit of refactoring,
mostly -- the "server-side" endpoints ("onion:...") already do
auto-launch Tor, and there are some @staticmethods to directly create
TCPHiddenServiceEndpoints attached to existing or launched Tor
instances.

If anyone would like to help, that'd be great; the enhancement ticket
for the "tor:..." endpoints is: 

   https://github.com/meejah/txtorcon/issues/128

Anything unclear can be discussed there.

Note that currently the usual strategy for "onion:" endpoints is to
launch a new Tor instance because of permissions "reasons" -- for the
"tor:" type endpoints, any running Tor that has a valid SOCKS port
should work, so that should be the preferred strategy *unless*
.get_global_tor() has ever been called, in which case that Tor instance
should be used.

I'm usually idling in #tor-dev on OFTC if anyone wants to take a try at
this :)

Thanks!
meejah



From adi at roiban.ro  Tue Sep 29 05:59:41 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 29 Sep 2015 14:59:41 +0300
Subject: [Twisted-Python] Usage and testing of the new logging system
Message-ID: <CAFycZ9dTnhN8J0xYx+XF-Hp4iKvN_gRnL=w3q6dfBkHq9V1t9w@mail.gmail.com>

Hi,

I feel that the current documentation for the new logging system lacks
information about how to use it in new Twisted code, how to
refactor/migrate existing code and how to test the usage of the new
logging system.

I have created a dedicated ticket
https://twistedmatrix.com/trac/ticket/8036 which should focus on
updating the current documentation to include some examples and best
practices.

This email is just to let you know about the new ticket and that it
requires your feedback.

Thanks!

-- 
Adi Roiban


From fgrossi at voismart.it  Wed Sep 30 04:25:36 2015
From: fgrossi at voismart.it (Flavio Grossi)
Date: Wed, 30 Sep 2015 12:25:36 +0200 (CEST)
Subject: [Twisted-Python] twisted compatibility with multiprocessing module
 in fork+execv mode
Message-ID: <58908503.20626.1443608736676.JavaMail.zimbra@voismart.it>

I know the multiprocessing module is not properly supported by twisted apps because of the interactions among duplicated file descriptors and signal handling, as discussed other times.

But python 3.4 introduces a new mode to use that module by spawning (i.e. fork() followed by execv()) the new processes instead of simply forking it.

So my question is how supported this is by twisted, and in general how safe it is to use subprocesses created by duplicating the parent immediately followed by the execv of a fresh interpreter.

What i'm thinking is something like this, to asynchronously process requests and delegate the cpu-bound work to some processes:

import multiprocessing

def worker(q):
    while True:
        work = q.get()
        do_something_cpu_bound_with(work)

def main():
    context = multiprocessing.get_context('spawn')
    q = context.Queue()
    p = context.Process(target=worker, args=(q,))
    p.start()
    q.put_nowait(work) # when async requests are made

if __name__ == '__main__':
    from twisted.internet import reactor
    reactor.callWhenRunning(main)
    reactor.run()


From glyph at twistedmatrix.com  Wed Sep 30 16:46:42 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 30 Sep 2015 15:46:42 -0700
Subject: [Twisted-Python] Usage and testing of the new logging system
In-Reply-To: <CAFycZ9dTnhN8J0xYx+XF-Hp4iKvN_gRnL=w3q6dfBkHq9V1t9w@mail.gmail.com>
References: <CAFycZ9dTnhN8J0xYx+XF-Hp4iKvN_gRnL=w3q6dfBkHq9V1t9w@mail.gmail.com>
Message-ID: <CF41BB6A-7238-4EB4-8E51-13185BD119FA@twistedmatrix.com>

On Sep 29, 2015, at 04:59, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I feel that the current documentation for the new logging system lacks
> information about how to use it in new Twisted code, how to
> refactor/migrate existing code and how to test the usage of the new
> logging system.
> 
> I have created a dedicated ticket
> https://twistedmatrix.com/trac/ticket/8036 which should focus on
> updating the current documentation to include some examples and best
> practices.
> 
> This email is just to let you know about the new ticket and that it
> requires your feedback.
> 
> Thanks!

Thanks for writing this up, Adi. I definitely agree, we need better documentation for this migration!  I am hoping that the logging system migration is the first migration that eventually sets the precedent that we *can* migrate to new, better APIs within Twisted itself, and this would definitely facilitate that :).

-glyph

From zuhaib at hipchat.com  Tue Sep  1 00:48:50 2015
From: zuhaib at hipchat.com (Zuhaib Siddique)
Date: Mon, 31 Aug 2015 23:48:50 -0700
Subject: [Twisted-Python] HAProxy and twisted TCP/IP support
Message-ID: <CALWC=NAQL57CSpBSLqARmkZjKzbiHdYTLp275Rc4q1HHuWQNRw@mail.gmail.com>

Hey all,

I am looking at using HAProxy in front of Twisted for TCP connection and
need to pass the source IP along.  We are currently looking at hacking
tcp.py to add support for this:
http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt but wondering if
this is something someone is already working on for twisted or maybe I dont
need to hack tcp.py.

Thanks
Zuhaib
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150831/ca2881ca/attachment-0002.html>

From adi at roiban.ro  Wed Sep  2 04:38:52 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 2 Sep 2015 13:38:52 +0300
Subject: [Twisted-Python] Converting str to bytes in Py3 port
Message-ID: <CAFycZ9fkkV3nRmE9D7wOXu6oik04GKuGwAH5pW41rMGK5rjHOg@mail.gmail.com>

Hi,

While reviewing the latest patch related to porting Twisted to py3 I
saw that many values which were supposed to hold just text were ported
as bytes.

The argument for this conversion was that Twisted is a low level
framework and that other high level framworks like Treq or Klein
should implement the required code so that end user can just use text.

For example the HTTP response messages are not bytes, even if the RFC
specified that they should only contain text with a single encoding.

I have little experience with twisted.web, so maybe there are many
users of twisted.web which use binary data for response messages or
maybe there is a good use case for putting random bytes in the HTTP
response message.

-------

If for twisted.web there are Treq or Klein to implement the user
friendly interfaces, I don't know what can be used for twisted.conch

In the ticket for porting twisted.conch.ssh.key to py3 [1] the name of
the ssh key algorithms like 'ssh-rsa' or 'ssh-dsa', encryption
algorithm names like AES-128-CBC and ssh key components like p, q, y,
x, n, e are now all bytes.

Do you think that this is ok?
Why allow or encourage people to use random bytes for fields which
should contain human readable text?

For HTTP response line and response headers I think that all values
should be text and encoded in ISO-8859-1.

RFC 4819 [2] only talks about using US-ASCII for all names used in the
SSH public key subsystem.
Why use bytes to represent these names?

RFC 4716 specifies that header tags must be US-ASCII while header
value UTF-8 ... while all IANA names are US-ASCII.... and names in the
private namespace (name at domain) should also be US-ASCII.

As a reviewer I don't know that is the degin/architecture choose by
Twisted and how to review such changes.

As a developer I prefer to have as much text as possible so that I can
do text manipulation operation on these values and directly include
them in logs or error messages.

I assume that all the people involved in writing the RFC had a good
reason to require those fields to be text rather than any bytes.

Thanks for your feedback!

[1] https://github.com/twisted/twisted/compare/trunk...conch-ssh-keys-py3-7998
[2] https://www.ietf.org/rfc/rfc4819.txt
-- 
Adi Roiban



From wangliyu at dhcc.com.cn  Wed Sep  2 04:43:21 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Wed, 02 Sep 2015 18:43:21 +0800
Subject: [Twisted-Python] Auto-Re:  Converting str to bytes in Py3 port
Message-ID: <1509021843218d64eba830f9363451a88ab14ecc1b9c@dhcc.com.cn>

您的邮件已收到，我会尽快处理，谢谢！

----
--------------------------
Best Regards,

王立宇

--------------------------

DHC Software Co.,Ltd.

东华软件股份公司

Add：11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

北京市海淀区中关村紫金数码园3号楼东华合创大厦11层

邮编 100190   手机：18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150902/db10bc74/attachment-0002.html>

From cherian.rosh at gmail.com  Wed Sep  2 19:08:16 2015
From: cherian.rosh at gmail.com (Roshan Cherian)
Date: Wed, 2 Sep 2015 18:08:16 -0700
Subject: [Twisted-Python] understanding IConsumer
Message-ID: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>

Hi Team,

I am sorry if this is coming off as a newbie question. Its probably because
I don't understand it enough.

I would like to:

1. connectTCP to a host, port
2. use the transport to write
3. Use consumer to read from the transport what the tcp server has written
to

I wasn't able to find information on consumer and how it gets triggered
when data is available especially in the case I have

Thanks,
-Roshan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150902/a82b7051/attachment-0002.html>

From dstainton415 at gmail.com  Thu Sep  3 05:28:03 2015
From: dstainton415 at gmail.com (David Stainton)
Date: Thu, 3 Sep 2015 13:28:03 +0200
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
Message-ID: <CAFN1edq9j=phfdsRFOJeWp927o0XS=V-FXyNx9Ad9G=D3xG=Dg@mail.gmail.com>

I'm not the best person to respond here but I think you should not
want or need to implement your own consumer... Twisted transports and
protocols are implemented using producers and consumers.

On Thu, Sep 3, 2015 at 3:08 AM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
> Hi Team,
>
> I am sorry if this is coming off as a newbie question. Its probably because
> I don't understand it enough.
>
> I would like to:
>
> 1. connectTCP to a host, port
> 2. use the transport to write
> 3. Use consumer to read from the transport what the tcp server has written
> to
>
> I wasn't able to find information on consumer and how it gets triggered when
> data is available especially in the case I have
>
> Thanks,
> -Roshan
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From snailcoder at 163.com  Thu Sep  3 08:55:12 2015
From: snailcoder at 163.com (Wang Yan)
Date: Thu, 3 Sep 2015 22:55:12 +0800 (CST)
Subject: [Twisted-Python] twisted.mail.imap4.IMAP4Client.fetchMessage always
	throws exception
Message-ID: <1c9557cc.9170.14f93b4527b.Coremail.snailcoder@163.com>

Hi,

I've installed Twisted 15.3.0 on Ubuntu 14.04LTS. Excellent work but there's one problem bothering me for a long time: twisted.mail.imap4.IMAP4Client.fetchMessage always throws exception and the exception occured at random, e.g. somtimes the exception occured when the program read the 120th mail, sometimes it occured at the 150th or 200th mail. The traceback of the exception is as follows:

Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/log.py", line 101, in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/log.py", line 84, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/internet/posixbase.py", line 597, in _doReadOrWrite
    why = selectable.doRead()
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/internet/tcp.py", line 209, in doRead
    return self._dataReceived(data)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/internet/tcp.py", line 215, in _dataReceived
    rval = self.protocol.dataReceived(data)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/protocols/basic.py", line 571, in dataReceived
    why = self.lineReceived(line)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/mail/imap4.py", line 2356, in lineReceived
    self._regularDispatch(line)
  File "/usr/local/lib/python2.7/dist-packages/Twisted-15.3.0-py2.7-linux-i686.egg/twisted/mail/imap4.py", line 2383, in _regularDispatch
    tag, rest = parts
exceptions.ValueError: need more than 1 value to unpack

My code is as simple as possible and the exception is thrown by the following codes:

dlist = []
for msg in messages:    # use message number, not UID
    d = self.fetchMessage(msg, uid=False)
    d.addCallback(cbGetAttachment)
    dlist.append(d)
dl = defer.DeferredList(dlist)
return dl.addCallback(cbLogout)

Is there anybody know about this issue?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150903/8a09845b/attachment-0002.html>

From hawkowl at atleastfornow.net  Fri Sep  4 02:04:09 2015
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Fri, 4 Sep 2015 16:04:09 +0800
Subject: [Twisted-Python] Twisted 15.4.0 Release Announcement
Message-ID: <536D8798-44E2-4C75-AB8F-C6F422ADD32D@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.4, codenamed "Trial By Fire".

Twisted is continuing to forge ahead, with the highlights of this release being:

- twisted.positioning, the rest of twisted.internet.endpoints, KQueueReactor (for real this time), and twisted.web.proxy/guard have all been ported to Python 3.
- Trial has been ported to Python 3! This was made possible by a Python Software Foundation grant.
- Twisted officially supports several more platforms: Py3.4 on FreeBSD, Py2.7/Py3.4 on Fedora 21/22, and Py2.7 on RHEL7.
- Python 2.6 is no longer supported, and support for Debian 6, and RHEL6 has been removed because of this.
- Support for the EOL'd platforms of Fedora 17/18/19 has been removed.
- Twisted has moved to requiring setuptools for installation.
- twisted.python.failure.Failure's __repr__ now includes the exception message.
- 19 tickets in total closed!

You can find the downloads at https://pypi.python.org/pypi/Twisted (or alternatively http://twistedmatrix.com/trac/wiki/Downloads). The NEWS file can be found at https://github.com/twisted/twisted/blob/trunk/NEWS .

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Amber "Hawkie" Brown
GPG: https://keybase.io/hawkowl
hawkowl at atleastfornow.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150904/f91527ed/attachment.sig>

From wangliyu at dhcc.com.cn  Fri Sep  4 02:07:34 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Fri, 04 Sep 2015 16:07:34 +0800
Subject: [Twisted-Python] Auto-Re:  Twisted 15.4.0 Release Announcement
Message-ID: <150904160734a207dfa147c2c7ec76ee85fcaf70e5e9@dhcc.com.cn>

您的邮件已收到，我会尽快处理，谢谢！

----
--------------------------
Best Regards,

王立宇

--------------------------

DHC Software Co.,Ltd.

东华软件股份公司

Add：11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

北京市海淀区中关村紫金数码园3号楼东华合创大厦11层

邮编 100190   手机：18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150904/7b6e3bcd/attachment-0002.html>

From mark at tearle.com  Fri Sep  4 08:33:13 2015
From: mark at tearle.com (Mark Tearle)
Date: Fri, 04 Sep 2015 22:33:13 +0800
Subject: [Twisted-Python] npyscreen Twisted Reactor
Message-ID: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>

Hi folks

A quick email to alert folks to an updated version of the Twisted
Reactor that I wrote for use with npyscreen.

Npyscreen is a python widget library and application framework for
programming terminal or console applications. It is built on top of
ncurses, which is part of the standard library.   It is written by
Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)


Current version includes:
        Bug fixes (Thanks to Adam Pokora)
        Example Server
        Example Client (NEW)

The reactor and examples can be found at:

https://github.com/mtearle/twisted-reactor-npyscreen


Patches, bug reports, etc welcome...


Mark

--
Mark Tearle <mark at tearle.com>

Everyone thinks of changing the world, but no one thinks of changing
himself. - Tolstoy
-- 
Mark Tearle <mark at tearle.com>

Everyone thinks of changing the world, but no one thinks of changing
himself. - Tolstoy



From wangliyu at dhcc.com.cn  Fri Sep  4 08:37:19 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Fri, 04 Sep 2015 22:37:19 +0800
Subject: [Twisted-Python] Auto-Re:  npyscreen Twisted Reactor
Message-ID: <1509042237198395a3aeafef39fdd7bc2d8c7cacc680@dhcc.com.cn>

您的邮件已收到，我会尽快处理，谢谢！

----
--------------------------
Best Regards,

王立宇

--------------------------

DHC Software Co.,Ltd.

东华软件股份公司

Add：11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

北京市海淀区中关村紫金数码园3号楼东华合创大厦11层

邮编 100190   手机：18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150904/f9d87cfe/attachment-0002.html>

From nicholas.cole at gmail.com  Fri Sep  4 09:47:08 2015
From: nicholas.cole at gmail.com (Nicholas Cole)
Date: Fri, 4 Sep 2015 16:47:08 +0100
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
References: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
Message-ID: <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>

Well, this is excellent news, and exactly why I added the event system
to npyscren.

Thank you, Mark, and thank you for hooking in to the system as I intended!

Best wishes,

Nicholas

On Fri, Sep 4, 2015 at 3:33 PM, Mark Tearle <mark at tearle.com> wrote:
> Hi folks
>
> A quick email to alert folks to an updated version of the Twisted
> Reactor that I wrote for use with npyscreen.
>
> Npyscreen is a python widget library and application framework for
> programming terminal or console applications. It is built on top of
> ncurses, which is part of the standard library.   It is written by
> Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)
>
>
> Current version includes:
>         Bug fixes (Thanks to Adam Pokora)
>         Example Server
>         Example Client (NEW)
>
> The reactor and examples can be found at:
>
> https://github.com/mtearle/twisted-reactor-npyscreen
>
>
> Patches, bug reports, etc welcome...
>
>
> Mark
>
> --
> Mark Tearle <mark at tearle.com>
>
> Everyone thinks of changing the world, but no one thinks of changing
> himself. - Tolstoy
> --
> Mark Tearle <mark at tearle.com>
>
> Everyone thinks of changing the world, but no one thinks of changing
> himself. - Tolstoy
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Fri Sep  4 23:58:17 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 4 Sep 2015 22:58:17 -0700
Subject: [Twisted-Python] [Twisted-web] Twisted 15.4.0 Release
	Announcement
In-Reply-To: <536D8798-44E2-4C75-AB8F-C6F422ADD32D@atleastfornow.net>
References: <536D8798-44E2-4C75-AB8F-C6F422ADD32D@atleastfornow.net>
Message-ID: <41C4C5A6-AF3B-41BC-9D02-9F11DB1CBB4C@twistedmatrix.com>

> On Sep 4, 2015, at 01:04, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 15.4, codenamed "Trial By Fire".

Hooray Twisted!  Hooray Amber!

This release is a particularly big deal, because:

> - Trial has been ported to Python 3! This was made possible by a Python Software Foundation grant.

If you've been wanting to port portions of Twisted over to Python 3 but have been stymied by primitive tooling and weird special cases, the fact that the full test runner is now available is a big deal.  It should be a lot easier to onboard new contributors to help with porting tickets now, and I expect the rate of porting of Python 3 modules to accelerate considerably as a result.  Thanks to everyone who made this happen.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150904/a4695278/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Sep  5 00:23:03 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 4 Sep 2015 23:23:03 -0700
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>
References: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
 <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>
Message-ID: <9AC66ADA-10D1-4EE5-89A4-63A15C68BAC3@twistedmatrix.com>

This is certainly a pretty cool announcement.  Thanks for sharing!

I have two suggestions:

It would be nice if this could be `pip install´ed, which would mean adding a `setup.py´ and uploading something to PyPI.
We generally try to reserve the word "Twisted" for packages actually within Twisted to avoid confusion.  Would you consider adopting the community naming conventions for packages ("tx")?  As a bonus, this might shorten the name a bit.  Perhaps "ntxscreen", or "txnpyscreen"?

Thanks!

-glyph

> On Sep 4, 2015, at 08:47, Nicholas Cole <nicholas.cole at gmail.com> wrote:
> 
> Well, this is excellent news, and exactly why I added the event system
> to npyscren.
> 
> Thank you, Mark, and thank you for hooking in to the system as I intended!
> 
> Best wishes,
> 
> Nicholas
> 
> On Fri, Sep 4, 2015 at 3:33 PM, Mark Tearle <mark at tearle.com> wrote:
>> Hi folks
>> 
>> A quick email to alert folks to an updated version of the Twisted
>> Reactor that I wrote for use with npyscreen.
>> 
>> Npyscreen is a python widget library and application framework for
>> programming terminal or console applications. It is built on top of
>> ncurses, which is part of the standard library.   It is written by
>> Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)
>> 
>> 
>> Current version includes:
>>        Bug fixes (Thanks to Adam Pokora)
>>        Example Server
>>        Example Client (NEW)
>> 
>> The reactor and examples can be found at:
>> 
>> https://github.com/mtearle/twisted-reactor-npyscreen
>> 
>> 
>> Patches, bug reports, etc welcome...
>> 
>> 
>> Mark
>> 
>> --
>> Mark Tearle <mark at tearle.com>
>> 
>> Everyone thinks of changing the world, but no one thinks of changing
>> himself. - Tolstoy
>> --
>> Mark Tearle <mark at tearle.com>
>> 
>> Everyone thinks of changing the world, but no one thinks of changing
>> himself. - Tolstoy
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150904/533cd6da/attachment-0002.html>

From hawkowl at atleastfornow.net  Sat Sep  5 02:03:32 2015
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sat, 5 Sep 2015 16:03:32 +0800
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
Message-ID: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>

We just ran into an issue in Autobahn|Python where a log message that tried to use the message attribute an Exception subclass (twisted.internet.error.ProcessTerminated). The message attribute was deprecated in Python 2.6, and removed in Python 3 -- but it still "works" in Python 2.7.

So, this needs the question: Is this breaking Twisted's backwards compat (that .message isn't there on Python 3)? Should we go through and look at our exception subclasses, and look at what makes sense to have a .message attribute (for example, I'd say it makes sense on ProcessTerminated) and then add it? Or is it just a 2/3 change that should be expected during porting? It seems like an interesting edge case (and another example of "Don't use subclassing, kids" ;) ).

The Autobahn ticket (which we're fixing as I write this email) is here https://github.com/tavendo/AutobahnPython/issues/479 .

Regards,

Amber "Hawkie" Brown
GPG: https://keybase.io/hawkowl
hawkowl at atleastfornow.net


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20150905/4cdb6af3/attachment.sig>

From wangliyu at dhcc.com.cn  Sat Sep  5 02:07:07 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Sat, 05 Sep 2015 16:07:07 +0800
Subject: [Twisted-Python] Auto-Re:  Exception's Implicit Public API,
	and Python 3
Message-ID: <1509051607076d87936be763c480894699d79b8a3707@dhcc.com.cn>

您的邮件已收到，我会尽快处理，谢谢！

----
--------------------------
Best Regards,

王立宇

--------------------------

DHC Software Co.,Ltd.

东华软件股份公司

Add：11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

北京市海淀区中关村紫金数码园3号楼东华合创大厦11层

邮编 100190   手机：18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150905/04bdc67d/attachment-0002.html>

From mark at tearle.com  Sat Sep  5 04:34:04 2015
From: mark at tearle.com (Mark Tearle)
Date: Sat, 05 Sep 2015 18:34:04 +0800
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <9AC66ADA-10D1-4EE5-89A4-63A15C68BAC3@twistedmatrix.com>
References: <1441377193.1941390.374846529.1A6F0049@webmail.messagingengine.com>
 <CAAu18hcS_CHW8CAiCCbYo_Tw9kxMFoMUJ8QaWo-VYOYR6D69yw@mail.gmail.com>
 <9AC66ADA-10D1-4EE5-89A4-63A15C68BAC3@twistedmatrix.com>
Message-ID: <1441449244.2936003.375455545.74155C9D@webmail.messagingengine.com>

Thanks, positive feedback is appreciated.  :)

Will work on both your suggestions, and hopefully do an update soon.

Mark

-- 
Mark Tearle <mark at tearle.com>
 
Everyone thinks of changing the world, but no one thinks of changing himself. - Tolstoy
 
 
On Sat, Sep 5, 2015, at 02:23 PM, Glyph wrote:
> This is certainly a pretty cool announcement.  Thanks for sharing!
>  
> I have two suggestions:
>  
>  1. It would be nice if this could be `pip install´ed, which would mean adding a `setup.py´ and uploading something to PyPI.
>  2. We generally try to reserve the word "Twisted" for packages actually within Twisted to avoid confusion.  Would you consider adopting the community naming conventions for packages ("tx")?  As a bonus, this might shorten the name a bit.  Perhaps "ntxscreen", or "txnpyscreen"?
>  
> Thanks!
>  
> -glyph
>  
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150905/c89ffd4a/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Sep  5 21:07:06 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 5 Sep 2015 23:07:06 -0400
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
Message-ID: <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>


> On Sep 5, 2015, at 04:03, Amber Hawkie Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> 
> We just ran into an issue in Autobahn|Python where a log message that tried to use the message attribute an Exception subclass (twisted.internet.error.ProcessTerminated). The message attribute was deprecated in Python 2.6, and removed in Python 3 -- but it still "works" in Python 2.7.
> 
> So, this needs the question: Is this breaking Twisted's backwards compat (that .message isn't there on Python 3)? Should we go through and look at our exception subclasses, and look at what makes sense to have a .message attribute (for example, I'd say it makes sense on ProcessTerminated) and then add it? Or is it just a 2/3 change that should be expected during porting? It seems like an interesting edge case (and another example of "Don't use subclassing, kids" ;) ).

It's Python's API which has changed here, so I don't think that it's Twisted's responsibility to replicate this behavior.  Subclassing is bad, and Python's changes of public attributes to such a core language-feature level class as Exception is extra bad, but I think that attempting to simultaneously support every version of Python's public API via Twisted would be a mistake.

For a different example, consider the case of the implicit base of "object".  We could faithfully replicate the semantics of old-style classes for all of Twisted's old-style classes, but instead, they remain old-style on py2 (for now) and new-style on py3.  The "message" attribute seems the same to me, so I think we should say this is a 2/3 change you have to make when porting your own code, and the onus is on Autobahn in this case.

Put differently, Twisted's "the first one's free" policy applies to upgrading Twisted itself, and not to upgrading Python (or any other dependency).  If you upgrade Python and you need to update your code for that, Twisted won't create any additional problems but it won't go out of its way to solve the ones you normally have to deal with.

Sound good?

-glyph

> The Autobahn ticket (which we're fixing as I write this email) is here https://github.com/tavendo/AutobahnPython/issues/479 <https://github.com/tavendo/AutobahnPython/issues/479> .


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150905/31c853da/attachment-0002.html>

From trac at twistedmatrix.com  Sun Sep  6 00:05:28 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 06 Sep 2015 06:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1441519528.61.7856443706311942375@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150906/eaaccec9/attachment-0002.html>

From wangliyu at dhcc.com.cn  Sun Sep  6 03:07:25 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Sun, 06 Sep 2015 17:07:25 +0800
Subject: [Twisted-Python] Auto-Re:  Weekly Bug Summary
Message-ID: <150906170725b53e189abd5a8b956d47a51db5d6d1cd@dhcc.com.cn>

您的邮件已收到，我会尽快处理，谢谢！

----
--------------------------
Best Regards,

王立宇

--------------------------

DHC Software Co.,Ltd.

东华软件股份公司

Add：11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

北京市海淀区中关村紫金数码园3号楼东华合创大厦11层

邮编 100190   手机：18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150906/5ded62eb/attachment-0002.html>

From tobias.oberstein at tavendo.de  Sun Sep  6 14:20:02 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sun, 6 Sep 2015 22:20:02 +0200
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
Message-ID: <55EC9FF2.2080008@tavendo.de>

> Put differently, Twisted's "the first one's free" policy applies to
> upgrading Twisted itself, and /not/ to upgrading Python (or any other
> dependency).  If you upgrade Python and you need to update your code for
> that, Twisted won't create any additional problems but it won't go out
> of its way to solve the ones you normally have to deal with.
>
> Sound good?

Sounds good. We're fine.

FWIW, we need to guard for even more cases

.message there
.args there _and_ a tuple _and_ of length > 0

https://github.com/tavendo/AutobahnPython/commit/303d289de4993b5ffa9bf90c6fed71364f3521e7#diff-ced6a7641cc1e78205bd85d77b484c03R111

/Tobias




From tobias.oberstein at tavendo.de  Mon Sep  7 14:31:48 2015
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 7 Sep 2015 22:31:48 +0200
Subject: [Twisted-Python] Crossbar.io 0.11.0
Message-ID: <55EDF434.60803@tavendo.de>


Hi all,

I am pleased to announce Crossbar.io 0.11.0

https://github.com/crossbario/crossbar#crossbario
https://pypi.python.org/pypi/crossbar/0.11.0

Crossbar.io is an open-source WAMP application router that allows to 
build advanced applications from loosely-coupled components that can 
talk in real-time with each other.

This is a big release:

- Python 3 support! Yes, that's right. Crossbar.io now runs on Py3.
- Node, worker and component start/stop/failure behavior improved a lot
- new File Upload Service
- new Web Hook Service
- Complete new logging system (structured logging + color!)
- Improved both Crossbar's own logging, and logging from user components
- Lots of issues and corner-cases fixed
- Automated testing / CI on 8 platform combinations
- Much improved unit test coverage

A big chunk of the credits for this go to Crossbar.io core devs

Amber "hawkie" / http://atleastfornow.net/
Mike "meejah" / https://meejah.ca/

Both are working on CB under Tavendo contract. This release simply 
wouldn't be as awesome as it is without them! Period. hawkie and meejah 
are experienced, creative, precise and just cool Python devs, can't say 
how happy we are to work with them;)

Then the "File Upload Service" was contributed by

Marko (Record Evolution)
https://www.record-evolution.com/

Record Evolution is using Crossbar.io and Autobahn throughout their 
RE.base and RE.porter products. Happy users make new contributors!

You can find the docs for the new user visible features here:

http://crossbar.io/docs/File-Upload-Service/
http://crossbar.io/docs/HTTP-Bridge-Services-Webhook/
http://crossbar.io/docs/Logging-in-Crossbar.io/
http://crossbar.io/docs/Configuring-Crossbar.io's-Logging/

Ah, speaking of docs. Yeah, needs to improve, we know. And it's coming! 
We have a complete new launch of the Crossbar.io Web site including docs 
in the cooking. Stay tuned!

Cheers,
/Tobias







From tommost at gmail.com  Mon Sep  7 22:44:54 2015
From: tommost at gmail.com (Tom Most)
Date: Mon, 7 Sep 2015 21:44:54 -0700
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <55EC9FF2.2080008@tavendo.de>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
 <55EC9FF2.2080008@tavendo.de>
Message-ID: <55EE67C6.6060707@gmail.com>

Would str(failure.value) work?  It should be stable from 2.x to 3.x,
barring Unicode differences:

https://docs.python.org/2/library/exceptions.html#exceptions.BaseException
https://docs.python.org/3.5/library/exceptions.html#BaseException

(This convention is quite handy when you want to defer formatting of a
fancy exception message.  Just pass args to the constructor and override
__str__ to do the expensive formatting.)

---Tom

On 09/06/2015 01:20 PM, Tobias Oberstein wrote:
>> Put differently, Twisted's "the first one's free" policy applies to
>> upgrading Twisted itself, and /not/ to upgrading Python (or any other
>> dependency).  If you upgrade Python and you need to update your code for
>> that, Twisted won't create any additional problems but it won't go out
>> of its way to solve the ones you normally have to deal with.
>>
>> Sound good?
>
> Sounds good. We're fine.
>
> FWIW, we need to guard for even more cases
>
> .message there
> .args there _and_ a tuple _and_ of length > 0
>
> https://github.com/tavendo/AutobahnPython/commit/303d289de4993b5ffa9bf90c6fed71364f3521e7#diff-ced6a7641cc1e78205bd85d77b484c03R111
>
>
> /Tobias
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From adi at roiban.ro  Mon Sep  7 23:55:42 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 8 Sep 2015 08:55:42 +0300
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
Message-ID: <CAFycZ9fn08zt856J5Y088-+UeJAr+=DgzC2inaSMA_B4Xkb5LQ@mail.gmail.com>

On 6 September 2015 at 06:07, Glyph <glyph at twistedmatrix.com> wrote:
>
> On Sep 5, 2015, at 04:03, Amber Hawkie Brown <hawkowl at atleastfornow.net>
> wrote:
>
snip

> It's Python's API which has changed here, so I don't think that it's
> Twisted's responsibility to replicate this behavior.  Subclassing is bad,
> and Python's changes of public attributes to such a core language-feature
> level class as Exception is extra bad, but I think that attempting to
> simultaneously support every version of Python's public API via Twisted
> would be a mistake.

What harmed is done if the twisted.internet.error.ProcessTerminated
exception has an explicit message attribute?

Thanks!

-- 
Adi Roiban



From glyph at twistedmatrix.com  Tue Sep  8 00:37:07 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 7 Sep 2015 23:37:07 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
Message-ID: <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>


> On Sep 2, 2015, at 6:08 PM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
> 
> Hi Team,

Hi Roshan!

Sorry it took a while to get back to you.  Busy week.

> I am sorry if this is coming off as a newbie question. Its probably because I don't understand it enough.

Newbie questions are fine, no need to apologize :).

> I would like to:
> 
> 1. connectTCP to a host, port

You should not use connectTCP directly.  Use Endpoints: <https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html <https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html>>.  (But this doesn't affect the rest of your question.)

> 2. use the transport to write

Should be easy enough; `self.transport.write´.

> 3. Use consumer to read from the transport what the tcp server has written to

You don't need to use the producer / consumer API just to read from the transport.  The transport does this automatically, and calls your protocol's dataReceived method every time data is received from the transport.

> I wasn't able to find information on consumer and how it gets triggered when data is available especially in the case I have

I'm not sure what you mean about "how it gets triggered"; the producer and consumer APIs are documented here: <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html>> but it would help if you could explain what exactly you're trying to achieve with them.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150907/c02d7b00/attachment-0002.html>

From dynamicgl at gmail.com  Tue Sep  8 00:48:52 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Tue, 8 Sep 2015 14:48:52 +0800
Subject: [Twisted-Python] error on log module (twisted python 3)
Message-ID: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>

Hi All

    I just noticed my app raised an exception such as

Traceback (most recent call last):

  File "/home/m/py343/lib/python3.4/runpy.py", line 170, in
_run_module_as_main

    "__main__", mod_spec)

  File "/home/m/py343/lib/python3.4/runpy.py", line 85, in _run_code

    exec(code, run_globals)

  File "gw_go.zip/__main__.py", line 8, in <module>

  File "gw_go.zip/gw_server2/gw_go.py", line 87, in main

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
48, in fromFullPath

    os.path.dirname(logPath), *args, **kwargs)

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
40, in __init__

    self._openFile()

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
238, in _openFile

    BaseLogFile._openFile(self)

  File
"/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
75, in _openFile

    self._file = file(self.path, "w+", 1)

NameError: name 'file' is not defined


     I used python 3.4 and twisted 15.40 (from pip) under ubuntu 14.04.


Regards


gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/a4194e95/attachment-0002.html>

From wangliyu at dhcc.com.cn  Tue Sep  8 00:51:39 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Tue, 08 Sep 2015 14:51:39 +0800
Subject: [Twisted-Python] Auto-Re:  error on log module (twisted python 3)
Message-ID: <150908145139095c6d5eeb3e25cc362bd320853388b9@dhcc.com.cn>

您的邮件已收到，我会尽快处理，谢谢！

----
--------------------------
Best Regards,

王立宇

--------------------------

DHC Software Co.,Ltd.

东华软件股份公司

Add：11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

北京市海淀区中关村紫金数码园3号楼东华合创大厦11层

邮编 100190   手机：18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/14d51cad/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Sep  8 00:51:14 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 7 Sep 2015 23:51:14 -0700
Subject: [Twisted-Python] HAProxy and twisted TCP/IP support
In-Reply-To: <CALWC=NAQL57CSpBSLqARmkZjKzbiHdYTLp275Rc4q1HHuWQNRw@mail.gmail.com>
References: <CALWC=NAQL57CSpBSLqARmkZjKzbiHdYTLp275Rc4q1HHuWQNRw@mail.gmail.com>
Message-ID: <A26CF3BB-3692-4B65-B3FC-FDA633514E18@twistedmatrix.com>


> On Aug 31, 2015, at 11:48 PM, Zuhaib Siddique <zuhaib at hipchat.com> wrote:
> 
> Hey all,

Hi Zuhaib!  Thanks for writing.

> I am looking at using HAProxy in front of Twisted for TCP connection and need to pass the source IP along.  We are currently looking at hacking tcp.py to add support for this: http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt but wondering if this is something someone is already working on for twisted or maybe I dont need to hack tcp.py.

I am not aware of an implementation of this protocol, but it looks very interesting!  The usual argument I hear for load-balancing HTTP rather than TCP is that you lose information about the network protocol you're speaking that would be preserved by the "Forwarded" or "X-Forwarded-For" header.  But if Twisted supported this protocol then it could live behind haproxy with no loss of information, regardless of protocol!  And if it had a server-side version of this it could load-balance other similarly equipped software.  Exciting possibilities all around.

Hacking tcp.py is definitely the wrong way to go about implementing it, though.

The right way to go about this would be to implement a transceiver: something that implements a protocol for its transport, and implements a transport for another protocol.  The best example of this within Twisted right now is twisted.protocols.tls, the OpenSSL integration that superseded our much grosser, less flexible hacking of tcp.py.

So for this proxy protocol, you'd have a protocol that waited until it received the full PROXY protocol header (whether text-based or binary) and implement ITCPTransport to have values in getHost() and getPeer() that correspond to the values received from the PROXY message.

Does that make sense?

If I have an idle moment I might try my hand at an implementation myself, but I am not always super reliable ;-).

> Thanks
> Zuhaib

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150907/2a0d45c8/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Sep  8 00:57:18 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 7 Sep 2015 23:57:18 -0700
Subject: [Twisted-Python] Exception's Implicit Public API, and Python 3
In-Reply-To: <CAFycZ9fn08zt856J5Y088-+UeJAr+=DgzC2inaSMA_B4Xkb5LQ@mail.gmail.com>
References: <D1CFB29E-8F91-436E-A456-BC0638F4DA35@atleastfornow.net>
 <A3DDDE89-DB63-4893-B214-1D98DE106406@twistedmatrix.com>
 <CAFycZ9fn08zt856J5Y088-+UeJAr+=DgzC2inaSMA_B4Xkb5LQ@mail.gmail.com>
Message-ID: <F8911FF3-C9EF-4BB3-B998-4F7CA74A6027@twistedmatrix.com>


> On Sep 7, 2015, at 10:55 PM, Adi Roiban <adi at roiban.ro> wrote:
> 
>> It's Python's API which has changed here, so I don't think that it's
>> Twisted's responsibility to replicate this behavior.  Subclassing is bad,
>> and Python's changes of public attributes to such a core language-feature
>> level class as Exception is extra bad, but I think that attempting to
>> simultaneously support every version of Python's public API via Twisted
>> would be a mistake.
> 
> What harmed is done if the twisted.internet.error.ProcessTerminated
> exception has an explicit message attribute?

I don't like the precedent it sets; this is not part of the compatibility contract we provide, and we already spend tons of energy on compatibility :-).  Maintaining stuff like this - and like old-style classes - would be a ton of additional work for no real benefit.
`.message´ and `.args´ are implementation accidents, not things that anyone should be relying on in a public API.  If we wanted to provide some structured information for programs to use from ProcessTerminated, let's actually give it a good API that documents what it means, and not just stick a random string or some tuples on an object.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150907/2e7d5f8e/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Sep  8 01:16:45 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 8 Sep 2015 00:16:45 -0700
Subject: [Twisted-Python] error on log module (twisted python 3)
In-Reply-To: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>
References: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>
Message-ID: <F117E5E1-568F-4F61-B849-A606ECB235CE@twistedmatrix.com>



> On Sep 7, 2015, at 11:48 PM, Gelin Yan <dynamicgl at gmail.com> wrote:
> 
> Hi All
> 
>     I just noticed my app raised an exception such as
> 
> Traceback (most recent call last):
> 
>   File "/home/m/py343/lib/python3.4/runpy.py", line 170, in _run_module_as_main
> 
>     "__main__", mod_spec)
> 
>   File "/home/m/py343/lib/python3.4/runpy.py", line 85, in _run_code
> 
>     exec(code, run_globals)
> 
>   File "gw_go.zip/__main__.py", line 8, in <module>
> 
>   File "gw_go.zip/gw_server2/gw_go.py", line 87, in main
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 48, in fromFullPath
> 
>     os.path.dirname(logPath), *args, **kwargs)
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 40, in __init__
> 
>     self._openFile()
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 238, in _openFile
> 
>     BaseLogFile._openFile(self)
> 
>   File "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line 75, in _openFile
> 
>     self._file = file(self.path, "w+", 1)
> 
> NameError: name 'file' is not defined
> 
> 
> 
>      I used python 3.4 and twisted 15.40 (from pip) under ubuntu 14.04.
> 

twisted.python.logfile was not fully ported as of Twisted 15.4; just the syntax.  So this error is expected.  However, you may be pleased to hear that the fix landed last week: https://twistedmatrix.com/trac/ticket/6749 <https://twistedmatrix.com/trac/ticket/6749> and will be in 15.5.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/3889293f/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Sep  8 01:44:17 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 8 Sep 2015 00:44:17 -0700
Subject: [Twisted-Python] Converting str to bytes in Py3 port
In-Reply-To: <CAFycZ9fkkV3nRmE9D7wOXu6oik04GKuGwAH5pW41rMGK5rjHOg@mail.gmail.com>
References: <CAFycZ9fkkV3nRmE9D7wOXu6oik04GKuGwAH5pW41rMGK5rjHOg@mail.gmail.com>
Message-ID: <04F5FB77-45F5-4721-ACEE-89C3F04E7035@twistedmatrix.com>


> On Sep 2, 2015, at 3:38 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> While reviewing the latest patch related to porting Twisted to py3 I
> saw that many values which were supposed to hold just text were ported
> as bytes.

This is fairly ambiguous, since it depends quite closely on what exact values they were.

> The argument for this conversion was that Twisted is a low level
> framework and that other high level framworks like Treq or Klein
> should implement the required code so that end user can just use text.

When high-level 

> For example the HTTP response messages are not bytes, even if the RFC
> specified that they should only contain text with a single encoding.

By "response messages" do you mean

response headers (which are ASCII-punned bytes, or text with a restricted character set, depending on your philosophical disposition)
response bodies (which are unambiguously bytes, unless you interpret them according to their content-type, in which case they are arbitrary objects, one type of which may be text)
response status codes (which are sort of like headers, except not, except maybe they're integers)
response status text (which are arguably text, but do not feature an encoding, and are therefore in the same grey area as headers)

?

> I have little experience with twisted.web, so maybe there are many
> users of twisted.web which use binary data for response messages or
> maybe there is a good use case for putting random bytes in the HTTP
> response message.

The main use-case is the Python zen, "refuse the temptation to guess".  Treq and Klein can provide good default ways to interpret things, but some applications will need to get underneath those defaults and treat things differently.

> If for twisted.web there are Treq or Klein to implement the user
> friendly interfaces, I don't know what can be used for twisted.conch

Clearly we need to write some new code.

> In the ticket for porting twisted.conch.ssh.key to py3 [1] the name of
> the ssh key algorithms like 'ssh-rsa' or 'ssh-dsa', encryption
> algorithm names like AES-128-CBC and ssh key components like p, q, y,
> x, n, e are now all bytes.
> 
> Do you think that this is ok?

Yes, and here's why: those values are all enumerated constants.  They come off the wire as bytes, in no particular encoding (these happen to be ASCII, but is there a guarantee that all future algorithm names will also be?), and then they have to be treated specially.  A good, high-level API for this would use twisted.python.constants, and not bother application code with bytes or text.  Given that what is implemented is all pretty low-level, bytes make sense.

That said, if there were a good case for ASCII being the declared encoding and having some authoritative sense that that's what we should use, then we should use it.  Except that the 2.x types already use bytes, and so we'd have to either go with "native str" (which is a very problematic type, and should be avoided for everything except Python identifiers and docstrings, or things that need to be processed into them.)

> Why allow or encourage people to use random bytes for fields which
> should contain human readable text?

If you encounter an entity that can read the string "ssh-rsa" and truly comprehend it, chances are good you are not dealing with a human.

> For HTTP response line and response headers I think that all values should be text and encoded in ISO-8859-1.

> RFC 4819 [2] only talks about using US-ASCII for all names used in the
> SSH public key subsystem.
> Why use bytes to represent these names?

You might be correct according to the specification (although it remains to be seen if you're right as far as implementations are concerned); however, why would it be useful to decode these values into bytes?  Should we be processing them as text?  In what context?

> RFC 4716 specifies that header tags must be US-ASCII while header
> value UTF-8 ... while all IANA names are US-ASCII.... and names in the
> private namespace (name at domain) should also be US-ASCII.

> As a reviewer I don't know that is the degin/architecture choose by
> Twisted and how to review such changes.

It is not necessarily possible to rationalize every decision that has been made thus far as being part of one grand plan.  For one thing, many of them have been taken by different people.  For another, we learn things as we go along, and so some of the decisions made thus far are now recognized as mistakes.  So at this point I think it is best that you just state your preferred design and we discuss the pros and cons of that.

To the extent that there has been a conscious design strategy, it's something like this: every API needs one layer at which it needs to treat most of its data as bytes.  (Sadly) few Twisted APIs have nice, discrete higher layers with objects that represent meaningful user actions rather than protocol trivia.  So the existing strategy has been around making the lower levels consistently manipulate bytes everywhere, in the hope that we will promote these objects to more high-level types in a different layer later (hence the "well, in klein and treq..." answers).

> As a developer I prefer to have as much text as possible so that I can
> do text manipulation operation on these values and directly include
> them in logs or error messages.

OK, so the main utility of treating them as text is being able to concatenate them into diagnostic messages?  Can this not be done with bytes equally well?  This is the main thing to focus on, I think: concrete useful things you could do with text in these places where bytes are sub-optimal.

> I assume that all the people involved in writing the RFC had a good
> reason to require those fields to be text rather than any bytes.
> 
> Thanks for your feedback!

Thank you for prompting this conversation, adi, we do need a better communicated strategy around how we handle text and encodings when protocols stipulate that the things they're dealing with are text.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/2fcb45f3/attachment-0002.html>

From dynamicgl at gmail.com  Tue Sep  8 01:57:27 2015
From: dynamicgl at gmail.com (Gelin Yan)
Date: Tue, 8 Sep 2015 15:57:27 +0800
Subject: [Twisted-Python] error on log module (twisted python 3)
In-Reply-To: <F117E5E1-568F-4F61-B849-A606ECB235CE@twistedmatrix.com>
References: <CABkOF6R-yVjiWXbX2OfNg2WKwTuGuqyJ-DmoWLVpAH-EevoKUw@mail.gmail.com>
 <F117E5E1-568F-4F61-B849-A606ECB235CE@twistedmatrix.com>
Message-ID: <CABkOF6TtXigzdgDg_qRzC0fAZQPGnxYLviyAmV8DJBBTg7kQkA@mail.gmail.com>

On Tue, Sep 8, 2015 at 3:16 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
>
> On Sep 7, 2015, at 11:48 PM, Gelin Yan <dynamicgl at gmail.com> wrote:
>
> Hi All
>
>     I just noticed my app raised an exception such as
>
> Traceback (most recent call last):
>
>   File "/home/m/py343/lib/python3.4/runpy.py", line 170, in
> _run_module_as_main
>
>     "__main__", mod_spec)
>
>   File "/home/m/py343/lib/python3.4/runpy.py", line 85, in _run_code
>
>     exec(code, run_globals)
>
>   File "gw_go.zip/__main__.py", line 8, in <module>
>
>   File "gw_go.zip/gw_server2/gw_go.py", line 87, in main
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 48, in fromFullPath
>
>     os.path.dirname(logPath), *args, **kwargs)
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 40, in __init__
>
>     self._openFile()
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 238, in _openFile
>
>     BaseLogFile._openFile(self)
>
>   File
> "/home/m/py343/lib/python3.4/site-packages/twisted/python/logfile.py", line
> 75, in _openFile
>
>     self._file = file(self.path, "w+", 1)
>
> NameError: name 'file' is not defined
>
>
>      I used python 3.4 and twisted 15.40 (from pip) under ubuntu 14.04.
>
>
> twisted.python.logfile was not fully ported as of Twisted 15.4; just the
> syntax.  So this error is expected.  However, you may be pleased to hear
> that the fix landed last week: https://twistedmatrix.com/trac/ticket/6749 and
> will be in 15.5.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
Hi Glyph

    I just found out the ticket you mentioned. It looks like 15.4 doesn't
include it. I am waiting for the next release. For now, I have to use the
standard logging system.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/fd9f9c52/attachment-0002.html>

From bra at fsn.hu  Tue Sep  8 08:51:04 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Tue, 8 Sep 2015 16:51:04 +0200
Subject: [Twisted-Python] Asynchronously initializing objects in twisted.web?
Message-ID: <55EEF5D8.7020709@fsn.hu>

Hi,

I wonder, if I have this example program:
https://twistedmatrix.com/documents/current/web/howto/using-twistedweb.html#site-objects

how do I initialize an external resource (like a dictionary, which is 
fetched from a database) with asynchronous twisted tools, but before the 
HTTP server starts listening on its port?
The goal here is that the HTTP server shouldn't start until it can fetch 
the desired data. Of course I can do this in a synchronous way, but it 
feels so unnatural and bad practice to fetch the same stuff 
synchronously on initialization and asynchronously when the 
program/reactor is running (often with different libraries).

Thanks,



From p.mayers at imperial.ac.uk  Tue Sep  8 10:07:15 2015
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 8 Sep 2015 17:07:15 +0100
Subject: [Twisted-Python] Asynchronously initializing objects in
 twisted.web?
In-Reply-To: <55EEF5D8.7020709@fsn.hu>
References: <55EEF5D8.7020709@fsn.hu>
Message-ID: <55EF07B3.6010104@imperial.ac.uk>

On 08/09/15 15:51, Nagy, Attila wrote:

> The goal here is that the HTTP server shouldn't start until it can fetch
> the desired data. Of course I can do this in a synchronous way, but it
> feels so unnatural and bad practice to fetch the same stuff

Load the resources in a callback using "reactor.callWhenRunning" and 
only then call reactor.listenTCP or whatever.



From a at runtel.ru  Tue Sep  8 12:41:06 2015
From: a at runtel.ru (Alexey Panyovin)
Date: Tue, 8 Sep 2015 21:41:06 +0300
Subject: [Twisted-Python] Asynchronously initializing objects in
 twisted.web?
In-Reply-To: <55EEF5D8.7020709@fsn.hu>
References: <55EEF5D8.7020709@fsn.hu>
Message-ID: <55EF2BC2.8000701@runtel.ru>

from twisted.webimport server, resource
from twisted.internetimport reactor, defer

class Simple(resource.Resource):
     isLeaf =True def render_GET(self, request):
         return "<html>Hello, world!</html>" def call_me():
     d = defer.Deferred()
     print "Get something" d.callback("success")
     return d

def run_web(_):
     print "run_web" site = server.Site(Simple())
     reactor.listenTCP(8080, site)

d = call_me()
d.addCallback(run_web)
reactor.run()

--
Alex

08.09.15 17:51, Nagy, Attila пишет:

> Hi,
>
> I wonder, if I have this example program:
> https://twistedmatrix.com/documents/current/web/howto/using-twistedweb.html#site-objects 
>
>
> how do I initialize an external resource (like a dictionary, which is 
> fetched from a database) with asynchronous twisted tools, but before 
> the HTTP server starts listening on its port?
> The goal here is that the HTTP server shouldn't start until it can 
> fetch the desired data. Of course I can do this in a synchronous way, 
> but it feels so unnatural and bad practice to fetch the same stuff 
> synchronously on initialization and asynchronously when the 
> program/reactor is running (often with different libraries).
>
> Thanks,
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/f200ba5d/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Sep  8 16:21:01 2015
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 8 Sep 2015 15:21:01 -0700
Subject: [Twisted-Python] Asynchronously initializing objects in
	twisted.web?
In-Reply-To: <55EF07B3.6010104@imperial.ac.uk>
References: <55EEF5D8.7020709@fsn.hu> <55EF07B3.6010104@imperial.ac.uk>
Message-ID: <4DFEC71E-E0C5-4921-B0F4-E70AD6E704B7@twistedmatrix.com>


> On Sep 8, 2015, at 9:07 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> Load the resources in a callback using "reactor.callWhenRunning" and only then call reactor.listenTCP or whatever.

Just trying to use every opportunity I can to say this: don't use listenTCP, use endpoints: https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html <https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html>

:)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/351d33c2/attachment-0002.html>

From cherian.rosh at gmail.com  Wed Sep  9 00:24:26 2015
From: cherian.rosh at gmail.com (Roshan Cherian)
Date: Tue, 8 Sep 2015 23:24:26 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
Message-ID: <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>

Hi Glyph and David,

Thanks for your answers and thanks for taking time to answer. It was indeed
my wrong understanding. I was trying to understand what
HTTPClientChannelRequest does in terms of producer and consumer (Its a lot
deep considering me being relatively new at this). Looking further at the
code I do understand that we have a producer which generates the necessary
data which can be written out using the transport and we have a consumer
which works of the data from the dataReceived (I hope my understanding is
correct and I don't know how it is buffered and I don't know how the flow
tells the consumer that there is data for use).

I understand there is
https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html,
however I was hoping if there is an example of a simple consumer which
could be written using the data from dataReceived (that is assuming
whatever I understood above is correct). I didn't find enough information
on how to create a consumer.

Thanks,
-Roshan


On Mon, Sep 7, 2015 at 11:37 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> On Sep 2, 2015, at 6:08 PM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
>
> Hi Team,
>
>
> Hi Roshan!
>
> Sorry it took a while to get back to you.  Busy week.
>
> I am sorry if this is coming off as a newbie question. Its probably
> because I don't understand it enough.
>
>
> Newbie questions are fine, no need to apologize :).
>
> I would like to:
>
> 1. connectTCP to a host, port
>
>
> You should not use connectTCP directly.  Use Endpoints: <
> https://twistedmatrix.com/documents/15.4.0/core/howto/endpoints.html>.
>  (But this doesn't affect the rest of your question.)
>
> 2. use the transport to write
>
>
> Should be easy enough; `self.transport.write´.
>
> 3. Use consumer to read from the transport what the tcp server has written
> to
>
>
> You don't need to use the producer / consumer API just to read from the
> transport.  The transport does this automatically, and calls your
> protocol's dataReceived method every time data is received from the
> transport.
>
> I wasn't able to find information on consumer and how it gets triggered
> when data is available especially in the case I have
>
>
> I'm not sure what you mean about "how it gets triggered"; the producer and
> consumer APIs are documented here: <
> https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html> but
> it would help if you could explain what *exactly* you're trying to
> achieve with them.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150908/eff32201/attachment-0002.html>

From bra at fsn.hu  Wed Sep  9 01:27:46 2015
From: bra at fsn.hu (Nagy, Attila)
Date: Wed, 9 Sep 2015 09:27:46 +0200
Subject: [Twisted-Python] Asynchronously initializing objects in
 twisted.web?
In-Reply-To: <55EF2BC2.8000701@runtel.ru>
References: <55EEF5D8.7020709@fsn.hu> <55EF2BC2.8000701@runtel.ru>
Message-ID: <55EFDF72.7010903@fsn.hu>

Ah, I was under the impression that listenTCP() can only be called 
before reactor.run().
I don't now where it came from.

Thanks,

On 09/08/15 20:41, Alexey Panyovin wrote:
> from twisted.webimport server, resource
> from twisted.internetimport reactor, defer
>
> class Simple(resource.Resource):
>      isLeaf =True def render_GET(self, request):
>          return "<html>Hello, world!</html>" def call_me():
>      d = defer.Deferred()
>      print "Get something" d.callback("success")
>      return d
>
> def run_web(_):
>      print "run_web" site = server.Site(Simple())
>      reactor.listenTCP(8080, site)
>
> d = call_me()
> d.addCallback(run_web)
> reactor.run()
>
> --
> Alex
>
> 08.09.15 17:51, Nagy, Attila пишет:
>> Hi,
>>
>> I wonder, if I have this example program:
>> https://twistedmatrix.com/documents/current/web/howto/using-twistedweb.html#site-objects 
>>
>>
>> how do I initialize an external resource (like a dictionary, which is 
>> fetched from a database) with asynchronous twisted tools, but before 
>> the HTTP server starts listening on its port?
>> The goal here is that the HTTP server shouldn't start until it can 
>> fetch the desired data. Of course I can do this in a synchronous way, 
>> but it feels so unnatural and bad practice to fetch the same stuff 
>> synchronously on initialization and asynchronously when the 
>> program/reactor is running (often with different libraries).
>>
>> Thanks,
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150909/3da67879/attachment-0002.html>

From adi at roiban.ro  Wed Sep  9 08:51:48 2015
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 9 Sep 2015 17:51:48 +0300
Subject: [Twisted-Python] Usage of diffresource in Twisted's Trac
Message-ID: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>

Is there anybody still using the diffresource links in Trac tickets?

If you are still using it, do you think you can use the GitHub diff instead?

Can we remove it from Trac?

I prefer the GitHub diff as I can use side-by-side view and expand the
diff or go to full file.

Here is the associated ticket https://github.com/twisted-infra/braid/issues/102

Thanks!
-- 
Adi Roiban



From wangliyu at dhcc.com.cn  Wed Sep  9 08:55:40 2015
From: wangliyu at dhcc.com.cn (wangliyu at dhcc.com.cn)
Date: Wed, 09 Sep 2015 22:55:40 +0800
Subject: [Twisted-Python] Auto-Re: Usage of diffresource in Twisted's Trac
Message-ID: <150909225540ffc6fcef908ca3f377a6425d0e94174d@dhcc.com.cn>

您的邮件已收到，我会尽快处理，谢谢！

----
--------------------------
Best Regards,

王立宇

--------------------------

DHC Software Co.,Ltd.

东华软件股份公司

Add：11th floor,DHC Office Building,ZiJin Digital Park ,Zhongguancun,Haidian District, BeiJing ,China

北京市海淀区中关村紫金数码园3号楼东华合创大厦11层

邮编 100190   手机：18612695237

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150909/6a218a87/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Sep  9 12:31:27 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Sep 2015 11:31:27 -0700
Subject: [Twisted-Python] Usage of diffresource in Twisted's Trac
In-Reply-To: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>
References: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>
Message-ID: <F18BB42F-DA53-41C2-B679-670FBE763431@twistedmatrix.com>


> On Sep 9, 2015, at 7:51 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Is there anybody still using the diffresource links in Trac tickets?
> 
> If you are still using it, do you think you can use the GitHub diff instead?
> 
> Can we remove it from Trac?
> 
> I prefer the GitHub diff as I can use side-by-side view and expand the
> diff or go to full file.
> 
> Here is the associated ticket https://github.com/twisted-infra/braid/issues/102 <https://github.com/twisted-infra/braid/issues/102>

I still use it sometimes to apply the current patch to a working copy: quicker to type the URL.

That said I think that removing it is an acceptable regression for the git migration; it should be trivial to re-implement using git if anyone (including me) cares enough, and it should be substantially faster.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150909/8f82609b/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Sep  9 12:40:14 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Sep 2015 11:40:14 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
 <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
Message-ID: <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>


> On Sep 8, 2015, at 11:24 PM, Roshan Cherian <cherian.rosh at gmail.com <mailto:cherian.rosh at gmail.com>> wrote:
> 
> I understand there is https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html>, however I was hoping if there is an example of a simple consumer which could be written using the data from dataReceived (that is assuming whatever I understood above is correct). I didn't find enough information on how to create a consumer.

What do you mean by "create a consumer"?  You already have an IConsumer created for you: your transport.  Do you want to implement your own?  For what reason?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150909/b4c26b02/attachment-0002.html>

From radix at twistedmatrix.com  Wed Sep  9 12:59:12 2015
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 9 Sep 2015 13:59:12 -0500
Subject: [Twisted-Python] Usage of diffresource in Twisted's Trac
In-Reply-To: <F18BB42F-DA53-41C2-B679-670FBE763431@twistedmatrix.com>
References: <CAFycZ9e99ZtYZbf2ZXNOynuvCf397wP5j0ETGCBnR+BSa1m=EQ@mail.gmail.com>
 <F18BB42F-DA53-41C2-B679-670FBE763431@twistedmatrix.com>
Message-ID: <BC694424-A625-4620-B04F-C1C68B60C45A@twistedmatrix.com>


> On Sep 9, 2015, at 1:31 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Sep 9, 2015, at 7:51 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
>> 
>> Is there anybody still using the diffresource links in Trac tickets?
>> 
>> If you are still using it, do you think you can use the GitHub diff instead?
>> 
>> Can we remove it from Trac?
>> 
>> I prefer the GitHub diff as I can use side-by-side view and expand the
>> diff or go to full file.
>> 
>> Here is the associated ticket https://github.com/twisted-infra/braid/issues/102 <https://github.com/twisted-infra/braid/issues/102>
> 
> I still use it sometimes to apply the current patch to a working copy: quicker to type the URL.
> 

Not sure if you know this, but if you click the “github” link under the branch name, and then add “.patch” to the end of a URL, you get a patch file that you can apply to a working copy.


> That said I think that removing it is an acceptable regression for the git migration; it should be trivial to re-implement using git if anyone (including me) cares enough, and it should be substantially faster.
> 

-radix
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150909/00b9391a/attachment-0002.html>

From cherian.rosh at gmail.com  Wed Sep  9 20:36:11 2015
From: cherian.rosh at gmail.com (Roshan Cherian)
Date: Wed, 9 Sep 2015 19:36:11 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
 <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
 <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>
Message-ID: <CAHL69gE5S4_wA87oVEB3-unP405CFebwEQJUSJVH=cP023F-CA@mail.gmail.com>

Thanks Glyph for setting my understanding right on this. By create a
consumer I meant having to write one purely to understand the concept and
have one running example so that when looking at consumers like
ProducerStream it will make my understanding more clear.

Thanks,
-Roshan

On Wed, Sep 9, 2015 at 11:40 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Sep 8, 2015, at 11:24 PM, Roshan Cherian <cherian.rosh at gmail.com>
> wrote:
>
> I understand there is
> https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html,
> however I was hoping if there is an example of a simple consumer which
> could be written using the data from dataReceived (that is assuming
> whatever I understood above is correct). I didn't find enough information
> on how to create a consumer.
>
>
> What do you mean by "create a consumer"?  You already have an IConsumer
> created for you: your transport.  Do you want to implement your own?  For
> what reason?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150909/0b747964/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Sep  9 21:15:25 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Sep 2015 20:15:25 -0700
Subject: [Twisted-Python] understanding IConsumer
In-Reply-To: <CAHL69gE5S4_wA87oVEB3-unP405CFebwEQJUSJVH=cP023F-CA@mail.gmail.com>
References: <CAHL69gHOEAssP1a0A8baZ0dzbBi4Y6_YOX5ykHVZxrZ5p4r18Q@mail.gmail.com>
 <309B211E-6541-4A97-A3C6-F4395187ADE7@twistedmatrix.com>
 <CAHL69gHu-2ftprtYNQuDd-fcGOXMj2v1Nu-M1njutbMneGeQFA@mail.gmail.com>
 <DB5F5472-896A-49A6-94A3-D7C753FCC68B@twistedmatrix.com>
 <CAHL69gE5S4_wA87oVEB3-unP405CFebwEQJUSJVH=cP023F-CA@mail.gmail.com>
Message-ID: <22AE9AAE-2D63-4059-8307-04327B6AB75A@twistedmatrix.com>

The best way to come to a good understanding of IConsumer and IProducer is to write something that transfers large amounts of data over a slow, or heavily asymmetric link, and make sure its memory usage stays consistent; just implementing the methods on IConsumer won't be that illuminating.

> On Sep 9, 2015, at 7:36 PM, Roshan Cherian <cherian.rosh at gmail.com> wrote:
> 
> Thanks Glyph for setting my understanding right on this. By create a consumer I meant having to write one purely to understand the concept and have one running example so that when looking at consumers like ProducerStream it will make my understanding more clear.
> 
> Thanks,
> -Roshan
> 
> On Wed, Sep 9, 2015 at 11:40 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Sep 8, 2015, at 11:24 PM, Roshan Cherian <cherian.rosh at gmail.com <mailto:cherian.rosh at gmail.com>> wrote:
>> 
>> I understand there is https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html <https://twistedmatrix.com/documents/15.4.0/core/howto/producers.html>, however I was hoping if there is an example of a simple consumer which could be written using the data from dataReceived (that is assuming whatever I understood above is correct). I didn't find enough information on how to create a consumer.
> 
> What do you mean by "create a consumer"?  You already have an IConsumer created for you: your transport.  Do you want to implement your own?  For what reason?
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150909/3bf27315/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Sep 11 16:16:31 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 11 Sep 2015 15:16:31 -0700
Subject: [Twisted-Python] call for volunteers: fundraising
Message-ID: <8408F70B-8483-4835-A696-DC7952014F86@twistedmatrix.com>

Hi all,

The Twisted project needs volunteers to help us with fundraising.

Although we have several sponsor logos on the front page of our website, all but only one of them, Variomedia (thanks Variomedia!) is actually current; every other sponsor has expired, and we just haven't gotten around to removing them yet.  (So if you work at Dyn, Olark, or CritSend please remind your employer to renew!)

As you may know, Twisted is a member project of the Software Freedom Conservancy https://sfconservancy.org <https://sfconservancy.org/>, so that you can donate to the project as a tax-deductable 501(c)3 donation in the United States.

Unfortunately, the project leadership committee who interfaces with the SFC - including myself - is a very busy group of people who don't have a lot of time to dedicate to the nuts and bolts of working with a non-profit.  The SFC itself provides basic support for our sponsorship program, helping us write ad copy, updating the logos on the website, and reminding sponsors when their sponsorships have expired - but they can't do all of our fundraising for us.  We need someone to find potential sponsors, speak on behalf of the project, and generally be good at following up email requests and answering questions about the program, and to work with the SFC on the Twisted project's behalf.

In the past we've had a lot of success with sponsoring development; you can see our history of sponsored development on http://labs.twistedmatrix.com <http://labs.twistedmatrix.com/>.  Dedicated reviewers and focused effort on specific problems have made the project much more long-term viable.  But if we run out of sponsors completely we will no longer be able to do that.

Would anyone like to volunteer to do some fundraising, and in the process, possibly save Twisted? :-)

Thanks in advance,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150911/e4ca1b64/attachment-0002.html>

From trac at twistedmatrix.com  Sun Sep 13 00:05:29 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 13 Sep 2015 06:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1442124329.32.490962463044573562@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150913/be2b6852/attachment-0002.html>

From mark at tearle.com  Wed Sep 16 10:26:39 2015
From: mark at tearle.com (Mark Tearle)
Date: Thu, 17 Sep 2015 00:26:39 +0800
Subject: [Twisted-Python] Fwd: Re:  npyscreen Twisted Reactor
Message-ID: <1442420799.2934367.385438057.29167ECF@webmail.messagingengine.com>

Hi folks

A quick email to alert folks to an updated version of the Twisted
Reactor that I wrote for use with npyscreen.

Npyscreen is a python widget library and application framework for
programming terminal or console applications. It is built on top of
ncurses, which is part of the standard library.   It is written by
Nicholas Cole.  (See https://bitbucket.org/npcole/npyscreen)


Updates include:
* Addition of setuptools config
* Registered on PyPI
* Change of repository name

It can now be installed via pip.

The reactor and examples can be found at:

https://github.com/mtearle/npyscreenreactor


Patches, bug reports, etc welcome...


Mark

-- 
Mark Tearle <mtearle at tearle.com>

Everyone thinks of changing the world, but no one thinks of changing
himself. - Tolstoy





From glyph at twistedmatrix.com  Wed Sep 16 13:42:12 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 16 Sep 2015 12:42:12 -0700
Subject: [Twisted-Python] npyscreen Twisted Reactor
In-Reply-To: <1442420799.2934367.385438057.29167ECF@webmail.messagingengine.com>
References: <1442420799.2934367.385438057.29167ECF@webmail.messagingengine.com>
Message-ID: <0A4D5C9F-0DE5-4F3B-AF24-811DB0844389@twistedmatrix.com>


> On Sep 16, 2015, at 9:26 AM, Mark Tearle <mark at tearle.com> wrote:
> 
> Hi folks
> 
> A quick email to alert folks to an updated version of the Twisted
> Reactor that I wrote for use with npyscreen.

Thanks for the update, Mark!  Always great to see Twisted-aligned projects like this making progress.

And thanks also for the name change!

-glyph


From jerryguitarist at gmail.com  Thu Sep 17 18:41:24 2015
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Thu, 17 Sep 2015 22:11:24 -0230
Subject: [Twisted-Python] Paid summer work for the Twisted Software
	Foundation
Message-ID: <CA+2gYipiivcC2efPQD9H6rdbtQVZy-74JgoEo1vZgasGNrS++w@mail.gmail.com>

Hello!

I recently moved to St. John's, NL, Canada to study at the Memorial
University of Newfoundland. And I was wondering if I can do some paid
summer work for Twisted next summer? It would be a great learning
experience for me, and not to mention that it would also help me pay my
tuition.

The reason I am asking this question now is because I think it will give me
some time to prepare and get some guidance from Twisted developers
regarding potential project ideas and what to work on, should you choose to
consider me as a worthy candidate for a paid summer work position for the
Twisted Software Foundation.

Let me know what you think! Eagerly waiting for your reply! :-)

Thanks & regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150917/6ff11114/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Sep 17 23:11:46 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 17 Sep 2015 22:11:46 -0700
Subject: [Twisted-Python] Paid summer work for the Twisted Software
	Foundation
In-Reply-To: <CA+2gYipiivcC2efPQD9H6rdbtQVZy-74JgoEo1vZgasGNrS++w@mail.gmail.com>
References: <CA+2gYipiivcC2efPQD9H6rdbtQVZy-74JgoEo1vZgasGNrS++w@mail.gmail.com>
Message-ID: <43A47322-AFE4-4538-AA04-A9EFCF45A637@twistedmatrix.com>

> On Sep 17, 2015, at 5:41 PM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hello!

Hi Eeshan!

> I recently moved to St. John's, NL, Canada to study at the Memorial University of Newfoundland. And I was wondering if I can do some paid summer work for Twisted next summer? It would be a great learning experience for me, and not to mention that it would also help me pay my tuition.

As it stands right now, we have approved another round of fellowships which will just about exhaust our current budget.  (Hence the call for help with fundraising.)  Hopefully we'll receive lots more sponsors in the coming year, but it's probably best not to count on it.

> The reason I am asking this question now is because I think it will give me some time to prepare and get some guidance from Twisted developers regarding potential project ideas and what to work on, should you choose to consider me as a worthy candidate for a paid summer work position for the Twisted Software Foundation.

Your best bet would be to ensure that there are enough mentors to have Twisted participate in the Google Summer of Code 2016, so you can submit an application to that :-).

I think any area of focus is probably fine, but you should probably pick one specific area to become familiar with in the coming months.  At random, let me pick... twisted.mail?  If you have another focus area feel free to switch, but the important thing is just to pick one and start becoming familiar with it, so that you can evaluate what kinds of larger projects might be possible.

> Let me know what you think! Eagerly waiting for your reply! :-)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150917/86b829e1/attachment-0002.html>

From trac at twistedmatrix.com  Sun Sep 20 00:05:37 2015
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 20 Sep 2015 06:05:37 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1442729137.53.42010902309182666@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20150920/130daf21/attachment-0002.html>

From Timothy.Allen at optiver.com.au  Thu Sep 24 22:30:50 2015
From: Timothy.Allen at optiver.com.au (Timothy Allen)
Date: Fri, 25 Sep 2015 14:30:50 +1000
Subject: [Twisted-Python] inlineCallbacks eating unhandled exceptions?
Message-ID: <3925E79A0E74A8438C83BF14914196B46A7C0971F5@OPSYWNSR0152.comp.optiver.com>

The other day I was experimenting with the inlineCallbacks decorator in Twisted 15.4, and occasionally when I'd typo a variable name or similar, I'd  get an "unhandled error" in the log without a traceback, which was rather unhelpful. Eventually, I managed to produce the following test-case:

    https://gist.github.com/OptiverTimAll/43263a7a4cf5a298e8f5

If I run it as-is, I get the following unhelpful output:

    CRITICAL:twisted:Unhandled error in Deferred:
    CRITICAL:twisted:

If I comment out the line that redirects Twisted's logging to the standard library's logging system, I get much more helpful output:

    Unhandled error in Deferred:


    Traceback (most recent call last):
      File "./ic-test.py", line 20, in <module>
        bogus_callback()
      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1274, in unwindGenerator
        return _inlineCallbacks(None, gen, Deferred())
    --- <exception caught here> ---
      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1128, in _inlineCallbacks
        result = g.send(result)
      File "./ic-test.py", line 17, in bogus_callback
        yield does_not_exist()
    exceptions.NameError: global name 'does_not_exist' is not defined

I expected that changing the destination of log messages wouldn't change their content, but apparently I was wrong. I got the incantation for re-routing Twisted's logging system into the Python one by stitching together code-snippets from http://twistedmatrix.com/documents/current/core/howto/logger.html#starting-the-global-log-publisher Is there some better way, or some other thing I should be doing?

--
Timothy Allen
Tools Developer

39 Hunter Street, Sydney NSW 2000
T: +61 2 9275 6000 │ F: +61 2 9275 6150
W: http://www.optiver.com/sydney
We're hiring (lots)!

Information contained in this communication (including any attachments) is confidential and may be privileged or subject to copyright.  If you have received this communication in error you are not authorised to use the information in any way and Optiver requests that you notify the sender by return email, destroy all copies and delete the information from your system.  Optiver does not represent, warrant or guarantee that this communication is free from computer viruses or other defects or that the integrity of this communication has been maintained.  Any views expressed in this communication are those of the individual sender.  Optiver does not accept liability for any loss or damage caused directly or indirectly by this communication or its use.

Please consider the environment before printing this email.



From meejah at meejah.ca  Sun Sep 27 00:26:16 2015
From: meejah at meejah.ca (meejah)
Date: Sun, 27 Sep 2015 10:26:16 +0400
Subject: [Twisted-Python] txtorcon 0.14.0
Message-ID: <86wpvcbcon.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm happy to announce txtorcon 0.14.0. Changes:

 * IStreamAttacher handling was missing None and DO_NOT_ATTACH cases if a Deferred was returned.
 * add .is_built Deferred to txtorcon.Circuit that gets callback()'d when the circuit becomes BUILT
 * David Stainton ported his "tor:" endpoint parser so now both client
   and server endpoints are supported. This means **any** Twisted
   program using endpoints can use Tor as a client. For example, to
   connect to txtorcon's Web site: ep =
   clientFromString("tor:timaq4ygg2iegci7.onion:80").  (In the future,
   I'd like to automatically launch Tor if required, too).
 * Python3 fixes from Isis Lovecruft (note: needs Twisted 15.4.0+)

You can download the release from PyPI or GitHub (or of course "pip
install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.14.0
   https://github.com/meejah/txtorcon/releases/tag/v0.14.0

Releases are also available from the hidden service:

   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0.tar.gz
   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0.tar.gz.asc
   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0-py2-none-any.whl
   http://timaq4ygg2iegci7.onion/txtorcon-0.14.0-py2-none-any.whl.asc

You can verify the sha256sum of both by running the following 4 lines
in a shell wherever you have the files downloaded:

cat <<EOF | sha256sum --check
d44be978dd9521f22333edea49789fe7e19c4bea9a02d63e6ec826d08fb571d1  dist/txtorcon-0.14.0-py2-none-any.whl
a2d0fae65da015840bb392ffc4fd63918168edb6b634941f6b8aa843b338edbf  dist/txtorcon-0.14.0.tar.gz
EOF

thanks,
meejah
-----BEGIN PGP SIGNATURE-----

iQEcBAEBAgAGBQJWB3FqAAoJEMJgKAMSgGmn1fsIAOcqJdIFIO5cIvj7TRv9rxFP
aEW/Vb0UGN2/A2skWxajzYJLeZ0geZaOmYGFyscs+fguIzRaGRX4G8+7xRuIzzim
GqjPd+my2+h79hDpH/RntwQvNmW9K50UCKOH5TiW5fGnjbO0ZkqoK8ln+aGz7WCC
HjRmNTJb7iI/vVs6h66evBHjkgib4lBpZSEnJR6H+c1ZC5hJ0uYt1SFch5IF/UsA
QeISGyc2SE5wuwjLuiHDyPoFC/Q5IEhDWABFgs3Z6LB/2yfnUFEjrtEla1Uq454H
YJ5mWsgxx/apGDXbACQ3p8N5ISA/WDOWHm2Rg+XgZo758KyMyOQIfSy1RrGBld4=
=Wffv
-----END PGP SIGNATURE-----



From glyph at twistedmatrix.com  Mon Sep 28 22:01:04 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 28 Sep 2015 21:01:04 -0700
Subject: [Twisted-Python] inlineCallbacks eating unhandled exceptions?
In-Reply-To: <3925E79A0E74A8438C83BF14914196B46A7C0971F5@OPSYWNSR0152.comp.optiver.com>
References: <3925E79A0E74A8438C83BF14914196B46A7C0971F5@OPSYWNSR0152.comp.optiver.com>
Message-ID: <E64D13AF-A21E-4D5B-84A1-4FFF867411A7@twistedmatrix.com>


> On Sep 24, 2015, at 9:30 PM, Timothy Allen <Timothy.Allen at optiver.com.au> wrote:
> 
> The other day I was experimenting with the inlineCallbacks decorator in Twisted 15.4, and occasionally when I'd typo a variable name or similar, I'd  get an "unhandled error" in the log without a traceback, which was rather unhelpful. Eventually, I managed to produce the following test-case:
> 
>    https://gist.github.com/OptiverTimAll/43263a7a4cf5a298e8f5
> 
> If I run it as-is, I get the following unhelpful output:
> 
>    CRITICAL:twisted:Unhandled error in Deferred:
>    CRITICAL:twisted:
> 
> If I comment out the line that redirects Twisted's logging to the standard library's logging system, I get much more helpful output:
> 
>    Unhandled error in Deferred:
> 
> 
>    Traceback (most recent call last):
>      File "./ic-test.py", line 20, in <module>
>        bogus_callback()
>      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1274, in unwindGenerator
>        return _inlineCallbacks(None, gen, Deferred())
>    --- <exception caught here> ---
>      File "/home/timall/.virtualenvs/txfuse/lib/python2.7/site-packages/twisted/internet/defer.py", line 1128, in _inlineCallbacks
>        result = g.send(result)
>      File "./ic-test.py", line 17, in bogus_callback
>        yield does_not_exist()
>    exceptions.NameError: global name 'does_not_exist' is not defined
> 
> I expected that changing the destination of log messages wouldn't change their content, but apparently I was wrong. I got the incantation for re-routing Twisted's logging system into the Python one by stitching together code-snippets from http://twistedmatrix.com/documents/current/core/howto/logger.html#starting-the-global-log-publisher Is there some better way, or some other thing I should be doing?

Your setup sounds basically correct, and I think you've just discovered a bug here.  Could you report it in the tracker?  I haven't fully diagnosed it yet, but in attempting to do so, I've found a few other odd edge cases in traceback printing.

-glyph


From glyph at twistedmatrix.com  Mon Sep 28 22:04:33 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 28 Sep 2015 21:04:33 -0700
Subject: [Twisted-Python] txtorcon 0.14.0
In-Reply-To: <86wpvcbcon.fsf@atlantis.meejah.ca>
References: <86wpvcbcon.fsf@atlantis.meejah.ca>
Message-ID: <715AEEE9-AE99-4E34-B4F1-BF3EBCCC668B@twistedmatrix.com>


> On Sep 26, 2015, at 11:26 PM, meejah <meejah at meejah.ca> wrote:
> 
> * David Stainton ported his "tor:" endpoint parser so now both client
>    and server endpoints are supported. This means **any** Twisted
>    program using endpoints can use Tor as a client. For example, to
>    connect to txtorcon's Web site: ep =
>    clientFromString("tor:timaq4ygg2iegci7.onion:80").  (In the future,
>    I'd like to automatically launch Tor if required, too).

Hooray!  Once again, txtorcon blazes the trail in making use of Twisted's extensibility :-).  Thanks for setting this example!

Could you use any help auto-launching Tor?

-glyph


From meejah at meejah.ca  Mon Sep 28 23:20:11 2015
From: meejah at meejah.ca (meejah)
Date: Tue, 29 Sep 2015 09:20:11 +0400
Subject: [Twisted-Python] txtorcon 0.14.0
In-Reply-To: <715AEEE9-AE99-4E34-B4F1-BF3EBCCC668B@twistedmatrix.com> (Glyph
 Lefkowitz's message of "Mon, 28 Sep 2015 21:04:33 -0700")
References: <86wpvcbcon.fsf@atlantis.meejah.ca>
 <715AEEE9-AE99-4E34-B4F1-BF3EBCCC668B@twistedmatrix.com>
Message-ID: <86612tby44.fsf@atlantis.meejah.ca>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:

> Could you use any help auto-launching Tor?

This would actually be a fairly straightforward bit of refactoring,
mostly -- the "server-side" endpoints ("onion:...") already do
auto-launch Tor, and there are some @staticmethods to directly create
TCPHiddenServiceEndpoints attached to existing or launched Tor
instances.

If anyone would like to help, that'd be great; the enhancement ticket
for the "tor:..." endpoints is: 

   https://github.com/meejah/txtorcon/issues/128

Anything unclear can be discussed there.

Note that currently the usual strategy for "onion:" endpoints is to
launch a new Tor instance because of permissions "reasons" -- for the
"tor:" type endpoints, any running Tor that has a valid SOCKS port
should work, so that should be the preferred strategy *unless*
.get_global_tor() has ever been called, in which case that Tor instance
should be used.

I'm usually idling in #tor-dev on OFTC if anyone wants to take a try at
this :)

Thanks!
meejah




From adi at roiban.ro  Tue Sep 29 05:59:41 2015
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 29 Sep 2015 14:59:41 +0300
Subject: [Twisted-Python] Usage and testing of the new logging system
Message-ID: <CAFycZ9dTnhN8J0xYx+XF-Hp4iKvN_gRnL=w3q6dfBkHq9V1t9w@mail.gmail.com>

Hi,

I feel that the current documentation for the new logging system lacks
information about how to use it in new Twisted code, how to
refactor/migrate existing code and how to test the usage of the new
logging system.

I have created a dedicated ticket
https://twistedmatrix.com/trac/ticket/8036 which should focus on
updating the current documentation to include some examples and best
practices.

This email is just to let you know about the new ticket and that it
requires your feedback.

Thanks!

-- 
Adi Roiban



From fgrossi at voismart.it  Wed Sep 30 04:25:36 2015
From: fgrossi at voismart.it (Flavio Grossi)
Date: Wed, 30 Sep 2015 12:25:36 +0200 (CEST)
Subject: [Twisted-Python] twisted compatibility with multiprocessing module
 in fork+execv mode
Message-ID: <58908503.20626.1443608736676.JavaMail.zimbra@voismart.it>

I know the multiprocessing module is not properly supported by twisted apps because of the interactions among duplicated file descriptors and signal handling, as discussed other times.

But python 3.4 introduces a new mode to use that module by spawning (i.e. fork() followed by execv()) the new processes instead of simply forking it.

So my question is how supported this is by twisted, and in general how safe it is to use subprocesses created by duplicating the parent immediately followed by the execv of a fresh interpreter.

What i'm thinking is something like this, to asynchronously process requests and delegate the cpu-bound work to some processes:

import multiprocessing

def worker(q):
    while True:
        work = q.get()
        do_something_cpu_bound_with(work)

def main():
    context = multiprocessing.get_context('spawn')
    q = context.Queue()
    p = context.Process(target=worker, args=(q,))
    p.start()
    q.put_nowait(work) # when async requests are made

if __name__ == '__main__':
    from twisted.internet import reactor
    reactor.callWhenRunning(main)
    reactor.run()



From glyph at twistedmatrix.com  Wed Sep 30 16:46:42 2015
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 30 Sep 2015 15:46:42 -0700
Subject: [Twisted-Python] Usage and testing of the new logging system
In-Reply-To: <CAFycZ9dTnhN8J0xYx+XF-Hp4iKvN_gRnL=w3q6dfBkHq9V1t9w@mail.gmail.com>
References: <CAFycZ9dTnhN8J0xYx+XF-Hp4iKvN_gRnL=w3q6dfBkHq9V1t9w@mail.gmail.com>
Message-ID: <CF41BB6A-7238-4EB4-8E51-13185BD119FA@twistedmatrix.com>

On Sep 29, 2015, at 04:59, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I feel that the current documentation for the new logging system lacks
> information about how to use it in new Twisted code, how to
> refactor/migrate existing code and how to test the usage of the new
> logging system.
> 
> I have created a dedicated ticket
> https://twistedmatrix.com/trac/ticket/8036 which should focus on
> updating the current documentation to include some examples and best
> practices.
> 
> This email is just to let you know about the new ticket and that it
> requires your feedback.
> 
> Thanks!

Thanks for writing this up, Adi. I definitely agree, we need better documentation for this migration!  I am hoping that the logging system migration is the first migration that eventually sets the precedent that we *can* migrate to new, better APIs within Twisted itself, and this would definitely facilitate that :).

-glyph


