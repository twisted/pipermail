From p.mayers at imperial.ac.uk  Fri Oct  1 05:41:11 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Oct 2010 10:41:11 +0100
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units / sec
Message-ID: <4CA5ACB7.9020403@imperial.ac.uk>

Is there an easy way to make a task.Cooperator instance only execute N 
ticks / sec, summed across all iterators it's driving? So if you add two 
iterators, they each run at N/2 per sec, 3 at N/3, etc.

It seems like this ought to do it:

N = <rate>

def myScheduler(x):
   # reschedule N times per second
   reactor.callLater(1.0/N, x)

class myTermination:
   def __call__(self):
     # stop immediately after one iterator.next()
     return True

myCoop = task.Cooperator(
   terminationPredicateFactory=myTermination,
   scheduler=myScheduler,
)

...but this doesn't seem to work when I try it:

def mytask(name, limit):
     for i in range(limit):
         print name, time.time(), i
         yield i

def running():
     finish_a = myCoop.coiterate(mytask('a', 40))
     def start_b():
         finish_b = myCoop.coiterate(mytask('b', 10))
     reactor.callLater(6.5, start_b)

def main():
     reactor.callWhenRunning(running)
     reactor.run()

if __name__=='__main__':
     main()

...shows that, once the "b" iterator is added, each iterator is running 
1/sec, rather than the whole cooperator:

a 1285925864.05 0
a 1285925865.05 1
a 1285925866.05 2
a 1285925867.05 3
a 1285925868.05 4
a 1285925869.05 5 << running fine 1/sec up until here
b 1285925870.05 0
a 1285925870.55 6 << now running 2/sec
b 1285925871.05 1
a 1285925871.55 7
b 1285925872.05 2
a 1285925872.55 8
b 1285925873.05 3

I've had a look at the source code, and it looks like the logic should 
cause what I want to happen, but obviously it's not. Version is Twisted 
8.2.0 on python 2.6 (Fedora 12)


From exarkun at twistedmatrix.com  Fri Oct  1 08:46:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Oct 2010 12:46:24 -0000
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
	sec
In-Reply-To: <4CA5ACB7.9020403@imperial.ac.uk>
References: <4CA5ACB7.9020403@imperial.ac.uk>
Message-ID: <20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>

On 09:41 am, p.mayers at imperial.ac.uk wrote:
>Is there an easy way to make a task.Cooperator instance only execute N
>ticks / sec, summed across all iterators it's driving? So if you add 
>two
>iterators, they each run at N/2 per sec, 3 at N/3, etc.
>
>It seems like this ought to do it:

Very close!  It took me a while to notice the mistake.
>N = <rate>
>
>def myScheduler(x):
>   # reschedule N times per second
>   reactor.callLater(1.0/N, x)

The scheduler function must not return None!  This confuses the 
scheduling code in cooperator and causes it to run too many things in 
parallel.  This mistake could be detected easily by cooperator and a 
useful exception raised to point out the problem.  Want to file a 
ticket?

Jean-Paul
>class myTermination:
>   def __call__(self):
>     # stop immediately after one iterator.next()
>     return True
>
>myCoop = task.Cooperator(
>   terminationPredicateFactory=myTermination,
>   scheduler=myScheduler,
>)
>
>...but this doesn't seem to work when I try it:
>
>def mytask(name, limit):
>     for i in range(limit):
>         print name, time.time(), i
>         yield i
>
>def running():
>     finish_a = myCoop.coiterate(mytask('a', 40))
>     def start_b():
>         finish_b = myCoop.coiterate(mytask('b', 10))
>     reactor.callLater(6.5, start_b)
>
>def main():
>     reactor.callWhenRunning(running)
>     reactor.run()
>
>if __name__=='__main__':
>     main()
>
>...shows that, once the "b" iterator is added, each iterator is running
>1/sec, rather than the whole cooperator:
>
>a 1285925864.05 0
>a 1285925865.05 1
>a 1285925866.05 2
>a 1285925867.05 3
>a 1285925868.05 4
>a 1285925869.05 5 << running fine 1/sec up until here
>b 1285925870.05 0
>a 1285925870.55 6 << now running 2/sec
>b 1285925871.05 1
>a 1285925871.55 7
>b 1285925872.05 2
>a 1285925872.55 8
>b 1285925873.05 3
>
>I've had a look at the source code, and it looks like the logic should
>cause what I want to happen, but obviously it's not. Version is Twisted
>8.2.0 on python 2.6 (Fedora 12)
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From p.mayers at imperial.ac.uk  Fri Oct  1 08:58:15 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Oct 2010 13:58:15 +0100
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
 sec
In-Reply-To: <20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>
References: <4CA5ACB7.9020403@imperial.ac.uk>
	<20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>
Message-ID: <4CA5DAE7.6040800@imperial.ac.uk>

On 01/10/10 13:46, exarkun at twistedmatrix.com wrote:
> On 09:41 am, p.mayers at imperial.ac.uk wrote:
>> Is there an easy way to make a task.Cooperator instance only execute N
>> ticks / sec, summed across all iterators it's driving? So if you add
>> two
>> iterators, they each run at N/2 per sec, 3 at N/3, etc.
>>
>> It seems like this ought to do it:
>
> Very close!  It took me a while to notice the mistake.
>> N =<rate>
>>
>> def myScheduler(x):
>>    # reschedule N times per second
>>    reactor.callLater(1.0/N, x)
>
> The scheduler function must not return None!  This confuses the
> scheduling code in cooperator and causes it to run too many things in
> parallel.  This mistake could be detected easily by cooperator and a

Ah ha! In fact, it looks like the scheduler must return an object with a 
.cancel() method (obviously an IDelayedCall in the usual case).

I'll open a ticket; presumably it would a) be nice to detect invalid 
return values and b) update the docstring of Cooperator.__init__?


From chris at simplistix.co.uk  Fri Oct  1 09:19:15 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Fri, 01 Oct 2010 14:19:15 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4C24F.8020807@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>	<4CA49B1E.5040608@simplistix.co.uk>	<4CA49D78.7010103@imperial.ac.uk>	<4CA4A014.8080608@simplistix.co.uk>	<4CA4A451.6020509@imperial.ac.uk>	<4CA4A87E.7000408@simplistix.co.uk>
	<4CA4C24F.8020807@imperial.ac.uk>
Message-ID: <4CA5DFD3.1060508@simplistix.co.uk>

On 30/09/2010 18:01, Phil Mayers wrote:
> It is more than a little confusing, and I'm sure frustrating.
>
> I've tried to produce something like this locally, but cannot.

The very first message in this thread (28th Sept, 14:48) and my email of 
30th Sept, 14:36 both had scripts attached which do exactly this..

> Let me see if I understand the problem in full.
>
> You have an @inlineCallbacks-decorated generator which is the target of
> a LoopingCall, like so:
>
> @inlineCallbacks
> def loop():
>     try:
>       somework()
>     except:
>       log.err()
>
> lc = task.LoopingCall(loop)

Almost:

     @inlineCallbacks
     def loop(self):
         # Check for files to send on schedule
         yield self.checkSchedule()

     @inlineCallbacks
     def checkSchedule(self):
        try:
            yield somework()
        except Exception:
            log.err(None,'Unhandled exception ...')

...although I'm currently changing the loop function to be:

     def loop(self):
	self.checkSchedule()

...as this appears to give me what I want, until something proves 
otherwise...

> You want this loop function to catch&  log all exceptions resulting from
> work it initiates.

Yep, errbacks, internal twisted bugs, whatever. As long as they're 
logged by something, preferabyl the try-except above, I don't mind.
What absolutely must not cannot ever happen is for the scheduler to die ;-)

> Your "somework" function calls, amongst other things, an
> @inlineCallbacks-decorated worker function:
>
> @inlineCallbacks
> def sendTransmission(...):
>     try:
>       yield maybeDeferred(feed.initiateTransmission)
>     except:
>       ...some handling

Yep.

> You are seeing two errors:
>
>
>    1. A GeneratorExit exception. This appears (if I'm reading your
> logging right) to be caught by your logging?

Yep.

>    2. A ConnectionLost exception. This is not caught by your logging, and
> is propagating up to the reactor, and giving "Unhandled Error"

Correct.


From exarkun at twistedmatrix.com  Fri Oct  1 09:27:02 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Oct 2010 13:27:02 -0000
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
	sec
In-Reply-To: <4CA5DAE7.6040800@imperial.ac.uk>
References: <4CA5ACB7.9020403@imperial.ac.uk>
	<20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>
	<4CA5DAE7.6040800@imperial.ac.uk>
Message-ID: <20101001132702.2022.861556396.divmod.xquotient.96@localhost.localdomain>

On 12:58 pm, p.mayers at imperial.ac.uk wrote:
>On 01/10/10 13:46, exarkun at twistedmatrix.com wrote:
>>On 09:41 am, p.mayers at imperial.ac.uk wrote:
>>>Is there an easy way to make a task.Cooperator instance only execute 
>>>N
>>>ticks / sec, summed across all iterators it's driving? So if you add
>>>two
>>>iterators, they each run at N/2 per sec, 3 at N/3, etc.
>>>
>>>It seems like this ought to do it:
>>
>>Very close!  It took me a while to notice the mistake.
>>>N =<rate>
>>>
>>>def myScheduler(x):
>>>    # reschedule N times per second
>>>    reactor.callLater(1.0/N, x)
>>
>>The scheduler function must not return None!  This confuses the
>>scheduling code in cooperator and causes it to run too many things in
>>parallel.  This mistake could be detected easily by cooperator and a
>
>Ah ha! In fact, it looks like the scheduler must return an object with 
>a
>.cancel() method (obviously an IDelayedCall in the usual case).
>
>I'll open a ticket; presumably it would a) be nice to detect invalid
>return values and b) update the docstring of Cooperator.__init__?

Sounds great.

Jean-Paul


From p.mayers at imperial.ac.uk  Fri Oct  1 09:28:26 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Oct 2010 14:28:26 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA5DFD3.1060508@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>	<4CA49B1E.5040608@simplistix.co.uk>	<4CA49D78.7010103@imperial.ac.uk>	<4CA4A014.8080608@simplistix.co.uk>	<4CA4A451.6020509@imperial.ac.uk>	<4CA4A87E.7000408@simplistix.co.uk>
	<4CA4C24F.8020807@imperial.ac.uk>
	<4CA5DFD3.1060508@simplistix.co.uk>
Message-ID: <4CA5E1FA.9060309@imperial.ac.uk>

On 01/10/10 14:19, Chris Withers wrote:
> On 30/09/2010 18:01, Phil Mayers wrote:
>> It is more than a little confusing, and I'm sure frustrating.
>>
>> I've tried to produce something like this locally, but cannot.
>
> The very first message in this thread (28th Sept, 14:48) and my email of
> 30th Sept, 14:36 both had scripts attached which do exactly this..

If your examples scripts genuinely reflect the problem (a bit of code, 
outside your control, is raising an exception in a context where the 
error doesn't flow back to user code) then Glyph is (of course!) right - 
you're not going to be able to capture and log the error "nicely". It 
will be propagated upwards until it hits the reactor.

>
>> You want this loop function to catch&   log all exceptions resulting from
>> work it initiates.
>
> Yep, errbacks, internal twisted bugs, whatever. As long as they're
> logged by something, preferabyl the try-except above, I don't mind.
> What absolutely must not cannot ever happen is for the scheduler to die ;-)
>

Now *this* you should be able to do.

A LoopingCall will only die (i.e. stop permanently) if you:

  1. Raise an exception
  2. Return a deferred which errback's

(The former gets turned into the latter)

If you ensure your loop never ever does this, it'll run forever.

HOWEVER: as JP has mentioned, a LoopingCall *will* pause if you return a 
deferred, until that deferred callback's (or errback's, then it dies)

So this:

def loop():
   try:
     somework()
   except:
     pass

...should never ever die (because it can't raise an exception) or stop 
(because it doesn't return a deferred)


From chris at simplistix.co.uk  Fri Oct  1 09:30:48 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Fri, 01 Oct 2010 14:30:48 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>
References: <4CA1F212.9040305@simplistix.co.uk>
	<F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>
Message-ID: <4CA5E288.1010905@simplistix.co.uk>

Hi Glyph,

On 30/09/2010 19:52, Glyph Lefkowitz wrote:
>> File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py",
>> line 757, in runUntilCurrent
>> call.func(*call.args, **call.kw)
>> File "test_looping.py", line 24, in __call__
>> del self.connector
>> exceptions.AttributeError: Break instance has no attribute 'connector'
>
> This traceback indicates a bug in Twisted.
>
> This is an error that other people have very occasionally spotted, and
> we have never been able to reliably reproduce it.

While I'm able to reproduce this, I can't really as it involves a 
customer ftp server also generating error messages and they've already 
had enough of them ;-)

> Over the years we have
> tried to diagnose it in various ways and we have always failed.
>
> It would be really valuable to everyone if you could write up a bug and

Is there a bug already tracking this?

> provide detailed reproduction instructions, ideally with some python
> code that triggers this error, so that we can address the bug. It would
> be super useful if you could write an example that reproduces the same
> bug on a recent Twisted version (8.2 is pretty old), especially the 10.2
> prerelease. But, if your example reproduces on 8.2 and not 10.0, that
> tells us something too.

Well, unfortunately I can't do any of the above :-( I've only seen this, 
as I said previously, when we use twisted.protocols.ftp.FTPClient to try 
to send a file to an ftp server that was only able to handle active ftp 
transfers when our setup only allowed passive ftp transfers.

It was happening in a steady, reproducible fashion (ie: every time we 
tried) but unfortunately we've had to bail and now send via sftp using a 
pexpect-based wrapper around the real sftp command client (we had buggy 
behaviour with twisted's sftp client elsewhere)

I hope this helps, do let me know if I should add it to an issue 
somewhere...

cheers,

Chris


From exarkun at twistedmatrix.com  Fri Oct  1 10:00:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Oct 2010 14:00:08 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA5E288.1010905@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>
	<4CA5E288.1010905@simplistix.co.uk>
Message-ID: <20101001140008.2022.1178438336.divmod.xquotient.98@localhost.localdomain>

On 01:30 pm, chris at simplistix.co.uk wrote:
>Hi Glyph,
>
>On 30/09/2010 19:52, Glyph Lefkowitz wrote:
>>>File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py",
>>>line 757, in runUntilCurrent
>>>call.func(*call.args, **call.kw)
>>>File "test_looping.py", line 24, in __call__
>>>del self.connector
>>>exceptions.AttributeError: Break instance has no attribute 
>>>'connector'
>>
>>This traceback indicates a bug in Twisted.
>>
>>This is an error that other people have very occasionally spotted, and
>>we have never been able to reliably reproduce it.
>
>While I'm able to reproduce this, I can't really as it involves a
>customer ftp server also generating error messages and they've already
>had enough of them ;-)
>>Over the years we have
>>tried to diagnose it in various ways and we have always failed.
>>
>>It would be really valuable to everyone if you could write up a bug 
>>and
>
>Is there a bug already tracking this?
>>provide detailed reproduction instructions, ideally with some python
>>code that triggers this error, so that we can address the bug. It 
>>would
>>be super useful if you could write an example that reproduces the same
>>bug on a recent Twisted version (8.2 is pretty old), especially the 
>>10.2
>>prerelease. But, if your example reproduces on 8.2 and not 10.0, that
>>tells us something too.
>
>Well, unfortunately I can't do any of the above :-( I've only seen 
>this,
>as I said previously, when we use twisted.protocols.ftp.FTPClient to 
>try
>to send a file to an ftp server that was only able to handle active ftp
>transfers when our setup only allowed passive ftp transfers.
>
>It was happening in a steady, reproducible fashion (ie: every time we
>tried) but unfortunately we've had to bail and now send via sftp using 
>a
>pexpect-based wrapper around the real sftp command client (we had buggy
>behaviour with twisted's sftp client elsewhere)
>
>I hope this helps, do let me know if I should add it to an issue
>somewhere...

Can you at least provide a traffic capture recording an instance of this 
happening?

Jean-Paul


From chris at simplistix.co.uk  Fri Oct  1 11:15:06 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Fri, 01 Oct 2010 16:15:06 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20101001140008.2022.1178438336.divmod.xquotient.98@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>	<4CA5E288.1010905@simplistix.co.uk>
	<20101001140008.2022.1178438336.divmod.xquotient.98@localhost.localdomain>
Message-ID: <4CA5FAFA.6000805@simplistix.co.uk>

On 01/10/2010 15:00, exarkun at twistedmatrix.com wrote:
>> I hope this helps, do let me know if I should add it to an issue
>> somewhere...
>
> Can you at least provide a traffic capture recording an instance of this
> happening?

I'm afraid not, I didn't have the forsight to do this at the time, and 
as I've said, the customer has had enough of us causing their ftp server 
to generate error messages :-S

Chris


From powdahound at gmail.com  Fri Oct  1 12:24:44 2010
From: powdahound at gmail.com (Garret Heaton)
Date: Fri, 1 Oct 2010 09:24:44 -0700
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
 when using pseudo terminal
In-Reply-To: <4CA4B230.1030709@gmail.com>
References: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
	<AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>
	<4CA4B230.1030709@gmail.com>
Message-ID: <AANLkTimKD2Pc6faxvCFuwK2U7TxTNOXN_yE0vYGgxY1d@mail.gmail.com>

Thanks, that explains everything. The code I was using to test was copied
from Twisted's daemonizing function:
http://github.com/powdahound/twisted/blob/master/twisted/scripts/_twistd_unix.py#L155-169

It should probably be updated before more users upgrade to the new kernel
and run into this issue. Ticket #823 (
http://twistedmatrix.com/trac/ticket/823) seems very related to this.

On Thu, Sep 30, 2010 at 8:52 AM, ?iga Seilnacht <ziga.seilnacht at gmail.com>wrote:

> Hello,
>
> Garret Heaton wrote:
> > I've simplified this issue down and am able to reproduce it without
> > Twisted: http://gist.github.com/603154
> >
> > Still not sure what the cause is, so if anyone has any ideas I'd love to
> > hear them. Thanks!
> >
>
> The behavior that you are seeing seems to be related to the change in
> the 2.6.32 kernel, where they changed the child-runs-first scheduler
> parameter to false. Setting that parameter to 1 with:
>
> $ sudo sysctl -w kernel.sched_child_runs_first=1
>
> and rebooting the computer restores the behavior that you saw on the
> old kernel for me. See http://lwn.net/Articles/352863/ for more details.
>
> Parent (which is the controlling process when ran with -t) exiting before
> the child starts causes the child to receive SIGHUP signal immediately as
> it starts running, before it has time to disassociate itself from the
> parent's process group. It seems to me that this might be an actual bug
> in twistd, it should block the SIGHUP signal across the fork() calls.
>
> Your test program has an additional assumption that the child will run
> before the parent; the child in your program tries to write to stdout,
> i.e. the controlling terminal, which gets closed once the parent exits.
>
> The modified test program below works for me regardless of the setting
> of the kernel.sched_child_runs_first parameter.
>
> Hope this helps,
> Ziga
>
>
>
> import os
> import signal
>
> f = open("test_fork.out", "w")
>
> def daemonize():
>     # See http://www.faqs.org/faqs/unix-faq/programmer/faq/ - Section 1.7
>     print >> f, '--- %s: daemonizing' % os.getpid()
>
>     signal.signal(signal.SIGHUP, signal.SIG_IGN)
>     if os.fork(): # launch child and...
>         print >> f, '--- %s: kill parent 1' % os.getpid()
>         os._exit(0) # kill off parent
>     print >> f, '--- %s: old sid: %r' % (os.getpid(),
> os.getsid(os.getpid()))
>     os.setsid()
>     print >> f, '--- %s: new sid: %r' % (os.getpid(),
> os.getsid(os.getpid()))
>     if os.fork(): # launch child and...
>         print >> f, '--- %s: kill parent 2' % os.getpid()
>         os._exit(0) # kill off parent again.
>
>     signal.signal(signal.SIGHUP, signal.SIG_DFL)
>     print >> f, '--- %s: daemonizing done' % os.getpid()
>
> if __name__ == "__main__":
>     print >> f, 'starting as %d' % os.getpid()
>     daemonize()
>     print >> f, 'stopping as %s' % os.getpid()
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101001/07bef191/attachment.htm 

From jasonjwwilliams at gmail.com  Fri Oct  1 21:01:35 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Oct 2010 19:01:35 -0600
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
Message-ID: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>

I'm really pulling my hair out here. The code in question uses getPage:

http://gist.github.com/607124

If I remove the postdata argument to getPage no problem (except the postdata
is required by server I'm calling). However, no matter what I put in
postdata, I get this:

http://gist.github.com/607126

Any help is greatly appreciated.

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101001/58229187/attachment.htm 

From ivan at ludios.org  Sat Oct  2 00:38:43 2010
From: ivan at ludios.org (Ivan Kozik)
Date: Sat, 2 Oct 2010 04:38:43 +0000
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
Message-ID: <AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>

On Sat, Oct 2, 2010 at 01:01, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> I'm really pulling my hair out here. The code in question uses getPage:
> http://gist.github.com/607124
> If I remove the postdata argument to getPage no problem (except the postdata
> is required by server I'm calling). However, no matter what I put in
> postdata, I get this:
> http://gist.github.com/607126

This looks really strange.  Could you add a print statement before
line 112 of abstract.py, to see what's in self._tempDataBuffer?

Ivan


From jasonjwwilliams at gmail.com  Sat Oct  2 13:15:16 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 2 Oct 2010 11:15:16 -0600
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
	<AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
Message-ID: <AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>

Hi Ivan,

This looks really strange.  Could you add a print statement before
> line 112 of abstract.py, to see what's in self._tempDataBuffer?
>

 The conents of self._tempDataBuffer is indeed a list:

['HTTP/1.1 200 OK\r\n', 'Transfer-Encoding: chunked\r\n', '\r\n', '47\r\n',
['__add__', '__class__', '__contains__', '__delattr__', '__doc__', '__eq__',
'__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__',
'__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__',
'__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__',
'__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__',
'__sizeof__', '__str__', '__subclasshook__', '_formatter_field_name_split',
'_formatter_parser', 'capitalize', 'center', 'count', 'decode', 'encode',
'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum', 'isalpha',
'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust',
'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust',
'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith',
'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'], '\r\n',
'0\r\n\r\n']

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101002/1ee1f93a/attachment.htm 

From exarkun at twistedmatrix.com  Sat Oct  2 13:26:20 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 02 Oct 2010 17:26:20 -0000
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
	<AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
	<AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>
Message-ID: <20101002172620.2022.1410359678.divmod.xquotient.121@localhost.localdomain>

On 05:15 pm, jasonjwwilliams at gmail.com wrote:
>Hi Ivan,
>
>This looks really strange.  Could you add a print statement before
>>line 112 of abstract.py, to see what's in self._tempDataBuffer?
>
>The conents of self._tempDataBuffer is indeed a list:
>
>['HTTP/1.1 200 OK\r\n', 'Transfer-Encoding: chunked\r\n', '\r\n', 
>'47\r\n',
>['__add__', '__class__', '__contains__', '__delattr__', '__doc__', 
>'__eq__',
>'__format__', '__ge__', '__getattribute__', '__getitem__', 
>'__getnewargs__',
>'__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__',
>'__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__',
>'__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__',
>'__sizeof__', '__str__', '__subclasshook__', 
>'_formatter_field_name_split',
>'_formatter_parser', 'capitalize', 'center', 'count', 'decode', 
>'encode',
>'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum', 
>'isalpha',
>'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust',
>'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust',
>'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith',
>'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'], '\r\n',
>'0\r\n\r\n']

So it appears as if someone is calling request.write(dir(some string)). 
If you add a type check to the implementation of write, you'll probably 
get a traceback pointing at exactly the offending code (and maybe we 
should add that type check to Twisted).

Jean-Paul


From jasonjwwilliams at gmail.com  Sat Oct  2 13:47:25 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 2 Oct 2010 11:47:25 -0600
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <20101002172620.2022.1410359678.divmod.xquotient.121@localhost.localdomain>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
	<AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
	<AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>
	<20101002172620.2022.1410359678.divmod.xquotient.121@localhost.localdomain>
Message-ID: <AANLkTin3xze1oksHhzQFTcJJ3WKv-kKrGSv+F5Ls5oJj@mail.gmail.com>

Wow I feel stupid. That would be me in the callback that gets fired when
getPage completes. Originally I had written this to use web.client.Agent and
that code was helping me to inspect the response for debugging. Thank you
very much.

-J

On Sat, Oct 2, 2010 at 11:26 AM, <exarkun at twistedmatrix.com> wrote:

> On 05:15 pm, jasonjwwilliams at gmail.com wrote:
> >Hi Ivan,
> >
> >This looks really strange.  Could you add a print statement before
> >>line 112 of abstract.py, to see what's in self._tempDataBuffer?
> >
> >The conents of self._tempDataBuffer is indeed a list:
> >
> >['HTTP/1.1 200 OK\r\n', 'Transfer-Encoding: chunked\r\n', '\r\n',
> >'47\r\n',
> >['__add__', '__class__', '__contains__', '__delattr__', '__doc__',
> >'__eq__',
> >'__format__', '__ge__', '__getattribute__', '__getitem__',
> >'__getnewargs__',
> >'__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__',
> >'__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__',
> >'__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__',
> >'__sizeof__', '__str__', '__subclasshook__',
> >'_formatter_field_name_split',
> >'_formatter_parser', 'capitalize', 'center', 'count', 'decode',
> >'encode',
> >'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum',
> >'isalpha',
> >'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust',
> >'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust',
> >'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith',
> >'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'], '\r\n',
> >'0\r\n\r\n']
>
> So it appears as if someone is calling request.write(dir(some string)).
> If you add a type check to the implementation of write, you'll probably
> get a traceback pointing at exactly the offending code (and maybe we
> should add that type check to Twisted).
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101002/806c3cad/attachment.htm 

From exarkun at twistedmatrix.com  Sun Oct  3 00:05:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 03 Oct 2010 04:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1286078729.76.576705784@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101003/ec898b5a/attachment.htm 

From p.mayers at imperial.ac.uk  Sun Oct  3 09:41:15 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 03 Oct 2010 14:41:15 +0100
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
 sec
In-Reply-To: <20101001132702.2022.861556396.divmod.xquotient.96@localhost.localdomain>
References: <4CA5ACB7.9020403@imperial.ac.uk>	<20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>	<4CA5DAE7.6040800@imperial.ac.uk>
	<20101001132702.2022.861556396.divmod.xquotient.96@localhost.localdomain>
Message-ID: <4CA887FB.5010807@imperial.ac.uk>

On 10/01/2010 02:27 PM, exarkun at twistedmatrix.com wrote:
> On 12:58 pm, p.mayers at imperial.ac.uk wrote:
>> On 01/10/10 13:46, exarkun at twistedmatrix.com wrote:
>>> On 09:41 am, p.mayers at imperial.ac.uk wrote:
>>>> Is there an easy way to make a task.Cooperator instance only execute
>>>> N
>>>> ticks / sec, summed across all iterators it's driving? So if you add
>>>> two
>>>> iterators, they each run at N/2 per sec, 3 at N/3, etc.
>>>>
>>>> It seems like this ought to do it:
>>>
>>> Very close!  It took me a while to notice the mistake.
>>>> N =<rate>
>>>>
>>>> def myScheduler(x):
>>>>     # reschedule N times per second
>>>>     reactor.callLater(1.0/N, x)
>>>
>>> The scheduler function must not return None!  This confuses the
>>> scheduling code in cooperator and causes it to run too many things in
>>> parallel.  This mistake could be detected easily by cooperator and a
>>
>> Ah ha! In fact, it looks like the scheduler must return an object with
>> a
>> .cancel() method (obviously an IDelayedCall in the usual case).
>>
>> I'll open a ticket; presumably it would a) be nice to detect invalid
>> return values and b) update the docstring of Cooperator.__init__?
>
> Sounds great.

I opened:

http://twistedmatrix.com/trac/ticket/4666

...and attached a simple unit test & patch/docstring update.


From stephen.c.waterbury at nasa.gov  Tue Oct  5 16:09:56 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 5 Oct 2010 16:09:56 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
Message-ID: <4CAB8614.5060007@nasa.gov>

First, the "PB Copyable: Passing Complex Types" doc is
*great* and the examples are excellent -- my compliments to
all who contributed!

My question is about the pb.Cacheable section
(http://twistedmatrix.com/documents/current/core/howto/pb-copyable.html#auto9)
-- specifically the first sentence:  'Sometimes the object you
want to send to the remote process is big and slow. "big" means
it takes a lot of data (storage, network bandwidth, processing)
to represent its state.  "slow" means that state doesn't change
very frequently.'

I would think that the product of its size and its rate of change
is the applicable metric -- i.e.:  the bigger the object is *or*
the faster it changes (not the slower), the more applicable
Cacheable is, no?

Steve



From ygingras at ygingras.net  Wed Oct  6 20:49:12 2010
From: ygingras at ygingras.net (Yannick Gingras)
Date: Wed, 6 Oct 2010 20:49:12 -0400
Subject: [Twisted-Python] ConFoo 2011 Call for Speakers
Message-ID: <201010062049.12842.ygingras@ygingras.net>

Greetings Twisters, 
  We, Montr?al-Python, are the coordinators of the Python track at
ConFoo 2011 and we are very proud to announce our call for speakers.

PHP-Qu?bec, Montr?al-Python, Montreal.rb, W3Qc, and OWASP Montr?al are
organizing the first edition of the ConFoo conference, which will be
held in Montr?al on March 9th through 11th at the Hilton Bonaventure
Hotel.  With over 500 expected attendees, ConFoo is one of the largest
Web development conference in North America.

ConFoo is about the Web, but it's also about showcasing the strengths
of different technologies.  Do you think that Python beats all the
other languages out there for Web development?  Do you think that
Twisted knocks Tornado's socks off?  Come and tell us why!

Sessions are one hour long and you can present in French or in
English, which ever your prefer.  Submissions are due for November 26;
for more details, visit the ConFoo website:

  http://confoo.ca/en/call-for-papers

By the way, we are perfectly aware that there is a slight clash with
PyCon.  You should not worry about that since all Python talks will
happen before Friday, giving you plenty of time for the commute
towards Atlanta.  

Share the word!

-- 
Yannick Gingras
http://montrealpython.org -- lead organizer
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101006/c1675137/attachment.pgp 

From jason-sage at creativetrax.com  Thu Oct  7 14:53:54 2010
From: jason-sage at creativetrax.com (jason-sage at creativetrax.com)
Date: Thu, 07 Oct 2010 13:53:54 -0500
Subject: [Twisted-Python] patch for TLS
Message-ID: <4CAE1742.1000300@creativetrax.com>

(cc to both twisted and sage-devel lists)

Hi all,

In the Sage project (http://sagemath.org), we apply a patch to the 
Twisted version we distribute.  I'd like to clean out our custom patches 
and push them upstream, if possible.  So I have a couple of questions 
(I'm not terribly familiar with Twisted):

1. Is the patch below generally useful?

2. Is there a better way to do this than to patch the file?

3. What do we need to do to incorporate it upstream in Twisted?


PATCH (against the Twisted git mirror, as of today):

diff --git a/twisted/application/internet.py 
b/twisted/application/internet.py
index 8437568..0397f08 100644
--- a/twisted/application/internet.py
+++ b/twisted/application/internet.py
@@ -193,7 +193,7 @@ on arguments to the reactor method.
  }

  import new
-for tran in 'TCP UNIX SSL UDP UNIXDatagram Multicast'.split():
+for tran in 'TCP UNIX SSL TLS UDP UNIXDatagram Multicast'.split():
      for side in 'Server Client'.split():
          if tran == "Multicast" and side == "Client":
              continue
diff --git a/twisted/application/strports.py 
b/twisted/application/strports.py
index 3654413..2b6ca08 100644
--- a/twisted/application/strports.py
+++ b/twisted/application/strports.py
@@ -79,9 +79,25 @@ def _parseSSL(factory, port, privateKey="server.pem", 
certKey=None,
      return ((int(port), factory, cf),
              {'interface': interface, 'backlog': int(backlog)})

+def _parseTLS(factory, port, privateKey='server.pem', certKey=None,
+              sslmethod=None, interface='', backlog=50):
+    from gnutls.interfaces.twisted import X509Credentials
+    from gnutls.crypto import X509Certificate, X509PrivateKey
+
+    if certKey is None:
+        certKey = privateKey
+
+    cert = X509Certificate(open(certKey).read())
+    key = X509PrivateKey(open(privateKey).read())
+    cf = X509Credentials(cert, key)
+
+    return ((int(port), factory, cf),
+            {'interface': interface, 'backlog': int(backlog)})
+
  _funcs = {"tcp": _parseTCP,
            "unix": _parseUNIX,
-          "ssl": _parseSSL}
+          "ssl": _parseSSL,
+          "tls": _parseTLS}

  _OP, _STRING = range(2)
  def _tokenize(description):



Thanks for the excellent software!

Jason

[1] http://sagemath.org


From itamar at itamarst.org  Thu Oct  7 15:03:13 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 7 Oct 2010 15:03:13 -0400
Subject: [Twisted-Python] patch for TLS
In-Reply-To: <4CAE1742.1000300@creativetrax.com>
References: <4CAE1742.1000300@creativetrax.com>
Message-ID: <f88c91688ad1783ed066fa76f342f9c6.squirrel@webmail.zoteca.com>

> (cc to both twisted and sage-devel lists)
>
> Hi all,
>
> In the Sage project (http://sagemath.org), we apply a patch to the
> Twisted version we distribute.  I'd like to clean out our custom patches
> and push them upstream, if possible.  So I have a couple of questions
> (I'm not terribly familiar with Twisted):
>
> 1. Is the patch below generally useful?
>
> 2. Is there a better way to do this than to patch the file?

"ssl:443:sslmethod=TLSv1_METHOD" should do what you want, I think.



From gelonida at gmail.com  Thu Oct  7 15:48:41 2010
From: gelonida at gmail.com (Gelonida)
Date: Thu, 07 Oct 2010 21:48:41 +0200
Subject: [Twisted-Python] recommended starting point for http
	debugging/logging proxy.
Message-ID: <i8l86q$g27$1@dough.gmane.org>

Hi,


Can anybody recommend  a good starting point for a twisted http proxy,
or comment on the links that I'll mention lateron in this post?




I'd like to use a ddebugging it for playing/debugging/filtering



Initially I'd just like to log all requests.

lateron I'd like to save certain responses on the disk.



Please note:
Im familiar with python and http / html in general.

I'm not experienced with twisted, but thought, that this might be a good
example / excuseto learn a little.




I found following links and wondered what you could recommend:




http://defrang.com/python mentions a HTTP Debugging Proxy
---------------------------------------------------------



http://wiki.python.org/moin/Twisted-Examples has following example, but
I dont't know where to hook in:



I found one twisted example for a web proxy, but it was so simple, that
I don''t have any idea of where to hook in.

from twisted.web import proxy, http
from twisted.internet import reactor
from twisted.python import log
import sys
log.startLogging(sys.stdout)

class ProxyFactory(http.HTTPFactory):
    protocol = proxy.Proxy

reactor.listenTCP(8080, ProxyFactory())
reactor.run()

-------------------------------------------------------------


http://sujitpal.blogspot.com/2010/03/http-debug-proxy-with-twisted.html


seems also interesting





From glyph at twistedmatrix.com  Thu Oct  7 23:39:58 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 7 Oct 2010 23:39:58 -0400
Subject: [Twisted-Python] patch for TLS
In-Reply-To: <4CAE1742.1000300@creativetrax.com>
References: <4CAE1742.1000300@creativetrax.com>
Message-ID: <078A2F8A-ADCD-4C00-AA47-A1B11713F67F@twistedmatrix.com>


On Oct 7, 2010, at 2:53 PM, jason-sage at creativetrax.com wrote:

> (cc to both twisted and sage-devel lists)
> 
> Hi all,
> 
> In the Sage project (http://sagemath.org), we apply a patch to the 
> Twisted version we distribute.  I'd like to clean out our custom patches 
> and push them upstream, if possible.  So I have a couple of questions 
> (I'm not terribly familiar with Twisted):
> 
> 1. Is the patch below generally useful?

Not really.

It's not really clear what the intent of the patch is.  Your subject line implies that you don't quite understand the relationship between "SSL" and "TLS".  If you do, then you can disregard the following paragraph, but this may be useful to others following this thread even if you understand the distinction perfectly well already :).

SSL and TLS are different names for the same protocol, with subtly different implications.  "TLS" formally names a later version.  The fact that "OpenSSL" has "SSL" in its name and "GnuTLS" has "TLS" in the name is simply reflective of the fact that OpenSSL has been around for longer, and was created when "SSL" was still the name of the protocol.  See <http://www.ietf.org/rfc/rfc2246.txt>, section 3: "This document and the TLS protocol itself are based on the SSL 3.0 Protocol Specification as published by Netscape."  "TLS" is sometimes informally used to mean "start TLS after some plaintext communication" as opposed to "initiate TLS at the start of the connection", since "STARTTLS" is usually the name of the protocol command to initiate encryption over a previously-plaintext connection.  This is why Twisted has 'connectSSL' and 'listenSSL', but 'startTLS' method on a transport.

If all Sage wants is to use the later version of the protocol, the technique that Itamar suggested is the right way to go; just specify the 'method' argument in your strports description, and Twisted (via OpenSSL) will already do what you want.

Whereas if you actually want GnuTLS the library, rather than TLS the protocol...

> 2. Is there a better way to do this than to patch the file?

Yes.  As suggested on <http://twistedmatrix.com/trac/ticket/4473>, there should be an extension mechanism for registering new endpoint types with a string name, just as there is a mechanism for registering new reactors and new credential factories.  #4473 itself has been repurposed to be the endpoint API rather than the plugin mechanism, so I need to file a new ticket once #4473 is done for the separate extensibility bit.  You could contribute a fix to that new ticket, or a review for it, if you were so inclined :).

> 3. What do we need to do to incorporate it upstream in Twisted?

Follow the instructions on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>.

I can tell you right now that we're unlikely to support GnuTLS directly within Twisted (it's been discussed in the past and we didn't see a good reason to do it), but then, even if we were, the extension mechanism would be a probable prerequisite so that we could have a cleaner internal factoring of strports parsing mechanisms.  The current mechanism (even in #4473) is not really scalable.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101007/abf9fe44/attachment.htm 

From exarkun at twistedmatrix.com  Fri Oct  8 09:25:37 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 08 Oct 2010 13:25:37 -0000
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <4CAB8614.5060007@nasa.gov>
References: <4CAB8614.5060007@nasa.gov>
Message-ID: <20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>

On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov wrote:
>First, the "PB Copyable: Passing Complex Types" doc is
>*great* and the examples are excellent -- my compliments to
>all who contributed!
>
>My question is about the pb.Cacheable section
>(http://twistedmatrix.com/documents/current/core/howto/pb- 
>copyable.html#auto9)
>-- specifically the first sentence:  'Sometimes the object you
>want to send to the remote process is big and slow. "big" means
>it takes a lot of data (storage, network bandwidth, processing)
>to represent its state.  "slow" means that state doesn't change
>very frequently.'
>
>I would think that the product of its size and its rate of change
>is the applicable metric -- i.e.:  the bigger the object is *or*
>the faster it changes (not the slower), the more applicable
>Cacheable is, no?

That seems plausible.  I wonder if the rate comment is motivated by 
something else, like the chance of the remote cache being out of date 
when the remote side wants to use some of its data.  This would increase 
with the rate of change, but I don't know if it really matters.  I 
haven't ever actually used a Cacheable myself, as far as I can recall.

Jean-Paul


From exarkun at twistedmatrix.com  Fri Oct  8 09:28:32 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 08 Oct 2010 13:28:32 -0000
Subject: [Twisted-Python] recommended starting point for
	http	debugging/logging proxy.
In-Reply-To: <i8l86q$g27$1@dough.gmane.org>
References: <i8l86q$g27$1@dough.gmane.org>
Message-ID: <20101008132832.2022.10799910.divmod.xquotient.481@localhost.localdomain>

On 7 Oct, 07:48 pm, gelonida at gmail.com wrote:
>Hi,
>
>
>Can anybody recommend  a good starting point for a twisted http proxy,
>or comment on the links that I'll mention lateron in this post?

The source for twisted.web.proxy is pretty short, only a couple hundred 
lines.  If you want to use it but hook into parts of the 
request/response process, then taking a look at the implementation is 
probably a good idea.

To make sense of it, you probably want to read at least the client and 
server howtos on the Twisted site:

    http://twistedmatrix.com/documents/current/core/howto/servers.html
    http://twistedmatrix.com/documents/current/core/howto/clients.html
>I'd like to use a ddebugging it for playing/debugging/filtering
>
>Initially I'd just like to log all requests.

If you pass a logPath argument to HTTPFactory, it will log requests to 
that path.

Jean-Paul
>lateron I'd like to save certain responses on the disk.
>
>Please note:
>Im familiar with python and http / html in general.
>
>I'm not experienced with twisted, but thought, that this might be a 
>good
>example / excuseto learn a little.
>
>I found following links and wondered what you could recommend:
>
>http://defrang.com/python mentions a HTTP Debugging Proxy
>---------------------------------------------------------
>
>http://wiki.python.org/moin/Twisted-Examples has following example, but
>I dont't know where to hook in:
>
>I found one twisted example for a web proxy, but it was so simple, that
>I don''t have any idea of where to hook in.
>
>from twisted.web import proxy, http
>from twisted.internet import reactor
>from twisted.python import log
>import sys
>log.startLogging(sys.stdout)
>
>class ProxyFactory(http.HTTPFactory):
>    protocol = proxy.Proxy
>
>reactor.listenTCP(8080, ProxyFactory())
>reactor.run()
>
>-------------------------------------------------------------
>
>
>http://sujitpal.blogspot.com/2010/03/http-debug-proxy-with-twisted.html
>
>
>seems also interesting


From stephen.c.waterbury at nasa.gov  Fri Oct  8 10:59:05 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Fri, 8 Oct 2010 10:59:05 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
References: <4CAB8614.5060007@nasa.gov>
	<20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
Message-ID: <4CAF31B9.9070304@nasa.gov>

On 10/08/2010 09:25 AM, exarkun at twistedmatrix.com wrote:
> On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov wrote:
>> First, the "PB Copyable: Passing Complex Types" doc is
>> *great* and the examples are excellent -- my compliments to
>> all who contributed!
>>
>> My question is about the pb.Cacheable section
>> (http://twistedmatrix.com/documents/current/core/howto/pb-
>> copyable.html#auto9)
>> -- specifically the first sentence:  'Sometimes the object you
>> want to send to the remote process is big and slow. "big" means
>> it takes a lot of data (storage, network bandwidth, processing)
>> to represent its state.  "slow" means that state doesn't change
>> very frequently.'
>>
>> I would think that the product of its size and its rate of change
>> is the applicable metric -- i.e.:  the bigger the object is *or*
>> the faster it changes (not the slower), the more applicable
>> Cacheable is, no?
>
> That seems plausible.  I wonder if the rate comment is motivated by
> something else, like the chance of the remote cache being out of date
> when the remote side wants to use some of its data.  This would increase
> with the rate of change, but I don't know if it really matters.  I
> haven't ever actually used a Cacheable myself, as far as I can recall.

Thanks, jp!  Fair enough, but that seems equally applicable to
Copyable -- a copy could as easily be stale as a cache, I'd think.
(Maybe more easily, if it takes longer to update.)

So you've just used Copyable, not Cacheable?
I wonder if anyone has used it ... maybe I'll be the first!  Ooooo.  :)

Cheers,
Steve



From lvh at laurensvh.be  Fri Oct  8 13:35:23 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 8 Oct 2010 19:35:23 +0200
Subject: [Twisted-Python] Conch for file transfer?
Message-ID: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>

Hi,


Is there any documentation about using Conch for file transfer anywhere?

I'm interested in doing a continuous deployment thing using it. That
means two parts:
1) the ability to submit changes: the hard part here is file transfer
of the binary diffs
2) the ability to control a subprocess: basically like supervisord but
not written with medusa
3) manual intervention would be nice, so manhole

I can't find any documentation or examples, but these classes do exist.

I've considered giving up and just using HTTPS instead for file
transfer and control. Good idea or not?


thanks in advance
lvh


From drew.smathers at gmail.com  Fri Oct  8 14:00:00 2010
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 8 Oct 2010 14:00:00 -0400
Subject: [Twisted-Python] Conch for file transfer?
In-Reply-To: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>
References: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>
Message-ID: <AANLkTik0E=VpRisgMcMVkeghnNuRcSuCKABdvS2yq1-a@mail.gmail.com>

On Fri, Oct 8, 2010 at 1:35 PM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> Hi,
>
>
> Is there any documentation about using Conch for file transfer anywhere?
>
> I'm interested in doing a continuous deployment thing using it. That
> means two parts:
> 1) the ability to submit changes: the hard part here is file transfer
> of the binary diffs
> 2) the ability to control a subprocess: basically like supervisord but
> not written with medusa
> 3) manual intervention would be nice, so manhole
>
> I can't find any documentation or examples, but these classes do exist.
>

Have you looked at
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/scripts/cftp.py#L129
as a starting point? It's a little sketchy in places and there's at
least one serious bug:

http://twistedmatrix.com/trac/ticket/3927

But it was nonetheless enough to help me write a component that
transfers large media assets to a cdn origin server.

-Drew


From glyph at twistedmatrix.com  Fri Oct  8 15:46:53 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 8 Oct 2010 15:46:53 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
References: <4CAB8614.5060007@nasa.gov>
	<20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
Message-ID: <5E8B7360-4FF6-4A6C-A40D-1B0F234E1536@twistedmatrix.com>


On Oct 8, 2010, at 9:25 AM, exarkun at twistedmatrix.com wrote:

> On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov wrote:
>> First, the "PB Copyable: Passing Complex Types" doc is
>> *great* and the examples are excellent -- my compliments to
>> all who contributed!
>> 
>> My question is about the pb.Cacheable section
>> (http://twistedmatrix.com/documents/current/core/howto/pb- 
>> copyable.html#auto9)
>> -- specifically the first sentence:  'Sometimes the object you
>> want to send to the remote process is big and slow. "big" means
>> it takes a lot of data (storage, network bandwidth, processing)
>> to represent its state.  "slow" means that state doesn't change
>> very frequently.'
>> 
>> I would think that the product of its size and its rate of change
>> is the applicable metric -- i.e.:  the bigger the object is *or*
>> the faster it changes (not the slower), the more applicable
>> Cacheable is, no?
> 
> That seems plausible.  I wonder if the rate comment is motivated by 
> something else, like the chance of the remote cache being out of date 
> when the remote side wants to use some of its data.  This would increase 
> with the rate of change, but I don't know if it really matters.  I 
> haven't ever actually used a Cacheable myself, as far as I can recall.

I think I probably wrote that paragraph, and it was not very well put.  Big objects which are "fast", i.e. change constantly, are perfectly suitable for Cacheables.

The point I believe I was trying to make there was that if a significant proportion of the object's data is changing quickly, Cacheable doesn't make much of a difference over just re-Copyable-ing the whole object, since the delta updates will be the same size as the whole object.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101008/791b61d0/attachment.html 

From koder.chen.1984 at gmail.com  Sat Oct  9 05:16:08 2010
From: koder.chen.1984 at gmail.com (koder chen)
Date: Sat, 9 Oct 2010 17:16:08 +0800
Subject: [Twisted-Python] I am confused on transport.write and
	transport.writeSomeData
Message-ID: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>

It seems that, when use "self.transport.write" in the protocol implementation,
it will buffer the content for a long time before it actually send it
out, especially
when the size of content is big, is there a 'flush' like method that I
can do the
flush manually?

And when use 'self.transport.writeSomeData', if the size of content to
be sent is
large, it will not be able to send anything. What is the strategy to use it?


From exarkun at twistedmatrix.com  Sat Oct  9 08:07:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 09 Oct 2010 12:07:18 -0000
Subject: [Twisted-Python] I am confused on transport.write
	and	transport.writeSomeData
In-Reply-To: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>
References: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>
Message-ID: <20101009120718.2022.1358538274.divmod.xquotient.488@localhost.localdomain>

On 09:16 am, koder.chen.1984 at gmail.com wrote:
>It seems that, when use "self.transport.write" in the protocol 
>implementation,
>it will buffer the content for a long time before it actually send it
>out, especially
>when the size of content is big, is there a 'flush' like method that I
>can do the
>flush manually?

There's no more buffering than is necessary.  If your data isn't sent 
pretty quickly, then you're doing something wrong.  For example, perhaps 
you're calling transport.write from a non-reactor thread?  Or in a 
never-ending loop?
>And when use 'self.transport.writeSomeData', if the size of content to
>be sent is
>large, it will not be able to send anything. What is the strategy to 
>use it?

Don't ever call transport.writeSomeData.  It will do something 
arbitrarily wrong.

Jean-Paul


From waterbug at pangalactic.us  Sat Oct  9 11:53:39 2010
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 09 Oct 2010 11:53:39 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <5E8B7360-4FF6-4A6C-A40D-1B0F234E1536@twistedmatrix.com>
References: <4CAB8614.5060007@nasa.gov>	<20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
	<5E8B7360-4FF6-4A6C-A40D-1B0F234E1536@twistedmatrix.com>
Message-ID: <4CB09003.50206@pangalactic.us>

On 10/08/2010 03:46 PM, Glyph Lefkowitz wrote:
>
> On Oct 8, 2010, at 9:25 AM, exarkun at twistedmatrix.com
> <mailto:exarkun at twistedmatrix.com> wrote:
>
>> On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov
>> <mailto:stephen.c.waterbury at nasa.gov> wrote:
>>> First, the "PB Copyable: Passing Complex Types" doc is
>>> *great* and the examples are excellent -- my compliments to
>>> all who contributed!
>>>
>>> My question is about the pb.Cacheable section
>>> (http://twistedmatrix.com/documents/current/core/howto/pb-
>>> copyable.html#auto9)
>>> -- specifically the first sentence: 'Sometimes the object you
>>> want to send to the remote process is big and slow. "big" means
>>> it takes a lot of data (storage, network bandwidth, processing)
>>> to represent its state. "slow" means that state doesn't change
>>> very frequently.'
>>>
>>> I would think that the product of its size and its rate of change
>>> is the applicable metric -- i.e.: the bigger the object is *or*
>>> the faster it changes (not the slower), the more applicable
>>> Cacheable is, no?
>>
>> That seems plausible. I wonder if the rate comment is motivated by
>> something else, like the chance of the remote cache being out of date
>> when the remote side wants to use some of its data. This would increase
>> with the rate of change, but I don't know if it really matters. I
>> haven't ever actually used a Cacheable myself, as far as I can recall.
>
> I think I probably wrote that paragraph, and it was not very well put.
> Big objects which are "fast", i.e. change constantly, are perfectly
> suitable for Cacheables.
>
> The point I believe I was trying to make there was that if /a
> significant proportion/ of the object's data is changing quickly,
> Cacheable doesn't make much of a difference over just re-Copyable-ing
> the whole object, since the delta updates will be the same size as the
> whole object.

Certainly true.  Again, the documentation and the examples are great,
anyway, so that part is not a big deal, I was just curious.  Thanks,
Glyph.

Cheers,
Steve


From lvh at laurensvh.be  Sat Oct  9 18:23:42 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 10 Oct 2010 00:23:42 +0200
Subject: [Twisted-Python] Conch for file transfer?
In-Reply-To: <AANLkTik0E=VpRisgMcMVkeghnNuRcSuCKABdvS2yq1-a@mail.gmail.com>
References: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>
	<AANLkTik0E=VpRisgMcMVkeghnNuRcSuCKABdvS2yq1-a@mail.gmail.com>
Message-ID: <AANLkTin15eJJaUZ=QPGmV5EbyyzpU-VqnS4cbG7mhy0w@mail.gmail.com>

Whoops, I had already replied to this yesterday but apparently to the
wrong list.

That's a very helpful thing, but it appears to be about writing a
client for file transfer. The hard part (which I, one day later of
source trawling, still can't figure out how to do), is a *server*
that:

1) accepts incoming files
2) runs commands (preferably custom ones and not arbitrary shell ones)
3) can be manholed into for manual stuff

But I'm beginning to think I'm better off doing (1) and (2) with twisted.web.


thanks for your reply,
Laurens


From exarkun at twistedmatrix.com  Sun Oct 10 00:05:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 10 Oct 2010 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1286683531.06.1540838937@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101010/941b4173/attachment.htm 

From koder.chen.1984 at gmail.com  Mon Oct 11 10:58:22 2010
From: koder.chen.1984 at gmail.com (koder chen)
Date: Mon, 11 Oct 2010 22:58:22 +0800
Subject: [Twisted-Python] I am confused on transport.write and
	transport.writeSomeData
In-Reply-To: <20101009120718.2022.1358538274.divmod.xquotient.488@localhost.localdomain>
References: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>
	<20101009120718.2022.1358538274.divmod.xquotient.488@localhost.localdomain>
Message-ID: <AANLkTimfq=71Uf4ecTKUOobe=eakwOr2T7h6UZ6MonOY@mail.gmail.com>

It works! In the original codes, I use 'write' directly in another
thread instead
of the reactor thread, it seems that this caused the 'slow' problem. Now, I
have changed to use reactor.callFromThread, and it works fine till now.

thanks! :-)

On Sat, Oct 9, 2010 at 8:07 PM,  <exarkun at twistedmatrix.com> wrote:
> On 09:16 am, koder.chen.1984 at gmail.com wrote:
>>It seems that, when use "self.transport.write" in the protocol
>>implementation,
>>it will buffer the content for a long time before it actually send it
>>out, especially
>>when the size of content is big, is there a 'flush' like method that I
>>can do the
>>flush manually?
>
> There's no more buffering than is necessary. ?If your data isn't sent
> pretty quickly, then you're doing something wrong. ?For example, perhaps
> you're calling transport.write from a non-reactor thread? ?Or in a
> never-ending loop?
>>And when use 'self.transport.writeSomeData', if the size of content to
>>be sent is
>>large, it will not be able to send anything. What is the strategy to
>>use it?
>
> Don't ever call transport.writeSomeData. ?It will do something
> arbitrarily wrong.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From fenimore at gmail.com  Tue Oct 12 13:14:20 2010
From: fenimore at gmail.com (CARSON)
Date: Tue, 12 Oct 2010 11:14:20 -0600
Subject: [Twisted-Python] Missing self.wakeUp() in epoll reactor's callLater
Message-ID: <AANLkTimh_J1pK2dRMqMubLzgZynAP6_F2oZEO5KdgAGK@mail.gmail.com>

I noticed that callLater in the epollReactor does not actually wake up
the reactor; the code for the threaded select reactor, however, does
do this via a call to self.wakeUp.  It seems like epoll reactor should
be patched so that call later ends with self.wakeUp - does this seem
correct?


From exarkun at twistedmatrix.com  Tue Oct 12 13:23:33 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 12 Oct 2010 17:23:33 -0000
Subject: [Twisted-Python] Missing self.wakeUp() in epoll
	reactor's	callLater
In-Reply-To: <AANLkTimh_J1pK2dRMqMubLzgZynAP6_F2oZEO5KdgAGK@mail.gmail.com>
References: <AANLkTimh_J1pK2dRMqMubLzgZynAP6_F2oZEO5KdgAGK@mail.gmail.com>
Message-ID: <20101012172333.2022.1511008212.divmod.xquotient.493@localhost.localdomain>

On 05:14 pm, fenimore at gmail.com wrote:
>I noticed that callLater in the epollReactor does not actually wake up
>the reactor; the code for the threaded select reactor, however, does
>do this via a call to self.wakeUp.  It seems like epoll reactor should
>be patched so that call later ends with self.wakeUp - does this seem
>correct?

Nope.  wakeUp is only for waking up the reactor from another thread. 
callLater is not allowed to be called from another thread.

Lots of weird threaded stuff is going on in the threadedselect code 
which means extra wakeUp calls are necessary at various places, but none 
of the other reactors need it.

Jean-Paul


From erik at letterror.com  Wed Oct 13 10:55:45 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 16:55:45 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CAB8614.5060007@nasa.gov>
References: <4CAB8614.5060007@nasa.gov>
Message-ID: <AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>

Hi,

I'm running into crashes with deamonize() from _twistd_unix.py on OSX  
10.6 "snow leopard".

Crash report contains the ominous flag:

USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER

This flag shows up in some issues reported in other python projects on  
OSX. Apparently 10.5 was more forgiving about this but 10.6 aborts the  
process.

- Has this been an issue for twisted users on OSX 10.6?

- Best practices for addressing it?



The code calls fork(), but no exec():

def daemonize():

     # See http://www.erlenstar.demon.co.uk/unix/faq_toc.html#TOC16

     if os.fork():   # launch child and...

         os._exit(0) # kill off parent

     os.setsid()

     if os.fork():   # launch child and...

         os._exit(0) # kill off parent again.

     null = os.open('/dev/null', os.O_RDWR)

     for i in range(3):

         try:

             os.dup2(null, i)

         except OSError, e:

             if e.errno != errno.EBADF:

                 raise

     os.close(null)



Thanks,

Erik van Blokland


From p.mayers at imperial.ac.uk  Wed Oct 13 11:40:39 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 16:40:39 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
Message-ID: <4CB5D2F7.6050704@imperial.ac.uk>

On 13/10/10 15:55, Erik van Blokland wrote:
>
> The code calls fork(), but no exec():

fork() with no exec() is legal Unix.

Various googling led me to:

http://trac.adium.im/ticket/13976#comment:28

"""The problem is that OSX since version 10.6 (Snow Leopard) does NOT 
allow processes launched via Dock (not via exec) to use fork() function, 
which is one used by Gadu-Gadu resolver. And stuff that crashes is NOT 
main Adium process, but resolver GG process, that is killed by OS 
itself. """

If that's the case, I don't think twistd will work in that situation. 
twistd expects to be able to fork() (unless you give the "-n" argument 
to keep it in the foreground)


From p.mayers at imperial.ac.uk  Wed Oct 13 11:52:39 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 16:52:39 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D2F7.6050704@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk>
Message-ID: <4CB5D5C7.7050702@imperial.ac.uk>

On 13/10/10 16:40, Phil Mayers wrote:
> On 13/10/10 15:55, Erik van Blokland wrote:
>>
>> The code calls fork(), but no exec():
>
> fork() with no exec() is legal Unix.
>
> Various googling led me to:
>
> http://trac.adium.im/ticket/13976#comment:28
>
> """The problem is that OSX since version 10.6 (Snow Leopard) does NOT
> allow processes launched via Dock (not via exec) to use fork() function,
> which is one used by Gadu-Gadu resolver. And stuff that crashes is NOT
> main Adium process, but resolver GG process, that is killed by OS
> itself. """
>
> If that's the case, I don't think twistd will work in that situation.
> twistd expects to be able to fork() (unless you give the "-n" argument
> to keep it in the foreground)

Other info indicates this is Apple trying to be clever and "protect" 
applications from some signal handling issues surrounding fork() with 
libraries which aren't safe in that situation; presumably these are 
MacOS-specific libraries?

If this really is true, then MacOS X is no longer posix-compliant in 
those circumstances, and Twisted is going to need some work :o(

Can you share more details about the application; the context in which 
it is started, and which system libraries it's likely to load?


From p.mayers at imperial.ac.uk  Wed Oct 13 11:55:43 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 16:55:43 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D5C7.7050702@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
Message-ID: <4CB5D67F.4010006@imperial.ac.uk>

On 13/10/10 16:52, Phil Mayers wrote:
>
> If this really is true, then MacOS X is no longer posix-compliant in
> those circumstances, and Twisted is going to need some work :o(
>
> Can you share more details about the application; the context in which
> it is started, and which system libraries it's likely to load?

Ah; apparently:

http://developer.apple.com/library/ios/#documentation/cocoa/conceptual/Multithreading/AboutThreads/AboutThreads.html

"""using the fork function [...] Applications that depend on the Core 
Foundation, Cocoa, or Core Data frameworks (either explicitly or 
implicitly) must make a subsequent call to an exec function or those 
frameworks may behave improperly."""

Bah.


From p.mayers at imperial.ac.uk  Wed Oct 13 12:01:20 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 17:01:20 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D5C7.7050702@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
Message-ID: <4CB5D7D0.30301@imperial.ac.uk>

On 13/10/10 16:52, Phil Mayers wrote:
>
> If this really is true, then MacOS X is no longer posix-compliant in
> those circumstances, and Twisted is going to need some work :o(

One final note (sorry for the fragmentary posts!) - it seems the only 
places Twisted calls fork() are in BaseProcess (just before an exec() so 
that's fine), in a couple of test cases, and in the twistd daemonize 
function.

I think you'll just have to add the "-n" argument, or forego twistd.

HTH


From erik at letterror.com  Wed Oct 13 12:07:32 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 18:07:32 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D67F.4010006@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<4CB5D67F.4010006@imperial.ac.uk>
Message-ID: <4C25D575-B06A-4B88-A36C-B498921756A4@letterror.com>


On Oct 13, 2010, at 5:55 PM, Phil Mayers wrote:

> Ah; apparently:
> 
> http://developer.apple.com/library/ios/#documentation/cocoa/conceptual/Multithreading/AboutThreads/AboutThreads.html
> 
> """using the fork function [...] Applications that depend on the Core 
> Foundation, Cocoa, or Core Data frameworks (either explicitly or 
> implicitly) must make a subsequent call to an exec function or those 
> frameworks may behave improperly."""
> 
> Bah.

Indeed. I presume this is not easily compatible with the way daemonize works right now?

Erik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101013/2d094453/attachment.htm 

From erik at letterror.com  Wed Oct 13 12:05:15 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 18:05:15 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D5C7.7050702@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
Message-ID: <67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>


On Oct 13, 2010, at 5:52 PM, Phil Mayers wrote:

> Other info indicates this is Apple trying to be clever and "protect" 
> applications from some signal handling issues surrounding fork() with 
> libraries which aren't safe in that situation; presumably these are 
> MacOS-specific libraries?
> 
> If this really is true, then MacOS X is no longer posix-compliant in 
> those circumstances, and Twisted is going to need some work :o(
> 
> Can you share more details about the application; the context in which 
> it is started, and which system libraries it's likely to load?

Here's a compact version. The script uses OSX' Quartz to create and manipulate images. Twisted is used to wrap it as a webserver, images are served. More pointers on how to start and use it in the script itself.

The real application is more complex, it renders images for sites like this:
http://lettersetter.net/

Zip contains 1 test image, 1 script and a sample result image.
Running in no-daemon mode (the -n option) prevents the crash, but causes other issues.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted_quartz_test.zip
Type: application/zip
Size: 82474 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101013/dbe578f2/attachment-0001.zip 
-------------- next part --------------


Thanks!
Erik

From foom at fuhm.net  Wed Oct 13 13:20:20 2010
From: foom at fuhm.net (James Y Knight)
Date: Wed, 13 Oct 2010 13:20:20 -0400
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
Message-ID: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>


On Oct 13, 2010, at 12:05 PM, Erik van Blokland wrote:

> 
> On Oct 13, 2010, at 5:52 PM, Phil Mayers wrote:
> 
>> Other info indicates this is Apple trying to be clever and "protect" 
>> applications from some signal handling issues surrounding fork() with 
>> libraries which aren't safe in that situation; presumably these are 
>> MacOS-specific libraries?
>> 
>> If this really is true, then MacOS X is no longer posix-compliant in 
>> those circumstances, and Twisted is going to need some work :o(
>> 
>> Can you share more details about the application; the context in which 
>> it is started, and which system libraries it's likely to load?
> 
> Here's a compact version. The script uses OSX' Quartz to create and manipulate images. Twisted is used to wrap it as a webserver, images are served. More pointers on how to start and use it in the script itself.

You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]

Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.quartz.test.py
Type: text/x-python-script
Size: 5042 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101013/452e4763/attachment.bin 

From erik at letterror.com  Wed Oct 13 14:11:56 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 20:11:56 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
Message-ID: <B8A91A6B-5064-4701-8B8C-67EE69578E20@letterror.com>

James,

On Oct 13, 2010, at 7:20 PM, James Y Knight wrote:

> You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]
> 
> Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

Wow! That is incredible. THANKS!

Erik

From glyph at twistedmatrix.com  Wed Oct 13 16:46:35 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 13 Oct 2010 16:46:35 -0400
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
Message-ID: <15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>


On Oct 13, 2010, at 1:20 PM, James Y Knight wrote:

>> Here's a compact version. The script uses OSX' Quartz to create and manipulate images. Twisted is used to wrap it as a webserver, images are served. More pointers on how to start and use it in the script itself.
> 
> You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]

To the extent that this is an intentional decision (it's at least half accidents of implementation) it's an attempt to allow twistd to actually display an error on the console if there is a serious error starting up, i.e. your plugin is not syntactically valid Python and it's just going to exit.

While I remember agreeing that it's unfortunate, I can't actually recall any issues with executing the script before forking.  Do we have tickets for them?  Can you describe a couple?

If we are going to change this behavior, we should make twistd do something more correct, and optionally allow it to report startup errors to the console after it's forked, even if those errors don't necessarily crash it during startup.  This isn't rocket science, inheriting file descriptors and delaying exit are all pretty easy.

> Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

Thanks for this, I'm sure that other folks will find it useful.  I'm a bit surprised it's not more of a FAQ!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101013/b06957fc/attachment.htm 

From exarkun at twistedmatrix.com  Wed Oct 13 17:17:35 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 13 Oct 2010 21:17:35 -0000
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
Message-ID: <20101013211735.2414.1916236292.divmod.xquotient.72@localhost.localdomain>

On 08:46 pm, glyph at twistedmatrix.com wrote:
>
>On Oct 13, 2010, at 1:20 PM, James Y Knight wrote:
>>>Here's a compact version. The script uses OSX' Quartz to create and 
>>>manipulate images. Twisted is used to wrap it as a webserver, images 
>>>are served. More pointers on how to start and use it in the script 
>>>itself.
>>
>>You need to avoid using or importing any OSX APIs until after the 
>>daemonization has occurred. Unfortunately, twisted executes the entire 
>>script file before daemonizing. [that's unfortunate for other reasons 
>>besides this, too]
>
>If we are going to change this behavior, we should make twistd do 
>something more correct, and optionally allow it to report startup 
>errors to the console after it's forked, even if those errors don't 
>necessarily crash it during startup.  This isn't rocket science, 
>inheriting file descriptors and delaying exit are all pretty easy.

http://tm.tl/823

Jean-Paul


From nathan.stocks at gmail.com  Wed Oct 13 18:08:03 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 13 Oct 2010 16:08:03 -0600
Subject: [Twisted-Python] State of "insults"?
Message-ID: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>

JP, what's the current state of the "insults" module you wrote?  I'm
looking to bolt an ncurses-like client interface onto one of my
projects, and I didn't want to reinvent the wheel if it had already
been done, so some diligent searching turned up the "insults" module
you wrote.

There's almost no examples, and the API documentation seems to consist
of only method names (which are all very reasonably named), but not
much in the way of actual descriptions.

Is this a stable, portable module that I can expect to work on OS X
and Linux, or is it a buggy work-in-progress (or something in
between)?  Searching the list archives turned up almost no discussion
about it since 2007.

The biggest benefits I see with ncurses are that it's got tons of
documentation and I know it will work wherever Python works.
The benefits I see with insults is that it is designed to work with
Twisted and seems to have a decent selection of widgets, so I wouldn't
have to implement too many basic widgets.

~ Nathan


From exarkun at twistedmatrix.com  Thu Oct 14 11:51:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 14 Oct 2010 15:51:30 -0000
Subject: [Twisted-Python] State of "insults"?
In-Reply-To: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>
References: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>
Message-ID: <20101014155130.2414.1979301807.divmod.xquotient.475@localhost.localdomain>

On 13 Oct, 10:08 pm, nathan.stocks at gmail.com wrote:
>JP, what's the current state of the "insults" module you wrote?  I'm
>looking to bolt an ncurses-like client interface onto one of my
>projects, and I didn't want to reinvent the wheel if it had already
>been done, so some diligent searching turned up the "insults" module
>you wrote.
>
>There's almost no examples, and the API documentation seems to consist
>of only method names (which are all very reasonably named), but not
>much in the way of actual descriptions.

Did you find 
<http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/>?

I'll agree that there's little documentation, but I think the handful of 
examples is pretty good, as examples go.
>Is this a stable, portable module that I can expect to work on OS X
>and Linux, or is it a buggy work-in-progress (or something in
>between)?  Searching the list archives turned up almost no discussion
>about it since 2007.

If you're wondering about the API stability (ie, the backwards 
compatibility promises), they're the same as for the rest of Twisted. 
Things won't change out from under you.

As far as working reliably on multiple platforms, I think it does 
*pretty* well, but I know it has some bugs to be worked out, and the 
sheer number of terminal emulators out there (with their unique set of 
bugs) means that there are probably a lot of configurations in which it 
is sub-par.  I'd consider most such cases bugs to be fixed in insults, 
but someone still needs to fix them for that to help you. ;)
>The biggest benefits I see with ncurses are that it's got tons of
>documentation and I know it will work wherever Python works.
>The benefits I see with insults is that it is designed to work with
>Twisted and seems to have a decent selection of widgets, so I wouldn't
>have to implement too many basic widgets.

I have a couple back-burner projects in which I'm using insults, and I 
don't see changing to anything else.  However, if you'd like another 
option to consider, there's Urwid (and it supports Twisted, too).

Jean-Paul


From maarten at treewalker.org  Thu Oct 14 12:31:39 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu, 14 Oct 2010 18:31:39 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
References: <4CAB8614.5060007@nasa.gov>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
Message-ID: <201010141831.39280.maarten@treewalker.org>

On Wednesday 13 October 2010, Glyph Lefkowitz wrote:
> To the extent that this is an intentional decision (it's at least half
> accidents of implementation) it's an attempt to allow twistd to actually
> display an error on the console if there is a serious error starting up,
> i.e. your plugin is not syntactically valid Python and it's just going
> to exit.
> 
> While I remember agreeing that it's unfortunate, I can't actually recall
> any issues with executing the script before forking.  Do we have tickets
> for them?  Can you describe a couple?

A long time ago I did run into trouble with the uid/gid being applied by 
twistd after the script is executed: log files would be owned by root 
instead of by the specified uid/gid.

This is not what you asked, but I guess it's also a consequence of the 
"execute the script first" behavior of twistd.

> If we are going to change this behavior, we should make twistd do
> something more correct, and optionally allow it to report startup errors
> to the console after it's forked, even if those errors don't necessarily
> crash it during startup.  This isn't rocket science, inheriting file
> descriptors and delaying exit are all pretty easy.

When using twistd from a typical Linux init script, forking first would lead 
to the script reporting the startup was a success and after that the error 
message would be printed.

Bye,
		Maarten


From nathan.stocks at gmail.com  Thu Oct 14 18:51:10 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 14 Oct 2010 16:51:10 -0600
Subject: [Twisted-Python] State of "insults"?
In-Reply-To: <20101014155130.2414.1979301807.divmod.xquotient.475@localhost.localdomain>
References: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>
	<20101014155130.2414.1979301807.divmod.xquotient.475@localhost.localdomain>
Message-ID: <AANLkTi=PL8rdvJVzJK4dtPZZGERPmugW6-6A0nbptq98@mail.gmail.com>

On Thu, Oct 14, 2010 at 9:51 AM,  <exarkun at twistedmatrix.com> wrote:
> On 13 Oct, 10:08 pm, nathan.stocks at gmail.com wrote:
>>JP, what's the current state of the "insults" module you wrote? ?I'm
>>looking to bolt an ncurses-like client interface onto one of my
>>projects, and I didn't want to reinvent the wheel if it had already
>>been done, so some diligent searching turned up the "insults" module
>>you wrote.
>>
>>There's almost no examples, and the API documentation seems to consist
>>of only method names (which are all very reasonably named), but not
>>much in the way of actual descriptions.
>
> Did you find
> <http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/>?
>
> I'll agree that there's little documentation, but I think the handful of
> examples is pretty good, as examples go.
>>Is this a stable, portable module that I can expect to work on OS X
>>and Linux, or is it a buggy work-in-progress (or something in
>>between)? ?Searching the list archives turned up almost no discussion
>>about it since 2007.
>
> If you're wondering about the API stability (ie, the backwards
> compatibility promises), they're the same as for the rest of Twisted.
> Things won't change out from under you.
>
> As far as working reliably on multiple platforms, I think it does
> *pretty* well, but I know it has some bugs to be worked out, and the
> sheer number of terminal emulators out there (with their unique set of
> bugs) means that there are probably a lot of configurations in which it
> is sub-par. ?I'd consider most such cases bugs to be fixed in insults,
> but someone still needs to fix them for that to help you. ;)
>>The biggest benefits I see with ncurses are that it's got tons of
>>documentation and I know it will work wherever Python works.
>>The benefits I see with insults is that it is designed to work with
>>Twisted and seems to have a decent selection of widgets, so I wouldn't
>>have to implement too many basic widgets.
>
> I have a couple back-burner projects in which I'm using insults, and I
> don't see changing to anything else. ?However, if you'd like another
> option to consider, there's Urwid (and it supports Twisted, too).

Okay, so it sounds like I need to sit down and do a side-by-side
comparison between curses, insults, and urwid before I can make an
intelligent decision.

Why do terminal frameworks have such wacky names?  Sheesh...

~ Nathan


From jimgardener at gmail.com  Thu Oct 14 23:12:17 2010
From: jimgardener at gmail.com (jim gardener)
Date: Fri, 15 Oct 2010 08:42:17 +0530
Subject: [Twisted-Python] problem using imap mail client
Message-ID: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>

hi,
I installed twisted on ubuntu lucid .When I checked the version ,it shows
Version('twisted', 10, 0, 0)
I tried to run imap4client.py giving it hostname='imap.gmail.com' and
entered my username and password..When I run the program I am getting
"twisted.internet.error.TCPTimedOutError: TCP connection timed out" error.

I was able to login and read my gmail using python imaplib though..I am
wondering why it doesn't work with twisted

thanks
jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101015/d025afa1/attachment.htm 

From itamar at itamarst.org  Thu Oct 14 23:23:39 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 14 Oct 2010 23:23:39 -0400
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
Message-ID: <1287113019.1552.1.camel@blake>

On Fri, 2010-10-15 at 08:42 +0530, jim gardener wrote:
> hi,
> I installed twisted on ubuntu lucid .When I checked the version ,it
> shows Version('twisted', 10, 0, 0)
> I tried to run imap4client.py giving it hostname='imap.gmail.com' and
> entered my username and password..When I run the program I am getting
> "twisted.internet.error.TCPTimedOutError: TCP connection timed out"
> error.
> 
> I was able to login and read my gmail using python imaplib though..I
> am wondering why it doesn't work with twisted

Can you try Twisted 10.1? There were some bug fixes in the IMAP code
that may solve the problem.



From jimgardener at gmail.com  Thu Oct 14 23:27:19 2010
From: jimgardener at gmail.com (jim gardener)
Date: Fri, 15 Oct 2010 08:57:19 +0530
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <1287113019.1552.1.camel@blake>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
Message-ID: <AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>

ubuntu packs version 10.0.  Will try to build from source then
thanks for the reply
jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101015/4701c235/attachment.htm 

From jimgardener at gmail.com  Fri Oct 15 00:36:21 2010
From: jimgardener at gmail.com (jim gardener)
Date: Fri, 15 Oct 2010 10:06:21 +0530
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
Message-ID: <AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>

I installed version 10.1 frpm the ppa ..Now ,it justs waits after taking the
hostname,user/password..

Is there a way to generate a local copy of the documentation?..so I can
browse while offline?
thanks
jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101015/c175e543/attachment.htm 

From jaroslaw.fedewicz at gmail.com  Fri Oct 15 05:55:12 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Fri, 15 Oct 2010 12:55:12 +0300
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
	<AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
Message-ID: <AANLkTikOE75Vsb=v9Y4_61nwDrdwyd-ZGRvQjW0N6hDB@mail.gmail.com>

On Fri, Oct 15, 2010 at 7:36 AM, jim gardener <jimgardener at gmail.com> wrote:
>
> I installed version 10.1 frpm the ppa ..Now ,it justs waits after taking the
> hostname,user/password..
>
> Is there a way to generate a local copy of the documentation?..so I can
> browse while offline?
> thanks
> jim
>

Install pydoctor (it googles up well), then run

pydoctor --output-html twisted

in the directory your Twisted source resides. Then, have apidocs/ to
read and enjoy.

pydoctor --help may tell you about some additional knobs you will want
to tweak to bring the docs to perfection.

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?


From exarkun at twistedmatrix.com  Fri Oct 15 10:53:16 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 15 Oct 2010 14:53:16 -0000
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
	<AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
Message-ID: <20101015145316.2414.1300275620.divmod.xquotient.480@localhost.localdomain>

On 04:36 am, jimgardener at gmail.com wrote:
>I installed version 10.1 frpm the ppa ..Now ,it justs waits after 
>taking the
>hostname,user/password..

It doesn't sound like an IMAP4 problem in particular.  It sounds like 
you have some connectivity issues.  Debug the connection not being set 
up, don't worry about the IMAP4 particulars until that's working.
>Is there a way to generate a local copy of the documentation?..so I can
>browse while offline?

You can use pydoctor as was suggested, or you can download a development 
snapshot (which won't exactly match up with 10.1, but it'll be fairly 
close) from <http://buildbot.twistedmatrix.com/builds/>.

Jean-Paul


From lists at collab.nl  Fri Oct 15 14:09:53 2010
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Fri, 15 Oct 2010 20:09:53 +0200
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTikOE75Vsb=v9Y4_61nwDrdwyd-ZGRvQjW0N6hDB@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
	<AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
	<AANLkTikOE75Vsb=v9Y4_61nwDrdwyd-ZGRvQjW0N6hDB@mail.gmail.com>
Message-ID: <747F5168-0176-4512-9394-592F6C8E2A0A@collab.nl>


On 15 Oct 2010, at 11:55, Yaroslav Fedevych wrote:

> Engineer : How do I do it?
> Economist : How much will it cost?
> Twisted Developer: But does it block?

:)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101015/9b37c8c8/attachment.pgp 

From marcus at internetnowasp.net  Sat Oct 16 10:02:22 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Sat, 16 Oct 2010 22:02:22 +0800
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
Message-ID: <4CB9B06E.2080405@internetnowasp.net>

Hi,

This might seems like a trivial question or at least i would have 
thought so but it has eluded me for some time on how to do this elegantly.
In twisted mail, since the only part where we instantiate an instance of 
account  is under :

   def requestAvatar(self, avatarId, mind, *interfaces):
        account = xxinterface() # instantiate our account

How do i find out if a particular connection is already dead in the 
given "account" class? For smtp for example,
"mind" is None and avatarId is just the id of the login user. Even if 
this is pop3 or imap, the same problem arise
how do i know if the connection of the particular "Server" instance is 
dead.

Thanks for looking.

Marcus.






From ste at demaledetti.net  Sat Oct 16 11:22:56 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sat, 16 Oct 2010 17:22:56 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CB9C350.8030800@demaledetti.net>

Hi,

I have a similar problem as described in this old mail [1] except
that I am not using threads at all.

Basically my app is a server that accepts connections from a client
(connection A), when A is established it opens connections B and C
to another server and forwards data from A to B and from C back to A.

Here is how data is forwarded:

def forward(_from, to):
    _from.dataReceived = to.transport.write
    to.transport.registerProducer(_from.transport, True)

def loseConnection(proto, onlost=lambda *args: None):
    proto.connectionLost = onlost
    proto.transport.unregisterProducer()
    proto.transport.loseConnection()

as soon as connectionMade has been called on connection A, B and C:

forward(A_protocol, B_protocol)
forward(C_protocol, A_protocol)

as soon as it decides its job is done and wants to tear down all
connections:

loseConnection(B_protocol)
loseConnection(C_protocol, lambda *a: loseConnection(A_protocol))



From bogus@does.not.exist.com  Fri Oct  8 09:19:47 2010
From: bogus@does.not.exist.com ()
Date: Fri, 08 Oct 2010 13:19:47 -0000
Subject: No subject
Message-ID: <mailman.0.1287242698.11746.twisted-python@twistedmatrix.com>

function is always called with the A_protocol as argument, yet
sometimes and totally unpredictably as far as I can tell
connectionLost is not called on some A_protocol instances and
corresponding A connections get stuck in CLOSE_WAIT state.

Another hint is that netstat shows 1 byte in the Recv-Q for those
connections (and 0 in the Send-Q).


From bogus@does.not.exist.com  Fri Oct  8 09:19:47 2010
From: bogus@does.not.exist.com ()
Date: Fri, 08 Oct 2010 13:19:47 -0000
Subject: No subject
Message-ID: <mailman.1.1287242698.11746.twisted-python@twistedmatrix.com>

"""
Your issue with CLOSE_WAIT sockets could be due to registering
producers which have no further data to produce.
"""

This sounds like it could be my case, even if as you can see I am
always unregistering producers from transports before I call
loseConnection on them.

Does this sound familiar in any way? Any suggestions off top of head
while I try to come up with a self-contained sample which is
reliably reproducing the issue I'm seeing happening only "sometimes
and quite seldom[TM]"?

Thanks, ciao
ste


[1]
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017853.html
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017855.html



From ste at demaledetti.net  Sat Oct 16 11:34:52 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sat, 16 Oct 2010 17:34:52 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CB9C61C.7020902@demaledetti.net>

Apologies for the double posting, I am resending this because the
original message appears to have triggered some mbox format handling
bug somewhere and it appears truncated at the first content line
starting with "From" here:

http://twistedmatrix.com/pipermail/twisted-python/2010-October/023029.html

sorry about this
ste

-------- Messaggio originale --------
Oggetto: connectionLost never reached after calling loseConnection:
stuck in CLOSE_WAIT forever
Data: Sat, 16 Oct 2010 17:22:56 +0200
Mittente: Stefano Debenedetti <ste at demaledetti.net>
A: twisted-python at twistedmatrix.com

Hi,

I have a similar problem as described in this old mail [1] except
that I am not using threads at all.

Basically my app is a server that accepts connections from a client
(connection A), when A is established it opens connections B and C
to another server and forwards data from A to B and from C back to A.

Here is how data is forwarded:

def forward(_from, to):
    _from.dataReceived = to.transport.write
    to.transport.registerProducer(_from.transport, True)

def loseConnection(proto, onlost=lambda *args: None):
    proto.connectionLost = onlost
    proto.transport.unregisterProducer()
    proto.transport.loseConnection()

as soon as connectionMade has been called on connection A, B and C:

forward(A_protocol, B_protocol)
forward(C_protocol, A_protocol)

as soon as it decides its job is done and wants to tear down all
connections:

loseConnection(B_protocol)
loseConnection(C_protocol, lambda *a: loseConnection(A_protocol))


The debug logs in my code assure me that the loseConnection
function is always called with the A_protocol as argument, yet
sometimes and totally unpredictably as far as I can tell
connectionLost is not called on some A_protocol instances and
corresponding A connections get stuck in CLOSE_WAIT state.

Another hint is that netstat shows 1 byte in the Recv-Q for those
connections (and 0 in the Send-Q).

In another mail [2] in that old thread I got this snippet

"""
Your issue with CLOSE_WAIT sockets could be due to registering
producers which have no further data to produce.
"""

This sounds like it could be my case, even if as you can see I am
always unregistering producers from transports before I call
loseConnection on them.

Does this sound familiar in any way? Any suggestions off top of head
while I try to come up with a self-contained sample which is
reliably reproducing the issue I'm seeing happening only "sometimes
and quite seldom[TM]"?

Thanks, ciao
ste


[1]
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017853.html
[2]
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017855.html




From disappearedng at gmail.com  Sat Oct 16 13:54:30 2010
From: disappearedng at gmail.com (disappearedng)
Date: Sat, 16 Oct 2010 13:54:30 -0400
Subject: [Twisted-Python] Twisted Reverse Proxy
Message-ID: <AANLkTinBgu_g-BUzOj7WGhR4prvOQfVpPPxa9Qqp=Vg7@mail.gmail.com>

Hello everyone, I am deploying twisted as a web server for my site. I am
looking into possibilities of reverse proxying.

I have the following code right now hooked up to my reactor for django. I am
using comet, and I realize that I absolutely must use port 80 hence I am
looking into possibilities of reverse proxying. On this site, I found the
following example:

# Django setup
sys.path.append("shoout_web")
os.environ['DJANGO_SETTINGS_MODULE'] = 'shoout_web.settings'

def wrapper_WSGIRootWrapper():
    # Build the wrapper first
    generic = WSGIHandler()
    def HandlerWrapper(environ, start_response):
        environ['engine'] = engine
        return generic(environ, start_response)

    # Thread and Allowing Ctrl-C to get you out cleanly:
    pool = threadpool.ThreadPool()
    pool.start()
    reactor.addSystemEventTrigger('after', 'shutdown', pool.stop)
    return wsgi.WSGIResource(reactor, pool, HandlerWrapper)
WSGIRoot = wrapper_WSGIRootWrapper()

# Reverse Proxy
class Simple(Resource):
    isLeaf = False

    def getChild(self, name, request):
        if name == "orbited":
            print "orbited"
            return proxy.ReverseProxyResource('localhost', 12345, "/"+name)
        else:
            return WSGIRoot.getChildWithDefault(name, request)

# Attaching proxy + django
log_dir = './.log'
if not os.path.exists(log_dir):
    os.makedirs(log_dir)
reactor.listenTCP(DJANGO_PORT, server.Site(Simple(),
logPath=os.path.join(log_dir, '.django.log')))

My trouble is I don't really know what to fill in in the else part of that
second code part. I looked at text_proxy on twisted-src and there weren't
substantial examples for this. Any help?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101016/ba3843f8/attachment.htm 

From glyph at twistedmatrix.com  Sat Oct 16 23:07:34 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 16 Oct 2010 23:07:34 -0400
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <4CB9B06E.2080405@internetnowasp.net>
References: <4CB9B06E.2080405@internetnowasp.net>
Message-ID: <F07EE17E-CC1F-41B0-AA8D-3DFD03CE31B1@twistedmatrix.com>


On Oct 16, 2010, at 10:02 AM, Marcus.CM wrote:

> How do i find out if a particular connection is already dead in the 
> given "account" class?

There's no way to know; it's a race condition.  If the connection dies before authentication, then requestAvatar won't be called.  If the connection dies shortly afterward, you'll get a connectionLost shortly after authentication, but there's no way to predict that that's about to happen.

If the connection dies at the exact moment that authentication occurs... well, the joke's on you, in a network of Von Neumann architecture computers, there's no such thing as the "exact moment".  It actually died shortly afterwards, just so shortly that it seemed simultaneous to a casual human observer.  So as far as the code's concerned, it's the same as the "shortly afterward" case.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101016/a7bbdb9f/attachment.htm 

From glyph at twistedmatrix.com  Sat Oct 16 23:10:20 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 16 Oct 2010 23:10:20 -0400
Subject: [Twisted-Python] Twisted Reverse Proxy
In-Reply-To: <AANLkTinBgu_g-BUzOj7WGhR4prvOQfVpPPxa9Qqp=Vg7@mail.gmail.com>
References: <AANLkTinBgu_g-BUzOj7WGhR4prvOQfVpPPxa9Qqp=Vg7@mail.gmail.com>
Message-ID: <EB35CCA0-295C-4D12-A155-463001517924@twistedmatrix.com>


On Oct 16, 2010, at 1:54 PM, disappearedng wrote:

> My trouble is I don't really know what to fill in in the else part of that second code part.

I don't understand what you're trying to achieve that your code isn't already doing.  Can you be more specific?

From glyph at twistedmatrix.com  Sat Oct 16 23:16:35 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 16 Oct 2010 23:16:35 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CB9C350.8030800@demaledetti.net>
References: <4CB9C350.8030800@demaledetti.net>
Message-ID: <6F627456-BCF2-4898-90FC-087D257F4A23@twistedmatrix.com>


On Oct 16, 2010, at 11:22 AM, Stefano Debenedetti wrote:

> Does this sound familiar in any way? Any suggestions off top of head
> while I try to come up with a self-contained sample which is
> reliably reproducing the issue I'm seeing happening only "sometimes
> and quite seldom[TM]"?

I can't recall having seen this exact issue in the past, but as you've described it it sounds like you may have discovered a Twisted bug.  I'm looking forward to your example.

I do have a few questions:

What version of Twisted are you using?
Have you tried a more recent version? Trunk?
What reactor are you using?
Have you tried a different reactor?
What platform/OS are you on?  What version?
Have you tried a different platform?

I am also curious whether changing

   proto.transport.loseConnection()

to
   reactor.callLater(0, proto.transport.loseConnection)

makes any difference to your example.

Thanks, and good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101016/0d69effd/attachment.htm 

From exarkun at twistedmatrix.com  Sun Oct 17 00:05:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Oct 2010 04:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1287288329.8.1005228502@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101017/659b0486/attachment-0001.htm 

From marcus at internetnowasp.net  Sun Oct 17 09:16:13 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Sun, 17 Oct 2010 21:16:13 +0800
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <F07EE17E-CC1F-41B0-AA8D-3DFD03CE31B1@twistedmatrix.com>
References: <4CB9B06E.2080405@internetnowasp.net>
	<F07EE17E-CC1F-41B0-AA8D-3DFD03CE31B1@twistedmatrix.com>
Message-ID: <4CBAF71D.80701@internetnowasp.net>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101017/4bc0e097/attachment.htm 

From exarkun at twistedmatrix.com  Sun Oct 17 10:28:10 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Oct 2010 14:28:10 -0000
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <4CB9B06E.2080405@internetnowasp.net>
References: <4CB9B06E.2080405@internetnowasp.net>
Message-ID: <20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>

On 16 Oct, 02:02 pm, marcus at internetnowasp.net wrote:
>Hi,
>
>This might seems like a trivial question or at least i would have
>thought so but it has eluded me for some time on how to do this 
>elegantly.
>In twisted mail, since the only part where we instantiate an instance 
>of
>account  is under :
>
>   def requestAvatar(self, avatarId, mind, *interfaces):
>        account = xxinterface() # instantiate our account
>
>How do i find out if a particular connection is already dead in the
>given "account" class? For smtp for example,
>"mind" is None and avatarId is just the id of the login user. Even if
>this is pop3 or imap, the same problem arise
>how do i know if the connection of the particular "Server" instance is
>dead.

Perhaps you want to do something with the logout callback that 
requestAvatar is also responsible for returning?  The SMTP protocol 
implementation will call it when the connection is lost.

Jean-Paul


From ste at demaledetti.net  Sun Oct 17 13:00:27 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sun, 17 Oct 2010 19:00:27 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CBB2BAB.7000607@demaledetti.net>

Hello Glyph, thanks for your reply and suggestions.

I don't have a self-contained sample yet but at least I managed to
reproduce it reliably on my installation and after a few more
experiments I think I am narrowing this down, please read below.

> On Oct 16, 2010, at 11:22 AM, Stefano Debenedetti wrote:
> 
>> Does this sound familiar in any way? Any suggestions off top of head
>> while I try to come up with a self-contained sample which is
>> reliably reproducing the issue I'm seeing happening only "sometimes
>> and quite seldom[TM]"?
> 
> I can't recall having seen this exact issue in the past, but as you've described it it sounds like you may have discovered a Twisted bug.  I'm looking forward to your example.
> 
> I do have a few questions:
> 
>     * What version of Twisted are you using?
>     * Have you tried a more recent version? Trunk?


I'm using 10.1.0. I haven't tested on trunk because I see basically
no difference in internet/abstract.py and internet/tcp.py but if you
really think I should I will give trunk a try.


>     * What reactor are you using?
>     * Have you tried a different reactor?


Same behavior with select, poll and epoll.


>     * What platform/OS are you on?  What version?
>     * Have you tried a different platform?


I am using debian lenny with a self-compiled 2.6.35.2 kernel.
/etc/debian_version says: 5.0.5


> I am also curious whether changing
> 
>    proto.transport.loseConnection()
> 
> to
>    reactor.callLater(0, proto.transport.loseConnection)
> 
> makes any difference to your example.


I tried this and it didn't make any difference. Using a 1 second
delay didn't improve things either.

What did make a difference was to comment this line, the problem
never happens without it:

to.transport.registerProducer(_from.transport, True)

Next test I did was to try registering the producer as non-streaming:

to.transport.registerProducer(_from.transport, False)

This also fixes the problem but it causes an exception to be printed
in the log once per set of A, B and C connections:

Traceback (most recent call last):
  File "/home/lala/lib/python/twisted/python/log.py", line 84, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/lala/lib/python/twisted/python/log.py", line 69, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/lala/lib/python/twisted/python/context.py", line 59,
in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/lala/lib/python/twisted/python/context.py", line 37,
in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/home/lala/lib/python/twisted/internet/pollreactor.py", line
184, in _doReadOrWrite
    why = selectable.doWrite()
  File "/home/lala/lib/python/twisted/internet/tcp.py", line 428, in
doWrite
    result = abstract.FileDescriptor.doWrite(self)
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
145, in doWrite
    self.producer.resumeProducing()
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
339, in resumeProducing
    assert self.connected and not self.disconnecting
exceptions.AssertionError:


This lead me to change the following lines in the doWrite code in
internet/abstract.py:

if self.disconnecting:
    # But if I was previously asked to let the connection die, do
    # so.
    return self._postLoseConnection()
elif self.producer is not None and ((not self.streamingProducer)
				  or self.producerPaused):
    # tell them to supply some more.
    self.producerPaused = 0
    self.producer.resumeProducing()
#elif self.disconnecting:
#    # But if I was previously asked to let the connection die, do
#    # so.
#    return self._postLoseConnection()

Basically this just inverts the order of checks: first check if
disconnecting, then check if a producer should be unpaused.

This makes the above traceback disappear and still fixes my
CLOSE_WAIT problem.

But using a non-streaming producer makes my app consume a lot more
memory so I reverted back my code to register the producer as streaming:

to.transport.registerProducer(_from.transport, True)

Now the CLOSE_WAIT issue is gone, no traceback appears in the log
and my app consumes the same memory as before. Victory?

I will still try to come up with a self-contained sample which
reproduces the CLOSE_WAIT problem but in the meanwhile I would like
to ask if the above-mentioned change to the doWrite definition in
internet/abstract.py is likely to destroy the universe in the near
future or if it actually sounds like a good idea.


> Thanks, and good luck,
> 
> -glyph


Thanks a lot for your help!

ciao
ste









From exarkun at twistedmatrix.com  Sun Oct 17 17:41:44 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Oct 2010 21:41:44 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CBB2BAB.7000607@demaledetti.net>
References: <4CBB2BAB.7000607@demaledetti.net>
Message-ID: <20101017214144.2414.1816006530.divmod.xquotient.502@localhost.localdomain>

On 05:00 pm, ste at demaledetti.net wrote:
>Hello Glyph, thanks for your reply and suggestions.
>
>I don't have a self-contained sample yet but at least I managed to
>reproduce it reliably on my installation and after a few more
>experiments I think I am narrowing this down, please read below.
>
>What did make a difference was to comment this line, the problem
>never happens without it:
>
>to.transport.registerProducer(_from.transport, True)

This suggests that your problem is that you don't unregister the 
produce.  The connection can never be closed as long as a producer is 
registered.  Does your code ever unregister this producer?

Jean-Paul


From marcus at internetnowasp.net  Sun Oct 17 22:53:02 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Mon, 18 Oct 2010 10:53:02 +0800
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>
References: <4CB9B06E.2080405@internetnowasp.net>
	<20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>
Message-ID: <4CBBB68E.8060107@internetnowasp.net>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101018/b71b9455/attachment.htm 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: imap4.fetch.txt
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101018/b71b9455/attachment.txt 

From exarkun at twistedmatrix.com  Mon Oct 18 09:17:37 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 18 Oct 2010 13:17:37 -0000
Subject: [Twisted-Python] IMAP4 fetch optimization
In-Reply-To: <4CBBB68E.8060107@internetnowasp.net>
References: <4CB9B06E.2080405@internetnowasp.net>
	<20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>
	<4CBBB68E.8060107@internetnowasp.net>
Message-ID: <20101018131737.2414.2002106162.divmod.xquotient.505@localhost.localdomain>

Please file a ticket in the issue tracker and attach a patch there. 
Patches sent to the list will just get forgotten about.

Thanks.

Jean-Paul


From ste at demaledetti.net  Mon Oct 18 11:21:59 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 18 Oct 2010 17:21:59 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CBC6617.3090904@demaledetti.net>

Hello Jean-Paul, thanks for looking into this.

>>What did make a difference was to comment this line, the problem
>>never happens without it:
>>
>>to.transport.registerProducer(_from.transport, True)
> 
> This suggests that your problem is that you don't unregister the 
> produce.  The connection can never be closed as long as a producer is 
> registered.  Does your code ever unregister this producer?

I am 100% sure that I unregister the producer from the transport
right before I call loseConnection on that transport (see code
snippet in my original post). Even using reactor.callLater for
calling loseConnection asynchronously after the producer has been
unregistered didn't help.

Moreover, if it was just a problem of my code not unregistering the
producer then this wouldn't explain why registering the producer as
non-streaming fixes the issue. It also wouldn't explain why does
this happen only in particular conditions and not always (even if I
managed to reproduce it reliably, I still have to debug the exact
external conditions that trigger it).

As a side note, for once what you wrote is not 200% exact ;) because
the connection is always closed properly if it's the peer closing it
first, even if the producer is still registered in that case. (Maybe
Twisted unregisters the producer by itself when this happens?)

Anyway, I ran Twisted tests on my installation after the patch I
mentioned in my previous mail and I got the same results as before
applying it so at least it seems it doesn't break any obvious stuff.

thank you, ciao
ste




From exarkun at twistedmatrix.com  Mon Oct 18 12:25:07 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 18 Oct 2010 16:25:07 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CBC6617.3090904@demaledetti.net>
References: <4CBC6617.3090904@demaledetti.net>
Message-ID: <20101018162507.2414.1785991535.divmod.xquotient.629@localhost.localdomain>

On 03:21 pm, ste at demaledetti.net wrote:
>Hello Jean-Paul, thanks for looking into this.
>>>What did make a difference was to comment this line, the problem
>>>never happens without it:
>>>
>>>to.transport.registerProducer(_from.transport, True)
>>
>>This suggests that your problem is that you don't unregister the
>>produce.  The connection can never be closed as long as a producer is
>>registered.  Does your code ever unregister this producer?
>
>I am 100% sure that I unregister the producer from the transport
>right before I call loseConnection on that transport (see code
>snippet in my original post). Even using reactor.callLater for
>calling loseConnection asynchronously after the producer has been
>unregistered didn't help.

Okay.  Then we're back to Glyph's idea, which is that there really is a 
bug to fix. :)
>Moreover, if it was just a problem of my code not unregistering the
>producer then this wouldn't explain why registering the producer as
>non-streaming fixes the issue. It also wouldn't explain why does
>this happen only in particular conditions and not always (even if I
>managed to reproduce it reliably, I still have to debug the exact
>external conditions that trigger it).

Hopefully this will turn into a simple example which can reliably 
reproduce the problem for everyone. :)
>As a side note, for once what you wrote is not 200% exact ;) because
>the connection is always closed properly if it's the peer closing it
>first, even if the producer is still registered in that case. (Maybe
>Twisted unregisters the producer by itself when this happens?)

Thanks for that clarification.

Jean-Paul


From eliao at seegrid.com  Mon Oct 18 13:41:14 2010
From: eliao at seegrid.com (Elizabeth Liao)
Date: Mon, 18 Oct 2010 17:41:14 +0000
Subject: [Twisted-Python] Getting a list of services and/or plugins are
	currently running
Message-ID: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>

Hi all,

I'm looking for a way to get a list of services and/or plugins that currently running on a machine.  Does anyone have any suggestions on how to do that?

Thanks.

Liz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101018/a949e51a/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 18 13:47:06 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 18 Oct 2010 13:47:06 -0400
Subject: [Twisted-Python] Getting a list of services and/or plugins are
	currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
Message-ID: <1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>


On Oct 18, 2010, at 1:41 PM, Elizabeth Liao wrote:

> Hi all,
> 
> I'm looking for a way to get a list of services and/or plugins that currently running on a machine.  Does anyone have any suggestions on how to do that?
> 
> Thanks.
> 
> Liz

This question is a bit too vague to be answered with any confidence.  What do you mean by "service"?  What do you mean by "plugin"?  And what do you mean by "running"?  These things have generic meanings and then more specific jargon-y meanings with respect to Twisted.  Do you mean "what twistd plugins are installed in my system Python", or "what processes that use Twisted are currently running", or "what Service objects are currently .running == True in my current process", or something else?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101018/eda5a490/attachment.htm 

From marcus at internetnowasp.net  Mon Oct 18 13:49:58 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Tue, 19 Oct 2010 01:49:58 +0800
Subject: [Twisted-Python] Getting a list of services and/or plugins are
 currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
Message-ID: <4CBC88C6.1020103@internetnowasp.net>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101019/6c5d559a/attachment.htm 

From eliao at seegrid.com  Mon Oct 18 15:10:43 2010
From: eliao at seegrid.com (Elizabeth Liao)
Date: Mon, 18 Oct 2010 19:10:43 +0000
Subject: [Twisted-Python] Getting a list of services and/or plugins
	are	currently running
In-Reply-To: <1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>,
	<1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
Message-ID: <F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>

Sorry about that.  I just started using twisted so I'll try to be more specific.

We have 2 different twisted plugins that uses shared code.   Each of these plugins is run as a  TCPClient on separate machines.

What would like to do is to somehow identify what twisted services/plugins are running because different things happen depending on what plugin is currently in use.  We are running on Linux wanted to see if there was an easy way of doing that using the twisted libraries.  I suppose one solution is to get a list of processes running and parse that but I would rather not do that.

Thanks.

Liz


________________________________
From: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] on behalf of Glyph Lefkowitz [glyph at twistedmatrix.com]
Sent: Monday, October 18, 2010 1:44 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Getting a list of services and/or plugins are currently running


On Oct 18, 2010, at 1:41 PM, Elizabeth Liao wrote:

Hi all,

I'm looking for a way to get a list of services and/or plugins that currently running on a machine.  Does anyone have any suggestions on how to do that?

Thanks.

Liz

This question is a bit too vague to be answered with any confidence.  What do you mean by "service"?  What do you mean by "plugin"?  And what do you mean by "running"?  These things have generic meanings and then more specific jargon-y meanings with respect to Twisted.  Do you mean "what twistd plugins are installed in my system Python", or "what processes that use Twisted are currently running", or "what Service objects are currently .running == True in my current process", or something else?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101018/54842184/attachment.htm 

From glyph at twistedmatrix.com  Mon Oct 18 15:51:18 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 18 Oct 2010 15:51:18 -0400
Subject: [Twisted-Python] Getting a list of services and/or plugins are
	currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>,
	<1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
	<F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
Message-ID: <735A35E9-16BA-4C24-852C-47A16CA8EF74@twistedmatrix.com>


On Oct 18, 2010, at 3:10 PM, Elizabeth Liao wrote:

> Sorry about that.  I just started using twisted so I'll try to be more specific.
> 
> We have 2 different twisted plugins that uses shared code.   Each of these plugins is run as a  TCPClient on separate machines.
> 
> What would like to do is to somehow identify what twisted services/plugins are running because different things happen depending on what plugin is currently in use.  We are running on Linux wanted to see if there was an easy way of doing that using the twisted libraries.  I suppose one solution is to get a list of processes running and parse that but I would rather not do that.
> 
> Thanks.
> 
> Liz

Sorry, but there is no easy API to do this using Twisted.  It's not really clear to me how such an API could be meaningful, either, given that any Twisted plugin could easily invoke any arbitrary python code that it wants to, including other Twisted plugins.  But if you have a detailed specification for how it might work, please feel free to file a ticket.

One way you could deal with this would be to have a dedicated UNIX socket at a well-known path for your particular application (e.g. /tmp/.your-app/global-socket), and connect to that socket to identify the current system's role.  This requires a little more work, but has the advantage that if you go with an extensible protocol such as AMP, you can extend this communication mechanism to allow arbitrarily detailed interrogation depending on your needs in the future.

If you wanted to go with the 'listing processes' route (it is definitely simpler), you don't have to parse it yourself.  Something like this with the 'psi' module (<http://pypi.python.org/pypi/PSI>) might do what you want:

>>> from psi.process import ProcessTable
>>> pt = ProcessTable()
>>> for p in pt.values():
...   if 'twistd your-app' in p.command:
...     print p.pid


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101018/b341ebca/attachment.htm 

From johann.borck at densedata.com  Mon Oct 18 16:28:46 2010
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 18 Oct 2010 22:28:46 +0200
Subject: [Twisted-Python] Getting a list of services and/or plugins	are
 currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>,
	<1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
	<F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
Message-ID: <4CBCADFE.3030300@densedata.com>

On 10/18/2010 09:10 PM, Elizabeth Liao wrote:
> [...]
> What would like to do is to somehow identify what twisted 
> services/plugins are running because different things happen depending 
> on what plugin is currently in use.  We are running on Linux wanted to 
> see if there was an easy way of doing that using the twisted 
> libraries.  I suppose one solution is to get a list of processes 
> running and parse that but I would rather not do that.
>
Hi Elizabeth,
I don't think (and meanwhile know, because Glyph already answered) 
there's a ready-made solution for your requirements (inside twisted, at 
least), but it should be relatively straightforward to implement one 
using twisted. If I understand you correctly, you need an interface to 
query which plugins/services (aka t.a.s.Services) in which twisted 
processes are in which state on a given machine, or even all machines 
involved in your setup. Since you can have several machines running 
several twisted processes, where each process can have several plugins 
installed each in different states, and each plugin can offer several 
Services, which also can be in different states, (and even install/run 
other plugins and services ) twisted itself per default obviously cannot 
provide an interface to query all this information, if only because a 
given process just knows about itself.

If I wanted to implement this, I'd start with a central service, that 
offers an interface for (twisted) apps/clients/servers to register 
themselves on startup. All "participating" plugins and services would of 
course have to know about that service, but depending on your 
requirements it might suffice to use a common subclass of  
twisted.application.service.Service, that takes care of performing the 
necessary steps to inform your central state-monitoring service about 
their existence and state.

Johann


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101018/8efcd1d7/attachment-0001.htm 

From itamar at itamarst.org  Mon Oct 18 19:56:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 18 Oct 2010 19:56:53 -0400
Subject: [Twisted-Python] Getting a list of services and/or plugins	are
 currently running
In-Reply-To: <4CBCADFE.3030300@densedata.com>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
	, <1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
	<F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
	<4CBCADFE.3030300@densedata.com>
Message-ID: <1287446213.1582.12.camel@blake>

On Mon, 2010-10-18 at 22:28 +0200, Johann Borck wrote:

> If I wanted to implement this, I'd start with a central service, that
> offers an interface for (twisted) apps/clients/servers to register
> themselves on startup. All "participating" plugins and services would
> of course have to know about that service, but depending on your
> requirements it might suffice to use a common subclass of
> twisted.application.service.Service, that takes care of performing the
> necessary steps to inform your central state-monitoring service about
> their existence and state.

Something based on zeroconf mDNS (aka Rendevezous on Macs) would do this
for you... and most modern linux versions include an implementation.



From lvh at laurensvh.be  Wed Oct 20 17:10:37 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Wed, 20 Oct 2010 23:10:37 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
Message-ID: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>

Hi!


People following the IRC channel have probably heard about the t-shirt I'm
trying to get printed. The idea isn't mine (it belongs to Mike Graham, aka
papna), but he told me it's okay if I try to make a shirt out of it. Here's
a proposal shirt: it's not *really* the idea that you buy this yet (but
you're free to, of course) -- mostly so other people can see how it looks on
a shirt.

The shirt is intended as a parody of the Gadsen flag (
http://en.wikipedia.org/wiki/Gadsden_flag). Hence the bright yellow color
and lack of apostrophe in "dont".

Feedback is welcome: do you think the layout or relative sizes should be
changed? Is the apostrophe being missing okay? Is the font OK? It's
currently Cardo, because Cardo is pretty and it's a serif font from the
correct period. papna has raised the concern that the fine lines may not
screenprint well, and I should use a more humanist typeface. People with
Zazzle experience welcome to chime in there.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101020/e4b378ab/attachment.htm 

From lvh at laurensvh.be  Wed Oct 20 17:12:45 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Wed, 20 Oct 2010 23:12:45 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
Message-ID: <AANLkTim332aDCbc7KPOpeEo3__n3GiyXw0z5zcWMPtRx@mail.gmail.com>

Of course, I forgot to provide the link. Derp derp.

http://www.zazzle.com/dont_thread_on_me_tshirt-235937736467504507

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101020/01ac6a70/attachment.htm 

From glyph at twistedmatrix.com  Wed Oct 20 17:37:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 20 Oct 2010 17:37:25 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
Message-ID: <DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>


On Oct 20, 2010, at 5:10 PM, Laurens Van Houtven wrote:

> Hi!
> 
> 
> People following the IRC channel have probably heard about the t-shirt I'm trying to get printed. The idea isn't mine (it belongs to Mike Graham, aka papna), but he told me it's okay if I try to make a shirt out of it. Here's a proposal shirt: it's not *really* the idea that you buy this yet (but you're free to, of course) -- mostly so other people can see how it looks on a shirt.
> 
> The shirt is intended as a parody of the Gadsen flag (http://en.wikipedia.org/wiki/Gadsden_flag). Hence the bright yellow color and lack of apostrophe in "dont".
> 
> Feedback is welcome: do you think the layout or relative sizes should be changed? Is the apostrophe being missing okay? Is the font OK? It's currently Cardo, because Cardo is pretty and it's a serif font from the correct period. papna has raised the concern that the fine lines may not screenprint well, and I should use a more humanist typeface. People with Zazzle experience welcome to chime in there.

I'm a fan of Linux Libertine, personally (<http://www.linuxlibertine.org/index.php?id=1&L=1>), but I don't have much screen-printing experience.

I think there should be something on the back though.  At the very least, 


Twisted
<http://twistedmatrix.com/>
Building the Engine of Your Internet

(Now I'm thinking that, for PyCon, we could have an alternate version of the shirt, done up like a concert tour shirt, except instead of listing locales we could list all of the tickets closed as 'fixed' in 2010, for anyone who worked on a ticket this year.  I don't know if there are too many to fit on the back of a shirt though!)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101020/e9178497/attachment.htm 

From lvh at laurensvh.be  Wed Oct 20 18:09:25 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 21 Oct 2010 00:09:25 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>
Message-ID: <AANLkTim=O5VHy96mrYjH5-Ka+T1Yr4XmwuBqvfnZgKFy@mail.gmail.com>

On Wed, Oct 20, 2010 at 11:37 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

>
> On Oct 20, 2010, at 5:10 PM, Laurens Van Houtven wrote:
>
> Hi!
>
>
> People following the IRC channel have probably heard about the t-shirt I'm
> trying to get printed. The idea isn't mine (it belongs to Mike Graham, aka
> papna), but he told me it's okay if I try to make a shirt out of it. Here's
> a proposal shirt: it's not *really* the idea that you buy this yet (but
> you're free to, of course) -- mostly so other people can see how it looks on
> a shirt.
>
> The shirt is intended as a parody of the Gadsen flag (
> http://en.wikipedia.org/wiki/Gadsden_flag). Hence the bright yellow color
> and lack of apostrophe in "dont".
>
> Feedback is welcome: do you think the layout or relative sizes should be
> changed? Is the apostrophe being missing okay? Is the font OK? It's
> currently Cardo, because Cardo is pretty and it's a serif font from the
> correct period. papna has raised the concern that the fine lines may not
> screenprint well, and I should use a more humanist typeface. People with
> Zazzle experience welcome to chime in there.
>
>
> I'm a fan of Linux Libertine, personally (<
> http://www.linuxlibertine.org/index.php?id=1&L=1>), but I don't have much
> screen-printing experience.
>
> I think there should be something on the back though.  At the very least,
>
>
> Twisted
> <http://twistedmatrix.com/>
> Building the Engine of Your Internet
>

Yep, definitely.


>
> (Now I'm thinking that, for PyCon, we could have an alternate version of
> the shirt, done up like a concert tour shirt, except instead of listing
> locales we could list all of the tickets closed as 'fixed' in 2010, for
> anyone who worked on a ticket this year.  I don't know if there are too many
> to fit on the back of a shirt though!)
>

+1, sounds good, not sure if that's feasible since I have no idea how many
names that are

Another option: "No communication without asynchronization!"

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101021/11b39808/attachment.htm 

From dripton at ripton.net  Wed Oct 20 20:00:54 2010
From: dripton at ripton.net (David Ripton)
Date: Wed, 20 Oct 2010 20:00:54 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
Message-ID: <4CBF82B6.9000905@ripton.net>

On 10/20/10 17:10, Laurens Van Houtven wrote:

> Feedback is welcome: do you think the layout or relative sizes should be
> changed? Is the apostrophe being missing okay?

I think the missing apostrophe looks bad.

Otherwise, I like the shirt.

-- 
David Ripton    dripton at ripton.net


From stephen at thorne.id.au  Wed Oct 20 21:09:06 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 21 Oct 2010 11:09:06 +1000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTim=O5VHy96mrYjH5-Ka+T1Yr4XmwuBqvfnZgKFy@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>
	<AANLkTim=O5VHy96mrYjH5-Ka+T1Yr4XmwuBqvfnZgKFy@mail.gmail.com>
Message-ID: <20101021010905.GB3482@thorne.id.au>

On 2010-10-21, Laurens Van Houtven wrote:
> > (Now I'm thinking that, for PyCon, we could have an alternate version of
> > the shirt, done up like a concert tour shirt, except instead of listing
> > locales we could list all of the tickets closed as 'fixed' in 2010, for
> > anyone who worked on a ticket this year.  I don't know if there are too many
> > to fit on the back of a shirt though!)
> >
> 
> +1, sounds good, not sure if that's feasible since I have no idea how many
> names that are
> 
> Another option: "No communication without asynchronization!"

Really excited about these ideas. My original twisted tshirt is getting
quite old and ratty.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From marco.giusti at gmail.com  Thu Oct 21 02:49:37 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Thu, 21 Oct 2010 08:49:37 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <4CBF82B6.9000905@ripton.net>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net>
Message-ID: <20101021064937.GA9355@murdoc>

On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> On 10/20/10 17:10, Laurens Van Houtven wrote:
> 
> > Feedback is welcome: do you think the layout or relative sizes should be
> > changed? Is the apostrophe being missing okay?
> 
> I think the missing apostrophe looks bad.

Stupid question from a non anglophone: why the apostrophe is missing?


From stephen at thorne.id.au  Thu Oct 21 03:02:03 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 21 Oct 2010 17:02:03 +1000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021064937.GA9355@murdoc>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
Message-ID: <20101021070203.GC3482@thorne.id.au>

On 2010-10-21, Marco Giusti wrote:
> On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > 
> > > Feedback is welcome: do you think the layout or relative sizes should be
> > > changed? Is the apostrophe being missing okay?
> > 
> > I think the missing apostrophe looks bad.
> 
> Stupid question from a non anglophone: why the apostrophe is missing?

"DONT THREAD ON ME" is the text on the shirt. "Don't" is a contraction
of "Do not" and requires an apostrophe. 

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From screwtape at froup.com  Thu Oct 21 03:12:48 2010
From: screwtape at froup.com (Tim Allen)
Date: Thu, 21 Oct 2010 18:12:48 +1100
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021064937.GA9355@murdoc>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
Message-ID: <20101021071248.GF28416@boombah.thristian.org>

On Thu, Oct 21, 2010 at 08:49:37AM +0200, Marco Giusti wrote:
> On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > 
> > > Feedback is welcome: do you think the layout or relative sizes should be
> > > changed? Is the apostrophe being missing okay?
> > 
> > I think the missing apostrophe looks bad.
> 
> Stupid question from a non anglophone: why the apostrophe is missing?

It's missing from Laurens Van Houtven's artwork because it's missing
from the Gadsden's Flag artwork that is being parodied. As to why the
original flag doesn't have an apostrophe... it's hard to say:

<http://wiki.answers.com/Q/In_the_Gadsden_and_Navy_Jack_%27Dont_Tread_on_Me%27_flags_does_the_%27don%27t%27_have_an_apostrophe>


From marco.giusti at gmail.com  Thu Oct 21 03:23:58 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Thu, 21 Oct 2010 09:23:58 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021070203.GC3482@thorne.id.au>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021070203.GC3482@thorne.id.au>
Message-ID: <20101021072358.GB9355@murdoc>

On Thu, Oct 21, 2010 at 05:02:03PM +1000, Stephen Thorne wrote:
> On 2010-10-21, Marco Giusti wrote:
> > On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > > 
> > > > Feedback is welcome: do you think the layout or relative sizes should be
> > > > changed? Is the apostrophe being missing okay?
> > > 
> > > I think the missing apostrophe looks bad.
> > 
> > Stupid question from a non anglophone: why the apostrophe is missing?
> 
> "DONT THREAD ON ME" is the text on the shirt. "Don't" is a contraction
> of "Do not" and requires an apostrophe. 

Perhaps I have not explained well, I'm sorry. I know that "don't" is a
contraction of "do not", but why the text on the flag lacks of the
apostrophe? Does it have a meaning or is it a grammatical error?


From pm-twisted-python at anapol.cz  Thu Oct 21 04:35:55 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Thu, 21 Oct 2010 10:35:55 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021072358.GB9355@murdoc>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>	<4CBF82B6.9000905@ripton.net>
	<20101021064937.GA9355@murdoc>	<20101021070203.GC3482@thorne.id.au>
	<20101021072358.GB9355@murdoc>
Message-ID: <4CBFFB6B.9020400@anapol.cz>

Hi, see http://en.wikipedia.org/wiki/Gadsden_flag ;)

Petr

Marco Giusti wrote:
> On Thu, Oct 21, 2010 at 05:02:03PM +1000, Stephen Thorne wrote:
>   
>> On 2010-10-21, Marco Giusti wrote:
>>     
>>> On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
>>>       
>>>> On 10/20/10 17:10, Laurens Van Houtven wrote:
>>>>
>>>>         
>>>>> Feedback is welcome: do you think the layout or relative sizes should be
>>>>> changed? Is the apostrophe being missing okay?
>>>>>           
>>>> I think the missing apostrophe looks bad.
>>>>         
>>> Stupid question from a non anglophone: why the apostrophe is missing?
>>>       
>> "DONT THREAD ON ME" is the text on the shirt. "Don't" is a contraction
>> of "Do not" and requires an apostrophe. 
>>     
>
> Perhaps I have not explained well, I'm sorry. I know that "don't" is a
> contraction of "do not", but why the text on the flag lacks of the
> apostrophe? Does it have a meaning or is it a grammatical error?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   


From twisted-web at udmvt.ru  Thu Oct 21 05:36:52 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 21 Oct 2010 13:36:52 +0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021071248.GF28416@boombah.thristian.org>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
Message-ID: <20101021093652.GM25590@ruber.office.udmvt.ru>

On Thu, Oct 21, 2010 at 06:12:48PM +1100, Tim Allen wrote:
> On Thu, Oct 21, 2010 at 08:49:37AM +0200, Marco Giusti wrote:
> > On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > > 
> > > > Feedback is welcome: do you think the layout or relative sizes should be
> > > > changed? Is the apostrophe being missing okay?
> > > 
> > > I think the missing apostrophe looks bad.
> > 
> > Stupid question from a non anglophone: why the apostrophe is missing?
> 
> It's missing from Laurens Van Houtven's artwork because it's missing
> from the Gadsden's Flag artwork that is being parodied. As to why the
> original flag doesn't have an apostrophe... it's hard to say:
> 
> <http://wiki.answers.com/Q/In_the_Gadsden_and_Navy_Jack_%27Dont_Tread_on_Me%27_flags_does_the_%27don%27t%27_have_an_apostrophe>
> 
Uh... Oh...

That would be a good feeling of parody, but only for the US patriots or US history
concerned people (students or experts maybe).

As for me, that t-shirt doesn't say anything, since I
just have been introduced to the concept of "Gadsten's Flag", by you.

I think that design may be popular in US, but ignored in Europe, China or India.

Hmm, I talk like a culturologist...

--
Alexey S


From lvh at laurensvh.be  Thu Oct 21 05:54:59 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 21 Oct 2010 11:54:59 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021093652.GM25590@ruber.office.udmvt.ru>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
Message-ID: <AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>

Yep, sorry, I realise the flag is based on an exclusively American symbol.
OTOH, I'm not (very) American so it still rings bell for me :-)

About the apostrophe: yes, the reason it is currently missing is because it
is missing on the Gadsen flag. That's also the reason the t-shirt is yellow.
I'm getting mixed feedback on how important mimicing the Gadsen flag is, in
terms of:
 - typeface (this is Cardo 99 SIL. Printing on T-shirts occasionally has
problems with small, thin serifs on serif fonts.)
 - color (although I like it because it's a Python-related shirt, and yellow
isn't my favorite color)
 - apostrophe (authenticity vs correctness - fortunately it's just a lexer
problem in "don't" and not the far more expensive parser problems of
your/you're/there/their/they're)

I like Glyph's idea of a credit roll, but I am unsure how to get such data
out of Trac. Is there a way I can just execute low-privilege SELECT queries?


thanks
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101021/4e702d90/attachment.htm 

From screwtape at froup.com  Thu Oct 21 06:36:48 2010
From: screwtape at froup.com (Tim Allen)
Date: Thu, 21 Oct 2010 21:36:48 +1100
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
Message-ID: <20101021103647.GG28416@boombah.thristian.org>

On Thu, Oct 21, 2010 at 11:54:59AM +0200, Laurens Van Houtven wrote:
> Yep, sorry, I realise the flag is based on an exclusively American symbol.
> OTOH, I'm not (very) American so it still rings bell for me :-)

I'm not American at all, and I think it's hilarious.

> About the apostrophe: yes, the reason it is currently missing is because it
> is missing on the Gadsen flag. That's also the reason the t-shirt is yellow.
> I'm getting mixed feedback on how important mimicing the Gadsen flag is, in
> terms of:
>  - typeface (this is Cardo 99 SIL. Printing on T-shirts occasionally has
> problems with small, thin serifs on serif fonts.)

I notice that Wikipedia's "Gadsden Flag" page includes a scan from an
1885 school-book that includes a reproduction of said flag, and it
definitely uses a sans-serif typeface. Like most visual designs that
have been drawn and redrawn thousands of times by hundreds of people
over the centuries, I suspect a little variance is permissible.

>  - color (although I like it because it's a Python-related shirt, and yellow
> isn't my favorite color)

The common ingredients of a Gadsden Flag reference seem to be "yellow",
"snake" and the slogan; given how much the Twisted Matrix logo resembles
the traditional rattlesnake (i.e. not very much) keeping the colour and
the slogan close to the original seems important.

>  - apostrophe (authenticity vs correctness - fortunately it's just a lexer
> problem in "don't" and not the far more expensive parser problems of
> your/you're/there/their/they're)

I see somebody tried to add an apostrophe to the SVG version of the flag
on Wikipedia, which was quickly reverted (sadly without a rationale or
citation). A Google Image Search for "DONT TREAD ON ME" shows that both
with-apostrophe and without-apostrophe variants are common, but the ones
without seem more... authentic somehow.

Enough bike-shedding? :)


From itamar at itamarst.org  Thu Oct 21 08:20:37 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 21 Oct 2010 08:20:37 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021103647.GG28416@boombah.thristian.org>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
	<20101021103647.GG28416@boombah.thristian.org>
Message-ID: <1287663637.1617.0.camel@blake>

On Thu, 2010-10-21 at 21:36 +1100, Tim Allen wrote:
> A Google Image Search for "DONT TREAD ON ME" shows that both
> with-apostrophe and without-apostrophe variants are common, but the ones
> without seem more... authentic somehow.

Indeed:
http://www.flickr.com/photos/pargon/4468906943/



From exarkun at twistedmatrix.com  Thu Oct 21 09:40:47 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 21 Oct 2010 13:40:47 -0000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
Message-ID: <20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>

On 09:54 am, lvh at laurensvh.be wrote:
>Yep, sorry, I realise the flag is based on an exclusively American 
>symbol.
>OTOH, I'm not (very) American so it still rings bell for me :-)
>
>About the apostrophe: yes, the reason it is currently missing is 
>because it
>is missing on the Gadsen flag. That's also the reason the t-shirt is 
>yellow.
>I'm getting mixed feedback on how important mimicing the Gadsen flag 
>is, in
>terms of:
>- typeface (this is Cardo 99 SIL. Printing on T-shirts occasionally has
>problems with small, thin serifs on serif fonts.)
>- color (although I like it because it's a Python-related shirt, and 
>yellow
>isn't my favorite color)
>- apostrophe (authenticity vs correctness - fortunately it's just a 
>lexer
>problem in "don't" and not the far more expensive parser problems of
>your/you're/there/their/they're)
>
>I like Glyph's idea of a credit roll, but I am unsure how to get such 
>data
>out of Trac. Is there a way I can just execute low-privilege SELECT 
>queries?

http://twistedmatrix.com/trac/report/19 will show you this information 
now.

Jean-Paul


From lvh at laurensvh.be  Thu Oct 21 17:47:56 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 21 Oct 2010 23:47:56 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
Message-ID: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>

Greetings fellow Twisted aficionados!


So, Allen (dash) and I have decided that we were going to co-do the Twisted
Extreme talk at PyCon US 2011. Extreme talks are like talks, except with
less talking and more coding, so preferably something actionable for an
entire 45 minutes! That most likely means many steps: start small, and then
do something more complex.

I think it's probably a good idea to tune for people who understand Python,
understand basic networking, but don't really know Twisted very well. People
who have experience trying to educate people new to Twisted are very welcome
to chime in.

I'm not sure what people care about, so ideas are welcome!

cheers and thanks for your input
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101021/1def71df/attachment.htm 

From glyph at twistedmatrix.com  Thu Oct 21 17:57:46 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 21 Oct 2010 17:57:46 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
	<20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>
Message-ID: <EF29FC45-FA14-4FDD-A1E9-3C04EADE81FA@twistedmatrix.com>

I specifically wanted tickets closed as 'fixed' though, since there's not too much cause for celebration of 'wontfix' and 'invalid'.

On Oct 21, 2010, at 9:40 AM, exarkun at twistedmatrix.com wrote:

> http://twistedmatrix.com/trac/report/19 will show you this information 
> now.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101021/e86daef0/attachment.htm 

From exarkun at twistedmatrix.com  Thu Oct 21 18:15:39 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 21 Oct 2010 22:15:39 -0000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <EF29FC45-FA14-4FDD-A1E9-3C04EADE81FA@twistedmatrix.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
	<20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>
	<EF29FC45-FA14-4FDD-A1E9-3C04EADE81FA@twistedmatrix.com>
Message-ID: <20101021221539.1927.91194301.divmod.xquotient.0@localhost.localdomain>

On 09:57 pm, glyph at twistedmatrix.com wrote:
>I specifically wanted tickets closed as 'fixed' though, since there's 
>not too much cause for celebration of 'wontfix' and 'invalid'.

Oh yea.  http://twistedmatrix.com/trac/report/21

Jean-Paul


From stephen at thorne.id.au  Thu Oct 21 20:38:33 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Fri, 22 Oct 2010 10:38:33 +1000
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
References: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
Message-ID: <20101022003833.GD3482@thorne.id.au>

On 2010-10-21, Laurens Van Houtven wrote:
> Greetings fellow Twisted aficionados!
> 
> So, Allen (dash) and I have decided that we were going to co-do the Twisted
> Extreme talk at PyCon US 2011. Extreme talks are like talks, except with
> less talking and more coding, so preferably something actionable for an
> entire 45 minutes! That most likely means many steps: start small, and then
> do something more complex.
> 
> I think it's probably a good idea to tune for people who understand Python,
> understand basic networking, but don't really know Twisted very well. People
> who have experience trying to educate people new to Twisted are very welcome
> to chime in.
> 
> I'm not sure what people care about, so ideas are welcome!

At PyCon-Au I demonstrated a 20ish line telnet chat server with
integrated http chat logs in a 3 minute lightning talk. 3 minutes was a
tiny bit short for a proper demonstration of capabilities, 45 might be
too long :P

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue


From lvh at laurensvh.be  Thu Oct 21 20:56:35 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 22 Oct 2010 02:56:35 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <20101022003833.GD3482@thorne.id.au>
References: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
	<20101022003833.GD3482@thorne.id.au>
Message-ID: <AANLkTimkDwrgbWtpwjP+xew2PcwwFdAhwJe9neOGd60x@mail.gmail.com>

I would really like to see something where manhole makes sense as one of the
iterative improvements, because it's a feature many people find very
impressive.

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101022/c21ec282/attachment.htm 

From kevin.horn at gmail.com  Fri Oct 22 10:13:11 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 22 Oct 2010 09:13:11 -0500
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTimkDwrgbWtpwjP+xew2PcwwFdAhwJe9neOGd60x@mail.gmail.com>
References: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
	<20101022003833.GD3482@thorne.id.au>
	<AANLkTimkDwrgbWtpwjP+xew2PcwwFdAhwJe9neOGd60x@mail.gmail.com>
Message-ID: <AANLkTi=XCo-jrYq_wpxgr8J5rJQ+OOSLLjiUE6XP4fZ0@mail.gmail.com>

Another Twisted feature that I find amazingly useful is having multiple
"servers" (e.g. email and web and telnet and ssh, etc.) in one process.
Manhole (IMO) makes sense for any Twisted process that provides multiple
services like this.

Kevin Horn

On Thu, Oct 21, 2010 at 7:56 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> I would really like to see something where manhole makes sense as one of
> the iterative improvements, because it's a feature many people find very
> impressive.
>
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101022/dcdf2d94/attachment.htm 

From andrewfr_ice at yahoo.com  Fri Oct 22 12:40:27 2010
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 22 Oct 2010 09:40:27 -0700 (PDT)
Subject: [Twisted-Python] PyCon extreme Twisted talk!
Message-ID: <430979.39538.qm@web120712.mail.ne1.yahoo.com>

Hi Lauren:

Message: 1
Date: Thu, 21 Oct 2010 23:47:56 +0200
From: Laurens Van Houtven <lvh at laurensvh.be>
Subject: [Twisted-Python] PyCon extreme Twisted talk!
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

>Greetings fellow Twisted aficionados!


>So, Allen (dash) and I have decided that we were going to co-do the >Twisted Extreme talk at PyCon US 2011. Extreme talks are like talks, >except with less talking and more coding, so preferably something >actionable for an entire 45 minutes! That most likely means many steps: >start small, and then do something more complex.

I am probably going to submit an extreme talk for PyCon 2011. I'll either refine the "Prototyping Go's Select" talk. Or discuss about my work-in-progress about join conditions. Twisted has a simple join in the form of a deferred list.

Inspired by the Ray Hettinger Monocle post-talk discussion and writing examples with stackless.select(), I thought submitting another extreme talk that would revisit the lost world of Stackless Python/Twisted integration. As we discussed, why not a special reactor that incorporates the Stackless scheduler? Right now, a lot my examples use Twisted for sleep(). Creating a Stackless reactor would hopefully allow me to get rid of stuff like

This way I can get rid of stuff like:

l = task.LoopingCall(stackless.schedule)
l.start(.001)
stackless.tasklet(startTwisted)()
stackless.tasklet(santa)(reindeers, elves)
stackless.run()

and eventually 

def tick(seconds):
    tickCh = stackless.channel()
    reactor.callLater(seconds, tickCh.send, None)
    tickCh.receive()

what is particularly exciting is talk in the pypy-dev list about incorporating Stackless with the JIT....

Cheers,
Andrew

P.S - I have provided an example of using Stackless and Twisted to solve the Santa Claus Problem


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleSanta.py
Type: text/x-python-script
Size: 3307 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101022/2ee9c252/attachment.bin 

From mike at mv3d.com  Sat Oct 23 21:18:33 2010
From: mike at mv3d.com (Michael Handverger)
Date: Sat, 23 Oct 2010 21:18:33 -0400 (EDT)
Subject: [Twisted-Python] ANN: MV3D v0.44 released!
Message-ID: <20505236.112381287883113965.JavaMail.root@verity.int.mv3d.com>

I?m pleased to announce the release of MV3D version 0.44! This version features a functioning content creation and world building tool-set. It is now possible to populate a game world from scratch without using the command line or writing code. Additionally, Ogre3D was upgraded to the latest version and a cluster management app was added.

Here?s a video showing off the demo world that is open to the public:

http://www.youtube.com/watch?v=9ebqAOWvyzI

MV3D is an open source virtual world simulation framework written in Python which uses Twisted for networking. It was designed with scalability in mind and aims to be able to distribute a world across as many servers as needed with dynamic load balancing. The simulation framework is not specifically slanted towards any one genre of online game, and can just as easily be used for a space game as a fantasy setting. On the client, Python-Ogre is used for rendering.

More info on MV3D including source code and Windows client binaries is available at http://www.mv3d.com. MV3D is released under the MIT license.

Enjoy,

Mike



From exarkun at twistedmatrix.com  Sun Oct 24 00:05:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 24 Oct 2010 04:05:30 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1287893130.97.1893585509@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101024/c0e0aa22/attachment.htm 

From facundobatista at gmail.com  Mon Oct 25 06:57:38 2010
From: facundobatista at gmail.com (Facundo Batista)
Date: Mon, 25 Oct 2010 08:57:38 -0200
Subject: [Twisted-Python] Catching all the exceptions in a Twisted program
Message-ID: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>

Hello!

I've just subscribed to the list, but I'm using Twisted from a while ago.

I need to do something, and wasn't able to find out how to do it.  Well, I
*did* find out, but it's a horrible hack, and actually depends on something
that may be a bug, so it's worth asking here about this :)

In a project I'm doing [0], I want to catch all problems (unhandled
exceptions), log them and show them in stderr after a bit massaging.  My
first approach was to hook me in sys.excepthook, and it worked on some
cases.  But I saw some cases where it didn't [1].

Specifically, when the exception was inside a deferred, it didn't call
excepthook.  Why not? I started to check the code, and found the following
snippet, at the end of Deferred._run_callbacks, in defer.py:

   if isinstance(self.result, failure.Failure):
       self.result.cleanFailure()
       if self._debugInfo is None:
           self._debugInfo = DebugInfo()
       self._debugInfo.failResult = self.result


From bogus@does.not.exist.com  Fri Oct  8 09:19:47 2010
From: bogus@does.not.exist.com ()
Date: Fri, 08 Oct 2010 13:19:47 -0000
Subject: No subject
Message-ID: <mailman.2.1288004260.11746.twisted-python@twistedmatrix.com>

1. The rest of the code only instantiates and uses DebugInfo
   "if self.debug".  Why this part of the code doesn't care about the
   self.debug flag and always uses it?  Is it intended and DebugInfo()
   not being used for debug is a misname left there for historical
   reasons?  Should I open a bug about this?

2. I did the following (ugly) hack to achieve my results:

    import twisted.internet.defer

    # ugliest thing I saw in a *long* time
    class MyDebugInfo(object):

        def _error_happened(self, failure):
            msg =3D failure.getTraceback()
            _expose_exception(msg)

        failResult =3D property(fset=3D_error_happened)

    twisted.internet.defer.DebugInfo =3D MyDebugInfo

   Is there a better way to do this?  Actually, this is working correctly,
   but I don't know if it's the right way to do it, and don't want to
   depend of DebugInfo() being called always in this case.

Thank you very much!

[0] http://launchpad.net/magicicada
[1] http://bugs.launchpad.net/magicicada/+bug/665681

--=20
.=A0 =A0 Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/


From exarkun at twistedmatrix.com  Mon Oct 25 08:29:58 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 25 Oct 2010 12:29:58 -0000
Subject: [Twisted-Python] Catching all the exceptions in a Twisted
	program
In-Reply-To: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>
References: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>
Message-ID: <20101025122958.1927.629458651.divmod.xquotient.68@localhost.localdomain>

On 10:57 am, facundobatista at gmail.com wrote:
>Hello!
>
>I've just subscribed to the list, but I'm using Twisted from a while 
>ago.
>
>I need to do something, and wasn't able to find out how to do it. 
>Well, I
>*did* find out, but it's a horrible hack, and actually depends on 
>something
>that may be a bug, so it's worth asking here about this :)
>
>In a project I'm doing [0], I want to catch all problems (unhandled
>exceptions), log them and show them in stderr after a bit massaging. 
>My
>first approach was to hook me in sys.excepthook, and it worked on some
>cases.  But I saw some cases where it didn't [1].

Right.  Instead of letting any exception from application code abort the 
process entirely, most places in Twisted catch and log unexpected 
exceptions.
>Specifically, when the exception was inside a deferred, it didn't call
>excepthook.

Another case where this will happen is if a protocol's dataReceived 
method raises an exception.  Or if a function passed to 
reactor.callLater raises an exception.
>Why not? I started to check the code, and found the following
>snippet, at the end of Deferred._run_callbacks, in defer.py:
>
>   if isinstance(self.result, failure.Failure):
>       self.result.cleanFailure()
>       if self._debugInfo is None:
>           self._debugInfo = DebugInfo()
>       self._debugInfo.failResult = self.result
>> From this, I have two questions:
>
>1. The rest of the code only instantiates and uses DebugInfo
>   "if self.debug".  Why this part of the code doesn't care about the
>   self.debug flag and always uses it?  Is it intended and DebugInfo()
>   not being used for debug is a misname left there for historical
>   reasons?  Should I open a bug about this?

It's correct as is.  DebugInfo is used for a few things.  Tracking 
unhandled errors is one of them, and it is always enabled, whether 
"Deferred debugging" is on or not.
>2. I did the following (ugly) hack to achieve my results:
>
>    import twisted.internet.defer
>
>    # ugliest thing I saw in a *long* time
>    class MyDebugInfo(object):
>
>        def _error_happened(self, failure):
>            msg = failure.getTraceback()
>            _expose_exception(msg)
>
>        failResult = property(fset=_error_happened)
>
>    twisted.internet.defer.DebugInfo = MyDebugInfo
>
>   Is there a better way to do this?  Actually, this is working 
>correctly,
>   but I don't know if it's the right way to do it, and don't want to
>   depend of DebugInfo() being called always in this case.

You should add a log observer that watches for errors.

http://twistedmatrix.com/documents/9.0.0/core/howto/logging.html

Jean-Paul
>Thank you very much!
>
>[0] http://launchpad.net/magicicada
>[1] http://bugs.launchpad.net/magicicada/+bug/665681
>
>--
>.? ? Facundo
>
>Blog: http://www.taniquetil.com.ar/plog/
>PyAr: http://www.python.org/ar/
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From jeandaniel.browne at gmail.com  Sun Oct 24 20:21:59 2010
From: jeandaniel.browne at gmail.com (Jean-Daniel)
Date: Mon, 25 Oct 2010 02:21:59 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
References: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
Message-ID: <AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>

Hello,

At Pycon-fr, I presented a 20 min introduction to Twisted. Nothing
adventurous, the focus is on education:

- Twisted use and key concepts,
- Twisted's core: the reactor,
- example: a notification client (invent a client/server protocol, implement
it with Twisted's classes, then add notifications to the protocol and to the
implementation)

The example shows two versions of a notification API, a blocking one and a
better one based on events. What is an event based API and why it is more
adapted in some cases are two basic questions that I tried to make clear, as
this is not obvious to many new programmers.

The presentation slides are attached in Open Office impress format (has
animations) and in pdf (no animations, an export of the OO version). The
animations are not critical to the presentation but helps with clarity. The
accompanying speech is not available in english yet, sorry. The license is
creative commons.

I am interested in feedbacks and suggestions, if you have any,

Cheers,



On Fri, Oct 22, 2010 at 6:40 PM, Andrew Francis <andrewfr_ice at yahoo.com>wrote:

> Hi Lauren:
>
> Message: 1
> Date: Thu, 21 Oct 2010 23:47:56 +0200
> From: Laurens Van Houtven <lvh at laurensvh.be>
> Subject: [Twisted-Python] PyCon extreme Twisted talk!
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>    <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> >Greetings fellow Twisted aficionados!
>
>
> >So, Allen (dash) and I have decided that we were going to co-do the
> >Twisted Extreme talk at PyCon US 2011. Extreme talks are like talks,
> >except with less talking and more coding, so preferably something
> >actionable for an entire 45 minutes! That most likely means many steps:
> >start small, and then do something more complex.
>
> I am probably going to submit an extreme talk for PyCon 2011. I'll either
> refine the "Prototyping Go's Select" talk. Or discuss about my
> work-in-progress about join conditions. Twisted has a simple join in the
> form of a deferred list.
>
> Inspired by the Ray Hettinger Monocle post-talk discussion and writing
> examples with stackless.select(), I thought submitting another extreme talk
> that would revisit the lost world of Stackless Python/Twisted integration.
> As we discussed, why not a special reactor that incorporates the Stackless
> scheduler? Right now, a lot my examples use Twisted for sleep(). Creating a
> Stackless reactor would hopefully allow me to get rid of stuff like
>
> This way I can get rid of stuff like:
>
> l = task.LoopingCall(stackless.schedule)
> l.start(.001)
> stackless.tasklet(startTwisted)()
> stackless.tasklet(santa)(reindeers, elves)
> stackless.run()
>
> and eventually
>
> def tick(seconds):
>    tickCh = stackless.channel()
>    reactor.callLater(seconds, tickCh.send, None)
>    tickCh.receive()
>
> what is particularly exciting is talk in the pypy-dev list about
> incorporating Stackless with the JIT....
>
> Cheers,
> Andrew
>
> P.S - I have provided an example of using Stackless and Twisted to solve
> the Santa Claus Problem
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101025/e5ca1f23/attachment-0001.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted-intro.pdf
Type: application/pdf
Size: 241020 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101025/e5ca1f23/attachment-0001.pdf 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted-intro.odp
Type: application/vnd.oasis.opendocument.presentation
Size: 455198 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101025/e5ca1f23/attachment-0001.odp 

From lvh at laurensvh.be  Mon Oct 25 10:38:26 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Mon, 25 Oct 2010 16:38:26 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>
References: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
	<AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>
Message-ID: <AANLkTikkZBD=kcFQMHikjsT=vW+wBJBD5cgARYNQLKyu@mail.gmail.com>

Hi Jean-Daniel!

Yes, I was at pycon-fr, and I saw your talk. It was very nice, thanks :-)

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101025/3a6b7e3c/attachment.htm 

From jeandaniel.browne at gmail.com  Tue Oct 26 05:50:17 2010
From: jeandaniel.browne at gmail.com (Jean-Daniel)
Date: Tue, 26 Oct 2010 11:50:17 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTikkZBD=kcFQMHikjsT=vW+wBJBD5cgARYNQLKyu@mail.gmail.com>
References: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
	<AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>
	<AANLkTikkZBD=kcFQMHikjsT=vW+wBJBD5cgARYNQLKyu@mail.gmail.com>
Message-ID: <AANLkTimvChH90s-BSY-tHFdT=Etpi6=6bVw50o7eX3uB@mail.gmail.com>

Cool,

The slides has gone through many improvements folllowing the presentation.

There was a lot of room for improvement. Too big for 20 minutes maybe, and
not enough preparation.




On Mon, Oct 25, 2010 at 4:38 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Hi Jean-Daniel!
>
> Yes, I was at pycon-fr, and I saw your talk. It was very nice, thanks :-)
>
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101026/9eb11ff4/attachment.htm 

From aphidia at hotmail.com  Wed Oct 27 23:08:58 2010
From: aphidia at hotmail.com (velociraptor Genjix)
Date: Thu, 28 Oct 2010 03:08:58 +0000
Subject: [Twisted-Python] PySide (Qt4) <-> Twisted reactor integration
Message-ID: <BLU148-W33423814918397016AFC3FB3440@phx.gbl>


Hey,
I've just checked out?http://github.com/ghtdak/qtreactor?and it works with PySide. I simply did:
try:?? ?from PyQt4.QtCore import QSocketNotifier, QObject, SIGNAL, QTimer, QCoreApplication?? ?from PyQt4.QtCore import QEventLoopexcept ImportError:?? ?from PySide.QtCore import QSocketNotifier, QObject, SIGNAL, QTimer, QCoreApplication?? ?from PySide.QtCore import QEventLoop
I believe there was an issue before about licenses since PyQt used GPL? Well PySide uses LGPL, so twisted should include this reactor loop only importing PySide :) It works.
Anyone wishing to confirm this can find several packages on their site:
http://developer.qt.nokia.com/wiki/PySideBinariesLinuxhttp://developer.qt.nokia.com/wiki/PySideBinariesWindows 		 	   		  

From ste at demaledetti.net  Thu Oct 28 12:52:16 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Thu, 28 Oct 2010 18:52:16 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CBC6617.3090904@demaledetti.net>
References: <4CBC6617.3090904@demaledetti.net>
Message-ID: <4CC9AA40.4090509@demaledetti.net>

Il 18/10/2010 17:21, Stefano Debenedetti ha scritto:
> Anyway, I ran Twisted tests on my installation after the patch I
> mentioned in my previous mail and I got the same results as before
> applying it so at least it seems it doesn't break any obvious stuff.


Sorry for replying to myself but for the record: the patch I sent
does break stuff (connections are sometimes closed before all data
has been sent) so don't use it.

The partially good news is that I managed to write a self-contained
and quite short example that can reproduce the exact same problem
I'm witnessing in my app. The bad news is that it does so only about
50% of the times but I thought I would share it while I keep on
trying to make it more reliable.

Please find attached one .sh file and one .py file, save somewhere
and make them executable. You will also need netcat (nc).

If you run the .sh file and after three seconds type in a short line
of text followed by the enter key, you should see the same line you
typed printed back many times on your terminal and quite a lot of
network activity going through the localhost interface for about a
minute. Don't redirect the .sh output to /dev/null, the problem
seems to occur only when the terminal application you run it in gets
to 100% CPU while it's printing data received by netcat. Hopefully
you have a multicore machine and this won't disrupt your desktop.

If you're lucky and nothing bad happens, after a while the .sh
script will terminate and all connections opened by it and the .py
file will be closed. Please remember to kill the three python
processes launched by the script before trying again.

If you're unlucky like I am, after a while all connections will be
closed except the one between netcat and one of the three servers
powered by the .py file.

That connection will be in this state according to netstat:

# netstat -np --inet 2> /dev/null | grep 127.0.0.1
tcp        0      0 127.0.0.1:8080          127.0.0.1:36815
ESTABLISHED 10042/python2.6
tcp        0      0 127.0.0.1:36815         127.0.0.1:8080
ESTABLISHED 10051/nc

If you then CTRL-C the .sh script so that netcat gets terminated,
you will get to the dreaded CLOSE_WAIT forever state:

# netstat -np --inet 2> /dev/null | grep 127.0.0.1
tcp        1      0 127.0.0.1:8080          127.0.0.1:36815
CLOSE_WAIT  10042/python2.6


Please note that even though the .py file is called three times and
launches a different server application each time, the only one I'm
interested in is the first one ("one"), the other two are just there
to simulate the third-party apps that my server is dealing with.
This is why servers "two" and "three" do seemingly silly stuff
including closing some of their connections at some point.

My goal is that no matter how and when the client and the "two" and
"three" servers close their connections to "one", the client
connection to "one" is always properly terminated and does never get
stuck in CLOSE_WAIT state.

Thanks for any feedback you might have,

ciao
ste



-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_producer.sh
Type: application/x-sh
Size: 260 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101028/31bdef34/attachment.sh 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_producer.py
Type: text/x-python
Size: 4750 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20101028/31bdef34/attachment.py 

From mazieres at gmx.com  Thu Oct 28 13:02:07 2010
From: mazieres at gmx.com (=?ISO-8859-1?Q?Antoine_Mazi=E8res?=)
Date: Thu, 28 Oct 2010 19:02:07 +0200
Subject: [Twisted-Python] ppa broken ?
Message-ID: <4CC9AC8F.3040509@gmx.com>

Hi all,

It seems that the ppa is broken ?

$ uname -a
Linux 2.6.35-22-generic #35-Ubuntu SMP Sat Oct 16 20:36:48 UTC 2010 i686 
GNU/Linux

$ sudo apt-get update
[...]
W: Failed to fetch 
http://ppa.launchpad.net/twisted-dev/ppa/ubuntu/dists/maverick/main/source/Sources.gz  
404  Not Found

W: Failed to fetch 
http://ppa.launchpad.net/twisted-dev/ppa/ubuntu/dists/maverick/main/binary-i386/Packages.gz  
404  Not Found

E: Some index files failed to download, they have been ignored, or old 
ones used instead.


is it due to a failure of launchpad servers maybe, or you don't give 
anymore support to this feature ?

All best,

Antoine
http://ant1.cc/

(my first message here, just to say: twisted is awesome! thanks to all 
of you!)


From exarkun at twistedmatrix.com  Fri Oct 29 09:56:07 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 29 Oct 2010 13:56:07 -0000
Subject: [Twisted-Python] ppa broken ?
In-Reply-To: <4CC9AC8F.3040509@gmx.com>
References: <4CC9AC8F.3040509@gmx.com>
Message-ID: <20101029135607.2040.396699544.divmod.xquotient.85@localhost.localdomain>

On 28 Oct, 05:02 pm, mazieres at gmx.com wrote:
>Hi all,
>
>It seems that the ppa is broken ?
>
>$ uname -a
>Linux 2.6.35-22-generic #35-Ubuntu SMP Sat Oct 16 20:36:48 UTC 2010 
>i686
>GNU/Linux
>
>$ sudo apt-get update
>[...]
>W: Failed to fetch
>http://ppa.launchpad.net/twisted- 
>dev/ppa/ubuntu/dists/maverick/main/source/Sources.gz
>404  Not Found
>
>W: Failed to fetch
>http://ppa.launchpad.net/twisted- 
>dev/ppa/ubuntu/dists/maverick/main/binary-i386/Packages.gz
>404  Not Found
>
>E: Some index files failed to download, they have been ignored, or old
>ones used instead.
>
>
>is it due to a failure of launchpad servers maybe, or you don't give
>anymore support to this feature ?

These appear to be URLs for Maverick packages.  Looking at Launchpad, I 
only see Hardy and Lucid packages in the PPA.  So, I think the PPA is 
working, but you're asking it for packages for an unsupported platform.
>All best,
>
>Antoine
>http://ant1.cc/
>
>(my first message here, just to say: twisted is awesome! thanks to all
>of you!)

Thanks! :)

Jean-Paul


From exarkun at twistedmatrix.com  Fri Oct 29 11:22:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 29 Oct 2010 15:22:56 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CC9AA40.4090509@demaledetti.net>
References: <4CBC6617.3090904@demaledetti.net>
	<4CC9AA40.4090509@demaledetti.net>
Message-ID: <20101029152256.2040.417418391.divmod.xquotient.257@localhost.localdomain>

On 28 Oct, 04:52 pm, ste at demaledetti.net wrote:
>Il 18/10/2010 17:21, Stefano Debenedetti ha scritto:
>>Anyway, I ran Twisted tests on my installation after the patch I
>>mentioned in my previous mail and I got the same results as before
>>applying it so at least it seems it doesn't break any obvious stuff.
>
>
>Sorry for replying to myself but for the record: the patch I sent
>does break stuff (connections are sometimes closed before all data
>has been sent) so don't use it.
>
>The partially good news is that I managed to write a self-contained
>and quite short example that can reproduce the exact same problem
>I'm witnessing in my app. The bad news is that it does so only about
>50% of the times but I thought I would share it while I keep on
>trying to make it more reliable.

Thanks.  Frequent sharing can definitely be more productive than keeping 
everything in secret until it's "done". :)
>Please find attached one .sh file and one .py file, save somewhere
>and make them executable. You will also need netcat (nc).
>
>If you run the .sh file and after three seconds type in a short line
>of text followed by the enter key, you should see the same line you
>typed printed back many times on your terminal and quite a lot of
>network activity going through the localhost interface for about a
>minute. Don't redirect the .sh output to /dev/null, the problem
>seems to occur only when the terminal application you run it in gets
>to 100% CPU while it's printing data received by netcat. Hopefully
>you have a multicore machine and this won't disrupt your desktop.
>
>If you're lucky and nothing bad happens, after a while the .sh
>script will terminate and all connections opened by it and the .py
>file will be closed. Please remember to kill the three python
>processes launched by the script before trying again.
>
>If you're unlucky like I am, after a while all connections will be
>closed except the one between netcat and one of the three servers
>powered by the .py file.
>
>That connection will be in this state according to netstat:
>
># netstat -np --inet 2> /dev/null | grep 127.0.0.1
>tcp        0      0 127.0.0.1:8080          127.0.0.1:36815
>ESTABLISHED 10042/python2.6
>tcp        0      0 127.0.0.1:36815         127.0.0.1:8080
>ESTABLISHED 10051/nc
>
>If you then CTRL-C the .sh script so that netcat gets terminated,
>you will get to the dreaded CLOSE_WAIT forever state:
>
># netstat -np --inet 2> /dev/null | grep 127.0.0.1
>tcp        1      0 127.0.0.1:8080          127.0.0.1:36815
>CLOSE_WAIT  10042/python2.6
>
>
>Please note that even though the .py file is called three times and
>launches a different server application each time, the only one I'm
>interested in is the first one ("one"), the other two are just there
>to simulate the third-party apps that my server is dealing with.
>This is why servers "two" and "three" do seemingly silly stuff
>including closing some of their connections at some point.
>
>My goal is that no matter how and when the client and the "two" and
>"three" servers close their connections to "one", the client
>connection to "one" is always properly terminated and does never get
>stuck in CLOSE_WAIT state.
>
>Thanks for any feedback you might have,

After a few runs, I managed to reproduce the problem.  I instrumented 
the reactor with some extra logging and test_producer.py with a manhole 
server.
The sequence of events appears to be something like this:

  OneA has a producer of OneE
  OneA has a consumer of OneB
  At some point OneB gives up and tells OneA to stopProducing 
(loseConnection)
  OneA.loseConnection stops the reactor from reading OneA and starts it 
writing
  OneA.doWrite happens
    it finds the send buffer empty
    it finds a registered producer (OneE) and resumes it
  OneE never produces any more bytes
  OneE loses its connection at some point and unregisters itself from 
OneA
  OneA takes note that it has no more producer, but does nothing about it

So the bug is likely that FileDescriptor.unregisterProducer doesn't do 
anything special when disconnecting=True.

You should be able to reproduce this very simply by setting up a 
transport-producer/consumer pair, calling loseConnection on the 
transport, then unregistering the producer.

This all sounds somewhat familiar, but I don't see an existing ticket 
for it, so maybe that's my imagination.

Jean-Paul


From glyph at twistedmatrix.com  Fri Oct 29 15:10:19 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 29 Oct 2010 15:10:19 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <20101029152256.2040.417418391.divmod.xquotient.257@localhost.localdomain>
References: <4CBC6617.3090904@demaledetti.net>
	<4CC9AA40.4090509@demaledetti.net>
	<20101029152256.2040.417418391.divmod.xquotient.257@localhost.localdomain>
Message-ID: <05FC7F39-017E-4074-B364-2FE9F95459FB@twistedmatrix.com>


On Oct 29, 2010, at 11:22 AM, exarkun at twistedmatrix.com wrote:

> This all sounds somewhat familiar, but I don't see an existing ticket 
> for it, so maybe that's my imagination.

... and it bears mentioning that when you can reproduce this broken behavior with a minimal example, a ticket would be appreciated.

Thanks for tracking it down!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101029/dd5ef222/attachment.htm 

From ste at demaledetti.net  Sat Oct 30 12:48:45 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sat, 30 Oct 2010 18:48:45 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CCC4C6D.6020905@demaledetti.net>

Hello Jean-Paul, thanks for tracking this down, you rock!

I promise that when I'll have payed all by debts I'll buy one of
those posters of Exarkun to hang on my wall!

JP wrote:
> After a few runs, I managed to reproduce the problem.  I instrumented the reactor with some extra logging and test_producer.py with a manhole server.
> The sequence of events appears to be something like this:
> 
>  OneA has a producer of OneE
>  OneA has a consumer of OneB
>  At some point OneB gives up and tells OneA to stopProducing (loseConnection)
>  OneA.loseConnection stops the reactor from reading OneA and starts it writing
>  OneA.doWrite happens
>    it finds the send buffer empty
>    it finds a registered producer (OneE) and resumes it
>  OneE never produces any more bytes
>  OneE loses its connection at some point and unregisters itself from OneA
>  OneA takes note that it has no more producer, but does nothing about it
> 
> So the bug is likely that FileDescriptor.unregisterProducer doesn't do anything special when disconnecting=True.
> 
> You should be able to reproduce this very simply by setting up a transport-producer/consumer pair, calling loseConnection on the transport, then unregistering the producer.
> 
> This all sounds somewhat familiar, but I don't see an existing ticket for it, so maybe that's my imagination.
> 
> Jean-Paul


Following your indications I attached a minimal example to a new ticket:

http://twistedmatrix.com/trac/ticket/4719

Some additional info:

* problem occurs only if more than 64KB of data are written to the
transport before its consumer calls stopProducing on it

* problem occurs only if some time passes before its producer
unregisters itself from the transport

Thanks again for your help! :)
ste




From itamar at itamarst.org  Sat Oct 30 13:00:40 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 30 Oct 2010 13:00:40 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCC4C6D.6020905@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
Message-ID: <1288458040.1648.1.camel@blake>

On Sat, 2010-10-30 at 18:48 +0200, Stefano Debenedetti wrote:
> Hello Jean-Paul, thanks for tracking this down, you rock!
> 
> I promise that when I'll have payed all by debts I'll buy one of
> those posters of Exarkun to hang on my wall!

You can also get figurines:
http://www.toycutter.com/2009/02/exar-kun-three-eye-monster-munnys.html



From werner at thieprojects.ch  Sat Oct 30 14:42:13 2010
From: werner at thieprojects.ch (Werner Thie)
Date: Sat, 30 Oct 2010 08:42:13 -1000
Subject: [Twisted-Python] kqreactor implemented with select.kqueue for
	Python26 up
Message-ID: <4CCC6705.8070005@thieprojects.ch>

Hi all

Fiddling with kqreactor on the Mac (SnowLeopard) I came across the docs

http://docs.python.org/library/select.html#kqueue-objects

May I ask the list:

- is somebody working on an implementation of kqreactor with select.kqueue

- is implementing kqreactor for Python26 up with select.kqueue() a 
worthwhile undertaking

I only had the best of experiences with FreeBSD for our production 
servers running with the PyKQueue 1.4 port kqreactor so far, but using 
kqreactor with a port when a standard implementatino is available seemed 
to me a bit odd.

Mahalo, Werner


From glyph at twistedmatrix.com  Sat Oct 30 15:07:48 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 30 Oct 2010 15:07:48 -0400
Subject: [Twisted-Python] kqreactor implemented with select.kqueue for
	Python26 up
In-Reply-To: <4CCC6705.8070005@thieprojects.ch>
References: <4CCC6705.8070005@thieprojects.ch>
Message-ID: <44881937-B07C-4E15-A93B-B927FA8BFC6B@twistedmatrix.com>

On Oct 30, 2010, at 2:42 PM, Werner Thie wrote:

> Hi all
> 
> Fiddling with kqreactor on the Mac (SnowLeopard) I came across the docs
> 
> http://docs.python.org/library/select.html#kqueue-objects
> 
> May I ask the list:
> 
> - is somebody working on an implementation of kqreactor with select.kqueue
> 
> - is implementing kqreactor for Python26 up with select.kqueue() a 
> worthwhile undertaking
> 
> I only had the best of experiences with FreeBSD for our production 
> servers running with the PyKQueue 1.4 port kqreactor so far, but using 
> kqreactor with a port when a standard implementatino is available seemed 
> to me a bit odd.
> 
> Mahalo, Werner

There is periodically work done on this ticket: <http://tm.tl/1918>

Please feel free to attach any contributions that you have there.



From exarkun at twistedmatrix.com  Sat Oct 30 20:51:46 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 31 Oct 2010 00:51:46 -0000
Subject: [Twisted-Python] Immediate removal of cfreactor
Message-ID: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>

Hello all,

As reported in <http://twistedmatrix.com/trac/ticket/4652>, some 
problems have arisen with cfreactor.

First, recent versions of Pyrex reject the Pyrex source for the support 
modules.  This makes future development on cfreactor difficult (although 
Glyph's branch does resolve this problem - or at least appears to).

Second, the C source files do not build with clang.  This seems likely 
to become more important on future versions of OS X (the only platform 
where this code matters).  Even OS X 10.6 makes clang easily available 
(according to an Ars Technica article, "Clang is the recommended 
compiler, and the focus of all of Apple's future efforts." 
<http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/9>)

Finally, when the cfreactor build fails, distutils prematurely exits, 
preventing the rest of the build from completing.  This point makes this 
a serious problem for Twisted as a whole, rather than an obscure 
platform quirk that can be ignored without wide-ranging consequences.

Apple has announced OS X 10.7 for summer 2011.  Presumably at some point 
prior to this they will freeze on a version of Twisted to package.  The 
best outcome for Twisted can probably be attained by ensuring this is a 
version of Twisted which does not have the build issues reported in 
#4652.

Rather than leaving this to chance, I propose that we remove cfreactor 
and all supporting code ourselves, immediately (ie, in 10.2 - hi therve, 
go faster next time ;).

I think the relatively small userbase of cfreactor (I don't know of any 
projects using it, nor does Google codesearch) and the fact that the 
version of cfreactor in trunk segfaults partway through running the test 
suite, combined with the potentially time-sensitive nature of this fix, 
merits an exception to the normal backwards policy.

Rather than removing it, we could fix it, but the fact that no one seems 
to be using it makes me think that no one with the expertise and 
interest will step up to so.

If we're going to do this, it would be good to do it in the next few 
days (say, by Tuesday) so as not to unduly further delay the 10.2 
release process.

Thoughts?

Jean-Paul


From exarkun at twistedmatrix.com  Sun Oct 31 00:05:33 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 31 Oct 2010 04:05:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1288497933.72.1540430629@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101031/e7b6a25e/attachment.htm 

From glyph at twistedmatrix.com  Sun Oct 31 00:05:39 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 31 Oct 2010 00:05:39 -0400
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
Message-ID: <8F1B8735-1E5E-436C-9324-10D123683780@twistedmatrix.com>


On Oct 30, 2010, at 8:51 PM, exarkun at twistedmatrix.com wrote:

> Rather than removing it, we could fix it, but the fact that no one seems 
> to be using it makes me think that no one with the expertise and 
> interest will step up to so.

I don't actually know enough about the APIs in question to be sure, but my understanding is that the 'cfsupport' pyrex mess was added to paper over some holes in PyObjC, which have (long?) since been filled.  At least, I can import all the functions from 'CFNetwork' that it looks like we would need (based on the information here <http://bit.ly/bQWC3J>).

If someone wanted to do a real CFNetwork-based reactor, I think this means we wouldn't need to maintain any of our own C code.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101031/edb81d1e/attachment-0001.htm 

From ste at demaledetti.net  Sun Oct 31 13:36:27 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sun, 31 Oct 2010 18:36:27 +0100
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCC4C6D.6020905@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
Message-ID: <4CCDA91B.9060807@demaledetti.net>

Il 30/10/2010 18:48, Stefano Debenedetti ha scritto:
> http://twistedmatrix.com/trac/ticket/4719

I have attached a 2 lines patch that seems to fix the issue.

The patch also contains a 50 lines unit test ;)

I hope this makes it on time for the 10.2.0 release.

BTW there's a small error here:

http://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode

$ svn diff -u
Subcommand 'diff' doesn't accept option '-u [--show-updates]'
Type 'svn help diff' for usage.

So the correct command for generating a patch should be documented as:

svn diff > my-twisted-patch.patch

thanks ciao
ste


From glyph at twistedmatrix.com  Sun Oct 31 15:57:31 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 31 Oct 2010 15:57:31 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCDA91B.9060807@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
Message-ID: <485C303F-7C1C-4302-8A53-720660B0CB0A@twistedmatrix.com>


On Oct 31, 2010, at 1:36 PM, Stefano Debenedetti wrote:

> Il 30/10/2010 18:48, Stefano Debenedetti ha scritto:
>> http://twistedmatrix.com/trac/ticket/4719
> 
> I have attached a 2 lines patch that seems to fix the issue.
> 
> The patch also contains a 50 lines unit test ;)

Stefano, this looks like a great contribution: a serious bug fix in a bit of core functionality, with a test.  Thanks so much!

I'll try to do a complete review soon, but my immediate impression is that test_disconnectEvent needs a better docstring.  The word 'correctly' in a docstring is always a clue that the writer gave up and stopped trying to describe what 'correct' behavior is :).

if you could try to rephrase it as "When a transport is (...) and then (...), (...) should be called on (...)".

(I will have a more concrete suggestion, with fewer "..."s when I have time to go through the ticket history and review the patch in detail.)

> I hope this makes it on time for the 10.2.0 release.
> 
> BTW there's a small error here:
> 
> http://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
> 
> $ svn diff -u
> Subcommand 'diff' doesn't accept option '-u [--show-updates]'
> Type 'svn help diff' for usage.
> 
> So the correct command for generating a patch should be documented as:
> 
> svn diff > my-twisted-patch.patch
> 
> thanks ciao
> ste
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20101031/c4c3b729/attachment.htm 

From aphidia at hotmail.com  Sun Oct 31 20:00:13 2010
From: aphidia at hotmail.com (velociraptor Genjix)
Date: Mon, 1 Nov 2010 00:00:13 +0000
Subject: [Twisted-Python] XDCC SEND from IRCClient
In-Reply-To: <485C303F-7C1C-4302-8A53-720660B0CB0A@twistedmatrix.com>
References: <4CCC4C6D.6020905@demaledetti.net>, <4CCDA91B.9060807@demaledetti.net>,
	<485C303F-7C1C-4302-8A53-720660B0CB0A@twistedmatrix.com>
Message-ID: <BLU148-W200EF09487D4C100D349CCB3480@phx.gbl>


Hey,
Inside an twisted.words.protocol.irc.IRCClient class I want to download via XDCC and then have a callback after that's finished. Sadly the documentation is lacking and I'm not sure what is what.
If I override IRCClient.dccDoSend(self, user, address, port, filename, size, data) then it enters when I initiate an XDCC SEND request. But how do I start the download?
1- How can I start downloading the file?2- Can I receive an array of the bytes instead of saving a file?3- How can I be notified when the download is complete?
Thanks 		 	   		  

From p.mayers at imperial.ac.uk  Fri Oct  1 03:41:11 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Oct 2010 10:41:11 +0100
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units / sec
Message-ID: <4CA5ACB7.9020403@imperial.ac.uk>

Is there an easy way to make a task.Cooperator instance only execute N 
ticks / sec, summed across all iterators it's driving? So if you add two 
iterators, they each run at N/2 per sec, 3 at N/3, etc.

It seems like this ought to do it:

N = <rate>

def myScheduler(x):
   # reschedule N times per second
   reactor.callLater(1.0/N, x)

class myTermination:
   def __call__(self):
     # stop immediately after one iterator.next()
     return True

myCoop = task.Cooperator(
   terminationPredicateFactory=myTermination,
   scheduler=myScheduler,
)

...but this doesn't seem to work when I try it:

def mytask(name, limit):
     for i in range(limit):
         print name, time.time(), i
         yield i

def running():
     finish_a = myCoop.coiterate(mytask('a', 40))
     def start_b():
         finish_b = myCoop.coiterate(mytask('b', 10))
     reactor.callLater(6.5, start_b)

def main():
     reactor.callWhenRunning(running)
     reactor.run()

if __name__=='__main__':
     main()

...shows that, once the "b" iterator is added, each iterator is running 
1/sec, rather than the whole cooperator:

a 1285925864.05 0
a 1285925865.05 1
a 1285925866.05 2
a 1285925867.05 3
a 1285925868.05 4
a 1285925869.05 5 << running fine 1/sec up until here
b 1285925870.05 0
a 1285925870.55 6 << now running 2/sec
b 1285925871.05 1
a 1285925871.55 7
b 1285925872.05 2
a 1285925872.55 8
b 1285925873.05 3

I've had a look at the source code, and it looks like the logic should 
cause what I want to happen, but obviously it's not. Version is Twisted 
8.2.0 on python 2.6 (Fedora 12)



From exarkun at twistedmatrix.com  Fri Oct  1 06:46:24 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Oct 2010 12:46:24 -0000
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
	sec
In-Reply-To: <4CA5ACB7.9020403@imperial.ac.uk>
References: <4CA5ACB7.9020403@imperial.ac.uk>
Message-ID: <20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>

On 09:41 am, p.mayers at imperial.ac.uk wrote:
>Is there an easy way to make a task.Cooperator instance only execute N
>ticks / sec, summed across all iterators it's driving? So if you add 
>two
>iterators, they each run at N/2 per sec, 3 at N/3, etc.
>
>It seems like this ought to do it:

Very close!  It took me a while to notice the mistake.
>N = <rate>
>
>def myScheduler(x):
>   # reschedule N times per second
>   reactor.callLater(1.0/N, x)

The scheduler function must not return None!  This confuses the 
scheduling code in cooperator and causes it to run too many things in 
parallel.  This mistake could be detected easily by cooperator and a 
useful exception raised to point out the problem.  Want to file a 
ticket?

Jean-Paul
>class myTermination:
>   def __call__(self):
>     # stop immediately after one iterator.next()
>     return True
>
>myCoop = task.Cooperator(
>   terminationPredicateFactory=myTermination,
>   scheduler=myScheduler,
>)
>
>...but this doesn't seem to work when I try it:
>
>def mytask(name, limit):
>     for i in range(limit):
>         print name, time.time(), i
>         yield i
>
>def running():
>     finish_a = myCoop.coiterate(mytask('a', 40))
>     def start_b():
>         finish_b = myCoop.coiterate(mytask('b', 10))
>     reactor.callLater(6.5, start_b)
>
>def main():
>     reactor.callWhenRunning(running)
>     reactor.run()
>
>if __name__=='__main__':
>     main()
>
>...shows that, once the "b" iterator is added, each iterator is running
>1/sec, rather than the whole cooperator:
>
>a 1285925864.05 0
>a 1285925865.05 1
>a 1285925866.05 2
>a 1285925867.05 3
>a 1285925868.05 4
>a 1285925869.05 5 << running fine 1/sec up until here
>b 1285925870.05 0
>a 1285925870.55 6 << now running 2/sec
>b 1285925871.05 1
>a 1285925871.55 7
>b 1285925872.05 2
>a 1285925872.55 8
>b 1285925873.05 3
>
>I've had a look at the source code, and it looks like the logic should
>cause what I want to happen, but obviously it's not. Version is Twisted
>8.2.0 on python 2.6 (Fedora 12)
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From p.mayers at imperial.ac.uk  Fri Oct  1 06:58:15 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Oct 2010 13:58:15 +0100
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
 sec
In-Reply-To: <20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>
References: <4CA5ACB7.9020403@imperial.ac.uk>
	<20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>
Message-ID: <4CA5DAE7.6040800@imperial.ac.uk>

On 01/10/10 13:46, exarkun at twistedmatrix.com wrote:
> On 09:41 am, p.mayers at imperial.ac.uk wrote:
>> Is there an easy way to make a task.Cooperator instance only execute N
>> ticks / sec, summed across all iterators it's driving? So if you add
>> two
>> iterators, they each run at N/2 per sec, 3 at N/3, etc.
>>
>> It seems like this ought to do it:
>
> Very close!  It took me a while to notice the mistake.
>> N =<rate>
>>
>> def myScheduler(x):
>>    # reschedule N times per second
>>    reactor.callLater(1.0/N, x)
>
> The scheduler function must not return None!  This confuses the
> scheduling code in cooperator and causes it to run too many things in
> parallel.  This mistake could be detected easily by cooperator and a

Ah ha! In fact, it looks like the scheduler must return an object with a 
.cancel() method (obviously an IDelayedCall in the usual case).

I'll open a ticket; presumably it would a) be nice to detect invalid 
return values and b) update the docstring of Cooperator.__init__?



From chris at simplistix.co.uk  Fri Oct  1 07:19:15 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Fri, 01 Oct 2010 14:19:15 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA4C24F.8020807@imperial.ac.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>	<4CA49B1E.5040608@simplistix.co.uk>	<4CA49D78.7010103@imperial.ac.uk>	<4CA4A014.8080608@simplistix.co.uk>	<4CA4A451.6020509@imperial.ac.uk>	<4CA4A87E.7000408@simplistix.co.uk>
	<4CA4C24F.8020807@imperial.ac.uk>
Message-ID: <4CA5DFD3.1060508@simplistix.co.uk>

On 30/09/2010 18:01, Phil Mayers wrote:
> It is more than a little confusing, and I'm sure frustrating.
>
> I've tried to produce something like this locally, but cannot.

The very first message in this thread (28th Sept, 14:48) and my email of 
30th Sept, 14:36 both had scripts attached which do exactly this..

> Let me see if I understand the problem in full.
>
> You have an @inlineCallbacks-decorated generator which is the target of
> a LoopingCall, like so:
>
> @inlineCallbacks
> def loop():
>     try:
>       somework()
>     except:
>       log.err()
>
> lc = task.LoopingCall(loop)

Almost:

     @inlineCallbacks
     def loop(self):
         # Check for files to send on schedule
         yield self.checkSchedule()

     @inlineCallbacks
     def checkSchedule(self):
        try:
            yield somework()
        except Exception:
            log.err(None,'Unhandled exception ...')

...although I'm currently changing the loop function to be:

     def loop(self):
	self.checkSchedule()

...as this appears to give me what I want, until something proves 
otherwise...

> You want this loop function to catch&  log all exceptions resulting from
> work it initiates.

Yep, errbacks, internal twisted bugs, whatever. As long as they're 
logged by something, preferabyl the try-except above, I don't mind.
What absolutely must not cannot ever happen is for the scheduler to die ;-)

> Your "somework" function calls, amongst other things, an
> @inlineCallbacks-decorated worker function:
>
> @inlineCallbacks
> def sendTransmission(...):
>     try:
>       yield maybeDeferred(feed.initiateTransmission)
>     except:
>       ...some handling

Yep.

> You are seeing two errors:
>
>
>    1. A GeneratorExit exception. This appears (if I'm reading your
> logging right) to be caught by your logging?

Yep.

>    2. A ConnectionLost exception. This is not caught by your logging, and
> is propagating up to the reactor, and giving "Unhandled Error"

Correct.



From exarkun at twistedmatrix.com  Fri Oct  1 07:27:02 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Oct 2010 13:27:02 -0000
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
	sec
In-Reply-To: <4CA5DAE7.6040800@imperial.ac.uk>
References: <4CA5ACB7.9020403@imperial.ac.uk>
	<20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>
	<4CA5DAE7.6040800@imperial.ac.uk>
Message-ID: <20101001132702.2022.861556396.divmod.xquotient.96@localhost.localdomain>

On 12:58 pm, p.mayers at imperial.ac.uk wrote:
>On 01/10/10 13:46, exarkun at twistedmatrix.com wrote:
>>On 09:41 am, p.mayers at imperial.ac.uk wrote:
>>>Is there an easy way to make a task.Cooperator instance only execute 
>>>N
>>>ticks / sec, summed across all iterators it's driving? So if you add
>>>two
>>>iterators, they each run at N/2 per sec, 3 at N/3, etc.
>>>
>>>It seems like this ought to do it:
>>
>>Very close!  It took me a while to notice the mistake.
>>>N =<rate>
>>>
>>>def myScheduler(x):
>>>    # reschedule N times per second
>>>    reactor.callLater(1.0/N, x)
>>
>>The scheduler function must not return None!  This confuses the
>>scheduling code in cooperator and causes it to run too many things in
>>parallel.  This mistake could be detected easily by cooperator and a
>
>Ah ha! In fact, it looks like the scheduler must return an object with 
>a
>.cancel() method (obviously an IDelayedCall in the usual case).
>
>I'll open a ticket; presumably it would a) be nice to detect invalid
>return values and b) update the docstring of Cooperator.__init__?

Sounds great.

Jean-Paul



From p.mayers at imperial.ac.uk  Fri Oct  1 07:28:26 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 01 Oct 2010 14:28:26 +0100
Subject: [Twisted-Python] The Real Error (tm) [was Re: how to write a
 safe catch-all]
In-Reply-To: <4CA5DFD3.1060508@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>	<4CA361A5.2090005@simplistix.co.uk>	<4CA36675.5010603@imperial.ac.uk>	<4CA3746E.2040800@simplistix.co.uk>	<20100929173131.2022.2020545368.divmod.xquotient.5@localhost.localdomain>	<4CA3A149.1000703@simplistix.co.uk>	<20100929210641.2022.2049318094.divmod.xquotient.10@localhost.localdomain>	<4CA3C410.8090401@simplistix.co.uk>	<BA6AE455-89D0-413C-8326-F5C6AE460D4E@twistedmatrix.com>	<4CA3DF3C.2000706@simplistix.co.uk>	<20100930034530.2022.551225691.divmod.xquotient.17@localhost.localdomain>	<4CA46B08.7000907@simplistix.co.uk>	<4CA4863A.3010609@imperial.ac.uk>	<4CA48A85.9000608@imperial.ac.uk>	<4CA49278.5020502@simplistix.co.uk>	<AANLkTi=JsCvgGgW6FPfX_VszkLKKST4DFN0OzO6aY1RO@mail.gmail.com>	<4CA49B1E.5040608@simplistix.co.uk>	<4CA49D78.7010103@imperial.ac.uk>	<4CA4A014.8080608@simplistix.co.uk>	<4CA4A451.6020509@imperial.ac.uk>	<4CA4A87E.7000408@simplistix.co.uk>
	<4CA4C24F.8020807@imperial.ac.uk>
	<4CA5DFD3.1060508@simplistix.co.uk>
Message-ID: <4CA5E1FA.9060309@imperial.ac.uk>

On 01/10/10 14:19, Chris Withers wrote:
> On 30/09/2010 18:01, Phil Mayers wrote:
>> It is more than a little confusing, and I'm sure frustrating.
>>
>> I've tried to produce something like this locally, but cannot.
>
> The very first message in this thread (28th Sept, 14:48) and my email of
> 30th Sept, 14:36 both had scripts attached which do exactly this..

If your examples scripts genuinely reflect the problem (a bit of code, 
outside your control, is raising an exception in a context where the 
error doesn't flow back to user code) then Glyph is (of course!) right - 
you're not going to be able to capture and log the error "nicely". It 
will be propagated upwards until it hits the reactor.

>
>> You want this loop function to catch&   log all exceptions resulting from
>> work it initiates.
>
> Yep, errbacks, internal twisted bugs, whatever. As long as they're
> logged by something, preferabyl the try-except above, I don't mind.
> What absolutely must not cannot ever happen is for the scheduler to die ;-)
>

Now *this* you should be able to do.

A LoopingCall will only die (i.e. stop permanently) if you:

  1. Raise an exception
  2. Return a deferred which errback's

(The former gets turned into the latter)

If you ensure your loop never ever does this, it'll run forever.

HOWEVER: as JP has mentioned, a LoopingCall *will* pause if you return a 
deferred, until that deferred callback's (or errback's, then it dies)

So this:

def loop():
   try:
     somework()
   except:
     pass

...should never ever die (because it can't raise an exception) or stop 
(because it doesn't return a deferred)



From chris at simplistix.co.uk  Fri Oct  1 07:30:48 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Fri, 01 Oct 2010 14:30:48 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>
References: <4CA1F212.9040305@simplistix.co.uk>
	<F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>
Message-ID: <4CA5E288.1010905@simplistix.co.uk>

Hi Glyph,

On 30/09/2010 19:52, Glyph Lefkowitz wrote:
>> File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py",
>> line 757, in runUntilCurrent
>> call.func(*call.args, **call.kw)
>> File "test_looping.py", line 24, in __call__
>> del self.connector
>> exceptions.AttributeError: Break instance has no attribute 'connector'
>
> This traceback indicates a bug in Twisted.
>
> This is an error that other people have very occasionally spotted, and
> we have never been able to reliably reproduce it.

While I'm able to reproduce this, I can't really as it involves a 
customer ftp server also generating error messages and they've already 
had enough of them ;-)

> Over the years we have
> tried to diagnose it in various ways and we have always failed.
>
> It would be really valuable to everyone if you could write up a bug and

Is there a bug already tracking this?

> provide detailed reproduction instructions, ideally with some python
> code that triggers this error, so that we can address the bug. It would
> be super useful if you could write an example that reproduces the same
> bug on a recent Twisted version (8.2 is pretty old), especially the 10.2
> prerelease. But, if your example reproduces on 8.2 and not 10.0, that
> tells us something too.

Well, unfortunately I can't do any of the above :-( I've only seen this, 
as I said previously, when we use twisted.protocols.ftp.FTPClient to try 
to send a file to an ftp server that was only able to handle active ftp 
transfers when our setup only allowed passive ftp transfers.

It was happening in a steady, reproducible fashion (ie: every time we 
tried) but unfortunately we've had to bail and now send via sftp using a 
pexpect-based wrapper around the real sftp command client (we had buggy 
behaviour with twisted's sftp client elsewhere)

I hope this helps, do let me know if I should add it to an issue 
somewhere...

cheers,

Chris



From exarkun at twistedmatrix.com  Fri Oct  1 08:00:08 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 01 Oct 2010 14:00:08 -0000
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <4CA5E288.1010905@simplistix.co.uk>
References: <4CA1F212.9040305@simplistix.co.uk>
	<F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>
	<4CA5E288.1010905@simplistix.co.uk>
Message-ID: <20101001140008.2022.1178438336.divmod.xquotient.98@localhost.localdomain>

On 01:30 pm, chris at simplistix.co.uk wrote:
>Hi Glyph,
>
>On 30/09/2010 19:52, Glyph Lefkowitz wrote:
>>>File "Twisted-8.2.0-py2.5-linux-x86_64.egg/twisted/internet/base.py",
>>>line 757, in runUntilCurrent
>>>call.func(*call.args, **call.kw)
>>>File "test_looping.py", line 24, in __call__
>>>del self.connector
>>>exceptions.AttributeError: Break instance has no attribute 
>>>'connector'
>>
>>This traceback indicates a bug in Twisted.
>>
>>This is an error that other people have very occasionally spotted, and
>>we have never been able to reliably reproduce it.
>
>While I'm able to reproduce this, I can't really as it involves a
>customer ftp server also generating error messages and they've already
>had enough of them ;-)
>>Over the years we have
>>tried to diagnose it in various ways and we have always failed.
>>
>>It would be really valuable to everyone if you could write up a bug 
>>and
>
>Is there a bug already tracking this?
>>provide detailed reproduction instructions, ideally with some python
>>code that triggers this error, so that we can address the bug. It 
>>would
>>be super useful if you could write an example that reproduces the same
>>bug on a recent Twisted version (8.2 is pretty old), especially the 
>>10.2
>>prerelease. But, if your example reproduces on 8.2 and not 10.0, that
>>tells us something too.
>
>Well, unfortunately I can't do any of the above :-( I've only seen 
>this,
>as I said previously, when we use twisted.protocols.ftp.FTPClient to 
>try
>to send a file to an ftp server that was only able to handle active ftp
>transfers when our setup only allowed passive ftp transfers.
>
>It was happening in a steady, reproducible fashion (ie: every time we
>tried) but unfortunately we've had to bail and now send via sftp using 
>a
>pexpect-based wrapper around the real sftp command client (we had buggy
>behaviour with twisted's sftp client elsewhere)
>
>I hope this helps, do let me know if I should add it to an issue
>somewhere...

Can you at least provide a traffic capture recording an instance of this 
happening?

Jean-Paul



From chris at simplistix.co.uk  Fri Oct  1 09:15:06 2010
From: chris at simplistix.co.uk (Chris Withers)
Date: Fri, 01 Oct 2010 16:15:06 +0100
Subject: [Twisted-Python] how to write a safe catch-all
In-Reply-To: <20101001140008.2022.1178438336.divmod.xquotient.98@localhost.localdomain>
References: <4CA1F212.9040305@simplistix.co.uk>	<F3E27175-C87B-466A-A3AC-D2E4140A5FFF@twistedmatrix.com>	<4CA5E288.1010905@simplistix.co.uk>
	<20101001140008.2022.1178438336.divmod.xquotient.98@localhost.localdomain>
Message-ID: <4CA5FAFA.6000805@simplistix.co.uk>

On 01/10/2010 15:00, exarkun at twistedmatrix.com wrote:
>> I hope this helps, do let me know if I should add it to an issue
>> somewhere...
>
> Can you at least provide a traffic capture recording an instance of this
> happening?

I'm afraid not, I didn't have the forsight to do this at the time, and 
as I've said, the customer has had enough of us causing their ftp server 
to generate error messages :-S

Chris



From powdahound at gmail.com  Fri Oct  1 10:24:44 2010
From: powdahound at gmail.com (Garret Heaton)
Date: Fri, 1 Oct 2010 09:24:44 -0700
Subject: [Twisted-Python] Unable to start twistd service on Ubuntu 10.04
 when using pseudo terminal
In-Reply-To: <4CA4B230.1030709@gmail.com>
References: <AANLkTinAooUorJq7rw0riHnptDAN=B1+0mXmiz4=wi3C@mail.gmail.com>
	<AANLkTikv9nDYjMPiRYRQuNGDEv-DT1d2mioZRGxgp93c@mail.gmail.com>
	<4CA4B230.1030709@gmail.com>
Message-ID: <AANLkTimKD2Pc6faxvCFuwK2U7TxTNOXN_yE0vYGgxY1d@mail.gmail.com>

Thanks, that explains everything. The code I was using to test was copied
from Twisted's daemonizing function:
http://github.com/powdahound/twisted/blob/master/twisted/scripts/_twistd_unix.py#L155-169

It should probably be updated before more users upgrade to the new kernel
and run into this issue. Ticket #823 (
http://twistedmatrix.com/trac/ticket/823) seems very related to this.

On Thu, Sep 30, 2010 at 8:52 AM, Žiga Seilnacht <ziga.seilnacht at gmail.com>wrote:

> Hello,
>
> Garret Heaton wrote:
> > I've simplified this issue down and am able to reproduce it without
> > Twisted: http://gist.github.com/603154
> >
> > Still not sure what the cause is, so if anyone has any ideas I'd love to
> > hear them. Thanks!
> >
>
> The behavior that you are seeing seems to be related to the change in
> the 2.6.32 kernel, where they changed the child-runs-first scheduler
> parameter to false. Setting that parameter to 1 with:
>
> $ sudo sysctl -w kernel.sched_child_runs_first=1
>
> and rebooting the computer restores the behavior that you saw on the
> old kernel for me. See http://lwn.net/Articles/352863/ for more details.
>
> Parent (which is the controlling process when ran with -t) exiting before
> the child starts causes the child to receive SIGHUP signal immediately as
> it starts running, before it has time to disassociate itself from the
> parent's process group. It seems to me that this might be an actual bug
> in twistd, it should block the SIGHUP signal across the fork() calls.
>
> Your test program has an additional assumption that the child will run
> before the parent; the child in your program tries to write to stdout,
> i.e. the controlling terminal, which gets closed once the parent exits.
>
> The modified test program below works for me regardless of the setting
> of the kernel.sched_child_runs_first parameter.
>
> Hope this helps,
> Ziga
>
>
>
> import os
> import signal
>
> f = open("test_fork.out", "w")
>
> def daemonize():
>     # See http://www.faqs.org/faqs/unix-faq/programmer/faq/ - Section 1.7
>     print >> f, '--- %s: daemonizing' % os.getpid()
>
>     signal.signal(signal.SIGHUP, signal.SIG_IGN)
>     if os.fork(): # launch child and...
>         print >> f, '--- %s: kill parent 1' % os.getpid()
>         os._exit(0) # kill off parent
>     print >> f, '--- %s: old sid: %r' % (os.getpid(),
> os.getsid(os.getpid()))
>     os.setsid()
>     print >> f, '--- %s: new sid: %r' % (os.getpid(),
> os.getsid(os.getpid()))
>     if os.fork(): # launch child and...
>         print >> f, '--- %s: kill parent 2' % os.getpid()
>         os._exit(0) # kill off parent again.
>
>     signal.signal(signal.SIGHUP, signal.SIG_DFL)
>     print >> f, '--- %s: daemonizing done' % os.getpid()
>
> if __name__ == "__main__":
>     print >> f, 'starting as %d' % os.getpid()
>     daemonize()
>     print >> f, 'stopping as %s' % os.getpid()
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101001/07bef191/attachment-0001.html>

From jasonjwwilliams at gmail.com  Fri Oct  1 19:01:35 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Fri, 1 Oct 2010 19:01:35 -0600
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
Message-ID: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>

I'm really pulling my hair out here. The code in question uses getPage:

http://gist.github.com/607124

If I remove the postdata argument to getPage no problem (except the postdata
is required by server I'm calling). However, no matter what I put in
postdata, I get this:

http://gist.github.com/607126

Any help is greatly appreciated.

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101001/58229187/attachment.html>

From ivan at ludios.org  Fri Oct  1 22:38:43 2010
From: ivan at ludios.org (Ivan Kozik)
Date: Sat, 2 Oct 2010 04:38:43 +0000
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
Message-ID: <AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>

On Sat, Oct 2, 2010 at 01:01, Jason J. W. Williams
<jasonjwwilliams at gmail.com> wrote:
> I'm really pulling my hair out here. The code in question uses getPage:
> http://gist.github.com/607124
> If I remove the postdata argument to getPage no problem (except the postdata
> is required by server I'm calling). However, no matter what I put in
> postdata, I get this:
> http://gist.github.com/607126

This looks really strange.  Could you add a print statement before
line 112 of abstract.py, to see what's in self._tempDataBuffer?

Ivan



From jasonjwwilliams at gmail.com  Sat Oct  2 11:15:16 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 2 Oct 2010 11:15:16 -0600
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
	<AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
Message-ID: <AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>

Hi Ivan,

This looks really strange.  Could you add a print statement before
> line 112 of abstract.py, to see what's in self._tempDataBuffer?
>

 The conents of self._tempDataBuffer is indeed a list:

['HTTP/1.1 200 OK\r\n', 'Transfer-Encoding: chunked\r\n', '\r\n', '47\r\n',
['__add__', '__class__', '__contains__', '__delattr__', '__doc__', '__eq__',
'__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__',
'__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__',
'__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__',
'__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__',
'__sizeof__', '__str__', '__subclasshook__', '_formatter_field_name_split',
'_formatter_parser', 'capitalize', 'center', 'count', 'decode', 'encode',
'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum', 'isalpha',
'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust',
'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust',
'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith',
'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'], '\r\n',
'0\r\n\r\n']

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101002/1ee1f93a/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct  2 11:26:20 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 02 Oct 2010 17:26:20 -0000
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
	<AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
	<AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>
Message-ID: <20101002172620.2022.1410359678.divmod.xquotient.121@localhost.localdomain>

On 05:15 pm, jasonjwwilliams at gmail.com wrote:
>Hi Ivan,
>
>This looks really strange.  Could you add a print statement before
>>line 112 of abstract.py, to see what's in self._tempDataBuffer?
>
>The conents of self._tempDataBuffer is indeed a list:
>
>['HTTP/1.1 200 OK\r\n', 'Transfer-Encoding: chunked\r\n', '\r\n', 
>'47\r\n',
>['__add__', '__class__', '__contains__', '__delattr__', '__doc__', 
>'__eq__',
>'__format__', '__ge__', '__getattribute__', '__getitem__', 
>'__getnewargs__',
>'__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__',
>'__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__',
>'__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__',
>'__sizeof__', '__str__', '__subclasshook__', 
>'_formatter_field_name_split',
>'_formatter_parser', 'capitalize', 'center', 'count', 'decode', 
>'encode',
>'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum', 
>'isalpha',
>'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust',
>'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust',
>'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith',
>'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'], '\r\n',
>'0\r\n\r\n']

So it appears as if someone is calling request.write(dir(some string)). 
If you add a type check to the implementation of write, you'll probably 
get a traceback pointing at exactly the offending code (and maybe we 
should add that type check to Twisted).

Jean-Paul



From jasonjwwilliams at gmail.com  Sat Oct  2 11:47:25 2010
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Sat, 2 Oct 2010 11:47:25 -0600
Subject: [Twisted-Python] getPage generates a traceback in abstract.py
In-Reply-To: <20101002172620.2022.1410359678.divmod.xquotient.121@localhost.localdomain>
References: <AANLkTimBFomS_YqorToCvBSznUgQDAaSD5bC7GDy2Lw0@mail.gmail.com>
	<AANLkTimJuhww-Ng+d2bUEN=sNJcPcUDQm-=dKwxDQpTK@mail.gmail.com>
	<AANLkTi=JeQTEnyeebmeC0oR8niuOzM_etGmkY4+K8xwE@mail.gmail.com>
	<20101002172620.2022.1410359678.divmod.xquotient.121@localhost.localdomain>
Message-ID: <AANLkTin3xze1oksHhzQFTcJJ3WKv-kKrGSv+F5Ls5oJj@mail.gmail.com>

Wow I feel stupid. That would be me in the callback that gets fired when
getPage completes. Originally I had written this to use web.client.Agent and
that code was helping me to inspect the response for debugging. Thank you
very much.

-J

On Sat, Oct 2, 2010 at 11:26 AM, <exarkun at twistedmatrix.com> wrote:

> On 05:15 pm, jasonjwwilliams at gmail.com wrote:
> >Hi Ivan,
> >
> >This looks really strange.  Could you add a print statement before
> >>line 112 of abstract.py, to see what's in self._tempDataBuffer?
> >
> >The conents of self._tempDataBuffer is indeed a list:
> >
> >['HTTP/1.1 200 OK\r\n', 'Transfer-Encoding: chunked\r\n', '\r\n',
> >'47\r\n',
> >['__add__', '__class__', '__contains__', '__delattr__', '__doc__',
> >'__eq__',
> >'__format__', '__ge__', '__getattribute__', '__getitem__',
> >'__getnewargs__',
> >'__getslice__', '__gt__', '__hash__', '__init__', '__le__', '__len__',
> >'__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__',
> >'__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__',
> >'__sizeof__', '__str__', '__subclasshook__',
> >'_formatter_field_name_split',
> >'_formatter_parser', 'capitalize', 'center', 'count', 'decode',
> >'encode',
> >'endswith', 'expandtabs', 'find', 'format', 'index', 'isalnum',
> >'isalpha',
> >'isdigit', 'islower', 'isspace', 'istitle', 'isupper', 'join', 'ljust',
> >'lower', 'lstrip', 'partition', 'replace', 'rfind', 'rindex', 'rjust',
> >'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith',
> >'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill'], '\r\n',
> >'0\r\n\r\n']
>
> So it appears as if someone is calling request.write(dir(some string)).
> If you add a type check to the implementation of write, you'll probably
> get a traceback pointing at exactly the offending code (and maybe we
> should add that type check to Twisted).
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101002/806c3cad/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct  2 22:05:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 03 Oct 2010 04:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1286078729.76.576705784@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101003/ec898b5a/attachment.html>

From p.mayers at imperial.ac.uk  Sun Oct  3 07:41:15 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 03 Oct 2010 14:41:15 +0100
Subject: [Twisted-Python] Limiting a task.Cooperator to N work units /
 sec
In-Reply-To: <20101001132702.2022.861556396.divmod.xquotient.96@localhost.localdomain>
References: <4CA5ACB7.9020403@imperial.ac.uk>	<20101001124624.2022.97774815.divmod.xquotient.95@localhost.localdomain>	<4CA5DAE7.6040800@imperial.ac.uk>
	<20101001132702.2022.861556396.divmod.xquotient.96@localhost.localdomain>
Message-ID: <4CA887FB.5010807@imperial.ac.uk>

On 10/01/2010 02:27 PM, exarkun at twistedmatrix.com wrote:
> On 12:58 pm, p.mayers at imperial.ac.uk wrote:
>> On 01/10/10 13:46, exarkun at twistedmatrix.com wrote:
>>> On 09:41 am, p.mayers at imperial.ac.uk wrote:
>>>> Is there an easy way to make a task.Cooperator instance only execute
>>>> N
>>>> ticks / sec, summed across all iterators it's driving? So if you add
>>>> two
>>>> iterators, they each run at N/2 per sec, 3 at N/3, etc.
>>>>
>>>> It seems like this ought to do it:
>>>
>>> Very close!  It took me a while to notice the mistake.
>>>> N =<rate>
>>>>
>>>> def myScheduler(x):
>>>>     # reschedule N times per second
>>>>     reactor.callLater(1.0/N, x)
>>>
>>> The scheduler function must not return None!  This confuses the
>>> scheduling code in cooperator and causes it to run too many things in
>>> parallel.  This mistake could be detected easily by cooperator and a
>>
>> Ah ha! In fact, it looks like the scheduler must return an object with
>> a
>> .cancel() method (obviously an IDelayedCall in the usual case).
>>
>> I'll open a ticket; presumably it would a) be nice to detect invalid
>> return values and b) update the docstring of Cooperator.__init__?
>
> Sounds great.

I opened:

http://twistedmatrix.com/trac/ticket/4666

...and attached a simple unit test & patch/docstring update.



From stephen.c.waterbury at nasa.gov  Tue Oct  5 14:09:56 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 5 Oct 2010 16:09:56 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
Message-ID: <4CAB8614.5060007@nasa.gov>

First, the "PB Copyable: Passing Complex Types" doc is
*great* and the examples are excellent -- my compliments to
all who contributed!

My question is about the pb.Cacheable section
(http://twistedmatrix.com/documents/current/core/howto/pb-copyable.html#auto9)
-- specifically the first sentence:  'Sometimes the object you
want to send to the remote process is big and slow. "big" means
it takes a lot of data (storage, network bandwidth, processing)
to represent its state.  "slow" means that state doesn't change
very frequently.'

I would think that the product of its size and its rate of change
is the applicable metric -- i.e.:  the bigger the object is *or*
the faster it changes (not the slower), the more applicable
Cacheable is, no?

Steve




From ygingras at ygingras.net  Wed Oct  6 18:49:12 2010
From: ygingras at ygingras.net (Yannick Gingras)
Date: Wed, 6 Oct 2010 20:49:12 -0400
Subject: [Twisted-Python] ConFoo 2011 Call for Speakers
Message-ID: <201010062049.12842.ygingras@ygingras.net>

Greetings Twisters, 
  We, Montréal-Python, are the coordinators of the Python track at
ConFoo 2011 and we are very proud to announce our call for speakers.

PHP-Québec, Montréal-Python, Montreal.rb, W3Qc, and OWASP Montréal are
organizing the first edition of the ConFoo conference, which will be
held in Montréal on March 9th through 11th at the Hilton Bonaventure
Hotel.  With over 500 expected attendees, ConFoo is one of the largest
Web development conference in North America.

ConFoo is about the Web, but it's also about showcasing the strengths
of different technologies.  Do you think that Python beats all the
other languages out there for Web development?  Do you think that
Twisted knocks Tornado's socks off?  Come and tell us why!

Sessions are one hour long and you can present in French or in
English, which ever your prefer.  Submissions are due for November 26;
for more details, visit the ConFoo website:

  http://confoo.ca/en/call-for-papers

By the way, we are perfectly aware that there is a slight clash with
PyCon.  You should not worry about that since all Python talks will
happen before Friday, giving you plenty of time for the commute
towards Atlanta.  

Share the word!

-- 
Yannick Gingras
http://montrealpython.org -- lead organizer
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20101006/c1675137/attachment.sig>

From jason-sage at creativetrax.com  Thu Oct  7 12:53:54 2010
From: jason-sage at creativetrax.com (jason-sage at creativetrax.com)
Date: Thu, 07 Oct 2010 13:53:54 -0500
Subject: [Twisted-Python] patch for TLS
Message-ID: <4CAE1742.1000300@creativetrax.com>

(cc to both twisted and sage-devel lists)

Hi all,

In the Sage project (http://sagemath.org), we apply a patch to the 
Twisted version we distribute.  I'd like to clean out our custom patches 
and push them upstream, if possible.  So I have a couple of questions 
(I'm not terribly familiar with Twisted):

1. Is the patch below generally useful?

2. Is there a better way to do this than to patch the file?

3. What do we need to do to incorporate it upstream in Twisted?


PATCH (against the Twisted git mirror, as of today):

diff --git a/twisted/application/internet.py 
b/twisted/application/internet.py
index 8437568..0397f08 100644
--- a/twisted/application/internet.py
+++ b/twisted/application/internet.py
@@ -193,7 +193,7 @@ on arguments to the reactor method.
  }

  import new
-for tran in 'TCP UNIX SSL UDP UNIXDatagram Multicast'.split():
+for tran in 'TCP UNIX SSL TLS UDP UNIXDatagram Multicast'.split():
      for side in 'Server Client'.split():
          if tran == "Multicast" and side == "Client":
              continue
diff --git a/twisted/application/strports.py 
b/twisted/application/strports.py
index 3654413..2b6ca08 100644
--- a/twisted/application/strports.py
+++ b/twisted/application/strports.py
@@ -79,9 +79,25 @@ def _parseSSL(factory, port, privateKey="server.pem", 
certKey=None,
      return ((int(port), factory, cf),
              {'interface': interface, 'backlog': int(backlog)})

+def _parseTLS(factory, port, privateKey='server.pem', certKey=None,
+              sslmethod=None, interface='', backlog=50):
+    from gnutls.interfaces.twisted import X509Credentials
+    from gnutls.crypto import X509Certificate, X509PrivateKey
+
+    if certKey is None:
+        certKey = privateKey
+
+    cert = X509Certificate(open(certKey).read())
+    key = X509PrivateKey(open(privateKey).read())
+    cf = X509Credentials(cert, key)
+
+    return ((int(port), factory, cf),
+            {'interface': interface, 'backlog': int(backlog)})
+
  _funcs = {"tcp": _parseTCP,
            "unix": _parseUNIX,
-          "ssl": _parseSSL}
+          "ssl": _parseSSL,
+          "tls": _parseTLS}

  _OP, _STRING = range(2)
  def _tokenize(description):



Thanks for the excellent software!

Jason

[1] http://sagemath.org



From itamar at itamarst.org  Thu Oct  7 13:03:13 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 7 Oct 2010 15:03:13 -0400
Subject: [Twisted-Python] patch for TLS
In-Reply-To: <4CAE1742.1000300@creativetrax.com>
References: <4CAE1742.1000300@creativetrax.com>
Message-ID: <f88c91688ad1783ed066fa76f342f9c6.squirrel@webmail.zoteca.com>

> (cc to both twisted and sage-devel lists)
>
> Hi all,
>
> In the Sage project (http://sagemath.org), we apply a patch to the
> Twisted version we distribute.  I'd like to clean out our custom patches
> and push them upstream, if possible.  So I have a couple of questions
> (I'm not terribly familiar with Twisted):
>
> 1. Is the patch below generally useful?
>
> 2. Is there a better way to do this than to patch the file?

"ssl:443:sslmethod=TLSv1_METHOD" should do what you want, I think.




From gelonida at gmail.com  Thu Oct  7 13:48:41 2010
From: gelonida at gmail.com (Gelonida)
Date: Thu, 07 Oct 2010 21:48:41 +0200
Subject: [Twisted-Python] recommended starting point for http
	debugging/logging proxy.
Message-ID: <i8l86q$g27$1@dough.gmane.org>

Hi,


Can anybody recommend  a good starting point for a twisted http proxy,
or comment on the links that I'll mention lateron in this post?




I'd like to use a ddebugging it for playing/debugging/filtering



Initially I'd just like to log all requests.

lateron I'd like to save certain responses on the disk.



Please note:
Im familiar with python and http / html in general.

I'm not experienced with twisted, but thought, that this might be a good
example / excuseto learn a little.




I found following links and wondered what you could recommend:




http://defrang.com/python mentions a HTTP Debugging Proxy
---------------------------------------------------------



http://wiki.python.org/moin/Twisted-Examples has following example, but
I dont't know where to hook in:



I found one twisted example for a web proxy, but it was so simple, that
I don''t have any idea of where to hook in.

from twisted.web import proxy, http
from twisted.internet import reactor
from twisted.python import log
import sys
log.startLogging(sys.stdout)

class ProxyFactory(http.HTTPFactory):
    protocol = proxy.Proxy

reactor.listenTCP(8080, ProxyFactory())
reactor.run()

-------------------------------------------------------------


http://sujitpal.blogspot.com/2010/03/http-debug-proxy-with-twisted.html


seems also interesting






From glyph at twistedmatrix.com  Thu Oct  7 21:39:58 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 7 Oct 2010 23:39:58 -0400
Subject: [Twisted-Python] patch for TLS
In-Reply-To: <4CAE1742.1000300@creativetrax.com>
References: <4CAE1742.1000300@creativetrax.com>
Message-ID: <078A2F8A-ADCD-4C00-AA47-A1B11713F67F@twistedmatrix.com>


On Oct 7, 2010, at 2:53 PM, jason-sage at creativetrax.com wrote:

> (cc to both twisted and sage-devel lists)
> 
> Hi all,
> 
> In the Sage project (http://sagemath.org), we apply a patch to the 
> Twisted version we distribute.  I'd like to clean out our custom patches 
> and push them upstream, if possible.  So I have a couple of questions 
> (I'm not terribly familiar with Twisted):
> 
> 1. Is the patch below generally useful?

Not really.

It's not really clear what the intent of the patch is.  Your subject line implies that you don't quite understand the relationship between "SSL" and "TLS".  If you do, then you can disregard the following paragraph, but this may be useful to others following this thread even if you understand the distinction perfectly well already :).

SSL and TLS are different names for the same protocol, with subtly different implications.  "TLS" formally names a later version.  The fact that "OpenSSL" has "SSL" in its name and "GnuTLS" has "TLS" in the name is simply reflective of the fact that OpenSSL has been around for longer, and was created when "SSL" was still the name of the protocol.  See <http://www.ietf.org/rfc/rfc2246.txt>, section 3: "This document and the TLS protocol itself are based on the SSL 3.0 Protocol Specification as published by Netscape."  "TLS" is sometimes informally used to mean "start TLS after some plaintext communication" as opposed to "initiate TLS at the start of the connection", since "STARTTLS" is usually the name of the protocol command to initiate encryption over a previously-plaintext connection.  This is why Twisted has 'connectSSL' and 'listenSSL', but 'startTLS' method on a transport.

If all Sage wants is to use the later version of the protocol, the technique that Itamar suggested is the right way to go; just specify the 'method' argument in your strports description, and Twisted (via OpenSSL) will already do what you want.

Whereas if you actually want GnuTLS the library, rather than TLS the protocol...

> 2. Is there a better way to do this than to patch the file?

Yes.  As suggested on <http://twistedmatrix.com/trac/ticket/4473>, there should be an extension mechanism for registering new endpoint types with a string name, just as there is a mechanism for registering new reactors and new credential factories.  #4473 itself has been repurposed to be the endpoint API rather than the plugin mechanism, so I need to file a new ticket once #4473 is done for the separate extensibility bit.  You could contribute a fix to that new ticket, or a review for it, if you were so inclined :).

> 3. What do we need to do to incorporate it upstream in Twisted?

Follow the instructions on <http://twistedmatrix.com/trac/wiki/TwistedDevelopment>.

I can tell you right now that we're unlikely to support GnuTLS directly within Twisted (it's been discussed in the past and we didn't see a good reason to do it), but then, even if we were, the extension mechanism would be a probable prerequisite so that we could have a cleaner internal factoring of strports parsing mechanisms.  The current mechanism (even in #4473) is not really scalable.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101007/abf9fe44/attachment-0001.html>

From exarkun at twistedmatrix.com  Fri Oct  8 07:25:37 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 08 Oct 2010 13:25:37 -0000
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <4CAB8614.5060007@nasa.gov>
References: <4CAB8614.5060007@nasa.gov>
Message-ID: <20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>

On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov wrote:
>First, the "PB Copyable: Passing Complex Types" doc is
>*great* and the examples are excellent -- my compliments to
>all who contributed!
>
>My question is about the pb.Cacheable section
>(http://twistedmatrix.com/documents/current/core/howto/pb- 
>copyable.html#auto9)
>-- specifically the first sentence:  'Sometimes the object you
>want to send to the remote process is big and slow. "big" means
>it takes a lot of data (storage, network bandwidth, processing)
>to represent its state.  "slow" means that state doesn't change
>very frequently.'
>
>I would think that the product of its size and its rate of change
>is the applicable metric -- i.e.:  the bigger the object is *or*
>the faster it changes (not the slower), the more applicable
>Cacheable is, no?

That seems plausible.  I wonder if the rate comment is motivated by 
something else, like the chance of the remote cache being out of date 
when the remote side wants to use some of its data.  This would increase 
with the rate of change, but I don't know if it really matters.  I 
haven't ever actually used a Cacheable myself, as far as I can recall.

Jean-Paul



From exarkun at twistedmatrix.com  Fri Oct  8 07:28:32 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 08 Oct 2010 13:28:32 -0000
Subject: [Twisted-Python] recommended starting point for
	http	debugging/logging proxy.
In-Reply-To: <i8l86q$g27$1@dough.gmane.org>
References: <i8l86q$g27$1@dough.gmane.org>
Message-ID: <20101008132832.2022.10799910.divmod.xquotient.481@localhost.localdomain>

On 7 Oct, 07:48 pm, gelonida at gmail.com wrote:
>Hi,
>
>
>Can anybody recommend  a good starting point for a twisted http proxy,
>or comment on the links that I'll mention lateron in this post?

The source for twisted.web.proxy is pretty short, only a couple hundred 
lines.  If you want to use it but hook into parts of the 
request/response process, then taking a look at the implementation is 
probably a good idea.

To make sense of it, you probably want to read at least the client and 
server howtos on the Twisted site:

    http://twistedmatrix.com/documents/current/core/howto/servers.html
    http://twistedmatrix.com/documents/current/core/howto/clients.html
>I'd like to use a ddebugging it for playing/debugging/filtering
>
>Initially I'd just like to log all requests.

If you pass a logPath argument to HTTPFactory, it will log requests to 
that path.

Jean-Paul
>lateron I'd like to save certain responses on the disk.
>
>Please note:
>Im familiar with python and http / html in general.
>
>I'm not experienced with twisted, but thought, that this might be a 
>good
>example / excuseto learn a little.
>
>I found following links and wondered what you could recommend:
>
>http://defrang.com/python mentions a HTTP Debugging Proxy
>---------------------------------------------------------
>
>http://wiki.python.org/moin/Twisted-Examples has following example, but
>I dont't know where to hook in:
>
>I found one twisted example for a web proxy, but it was so simple, that
>I don''t have any idea of where to hook in.
>
>from twisted.web import proxy, http
>from twisted.internet import reactor
>from twisted.python import log
>import sys
>log.startLogging(sys.stdout)
>
>class ProxyFactory(http.HTTPFactory):
>    protocol = proxy.Proxy
>
>reactor.listenTCP(8080, ProxyFactory())
>reactor.run()
>
>-------------------------------------------------------------
>
>
>http://sujitpal.blogspot.com/2010/03/http-debug-proxy-with-twisted.html
>
>
>seems also interesting



From stephen.c.waterbury at nasa.gov  Fri Oct  8 08:59:05 2010
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Fri, 8 Oct 2010 10:59:05 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
References: <4CAB8614.5060007@nasa.gov>
	<20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
Message-ID: <4CAF31B9.9070304@nasa.gov>

On 10/08/2010 09:25 AM, exarkun at twistedmatrix.com wrote:
> On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov wrote:
>> First, the "PB Copyable: Passing Complex Types" doc is
>> *great* and the examples are excellent -- my compliments to
>> all who contributed!
>>
>> My question is about the pb.Cacheable section
>> (http://twistedmatrix.com/documents/current/core/howto/pb-
>> copyable.html#auto9)
>> -- specifically the first sentence:  'Sometimes the object you
>> want to send to the remote process is big and slow. "big" means
>> it takes a lot of data (storage, network bandwidth, processing)
>> to represent its state.  "slow" means that state doesn't change
>> very frequently.'
>>
>> I would think that the product of its size and its rate of change
>> is the applicable metric -- i.e.:  the bigger the object is *or*
>> the faster it changes (not the slower), the more applicable
>> Cacheable is, no?
>
> That seems plausible.  I wonder if the rate comment is motivated by
> something else, like the chance of the remote cache being out of date
> when the remote side wants to use some of its data.  This would increase
> with the rate of change, but I don't know if it really matters.  I
> haven't ever actually used a Cacheable myself, as far as I can recall.

Thanks, jp!  Fair enough, but that seems equally applicable to
Copyable -- a copy could as easily be stale as a cache, I'd think.
(Maybe more easily, if it takes longer to update.)

So you've just used Copyable, not Cacheable?
I wonder if anyone has used it ... maybe I'll be the first!  Ooooo.  :)

Cheers,
Steve




From lvh at laurensvh.be  Fri Oct  8 11:35:23 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 8 Oct 2010 19:35:23 +0200
Subject: [Twisted-Python] Conch for file transfer?
Message-ID: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>

Hi,


Is there any documentation about using Conch for file transfer anywhere?

I'm interested in doing a continuous deployment thing using it. That
means two parts:
1) the ability to submit changes: the hard part here is file transfer
of the binary diffs
2) the ability to control a subprocess: basically like supervisord but
not written with medusa
3) manual intervention would be nice, so manhole

I can't find any documentation or examples, but these classes do exist.

I've considered giving up and just using HTTPS instead for file
transfer and control. Good idea or not?


thanks in advance
lvh



From drew.smathers at gmail.com  Fri Oct  8 12:00:00 2010
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 8 Oct 2010 14:00:00 -0400
Subject: [Twisted-Python] Conch for file transfer?
In-Reply-To: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>
References: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>
Message-ID: <AANLkTik0E=VpRisgMcMVkeghnNuRcSuCKABdvS2yq1-a@mail.gmail.com>

On Fri, Oct 8, 2010 at 1:35 PM, Laurens Van Houtven <lvh at laurensvh.be> wrote:
> Hi,
>
>
> Is there any documentation about using Conch for file transfer anywhere?
>
> I'm interested in doing a continuous deployment thing using it. That
> means two parts:
> 1) the ability to submit changes: the hard part here is file transfer
> of the binary diffs
> 2) the ability to control a subprocess: basically like supervisord but
> not written with medusa
> 3) manual intervention would be nice, so manhole
>
> I can't find any documentation or examples, but these classes do exist.
>

Have you looked at
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/scripts/cftp.py#L129
as a starting point? It's a little sketchy in places and there's at
least one serious bug:

http://twistedmatrix.com/trac/ticket/3927

But it was nonetheless enough to help me write a component that
transfers large media assets to a cdn origin server.

-Drew



From glyph at twistedmatrix.com  Fri Oct  8 13:46:53 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 8 Oct 2010 15:46:53 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
References: <4CAB8614.5060007@nasa.gov>
	<20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
Message-ID: <5E8B7360-4FF6-4A6C-A40D-1B0F234E1536@twistedmatrix.com>


On Oct 8, 2010, at 9:25 AM, exarkun at twistedmatrix.com wrote:

> On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov wrote:
>> First, the "PB Copyable: Passing Complex Types" doc is
>> *great* and the examples are excellent -- my compliments to
>> all who contributed!
>> 
>> My question is about the pb.Cacheable section
>> (http://twistedmatrix.com/documents/current/core/howto/pb- 
>> copyable.html#auto9)
>> -- specifically the first sentence:  'Sometimes the object you
>> want to send to the remote process is big and slow. "big" means
>> it takes a lot of data (storage, network bandwidth, processing)
>> to represent its state.  "slow" means that state doesn't change
>> very frequently.'
>> 
>> I would think that the product of its size and its rate of change
>> is the applicable metric -- i.e.:  the bigger the object is *or*
>> the faster it changes (not the slower), the more applicable
>> Cacheable is, no?
> 
> That seems plausible.  I wonder if the rate comment is motivated by 
> something else, like the chance of the remote cache being out of date 
> when the remote side wants to use some of its data.  This would increase 
> with the rate of change, but I don't know if it really matters.  I 
> haven't ever actually used a Cacheable myself, as far as I can recall.

I think I probably wrote that paragraph, and it was not very well put.  Big objects which are "fast", i.e. change constantly, are perfectly suitable for Cacheables.

The point I believe I was trying to make there was that if a significant proportion of the object's data is changing quickly, Cacheable doesn't make much of a difference over just re-Copyable-ing the whole object, since the delta updates will be the same size as the whole object.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101008/791b61d0/attachment-0002.html>

From koder.chen.1984 at gmail.com  Sat Oct  9 03:16:08 2010
From: koder.chen.1984 at gmail.com (koder chen)
Date: Sat, 9 Oct 2010 17:16:08 +0800
Subject: [Twisted-Python] I am confused on transport.write and
	transport.writeSomeData
Message-ID: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>

It seems that, when use "self.transport.write" in the protocol implementation,
it will buffer the content for a long time before it actually send it
out, especially
when the size of content is big, is there a 'flush' like method that I
can do the
flush manually?

And when use 'self.transport.writeSomeData', if the size of content to
be sent is
large, it will not be able to send anything. What is the strategy to use it?



From exarkun at twistedmatrix.com  Sat Oct  9 06:07:18 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 09 Oct 2010 12:07:18 -0000
Subject: [Twisted-Python] I am confused on transport.write
	and	transport.writeSomeData
In-Reply-To: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>
References: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>
Message-ID: <20101009120718.2022.1358538274.divmod.xquotient.488@localhost.localdomain>

On 09:16 am, koder.chen.1984 at gmail.com wrote:
>It seems that, when use "self.transport.write" in the protocol 
>implementation,
>it will buffer the content for a long time before it actually send it
>out, especially
>when the size of content is big, is there a 'flush' like method that I
>can do the
>flush manually?

There's no more buffering than is necessary.  If your data isn't sent 
pretty quickly, then you're doing something wrong.  For example, perhaps 
you're calling transport.write from a non-reactor thread?  Or in a 
never-ending loop?
>And when use 'self.transport.writeSomeData', if the size of content to
>be sent is
>large, it will not be able to send anything. What is the strategy to 
>use it?

Don't ever call transport.writeSomeData.  It will do something 
arbitrarily wrong.

Jean-Paul



From waterbug at pangalactic.us  Sat Oct  9 09:53:39 2010
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Sat, 09 Oct 2010 11:53:39 -0400
Subject: [Twisted-Python] pb.Cacheable doc question
In-Reply-To: <5E8B7360-4FF6-4A6C-A40D-1B0F234E1536@twistedmatrix.com>
References: <4CAB8614.5060007@nasa.gov>	<20101008132537.2022.691960493.divmod.xquotient.475@localhost.localdomain>
	<5E8B7360-4FF6-4A6C-A40D-1B0F234E1536@twistedmatrix.com>
Message-ID: <4CB09003.50206@pangalactic.us>

On 10/08/2010 03:46 PM, Glyph Lefkowitz wrote:
>
> On Oct 8, 2010, at 9:25 AM, exarkun at twistedmatrix.com
> <mailto:exarkun at twistedmatrix.com> wrote:
>
>> On 5 Oct, 08:09 pm, stephen.c.waterbury at nasa.gov
>> <mailto:stephen.c.waterbury at nasa.gov> wrote:
>>> First, the "PB Copyable: Passing Complex Types" doc is
>>> *great* and the examples are excellent -- my compliments to
>>> all who contributed!
>>>
>>> My question is about the pb.Cacheable section
>>> (http://twistedmatrix.com/documents/current/core/howto/pb-
>>> copyable.html#auto9)
>>> -- specifically the first sentence: 'Sometimes the object you
>>> want to send to the remote process is big and slow. "big" means
>>> it takes a lot of data (storage, network bandwidth, processing)
>>> to represent its state. "slow" means that state doesn't change
>>> very frequently.'
>>>
>>> I would think that the product of its size and its rate of change
>>> is the applicable metric -- i.e.: the bigger the object is *or*
>>> the faster it changes (not the slower), the more applicable
>>> Cacheable is, no?
>>
>> That seems plausible. I wonder if the rate comment is motivated by
>> something else, like the chance of the remote cache being out of date
>> when the remote side wants to use some of its data. This would increase
>> with the rate of change, but I don't know if it really matters. I
>> haven't ever actually used a Cacheable myself, as far as I can recall.
>
> I think I probably wrote that paragraph, and it was not very well put.
> Big objects which are "fast", i.e. change constantly, are perfectly
> suitable for Cacheables.
>
> The point I believe I was trying to make there was that if /a
> significant proportion/ of the object's data is changing quickly,
> Cacheable doesn't make much of a difference over just re-Copyable-ing
> the whole object, since the delta updates will be the same size as the
> whole object.

Certainly true.  Again, the documentation and the examples are great,
anyway, so that part is not a big deal, I was just curious.  Thanks,
Glyph.

Cheers,
Steve



From lvh at laurensvh.be  Sat Oct  9 16:23:42 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 10 Oct 2010 00:23:42 +0200
Subject: [Twisted-Python] Conch for file transfer?
In-Reply-To: <AANLkTik0E=VpRisgMcMVkeghnNuRcSuCKABdvS2yq1-a@mail.gmail.com>
References: <AANLkTikSh-sHCf_ZP87Oo+QsM-3EzFLjZ1zt8xdeeqth@mail.gmail.com>
	<AANLkTik0E=VpRisgMcMVkeghnNuRcSuCKABdvS2yq1-a@mail.gmail.com>
Message-ID: <AANLkTin15eJJaUZ=QPGmV5EbyyzpU-VqnS4cbG7mhy0w@mail.gmail.com>

Whoops, I had already replied to this yesterday but apparently to the
wrong list.

That's a very helpful thing, but it appears to be about writing a
client for file transfer. The hard part (which I, one day later of
source trawling, still can't figure out how to do), is a *server*
that:

1) accepts incoming files
2) runs commands (preferably custom ones and not arbitrary shell ones)
3) can be manholed into for manual stuff

But I'm beginning to think I'm better off doing (1) and (2) with twisted.web.


thanks for your reply,
Laurens



From exarkun at twistedmatrix.com  Sat Oct  9 22:05:31 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 10 Oct 2010 04:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1286683531.06.1540838937@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101010/941b4173/attachment-0001.html>

From koder.chen.1984 at gmail.com  Mon Oct 11 08:58:22 2010
From: koder.chen.1984 at gmail.com (koder chen)
Date: Mon, 11 Oct 2010 22:58:22 +0800
Subject: [Twisted-Python] I am confused on transport.write and
	transport.writeSomeData
In-Reply-To: <20101009120718.2022.1358538274.divmod.xquotient.488@localhost.localdomain>
References: <AANLkTi=A5NbL5zebvpVZTD=gVJJhiS+0++87-W9GgnAn@mail.gmail.com>
	<20101009120718.2022.1358538274.divmod.xquotient.488@localhost.localdomain>
Message-ID: <AANLkTimfq=71Uf4ecTKUOobe=eakwOr2T7h6UZ6MonOY@mail.gmail.com>

It works! In the original codes, I use 'write' directly in another
thread instead
of the reactor thread, it seems that this caused the 'slow' problem. Now, I
have changed to use reactor.callFromThread, and it works fine till now.

thanks! :-)

On Sat, Oct 9, 2010 at 8:07 PM,  <exarkun at twistedmatrix.com> wrote:
> On 09:16 am, koder.chen.1984 at gmail.com wrote:
>>It seems that, when use "self.transport.write" in the protocol
>>implementation,
>>it will buffer the content for a long time before it actually send it
>>out, especially
>>when the size of content is big, is there a 'flush' like method that I
>>can do the
>>flush manually?
>
> There's no more buffering than is necessary.  If your data isn't sent
> pretty quickly, then you're doing something wrong.  For example, perhaps
> you're calling transport.write from a non-reactor thread?  Or in a
> never-ending loop?
>>And when use 'self.transport.writeSomeData', if the size of content to
>>be sent is
>>large, it will not be able to send anything. What is the strategy to
>>use it?
>
> Don't ever call transport.writeSomeData.  It will do something
> arbitrarily wrong.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From fenimore at gmail.com  Tue Oct 12 11:14:20 2010
From: fenimore at gmail.com (CARSON)
Date: Tue, 12 Oct 2010 11:14:20 -0600
Subject: [Twisted-Python] Missing self.wakeUp() in epoll reactor's callLater
Message-ID: <AANLkTimh_J1pK2dRMqMubLzgZynAP6_F2oZEO5KdgAGK@mail.gmail.com>

I noticed that callLater in the epollReactor does not actually wake up
the reactor; the code for the threaded select reactor, however, does
do this via a call to self.wakeUp.  It seems like epoll reactor should
be patched so that call later ends with self.wakeUp - does this seem
correct?



From exarkun at twistedmatrix.com  Tue Oct 12 11:23:33 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 12 Oct 2010 17:23:33 -0000
Subject: [Twisted-Python] Missing self.wakeUp() in epoll
	reactor's	callLater
In-Reply-To: <AANLkTimh_J1pK2dRMqMubLzgZynAP6_F2oZEO5KdgAGK@mail.gmail.com>
References: <AANLkTimh_J1pK2dRMqMubLzgZynAP6_F2oZEO5KdgAGK@mail.gmail.com>
Message-ID: <20101012172333.2022.1511008212.divmod.xquotient.493@localhost.localdomain>

On 05:14 pm, fenimore at gmail.com wrote:
>I noticed that callLater in the epollReactor does not actually wake up
>the reactor; the code for the threaded select reactor, however, does
>do this via a call to self.wakeUp.  It seems like epoll reactor should
>be patched so that call later ends with self.wakeUp - does this seem
>correct?

Nope.  wakeUp is only for waking up the reactor from another thread. 
callLater is not allowed to be called from another thread.

Lots of weird threaded stuff is going on in the threadedselect code 
which means extra wakeUp calls are necessary at various places, but none 
of the other reactors need it.

Jean-Paul



From erik at letterror.com  Wed Oct 13 08:55:45 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 16:55:45 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CAB8614.5060007@nasa.gov>
References: <4CAB8614.5060007@nasa.gov>
Message-ID: <AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>

Hi,

I'm running into crashes with deamonize() from _twistd_unix.py on OSX  
10.6 "snow leopard".

Crash report contains the ominous flag:

USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER

This flag shows up in some issues reported in other python projects on  
OSX. Apparently 10.5 was more forgiving about this but 10.6 aborts the  
process.

- Has this been an issue for twisted users on OSX 10.6?

- Best practices for addressing it?



The code calls fork(), but no exec():

def daemonize():

     # See http://www.erlenstar.demon.co.uk/unix/faq_toc.html#TOC16

     if os.fork():   # launch child and...

         os._exit(0) # kill off parent

     os.setsid()

     if os.fork():   # launch child and...

         os._exit(0) # kill off parent again.

     null = os.open('/dev/null', os.O_RDWR)

     for i in range(3):

         try:

             os.dup2(null, i)

         except OSError, e:

             if e.errno != errno.EBADF:

                 raise

     os.close(null)



Thanks,

Erik van Blokland



From p.mayers at imperial.ac.uk  Wed Oct 13 09:40:39 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 16:40:39 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
Message-ID: <4CB5D2F7.6050704@imperial.ac.uk>

On 13/10/10 15:55, Erik van Blokland wrote:
>
> The code calls fork(), but no exec():

fork() with no exec() is legal Unix.

Various googling led me to:

http://trac.adium.im/ticket/13976#comment:28

"""The problem is that OSX since version 10.6 (Snow Leopard) does NOT 
allow processes launched via Dock (not via exec) to use fork() function, 
which is one used by Gadu-Gadu resolver. And stuff that crashes is NOT 
main Adium process, but resolver GG process, that is killed by OS 
itself. """

If that's the case, I don't think twistd will work in that situation. 
twistd expects to be able to fork() (unless you give the "-n" argument 
to keep it in the foreground)



From p.mayers at imperial.ac.uk  Wed Oct 13 09:52:39 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 16:52:39 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D2F7.6050704@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk>
Message-ID: <4CB5D5C7.7050702@imperial.ac.uk>

On 13/10/10 16:40, Phil Mayers wrote:
> On 13/10/10 15:55, Erik van Blokland wrote:
>>
>> The code calls fork(), but no exec():
>
> fork() with no exec() is legal Unix.
>
> Various googling led me to:
>
> http://trac.adium.im/ticket/13976#comment:28
>
> """The problem is that OSX since version 10.6 (Snow Leopard) does NOT
> allow processes launched via Dock (not via exec) to use fork() function,
> which is one used by Gadu-Gadu resolver. And stuff that crashes is NOT
> main Adium process, but resolver GG process, that is killed by OS
> itself. """
>
> If that's the case, I don't think twistd will work in that situation.
> twistd expects to be able to fork() (unless you give the "-n" argument
> to keep it in the foreground)

Other info indicates this is Apple trying to be clever and "protect" 
applications from some signal handling issues surrounding fork() with 
libraries which aren't safe in that situation; presumably these are 
MacOS-specific libraries?

If this really is true, then MacOS X is no longer posix-compliant in 
those circumstances, and Twisted is going to need some work :o(

Can you share more details about the application; the context in which 
it is started, and which system libraries it's likely to load?



From p.mayers at imperial.ac.uk  Wed Oct 13 09:55:43 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 16:55:43 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D5C7.7050702@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
Message-ID: <4CB5D67F.4010006@imperial.ac.uk>

On 13/10/10 16:52, Phil Mayers wrote:
>
> If this really is true, then MacOS X is no longer posix-compliant in
> those circumstances, and Twisted is going to need some work :o(
>
> Can you share more details about the application; the context in which
> it is started, and which system libraries it's likely to load?

Ah; apparently:

http://developer.apple.com/library/ios/#documentation/cocoa/conceptual/Multithreading/AboutThreads/AboutThreads.html

"""using the fork function [...] Applications that depend on the Core 
Foundation, Cocoa, or Core Data frameworks (either explicitly or 
implicitly) must make a subsequent call to an exec function or those 
frameworks may behave improperly."""

Bah.



From p.mayers at imperial.ac.uk  Wed Oct 13 10:01:20 2010
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 13 Oct 2010 17:01:20 +0100
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D5C7.7050702@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
Message-ID: <4CB5D7D0.30301@imperial.ac.uk>

On 13/10/10 16:52, Phil Mayers wrote:
>
> If this really is true, then MacOS X is no longer posix-compliant in
> those circumstances, and Twisted is going to need some work :o(

One final note (sorry for the fragmentary posts!) - it seems the only 
places Twisted calls fork() are in BaseProcess (just before an exec() so 
that's fine), in a couple of test cases, and in the twistd daemonize 
function.

I think you'll just have to add the "-n" argument, or forego twistd.

HTH



From erik at letterror.com  Wed Oct 13 10:07:32 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 18:07:32 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D67F.4010006@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<4CB5D67F.4010006@imperial.ac.uk>
Message-ID: <4C25D575-B06A-4B88-A36C-B498921756A4@letterror.com>


On Oct 13, 2010, at 5:55 PM, Phil Mayers wrote:

> Ah; apparently:
> 
> http://developer.apple.com/library/ios/#documentation/cocoa/conceptual/Multithreading/AboutThreads/AboutThreads.html
> 
> """using the fork function [...] Applications that depend on the Core 
> Foundation, Cocoa, or Core Data frameworks (either explicitly or 
> implicitly) must make a subsequent call to an exec function or those 
> frameworks may behave improperly."""
> 
> Bah.

Indeed. I presume this is not easily compatible with the way daemonize works right now?

Erik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101013/2d094453/attachment-0001.html>

From erik at letterror.com  Wed Oct 13 10:05:15 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 18:05:15 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <4CB5D5C7.7050702@imperial.ac.uk>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
Message-ID: <67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>


On Oct 13, 2010, at 5:52 PM, Phil Mayers wrote:

> Other info indicates this is Apple trying to be clever and "protect" 
> applications from some signal handling issues surrounding fork() with 
> libraries which aren't safe in that situation; presumably these are 
> MacOS-specific libraries?
> 
> If this really is true, then MacOS X is no longer posix-compliant in 
> those circumstances, and Twisted is going to need some work :o(
> 
> Can you share more details about the application; the context in which 
> it is started, and which system libraries it's likely to load?

Here's a compact version. The script uses OSX' Quartz to create and manipulate images. Twisted is used to wrap it as a webserver, images are served. More pointers on how to start and use it in the script itself.

The real application is more complex, it renders images for sites like this:
http://lettersetter.net/

Zip contains 1 test image, 1 script and a sample result image.
Running in no-daemon mode (the -n option) prevents the crash, but causes other issues.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted_quartz_test.zip
Type: application/zip
Size: 82474 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101013/dbe578f2/attachment-0002.zip>
-------------- next part --------------


Thanks!
Erik

From foom at fuhm.net  Wed Oct 13 11:20:20 2010
From: foom at fuhm.net (James Y Knight)
Date: Wed, 13 Oct 2010 13:20:20 -0400
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
Message-ID: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>


On Oct 13, 2010, at 12:05 PM, Erik van Blokland wrote:

> 
> On Oct 13, 2010, at 5:52 PM, Phil Mayers wrote:
> 
>> Other info indicates this is Apple trying to be clever and "protect" 
>> applications from some signal handling issues surrounding fork() with 
>> libraries which aren't safe in that situation; presumably these are 
>> MacOS-specific libraries?
>> 
>> If this really is true, then MacOS X is no longer posix-compliant in 
>> those circumstances, and Twisted is going to need some work :o(
>> 
>> Can you share more details about the application; the context in which 
>> it is started, and which system libraries it's likely to load?
> 
> Here's a compact version. The script uses OSX' Quartz to create and manipulate images. Twisted is used to wrap it as a webserver, images are served. More pointers on how to start and use it in the script itself.

You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]

Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted.quartz.test.py
Type: text/x-python-script
Size: 5042 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101013/452e4763/attachment-0002.bin>

From erik at letterror.com  Wed Oct 13 12:11:56 2010
From: erik at letterror.com (Erik van Blokland)
Date: Wed, 13 Oct 2010 20:11:56 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
Message-ID: <B8A91A6B-5064-4701-8B8C-67EE69578E20@letterror.com>

James,

On Oct 13, 2010, at 7:20 PM, James Y Knight wrote:

> You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]
> 
> Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

Wow! That is incredible. THANKS!

Erik


From glyph at twistedmatrix.com  Wed Oct 13 14:46:35 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 13 Oct 2010 16:46:35 -0400
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
Message-ID: <15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>


On Oct 13, 2010, at 1:20 PM, James Y Knight wrote:

>> Here's a compact version. The script uses OSX' Quartz to create and manipulate images. Twisted is used to wrap it as a webserver, images are served. More pointers on how to start and use it in the script itself.
> 
> You need to avoid using or importing any OSX APIs until after the daemonization has occurred. Unfortunately, twisted executes the entire script file before daemonizing. [that's unfortunate for other reasons besides this, too]

To the extent that this is an intentional decision (it's at least half accidents of implementation) it's an attempt to allow twistd to actually display an error on the console if there is a serious error starting up, i.e. your plugin is not syntactically valid Python and it's just going to exit.

While I remember agreeing that it's unfortunate, I can't actually recall any issues with executing the script before forking.  Do we have tickets for them?  Can you describe a couple?

If we are going to change this behavior, we should make twistd do something more correct, and optionally allow it to report startup errors to the console after it's forked, even if those errors don't necessarily crash it during startup.  This isn't rocket science, inheriting file descriptors and delaying exit are all pretty easy.

> Here's a corrected version of your script which works properly. It defers importing Quartz until the reactor is running, by moving it into a function called by reactor.callWhenRunning().

Thanks for this, I'm sure that other folks will find it useful.  I'm a bit surprised it's not more of a FAQ!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101013/b06957fc/attachment.html>

From exarkun at twistedmatrix.com  Wed Oct 13 15:17:35 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 13 Oct 2010 21:17:35 -0000
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX
	/	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
References: <4CAB8614.5060007@nasa.gov>
	<AE0DE763-D72F-4503-AD1E-FD54097AEE20@letterror.com>
	<4CB5D2F7.6050704@imperial.ac.uk> <4CB5D5C7.7050702@imperial.ac.uk>
	<67C8E724-9A73-4AFB-92B3-26C506AB1153@letterror.com>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
Message-ID: <20101013211735.2414.1916236292.divmod.xquotient.72@localhost.localdomain>

On 08:46 pm, glyph at twistedmatrix.com wrote:
>
>On Oct 13, 2010, at 1:20 PM, James Y Knight wrote:
>>>Here's a compact version. The script uses OSX' Quartz to create and 
>>>manipulate images. Twisted is used to wrap it as a webserver, images 
>>>are served. More pointers on how to start and use it in the script 
>>>itself.
>>
>>You need to avoid using or importing any OSX APIs until after the 
>>daemonization has occurred. Unfortunately, twisted executes the entire 
>>script file before daemonizing. [that's unfortunate for other reasons 
>>besides this, too]
>
>If we are going to change this behavior, we should make twistd do 
>something more correct, and optionally allow it to report startup 
>errors to the console after it's forked, even if those errors don't 
>necessarily crash it during startup.  This isn't rocket science, 
>inheriting file descriptors and delaying exit are all pretty easy.

http://tm.tl/823

Jean-Paul



From nathan.stocks at gmail.com  Wed Oct 13 16:08:03 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 13 Oct 2010 16:08:03 -0600
Subject: [Twisted-Python] State of "insults"?
Message-ID: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>

JP, what's the current state of the "insults" module you wrote?  I'm
looking to bolt an ncurses-like client interface onto one of my
projects, and I didn't want to reinvent the wheel if it had already
been done, so some diligent searching turned up the "insults" module
you wrote.

There's almost no examples, and the API documentation seems to consist
of only method names (which are all very reasonably named), but not
much in the way of actual descriptions.

Is this a stable, portable module that I can expect to work on OS X
and Linux, or is it a buggy work-in-progress (or something in
between)?  Searching the list archives turned up almost no discussion
about it since 2007.

The biggest benefits I see with ncurses are that it's got tons of
documentation and I know it will work wherever Python works.
The benefits I see with insults is that it is designed to work with
Twisted and seems to have a decent selection of widgets, so I wouldn't
have to implement too many basic widgets.

~ Nathan



From exarkun at twistedmatrix.com  Thu Oct 14 09:51:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 14 Oct 2010 15:51:30 -0000
Subject: [Twisted-Python] State of "insults"?
In-Reply-To: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>
References: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>
Message-ID: <20101014155130.2414.1979301807.divmod.xquotient.475@localhost.localdomain>

On 13 Oct, 10:08 pm, nathan.stocks at gmail.com wrote:
>JP, what's the current state of the "insults" module you wrote?  I'm
>looking to bolt an ncurses-like client interface onto one of my
>projects, and I didn't want to reinvent the wheel if it had already
>been done, so some diligent searching turned up the "insults" module
>you wrote.
>
>There's almost no examples, and the API documentation seems to consist
>of only method names (which are all very reasonably named), but not
>much in the way of actual descriptions.

Did you find 
<http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/>?

I'll agree that there's little documentation, but I think the handful of 
examples is pretty good, as examples go.
>Is this a stable, portable module that I can expect to work on OS X
>and Linux, or is it a buggy work-in-progress (or something in
>between)?  Searching the list archives turned up almost no discussion
>about it since 2007.

If you're wondering about the API stability (ie, the backwards 
compatibility promises), they're the same as for the rest of Twisted. 
Things won't change out from under you.

As far as working reliably on multiple platforms, I think it does 
*pretty* well, but I know it has some bugs to be worked out, and the 
sheer number of terminal emulators out there (with their unique set of 
bugs) means that there are probably a lot of configurations in which it 
is sub-par.  I'd consider most such cases bugs to be fixed in insults, 
but someone still needs to fix them for that to help you. ;)
>The biggest benefits I see with ncurses are that it's got tons of
>documentation and I know it will work wherever Python works.
>The benefits I see with insults is that it is designed to work with
>Twisted and seems to have a decent selection of widgets, so I wouldn't
>have to implement too many basic widgets.

I have a couple back-burner projects in which I'm using insults, and I 
don't see changing to anything else.  However, if you'd like another 
option to consider, there's Urwid (and it supports Twisted, too).

Jean-Paul



From maarten at treewalker.org  Thu Oct 14 10:31:39 2010
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Thu, 14 Oct 2010 18:31:39 +0200
Subject: [Twisted-Python] _twistd_unix.py / daemonize() / OSX /
	USING_FORK_WITHOUT_EXEC_IS_NOT_SUPPORTED_BY_FILE_MANAGER
In-Reply-To: <15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
References: <4CAB8614.5060007@nasa.gov>
	<361A70CD-B61F-42C9-8750-6556D437BD52@fuhm.net>
	<15DC7BC7-2EC1-4452-8DBA-78F6FF3FB366@twistedmatrix.com>
Message-ID: <201010141831.39280.maarten@treewalker.org>

On Wednesday 13 October 2010, Glyph Lefkowitz wrote:
> To the extent that this is an intentional decision (it's at least half
> accidents of implementation) it's an attempt to allow twistd to actually
> display an error on the console if there is a serious error starting up,
> i.e. your plugin is not syntactically valid Python and it's just going
> to exit.
> 
> While I remember agreeing that it's unfortunate, I can't actually recall
> any issues with executing the script before forking.  Do we have tickets
> for them?  Can you describe a couple?

A long time ago I did run into trouble with the uid/gid being applied by 
twistd after the script is executed: log files would be owned by root 
instead of by the specified uid/gid.

This is not what you asked, but I guess it's also a consequence of the 
"execute the script first" behavior of twistd.

> If we are going to change this behavior, we should make twistd do
> something more correct, and optionally allow it to report startup errors
> to the console after it's forked, even if those errors don't necessarily
> crash it during startup.  This isn't rocket science, inheriting file
> descriptors and delaying exit are all pretty easy.

When using twistd from a typical Linux init script, forking first would lead 
to the script reporting the startup was a success and after that the error 
message would be printed.

Bye,
		Maarten



From nathan.stocks at gmail.com  Thu Oct 14 16:51:10 2010
From: nathan.stocks at gmail.com (Nathan)
Date: Thu, 14 Oct 2010 16:51:10 -0600
Subject: [Twisted-Python] State of "insults"?
In-Reply-To: <20101014155130.2414.1979301807.divmod.xquotient.475@localhost.localdomain>
References: <AANLkTi=HJNH4efL+9wo5ypg+ea6Xy9X58cuLxcxxTCiv@mail.gmail.com>
	<20101014155130.2414.1979301807.divmod.xquotient.475@localhost.localdomain>
Message-ID: <AANLkTi=PL8rdvJVzJK4dtPZZGERPmugW6-6A0nbptq98@mail.gmail.com>

On Thu, Oct 14, 2010 at 9:51 AM,  <exarkun at twistedmatrix.com> wrote:
> On 13 Oct, 10:08 pm, nathan.stocks at gmail.com wrote:
>>JP, what's the current state of the "insults" module you wrote?  I'm
>>looking to bolt an ncurses-like client interface onto one of my
>>projects, and I didn't want to reinvent the wheel if it had already
>>been done, so some diligent searching turned up the "insults" module
>>you wrote.
>>
>>There's almost no examples, and the API documentation seems to consist
>>of only method names (which are all very reasonably named), but not
>>much in the way of actual descriptions.
>
> Did you find
> <http://twistedmatrix.com/trac/browser/trunk/doc/conch/examples/>?
>
> I'll agree that there's little documentation, but I think the handful of
> examples is pretty good, as examples go.
>>Is this a stable, portable module that I can expect to work on OS X
>>and Linux, or is it a buggy work-in-progress (or something in
>>between)?  Searching the list archives turned up almost no discussion
>>about it since 2007.
>
> If you're wondering about the API stability (ie, the backwards
> compatibility promises), they're the same as for the rest of Twisted.
> Things won't change out from under you.
>
> As far as working reliably on multiple platforms, I think it does
> *pretty* well, but I know it has some bugs to be worked out, and the
> sheer number of terminal emulators out there (with their unique set of
> bugs) means that there are probably a lot of configurations in which it
> is sub-par.  I'd consider most such cases bugs to be fixed in insults,
> but someone still needs to fix them for that to help you. ;)
>>The biggest benefits I see with ncurses are that it's got tons of
>>documentation and I know it will work wherever Python works.
>>The benefits I see with insults is that it is designed to work with
>>Twisted and seems to have a decent selection of widgets, so I wouldn't
>>have to implement too many basic widgets.
>
> I have a couple back-burner projects in which I'm using insults, and I
> don't see changing to anything else.  However, if you'd like another
> option to consider, there's Urwid (and it supports Twisted, too).

Okay, so it sounds like I need to sit down and do a side-by-side
comparison between curses, insults, and urwid before I can make an
intelligent decision.

Why do terminal frameworks have such wacky names?  Sheesh...

~ Nathan



From jimgardener at gmail.com  Thu Oct 14 21:12:17 2010
From: jimgardener at gmail.com (jim gardener)
Date: Fri, 15 Oct 2010 08:42:17 +0530
Subject: [Twisted-Python] problem using imap mail client
Message-ID: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>

hi,
I installed twisted on ubuntu lucid .When I checked the version ,it shows
Version('twisted', 10, 0, 0)
I tried to run imap4client.py giving it hostname='imap.gmail.com' and
entered my username and password..When I run the program I am getting
"twisted.internet.error.TCPTimedOutError: TCP connection timed out" error.

I was able to login and read my gmail using python imaplib though..I am
wondering why it doesn't work with twisted

thanks
jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101015/d025afa1/attachment-0001.html>

From itamar at itamarst.org  Thu Oct 14 21:23:39 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 14 Oct 2010 23:23:39 -0400
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
Message-ID: <1287113019.1552.1.camel@blake>

On Fri, 2010-10-15 at 08:42 +0530, jim gardener wrote:
> hi,
> I installed twisted on ubuntu lucid .When I checked the version ,it
> shows Version('twisted', 10, 0, 0)
> I tried to run imap4client.py giving it hostname='imap.gmail.com' and
> entered my username and password..When I run the program I am getting
> "twisted.internet.error.TCPTimedOutError: TCP connection timed out"
> error.
> 
> I was able to login and read my gmail using python imaplib though..I
> am wondering why it doesn't work with twisted

Can you try Twisted 10.1? There were some bug fixes in the IMAP code
that may solve the problem.




From jimgardener at gmail.com  Thu Oct 14 21:27:19 2010
From: jimgardener at gmail.com (jim gardener)
Date: Fri, 15 Oct 2010 08:57:19 +0530
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <1287113019.1552.1.camel@blake>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
Message-ID: <AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>

ubuntu packs version 10.0.  Will try to build from source then
thanks for the reply
jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101015/4701c235/attachment.html>

From jimgardener at gmail.com  Thu Oct 14 22:36:21 2010
From: jimgardener at gmail.com (jim gardener)
Date: Fri, 15 Oct 2010 10:06:21 +0530
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
Message-ID: <AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>

I installed version 10.1 frpm the ppa ..Now ,it justs waits after taking the
hostname,user/password..

Is there a way to generate a local copy of the documentation?..so I can
browse while offline?
thanks
jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101015/c175e543/attachment.html>

From jaroslaw.fedewicz at gmail.com  Fri Oct 15 03:55:12 2010
From: jaroslaw.fedewicz at gmail.com (Yaroslav Fedevych)
Date: Fri, 15 Oct 2010 12:55:12 +0300
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
	<AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
Message-ID: <AANLkTikOE75Vsb=v9Y4_61nwDrdwyd-ZGRvQjW0N6hDB@mail.gmail.com>

On Fri, Oct 15, 2010 at 7:36 AM, jim gardener <jimgardener at gmail.com> wrote:
>
> I installed version 10.1 frpm the ppa ..Now ,it justs waits after taking the
> hostname,user/password..
>
> Is there a way to generate a local copy of the documentation?..so I can
> browse while offline?
> thanks
> jim
>

Install pydoctor (it googles up well), then run

pydoctor --output-html twisted

in the directory your Twisted source resides. Then, have apidocs/ to
read and enjoy.

pydoctor --help may tell you about some additional knobs you will want
to tweak to bring the docs to perfection.

-- 
Engineer : How do I do it?
Economist : How much will it cost?
Twisted Developer: But does it block?



From exarkun at twistedmatrix.com  Fri Oct 15 08:53:16 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 15 Oct 2010 14:53:16 -0000
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
	<AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
Message-ID: <20101015145316.2414.1300275620.divmod.xquotient.480@localhost.localdomain>

On 04:36 am, jimgardener at gmail.com wrote:
>I installed version 10.1 frpm the ppa ..Now ,it justs waits after 
>taking the
>hostname,user/password..

It doesn't sound like an IMAP4 problem in particular.  It sounds like 
you have some connectivity issues.  Debug the connection not being set 
up, don't worry about the IMAP4 particulars until that's working.
>Is there a way to generate a local copy of the documentation?..so I can
>browse while offline?

You can use pydoctor as was suggested, or you can download a development 
snapshot (which won't exactly match up with 10.1, but it'll be fairly 
close) from <http://buildbot.twistedmatrix.com/builds/>.

Jean-Paul



From lists at collab.nl  Fri Oct 15 12:09:53 2010
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Fri, 15 Oct 2010 20:09:53 +0200
Subject: [Twisted-Python] problem using imap mail client
In-Reply-To: <AANLkTikOE75Vsb=v9Y4_61nwDrdwyd-ZGRvQjW0N6hDB@mail.gmail.com>
References: <AANLkTimeXFweUdSUnuvMQo5d-H7dKMwxZ5P0Vid7wJLN@mail.gmail.com>
	<1287113019.1552.1.camel@blake>
	<AANLkTinMVpkNqM5JcGTaGcz6n=4m1=WU65US1knTuZT-@mail.gmail.com>
	<AANLkTimsSRicaqV_rgVabjuhK7b5ndW_LcEDjk_3kY38@mail.gmail.com>
	<AANLkTikOE75Vsb=v9Y4_61nwDrdwyd-ZGRvQjW0N6hDB@mail.gmail.com>
Message-ID: <747F5168-0176-4512-9394-592F6C8E2A0A@collab.nl>


On 15 Oct 2010, at 11:55, Yaroslav Fedevych wrote:

> Engineer : How do I do it?
> Economist : How much will it cost?
> Twisted Developer: But does it block?

:)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20101015/9b37c8c8/attachment.sig>

From marcus at internetnowasp.net  Sat Oct 16 08:02:22 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Sat, 16 Oct 2010 22:02:22 +0800
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
Message-ID: <4CB9B06E.2080405@internetnowasp.net>

Hi,

This might seems like a trivial question or at least i would have 
thought so but it has eluded me for some time on how to do this elegantly.
In twisted mail, since the only part where we instantiate an instance of 
account  is under :

   def requestAvatar(self, avatarId, mind, *interfaces):
        account = xxinterface() # instantiate our account

How do i find out if a particular connection is already dead in the 
given "account" class? For smtp for example,
"mind" is None and avatarId is just the id of the login user. Even if 
this is pop3 or imap, the same problem arise
how do i know if the connection of the particular "Server" instance is 
dead.

Thanks for looking.

Marcus.







From ste at demaledetti.net  Sat Oct 16 09:22:56 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sat, 16 Oct 2010 17:22:56 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CB9C350.8030800@demaledetti.net>

Hi,

I have a similar problem as described in this old mail [1] except
that I am not using threads at all.

Basically my app is a server that accepts connections from a client
(connection A), when A is established it opens connections B and C
to another server and forwards data from A to B and from C back to A.

Here is how data is forwarded:

def forward(_from, to):
    _from.dataReceived = to.transport.write
    to.transport.registerProducer(_from.transport, True)

def loseConnection(proto, onlost=lambda *args: None):
    proto.connectionLost = onlost
    proto.transport.unregisterProducer()
    proto.transport.loseConnection()

as soon as connectionMade has been called on connection A, B and C:

forward(A_protocol, B_protocol)
forward(C_protocol, A_protocol)

as soon as it decides its job is done and wants to tear down all
connections:

loseConnection(B_protocol)
loseConnection(C_protocol, lambda *a: loseConnection(A_protocol))


>From the debug logs in my code I am sure that the loseConnection
function is always called with the A_protocol as argument, yet
sometimes and totally unpredictably as far as I can tell
connectionLost is not called on some A_protocol instances and
corresponding A connections get stuck in CLOSE_WAIT state.

Another hint is that netstat shows 1 byte in the Recv-Q for those
connections (and 0 in the Send-Q).

>From another mail [2] in that old thread I got this snippet

"""
Your issue with CLOSE_WAIT sockets could be due to registering
producers which have no further data to produce.
"""

This sounds like it could be my case, even if as you can see I am
always unregistering producers from transports before I call
loseConnection on them.

Does this sound familiar in any way? Any suggestions off top of head
while I try to come up with a self-contained sample which is
reliably reproducing the issue I'm seeing happening only "sometimes
and quite seldom[TM]"?

Thanks, ciao
ste


[1]
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017853.html
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017855.html




From ste at demaledetti.net  Sat Oct 16 09:34:52 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sat, 16 Oct 2010 17:34:52 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CB9C61C.7020902@demaledetti.net>

Apologies for the double posting, I am resending this because the
original message appears to have triggered some mbox format handling
bug somewhere and it appears truncated at the first content line
starting with "From" here:

http://twistedmatrix.com/pipermail/twisted-python/2010-October/023029.html

sorry about this
ste

-------- Messaggio originale --------
Oggetto: connectionLost never reached after calling loseConnection:
stuck in CLOSE_WAIT forever
Data: Sat, 16 Oct 2010 17:22:56 +0200
Mittente: Stefano Debenedetti <ste at demaledetti.net>
A: twisted-python at twistedmatrix.com

Hi,

I have a similar problem as described in this old mail [1] except
that I am not using threads at all.

Basically my app is a server that accepts connections from a client
(connection A), when A is established it opens connections B and C
to another server and forwards data from A to B and from C back to A.

Here is how data is forwarded:

def forward(_from, to):
    _from.dataReceived = to.transport.write
    to.transport.registerProducer(_from.transport, True)

def loseConnection(proto, onlost=lambda *args: None):
    proto.connectionLost = onlost
    proto.transport.unregisterProducer()
    proto.transport.loseConnection()

as soon as connectionMade has been called on connection A, B and C:

forward(A_protocol, B_protocol)
forward(C_protocol, A_protocol)

as soon as it decides its job is done and wants to tear down all
connections:

loseConnection(B_protocol)
loseConnection(C_protocol, lambda *a: loseConnection(A_protocol))


The debug logs in my code assure me that the loseConnection
function is always called with the A_protocol as argument, yet
sometimes and totally unpredictably as far as I can tell
connectionLost is not called on some A_protocol instances and
corresponding A connections get stuck in CLOSE_WAIT state.

Another hint is that netstat shows 1 byte in the Recv-Q for those
connections (and 0 in the Send-Q).

In another mail [2] in that old thread I got this snippet

"""
Your issue with CLOSE_WAIT sockets could be due to registering
producers which have no further data to produce.
"""

This sounds like it could be my case, even if as you can see I am
always unregistering producers from transports before I call
loseConnection on them.

Does this sound familiar in any way? Any suggestions off top of head
while I try to come up with a self-contained sample which is
reliably reproducing the issue I'm seeing happening only "sometimes
and quite seldom[TM]"?

Thanks, ciao
ste


[1]
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017853.html
[2]
http://twistedmatrix.com/pipermail/twisted-python/2008-June/017855.html





From disappearedng at gmail.com  Sat Oct 16 11:54:30 2010
From: disappearedng at gmail.com (disappearedng)
Date: Sat, 16 Oct 2010 13:54:30 -0400
Subject: [Twisted-Python] Twisted Reverse Proxy
Message-ID: <AANLkTinBgu_g-BUzOj7WGhR4prvOQfVpPPxa9Qqp=Vg7@mail.gmail.com>

Hello everyone, I am deploying twisted as a web server for my site. I am
looking into possibilities of reverse proxying.

I have the following code right now hooked up to my reactor for django. I am
using comet, and I realize that I absolutely must use port 80 hence I am
looking into possibilities of reverse proxying. On this site, I found the
following example:

# Django setup
sys.path.append("shoout_web")
os.environ['DJANGO_SETTINGS_MODULE'] = 'shoout_web.settings'

def wrapper_WSGIRootWrapper():
    # Build the wrapper first
    generic = WSGIHandler()
    def HandlerWrapper(environ, start_response):
        environ['engine'] = engine
        return generic(environ, start_response)

    # Thread and Allowing Ctrl-C to get you out cleanly:
    pool = threadpool.ThreadPool()
    pool.start()
    reactor.addSystemEventTrigger('after', 'shutdown', pool.stop)
    return wsgi.WSGIResource(reactor, pool, HandlerWrapper)
WSGIRoot = wrapper_WSGIRootWrapper()

# Reverse Proxy
class Simple(Resource):
    isLeaf = False

    def getChild(self, name, request):
        if name == "orbited":
            print "orbited"
            return proxy.ReverseProxyResource('localhost', 12345, "/"+name)
        else:
            return WSGIRoot.getChildWithDefault(name, request)

# Attaching proxy + django
log_dir = './.log'
if not os.path.exists(log_dir):
    os.makedirs(log_dir)
reactor.listenTCP(DJANGO_PORT, server.Site(Simple(),
logPath=os.path.join(log_dir, '.django.log')))

My trouble is I don't really know what to fill in in the else part of that
second code part. I looked at text_proxy on twisted-src and there weren't
substantial examples for this. Any help?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101016/ba3843f8/attachment.html>

From glyph at twistedmatrix.com  Sat Oct 16 21:07:34 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 16 Oct 2010 23:07:34 -0400
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <4CB9B06E.2080405@internetnowasp.net>
References: <4CB9B06E.2080405@internetnowasp.net>
Message-ID: <F07EE17E-CC1F-41B0-AA8D-3DFD03CE31B1@twistedmatrix.com>


On Oct 16, 2010, at 10:02 AM, Marcus.CM wrote:

> How do i find out if a particular connection is already dead in the 
> given "account" class?

There's no way to know; it's a race condition.  If the connection dies before authentication, then requestAvatar won't be called.  If the connection dies shortly afterward, you'll get a connectionLost shortly after authentication, but there's no way to predict that that's about to happen.

If the connection dies at the exact moment that authentication occurs... well, the joke's on you, in a network of Von Neumann architecture computers, there's no such thing as the "exact moment".  It actually died shortly afterwards, just so shortly that it seemed simultaneous to a casual human observer.  So as far as the code's concerned, it's the same as the "shortly afterward" case.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101016/a7bbdb9f/attachment.html>

From glyph at twistedmatrix.com  Sat Oct 16 21:10:20 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 16 Oct 2010 23:10:20 -0400
Subject: [Twisted-Python] Twisted Reverse Proxy
In-Reply-To: <AANLkTinBgu_g-BUzOj7WGhR4prvOQfVpPPxa9Qqp=Vg7@mail.gmail.com>
References: <AANLkTinBgu_g-BUzOj7WGhR4prvOQfVpPPxa9Qqp=Vg7@mail.gmail.com>
Message-ID: <EB35CCA0-295C-4D12-A155-463001517924@twistedmatrix.com>


On Oct 16, 2010, at 1:54 PM, disappearedng wrote:

> My trouble is I don't really know what to fill in in the else part of that second code part.

I don't understand what you're trying to achieve that your code isn't already doing.  Can you be more specific?


From glyph at twistedmatrix.com  Sat Oct 16 21:16:35 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 16 Oct 2010 23:16:35 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CB9C350.8030800@demaledetti.net>
References: <4CB9C350.8030800@demaledetti.net>
Message-ID: <6F627456-BCF2-4898-90FC-087D257F4A23@twistedmatrix.com>


On Oct 16, 2010, at 11:22 AM, Stefano Debenedetti wrote:

> Does this sound familiar in any way? Any suggestions off top of head
> while I try to come up with a self-contained sample which is
> reliably reproducing the issue I'm seeing happening only "sometimes
> and quite seldom[TM]"?

I can't recall having seen this exact issue in the past, but as you've described it it sounds like you may have discovered a Twisted bug.  I'm looking forward to your example.

I do have a few questions:

What version of Twisted are you using?
Have you tried a more recent version? Trunk?
What reactor are you using?
Have you tried a different reactor?
What platform/OS are you on?  What version?
Have you tried a different platform?

I am also curious whether changing

   proto.transport.loseConnection()

to
   reactor.callLater(0, proto.transport.loseConnection)

makes any difference to your example.

Thanks, and good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101016/0d69effd/attachment.html>

From exarkun at twistedmatrix.com  Sat Oct 16 22:05:29 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Oct 2010 04:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1287288329.8.1005228502@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101017/659b0486/attachment.html>

From marcus at internetnowasp.net  Sun Oct 17 07:16:13 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Sun, 17 Oct 2010 21:16:13 +0800
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <F07EE17E-CC1F-41B0-AA8D-3DFD03CE31B1@twistedmatrix.com>
References: <4CB9B06E.2080405@internetnowasp.net>
	<F07EE17E-CC1F-41B0-AA8D-3DFD03CE31B1@twistedmatrix.com>
Message-ID: <4CBAF71D.80701@internetnowasp.net>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101017/4bc0e097/attachment-0001.html>

From exarkun at twistedmatrix.com  Sun Oct 17 08:28:10 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Oct 2010 14:28:10 -0000
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <4CB9B06E.2080405@internetnowasp.net>
References: <4CB9B06E.2080405@internetnowasp.net>
Message-ID: <20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>

On 16 Oct, 02:02 pm, marcus at internetnowasp.net wrote:
>Hi,
>
>This might seems like a trivial question or at least i would have
>thought so but it has eluded me for some time on how to do this 
>elegantly.
>In twisted mail, since the only part where we instantiate an instance 
>of
>account  is under :
>
>   def requestAvatar(self, avatarId, mind, *interfaces):
>        account = xxinterface() # instantiate our account
>
>How do i find out if a particular connection is already dead in the
>given "account" class? For smtp for example,
>"mind" is None and avatarId is just the id of the login user. Even if
>this is pop3 or imap, the same problem arise
>how do i know if the connection of the particular "Server" instance is
>dead.

Perhaps you want to do something with the logout callback that 
requestAvatar is also responsible for returning?  The SMTP protocol 
implementation will call it when the connection is lost.

Jean-Paul



From ste at demaledetti.net  Sun Oct 17 11:00:27 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sun, 17 Oct 2010 19:00:27 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CBB2BAB.7000607@demaledetti.net>

Hello Glyph, thanks for your reply and suggestions.

I don't have a self-contained sample yet but at least I managed to
reproduce it reliably on my installation and after a few more
experiments I think I am narrowing this down, please read below.

> On Oct 16, 2010, at 11:22 AM, Stefano Debenedetti wrote:
> 
>> Does this sound familiar in any way? Any suggestions off top of head
>> while I try to come up with a self-contained sample which is
>> reliably reproducing the issue I'm seeing happening only "sometimes
>> and quite seldom[TM]"?
> 
> I can't recall having seen this exact issue in the past, but as you've described it it sounds like you may have discovered a Twisted bug.  I'm looking forward to your example.
> 
> I do have a few questions:
> 
>     * What version of Twisted are you using?
>     * Have you tried a more recent version? Trunk?


I'm using 10.1.0. I haven't tested on trunk because I see basically
no difference in internet/abstract.py and internet/tcp.py but if you
really think I should I will give trunk a try.


>     * What reactor are you using?
>     * Have you tried a different reactor?


Same behavior with select, poll and epoll.


>     * What platform/OS are you on?  What version?
>     * Have you tried a different platform?


I am using debian lenny with a self-compiled 2.6.35.2 kernel.
/etc/debian_version says: 5.0.5


> I am also curious whether changing
> 
>    proto.transport.loseConnection()
> 
> to
>    reactor.callLater(0, proto.transport.loseConnection)
> 
> makes any difference to your example.


I tried this and it didn't make any difference. Using a 1 second
delay didn't improve things either.

What did make a difference was to comment this line, the problem
never happens without it:

to.transport.registerProducer(_from.transport, True)

Next test I did was to try registering the producer as non-streaming:

to.transport.registerProducer(_from.transport, False)

This also fixes the problem but it causes an exception to be printed
in the log once per set of A, B and C connections:

Traceback (most recent call last):
  File "/home/lala/lib/python/twisted/python/log.py", line 84, in
callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "/home/lala/lib/python/twisted/python/log.py", line 69, in
callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "/home/lala/lib/python/twisted/python/context.py", line 59,
in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "/home/lala/lib/python/twisted/python/context.py", line 37,
in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File "/home/lala/lib/python/twisted/internet/pollreactor.py", line
184, in _doReadOrWrite
    why = selectable.doWrite()
  File "/home/lala/lib/python/twisted/internet/tcp.py", line 428, in
doWrite
    result = abstract.FileDescriptor.doWrite(self)
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
145, in doWrite
    self.producer.resumeProducing()
  File "/home/lala/lib/python/twisted/internet/abstract.py", line
339, in resumeProducing
    assert self.connected and not self.disconnecting
exceptions.AssertionError:


This lead me to change the following lines in the doWrite code in
internet/abstract.py:

if self.disconnecting:
    # But if I was previously asked to let the connection die, do
    # so.
    return self._postLoseConnection()
elif self.producer is not None and ((not self.streamingProducer)
				  or self.producerPaused):
    # tell them to supply some more.
    self.producerPaused = 0
    self.producer.resumeProducing()
#elif self.disconnecting:
#    # But if I was previously asked to let the connection die, do
#    # so.
#    return self._postLoseConnection()

Basically this just inverts the order of checks: first check if
disconnecting, then check if a producer should be unpaused.

This makes the above traceback disappear and still fixes my
CLOSE_WAIT problem.

But using a non-streaming producer makes my app consume a lot more
memory so I reverted back my code to register the producer as streaming:

to.transport.registerProducer(_from.transport, True)

Now the CLOSE_WAIT issue is gone, no traceback appears in the log
and my app consumes the same memory as before. Victory?

I will still try to come up with a self-contained sample which
reproduces the CLOSE_WAIT problem but in the meanwhile I would like
to ask if the above-mentioned change to the doWrite definition in
internet/abstract.py is likely to destroy the universe in the near
future or if it actually sounds like a good idea.


> Thanks, and good luck,
> 
> -glyph


Thanks a lot for your help!

ciao
ste










From exarkun at twistedmatrix.com  Sun Oct 17 15:41:44 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 17 Oct 2010 21:41:44 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CBB2BAB.7000607@demaledetti.net>
References: <4CBB2BAB.7000607@demaledetti.net>
Message-ID: <20101017214144.2414.1816006530.divmod.xquotient.502@localhost.localdomain>

On 05:00 pm, ste at demaledetti.net wrote:
>Hello Glyph, thanks for your reply and suggestions.
>
>I don't have a self-contained sample yet but at least I managed to
>reproduce it reliably on my installation and after a few more
>experiments I think I am narrowing this down, please read below.
>
>What did make a difference was to comment this line, the problem
>never happens without it:
>
>to.transport.registerProducer(_from.transport, True)

This suggests that your problem is that you don't unregister the 
produce.  The connection can never be closed as long as a producer is 
registered.  Does your code ever unregister this producer?

Jean-Paul



From marcus at internetnowasp.net  Sun Oct 17 20:53:02 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Mon, 18 Oct 2010 10:53:02 +0800
Subject: [Twisted-Python] Twisted protocol instances : a puzzle
In-Reply-To: <20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>
References: <4CB9B06E.2080405@internetnowasp.net>
	<20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>
Message-ID: <4CBBB68E.8060107@internetnowasp.net>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101018/b71b9455/attachment-0001.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: imap4.fetch.txt
URL: </pipermail/twisted-python/attachments/20101018/b71b9455/attachment-0002.txt>

From exarkun at twistedmatrix.com  Mon Oct 18 07:17:37 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 18 Oct 2010 13:17:37 -0000
Subject: [Twisted-Python] IMAP4 fetch optimization
In-Reply-To: <4CBBB68E.8060107@internetnowasp.net>
References: <4CB9B06E.2080405@internetnowasp.net>
	<20101017142810.2414.2079664616.divmod.xquotient.500@localhost.localdomain>
	<4CBBB68E.8060107@internetnowasp.net>
Message-ID: <20101018131737.2414.2002106162.divmod.xquotient.505@localhost.localdomain>

Please file a ticket in the issue tracker and attach a patch there. 
Patches sent to the list will just get forgotten about.

Thanks.

Jean-Paul



From ste at demaledetti.net  Mon Oct 18 09:21:59 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Mon, 18 Oct 2010 17:21:59 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CBC6617.3090904@demaledetti.net>

Hello Jean-Paul, thanks for looking into this.

>>What did make a difference was to comment this line, the problem
>>never happens without it:
>>
>>to.transport.registerProducer(_from.transport, True)
> 
> This suggests that your problem is that you don't unregister the 
> produce.  The connection can never be closed as long as a producer is 
> registered.  Does your code ever unregister this producer?

I am 100% sure that I unregister the producer from the transport
right before I call loseConnection on that transport (see code
snippet in my original post). Even using reactor.callLater for
calling loseConnection asynchronously after the producer has been
unregistered didn't help.

Moreover, if it was just a problem of my code not unregistering the
producer then this wouldn't explain why registering the producer as
non-streaming fixes the issue. It also wouldn't explain why does
this happen only in particular conditions and not always (even if I
managed to reproduce it reliably, I still have to debug the exact
external conditions that trigger it).

As a side note, for once what you wrote is not 200% exact ;) because
the connection is always closed properly if it's the peer closing it
first, even if the producer is still registered in that case. (Maybe
Twisted unregisters the producer by itself when this happens?)

Anyway, I ran Twisted tests on my installation after the patch I
mentioned in my previous mail and I got the same results as before
applying it so at least it seems it doesn't break any obvious stuff.

thank you, ciao
ste





From exarkun at twistedmatrix.com  Mon Oct 18 10:25:07 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 18 Oct 2010 16:25:07 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CBC6617.3090904@demaledetti.net>
References: <4CBC6617.3090904@demaledetti.net>
Message-ID: <20101018162507.2414.1785991535.divmod.xquotient.629@localhost.localdomain>

On 03:21 pm, ste at demaledetti.net wrote:
>Hello Jean-Paul, thanks for looking into this.
>>>What did make a difference was to comment this line, the problem
>>>never happens without it:
>>>
>>>to.transport.registerProducer(_from.transport, True)
>>
>>This suggests that your problem is that you don't unregister the
>>produce.  The connection can never be closed as long as a producer is
>>registered.  Does your code ever unregister this producer?
>
>I am 100% sure that I unregister the producer from the transport
>right before I call loseConnection on that transport (see code
>snippet in my original post). Even using reactor.callLater for
>calling loseConnection asynchronously after the producer has been
>unregistered didn't help.

Okay.  Then we're back to Glyph's idea, which is that there really is a 
bug to fix. :)
>Moreover, if it was just a problem of my code not unregistering the
>producer then this wouldn't explain why registering the producer as
>non-streaming fixes the issue. It also wouldn't explain why does
>this happen only in particular conditions and not always (even if I
>managed to reproduce it reliably, I still have to debug the exact
>external conditions that trigger it).

Hopefully this will turn into a simple example which can reliably 
reproduce the problem for everyone. :)
>As a side note, for once what you wrote is not 200% exact ;) because
>the connection is always closed properly if it's the peer closing it
>first, even if the producer is still registered in that case. (Maybe
>Twisted unregisters the producer by itself when this happens?)

Thanks for that clarification.

Jean-Paul



From eliao at seegrid.com  Mon Oct 18 11:41:14 2010
From: eliao at seegrid.com (Elizabeth Liao)
Date: Mon, 18 Oct 2010 17:41:14 +0000
Subject: [Twisted-Python] Getting a list of services and/or plugins are
	currently running
Message-ID: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>

Hi all,

I'm looking for a way to get a list of services and/or plugins that currently running on a machine.  Does anyone have any suggestions on how to do that?

Thanks.

Liz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101018/a949e51a/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 18 11:47:06 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 18 Oct 2010 13:47:06 -0400
Subject: [Twisted-Python] Getting a list of services and/or plugins are
	currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
Message-ID: <1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>


On Oct 18, 2010, at 1:41 PM, Elizabeth Liao wrote:

> Hi all,
> 
> I'm looking for a way to get a list of services and/or plugins that currently running on a machine.  Does anyone have any suggestions on how to do that?
> 
> Thanks.
> 
> Liz

This question is a bit too vague to be answered with any confidence.  What do you mean by "service"?  What do you mean by "plugin"?  And what do you mean by "running"?  These things have generic meanings and then more specific jargon-y meanings with respect to Twisted.  Do you mean "what twistd plugins are installed in my system Python", or "what processes that use Twisted are currently running", or "what Service objects are currently .running == True in my current process", or something else?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101018/eda5a490/attachment.html>

From marcus at internetnowasp.net  Mon Oct 18 11:49:58 2010
From: marcus at internetnowasp.net (Marcus.CM)
Date: Tue, 19 Oct 2010 01:49:58 +0800
Subject: [Twisted-Python] Getting a list of services and/or plugins are
 currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
Message-ID: <4CBC88C6.1020103@internetnowasp.net>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101019/6c5d559a/attachment.html>

From eliao at seegrid.com  Mon Oct 18 13:10:43 2010
From: eliao at seegrid.com (Elizabeth Liao)
Date: Mon, 18 Oct 2010 19:10:43 +0000
Subject: [Twisted-Python] Getting a list of services and/or plugins
	are	currently running
In-Reply-To: <1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>,
	<1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
Message-ID: <F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>

Sorry about that.  I just started using twisted so I'll try to be more specific.

We have 2 different twisted plugins that uses shared code.   Each of these plugins is run as a  TCPClient on separate machines.

What would like to do is to somehow identify what twisted services/plugins are running because different things happen depending on what plugin is currently in use.  We are running on Linux wanted to see if there was an easy way of doing that using the twisted libraries.  I suppose one solution is to get a list of processes running and parse that but I would rather not do that.

Thanks.

Liz


________________________________
From: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] on behalf of Glyph Lefkowitz [glyph at twistedmatrix.com]
Sent: Monday, October 18, 2010 1:44 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Getting a list of services and/or plugins are currently running


On Oct 18, 2010, at 1:41 PM, Elizabeth Liao wrote:

Hi all,

I'm looking for a way to get a list of services and/or plugins that currently running on a machine.  Does anyone have any suggestions on how to do that?

Thanks.

Liz

This question is a bit too vague to be answered with any confidence.  What do you mean by "service"?  What do you mean by "plugin"?  And what do you mean by "running"?  These things have generic meanings and then more specific jargon-y meanings with respect to Twisted.  Do you mean "what twistd plugins are installed in my system Python", or "what processes that use Twisted are currently running", or "what Service objects are currently .running == True in my current process", or something else?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101018/54842184/attachment.html>

From glyph at twistedmatrix.com  Mon Oct 18 13:51:18 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 18 Oct 2010 15:51:18 -0400
Subject: [Twisted-Python] Getting a list of services and/or plugins are
	currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>,
	<1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
	<F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
Message-ID: <735A35E9-16BA-4C24-852C-47A16CA8EF74@twistedmatrix.com>


On Oct 18, 2010, at 3:10 PM, Elizabeth Liao wrote:

> Sorry about that.  I just started using twisted so I'll try to be more specific.
> 
> We have 2 different twisted plugins that uses shared code.   Each of these plugins is run as a  TCPClient on separate machines.
> 
> What would like to do is to somehow identify what twisted services/plugins are running because different things happen depending on what plugin is currently in use.  We are running on Linux wanted to see if there was an easy way of doing that using the twisted libraries.  I suppose one solution is to get a list of processes running and parse that but I would rather not do that.
> 
> Thanks.
> 
> Liz

Sorry, but there is no easy API to do this using Twisted.  It's not really clear to me how such an API could be meaningful, either, given that any Twisted plugin could easily invoke any arbitrary python code that it wants to, including other Twisted plugins.  But if you have a detailed specification for how it might work, please feel free to file a ticket.

One way you could deal with this would be to have a dedicated UNIX socket at a well-known path for your particular application (e.g. /tmp/.your-app/global-socket), and connect to that socket to identify the current system's role.  This requires a little more work, but has the advantage that if you go with an extensible protocol such as AMP, you can extend this communication mechanism to allow arbitrarily detailed interrogation depending on your needs in the future.

If you wanted to go with the 'listing processes' route (it is definitely simpler), you don't have to parse it yourself.  Something like this with the 'psi' module (<http://pypi.python.org/pypi/PSI>) might do what you want:

>>> from psi.process import ProcessTable
>>> pt = ProcessTable()
>>> for p in pt.values():
...   if 'twistd your-app' in p.command:
...     print p.pid


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101018/b341ebca/attachment.html>

From johann.borck at densedata.com  Mon Oct 18 14:28:46 2010
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 18 Oct 2010 22:28:46 +0200
Subject: [Twisted-Python] Getting a list of services and/or plugins	are
 currently running
In-Reply-To: <F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>,
	<1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
	<F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
Message-ID: <4CBCADFE.3030300@densedata.com>

On 10/18/2010 09:10 PM, Elizabeth Liao wrote:
> [...]
> What would like to do is to somehow identify what twisted 
> services/plugins are running because different things happen depending 
> on what plugin is currently in use.  We are running on Linux wanted to 
> see if there was an easy way of doing that using the twisted 
> libraries.  I suppose one solution is to get a list of processes 
> running and parse that but I would rather not do that.
>
Hi Elizabeth,
I don't think (and meanwhile know, because Glyph already answered) 
there's a ready-made solution for your requirements (inside twisted, at 
least), but it should be relatively straightforward to implement one 
using twisted. If I understand you correctly, you need an interface to 
query which plugins/services (aka t.a.s.Services) in which twisted 
processes are in which state on a given machine, or even all machines 
involved in your setup. Since you can have several machines running 
several twisted processes, where each process can have several plugins 
installed each in different states, and each plugin can offer several 
Services, which also can be in different states, (and even install/run 
other plugins and services ) twisted itself per default obviously cannot 
provide an interface to query all this information, if only because a 
given process just knows about itself.

If I wanted to implement this, I'd start with a central service, that 
offers an interface for (twisted) apps/clients/servers to register 
themselves on startup. All "participating" plugins and services would of 
course have to know about that service, but depending on your 
requirements it might suffice to use a common subclass of  
twisted.application.service.Service, that takes care of performing the 
necessary steps to inform your central state-monitoring service about 
their existence and state.

Johann


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101018/8efcd1d7/attachment.html>

From itamar at itamarst.org  Mon Oct 18 17:56:53 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 18 Oct 2010 19:56:53 -0400
Subject: [Twisted-Python] Getting a list of services and/or plugins	are
 currently running
In-Reply-To: <4CBCADFE.3030300@densedata.com>
References: <F83B0A28F6E1D043B7DA81F5466C564D0F4C95@vmexchange01.seegrid.local>
	, <1C9C9F66-C9C4-451A-942C-46A0B37E2F88@twistedmatrix.com>
	<F83B0A28F6E1D043B7DA81F5466C564D0F4CB7@vmexchange01.seegrid.local>
	<4CBCADFE.3030300@densedata.com>
Message-ID: <1287446213.1582.12.camel@blake>

On Mon, 2010-10-18 at 22:28 +0200, Johann Borck wrote:

> If I wanted to implement this, I'd start with a central service, that
> offers an interface for (twisted) apps/clients/servers to register
> themselves on startup. All "participating" plugins and services would
> of course have to know about that service, but depending on your
> requirements it might suffice to use a common subclass of
> twisted.application.service.Service, that takes care of performing the
> necessary steps to inform your central state-monitoring service about
> their existence and state.

Something based on zeroconf mDNS (aka Rendevezous on Macs) would do this
for you... and most modern linux versions include an implementation.




From lvh at laurensvh.be  Wed Oct 20 15:10:37 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Wed, 20 Oct 2010 23:10:37 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
Message-ID: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>

Hi!


People following the IRC channel have probably heard about the t-shirt I'm
trying to get printed. The idea isn't mine (it belongs to Mike Graham, aka
papna), but he told me it's okay if I try to make a shirt out of it. Here's
a proposal shirt: it's not *really* the idea that you buy this yet (but
you're free to, of course) -- mostly so other people can see how it looks on
a shirt.

The shirt is intended as a parody of the Gadsen flag (
http://en.wikipedia.org/wiki/Gadsden_flag). Hence the bright yellow color
and lack of apostrophe in "dont".

Feedback is welcome: do you think the layout or relative sizes should be
changed? Is the apostrophe being missing okay? Is the font OK? It's
currently Cardo, because Cardo is pretty and it's a serif font from the
correct period. papna has raised the concern that the fine lines may not
screenprint well, and I should use a more humanist typeface. People with
Zazzle experience welcome to chime in there.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101020/e4b378ab/attachment.html>

From lvh at laurensvh.be  Wed Oct 20 15:12:45 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Wed, 20 Oct 2010 23:12:45 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
Message-ID: <AANLkTim332aDCbc7KPOpeEo3__n3GiyXw0z5zcWMPtRx@mail.gmail.com>

Of course, I forgot to provide the link. Derp derp.

http://www.zazzle.com/dont_thread_on_me_tshirt-235937736467504507

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101020/01ac6a70/attachment.html>

From glyph at twistedmatrix.com  Wed Oct 20 15:37:25 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 20 Oct 2010 17:37:25 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
Message-ID: <DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>


On Oct 20, 2010, at 5:10 PM, Laurens Van Houtven wrote:

> Hi!
> 
> 
> People following the IRC channel have probably heard about the t-shirt I'm trying to get printed. The idea isn't mine (it belongs to Mike Graham, aka papna), but he told me it's okay if I try to make a shirt out of it. Here's a proposal shirt: it's not *really* the idea that you buy this yet (but you're free to, of course) -- mostly so other people can see how it looks on a shirt.
> 
> The shirt is intended as a parody of the Gadsen flag (http://en.wikipedia.org/wiki/Gadsden_flag). Hence the bright yellow color and lack of apostrophe in "dont".
> 
> Feedback is welcome: do you think the layout or relative sizes should be changed? Is the apostrophe being missing okay? Is the font OK? It's currently Cardo, because Cardo is pretty and it's a serif font from the correct period. papna has raised the concern that the fine lines may not screenprint well, and I should use a more humanist typeface. People with Zazzle experience welcome to chime in there.

I'm a fan of Linux Libertine, personally (<http://www.linuxlibertine.org/index.php?id=1&L=1>), but I don't have much screen-printing experience.

I think there should be something on the back though.  At the very least, 


Twisted
<http://twistedmatrix.com/>
Building the Engine of Your Internet

(Now I'm thinking that, for PyCon, we could have an alternate version of the shirt, done up like a concert tour shirt, except instead of listing locales we could list all of the tickets closed as 'fixed' in 2010, for anyone who worked on a ticket this year.  I don't know if there are too many to fit on the back of a shirt though!)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101020/e9178497/attachment.html>

From lvh at laurensvh.be  Wed Oct 20 16:09:25 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 21 Oct 2010 00:09:25 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>
Message-ID: <AANLkTim=O5VHy96mrYjH5-Ka+T1Yr4XmwuBqvfnZgKFy@mail.gmail.com>

On Wed, Oct 20, 2010 at 11:37 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

>
> On Oct 20, 2010, at 5:10 PM, Laurens Van Houtven wrote:
>
> Hi!
>
>
> People following the IRC channel have probably heard about the t-shirt I'm
> trying to get printed. The idea isn't mine (it belongs to Mike Graham, aka
> papna), but he told me it's okay if I try to make a shirt out of it. Here's
> a proposal shirt: it's not *really* the idea that you buy this yet (but
> you're free to, of course) -- mostly so other people can see how it looks on
> a shirt.
>
> The shirt is intended as a parody of the Gadsen flag (
> http://en.wikipedia.org/wiki/Gadsden_flag). Hence the bright yellow color
> and lack of apostrophe in "dont".
>
> Feedback is welcome: do you think the layout or relative sizes should be
> changed? Is the apostrophe being missing okay? Is the font OK? It's
> currently Cardo, because Cardo is pretty and it's a serif font from the
> correct period. papna has raised the concern that the fine lines may not
> screenprint well, and I should use a more humanist typeface. People with
> Zazzle experience welcome to chime in there.
>
>
> I'm a fan of Linux Libertine, personally (<
> http://www.linuxlibertine.org/index.php?id=1&L=1>), but I don't have much
> screen-printing experience.
>
> I think there should be something on the back though.  At the very least,
>
>
> Twisted
> <http://twistedmatrix.com/>
> Building the Engine of Your Internet
>

Yep, definitely.


>
> (Now I'm thinking that, for PyCon, we could have an alternate version of
> the shirt, done up like a concert tour shirt, except instead of listing
> locales we could list all of the tickets closed as 'fixed' in 2010, for
> anyone who worked on a ticket this year.  I don't know if there are too many
> to fit on the back of a shirt though!)
>

+1, sounds good, not sure if that's feasible since I have no idea how many
names that are

Another option: "No communication without asynchronization!"

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101021/11b39808/attachment.html>

From dripton at ripton.net  Wed Oct 20 18:00:54 2010
From: dripton at ripton.net (David Ripton)
Date: Wed, 20 Oct 2010 20:00:54 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
Message-ID: <4CBF82B6.9000905@ripton.net>

On 10/20/10 17:10, Laurens Van Houtven wrote:

> Feedback is welcome: do you think the layout or relative sizes should be
> changed? Is the apostrophe being missing okay?

I think the missing apostrophe looks bad.

Otherwise, I like the shirt.

-- 
David Ripton    dripton at ripton.net



From stephen at thorne.id.au  Wed Oct 20 19:09:06 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 21 Oct 2010 11:09:06 +1000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTim=O5VHy96mrYjH5-Ka+T1Yr4XmwuBqvfnZgKFy@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<DFCEA9D1-8DF5-437E-95FF-BD7C3F00ECFA@twistedmatrix.com>
	<AANLkTim=O5VHy96mrYjH5-Ka+T1Yr4XmwuBqvfnZgKFy@mail.gmail.com>
Message-ID: <20101021010905.GB3482@thorne.id.au>

On 2010-10-21, Laurens Van Houtven wrote:
> > (Now I'm thinking that, for PyCon, we could have an alternate version of
> > the shirt, done up like a concert tour shirt, except instead of listing
> > locales we could list all of the tickets closed as 'fixed' in 2010, for
> > anyone who worked on a ticket this year.  I don't know if there are too many
> > to fit on the back of a shirt though!)
> >
> 
> +1, sounds good, not sure if that's feasible since I have no idea how many
> names that are
> 
> Another option: "No communication without asynchronization!"

Really excited about these ideas. My original twisted tshirt is getting
quite old and ratty.

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From marco.giusti at gmail.com  Thu Oct 21 00:49:37 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Thu, 21 Oct 2010 08:49:37 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <4CBF82B6.9000905@ripton.net>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net>
Message-ID: <20101021064937.GA9355@murdoc>

On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> On 10/20/10 17:10, Laurens Van Houtven wrote:
> 
> > Feedback is welcome: do you think the layout or relative sizes should be
> > changed? Is the apostrophe being missing okay?
> 
> I think the missing apostrophe looks bad.

Stupid question from a non anglophone: why the apostrophe is missing?



From stephen at thorne.id.au  Thu Oct 21 01:02:03 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Thu, 21 Oct 2010 17:02:03 +1000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021064937.GA9355@murdoc>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
Message-ID: <20101021070203.GC3482@thorne.id.au>

On 2010-10-21, Marco Giusti wrote:
> On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > 
> > > Feedback is welcome: do you think the layout or relative sizes should be
> > > changed? Is the apostrophe being missing okay?
> > 
> > I think the missing apostrophe looks bad.
> 
> Stupid question from a non anglophone: why the apostrophe is missing?

"DONT THREAD ON ME" is the text on the shirt. "Don't" is a contraction
of "Do not" and requires an apostrophe. 

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From screwtape at froup.com  Thu Oct 21 01:12:48 2010
From: screwtape at froup.com (Tim Allen)
Date: Thu, 21 Oct 2010 18:12:48 +1100
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021064937.GA9355@murdoc>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
Message-ID: <20101021071248.GF28416@boombah.thristian.org>

On Thu, Oct 21, 2010 at 08:49:37AM +0200, Marco Giusti wrote:
> On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > 
> > > Feedback is welcome: do you think the layout or relative sizes should be
> > > changed? Is the apostrophe being missing okay?
> > 
> > I think the missing apostrophe looks bad.
> 
> Stupid question from a non anglophone: why the apostrophe is missing?

It's missing from Laurens Van Houtven's artwork because it's missing
from the Gadsden's Flag artwork that is being parodied. As to why the
original flag doesn't have an apostrophe... it's hard to say:

<http://wiki.answers.com/Q/In_the_Gadsden_and_Navy_Jack_%27Dont_Tread_on_Me%27_flags_does_the_%27don%27t%27_have_an_apostrophe>



From marco.giusti at gmail.com  Thu Oct 21 01:23:58 2010
From: marco.giusti at gmail.com (Marco Giusti)
Date: Thu, 21 Oct 2010 09:23:58 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021070203.GC3482@thorne.id.au>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021070203.GC3482@thorne.id.au>
Message-ID: <20101021072358.GB9355@murdoc>

On Thu, Oct 21, 2010 at 05:02:03PM +1000, Stephen Thorne wrote:
> On 2010-10-21, Marco Giusti wrote:
> > On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > > 
> > > > Feedback is welcome: do you think the layout or relative sizes should be
> > > > changed? Is the apostrophe being missing okay?
> > > 
> > > I think the missing apostrophe looks bad.
> > 
> > Stupid question from a non anglophone: why the apostrophe is missing?
> 
> "DONT THREAD ON ME" is the text on the shirt. "Don't" is a contraction
> of "Do not" and requires an apostrophe. 

Perhaps I have not explained well, I'm sorry. I know that "don't" is a
contraction of "do not", but why the text on the flag lacks of the
apostrophe? Does it have a meaning or is it a grammatical error?



From pm-twisted-python at anapol.cz  Thu Oct 21 02:35:55 2010
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Thu, 21 Oct 2010 10:35:55 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021072358.GB9355@murdoc>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>	<4CBF82B6.9000905@ripton.net>
	<20101021064937.GA9355@murdoc>	<20101021070203.GC3482@thorne.id.au>
	<20101021072358.GB9355@murdoc>
Message-ID: <4CBFFB6B.9020400@anapol.cz>

Hi, see http://en.wikipedia.org/wiki/Gadsden_flag ;)

Petr

Marco Giusti wrote:
> On Thu, Oct 21, 2010 at 05:02:03PM +1000, Stephen Thorne wrote:
>   
>> On 2010-10-21, Marco Giusti wrote:
>>     
>>> On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
>>>       
>>>> On 10/20/10 17:10, Laurens Van Houtven wrote:
>>>>
>>>>         
>>>>> Feedback is welcome: do you think the layout or relative sizes should be
>>>>> changed? Is the apostrophe being missing okay?
>>>>>           
>>>> I think the missing apostrophe looks bad.
>>>>         
>>> Stupid question from a non anglophone: why the apostrophe is missing?
>>>       
>> "DONT THREAD ON ME" is the text on the shirt. "Don't" is a contraction
>> of "Do not" and requires an apostrophe. 
>>     
>
> Perhaps I have not explained well, I'm sorry. I know that "don't" is a
> contraction of "do not", but why the text on the flag lacks of the
> apostrophe? Does it have a meaning or is it a grammatical error?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From twisted-web at udmvt.ru  Thu Oct 21 03:36:52 2010
From: twisted-web at udmvt.ru (twisted-web at udmvt.ru)
Date: Thu, 21 Oct 2010 13:36:52 +0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021071248.GF28416@boombah.thristian.org>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
Message-ID: <20101021093652.GM25590@ruber.office.udmvt.ru>

On Thu, Oct 21, 2010 at 06:12:48PM +1100, Tim Allen wrote:
> On Thu, Oct 21, 2010 at 08:49:37AM +0200, Marco Giusti wrote:
> > On Wed, Oct 20, 2010 at 08:00:54PM -0400, David Ripton wrote:
> > > On 10/20/10 17:10, Laurens Van Houtven wrote:
> > > 
> > > > Feedback is welcome: do you think the layout or relative sizes should be
> > > > changed? Is the apostrophe being missing okay?
> > > 
> > > I think the missing apostrophe looks bad.
> > 
> > Stupid question from a non anglophone: why the apostrophe is missing?
> 
> It's missing from Laurens Van Houtven's artwork because it's missing
> from the Gadsden's Flag artwork that is being parodied. As to why the
> original flag doesn't have an apostrophe... it's hard to say:
> 
> <http://wiki.answers.com/Q/In_the_Gadsden_and_Navy_Jack_%27Dont_Tread_on_Me%27_flags_does_the_%27don%27t%27_have_an_apostrophe>
> 
Uh... Oh...

That would be a good feeling of parody, but only for the US patriots or US history
concerned people (students or experts maybe).

As for me, that t-shirt doesn't say anything, since I
just have been introduced to the concept of "Gadsten's Flag", by you.

I think that design may be popular in US, but ignored in Europe, China or India.

Hmm, I talk like a culturologist...

--
Alexey S



From lvh at laurensvh.be  Thu Oct 21 03:54:59 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 21 Oct 2010 11:54:59 +0200
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021093652.GM25590@ruber.office.udmvt.ru>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
Message-ID: <AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>

Yep, sorry, I realise the flag is based on an exclusively American symbol.
OTOH, I'm not (very) American so it still rings bell for me :-)

About the apostrophe: yes, the reason it is currently missing is because it
is missing on the Gadsen flag. That's also the reason the t-shirt is yellow.
I'm getting mixed feedback on how important mimicing the Gadsen flag is, in
terms of:
 - typeface (this is Cardo 99 SIL. Printing on T-shirts occasionally has
problems with small, thin serifs on serif fonts.)
 - color (although I like it because it's a Python-related shirt, and yellow
isn't my favorite color)
 - apostrophe (authenticity vs correctness - fortunately it's just a lexer
problem in "don't" and not the far more expensive parser problems of
your/you're/there/their/they're)

I like Glyph's idea of a credit roll, but I am unsure how to get such data
out of Trac. Is there a way I can just execute low-privilege SELECT queries?


thanks
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101021/4e702d90/attachment-0001.html>

From screwtape at froup.com  Thu Oct 21 04:36:48 2010
From: screwtape at froup.com (Tim Allen)
Date: Thu, 21 Oct 2010 21:36:48 +1100
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
Message-ID: <20101021103647.GG28416@boombah.thristian.org>

On Thu, Oct 21, 2010 at 11:54:59AM +0200, Laurens Van Houtven wrote:
> Yep, sorry, I realise the flag is based on an exclusively American symbol.
> OTOH, I'm not (very) American so it still rings bell for me :-)

I'm not American at all, and I think it's hilarious.

> About the apostrophe: yes, the reason it is currently missing is because it
> is missing on the Gadsen flag. That's also the reason the t-shirt is yellow.
> I'm getting mixed feedback on how important mimicing the Gadsen flag is, in
> terms of:
>  - typeface (this is Cardo 99 SIL. Printing on T-shirts occasionally has
> problems with small, thin serifs on serif fonts.)

I notice that Wikipedia's "Gadsden Flag" page includes a scan from an
1885 school-book that includes a reproduction of said flag, and it
definitely uses a sans-serif typeface. Like most visual designs that
have been drawn and redrawn thousands of times by hundreds of people
over the centuries, I suspect a little variance is permissible.

>  - color (although I like it because it's a Python-related shirt, and yellow
> isn't my favorite color)

The common ingredients of a Gadsden Flag reference seem to be "yellow",
"snake" and the slogan; given how much the Twisted Matrix logo resembles
the traditional rattlesnake (i.e. not very much) keeping the colour and
the slogan close to the original seems important.

>  - apostrophe (authenticity vs correctness - fortunately it's just a lexer
> problem in "don't" and not the far more expensive parser problems of
> your/you're/there/their/they're)

I see somebody tried to add an apostrophe to the SVG version of the flag
on Wikipedia, which was quickly reverted (sadly without a rationale or
citation). A Google Image Search for "DONT TREAD ON ME" shows that both
with-apostrophe and without-apostrophe variants are common, but the ones
without seem more... authentic somehow.

Enough bike-shedding? :)



From itamar at itamarst.org  Thu Oct 21 06:20:37 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 21 Oct 2010 08:20:37 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021103647.GG28416@boombah.thristian.org>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
	<20101021103647.GG28416@boombah.thristian.org>
Message-ID: <1287663637.1617.0.camel@blake>

On Thu, 2010-10-21 at 21:36 +1100, Tim Allen wrote:
> A Google Image Search for "DONT TREAD ON ME" shows that both
> with-apostrophe and without-apostrophe variants are common, but the ones
> without seem more... authentic somehow.

Indeed:
http://www.flickr.com/photos/pargon/4468906943/




From exarkun at twistedmatrix.com  Thu Oct 21 07:40:47 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 21 Oct 2010 13:40:47 -0000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
Message-ID: <20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>

On 09:54 am, lvh at laurensvh.be wrote:
>Yep, sorry, I realise the flag is based on an exclusively American 
>symbol.
>OTOH, I'm not (very) American so it still rings bell for me :-)
>
>About the apostrophe: yes, the reason it is currently missing is 
>because it
>is missing on the Gadsen flag. That's also the reason the t-shirt is 
>yellow.
>I'm getting mixed feedback on how important mimicing the Gadsen flag 
>is, in
>terms of:
>- typeface (this is Cardo 99 SIL. Printing on T-shirts occasionally has
>problems with small, thin serifs on serif fonts.)
>- color (although I like it because it's a Python-related shirt, and 
>yellow
>isn't my favorite color)
>- apostrophe (authenticity vs correctness - fortunately it's just a 
>lexer
>problem in "don't" and not the far more expensive parser problems of
>your/you're/there/their/they're)
>
>I like Glyph's idea of a credit roll, but I am unsure how to get such 
>data
>out of Trac. Is there a way I can just execute low-privilege SELECT 
>queries?

http://twistedmatrix.com/trac/report/19 will show you this information 
now.

Jean-Paul



From lvh at laurensvh.be  Thu Oct 21 15:47:56 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 21 Oct 2010 23:47:56 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
Message-ID: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>

Greetings fellow Twisted aficionados!


So, Allen (dash) and I have decided that we were going to co-do the Twisted
Extreme talk at PyCon US 2011. Extreme talks are like talks, except with
less talking and more coding, so preferably something actionable for an
entire 45 minutes! That most likely means many steps: start small, and then
do something more complex.

I think it's probably a good idea to tune for people who understand Python,
understand basic networking, but don't really know Twisted very well. People
who have experience trying to educate people new to Twisted are very welcome
to chime in.

I'm not sure what people care about, so ideas are welcome!

cheers and thanks for your input
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101021/1def71df/attachment-0001.html>

From glyph at twistedmatrix.com  Thu Oct 21 15:57:46 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 21 Oct 2010 17:57:46 -0400
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
	<20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>
Message-ID: <EF29FC45-FA14-4FDD-A1E9-3C04EADE81FA@twistedmatrix.com>

I specifically wanted tickets closed as 'fixed' though, since there's not too much cause for celebration of 'wontfix' and 'invalid'.

On Oct 21, 2010, at 9:40 AM, exarkun at twistedmatrix.com wrote:

> http://twistedmatrix.com/trac/report/19 will show you this information 
> now.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101021/e86daef0/attachment.html>

From exarkun at twistedmatrix.com  Thu Oct 21 16:15:39 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 21 Oct 2010 22:15:39 -0000
Subject: [Twisted-Python] Don't Thread On Me t-shirt proposal
In-Reply-To: <EF29FC45-FA14-4FDD-A1E9-3C04EADE81FA@twistedmatrix.com>
References: <AANLkTimOuLbqwnBDG9LkNAGyWdG256uBwBBp2QGqc1S8@mail.gmail.com>
	<4CBF82B6.9000905@ripton.net> <20101021064937.GA9355@murdoc>
	<20101021071248.GF28416@boombah.thristian.org>
	<20101021093652.GM25590@ruber.office.udmvt.ru>
	<AANLkTin64LHA0b=XL=0349gNhZrgs4ZRAyE8u0MKmnrY@mail.gmail.com>
	<20101021134047.1961.1002763038.divmod.xquotient.57@localhost.localdomain>
	<EF29FC45-FA14-4FDD-A1E9-3C04EADE81FA@twistedmatrix.com>
Message-ID: <20101021221539.1927.91194301.divmod.xquotient.0@localhost.localdomain>

On 09:57 pm, glyph at twistedmatrix.com wrote:
>I specifically wanted tickets closed as 'fixed' though, since there's 
>not too much cause for celebration of 'wontfix' and 'invalid'.

Oh yea.  http://twistedmatrix.com/trac/report/21

Jean-Paul



From stephen at thorne.id.au  Thu Oct 21 18:38:33 2010
From: stephen at thorne.id.au (Stephen Thorne)
Date: Fri, 22 Oct 2010 10:38:33 +1000
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
References: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
Message-ID: <20101022003833.GD3482@thorne.id.au>

On 2010-10-21, Laurens Van Houtven wrote:
> Greetings fellow Twisted aficionados!
> 
> So, Allen (dash) and I have decided that we were going to co-do the Twisted
> Extreme talk at PyCon US 2011. Extreme talks are like talks, except with
> less talking and more coding, so preferably something actionable for an
> entire 45 minutes! That most likely means many steps: start small, and then
> do something more complex.
> 
> I think it's probably a good idea to tune for people who understand Python,
> understand basic networking, but don't really know Twisted very well. People
> who have experience trying to educate people new to Twisted are very welcome
> to chime in.
> 
> I'm not sure what people care about, so ideas are welcome!

At PyCon-Au I demonstrated a 20ish line telnet chat server with
integrated http chat logs in a 3 minute lightning talk. 3 minutes was a
tiny bit short for a proper demonstration of capabilities, 45 might be
too long :P

-- 
Regards,
Stephen Thorne
Development Engineer
Netbox Blue



From lvh at laurensvh.be  Thu Oct 21 18:56:35 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 22 Oct 2010 02:56:35 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <20101022003833.GD3482@thorne.id.au>
References: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
	<20101022003833.GD3482@thorne.id.au>
Message-ID: <AANLkTimkDwrgbWtpwjP+xew2PcwwFdAhwJe9neOGd60x@mail.gmail.com>

I would really like to see something where manhole makes sense as one of the
iterative improvements, because it's a feature many people find very
impressive.

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101022/c21ec282/attachment.html>

From kevin.horn at gmail.com  Fri Oct 22 08:13:11 2010
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 22 Oct 2010 09:13:11 -0500
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTimkDwrgbWtpwjP+xew2PcwwFdAhwJe9neOGd60x@mail.gmail.com>
References: <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE@mail.gmail.com>
	<20101022003833.GD3482@thorne.id.au>
	<AANLkTimkDwrgbWtpwjP+xew2PcwwFdAhwJe9neOGd60x@mail.gmail.com>
Message-ID: <AANLkTi=XCo-jrYq_wpxgr8J5rJQ+OOSLLjiUE6XP4fZ0@mail.gmail.com>

Another Twisted feature that I find amazingly useful is having multiple
"servers" (e.g. email and web and telnet and ssh, etc.) in one process.
Manhole (IMO) makes sense for any Twisted process that provides multiple
services like this.

Kevin Horn

On Thu, Oct 21, 2010 at 7:56 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> I would really like to see something where manhole makes sense as one of
> the iterative improvements, because it's a feature many people find very
> impressive.
>
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101022/dcdf2d94/attachment.html>

From andrewfr_ice at yahoo.com  Fri Oct 22 10:40:27 2010
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 22 Oct 2010 09:40:27 -0700 (PDT)
Subject: [Twisted-Python] PyCon extreme Twisted talk!
Message-ID: <430979.39538.qm@web120712.mail.ne1.yahoo.com>

Hi Lauren:

Message: 1
Date: Thu, 21 Oct 2010 23:47:56 +0200
From: Laurens Van Houtven <lvh at laurensvh.be>
Subject: [Twisted-Python] PyCon extreme Twisted talk!
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

>Greetings fellow Twisted aficionados!


>So, Allen (dash) and I have decided that we were going to co-do the >Twisted Extreme talk at PyCon US 2011. Extreme talks are like talks, >except with less talking and more coding, so preferably something >actionable for an entire 45 minutes! That most likely means many steps: >start small, and then do something more complex.

I am probably going to submit an extreme talk for PyCon 2011. I'll either refine the "Prototyping Go's Select" talk. Or discuss about my work-in-progress about join conditions. Twisted has a simple join in the form of a deferred list.

Inspired by the Ray Hettinger Monocle post-talk discussion and writing examples with stackless.select(), I thought submitting another extreme talk that would revisit the lost world of Stackless Python/Twisted integration. As we discussed, why not a special reactor that incorporates the Stackless scheduler? Right now, a lot my examples use Twisted for sleep(). Creating a Stackless reactor would hopefully allow me to get rid of stuff like

This way I can get rid of stuff like:

l = task.LoopingCall(stackless.schedule)
l.start(.001)
stackless.tasklet(startTwisted)()
stackless.tasklet(santa)(reindeers, elves)
stackless.run()

and eventually 

def tick(seconds):
    tickCh = stackless.channel()
    reactor.callLater(seconds, tickCh.send, None)
    tickCh.receive()

what is particularly exciting is talk in the pypy-dev list about incorporating Stackless with the JIT....

Cheers,
Andrew

P.S - I have provided an example of using Stackless and Twisted to solve the Santa Claus Problem


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleSanta.py
Type: text/x-python-script
Size: 3307 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101022/2ee9c252/attachment-0002.bin>

From mike at mv3d.com  Sat Oct 23 19:18:33 2010
From: mike at mv3d.com (Michael Handverger)
Date: Sat, 23 Oct 2010 21:18:33 -0400 (EDT)
Subject: [Twisted-Python] ANN: MV3D v0.44 released!
Message-ID: <20505236.112381287883113965.JavaMail.root@verity.int.mv3d.com>

I’m pleased to announce the release of MV3D version 0.44! This version features a functioning content creation and world building tool-set. It is now possible to populate a game world from scratch without using the command line or writing code. Additionally, Ogre3D was upgraded to the latest version and a cluster management app was added.

Here’s a video showing off the demo world that is open to the public:

http://www.youtube.com/watch?v=9ebqAOWvyzI

MV3D is an open source virtual world simulation framework written in Python which uses Twisted for networking. It was designed with scalability in mind and aims to be able to distribute a world across as many servers as needed with dynamic load balancing. The simulation framework is not specifically slanted towards any one genre of online game, and can just as easily be used for a space game as a fantasy setting. On the client, Python-Ogre is used for rendering.

More info on MV3D including source code and Windows client binaries is available at http://www.mv3d.com. MV3D is released under the MIT license.

Enjoy,

Mike




From exarkun at twistedmatrix.com  Sat Oct 23 22:05:30 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 24 Oct 2010 04:05:30 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1287893130.97.1893585509@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101024/c0e0aa22/attachment-0001.html>

From facundobatista at gmail.com  Mon Oct 25 04:57:38 2010
From: facundobatista at gmail.com (Facundo Batista)
Date: Mon, 25 Oct 2010 08:57:38 -0200
Subject: [Twisted-Python] Catching all the exceptions in a Twisted program
Message-ID: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>

Hello!

I've just subscribed to the list, but I'm using Twisted from a while ago.

I need to do something, and wasn't able to find out how to do it.  Well, I
*did* find out, but it's a horrible hack, and actually depends on something
that may be a bug, so it's worth asking here about this :)

In a project I'm doing [0], I want to catch all problems (unhandled
exceptions), log them and show them in stderr after a bit massaging.  My
first approach was to hook me in sys.excepthook, and it worked on some
cases.  But I saw some cases where it didn't [1].

Specifically, when the exception was inside a deferred, it didn't call
excepthook.  Why not? I started to check the code, and found the following
snippet, at the end of Deferred._run_callbacks, in defer.py:

   if isinstance(self.result, failure.Failure):
       self.result.cleanFailure()
       if self._debugInfo is None:
           self._debugInfo = DebugInfo()
       self._debugInfo.failResult = self.result

>From this, I have two questions:

1. The rest of the code only instantiates and uses DebugInfo
   "if self.debug".  Why this part of the code doesn't care about the
   self.debug flag and always uses it?  Is it intended and DebugInfo()
   not being used for debug is a misname left there for historical
   reasons?  Should I open a bug about this?

2. I did the following (ugly) hack to achieve my results:

    import twisted.internet.defer

    # ugliest thing I saw in a *long* time
    class MyDebugInfo(object):

        def _error_happened(self, failure):
            msg = failure.getTraceback()
            _expose_exception(msg)

        failResult = property(fset=_error_happened)

    twisted.internet.defer.DebugInfo = MyDebugInfo

   Is there a better way to do this?  Actually, this is working correctly,
   but I don't know if it's the right way to do it, and don't want to
   depend of DebugInfo() being called always in this case.

Thank you very much!

[0] http://launchpad.net/magicicada
[1] http://bugs.launchpad.net/magicicada/+bug/665681

-- 
.    Facundo

Blog: http://www.taniquetil.com.ar/plog/
PyAr: http://www.python.org/ar/



From exarkun at twistedmatrix.com  Mon Oct 25 06:29:58 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 25 Oct 2010 12:29:58 -0000
Subject: [Twisted-Python] Catching all the exceptions in a Twisted
	program
In-Reply-To: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>
References: <AANLkTikOavTPwCFvPzLsA3finjA_JjxVxwBUOSwsNq+t@mail.gmail.com>
Message-ID: <20101025122958.1927.629458651.divmod.xquotient.68@localhost.localdomain>

On 10:57 am, facundobatista at gmail.com wrote:
>Hello!
>
>I've just subscribed to the list, but I'm using Twisted from a while 
>ago.
>
>I need to do something, and wasn't able to find out how to do it. 
>Well, I
>*did* find out, but it's a horrible hack, and actually depends on 
>something
>that may be a bug, so it's worth asking here about this :)
>
>In a project I'm doing [0], I want to catch all problems (unhandled
>exceptions), log them and show them in stderr after a bit massaging. 
>My
>first approach was to hook me in sys.excepthook, and it worked on some
>cases.  But I saw some cases where it didn't [1].

Right.  Instead of letting any exception from application code abort the 
process entirely, most places in Twisted catch and log unexpected 
exceptions.
>Specifically, when the exception was inside a deferred, it didn't call
>excepthook.

Another case where this will happen is if a protocol's dataReceived 
method raises an exception.  Or if a function passed to 
reactor.callLater raises an exception.
>Why not? I started to check the code, and found the following
>snippet, at the end of Deferred._run_callbacks, in defer.py:
>
>   if isinstance(self.result, failure.Failure):
>       self.result.cleanFailure()
>       if self._debugInfo is None:
>           self._debugInfo = DebugInfo()
>       self._debugInfo.failResult = self.result
>> From this, I have two questions:
>
>1. The rest of the code only instantiates and uses DebugInfo
>   "if self.debug".  Why this part of the code doesn't care about the
>   self.debug flag and always uses it?  Is it intended and DebugInfo()
>   not being used for debug is a misname left there for historical
>   reasons?  Should I open a bug about this?

It's correct as is.  DebugInfo is used for a few things.  Tracking 
unhandled errors is one of them, and it is always enabled, whether 
"Deferred debugging" is on or not.
>2. I did the following (ugly) hack to achieve my results:
>
>    import twisted.internet.defer
>
>    # ugliest thing I saw in a *long* time
>    class MyDebugInfo(object):
>
>        def _error_happened(self, failure):
>            msg = failure.getTraceback()
>            _expose_exception(msg)
>
>        failResult = property(fset=_error_happened)
>
>    twisted.internet.defer.DebugInfo = MyDebugInfo
>
>   Is there a better way to do this?  Actually, this is working 
>correctly,
>   but I don't know if it's the right way to do it, and don't want to
>   depend of DebugInfo() being called always in this case.

You should add a log observer that watches for errors.

http://twistedmatrix.com/documents/9.0.0/core/howto/logging.html

Jean-Paul
>Thank you very much!
>
>[0] http://launchpad.net/magicicada
>[1] http://bugs.launchpad.net/magicicada/+bug/665681
>
>--
>.� � Facundo
>
>Blog: http://www.taniquetil.com.ar/plog/
>PyAr: http://www.python.org/ar/
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From jeandaniel.browne at gmail.com  Sun Oct 24 18:21:59 2010
From: jeandaniel.browne at gmail.com (Jean-Daniel)
Date: Mon, 25 Oct 2010 02:21:59 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
References: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
Message-ID: <AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>

Hello,

At Pycon-fr, I presented a 20 min introduction to Twisted. Nothing
adventurous, the focus is on education:

- Twisted use and key concepts,
- Twisted's core: the reactor,
- example: a notification client (invent a client/server protocol, implement
it with Twisted's classes, then add notifications to the protocol and to the
implementation)

The example shows two versions of a notification API, a blocking one and a
better one based on events. What is an event based API and why it is more
adapted in some cases are two basic questions that I tried to make clear, as
this is not obvious to many new programmers.

The presentation slides are attached in Open Office impress format (has
animations) and in pdf (no animations, an export of the OO version). The
animations are not critical to the presentation but helps with clarity. The
accompanying speech is not available in english yet, sorry. The license is
creative commons.

I am interested in feedbacks and suggestions, if you have any,

Cheers,



On Fri, Oct 22, 2010 at 6:40 PM, Andrew Francis <andrewfr_ice at yahoo.com>wrote:

> Hi Lauren:
>
> Message: 1
> Date: Thu, 21 Oct 2010 23:47:56 +0200
> From: Laurens Van Houtven <lvh at laurensvh.be>
> Subject: [Twisted-Python] PyCon extreme Twisted talk!
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>    <AANLkTintU98WZc-u7yeRgvZLNDi5M4EsGYmHW1mhmzjE at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> >Greetings fellow Twisted aficionados!
>
>
> >So, Allen (dash) and I have decided that we were going to co-do the
> >Twisted Extreme talk at PyCon US 2011. Extreme talks are like talks,
> >except with less talking and more coding, so preferably something
> >actionable for an entire 45 minutes! That most likely means many steps:
> >start small, and then do something more complex.
>
> I am probably going to submit an extreme talk for PyCon 2011. I'll either
> refine the "Prototyping Go's Select" talk. Or discuss about my
> work-in-progress about join conditions. Twisted has a simple join in the
> form of a deferred list.
>
> Inspired by the Ray Hettinger Monocle post-talk discussion and writing
> examples with stackless.select(), I thought submitting another extreme talk
> that would revisit the lost world of Stackless Python/Twisted integration.
> As we discussed, why not a special reactor that incorporates the Stackless
> scheduler? Right now, a lot my examples use Twisted for sleep(). Creating a
> Stackless reactor would hopefully allow me to get rid of stuff like
>
> This way I can get rid of stuff like:
>
> l = task.LoopingCall(stackless.schedule)
> l.start(.001)
> stackless.tasklet(startTwisted)()
> stackless.tasklet(santa)(reindeers, elves)
> stackless.run()
>
> and eventually
>
> def tick(seconds):
>    tickCh = stackless.channel()
>    reactor.callLater(seconds, tickCh.send, None)
>    tickCh.receive()
>
> what is particularly exciting is talk in the pypy-dev list about
> incorporating Stackless with the JIT....
>
> Cheers,
> Andrew
>
> P.S - I have provided an example of using Stackless and Twisted to solve
> the Santa Claus Problem
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101025/e5ca1f23/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted-intro.pdf
Type: application/pdf
Size: 241021 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101025/e5ca1f23/attachment-0002.pdf>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: twisted-intro.odp
Type: application/vnd.oasis.opendocument.presentation
Size: 455198 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101025/e5ca1f23/attachment-0002.odp>

From lvh at laurensvh.be  Mon Oct 25 08:38:26 2010
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Mon, 25 Oct 2010 16:38:26 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>
References: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
	<AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>
Message-ID: <AANLkTikkZBD=kcFQMHikjsT=vW+wBJBD5cgARYNQLKyu@mail.gmail.com>

Hi Jean-Daniel!

Yes, I was at pycon-fr, and I saw your talk. It was very nice, thanks :-)

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101025/3a6b7e3c/attachment-0001.html>

From jeandaniel.browne at gmail.com  Tue Oct 26 03:50:17 2010
From: jeandaniel.browne at gmail.com (Jean-Daniel)
Date: Tue, 26 Oct 2010 11:50:17 +0200
Subject: [Twisted-Python] PyCon extreme Twisted talk!
In-Reply-To: <AANLkTikkZBD=kcFQMHikjsT=vW+wBJBD5cgARYNQLKyu@mail.gmail.com>
References: <430979.39538.qm@web120712.mail.ne1.yahoo.com>
	<AANLkTikMWM2Zq0iHZKtB2QehLAGNTEuA46suMqwn3scg@mail.gmail.com>
	<AANLkTikkZBD=kcFQMHikjsT=vW+wBJBD5cgARYNQLKyu@mail.gmail.com>
Message-ID: <AANLkTimvChH90s-BSY-tHFdT=Etpi6=6bVw50o7eX3uB@mail.gmail.com>

Cool,

The slides has gone through many improvements folllowing the presentation.

There was a lot of room for improvement. Too big for 20 minutes maybe, and
not enough preparation.




On Mon, Oct 25, 2010 at 4:38 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Hi Jean-Daniel!
>
> Yes, I was at pycon-fr, and I saw your talk. It was very nice, thanks :-)
>
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101026/9eb11ff4/attachment-0001.html>

From aphidia at hotmail.com  Wed Oct 27 21:08:58 2010
From: aphidia at hotmail.com (velociraptor Genjix)
Date: Thu, 28 Oct 2010 03:08:58 +0000
Subject: [Twisted-Python] PySide (Qt4) <-> Twisted reactor integration
Message-ID: <BLU148-W33423814918397016AFC3FB3440@phx.gbl>


Hey,
I've just checked out http://github.com/ghtdak/qtreactor and it works with PySide. I simply did:
try:    from PyQt4.QtCore import QSocketNotifier, QObject, SIGNAL, QTimer, QCoreApplication    from PyQt4.QtCore import QEventLoopexcept ImportError:    from PySide.QtCore import QSocketNotifier, QObject, SIGNAL, QTimer, QCoreApplication    from PySide.QtCore import QEventLoop
I believe there was an issue before about licenses since PyQt used GPL? Well PySide uses LGPL, so twisted should include this reactor loop only importing PySide :) It works.
Anyone wishing to confirm this can find several packages on their site:
http://developer.qt.nokia.com/wiki/PySideBinariesLinuxhttp://developer.qt.nokia.com/wiki/PySideBinariesWindows 		 	   		  


From ste at demaledetti.net  Thu Oct 28 10:52:16 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Thu, 28 Oct 2010 18:52:16 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CBC6617.3090904@demaledetti.net>
References: <4CBC6617.3090904@demaledetti.net>
Message-ID: <4CC9AA40.4090509@demaledetti.net>

Il 18/10/2010 17:21, Stefano Debenedetti ha scritto:
> Anyway, I ran Twisted tests on my installation after the patch I
> mentioned in my previous mail and I got the same results as before
> applying it so at least it seems it doesn't break any obvious stuff.


Sorry for replying to myself but for the record: the patch I sent
does break stuff (connections are sometimes closed before all data
has been sent) so don't use it.

The partially good news is that I managed to write a self-contained
and quite short example that can reproduce the exact same problem
I'm witnessing in my app. The bad news is that it does so only about
50% of the times but I thought I would share it while I keep on
trying to make it more reliable.

Please find attached one .sh file and one .py file, save somewhere
and make them executable. You will also need netcat (nc).

If you run the .sh file and after three seconds type in a short line
of text followed by the enter key, you should see the same line you
typed printed back many times on your terminal and quite a lot of
network activity going through the localhost interface for about a
minute. Don't redirect the .sh output to /dev/null, the problem
seems to occur only when the terminal application you run it in gets
to 100% CPU while it's printing data received by netcat. Hopefully
you have a multicore machine and this won't disrupt your desktop.

If you're lucky and nothing bad happens, after a while the .sh
script will terminate and all connections opened by it and the .py
file will be closed. Please remember to kill the three python
processes launched by the script before trying again.

If you're unlucky like I am, after a while all connections will be
closed except the one between netcat and one of the three servers
powered by the .py file.

That connection will be in this state according to netstat:

# netstat -np --inet 2> /dev/null | grep 127.0.0.1
tcp        0      0 127.0.0.1:8080          127.0.0.1:36815
ESTABLISHED 10042/python2.6
tcp        0      0 127.0.0.1:36815         127.0.0.1:8080
ESTABLISHED 10051/nc

If you then CTRL-C the .sh script so that netcat gets terminated,
you will get to the dreaded CLOSE_WAIT forever state:

# netstat -np --inet 2> /dev/null | grep 127.0.0.1
tcp        1      0 127.0.0.1:8080          127.0.0.1:36815
CLOSE_WAIT  10042/python2.6


Please note that even though the .py file is called three times and
launches a different server application each time, the only one I'm
interested in is the first one ("one"), the other two are just there
to simulate the third-party apps that my server is dealing with.
This is why servers "two" and "three" do seemingly silly stuff
including closing some of their connections at some point.

My goal is that no matter how and when the client and the "two" and
"three" servers close their connections to "one", the client
connection to "one" is always properly terminated and does never get
stuck in CLOSE_WAIT state.

Thanks for any feedback you might have,

ciao
ste



-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_producer.sh
Type: application/x-sh
Size: 260 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101028/31bdef34/attachment-0002.sh>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_producer.py
Type: text/x-python
Size: 4750 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20101028/31bdef34/attachment-0002.py>

From mazieres at gmx.com  Thu Oct 28 11:02:07 2010
From: mazieres at gmx.com (=?ISO-8859-1?Q?Antoine_Mazi=E8res?=)
Date: Thu, 28 Oct 2010 19:02:07 +0200
Subject: [Twisted-Python] ppa broken ?
Message-ID: <4CC9AC8F.3040509@gmx.com>

Hi all,

It seems that the ppa is broken ?

$ uname -a
Linux 2.6.35-22-generic #35-Ubuntu SMP Sat Oct 16 20:36:48 UTC 2010 i686 
GNU/Linux

$ sudo apt-get update
[...]
W: Failed to fetch 
http://ppa.launchpad.net/twisted-dev/ppa/ubuntu/dists/maverick/main/source/Sources.gz  
404  Not Found

W: Failed to fetch 
http://ppa.launchpad.net/twisted-dev/ppa/ubuntu/dists/maverick/main/binary-i386/Packages.gz  
404  Not Found

E: Some index files failed to download, they have been ignored, or old 
ones used instead.


is it due to a failure of launchpad servers maybe, or you don't give 
anymore support to this feature ?

All best,

Antoine
http://ant1.cc/

(my first message here, just to say: twisted is awesome! thanks to all 
of you!)



From exarkun at twistedmatrix.com  Fri Oct 29 07:56:07 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 29 Oct 2010 13:56:07 -0000
Subject: [Twisted-Python] ppa broken ?
In-Reply-To: <4CC9AC8F.3040509@gmx.com>
References: <4CC9AC8F.3040509@gmx.com>
Message-ID: <20101029135607.2040.396699544.divmod.xquotient.85@localhost.localdomain>

On 28 Oct, 05:02 pm, mazieres at gmx.com wrote:
>Hi all,
>
>It seems that the ppa is broken ?
>
>$ uname -a
>Linux 2.6.35-22-generic #35-Ubuntu SMP Sat Oct 16 20:36:48 UTC 2010 
>i686
>GNU/Linux
>
>$ sudo apt-get update
>[...]
>W: Failed to fetch
>http://ppa.launchpad.net/twisted- 
>dev/ppa/ubuntu/dists/maverick/main/source/Sources.gz
>404  Not Found
>
>W: Failed to fetch
>http://ppa.launchpad.net/twisted- 
>dev/ppa/ubuntu/dists/maverick/main/binary-i386/Packages.gz
>404  Not Found
>
>E: Some index files failed to download, they have been ignored, or old
>ones used instead.
>
>
>is it due to a failure of launchpad servers maybe, or you don't give
>anymore support to this feature ?

These appear to be URLs for Maverick packages.  Looking at Launchpad, I 
only see Hardy and Lucid packages in the PPA.  So, I think the PPA is 
working, but you're asking it for packages for an unsupported platform.
>All best,
>
>Antoine
>http://ant1.cc/
>
>(my first message here, just to say: twisted is awesome! thanks to all
>of you!)

Thanks! :)

Jean-Paul



From exarkun at twistedmatrix.com  Fri Oct 29 09:22:56 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 29 Oct 2010 15:22:56 -0000
Subject: [Twisted-Python] connectionLost never reached after
	calling	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CC9AA40.4090509@demaledetti.net>
References: <4CBC6617.3090904@demaledetti.net>
	<4CC9AA40.4090509@demaledetti.net>
Message-ID: <20101029152256.2040.417418391.divmod.xquotient.257@localhost.localdomain>

On 28 Oct, 04:52 pm, ste at demaledetti.net wrote:
>Il 18/10/2010 17:21, Stefano Debenedetti ha scritto:
>>Anyway, I ran Twisted tests on my installation after the patch I
>>mentioned in my previous mail and I got the same results as before
>>applying it so at least it seems it doesn't break any obvious stuff.
>
>
>Sorry for replying to myself but for the record: the patch I sent
>does break stuff (connections are sometimes closed before all data
>has been sent) so don't use it.
>
>The partially good news is that I managed to write a self-contained
>and quite short example that can reproduce the exact same problem
>I'm witnessing in my app. The bad news is that it does so only about
>50% of the times but I thought I would share it while I keep on
>trying to make it more reliable.

Thanks.  Frequent sharing can definitely be more productive than keeping 
everything in secret until it's "done". :)
>Please find attached one .sh file and one .py file, save somewhere
>and make them executable. You will also need netcat (nc).
>
>If you run the .sh file and after three seconds type in a short line
>of text followed by the enter key, you should see the same line you
>typed printed back many times on your terminal and quite a lot of
>network activity going through the localhost interface for about a
>minute. Don't redirect the .sh output to /dev/null, the problem
>seems to occur only when the terminal application you run it in gets
>to 100% CPU while it's printing data received by netcat. Hopefully
>you have a multicore machine and this won't disrupt your desktop.
>
>If you're lucky and nothing bad happens, after a while the .sh
>script will terminate and all connections opened by it and the .py
>file will be closed. Please remember to kill the three python
>processes launched by the script before trying again.
>
>If you're unlucky like I am, after a while all connections will be
>closed except the one between netcat and one of the three servers
>powered by the .py file.
>
>That connection will be in this state according to netstat:
>
># netstat -np --inet 2> /dev/null | grep 127.0.0.1
>tcp        0      0 127.0.0.1:8080          127.0.0.1:36815
>ESTABLISHED 10042/python2.6
>tcp        0      0 127.0.0.1:36815         127.0.0.1:8080
>ESTABLISHED 10051/nc
>
>If you then CTRL-C the .sh script so that netcat gets terminated,
>you will get to the dreaded CLOSE_WAIT forever state:
>
># netstat -np --inet 2> /dev/null | grep 127.0.0.1
>tcp        1      0 127.0.0.1:8080          127.0.0.1:36815
>CLOSE_WAIT  10042/python2.6
>
>
>Please note that even though the .py file is called three times and
>launches a different server application each time, the only one I'm
>interested in is the first one ("one"), the other two are just there
>to simulate the third-party apps that my server is dealing with.
>This is why servers "two" and "three" do seemingly silly stuff
>including closing some of their connections at some point.
>
>My goal is that no matter how and when the client and the "two" and
>"three" servers close their connections to "one", the client
>connection to "one" is always properly terminated and does never get
>stuck in CLOSE_WAIT state.
>
>Thanks for any feedback you might have,

After a few runs, I managed to reproduce the problem.  I instrumented 
the reactor with some extra logging and test_producer.py with a manhole 
server.
The sequence of events appears to be something like this:

  OneA has a producer of OneE
  OneA has a consumer of OneB
  At some point OneB gives up and tells OneA to stopProducing 
(loseConnection)
  OneA.loseConnection stops the reactor from reading OneA and starts it 
writing
  OneA.doWrite happens
    it finds the send buffer empty
    it finds a registered producer (OneE) and resumes it
  OneE never produces any more bytes
  OneE loses its connection at some point and unregisters itself from 
OneA
  OneA takes note that it has no more producer, but does nothing about it

So the bug is likely that FileDescriptor.unregisterProducer doesn't do 
anything special when disconnecting=True.

You should be able to reproduce this very simply by setting up a 
transport-producer/consumer pair, calling loseConnection on the 
transport, then unregistering the producer.

This all sounds somewhat familiar, but I don't see an existing ticket 
for it, so maybe that's my imagination.

Jean-Paul



From glyph at twistedmatrix.com  Fri Oct 29 13:10:19 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 29 Oct 2010 15:10:19 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <20101029152256.2040.417418391.divmod.xquotient.257@localhost.localdomain>
References: <4CBC6617.3090904@demaledetti.net>
	<4CC9AA40.4090509@demaledetti.net>
	<20101029152256.2040.417418391.divmod.xquotient.257@localhost.localdomain>
Message-ID: <05FC7F39-017E-4074-B364-2FE9F95459FB@twistedmatrix.com>


On Oct 29, 2010, at 11:22 AM, exarkun at twistedmatrix.com wrote:

> This all sounds somewhat familiar, but I don't see an existing ticket 
> for it, so maybe that's my imagination.

... and it bears mentioning that when you can reproduce this broken behavior with a minimal example, a ticket would be appreciated.

Thanks for tracking it down!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101029/dd5ef222/attachment-0001.html>

From ste at demaledetti.net  Sat Oct 30 10:48:45 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sat, 30 Oct 2010 18:48:45 +0200
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
Message-ID: <4CCC4C6D.6020905@demaledetti.net>

Hello Jean-Paul, thanks for tracking this down, you rock!

I promise that when I'll have payed all by debts I'll buy one of
those posters of Exarkun to hang on my wall!

JP wrote:
> After a few runs, I managed to reproduce the problem.  I instrumented the reactor with some extra logging and test_producer.py with a manhole server.
> The sequence of events appears to be something like this:
> 
>  OneA has a producer of OneE
>  OneA has a consumer of OneB
>  At some point OneB gives up and tells OneA to stopProducing (loseConnection)
>  OneA.loseConnection stops the reactor from reading OneA and starts it writing
>  OneA.doWrite happens
>    it finds the send buffer empty
>    it finds a registered producer (OneE) and resumes it
>  OneE never produces any more bytes
>  OneE loses its connection at some point and unregisters itself from OneA
>  OneA takes note that it has no more producer, but does nothing about it
> 
> So the bug is likely that FileDescriptor.unregisterProducer doesn't do anything special when disconnecting=True.
> 
> You should be able to reproduce this very simply by setting up a transport-producer/consumer pair, calling loseConnection on the transport, then unregistering the producer.
> 
> This all sounds somewhat familiar, but I don't see an existing ticket for it, so maybe that's my imagination.
> 
> Jean-Paul


Following your indications I attached a minimal example to a new ticket:

http://twistedmatrix.com/trac/ticket/4719

Some additional info:

* problem occurs only if more than 64KB of data are written to the
transport before its consumer calls stopProducing on it

* problem occurs only if some time passes before its producer
unregisters itself from the transport

Thanks again for your help! :)
ste





From itamar at itamarst.org  Sat Oct 30 11:00:40 2010
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 30 Oct 2010 13:00:40 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCC4C6D.6020905@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
Message-ID: <1288458040.1648.1.camel@blake>

On Sat, 2010-10-30 at 18:48 +0200, Stefano Debenedetti wrote:
> Hello Jean-Paul, thanks for tracking this down, you rock!
> 
> I promise that when I'll have payed all by debts I'll buy one of
> those posters of Exarkun to hang on my wall!

You can also get figurines:
http://www.toycutter.com/2009/02/exar-kun-three-eye-monster-munnys.html




From werner at thieprojects.ch  Sat Oct 30 12:42:13 2010
From: werner at thieprojects.ch (Werner Thie)
Date: Sat, 30 Oct 2010 08:42:13 -1000
Subject: [Twisted-Python] kqreactor implemented with select.kqueue for
	Python26 up
Message-ID: <4CCC6705.8070005@thieprojects.ch>

Hi all

Fiddling with kqreactor on the Mac (SnowLeopard) I came across the docs

http://docs.python.org/library/select.html#kqueue-objects

May I ask the list:

- is somebody working on an implementation of kqreactor with select.kqueue

- is implementing kqreactor for Python26 up with select.kqueue() a 
worthwhile undertaking

I only had the best of experiences with FreeBSD for our production 
servers running with the PyKQueue 1.4 port kqreactor so far, but using 
kqreactor with a port when a standard implementatino is available seemed 
to me a bit odd.

Mahalo, Werner



From glyph at twistedmatrix.com  Sat Oct 30 13:07:48 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 30 Oct 2010 15:07:48 -0400
Subject: [Twisted-Python] kqreactor implemented with select.kqueue for
	Python26 up
In-Reply-To: <4CCC6705.8070005@thieprojects.ch>
References: <4CCC6705.8070005@thieprojects.ch>
Message-ID: <44881937-B07C-4E15-A93B-B927FA8BFC6B@twistedmatrix.com>

On Oct 30, 2010, at 2:42 PM, Werner Thie wrote:

> Hi all
> 
> Fiddling with kqreactor on the Mac (SnowLeopard) I came across the docs
> 
> http://docs.python.org/library/select.html#kqueue-objects
> 
> May I ask the list:
> 
> - is somebody working on an implementation of kqreactor with select.kqueue
> 
> - is implementing kqreactor for Python26 up with select.kqueue() a 
> worthwhile undertaking
> 
> I only had the best of experiences with FreeBSD for our production 
> servers running with the PyKQueue 1.4 port kqreactor so far, but using 
> kqreactor with a port when a standard implementatino is available seemed 
> to me a bit odd.
> 
> Mahalo, Werner

There is periodically work done on this ticket: <http://tm.tl/1918>

Please feel free to attach any contributions that you have there.




From exarkun at twistedmatrix.com  Sat Oct 30 18:51:46 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 31 Oct 2010 00:51:46 -0000
Subject: [Twisted-Python] Immediate removal of cfreactor
Message-ID: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>

Hello all,

As reported in <http://twistedmatrix.com/trac/ticket/4652>, some 
problems have arisen with cfreactor.

First, recent versions of Pyrex reject the Pyrex source for the support 
modules.  This makes future development on cfreactor difficult (although 
Glyph's branch does resolve this problem - or at least appears to).

Second, the C source files do not build with clang.  This seems likely 
to become more important on future versions of OS X (the only platform 
where this code matters).  Even OS X 10.6 makes clang easily available 
(according to an Ars Technica article, "Clang is the recommended 
compiler, and the focus of all of Apple's future efforts." 
<http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/9>)

Finally, when the cfreactor build fails, distutils prematurely exits, 
preventing the rest of the build from completing.  This point makes this 
a serious problem for Twisted as a whole, rather than an obscure 
platform quirk that can be ignored without wide-ranging consequences.

Apple has announced OS X 10.7 for summer 2011.  Presumably at some point 
prior to this they will freeze on a version of Twisted to package.  The 
best outcome for Twisted can probably be attained by ensuring this is a 
version of Twisted which does not have the build issues reported in 
#4652.

Rather than leaving this to chance, I propose that we remove cfreactor 
and all supporting code ourselves, immediately (ie, in 10.2 - hi therve, 
go faster next time ;).

I think the relatively small userbase of cfreactor (I don't know of any 
projects using it, nor does Google codesearch) and the fact that the 
version of cfreactor in trunk segfaults partway through running the test 
suite, combined with the potentially time-sensitive nature of this fix, 
merits an exception to the normal backwards policy.

Rather than removing it, we could fix it, but the fact that no one seems 
to be using it makes me think that no one with the expertise and 
interest will step up to so.

If we're going to do this, it would be good to do it in the next few 
days (say, by Tuesday) so as not to unduly further delay the 10.2 
release process.

Thoughts?

Jean-Paul



From exarkun at twistedmatrix.com  Sat Oct 30 22:05:33 2010
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 31 Oct 2010 04:05:33 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1288497933.72.1540430629@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101031/e7b6a25e/attachment.html>

From glyph at twistedmatrix.com  Sat Oct 30 22:05:39 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 31 Oct 2010 00:05:39 -0400
Subject: [Twisted-Python] Immediate removal of cfreactor
In-Reply-To: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
References: <20101031005146.2040.1960149515.divmod.xquotient.414@localhost.localdomain>
Message-ID: <8F1B8735-1E5E-436C-9324-10D123683780@twistedmatrix.com>


On Oct 30, 2010, at 8:51 PM, exarkun at twistedmatrix.com wrote:

> Rather than removing it, we could fix it, but the fact that no one seems 
> to be using it makes me think that no one with the expertise and 
> interest will step up to so.

I don't actually know enough about the APIs in question to be sure, but my understanding is that the 'cfsupport' pyrex mess was added to paper over some holes in PyObjC, which have (long?) since been filled.  At least, I can import all the functions from 'CFNetwork' that it looks like we would need (based on the information here <http://bit.ly/bQWC3J>).

If someone wanted to do a real CFNetwork-based reactor, I think this means we wouldn't need to maintain any of our own C code.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101031/edb81d1e/attachment.html>

From ste at demaledetti.net  Sun Oct 31 11:36:27 2010
From: ste at demaledetti.net (Stefano Debenedetti)
Date: Sun, 31 Oct 2010 18:36:27 +0100
Subject: [Twisted-Python] connectionLost never reached after calling
 loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCC4C6D.6020905@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
Message-ID: <4CCDA91B.9060807@demaledetti.net>

Il 30/10/2010 18:48, Stefano Debenedetti ha scritto:
> http://twistedmatrix.com/trac/ticket/4719

I have attached a 2 lines patch that seems to fix the issue.

The patch also contains a 50 lines unit test ;)

I hope this makes it on time for the 10.2.0 release.

BTW there's a small error here:

http://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode

$ svn diff -u
Subcommand 'diff' doesn't accept option '-u [--show-updates]'
Type 'svn help diff' for usage.

So the correct command for generating a patch should be documented as:

svn diff > my-twisted-patch.patch

thanks ciao
ste



From glyph at twistedmatrix.com  Sun Oct 31 13:57:31 2010
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 31 Oct 2010 15:57:31 -0400
Subject: [Twisted-Python] connectionLost never reached after calling
	loseConnection: stuck in CLOSE_WAIT forever
In-Reply-To: <4CCDA91B.9060807@demaledetti.net>
References: <4CCC4C6D.6020905@demaledetti.net>
	<4CCDA91B.9060807@demaledetti.net>
Message-ID: <485C303F-7C1C-4302-8A53-720660B0CB0A@twistedmatrix.com>


On Oct 31, 2010, at 1:36 PM, Stefano Debenedetti wrote:

> Il 30/10/2010 18:48, Stefano Debenedetti ha scritto:
>> http://twistedmatrix.com/trac/ticket/4719
> 
> I have attached a 2 lines patch that seems to fix the issue.
> 
> The patch also contains a 50 lines unit test ;)

Stefano, this looks like a great contribution: a serious bug fix in a bit of core functionality, with a test.  Thanks so much!

I'll try to do a complete review soon, but my immediate impression is that test_disconnectEvent needs a better docstring.  The word 'correctly' in a docstring is always a clue that the writer gave up and stopped trying to describe what 'correct' behavior is :).

if you could try to rephrase it as "When a transport is (...) and then (...), (...) should be called on (...)".

(I will have a more concrete suggestion, with fewer "..."s when I have time to go through the ticket history and review the patch in detail.)

> I hope this makes it on time for the 10.2.0 release.
> 
> BTW there's a small error here:
> 
> http://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
> 
> $ svn diff -u
> Subcommand 'diff' doesn't accept option '-u [--show-updates]'
> Type 'svn help diff' for usage.
> 
> So the correct command for generating a patch should be documented as:
> 
> svn diff > my-twisted-patch.patch
> 
> thanks ciao
> ste
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20101031/c4c3b729/attachment-0001.html>

From aphidia at hotmail.com  Sun Oct 31 18:00:13 2010
From: aphidia at hotmail.com (velociraptor Genjix)
Date: Mon, 1 Nov 2010 00:00:13 +0000
Subject: [Twisted-Python] XDCC SEND from IRCClient
In-Reply-To: <485C303F-7C1C-4302-8A53-720660B0CB0A@twistedmatrix.com>
References: <4CCC4C6D.6020905@demaledetti.net>, <4CCDA91B.9060807@demaledetti.net>,
	<485C303F-7C1C-4302-8A53-720660B0CB0A@twistedmatrix.com>
Message-ID: <BLU148-W200EF09487D4C100D349CCB3480@phx.gbl>


Hey,
Inside an twisted.words.protocol.irc.IRCClient class I want to download via XDCC and then have a callback after that's finished. Sadly the documentation is lacking and I'm not sure what is what.
If I override IRCClient.dccDoSend(self, user, address, port, filename, size, data) then it enters when I initiate an XDCC SEND request. But how do I start the download?
1- How can I start downloading the file?2- Can I receive an array of the bytes instead of saving a file?3- How can I be notified when the download is complete?
Thanks 		 	   		  


