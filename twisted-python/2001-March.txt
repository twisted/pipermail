From carmstro at dynup.net  Sun Mar  4 13:12:33 2001
From: carmstro at dynup.net (Chris Armstrong)
Date: Sun, 4 Mar 2001 13:12:33 -0500
Subject: [Twisted-Python] Linking between twisted.web resources.
Message-ID: <20010304131232.A3020@Fookidla.org>

I've come to the conclusion that linking in twisted.web is way too complicated.
Here's an idea: how about keeping track of certain resource's paths so
resources under it can link back to it? 

I just typed the following code as I wrote the email, so there are probably
minor bugs, but you should get the idea.

class MySite(Interface):
	def __init__(self):
		Interface.__init__(self)
		self.putChild("FooBar", FooBar())
		registerPath() #imaginary function
		
	def render(self, request):
		return self.webpage(request, 'MySite', 
		'''
		Hi there! welcome to my neato site!<br>
		<a href="FooBar">Go here!</a>
		'''
		)

class FooBar(Interface):
	def __init__(self):
		Interface.__init__(self)
	def render(self, request)
		return self.webpage(request, 'FooBar',
		'''
		Hi! This is FooBar. Would you like to go back to my
		<a href="%s">Main Site?</a>
		''' % LinkMe('MySite')
		)

So, we have registerPath() and LinkMe(). I'm sure it won't be
as simple as this, but I do think it should be possible. The main problem
we have is handling multiple instances of MySite. During instantiation of
MySite, when registerPath() is called, some external data source will be 
updated with MySite, the path that it's instantiated to, and some sort of
ID. Then, somehow, when we want to link to this, we use the LinkMe function.
The paramaters will probably need to be the ID and the name of the resource.
With this LinkMe design, Resources of completely unrelated sections of
the site (ie, resources not under MySite) will be able to link to it
without even knowing the path.

I know there are many many holes in this idea (for instance, how will resources
that want to LinkMe get the ID of the resources to be linked to?), but I 
really think something like this is needed. Any thoughts?

-- 
Chris Armstrong   http://twistedmatrix.com/~carmstro     carmstro at dynup.net
There is a 90% chance that this message was written when the author's been
awake longer than he should have. Please disregard any senseless drivel.




From Norbert.Klamann at klamann-software.de  Wed Mar 14 03:49:00 2001
From: Norbert.Klamann at klamann-software.de (Norbert Klamann)
Date: Wed, 14 Mar 2001 09:49:00 +0100
Subject: [Twisted-Python] some demo scripts
Message-ID: <3AAF3E8C.23030.A99C17@localhost>

Hello all,
i started playing with twisted python 0.7.2  and it looks very interesting.
I tried to go along the 'philosophical tutorial to Twisted Python
' and created 4 little python-scripts on the way which initialize and use the 
minimalist telnet- and web-server. They run under windows nt and python 2 but 
should be portable.

Under Windows NT a start of the servers gives an attribute error because 
os.getgid() is nit implemented. I suppressed this message under NT :

line 975 sqq on \twisted\net.py could read :
                except:
                    if os.name == 'nt':
                        pass
                    else :
                        traceback.print_exc(file=sys.stdout)
                        print 'setuid/gid failed'

Enjoy

Norbert Klamann
Norbert Klamann
++
++ Klamann Software & Beratung GmbH
++ Franz-Marc-Str.174
++ D-50374 Erftstadt
++ Tel.: 02235 / 985272 ++ Fax: 02235 / 985273
++ Mobil : 0172 / 2797723
++ PGP Fingerprint :
++ 05CC  4362  E765  51F1  38D9  C43F  D907  B4D8  7873  3454

-------------- next part --------------
from twisted import threadable
threadable.init(0)
from cPickle import load 
selector = load(open('twistd_web.spl'))
from twisted import web
myTest = web.Test()
selector.servers[0].root.putChild('test',myTest)
selector.run()
from cPickle import dump
dump(selector)


-------------- next part --------------
from twisted import threadable
threadable.init(0)
from cPickle import load 
selector = load(open('twistd.spl'))
selector.run()
-------------- next part --------------
from twisted import threadable
threadable.init(0)
from twisted import net
selector = net.Selector()
from twisted import web
server = web.Server(8181, selector)
documentRoot = web.File('.')
server.setRoot(documentRoot)
server.startUp()
from cPickle import dump
dump(selector, open('twistd_web.spl','wb'))
-------------- next part --------------
from twisted import threadable
threadable.init(0)
from twisted import net
selector = net.Selector()
from twisted import telnet
server = telnet.Server(4040, selector)
from cPickle import dump
dump(selector, open('twistd.spl','wb'))

From glyph at twistedmatrix.com  Wed Mar 14 12:11:10 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 14 Mar 2001 11:11:10 -0600 (CST)
Subject: [Twisted-Python] some demo scripts
In-Reply-To: <3AAF3E8C.23030.A99C17@localhost>
Message-ID: <Pine.LNX.4.21.0103141107280.20605-100000@zaibach.twistedmatrix.com>

Hello Norbert,

The scripts you wrote are mostly like the ones found in bin/ --
mkwebserver and mktelnetserver.  Have a look at them; there are a number
of options they offer.  I'm sorry these weren't covered in the tutorial,
but I haven't had that much time to work on documentation.

Thank you much for your interest, though!  Those log messages about setuid
and setgid will be supressed under NT in the future.

On Wed, 14 Mar 2001, Norbert Klamann wrote:

> Hello all,
> i started playing with twisted python 0.7.2  and it looks very interesting.
> I tried to go along the 'philosophical tutorial to Twisted Python
> ' and created 4 little python-scripts on the way which initialize and use the 
> minimalist telnet- and web-server. They run under windows nt and python 2 but 
> should be portable.




                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/






From return at trafficmagnet.net  Sat Mar 17 17:55:42 2001
From: return at trafficmagnet.net (Christine Hall)
Date: Sun, 18 Mar 2001 06:55:42 +0800
Subject: [Twisted-Python] WWW.TWISTEDMATRIX.COM
Message-ID: <200103172255.GAA20474@ns2.trafficmagnet.net>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20010318/c8696d71/attachment.html 

From nick at zork.net  Sun Mar 18 20:14:47 2001
From: nick at zork.net (Nick Moffitt)
Date: Sun, 18 Mar 2001 17:14:47 -0800
Subject: [Twisted-Python] Inform
Message-ID: <20010318171447.D8443@zork.net>

Is there any push to port the inform library over to twisted-python in
its entirety?  It strikes me that the current "ruins" demo is lacking
in many features simply because the library is so spare (for instance,
"get all" is not implemented).

I'm interested in this largely because Inform is non-free software,
and I'd like to get back into writing interactive fiction.  Inform
itself was never more than just a simple bytecode compiler and object
system, while the library was its true benefit.  

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From glyph at twistedmatrix.com  Mon Mar 19 10:28:11 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Mar 2001 09:28:11 -0600 (CST)
Subject: [Twisted-Python] Inform
In-Reply-To: <20010318171447.D8443@zork.net>
Message-ID: <Pine.LNX.4.21.0103190924160.21304-100000@zaibach.twistedmatrix.com>

On Sun, 18 Mar 2001, Nick Moffitt wrote:

> Is there any push to port the inform library over to twisted-python in
> its entirety?  It strikes me that the current "ruins" demo is lacking
> in many features simply because the library is so spare (for instance,
> "get all" is not implemented).

Currently there is no such push, because Inform's library is conceptually
single-player only (this is evidenced by the amount of global state that
it maintains, how the player is treated as a facet of the world rather
than just another object, etc).

However, if you're interested in seeing inform-like functionality
implemented, we'd love to integrate such a thing.  Even better if you can
make it more multi-player aware.

> I'm interested in this largely because Inform is non-free software,
> and I'd like to get back into writing interactive fiction.  Inform
> itself was never more than just a simple bytecode compiler and object
> system, while the library was its true benefit.

We do have plans for a twisted reality standard library, but they are
haphazard at this point.  Look in twisted/library/ for what we've done so
far.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/






From nick at zork.net  Tue Mar 20 03:47:48 2001
From: nick at zork.net (Nick Moffitt)
Date: Tue, 20 Mar 2001 00:47:48 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103190924160.21304-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Mon, Mar 19, 2001 at 09:28:11AM -0600
References: <20010318171447.D8443@zork.net> <Pine.LNX.4.21.0103190924160.21304-100000@zaibach.twistedmatrix.com>
Message-ID: <20010320004747.F5052@zork.net>

begin  Glyph Lefkowitz quotation:
> Currently there is no such push, because Inform's library is
> conceptually single-player only (this is evidenced by the amount of
> global state that it maintains, how the player is treated as a facet
> of the world rather than just another object, etc).

	Ever played with the Floyd stuff?  Some folks set up a MUD
with inform once, and they just removed one line from parserm.h.  
Have a look for multifloyd.h in the informlib contrib section of
if-archive.

	I don't think the player is as "integrated" as you may think.

> However, if you're interested in seeing inform-like functionality
> implemented, we'd love to integrate such a thing.  Even better if
> you can make it more multi-player aware.

	Well, I was just thinking that it would certainly help
adoption if the system behaved a lot like Inform.  I'm thinking mostly
of:

	The way the objects are created, and the way the code flows (I
think that a constructor for a game object should set the name of the
object as well as the parent (location), just the way that the "Object
-> ..." line does in inform).

	The system should use pre- and post-action rules in a
dictionary inside an object.  Perhaps we'd have before and after
dictionaries, with names of actions as keys, and functions as values.

	The parser should just be ported over, or at least enhanced to
the point where it supports everything that the informlib parser does.
The code uses a lot of gotos and is pretty gory, but I think that
could be easily taken care of.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From glyph at twistedmatrix.com  Tue Mar 20 11:07:23 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Mar 2001 10:07:23 -0600 (CST)
Subject: [Twisted-Python] Inform
In-Reply-To: <20010320004747.F5052@zork.net>
Message-ID: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>

On Tue, 20 Mar 2001, Nick Moffitt wrote:

> 	Ever played with the Floyd stuff?  Some folks set up a MUD
> with inform once, and they just removed one line from parserm.h.  
> Have a look for multifloyd.h in the informlib contrib section of
> if-archive.
> 
> 	I don't think the player is as "integrated" as you may think.

No, and that sounds interesting.

> 	Well, I was just thinking that it would certainly help
> adoption if the system behaved a lot like Inform.  I'm thinking mostly
> of:
> 
> 	The way the objects are created, and the way the code flows (I
> think that a constructor for a game object should set the name of the
> object as well as the parent (location), just the way that the "Object
> -> ..." line does in inform).

Why?  This adds complexity and I don't understand how it creates any
value.  Many objects do not have a "parent". Thing("foo")(location=bar)
and Thing("foo",location=bar) seem pretty much equivalent, to me.

> 	The system should use pre- and post-action rules in a
> dictionary inside an object.  Perhaps we'd have before and after
> dictionaries, with names of actions as keys, and functions as values.

I intentionally avoided the pre/post action rules in favor of verbs
because they're harder to make sense of in a "real" programming language;
inform's object system was weak in some ways and I felt that was one of
them.

If you want something similiar you can always use twisted.hook but I think
that for most cases such an idea is inadvisable.  Is there something I'm
missing about the pre/post stuff that adds functionality which is not
available otherwise, or makes something common easy?

> 	The parser should just be ported over, or at least enhanced to
> the point where it supports everything that the informlib parser does.
> The code uses a lot of gotos and is pretty gory, but I think that
> could be easily taken care of.

If you think it's easy, does that mean you volunteer? :)

I do agree that the current parser is in sorry shape; however, making it
inform-style might make the interface (to the parser) more complicated
both for users and developers.  However, to automatically parse 90% of
common verbs into "actions" with a higher-level interface makes sense to
me; I've already started doing something like that in CVS, and there are
emerging conventions about how to represent that.

In the meanwhile, though, patches to make the current parser less heinous,
or emulate Inform style, will be graciously accepted.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/






From nick at zork.net  Tue Mar 20 12:58:00 2001
From: nick at zork.net (Nick Moffitt)
Date: Tue, 20 Mar 2001 09:58:00 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Tue, Mar 20, 2001 at 10:07:23AM -0600
References: <20010320004747.F5052@zork.net> <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>
Message-ID: <20010320095800.J5052@zork.net>

begin  Glyph Lefkowitz quotation:
> Why?  This adds complexity and I don't understand how it creates any
> value.  Many objects do not have a "parent".
> Thing("foo")(location=bar) and Thing("foo",location=bar) seem pretty
> much equivalent, to me.

	very well.

> If you want something similiar you can always use twisted.hook but I
> think that for most cases such an idea is inadvisable.  Is there
> something I'm missing about the pre/post stuff that adds
> functionality which is not available otherwise, or makes something
> common easy?

	Aha, I had not seen the hooks yet.

> I do agree that the current parser is in sorry shape; however,
> making it inform-style might make the interface (to the parser) more
> complicated both for users and developers.  

	Hmmm.  Being able to handle more sentence forms would be nice,
though.

> However, to automatically parse 90% of common verbs into "actions"
> with a higher-level interface makes sense to me; I've already
> started doing something like that in CVS, and there are emerging
> conventions about how to represent that.

	Right.  That's mostly what I was thinking of, and of course
having default functions take place for the "Category 1 and 2" actions
from the inform manual.  If you're on this, then I suppose all is well
and twisted.

	I'm mostly playing with the ruins demo, and trying to figure
out where it fails.  Being able to take scenery, and the mushroom's
picking actions not working seem like big ones at the moment.  I
realize that the ruins demo is probably not a priority, but I'd like
to see all of the sample games (alice, ruins, etc) re-implemented as a
proof of concept.

	If anything needs my volunteering, then I guess it wuold be
polishing up the samples.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From nick at zork.net  Tue Mar 20 13:13:53 2001
From: nick at zork.net (Nick Moffitt)
Date: Tue, 20 Mar 2001 10:13:53 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Tue, Mar 20, 2001 at 10:07:23AM -0600
References: <20010320004747.F5052@zork.net> <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>
Message-ID: <20010320101353.L5052@zork.net>

begin  Glyph Lefkowitz quotation:
> However, to automatically parse 90% of common verbs into "actions"
> with a higher-level interface makes sense to me; I've already
> started doing something like that in CVS, and there are emerging
> conventions about how to represent that.

For reference:

ftp://ftp.gmd.de/if-archive/infocom/compilers/inform6/library/contributions/Verbs.htm

That's got a pretty good list of actions, their associated verbs, and
the format of objects and predicates.  There are some errors, but it's
got a pretty good list.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From nick at zork.net  Sat Mar 24 13:37:18 2001
From: nick at zork.net (Nick Moffitt)
Date: Sat, 24 Mar 2001 10:37:18 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Tue, Mar 20, 2001 at 10:07:23AM -0600
References: <20010320004747.F5052@zork.net> <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>
Message-ID: <20010324103718.W5052@zork.net>

begin  Glyph Lefkowitz quotation:
> I intentionally avoided the pre/post action rules in favor of verbs
> because they're harder to make sense of in a "real" programming
> language; inform's object system was weak in some ways and I felt
> that was one of them.

	Right, I see now.  You'd much rather just have the verbs
implemented in the abstract class direct object, and overload them as
necessary.  Yeah, using a real object system can help.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From glyph at twistedmatrix.com  Mon Mar 26 18:13:39 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Mar 2001 17:13:39 -0600 (CST)
Subject: [Twisted-Python] ANNOUNCE: TwistedPython 0.8.0a released
Message-ID: <Pine.LNX.4.21.0103261711150.19418-100000@zaibach.twistedmatrix.com>

0.8.0a is a feature enhancement release focusing on twisted reality.  
Numerous bugfixes and more documentation are sprinkled throughout the
codebase, however, so download and enjoy!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/





From carmstro at dynup.net  Sun Mar  4 11:12:33 2001
From: carmstro at dynup.net (Chris Armstrong)
Date: Sun, 4 Mar 2001 13:12:33 -0500
Subject: [Twisted-Python] Linking between twisted.web resources.
Message-ID: <20010304131232.A3020@Fookidla.org>

I've come to the conclusion that linking in twisted.web is way too complicated.
Here's an idea: how about keeping track of certain resource's paths so
resources under it can link back to it? 

I just typed the following code as I wrote the email, so there are probably
minor bugs, but you should get the idea.

class MySite(Interface):
	def __init__(self):
		Interface.__init__(self)
		self.putChild("FooBar", FooBar())
		registerPath() #imaginary function
		
	def render(self, request):
		return self.webpage(request, 'MySite', 
		'''
		Hi there! welcome to my neato site!<br>
		<a href="FooBar">Go here!</a>
		'''
		)

class FooBar(Interface):
	def __init__(self):
		Interface.__init__(self)
	def render(self, request)
		return self.webpage(request, 'FooBar',
		'''
		Hi! This is FooBar. Would you like to go back to my
		<a href="%s">Main Site?</a>
		''' % LinkMe('MySite')
		)

So, we have registerPath() and LinkMe(). I'm sure it won't be
as simple as this, but I do think it should be possible. The main problem
we have is handling multiple instances of MySite. During instantiation of
MySite, when registerPath() is called, some external data source will be 
updated with MySite, the path that it's instantiated to, and some sort of
ID. Then, somehow, when we want to link to this, we use the LinkMe function.
The paramaters will probably need to be the ID and the name of the resource.
With this LinkMe design, Resources of completely unrelated sections of
the site (ie, resources not under MySite) will be able to link to it
without even knowing the path.

I know there are many many holes in this idea (for instance, how will resources
that want to LinkMe get the ID of the resources to be linked to?), but I 
really think something like this is needed. Any thoughts?

-- 
Chris Armstrong   http://twistedmatrix.com/~carmstro     carmstro at dynup.net
There is a 90% chance that this message was written when the author's been
awake longer than he should have. Please disregard any senseless drivel.




From Norbert.Klamann at klamann-software.de  Wed Mar 14 01:49:00 2001
From: Norbert.Klamann at klamann-software.de (Norbert Klamann)
Date: Wed, 14 Mar 2001 09:49:00 +0100
Subject: [Twisted-Python] some demo scripts
Message-ID: <3AAF3E8C.23030.A99C17@localhost>

Hello all,
i started playing with twisted python 0.7.2  and it looks very interesting.
I tried to go along the 'philosophical tutorial to Twisted Python
' and created 4 little python-scripts on the way which initialize and use the 
minimalist telnet- and web-server. They run under windows nt and python 2 but 
should be portable.

Under Windows NT a start of the servers gives an attribute error because 
os.getgid() is nit implemented. I suppressed this message under NT :

line 975 sqq on \twisted\net.py could read :
                except:
                    if os.name == 'nt':
                        pass
                    else :
                        traceback.print_exc(file=sys.stdout)
                        print 'setuid/gid failed'

Enjoy

Norbert Klamann
Norbert Klamann
++
++ Klamann Software & Beratung GmbH
++ Franz-Marc-Str.174
++ D-50374 Erftstadt
++ Tel.: 02235 / 985272 ++ Fax: 02235 / 985273
++ Mobil : 0172 / 2797723
++ PGP Fingerprint :
++ 05CC  4362  E765  51F1  38D9  C43F  D907  B4D8  7873  3454

-------------- next part --------------
from twisted import threadable
threadable.init(0)
from cPickle import load 
selector = load(open('twistd_web.spl'))
from twisted import web
myTest = web.Test()
selector.servers[0].root.putChild('test',myTest)
selector.run()
from cPickle import dump
dump(selector)


-------------- next part --------------
from twisted import threadable
threadable.init(0)
from cPickle import load 
selector = load(open('twistd.spl'))
selector.run()
-------------- next part --------------
from twisted import threadable
threadable.init(0)
from twisted import net
selector = net.Selector()
from twisted import web
server = web.Server(8181, selector)
documentRoot = web.File('.')
server.setRoot(documentRoot)
server.startUp()
from cPickle import dump
dump(selector, open('twistd_web.spl','wb'))
-------------- next part --------------
from twisted import threadable
threadable.init(0)
from twisted import net
selector = net.Selector()
from twisted import telnet
server = telnet.Server(4040, selector)
from cPickle import dump
dump(selector, open('twistd.spl','wb'))

From glyph at twistedmatrix.com  Wed Mar 14 10:11:10 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 14 Mar 2001 11:11:10 -0600 (CST)
Subject: [Twisted-Python] some demo scripts
In-Reply-To: <3AAF3E8C.23030.A99C17@localhost>
Message-ID: <Pine.LNX.4.21.0103141107280.20605-100000@zaibach.twistedmatrix.com>

Hello Norbert,

The scripts you wrote are mostly like the ones found in bin/ --
mkwebserver and mktelnetserver.  Have a look at them; there are a number
of options they offer.  I'm sorry these weren't covered in the tutorial,
but I haven't had that much time to work on documentation.

Thank you much for your interest, though!  Those log messages about setuid
and setgid will be supressed under NT in the future.

On Wed, 14 Mar 2001, Norbert Klamann wrote:

> Hello all,
> i started playing with twisted python 0.7.2  and it looks very interesting.
> I tried to go along the 'philosophical tutorial to Twisted Python
> ' and created 4 little python-scripts on the way which initialize and use the 
> minimalist telnet- and web-server. They run under windows nt and python 2 but 
> should be portable.




                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/






From return at trafficmagnet.net  Sat Mar 17 15:55:42 2001
From: return at trafficmagnet.net (Christine Hall)
Date: Sun, 18 Mar 2001 06:55:42 +0800
Subject: [Twisted-Python] WWW.TWISTEDMATRIX.COM
Message-ID: <200103172255.GAA20474@ns2.trafficmagnet.net>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20010318/c8696d71/attachment-0002.html>

From nick at zork.net  Sun Mar 18 18:14:47 2001
From: nick at zork.net (Nick Moffitt)
Date: Sun, 18 Mar 2001 17:14:47 -0800
Subject: [Twisted-Python] Inform
Message-ID: <20010318171447.D8443@zork.net>

Is there any push to port the inform library over to twisted-python in
its entirety?  It strikes me that the current "ruins" demo is lacking
in many features simply because the library is so spare (for instance,
"get all" is not implemented).

I'm interested in this largely because Inform is non-free software,
and I'd like to get back into writing interactive fiction.  Inform
itself was never more than just a simple bytecode compiler and object
system, while the library was its true benefit.  

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From glyph at twistedmatrix.com  Mon Mar 19 08:28:11 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Mar 2001 09:28:11 -0600 (CST)
Subject: [Twisted-Python] Inform
In-Reply-To: <20010318171447.D8443@zork.net>
Message-ID: <Pine.LNX.4.21.0103190924160.21304-100000@zaibach.twistedmatrix.com>

On Sun, 18 Mar 2001, Nick Moffitt wrote:

> Is there any push to port the inform library over to twisted-python in
> its entirety?  It strikes me that the current "ruins" demo is lacking
> in many features simply because the library is so spare (for instance,
> "get all" is not implemented).

Currently there is no such push, because Inform's library is conceptually
single-player only (this is evidenced by the amount of global state that
it maintains, how the player is treated as a facet of the world rather
than just another object, etc).

However, if you're interested in seeing inform-like functionality
implemented, we'd love to integrate such a thing.  Even better if you can
make it more multi-player aware.

> I'm interested in this largely because Inform is non-free software,
> and I'd like to get back into writing interactive fiction.  Inform
> itself was never more than just a simple bytecode compiler and object
> system, while the library was its true benefit.

We do have plans for a twisted reality standard library, but they are
haphazard at this point.  Look in twisted/library/ for what we've done so
far.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/






From nick at zork.net  Tue Mar 20 01:47:48 2001
From: nick at zork.net (Nick Moffitt)
Date: Tue, 20 Mar 2001 00:47:48 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103190924160.21304-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Mon, Mar 19, 2001 at 09:28:11AM -0600
References: <20010318171447.D8443@zork.net> <Pine.LNX.4.21.0103190924160.21304-100000@zaibach.twistedmatrix.com>
Message-ID: <20010320004747.F5052@zork.net>

begin  Glyph Lefkowitz quotation:
> Currently there is no such push, because Inform's library is
> conceptually single-player only (this is evidenced by the amount of
> global state that it maintains, how the player is treated as a facet
> of the world rather than just another object, etc).

	Ever played with the Floyd stuff?  Some folks set up a MUD
with inform once, and they just removed one line from parserm.h.  
Have a look for multifloyd.h in the informlib contrib section of
if-archive.

	I don't think the player is as "integrated" as you may think.

> However, if you're interested in seeing inform-like functionality
> implemented, we'd love to integrate such a thing.  Even better if
> you can make it more multi-player aware.

	Well, I was just thinking that it would certainly help
adoption if the system behaved a lot like Inform.  I'm thinking mostly
of:

	The way the objects are created, and the way the code flows (I
think that a constructor for a game object should set the name of the
object as well as the parent (location), just the way that the "Object
-> ..." line does in inform).

	The system should use pre- and post-action rules in a
dictionary inside an object.  Perhaps we'd have before and after
dictionaries, with names of actions as keys, and functions as values.

	The parser should just be ported over, or at least enhanced to
the point where it supports everything that the informlib parser does.
The code uses a lot of gotos and is pretty gory, but I think that
could be easily taken care of.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From glyph at twistedmatrix.com  Tue Mar 20 09:07:23 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Mar 2001 10:07:23 -0600 (CST)
Subject: [Twisted-Python] Inform
In-Reply-To: <20010320004747.F5052@zork.net>
Message-ID: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>

On Tue, 20 Mar 2001, Nick Moffitt wrote:

> 	Ever played with the Floyd stuff?  Some folks set up a MUD
> with inform once, and they just removed one line from parserm.h.  
> Have a look for multifloyd.h in the informlib contrib section of
> if-archive.
> 
> 	I don't think the player is as "integrated" as you may think.

No, and that sounds interesting.

> 	Well, I was just thinking that it would certainly help
> adoption if the system behaved a lot like Inform.  I'm thinking mostly
> of:
> 
> 	The way the objects are created, and the way the code flows (I
> think that a constructor for a game object should set the name of the
> object as well as the parent (location), just the way that the "Object
> -> ..." line does in inform).

Why?  This adds complexity and I don't understand how it creates any
value.  Many objects do not have a "parent". Thing("foo")(location=bar)
and Thing("foo",location=bar) seem pretty much equivalent, to me.

> 	The system should use pre- and post-action rules in a
> dictionary inside an object.  Perhaps we'd have before and after
> dictionaries, with names of actions as keys, and functions as values.

I intentionally avoided the pre/post action rules in favor of verbs
because they're harder to make sense of in a "real" programming language;
inform's object system was weak in some ways and I felt that was one of
them.

If you want something similiar you can always use twisted.hook but I think
that for most cases such an idea is inadvisable.  Is there something I'm
missing about the pre/post stuff that adds functionality which is not
available otherwise, or makes something common easy?

> 	The parser should just be ported over, or at least enhanced to
> the point where it supports everything that the informlib parser does.
> The code uses a lot of gotos and is pretty gory, but I think that
> could be easily taken care of.

If you think it's easy, does that mean you volunteer? :)

I do agree that the current parser is in sorry shape; however, making it
inform-style might make the interface (to the parser) more complicated
both for users and developers.  However, to automatically parse 90% of
common verbs into "actions" with a higher-level interface makes sense to
me; I've already started doing something like that in CVS, and there are
emerging conventions about how to represent that.

In the meanwhile, though, patches to make the current parser less heinous,
or emulate Inform style, will be graciously accepted.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/






From nick at zork.net  Tue Mar 20 10:58:00 2001
From: nick at zork.net (Nick Moffitt)
Date: Tue, 20 Mar 2001 09:58:00 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Tue, Mar 20, 2001 at 10:07:23AM -0600
References: <20010320004747.F5052@zork.net> <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>
Message-ID: <20010320095800.J5052@zork.net>

begin  Glyph Lefkowitz quotation:
> Why?  This adds complexity and I don't understand how it creates any
> value.  Many objects do not have a "parent".
> Thing("foo")(location=bar) and Thing("foo",location=bar) seem pretty
> much equivalent, to me.

	very well.

> If you want something similiar you can always use twisted.hook but I
> think that for most cases such an idea is inadvisable.  Is there
> something I'm missing about the pre/post stuff that adds
> functionality which is not available otherwise, or makes something
> common easy?

	Aha, I had not seen the hooks yet.

> I do agree that the current parser is in sorry shape; however,
> making it inform-style might make the interface (to the parser) more
> complicated both for users and developers.  

	Hmmm.  Being able to handle more sentence forms would be nice,
though.

> However, to automatically parse 90% of common verbs into "actions"
> with a higher-level interface makes sense to me; I've already
> started doing something like that in CVS, and there are emerging
> conventions about how to represent that.

	Right.  That's mostly what I was thinking of, and of course
having default functions take place for the "Category 1 and 2" actions
from the inform manual.  If you're on this, then I suppose all is well
and twisted.

	I'm mostly playing with the ruins demo, and trying to figure
out where it fails.  Being able to take scenery, and the mushroom's
picking actions not working seem like big ones at the moment.  I
realize that the ruins demo is probably not a priority, but I'd like
to see all of the sample games (alice, ruins, etc) re-implemented as a
proof of concept.

	If anything needs my volunteering, then I guess it wuold be
polishing up the samples.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From nick at zork.net  Tue Mar 20 11:13:53 2001
From: nick at zork.net (Nick Moffitt)
Date: Tue, 20 Mar 2001 10:13:53 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Tue, Mar 20, 2001 at 10:07:23AM -0600
References: <20010320004747.F5052@zork.net> <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>
Message-ID: <20010320101353.L5052@zork.net>

begin  Glyph Lefkowitz quotation:
> However, to automatically parse 90% of common verbs into "actions"
> with a higher-level interface makes sense to me; I've already
> started doing something like that in CVS, and there are emerging
> conventions about how to represent that.

For reference:

ftp://ftp.gmd.de/if-archive/infocom/compilers/inform6/library/contributions/Verbs.htm

That's got a pretty good list of actions, their associated verbs, and
the format of objects and predicates.  There are some errors, but it's
got a pretty good list.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From nick at zork.net  Sat Mar 24 11:37:18 2001
From: nick at zork.net (Nick Moffitt)
Date: Sat, 24 Mar 2001 10:37:18 -0800
Subject: [Twisted-Python] Inform
In-Reply-To: <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>; from glyph@twistedmatrix.com on Tue, Mar 20, 2001 at 10:07:23AM -0600
References: <20010320004747.F5052@zork.net> <Pine.LNX.4.21.0103200958130.27734-100000@zaibach.twistedmatrix.com>
Message-ID: <20010324103718.W5052@zork.net>

begin  Glyph Lefkowitz quotation:
> I intentionally avoided the pre/post action rules in favor of verbs
> because they're harder to make sense of in a "real" programming
> language; inform's object system was weak in some ways and I felt
> that was one of them.

	Right, I see now.  You'd much rather just have the verbs
implemented in the abstract class direct object, and overload them as
necessary.  Yeah, using a real object system can help.

-- 
You are not entitled to your opinions.
 
	01234567 <- The amazing indent-o-meter!
        ^	    Matt McIrvin: the Nikola Tesla of tab damage.




From glyph at twistedmatrix.com  Mon Mar 26 16:13:39 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Mar 2001 17:13:39 -0600 (CST)
Subject: [Twisted-Python] ANNOUNCE: TwistedPython 0.8.0a released
Message-ID: <Pine.LNX.4.21.0103261711150.19418-100000@zaibach.twistedmatrix.com>

0.8.0a is a feature enhancement release focusing on twisted reality.  
Numerous bugfixes and more documentation are sprinkled throughout the
codebase, however, so download and enjoy!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://www.twistedmatrix.com/~glyph/





